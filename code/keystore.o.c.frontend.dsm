;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:06:03
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: _ZN9CKeyStore6AddKeyERK4CKey at 0x0 -- 0x3
0x0:        83 ec 7c                           	sub esp, 0x7c
; data inside code section at 0x3 -- 0x8
0x3:        89 5c 24 6c 8b                                     |.\$l.           |
; function: function_8 at 0x8 -- 0x9
; data inside code section at 0x9 -- 0x10
0x9:        24 80 00 00 00 65 a1                               |$....e.         |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0x10 -- 0x11
; data inside code section at 0x11 -- 0x34
0x11:       00 00 00 89 44 24 5c 31  c0 89 74 24 70 8b b4 24   |....D$\1..t$p..$|
0x21:       84 00 00 00 89 7c 24 74  8d 7c 24 1b 8b 03 89 6c   |.....|$t.|$....l|
0x31:       24 78 8b                                           |$x.             |
; function: ~pthread_mutex_scoped_lock at 0x34 -- 0x35
; data inside code section at 0x35 -- 0x3e
0x35:       08 89 74 24 04 89 3c 24  e8                        |..t$..<$.       |
; dynamically linked function: _ZNK4CKey9GetPubKeyEv at 0x3e -- 0x3f
; data inside code section at 0x3f -- 0x80
0x3f:       ff ff ff 83 ec 04 89 7c  24 08 89 74 24 04 89 1c   |.......|$..t$...|
0x4f:       24 ff d5 8b 54 24 5c 65  33 15 14 00 00 00 75 14   |$...T$\e3.....u.|
0x5f:       8b 5c 24 6c 8b 74 24 70  8b 7c 24 74 8b 6c 24 78   |.\$l.t$p.|$t.l$x|
0x6f:       83 c4 7c c3 e8 fc ff ff  ff 90 8d b4 26 00 00 00   |..|.........&...|
0x7f:       00                                                 |.               |
; function: visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_> at 0x80 -- 0x83
0x80:       83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x83 -- 0xaf
0x83:       65 a1 14 00 00 00 89 44  24 1c 31 c0 c7            |e......D$.1..   |
0x90:       44 24 0c 20 6d 00                                  |D$. m.          |   "D$\f m"
0x96:       00 c7 44 24 08 b6 00 00  00 c7 44 24 04 90 33 00   |..D$......D$..3.|
0xa6:       00 c7 04                                           |...             |
0xa9:       24 0b 24 00                                        |$.$.            |   "$\v$"
0xad:       00 e8                                              |..              |
; dynamically linked function: __assert_fail at 0xaf -- 0xb0
; data inside code section at 0xb0 -- 0xc0
0xb0:       ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::copy_into, const void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_> at 0xc0 -- 0xcf
0xc0:       83 ec 2c                           	sub esp, 0x2c
0xc3:       65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc9:       89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xcd:       31 c0                              	xor eax, eax
; data inside code section at 0xcf -- 0xd0
0xcf:       c7                                                 |.               |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv at 0xd0 -- 0xee
0xd0:       44                                 	inc esp
0xd1:       24 0c                              	and al, 0xc
0xd3:       60                                 	pushal 
0xd4:       71 00                              	jno 0xd6 <_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv+0x6>
0xd6:       00 c7                              	add bh, al
0xd8:       44                                 	inc esp
0xd9:       24 08                              	and al, 8
0xdb:       b6 00                              	mov dh, 0
0xdd:       00 00                              	add byte ptr [eax], al
0xdf:       c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xe7:       c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xee -- 0xef
0xee:       e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xef -- 0xf0
; data inside code section at 0xf0 -- 0x100
0xf0:       ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_> at 0x100 -- 0x103
0x100:      83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x103 -- 0x104
0x103:      65                                                 |e               |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSB_EEEEENS1_5mutexEEEEptEv at 0x104 -- 0x105
; data inside code section at 0x105 -- 0x12f
0x105:      14 00 00 00 89 44 24 1c  31 c0 c7 44 24 0c 00 66   |.....D$.1..D$..f|
0x115:      00 00 c7 44 24 08 b6 00  00 00 c7 44 24 04 90 33   |...D$......D$..3|
0x125:      00 00 c7 04 24 0b 24 00  00 e8                     |....$.$...      |
; dynamically linked function: __assert_fail at 0x12f -- 0x130
; data inside code section at 0x130 -- 0x138
0x130:      ff ff ff 8d b6 00 00 00                            |........        |
; function: _ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv at 0x138 -- 0x140
0x138:      00 8d bc 27 00 00                  	add byte ptr [ebp + 0x27bc], cl
0x13e:      00 00                              	add byte ptr [eax], al
; function: visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_> at 0x140 -- 0x16e
0x140:      83 ec 2c                           	sub esp, 0x2c
0x143:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x149:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x14d:      31 c0                              	xor eax, eax
0x14f:      c7 44 24 0c 40 5d 00 00            	mov dword ptr [esp + 0xc], 0x5d40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, boost::detail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VoidPtrCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool]"
0x157:      c7 44 24 08 b6 00 00 00            	mov dword ptr [esp + 8], 0xb6
0x15f:      c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x167:      c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0x16e -- 0x16f
0x16e:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x16f -- 0x170
; data inside code section at 0x170 -- 0x180
0x170:      ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE at 0x180 -- 0x19e
0x180:      56                                 	push esi
0x181:      53                                 	push ebx
0x182:      83 ec 34                           	sub esp, 0x34
0x185:      65 8b 1d 14 00 00 00               	mov ebx, dword ptr gs:[0x14]
0x18c:      89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x190:      31 db                              	xor ebx, ebx
0x192:      85 c9                              	test ecx, ecx
0x194:      0f 84 10 01 00 00                  	je 0x2aa <function_2aa>
0x19a:      8b 12                              	mov edx, dword ptr [edx]
0x19c:      8b 18                              	mov ebx, dword ptr [eax]
; data inside code section at 0x19e -- 0x1a0
0x19e:      8d 04                                              |..              |
; function: ~auto_buffer at 0x1a0 -- 0x1d1
0x1a0:      49                                 	dec ecx
0x1a1:      c1 e0 02                           	shl eax, 2
0x1a4:      8d 54 52 fd                        	lea edx, [edx + edx*2 - 3]
0x1a8:      8d 14 93                           	lea edx, [ebx + edx*4]
0x1ab:      89 d3                              	mov ebx, edx
0x1ad:      29 c3                              	sub ebx, eax
0x1af:      39 da                              	cmp edx, ebx
0x1b1:      76 65                              	jbe 0x218
0x1b3:      8b 0a                              	mov ecx, dword ptr [edx]
0x1b5:      89 c8                              	mov eax, ecx
0x1b7:      c1 f8 1f                           	sar eax, 0x1f
0x1ba:      31 c8                              	xor eax, ecx
0x1bc:      83 f8 13                           	cmp eax, 0x13
0x1bf:      76 6f                              	jbe 0x230
0x1c1:      c7 44 24 0c e0 63 00 00            	mov dword ptr [esp + 0xc], 0x63e0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x1c9:      c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
; data inside code section at 0x1d1 -- 0x1d4
0x1d1:      c7 44 24                                           |.D$             |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_ at 0x1d4 -- 0x1e1
0x1d4:      04 90                              	add al, 0x90 ; "D$\f m"
0x1d6:      33 00                              	xor eax, dword ptr [eax]
0x1d8:      00 c7                              	add bh, al
0x1da:      04 24                              	add al, 0x24
0x1dc:      0b 24 00                           	or esp, dword ptr [eax + eax]
0x1df:      00 e8                              	add al, ch
; dynamically linked function: __assert_fail at 0x1e1 -- 0x1e2
; data inside code section at 0x1e2 -- 0x206
0x1e2:      ff ff ff 8d 76 00 85 c9  79 74 8b 72 04 85 f6 74   |....v...yt.r...t|
0x1f2:      1b 8d 46 04 89 54 24 1c  89 04 24 e8 ce 42 00 00   |..F..T$...$..B..|
0x202:      89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZdlPv at 0x206 -- 0x207
; data inside code section at 0x207 -- 0x208
0x207:      ff                                                 |.               |
; function: _ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_ at 0x208 -- 0x237
; data inside code section at 0x237 -- 0x239
0x237:      90 e8                                              |..              |
; function: function_239 at 0x239 -- 0x23a
0x239:      c3                                 	ret 
; data inside code section at 0x23a -- 0x23c
0x23a:      fe ff                                              |..              |
; function: _ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_ at 0x23c -- 0x29c
0x23c:      ff 8d 76 00 85 c9                  	dec dword ptr [ebp - 0x367aff8a]
0x242:      78 34                              	js 0x278 <_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_+0x3c>
0x244:      8b 42 04                           	mov eax, dword ptr [edx + 4]
0x247:      85 c0                              	test eax, eax
0x249:      74 c3                              	je 0x20e
0x24b:      8b 08                              	mov ecx, dword ptr [eax]
0x24d:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x251:      89 04 24                           	mov dword ptr [esp], eax
0x254:      ff 51 04                           	call dword ptr [ecx + 4]
0x257:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x25b:      eb b1                              	jmp 0x20e
; data inside code section at 0x25d -- 0x260
0x25d:      8d 76 00                                           |.v.             |
0x260:      8d 42 08                           	lea eax, [edx + 8]
0x263:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x267:      89 04 24                           	mov dword ptr [esp], eax
0x26a:      e8 61 42 00 00                     	call 0x44d0 <_ZN5boost6detail12shared_countD1Ev>
0x26f:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x273:      eb 99                              	jmp 0x20e
; data inside code section at 0x275 -- 0x278
0x275:      8d 76 00                                           |.v.             |
0x278:      8b 72 04                           	mov esi, dword ptr [edx + 4]
0x27b:      85 f6                              	test esi, esi
0x27d:      74 8f                              	je 0x20e
0x27f:      8b 06                              	mov eax, dword ptr [esi]
0x281:      85 c0                              	test eax, eax
0x283:      74 10                              	je 0x295 <_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_+0x59>
0x285:      8b 08                              	mov ecx, dword ptr [eax]
0x287:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x28b:      89 04 24                           	mov dword ptr [esp], eax
0x28e:      ff 51 04                           	call dword ptr [ecx + 4]
0x291:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x295:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x299:      89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x29c -- 0x29d
0x29c:      e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x29d -- 0x29e
; data inside code section at 0x29e -- 0x2a1
0x29e:      ff ff ff                                           |...             |
; function: function_2a1 at 0x2a1 -- 0x2aa
0x2a1:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2a5:      e9 64 ff ff ff                     	jmp 0x20e
; function: function_2aa at 0x2aa -- 0x2c9
0x2aa:      c7 44 24 0c a0 67 00 00            	mov dword ptr [esp + 0xc], 0x67a0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::destroy_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type, const false_type&) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]"
0x2b2:      c7 44 24 08 fe 00 00 00            	mov dword ptr [esp + 8], 0xfe
0x2ba:      c7 44 24 04 c8 33 00 00            	mov dword ptr [esp + 4], 0x33c8 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x2c2:      c7 04 24 3e 24 00 00               	mov dword ptr [esp], 0x243e ; "n > 0"
; data inside code section at 0x2c9 -- 0x2ca
0x2c9:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2ca -- 0x2cb
; data inside code section at 0x2cb -- 0x2ce
0x2cb:      ff ff ff                                           |...             |
; function: function_2ce at 0x2ce -- 0x2e0
0x2ce:      e8 fc ff ff ff                     	call 0x2cf
0x2d3:      90                                 	nop 
0x2d4:      8d b6 00 00 00 00                  	lea esi, [esi]
0x2da:      8d bf 00 00 00 00                  	lea edi, [edi]
; function: _ZNSt12_Vector_baseIh16secure_allocatorIhEE13_M_deallocateEPhj at 0x2e0 -- 0x313
0x2e0:      83 ec 2c                           	sub esp, 0x2c
0x2e3:      89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x2e7:      89 c3                              	mov ebx, eax
0x2e9:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2ef:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2f3:      31 c0                              	xor eax, eax
0x2f5:      85 db                              	test ebx, ebx
0x2f7:      89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x2fb:      89 d6                              	mov esi, edx
0x2fd:      74 28                              	je 0x327 <function_327>
0x2ff:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x303:      89 1c 24                           	mov dword ptr [esp], ebx
0x306:      e8 fc ff ff ff                     	call 0x307
0x30b:      89 74 24 08                        	mov dword ptr [esp + 8], esi
0x30f:      89 5c 24 04                        	mov dword ptr [esp + 4], ebx
; data inside code section at 0x313 -- 0x316
0x313:      c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x316 -- 0x322
; data inside code section at 0x322 -- 0x323
0x322:      e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x323 -- 0x324
; data inside code section at 0x324 -- 0x327
0x324:      ff ff ff                                           |...             |
; function: function_327 at 0x327 -- 0x340
0x327:      8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x32b:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x332:      75 0c                              	jne 0x340 <function_327+0x18>
0x334:      8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x338:      8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x33c:      83 c4 2c                           	add esp, 0x2c
0x33f:      c3                                 	ret 
; data inside code section at 0x340 -- 0x341
0x340:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x341 -- 0x342
; data inside code section at 0x342 -- 0x350
0x342:      ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN15CCryptoKeyStore10SetCryptedEv at 0x350 -- 0x3ee
0x350:      83 ec 3c                           	sub esp, 0x3c
0x353:      89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x357:      8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x35b:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x361:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x365:      31 c0                              	xor eax, eax
0x367:      89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x36b:      8d 74 24 24                        	lea esi, [esp + 0x24]
0x36f:      89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x373:      bf 01 00 00 00                     	mov edi, 1
0x378:      8d 43 04                           	lea eax, [ebx + 4]
0x37b:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x383:      c7 44 24 10 38 00 00 00            	mov dword ptr [esp + 0x10], 0x38
0x38b:      c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x393:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x39b:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x39f:      89 34 24                           	mov dword ptr [esp], esi
0x3a2:      e8 19 96 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x3a7:      80 bb ac 00 00 00 00               	cmp byte ptr [ebx + 0xac], 0
0x3ae:      75 09                              	jne 0x3b9 <_ZN15CCryptoKeyStore10SetCryptedEv+0x69>
0x3b0:      8b 43 6c                           	mov eax, dword ptr [ebx + 0x6c]
0x3b3:      31 ff                              	xor edi, edi
0x3b5:      85 c0                              	test eax, eax
0x3b7:      74 27                              	je 0x3e0 <_ZN15CCryptoKeyStore10SetCryptedEv+0x90>
0x3b9:      89 34 24                           	mov dword ptr [esp], esi
0x3bc:      e8 2f 8c 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x3c1:      89 f8                              	mov eax, edi
0x3c3:      8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x3c7:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3ce:      75 1e                              	jne 0x3ee <_ZN15CCryptoKeyStore10SetCryptedEv+0x9c>
0x3d0:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3d4:      8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x3d8:      8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x3dc:      83 c4 3c                           	add esp, 0x3c
0x3df:      c3                                 	ret 
0x3e0:      c6 83 ac 00 00 00 01               	mov byte ptr [ebx + 0xac], 1
0x3e7:      bf 01 00 00 00                     	mov edi, 1
0x3ec:      eb cb                              	jmp 0x3b9 <_ZN15CCryptoKeyStore10SetCryptedEv+0x69>
; data inside code section at 0x3ee -- 0x3ef
0x3ee:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3ef -- 0x3f0
; data inside code section at 0x3f0 -- 0x400
0x3f0:      ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK14CBasicKeyStore10GetCScriptERK9CScriptIDR7CScript at 0x400 -- 0x4cc
0x400:      83 ec 5c                           	sub esp, 0x5c
0x403:      89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x407:      8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x40b:      89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x40f:      8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x413:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x419:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x41d:      31 c0                              	xor eax, eax
0x41f:      89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x423:      8d 5c 24 34                        	lea ebx, [esp + 0x34]
0x427:      8d 46 04                           	lea eax, [esi + 4]
0x42a:      89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x42e:      8b 7c 24 68                        	mov edi, dword ptr [esp + 0x68]
0x432:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x436:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x43e:      c7 44 24 10 2c 00 00 00            	mov dword ptr [esp + 0x10], 0x2c
0x446:      c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x44e:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x456:      89 1c 24                           	mov dword ptr [esp], ebx
0x459:      e8 62 95 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x45e:      8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x462:      8d 56 70                           	lea edx, [esi + 0x70]
0x465:      83 c6 74                           	add esi, 0x74
0x468:      89 04 24                           	mov dword ptr [esp], eax
0x46b:      89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x46f:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x473:      e8 a8 92 00 00                     	call 0x9720 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_>
0x478:      83 ec 04                           	sub esp, 4
0x47b:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x47f:      39 f0                              	cmp eax, esi
0x481:      74 45                              	je 0x4c8 <_ZNK14CBasicKeyStore10GetCScriptERK9CScriptIDR7CScript+0xc8>
0x483:      83 c0 24                           	add eax, 0x24
0x486:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x48a:      89 3c 24                           	mov dword ptr [esp], edi
0x48d:      e8 9e 83 00 00                     	call 0x8830 <_ZNSt6vectorIhSaIhEEaSERKS1_>
0x492:      be 01 00 00 00                     	mov esi, 1
0x497:      89 1c 24                           	mov dword ptr [esp], ebx
0x49a:      e8 51 8b 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x49f:      89 f0                              	mov eax, esi
0x4a1:      8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x4a5:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4ac:      75 1e                              	jne 0x4cc <_ZNK14CBasicKeyStore10GetCScriptERK9CScriptIDR7CScript+0xca>
0x4ae:      8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x4b2:      8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x4b6:      8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x4ba:      8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x4be:      83 c4 5c                           	add esp, 0x5c
0x4c1:      c3                                 	ret 
; data inside code section at 0x4c2 -- 0x4c8
0x4c2:      8d b6 00 00 00 00                                  |......          |
0x4c8:      31 f6                              	xor esi, esi
0x4ca:      eb cb                              	jmp 0x497 <_ZNK14CBasicKeyStore10GetCScriptERK9CScriptIDR7CScript+0x97>
; data inside code section at 0x4cc -- 0x4cd
0x4cc:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4cd -- 0x4ce
; data inside code section at 0x4ce -- 0x4df
0x4ce:      ff ff ff 89 c6 89 1c 24  e8 15 8b 00 00 89 34 24   |.......$......4$|
0x4de:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x4df -- 0x4e0
; data inside code section at 0x4e0 -- 0x4f0
0x4e0:      ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK14CBasicKeyStore11HaveCScriptERK9CScriptID at 0x4f0 -- 0x591
0x4f0:      83 ec 4c                           	sub esp, 0x4c
0x4f3:      89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x4f7:      8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x4fb:      89 7c 24 48                        	mov dword ptr [esp + 0x48], edi
0x4ff:      8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x503:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x509:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x50d:      31 c0                              	xor eax, eax
0x50f:      89 74 24 44                        	mov dword ptr [esp + 0x44], esi
0x513:      8d 74 24 34                        	lea esi, [esp + 0x34]
0x517:      8d 43 04                           	lea eax, [ebx + 4]
0x51a:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x51e:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x526:      c7 44 24 10 26 00 00 00            	mov dword ptr [esp + 0x10], 0x26
0x52e:      c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x536:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x53e:      89 34 24                           	mov dword ptr [esp], esi
0x541:      e8 7a 94 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x546:      8d 53 70                           	lea edx, [ebx + 0x70]
0x549:      83 c3 74                           	add ebx, 0x74
0x54c:      8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x550:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x554:      89 04 24                           	mov dword ptr [esp], eax
0x557:      89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x55b:      e8 c0 91 00 00                     	call 0x9720 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_>
0x560:      83 ec 04                           	sub esp, 4
0x563:      3b 5c 24 2c                        	cmp ebx, dword ptr [esp + 0x2c]
0x567:      89 34 24                           	mov dword ptr [esp], esi
0x56a:      0f 95 c3                           	setne bl
0x56d:      e8 7e 8a 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x572:      89 d8                              	mov eax, ebx
0x574:      8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x578:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x57f:      75 10                              	jne 0x591 <_ZNK14CBasicKeyStore11HaveCScriptERK9CScriptID+0xa0>
0x581:      8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x585:      8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x589:      8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x58d:      83 c4 4c                           	add esp, 0x4c
0x590:      c3                                 	ret 
; data inside code section at 0x591 -- 0x592
0x591:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x592 -- 0x593
; data inside code section at 0x593 -- 0x5a0
0x593:      ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK15CCryptoKeyStore6GetKeyERK6CKeyIDR4CKey at 0x5a0 -- 0x7db
0x5a0:      55                                 	push ebp
0x5a1:      57                                 	push edi
0x5a2:      56                                 	push esi
0x5a3:      53                                 	push ebx
0x5a4:      81 ec ac 00 00 00                  	sub esp, 0xac
0x5aa:      8b 9c 24 c0 00 00 00               	mov ebx, dword ptr [esp + 0xc0]
0x5b1:      8d 7c 24 4c                        	lea edi, [esp + 0x4c]
0x5b5:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5bb:      89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x5c2:      31 c0                              	xor eax, eax
0x5c4:      8b ac 24 c4 00 00 00               	mov ebp, dword ptr [esp + 0xc4]
0x5cb:      8b b4 24 c8 00 00 00               	mov esi, dword ptr [esp + 0xc8]
0x5d2:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x5da:      8d 43 04                           	lea eax, [ebx + 4]
0x5dd:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5e1:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x5e5:      c7 44 24 10 91 00 00 00            	mov dword ptr [esp + 0x10], 0x91 ; "$\f m"
0x5ed:      c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x5f5:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x5fd:      89 3c 24                           	mov dword ptr [esp], edi
0x600:      e8 bb 93 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x605:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x609:      80 bb ac 00 00 00 00               	cmp byte ptr [ebx + 0xac], 0
0x610:      0f 85 d2 00 00 00                  	jne 0x6e8 <_ZNK15CCryptoKeyStore6GetKeyERK6CKeyIDR4CKey+0x148>
0x616:      8d 54 24 54                        	lea edx, [esp + 0x54]
0x61a:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x622:      c7 44 24 10 4c 00 00 00            	mov dword ptr [esp + 0x10], 0x4c
0x62a:      c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0x632:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x63a:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x63e:      89 14 24                           	mov dword ptr [esp], edx
0x641:      e8 7a 93 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x646:      8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x64a:      8d 53 58                           	lea edx, [ebx + 0x58]
0x64d:      83 c3 5c                           	add ebx, 0x5c
0x650:      89 04 24                           	mov dword ptr [esp], eax
0x653:      89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x657:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x65b:      e8 40 8a 00 00                     	call 0x90a0 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_>
0x660:      83 ec 04                           	sub esp, 4
0x663:      8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x667:      39 d8                              	cmp eax, ebx
0x669:      0f 84 69 02 00 00                  	je 0x8d8 <function_8d8>
0x66f:      8b 50 24                           	mov edx, dword ptr [eax + 0x24]
0x672:      89 16                              	mov dword ptr [esi], edx
0x674:      8b 50 28                           	mov edx, dword ptr [eax + 0x28]
0x677:      89 56 04                           	mov dword ptr [esi + 4], edx
0x67a:      8b 50 2c                           	mov edx, dword ptr [eax + 0x2c]
0x67d:      89 56 08                           	mov dword ptr [esi + 8], edx
0x680:      8b 50 30                           	mov edx, dword ptr [eax + 0x30]
0x683:      89 56 0c                           	mov dword ptr [esi + 0xc], edx
0x686:      8b 50 34                           	mov edx, dword ptr [eax + 0x34]
0x689:      89 56 10                           	mov dword ptr [esi + 0x10], edx
0x68c:      8b 50 38                           	mov edx, dword ptr [eax + 0x38]
0x68f:      89 56 14                           	mov dword ptr [esi + 0x14], edx
0x692:      8b 50 3c                           	mov edx, dword ptr [eax + 0x3c]
0x695:      89 56 18                           	mov dword ptr [esi + 0x18], edx
0x698:      8b 50 40                           	mov edx, dword ptr [eax + 0x40]
0x69b:      89 56 1c                           	mov dword ptr [esi + 0x1c], edx
0x69e:      0f b7 40 44                        	movzx eax, word ptr [eax + 0x44]
0x6a2:      66 89 46 20                        	mov word ptr [esi + 0x20], ax
0x6a6:      8d 44 24 54                        	lea eax, [esp + 0x54]
0x6aa:      89 04 24                           	mov dword ptr [esp], eax
0x6ad:      e8 3e 89 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x6b2:      c6 44 24 33 01                     	mov byte ptr [esp + 0x33], 1
0x6b7:      89 3c 24                           	mov dword ptr [esp], edi
0x6ba:      e8 31 89 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x6bf:      8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0x6c6:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x6cd:      0f b6 44 24 33                     	movzx eax, byte ptr [esp + 0x33]
0x6d2:      0f 85 b0 02 00 00                  	jne 0x988 <function_988>
0x6d8:      81 c4 ac 00 00 00                  	add esp, 0xac
0x6de:      5b                                 	pop ebx
0x6df:      5e                                 	pop esi
0x6e0:      5f                                 	pop edi
0x6e1:      5d                                 	pop ebp
0x6e2:      c3                                 	ret 
; data inside code section at 0x6e3 -- 0x6e8
0x6e3:      90 8d 74 26 00                                     |..t&.           |
0x6e8:      8d 44 24 38                        	lea eax, [esp + 0x38]
0x6ec:      8d 93 88 00 00 00                  	lea edx, [ebx + 0x88]
0x6f2:      89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x6f6:      89 04 24                           	mov dword ptr [esp], eax
0x6f9:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x6fd:      e8 3e 8d 00 00                     	call 0x9440 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_>
0x702:      8d 83 8c 00 00 00                  	lea eax, [ebx + 0x8c]
0x708:      83 ec 04                           	sub esp, 4
0x70b:      8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x70f:      39 c5                              	cmp ebp, eax
0x711:      0f 84 d9 01 00 00                  	je 0x8f0 <function_8f0>
0x717:      0f b6 45 24                        	movzx eax, byte ptr [ebp + 0x24]
0x71b:      b9 21 00 00 00                     	mov ecx, 0x21
0x720:      c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x728:      c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x730:      c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x738:      8d 50 fe                           	lea edx, [eax - 2]
0x73b:      80 fa 01                           	cmp dl, 1
0x73e:      76 1c                              	jbe 0x75c <_ZNK15CCryptoKeyStore6GetKeyERK6CKeyIDR4CKey+0x1bc>
0x740:      3c 06                              	cmp al, 6
0x742:      0f 84 80 01 00 00                  	je 0x8c8 <function_8c8>
0x748:      3c 04                              	cmp al, 4
0x74a:      0f 84 78 01 00 00                  	je 0x8c8 <function_8c8>
0x750:      3c 07                              	cmp al, 7
0x752:      b1 41                              	mov cl, 0x41
0x754:      b8 00 00 00 00                     	mov eax, 0
0x759:      0f 45 c8                           	cmovne ecx, eax
0x75c:      8d 45 24                           	lea eax, [ebp + 0x24]
0x75f:      01 c1                              	add ecx, eax
0x761:      89 ca                              	mov edx, ecx
0x763:      29 c2                              	sub edx, eax
0x765:      39 c1                              	cmp ecx, eax
0x767:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x76b:      ba 3c f2 00 00                     	mov edx, 0xf23c
0x770:      0f 45 d0                           	cmovne edx, eax
0x773:      89 14 24                           	mov dword ptr [esp], edx
0x776:      8d 44 24 7c                        	lea eax, [esp + 0x7c]
0x77a:      8d 54 24 40                        	lea edx, [esp + 0x40]
0x77e:      c7 44 24 7c 00 00 00 00            	mov dword ptr [esp + 0x7c], 0
0x786:      c7 84 24 80 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x80], 0
0x791:      c7 84 24 84 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x84], 0
0x79c:      c7 84 24 88 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x88], 0
0x7a7:      c7 84 24 8c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x8c], 0
0x7b2:      c7 84 24 90 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x90], 0
0x7bd:      c7 84 24 94 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x94], 0
0x7c8:      c7 84 24 98 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x98], 0
0x7d3:      89 44 24 08                        	mov dword ptr [esp + 8], eax
0x7d7:      89 54 24 34                        	mov dword ptr [esp + 0x34], edx
; data inside code section at 0x7db -- 0x7dc
0x7db:      e8                                                 |.               |
; dynamically linked function: SHA256 at 0x7dc -- 0x7dd
; data inside code section at 0x7dd -- 0x840
0x7dd:      ff ff ff 8d 44 24 5c 89  44 24 08 8d 54 24 7c 8d   |....D$\.D$..T$|.|
0x7ed:      44 24 40 c7 44 24 5c 00  00 00 00 c7 44 24 60 00   |D$@.D$\.....D$`.|
0x7fd:      00 00 00 c7 44 24 64 00  00 00 00 c7 44 24 68 00   |....D$d.....D$h.|
0x80d:      00 00 00 c7 44 24 6c 00  00 00 00 c7 44 24 70 00   |....D$l.....D$p.|
0x81d:      00 00 00 c7 44 24 74 00  00 00 00 c7 44 24 78 00   |....D$t.....D$x.|
0x82d:      00 00 00 c7 44 24 04 20  00 00 00 89 14 24 89 44   |....D$. .....$.D|
0x83d:      24 34 e8                                           |$4.             |
; dynamically linked function: SHA256 at 0x840 -- 0x841
; data inside code section at 0x841 -- 0x843
0x841:      ff ff                                              |..              |
; function: function_843 at 0x843 -- 0x84a
0x843:      ff 8d 44 24 5c 81                  	dec dword ptr [ebp - 0x7ea3dbbc]
0x849:      c3                                 	ret 
; data inside code section at 0x84a -- 0x869
0x84a:      a0 00 00 00 8d 54 24 40  89 44 24 08 8d 45 68 89   |.....T$@.D$..Eh.|
0x85a:      54 24 34 89 54 24 0c 89  44 24 04 89 1c 24 e8      |T$4.T$..D$...$. |
; dynamically linked function: _Z13DecryptSecretRKSt6vectorIh16secure_allocatorIhEERKS_IhSaIhEERK7uint256RS2_ at 0x869 -- 0x86a
; data inside code section at 0x86a -- 0x88d
0x86a:      ff ff ff 84 c0 8b 5c 24  40 0f 84 8f 00 00 00 8b   |......\$@.......|
0x87a:      44 24 44 c6 44 24 33 00  29 d8 83 f8 20 0f 84 8b   |D$D.D$3.)... ...|
0x88a:      00 00 00                                           |...             |
; function: function_88d at 0x88d -- 0x88e
; data inside code section at 0x88e -- 0x898
0x88e:      db 8b 74 24 48 0f 84 1e  fe ff                     |..t$H.....      |
; function: function_898 at 0x898 -- 0x89a
0x898:      ff 29                              	ljmp [ecx]
; data inside code section at 0x89a -- 0x8a3
0x89a:      de 89 74 24 04 89 1c 24  e8                        |..t$...$.       |
; dynamically linked function: OPENSSL_cleanse at 0x8a3 -- 0x8a4
; data inside code section at 0x8a4 -- 0x8b2
0x8a4:      ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x8b2 -- 0x8be
; data inside code section at 0x8be -- 0x8bf
0x8be:      e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x8bf -- 0x8c0
; data inside code section at 0x8c0 -- 0x8c3
0x8c0:      ff ff ff                                           |...             |
; function: function_8c3 at 0x8c3 -- 0x8c8
0x8c3:      e9 ef fd ff ff                     	jmp 0x6b7
; function: function_8c8 at 0x8c8 -- 0x8d2
0x8c8:      b9 41 00 00 00                     	mov ecx, 0x41
0x8cd:      e9 8a fe ff ff                     	jmp 0x75c
; data inside code section at 0x8d2 -- 0x8d8
0x8d2:      8d b6 00 00 00 00                                  |......          |
; function: function_8d8 at 0x8d8 -- 0x8ee
0x8d8:      8d 54 24 54                        	lea edx, [esp + 0x54]
0x8dc:      89 14 24                           	mov dword ptr [esp], edx
0x8df:      e8 0c 87 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x8e4:      c6 44 24 33 00                     	mov byte ptr [esp + 0x33], 0
0x8e9:      e9 c9 fd ff ff                     	jmp 0x6b7
; data inside code section at 0x8ee -- 0x8f0
0x8ee:      66 90                                              |f.              |
; function: function_8f0 at 0x8f0 -- 0x902
0x8f0:      89 3c 24                           	mov dword ptr [esp], edi
0x8f3:      e8 f8 86 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x8f8:      c6 44 24 33 00                     	mov byte ptr [esp + 0x33], 0
0x8fd:      e9 bd fd ff ff                     	jmp 0x6bf
; data inside code section at 0x902 -- 0x908
0x902:      8d b6 00 00 00 00                                  |......          |
; function: function_908 at 0x908 -- 0x912
0x908:      c6 44 24 33 00                     	mov byte ptr [esp + 0x33], 0
0x90d:      e9 7b ff ff ff                     	jmp 0x88d <function_88d>
; data inside code section at 0x912 -- 0x91e
0x912:      8d b6 00 00 00 00 0f b6  45 24 89 1c               |........E$..    |
; function: function_91e at 0x91e -- 0x929
0x91e:      24 83                              	and al, 0x83
0x920:      e8 02 3c 01 0f                     	call 0xf014527 <unknown_f014527>
0x925:      96                                 	xchg eax, esi
0x926:      c2 89 d5                           	ret 0xd589
; data inside code section at 0x929 -- 0x92a
0x929:      e8                                                 |.               |
; dynamically linked function: _ZN4CKey5CheckEPKh at 0x92a -- 0x92b
; data inside code section at 0x92b -- 0x92e
0x92b:      ff ff ff                                           |...             |
; function: function_92e at 0x92e -- 0x988
0x92e:      84 c0                              	test al, al
0x930:      75 11                              	jne 0x943 <function_92e+0x15>
0x932:      c6 06 00                           	mov byte ptr [esi], 0
0x935:      8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x939:      c6 44 24 33 01                     	mov byte ptr [esp + 0x33], 1
0x93e:      e9 4a ff ff ff                     	jmp 0x88d <function_88d>
0x943:      8b 13                              	mov edx, dword ptr [ebx]
0x945:      89 e8                              	mov eax, ebp
0x947:      89 56 02                           	mov dword ptr [esi + 2], edx
0x94a:      8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x94d:      89 56 06                           	mov dword ptr [esi + 6], edx
0x950:      8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x953:      89 56 0a                           	mov dword ptr [esi + 0xa], edx
0x956:      8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x959:      89 56 0e                           	mov dword ptr [esi + 0xe], edx
0x95c:      8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x95f:      89 56 12                           	mov dword ptr [esi + 0x12], edx
0x962:      8b 53 14                           	mov edx, dword ptr [ebx + 0x14]
0x965:      89 56 16                           	mov dword ptr [esi + 0x16], edx
0x968:      8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x96b:      89 56 1a                           	mov dword ptr [esi + 0x1a], edx
0x96e:      8b 53 1c                           	mov edx, dword ptr [ebx + 0x1c]
0x971:      c6 06 01                           	mov byte ptr [esi], 1
0x974:      88 46 01                           	mov byte ptr [esi + 1], al
0x977:      89 56 1e                           	mov dword ptr [esi + 0x1e], edx
0x97a:      8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x97e:      c6 44 24 33 01                     	mov byte ptr [esp + 0x33], 1
0x983:      e9 05 ff ff ff                     	jmp 0x88d <function_88d>
; function: function_988 at 0x988 -- 0x989
; dynamically linked function: __stack_chk_fail at 0x989 -- 0x98a
; data inside code section at 0x98a -- 0x98e
0x98a:      ff ff ff 89                                        |....            |
; function: function_98e at 0x98e -- 0x98f
0x98e:      c3                                 	ret 
; function: function_98f at 0x98f -- 0x990
; data inside code section at 0x990 -- 0x99b
0x990:      3c 24 e8 59 86 00 00 89  1c 24 e8                  |<$.Y.....$.     |
; dynamically linked function: _Unwind_Resume at 0x99b -- 0x99c
; data inside code section at 0x99c -- 0x99e
0x99c:      ff ff                                              |..              |
; function: function_99e at 0x99e -- 0x9af
0x99e:      ff 89 c3 8b 44 24                  	dec dword ptr [ecx + 0x24448bc3]
0x9a4:      34 89                              	xor al, 0x89
0x9a6:      04 24                              	add al, 0x24
0x9a8:      e8 63 83 00 00                     	call 0x8d10 <_ZNSt6vectorIh16secure_allocatorIhEED1Ev>
0x9ad:      eb e0                              	jmp 0x98f <function_98f>
; data inside code section at 0x9af -- 0x9b0
0x9af:      90                                                 |.               |
; function: _ZNK9CKeyStore9GetPubKeyERK6CKeyIDR7CPubKey at 0x9b0 -- 0xa13
0x9b0:      81 ec bc 00 00 00                  	sub esp, 0xbc
0x9b6:      8b 94 24 c4 00 00 00               	mov edx, dword ptr [esp + 0xc4]
0x9bd:      89 b4 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], esi
0x9c4:      8b b4 24 c0 00 00 00               	mov esi, dword ptr [esp + 0xc0]
0x9cb:      89 ac 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ebp
0x9d2:      8d 6c 24 7c                        	lea ebp, [esp + 0x7c]
0x9d6:      89 9c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ebx
0x9dd:      8d 5c 24 7a                        	lea ebx, [esp + 0x7a]
0x9e1:      89 bc 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], edi
0x9e8:      8b bc 24 c8 00 00 00               	mov edi, dword ptr [esp + 0xc8]
0x9ef:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9f5:      89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x9fc:      31 c0                              	xor eax, eax
0x9fe:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xa02:      c6 44 24 7a 00                     	mov byte ptr [esp + 0x7a], 0
0xa07:      c7 44 24 08 20 00 00 00            	mov dword ptr [esp + 8], 0x20
0xa0f:      89 6c 24 04                        	mov dword ptr [esp + 4], ebp
; data inside code section at 0xa13 -- 0xa16
0xa13:      c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xa16 -- 0xa46
; data inside code section at 0xa46 -- 0xa47
0xa46:      e8                                                 |.               |
; dynamically linked function: _ZNK4CKey9GetPubKeyEv at 0xa47 -- 0xa48
; data inside code section at 0xa48 -- 0xa5f
0xa48:      ff ff ff 83 ec 04 f7 c7  01 00 00 00 b8 41 00 00   |.............A..|
0xa58:      00 0f 85 d1 00 00 00                               |.......         |
; function: function_a5f at 0xa5f -- 0xa60
; data inside code section at 0xa60 -- 0xa67
0xa60:      c7 02 00 00 00 0f 85                               |.......         |
; function: function_a67 at 0xa67 -- 0xa75
0xa67:      ad                                 	lodsd eax, dword ptr [esi]
0xa68:      00 00                              	add byte ptr [eax], al
0xa6a:      00 89 c1 31 d2 c1                  	add byte ptr [ecx - 0x3e2dce3f], cl
0xa70:      e9 02 a8 02 f3                     	jmp 0xf302b277 <function_f302b277>
; data inside code section at 0xa75 -- 0xa80
0xa75:      a5 0f 85 7c 00 00 00 a8  01 75 68                  |...|.....uh     |
; function: function_a80 at 0xa80 -- 0xa81
; data inside code section at 0xa81 -- 0xa85
0xa81:      01 00 00 00                                        |....            |
; function: function_a85 at 0xa85 -- 0xa90
0xa85:      c7 44 24 04 20 00 00 00            	mov dword ptr [esp + 4], 0x20
0xa8d:      89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xa90 -- 0xa91
0xa90:      e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xa91 -- 0xa92
; data inside code section at 0xa92 -- 0xaa4
0xa92:      ff ff ff c7 44 24 08 20  00 00 00 89 6c 24 04 c7   |....D$. ....l$..|
0xaa2:      04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xaa4 -- 0xae6
; data inside code section at 0xae6 -- 0xae8
0xae6:      66 90                                              |f.              |
; function: function_ae8 at 0xae8 -- 0xaf1
0xae8:      0f b6 04 16                        	movzx eax, byte ptr [esi + edx]
0xaec:      88 04 17                           	mov byte ptr [edi + edx], al
0xaef:      eb 8f                              	jmp 0xa80 <function_a80>
; data inside code section at 0xaf1 -- 0xaf8
0xaf1:      8d b4 26 00 00 00 00                               |..&....         |
; function: function_af8 at 0xaf8 -- 0xb0d
0xaf8:      0f b7 16                           	movzx edx, word ptr [esi]
0xafb:      a8 01                              	test al, 1
0xafd:      66 89 17                           	mov word ptr [edi], dx
0xb00:      ba 02 00 00 00                     	mov edx, 2
0xb05:      0f 84 75 ff ff ff                  	je 0xa80 <function_a80>
0xb0b:      eb db                              	jmp 0xae8 <function_ae8>
; data inside code section at 0xb0d -- 0xb10
0xb0d:      8d 76 00                                           |.v.             |
; function: function_b10 at 0xb10 -- 0xb17
0xb10:      31 db                              	xor ebx, ebx
0xb12:      e9 6e ff ff ff                     	jmp 0xa85 <function_a85>
; data inside code section at 0xb17 -- 0xb18
0xb17:      90                                                 |.               |
; function: function_b18 at 0xb18 -- 0xb2c
0xb18:      0f b7 16                           	movzx edx, word ptr [esi]
0xb1b:      83 e8 02                           	sub eax, 2
0xb1e:      83 c6 02                           	add esi, 2
0xb21:      66 89 17                           	mov word ptr [edi], dx
0xb24:      83 c7 02                           	add edi, 2
0xb27:      e9 3f ff ff ff                     	jmp 0xa6b
; data inside code section at 0xb2c -- 0xb30
0xb2c:      8d 74 26 00                                        |.t&.            |
; function: function_b30 at 0xb30 -- 0xb48
0xb30:      0f b6 44 24 20                     	movzx eax, byte ptr [esp + 0x20]
0xb35:      8d 74 24 21                        	lea esi, [esp + 0x21]
0xb39:      88 07                              	mov byte ptr [edi], al
0xb3b:      83 c7 01                           	add edi, 1
0xb3e:      b8 40 00 00 00                     	mov eax, 0x40
0xb43:      e9 17 ff ff ff                     	jmp 0xa5f <function_a5f>
; function: function_b48 at 0xb48 -- 0xb49
; dynamically linked function: __stack_chk_fail at 0xb49 -- 0xb4a
; data inside code section at 0xb4a -- 0xb5b
0xb4a:      ff ff ff 89 c6 89 1c 24  e8 79 7f 00 00 89 34 24   |.......$.y....4$|
0xb5a:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xb5b -- 0xb5c
; data inside code section at 0xb5c -- 0xb60
0xb5c:      ff ff ff 90                                        |....            |
; function: _ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey at 0xb60 -- 0xcb1
0xb60:      83 ec 5c                           	sub esp, 0x5c
0xb63:      89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xb67:      8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xb6b:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb71:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xb75:      31 c0                              	xor eax, eax
0xb77:      89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xb7b:      8d 5c 24 34                        	lea ebx, [esp + 0x34]
0xb7f:      89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xb83:      8b 7c 24 68                        	mov edi, dword ptr [esp + 0x68]
0xb87:      8d 46 04                           	lea eax, [esi + 4]
0xb8a:      89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xb8e:      8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0xb92:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xb9a:      c7 44 24 10 a9 00 00 00            	mov dword ptr [esp + 0x10], 0xa9 ; "$\v$"
0xba2:      c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0xbaa:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0xbb2:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0xbb6:      89 1c 24                           	mov dword ptr [esp], ebx
0xbb9:      e8 02 8e 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xbbe:      80 be ac 00 00 00 00               	cmp byte ptr [esi + 0xac], 0
0xbc5:      75 41                              	jne 0xc08 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0xa8>
0xbc7:      89 7c 24 08                        	mov dword ptr [esp + 8], edi
0xbcb:      89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbcf:      89 34 24                           	mov dword ptr [esp], esi
0xbd2:      e8 d9 fd ff ff                     	call 0x9b0 <_ZNK9CKeyStore9GetPubKeyERK6CKeyIDR7CPubKey>
0xbd7:      89 c6                              	mov esi, eax
0xbd9:      89 1c 24                           	mov dword ptr [esp], ebx
0xbdc:      e8 0f 84 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0xbe1:      8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xbe5:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xbec:      89 f0                              	mov eax, esi
0xbee:      0f 85 bd 00 00 00                  	jne 0xcb1 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x14f>
0xbf4:      8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xbf8:      8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xbfc:      8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xc00:      8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xc04:      83 c4 5c                           	add esp, 0x5c
0xc07:      c3                                 	ret 
0xc08:      8d 96 88 00 00 00                  	lea edx, [esi + 0x88]
0xc0e:      81 c6 8c 00 00 00                  	add esi, 0x8c
0xc14:      8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xc18:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0xc1c:      89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xc20:      89 04 24                           	mov dword ptr [esp], eax
0xc23:      e8 18 88 00 00                     	call 0x9440 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_>
0xc28:      83 ec 04                           	sub esp, 4
0xc2b:      8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xc2f:      39 f2                              	cmp edx, esi
0xc31:      74 45                              	je 0xc78 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x118>
0xc33:      f7 c7 01 00 00 00                  	test edi, 1
0xc39:      b8 41 00 00 00                     	mov eax, 0x41
0xc3e:      8d 72 24                           	lea esi, [edx + 0x24]
0xc41:      75 45                              	jne 0xc88 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x128>
0xc43:      f7 c7 02 00 00 00                  	test edi, 2
0xc49:      75 55                              	jne 0xca0 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x140>
0xc4b:      89 c1                              	mov ecx, eax
0xc4d:      31 d2                              	xor edx, edx
0xc4f:      c1 e9 02                           	shr ecx, 2
0xc52:      a8 02                              	test al, 2
0xc54:      f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0xc56:      74 0b                              	je 0xc63 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x103>
0xc58:      0f b7 16                           	movzx edx, word ptr [esi]
0xc5b:      66 89 17                           	mov word ptr [edi], dx
0xc5e:      ba 02 00 00 00                     	mov edx, 2
0xc63:      a8 01                              	test al, 1
0xc65:      74 07                              	je 0xc6e <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x10e>
0xc67:      0f b6 04 16                        	movzx eax, byte ptr [esi + edx]
0xc6b:      88 04 17                           	mov byte ptr [edi + edx], al
0xc6e:      be 01 00 00 00                     	mov esi, 1
0xc73:      e9 61 ff ff ff                     	jmp 0xbd9 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x79>
0xc78:      89 1c 24                           	mov dword ptr [esp], ebx
0xc7b:      31 f6                              	xor esi, esi
0xc7d:      e8 6e 83 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0xc82:      e9 5a ff ff ff                     	jmp 0xbe1 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0x81>
; data inside code section at 0xc87 -- 0xc88
0xc87:      90                                                 |.               |
0xc88:      0f b6 42 24                        	movzx eax, byte ptr [edx + 0x24]
0xc8c:      8d 72 25                           	lea esi, [edx + 0x25]
0xc8f:      88 07                              	mov byte ptr [edi], al
0xc91:      83 c7 01                           	add edi, 1
0xc94:      b8 40 00 00 00                     	mov eax, 0x40
0xc99:      eb a8                              	jmp 0xc43 <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0xe3>
; data inside code section at 0xc9b -- 0xca0
0xc9b:      90 8d 74 26 00                                     |..t&.           |
0xca0:      0f b7 16                           	movzx edx, word ptr [esi]
0xca3:      83 e8 02                           	sub eax, 2
0xca6:      83 c6 02                           	add esi, 2
0xca9:      66 89 17                           	mov word ptr [edi], dx
0xcac:      83 c7 02                           	add edi, 2
0xcaf:      eb 9a                              	jmp 0xc4b <_ZNK15CCryptoKeyStore9GetPubKeyERK6CKeyIDR7CPubKey+0xeb>
; data inside code section at 0xcb1 -- 0xcb2
0xcb1:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xcb2 -- 0xcb3
; data inside code section at 0xcb3 -- 0xcc4
0xcb3:      ff ff ff 89 c6 89 1c 24  e8 30 83 00 00 89 34 24   |.......$.0....4$|
0xcc3:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xcc4 -- 0xcc5
; data inside code section at 0xcc5 -- 0xcd0
0xcc5:      ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: _ZN15CCryptoKeyStore11EncryptKeysERSt6vectorIh16secure_allocatorIhEE at 0xcd0 -- 0xd88
0xcd0:      55                                 	push ebp
0xcd1:      57                                 	push edi
0xcd2:      56                                 	push esi
0xcd3:      53                                 	push ebx
0xcd4:      81 ec fc 00 00 00                  	sub esp, 0xfc
0xcda:      8b 84 24 10 01 00 00               	mov eax, dword ptr [esp + 0x110]
0xce1:      8b 94 24 14 01 00 00               	mov edx, dword ptr [esp + 0x114]
0xce8:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xcf0:      c7 44 24 10 ba 00 00 00            	mov dword ptr [esp + 0x10], 0xba
0xcf8:      89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xcfc:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd02:      89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0xd09:      31 c0                              	xor eax, eax
0xd0b:      8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xd0f:      89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xd13:      8d 54 24 60                        	lea edx, [esp + 0x60]
0xd17:      89 14 24                           	mov dword ptr [esp], edx
0xd1a:      c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0xd22:      83 c0 04                           	add eax, 4
0xd25:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0xd29:      c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0xd31:      e8 8a 8c 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xd36:      8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xd3a:      8b 90 9c 00 00 00                  	mov edx, dword ptr [eax + 0x9c]
0xd40:      85 d2                              	test edx, edx
0xd42:      0f 85 66 03 00 00                  	jne 0x10ae <function_10ae>
0xd48:      80 b8 ac 00 00 00 00               	cmp byte ptr [eax + 0xac], 0
0xd4f:      0f 85 59 03 00 00                  	jne 0x10ae <function_10ae>
0xd55:      8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xd59:      8d 6c 24 6b                        	lea ebp, [esp + 0x6b]
0xd5d:      8b 42 64                           	mov eax, dword ptr [edx + 0x64]
0xd60:      c6 82 ac 00 00 00 01               	mov byte ptr [edx + 0xac], 1
0xd67:      83 c2 5c                           	add edx, 0x5c
0xd6a:      89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xd6e:      39 d0                              	cmp eax, edx
0xd70:      89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xd74:      0f 84 a4 02 00 00                  	je 0x101e <function_101e>
0xd7a:      8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xd7e:      89 2c 24                           	mov dword ptr [esp], ebp
0xd81:      83 c3 24                           	add ebx, 0x24
0xd84:      89 5c 24 04                        	mov dword ptr [esp + 4], ebx
; data inside code section at 0xd88 -- 0xd89
0xd88:      e8                                                 |.               |
; dynamically linked function: _ZNK4CKey9GetPubKeyEv at 0xd89 -- 0xd8a
; data inside code section at 0xd8a -- 0xdc2
0xd8a:      ff ff ff 83 ec 04 8b 44  24 34 c7 44 24 48 00 00   |.......D$4.D$H..|
0xd9a:      00 00 c7 44 24 4c 00 00  00 00 c7 44 24 50 00 00   |...D$L.....D$P..|
0xdaa:      00 00 80 78 24 01 19 c0  f7 d0 83 e0 20 8d 74 03   |...x$....... .t.|
0xdba:      02 8b 5c 24 34 89 f2 83                            |..\$4...        |
; function: function_dc2 at 0xdc2 -- 0xdc3
0xdc2:      c3                                 	ret 
; data inside code section at 0xdc3 -- 0xdd8
0xdc3:      26 29 da 89 54 24 2c 0f  84 07 03 00 00 8b 54 24   |&)..T$,.......T$|
0xdd3:      2c 89 14 24 e8                                     |,..$.           |
; dynamically linked function: _Znwj at 0xdd8 -- 0xdd9
; data inside code section at 0xdd9 -- 0xded
0xdd9:      ff ff ff 85 c0 89 c7 74  18 8b 44 24 2c 89 7c 24   |.......t..D$,.|$|
0xde9:      04 c7 04 24                                        |...$            |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xded -- 0xef1
; data inside code section at 0xef1 -- 0xef2
0xef1:      e8                                                 |.               |
; dynamically linked function: SHA256 at 0xef2 -- 0xef3
; data inside code section at 0xef3 -- 0xf74
0xef3:      ff ff ff 8d 84 24 ac 00  00 00 8d 94 24 cc 00 00   |.....$......$...|
0xf03:      00 c7 84 24 ac 00 00 00  00 00 00 00 8d 5c 24 54   |...$.........\$T|
0xf13:      c7 84 24 b0 00 00 00 00  00 00 00 8d 74 24 48 c7   |..$.........t$H.|
0xf23:      84 24 b4 00 00 00 00 00  00 00 c7 84 24 b8 00 00   |.$..........$...|
0xf33:      00 00 00 00 00 c7 84 24  bc 00 00 00 00 00 00 00   |.......$........|
0xf43:      c7 84 24 c0 00 00 00 00  00 00 00 c7 84 24 c4 00   |..$..........$..|
0xf53:      00 00 00 00 00 00 c7 84  24 c8 00 00 00 00 00 00   |........$.......|
0xf63:      00 89 44 24 08 c7 44 24  04 20 00 00 00 89 14 24   |..D$..D$. .....$|
0xf73:      e8                                                 |.               |
; dynamically linked function: SHA256 at 0xf74 -- 0xf75
; data inside code section at 0xf75 -- 0xf9b
0xf75:      ff ff ff 8b 54 24 38 8d  5c 24 54 8d 84 24 ac 00   |....T$8.\$T..$..|
0xf85:      00 00 8d 74 24 48 89 5c  24 0c 89 44 24 08 89 74   |...t$H.\$..D$..t|
0xf95:      24 04 89 14 24 e8                                  |$...$.          |
; dynamically linked function: _Z13EncryptSecretRKSt6vectorIh16secure_allocatorIhEES4_RK7uint256RS_IhSaIhEE at 0xf9b -- 0xf9c
; data inside code section at 0xf9c -- 0xfcd
0xf9c:      ff ff ff 84 c0 0f 84 c1  00 00 00 8b 54 24 30 8b   |............T$0.|
0xfac:      02 89 5c 24 08 89 6c 24  04 89 14 24 ff 50 2c 84   |..\$..l$...$.P,.|
0xfbc:      c0 0f 84 a5 00 00 00 8b  03 85 c0 74 08 89 04 24   |...........t...$|
0xfcc:      e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xfcd -- 0xfce
; data inside code section at 0xfce -- 0xfe4
0xfce:      ff ff ff 8b 1e 8b 76 08  85 db 74 2a 29 de 89 74   |......v...t*)..t|
0xfde:      24 04 89 1c 24 e8                                  |$...$.          |
; dynamically linked function: OPENSSL_cleanse at 0xfe4 -- 0xfe5
; data inside code section at 0xfe5 -- 0xff3
0xfe5:      ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xff3 -- 0xfff
; data inside code section at 0xfff -- 0x1000
0xfff:      e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1000 -- 0x1001
; data inside code section at 0x1001 -- 0x100c
0x1001:     ff ff ff 8b 44 24 34 89  04 24 e8                  |....D$4..$.     |
; dynamically linked function: _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base at 0x100c -- 0x100d
; data inside code section at 0x100d -- 0x101e
0x100d:     ff ff ff 39 44 24 3c 89  44 24 34 0f 85 5c fd ff   |...9D$<.D$4..\..|
0x101d:     ff                                                 |.               |
; function: function_101e at 0x101e -- 0x1065
0x101e:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x1022:     8b 42 60                           	mov eax, dword ptr [edx + 0x60]
0x1025:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1029:     89 d0                              	mov eax, edx
0x102b:     83 c0 58                           	add eax, 0x58
0x102e:     89 04 24                           	mov dword ptr [esp], eax
0x1031:     e8 0a 81 00 00                     	call 0x9140 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
0x1036:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x103a:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x103e:     c7 40 60 00 00 00 00               	mov dword ptr [eax + 0x60], 0
0x1045:     89 50 64                           	mov dword ptr [eax + 0x64], edx
0x1048:     89 50 68                           	mov dword ptr [eax + 0x68], edx
0x104b:     c7 40 6c 00 00 00 00               	mov dword ptr [eax + 0x6c], 0
0x1052:     8d 44 24 60                        	lea eax, [esp + 0x60]
0x1056:     89 04 24                           	mov dword ptr [esp], eax
0x1059:     e8 92 7f 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x105e:     b8 01 00 00 00                     	mov eax, 1
0x1063:     eb 57                              	jmp 0x10bc <function_10bc>
; data inside code section at 0x1065 -- 0x1074
0x1065:     8d 76 00 8b 44 24 54 85  c0 74 08 89 04 24 e8      |.v..D$T..t...$. |
; dynamically linked function: _ZdlPv at 0x1074 -- 0x1075
; data inside code section at 0x1075 -- 0x108e
0x1075:     ff ff ff 8b 5c 24 48 8b  74 24 50 85 db 74 2a 29   |....\$H.t$P..t*)|
0x1085:     de 89 74 24 04 89 1c 24  e8                        |..t$...$.       |
; dynamically linked function: OPENSSL_cleanse at 0x108e -- 0x108f
; data inside code section at 0x108f -- 0x109d
0x108f:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x109d -- 0x10a9
; data inside code section at 0x10a9 -- 0x10aa
0x10a9:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x10aa -- 0x10ab
; data inside code section at 0x10ab -- 0x10ae
0x10ab:     ff ff ff                                           |...             |
; function: function_10ae at 0x10ae -- 0x10bc
0x10ae:     8d 54 24 60                        	lea edx, [esp + 0x60]
0x10b2:     89 14 24                           	mov dword ptr [esp], edx
0x10b5:     e8 36 7f 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x10ba:     31 c0                              	xor eax, eax
; function: function_10bc at 0x10bc -- 0x10d7
0x10bc:     8b 94 24 ec 00 00 00               	mov edx, dword ptr [esp + 0xec]
0x10c3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10ca:     75 51                              	jne 0x111d <function_111d>
0x10cc:     81 c4 fc 00 00 00                  	add esp, 0xfc
0x10d2:     5b                                 	pop ebx
0x10d3:     5e                                 	pop esi
0x10d4:     5f                                 	pop edi
0x10d5:     5d                                 	pop ebp
0x10d6:     c3                                 	ret 
; function: function_10d7 at 0x10d7 -- 0x10de
0x10d7:     31 ff                              	xor edi, edi
0x10d9:     e9 1c fd ff ff                     	jmp 0xdfa
; data inside code section at 0x10de -- 0x10df
0x10de:     89                                                 |.               |
; function: function_10df at 0x10df -- 0x10e0
0x10df:     c3                                 	ret 
; function: function_10e0 at 0x10e0 -- 0x10e1
; data inside code section at 0x10e1 -- 0x10f0
0x10e1:     44 24 60 89 04 24 e8 04  7f 00 00 89 1c 24 e8      |D$`..$.......$. |
; dynamically linked function: _Unwind_Resume at 0x10f0 -- 0x10f1
; data inside code section at 0x10f1 -- 0x10f3
0x10f1:     ff ff                                              |..              |
; function: function_10f3 at 0x10f3 -- 0x1107
0x10f3:     ff 89 c3 8b 54 24                  	dec dword ptr [ecx + 0x24548bc3]
0x10f9:     50                                 	push eax
0x10fa:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x10fe:     29 c2                              	sub edx, eax
0x1100:     e8 db f1 ff ff                     	call 0x2e0 <_ZNSt12_Vector_baseIh16secure_allocatorIhEE13_M_deallocateEPhj>
0x1105:     eb d9                              	jmp 0x10e0 <function_10e0>
; function: function_1107 at 0x1107 -- 0x111d
0x1107:     89 c7                              	mov edi, eax
0x1109:     89 1c 24                           	mov dword ptr [esp], ebx
0x110c:     89 fb                              	mov ebx, edi
0x110e:     e8 bd 76 00 00                     	call 0x87d0 <_ZNSt6vectorIhSaIhEED1Ev>
0x1113:     89 34 24                           	mov dword ptr [esp], esi
0x1116:     e8 f5 7b 00 00                     	call 0x8d10 <_ZNSt6vectorIh16secure_allocatorIhEED1Ev>
0x111b:     eb c3                              	jmp 0x10e0 <function_10e0>
; function: function_111d at 0x111d -- 0x1120
0x111d:     8d 76 00                           	lea esi, [esi]
; data inside code section at 0x1120 -- 0x1121
0x1120:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1121 -- 0x1122
; data inside code section at 0x1122 -- 0x1130
0x1122:     ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN14CBasicKeyStore12AddKeyPubKeyERK4CKeyRK7CPubKey at 0x1130 -- 0x120a
0x1130:     55                                 	push ebp
0x1131:     57                                 	push edi
0x1132:     56                                 	push esi
0x1133:     53                                 	push ebx
0x1134:     81 ec 8c 00 00 00                  	sub esp, 0x8c
0x113a:     8b ac 24 a0 00 00 00               	mov ebp, dword ptr [esp + 0xa0]
0x1141:     8d 74 24 2c                        	lea esi, [esp + 0x2c]
0x1145:     8b bc 24 a8 00 00 00               	mov edi, dword ptr [esp + 0xa8]
0x114c:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1152:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x1156:     31 c0                              	xor eax, eax
0x1158:     8b 9c 24 a4 00 00 00               	mov ebx, dword ptr [esp + 0xa4]
0x115f:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x1167:     8d 45 04                           	lea eax, [ebp + 4]
0x116a:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x116e:     c7 44 24 10 18 00 00 00            	mov dword ptr [esp + 0x10], 0x18
0x1176:     c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x117e:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x1186:     89 34 24                           	mov dword ptr [esp], esi
0x1189:     e8 32 88 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x118e:     0f b6 07                           	movzx eax, byte ptr [edi]
0x1191:     ba 21 00 00 00                     	mov edx, 0x21
0x1196:     8d 48 fe                           	lea ecx, [eax - 2]
0x1199:     80 f9 01                           	cmp cl, 1
0x119c:     76 0d                              	jbe 0x11ab <_ZN14CBasicKeyStore12AddKeyPubKeyERK4CKeyRK7CPubKey+0x7b>
0x119e:     3c 06                              	cmp al, 6
0x11a0:     0f 85 42 01 00 00                  	jne 0x12e8 <function_12e8>
0x11a6:     ba 41 00 00 00                     	mov edx, 0x41
0x11ab:     01 fa                              	add edx, edi
0x11ad:     b8 e4 f0 00 00                     	mov eax, 0xf0e4
0x11b2:     89 d1                              	mov ecx, edx
0x11b4:     29 f9                              	sub ecx, edi
0x11b6:     39 fa                              	cmp edx, edi
0x11b8:     0f 45 c7                           	cmovne eax, edi
0x11bb:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0x11bf:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x11c7:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x11cf:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x11d7:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x11df:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x11e7:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x11ef:     c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x11f7:     c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0x11ff:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1203:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1207:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x120a -- 0x120b
0x120a:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x120b -- 0x120c
; data inside code section at 0x120c -- 0x124b
0x120c:     ff ff ff 8d 44 24 68 c7  44 24 68 00 00 00 00 c7   |....D$h.D$h.....|
0x121c:     44 24 6c 00 00 00 00 c7  44 24 70 00 00 00 00 c7   |D$l.....D$p.....|
0x122c:     44 24 74 00 00 00 00 c7  44 24 78 00 00 00 00 89   |D$t.....D$x.....|
0x123c:     44 24 08 c7 44 24 04 20  00 00 00 89 3c 24 e8      |D$..D$. ....<$. |
; dynamically linked function: RIPEMD160 at 0x124b -- 0x124c
; data inside code section at 0x124c -- 0x124e
0x124c:     ff ff                                              |..              |
; function: function_124e at 0x124e -- 0x12e5
0x124e:     ff 8b 44 24 68 83                  	dec dword ptr [ebx - 0x7c97dbbc]
0x1254:     c5 58 89                           	lds ebx, ptr [eax - 0x77]
0x1257:     2c 24                              	sub al, 0x24
0x1259:     89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x125d:     8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x1261:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1265:     8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1269:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x126d:     8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x1271:     89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x1275:     8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0x1279:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x127d:     8d 44 24 54                        	lea eax, [esp + 0x54]
0x1281:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1285:     e8 e6 9d 00 00                     	call 0xb070 <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_>
0x128a:     8b 13                              	mov edx, dword ptr [ebx]
0x128c:     89 10                              	mov dword ptr [eax], edx
0x128e:     8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x1291:     89 50 04                           	mov dword ptr [eax + 4], edx
0x1294:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x1297:     89 50 08                           	mov dword ptr [eax + 8], edx
0x129a:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x129d:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x12a0:     8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x12a3:     89 50 10                           	mov dword ptr [eax + 0x10], edx
0x12a6:     8b 53 14                           	mov edx, dword ptr [ebx + 0x14]
0x12a9:     89 50 14                           	mov dword ptr [eax + 0x14], edx
0x12ac:     8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x12af:     89 50 18                           	mov dword ptr [eax + 0x18], edx
0x12b2:     8b 53 1c                           	mov edx, dword ptr [ebx + 0x1c]
0x12b5:     89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x12b8:     0f b7 53 20                        	movzx edx, word ptr [ebx + 0x20]
0x12bc:     66 89 50 20                        	mov word ptr [eax + 0x20], dx
0x12c0:     89 34 24                           	mov dword ptr [esp], esi
0x12c3:     e8 28 7d 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x12c8:     b8 01 00 00 00                     	mov eax, 1
0x12cd:     8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x12d1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12d8:     75 27                              	jne 0x1301 <function_1301>
0x12da:     81 c4 8c 00 00 00                  	add esp, 0x8c
0x12e0:     5b                                 	pop ebx
0x12e1:     5e                                 	pop esi
0x12e2:     5f                                 	pop edi
0x12e3:     5d                                 	pop ebp
0x12e4:     c3                                 	ret 
; data inside code section at 0x12e5 -- 0x12e8
0x12e5:     8d 76 00                                           |.v.             |
; function: function_12e8 at 0x12e8 -- 0x1301
0x12e8:     3c 04                              	cmp al, 4
0x12ea:     0f 84 b6 fe ff ff                  	je 0x11a6
0x12f0:     3c 07                              	cmp al, 7
0x12f2:     b2 41                              	mov dl, 0x41
0x12f4:     b8 00 00 00 00                     	mov eax, 0
0x12f9:     0f 45 d0                           	cmovne edx, eax
0x12fc:     e9 aa fe ff ff                     	jmp 0x11ab
; function: function_1301 at 0x1301 -- 0x1313
0x1301:     e8 fc ff ff ff                     	call 0x1302
0x1306:     89 c3                              	mov ebx, eax
0x1308:     89 34 24                           	mov dword ptr [esp], esi
0x130b:     e8 e0 7c 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x1310:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1313 -- 0x1314
0x1313:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1314 -- 0x1315
; data inside code section at 0x1315 -- 0x1320
0x1315:     ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: _ZN15CCryptoKeyStore12AddKeyPubKeyERK4CKeyRK7CPubKey at 0x1320 -- 0x146b
0x1320:     55                                 	push ebp
0x1321:     57                                 	push edi
0x1322:     56                                 	push esi
0x1323:     53                                 	push ebx
0x1324:     81 ec ac 00 00 00                  	sub esp, 0xac
0x132a:     8b b4 24 c0 00 00 00               	mov esi, dword ptr [esp + 0xc0]
0x1331:     8d 6c 24 4c                        	lea ebp, [esp + 0x4c]
0x1335:     8b 84 24 c4 00 00 00               	mov eax, dword ptr [esp + 0xc4]
0x133c:     8b 94 24 c8 00 00 00               	mov edx, dword ptr [esp + 0xc8]
0x1343:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x134b:     8d 5e 04                           	lea ebx, [esi + 4]
0x134e:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1352:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1356:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x135c:     89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x1363:     31 c0                              	xor eax, eax
0x1365:     c7 44 24 10 6f 00 00 00            	mov dword ptr [esp + 0x10], 0x6f
0x136d:     c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x1375:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x137d:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1381:     89 2c 24                           	mov dword ptr [esp], ebp
0x1384:     e8 37 86 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x1389:     80 be ac 00 00 00 00               	cmp byte ptr [esi + 0xac], 0
0x1390:     0f 84 ca 02 00 00                  	je 0x1660 <function_1660>
0x1396:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x139a:     8d 5c 24 54                        	lea ebx, [esp + 0x54]
0x139e:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x13a6:     c7 44 24 10 83 00 00 00            	mov dword ptr [esp + 0x10], 0x83
0x13ae:     c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0x13b6:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x13be:     89 1c 24                           	mov dword ptr [esp], ebx
0x13c1:     e8 fa 85 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x13c6:     8b 96 a4 00 00 00                  	mov edx, dword ptr [esi + 0xa4]
0x13cc:     8b be a0 00 00 00                  	mov edi, dword ptr [esi + 0xa0]
0x13d2:     89 1c 24                           	mov dword ptr [esp], ebx
0x13d5:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x13d9:     e8 12 7c 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x13de:     39 7c 24 20                        	cmp dword ptr [esp + 0x20], edi
0x13e2:     75 2b                              	jne 0x140f <_ZN15CCryptoKeyStore12AddKeyPubKeyERK4CKeyRK7CPubKey+0xef>
0x13e4:     31 db                              	xor ebx, ebx
0x13e6:     89 2c 24                           	mov dword ptr [esp], ebp
0x13e9:     e8 02 7c 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x13ee:     8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0x13f5:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13fc:     89 d8                              	mov eax, ebx
0x13fe:     0f 85 19 03 00 00                  	jne 0x171d <function_171d>
0x1404:     81 c4 ac 00 00 00                  	add esp, 0xac
0x140a:     5b                                 	pop ebx
0x140b:     5e                                 	pop esi
0x140c:     5f                                 	pop edi
0x140d:     5d                                 	pop ebp
0x140e:     c3                                 	ret 
0x140f:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1413:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1417:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x141f:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x1427:     80 38 01                           	cmp byte ptr [eax], 1
0x142a:     89 d3                              	mov ebx, edx
0x142c:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x1434:     19 c0                              	sbb eax, eax
0x1436:     83 c3 02                           	add ebx, 2
0x1439:     f7 d0                              	not eax
0x143b:     83 e0 20                           	and eax, 0x20
0x143e:     8d 7c 02 02                        	lea edi, [edx + eax + 2]
0x1442:     89 f8                              	mov eax, edi
0x1444:     29 d8                              	sub eax, ebx
0x1446:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x144e:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x1456:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x145e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1462:     0f 84 a8 02 00 00                  	je 0x1710 <function_1710>
0x1468:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x146b -- 0x146c
0x146b:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x146c -- 0x146d
; data inside code section at 0x146d -- 0x1483
0x146d:     ff ff ff 85 c0 89 44 24  20 74 18 8b 54 24 2c 89   |......D$ t..T$,.|
0x147d:     44 24 04 c7 04 24                                  |D$...$          |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1483 -- 0x1578
; data inside code section at 0x1578 -- 0x1579
0x1578:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x1579 -- 0x157a
; data inside code section at 0x157a -- 0x15dd
0x157a:     ff ff ff 8d 44 24 5c 8d  54 24 7c c7 44 24 5c 00   |....D$\.T$|.D$\.|
0x158a:     00 00 00 8d 7c 24 34 c7  44 24 60 00 00 00 00 8d   |....|$4.D$`.....|
0x159a:     5c 24 40 c7 44 24 64 00  00 00 00 c7 44 24 68 00   |\$@.D$d.....D$h.|
0x15aa:     00 00 00 c7 44 24 6c 00  00 00 00 c7 44 24 70 00   |....D$l.....D$p.|
0x15ba:     00 00 00 c7 44 24 74 00  00 00 00 c7 44 24 78 00   |....D$t.....D$x.|
0x15ca:     00 00 00 89 44 24 08 c7  44 24 04 20 00 00 00 89   |....D$..D$. ....|
0x15da:     14 24 e8                                           |.$.             |
; dynamically linked function: SHA256 at 0x15dd -- 0x15de
; data inside code section at 0x15de -- 0x1603
0x15de:     ff ff ff 8d 44 24 5c 8d  7c 24 34 89 44 24 08 8d   |....D$\.|$4.D$..|
0x15ee:     5c 24 40 8d 86 a0 00 00  00 89 7c 24 0c 89 5c 24   |\$@.......|$..\$|
0x15fe:     04 89 04 24 e8                                     |...$.           |
; dynamically linked function: _Z13EncryptSecretRKSt6vectorIh16secure_allocatorIhEES4_RK7uint256RS_IhSaIhEE at 0x1603 -- 0x1604
; data inside code section at 0x1604 -- 0x1621
0x1604:     ff ff ff 84 c0 75 75 8b  5c 24 40 8b 74 24 48 85   |.....uu.\$@.t$H.|
0x1614:     db 74 2a 29 de 89 74 24  04 89 1c 24 e8            |.t*)..t$...$.   |
; dynamically linked function: OPENSSL_cleanse at 0x1621 -- 0x1622
; data inside code section at 0x1622 -- 0x1630
0x1622:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1630 -- 0x163c
; data inside code section at 0x163c -- 0x163d
0x163c:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x163d -- 0x163e
; data inside code section at 0x163e -- 0x1653
0x163e:     ff ff ff 8b 44 24 34 31  db 85 c0 0f 84 97 fd ff   |....D$41........|
0x164e:     ff 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZdlPv at 0x1653 -- 0x1654
; data inside code section at 0x1654 -- 0x1657
0x1654:     ff ff ff                                           |...             |
; function: function_1657 at 0x1657 -- 0x165c
0x1657:     e9 8a fd ff ff                     	jmp 0x13e6
; data inside code section at 0x165c -- 0x1660
0x165c:     8d 74 26 00                                        |.t&.            |
; function: function_1660 at 0x1660 -- 0x167f
0x1660:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x1664:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1668:     89 34 24                           	mov dword ptr [esp], esi
0x166b:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x166f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1673:     e8 b8 fa ff ff                     	call 0x1130 <_ZN14CBasicKeyStore12AddKeyPubKeyERK4CKeyRK7CPubKey>
0x1678:     89 c3                              	mov ebx, eax
0x167a:     e9 67 fd ff ff                     	jmp 0x13e6
; data inside code section at 0x167f -- 0x16b2
0x167f:     90 8b 06 8b 54 24 24 89  7c 24 08 89 34 24 89 54   |....T$$.|$..4$.T|
0x168f:     24 04 ff 50 2c 84 c0 0f  84 6f ff ff ff 8b 5c 24   |$..P,....o....\$|
0x169f:     40 8b 74 24 48 85 db 74  2a 29 de 89 74 24 04 89   |@.t$H..t*)..t$..|
0x16af:     1c 24 e8                                           |.$.             |
; dynamically linked function: OPENSSL_cleanse at 0x16b2 -- 0x16b3
; data inside code section at 0x16b3 -- 0x16c1
0x16b3:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x16c1 -- 0x16cd
; data inside code section at 0x16cd -- 0x16ce
0x16cd:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16ce -- 0x16cf
; data inside code section at 0x16cf -- 0x16de
0x16cf:     ff ff ff 8b 44 24 34 85  c0 74 08 89 04 24 e8      |....D$4..t...$. |
; dynamically linked function: _ZdlPv at 0x16de -- 0x16df
; data inside code section at 0x16df -- 0x16e2
0x16df:     ff ff ff                                           |...             |
; function: function_16e2 at 0x16e2 -- 0x16f4
0x16e2:     89 2c 24                           	mov dword ptr [esp], ebp
0x16e5:     bb 01 00 00 00                     	mov ebx, 1
0x16ea:     e8 01 79 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x16ef:     e9 fa fc ff ff                     	jmp 0x13ee
; data inside code section at 0x16f4 -- 0x16f8
0x16f4:     8d 74 26 00                                        |.t&.            |
; function: function_16f8 at 0x16f8 -- 0x170f
0x16f8:     3c 04                              	cmp al, 4
0x16fa:     0f 84 f4 fd ff ff                  	je 0x14f4
0x1700:     3c 07                              	cmp al, 7
0x1702:     b8 00 00 00 00                     	mov eax, 0
0x1707:     0f 45 d0                           	cmovne edx, eax
0x170a:     e9 e5 fd ff ff                     	jmp 0x14f4
; data inside code section at 0x170f -- 0x1710
0x170f:     90                                                 |.               |
; function: function_1710 at 0x1710 -- 0x171d
0x1710:     c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x1718:     e9 73 fd ff ff                     	jmp 0x1490
; function: function_171d at 0x171d -- 0x171e
; dynamically linked function: __stack_chk_fail at 0x171e -- 0x171f
; data inside code section at 0x171f -- 0x1723
0x171f:     ff ff ff 89                                        |....            |
; function: function_1723 at 0x1723 -- 0x1724
0x1723:     c3                                 	ret 
; function: function_1724 at 0x1724 -- 0x1725
; data inside code section at 0x1725 -- 0x1738
0x1725:     3c 24 e8 a4 70 00 00 89  2c 24 e8 bc 78 00 00 89   |<$..p...,$..x...|
0x1735:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x1738 -- 0x1739
; data inside code section at 0x1739 -- 0x173b
0x1739:     ff ff                                              |..              |
; function: function_173b at 0x173b -- 0x1757
0x173b:     ff 89 c3 eb ec 8b                  	dec dword ptr [ecx - 0x7413143d]
0x1741:     54                                 	push esp
0x1742:     24 48                              	and al, 0x48
0x1744:     89 c3                              	mov ebx, eax
0x1746:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x174a:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0x174e:     29 c2                              	sub edx, eax
0x1750:     e8 8b eb ff ff                     	call 0x2e0 <_ZNSt12_Vector_baseIh16secure_allocatorIhEE13_M_deallocateEPhj>
0x1755:     eb cd                              	jmp 0x1724 <function_1724>
; function: function_1757 at 0x1757 -- 0x1765
0x1757:     89 c6                              	mov esi, eax
0x1759:     89 1c 24                           	mov dword ptr [esp], ebx
0x175c:     89 f3                              	mov ebx, esi
0x175e:     e8 ad 75 00 00                     	call 0x8d10 <_ZNSt6vectorIh16secure_allocatorIhEED1Ev>
0x1763:     eb bf                              	jmp 0x1724 <function_1724>
; data inside code section at 0x1765 -- 0x1770
0x1765:     90 8d 76 00 8d bc 27 00  00 00 00                  |..v...'....     |
; function: _ZN14CBasicKeyStore10AddCScriptERK7CScript at 0x1770 -- 0x1829
0x1770:     55                                 	push ebp
0x1771:     57                                 	push edi
0x1772:     56                                 	push esi
0x1773:     53                                 	push ebx
0x1774:     81 ec 8c 00 00 00                  	sub esp, 0x8c
0x177a:     8b ac 24 a0 00 00 00               	mov ebp, dword ptr [esp + 0xa0]
0x1781:     8d 74 24 2c                        	lea esi, [esp + 0x2c]
0x1785:     8b 9c 24 a4 00 00 00               	mov ebx, dword ptr [esp + 0xa4]
0x178c:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0x1790:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1796:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x179a:     31 c0                              	xor eax, eax
0x179c:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x17a4:     8d 45 04                           	lea eax, [ebp + 4]
0x17a7:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x17ab:     c7 44 24 10 1f 00 00 00            	mov dword ptr [esp + 0x10], 0x1f
0x17b3:     c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x17bb:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x17c3:     89 34 24                           	mov dword ptr [esp], esi
0x17c6:     e8 f5 81 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x17cb:     8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x17ce:     8b 03                              	mov eax, dword ptr [ebx]
0x17d0:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x17d8:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x17e0:     89 d1                              	mov ecx, edx
0x17e2:     29 c1                              	sub ecx, eax
0x17e4:     39 c2                              	cmp edx, eax
0x17e6:     ba e4 f0 00 00                     	mov edx, 0xf0e4
0x17eb:     0f 44 c2                           	cmove eax, edx
0x17ee:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x17f6:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x17fe:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x1806:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x180e:     c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x1816:     c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0x181e:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1822:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1826:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1829 -- 0x182a
0x1829:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x182a -- 0x182b
; data inside code section at 0x182b -- 0x186a
0x182b:     ff ff ff 8d 44 24 68 c7  44 24 68 00 00 00 00 c7   |....D$h.D$h.....|
0x183b:     44 24 6c 00 00 00 00 c7  44 24 70 00 00 00 00 c7   |D$l.....D$p.....|
0x184b:     44 24 74 00 00 00 00 c7  44 24 78 00 00 00 00 89   |D$t.....D$x.....|
0x185b:     44 24 08 c7 44 24 04 20  00 00 00 89 3c 24 e8      |D$..D$. ....<$. |
; dynamically linked function: RIPEMD160 at 0x186a -- 0x186b
; data inside code section at 0x186b -- 0x186d
0x186b:     ff ff                                              |..              |
; function: function_186d at 0x186d -- 0x18da
0x186d:     ff 8b 44 24 68 83                  	dec dword ptr [ebx - 0x7c97dbbc]
0x1873:     c5 70 89                           	lds esi, ptr [eax - 0x77]
0x1876:     2c 24                              	sub al, 0x24
0x1878:     89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x187c:     8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x1880:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1884:     8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1888:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x188c:     8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x1890:     89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x1894:     8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0x1898:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x189c:     8d 44 24 54                        	lea eax, [esp + 0x54]
0x18a0:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x18a4:     e8 57 9e 00 00                     	call 0xb700 <_ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_>
0x18a9:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x18ad:     89 04 24                           	mov dword ptr [esp], eax
0x18b0:     e8 7b 6f 00 00                     	call 0x8830 <_ZNSt6vectorIhSaIhEEaSERKS1_>
0x18b5:     89 34 24                           	mov dword ptr [esp], esi
0x18b8:     e8 33 77 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x18bd:     b8 01 00 00 00                     	mov eax, 1
0x18c2:     8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x18c6:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x18cd:     75 0b                              	jne 0x18da <function_186d+0x6c>
0x18cf:     81 c4 8c 00 00 00                  	add esp, 0x8c
0x18d5:     5b                                 	pop ebx
0x18d6:     5e                                 	pop esi
0x18d7:     5f                                 	pop edi
0x18d8:     5d                                 	pop ebp
0x18d9:     c3                                 	ret 
; data inside code section at 0x18da -- 0x18db
0x18da:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18db -- 0x18dc
; data inside code section at 0x18dc -- 0x18e0
0x18dc:     ff ff ff 89                                        |....            |
; function: function_18e0 at 0x18e0 -- 0x18e1
0x18e0:     c3                                 	ret 
; data inside code section at 0x18e1 -- 0x18ed
0x18e1:     89 34 24 e8 07 77 00 00  89 1c 24 e8               |.4$..w....$.    |
; dynamically linked function: _Unwind_Resume at 0x18ed -- 0x18ee
; data inside code section at 0x18ee -- 0x1900
0x18ee:     ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x18fe:     00 00                                              |..              |
; function: _ZN15CCryptoKeyStore13AddCryptedKeyERK7CPubKeyRKSt6vectorIhSaIhEE at 0x1900 -- 0x1b1c
0x1900:     55                                 	push ebp
0x1901:     57                                 	push edi
0x1902:     56                                 	push esi
0x1903:     53                                 	push ebx
0x1904:     81 ec 3c 01 00 00                  	sub esp, 0x13c
0x190a:     8b 84 24 50 01 00 00               	mov eax, dword ptr [esp + 0x150]
0x1911:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1918:     89 94 24 2c 01 00 00               	mov dword ptr [esp + 0x12c], edx
0x191f:     31 d2                              	xor edx, edx
0x1921:     8b ac 24 54 01 00 00               	mov ebp, dword ptr [esp + 0x154]
0x1928:     8b 9c 24 58 01 00 00               	mov ebx, dword ptr [esp + 0x158]
0x192f:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x1937:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x193b:     83 c0 04                           	add eax, 4
0x193e:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1942:     8d 44 24 48                        	lea eax, [esp + 0x48]
0x1946:     c7 44 24 10 85 00 00 00            	mov dword ptr [esp + 0x10], 0x85
0x194e:     c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x1956:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x195e:     89 04 24                           	mov dword ptr [esp], eax
0x1961:     e8 5a 80 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x1966:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x196a:     89 14 24                           	mov dword ptr [esp], edx
0x196d:     e8 de e9 ff ff                     	call 0x350 <_ZN15CCryptoKeyStore10SetCryptedEv>
0x1972:     84 c0                              	test al, al
0x1974:     0f 84 ae 03 00 00                  	je 0x1d28 <function_1d28>
0x197a:     8b 0b                              	mov ecx, dword ptr [ebx]
0x197c:     31 d2                              	xor edx, edx
0x197e:     31 ff                              	xor edi, edi
0x1980:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1983:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x198b:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x1993:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x199b:     29 c8                              	sub eax, ecx
0x199d:     85 c0                              	test eax, eax
0x199f:     89 c6                              	mov esi, eax
0x19a1:     0f 85 51 03 00 00                  	jne 0x1cf8 <function_1cf8>
0x19a7:     01 fe                              	add esi, edi
0x19a9:     85 c0                              	test eax, eax
0x19ab:     89 7c 24 3c                        	mov dword ptr [esp + 0x3c], edi
0x19af:     89 7c 24 40                        	mov dword ptr [esp + 0x40], edi
0x19b3:     89 74 24 44                        	mov dword ptr [esp + 0x44], esi
0x19b7:     89 7c 24 2c                        	mov dword ptr [esp + 0x2c], edi
0x19bb:     0f 85 0f 03 00 00                  	jne 0x1cd0 <function_1cd0>
0x19c1:     8d 1c 17                           	lea ebx, [edi + edx]
0x19c4:     89 ee                              	mov esi, ebp
0x19c6:     8d 94 24 a3 00 00 00               	lea edx, [esp + 0xa3]
0x19cd:     b8 41 00 00 00                     	mov eax, 0x41
0x19d2:     f6 c2 01                           	test dl, 1
0x19d5:     89 d7                              	mov edi, edx
0x19d7:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x19db:     0f 85 5f 03 00 00                  	jne 0x1d40 <function_1d40>
0x19e1:     f7 c7 02 00 00 00                  	test edi, 2
0x19e7:     0f 85 73 03 00 00                  	jne 0x1d60 <function_1d60>
0x19ed:     89 c1                              	mov ecx, eax
0x19ef:     c1 e9 02                           	shr ecx, 2
0x19f2:     a8 02                              	test al, 2
0x19f4:     f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x19f6:     0f 85 74 02 00 00                  	jne 0x1c70 <function_1c70>
0x19fc:     a8 01                              	test al, 1
0x19fe:     0f 85 5c 02 00 00                  	jne 0x1c60 <function_1c60>
0x1a04:     8d 44 24 50                        	lea eax, [esp + 0x50]
0x1a08:     89 d6                              	mov esi, edx
0x1a0a:     89 c7                              	mov edi, eax
0x1a0c:     b9 10 00 00 00                     	mov ecx, 0x10
0x1a11:     f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x1a13:     89 da                              	mov edx, ebx
0x1a15:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1a19:     2b 54 24 2c                        	sub edx, dword ptr [esp + 0x2c]
0x1a1d:     0f b6 06                           	movzx eax, byte ptr [esi]
0x1a20:     31 f6                              	xor esi, esi
0x1a22:     89 d3                              	mov ebx, edx
0x1a24:     88 07                              	mov byte ptr [edi], al
0x1a26:     31 ff                              	xor edi, edi
0x1a28:     85 d2                              	test edx, edx
0x1a2a:     c7 84 24 94 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x94], 0
0x1a35:     c7 84 24 98 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x98], 0
0x1a40:     c7 84 24 9c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x9c], 0
0x1a4b:     0f 85 57 02 00 00                  	jne 0x1ca8 <function_1ca8>
0x1a51:     01 f3                              	add ebx, esi
0x1a53:     85 d2                              	test edx, edx
0x1a55:     89 b4 24 94 00 00 00               	mov dword ptr [esp + 0x94], esi
0x1a5c:     89 b4 24 98 00 00 00               	mov dword ptr [esp + 0x98], esi
0x1a63:     89 9c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ebx
0x1a6a:     0f 85 18 02 00 00                  	jne 0x1c88 <function_1c88>
0x1a70:     0f b6 45 00                        	movzx eax, byte ptr [ebp]
0x1a74:     01 fe                              	add esi, edi
0x1a76:     ba 21 00 00 00                     	mov edx, 0x21
0x1a7b:     89 b4 24 98 00 00 00               	mov dword ptr [esp + 0x98], esi
0x1a82:     8d 48 fe                           	lea ecx, [eax - 2]
0x1a85:     80 f9 01                           	cmp cl, 1
0x1a88:     76 11                              	jbe 0x1a9b <_ZN15CCryptoKeyStore13AddCryptedKeyERK7CPubKeyRKSt6vectorIhSaIhEE+0x19b>
0x1a8a:     3c 06                              	cmp al, 6
0x1a8c:     74 08                              	je 0x1a96 <_ZN15CCryptoKeyStore13AddCryptedKeyERK7CPubKeyRKSt6vectorIhSaIhEE+0x196>
0x1a8e:     3c 04                              	cmp al, 4
0x1a90:     0f 85 7a 02 00 00                  	jne 0x1d10 <function_1d10>
0x1a96:     ba 41 00 00 00                     	mov edx, 0x41
0x1a9b:     01 ea                              	add edx, ebp
0x1a9d:     b8 e4 f0 00 00                     	mov eax, 0xf0e4
0x1aa2:     89 d1                              	mov ecx, edx
0x1aa4:     29 e9                              	sub ecx, ebp
0x1aa6:     39 ea                              	cmp edx, ebp
0x1aa8:     0f 45 c5                           	cmovne eax, ebp
0x1aab:     8d b4 24 e4 00 00 00               	lea esi, [esp + 0xe4]
0x1ab2:     c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x1abd:     8d 9c 24 94 00 00 00               	lea ebx, [esp + 0x94]
0x1ac4:     c7 84 24 e8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe8], 0
0x1acf:     c7 84 24 ec 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xec], 0
0x1ada:     c7 84 24 f0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf0], 0
0x1ae5:     c7 84 24 f4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf4], 0
0x1af0:     c7 84 24 f8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf8], 0
0x1afb:     c7 84 24 fc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xfc], 0
0x1b06:     c7 84 24 00 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x100], 0
0x1b11:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x1b15:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1b19:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1b1c -- 0x1b1d
0x1b1c:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x1b1d -- 0x1b1e
; data inside code section at 0x1b1e -- 0x1b76
0x1b1e:     ff ff ff 8d 84 24 18 01  00 00 c7 84 24 18 01 00   |.....$......$...|
0x1b2e:     00 00 00 00 00 8d 9c 24  94 00 00 00 c7 84 24 1c   |.......$......$.|
0x1b3e:     01 00 00 00 00 00 00 c7  84 24 20 01 00 00 00 00   |.........$ .....|
0x1b4e:     00 00 c7 84 24 24 01 00  00 00 00 00 00 c7 84 24   |....$$.........$|
0x1b5e:     28 01 00 00 00 00 00 00  89 44 24 08 c7 44 24 04   |(........D$..D$.|
0x1b6e:     20 00 00 00 89 34 24 e8                            | ....4$.        |
; dynamically linked function: RIPEMD160 at 0x1b76 -- 0x1b77
; data inside code section at 0x1b77 -- 0x1c1a
0x1b77:     ff ff ff 8b 84 24 18 01  00 00 8d 9c 24 94 00 00   |.....$......$...|
0x1b87:     00 89 84 24 04 01 00 00  8b 84 24 1c 01 00 00 89   |...$......$.....|
0x1b97:     84 24 08 01 00 00 8b 84  24 20 01 00 00 89 84 24   |.$......$ .....$|
0x1ba7:     0c 01 00 00 8b 84 24 24  01 00 00 89 84 24 10 01   |......$$.....$..|
0x1bb7:     00 00 8b 84 24 28 01 00  00 89 84 24 14 01 00 00   |....$(.....$....|
0x1bc7:     8d 84 24 04 01 00 00 89  44 24 04 8b 44 24 28 05   |..$.....D$..D$(.|
0x1bd7:     88 00 00 00 89 04 24 e8  1d a1 00 00 8b 74 24 24   |......$......t$$|
0x1be7:     89 c7 b9 10 00 00 00 f3  a5 8d 9c 24 94 00 00 00   |...........$....|
0x1bf7:     83 c0 44 0f b6 16 88 17  89 5c 24 04 89 04 24 e8   |..D......\$...$.|
0x1c07:     25 6c 00 00 8b 84 24 94  00 00 00 85 c0 74 08 89   |%l....$......t..|
0x1c17:     04 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0x1c1a -- 0x1c1b
; data inside code section at 0x1c1b -- 0x1c2a
0x1c1b:     ff ff ff 8b 44 24 3c 85  c0 74 08 89 04 24 e8      |....D$<..t...$. |
; dynamically linked function: _ZdlPv at 0x1c2a -- 0x1c2b
; data inside code section at 0x1c2b -- 0x1c3f
0x1c2b:     ff ff ff 8d 54 24 48 89  14 24 e8 b6 73 00 00 b8   |....T$H..$..s...|
0x1c3b:     01 00 00 00                                        |....            |
; function: function_1c3f at 0x1c3f -- 0x1c5e
0x1c3f:     8b 94 24 2c 01 00 00               	mov edx, dword ptr [esp + 0x12c]
0x1c46:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1c4d:     0f 85 21 01 00 00                  	jne 0x1d74 <function_1d74>
0x1c53:     81 c4 3c 01 00 00                  	add esp, 0x13c
0x1c59:     5b                                 	pop ebx
0x1c5a:     5e                                 	pop esi
0x1c5b:     5f                                 	pop edi
0x1c5c:     5d                                 	pop ebp
0x1c5d:     c3                                 	ret 
; data inside code section at 0x1c5e -- 0x1c60
0x1c5e:     66 90                                              |f.              |
; function: function_1c60 at 0x1c60 -- 0x1c6c
0x1c60:     0f b6 04 0e                        	movzx eax, byte ptr [esi + ecx]
0x1c64:     88 04 0f                           	mov byte ptr [edi + ecx], al
0x1c67:     e9 98 fd ff ff                     	jmp 0x1a04
; data inside code section at 0x1c6c -- 0x1c70
0x1c6c:     8d 74 26 00                                        |.t&.            |
; function: function_1c70 at 0x1c70 -- 0x1c85
0x1c70:     0f b7 0e                           	movzx ecx, word ptr [esi]
0x1c73:     a8 01                              	test al, 1
0x1c75:     66 89 0f                           	mov word ptr [edi], cx
0x1c78:     b9 02 00 00 00                     	mov ecx, 2
0x1c7d:     0f 84 81 fd ff ff                  	je 0x1a04
0x1c83:     eb db                              	jmp 0x1c60 <function_1c60>
; data inside code section at 0x1c85 -- 0x1c88
0x1c85:     8d 76 00                                           |.v.             |
; function: function_1c88 at 0x1c88 -- 0x1c97
0x1c88:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1c8c:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1c90:     89 34 24                           	mov dword ptr [esp], esi
0x1c93:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1c97 -- 0x1c98
0x1c97:     e8                                                 |.               |
; dynamically linked function: memmove at 0x1c98 -- 0x1c99
; data inside code section at 0x1c99 -- 0x1c9c
0x1c99:     ff ff ff                                           |...             |
; function: function_1c9c at 0x1c9c -- 0x1ca1
0x1c9c:     e9 cf fd ff ff                     	jmp 0x1a70
; data inside code section at 0x1ca1 -- 0x1ca8
0x1ca1:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_1ca8 at 0x1ca8 -- 0x1cc9
0x1ca8:     89 14 24                           	mov dword ptr [esp], edx
0x1cab:     e8 fc ff ff ff                     	call 0x1cac
0x1cb0:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1cb4:     89 c6                              	mov esi, eax
0x1cb6:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1cba:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1cbe:     2b 54 24 2c                        	sub edx, dword ptr [esp + 0x2c]
0x1cc2:     89 d7                              	mov edi, edx
0x1cc4:     e9 88 fd ff ff                     	jmp 0x1a51
; data inside code section at 0x1cc9 -- 0x1cd0
0x1cc9:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_1cd0 at 0x1cd0 -- 0x1cdf
0x1cd0:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1cd4:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x1cd8:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1cdc:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1cdf -- 0x1ce0
0x1cdf:     e8                                                 |.               |
; dynamically linked function: memmove at 0x1ce0 -- 0x1ce1
; data inside code section at 0x1ce1 -- 0x1ce3
0x1ce1:     ff ff                                              |..              |
; function: function_1ce3 at 0x1ce3 -- 0x1cf5
0x1ce3:     ff 8b 44 24 3c 8b                  	dec dword ptr [ebx - 0x74c3dbbc]
0x1ce9:     54                                 	push esp
0x1cea:     24 20                              	and al, 0x20
0x1cec:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1cf0:     e9 cc fc ff ff                     	jmp 0x19c1
; data inside code section at 0x1cf5 -- 0x1cf8
0x1cf5:     8d 76 00                                           |.v.             |
; function: function_1cf8 at 0x1cf8 -- 0x1d10
0x1cf8:     89 04 24                           	mov dword ptr [esp], eax
0x1cfb:     e8 fc ff ff ff                     	call 0x1cfc
0x1d00:     89 c7                              	mov edi, eax
0x1d02:     8b 0b                              	mov ecx, dword ptr [ebx]
0x1d04:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1d07:     29 c8                              	sub eax, ecx
0x1d09:     89 c2                              	mov edx, eax
0x1d0b:     e9 97 fc ff ff                     	jmp 0x19a7
; function: function_1d10 at 0x1d10 -- 0x1d21
0x1d10:     3c 07                              	cmp al, 7
0x1d12:     b2 41                              	mov dl, 0x41
0x1d14:     b8 00 00 00 00                     	mov eax, 0
0x1d19:     0f 45 d0                           	cmovne edx, eax
0x1d1c:     e9 7a fd ff ff                     	jmp 0x1a9b
; data inside code section at 0x1d21 -- 0x1d28
0x1d21:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_1d28 at 0x1d28 -- 0x1d3b
0x1d28:     8d 44 24 48                        	lea eax, [esp + 0x48]
0x1d2c:     89 04 24                           	mov dword ptr [esp], eax
0x1d2f:     e8 bc 72 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x1d34:     31 c0                              	xor eax, eax
0x1d36:     e9 04 ff ff ff                     	jmp 0x1c3f <function_1c3f>
; data inside code section at 0x1d3b -- 0x1d40
0x1d3b:     90 8d 74 26 00                                     |..t&.           |
; function: function_1d40 at 0x1d40 -- 0x1d5f
0x1d40:     0f b6 45 00                        	movzx eax, byte ptr [ebp]
0x1d44:     8d bc 24 a4 00 00 00               	lea edi, [esp + 0xa4]
0x1d4b:     8d 75 01                           	lea esi, [ebp + 1]
0x1d4e:     88 84 24 a3 00 00 00               	mov byte ptr [esp + 0xa3], al
0x1d55:     b8 40 00 00 00                     	mov eax, 0x40
0x1d5a:     e9 82 fc ff ff                     	jmp 0x19e1
; data inside code section at 0x1d5f -- 0x1d60
0x1d5f:     90                                                 |.               |
; function: function_1d60 at 0x1d60 -- 0x1d74
0x1d60:     0f b7 0e                           	movzx ecx, word ptr [esi]
0x1d63:     83 e8 02                           	sub eax, 2
0x1d66:     83 c6 02                           	add esi, 2
0x1d69:     66 89 0f                           	mov word ptr [edi], cx
0x1d6c:     83 c7 02                           	add edi, 2
0x1d6f:     e9 79 fc ff ff                     	jmp 0x19ed
; function: function_1d74 at 0x1d74 -- 0x1d75
; dynamically linked function: __stack_chk_fail at 0x1d75 -- 0x1d76
; data inside code section at 0x1d76 -- 0x1d85
0x1d76:     ff ff ff 89 c6 89 1c 24  89 f3 e8 4b 6a 00 00      |.......$...Kj.. |
; function: function_1d85 at 0x1d85 -- 0x1d86
; data inside code section at 0x1d86 -- 0x1da1
0x1d86:     44 24 3c 89 04 24 e8 3f  6a 00 00 8d 44 24 48 89   |D$<..$.?j...D$H.|
0x1d96:     04 24 e8 53 72 00 00 89  1c 24 e8                  |.$.Sr....$.     |
; dynamically linked function: _Unwind_Resume at 0x1da1 -- 0x1da2
; data inside code section at 0x1da2 -- 0x1da4
0x1da2:     ff ff                                              |..              |
; function: function_1da4 at 0x1da4 -- 0x1dab
0x1da4:     ff 89 c3 eb e8 89                  	dec dword ptr [ecx - 0x7617143d]
0x1daa:     c3                                 	ret 
; function: function_1dab at 0x1dab -- 0x1dad
0x1dab:     eb d8                              	jmp 0x1d85 <function_1d85>
; data inside code section at 0x1dad -- 0x1db0
0x1dad:     90 66 90                                           |.f.             |
; function: _ZN15CCryptoKeyStore6UnlockERKSt6vectorIh16secure_allocatorIhEE at 0x1db0 -- 0x1efa
0x1db0:     55                                 	push ebp
0x1db1:     57                                 	push edi
0x1db2:     56                                 	push esi
0x1db3:     53                                 	push ebx
0x1db4:     81 ec 0c 01 00 00                  	sub esp, 0x10c
0x1dba:     8b b4 24 20 01 00 00               	mov esi, dword ptr [esp + 0x120]
0x1dc1:     8d 6c 24 50                        	lea ebp, [esp + 0x50]
0x1dc5:     8b 84 24 24 01 00 00               	mov eax, dword ptr [esp + 0x124]
0x1dcc:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1dd3:     89 94 24 fc 00 00 00               	mov dword ptr [esp + 0xfc], edx
0x1dda:     31 d2                              	xor edx, edx
0x1ddc:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x1de4:     c7 44 24 10 52 00 00 00            	mov dword ptr [esp + 0x10], 0x52
0x1dec:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1df0:     8d 46 04                           	lea eax, [esi + 4]
0x1df3:     c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x1dfb:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x1e03:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e07:     89 2c 24                           	mov dword ptr [esp], ebp
0x1e0a:     e8 b1 7b 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x1e0f:     89 34 24                           	mov dword ptr [esp], esi
0x1e12:     e8 39 e5 ff ff                     	call 0x350 <_ZN15CCryptoKeyStore10SetCryptedEv>
0x1e17:     84 c0                              	test al, al
0x1e19:     0f 84 ca 01 00 00                  	je 0x1fe9 <function_1fe9>
0x1e1f:     8b be 94 00 00 00                  	mov edi, dword ptr [esi + 0x94]
0x1e25:     8d 86 8c 00 00 00                  	lea eax, [esi + 0x8c]
0x1e2b:     39 c7                              	cmp edi, eax
0x1e2d:     0f 84 1c 03 00 00                  	je 0x214f
0x1e33:     0f b6 47 24                        	movzx eax, byte ptr [edi + 0x24]
0x1e37:     b9 21 00 00 00                     	mov ecx, 0x21
0x1e3c:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x1e44:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x1e4c:     c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x1e54:     8d 50 fe                           	lea edx, [eax - 2]
0x1e57:     80 fa 01                           	cmp dl, 1
0x1e5a:     76 11                              	jbe 0x1e6d <_ZN15CCryptoKeyStore6UnlockERKSt6vectorIh16secure_allocatorIhEE+0xbd>
0x1e5c:     3c 06                              	cmp al, 6
0x1e5e:     74 08                              	je 0x1e68 <_ZN15CCryptoKeyStore6UnlockERKSt6vectorIh16secure_allocatorIhEE+0xb8>
0x1e60:     3c 04                              	cmp al, 4
0x1e62:     0f 85 b0 01 00 00                  	jne 0x2018 <function_2018>
0x1e68:     b9 41 00 00 00                     	mov ecx, 0x41
0x1e6d:     8d 47 24                           	lea eax, [edi + 0x24]
0x1e70:     01 c1                              	add ecx, eax
0x1e72:     89 ca                              	mov edx, ecx
0x1e74:     29 c2                              	sub edx, eax
0x1e76:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1e7a:     b8 3c f2 00 00                     	mov eax, 0xf23c
0x1e7f:     3b 4c 24 2c                        	cmp ecx, dword ptr [esp + 0x2c]
0x1e83:     0f 45 44 24 2c                     	cmovne eax, dword ptr [esp + 0x2c]
0x1e88:     8d 9c 24 dc 00 00 00               	lea ebx, [esp + 0xdc]
0x1e8f:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1e93:     8d 54 24 44                        	lea edx, [esp + 0x44]
0x1e97:     c7 84 24 dc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xdc], 0
0x1ea2:     c7 84 24 e0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe0], 0
0x1ead:     c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x1eb8:     c7 84 24 e8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe8], 0
0x1ec3:     c7 84 24 ec 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xec], 0
0x1ece:     c7 84 24 f0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf0], 0
0x1ed9:     c7 84 24 f4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf4], 0
0x1ee4:     c7 84 24 f8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf8], 0
0x1eef:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x1ef3:     89 04 24                           	mov dword ptr [esp], eax
0x1ef6:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
; data inside code section at 0x1efa -- 0x1efb
0x1efa:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x1efb -- 0x1efc
; data inside code section at 0x1efc -- 0x1f76
0x1efc:     ff ff ff 8d 84 24 bc 00  00 00 8d 54 24 44 c7 84   |.....$.....T$D..|
0x1f0c:     24 bc 00 00 00 00 00 00  00 c7 84 24 c0 00 00 00   |$..........$....|
0x1f1c:     00 00 00 00 c7 84 24 c4  00 00 00 00 00 00 00 c7   |......$.........|
0x1f2c:     84 24 c8 00 00 00 00 00  00 00 c7 84 24 cc 00 00   |.$..........$...|
0x1f3c:     00 00 00 00 00 c7 84 24  d0 00 00 00 00 00 00 00   |.......$........|
0x1f4c:     c7 84 24 d4 00 00 00 00  00 00 00 c7 84 24 d8 00   |..$..........$..|
0x1f5c:     00 00 00 00 00 00 89 44  24 08 c7 44 24 04 20 00   |.......D$..D$. .|
0x1f6c:     00 00 89 1c 24 89 54 24  30 e8                     |....$.T$0.      |
; dynamically linked function: SHA256 at 0x1f76 -- 0x1f77
; data inside code section at 0x1f77 -- 0x1fa0
0x1f77:     ff ff ff 8d 44 24 44 89  44 24 30 8d 94 24 bc 00   |....D$D.D$0..$..|
0x1f87:     00 00 89 44 24 0c 8d 47  68 89 44 24 04 8b 44 24   |...D$..Gh.D$..D$|
0x1f97:     34 89 54 24 08 89 04 24  e8                        |4.T$...$.       |
; dynamically linked function: _Z13DecryptSecretRKSt6vectorIh16secure_allocatorIhEERKS_IhSaIhEERK7uint256RS2_ at 0x1fa0 -- 0x1fa1
; data inside code section at 0x1fa1 -- 0x1fb7
0x1fa1:     ff ff ff 84 c0 8b 5c 24  44 74 0b 8b 44 24 48 29   |......\$Dt..D$H)|
0x1fb1:     d8 83 f8 20 74 79                                  |... ty          |
; function: function_1fb7 at 0x1fb7 -- 0x1fc8
0x1fb7:     85 db                              	test ebx, ebx
0x1fb9:     8b 74 24 4c                        	mov esi, dword ptr [esp + 0x4c]
0x1fbd:     74 2a                              	je 0x1fe9 <function_1fe9>
0x1fbf:     29 de                              	sub esi, ebx
0x1fc1:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1fc5:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1fc8 -- 0x1fc9
0x1fc8:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1fc9 -- 0x1fca
; data inside code section at 0x1fca -- 0x1fd8
0x1fca:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1fd8 -- 0x1fe4
; data inside code section at 0x1fe4 -- 0x1fe5
0x1fe4:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1fe5 -- 0x1fe6
; data inside code section at 0x1fe6 -- 0x1fe9
0x1fe6:     ff ff ff                                           |...             |
; function: function_1fe9 at 0x1fe9 -- 0x2012
0x1fe9:     89 2c 24                           	mov dword ptr [esp], ebp
0x1fec:     e8 ff 6f 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x1ff1:     31 c0                              	xor eax, eax
0x1ff3:     8b 94 24 fc 00 00 00               	mov edx, dword ptr [esp + 0xfc]
0x1ffa:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2001:     0f 85 42 02 00 00                  	jne 0x2249 <function_2249>
0x2007:     81 c4 0c 01 00 00                  	add esp, 0x10c
0x200d:     5b                                 	pop ebx
0x200e:     5e                                 	pop esi
0x200f:     5f                                 	pop edi
0x2010:     5d                                 	pop ebp
0x2011:     c3                                 	ret 
; data inside code section at 0x2012 -- 0x2018
0x2012:     8d b6 00 00 00 00                                  |......          |
; function: function_2018 at 0x2018 -- 0x2029
0x2018:     3c 07                              	cmp al, 7
0x201a:     b1 41                              	mov cl, 0x41
0x201c:     b8 00 00 00 00                     	mov eax, 0
0x2021:     0f 45 c8                           	cmovne ecx, eax
0x2024:     e9 44 fe ff ff                     	jmp 0x1e6d
; data inside code section at 0x2029 -- 0x204e
0x2029:     8d b4 26 00 00 00 00 8d  94 24 9c 00 00 00 c6 84   |..&......$......|
0x2039:     24 9a 00 00 00 00 c7 44  24 08 20 00 00 00 89 54   |$......D$. ....T|
0x2049:     24 04 c7 04 24                                     |$...$           |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x204e -- 0x2098
; data inside code section at 0x2098 -- 0x2099
0x2098:     e8                                                 |.               |
; dynamically linked function: _ZNK4CKey9GetPubKeyEv at 0x2099 -- 0x209a
; data inside code section at 0x209a -- 0x20aa
0x209a:     ff ff ff 83 ec 04 0f b6  44 24 59 3a 47 24 74 3f   |........D$Y:G$t?|
; function: function_20aa at 0x20aa -- 0x20ab
; data inside code section at 0x20ab -- 0x20bd
0x20ab:     94 24 9c 00 00 00 c7 44  24 04 20 00 00 00 89 14   |.$.....D$. .....|
0x20bb:     24 e8                                              |$.              |
; dynamically linked function: OPENSSL_cleanse at 0x20bd -- 0x20be
; data inside code section at 0x20be -- 0x20d7
0x20be:     ff ff ff 8d 94 24 9c 00  00 00 c7 44 24 08 20 00   |.....$.....D$. .|
0x20ce:     00 00 89 54 24 04 c7 04  24                        |...T$...$       |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x20d7 -- 0x20e9
; data inside code section at 0x20e9 -- 0x210d
0x20e9:     8d 50 fe 80 fa 01 0f 86  4d 01 00 00 3c 06 0f 84   |.P......M...<...|
0x20f9:     1b 01 00 00 3c 04 0f 84  13 01 00 00 3c 07 0f 84   |....<.......<...|
0x2109:     0b 01 00 00                                        |....            |
; function: function_210d at 0x210d -- 0x210e
; data inside code section at 0x210e -- 0x2120
0x210e:     84 24 9c 00 00 00 c7 44  24 04 20 00 00 00 89 04   |.$.....D$. .....|
0x211e:     24 e8                                              |$.              |
; dynamically linked function: OPENSSL_cleanse at 0x2120 -- 0x2121
; data inside code section at 0x2121 -- 0x213a
0x2121:     ff ff ff 8d 84 24 9c 00  00 00 c7 44 24 08 20 00   |.....$.....D$. .|
0x2131:     00 00 89 44 24 04 c7 04  24                        |...D$...$       |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x213a -- 0x2191
; function: function_2191 at 0x2191 -- 0x219f
0x2191:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x2195:     8d 9c 24 9a 00 00 00               	lea ebx, [esp + 0x9a]
0x219c:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x219f -- 0x21a0
0x219f:     e8                                                 |.               |
; dynamically linked function: _ZN4CKey5CheckEPKh at 0x21a0 -- 0x21a1
; data inside code section at 0x21a1 -- 0x21a4
0x21a1:     ff ff ff                                           |...             |
; function: function_21a4 at 0x21a4 -- 0x2218
0x21a4:     84 c0                              	test al, al
0x21a6:     0f 84 d2 fe ff ff                  	je 0x207e
0x21ac:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x21b0:     8b 02                              	mov eax, dword ptr [edx]
0x21b2:     89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x21b9:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x21bc:     89 84 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], eax
0x21c3:     8b 42 08                           	mov eax, dword ptr [edx + 8]
0x21c6:     89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0x21cd:     8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x21d0:     89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x21d7:     8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0x21da:     89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x21e1:     8b 42 14                           	mov eax, dword ptr [edx + 0x14]
0x21e4:     89 84 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], eax
0x21eb:     8b 42 18                           	mov eax, dword ptr [edx + 0x18]
0x21ee:     89 84 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], eax
0x21f5:     8b 42 1c                           	mov eax, dword ptr [edx + 0x1c]
0x21f8:     c6 84 24 9a 00 00 00 01            	mov byte ptr [esp + 0x9a], 1
0x2200:     89 84 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], eax
0x2207:     0f b6 44 24 3f                     	movzx eax, byte ptr [esp + 0x3f]
0x220c:     88 84 24 9b 00 00 00               	mov byte ptr [esp + 0x9b], al
0x2213:     e9 6e fe ff ff                     	jmp 0x2086
; data inside code section at 0x2218 -- 0x221d
0x2218:     b8 41 00 00 00                                     |.A...           |
; function: function_221d at 0x221d -- 0x221e
; data inside code section at 0x221e -- 0x2231
0x221e:     44 24 08 8b 44 24 2c 8d  54 24 59 89 14 24 89 44   |D$..D$,.T$Y..$.D|
0x222e:     24 04 e8                                           |$..             |
; dynamically linked function: memcmp at 0x2231 -- 0x2232
; data inside code section at 0x2232 -- 0x2235
0x2232:     ff ff ff                                           |...             |
; function: function_2235 at 0x2235 -- 0x2242
0x2235:     85 c0                              	test eax, eax
0x2237:     0f 85 6d fe ff ff                  	jne 0x20aa <function_20aa>
0x223d:     e9 cb fe ff ff                     	jmp 0x210d <function_210d>
; function: function_2242 at 0x2242 -- 0x2249
0x2242:     b8 21 00 00 00                     	mov eax, 0x21
0x2247:     eb d4                              	jmp 0x221d <function_221d>
; function: function_2249 at 0x2249 -- 0x224a
; dynamically linked function: __stack_chk_fail at 0x224a -- 0x224b
; data inside code section at 0x224b -- 0x225a
0x224b:     ff ff ff 89 c6 89 1c 24  89 f3 e8 76 68 00 00      |.......$...vh.. |
; function: function_225a at 0x225a -- 0x2271
0x225a:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x225e:     89 04 24                           	mov dword ptr [esp], eax
0x2261:     e8 aa 6a 00 00                     	call 0x8d10 <_ZNSt6vectorIh16secure_allocatorIhEED1Ev>
0x2266:     89 2c 24                           	mov dword ptr [esp], ebp
0x2269:     e8 82 6d 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x226e:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2271 -- 0x2272
0x2271:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x2272 -- 0x2273
; data inside code section at 0x2273 -- 0x2276
0x2273:     ff ff ff                                           |...             |
; function: function_2276 at 0x2276 -- 0x227f
0x2276:     e8 ff 14 00 00                     	call 0x377a <_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_.part.617>
0x227b:     89 c3                              	mov ebx, eax
0x227d:     eb db                              	jmp 0x225a <function_225a>
; function: function_227f at 0x227f -- 0x2283
0x227f:     89 c3                              	mov ebx, eax
0x2281:     eb e3                              	jmp 0x2266
; data inside code section at 0x2283 -- 0x2290
0x2283:     90 8d b6 00 00 00 00 8d  bf 00 00 00 00            |.............   |
; function: _ZN15CCryptoKeyStore4LockEv at 0x2290 -- 0x232c
0x2290:     56                                 	push esi
0x2291:     53                                 	push ebx
0x2292:     83 ec 34                           	sub esp, 0x34
0x2295:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x2299:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x229f:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x22a3:     31 c0                              	xor eax, eax
0x22a5:     89 1c 24                           	mov dword ptr [esp], ebx
0x22a8:     e8 a3 e0 ff ff                     	call 0x350 <_ZN15CCryptoKeyStore10SetCryptedEv>
0x22ad:     31 d2                              	xor edx, edx
0x22af:     84 c0                              	test al, al
0x22b1:     75 15                              	jne 0x22c8 <_ZN15CCryptoKeyStore4LockEv+0x38>
0x22b3:     89 d0                              	mov eax, edx
0x22b5:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x22b9:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x22c0:     75 6a                              	jne 0x232c <_ZN15CCryptoKeyStore4LockEv+0x9a>
0x22c2:     83 c4 34                           	add esp, 0x34
0x22c5:     5b                                 	pop ebx
0x22c6:     5e                                 	pop esi
0x22c7:     c3                                 	ret 
0x22c8:     8d 43 04                           	lea eax, [ebx + 4]
0x22cb:     8d 74 24 24                        	lea esi, [esp + 0x24]
0x22cf:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x22d3:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x22db:     c7 44 24 10 47 00 00 00            	mov dword ptr [esp + 0x10], 0x47
0x22e3:     c7 44 24 0c a0 24 00 00            	mov dword ptr [esp + 0xc], 0x24a0 ; "keystore.cpp"
0x22eb:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x22f3:     89 34 24                           	mov dword ptr [esp], esi
0x22f6:     e8 c5 76 00 00                     	call 0x99c0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x22fb:     8b 83 a0 00 00 00                  	mov eax, dword ptr [ebx + 0xa0]
0x2301:     89 83 a4 00 00 00                  	mov dword ptr [ebx + 0xa4], eax
0x2307:     89 34 24                           	mov dword ptr [esp], esi
0x230a:     e8 e1 6c 00 00                     	call 0x8ff0 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev>
0x230f:     8b 83 b4 00 00 00                  	mov eax, dword ptr [ebx + 0xb4]
0x2315:     85 c0                              	test eax, eax
0x2317:     74 18                              	je 0x2331 <function_2331>
0x2319:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x231d:     89 04 24                           	mov dword ptr [esp], eax
0x2320:     e8 2b c2 00 00                     	call 0xe550 <_ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEclES4_>
0x2325:     ba 01 00 00 00                     	mov edx, 1
0x232a:     eb 87                              	jmp 0x22b3 <_ZN15CCryptoKeyStore4LockEv+0x23>
; data inside code section at 0x232c -- 0x232d
0x232c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x232d -- 0x232e
; data inside code section at 0x232e -- 0x2331
0x232e:     ff ff ff                                           |...             |
; function: function_2331 at 0x2331 -- 0x2336
0x2331:     e8 44 14 00 00                     	call 0x377a <_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_.part.617>
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x2340 -- 0x236a
0x2340:     83 ec 1c                           	sub esp, 0x1c
0x2343:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2349:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x234d:     31 c0                              	xor eax, eax
0x234f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2353:     c7 00 10 f0 00 00                  	mov dword ptr [eax], 0xf010
0x2359:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x235d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2364:     75 04                              	jne 0x236a <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0x2366:     83 c4 1c                           	add esp, 0x1c
0x2369:     c3                                 	ret 
; data inside code section at 0x236a -- 0x236b
0x236a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x236b -- 0x236c
; data inside code section at 0x236c -- 0x236f
0x236c:     ff ff ff                                           |...             |
; section: .text._ZNK5boost10lock_error4whatEv
; function: _ZNK5boost10lock_error4whatEv at 0x2590 -- 0x25b5
0x2590:     83 ec 1c                           	sub esp, 0x1c
0x2593:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2599:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x259d:     31 c0                              	xor eax, eax
0x259f:     b8 6f 23 00 00                     	mov eax, 0x236f ; "boost::lock_error"
0x25a4:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x25a8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x25af:     75 04                              	jne 0x25b5 <_ZNK5boost10lock_error4whatEv+0x24>
0x25b1:     83 c4 1c                           	add esp, 0x1c
0x25b4:     c3                                 	ret 
; data inside code section at 0x25b5 -- 0x25b6
0x25b5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x25b6 -- 0x25b7
; data inside code section at 0x25b7 -- 0x25ba
0x25b7:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0x25c0 -- 0x25ea
0x25c0:     83 ec 1c                           	sub esp, 0x1c
0x25c3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x25c9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x25cd:     31 c0                              	xor eax, eax
0x25cf:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x25d3:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x25d9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x25dd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x25e4:     75 04                              	jne 0x25ea <_ZN5boost6detail15sp_counted_baseD1Ev+0x29>
0x25e6:     83 c4 1c                           	add esp, 0x1c
0x25e9:     c3                                 	ret 
; data inside code section at 0x25ea -- 0x25eb
0x25ea:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x25eb -- 0x25ec
; data inside code section at 0x25ec -- 0x25ef
0x25ec:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0x25f0 -- 0x2640
0x25f0:     83 ec 1c                           	sub esp, 0x1c
0x25f3:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x25f7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x25fe:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2602:     31 d2                              	xor edx, edx
0x2604:     85 c0                              	test eax, eax
0x2606:     74 20                              	je 0x2628 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0x2608:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x260c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2613:     75 24                              	jne 0x2639 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2615:     8b 10                              	mov edx, dword ptr [eax]
0x2617:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x261b:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x261e:     83 c4 1c                           	add esp, 0x1c
0x2621:     ff e0                              	jmp eax
; data inside code section at 0x2623 -- 0x2628
0x2623:     90 8d 74 26 00                                     |..t&.           |
0x2628:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x262c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2633:     75 04                              	jne 0x2639 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2635:     83 c4 1c                           	add esp, 0x1c
0x2638:     c3                                 	ret 
0x2639:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x2640 -- 0x2641
0x2640:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2641 -- 0x2642
; data inside code section at 0x2642 -- 0x2645
0x2642:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals211signal_baseD2Ev
; function: _ZN5boost8signals211signal_baseD1Ev at 0x2650 -- 0x267a
0x2650:     83 ec 1c                           	sub esp, 0x1c
0x2653:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2659:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x265d:     31 c0                              	xor eax, eax
0x265f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2663:     c7 00 d8 f0 00 00                  	mov dword ptr [eax], 0xf0d8
0x2669:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x266d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2674:     75 04                              	jne 0x267a <_ZN5boost8signals211signal_baseD1Ev+0x29>
0x2676:     83 c4 1c                           	add esp, 0x1c
0x2679:     c3                                 	ret 
; data inside code section at 0x267a -- 0x267b
0x267a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x267b -- 0x267c
; data inside code section at 0x267c -- 0x267f
0x267c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0x2680 -- 0x26aa
0x2680:     83 ec 1c                           	sub esp, 0x1c
0x2683:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2689:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x268d:     31 c0                              	xor eax, eax
0x268f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2693:     c7 00 a8 ee 00 00                  	mov dword ptr [eax], 0xeea8
0x2699:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x269d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x26a4:     75 04                              	jne 0x26aa <_ZN5boost6system14error_categoryD1Ev+0x29>
0x26a6:     83 c4 1c                           	add esp, 0x1c
0x26a9:     c3                                 	ret 
; data inside code section at 0x26aa -- 0x26ab
0x26aa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x26ab -- 0x26ac
; data inside code section at 0x26ac -- 0x26af
0x26ac:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0x26b0 -- 0x26e4
0x26b0:     83 ec 1c                           	sub esp, 0x1c
0x26b3:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x26b7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x26be:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x26c2:     31 d2                              	xor edx, edx
0x26c4:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x26c8:     89 10                              	mov dword ptr [eax], edx
0x26ca:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x26ce:     89 50 04                           	mov dword ptr [eax + 4], edx
0x26d1:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x26d5:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x26dc:     75 06                              	jne 0x26e4 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0x26de:     83 c4 1c                           	add esp, 0x1c
0x26e1:     c2 04 00                           	ret 4
; data inside code section at 0x26e4 -- 0x26e5
0x26e4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x26e5 -- 0x26e6
; data inside code section at 0x26e6 -- 0x26e9
0x26e6:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0x26f0 -- 0x274f
0x26f0:     56                                 	push esi
0x26f1:     53                                 	push ebx
0x26f2:     83 ec 34                           	sub esp, 0x34
0x26f5:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x26f9:     8d 4c 24 18                        	lea ecx, [esp + 0x18]
0x26fd:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2704:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x2708:     31 d2                              	xor edx, edx
0x270a:     8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x270e:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x2712:     8b 10                              	mov edx, dword ptr [eax]
0x2714:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2718:     89 0c 24                           	mov dword ptr [esp], ecx
0x271b:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x271f:     ff 52 10                           	call dword ptr [edx + 0x10]
0x2722:     31 c0                              	xor eax, eax
0x2724:     83 ec 04                           	sub esp, 4
0x2727:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x272b:     39 4b 04                           	cmp dword ptr [ebx + 4], ecx
0x272e:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x2732:     74 14                              	je 0x2748 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0x2734:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2738:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x273f:     75 0e                              	jne 0x274f <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5d>
0x2741:     83 c4 34                           	add esp, 0x34
0x2744:     5b                                 	pop ebx
0x2745:     5e                                 	pop esi
0x2746:     c3                                 	ret 
; data inside code section at 0x2747 -- 0x2748
0x2747:     90                                                 |.               |
0x2748:     39 13                              	cmp dword ptr [ebx], edx
0x274a:     0f 94 c0                           	sete al
0x274d:     eb e5                              	jmp 0x2734 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
; data inside code section at 0x274f -- 0x2750
0x274f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2750 -- 0x2751
; data inside code section at 0x2751 -- 0x2754
0x2751:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0x2760 -- 0x279f
0x2760:     53                                 	push ebx
0x2761:     83 ec 18                           	sub esp, 0x18
0x2764:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x2768:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x276c:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2772:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2776:     31 c0                              	xor eax, eax
0x2778:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x277c:     39 5a 04                           	cmp dword ptr [edx + 4], ebx
0x277f:     74 17                              	je 0x2798 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0x2781:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2785:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x278c:     75 11                              	jne 0x279f <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3d>
0x278e:     83 c4 18                           	add esp, 0x18
0x2791:     5b                                 	pop ebx
0x2792:     c3                                 	ret 
; data inside code section at 0x2793 -- 0x2798
0x2793:     90 8d 74 26 00                                     |..t&.           |
0x2798:     39 0a                              	cmp dword ptr [edx], ecx
0x279a:     0f 94 c0                           	sete al
0x279d:     eb e2                              	jmp 0x2781 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
; data inside code section at 0x279f -- 0x27a0
0x279f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x27a0 -- 0x27a1
; data inside code section at 0x27a1 -- 0x27a4
0x27a1:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED1Ev at 0x27b0 -- 0x27da
0x27b0:     83 ec 1c                           	sub esp, 0x1c
0x27b3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x27b9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x27bd:     31 c0                              	xor eax, eax
0x27bf:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x27c3:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x27c9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x27cd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x27d4:     75 04                              	jne 0x27da <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED1Ev+0x29>
0x27d6:     83 c4 1c                           	add esp, 0x1c
0x27d9:     c3                                 	ret 
; data inside code section at 0x27da -- 0x27db
0x27da:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x27db -- 0x27dc
; data inside code section at 0x27dc -- 0x27df
0x27dc:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev at 0x27e0 -- 0x280a
0x27e0:     83 ec 1c                           	sub esp, 0x1c
0x27e3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x27e9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x27ed:     31 c0                              	xor eax, eax
0x27ef:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x27f3:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x27f9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x27fd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2804:     75 04                              	jne 0x280a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev+0x29>
0x2806:     83 c4 1c                           	add esp, 0x1c
0x2809:     c3                                 	ret 
; data inside code section at 0x280a -- 0x280b
0x280a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x280b -- 0x280c
; data inside code section at 0x280c -- 0x280f
0x280c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0x2810 -- 0x283a
0x2810:     83 ec 1c                           	sub esp, 0x1c
0x2813:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2819:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x281d:     31 c0                              	xor eax, eax
0x281f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2823:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x2829:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x282d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2834:     75 04                              	jne 0x283a <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0x2836:     83 c4 1c                           	add esp, 0x1c
0x2839:     c3                                 	ret 
; data inside code section at 0x283a -- 0x283b
0x283a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x283b -- 0x283c
; data inside code section at 0x283c -- 0x283f
0x283c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info at 0x2840 -- 0x2865
0x2840:     83 ec 1c                           	sub esp, 0x1c
0x2843:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2849:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x284d:     31 c0                              	xor eax, eax
0x284f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2853:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x285a:     75 04                              	jne 0x2860 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info+0x20>
0x285c:     83 c4 1c                           	add esp, 0x1c
0x285f:     c3                                 	ret 
0x2860:     e8 fc ff ff ff                     	call 0x2861
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info at 0x2870 -- 0x2895
0x2870:     83 ec 1c                           	sub esp, 0x1c
0x2873:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2879:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x287d:     31 c0                              	xor eax, eax
0x287f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2883:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x288a:     75 04                              	jne 0x2890 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info+0x20>
0x288c:     83 c4 1c                           	add esp, 0x1c
0x288f:     c3                                 	ret 
0x2890:     e8 fc ff ff ff                     	call 0x2891
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0x28a0 -- 0x28f5
0x28a0:     83 ec 1c                           	sub esp, 0x1c
0x28a3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x28a9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x28ad:     31 c0                              	xor eax, eax
0x28af:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x28b3:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x28b6:     85 c0                              	test eax, eax
0x28b8:     74 1e                              	je 0x28d8 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0x28ba:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x28be:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x28c5:     75 22                              	jne 0x28e9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x28c7:     8b 10                              	mov edx, dword ptr [eax]
0x28c9:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x28cd:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x28d0:     83 c4 1c                           	add esp, 0x1c
0x28d3:     ff e0                              	jmp eax
; data inside code section at 0x28d5 -- 0x28d8
0x28d5:     8d 76 00                                           |.v.             |
0x28d8:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x28dc:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x28e3:     75 04                              	jne 0x28e9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x28e5:     83 c4 1c                           	add esp, 0x1c
0x28e8:     c3                                 	ret 
0x28e9:     8d b4 26 00 00 00 00               	lea esi, [esi]
0x28f0:     e8 fc ff ff ff                     	call 0x28f1
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0x2900 -- 0x2925
0x2900:     83 ec 1c                           	sub esp, 0x1c
0x2903:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2909:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x290d:     31 c0                              	xor eax, eax
0x290f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2913:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x291a:     75 04                              	jne 0x2920 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x20>
0x291c:     83 c4 1c                           	add esp, 0x1c
0x291f:     c3                                 	ret 
0x2920:     e8 fc ff ff ff                     	call 0x2921
; section: .text._ZNK5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv
; function: _ZNK5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv at 0x2930 -- 0x2975
0x2930:     83 ec 1c                           	sub esp, 0x1c
0x2933:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x2937:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x293e:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x2942:     31 c9                              	xor ecx, ecx
0x2944:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2948:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x294b:     8b 52 08                           	mov edx, dword ptr [edx + 8]
0x294e:     89 08                              	mov dword ptr [eax], ecx
0x2950:     85 d2                              	test edx, edx
0x2952:     89 50 04                           	mov dword ptr [eax + 4], edx
0x2955:     74 04                              	je 0x295b <_ZNK5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv+0x2b>
0x2957:     f0 ff 42 04                        	lock inc dword ptr [edx + 4]
0x295b:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x295f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2966:     75 06                              	jne 0x296e <_ZNK5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv+0x3e>
0x2968:     83 c4 1c                           	add esp, 0x1c
0x296b:     c2 04 00                           	ret 4
0x296e:     66 90                              	nop 
0x2970:     e8 fc ff ff ff                     	call 0x2971
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0x2980 -- 0x29ae
0x2980:     83 ec 1c                           	sub esp, 0x1c
0x2983:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x298a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x298e:     31 d2                              	xor edx, edx
0x2990:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2994:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x299a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x299e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x29a5:     75 0c                              	jne 0x29b3 <function_29b3>
0x29a7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x29ab:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x29ae -- 0x29af
0x29ae:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x29af -- 0x29b0
; data inside code section at 0x29b0 -- 0x29b3
0x29b0:     ff ff ff                                           |...             |
; function: function_29b3 at 0x29b3 -- 0x29b8
0x29b3:     e8 fc ff ff ff                     	call 0x29b4
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev at 0x29c0 -- 0x29ee
0x29c0:     83 ec 1c                           	sub esp, 0x1c
0x29c3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x29ca:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x29ce:     31 d2                              	xor edx, edx
0x29d0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x29d4:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x29da:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x29de:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x29e5:     75 0c                              	jne 0x29f3 <function_29f3>
0x29e7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x29eb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x29ee -- 0x29ef
0x29ee:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x29ef -- 0x29f0
; data inside code section at 0x29f0 -- 0x29f3
0x29f0:     ff ff ff                                           |...             |
; function: function_29f3 at 0x29f3 -- 0x29f4
; dynamically linked function: __stack_chk_fail at 0x29f4 -- 0x29f5
; data inside code section at 0x29f5 -- 0x29f8
0x29f5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED0Ev at 0x2a00 -- 0x2a2e
0x2a00:     83 ec 1c                           	sub esp, 0x1c
0x2a03:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2a0a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2a0e:     31 d2                              	xor edx, edx
0x2a10:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2a14:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x2a1a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2a1e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a25:     75 0c                              	jne 0x2a33 <function_2a33>
0x2a27:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2a2b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2a2e -- 0x2a2f
0x2a2e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2a2f -- 0x2a30
; data inside code section at 0x2a30 -- 0x2a33
0x2a30:     ff ff ff                                           |...             |
; function: function_2a33 at 0x2a33 -- 0x2a34
; dynamically linked function: __stack_chk_fail at 0x2a34 -- 0x2a35
; data inside code section at 0x2a35 -- 0x2a38
0x2a35:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0x2a40 -- 0x2a6e
0x2a40:     83 ec 1c                           	sub esp, 0x1c
0x2a43:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2a4a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2a4e:     31 d2                              	xor edx, edx
0x2a50:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2a54:     c7 00 e8 f1 00 00                  	mov dword ptr [eax], 0xf1e8
0x2a5a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2a5e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a65:     75 0c                              	jne 0x2a73 <function_2a73>
0x2a67:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2a6b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2a6e -- 0x2a6f
0x2a6e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2a6f -- 0x2a70
; data inside code section at 0x2a70 -- 0x2a73
0x2a70:     ff ff ff                                           |...             |
; function: function_2a73 at 0x2a73 -- 0x2a74
; dynamically linked function: __stack_chk_fail at 0x2a74 -- 0x2a75
; data inside code section at 0x2a75 -- 0x2a78
0x2a75:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x2a80 -- 0x2aae
0x2a80:     83 ec 1c                           	sub esp, 0x1c
0x2a83:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2a8a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2a8e:     31 d2                              	xor edx, edx
0x2a90:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2a94:     c7 00 10 f0 00 00                  	mov dword ptr [eax], 0xf010
0x2a9a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2a9e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2aa5:     75 0c                              	jne 0x2ab3 <function_2ab3>
0x2aa7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2aab:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2aae -- 0x2aaf
0x2aae:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2aaf -- 0x2ab0
; data inside code section at 0x2ab0 -- 0x2ab3
0x2ab0:     ff ff ff                                           |...             |
; function: function_2ab3 at 0x2ab3 -- 0x2ab4
; dynamically linked function: __stack_chk_fail at 0x2ab4 -- 0x2ab5
; data inside code section at 0x2ab5 -- 0x2ab8
0x2ab5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0x2ac0 -- 0x2aee
0x2ac0:     83 ec 1c                           	sub esp, 0x1c
0x2ac3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2aca:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2ace:     31 d2                              	xor edx, edx
0x2ad0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2ad4:     c7 00 a8 ee 00 00                  	mov dword ptr [eax], 0xeea8
0x2ada:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2ade:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2ae5:     75 0c                              	jne 0x2af3 <function_2af3>
0x2ae7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2aeb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2aee -- 0x2aef
0x2aee:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2aef -- 0x2af0
; data inside code section at 0x2af0 -- 0x2af3
0x2af0:     ff ff ff                                           |...             |
; function: function_2af3 at 0x2af3 -- 0x2af4
; dynamically linked function: __stack_chk_fail at 0x2af4 -- 0x2af5
; data inside code section at 0x2af5 -- 0x2af8
0x2af5:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals211signal_baseD0Ev
; function: _ZN5boost8signals211signal_baseD0Ev at 0x2b00 -- 0x2b2e
0x2b00:     83 ec 1c                           	sub esp, 0x1c
0x2b03:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2b0a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2b0e:     31 d2                              	xor edx, edx
0x2b10:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2b14:     c7 00 d8 f0 00 00                  	mov dword ptr [eax], 0xf0d8
0x2b1a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2b1e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2b25:     75 0c                              	jne 0x2b33 <function_2b33>
0x2b27:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2b2b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2b2e -- 0x2b2f
0x2b2e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2b2f -- 0x2b30
; data inside code section at 0x2b30 -- 0x2b33
0x2b30:     ff ff ff                                           |...             |
; function: function_2b33 at 0x2b33 -- 0x2b34
; dynamically linked function: __stack_chk_fail at 0x2b34 -- 0x2b35
; data inside code section at 0x2b35 -- 0x2b38
0x2b35:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j at 0x2b40 -- 0x2b89
0x2b40:     83 ec 1c                           	sub esp, 0x1c
0x2b43:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2b4a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2b4e:     31 d2                              	xor edx, edx
0x2b50:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2b54:     83 7c 24 28 0a                     	cmp dword ptr [esp + 0x28], 0xa
0x2b59:     77 15                              	ja 0x2b70 <_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j+0x30>
0x2b5b:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x2b5f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2b66:     75 26                              	jne 0x2b8e <function_2b8e>
0x2b68:     83 c4 1c                           	add esp, 0x1c
0x2b6b:     c3                                 	ret 
; data inside code section at 0x2b6c -- 0x2b70
0x2b6c:     8d 74 26 00                                        |.t&.            |
0x2b70:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2b74:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2b7b:     90                                 	nop 
0x2b7c:     8d 74 26 00                        	lea esi, [esi]
0x2b80:     75 0c                              	jne 0x2b8e <function_2b8e>
0x2b82:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2b86:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2b89 -- 0x2b8a
0x2b89:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2b8a -- 0x2b8b
; data inside code section at 0x2b8b -- 0x2b8e
0x2b8b:     ff ff ff                                           |...             |
; function: function_2b8e at 0x2b8e -- 0x2b8f
; dynamically linked function: __stack_chk_fail at 0x2b8f -- 0x2b90
; data inside code section at 0x2b90 -- 0x2b93
0x2b90:     ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callD2Ev
; function: _ZN5boost17bad_function_callD1Ev at 0x2ba0 -- 0x2bce
0x2ba0:     83 ec 1c                           	sub esp, 0x1c
0x2ba3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2baa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2bae:     31 d2                              	xor edx, edx
0x2bb0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2bb4:     c7 00 f8 f0 00 00                  	mov dword ptr [eax], 0xf0f8
0x2bba:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2bbe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2bc5:     75 0c                              	jne 0x2bd3 <function_2bd3>
0x2bc7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2bcb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2bce -- 0x2bcf
0x2bce:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x2bcf -- 0x2bd0
; data inside code section at 0x2bd0 -- 0x2bd3
0x2bd0:     ff ff ff                                           |...             |
; function: function_2bd3 at 0x2bd3 -- 0x2bd4
; dynamically linked function: __stack_chk_fail at 0x2bd4 -- 0x2bd5
; data inside code section at 0x2bd5 -- 0x2bd8
0x2bd5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD2Ev
; function: _ZN5boost16thread_exceptionD1Ev at 0x2be0 -- 0x2c0e
0x2be0:     83 ec 1c                           	sub esp, 0x1c
0x2be3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2bea:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2bee:     31 d2                              	xor edx, edx
0x2bf0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2bf4:     c7 00 a0 ef 00 00                  	mov dword ptr [eax], 0xefa0
0x2bfa:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2bfe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2c05:     75 0c                              	jne 0x2c13 <function_2c13>
0x2c07:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2c0b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2c0e -- 0x2c0f
0x2c0e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x2c0f -- 0x2c10
; data inside code section at 0x2c10 -- 0x2c13
0x2c10:     ff ff ff                                           |...             |
; function: function_2c13 at 0x2c13 -- 0x2c14
; dynamically linked function: __stack_chk_fail at 0x2c14 -- 0x2c15
; data inside code section at 0x2c15 -- 0x2c18
0x2c15:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2c20 -- 0x2c27
0x2c20:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x2c25:     eb 09                              	jmp 0x2c30 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0x2c27 -- 0x2c30
0x2c27:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2c30 -- 0x2c4c
0x2c30:     56                                 	push esi
0x2c31:     53                                 	push ebx
0x2c32:     83 ec 24                           	sub esp, 0x24
0x2c35:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x2c39:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2c3f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2c43:     31 c0                              	xor eax, eax
0x2c45:     c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x2c4c -- 0x2c4d
0x2c4c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x2c4d -- 0x2c4e
; data inside code section at 0x2c4e -- 0x2c52
0x2c4e:     ff ff ff 89                                        |....            |
; function: function_2c52 at 0x2c52 -- 0x2c53
0x2c52:     c3                                 	ret 
; data inside code section at 0x2c53 -- 0x2ca5
0x2c53:     c7 00 d0 ef 00 00 8b 46  04 85 c0 89 43 04 74 08   |.......F....C.t.|
0x2c63:     8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 88 f2 00   |....$.R..F......|
0x2c73:     00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0x2c83:     a0 f2 00 00 c7 43 18 b4  f2 00 00 89 43 10 c7 44   |.....C......C..D|
0x2c93:     24 08 50 41 00 00 c7 44  24 04 00 f3 00 00 89 1c   |$.PA...D$.......|
0x2ca3:     24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x2ca5 -- 0x2ca6
; data inside code section at 0x2ca6 -- 0x2caf
0x2ca6:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x2caf -- 0x2cb0
; data inside code section at 0x2cb0 -- 0x2cb7
0x2cb0:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x2cb7 -- 0x2cb8
; data inside code section at 0x2cb8 -- 0x2cbb
0x2cb8:     ff ff ff                                           |...             |
; section: .text.unlikely
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.22 at 0x353e -- 0x356c
0x353e:     83 ec 2c                           	sub esp, 0x2c
0x3541:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3547:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x354b:     31 c0                              	xor eax, eax
0x354d:     c7 44 24 0c e0 46 00 00            	mov dword ptr [esp + 0xc], 0x46e0 ; "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x3555:     c7 44 24 08 1a 00 00 00            	mov dword ptr [esp + 8], 0x1a
0x355d:     c7 44 24 04 c0 32 00 00            	mov dword ptr [esp + 4], 0x32c0 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x3565:     c7 04 24 81 23 00 00               	mov dword ptr [esp], 0x2381 ; "!pthread_mutex_lock(m)"
; data inside code section at 0x356c -- 0x356d
0x356c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x356d -- 0x356e
; data inside code section at 0x356e -- 0x3572
0x356e:     ff ff ff 90                                        |....            |
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.23 at 0x3572 -- 0x35a5
0x3572:     83 ec 2c                           	sub esp, 0x2c
0x3575:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x357b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x357f:     31 c0                              	xor eax, eax
0x3581:     c7 44 24 0c 40 47 00 00            	mov dword ptr [esp + 0xc], 0x4740 ; "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x3589:     c7 44 24 08 1e 00 00 00            	mov dword ptr [esp + 8], 0x1e
0x3591:     c7 44 24 04 c0 32 00 00            	mov dword ptr [esp + 4], 0x32c0 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x3599:     c7 04 24 98 23 00 00               	mov dword ptr [esp], 0x2398 ; "!pthread_mutex_unlock(m)"
0x35a0:     e8 fc ff ff ff                     	call 0x35a1
; data inside code section at 0x35a5 -- 0x35a6
0x35a5:     90                                                 |.               |
; function: _ZN9CKeyStoreD2Ev.part.39 at 0x35a6 -- 0x35d4
0x35a6:     83 ec 2c                           	sub esp, 0x2c
0x35a9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x35af:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x35b3:     31 c0                              	xor eax, eax
0x35b5:     c7 44 24 0c a0 46 00 00            	mov dword ptr [esp + 0xc], 0x46a0 ; "boost::recursive_mutex::~recursive_mutex()"
0x35bd:     c7 44 24 08 5c 00 00 00            	mov dword ptr [esp + 8], 0x5c
0x35c5:     c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x35cd:     c7 04 24 b1 23 00 00               	mov dword ptr [esp], 0x23b1 ; "!pthread_mutex_destroy(&m)"
; data inside code section at 0x35d4 -- 0x35d5
0x35d4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x35d5 -- 0x35d6
; data inside code section at 0x35d6 -- 0x35da
0x35d6:     ff ff ff 90                                        |....            |
; function: _ZN5boost11unique_lockINS_5mutexEED2Ev.part.94 at 0x35da -- 0x3608
0x35da:     83 ec 2c                           	sub esp, 0x2c
0x35dd:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x35e3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x35e7:     31 c0                              	xor eax, eax
0x35e9:     c7 44 24 0c 77 48 00 00            	mov dword ptr [esp + 0xc], 0x4877 ; "void boost::mutex::unlock()"
0x35f1:     c7 44 24 08 3d 00 00 00            	mov dword ptr [esp + 8], 0x3d
0x35f9:     c7 44 24 04 38 33 00 00            	mov dword ptr [esp + 4], 0x3338 ; "/usr/include/boost/thread/pthread/mutex.hpp"
0x3601:     c7 04 24 e9 23 00 00               	mov dword ptr [esp], 0x23e9 ; "!pthread_mutex_unlock(&m)"
; data inside code section at 0x3608 -- 0x3609
0x3608:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3609 -- 0x360a
; data inside code section at 0x360a -- 0x360e
0x360a:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.198.part.199 at 0x360e -- 0x363c
0x360e:     83 ec 2c                           	sub esp, 0x2c
0x3611:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3617:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x361b:     31 c0                              	xor eax, eax
0x361d:     c7 44 24 0c a0 48 00 00            	mov dword ptr [esp + 0xc], 0x48a0 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>::invocation_state]"
0x3625:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0x362d:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x3635:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0x363c -- 0x363d
0x363c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x363d -- 0x363e
; data inside code section at 0x363e -- 0x3642
0x363e:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSB_EEEEENS1_5mutexEEEEptEv.isra.236.part.237 at 0x3642 -- 0x3675
0x3642:     83 ec 2c                           	sub esp, 0x2c
0x3645:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x364b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x364f:     31 c0                              	xor eax, eax
0x3651:     c7 44 24 0c 00 4d 00 00            	mov dword ptr [esp + 0xc], 0x4d00 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>]"
0x3659:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0x3661:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x3669:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
0x3670:     e8 fc ff ff ff                     	call 0x3671
; data inside code section at 0x3675 -- 0x3676
0x3675:     90                                                 |.               |
; function: _ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.270 at 0x3676 -- 0x36a4
0x3676:     83 ec 2c                           	sub esp, 0x2c
0x3679:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x367f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3683:     31 c0                              	xor eax, eax
0x3685:     c7 44 24 0c 00 4a 00 00            	mov dword ptr [esp + 0xc], 0x4a00 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >&]"
0x368d:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x3695:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x369d:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0x36a4 -- 0x36a5
0x36a4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x36a5 -- 0x36a6
; data inside code section at 0x36a6 -- 0x36aa
0x36a6:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED2Ev.part.362 at 0x36aa -- 0x36d8
0x36aa:     83 ec 2c                           	sub esp, 0x2c
0x36ad:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x36b3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x36b7:     31 c0                              	xor eax, eax
0x36b9:     c7 44 24 0c 20 4e 00 00            	mov dword ptr [esp + 0xc], 0x4e20 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>&]"
0x36c1:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x36c9:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x36d1:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0x36d8 -- 0x36d9
0x36d8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x36d9 -- 0x36da
; data inside code section at 0x36da -- 0x36de
0x36da:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED2Ev.part.514 at 0x36de -- 0x370c
0x36de:     83 ec 2c                           	sub esp, 0x2c
0x36e1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x36e7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x36eb:     31 c0                              	xor eax, eax
0x36ed:     c7 44 24 0c 60 7b 00 00            	mov dword ptr [esp + 0xc], 0x7b60 ; "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x36f5:     c7 44 24 08 59 02 00 00            	mov dword ptr [esp + 8], 0x259
0x36fd:     c7 44 24 04 c8 33 00 00            	mov dword ptr [esp + 4], 0x33c8 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x3705:     c7 04 24 11 24 00 00               	mov dword ptr [esp], 0x2411 ; "is_valid()"
; data inside code section at 0x370c -- 0x370d
0x370c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x370d -- 0x370e
; data inside code section at 0x370e -- 0x3712
0x370e:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_.part.543 at 0x3712 -- 0x3745
0x3712:     83 ec 2c                           	sub esp, 0x2c
0x3715:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x371b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x371f:     31 c0                              	xor eax, eax
0x3721:     c7 44 24 0c 00 73 00 00            	mov dword ptr [esp + 0xc], 0x7300 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::unchecked_push_back(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference = const boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>&]"
0x3729:     c7 44 24 08 fb 02 00 00            	mov dword ptr [esp + 8], 0x2fb
0x3731:     c7 44 24 04 c8 33 00 00            	mov dword ptr [esp + 4], 0x33c8 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x3739:     c7 04 24 1c 24 00 00               	mov dword ptr [esp], 0x241c ; "!full()"
0x3740:     e8 fc ff ff ff                     	call 0x3741
; data inside code section at 0x3745 -- 0x3746
0x3745:     90                                                 |.               |
; function: _ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_.isra.570.part.571 at 0x3746 -- 0x3774
0x3746:     83 ec 2c                           	sub esp, 0x2c
0x3749:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x374f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3753:     31 c0                              	xor eax, eax
0x3755:     c7 44 24 0c 40 63 00 00            	mov dword ptr [esp + 0xc], 0x6340 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0x375d:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0x3765:     c7 44 24 04 fc 33 00 00            	mov dword ptr [esp + 4], 0x33fc ; "/usr/include/boost/optional/optional.hpp"
0x376d:     c7 04 24 24 24 00 00               	mov dword ptr [esp], 0x2424 ; "this->is_initialized()"
; data inside code section at 0x3774 -- 0x3775
0x3774:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3775 -- 0x3776
; data inside code section at 0x3776 -- 0x377a
0x3776:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_.part.617 at 0x377a -- 0x37a8
0x377a:     83 ec 2c                           	sub esp, 0x2c
0x377d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3783:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3787:     31 c0                              	xor eax, eax
0x3789:     c7 44 24 0c 20 4e 00 00            	mov dword ptr [esp + 0xc], 0x4e20 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>&]"
0x3791:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x3799:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x37a1:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0x37a8 -- 0x37a9
0x37a8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x37a9 -- 0x37aa
; data inside code section at 0x37aa -- 0x37ad
0x37aa:     ff ff ff                                           |...             |
; section: .text._ZN9CKeyStoreD2Ev
; function: _ZN9CKeyStoreD1Ev at 0x37b0 -- 0x3805
0x37b0:     53                                 	push ebx
0x37b1:     83 ec 28                           	sub esp, 0x28
0x37b4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x37b8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x37be:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x37c2:     31 c0                              	xor eax, eax
0x37c4:     c7 03 e8 ee 00 00                  	mov dword ptr [ebx], 0xeee8
0x37ca:     8d 43 04                           	lea eax, [ebx + 4]
0x37cd:     89 04 24                           	mov dword ptr [esp], eax
0x37d0:     e8 fc ff ff ff                     	call 0x37d1
0x37d5:     85 c0                              	test eax, eax
0x37d7:     75 21                              	jne 0x37fa <_ZN9CKeyStoreD1Ev+0x4a>
0x37d9:     83 c3 1c                           	add ebx, 0x1c
0x37dc:     89 1c 24                           	mov dword ptr [esp], ebx
0x37df:     e8 fc ff ff ff                     	call 0x37e0
0x37e4:     85 c0                              	test eax, eax
0x37e6:     75 22                              	jne 0x380a <function_380a>
0x37e8:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x37ec:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x37f3:     75 10                              	jne 0x3805 <_ZN9CKeyStoreD1Ev+0x50>
0x37f5:     83 c4 28                           	add esp, 0x28
0x37f8:     5b                                 	pop ebx
0x37f9:     c3                                 	ret 
0x37fa:     8d b6 00 00 00 00                  	lea esi, [esi]
0x3800:     e8 51 35 00 00                     	call 0x6d56 <function_6d56>
; data inside code section at 0x3805 -- 0x3806
0x3805:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3806 -- 0x3807
; data inside code section at 0x3807 -- 0x380a
0x3807:     ff ff ff                                           |...             |
; function: function_380a at 0x380a -- 0x3829
0x380a:     c7 44 24 0c a0 46 00 00            	mov dword ptr [esp + 0xc], 0x46a0 ; "boost::recursive_mutex::~recursive_mutex()"
0x3812:     c7 44 24 08 5e 00 00 00            	mov dword ptr [esp + 8], 0x5e
0x381a:     c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x3822:     c7 04 24 cc 23 00 00               	mov dword ptr [esp], 0x23cc ; "!pthread_cond_destroy(&cond)"
; data inside code section at 0x3829 -- 0x382a
0x3829:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x382a -- 0x382b
; data inside code section at 0x382b -- 0x382e
0x382b:     ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callD0Ev
; function: _ZN5boost17bad_function_callD0Ev at 0x3830 -- 0x384d
0x3830:     53                                 	push ebx
0x3831:     83 ec 28                           	sub esp, 0x28
0x3834:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3838:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x383e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3842:     31 c0                              	xor eax, eax
0x3844:     c7 03 f8 f0 00 00                  	mov dword ptr [ebx], 0xf0f8
0x384a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x384d -- 0x384e
0x384d:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x384e -- 0x384f
; data inside code section at 0x384f -- 0x3851
0x384f:     ff ff                                              |..              |
; function: function_3851 at 0x3851 -- 0x386c
0x3851:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3857:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x385d:     75 0d                              	jne 0x386c <function_3851+0x16>
0x385f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3863:     83 c4 28                           	add esp, 0x28
0x3866:     5b                                 	pop ebx
0x3867:     e9 fc ff ff ff                     	jmp 0x3868
; data inside code section at 0x386c -- 0x386d
0x386c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x386d -- 0x386e
; data inside code section at 0x386e -- 0x3871
0x386e:     ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD2Ev
; function: _ZN5boost10lock_errorD1Ev at 0x3880 -- 0x38ae
0x3880:     83 ec 1c                           	sub esp, 0x1c
0x3883:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x388a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x388e:     31 d2                              	xor edx, edx
0x3890:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x3894:     c7 00 a0 ef 00 00                  	mov dword ptr [eax], 0xefa0
0x389a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x389e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x38a5:     75 0c                              	jne 0x38b3 <function_38b3>
0x38a7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x38ab:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x38ae -- 0x38af
0x38ae:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x38af -- 0x38b0
; data inside code section at 0x38b0 -- 0x38b3
0x38b0:     ff ff ff                                           |...             |
; function: function_38b3 at 0x38b3 -- 0x38b4
; dynamically linked function: __stack_chk_fail at 0x38b4 -- 0x38b5
; data inside code section at 0x38b5 -- 0x38b8
0x38b5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD0Ev
; function: _ZN5boost16thread_exceptionD0Ev at 0x38c0 -- 0x38dd
0x38c0:     53                                 	push ebx
0x38c1:     83 ec 28                           	sub esp, 0x28
0x38c4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x38c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x38ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x38d2:     31 c0                              	xor eax, eax
0x38d4:     c7 03 a0 ef 00 00                  	mov dword ptr [ebx], 0xefa0
0x38da:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x38dd -- 0x38de
0x38dd:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x38de -- 0x38df
; data inside code section at 0x38df -- 0x38e1
0x38df:     ff ff                                              |..              |
; function: function_38e1 at 0x38e1 -- 0x38fc
0x38e1:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x38e7:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x38ed:     75 0d                              	jne 0x38fc <function_38e1+0x16>
0x38ef:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x38f3:     83 c4 28                           	add esp, 0x28
0x38f6:     5b                                 	pop ebx
0x38f7:     e9 fc ff ff ff                     	jmp 0x38f8
; data inside code section at 0x38fc -- 0x38fd
0x38fc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x38fd -- 0x38fe
; data inside code section at 0x38fe -- 0x3901
0x38fe:     ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD0Ev
; function: _ZN5boost10lock_errorD0Ev at 0x3910 -- 0x392d
0x3910:     53                                 	push ebx
0x3911:     83 ec 28                           	sub esp, 0x28
0x3914:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3918:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x391e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3922:     31 c0                              	xor eax, eax
0x3924:     c7 03 a0 ef 00 00                  	mov dword ptr [ebx], 0xefa0
0x392a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x392d -- 0x392e
0x392d:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x392e -- 0x392f
; data inside code section at 0x392f -- 0x3948
0x392f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x393f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3948 -- 0x3949
; data inside code section at 0x3949 -- 0x394d
0x3949:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x394d -- 0x394e
; data inside code section at 0x394e -- 0x3951
0x394e:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x3960 -- 0x3967
0x3960:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x3965:     eb 09                              	jmp 0x3970 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0x3967 -- 0x3970
0x3967:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x3970 -- 0x398c
0x3970:     56                                 	push esi
0x3971:     53                                 	push ebx
0x3972:     83 ec 24                           	sub esp, 0x24
0x3975:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3979:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x397f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3983:     31 c0                              	xor eax, eax
0x3985:     c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x398c -- 0x398d
0x398c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x398d -- 0x398e
; data inside code section at 0x398e -- 0x3990
0x398e:     ff ff                                              |..              |
; function: function_3990 at 0x3990 -- 0x39e7
0x3990:     ff 89 c3 c7 00 d0                  	dec dword ptr [ecx - 0x2fff383d]
0x3996:     ef                                 	out dx, eax
0x3997:     00 00                              	add byte ptr [eax], al
0x3999:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x399c:     85 c0                              	test eax, eax
0x399e:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x39a1:     74 08                              	je 0x39ab <function_3990+0x1b>
0x39a3:     8b 10                              	mov edx, dword ptr [eax]
0x39a5:     89 04 24                           	mov dword ptr [esp], eax
0x39a8:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x39ab:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0x39ae:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x39b2:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x39b9:     c7 03 88 f2 00 00                  	mov dword ptr [ebx], 0xf288
0x39bf:     89 43 08                           	mov dword ptr [ebx + 8], eax
0x39c2:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x39c5:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x39c8:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x39cb:     c7 43 14 a0 f2 00 00               	mov dword ptr [ebx + 0x14], 0xf2a0
0x39d2:     c7 43 18 b4 f2 00 00               	mov dword ptr [ebx + 0x18], 0xf2b4
0x39d9:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x39dc:     8d 43 18                           	lea eax, [ebx + 0x18]
0x39df:     75 06                              	jne 0x39e7 <function_3990+0x56>
0x39e1:     83 c4 24                           	add esp, 0x24
0x39e4:     5b                                 	pop ebx
0x39e5:     5e                                 	pop esi
0x39e6:     c3                                 	ret 
; data inside code section at 0x39e7 -- 0x39e8
0x39e7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x39e8 -- 0x39e9
; data inside code section at 0x39e9 -- 0x39f2
0x39e9:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x39f2 -- 0x39f3
; data inside code section at 0x39f3 -- 0x39fa
0x39f3:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x39fa -- 0x39fb
; data inside code section at 0x39fb -- 0x39fe
0x39fb:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x3a00 -- 0x3a07
0x3a00:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x3a05:     eb 09                              	jmp 0x3a10 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv>
; data inside code section at 0x3a07 -- 0x3a10
0x3a07:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x3a10 -- 0x3a2c
0x3a10:     56                                 	push esi
0x3a11:     53                                 	push ebx
0x3a12:     83 ec 24                           	sub esp, 0x24
0x3a15:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3a19:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3a1f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3a23:     31 c0                              	xor eax, eax
0x3a25:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x3a2c -- 0x3a2d
0x3a2c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3a2d -- 0x3a2e
; data inside code section at 0x3a2e -- 0x3a30
0x3a2e:     ff ff                                              |..              |
; function: function_3a30 at 0x3a30 -- 0x3a94
0x3a30:     ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0x3a36:     c7 03 b8 ef 00 00                  	mov dword ptr [ebx], 0xefb8
0x3a3c:     c7 43 08 d0 ef 00 00               	mov dword ptr [ebx + 8], 0xefd0
0x3a43:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x3a46:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x3a49:     85 c0                              	test eax, eax
0x3a4b:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3a4e:     74 08                              	je 0x3a58 <function_3a30+0x28>
0x3a50:     8b 10                              	mov edx, dword ptr [eax]
0x3a52:     89 04 24                           	mov dword ptr [esp], eax
0x3a55:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x3a58:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x3a5b:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3a5f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3a66:     c7 43 08 44 f0 00 00               	mov dword ptr [ebx + 8], 0xf044
0x3a6d:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3a70:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x3a73:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x3a76:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x3a79:     c7 03 28 f0 00 00                  	mov dword ptr [ebx], 0xf028
0x3a7f:     c7 43 1c 54 f0 00 00               	mov dword ptr [ebx + 0x1c], 0xf054
0x3a86:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x3a89:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0x3a8c:     75 06                              	jne 0x3a94 <function_3a30+0x63>
0x3a8e:     83 c4 24                           	add esp, 0x24
0x3a91:     5b                                 	pop ebx
0x3a92:     5e                                 	pop esi
0x3a93:     c3                                 	ret 
; data inside code section at 0x3a94 -- 0x3a95
0x3a94:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3a95 -- 0x3a96
; data inside code section at 0x3a96 -- 0x3aa7
0x3a96:     ff ff ff 89 c6 89 1c 24  e8 dd 37 00 00 89 1c 24   |.......$..7....$|
0x3aa6:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3aa7 -- 0x3aa8
; data inside code section at 0x3aa8 -- 0x3aaf
0x3aa8:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3aaf -- 0x3ab0
; data inside code section at 0x3ab0 -- 0x3ab3
0x3ab0:     ff ff ff                                           |...             |
; section: .text._ZN9CKeyStoreD0Ev
; function: _ZN9CKeyStoreD0Ev at 0x3ac0 -- 0x3ae0
0x3ac0:     53                                 	push ebx
0x3ac1:     83 ec 28                           	sub esp, 0x28
0x3ac4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3ac8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3ace:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3ad2:     31 c0                              	xor eax, eax
0x3ad4:     c7 03 e8 ee 00 00                  	mov dword ptr [ebx], 0xeee8
0x3ada:     8d 43 04                           	lea eax, [ebx + 4]
0x3add:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3ae0 -- 0x3ae1
0x3ae0:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x3ae1 -- 0x3ae2
; data inside code section at 0x3ae2 -- 0x3af0
0x3ae2:     ff ff ff 85 c0 75 29 8d  43 1c 89 04 24 e8         |.....u).C...$.  |
; dynamically linked function: pthread_cond_destroy at 0x3af0 -- 0x3af1
; data inside code section at 0x3af1 -- 0x3b0e
0x3af1:     ff ff ff 85 c0 75 24 8b  44 24 1c 65 33 05 14 00   |.....u$.D$.e3...|
0x3b01:     00 00 75 12 89 5c 24 30  83 c4 28 5b e9            |..u..\$0..([.   |
; dynamically linked function: _ZdlPv at 0x3b0e -- 0x3b0f
; data inside code section at 0x3b0f -- 0x3b18
0x3b0f:     ff ff ff e8 4f 35 00 00  e8                        |....O5...       |
; dynamically linked function: __stack_chk_fail at 0x3b18 -- 0x3b19
; data inside code section at 0x3b19 -- 0x3b3c
0x3b19:     ff ff ff c7 44 24 0c a0  46 00 00 c7 44 24 08 5e   |....D$..F...D$.^|
0x3b29:     00 00 00 c7 44 24 04 00  33 00 00 c7 04 24 cc 23   |....D$..3....$.#|
0x3b39:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x3b3c -- 0x3b3d
; data inside code section at 0x3b3d -- 0x3b40
0x3b3d:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0x3b40 -- 0x3b47
0x3b40:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x3b45:     eb 09                              	jmp 0x3b50 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv>
; data inside code section at 0x3b47 -- 0x3b50
0x3b47:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0x3b50 -- 0x3b6c
0x3b50:     56                                 	push esi
0x3b51:     53                                 	push ebx
0x3b52:     83 ec 24                           	sub esp, 0x24
0x3b55:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3b59:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3b5f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3b63:     31 c0                              	xor eax, eax
0x3b65:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x3b6c -- 0x3b6d
0x3b6c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3b6d -- 0x3b6e
; data inside code section at 0x3b6e -- 0x3b73
0x3b6e:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt13runtime_error at 0x3b73 -- 0x3b86
; data inside code section at 0x3b86 -- 0x3b87
0x3b86:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x3b87 -- 0x3b88
; data inside code section at 0x3b88 -- 0x3b8a
0x3b88:     ff ff                                              |..              |
; function: function_3b8a at 0x3b8a -- 0x3be6
0x3b8a:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x3b90:     f8                                 	clc 
0x3b91:     f0 00 00                           	lock add byte ptr [eax], al
0x3b94:     c7 43 08 d0 ef 00 00               	mov dword ptr [ebx + 8], 0xefd0
0x3b9b:     85 c0                              	test eax, eax
0x3b9d:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3ba0:     74 08                              	je 0x3baa <function_3b8a+0x20>
0x3ba2:     8b 10                              	mov edx, dword ptr [eax]
0x3ba4:     89 04 24                           	mov dword ptr [esp], eax
0x3ba7:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x3baa:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x3bad:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3bb1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3bb8:     c7 43 08 84 f1 00 00               	mov dword ptr [ebx + 8], 0xf184
0x3bbf:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3bc2:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x3bc5:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x3bc8:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x3bcb:     c7 03 68 f1 00 00                  	mov dword ptr [ebx], 0xf168
0x3bd1:     c7 43 1c 94 f1 00 00               	mov dword ptr [ebx + 0x1c], 0xf194
0x3bd8:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x3bdb:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0x3bde:     75 06                              	jne 0x3be6 <function_3b8a+0x5b>
0x3be0:     83 c4 24                           	add esp, 0x24
0x3be3:     5b                                 	pop ebx
0x3be4:     5e                                 	pop esi
0x3be5:     c3                                 	ret 
; data inside code section at 0x3be6 -- 0x3be7
0x3be6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3be7 -- 0x3be8
; data inside code section at 0x3be8 -- 0x3bef
0x3be8:     ff ff ff 89 c6 89 1c                               |.......         |
; function: function_3bef at 0x3bef -- 0x3bf3
0x3bef:     24 e8                              	and al, 0xe8
0x3bf1:     eb 2a                              	jmp 0x3c1d <function_3c1d>
; data inside code section at 0x3bf3 -- 0x3bf5
0x3bf3:     00 00                                              |..              |
; function: function_3bf5 at 0x3bf5 -- 0x3bf6
; data inside code section at 0x3bf6 -- 0x3bf9
0x3bf6:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0x3bf9 -- 0x3bfa
; data inside code section at 0x3bfa -- 0x3c01
0x3bfa:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3c01 -- 0x3c02
; data inside code section at 0x3c02 -- 0x3c0b
0x3c02:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3c0b -- 0x3c0c
; data inside code section at 0x3c0c -- 0x3c0f
0x3c0c:     ff ff ff                                           |...             |
; function: function_3c0f at 0x3c0f -- 0x3c11
0x3c0f:     eb e4                              	jmp 0x3bf5 <function_3bf5>
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x3c20 -- 0x3c47
0x3c20:     83 ec 2c                           	sub esp, 0x2c
0x3c23:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x3c27:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3c2b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3c31:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3c35:     31 c0                              	xor eax, eax
0x3c37:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x3c3b:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x3c3e:     c7 03 d0 ee 00 00                  	mov dword ptr [ebx], 0xeed0
0x3c44:     8d 50 f4                           	lea edx, [eax - 0xc]
; data inside code section at 0x3c47 -- 0x3c49
0x3c47:     81 fa                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3c49 -- 0x3c52
; data inside code section at 0x3c52 -- 0x3c53
0x3c52:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x3c53 -- 0x3c54
; data inside code section at 0x3c54 -- 0x3c56
0x3c54:     ff ff                                              |..              |
; function: function_3c56 at 0x3c56 -- 0x3c70
0x3c56:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3c5c:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x3c62:     75 33                              	jne 0x3c97 <function_3c97>
0x3c64:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x3c68:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x3c6c:     83 c4 2c                           	add esp, 0x2c
0x3c6f:     c3                                 	ret 
; function: function_3c70 at 0x3c70 -- 0x3c71
; dynamically linked function: pthread_cancel at 0x3c71 -- 0x3c90
; data inside code section at 0x3c90 -- 0x3c91
0x3c90:     e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x3c91 -- 0x3c92
; data inside code section at 0x3c92 -- 0x3c95
0x3c92:     ff ff ff                                           |...             |
; function: function_3c95 at 0x3c95 -- 0x3c97
0x3c95:     eb b8                              	jmp 0x3c4f
; function: function_3c97 at 0x3c97 -- 0x3c98
; dynamically linked function: __stack_chk_fail at 0x3c98 -- 0x3c99
; data inside code section at 0x3c99 -- 0x3c9c
0x3c99:     ff ff ff                                           |...             |
; function: function_3c9c at 0x3c9c -- 0x3ca7
0x3c9c:     8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x3c9f:     8d 71 ff                           	lea esi, [ecx - 1]
0x3ca2:     89 70 fc                           	mov dword ptr [eax - 4], esi
0x3ca5:     eb da                              	jmp 0x3c81
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x3cb0 -- 0x3cd7
0x3cb0:     83 ec 2c                           	sub esp, 0x2c
0x3cb3:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x3cb7:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3cbb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3cc1:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3cc5:     31 c0                              	xor eax, eax
0x3cc7:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x3ccb:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x3cce:     c7 03 d0 ee 00 00                  	mov dword ptr [ebx], 0xeed0
0x3cd4:     8d 50 f4                           	lea edx, [eax - 0xc]
; data inside code section at 0x3cd7 -- 0x3cd9
0x3cd7:     81 fa                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3cd9 -- 0x3ce2
; data inside code section at 0x3ce2 -- 0x3ce3
0x3ce2:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x3ce3 -- 0x3ce4
; data inside code section at 0x3ce4 -- 0x3ceb
0x3ce4:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x3ceb -- 0x3cec
; data inside code section at 0x3cec -- 0x3cee
0x3cec:     ff ff                                              |..              |
; function: function_3cee at 0x3cee -- 0x3d08
0x3cee:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3cf4:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x3cfa:     75 33                              	jne 0x3d2f <function_3d2f>
0x3cfc:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x3d00:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x3d04:     83 c4 2c                           	add esp, 0x2c
0x3d07:     c3                                 	ret 
; function: function_3d08 at 0x3d08 -- 0x3d09
; dynamically linked function: pthread_cancel at 0x3d09 -- 0x3d28
; data inside code section at 0x3d28 -- 0x3d29
0x3d28:     e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x3d29 -- 0x3d2a
; data inside code section at 0x3d2a -- 0x3d2d
0x3d2a:     ff ff ff                                           |...             |
; function: function_3d2d at 0x3d2d -- 0x3d2f
0x3d2d:     eb b0                              	jmp 0x3cdf
; function: function_3d2f at 0x3d2f -- 0x3d30
; dynamically linked function: __stack_chk_fail at 0x3d30 -- 0x3d31
; data inside code section at 0x3d31 -- 0x3d34
0x3d31:     ff ff ff                                           |...             |
; function: function_3d34 at 0x3d34 -- 0x3d3f
0x3d34:     8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x3d37:     8d 71 ff                           	lea esi, [ecx - 1]
0x3d3a:     89 70 fc                           	mov dword ptr [eax - 4], esi
0x3d3d:     eb da                              	jmp 0x3d19
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x3d40 -- 0x3d96
0x3d40:     83 ec 2c                           	sub esp, 0x2c
0x3d43:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x3d47:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3d4b:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x3d4f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3d55:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3d59:     31 c0                              	xor eax, eax
0x3d5b:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x3d5f:     8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x3d62:     8b 53 f4                           	mov edx, dword ptr [ebx - 0xc]
0x3d65:     85 d2                              	test edx, edx
0x3d67:     74 27                              	je 0x3d90 <_ZNK5boost6system12system_error4whatEv+0x50>
0x3d69:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3d6d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3d74:     89 d8                              	mov eax, ebx
0x3d76:     0f 85 9e 00 00 00                  	jne 0x3e1a <function_3e1a>
0x3d7c:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x3d80:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x3d84:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x3d88:     83 c4 2c                           	add esp, 0x2c
0x3d8b:     c3                                 	ret 
; data inside code section at 0x3d8c -- 0x3d90
0x3d8c:     8d 74 26 00                                        |.t&.            |
0x3d90:     89 34 24                           	mov dword ptr [esp], esi
0x3d93:     8d 5e 10                           	lea ebx, [esi + 0x10]
; data inside code section at 0x3d96 -- 0x3d97
0x3d96:     e8                                                 |.               |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x3d97 -- 0x3d98
; data inside code section at 0x3d98 -- 0x3da1
0x3d98:     ff ff ff 89 04 24 89 c7  e8                        |.....$...       |
; dynamically linked function: strlen at 0x3da1 -- 0x3da2
; data inside code section at 0x3da2 -- 0x3db1
0x3da2:     ff ff ff 89 7c 24 04 89  1c 24 89 44 24 08 e8      |....|$...$.D$.. |
; dynamically linked function: _ZNSs6assignEPKcj at 0x3db1 -- 0x3db2
; data inside code section at 0x3db2 -- 0x3dbf
0x3db2:     ff ff ff 8b 46 10 8b 40  f4 85 c0 75 41            |....F..@...uA   |
; function: function_3dbf at 0x3dbf -- 0x3dc0
; data inside code section at 0x3dc0 -- 0x3de4
0x3dc0:     46 0c 8d 7c 24 14 8b 4e  08 8b 10 89 4c 24 08 89   |F..|$..N....L$..|
0x3dd0:     44 24 04 89 3c 24 ff 52  0c 83 ec 04 89 7c 24 04   |D$..<$.R.....|$.|
0x3de0:     89 1c 24 e8                                        |..$.            |
; dynamically linked function: _ZNSs6appendERKSs at 0x3de4 -- 0x3de5
; data inside code section at 0x3de5 -- 0x3df1
0x3de5:     ff ff ff 8b 44 24 14 8d  50 f4 81 fa               |....D$..P...    |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3df1 -- 0x3dff
; data inside code section at 0x3dff -- 0x3e14
0x3dff:     90 c7 44 24 08 02 00 00  00 c7 44 24 04 3b 24 00   |..D$......D$.;$.|
0x3e0f:     00 89 1c 24 e8                                     |...$.           |
; dynamically linked function: _ZNSs6appendEPKcj at 0x3e14 -- 0x3e15
; data inside code section at 0x3e15 -- 0x3e18
0x3e15:     ff ff ff                                           |...             |
; function: function_3e18 at 0x3e18 -- 0x3e1a
0x3e18:     eb a5                              	jmp 0x3dbf <function_3dbf>
; function: function_3e1a at 0x3e1a -- 0x3e1b
; dynamically linked function: __stack_chk_fail at 0x3e1b -- 0x3e1c
; data inside code section at 0x3e1c -- 0x3e1f
0x3e1c:     ff ff ff                                           |...             |
; function: function_3e1f at 0x3e1f -- 0x3e20
; dynamically linked function: pthread_cancel at 0x3e20 -- 0x3e3f
; data inside code section at 0x3e3f -- 0x3e40
0x3e3f:     e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x3e40 -- 0x3e41
; data inside code section at 0x3e41 -- 0x3e44
0x3e41:     ff ff ff                                           |...             |
; function: function_3e44 at 0x3e44 -- 0x3e46
0x3e44:     eb b1                              	jmp 0x3df7
; data inside code section at 0x3e46 -- 0x3e47
0x3e46:     89                                                 |.               |
; function: function_3e47 at 0x3e47 -- 0x3e48
0x3e47:     c3                                 	ret 
; data inside code section at 0x3e48 -- 0x3e4c
0x3e48:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x3e4c -- 0x3e4d
; data inside code section at 0x3e4d -- 0x3e52
0x3e4d:     ff ff ff 89 d8                                     |.....           |
; function: function_3e52 at 0x3e52 -- 0x3e53
; data inside code section at 0x3e53 -- 0x3e56
0x3e53:     04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x3e56 -- 0x3e57
; data inside code section at 0x3e57 -- 0x3e5e
0x3e57:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x3e5e -- 0x3e5f
; data inside code section at 0x3e5f -- 0x3e63
0x3e5f:     ff ff ff 89                                        |....            |
; function: function_3e63 at 0x3e63 -- 0x3e64
0x3e63:     c3                                 	ret 
; data inside code section at 0x3e64 -- 0x3e65
0x3e64:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x3e65 -- 0x3e66
; data inside code section at 0x3e66 -- 0x3e69
0x3e66:     ff ff ff                                           |...             |
; function: function_3e69 at 0x3e69 -- 0x3e6e
0x3e69:     e9 fb fe ff ff                     	jmp 0x3d69
; data inside code section at 0x3e6e -- 0x3e70
0x3e6e:     66 90                                              |f.              |
; function: function_3e70 at 0x3e70 -- 0x3e72
0x3e70:     eb e0                              	jmp 0x3e52 <function_3e52>
; function: function_3e72 at 0x3e72 -- 0x3e7d
0x3e72:     8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x3e75:     8d 59 ff                           	lea ebx, [ecx - 1]
0x3e78:     89 58 fc                           	mov dword ptr [eax - 4], ebx
0x3e7b:     eb b3                              	jmp 0x3e30
; data inside code section at 0x3e7d -- 0x3e7e
0x3e7d:     83                                                 |.               |
; function: function_3e7e at 0x3e7e -- 0x3e81
0x3e7e:     c2 01 89                           	ret 0x8901
; data inside code section at 0x3e81 -- 0x3e86
0x3e81:     04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x3e86 -- 0x3e87
; data inside code section at 0x3e87 -- 0x3e8b
0x3e87:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x3e8b -- 0x3e8c
; data inside code section at 0x3e8c -- 0x3e8f
0x3e8c:     ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x3e90 -- 0x3ee1
0x3e90:     53                                 	push ebx
0x3e91:     83 ec 28                           	sub esp, 0x28
0x3e94:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3e98:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3e9e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3ea2:     31 c0                              	xor eax, eax
0x3ea4:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x3ea7:     c7 03 d0 ef 00 00                  	mov dword ptr [ebx], 0xefd0
0x3ead:     85 c0                              	test eax, eax
0x3eaf:     74 0c                              	je 0x3ebd <_ZN5boost9exceptionD1Ev+0x2d>
0x3eb1:     8b 10                              	mov edx, dword ptr [eax]
0x3eb3:     89 04 24                           	mov dword ptr [esp], eax
0x3eb6:     ff 52 10                           	call dword ptr [edx + 0x10]
0x3eb9:     84 c0                              	test al, al
0x3ebb:     75 1b                              	jne 0x3ed8 <_ZN5boost9exceptionD1Ev+0x48>
0x3ebd:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3ec1:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3ec8:     75 17                              	jne 0x3ee1 <_ZN5boost9exceptionD1Ev+0x4f>
0x3eca:     83 c4 28                           	add esp, 0x28
0x3ecd:     5b                                 	pop ebx
0x3ece:     66 90                              	nop 
0x3ed0:     c3                                 	ret 
; data inside code section at 0x3ed1 -- 0x3ed8
0x3ed1:     8d b4 26 00 00 00 00                               |..&....         |
0x3ed8:     c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x3edf:     eb dc                              	jmp 0x3ebd <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0x3ee1 -- 0x3ee2
0x3ee1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3ee2 -- 0x3ee3
; data inside code section at 0x3ee3 -- 0x3ee7
0x3ee3:     ff ff ff 83                                        |....            |
; function: function_3ee7 at 0x3ee7 -- 0x3eea
0x3ee7:     c2 01 89                           	ret 0x8901
; data inside code section at 0x3eea -- 0x3eef
0x3eea:     04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x3eef -- 0x3ef0
; data inside code section at 0x3ef0 -- 0x3ef4
0x3ef0:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x3ef4 -- 0x3ef5
; data inside code section at 0x3ef5 -- 0x3ef8
0x3ef5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x3f00 -- 0x3f0a
0x3f00:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x3f05:     e9 06 3f 00 00                     	jmp 0x7e10 <function_7e10>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x3f10 -- 0x3f57
0x3f10:     53                                 	push ebx
0x3f11:     83 ec 28                           	sub esp, 0x28
0x3f14:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3f18:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3f1e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3f22:     31 c0                              	xor eax, eax
0x3f24:     c7 03 e8 ef 00 00                  	mov dword ptr [ebx], 0xefe8
0x3f2a:     8d 43 08                           	lea eax, [ebx + 8]
0x3f2d:     c7 43 08 fc ef 00 00               	mov dword ptr [ebx + 8], 0xeffc
0x3f34:     89 04 24                           	mov dword ptr [esp], eax
0x3f37:     e8 64 3e 00 00                     	call 0x7da0 <function_7da0>
0x3f3c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3f40:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3f47:     c7 03 a0 ef 00 00                  	mov dword ptr [ebx], 0xefa0
0x3f4d:     75 0d                              	jne 0x3f5c <function_3f5c>
0x3f4f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3f53:     83 c4 28                           	add esp, 0x28
0x3f56:     5b                                 	pop ebx
; data inside code section at 0x3f57 -- 0x3f58
0x3f57:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3f58 -- 0x3f59
; data inside code section at 0x3f59 -- 0x3f5c
0x3f59:     ff ff ff                                           |...             |
; function: function_3f5c at 0x3f5c -- 0x3f5d
; dynamically linked function: __stack_chk_fail at 0x3f5d -- 0x3f5e
; data inside code section at 0x3f5e -- 0x3f61
0x3f5e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x3f70 -- 0x3f7a
0x3f70:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x3f75:     e9 76 3f 00 00                     	jmp 0x7ef0 <function_7ef0>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x3f80 -- 0x3fa7
0x3f80:     53                                 	push ebx
0x3f81:     83 ec 28                           	sub esp, 0x28
0x3f84:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3f88:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3f8e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3f92:     31 c0                              	xor eax, eax
0x3f94:     c7 03 48 f2 00 00                  	mov dword ptr [ebx], 0xf248
0x3f9a:     8d 43 14                           	lea eax, [ebx + 0x14]
0x3f9d:     c7 43 14 58 f2 00 00               	mov dword ptr [ebx + 0x14], 0xf258
0x3fa4:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3fa7 -- 0x3fa8
0x3fa7:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x3fa8 -- 0x3fa9
; data inside code section at 0x3fa9 -- 0x3fab
0x3fa9:     ff ff                                              |..              |
; function: function_3fab at 0x3fab -- 0x3fc6
0x3fab:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3fb1:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x3fb7:     75 0d                              	jne 0x3fc6 <function_3fab+0x16>
0x3fb9:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3fbd:     83 c4 28                           	add esp, 0x28
0x3fc0:     5b                                 	pop ebx
0x3fc1:     e9 4a 3e 00 00                     	jmp 0x7e10 <function_7e10>
; data inside code section at 0x3fc6 -- 0x3fc7
0x3fc6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3fc7 -- 0x3fc8
; data inside code section at 0x3fc8 -- 0x3fcb
0x3fc8:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev at 0x3fd0 -- 0x3fda
0x3fd0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x3fd5:     e9 d6 3f 00 00                     	jmp 0x7fb0 <function_7fb0>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev at 0x3fe0 -- 0x4027
0x3fe0:     53                                 	push ebx
0x3fe1:     83 ec 28                           	sub esp, 0x28
0x3fe4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3fe8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3fee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3ff2:     31 c0                              	xor eax, eax
0x3ff4:     c7 03 28 f1 00 00                  	mov dword ptr [ebx], 0xf128
0x3ffa:     8d 43 08                           	lea eax, [ebx + 8]
0x3ffd:     c7 43 08 3c f1 00 00               	mov dword ptr [ebx + 8], 0xf13c
0x4004:     89 04 24                           	mov dword ptr [esp], eax
0x4007:     e8 64 3e 00 00                     	call 0x7e70 <function_7e70>
0x400c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4010:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4017:     c7 03 f8 f0 00 00                  	mov dword ptr [ebx], 0xf0f8
0x401d:     75 0d                              	jne 0x402c <function_402c>
0x401f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x4023:     83 c4 28                           	add esp, 0x28
0x4026:     5b                                 	pop ebx
; data inside code section at 0x4027 -- 0x4028
0x4027:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x4028 -- 0x4029
; data inside code section at 0x4029 -- 0x402c
0x4029:     ff ff ff                                           |...             |
; function: function_402c at 0x402c -- 0x402d
; dynamically linked function: __stack_chk_fail at 0x402d -- 0x402e
; data inside code section at 0x402e -- 0x4031
0x402e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x4040 -- 0x4047
0x4040:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x4045:     eb 19                              	jmp 0x4060 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x4047 -- 0x4050
0x4047:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x4050 -- 0x4057
0x4050:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x4055:     eb 09                              	jmp 0x4060 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x4057 -- 0x4060
0x4057:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x4060 -- 0x408e
0x4060:     53                                 	push ebx
0x4061:     83 ec 28                           	sub esp, 0x28
0x4064:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4068:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x406e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4072:     31 c0                              	xor eax, eax
0x4074:     c7 43 18 10 f0 00 00               	mov dword ptr [ebx + 0x18], 0xf010
0x407b:     8d 43 14                           	lea eax, [ebx + 0x14]
0x407e:     c7 03 48 f2 00 00                  	mov dword ptr [ebx], 0xf248
0x4084:     c7 43 14 58 f2 00 00               	mov dword ptr [ebx + 0x14], 0xf258
0x408b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x408e -- 0x408f
0x408e:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x408f -- 0x4090
; data inside code section at 0x4090 -- 0x4092
0x4090:     ff ff                                              |..              |
; function: function_4092 at 0x4092 -- 0x40b5
0x4092:     ff 89 1c 24 e8 35                  	dec dword ptr [ecx + 0x35e8241c]
0x4098:     3e 00 00                           	add byte ptr ds:[eax], al
0x409b:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x409f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x40a6:     75 0d                              	jne 0x40b5 <function_4092+0x1e>
0x40a8:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x40ac:     83 c4 28                           	add esp, 0x28
0x40af:     5b                                 	pop ebx
0x40b0:     e9 fc ff ff ff                     	jmp 0x40b1
; data inside code section at 0x40b5 -- 0x40b6
0x40b5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x40b6 -- 0x40b7
; data inside code section at 0x40b7 -- 0x40ba
0x40b7:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x40c0 -- 0x40c7
0x40c0:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x40c5:     eb 09                              	jmp 0x40d0 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x40c7 -- 0x40d0
0x40c7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x40d0 -- 0x40f7
0x40d0:     53                                 	push ebx
0x40d1:     83 ec 28                           	sub esp, 0x28
0x40d4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x40d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x40de:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x40e2:     31 c0                              	xor eax, eax
0x40e4:     c7 03 48 f2 00 00                  	mov dword ptr [ebx], 0xf248
0x40ea:     8d 43 14                           	lea eax, [ebx + 0x14]
0x40ed:     c7 43 14 58 f2 00 00               	mov dword ptr [ebx + 0x14], 0xf258
0x40f4:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x40f7 -- 0x40f8
0x40f7:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x40f8 -- 0x40f9
; data inside code section at 0x40f9 -- 0x411a
0x40f9:     ff ff ff 89 1c 24 e8 4c  3e 00 00 8b 44 24 1c 65   |.....$.L>...D$.e|
0x4109:     33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x4119:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x411a -- 0x411b
; data inside code section at 0x411b -- 0x411f
0x411b:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x411f -- 0x4120
; data inside code section at 0x4120 -- 0x4123
0x4120:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x4130 -- 0x413a
0x4130:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x4135:     e9 46 41 00 00                     	jmp 0x8280 <function_8280>
; data inside code section at 0x413a -- 0x4140
0x413a:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x4140 -- 0x414a
0x4140:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x4145:     e9 36 41 00 00                     	jmp 0x8280 <function_8280>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x4150 -- 0x417e
0x4150:     53                                 	push ebx
0x4151:     83 ec 28                           	sub esp, 0x28
0x4154:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4158:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x415e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4162:     31 c0                              	xor eax, eax
0x4164:     c7 43 18 10 f0 00 00               	mov dword ptr [ebx + 0x18], 0xf010
0x416b:     8d 43 14                           	lea eax, [ebx + 0x14]
0x416e:     c7 03 48 f2 00 00                  	mov dword ptr [ebx], 0xf248
0x4174:     c7 43 14 58 f2 00 00               	mov dword ptr [ebx + 0x14], 0xf258
0x417b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x417e -- 0x417f
0x417e:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x417f -- 0x4180
; data inside code section at 0x4180 -- 0x4182
0x4180:     ff ff                                              |..              |
; function: function_4182 at 0x4182 -- 0x419d
0x4182:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x4188:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x418e:     75 0d                              	jne 0x419d <function_4182+0x16>
0x4190:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x4194:     83 c4 28                           	add esp, 0x28
0x4197:     5b                                 	pop ebx
0x4198:     e9 43 3e 00 00                     	jmp 0x7fe0 <function_7fe0>
; data inside code section at 0x419d -- 0x419e
0x419d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x419e -- 0x419f
; data inside code section at 0x419f -- 0x41a2
0x419f:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0x41b0 -- 0x41b7
0x41b0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x41b5:     eb 19                              	jmp 0x41d0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev>
; data inside code section at 0x41b7 -- 0x41c0
0x41b7:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0x41c0 -- 0x41c7
0x41c0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x41c5:     eb 09                              	jmp 0x41d0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev>
; data inside code section at 0x41c7 -- 0x41d0
0x41c7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0x41d0 -- 0x420c
0x41d0:     53                                 	push ebx
0x41d1:     83 ec 28                           	sub esp, 0x28
0x41d4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x41d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x41de:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x41e2:     31 c0                              	xor eax, eax
0x41e4:     c7 43 1c 10 f0 00 00               	mov dword ptr [ebx + 0x1c], 0xf010
0x41eb:     8d 43 08                           	lea eax, [ebx + 8]
0x41ee:     c7 03 28 f1 00 00                  	mov dword ptr [ebx], 0xf128
0x41f4:     c7 43 08 3c f1 00 00               	mov dword ptr [ebx + 8], 0xf13c
0x41fb:     89 04 24                           	mov dword ptr [esp], eax
0x41fe:     e8 3d 3e 00 00                     	call 0x8040 <function_8040>
0x4203:     c7 03 f8 f0 00 00                  	mov dword ptr [ebx], 0xf0f8
0x4209:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x420c -- 0x420d
0x420c:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x420d -- 0x420e
; data inside code section at 0x420e -- 0x4227
0x420e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x421e:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4227 -- 0x4228
; data inside code section at 0x4228 -- 0x422c
0x4228:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x422c -- 0x422d
; data inside code section at 0x422d -- 0x4230
0x422d:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0x4230 -- 0x423a
0x4230:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4235:     e9 46 42 00 00                     	jmp 0x8480
; data inside code section at 0x423a -- 0x4240
0x423a:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0x4240 -- 0x424a
0x4240:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4245:     e9 36 42 00 00                     	jmp 0x8480
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0x4250 -- 0x429e
0x4250:     53                                 	push ebx
0x4251:     83 ec 28                           	sub esp, 0x28
0x4254:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4258:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x425e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4262:     31 c0                              	xor eax, eax
0x4264:     c7 43 1c 10 f0 00 00               	mov dword ptr [ebx + 0x1c], 0xf010
0x426b:     8d 43 08                           	lea eax, [ebx + 8]
0x426e:     c7 03 28 f1 00 00                  	mov dword ptr [ebx], 0xf128
0x4274:     c7 43 08 3c f1 00 00               	mov dword ptr [ebx + 8], 0xf13c
0x427b:     89 04 24                           	mov dword ptr [esp], eax
0x427e:     e8 5d 3e 00 00                     	call 0x80e0 <function_80e0>
0x4283:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4287:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x428e:     c7 03 f8 f0 00 00                  	mov dword ptr [ebx], 0xf0f8
0x4294:     75 0d                              	jne 0x42a3 <function_42a3>
0x4296:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x429a:     83 c4 28                           	add esp, 0x28
0x429d:     5b                                 	pop ebx
; data inside code section at 0x429e -- 0x429f
0x429e:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x429f -- 0x42a0
; data inside code section at 0x42a0 -- 0x42a3
0x42a0:     ff ff ff                                           |...             |
; function: function_42a3 at 0x42a3 -- 0x42a4
; dynamically linked function: __stack_chk_fail at 0x42a4 -- 0x42a5
; data inside code section at 0x42a5 -- 0x42a8
0x42a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev at 0x42b0 -- 0x42b7
0x42b0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x42b5:     eb 09                              	jmp 0x42c0 <_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev>
; data inside code section at 0x42b7 -- 0x42c0
0x42b7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev at 0x42c0 -- 0x42f5
0x42c0:     53                                 	push ebx
0x42c1:     83 ec 28                           	sub esp, 0x28
0x42c4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x42c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x42ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x42d2:     31 c0                              	xor eax, eax
0x42d4:     c7 03 28 f1 00 00                  	mov dword ptr [ebx], 0xf128
0x42da:     8d 43 08                           	lea eax, [ebx + 8]
0x42dd:     c7 43 08 3c f1 00 00               	mov dword ptr [ebx + 8], 0xf13c
0x42e4:     89 04 24                           	mov dword ptr [esp], eax
0x42e7:     e8 54 3e 00 00                     	call 0x8140 <function_8140>
0x42ec:     c7 03 f8 f0 00 00                  	mov dword ptr [ebx], 0xf0f8
0x42f2:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x42f5 -- 0x42f6
0x42f5:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x42f6 -- 0x42f7
; data inside code section at 0x42f7 -- 0x4310
0x42f7:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x4307:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4310 -- 0x4311
; data inside code section at 0x4311 -- 0x4315
0x4311:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x4315 -- 0x4316
; data inside code section at 0x4316 -- 0x4319
0x4316:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x4320 -- 0x4327
0x4320:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4325:     eb 19                              	jmp 0x4340 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x4327 -- 0x4330
0x4327:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x4330 -- 0x4337
0x4330:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4335:     eb 09                              	jmp 0x4340 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x4337 -- 0x4340
0x4337:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x4340 -- 0x437c
0x4340:     53                                 	push ebx
0x4341:     83 ec 28                           	sub esp, 0x28
0x4344:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4348:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x434e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4352:     31 c0                              	xor eax, eax
0x4354:     c7 43 1c 10 f0 00 00               	mov dword ptr [ebx + 0x1c], 0xf010
0x435b:     8d 43 08                           	lea eax, [ebx + 8]
0x435e:     c7 03 e8 ef 00 00                  	mov dword ptr [ebx], 0xefe8
0x4364:     c7 43 08 fc ef 00 00               	mov dword ptr [ebx + 8], 0xeffc
0x436b:     89 04 24                           	mov dword ptr [esp], eax
0x436e:     e8 3d 3e 00 00                     	call 0x81b0 <function_81b0>
0x4373:     c7 03 a0 ef 00 00                  	mov dword ptr [ebx], 0xefa0
0x4379:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x437c -- 0x437d
0x437c:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x437d -- 0x437e
; data inside code section at 0x437e -- 0x4397
0x437e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x438e:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4397 -- 0x4398
; data inside code section at 0x4398 -- 0x439c
0x4398:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x439c -- 0x439d
; data inside code section at 0x439d -- 0x43a0
0x439d:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x43a0 -- 0x43aa
0x43a0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x43a5:     e9 b6 43 00 00                     	jmp 0x8760 <function_8760>
; data inside code section at 0x43aa -- 0x43b0
0x43aa:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x43b0 -- 0x43ba
0x43b0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x43b5:     e9 a6 43 00 00                     	jmp 0x8760 <function_8760>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x43c0 -- 0x440e
0x43c0:     53                                 	push ebx
0x43c1:     83 ec 28                           	sub esp, 0x28
0x43c4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x43c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x43ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x43d2:     31 c0                              	xor eax, eax
0x43d4:     c7 43 1c 10 f0 00 00               	mov dword ptr [ebx + 0x1c], 0xf010
0x43db:     8d 43 08                           	lea eax, [ebx + 8]
0x43de:     c7 03 e8 ef 00 00                  	mov dword ptr [ebx], 0xefe8
0x43e4:     c7 43 08 fc ef 00 00               	mov dword ptr [ebx + 8], 0xeffc
0x43eb:     89 04 24                           	mov dword ptr [esp], eax
0x43ee:     e8 5d 3e 00 00                     	call 0x8250 <function_8250>
0x43f3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x43f7:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x43fe:     c7 03 a0 ef 00 00                  	mov dword ptr [ebx], 0xefa0
0x4404:     75 0d                              	jne 0x4413 <function_4413>
0x4406:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x440a:     83 c4 28                           	add esp, 0x28
0x440d:     5b                                 	pop ebx
; data inside code section at 0x440e -- 0x440f
0x440e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x440f -- 0x4410
; data inside code section at 0x4410 -- 0x4413
0x4410:     ff ff ff                                           |...             |
; function: function_4413 at 0x4413 -- 0x4414
; dynamically linked function: __stack_chk_fail at 0x4414 -- 0x4415
; data inside code section at 0x4415 -- 0x4418
0x4415:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x4420 -- 0x4427
0x4420:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4425:     eb 09                              	jmp 0x4430 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev>
; data inside code section at 0x4427 -- 0x4430
0x4427:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x4430 -- 0x4465
0x4430:     53                                 	push ebx
0x4431:     83 ec 28                           	sub esp, 0x28
0x4434:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4438:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x443e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4442:     31 c0                              	xor eax, eax
0x4444:     c7 03 e8 ef 00 00                  	mov dword ptr [ebx], 0xefe8
0x444a:     8d 43 08                           	lea eax, [ebx + 8]
0x444d:     c7 43 08 fc ef 00 00               	mov dword ptr [ebx + 8], 0xeffc
0x4454:     89 04 24                           	mov dword ptr [esp], eax
0x4457:     e8 54 3e 00 00                     	call 0x82b0 <function_82b0>
0x445c:     c7 03 a0 ef 00 00                  	mov dword ptr [ebx], 0xefa0
0x4462:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4465 -- 0x4466
0x4465:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x4466 -- 0x4467
; data inside code section at 0x4467 -- 0x4480
0x4467:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x4477:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4480 -- 0x4481
; data inside code section at 0x4481 -- 0x4485
0x4481:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x4485 -- 0x4486
; data inside code section at 0x4486 -- 0x4489
0x4486:     ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x4490 -- 0x44c1
0x4490:     53                                 	push ebx
0x4491:     83 ec 28                           	sub esp, 0x28
0x4494:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4498:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x449e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x44a2:     31 c0                              	xor eax, eax
0x44a4:     89 1c 24                           	mov dword ptr [esp], ebx
0x44a7:     e8 74 3e 00 00                     	call 0x8320 <function_8320>
0x44ac:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x44b0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x44b7:     75 0d                              	jne 0x44c6 <function_44c6>
0x44b9:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x44bd:     83 c4 28                           	add esp, 0x28
0x44c0:     5b                                 	pop ebx
; data inside code section at 0x44c1 -- 0x44c2
0x44c1:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x44c2 -- 0x44c3
; data inside code section at 0x44c3 -- 0x44c6
0x44c3:     ff ff ff                                           |...             |
; function: function_44c6 at 0x44c6 -- 0x44c7
; dynamically linked function: __stack_chk_fail at 0x44c7 -- 0x44c8
; data inside code section at 0x44c8 -- 0x44cb
0x44c8:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail12shared_countD2Ev
; function: _ZN5boost6detail12shared_countD1Ev at 0x44d0 -- 0x4555
0x44d0:     83 ec 2c                           	sub esp, 0x2c
0x44d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x44d9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x44dd:     31 c0                              	xor eax, eax
0x44df:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x44e3:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x44e7:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x44eb:     8b 18                              	mov ebx, dword ptr [eax]
0x44ed:     85 db                              	test ebx, ebx
0x44ef:     74 11                              	je 0x4502 <_ZN5boost6detail12shared_countD1Ev+0x32>
0x44f1:     be ff ff ff ff                     	mov esi, 0xffffffff
0x44f6:     89 f0                              	mov eax, esi
0x44f8:     f0 0f c1 43 04                     	lock xadd dword ptr [ebx + 4], eax
0x44fd:     83 f8 01                           	cmp eax, 1
0x4500:     74 1e                              	je 0x4520 <_ZN5boost6detail12shared_countD1Ev+0x50>
0x4502:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4506:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x450d:     75 46                              	jne 0x4555 <_ZN5boost6detail12shared_countD1Ev+0x83>
0x450f:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x4513:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x4517:     83 c4 2c                           	add esp, 0x2c
0x451a:     c3                                 	ret 
; data inside code section at 0x451b -- 0x4520
0x451b:     90 8d 74 26 00                                     |..t&.           |
0x4520:     8b 03                              	mov eax, dword ptr [ebx]
0x4522:     89 1c 24                           	mov dword ptr [esp], ebx
0x4525:     ff 50 08                           	call dword ptr [eax + 8]
0x4528:     f0 0f c1 73 08                     	lock xadd dword ptr [ebx + 8], esi
0x452d:     83 fe 01                           	cmp esi, 1
0x4530:     75 d0                              	jne 0x4502 <_ZN5boost6detail12shared_countD1Ev+0x32>
0x4532:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4536:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x453d:     75 16                              	jne 0x4555 <_ZN5boost6detail12shared_countD1Ev+0x83>
0x453f:     8b 03                              	mov eax, dword ptr [ebx]
0x4541:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x4545:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x4549:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x454d:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x4550:     83 c4 2c                           	add esp, 0x2c
0x4553:     ff e0                              	jmp eax
; data inside code section at 0x4555 -- 0x4556
0x4555:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4556 -- 0x4557
; data inside code section at 0x4557 -- 0x455a
0x4557:     ff ff ff                                           |...             |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x4560 -- 0x4590
0x4560:     83 ec 1c                           	sub esp, 0x1c
0x4563:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x456a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x456e:     31 d2                              	xor edx, edx
0x4570:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x4574:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x4578:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x457f:     75 0f                              	jne 0x4590 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x2b>
0x4581:     83 c0 04                           	add eax, 4
0x4584:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x4588:     83 c4 1c                           	add esp, 0x1c
0x458b:     e9 a0 44 00 00                     	jmp 0x8a30 <function_8a30>
; data inside code section at 0x4590 -- 0x4591
0x4590:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4591 -- 0x4592
; data inside code section at 0x4592 -- 0x4595
0x4592:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv at 0x45a0 -- 0x45e6
0x45a0:     53                                 	push ebx
0x45a1:     83 ec 38                           	sub esp, 0x38
0x45a4:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x45aa:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x45ae:     31 c0                              	xor eax, eax
0x45b0:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x45b4:     8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x45b7:     85 db                              	test ebx, ebx
0x45b9:     74 35                              	je 0x45f0 <function_45f0>
0x45bb:     8d 43 0c                           	lea eax, [ebx + 0xc]
0x45be:     89 04 24                           	mov dword ptr [esp], eax
0x45c1:     e8 aa 44 00 00                     	call 0x8a70 <function_8a70>
0x45c6:     8d 43 04                           	lea eax, [ebx + 4]
0x45c9:     89 04 24                           	mov dword ptr [esp], eax
0x45cc:     e8 9f 44 00 00                     	call 0x8a70 <function_8a70>
0x45d1:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x45d5:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x45dc:     75 24                              	jne 0x4602 <function_4602>
0x45de:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x45e2:     83 c4 38                           	add esp, 0x38
0x45e5:     5b                                 	pop ebx
; data inside code section at 0x45e6 -- 0x45e7
0x45e6:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x45e7 -- 0x45e8
; data inside code section at 0x45e8 -- 0x45f0
0x45e8:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_45f0 at 0x45f0 -- 0x4602
0x45f0:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x45f4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x45fb:     75 05                              	jne 0x4602 <function_4602>
0x45fd:     83 c4 38                           	add esp, 0x38
0x4600:     5b                                 	pop ebx
0x4601:     c3                                 	ret 
; function: function_4602 at 0x4602 -- 0x4603
; dynamically linked function: __stack_chk_fail at 0x4603 -- 0x4604
; data inside code section at 0x4604 -- 0x4608
0x4604:     ff ff ff 83                                        |....            |
; function: function_4608 at 0x4608 -- 0x4609
0x4608:     c3                                 	ret 
; data inside code section at 0x4609 -- 0x461e
0x4609:     04 89 44 24 1c 89 1c 24  e8 5a 44 00 00 8b 44 24   |..D$...$.ZD...D$|
0x4619:     1c 89 04 24 e8                                     |...$.           |
; dynamically linked function: _Unwind_Resume at 0x461e -- 0x461f
; data inside code section at 0x461f -- 0x4622
0x461f:     ff ff ff                                           |...             |
; section: .text._ZltRK7uint160S1_
; function: _ZltRK7uint160S1_ at 0x83b0 -- 0x843f
0x83b0:     83 ec 3c                           	sub esp, 0x3c
0x83b3:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x83b7:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x83be:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x83c2:     31 c9                              	xor ecx, ecx
0x83c4:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x83c8:     8b 0a                              	mov ecx, dword ptr [edx]
0x83ca:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x83ce:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x83d1:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x83d5:     8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x83d8:     89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x83dc:     8b 4a 0c                           	mov ecx, dword ptr [edx + 0xc]
0x83df:     8b 52 10                           	mov edx, dword ptr [edx + 0x10]
0x83e2:     89 4c 24 24                        	mov dword ptr [esp + 0x24], ecx
0x83e6:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x83ea:     8b 10                              	mov edx, dword ptr [eax]
0x83ec:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x83f0:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0x83f3:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x83f7:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0x83fa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x83fe:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x8401:     8b 40 10                           	mov eax, dword ptr [eax + 0x10]
0x8404:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x8408:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x840c:     b8 04 00 00 00                     	mov eax, 4
0x8411:     8b 54 84 18                        	mov edx, dword ptr [esp + eax*4 + 0x18]
0x8415:     39 54 84 04                        	cmp dword ptr [esp + eax*4 + 4], edx
0x8419:     72 1d                              	jb 0x8438 <_ZltRK7uint160S1_+0x88>
0x841b:     77 08                              	ja 0x8425 <_ZltRK7uint160S1_+0x75>
0x841d:     83 e8 01                           	sub eax, 1
0x8420:     83 f8 ff                           	cmp eax, -1
0x8423:     75 ec                              	jne 0x8411 <_ZltRK7uint160S1_+0x61>
0x8425:     31 c0                              	xor eax, eax
0x8427:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x842b:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x8432:     75 0b                              	jne 0x843f <_ZltRK7uint160S1_+0x8d>
0x8434:     83 c4 3c                           	add esp, 0x3c
0x8437:     c3                                 	ret 
0x8438:     b8 01 00 00 00                     	mov eax, 1
0x843d:     eb e8                              	jmp 0x8427 <_ZltRK7uint160S1_+0x77>
; data inside code section at 0x843f -- 0x8440
0x843f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8440 -- 0x8441
; data inside code section at 0x8441 -- 0x8444
0x8441:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x8450 -- 0x8490
0x8450:     53                                 	push ebx
0x8451:     83 ec 28                           	sub esp, 0x28
0x8454:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x8458:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x845e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8462:     31 c0                              	xor eax, eax
0x8464:     8b 03                              	mov eax, dword ptr [ebx]
0x8466:     85 c0                              	test eax, eax
0x8468:     74 0c                              	je 0x8476 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x846a:     8b 10                              	mov edx, dword ptr [eax]
0x846c:     89 04 24                           	mov dword ptr [esp], eax
0x846f:     ff 52 10                           	call dword ptr [edx + 0x10]
0x8472:     84 c0                              	test al, al
0x8474:     75 12                              	jne 0x8488 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x8476:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
; data inside code section at 0x847a -- 0x847e
0x847a:     65 33 05 14                                        |e3..            |
0x847e:     00 00                              	add byte ptr [eax], al
0x8480:     00 75 0d                           	add byte ptr [ebp + 0xd], dh
0x8483:     83 c4 28                           	add esp, 0x28
0x8486:     5b                                 	pop ebx
0x8487:     c3                                 	ret 
0x8488:     c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x848e:     eb e6                              	jmp 0x8476 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x8490 -- 0x8491
0x8490:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8491 -- 0x8492
; data inside code section at 0x8492 -- 0x8495
0x8492:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
; function: _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ at 0x84a0 -- 0x85a4
0x84a0:     83 ec 3c                           	sub esp, 0x3c
0x84a3:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x84a7:     8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x84ab:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x84b1:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x84b5:     31 c0                              	xor eax, eax
0x84b7:     89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x84bb:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x84bf:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x84c3:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x84c6:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x84ca:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x84d2:     85 c0                              	test eax, eax
0x84d4:     0f 84 c6 00 00 00                  	je 0x85a0 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x100>
0x84da:     8b 10                              	mov edx, dword ptr [eax]
0x84dc:     8d 6c 24 18                        	lea ebp, [esp + 0x18]
0x84e0:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x84e4:     89 2c 24                           	mov dword ptr [esp], ebp
0x84e7:     ff 52 14                           	call dword ptr [edx + 0x14]
0x84ea:     83 ec 04                           	sub esp, 4
0x84ed:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x84f1:     8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x84f5:     85 c0                              	test eax, eax
0x84f7:     74 08                              	je 0x8501 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x61>
0x84f9:     8b 10                              	mov edx, dword ptr [eax]
0x84fb:     89 04 24                           	mov dword ptr [esp], eax
0x84fe:     ff 52 10                           	call dword ptr [edx + 0x10]
0x8501:     85 ff                              	test edi, edi
0x8503:     89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x8507:     74 08                              	je 0x8511 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x71>
0x8509:     8b 07                              	mov eax, dword ptr [edi]
0x850b:     89 3c 24                           	mov dword ptr [esp], edi
0x850e:     ff 50 0c                           	call dword ptr [eax + 0xc]
0x8511:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x8515:     85 c0                              	test eax, eax
0x8517:     74 0c                              	je 0x8525 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
0x8519:     8b 10                              	mov edx, dword ptr [eax]
0x851b:     89 04 24                           	mov dword ptr [esp], eax
0x851e:     ff 52 10                           	call dword ptr [edx + 0x10]
0x8521:     84 c0                              	test al, al
0x8523:     75 6b                              	jne 0x8590 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xf0>
0x8525:     8b 7c 24 14                        	mov edi, dword ptr [esp + 0x14]
0x8529:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x852c:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x852f:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x8532:     89 46 10                           	mov dword ptr [esi + 0x10], eax
0x8535:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x8538:     89 46 08                           	mov dword ptr [esi + 8], eax
0x853b:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x853e:     85 c0                              	test eax, eax
0x8540:     74 08                              	je 0x854a <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xaa>
0x8542:     8b 10                              	mov edx, dword ptr [eax]
0x8544:     89 04 24                           	mov dword ptr [esp], eax
0x8547:     ff 52 10                           	call dword ptr [edx + 0x10]
0x854a:     85 ff                              	test edi, edi
0x854c:     89 7e 04                           	mov dword ptr [esi + 4], edi
0x854f:     74 08                              	je 0x8559 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xb9>
0x8551:     8b 07                              	mov eax, dword ptr [edi]
0x8553:     89 3c 24                           	mov dword ptr [esp], edi
0x8556:     ff 50 0c                           	call dword ptr [eax + 0xc]
0x8559:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x855d:     85 c0                              	test eax, eax
0x855f:     74 08                              	je 0x8569 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xc9>
0x8561:     8b 10                              	mov edx, dword ptr [eax]
0x8563:     89 04 24                           	mov dword ptr [esp], eax
0x8566:     ff 52 10                           	call dword ptr [edx + 0x10]
0x8569:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x856d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8574:     75 2e                              	jne 0x85a4 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x102>
0x8576:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x857a:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x857e:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x8582:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x8586:     83 c4 3c                           	add esp, 0x3c
0x8589:     c3                                 	ret 
; data inside code section at 0x858a -- 0x8590
0x858a:     8d b6 00 00 00 00                                  |......          |
0x8590:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x8598:     eb 8b                              	jmp 0x8525 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
; data inside code section at 0x859a -- 0x85a0
0x859a:     8d b6 00 00 00 00                                  |......          |
0x85a0:     31 ff                              	xor edi, edi
0x85a2:     eb 85                              	jmp 0x8529 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x89>
; data inside code section at 0x85a4 -- 0x85a5
0x85a4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x85a5 -- 0x85a6
; data inside code section at 0x85a6 -- 0x85aa
0x85a6:     ff ff ff 89                                        |....            |
; function: function_85aa at 0x85aa -- 0x85ab
0x85aa:     c3                                 	ret 
; data inside code section at 0x85ab -- 0x85b3
0x85ab:     89 2c 24 e8 3d 83 00 00                            |.,$.=...        |
; function: function_85b3 at 0x85b3 -- 0x85b4
; data inside code section at 0x85b4 -- 0x85c3
0x85b4:     44 24 14 89 04 24 e8 31  83 00 00 89 1c 24 e8      |D$...$.1.....$. |
; dynamically linked function: _Unwind_Resume at 0x85c3 -- 0x85c4
; data inside code section at 0x85c4 -- 0x85c7
0x85c4:     ff ff ff                                           |...             |
; function: function_85c7 at 0x85c7 -- 0x85cb
0x85c7:     89 c3                              	mov ebx, eax
0x85c9:     eb e8                              	jmp 0x85b3 <function_85b3>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_ at 0x85d0 -- 0x8640
0x85d0:     56                                 	push esi
0x85d1:     53                                 	push ebx
0x85d2:     83 ec 24                           	sub esp, 0x24
0x85d5:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x85d9:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x85dd:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x85e3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x85e7:     31 c0                              	xor eax, eax
0x85e9:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x85ec:     c7 03 b8 ef 00 00                  	mov dword ptr [ebx], 0xefb8
0x85f2:     c7 43 08 d0 ef 00 00               	mov dword ptr [ebx + 8], 0xefd0
0x85f9:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x85fc:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x85ff:     85 c0                              	test eax, eax
0x8601:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x8604:     74 08                              	je 0x860e <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x3e>
0x8606:     8b 10                              	mov edx, dword ptr [eax]
0x8608:     89 04 24                           	mov dword ptr [esp], eax
0x860b:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x860e:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x8611:     c7 43 08 fc ef 00 00               	mov dword ptr [ebx + 8], 0xeffc
0x8618:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x861b:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x861e:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x8621:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x8624:     c7 03 e8 ef 00 00                  	mov dword ptr [ebx], 0xefe8
0x862a:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x862d:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x8631:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8638:     75 06                              	jne 0x8640 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x6f>
0x863a:     83 c4 24                           	add esp, 0x24
0x863d:     5b                                 	pop ebx
0x863e:     5e                                 	pop esi
0x863f:     c3                                 	ret 
; data inside code section at 0x8640 -- 0x8641
0x8640:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8641 -- 0x8642
; data inside code section at 0x8642 -- 0x8657
0x8642:     ff ff ff 89 c6 89 1c 24  e8 01 38 00 00 89 34 24   |.......$..8...4$|
0x8652:     e8 fc ff ff ff                                     |.....           |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x8660 -- 0x8667
0x8660:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x8665:     eb 09                              	jmp 0x8670 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv>
; data inside code section at 0x8667 -- 0x8670
0x8667:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x8670 -- 0x868c
0x8670:     56                                 	push esi
0x8671:     53                                 	push ebx
0x8672:     83 ec 24                           	sub esp, 0x24
0x8675:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x8679:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x867f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8683:     31 c0                              	xor eax, eax
0x8685:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x868c -- 0x868d
0x868c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x868d -- 0x868e
; data inside code section at 0x868e -- 0x8690
0x868e:     ff ff                                              |..              |
; function: function_8690 at 0x8690 -- 0x8697
0x8690:     ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x8696:     c3                                 	ret 
; data inside code section at 0x8697 -- 0x86d1
0x8697:     89 04 24 e8 91 85 00 00  c7 03 28 f0 00 00 c7 43   |..$.......(....C|
0x86a7:     08 44 f0 00 00 c7 43 1c  54 f0 00 00 c7 44 24 08   |.D....C.T....D$.|
0x86b7:     c0 43 00 00 c7 44 24 04  80 f0 00 00 89 1c 24 e8   |.C...D$.......$.|
0x86c7:     fc ff ff ff 89 c6 89 1c  24 e8                     |........$.      |
; dynamically linked function: __cxa_free_exception at 0x86d1 -- 0x86d2
; data inside code section at 0x86d2 -- 0x86d9
0x86d2:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x86d9 -- 0x86da
; data inside code section at 0x86da -- 0x86dd
0x86da:     ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_ at 0x86e0 -- 0x86fc
0x86e0:     56                                 	push esi
0x86e1:     53                                 	push ebx
0x86e2:     83 ec 44                           	sub esp, 0x44
0x86e5:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x86e9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x86ef:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x86f3:     31 c0                              	xor eax, eax
0x86f5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x86fc -- 0x86fd
0x86fc:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x86fd -- 0x86fe
; data inside code section at 0x86fe -- 0x8720
0x86fe:     ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x870e:     00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x871e:     ff ff                                              |..              |
; function: function_8720 at 0x8720 -- 0x872b
0x8720:     ff c7                              	inc edi
0x8722:     44                                 	inc esp
0x8723:     24 20                              	and al, 0x20
0x8725:     e8 ef 00 00 89                     	call 0x89008819 <unknown_89008819>
0x872a:     c3                                 	ret 
; data inside code section at 0x872b -- 0x8760
0x872b:     8b 46 04 8d 74 24 20 c7  44 24 28 fc ef 00 00 89   |.F..t$ .D$(.....|
0x873b:     74 24 04 89 44 24 24 89  1c 24 e8 66 85 00 00 8d   |t$..D$$..$.f....|
0x874b:     44 24 28 c7 03 28 f0 00  00 c7 43 08 44 f0 00 00   |D$(..(....C.D...|
0x875b:     c7 43 1c 54 f0                                     |.C.T.           |
; function: function_8760 at 0x8760 -- 0x878c
0x8760:     00 00                              	add byte ptr [eax], al
0x8762:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x8766:     8d 43 08                           	lea eax, [ebx + 8]
0x8769:     89 04 24                           	mov dword ptr [esp], eax
0x876c:     e8 0f 84 00 00                     	call 0x10b80 <unknown_10b80>
0x8771:     89 34 24                           	mov dword ptr [esp], esi
0x8774:     e8 77 3e 00 00                     	call 0xc5f0 <function_c5f0>
0x8779:     c7 44 24 08 c0 43 00 00            	mov dword ptr [esp + 8], 0x43c0
0x8781:     c7 44 24 04 80 f0 00 00            	mov dword ptr [esp + 4], 0xf080
0x8789:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x878c -- 0x878d
0x878c:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x878d -- 0x878e
; data inside code section at 0x878e -- 0x8791
0x878e:     ff ff ff                                           |...             |
; function: function_8791 at 0x8791 -- 0x8792
; data inside code section at 0x8792 -- 0x87a1
0x8792:     44 24 1c 89 34 24 e8 53  3e 00 00 89 1c 24 e8      |D$..4$.S>....$. |
; dynamically linked function: __cxa_free_exception at 0x87a1 -- 0x87a2
; data inside code section at 0x87a2 -- 0x87ad
0x87a2:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x87ad -- 0x87ae
; data inside code section at 0x87ae -- 0x87b0
0x87ae:     ff ff                                              |..              |
; function: function_87b0 at 0x87b0 -- 0x87ca
0x87b0:     ff c7                              	inc edi
0x87b2:     43                                 	inc ebx
0x87b3:     1c 10                              	sbb al, 0x10
0x87b5:     f0 00 00                           	lock add byte ptr [eax], al
0x87b8:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x87bc:     89 1c 24                           	mov dword ptr [esp], ebx
0x87bf:     e8 2c 3e 00 00                     	call 0xc5f0 <function_c5f0>
0x87c4:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x87c8:     eb c7                              	jmp 0x8791 <function_8791>
; section: .text._ZNSt6vectorIhSaIhEED2Ev
; function: _ZNSt6vectorIhSaIhEED1Ev at 0x87d0 -- 0x87fd
0x87d0:     83 ec 1c                           	sub esp, 0x1c
0x87d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x87d9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x87dd:     31 c0                              	xor eax, eax
0x87df:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x87e3:     8b 00                              	mov eax, dword ptr [eax]
0x87e5:     85 c0                              	test eax, eax
0x87e7:     74 1f                              	je 0x8808 <function_8808>
0x87e9:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x87ed:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x87f4:     75 23                              	jne 0x8819 <function_8819>
0x87f6:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x87fa:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x87fd -- 0x87fe
0x87fd:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x87fe -- 0x87ff
; data inside code section at 0x87ff -- 0x8808
0x87ff:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_8808 at 0x8808 -- 0x8819
0x8808:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x880c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8813:     75 04                              	jne 0x8819 <function_8819>
0x8815:     83 c4 1c                           	add esp, 0x1c
0x8818:     c3                                 	ret 
; function: function_8819 at 0x8819 -- 0x8820
0x8819:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x8820 -- 0x8821
0x8820:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8821 -- 0x8822
; data inside code section at 0x8822 -- 0x8825
0x8822:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIhSaIhEEaSERKS1_
; function: _ZNSt6vectorIhSaIhEEaSERKS1_ at 0x8830 -- 0x8888
0x8830:     83 ec 4c                           	sub esp, 0x4c
0x8833:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x8837:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x883b:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x883f:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x8843:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8849:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x884d:     31 c0                              	xor eax, eax
0x884f:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x8853:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x8857:     39 df                              	cmp edi, ebx
0x8859:     74 4b                              	je 0x88a6 <function_88a6>
0x885b:     8b 57 04                           	mov edx, dword ptr [edi + 4]
0x885e:     8b 2f                              	mov ebp, dword ptr [edi]
0x8860:     8b 03                              	mov eax, dword ptr [ebx]
0x8862:     8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x8865:     89 d6                              	mov esi, edx
0x8867:     29 ee                              	sub esi, ebp
0x8869:     29 c1                              	sub ecx, eax
0x886b:     39 ce                              	cmp esi, ecx
0x886d:     76 61                              	jbe 0x88d0 <function_88d0>
0x886f:     89 34 24                           	mov dword ptr [esp], esi
0x8872:     e8 fc ff ff ff                     	call 0x8873
0x8877:     85 f6                              	test esi, esi
0x8879:     89 c7                              	mov edi, eax
0x887b:     74 10                              	je 0x888d <function_888d>
0x887d:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x8881:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x8885:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8888 -- 0x8889
0x8888:     e8                                                 |.               |
; dynamically linked function: memmove at 0x8889 -- 0x888a
; data inside code section at 0x888a -- 0x888d
0x888a:     ff ff ff                                           |...             |
; function: function_888d at 0x888d -- 0x8896
0x888d:     8b 03                              	mov eax, dword ptr [ebx]
0x888f:     85 c0                              	test eax, eax
0x8891:     74 08                              	je 0x889b <function_889b>
0x8893:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8896 -- 0x8897
0x8896:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x8897 -- 0x8898
; data inside code section at 0x8898 -- 0x889b
0x8898:     ff ff ff                                           |...             |
; function: function_889b at 0x889b -- 0x88a6
0x889b:     8d 04 37                           	lea eax, [edi + esi]
0x889e:     89 3b                              	mov dword ptr [ebx], edi
0x88a0:     89 43 08                           	mov dword ptr [ebx + 8], eax
0x88a3:     89 43 04                           	mov dword ptr [ebx + 4], eax
; function: function_88a6 at 0x88a6 -- 0x88cd
0x88a6:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x88aa:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x88b1:     89 d8                              	mov eax, ebx
0x88b3:     0f 85 bb 00 00 00                  	jne 0x8974 <function_8974>
0x88b9:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x88bd:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x88c1:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x88c5:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x88c9:     83 c4 4c                           	add esp, 0x4c
0x88cc:     c3                                 	ret 
; data inside code section at 0x88cd -- 0x88d0
0x88cd:     8d 76 00                                           |.v.             |
; function: function_88d0 at 0x88d0 -- 0x88f0
0x88d0:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x88d3:     89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x88d7:     29 c1                              	sub ecx, eax
0x88d9:     39 ce                              	cmp esi, ecx
0x88db:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x88df:     77 1f                              	ja 0x8900 <function_8900>
0x88e1:     85 f6                              	test esi, esi
0x88e3:     74 be                              	je 0x88a3
0x88e5:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x88e9:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x88ed:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x88f0 -- 0x88f1
0x88f0:     e8                                                 |.               |
; dynamically linked function: memmove at 0x88f1 -- 0x88f2
; data inside code section at 0x88f2 -- 0x88f5
0x88f2:     ff ff ff                                           |...             |
; function: function_88f5 at 0x88f5 -- 0x88fb
0x88f5:     8b 03                              	mov eax, dword ptr [ebx]
0x88f7:     01 f0                              	add eax, esi
0x88f9:     eb a8                              	jmp 0x88a3
; data inside code section at 0x88fb -- 0x8900
0x88fb:     90 8d 74 26 00                                     |..t&.           |
; function: function_8900 at 0x8900 -- 0x8974
0x8900:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x8904:     01 e9                              	add ecx, ebp
0x8906:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x890a:     29 e9                              	sub ecx, ebp
0x890c:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x8910:     75 36                              	jne 0x8948 <function_8900+0x48>
0x8912:     2b 54 24 18                        	sub edx, dword ptr [esp + 0x18]
0x8916:     75 08                              	jne 0x8920 <function_8900+0x20>
0x8918:     01 f0                              	add eax, esi
0x891a:     eb 87                              	jmp 0x88a3
; data inside code section at 0x891c -- 0x8920
0x891c:     8d 74 26 00                                        |.t&.            |
0x8920:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x8924:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x8928:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x892c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x8930:     89 14 24                           	mov dword ptr [esp], edx
0x8933:     e8 fc ff ff ff                     	call 0x8934
0x8938:     8b 03                              	mov eax, dword ptr [ebx]
0x893a:     01 f0                              	add eax, esi
0x893c:     e9 62 ff ff ff                     	jmp 0x88a3
; data inside code section at 0x8941 -- 0x8948
0x8941:     8d b4 26 00 00 00 00                               |..&....         |
0x8948:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x894c:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x8950:     89 04 24                           	mov dword ptr [esp], eax
0x8953:     e8 fc ff ff ff                     	call 0x8954
0x8958:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x895b:     8b 0f                              	mov ecx, dword ptr [edi]
0x895d:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x8961:     8b 03                              	mov eax, dword ptr [ebx]
0x8963:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x8967:     29 c2                              	sub edx, eax
0x8969:     01 ca                              	add edx, ecx
0x896b:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x896f:     8b 57 04                           	mov edx, dword ptr [edi + 4]
0x8972:     eb 9e                              	jmp 0x8912 <function_8900+0x12>
; function: function_8974 at 0x8974 -- 0x8975
; dynamically linked function: __stack_chk_fail at 0x8975 -- 0x8976
; data inside code section at 0x8976 -- 0x8979
0x8976:     ff ff ff                                           |...             |
; section: .text._ZN21LockedPageManagerBaseI16MemoryPageLockerE11UnlockRangeEPvj
; function: _ZN21LockedPageManagerBaseI16MemoryPageLockerE11UnlockRangeEPvj at 0x8980 -- 0x89a9
0x8980:     55                                 	push ebp
0x8981:     57                                 	push edi
0x8982:     56                                 	push esi
0x8983:     53                                 	push ebx
0x8984:     83 ec 3c                           	sub esp, 0x3c
0x8987:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x898b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8991:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x8995:     31 c0                              	xor eax, eax
0x8997:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x899b:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x899f:     8d 47 04                           	lea eax, [edi + 4]
0x89a2:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x89a6:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x89a9 -- 0x89aa
0x89a9:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x89aa -- 0x89ab
; data inside code section at 0x89ab -- 0x89ad
0x89ab:     ff ff                                              |..              |
; function: function_89ad at 0x89ad -- 0x8a21
0x89ad:     ff 85 c0 0f 85 de                  	inc dword ptr [ebp - 0x217af040]
0x89b3:     00 00                              	add byte ptr [eax], al
0x89b5:     00 85 f6 0f 84 8b                  	add byte ptr [ebp - 0x747bf00a], al
0x89bb:     00 00                              	add byte ptr [eax], al
0x89bd:     00 8b 47 20 89 eb                  	add byte ptr [ebx - 0x1476dfb9], cl
0x89c3:     8d 54 35 ff                        	lea edx, [ebp + esi - 1]
0x89c7:     21 c3                              	and ebx, eax
0x89c9:     21 c2                              	and edx, eax
0x89cb:     39 d3                              	cmp ebx, edx
0x89cd:     77 7a                              	ja 0x8a49 <function_8a49>
0x89cf:     8d 6f 28                           	lea ebp, [edi + 0x28]
0x89d2:     8d b6 00 00 00 00                  	lea esi, [esi]
0x89d8:     8b 47 2c                           	mov eax, dword ptr [edi + 0x2c]
0x89db:     85 c0                              	test eax, eax
0x89dd:     0f 84 8d 00 00 00                  	je 0x8a70 <function_8a70>
0x89e3:     89 ee                              	mov esi, ebp
0x89e5:     eb 0a                              	jmp 0x89f1 <function_89ad+0x44>
; data inside code section at 0x89e7 -- 0x89e8
0x89e7:     90                                                 |.               |
0x89e8:     89 c6                              	mov esi, eax
0x89ea:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0x89ed:     85 c0                              	test eax, eax
0x89ef:     74 0c                              	je 0x89fd <function_89ad+0x50>
0x89f1:     39 58 10                           	cmp dword ptr [eax + 0x10], ebx
0x89f4:     73 f2                              	jae 0x89e8 <function_89ad+0x3b>
0x89f6:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x89f9:     85 c0                              	test eax, eax
0x89fb:     75 f4                              	jne 0x89f1 <function_89ad+0x44>
0x89fd:     39 f5                              	cmp ebp, esi
0x89ff:     74 6f                              	je 0x8a70 <function_8a70>
0x8a01:     39 5e 10                           	cmp dword ptr [esi + 0x10], ebx
0x8a04:     77 6a                              	ja 0x8a70 <function_8a70>
0x8a06:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x8a09:     83 e8 01                           	sub eax, 1
0x8a0c:     85 c0                              	test eax, eax
0x8a0e:     89 46 14                           	mov dword ptr [esi + 0x14], eax
0x8a11:     75 2f                              	jne 0x8a42 <function_8a42>
0x8a13:     8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x8a16:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x8a1a:     89 1c 24                           	mov dword ptr [esp], ebx
0x8a1d:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x8a21 -- 0x8a22
0x8a21:     e8                                                 |.               |
; dynamically linked function: munlock at 0x8a22 -- 0x8a23
; data inside code section at 0x8a23 -- 0x8a2e
0x8a23:     ff ff ff 89 6c 24 04 89  34 24 e8                  |....l$..4$.     |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x8a2e -- 0x8a2f
; data inside code section at 0x8a2f -- 0x8a30
0x8a2f:     ff                                                 |.               |
; function: function_8a30 at 0x8a30 -- 0x8a31
; data inside code section at 0x8a31 -- 0x8a36
0x8a31:     ff 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZdlPv at 0x8a36 -- 0x8a37
; data inside code section at 0x8a37 -- 0x8a42
0x8a37:     ff ff ff 8b 54 24 18 83  6f 38 01                  |....T$..o8.     |
; function: function_8a42 at 0x8a42 -- 0x8a49
0x8a42:     03 5f 1c                           	add ebx, dword ptr [edi + 0x1c]
0x8a45:     39 da                              	cmp edx, ebx
0x8a47:     73 8f                              	jae 0x89d8
; function: function_8a49 at 0x8a49 -- 0x8a50
0x8a49:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x8a4d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8a50 -- 0x8a51
0x8a50:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x8a51 -- 0x8a52
; data inside code section at 0x8a52 -- 0x8a54
0x8a52:     ff ff                                              |..              |
; function: function_8a54 at 0x8a54 -- 0x8a6e
0x8a54:     ff 85 c0 75 58 8b                  	inc dword ptr [ebp - 0x74a78a40]
0x8a5a:     44                                 	inc esp
0x8a5b:     24 2c                              	and al, 0x2c
0x8a5d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8a64:     75 46                              	jne 0x8aac <function_8aac>
0x8a66:     83 c4 3c                           	add esp, 0x3c
0x8a69:     5b                                 	pop ebx
0x8a6a:     5e                                 	pop esi
0x8a6b:     5f                                 	pop edi
0x8a6c:     5d                                 	pop ebp
0x8a6d:     c3                                 	ret 
; data inside code section at 0x8a6e -- 0x8a70
0x8a6e:     66 90                                              |f.              |
; function: function_8a70 at 0x8a70 -- 0x8a8f
0x8a70:     c7 44 24 0c 00 48 00 00            	mov dword ptr [esp + 0xc], 0x4800 ; "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x8a78:     c7 44 24 08 5a 00 00 00            	mov dword ptr [esp + 8], 0x5a
0x8a80:     c7 44 24 04 44 24 00 00            	mov dword ptr [esp + 4], 0x2444 ; "allocators.h"
0x8a88:     c7 04 24 51 24 00 00               	mov dword ptr [esp], 0x2451 ; "it != histogram.end()"
; data inside code section at 0x8a8f -- 0x8a90
0x8a8f:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x8a90 -- 0x8a91
; data inside code section at 0x8a91 -- 0x8aac
0x8a91:     ff ff ff 8d 5c 24 24 89  44 24 28 c7 44 24 24 b8   |....\$$.D$(.D$$.|
0x8aa1:     ef 00 00 89 1c 24 e8 b4  85 00 00                  |.....$.....     |
; function: function_8aac at 0x8aac -- 0x8aad
; dynamically linked function: __stack_chk_fail at 0x8aad -- 0x8aae
; data inside code section at 0x8aae -- 0x8ac8
0x8aae:     ff ff ff e8 a4 34 00 00  89 c6 89 1c 24 e8 40 37   |.....4......$.@7|
0x8abe:     00 00 89 34 24 e8 fc ff  ff ff                     |...4$.....      |
; section: .text._ZN4CKeyD2Ev
; function: _ZN4CKeyD1Ev at 0x8ad0 -- 0x8af2
0x8ad0:     53                                 	push ebx
0x8ad1:     83 ec 28                           	sub esp, 0x28
0x8ad4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x8ad8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8ade:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8ae2:     31 c0                              	xor eax, eax
0x8ae4:     c7 44 24 04 20 00 00 00            	mov dword ptr [esp + 4], 0x20
0x8aec:     83 c3 02                           	add ebx, 2
0x8aef:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x8af2 -- 0x8af3
0x8af2:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x8af3 -- 0x8af4
; data inside code section at 0x8af4 -- 0x8b06
0x8af4:     ff ff ff c7 44 24 08 20  00 00 00 89 5c 24 04 c7   |....D$. ....\$..|
0x8b04:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x8b06 -- 0x8b21
; data inside code section at 0x8b21 -- 0x8b22
0x8b21:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8b22 -- 0x8b23
; data inside code section at 0x8b23 -- 0x8b26
0x8b23:     ff ff ff                                           |...             |
; section: .text._ZN5boost11unique_lockINS_5mutexEED2Ev
; function: _ZN5boost11unique_lockINS_5mutexEED1Ev at 0x8b30 -- 0x8b65
0x8b30:     83 ec 2c                           	sub esp, 0x2c
0x8b33:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x8b37:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x8b3e:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x8b42:     31 d2                              	xor edx, edx
0x8b44:     80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x8b48:     75 16                              	jne 0x8b60 <_ZN5boost11unique_lockINS_5mutexEED1Ev+0x30>
0x8b4a:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x8b4e:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8b55:     75 3b                              	jne 0x8b92 <function_8b92>
0x8b57:     83 c4 2c                           	add esp, 0x2c
0x8b5a:     c3                                 	ret 
; data inside code section at 0x8b5b -- 0x8b60
0x8b5b:     90 8d 74 26 00                                     |..t&.           |
0x8b60:     8b 00                              	mov eax, dword ptr [eax]
0x8b62:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8b65 -- 0x8b66
0x8b65:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x8b66 -- 0x8b67
; data inside code section at 0x8b67 -- 0x8b81
0x8b67:     ff ff ff 85 c0 74 dc c7  44 24 0c 77 48 00 00 c7   |.....t..D$.wH...|
0x8b77:     44 24 08 3d 00 00 00 c7  44 24                     |D$.=....D$      |
; function: function_8b81 at 0x8b81 -- 0x8b8e
0x8b81:     04 38                              	add al, 0x38
0x8b83:     33 00                              	xor eax, dword ptr [eax]
0x8b85:     00 c7                              	add bh, al
0x8b87:     04 24                              	add al, 0x24
0x8b89:     e9 23 00 00 e8                     	jmp 0xe8008bb1 <function_e8008bb1>
; dynamically linked function: __assert_fail at 0x8b8e -- 0x8b8f
; data inside code section at 0x8b8f -- 0x8b92
0x8b8f:     ff ff ff                                           |...             |
; function: function_8b92 at 0x8b92 -- 0x8b93
; dynamically linked function: __stack_chk_fail at 0x8b93 -- 0x8b94
; data inside code section at 0x8b94 -- 0x8b97
0x8b94:     ff ff ff                                           |...             |
; section: .text._ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED2Ev
; function: _ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev at 0x8ba0 -- 0x8be1
0x8ba0:     53                                 	push ebx
0x8ba1:     83 ec 28                           	sub esp, 0x28
0x8ba4:     8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x8ba8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8bae:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8bb2:     31 c0                              	xor eax, eax
0x8bb4:     8b 11                              	mov edx, dword ptr [ecx]
0x8bb6:     89 d0                              	mov eax, edx
0x8bb8:     c1 f8 1f                           	sar eax, 0x1f
0x8bbb:     31 d0                              	xor eax, edx
0x8bbd:     83 f8 13                           	cmp eax, 0x13
0x8bc0:     76 26                              	jbe 0x8be8 <function_8be8>
0x8bc2:     c7 44 24 0c e0 63 00 00            	mov dword ptr [esp + 0xc], 0x63e0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x8bca:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x8bd2:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x8bda:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0x8be1 -- 0x8be2
0x8be1:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x8be2 -- 0x8be3
; data inside code section at 0x8be3 -- 0x8be5
0x8be3:     ff ff                                              |..              |
; function: function_8be5 at 0x8be5 -- 0x8be8
0x8be5:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_8be8 at 0x8be8 -- 0x8bef
0x8be8:     ff 24 85 c0 8c 00 00               	jmp dword ptr [eax*4 + 0x8cc0]
; data inside code section at 0x8bef -- 0x8bf0
0x8bef:     90                                                 |.               |
; function: function_8bf0 at 0x8bf0 -- 0x8c2d
0x8bf0:     e8 ab 00 00 00                     	call 0x8ca0 <function_8ca0>
0x8bf5:     8d 76 00                           	lea esi, [esi]
0x8bf8:     85 d2                              	test edx, edx
0x8bfa:     8d b6 00 00 00 00                  	lea esi, [esi]
0x8c00:     0f 88 92 00 00 00                  	js 0x8c98 <function_8c98>
0x8c06:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x8c09:     85 c0                              	test eax, eax
0x8c0b:     74 53                              	je 0x8c60 <function_8c60>
0x8c0d:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x8c11:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8c18:     0f 85 9c 00 00 00                  	jne 0x8cba <function_8cba>
0x8c1e:     8b 10                              	mov edx, dword ptr [eax]
0x8c20:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x8c24:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x8c27:     83 c4 28                           	add esp, 0x28
0x8c2a:     5b                                 	pop ebx
0x8c2b:     ff e0                              	jmp eax
; data inside code section at 0x8c2d -- 0x8c53
0x8c2d:     8d 76 00 85 d2 79 44 8b  59 04 85 db 74 25 8d 43   |.v...yD.Y...t%.C|
0x8c3d:     04 89 04 24 e8 2a 44 00  00 8b 44 24 1c 65 33 05   |...$.*D...D$.e3.|
0x8c4d:     14 00 00 00 75 67                                  |....ug          |
; function: function_8c53 at 0x8c53 -- 0x8c54
; data inside code section at 0x8c54 -- 0x8c5c
0x8c54:     5c 24 30 83 c4 28 5b e9                            |\$0..([.        |
; dynamically linked function: _ZdlPv at 0x8c5c -- 0x8c5d
; data inside code section at 0x8c5d -- 0x8c60
0x8c5d:     ff ff ff                                           |...             |
; function: function_8c60 at 0x8c60 -- 0x8c72
0x8c60:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x8c64:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8c6b:     75 4d                              	jne 0x8cba <function_8cba>
0x8c6d:     83 c4 28                           	add esp, 0x28
0x8c70:     5b                                 	pop ebx
0x8c71:     c3                                 	ret 
; data inside code section at 0x8c72 -- 0x8c78
0x8c72:     8d b6 00 00 00 00                                  |......          |
; function: function_8c78 at 0x8c78 -- 0x8c95
0x8c78:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x8c7c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8c83:     75 35                              	jne 0x8cba <function_8cba>
0x8c85:     83 c1 08                           	add ecx, 8
0x8c88:     89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x8c8c:     83 c4 28                           	add esp, 0x28
0x8c8f:     5b                                 	pop ebx
0x8c90:     e9 db 43 00 00                     	jmp 0xd070
; data inside code section at 0x8c95 -- 0x8c98
0x8c95:     8d 76 00                                           |.v.             |
; function: function_8c98 at 0x8c98 -- 0x8c9f
0x8c98:     8b 59 04                           	mov ebx, dword ptr [ecx + 4]
0x8c9b:     85 db                              	test ebx, ebx
0x8c9d:     74 c1                              	je 0x8c60 <function_8c60>
; data inside code section at 0x8c9f -- 0x8ca0
0x8c9f:     8b                                                 |.               |
; function: function_8ca0 at 0x8ca0 -- 0x8cba
0x8ca0:     03 85 c0 74 08 8b                  	add eax, dword ptr [ebp - 0x74f78b40]
0x8ca6:     10 89 04 24 ff 52                  	adc byte ptr [ecx + 0x52ff2404], cl
0x8cac:     04 8b                              	add al, 0x8b
0x8cae:     44                                 	inc esp
0x8caf:     24 1c                              	and al, 0x1c
0x8cb1:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8cb8:     74 99                              	je 0x8c53
; function: function_8cba at 0x8cba -- 0x8cbb
; dynamically linked function: __stack_chk_fail at 0x8cbb -- 0x8cbc
; data inside code section at 0x8cbc -- 0x8cbf
0x8cbc:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIh16secure_allocatorIhEED2Ev
; function: _ZNSt6vectorIh16secure_allocatorIhEED1Ev at 0x8d10 -- 0x8d3e
0x8d10:     83 ec 2c                           	sub esp, 0x2c
0x8d13:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x8d17:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x8d1b:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x8d22:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x8d26:     31 d2                              	xor edx, edx
0x8d28:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x8d2c:     8b 18                              	mov ebx, dword ptr [eax]
0x8d2e:     8b 70 08                           	mov esi, dword ptr [eax + 8]
0x8d31:     85 db                              	test ebx, ebx
0x8d33:     74 43                              	je 0x8d78 <function_8d78>
0x8d35:     29 de                              	sub esi, ebx
0x8d37:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x8d3b:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x8d3e -- 0x8d3f
0x8d3e:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x8d3f -- 0x8d40
; data inside code section at 0x8d40 -- 0x8d4e
0x8d40:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x8d4e -- 0x8d73
; data inside code section at 0x8d73 -- 0x8d74
0x8d73:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x8d74 -- 0x8d75
; data inside code section at 0x8d75 -- 0x8d78
0x8d75:     ff ff ff                                           |...             |
; function: function_8d78 at 0x8d78 -- 0x8d91
0x8d78:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x8d7c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8d83:     75 0c                              	jne 0x8d91 <function_8d78+0x18>
0x8d85:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x8d89:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x8d8d:     83 c4 2c                           	add esp, 0x2c
0x8d90:     c3                                 	ret 
; data inside code section at 0x8d91 -- 0x8d92
0x8d91:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8d92 -- 0x8d93
; data inside code section at 0x8d93 -- 0x8d96
0x8d93:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x8da0 -- 0x8e6c
0x8da0:     56                                 	push esi
0x8da1:     53                                 	push ebx
0x8da2:     83 ec 54                           	sub esp, 0x54
0x8da5:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8dab:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x8daf:     31 c0                              	xor eax, eax
0x8db1:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x8db5:     80 3d c8 f2 00 00 00               	cmp byte ptr [0xf2c8], 0
0x8dbc:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x8dc4:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x8dcc:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x8dd4:     c7 44 24 40 ff ff ff ff            	mov dword ptr [esp + 0x40], 0xffffffff
0x8ddc:     c7 44 24 30 48 f2 00 00            	mov dword ptr [esp + 0x30], 0xf248
0x8de4:     c7 44 24 44 58 f2 00 00            	mov dword ptr [esp + 0x44], 0xf258
0x8dec:     c7 44 24 14 88 f2 00 00            	mov dword ptr [esp + 0x14], 0xf288
0x8df4:     c7 44 24 28 a0 f2 00 00            	mov dword ptr [esp + 0x28], 0xf2a0
0x8dfc:     c7 44 24 2c b4 f2 00 00            	mov dword ptr [esp + 0x2c], 0xf2b4
0x8e04:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x8e0c:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x8e14:     c7 44 24 1c 00 83 00 00            	mov dword ptr [esp + 0x1c], 0x8300 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x8e1c:     c7 44 24 20 28 34 00 00            	mov dword ptr [esp + 0x20], 0x3428 ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x8e24:     c7 44 24 24 51 00 00 00            	mov dword ptr [esp + 0x24], 0x51
0x8e2c:     0f 84 8e 00 00 00                  	je 0x8ec0 <function_8ec0>
0x8e32:     a1 c8 f2 00 00                     	mov eax, dword ptr [0xf2c8]
0x8e37:     89 03                              	mov dword ptr [ebx], eax
0x8e39:     a1 cc f2 00 00                     	mov eax, dword ptr [0xf2cc]
0x8e3e:     85 c0                              	test eax, eax
0x8e40:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x8e43:     74 04                              	je 0x8e49 <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xa9>
0x8e45:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x8e49:     8d 44 24 28                        	lea eax, [esp + 0x28]
0x8e4d:     8d 74 24 14                        	lea esi, [esp + 0x14]
0x8e51:     89 04 24                           	mov dword ptr [esp], eax
0x8e54:     c7 44 24 2c 10 f0 00 00            	mov dword ptr [esp + 0x2c], 0xf010
0x8e5c:     c7 44 24 14 48 f2 00 00            	mov dword ptr [esp + 0x14], 0xf248
0x8e64:     c7 44 24 28 58 f2 00 00            	mov dword ptr [esp + 0x28], 0xf258
; data inside code section at 0x8e6c -- 0x8e6d
0x8e6c:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x8e6d -- 0x8e6e
; data inside code section at 0x8e6e -- 0x8e95
0x8e6e:     ff ff ff 89 34 24 8d 74  24 30 e8 b3 3d 00 00 8d   |....4$.t$0..=...|
0x8e7e:     44 24 44 89 04 24 c7 44  24 30 48 f2 00 00 c7 44   |D$D..$.D$0H....D|
0x8e8e:     24 44 58 f2 00 00 e8                               |$DX....         |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x8e95 -- 0x8e96
; data inside code section at 0x8e96 -- 0x8e98
0x8e96:     ff ff                                              |..              |
; function: function_8e98 at 0x8e98 -- 0x8ebc
0x8e98:     ff 89 34 24 e8 8f                  	dec dword ptr [ecx - 0x7017dbcc]
0x8e9e:     3d 00 00 89 d8                     	cmp eax, 0xd8890000
0x8ea3:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x8ea7:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8eae:     0f 85 d7 00 00 00                  	jne 0x8f8b <function_8f8b>
0x8eb4:     83 c4 54                           	add esp, 0x54
0x8eb7:     5b                                 	pop ebx
0x8eb8:     5e                                 	pop esi
0x8eb9:     c2 04 00                           	ret 4
; data inside code section at 0x8ebc -- 0x8ec0
0x8ebc:     8d 74 26 00                                        |.t&.            |
; function: function_8ec0 at 0x8ec0 -- 0x8ec7
0x8ec0:     c7 04 24 c8 f2 00 00               	mov dword ptr [esp], 0xf2c8
; data inside code section at 0x8ec7 -- 0x8ec8
0x8ec7:     e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x8ec8 -- 0x8ec9
; data inside code section at 0x8ec9 -- 0x8edc
0x8ec9:     ff ff ff 85 c0 0f 84 5e  ff ff ff c7 04 24 1c 00   |.......^.....$..|
0x8ed9:     00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x8edc -- 0x8edd
; data inside code section at 0x8edd -- 0x8f3e
0x8edd:     ff ff ff 89 c6 c7 00 d0  ef 00 00 8b 44 24 18 85   |............D$..|
0x8eed:     c0 89 46 04 74 08 8b 10  89 04 24 ff 52 0c 8b 44   |..F.t.....$.R..D|
0x8efd:     24 1c c7 06 88 f2 00 00  c7 46 14 a0 f2 00 00 c7   |$........F......|
0x8f0d:     46 18 b4 f2 00 00 89 46  08 8b 44 24 20 c7 05 cc   |F......F..D$ ...|
0x8f1d:     f2 00 00 00 00 00 00 89  46 0c 8b 44 24 24 89 46   |........F..D$$.F|
0x8f2d:     10 8d 46 18 a3 c8 f2 00  00 c7 04 24 10 00 00 00   |..F........$....|
0x8f3d:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x8f3e -- 0x8f3f
; data inside code section at 0x8f3f -- 0x8f66
0x8f3f:     ff ff ff c7 40 04 01 00  00 00 c7 00 d0 f2 00 00   |....@...........|
0x8f4f:     89 70 0c c7 40 08 01 00  00 00 a3 cc f2 00 00 c7   |.p..@...........|
0x8f5f:     04 24 c8 f2 00 00 e8                               |.$.....         |
; dynamically linked function: __cxa_guard_release at 0x8f66 -- 0x8f67
; data inside code section at 0x8f67 -- 0x8f6e
0x8f67:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x8f6e -- 0x8f81
; data inside code section at 0x8f81 -- 0x8f82
0x8f81:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x8f82 -- 0x8f83
; data inside code section at 0x8f83 -- 0x8f86
0x8f83:     ff ff ff                                           |...             |
; function: function_8f86 at 0x8f86 -- 0x8f8b
0x8f86:     e9 a7 fe ff ff                     	jmp 0x8e32
; function: function_8f8b at 0x8f8b -- 0x8f8c
; dynamically linked function: __stack_chk_fail at 0x8f8c -- 0x8f8d
; data inside code section at 0x8f8d -- 0x8f94
0x8f8d:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x8f94 -- 0x8f95
; data inside code section at 0x8f95 -- 0x8fa1
0x8f95:     ff ff ff 8b 06 89 34 24  ff 50 04 e8               |......4$.P..    |
; dynamically linked function: __cxa_rethrow at 0x8fa1 -- 0x8fa2
; data inside code section at 0x8fa2 -- 0x8fa6
0x8fa2:     ff ff ff 89                                        |....            |
; function: function_8fa6 at 0x8fa6 -- 0x8fa7
0x8fa6:     c3                                 	ret 
; data inside code section at 0x8fa7 -- 0x8fab
0x8fa7:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZdlPv at 0x8fab -- 0x8fac
; data inside code section at 0x8fac -- 0x8faf
0x8fac:     ff ff ff                                           |...             |
; function: function_8faf at 0x8faf -- 0x8fb0
; data inside code section at 0x8fb0 -- 0x8fb7
0x8fb0:     04 24 c8 f2 00 00 e8                               |.$.....         |
; dynamically linked function: __cxa_guard_abort at 0x8fb7 -- 0x8fb8
; data inside code section at 0x8fb8 -- 0x8fd7
0x8fb8:     ff ff ff 8d 44 24 14 89  04 24 e8 29 3f 00 00 8d   |....D$...$.)?...|
0x8fc8:     44 24 30 89 04 24 e8 4d  3d 00 00 89 1c 24 e8      |D$0..$.M=....$. |
; dynamically linked function: _Unwind_Resume at 0x8fd7 -- 0x8fd8
; data inside code section at 0x8fd8 -- 0x8fda
0x8fd8:     ff ff                                              |..              |
; function: function_8fda at 0x8fda -- 0x8fe1
0x8fda:     ff 89 c3 eb d0 89                  	dec dword ptr [ecx - 0x762f143d]
0x8fe0:     c3                                 	ret 
; data inside code section at 0x8fe1 -- 0x8fe2
0x8fe1:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x8fe2 -- 0x8fe3
; data inside code section at 0x8fe3 -- 0x8fe6
0x8fe3:     ff ff ff                                           |...             |
; function: function_8fe6 at 0x8fe6 -- 0x8fe8
0x8fe6:     eb c7                              	jmp 0x8faf <function_8faf>
; section: .text._ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED2Ev
; function: _ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev at 0x8ff0 -- 0x9025
0x8ff0:     53                                 	push ebx
0x8ff1:     83 ec 28                           	sub esp, 0x28
0x8ff4:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x8ff8:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x8fff:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x9003:     31 d2                              	xor edx, edx
0x9005:     80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x9009:     75 15                              	jne 0x9020 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev+0x30>
0x900b:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x900f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9016:     75 4e                              	jne 0x9066 <function_9066>
0x9018:     83 c4 28                           	add esp, 0x28
0x901b:     5b                                 	pop ebx
0x901c:     c3                                 	ret 
; data inside code section at 0x901d -- 0x9020
0x901d:     8d 76 00                                           |.v.             |
0x9020:     8b 18                              	mov ebx, dword ptr [eax]
0x9022:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9025 -- 0x9026
0x9025:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x9026 -- 0x9027
; data inside code section at 0x9027 -- 0x903b
0x9027:     ff ff ff 85 c0 75 3d 8b  43 50 83 e8 01 85 c0 89   |.....u=.CP......|
0x9037:     43 50 74 25                                        |CPt%            |
; function: function_903b at 0x903b -- 0x903c
; data inside code section at 0x903c -- 0x9042
0x903c:     43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x9042 -- 0x9043
; data inside code section at 0x9043 -- 0x904e
0x9043:     ff ff ff 85 c0 75 26 89  1c 24 e8                  |.....u&..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x904e -- 0x904f
; data inside code section at 0x904f -- 0x9052
0x904f:     ff ff ff                                           |...             |
; function: function_9052 at 0x9052 -- 0x9066
0x9052:     85 c0                              	test eax, eax
0x9054:     74 b5                              	je 0x900b
0x9056:     e8 07 35 00 00                     	call 0xc562
0x905b:     90                                 	nop 
0x905c:     8d 74 26 00                        	lea esi, [esi]
0x9060:     c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x9064:     eb d5                              	jmp 0x903b <function_903b>
; function: function_9066 at 0x9066 -- 0x9067
; dynamically linked function: __stack_chk_fail at 0x9067 -- 0x9068
; data inside code section at 0x9068 -- 0x9090
0x9068:     ff ff ff e8 be 34 00 00  c7 44 24 0c c0 47 00 00   |.....4...D$..G..|
0x9078:     c7 44 24 08 93 00 00 00  c7 44 24 04 00 33 00 00   |.D$......D$..3..|
0x9088:     c7 04 24 67 24 00 00 e8                            |..$g$...        |
; dynamically linked function: __assert_fail at 0x9090 -- 0x9091
; data inside code section at 0x9091 -- 0x9094
0x9091:     ff ff ff                                           |...             |
; section: .text._ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_
; function: _ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_ at 0x90a0 -- 0x9139
0x90a0:     55                                 	push ebp
0x90a1:     57                                 	push edi
0x90a2:     56                                 	push esi
0x90a3:     53                                 	push ebx
0x90a4:     83 ec 3c                           	sub esp, 0x3c
0x90a7:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x90ab:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x90b2:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x90b6:     31 d2                              	xor edx, edx
0x90b8:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x90bc:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x90c0:     8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x90c3:     8d 50 04                           	lea edx, [eax + 4]
0x90c6:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x90ca:     85 db                              	test ebx, ebx
0x90cc:     74 62                              	je 0x9130 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x90>
0x90ce:     89 d7                              	mov edi, edx
0x90d0:     eb 0f                              	jmp 0x90e1 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x41>
; data inside code section at 0x90d2 -- 0x90d8
0x90d2:     8d b6 00 00 00 00                                  |......          |
0x90d8:     89 df                              	mov edi, ebx
0x90da:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x90dd:     85 db                              	test ebx, ebx
0x90df:     74 1a                              	je 0x90fb <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x5b>
0x90e1:     8d 43 10                           	lea eax, [ebx + 0x10]
0x90e4:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x90e8:     89 04 24                           	mov dword ptr [esp], eax
0x90eb:     e8 60 83 00 00                     	call 0x11450 <unknown_11450>
0x90f0:     84 c0                              	test al, al
0x90f2:     74 e4                              	je 0x90d8 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x38>
0x90f4:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x90f7:     85 db                              	test ebx, ebx
0x90f9:     75 e6                              	jne 0x90e1 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x41>
0x90fb:     39 7c 24 1c                        	cmp dword ptr [esp + 0x1c], edi
0x90ff:     74 2f                              	je 0x9130 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x90>
0x9101:     8d 47 10                           	lea eax, [edi + 0x10]
0x9104:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9108:     89 34 24                           	mov dword ptr [esp], esi
0x910b:     e8 40 83 00 00                     	call 0x11450 <unknown_11450>
0x9110:     84 c0                              	test al, al
0x9112:     75 1c                              	jne 0x9130 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x90>
0x9114:     89 7d 00                           	mov dword ptr [ebp], edi
0x9117:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x911b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9122:     89 e8                              	mov eax, ebp
0x9124:     75 13                              	jne 0x9139 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x97>
0x9126:     83 c4 3c                           	add esp, 0x3c
0x9129:     5b                                 	pop ebx
0x912a:     5e                                 	pop esi
0x912b:     5f                                 	pop edi
0x912c:     5d                                 	pop ebp
0x912d:     c2 04 00                           	ret 4
0x9130:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x9134:     89 55 00                           	mov dword ptr [ebp], edx
0x9137:     eb de                              	jmp 0x9117 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x77>
; data inside code section at 0x9139 -- 0x913a
0x9139:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x913a -- 0x913b
; data inside code section at 0x913b -- 0x913e
0x913b:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E at 0x9140 -- 0x918a
0x9140:     55                                 	push ebp
0x9141:     57                                 	push edi
0x9142:     56                                 	push esi
0x9143:     53                                 	push ebx
0x9144:     83 ec 2c                           	sub esp, 0x2c
0x9147:     8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x914b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9151:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9155:     31 c0                              	xor eax, eax
0x9157:     8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x915b:     85 db                              	test ebx, ebx
0x915d:     75 0b                              	jne 0x916a <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x2a>
0x915f:     eb 52                              	jmp 0x91b3 <function_91b3>
; data inside code section at 0x9161 -- 0x9168
0x9161:     8d b4 26 00 00 00 00                               |..&....         |
0x9168:     89 fb                              	mov ebx, edi
0x916a:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x916d:     8d 73 26                           	lea esi, [ebx + 0x26]
0x9170:     89 2c 24                           	mov dword ptr [esp], ebp
0x9173:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9177:     e8 04 91 00 00                     	call 0x12280 <unknown_12280>
0x917c:     8b 7b 08                           	mov edi, dword ptr [ebx + 8]
0x917f:     c7 44 24 04 20 00 00 00            	mov dword ptr [esp + 4], 0x20
0x9187:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x918a -- 0x918b
0x918a:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x918b -- 0x918c
; data inside code section at 0x918c -- 0x919e
0x918c:     ff ff ff c7 44 24 08 20  00 00 00 89 74 24 04 c7   |....D$. ....t$..|
0x919c:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x919e -- 0x91aa
; data inside code section at 0x91aa -- 0x91ab
0x91aa:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x91ab -- 0x91ac
; data inside code section at 0x91ac -- 0x91b3
0x91ac:     ff ff ff 85 ff 75 b5                               |.....u.         |
; function: function_91b3 at 0x91b3 -- 0x91c8
0x91b3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x91b7:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x91be:     75 08                              	jne 0x91c8 <function_91b3+0x14>
0x91c0:     83 c4 2c                           	add esp, 0x2c
0x91c3:     5b                                 	pop ebx
0x91c4:     5e                                 	pop esi
0x91c5:     5f                                 	pop edi
0x91c6:     5d                                 	pop ebp
0x91c7:     c3                                 	ret 
; data inside code section at 0x91c8 -- 0x91c9
0x91c8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x91c9 -- 0x91ca
; data inside code section at 0x91ca -- 0x91cd
0x91ca:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E
; function: _ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E at 0x91d0 -- 0x920e
0x91d0:     57                                 	push edi
0x91d1:     56                                 	push esi
0x91d2:     53                                 	push ebx
0x91d3:     83 ec 20                           	sub esp, 0x20
0x91d6:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x91da:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x91e0:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x91e4:     31 c0                              	xor eax, eax
0x91e6:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x91ea:     85 db                              	test ebx, ebx
0x91ec:     75 04                              	jne 0x91f2 <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x22>
0x91ee:     eb 2f                              	jmp 0x921f <function_921f>
0x91f0:     89 f3                              	mov ebx, esi
0x91f2:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x91f5:     89 3c 24                           	mov dword ptr [esp], edi
0x91f8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x91fc:     e8 9f 91 00 00                     	call 0x123a0 <unknown_123a0>
0x9201:     8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0x9204:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x9207:     85 c0                              	test eax, eax
0x9209:     74 08                              	je 0x9213 <function_9213>
0x920b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x920e -- 0x920f
0x920e:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x920f -- 0x9210
; data inside code section at 0x9210 -- 0x9213
0x9210:     ff ff ff                                           |...             |
; function: function_9213 at 0x9213 -- 0x9216
0x9213:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9216 -- 0x9217
0x9216:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x9217 -- 0x9218
; data inside code section at 0x9218 -- 0x921f
0x9218:     ff ff ff 85 f6 75 d1                               |.....u.         |
; function: function_921f at 0x921f -- 0x9233
0x921f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9223:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x922a:     75 07                              	jne 0x9233 <function_921f+0x13>
0x922c:     83 c4 20                           	add esp, 0x20
0x922f:     5b                                 	pop ebx
0x9230:     5e                                 	pop esi
0x9231:     5f                                 	pop edi
0x9232:     c3                                 	ret 
; data inside code section at 0x9233 -- 0x9234
0x9233:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9234 -- 0x9235
; data inside code section at 0x9235 -- 0x9238
0x9235:     ff ff ff                                           |...             |
; section: .text._ZN14CBasicKeyStoreD2Ev
; function: _ZN14CBasicKeyStoreD1Ev at 0x9240 -- 0x928a
0x9240:     53                                 	push ebx
0x9241:     83 ec 38                           	sub esp, 0x38
0x9244:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x9248:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x924e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x9252:     31 c0                              	xor eax, eax
0x9254:     8b 43 78                           	mov eax, dword ptr [ebx + 0x78]
0x9257:     c7 03 28 ef 00 00                  	mov dword ptr [ebx], 0xef28
0x925d:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9261:     8d 43 70                           	lea eax, [ebx + 0x70]
0x9264:     89 04 24                           	mov dword ptr [esp], eax
0x9267:     e8 a4 91 00 00                     	call 0x12410 <unknown_12410>
0x926c:     8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0x926f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9273:     8d 43 58                           	lea eax, [ebx + 0x58]
0x9276:     89 04 24                           	mov dword ptr [esp], eax
0x9279:     e8 02 91 00 00                     	call 0x12380 <unknown_12380>
0x927e:     c7 03 e8 ee 00 00                  	mov dword ptr [ebx], 0xeee8
0x9284:     8d 43 04                           	lea eax, [ebx + 4]
0x9287:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x928a -- 0x928b
0x928a:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x928b -- 0x928c
; data inside code section at 0x928c -- 0x928e
0x928c:     ff ff                                              |..              |
; function: function_928e at 0x928e -- 0x9295
0x928e:     ff 85 c0 75 21 83                  	inc dword ptr [ebp - 0x7cde8a40]
0x9294:     c3                                 	ret 
; data inside code section at 0x9295 -- 0x929a
0x9295:     1c 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x929a -- 0x929b
; data inside code section at 0x929b -- 0x929d
0x929b:     ff ff                                              |..              |
; function: function_929d at 0x929d -- 0x92b4
0x929d:     ff 85 c0 75 1c 8b                  	inc dword ptr [ebp - 0x74e38a40]
0x92a3:     44                                 	inc esp
0x92a4:     24 2c                              	and al, 0x2c
0x92a6:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x92ad:     75 0a                              	jne 0x92b9 <function_929d+0x16>
0x92af:     83 c4 38                           	add esp, 0x38
0x92b2:     5b                                 	pop ebx
0x92b3:     c3                                 	ret 
; function: function_92b4 at 0x92b4 -- 0x92b9
0x92b4:     e8 2d 35 00 00                     	call 0xc7e6 <function_c7e6>
; data inside code section at 0x92b9 -- 0x92ba
0x92b9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x92ba -- 0x92bb
; data inside code section at 0x92bb -- 0x92de
0x92bb:     ff ff ff c7 44 24 0c a0  46 00 00 c7 44 24 08 5e   |....D$..F...D$.^|
0x92cb:     00 00 00 c7 44 24 04 00  33 00 00 c7 04 24 cc 23   |....D$..3....$.#|
0x92db:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x92de -- 0x92df
; data inside code section at 0x92df -- 0x92f6
0x92df:     ff ff ff 89 44 24 1c 89  1c 24 e8 02 37 00 00 8b   |....D$...$..7...|
0x92ef:     44 24 1c 89 04 24 e8                               |D$...$.         |
; dynamically linked function: _Unwind_Resume at 0x92f6 -- 0x92f7
; data inside code section at 0x92f7 -- 0x92fa
0x92f7:     ff ff ff                                           |...             |
; section: .text._ZN14CBasicKeyStoreD0Ev
; function: _ZN14CBasicKeyStoreD0Ev at 0x9300 -- 0x934a
0x9300:     53                                 	push ebx
0x9301:     83 ec 38                           	sub esp, 0x38
0x9304:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x9308:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x930e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x9312:     31 c0                              	xor eax, eax
0x9314:     8b 43 78                           	mov eax, dword ptr [ebx + 0x78]
0x9317:     c7 03 28 ef 00 00                  	mov dword ptr [ebx], 0xef28
0x931d:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9321:     8d 43 70                           	lea eax, [ebx + 0x70]
0x9324:     89 04 24                           	mov dword ptr [esp], eax
0x9327:     e8 a4 91 00 00                     	call 0x124d0 <unknown_124d0>
0x932c:     8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0x932f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9333:     8d 43 58                           	lea eax, [ebx + 0x58]
0x9336:     89 04 24                           	mov dword ptr [esp], eax
0x9339:     e8 02 91 00 00                     	call 0x12440 <unknown_12440>
0x933e:     c7 03 e8 ee 00 00                  	mov dword ptr [ebx], 0xeee8
0x9344:     8d 43 04                           	lea eax, [ebx + 4]
0x9347:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x934a -- 0x934b
0x934a:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x934b -- 0x934c
; data inside code section at 0x934c -- 0x935a
0x934c:     ff ff ff 85 c0 75 29 8d  43 1c 89 04 24 e8         |.....u).C...$.  |
; dynamically linked function: pthread_cond_destroy at 0x935a -- 0x935b
; data inside code section at 0x935b -- 0x9378
0x935b:     ff ff ff 85 c0 75 24 8b  44 24 2c 65 33 05 14 00   |.....u$.D$,e3...|
0x936b:     00 00 75 12 89 5c 24 40  83 c4 38 5b e9            |..u..\$@..8[.   |
; dynamically linked function: _ZdlPv at 0x9378 -- 0x9379
; data inside code section at 0x9379 -- 0x9382
0x9379:     ff ff ff e8 25 35 00 00  e8                        |....%5...       |
; dynamically linked function: __stack_chk_fail at 0x9382 -- 0x9383
; data inside code section at 0x9383 -- 0x93a6
0x9383:     ff ff ff c7 44 24 0c a0  46 00 00 c7 44 24 08 5e   |....D$..F...D$.^|
0x9393:     00 00 00 c7 44 24 04 00  33 00 00 c7 04 24 cc 23   |....D$..3....$.#|
0x93a3:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x93a6 -- 0x93a7
; data inside code section at 0x93a7 -- 0x93be
0x93a7:     ff ff ff 89 44 24 1c 89  1c 24 e8 fa 36 00 00 8b   |....D$...$..6...|
0x93b7:     44 24 1c 89 04 24 e8                               |D$...$.         |
; dynamically linked function: _Unwind_Resume at 0x93be -- 0x93bf
; data inside code section at 0x93bf -- 0x93c2
0x93bf:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E at 0x93d0 -- 0x940e
0x93d0:     57                                 	push edi
0x93d1:     56                                 	push esi
0x93d2:     53                                 	push ebx
0x93d3:     83 ec 20                           	sub esp, 0x20
0x93d6:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x93da:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x93e0:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x93e4:     31 c0                              	xor eax, eax
0x93e6:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x93ea:     85 db                              	test ebx, ebx
0x93ec:     75 04                              	jne 0x93f2 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x22>
0x93ee:     eb 2f                              	jmp 0x941f <function_941f>
0x93f0:     89 f3                              	mov ebx, esi
0x93f2:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x93f5:     89 3c 24                           	mov dword ptr [esp], edi
0x93f8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x93fc:     e8 9f 93 00 00                     	call 0x127a0 <unknown_127a0>
0x9401:     8b 43 68                           	mov eax, dword ptr [ebx + 0x68]
0x9404:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x9407:     85 c0                              	test eax, eax
0x9409:     74 08                              	je 0x9413 <function_9413>
0x940b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x940e -- 0x940f
0x940e:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x940f -- 0x9410
; data inside code section at 0x9410 -- 0x9413
0x9410:     ff ff ff                                           |...             |
; function: function_9413 at 0x9413 -- 0x9416
0x9413:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9416 -- 0x9417
0x9416:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x9417 -- 0x9418
; data inside code section at 0x9418 -- 0x941f
0x9418:     ff ff ff 85 f6 75 d1                               |.....u.         |
; function: function_941f at 0x941f -- 0x9433
0x941f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9423:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x942a:     75 07                              	jne 0x9433 <function_941f+0x13>
0x942c:     83 c4 20                           	add esp, 0x20
0x942f:     5b                                 	pop ebx
0x9430:     5e                                 	pop esi
0x9431:     5f                                 	pop edi
0x9432:     c3                                 	ret 
; data inside code section at 0x9433 -- 0x9434
0x9433:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9434 -- 0x9435
; data inside code section at 0x9435 -- 0x9438
0x9435:     ff ff ff                                           |...             |
; section: .text._ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_
; function: _ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_ at 0x9440 -- 0x94d9
0x9440:     55                                 	push ebp
0x9441:     57                                 	push edi
0x9442:     56                                 	push esi
0x9443:     53                                 	push ebx
0x9444:     83 ec 3c                           	sub esp, 0x3c
0x9447:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x944b:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x9452:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x9456:     31 d2                              	xor edx, edx
0x9458:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x945c:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x9460:     8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x9463:     8d 50 04                           	lea edx, [eax + 4]
0x9466:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x946a:     85 db                              	test ebx, ebx
0x946c:     74 62                              	je 0x94d0 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x90>
0x946e:     89 d7                              	mov edi, edx
0x9470:     eb 0f                              	jmp 0x9481 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x41>
; data inside code section at 0x9472 -- 0x9478
0x9472:     8d b6 00 00 00 00                                  |......          |
0x9478:     89 df                              	mov edi, ebx
0x947a:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x947d:     85 db                              	test ebx, ebx
0x947f:     74 1a                              	je 0x949b <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x5b>
0x9481:     8d 43 10                           	lea eax, [ebx + 0x10]
0x9484:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x9488:     89 04 24                           	mov dword ptr [esp], eax
0x948b:     e8 60 83 00 00                     	call 0x117f0 <unknown_117f0>
0x9490:     84 c0                              	test al, al
0x9492:     74 e4                              	je 0x9478 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x38>
0x9494:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x9497:     85 db                              	test ebx, ebx
0x9499:     75 e6                              	jne 0x9481 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x41>
0x949b:     39 7c 24 1c                        	cmp dword ptr [esp + 0x1c], edi
0x949f:     74 2f                              	je 0x94d0 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x90>
0x94a1:     8d 47 10                           	lea eax, [edi + 0x10]
0x94a4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x94a8:     89 34 24                           	mov dword ptr [esp], esi
0x94ab:     e8 40 83 00 00                     	call 0x117f0 <unknown_117f0>
0x94b0:     84 c0                              	test al, al
0x94b2:     75 1c                              	jne 0x94d0 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x90>
0x94b4:     89 7d 00                           	mov dword ptr [ebp], edi
0x94b7:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x94bb:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x94c2:     89 e8                              	mov eax, ebp
0x94c4:     75 13                              	jne 0x94d9 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x97>
0x94c6:     83 c4 3c                           	add esp, 0x3c
0x94c9:     5b                                 	pop ebx
0x94ca:     5e                                 	pop esi
0x94cb:     5f                                 	pop edi
0x94cc:     5d                                 	pop ebp
0x94cd:     c2 04 00                           	ret 4
0x94d0:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x94d4:     89 55 00                           	mov dword ptr [ebp], edx
0x94d7:     eb de                              	jmp 0x94b7 <_ZNKSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE4findERS2_+0x77>
; data inside code section at 0x94d9 -- 0x94da
0x94d9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x94da -- 0x94db
; data inside code section at 0x94db -- 0x94de
0x94db:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_ at 0x94e0 -- 0x94fc
0x94e0:     56                                 	push esi
0x94e1:     53                                 	push ebx
0x94e2:     83 ec 24                           	sub esp, 0x24
0x94e5:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x94e9:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x94ed:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x94f3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x94f7:     31 c0                              	xor eax, eax
0x94f9:     8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x94fc -- 0x94fe
0x94fc:     c7 03                                              |..              |
; dynamically linked function: _ZTVSt13runtime_error at 0x94fe -- 0x950c
; data inside code section at 0x950c -- 0x950d
0x950c:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x950d -- 0x950e
; data inside code section at 0x950e -- 0x9510
0x950e:     ff ff                                              |..              |
; function: function_9510 at 0x9510 -- 0x9562
0x9510:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x9516:     f8                                 	clc 
0x9517:     f0 00 00                           	lock add byte ptr [eax], al
0x951a:     c7 43 08 d0 ef 00 00               	mov dword ptr [ebx + 8], 0xefd0
0x9521:     85 c0                              	test eax, eax
0x9523:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x9526:     74 08                              	je 0x9530 <function_9510+0x20>
0x9528:     8b 10                              	mov edx, dword ptr [eax]
0x952a:     89 04 24                           	mov dword ptr [esp], eax
0x952d:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x9530:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x9533:     c7 43 08 3c f1 00 00               	mov dword ptr [ebx + 8], 0xf13c
0x953a:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x953d:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x9540:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x9543:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x9546:     c7 03 28 f1 00 00                  	mov dword ptr [ebx], 0xf128
0x954c:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x954f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9553:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x955a:     75 06                              	jne 0x9562 <function_9510+0x51>
0x955c:     83 c4 24                           	add esp, 0x24
0x955f:     5b                                 	pop ebx
0x9560:     5e                                 	pop esi
0x9561:     c3                                 	ret 
; data inside code section at 0x9562 -- 0x9563
0x9562:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9563 -- 0x9564
; data inside code section at 0x9564 -- 0x9575
0x9564:     ff ff ff 89 c6 89 1c 24  e8 0f 2b 00 00 89 34 24   |.......$..+...4$|
0x9574:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x9575 -- 0x9576
; data inside code section at 0x9576 -- 0x957f
0x9576:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x957f -- 0x9580
; data inside code section at 0x9580 -- 0x9587
0x9580:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x9587 -- 0x9588
; data inside code section at 0x9588 -- 0x958b
0x9588:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv at 0x9590 -- 0x9597
0x9590:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x9595:     eb 09                              	jmp 0x95a0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv>
; data inside code section at 0x9597 -- 0x95a0
0x9597:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv at 0x95a0 -- 0x95bc
0x95a0:     56                                 	push esi
0x95a1:     53                                 	push ebx
0x95a2:     83 ec 24                           	sub esp, 0x24
0x95a5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x95a9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x95af:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x95b3:     31 c0                              	xor eax, eax
0x95b5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x95bc -- 0x95bd
0x95bc:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x95bd -- 0x95be
; data inside code section at 0x95be -- 0x95c0
0x95be:     ff ff                                              |..              |
; function: function_95c0 at 0x95c0 -- 0x95c7
0x95c0:     ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x95c6:     c3                                 	ret 
; data inside code section at 0x95c7 -- 0x95f7
0x95c7:     89 04 24 e8 a1 94 00 00  c7 03 68 f1 00 00 c7 43   |..$.......h....C|
0x95d7:     08 84 f1 00 00 c7 43 1c  94 f1 00 00 c7 44 24 08   |......C......D$.|
0x95e7:     50 42 00 00 c7 44 24 04  c0 f1 00 00 89 1c 24 e8   |PB...D$.......$.|
; dynamically linked function: __cxa_throw at 0x95f7 -- 0x95f8
; data inside code section at 0x95f8 -- 0x9601
0x95f8:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x9601 -- 0x9602
; data inside code section at 0x9602 -- 0x9609
0x9602:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x9609 -- 0x960a
; data inside code section at 0x960a -- 0x960d
0x960a:     ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_ at 0x9610 -- 0x962c
0x9610:     56                                 	push esi
0x9611:     53                                 	push ebx
0x9612:     83 ec 44                           	sub esp, 0x44
0x9615:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x9619:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x961f:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x9623:     31 c0                              	xor eax, eax
0x9625:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x962c -- 0x962d
0x962c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x962d -- 0x962e
; data inside code section at 0x962e -- 0x9638
0x962e:     ff ff ff 83 c6 04 c7 44  24 20                     |.......D$       |
; dynamically linked function: _ZTVSt13runtime_error at 0x9638 -- 0x9649
; data inside code section at 0x9649 -- 0x964a
0x9649:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x964a -- 0x964b
; data inside code section at 0x964b -- 0x96d1
0x964b:     ff ff ff 8d 74 24 20 c7  44 24 2c 00 00 00 00 c7   |....t$ .D$,.....|
0x965b:     44 24 30 00 00 00 00 c7  44 24 34 00 00 00 00 c7   |D$0.....D$4.....|
0x966b:     44 24 38 ff ff ff ff c7  44 24 20 28 f1 00 00 c7   |D$8.....D$ (....|
0x967b:     44 24 28 3c f1 00 00 89  74 24 04 89 1c 24 e8 62   |D$(<....t$...$.b|
0x968b:     94 00 00 8d 44 24 28 c7  03 68 f1 00 00 c7 43 08   |....D$(..h....C.|
0x969b:     84 f1 00 00 c7 43 1c 94  f1 00 00 89 44 24 04 8d   |.....C......D$..|
0x96ab:     43 08 89 04 24 e8 fb 83  00 00 89 34 24 e8 33 3f   |C...$......4$.3?|
0x96bb:     00 00 c7 44 24 08 50 42  00 00 c7 44 24 04 c0 f1   |...D$.PB...D$...|
0x96cb:     00 00 89 1c 24 e8                                  |....$.          |
; dynamically linked function: __cxa_throw at 0x96d1 -- 0x96d2
; data inside code section at 0x96d2 -- 0x96df
0x96d2:     ff ff ff 89 c6 8d 44 24  20 89 04 24 e8            |......D$ ..$.   |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x96df -- 0x96e0
; data inside code section at 0x96e0 -- 0x96e3
0x96e0:     ff ff ff                                           |...             |
; function: function_96e3 at 0x96e3 -- 0x96e4
; data inside code section at 0x96e4 -- 0x96e7
0x96e4:     1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0x96e7 -- 0x96e8
; data inside code section at 0x96e8 -- 0x96ef
0x96e8:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x96ef -- 0x96f0
; data inside code section at 0x96f0 -- 0x96f2
0x96f0:     ff ff                                              |..              |
; function: function_96f2 at 0x96f2 -- 0x971e
0x96f2:     ff c7                              	inc edi
0x96f4:     43                                 	inc ebx
0x96f5:     1c 10                              	sbb al, 0x10
0x96f7:     f0 00 00                           	lock add byte ptr [eax], al
0x96fa:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x96fe:     89 1c 24                           	mov dword ptr [esp], ebx
0x9701:     e8 ea 3e 00 00                     	call 0xd5f0 <function_d5f0>
0x9706:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x970a:     89 34 24                           	mov dword ptr [esp], esi
0x970d:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9711:     e8 da 3e 00 00                     	call 0xd5f0 <function_d5f0>
0x9716:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x971a:     89 c6                              	mov esi, eax
0x971c:     eb c5                              	jmp 0x96e3 <function_96e3>
; function: function_971e at 0x971e -- 0x9720
0x971e:     eb ea                              	jmp 0x970a
; section: .text._ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_
; function: _ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_ at 0x9720 -- 0x97b9
0x9720:     55                                 	push ebp
0x9721:     57                                 	push edi
0x9722:     56                                 	push esi
0x9723:     53                                 	push ebx
0x9724:     83 ec 3c                           	sub esp, 0x3c
0x9727:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x972b:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x9732:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x9736:     31 d2                              	xor edx, edx
0x9738:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x973c:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x9740:     8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x9743:     8d 50 04                           	lea edx, [eax + 4]
0x9746:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x974a:     85 db                              	test ebx, ebx
0x974c:     74 62                              	je 0x97b0 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x90>
0x974e:     89 d7                              	mov edi, edx
0x9750:     eb 0f                              	jmp 0x9761 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x41>
; data inside code section at 0x9752 -- 0x9758
0x9752:     8d b6 00 00 00 00                                  |......          |
0x9758:     89 df                              	mov edi, ebx
0x975a:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x975d:     85 db                              	test ebx, ebx
0x975f:     74 1a                              	je 0x977b <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x5b>
0x9761:     8d 43 10                           	lea eax, [ebx + 0x10]
0x9764:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x9768:     89 04 24                           	mov dword ptr [esp], eax
0x976b:     e8 60 83 00 00                     	call 0x11ad0 <unknown_11ad0>
0x9770:     84 c0                              	test al, al
0x9772:     74 e4                              	je 0x9758 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x38>
0x9774:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x9777:     85 db                              	test ebx, ebx
0x9779:     75 e6                              	jne 0x9761 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x41>
0x977b:     39 7c 24 1c                        	cmp dword ptr [esp + 0x1c], edi
0x977f:     74 2f                              	je 0x97b0 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x90>
0x9781:     8d 47 10                           	lea eax, [edi + 0x10]
0x9784:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9788:     89 34 24                           	mov dword ptr [esp], esi
0x978b:     e8 40 83 00 00                     	call 0x11ad0 <unknown_11ad0>
0x9790:     84 c0                              	test al, al
0x9792:     75 1c                              	jne 0x97b0 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x90>
0x9794:     89 7d 00                           	mov dword ptr [ebp], edi
0x9797:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x979b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x97a2:     89 e8                              	mov eax, ebp
0x97a4:     75 13                              	jne 0x97b9 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x97>
0x97a6:     83 c4 3c                           	add esp, 0x3c
0x97a9:     5b                                 	pop ebx
0x97aa:     5e                                 	pop esi
0x97ab:     5f                                 	pop edi
0x97ac:     5d                                 	pop ebp
0x97ad:     c2 04 00                           	ret 4
0x97b0:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x97b4:     89 55 00                           	mov dword ptr [ebp], edx
0x97b7:     eb de                              	jmp 0x9797 <_ZNKSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4findERS2_+0x77>
; data inside code section at 0x97b9 -- 0x97ba
0x97b9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x97ba -- 0x97bb
; data inside code section at 0x97bb -- 0x97be
0x97bb:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS0_10connectionES6_EEENS0_5mutexEE12slot_invokerEED2Ev
; function: _ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS0_10connectionES6_EEENS0_5mutexEE12slot_invokerEED1Ev at 0x97c0 -- 0x9803
0x97c0:     53                                 	push ebx
0x97c1:     83 ec 28                           	sub esp, 0x28
0x97c4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x97c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x97ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x97d2:     31 c0                              	xor eax, eax
0x97d4:     8b 93 80 00 00 00                  	mov edx, dword ptr [ebx + 0x80]
0x97da:     85 d2                              	test edx, edx
0x97dc:     74 2a                              	je 0x9808 <function_9808>
0x97de:     8b 43 7c                           	mov eax, dword ptr [ebx + 0x7c]
0x97e1:     83 f8 09                           	cmp eax, 9
0x97e4:     76 67                              	jbe 0x984d <function_984d>
0x97e6:     8d 4b 04                           	lea ecx, [ebx + 4]
0x97e9:     39 ca                              	cmp edx, ecx
0x97eb:     74 5b                              	je 0x9848 <function_9848>
0x97ed:     8b 8b 84 00 00 00                  	mov ecx, dword ptr [ebx + 0x84]
0x97f3:     39 c8                              	cmp eax, ecx
0x97f5:     72 56                              	jb 0x984d <function_984d>
0x97f7:     85 c9                              	test ecx, ecx
0x97f9:     75 2d                              	jne 0x9828 <function_9828>
0x97fb:     83 f8 0a                           	cmp eax, 0xa
0x97fe:     76 08                              	jbe 0x9808 <function_9808>
0x9800:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x9803 -- 0x9804
0x9803:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x9804 -- 0x9805
; data inside code section at 0x9805 -- 0x9808
0x9805:     ff ff ff                                           |...             |
; function: function_9808 at 0x9808 -- 0x9822
0x9808:     80 3b 00                           	cmp byte ptr [ebx], 0
0x980b:     74 03                              	je 0x9810 <function_9808+0x8>
0x980d:     c6 03 00                           	mov byte ptr [ebx], 0
0x9810:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9814:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x981b:     75 35                              	jne 0x9852 <function_9852>
0x981d:     83 c4 28                           	add esp, 0x28
0x9820:     5b                                 	pop ebx
0x9821:     c3                                 	ret 
; data inside code section at 0x9822 -- 0x9828
0x9822:     8d b6 00 00 00 00                                  |......          |
; function: function_9828 at 0x9828 -- 0x9844
0x9828:     8d 93 84 00 00 00                  	lea edx, [ebx + 0x84]
0x982e:     8d 83 80 00 00 00                  	lea eax, [ebx + 0x80]
0x9834:     e8 07 01 00 00                     	call 0x9940 <function_9940>
0x9839:     8b 43 7c                           	mov eax, dword ptr [ebx + 0x7c]
0x983c:     8b 93 80 00 00 00                  	mov edx, dword ptr [ebx + 0x80]
0x9842:     eb b7                              	jmp 0x97fb
; data inside code section at 0x9844 -- 0x9848
0x9844:     8d 74 26 00                                        |.t&.            |
; function: function_9848 at 0x9848 -- 0x984d
0x9848:     83 f8 0a                           	cmp eax, 0xa
0x984b:     74 a0                              	je 0x97ed
; function: function_984d at 0x984d -- 0x9852
0x984d:     e8 4c 36 00 00                     	call 0xce9e <function_ce9e>
; function: function_9852 at 0x9852 -- 0x9853
; dynamically linked function: __stack_chk_fail at 0x9853 -- 0x9854
; data inside code section at 0x9854 -- 0x9863
0x9854:     ff ff ff 80 3b 00 74 03  c6 03 00 89 04 24 e8      |....;.t......$. |
; dynamically linked function: _Unwind_Resume at 0x9863 -- 0x9864
; data inside code section at 0x9864 -- 0x9867
0x9864:     ff ff ff                                           |...             |
; section: .text._ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv
; function: _ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv at 0x9870 -- 0x9895
0x9870:     57                                 	push edi
0x9871:     56                                 	push esi
0x9872:     53                                 	push ebx
0x9873:     83 ec 20                           	sub esp, 0x20
0x9876:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x987a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9880:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9884:     31 c0                              	xor eax, eax
0x9886:     80 7f 04 00                        	cmp byte ptr [edi + 4], 0
0x988a:     0f 85 c1 00 00 00                  	jne 0x9951 <function_9951>
0x9890:     8b 1f                              	mov ebx, dword ptr [edi]
0x9892:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9895 -- 0x9896
0x9895:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x9896 -- 0x9897
; data inside code section at 0x9897 -- 0x98ab
0x9897:     ff ff ff 85 c0 0f 85 aa  00 00 00 31 d2 80 7b 48   |...........1..{H|
0x98a7:     00 74 0f e8                                        |.t..            |
; dynamically linked function: pthread_self at 0x98ab -- 0x98ac
; data inside code section at 0x98ac -- 0x98af
0x98ac:     ff ff ff                                           |...             |
; function: function_98af at 0x98af -- 0x98be
0x98af:     ba 01 00 00 00                     	mov edx, 1
0x98b4:     3b 43 4c                           	cmp eax, dword ptr [ebx + 0x4c]
0x98b7:     74 57                              	je 0x9910 <function_9910>
0x98b9:     8d 73 18                           	lea esi, [ebx + 0x18]
0x98bc:     eb 16                              	jmp 0x98d4 <function_98d4>
; data inside code section at 0x98be -- 0x98c0
0x98be:     66 90                                              |f.              |
; function: function_98c0 at 0x98c0 -- 0x98c7
0x98c0:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x98c4:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x98c7 -- 0x98c8
0x98c7:     e8                                                 |.               |
; dynamically linked function: pthread_cond_wait at 0x98c8 -- 0x98c9
; data inside code section at 0x98c9 -- 0x98d4
0x98c9:     ff ff ff 85 c0 75 58 0f  b6 53 48                  |.....uX..SH     |
; function: function_98d4 at 0x98d4 -- 0x98e0
0x98d4:     84 d2                              	test dl, dl
0x98d6:     75 e8                              	jne 0x98c0 <function_98c0>
0x98d8:     83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x98dc:     c6 43 48 01                        	mov byte ptr [ebx + 0x48], 1
; data inside code section at 0x98e0 -- 0x98e1
0x98e0:     e8                                                 |.               |
; dynamically linked function: pthread_self at 0x98e1 -- 0x98e2
; data inside code section at 0x98e2 -- 0x98ec
0x98e2:     ff ff ff 89 43 4c 89 1c  24 e8                     |....CL..$.      |
; dynamically linked function: pthread_mutex_unlock at 0x98ec -- 0x98ed
; data inside code section at 0x98ed -- 0x98ef
0x98ed:     ff ff                                              |..              |
; function: function_98ef at 0x98ef -- 0x9910
0x98ef:     ff 85 c0 0f 85 8c                  	inc dword ptr [ebp - 0x737af040]
0x98f5:     00 00                              	add byte ptr [eax], al
0x98f7:     00 8b 44 24 1c 65                  	add byte ptr [ebx + 0x651c2444], cl
0x98fd:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x9903:     c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x9907:     75 64                              	jne 0x996d <function_996d>
0x9909:     83 c4 20                           	add esp, 0x20
0x990c:     5b                                 	pop ebx
0x990d:     5e                                 	pop esi
0x990e:     5f                                 	pop edi
0x990f:     c3                                 	ret 
; function: function_9910 at 0x9910 -- 0x9917
0x9910:     83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x9914:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9917 -- 0x9918
0x9917:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x9918 -- 0x9919
; data inside code section at 0x9919 -- 0x9920
0x9919:     ff ff ff 85 c0 74 d8                               |.....t.         |
; function: function_9920 at 0x9920 -- 0x9921
; data inside code section at 0x9921 -- 0x9940
0x9921:     bd 34 00 00 8d 76 00 c7  44 24 0c 80 47 00 00 c7   |.4...v..D$..G...|
0x9931:     44 24 08 85 00 00 00 c7  44 24 04 00 33 00 00      |D$......D$..3.. |
; function: function_9940 at 0x9940 -- 0x9947
0x9940:     c7 04 24 83 24 00 00               	mov dword ptr [esp], 0x2483 ; "!pthread_cond_wait(&cond,&m)"
; data inside code section at 0x9947 -- 0x9948
0x9947:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x9948 -- 0x9949
; data inside code section at 0x9949 -- 0x9951
0x9949:     ff ff ff e8 5d 34 00 00                            |....]4..        |
; function: function_9951 at 0x9951 -- 0x996d
0x9951:     8d 5c 24 14                        	lea ebx, [esp + 0x14]
0x9955:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x995d:     c7 44 24 14 b8 ef 00 00            	mov dword ptr [esp + 0x14], 0xefb8
0x9965:     89 1c 24                           	mov dword ptr [esp], ebx
0x9968:     e8 e3 85 00 00                     	call 0x11f50 <unknown_11f50>
; function: function_996d at 0x996d -- 0x996e
; dynamically linked function: __stack_chk_fail at 0x996e -- 0x996f
; data inside code section at 0x996f -- 0x997c
0x996f:     ff ff ff 89 c6 89 1c 24  e8 74 37 00 00            |.......$.t7..   |
; function: function_997c at 0x997c -- 0x997d
; data inside code section at 0x997d -- 0x9980
0x997d:     34 24 e8                                           |4$.             |
; dynamically linked function: _Unwind_Resume at 0x9980 -- 0x9981
; data inside code section at 0x9981 -- 0x99a4
0x9981:     ff ff ff c7 44 24 0c 40  47 00 00 c7 44 24 08 1e   |....D$.@G...D$..|
0x9991:     00 00 00 c7 44 24 04 c0  32 00 00 c7 04 24 98 23   |....D$..2....$.#|
0x99a1:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x99a4 -- 0x99a5
; data inside code section at 0x99a5 -- 0x99ae
0x99a5:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: pthread_mutex_unlock at 0x99ae -- 0x99af
; data inside code section at 0x99af -- 0x99b2
0x99af:     ff ff ff                                           |...             |
; function: function_99b2 at 0x99b2 -- 0x99bb
0x99b2:     85 c0                              	test eax, eax
0x99b4:     74 c6                              	je 0x997c <function_997c>
0x99b6:     e9 65 ff ff ff                     	jmp 0x9920 <function_9920>
; section: .text._ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC2ERS3_PKcS7_ib
; function: _ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib at 0x99c0 -- 0x99f3
0x99c0:     83 ec 2c                           	sub esp, 0x2c
0x99c3:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x99c7:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x99cb:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x99cf:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x99d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x99d9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x99dd:     31 c0                              	xor eax, eax
0x99df:     80 7c 24 44 00                     	cmp byte ptr [esp + 0x44], 0
0x99e4:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x99e8:     89 33                              	mov dword ptr [ebx], esi
0x99ea:     c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x99ee:     74 68                              	je 0x9a58 <function_9a58>
0x99f0:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x99f3 -- 0x99f4
0x99f3:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x99f4 -- 0x99f5
; data inside code section at 0x99f5 -- 0x9a03
0x99f5:     ff ff ff 85 c0 75 6b 80  7e 48 00 75 46 e8         |.....uk.~H.uF.  |
; dynamically linked function: pthread_self at 0x9a03 -- 0x9a04
; data inside code section at 0x9a04 -- 0x9a07
0x9a04:     ff ff ff                                           |...             |
; function: function_9a07 at 0x9a07 -- 0x9a08
; data inside code section at 0x9a08 -- 0x9a17
0x9a08:     46 50 01 bf 01 00 00 00  c6 46 48 01 89 46 4c      |FP.......FH..FL |
; function: function_9a17 at 0x9a17 -- 0x9a18
; data inside code section at 0x9a18 -- 0x9a1b
0x9a18:     34 24 e8                                           |4$.             |
; dynamically linked function: pthread_mutex_unlock at 0x9a1b -- 0x9a1c
; data inside code section at 0x9a1c -- 0x9a28
0x9a1c:     ff ff ff 85 c0 75 49 89  f8 88 43 04               |.....uI...C.    |
; function: function_9a28 at 0x9a28 -- 0x9a45
0x9a28:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9a2c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9a33:     75 2d                              	jne 0x9a62 <function_9a62>
0x9a35:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x9a39:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x9a3d:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x9a41:     83 c4 2c                           	add esp, 0x2c
0x9a44:     c3                                 	ret 
; data inside code section at 0x9a45 -- 0x9a49
0x9a45:     8d 76 00 e8                                        |.v..            |
; dynamically linked function: pthread_self at 0x9a49 -- 0x9a4a
; data inside code section at 0x9a4a -- 0x9a4d
0x9a4a:     ff ff ff                                           |...             |
; function: function_9a4d at 0x9a4d -- 0x9a56
0x9a4d:     3b 46 4c                           	cmp eax, dword ptr [esi + 0x4c]
0x9a50:     74 b5                              	je 0x9a07 <function_9a07>
0x9a52:     31 ff                              	xor edi, edi
0x9a54:     eb c1                              	jmp 0x9a17 <function_9a17>
; data inside code section at 0x9a56 -- 0x9a58
0x9a56:     66 90                                              |f.              |
; function: function_9a58 at 0x9a58 -- 0x9a62
0x9a58:     89 1c 24                           	mov dword ptr [esp], ebx
0x9a5b:     e8 d0 97 00 00                     	call 0x13230 <unknown_13230>
0x9a60:     eb c6                              	jmp 0x9a28 <function_9a28>
; function: function_9a62 at 0x9a62 -- 0x9a63
; dynamically linked function: __stack_chk_fail at 0x9a63 -- 0x9a64
; data inside code section at 0x9a64 -- 0x9a83
0x9a64:     ff ff ff e8 92 34 00 00  8d 74 26 00 e8 bd 34 00   |.....4...t&...4.|
0x9a74:     00 89 c6 89 1c 24 e8 31  8f 00 00 89 34 24 e8      |.....$.1....4$. |
; dynamically linked function: _Unwind_Resume at 0x9a83 -- 0x9a84
; data inside code section at 0x9a84 -- 0x9a87
0x9a84:     ff ff ff                                           |...             |
; section: .text._ZNK14CBasicKeyStore6GetKeyERK6CKeyIDR4CKey
; function: _ZNK14CBasicKeyStore6GetKeyERK6CKeyIDR4CKey at 0x9a90 -- 0x9b84
0x9a90:     83 ec 5c                           	sub esp, 0x5c
0x9a93:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x9a97:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x9a9b:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x9a9f:     8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x9aa3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9aa9:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x9aad:     31 c0                              	xor eax, eax
0x9aaf:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x9ab3:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0x9ab7:     8d 46 04                           	lea eax, [esi + 4]
0x9aba:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x9abe:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x9ac2:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9ac6:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9ace:     c7 44 24 10 4c 00 00 00            	mov dword ptr [esp + 0x10], 0x4c
0x9ad6:     c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0x9ade:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x9ae6:     89 3c 24                           	mov dword ptr [esp], edi
0x9ae9:     e8 62 99 00 00                     	call 0x13450 <unknown_13450>
0x9aee:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x9af2:     8d 56 58                           	lea edx, [esi + 0x58]
0x9af5:     83 c6 5c                           	add esi, 0x5c
0x9af8:     89 04 24                           	mov dword ptr [esp], eax
0x9afb:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x9aff:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x9b03:     e8 28 90 00 00                     	call 0x12b30 <unknown_12b30>
0x9b08:     83 ec 04                           	sub esp, 4
0x9b0b:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x9b0f:     39 f0                              	cmp eax, esi
0x9b11:     74 65                              	je 0x9b78 <_ZNK14CBasicKeyStore6GetKeyERK6CKeyIDR4CKey+0xe8>
0x9b13:     8b 50 24                           	mov edx, dword ptr [eax + 0x24]
0x9b16:     89 13                              	mov dword ptr [ebx], edx
0x9b18:     8b 50 28                           	mov edx, dword ptr [eax + 0x28]
0x9b1b:     89 53 04                           	mov dword ptr [ebx + 4], edx
0x9b1e:     8b 50 2c                           	mov edx, dword ptr [eax + 0x2c]
0x9b21:     89 53 08                           	mov dword ptr [ebx + 8], edx
0x9b24:     8b 50 30                           	mov edx, dword ptr [eax + 0x30]
0x9b27:     89 53 0c                           	mov dword ptr [ebx + 0xc], edx
0x9b2a:     8b 50 34                           	mov edx, dword ptr [eax + 0x34]
0x9b2d:     89 53 10                           	mov dword ptr [ebx + 0x10], edx
0x9b30:     8b 50 38                           	mov edx, dword ptr [eax + 0x38]
0x9b33:     89 53 14                           	mov dword ptr [ebx + 0x14], edx
0x9b36:     8b 50 3c                           	mov edx, dword ptr [eax + 0x3c]
0x9b39:     89 53 18                           	mov dword ptr [ebx + 0x18], edx
0x9b3c:     8b 50 40                           	mov edx, dword ptr [eax + 0x40]
0x9b3f:     89 53 1c                           	mov dword ptr [ebx + 0x1c], edx
0x9b42:     0f b7 40 44                        	movzx eax, word ptr [eax + 0x44]
0x9b46:     66 89 43 20                        	mov word ptr [ebx + 0x20], ax
0x9b4a:     89 3c 24                           	mov dword ptr [esp], edi
0x9b4d:     e8 2e 8f 00 00                     	call 0x12a80 <unknown_12a80>
0x9b52:     b8 01 00 00 00                     	mov eax, 1
0x9b57:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x9b5b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9b62:     75 20                              	jne 0x9b84 <_ZNK14CBasicKeyStore6GetKeyERK6CKeyIDR4CKey+0xf2>
0x9b64:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x9b68:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x9b6c:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x9b70:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x9b74:     83 c4 5c                           	add esp, 0x5c
0x9b77:     c3                                 	ret 
0x9b78:     89 3c 24                           	mov dword ptr [esp], edi
0x9b7b:     e8 00 8f 00 00                     	call 0x12a80 <unknown_12a80>
0x9b80:     31 c0                              	xor eax, eax
0x9b82:     eb d3                              	jmp 0x9b57 <_ZNK14CBasicKeyStore6GetKeyERK6CKeyIDR4CKey+0xc7>
; data inside code section at 0x9b84 -- 0x9b85
0x9b84:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9b85 -- 0x9b86
; data inside code section at 0x9b86 -- 0x9b89
0x9b86:     ff ff ff                                           |...             |
; section: .text._ZNK14CBasicKeyStore7HaveKeyERK6CKeyID
; function: _ZNK14CBasicKeyStore7HaveKeyERK6CKeyID at 0x9b90 -- 0x9c31
0x9b90:     83 ec 4c                           	sub esp, 0x4c
0x9b93:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x9b97:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x9b9b:     89 7c 24 48                        	mov dword ptr [esp + 0x48], edi
0x9b9f:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x9ba3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9ba9:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x9bad:     31 c0                              	xor eax, eax
0x9baf:     89 74 24 44                        	mov dword ptr [esp + 0x44], esi
0x9bb3:     8d 74 24 34                        	lea esi, [esp + 0x34]
0x9bb7:     8d 43 04                           	lea eax, [ebx + 4]
0x9bba:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9bbe:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9bc6:     c7 44 24 10 37 00 00 00            	mov dword ptr [esp + 0x10], 0x37
0x9bce:     c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0x9bd6:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x9bde:     89 34 24                           	mov dword ptr [esp], esi
0x9be1:     e8 6a 99 00 00                     	call 0x13550 <unknown_13550>
0x9be6:     8d 53 58                           	lea edx, [ebx + 0x58]
0x9be9:     83 c3 5c                           	add ebx, 0x5c
0x9bec:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x9bf0:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x9bf4:     89 04 24                           	mov dword ptr [esp], eax
0x9bf7:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x9bfb:     e8 30 90 00 00                     	call 0x12c30 <unknown_12c30>
0x9c00:     83 ec 04                           	sub esp, 4
0x9c03:     3b 5c 24 2c                        	cmp ebx, dword ptr [esp + 0x2c]
0x9c07:     89 34 24                           	mov dword ptr [esp], esi
0x9c0a:     0f 95 c3                           	setne bl
0x9c0d:     e8 6e 8f 00 00                     	call 0x12b80 <unknown_12b80>
0x9c12:     89 d8                              	mov eax, ebx
0x9c14:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x9c18:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9c1f:     75 10                              	jne 0x9c31 <_ZNK14CBasicKeyStore7HaveKeyERK6CKeyID+0xa0>
0x9c21:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x9c25:     8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x9c29:     8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x9c2d:     83 c4 4c                           	add esp, 0x4c
0x9c30:     c3                                 	ret 
; data inside code section at 0x9c31 -- 0x9c32
0x9c31:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9c32 -- 0x9c33
; data inside code section at 0x9c33 -- 0x9c36
0x9c33:     ff ff ff                                           |...             |
; section: .text._ZNK15CCryptoKeyStore7HaveKeyERK6CKeyID
; function: _ZNK15CCryptoKeyStore7HaveKeyERK6CKeyID at 0x9c40 -- 0x9d5c
0x9c40:     83 ec 6c                           	sub esp, 0x6c
0x9c43:     89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x9c47:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x9c4b:     89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x9c4f:     8d 74 24 3c                        	lea esi, [esp + 0x3c]
0x9c53:     89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x9c57:     89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x9c5b:     8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x9c5f:     8d 6b 04                           	lea ebp, [ebx + 4]
0x9c62:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9c68:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x9c6c:     31 c0                              	xor eax, eax
0x9c6e:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9c76:     c7 44 24 10 90 00 00 00            	mov dword ptr [esp + 0x10], 0x90 ; "D$\f m"
0x9c7e:     c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0x9c86:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x9c8e:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x9c92:     89 34 24                           	mov dword ptr [esp], esi
0x9c95:     e8 66 99 00 00                     	call 0x13600 <unknown_13600>
0x9c9a:     80 bb ac 00 00 00 00               	cmp byte ptr [ebx + 0xac], 0
0x9ca1:     0f 85 89 00 00 00                  	jne 0x9d30 <_ZNK15CCryptoKeyStore7HaveKeyERK6CKeyID+0xf0>
0x9ca7:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x9cab:     8d 6c 24 44                        	lea ebp, [esp + 0x44]
0x9caf:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9cb7:     c7 44 24 10 37 00 00 00            	mov dword ptr [esp + 0x10], 0x37
0x9cbf:     c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0x9cc7:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0x9ccf:     89 2c 24                           	mov dword ptr [esp], ebp
0x9cd2:     e8 29 99 00 00                     	call 0x13600 <unknown_13600>
0x9cd7:     8d 53 58                           	lea edx, [ebx + 0x58]
0x9cda:     83 c3 5c                           	add ebx, 0x5c
0x9cdd:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x9ce1:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x9ce5:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x9ce9:     89 04 24                           	mov dword ptr [esp], eax
0x9cec:     e8 ef 8f 00 00                     	call 0x12ce0 <unknown_12ce0>
0x9cf1:     83 ec 04                           	sub esp, 4
0x9cf4:     3b 5c 24 2c                        	cmp ebx, dword ptr [esp + 0x2c]
0x9cf8:     89 2c 24                           	mov dword ptr [esp], ebp
0x9cfb:     0f 95 c3                           	setne bl
0x9cfe:     e8 2d 8f 00 00                     	call 0x12c30 <unknown_12c30>
0x9d03:     89 34 24                           	mov dword ptr [esp], esi
0x9d06:     e8 25 8f 00 00                     	call 0x12c30 <unknown_12c30>
0x9d0b:     89 d8                              	mov eax, ebx
0x9d0d:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x9d11:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9d18:     75 42                              	jne 0x9d5c <_ZNK15CCryptoKeyStore7HaveKeyERK6CKeyID+0x11a>
0x9d1a:     8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x9d1e:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x9d22:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x9d26:     8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x9d2a:     83 c4 6c                           	add esp, 0x6c
0x9d2d:     c3                                 	ret 
; data inside code section at 0x9d2e -- 0x9d30
0x9d2e:     66 90                                              |f.              |
0x9d30:     8d 93 88 00 00 00                  	lea edx, [ebx + 0x88]
0x9d36:     81 c3 8c 00 00 00                  	add ebx, 0x8c
0x9d3c:     8d 44 24 28                        	lea eax, [esp + 0x28]
0x9d40:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x9d44:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x9d48:     89 04 24                           	mov dword ptr [esp], eax
0x9d4b:     e8 30 93 00 00                     	call 0x13080 <unknown_13080>
0x9d50:     83 ec 04                           	sub esp, 4
0x9d53:     3b 5c 24 28                        	cmp ebx, dword ptr [esp + 0x28]
0x9d57:     0f 95 c3                           	setne bl
0x9d5a:     eb a7                              	jmp 0x9d03 <_ZNK15CCryptoKeyStore7HaveKeyERK6CKeyID+0xc3>
; data inside code section at 0x9d5c -- 0x9d5d
0x9d5c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9d5d -- 0x9d5e
; data inside code section at 0x9d5e -- 0x9d62
0x9d5e:     ff ff ff 89                                        |....            |
; function: function_9d62 at 0x9d62 -- 0x9d63
0x9d62:     c3                                 	ret 
; data inside code section at 0x9d63 -- 0x9d6f
0x9d63:     89 34 24 e8 c5 8e 00 00  89 1c 24 e8               |.4$.......$.    |
; dynamically linked function: _Unwind_Resume at 0x9d6f -- 0x9d70
; data inside code section at 0x9d70 -- 0x9d73
0x9d70:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
; function: _ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E at 0x9d80 -- 0x9db7
0x9d80:     57                                 	push edi
0x9d81:     56                                 	push esi
0x9d82:     53                                 	push ebx
0x9d83:     83 ec 20                           	sub esp, 0x20
0x9d86:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x9d8a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9d90:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9d94:     31 c0                              	xor eax, eax
0x9d96:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x9d9a:     85 db                              	test ebx, ebx
0x9d9c:     75 04                              	jne 0x9da2 <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x22>
0x9d9e:     eb 20                              	jmp 0x9dc0 <function_9dc0>
0x9da0:     89 f3                              	mov ebx, esi
0x9da2:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x9da5:     89 3c 24                           	mov dword ptr [esp], edi
0x9da8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9dac:     e8 4f 9d 00 00                     	call 0x13b00 <unknown_13b00>
0x9db1:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x9db4:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9db7 -- 0x9db8
0x9db7:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x9db8 -- 0x9db9
; data inside code section at 0x9db9 -- 0x9dc0
0x9db9:     ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_9dc0 at 0x9dc0 -- 0x9dd4
0x9dc0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9dc4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9dcb:     75 07                              	jne 0x9dd4 <function_9dc0+0x13>
0x9dcd:     83 c4 20                           	add esp, 0x20
0x9dd0:     5b                                 	pop ebx
0x9dd1:     5e                                 	pop esi
0x9dd2:     5f                                 	pop edi
0x9dd3:     c3                                 	ret 
; data inside code section at 0x9dd4 -- 0x9dd5
0x9dd4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9dd5 -- 0x9dd6
; data inside code section at 0x9dd6 -- 0x9dd9
0x9dd6:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_
; function: _ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_ at 0x9de0 -- 0x9e32
0x9de0:     83 ec 4c                           	sub esp, 0x4c
0x9de3:     ba 01 00 00 00                     	mov edx, 1
0x9de8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9dee:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x9df2:     31 c0                              	xor eax, eax
0x9df4:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x9df8:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x9dfc:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x9e00:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x9e04:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x9e08:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x9e0c:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x9e10:     85 c0                              	test eax, eax
0x9e12:     8d 4e 04                           	lea ecx, [esi + 4]
0x9e15:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x9e19:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x9e1d:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x9e21:     0f 84 81 00 00 00                  	je 0x9ea8 <function_9ea8>
0x9e27:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x9e2b:     c7 04 24 24 00 00 00               	mov dword ptr [esp], 0x24
; data inside code section at 0x9e32 -- 0x9e33
0x9e32:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x9e33 -- 0x9e34
; data inside code section at 0x9e34 -- 0x9e75
0x9e34:     ff ff ff 8b 54 24 18 83  f8 f0 74 1d 8b 0b 89 48   |....T$....t....H|
0x9e44:     10 8b 4b 04 89 48 14 8b  4b 08 89 48 18 8b 4b 0c   |..K..H..K..H..K.|
0x9e54:     89 48 1c 8b 4b 10 89 48  20 8b 4c 24 1c 89 44 24   |.H..K..H .L$..D$|
0x9e64:     04 89 14 24 89 44 24 18  89 4c 24 0c 89 6c 24 08   |...$.D$..L$..l$.|
0x9e74:     e8                                                 |.               |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x9e75 -- 0x9e76
; data inside code section at 0x9e76 -- 0x9e78
0x9e76:     ff ff                                              |..              |
; function: function_9e78 at 0x9e78 -- 0x9ea8
0x9e78:     ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x9e7e:     46                                 	inc esi
0x9e7f:     14 01                              	adc al, 1
0x9e81:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x9e85:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9e8c:     89 07                              	mov dword ptr [edi], eax
0x9e8e:     89 f8                              	mov eax, edi
0x9e90:     75 35                              	jne 0x9ec7 <function_9ec7>
0x9e92:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x9e96:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x9e9a:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x9e9e:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x9ea2:     83 c4 4c                           	add esp, 0x4c
0x9ea5:     c2 04 00                           	ret 4
; function: function_9ea8 at 0x9ea8 -- 0x9ec7
0x9ea8:     39 cd                              	cmp ebp, ecx
0x9eaa:     0f 84 77 ff ff ff                  	je 0x9e27
0x9eb0:     8d 45 10                           	lea eax, [ebp + 0x10]
0x9eb3:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9eb7:     89 1c 24                           	mov dword ptr [esp], ebx
0x9eba:     e8 d1 82 00 00                     	call 0x12190 <unknown_12190>
0x9ebf:     0f b6 d0                           	movzx edx, al
0x9ec2:     e9 60 ff ff ff                     	jmp 0x9e27
; function: function_9ec7 at 0x9ec7 -- 0x9ec8
; dynamically linked function: __stack_chk_fail at 0x9ec8 -- 0x9ec9
; data inside code section at 0x9ec9 -- 0x9ecc
0x9ec9:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_
; function: _ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_ at 0x9ed0 -- 0x9f6c
0x9ed0:     55                                 	push ebp
0x9ed1:     57                                 	push edi
0x9ed2:     56                                 	push esi
0x9ed3:     53                                 	push ebx
0x9ed4:     83 ec 4c                           	sub esp, 0x4c
0x9ed7:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x9edb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9ee1:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x9ee5:     31 c0                              	xor eax, eax
0x9ee7:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x9eeb:     8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x9eef:     8b 5a 08                           	mov ebx, dword ptr [edx + 8]
0x9ef2:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x9ef6:     85 db                              	test ebx, ebx
0x9ef8:     75 0f                              	jne 0x9f09 <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x39>
0x9efa:     eb 5f                              	jmp 0x9f5b <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x8b>
; data inside code section at 0x9efc -- 0x9f00
0x9efc:     8d 74 26 00                                        |.t&.            |
0x9f00:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x9f03:     85 d2                              	test edx, edx
0x9f05:     74 1c                              	je 0x9f23 <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x53>
0x9f07:     89 d3                              	mov ebx, edx
0x9f09:     8d 43 10                           	lea eax, [ebx + 0x10]
0x9f0c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9f10:     89 34 24                           	mov dword ptr [esp], esi
0x9f13:     e8 68 83 00 00                     	call 0x12280 <unknown_12280>
0x9f18:     84 c0                              	test al, al
0x9f1a:     75 e4                              	jne 0x9f00 <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x30>
0x9f1c:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x9f1f:     85 d2                              	test edx, edx
0x9f21:     75 e4                              	jne 0x9f07 <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x37>
0x9f23:     84 c0                              	test al, al
0x9f25:     89 dd                              	mov ebp, ebx
0x9f27:     75 37                              	jne 0x9f60 <_ZNSt8_Rb_treeI6CKeyIDS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x90>
0x9f29:     8d 45 10                           	lea eax, [ebp + 0x10]
0x9f2c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x9f30:     89 04 24                           	mov dword ptr [esp], eax
0x9f33:     e8 48 83 00 00                     	call 0x12280 <unknown_12280>
0x9f38:     84 c0                              	test al, al
0x9f3a:     75 3c                              	jne 0x9f78 <function_9f78>
0x9f3c:     89 2f                              	mov dword ptr [edi], ebp
0x9f3e:     c6 47 04 00                        	mov byte ptr [edi + 4], 0
0x9f42:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x9f46:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9f4d:     89 f8                              	mov eax, edi
0x9f4f:     75 70                              	jne 0x9fc1 <function_9fc1>
0x9f51:     83 c4 4c                           	add esp, 0x4c
0x9f54:     5b                                 	pop ebx
0x9f55:     5e                                 	pop esi
0x9f56:     5f                                 	pop edi
0x9f57:     5d                                 	pop ebp
0x9f58:     c2 04 00                           	ret 4
0x9f5b:     89 d3                              	mov ebx, edx
0x9f5d:     83 c3 04                           	add ebx, 4
0x9f60:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x9f64:     3b 5a 0c                           	cmp ebx, dword ptr [edx + 0xc]
0x9f67:     74 42                              	je 0x9fab <function_9fab>
0x9f69:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9f6c -- 0x9f6d
0x9f6c:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x9f6d -- 0x9f6e
; data inside code section at 0x9f6e -- 0x9f71
0x9f6e:     ff ff ff                                           |...             |
; function: function_9f71 at 0x9f71 -- 0x9f75
0x9f71:     89 c5                              	mov ebp, eax
0x9f73:     eb b4                              	jmp 0x9f29
; data inside code section at 0x9f75 -- 0x9f78
0x9f75:     8d 76 00                                           |.v.             |
; function: function_9f78 at 0x9f78 -- 0x9fab
0x9f78:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x9f7c:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x9f80:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x9f84:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x9f88:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x9f90:     89 04 24                           	mov dword ptr [esp], eax
0x9f93:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x9f97:     e8 14 9d 00 00                     	call 0x13cb0 <unknown_13cb0>
0x9f9c:     83 ec 04                           	sub esp, 4
0x9f9f:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x9fa3:     c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x9fa7:     89 07                              	mov dword ptr [edi], eax
0x9fa9:     eb 97                              	jmp 0x9f42
; function: function_9fab at 0x9fab -- 0x9fc1
0x9fab:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x9faf:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x9fb3:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x9fb7:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x9fbf:     eb cf                              	jmp 0x9f90
; function: function_9fc1 at 0x9fc1 -- 0x9fc2
; dynamically linked function: __stack_chk_fail at 0x9fc2 -- 0x9fc3
; data inside code section at 0x9fc3 -- 0x9fc6
0x9fc3:     ff ff ff                                           |...             |
; section: .text._ZNK14CBasicKeyStore7GetKeysERSt3setI6CKeyIDSt4lessIS1_ESaIS1_EE
; function: _ZNK14CBasicKeyStore7GetKeysERSt3setI6CKeyIDSt4lessIS1_ESaIS1_EE at 0x9fd0 -- 0xa071
0x9fd0:     55                                 	push ebp
0x9fd1:     57                                 	push edi
0x9fd2:     56                                 	push esi
0x9fd3:     53                                 	push ebx
0x9fd4:     83 ec 4c                           	sub esp, 0x4c
0x9fd7:     8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0x9fdb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9fe1:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x9fe5:     31 c0                              	xor eax, eax
0x9fe7:     8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x9feb:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0x9fee:     89 34 24                           	mov dword ptr [esp], esi
0x9ff1:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9ff5:     e8 56 9d 00 00                     	call 0x13d50 <unknown_13d50>
0x9ffa:     8d 46 04                           	lea eax, [esi + 4]
0x9ffd:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0xa000:     89 46 10                           	mov dword ptr [esi + 0x10], eax
0xa003:     8d 45 04                           	lea eax, [ebp + 4]
0xa006:     c7 46 08 00 00 00 00               	mov dword ptr [esi + 8], 0
0xa00d:     c7 46 14 00 00 00 00               	mov dword ptr [esi + 0x14], 0
0xa014:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa018:     8d 44 24 34                        	lea eax, [esp + 0x34]
0xa01c:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xa024:     c7 44 24 10 40 00 00 00            	mov dword ptr [esp + 0x10], 0x40
0xa02c:     c7 44 24 0c b9 24 00 00            	mov dword ptr [esp + 0xc], 0x24b9 ; "keystore.h"
0xa034:     c7 44 24 08 ad 24 00 00            	mov dword ptr [esp + 8], 0x24ad ; "cs_KeyStore"
0xa03c:     89 04 24                           	mov dword ptr [esp], eax
0xa03f:     e8 4c 99 00 00                     	call 0x13990 <unknown_13990>
0xa044:     8b 5d 64                           	mov ebx, dword ptr [ebp + 0x64]
0xa047:     83 c5 5c                           	add ebp, 0x5c
0xa04a:     39 eb                              	cmp ebx, ebp
0xa04c:     74 2e                              	je 0xa07c <function_a07c>
0xa04e:     8d 7c 24 28                        	lea edi, [esp + 0x28]
0xa052:     8d b6 00 00 00 00                  	lea esi, [esi]
0xa058:     8d 43 10                           	lea eax, [ebx + 0x10]
0xa05b:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xa05f:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xa063:     89 3c 24                           	mov dword ptr [esp], edi
0xa066:     e8 35 9e 00 00                     	call 0x13ea0 <unknown_13ea0>
0xa06b:     83 ec 04                           	sub esp, 4
0xa06e:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xa071 -- 0xa072
0xa071:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xa072 -- 0xa073
; data inside code section at 0xa073 -- 0xa079
0xa073:     ff ff ff 39 c5 89                                  |...9..          |
; function: function_a079 at 0xa079 -- 0xa07a
0xa079:     c3                                 	ret 
; data inside code section at 0xa07a -- 0xa07c
0xa07a:     75 dc                                              |u.              |
; function: function_a07c at 0xa07c -- 0xa09d
0xa07c:     8d 44 24 34                        	lea eax, [esp + 0x34]
0xa080:     89 04 24                           	mov dword ptr [esp], eax
0xa083:     e8 38 8f 00 00                     	call 0x12fc0 <unknown_12fc0>
0xa088:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xa08c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa093:     75 1e                              	jne 0xa0b3 <function_a0b3>
0xa095:     83 c4 4c                           	add esp, 0x4c
0xa098:     5b                                 	pop ebx
0xa099:     5e                                 	pop esi
0xa09a:     5f                                 	pop edi
0xa09b:     5d                                 	pop ebp
0xa09c:     c3                                 	ret 
; data inside code section at 0xa09d -- 0xa09e
0xa09d:     89                                                 |.               |
; function: function_a09e at 0xa09e -- 0xa09f
0xa09e:     c3                                 	ret 
; data inside code section at 0xa09f -- 0xa0af
0xa09f:     8d 44 24 34 89 04 24 e8  15 8f 00 00 89 1c 24 e8   |.D$4..$.......$.|
; dynamically linked function: _Unwind_Resume at 0xa0af -- 0xa0b0
; data inside code section at 0xa0b0 -- 0xa0b3
0xa0b0:     ff ff ff                                           |...             |
; function: function_a0b3 at 0xa0b3 -- 0xa0b4
; dynamically linked function: __stack_chk_fail at 0xa0b4 -- 0xa0b5
; data inside code section at 0xa0b5 -- 0xa0b8
0xa0b5:     ff ff ff                                           |...             |
; section: .text._ZNK15CCryptoKeyStore7GetKeysERSt3setI6CKeyIDSt4lessIS1_ESaIS1_EE
; function: _ZNK15CCryptoKeyStore7GetKeysERSt3setI6CKeyIDSt4lessIS1_ESaIS1_EE at 0xa0c0 -- 0xa139
0xa0c0:     55                                 	push ebp
0xa0c1:     57                                 	push edi
0xa0c2:     56                                 	push esi
0xa0c3:     53                                 	push ebx
0xa0c4:     83 ec 3c                           	sub esp, 0x3c
0xa0c7:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xa0cb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa0d1:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa0d5:     31 c0                              	xor eax, eax
0xa0d7:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xa0db:     80 be ac 00 00 00 00               	cmp byte ptr [esi + 0xac], 0
0xa0e2:     74 7c                              	je 0xa160 <function_a160>
0xa0e4:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xa0e7:     89 1c 24                           	mov dword ptr [esp], ebx
0xa0ea:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa0ee:     e8 4d 9d 00 00                     	call 0x13e40 <unknown_13e40>
0xa0f3:     8d 43 04                           	lea eax, [ebx + 4]
0xa0f6:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xa0f9:     c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0xa100:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xa103:     8b ae 94 00 00 00                  	mov ebp, dword ptr [esi + 0x94]
0xa109:     81 c6 8c 00 00 00                  	add esi, 0x8c
0xa10f:     c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0xa116:     39 f5                              	cmp ebp, esi
0xa118:     74 2a                              	je 0xa144 <function_a144>
0xa11a:     8d 7c 24 18                        	lea edi, [esp + 0x18]
0xa11e:     66 90                              	nop 
0xa120:     8d 45 10                           	lea eax, [ebp + 0x10]
0xa123:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xa127:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xa12b:     89 3c 24                           	mov dword ptr [esp], edi
0xa12e:     e8 5d 9e 00 00                     	call 0x13f90 <unknown_13f90>
0xa133:     83 ec 04                           	sub esp, 4
0xa136:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xa139 -- 0xa13a
0xa139:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xa13a -- 0xa13b
; data inside code section at 0xa13b -- 0xa144
0xa13b:     ff ff ff 39 c6 89 c5 75  dc                        |...9...u.       |
; function: function_a144 at 0xa144 -- 0xa159
0xa144:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa148:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa14f:     75 30                              	jne 0xa181 <function_a181>
0xa151:     83 c4 3c                           	add esp, 0x3c
0xa154:     5b                                 	pop ebx
0xa155:     5e                                 	pop esi
0xa156:     5f                                 	pop edi
0xa157:     5d                                 	pop ebp
0xa158:     c3                                 	ret 
; data inside code section at 0xa159 -- 0xa160
0xa159:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_a160 at 0xa160 -- 0xa181
0xa160:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa164:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa16b:     75 14                              	jne 0xa181 <function_a181>
0xa16d:     89 5c 24 54                        	mov dword ptr [esp + 0x54], ebx
0xa171:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xa175:     83 c4 3c                           	add esp, 0x3c
0xa178:     5b                                 	pop ebx
0xa179:     5e                                 	pop esi
0xa17a:     5f                                 	pop edi
0xa17b:     5d                                 	pop ebp
0xa17c:     e9 0f 9f 00 00                     	jmp 0x14090 <function_14090>
; function: function_a181 at 0xa181 -- 0xa182
; dynamically linked function: __stack_chk_fail at 0xa182 -- 0xa183
; data inside code section at 0xa183 -- 0xa186
0xa183:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv
; function: _ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv at 0xa190 -- 0xa1ab
0xa190:     56                                 	push esi
0xa191:     53                                 	push ebx
0xa192:     83 ec 24                           	sub esp, 0x24
0xa195:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa199:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa19f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa1a3:     31 c0                              	xor eax, eax
0xa1a5:     8d 73 0c                           	lea esi, [ebx + 0xc]
0xa1a8:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xa1ab -- 0xa1ac
0xa1ab:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xa1ac -- 0xa1ad
; data inside code section at 0xa1ad -- 0xa1c9
0xa1ad:     ff ff ff 8b 03 89 44 24  14 8b 43 04 85 c0 89 44   |......D$..C....D|
0xa1bd:     24 18 74 04 f0 ff 40 04  89 34 24 e8               |$.t...@..4$.    |
; dynamically linked function: pthread_mutex_unlock at 0xa1c9 -- 0xa1ca
; data inside code section at 0xa1ca -- 0xa1cc
0xa1ca:     ff ff                                              |..              |
; function: function_a1cc at 0xa1cc -- 0xa240
0xa1cc:     ff 8b 44 24 14 85                  	dec dword ptr [ebx - 0x7aebdbbc]
0xa1d2:     c0 74 59 8b 00                     	sal byte ptr [ecx + ebx*2 - 0x75], 0
0xa1d7:     85 c0                              	test eax, eax
0xa1d9:     74 5f                              	je 0xa23a <function_a1cc+0x6e>
0xa1db:     8b 30                              	mov esi, dword ptr [eax]
0xa1dd:     eb 2c                              	jmp 0xa20b <function_a1cc+0x3f>
; data inside code section at 0xa1df -- 0xa1e0
0xa1df:     90                                                 |.               |
0xa1e0:     8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0xa1e3:     85 db                              	test ebx, ebx
0xa1e5:     74 4e                              	je 0xa235 <function_a1cc+0x69>
0xa1e7:     8b 03                              	mov eax, dword ptr [ebx]
0xa1e9:     89 1c 24                           	mov dword ptr [esp], ebx
0xa1ec:     ff 50 0c                           	call dword ptr [eax + 0xc]
0xa1ef:     8b 03                              	mov eax, dword ptr [ebx]
0xa1f1:     c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0xa1f5:     89 1c 24                           	mov dword ptr [esp], ebx
0xa1f8:     ff 50 10                           	call dword ptr [eax + 0x10]
0xa1fb:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xa1ff:     8b 36                              	mov esi, dword ptr [esi]
0xa201:     85 c0                              	test eax, eax
0xa203:     74 29                              	je 0xa22e <function_a1cc+0x62>
0xa205:     8b 00                              	mov eax, dword ptr [eax]
0xa207:     85 c0                              	test eax, eax
0xa209:     74 2f                              	je 0xa23a <function_a1cc+0x6e>
0xa20b:     39 c6                              	cmp esi, eax
0xa20d:     75 d1                              	jne 0xa1e0 <function_a1cc+0x14>
0xa20f:     8d 44 24 18                        	lea eax, [esp + 0x18]
0xa213:     89 04 24                           	mov dword ptr [esp], eax
0xa216:     e8 45 44 00 00                     	call 0xe660 <function_e660>
0xa21b:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa21f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa226:     75 17                              	jne 0xa23f <function_a1cc+0x73>
0xa228:     83 c4 24                           	add esp, 0x24
0xa22b:     5b                                 	pop ebx
0xa22c:     5e                                 	pop esi
0xa22d:     c3                                 	ret 
0xa22e:     66 90                              	nop 
0xa230:     e8 69 35 00 00                     	call 0xd79e <function_d79e>
0xa235:     e8 98 35 00 00                     	call 0xd7d2 <function_d7d2>
0xa23a:     e8 c7 35 00 00                     	call 0xd806 <function_d806>
0xa23f:     90                                 	nop 
; data inside code section at 0xa240 -- 0xa241
0xa240:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa241 -- 0xa242
; data inside code section at 0xa242 -- 0xa246
0xa242:     ff ff ff 89                                        |....            |
; function: function_a246 at 0xa246 -- 0xa247
0xa246:     c3                                 	ret 
; data inside code section at 0xa247 -- 0xa257
0xa247:     8d 44 24 18 89 04 24 e8  0d 44 00 00 89 1c 24 e8   |.D$...$..D....$.|
; dynamically linked function: _Unwind_Resume at 0xa257 -- 0xa258
; data inside code section at 0xa258 -- 0xa25b
0xa258:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED2Ev
; function: _ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev at 0xa260 -- 0xa2b1
0xa260:     53                                 	push ebx
0xa261:     83 ec 38                           	sub esp, 0x38
0xa264:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xa268:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa26e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa272:     31 c0                              	xor eax, eax
0xa274:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xa277:     c7 03 c0 f0 00 00                  	mov dword ptr [ebx], 0xf0c0
0xa27d:     85 c0                              	test eax, eax
0xa27f:     74 2b                              	je 0xa2ac <_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0xa281:     89 04 24                           	mov dword ptr [esp], eax
0xa284:     e8 67 a1 00 00                     	call 0x143f0 <unknown_143f0>
0xa289:     8d 43 08                           	lea eax, [ebx + 8]
0xa28c:     89 04 24                           	mov dword ptr [esp], eax
0xa28f:     e8 9c 44 00 00                     	call 0xe730 <function_e730>
0xa294:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa298:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa29f:     c7 03 d8 f0 00 00                  	mov dword ptr [ebx], 0xf0d8
0xa2a5:     75 0a                              	jne 0xa2b1 <_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0xa2a7:     83 c4 38                           	add esp, 0x38
0xa2aa:     5b                                 	pop ebx
0xa2ab:     c3                                 	ret 
0xa2ac:     e8 59 36 00 00                     	call 0xd90a <function_d90a>
; data inside code section at 0xa2b1 -- 0xa2b2
0xa2b1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa2b2 -- 0xa2b3
; data inside code section at 0xa2b3 -- 0xa2b6
0xa2b3:     ff ff ff                                           |...             |
; function: function_a2b6 at 0xa2b6 -- 0xa2b7
; data inside code section at 0xa2b7 -- 0xa2c0
0xa2b7:     03 d8 f0 00 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xa2c0 -- 0xa2c1
; data inside code section at 0xa2c1 -- 0xa2c3
0xa2c1:     ff ff                                              |..              |
; function: function_a2c3 at 0xa2c3 -- 0xa2d9
0xa2c3:     ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0xa2c9:     24 1c                              	and al, 0x1c
0xa2cb:     89 14 24                           	mov dword ptr [esp], edx
0xa2ce:     e8 5d 44 00 00                     	call 0xe730 <function_e730>
0xa2d3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa2d7:     eb dd                              	jmp 0xa2b6 <function_a2b6>
; section: .text._ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev
; function: _ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev at 0xa2e0 -- 0xa32f
0xa2e0:     53                                 	push ebx
0xa2e1:     83 ec 38                           	sub esp, 0x38
0xa2e4:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xa2e8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa2ee:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa2f2:     31 c0                              	xor eax, eax
0xa2f4:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xa2f7:     c7 03 c0 f0 00 00                  	mov dword ptr [ebx], 0xf0c0
0xa2fd:     85 c0                              	test eax, eax
0xa2ff:     74 33                              	je 0xa334 <function_a334>
0xa301:     89 04 24                           	mov dword ptr [esp], eax
0xa304:     e8 67 a1 00 00                     	call 0x14470 <unknown_14470>
0xa309:     8d 43 08                           	lea eax, [ebx + 8]
0xa30c:     89 04 24                           	mov dword ptr [esp], eax
0xa30f:     e8 9c 44 00 00                     	call 0xe7b0 <function_e7b0>
0xa314:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa318:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa31f:     c7 03 d8 f0 00 00                  	mov dword ptr [ebx], 0xf0d8
0xa325:     75 12                              	jne 0xa339 <function_a339>
0xa327:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0xa32b:     83 c4 38                           	add esp, 0x38
0xa32e:     5b                                 	pop ebx
; data inside code section at 0xa32f -- 0xa330
0xa32f:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa330 -- 0xa331
; data inside code section at 0xa331 -- 0xa334
0xa331:     ff ff ff                                           |...             |
; function: function_a334 at 0xa334 -- 0xa339
0xa334:     e8 51 36 00 00                     	call 0xd98a
; function: function_a339 at 0xa339 -- 0xa33a
; dynamically linked function: __stack_chk_fail at 0xa33a -- 0xa33b
; data inside code section at 0xa33b -- 0xa33e
0xa33b:     ff ff ff                                           |...             |
; function: function_a33e at 0xa33e -- 0xa33f
; data inside code section at 0xa33f -- 0xa348
0xa33f:     03 d8 f0 00 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xa348 -- 0xa349
; data inside code section at 0xa349 -- 0xa34b
0xa349:     ff ff                                              |..              |
; function: function_a34b at 0xa34b -- 0xa361
0xa34b:     ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0xa351:     24 1c                              	and al, 0x1c
0xa353:     89 14 24                           	mov dword ptr [esp], edx
0xa356:     e8 55 44 00 00                     	call 0xe7b0 <function_e7b0>
0xa35b:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa35f:     eb dd                              	jmp 0xa33e <function_a33e>
; section: .text._ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev
; function: _ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev at 0xa370 -- 0xa3bf
0xa370:     53                                 	push ebx
0xa371:     83 ec 38                           	sub esp, 0x38
0xa374:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xa378:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa37e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa382:     31 c0                              	xor eax, eax
0xa384:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xa387:     c7 03 c0 f0 00 00                  	mov dword ptr [ebx], 0xf0c0
0xa38d:     85 c0                              	test eax, eax
0xa38f:     74 33                              	je 0xa3c4 <function_a3c4>
0xa391:     89 04 24                           	mov dword ptr [esp], eax
0xa394:     e8 67 a1 00 00                     	call 0x14500 <unknown_14500>
0xa399:     8d 43 08                           	lea eax, [ebx + 8]
0xa39c:     89 04 24                           	mov dword ptr [esp], eax
0xa39f:     e8 9c 44 00 00                     	call 0xe840
0xa3a4:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa3a8:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa3af:     c7 03 d8 f0 00 00                  	mov dword ptr [ebx], 0xf0d8
0xa3b5:     75 12                              	jne 0xa3c9 <function_a3c9>
0xa3b7:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0xa3bb:     83 c4 38                           	add esp, 0x38
0xa3be:     5b                                 	pop ebx
; data inside code section at 0xa3bf -- 0xa3c0
0xa3bf:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa3c0 -- 0xa3c1
; data inside code section at 0xa3c1 -- 0xa3c4
0xa3c1:     ff ff ff                                           |...             |
; function: function_a3c4 at 0xa3c4 -- 0xa3c9
0xa3c4:     e8 51 36 00 00                     	call 0xda1a <function_da1a>
; function: function_a3c9 at 0xa3c9 -- 0xa3ca
; dynamically linked function: __stack_chk_fail at 0xa3ca -- 0xa3cb
; data inside code section at 0xa3cb -- 0xa3ce
0xa3cb:     ff ff ff                                           |...             |
; function: function_a3ce at 0xa3ce -- 0xa3cf
; data inside code section at 0xa3cf -- 0xa3d8
0xa3cf:     03 d8 f0 00 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xa3d8 -- 0xa3d9
; data inside code section at 0xa3d9 -- 0xa3db
0xa3d9:     ff ff                                              |..              |
; function: function_a3db at 0xa3db -- 0xa3f1
0xa3db:     ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0xa3e1:     24 1c                              	and al, 0x1c
0xa3e3:     89 14 24                           	mov dword ptr [esp], edx
0xa3e6:     e8 55 44 00 00                     	call 0xe840
0xa3eb:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa3ef:     eb dd                              	jmp 0xa3ce <function_a3ce>
; section: .text._ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED2Ev
; function: _ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev at 0xa400 -- 0xa451
0xa400:     53                                 	push ebx
0xa401:     83 ec 38                           	sub esp, 0x38
0xa404:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xa408:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa40e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa412:     31 c0                              	xor eax, eax
0xa414:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xa417:     c7 03 c0 f0 00 00                  	mov dword ptr [ebx], 0xf0c0
0xa41d:     85 c0                              	test eax, eax
0xa41f:     74 2b                              	je 0xa44c <_ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0xa421:     89 04 24                           	mov dword ptr [esp], eax
0xa424:     e8 67 a1 00 00                     	call 0x14590 <unknown_14590>
0xa429:     8d 43 08                           	lea eax, [ebx + 8]
0xa42c:     89 04 24                           	mov dword ptr [esp], eax
0xa42f:     e8 9c 44 00 00                     	call 0xe8d0 <function_e8d0>
0xa434:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa438:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa43f:     c7 03 d8 f0 00 00                  	mov dword ptr [ebx], 0xf0d8
0xa445:     75 0a                              	jne 0xa451 <_ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0xa447:     83 c4 38                           	add esp, 0x38
0xa44a:     5b                                 	pop ebx
0xa44b:     c3                                 	ret 
0xa44c:     e8 59 36 00 00                     	call 0xdaaa <function_daaa>
; data inside code section at 0xa451 -- 0xa452
0xa451:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa452 -- 0xa453
; data inside code section at 0xa453 -- 0xa456
0xa453:     ff ff ff                                           |...             |
; function: function_a456 at 0xa456 -- 0xa457
; data inside code section at 0xa457 -- 0xa460
0xa457:     03 d8 f0 00 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xa460 -- 0xa461
; data inside code section at 0xa461 -- 0xa463
0xa461:     ff ff                                              |..              |
; function: function_a463 at 0xa463 -- 0xa479
0xa463:     ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0xa469:     24 1c                              	and al, 0x1c
0xa46b:     89 14 24                           	mov dword ptr [esp], edx
0xa46e:     e8 5d 44 00 00                     	call 0xe8d0 <function_e8d0>
0xa473:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa477:     eb dd                              	jmp 0xa456 <function_a456>
; section: .text._ZN15CCryptoKeyStoreD2Ev
; function: _ZN15CCryptoKeyStoreD1Ev at 0xa480 -- 0xa4ed
0xa480:     57                                 	push edi
0xa481:     56                                 	push esi
0xa482:     53                                 	push ebx
0xa483:     83 ec 20                           	sub esp, 0x20
0xa486:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa48a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa490:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa494:     31 c0                              	xor eax, eax
0xa496:     8b 83 b4 00 00 00                  	mov eax, dword ptr [ebx + 0xb4]
0xa49c:     c7 03 68 ef 00 00                  	mov dword ptr [ebx], 0xef68
0xa4a2:     c7 83 b0 00 00 00 c0 f0 00 00      	mov dword ptr [ebx + 0xb0], 0xf0c0
0xa4ac:     85 c0                              	test eax, eax
0xa4ae:     0f 84 d4 00 00 00                  	je 0xa588 <function_a588>
0xa4b4:     89 04 24                           	mov dword ptr [esp], eax
0xa4b7:     e8 54 a1 00 00                     	call 0x14610 <unknown_14610>
0xa4bc:     8d 83 b8 00 00 00                  	lea eax, [ebx + 0xb8]
0xa4c2:     89 04 24                           	mov dword ptr [esp], eax
0xa4c5:     e8 86 44 00 00                     	call 0xe950 <function_e950>
0xa4ca:     8b b3 a0 00 00 00                  	mov esi, dword ptr [ebx + 0xa0]
0xa4d0:     c7 83 b0 00 00 00 d8 f0 00 00      	mov dword ptr [ebx + 0xb0], 0xf0d8
0xa4da:     8b bb a8 00 00 00                  	mov edi, dword ptr [ebx + 0xa8]
0xa4e0:     85 f6                              	test esi, esi
0xa4e2:     74 2a                              	je 0xa50e <function_a50e>
0xa4e4:     29 f7                              	sub edi, esi
0xa4e6:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xa4ea:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xa4ed -- 0xa4ee
0xa4ed:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xa4ee -- 0xa4ef
; data inside code section at 0xa4ef -- 0xa4fd
0xa4ef:     ff ff ff 89 7c 24 08 89  74 24 04 c7 04 24         |....|$..t$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xa4fd -- 0xa509
; data inside code section at 0xa509 -- 0xa50a
0xa509:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa50a -- 0xa50b
; data inside code section at 0xa50b -- 0xa50e
0xa50b:     ff ff ff                                           |...             |
; function: function_a50e at 0xa50e -- 0xa55c
0xa50e:     8b 83 90 00 00 00                  	mov eax, dword ptr [ebx + 0x90]
0xa514:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa518:     8d 83 88 00 00 00                  	lea eax, [ebx + 0x88]
0xa51e:     89 04 24                           	mov dword ptr [esp], eax
0xa521:     e8 2a 93 00 00                     	call 0x13850 <unknown_13850>
0xa526:     8b 43 78                           	mov eax, dword ptr [ebx + 0x78]
0xa529:     c7 03 28 ef 00 00                  	mov dword ptr [ebx], 0xef28
0xa52f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa533:     8d 43 70                           	lea eax, [ebx + 0x70]
0xa536:     89 04 24                           	mov dword ptr [esp], eax
0xa539:     e8 12 91 00 00                     	call 0x13650 <unknown_13650>
0xa53e:     8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0xa541:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa545:     8d 43 58                           	lea eax, [ebx + 0x58]
0xa548:     89 04 24                           	mov dword ptr [esp], eax
0xa54b:     e8 70 90 00 00                     	call 0x135c0 <unknown_135c0>
0xa550:     c7 03 e8 ee 00 00                  	mov dword ptr [ebx], 0xeee8
0xa556:     8d 43 04                           	lea eax, [ebx + 4]
0xa559:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa55c -- 0xa55d
0xa55c:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0xa55d -- 0xa55e
; data inside code section at 0xa55e -- 0xa560
0xa55e:     ff ff                                              |..              |
; function: function_a560 at 0xa560 -- 0xa567
0xa560:     ff 85 c0 75 70 83                  	inc dword ptr [ebp - 0x7c8f8a40]
0xa566:     c3                                 	ret 
; data inside code section at 0xa567 -- 0xa56c
0xa567:     1c 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0xa56c -- 0xa56d
; data inside code section at 0xa56d -- 0xa56f
0xa56d:     ff ff                                              |..              |
; function: function_a56f at 0xa56f -- 0xa588
0xa56f:     ff 85 c0 75 3d 8b                  	inc dword ptr [ebp - 0x74c28a40]
0xa575:     44                                 	inc esp
0xa576:     24 1c                              	and al, 0x1c
0xa578:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa57f:     75 2b                              	jne 0xa5ac <function_a5ac>
0xa581:     83 c4 20                           	add esp, 0x20
0xa584:     5b                                 	pop ebx
0xa585:     5e                                 	pop esi
0xa586:     5f                                 	pop edi
0xa587:     c3                                 	ret 
; function: function_a588 at 0xa588 -- 0xa5a7
0xa588:     c7 44 24 0c 20 4e 00 00            	mov dword ptr [esp + 0xc], 0x4e20 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>&]"
0xa590:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xa598:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xa5a0:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xa5a7 -- 0xa5a8
0xa5a7:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xa5a8 -- 0xa5a9
; data inside code section at 0xa5a9 -- 0xa5ac
0xa5a9:     ff ff ff                                           |...             |
; function: function_a5ac at 0xa5ac -- 0xa5ad
; dynamically linked function: __stack_chk_fail at 0xa5ad -- 0xa5ae
; data inside code section at 0xa5ae -- 0xa5d1
0xa5ae:     ff ff ff c7 44 24 0c a0  46 00 00 c7 44 24 08 5e   |....D$..F...D$.^|
0xa5be:     00 00 00 c7 44 24 04 00  33 00 00 c7 04 24 cc 23   |....D$..3....$.#|
0xa5ce:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0xa5d1 -- 0xa5d2
; data inside code section at 0xa5d2 -- 0xa5f5
0xa5d2:     ff ff ff c7 44 24 0c a0  46 00 00 c7 44 24 08 5c   |....D$..F...D$.\|
0xa5e2:     00 00 00 c7 44 24 04 00  33 00 00 c7 04 24 b1 23   |....D$..3....$.#|
0xa5f2:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0xa5f5 -- 0xa5f6
; data inside code section at 0xa5f6 -- 0xa609
0xa5f6:     ff ff ff 89 c6 8d 83 b8  00 00 00 89 04 24 e8 47   |.............$.G|
0xa606:     43 00 00                                           |C..             |
; function: function_a609 at 0xa609 -- 0xa60a
; data inside code section at 0xa60a -- 0xa621
0xa60a:     83 b0 00 00 00 d8 f0 00  00 8d 83 a0 00 00 00 89   |................|
0xa61a:     04 24 e8 6f 8b 00 00                               |.$.o...         |
; function: function_a621 at 0xa621 -- 0xa622
; data inside code section at 0xa622 -- 0xa645
0xa622:     83 90 00 00 00 89 44 24  04 8d 83 88 00 00 00 89   |......D$........|
0xa632:     04 24 e8 17 92 00 00 89  1c 24 e8 7f 90 00 00 89   |.$.......$......|
0xa642:     34 24 e8                                           |4$.             |
; dynamically linked function: _Unwind_Resume at 0xa645 -- 0xa646
; data inside code section at 0xa646 -- 0xa649
0xa646:     ff ff ff                                           |...             |
; function: function_a649 at 0xa649 -- 0xa64d
0xa649:     89 c6                              	mov esi, eax
0xa64b:     eb d4                              	jmp 0xa621 <function_a621>
; data inside code section at 0xa64d -- 0xa65b
0xa64d:     89 c6 89 1c 24 e8 d9 35  00 00 89 34 24 e8         |....$..5...4$.  |
; dynamically linked function: _Unwind_Resume at 0xa65b -- 0xa65c
; data inside code section at 0xa65c -- 0xa65f
0xa65c:     ff ff ff                                           |...             |
; function: function_a65f at 0xa65f -- 0xa663
0xa65f:     89 c6                              	mov esi, eax
0xa661:     eb a6                              	jmp 0xa609 <function_a609>
; section: .text._ZN15CCryptoKeyStoreD0Ev
; function: _ZN15CCryptoKeyStoreD0Ev at 0xa670 -- 0xa6a1
0xa670:     53                                 	push ebx
0xa671:     83 ec 28                           	sub esp, 0x28
0xa674:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa678:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa67e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa682:     31 c0                              	xor eax, eax
0xa684:     89 1c 24                           	mov dword ptr [esp], ebx
0xa687:     e8 64 a4 00 00                     	call 0x14af0 <unknown_14af0>
0xa68c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa690:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa697:     75 0d                              	jne 0xa6a6 <function_a6a6>
0xa699:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xa69d:     83 c4 28                           	add esp, 0x28
0xa6a0:     5b                                 	pop ebx
; data inside code section at 0xa6a1 -- 0xa6a2
0xa6a1:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa6a2 -- 0xa6a3
; data inside code section at 0xa6a3 -- 0xa6a6
0xa6a3:     ff ff ff                                           |...             |
; function: function_a6a6 at 0xa6a6 -- 0xa6a7
; dynamically linked function: __stack_chk_fail at 0xa6a7 -- 0xa6a8
; data inside code section at 0xa6a8 -- 0xa6ab
0xa6a8:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
; function: _ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_ at 0xa6b0 -- 0xa6fd
0xa6b0:     83 ec 4c                           	sub esp, 0x4c
0xa6b3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa6b9:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa6bd:     31 c0                              	xor eax, eax
0xa6bf:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xa6c3:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xa6c7:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xa6cb:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xa6cf:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xa6d3:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xa6d7:     8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0xa6db:     85 c0                              	test eax, eax
0xa6dd:     8d 53 04                           	lea edx, [ebx + 4]
0xa6e0:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xa6e4:     8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0xa6e8:     c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0xa6f0:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xa6f4:     74 72                              	je 0xa768 <function_a768>
0xa6f6:     c7 04 24 18 00 00 00               	mov dword ptr [esp], 0x18
; data inside code section at 0xa6fd -- 0xa6fe
0xa6fd:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xa6fe -- 0xa6ff
; data inside code section at 0xa6ff -- 0xa72f
0xa6ff:     ff ff ff 83 f8 f0 74 0c  8b 55 00 8b 4d 04 89 50   |......t..U..M..P|
0xa70f:     10 89 48 14 8b 4c 24 10  8b 54 24 14 89 44 24 04   |..H..L$..T$..D$.|
0xa71f:     89 44 24 1c 89 4c 24 0c  89 7c 24 08 89 14 24 e8   |.D$..L$..|$...$.|
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xa72f -- 0xa730
; data inside code section at 0xa730 -- 0xa732
0xa730:     ff ff                                              |..              |
; function: function_a732 at 0xa732 -- 0xa762
0xa732:     ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0xa738:     43                                 	inc ebx
0xa739:     14 01                              	adc al, 1
0xa73b:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xa73f:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xa746:     89 06                              	mov dword ptr [esi], eax
0xa748:     89 f0                              	mov eax, esi
0xa74a:     75 34                              	jne 0xa780 <function_a780>
0xa74c:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xa750:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xa754:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xa758:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xa75c:     83 c4 4c                           	add esp, 0x4c
0xa75f:     c2 04 00                           	ret 4
; data inside code section at 0xa762 -- 0xa768
0xa762:     8d b6 00 00 00 00                                  |......          |
; function: function_a768 at 0xa768 -- 0xa780
0xa768:     39 d7                              	cmp edi, edx
0xa76a:     74 8a                              	je 0xa6f6
0xa76c:     8b 4f 10                           	mov ecx, dword ptr [edi + 0x10]
0xa76f:     31 d2                              	xor edx, edx
0xa771:     39 4d 00                           	cmp dword ptr [ebp], ecx
0xa774:     0f 92 c2                           	setb dl
0xa777:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xa77b:     e9 76 ff ff ff                     	jmp 0xa6f6
; function: function_a780 at 0xa780 -- 0xa781
; dynamically linked function: __stack_chk_fail at 0xa781 -- 0xa782
; data inside code section at 0xa782 -- 0xa785
0xa782:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_
; function: _ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_ at 0xa790 -- 0xa828
0xa790:     55                                 	push ebp
0xa791:     57                                 	push edi
0xa792:     56                                 	push esi
0xa793:     53                                 	push ebx
0xa794:     83 ec 4c                           	sub esp, 0x4c
0xa797:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xa79b:     8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0xa79f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa7a5:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xa7a9:     31 c0                              	xor eax, eax
0xa7ab:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0xa7af:     8b 77 08                           	mov esi, dword ptr [edi + 8]
0xa7b2:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xa7b6:     85 f6                              	test esi, esi
0xa7b8:     74 5d                              	je 0xa817 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x87>
0xa7ba:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xa7be:     8b 0a                              	mov ecx, dword ptr [edx]
0xa7c0:     eb 14                              	jmp 0xa7d6 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x46>
; data inside code section at 0xa7c2 -- 0xa7c8
0xa7c2:     8d b6 00 00 00 00                                  |......          |
0xa7c8:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xa7cb:     bd 01 00 00 00                     	mov ebp, 1
0xa7d0:     85 c0                              	test eax, eax
0xa7d2:     74 12                              	je 0xa7e6 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x56>
0xa7d4:     89 c6                              	mov esi, eax
0xa7d6:     8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0xa7d9:     39 ca                              	cmp edx, ecx
0xa7db:     77 eb                              	ja 0xa7c8 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x38>
0xa7dd:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xa7e0:     31 ed                              	xor ebp, ebp
0xa7e2:     85 c0                              	test eax, eax
0xa7e4:     75 ee                              	jne 0xa7d4 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x44>
0xa7e6:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xa7ea:     89 ea                              	mov edx, ebp
0xa7ec:     89 f0                              	mov eax, esi
0xa7ee:     84 d2                              	test dl, dl
0xa7f0:     75 2e                              	jne 0xa820 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x90>
0xa7f2:     39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0xa7f6:     72 48                              	jb 0xa840 <function_a840>
0xa7f8:     89 03                              	mov dword ptr [ebx], eax
0xa7fa:     c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0xa7fe:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xa802:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa809:     89 d8                              	mov eax, ebx
0xa80b:     75 66                              	jne 0xa873 <function_a873>
0xa80d:     83 c4 4c                           	add esp, 0x4c
0xa810:     5b                                 	pop ebx
0xa811:     5e                                 	pop esi
0xa812:     5f                                 	pop edi
0xa813:     5d                                 	pop ebp
0xa814:     c2 04 00                           	ret 4
0xa817:     8d 77 04                           	lea esi, [edi + 4]
0xa81a:     8d b6 00 00 00 00                  	lea esi, [esi]
0xa820:     3b 77 0c                           	cmp esi, dword ptr [edi + 0xc]
0xa823:     74 1b                              	je 0xa840 <function_a840>
0xa825:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xa828 -- 0xa829
0xa828:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xa829 -- 0xa82a
; data inside code section at 0xa82a -- 0xa840
0xa82a:     ff ff ff 8b 54 24 28 8b  0a 8b 50 10 89 54 24 24   |....T$(...P..T$$|
0xa83a:     39 4c 24 24 73 b8                                  |9L$$s.          |
; function: function_a840 at 0xa840 -- 0xa873
0xa840:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xa844:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xa848:     89 04 24                           	mov dword ptr [esp], eax
0xa84b:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xa84f:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xa857:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xa85b:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xa85f:     e8 dc a5 00 00                     	call 0x14e40 <unknown_14e40>
0xa864:     83 ec 04                           	sub esp, 4
0xa867:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa86b:     c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0xa86f:     89 03                              	mov dword ptr [ebx], eax
0xa871:     eb 8b                              	jmp 0xa7fe
; function: function_a873 at 0xa873 -- 0xa878
0xa873:     e8 fc ff ff ff                     	call 0xa874
; section: .text._ZN21LockedPageManagerBaseI16MemoryPageLockerE9LockRangeEPvj
; function: _ZN21LockedPageManagerBaseI16MemoryPageLockerE9LockRangeEPvj at 0xa880 -- 0xa8ae
0xa880:     55                                 	push ebp
0xa881:     57                                 	push edi
0xa882:     56                                 	push esi
0xa883:     53                                 	push ebx
0xa884:     83 ec 4c                           	sub esp, 0x4c
0xa887:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xa88b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa891:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xa895:     31 c0                              	xor eax, eax
0xa897:     8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0xa89b:     8b 7c 24 68                        	mov edi, dword ptr [esp + 0x68]
0xa89f:     c6 44 24 28 00                     	mov byte ptr [esp + 0x28], 0
0xa8a4:     8d 46 04                           	lea eax, [esi + 4]
0xa8a7:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0xa8ab:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa8ae -- 0xa8af
0xa8ae:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xa8af -- 0xa8b0
; data inside code section at 0xa8b0 -- 0xa8b2
0xa8b0:     ff ff                                              |..              |
; function: function_a8b2 at 0xa8b2 -- 0xa940
0xa8b2:     ff 85 c0 0f 85 cc                  	inc dword ptr [ebp - 0x337af040]
0xa8b8:     00 00                              	add byte ptr [eax], al
0xa8ba:     00 85 ff c6 44 24                  	add byte ptr [ebp + 0x2444c6ff], al
0xa8c0:     28 01                              	sub byte ptr [ecx], al
0xa8c2:     74 75                              	je 0xa939 <function_a8b2+0x87>
0xa8c4:     8b 46 20                           	mov eax, dword ptr [esi + 0x20]
0xa8c7:     89 eb                              	mov ebx, ebp
0xa8c9:     8d 7c 3d ff                        	lea edi, [ebp + edi - 1]
0xa8cd:     21 c3                              	and ebx, eax
0xa8cf:     21 c7                              	and edi, eax
0xa8d1:     39 fb                              	cmp ebx, edi
0xa8d3:     77 64                              	ja 0xa939 <function_a8b2+0x87>
0xa8d5:     8d 6c 24 18                        	lea ebp, [esp + 0x18]
0xa8d9:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xa8e0:     8b 46 2c                           	mov eax, dword ptr [esi + 0x2c]
0xa8e3:     85 c0                              	test eax, eax
0xa8e5:     74 69                              	je 0xa950 <function_a950>
0xa8e7:     8d 4e 28                           	lea ecx, [esi + 0x28]
0xa8ea:     89 ca                              	mov edx, ecx
0xa8ec:     eb 0b                              	jmp 0xa8f9 <function_a8b2+0x47>
; data inside code section at 0xa8ee -- 0xa8f0
0xa8ee:     66 90                                              |f.              |
0xa8f0:     89 c2                              	mov edx, eax
0xa8f2:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xa8f5:     85 c0                              	test eax, eax
0xa8f7:     74 0c                              	je 0xa905 <function_a8b2+0x53>
0xa8f9:     39 58 10                           	cmp dword ptr [eax + 0x10], ebx
0xa8fc:     73 f2                              	jae 0xa8f0 <function_a8b2+0x3e>
0xa8fe:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xa901:     85 c0                              	test eax, eax
0xa903:     75 f4                              	jne 0xa8f9 <function_a8b2+0x47>
0xa905:     39 ca                              	cmp edx, ecx
0xa907:     74 47                              	je 0xa950 <function_a950>
0xa909:     39 5a 10                           	cmp dword ptr [edx + 0x10], ebx
0xa90c:     77 42                              	ja 0xa950 <function_a950>
0xa90e:     83 42 14 01                        	add dword ptr [edx + 0x14], 1
0xa912:     03 5e 1c                           	add ebx, dword ptr [esi + 0x1c]
0xa915:     39 df                              	cmp edi, ebx
0xa917:     73 c7                              	jae 0xa8e0 <function_a8b2+0x2e>
0xa919:     80 7c 24 28 00                     	cmp byte ptr [esp + 0x28], 0
0xa91e:     75 19                              	jne 0xa939 <function_a8b2+0x87>
0xa920:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xa924:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa92b:     0f 85 96 00 00 00                  	jne 0xa9c7 <function_a9c7>
0xa931:     83 c4 4c                           	add esp, 0x4c
0xa934:     5b                                 	pop ebx
0xa935:     5e                                 	pop esi
0xa936:     5f                                 	pop edi
0xa937:     5d                                 	pop ebp
0xa938:     c3                                 	ret 
0xa939:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xa93d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa940 -- 0xa941
0xa940:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0xa941 -- 0xa942
; data inside code section at 0xa942 -- 0xa950
0xa942:     ff ff ff 85 c0 74 d7 e8  0c 35 00 00 66 90         |.....t...5..f.  |
; function: function_a950 at 0xa950 -- 0xa95a
0xa950:     8b 46 1c                           	mov eax, dword ptr [esi + 0x1c]
0xa953:     89 1c 24                           	mov dword ptr [esp], ebx
0xa956:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0xa95a -- 0xa95b
0xa95a:     e8                                                 |.               |
; dynamically linked function: mlock at 0xa95b -- 0xa95c
; data inside code section at 0xa95c -- 0xa95e
0xa95c:     ff ff                                              |..              |
; function: function_a95e at 0xa95e -- 0xa987
0xa95e:     ff 8d 44 24 2c 89                  	dec dword ptr [ebp - 0x76d3dbbc]
0xa964:     44                                 	inc esp
0xa965:     24 08                              	and al, 8
0xa967:     8d 46 24                           	lea eax, [esi + 0x24]
0xa96a:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0xa96e:     c7 44 24 30 01 00 00 00            	mov dword ptr [esp + 0x30], 1
0xa976:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa97a:     89 2c 24                           	mov dword ptr [esp], ebp
0xa97d:     e8 8e a6 00 00                     	call 0x15010 <unknown_15010>
0xa982:     83 ec 04                           	sub esp, 4
0xa985:     eb 8b                              	jmp 0xa912
; data inside code section at 0xa987 -- 0xa9a0
0xa987:     8d 5c 24 34 89 44 24 38  c7 44 24 34 b8 ef 00 00   |.\$4.D$8.D$4....|
0xa997:     89 1c 24 e8 c1 85 00 00  89                        |..$......       |
; function: function_a9a0 at 0xa9a0 -- 0xa9a1
0xa9a0:     c3                                 	ret 
; data inside code section at 0xa9a1 -- 0xa9b1
0xa9a1:     8d 44 24 24 89 04 24 e8  03 8a 00 00 89 1c 24 e8   |.D$$..$.......$.|
; dynamically linked function: _Unwind_Resume at 0xa9b1 -- 0xa9b2
; data inside code section at 0xa9b2 -- 0xa9c3
0xa9b2:     ff ff ff 89 c6 89 1c 24  e8 41 37 00 00 89 34 24   |.......$.A7...4$|
0xa9c2:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xa9c3 -- 0xa9c4
; data inside code section at 0xa9c4 -- 0xa9c7
0xa9c4:     ff ff ff                                           |...             |
; function: function_a9c7 at 0xa9c7 -- 0xa9c8
; dynamically linked function: __stack_chk_fail at 0xa9c8 -- 0xa9c9
; data inside code section at 0xa9c9 -- 0xa9cc
0xa9c9:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_
; function: _ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_ at 0xa9d0 -- 0xaa8f
0xa9d0:     55                                 	push ebp
0xa9d1:     57                                 	push edi
0xa9d2:     56                                 	push esi
0xa9d3:     53                                 	push ebx
0xa9d4:     83 ec 3c                           	sub esp, 0x3c
0xa9d7:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xa9db:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0xa9df:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa9e5:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa9e9:     31 c0                              	xor eax, eax
0xa9eb:     39 fd                              	cmp ebp, edi
0xa9ed:     74 39                              	je 0xaa28 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x58>
0xa9ef:     8b 07                              	mov eax, dword ptr [edi]
0xa9f1:     8b 75 04                           	mov esi, dword ptr [ebp + 4]
0xa9f4:     8b 5d 00                           	mov ebx, dword ptr [ebp]
0xa9f7:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xa9fb:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xa9fe:     2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0xaa02:     89 f2                              	mov edx, esi
0xaa04:     29 da                              	sub edx, ebx
0xaa06:     39 c2                              	cmp edx, eax
0xaa08:     77 7e                              	ja 0xaa88 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0xb8>
0xaa0a:     8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0xaa0d:     89 c8                              	mov eax, ecx
0xaa0f:     2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0xaa13:     39 c2                              	cmp edx, eax
0xaa15:     77 31                              	ja 0xaa48 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x78>
0xaa17:     85 d2                              	test edx, edx
0xaa19:     0f 85 01 01 00 00                  	jne 0xab20 <function_ab20>
0xaa1f:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xaa23:     89 57 04                           	mov dword ptr [edi + 4], edx
0xaa26:     66 90                              	nop 
0xaa28:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xaa2c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaa33:     89 f8                              	mov eax, edi
0xaa35:     0f 85 54 01 00 00                  	jne 0xab8f <function_ab8f>
0xaa3b:     83 c4 3c                           	add esp, 0x3c
0xaa3e:     5b                                 	pop ebx
0xaa3f:     5e                                 	pop esi
0xaa40:     5f                                 	pop edi
0xaa41:     5d                                 	pop ebp
0xaa42:     c3                                 	ret 
; data inside code section at 0xaa43 -- 0xaa48
0xaa43:     90 8d 74 26 00                                     |..t&.           |
0xaa48:     01 d8                              	add eax, ebx
0xaa4a:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0xaa4e:     29 d8                              	sub eax, ebx
0xaa50:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xaa54:     0f 85 ee 00 00 00                  	jne 0xab48 <function_ab48>
0xaa5a:     3b 74 24 10                        	cmp esi, dword ptr [esp + 0x10]
0xaa5e:     8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0xaa62:     0f 84 1e 01 00 00                  	je 0xab86 <function_ab86>
0xaa68:     85 c9                              	test ecx, ecx
0xaa6a:     74 05                              	je 0xaa71 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0xa1>
0xaa6c:     0f b6 18                           	movzx ebx, byte ptr [eax]
0xaa6f:     88 19                              	mov byte ptr [ecx], bl
0xaa71:     83 c0 01                           	add eax, 1
0xaa74:     83 c1 01                           	add ecx, 1
0xaa77:     39 f0                              	cmp eax, esi
0xaa79:     75 ed                              	jne 0xaa68 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x98>
0xaa7b:     03 17                              	add edx, dword ptr [edi]
0xaa7d:     89 57 04                           	mov dword ptr [edi + 4], edx
0xaa80:     eb a6                              	jmp 0xaa28 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x58>
; data inside code section at 0xaa82 -- 0xaa88
0xaa82:     8d b6 00 00 00 00                                  |......          |
0xaa88:     89 14 24                           	mov dword ptr [esp], edx
0xaa8b:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
; data inside code section at 0xaa8f -- 0xaa90
0xaa8f:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xaa90 -- 0xaa91
; data inside code section at 0xaa91 -- 0xaaa9
0xaa91:     ff ff ff 8b 54 24 14 85  c0 89 c5 74 18 89 54 24   |....T$.....t..T$|
0xaaa1:     08 89 44 24 04 c7 04 24                            |..D$...$        |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xaaa9 -- 0xaae9
; data inside code section at 0xaae9 -- 0xaaea
0xaae9:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xaaea -- 0xaaeb
; data inside code section at 0xaaeb -- 0xaaf9
0xaaeb:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24         |....t$..\$...$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xaaf9 -- 0xab05
; data inside code section at 0xab05 -- 0xab06
0xab05:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xab06 -- 0xab07
; data inside code section at 0xab07 -- 0xab0e
0xab07:     ff ff ff 8b 54 24 14                               |....T$.         |
; function: function_ab0e at 0xab0e -- 0xab1a
0xab0e:     01 ea                              	add edx, ebp
0xab10:     89 2f                              	mov dword ptr [edi], ebp
0xab12:     89 57 08                           	mov dword ptr [edi + 8], edx
0xab15:     e9 63 ff ff ff                     	jmp 0xaa7d
; data inside code section at 0xab1a -- 0xab20
0xab1a:     8d b6 00 00 00 00                                  |......          |
; function: function_ab20 at 0xab20 -- 0xab43
0xab20:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xab24:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xab28:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xab2c:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xab30:     89 04 24                           	mov dword ptr [esp], eax
0xab33:     e8 fc ff ff ff                     	call 0xab34
0xab38:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xab3c:     03 17                              	add edx, dword ptr [edi]
0xab3e:     e9 3a ff ff ff                     	jmp 0xaa7d
; data inside code section at 0xab43 -- 0xab48
0xab43:     90 8d 74 26 00                                     |..t&.           |
; function: function_ab48 at 0xab48 -- 0xab86
0xab48:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xab4c:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xab50:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xab54:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xab58:     89 04 24                           	mov dword ptr [esp], eax
0xab5b:     e8 fc ff ff ff                     	call 0xab5c
0xab60:     8b 07                              	mov eax, dword ptr [edi]
0xab62:     8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0xab65:     8b 75 04                           	mov esi, dword ptr [ebp + 4]
0xab68:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xab6c:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xab70:     89 c8                              	mov eax, ecx
0xab72:     2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0xab76:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0xab7a:     8b 45 00                           	mov eax, dword ptr [ebp]
0xab7d:     01 44 24 10                        	add dword ptr [esp + 0x10], eax
0xab81:     e9 d4 fe ff ff                     	jmp 0xaa5a
; function: function_ab86 at 0xab86 -- 0xab8f
0xab86:     03 54 24 18                        	add edx, dword ptr [esp + 0x18]
0xab8a:     e9 ee fe ff ff                     	jmp 0xaa7d
; function: function_ab8f at 0xab8f -- 0xab90
; dynamically linked function: __stack_chk_fail at 0xab90 -- 0xab91
; data inside code section at 0xab91 -- 0xab94
0xab91:     ff ff ff                                           |...             |
; section: .text._ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED2Ev
; function: _ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev at 0xaba0 -- 0xabd2
0xaba0:     57                                 	push edi
0xaba1:     56                                 	push esi
0xaba2:     53                                 	push ebx
0xaba3:     83 ec 20                           	sub esp, 0x20
0xaba6:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xabaa:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xabb0:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xabb4:     31 c0                              	xor eax, eax
0xabb6:     8b 1f                              	mov ebx, dword ptr [edi]
0xabb8:     39 fb                              	cmp ebx, edi
0xabba:     75 06                              	jne 0xabc2 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x22>
0xabbc:     eb 1d                              	jmp 0xabdb <function_abdb>
; data inside code section at 0xabbe -- 0xabc0
0xabbe:     66 90                                              |f.              |
0xabc0:     89 f3                              	mov ebx, esi
0xabc2:     8b 33                              	mov esi, dword ptr [ebx]
0xabc4:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xabc7:     89 04 24                           	mov dword ptr [esp], eax
0xabca:     e8 a1 44 00 00                     	call 0xf070 <unknown_f070>
0xabcf:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xabd2 -- 0xabd3
0xabd2:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xabd3 -- 0xabd4
; data inside code section at 0xabd4 -- 0xabdb
0xabd4:     ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_abdb at 0xabdb -- 0xabef
0xabdb:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xabdf:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xabe6:     75 07                              	jne 0xabef <function_abdb+0x13>
0xabe8:     83 c4 20                           	add esp, 0x20
0xabeb:     5b                                 	pop ebx
0xabec:     5e                                 	pop esi
0xabed:     5f                                 	pop edi
0xabee:     c3                                 	ret 
; data inside code section at 0xabef -- 0xabf0
0xabef:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xabf0 -- 0xabf1
; data inside code section at 0xabf1 -- 0xabf4
0xabf1:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_ at 0xac00 -- 0xac89
0xac00:     55                                 	push ebp
0xac01:     57                                 	push edi
0xac02:     56                                 	push esi
0xac03:     53                                 	push ebx
0xac04:     83 ec 3c                           	sub esp, 0x3c
0xac07:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0xac0b:     8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0xac0f:     8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0xac13:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0xac17:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xac1b:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0xac1f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xac25:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xac29:     31 c0                              	xor eax, eax
0xac2b:     85 c9                              	test ecx, ecx
0xac2d:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xac31:     c6 44 24 1f 01                     	mov byte ptr [esp + 0x1f], 1
0xac36:     0f 84 cc 00 00 00                  	je 0xad08 <function_ad08>
0xac3c:     c7 04 24 48 00 00 00               	mov dword ptr [esp], 0x48
0xac43:     e8 fc ff ff ff                     	call 0xac44
0xac48:     83 f8 f0                           	cmp eax, -0x10
0xac4b:     89 c6                              	mov esi, eax
0xac4d:     74 76                              	je 0xacc5
0xac4f:     8b 03                              	mov eax, dword ptr [ebx]
0xac51:     8d 7e 26                           	lea edi, [esi + 0x26]
0xac54:     89 46 10                           	mov dword ptr [esi + 0x10], eax
0xac57:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xac5a:     89 46 14                           	mov dword ptr [esi + 0x14], eax
0xac5d:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xac60:     89 46 18                           	mov dword ptr [esi + 0x18], eax
0xac63:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xac66:     89 46 1c                           	mov dword ptr [esi + 0x1c], eax
0xac69:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xac6c:     89 46 20                           	mov dword ptr [esi + 0x20], eax
0xac6f:     0f b6 43 14                        	movzx eax, byte ptr [ebx + 0x14]
0xac73:     88 46 24                           	mov byte ptr [esi + 0x24], al
0xac76:     0f b6 43 15                        	movzx eax, byte ptr [ebx + 0x15]
0xac7a:     88 46 25                           	mov byte ptr [esi + 0x25], al
0xac7d:     c7 44 24 08 20 00 00 00            	mov dword ptr [esp + 8], 0x20
0xac85:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
; data inside code section at 0xac89 -- 0xac8c
0xac89:     c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xac8c -- 0xace0
; data inside code section at 0xace0 -- 0xace1
0xace0:     e8                                                 |.               |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xace1 -- 0xace2
; data inside code section at 0xace2 -- 0xace4
0xace2:     ff ff                                              |..              |
; function: function_ace4 at 0xace4 -- 0xad06
0xace4:     ff 8b 44 24 14 83                  	dec dword ptr [ebx - 0x7cebdbbc]
0xacea:     45                                 	inc ebp
0xaceb:     14 01                              	adc al, 1
0xaced:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xacf1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xacf8:     89 30                              	mov dword ptr [eax], esi
0xacfa:     75 31                              	jne 0xad2d <function_ad2d>
0xacfc:     83 c4 3c                           	add esp, 0x3c
0xacff:     5b                                 	pop ebx
0xad00:     5e                                 	pop esi
0xad01:     5f                                 	pop edi
0xad02:     5d                                 	pop ebp
0xad03:     c2 04 00                           	ret 4
; data inside code section at 0xad06 -- 0xad08
0xad06:     66 90                                              |f.              |
; function: function_ad08 at 0xad08 -- 0xad2d
0xad08:     8d 45 04                           	lea eax, [ebp + 4]
0xad0b:     39 c2                              	cmp edx, eax
0xad0d:     0f 84 29 ff ff ff                  	je 0xac3c
0xad13:     89 d0                              	mov eax, edx
0xad15:     83 c0 10                           	add eax, 0x10
0xad18:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xad1c:     89 1c 24                           	mov dword ptr [esp], ebx
0xad1f:     e8 8c 82 00 00                     	call 0x12fb0 <unknown_12fb0>
0xad24:     88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0xad28:     e9 0f ff ff ff                     	jmp 0xac3c
; function: function_ad2d at 0xad2d -- 0xad2e
; dynamically linked function: __stack_chk_fail at 0xad2e -- 0xad2f
; data inside code section at 0xad2f -- 0xad36
0xad2f:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xad36 -- 0xad37
; data inside code section at 0xad37 -- 0xad3e
0xad37:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0xad3e -- 0xad3f
; data inside code section at 0xad3f -- 0xad43
0xad3f:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xad43 -- 0xad44
; data inside code section at 0xad44 -- 0xad48
0xad44:     ff ff ff 89                                        |....            |
; function: function_ad48 at 0xad48 -- 0xad49
0xad48:     c3                                 	ret 
; data inside code section at 0xad49 -- 0xad4a
0xad49:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xad4a -- 0xad4b
; data inside code section at 0xad4b -- 0xad52
0xad4b:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xad52 -- 0xad53
; data inside code section at 0xad53 -- 0xad56
0xad53:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_ at 0xad60 -- 0xadfc
0xad60:     55                                 	push ebp
0xad61:     57                                 	push edi
0xad62:     56                                 	push esi
0xad63:     53                                 	push ebx
0xad64:     83 ec 4c                           	sub esp, 0x4c
0xad67:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xad6b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xad71:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xad75:     31 c0                              	xor eax, eax
0xad77:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0xad7b:     8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0xad7f:     8b 5a 08                           	mov ebx, dword ptr [edx + 8]
0xad82:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xad86:     85 db                              	test ebx, ebx
0xad88:     75 0f                              	jne 0xad99 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x39>
0xad8a:     eb 5f                              	jmp 0xadeb <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x8b>
; data inside code section at 0xad8c -- 0xad90
0xad8c:     8d 74 26 00                                        |.t&.            |
0xad90:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0xad93:     85 d2                              	test edx, edx
0xad95:     74 1c                              	je 0xadb3 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x53>
0xad97:     89 d3                              	mov ebx, edx
0xad99:     8d 43 10                           	lea eax, [ebx + 0x10]
0xad9c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xada0:     89 34 24                           	mov dword ptr [esp], esi
0xada3:     e8 68 83 00 00                     	call 0x13110 <unknown_13110>
0xada8:     84 c0                              	test al, al
0xadaa:     75 e4                              	jne 0xad90 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x30>
0xadac:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0xadaf:     85 d2                              	test edx, edx
0xadb1:     75 e4                              	jne 0xad97 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x37>
0xadb3:     84 c0                              	test al, al
0xadb5:     89 dd                              	mov ebp, ebx
0xadb7:     75 37                              	jne 0xadf0 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x90>
0xadb9:     8d 45 10                           	lea eax, [ebp + 0x10]
0xadbc:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xadc0:     89 04 24                           	mov dword ptr [esp], eax
0xadc3:     e8 48 83 00 00                     	call 0x13110 <unknown_13110>
0xadc8:     84 c0                              	test al, al
0xadca:     75 3c                              	jne 0xae08 <function_ae08>
0xadcc:     89 2f                              	mov dword ptr [edi], ebp
0xadce:     c6 47 04 00                        	mov byte ptr [edi + 4], 0
0xadd2:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xadd6:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaddd:     89 f8                              	mov eax, edi
0xaddf:     75 70                              	jne 0xae51 <function_ae51>
0xade1:     83 c4 4c                           	add esp, 0x4c
0xade4:     5b                                 	pop ebx
0xade5:     5e                                 	pop esi
0xade6:     5f                                 	pop edi
0xade7:     5d                                 	pop ebp
0xade8:     c2 04 00                           	ret 4
0xadeb:     89 d3                              	mov ebx, edx
0xaded:     83 c3 04                           	add ebx, 4
0xadf0:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xadf4:     3b 5a 0c                           	cmp ebx, dword ptr [edx + 0xc]
0xadf7:     74 42                              	je 0xae3b <function_ae3b>
0xadf9:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xadfc -- 0xadfd
0xadfc:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xadfd -- 0xadfe
; data inside code section at 0xadfe -- 0xae01
0xadfe:     ff ff ff                                           |...             |
; function: function_ae01 at 0xae01 -- 0xae05
0xae01:     89 c5                              	mov ebp, eax
0xae03:     eb b4                              	jmp 0xadb9
; data inside code section at 0xae05 -- 0xae08
0xae05:     8d 76 00                                           |.v.             |
; function: function_ae08 at 0xae08 -- 0xae3b
0xae08:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xae0c:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xae10:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0xae14:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xae18:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xae20:     89 04 24                           	mov dword ptr [esp], eax
0xae23:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xae27:     e8 34 ab 00 00                     	call 0x15960 <unknown_15960>
0xae2c:     83 ec 04                           	sub esp, 4
0xae2f:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xae33:     c6 47 04 01                        	mov byte ptr [edi + 4], 1
0xae37:     89 07                              	mov dword ptr [edi], eax
0xae39:     eb 97                              	jmp 0xadd2
; function: function_ae3b at 0xae3b -- 0xae51
0xae3b:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xae3f:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0xae43:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xae47:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xae4f:     eb cf                              	jmp 0xae20
; function: function_ae51 at 0xae51 -- 0xae52
; dynamically linked function: __stack_chk_fail at 0xae52 -- 0xae53
; data inside code section at 0xae53 -- 0xae56
0xae53:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_ at 0xae60 -- 0xaec7
0xae60:     83 ec 5c                           	sub esp, 0x5c
0xae63:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xae67:     8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0xae6b:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xae6f:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xae73:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xae79:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xae7d:     31 c0                              	xor eax, eax
0xae7f:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xae83:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xae87:     8d 45 04                           	lea eax, [ebp + 4]
0xae8a:     39 c3                              	cmp ebx, eax
0xae8c:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xae90:     8b 7c 24 6c                        	mov edi, dword ptr [esp + 0x6c]
0xae94:     0f 84 16 01 00 00                  	je 0xafb0 <function_afb0>
0xae9a:     8d 53 10                           	lea edx, [ebx + 0x10]
0xae9d:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xaea1:     89 3c 24                           	mov dword ptr [esp], edi
0xaea4:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xaea8:     e8 63 83 00 00                     	call 0x13210 <unknown_13210>
0xaead:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xaeb1:     84 c0                              	test al, al
0xaeb3:     0f 84 87 00 00 00                  	je 0xaf40 <function_af40>
0xaeb9:     8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0xaebc:     39 d8                              	cmp eax, ebx
0xaebe:     0f 84 72 01 00 00                  	je 0xb036 <function_b036>
0xaec4:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xaec7 -- 0xaec8
0xaec7:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0xaec8 -- 0xaec9
; data inside code section at 0xaec9 -- 0xaecb
0xaec9:     ff ff                                              |..              |
; function: function_aecb at 0xaecb -- 0xaed4
0xaecb:     ff 89 7c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb84]
0xaed1:     c2 8d 40                           	ret 0x408d
; data inside code section at 0xaed4 -- 0xaf13
0xaed4:     10 89 04 24 89 54 24 24  e8 2f 83 00 00 8b 54 24   |...$.T$$./....T$|
0xaee4:     24 84 c0 0f 84 e3 00 00  00 8b 42 0c 89 7c 24 10   |$.........B..|$.|
0xaef4:     85 c0 0f 84 2c 01 00 00  89 5c 24 0c 89 5c 24 08   |....,....\$..\$.|
0xaf04:     89 6c 24 04 89 34 24 e8  50 ab 00 00 83 ec 04      |.l$..4$.P...... |
; function: function_af13 at 0xaf13 -- 0xaf3c
0xaf13:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xaf17:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaf1e:     89 f0                              	mov eax, esi
0xaf20:     0f 85 3a 01 00 00                  	jne 0xb060 <function_b060>
0xaf26:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xaf2a:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xaf2e:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xaf32:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xaf36:     83 c4 5c                           	add esp, 0x5c
0xaf39:     c2 04 00                           	ret 4
; data inside code section at 0xaf3c -- 0xaf40
0xaf3c:     8d 74 26 00                                        |.t&.            |
; function: function_af40 at 0xaf40 -- 0xaf62
0xaf40:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xaf44:     89 14 24                           	mov dword ptr [esp], edx
0xaf47:     e8 c4 82 00 00                     	call 0x13210 <unknown_13210>
0xaf4c:     84 c0                              	test al, al
0xaf4e:     0f 84 a4 00 00 00                  	je 0xaff8 <function_aff8>
0xaf54:     8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0xaf57:     39 d8                              	cmp eax, ebx
0xaf59:     0f 84 f7 00 00 00                  	je 0xb056 <function_b056>
0xaf5f:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xaf62 -- 0xaf63
0xaf62:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xaf63 -- 0xaf64
; data inside code section at 0xaf64 -- 0xaf66
0xaf64:     ff ff                                              |..              |
; function: function_af66 at 0xaf66 -- 0xafaf
0xaf66:     ff 89 3c 24 89 c2                  	dec dword ptr [ecx - 0x3d76dbc4]
0xaf6c:     8d 40 10                           	lea eax, [eax + 0x10]
0xaf6f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xaf73:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xaf77:     e8 94 82 00 00                     	call 0x13210 <unknown_13210>
0xaf7c:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xaf80:     84 c0                              	test al, al
0xaf82:     74 4c                              	je 0xafd0
0xaf84:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xaf87:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xaf8b:     85 c0                              	test eax, eax
0xaf8d:     0f 84 9d 00 00 00                  	je 0xb030 <function_b030>
0xaf93:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xaf97:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xaf9b:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xaf9f:     89 34 24                           	mov dword ptr [esp], esi
0xafa2:     e8 b9 aa 00 00                     	call 0x15a60 <unknown_15a60>
0xafa7:     83 ec 04                           	sub esp, 4
0xafaa:     e9 64 ff ff ff                     	jmp 0xaf13 <function_af13>
; data inside code section at 0xafaf -- 0xafb0
0xafaf:     90                                                 |.               |
; function: function_afb0 at 0xafb0 -- 0xaff2
0xafb0:     8b 45 14                           	mov eax, dword ptr [ebp + 0x14]
0xafb3:     85 c0                              	test eax, eax
0xafb5:     74 19                              	je 0xafd0 <function_afb0+0x20>
0xafb7:     8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0xafba:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xafbe:     8d 43 10                           	lea eax, [ebx + 0x10]
0xafc1:     89 04 24                           	mov dword ptr [esp], eax
0xafc4:     e8 47 82 00 00                     	call 0x13210 <unknown_13210>
0xafc9:     84 c0                              	test al, al
0xafcb:     75 33                              	jne 0xb000 <function_b000>
0xafcd:     8d 76 00                           	lea esi, [esi]
0xafd0:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xafd4:     89 04 24                           	mov dword ptr [esp], eax
0xafd7:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0xafdb:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xafdf:     e8 dc ab 00 00                     	call 0x15bc0 <unknown_15bc0>
0xafe4:     83 ec 04                           	sub esp, 4
0xafe7:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xafeb:     89 06                              	mov dword ptr [esi], eax
0xafed:     e9 21 ff ff ff                     	jmp 0xaf13 <function_af13>
; data inside code section at 0xaff2 -- 0xaff8
0xaff2:     8d b6 00 00 00 00                                  |......          |
; function: function_aff8 at 0xaff8 -- 0xafff
0xaff8:     89 1e                              	mov dword ptr [esi], ebx
0xaffa:     e9 14 ff ff ff                     	jmp 0xaf13 <function_af13>
; data inside code section at 0xafff -- 0xb000
0xafff:     90                                                 |.               |
; function: function_b000 at 0xb000 -- 0xb024
0xb000:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb004:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xb008:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xb010:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb014:     89 34 24                           	mov dword ptr [esp], esi
0xb017:     e8 44 aa 00 00                     	call 0x15a60 <unknown_15a60>
0xb01c:     83 ec 04                           	sub esp, 4
0xb01f:     e9 ef fe ff ff                     	jmp 0xaf13 <function_af13>
; data inside code section at 0xb024 -- 0xb028
0xb024:     8d 74 26 00                                        |.t&.            |
; function: function_b028 at 0xb028 -- 0xb02e
0xb028:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb02c:     eb da                              	jmp 0xb008
; data inside code section at 0xb02e -- 0xb030
0xb02e:     66 90                                              |f.              |
; function: function_b030 at 0xb030 -- 0xb036
0xb030:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xb034:     eb d2                              	jmp 0xb008
; function: function_b036 at 0xb036 -- 0xb056
0xb036:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb03a:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xb03e:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb042:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb046:     89 34 24                           	mov dword ptr [esp], esi
0xb049:     e8 12 aa 00 00                     	call 0x15a60 <unknown_15a60>
0xb04e:     83 ec 04                           	sub esp, 4
0xb051:     e9 bd fe ff ff                     	jmp 0xaf13 <function_af13>
; function: function_b056 at 0xb056 -- 0xb060
0xb056:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb05a:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xb05e:     eb a8                              	jmp 0xb008
; function: function_b060 at 0xb060 -- 0xb061
; dynamically linked function: __stack_chk_fail at 0xb061 -- 0xb062
; data inside code section at 0xb062 -- 0xb065
0xb062:     ff ff ff                                           |...             |
; section: .text._ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_
; function: _ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_ at 0xb070 -- 0xb107
0xb070:     55                                 	push ebp
0xb071:     57                                 	push edi
0xb072:     56                                 	push esi
0xb073:     53                                 	push ebx
0xb074:     81 ec 8c 00 00 00                  	sub esp, 0x8c
0xb07a:     8b b4 24 a0 00 00 00               	mov esi, dword ptr [esp + 0xa0]
0xb081:     8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0xb088:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb08e:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0xb092:     31 c0                              	xor eax, eax
0xb094:     8b 7e 08                           	mov edi, dword ptr [esi + 8]
0xb097:     8d 6e 04                           	lea ebp, [esi + 4]
0xb09a:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xb09e:     89 eb                              	mov ebx, ebp
0xb0a0:     85 ff                              	test edi, edi
0xb0a2:     75 0d                              	jne 0xb0b1 <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x41>
0xb0a4:     eb 48                              	jmp 0xb0ee <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x7e>
; data inside code section at 0xb0a6 -- 0xb0a8
0xb0a6:     66 90                                              |f.              |
0xb0a8:     89 fb                              	mov ebx, edi
0xb0aa:     8b 7f 08                           	mov edi, dword ptr [edi + 8]
0xb0ad:     85 ff                              	test edi, edi
0xb0af:     74 1e                              	je 0xb0cf <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x5f>
0xb0b1:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xb0b5:     8d 47 10                           	lea eax, [edi + 0x10]
0xb0b8:     89 04 24                           	mov dword ptr [esp], eax
0xb0bb:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb0bf:     e8 5c 83 00 00                     	call 0x13420 <unknown_13420>
0xb0c4:     84 c0                              	test al, al
0xb0c6:     74 e0                              	je 0xb0a8 <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x38>
0xb0c8:     8b 7f 0c                           	mov edi, dword ptr [edi + 0xc]
0xb0cb:     85 ff                              	test edi, edi
0xb0cd:     75 e2                              	jne 0xb0b1 <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x41>
0xb0cf:     39 eb                              	cmp ebx, ebp
0xb0d1:     74 1b                              	je 0xb0ee <_ZNSt3mapI6CKeyID4CKeySt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x7e>
0xb0d3:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xb0d7:     8d 43 10                           	lea eax, [ebx + 0x10]
0xb0da:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb0de:     89 14 24                           	mov dword ptr [esp], edx
0xb0e1:     e8 3a 83 00 00                     	call 0x13420 <unknown_13420>
0xb0e6:     84 c0                              	test al, al
0xb0e8:     0f 84 28 01 00 00                  	je 0xb216
0xb0ee:     8d 6c 24 5c                        	lea ebp, [esp + 0x5c]
0xb0f2:     c6 44 24 5a 00                     	mov byte ptr [esp + 0x5a], 0
0xb0f7:     8d 7c 24 36                        	lea edi, [esp + 0x36]
0xb0fb:     c7 44 24 08 20 00 00 00            	mov dword ptr [esp + 8], 0x20
0xb103:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
; data inside code section at 0xb107 -- 0xb10a
0xb107:     c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb10a -- 0xb141
; data inside code section at 0xb141 -- 0xb144
0xb141:     c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb144 -- 0xb1d1
; data inside code section at 0xb1d1 -- 0xb1d2
0xb1d1:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xb1d2 -- 0xb1d3
; data inside code section at 0xb1d3 -- 0xb1e5
0xb1d3:     ff ff ff c7 44 24 08 20  00 00 00 89 7c 24 04 c7   |....D$. ....|$..|
0xb1e3:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb1e5 -- 0xb1f9
; data inside code section at 0xb1f9 -- 0xb1fa
0xb1f9:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xb1fa -- 0xb1fb
; data inside code section at 0xb1fb -- 0xb20d
0xb1fb:     ff ff ff c7 44 24 08 20  00 00 00 89 6c 24 04 c7   |....D$. ....l$..|
0xb20b:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb20d -- 0xb231
; data inside code section at 0xb231 -- 0xb232
0xb231:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb232 -- 0xb233
; data inside code section at 0xb233 -- 0xb237
0xb233:     ff ff ff 89                                        |....            |
; function: function_b237 at 0xb237 -- 0xb238
0xb237:     c3                                 	ret 
; function: function_b238 at 0xb238 -- 0xb239
; data inside code section at 0xb239 -- 0xb248
0xb239:     44 24 5a 89 04 24 e8 fc  88 00 00 89 1c 24 e8      |D$Z..$.......$. |
; dynamically linked function: _Unwind_Resume at 0xb248 -- 0xb249
; data inside code section at 0xb249 -- 0xb24b
0xb249:     ff ff                                              |..              |
; function: function_b24b at 0xb24b -- 0xb25c
0xb24b:     ff 89 c3 8d 44 24                  	dec dword ptr [ecx + 0x24448dc3]
0xb251:     34 89                              	xor al, 0x89
0xb253:     04 24                              	add al, 0x24
0xb255:     e8 e6 88 00 00                     	call 0x13b40 <unknown_13b40>
0xb25a:     eb dc                              	jmp 0xb238 <function_b238>
; section: .text._ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_
; function: _ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_ at 0xb260 -- 0xb2ac
0xb260:     83 ec 4c                           	sub esp, 0x4c
0xb263:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0xb267:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb26e:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xb272:     31 d2                              	xor edx, edx
0xb274:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xb278:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xb27c:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xb280:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0xb284:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xb288:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xb28c:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xb290:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xb294:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xb298:     c6 44 24 1f 01                     	mov byte ptr [esp + 0x1f], 1
0xb29d:     85 c0                              	test eax, eax
0xb29f:     0f 84 e3 00 00 00                  	je 0xb388 <function_b388>
0xb2a5:     c7 04 24 30 00 00 00               	mov dword ptr [esp], 0x30
; data inside code section at 0xb2ac -- 0xb2ad
0xb2ac:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb2ad -- 0xb2ae
; data inside code section at 0xb2ae -- 0xb2b5
0xb2ae:     ff ff ff 83 f8 f0 89                               |.......         |
; function: function_b2b5 at 0xb2b5 -- 0xb2b6
0xb2b5:     c3                                 	ret 
; data inside code section at 0xb2b6 -- 0xb308
0xb2b6:     74 7c 8b 07 89 43 10 8b  47 04 89 43 14 8b 47 08   |t|...C..G..C..G.|
0xb2c6:     89 43 18 8b 47 0c 89 43  1c 8b 47 10 89 43 20 8b   |.C..G..C..G..C .|
0xb2d6:     47 18 8b 7f 14 c7 43 24  00 00 00 00 c7 43 28 00   |G.....C$.....C(.|
0xb2e6:     00 00 00 c7 43 2c 00 00  00 00 89 7c 24 14 89 c7   |....C,.....|$...|
0xb2f6:     2b 7c 24 14 0f 84 80 00  00 00 89 3c 24 e8 fc ff   |+|$........<$...|
0xb306:     ff ff                                              |..              |
; function: function_b308 at 0xb308 -- 0xb309
; data inside code section at 0xb309 -- 0xb329
0xb309:     14 38 85 ff 89 43 24 89  53 2c 74 1c 8b 4c 24 14   |.8...C$.S,t..L$.|
0xb319:     89 54 24 10 89 7c 24 08  89 04 24 89 4c 24 04 e8   |.T$..|$...$.L$..|
; dynamically linked function: memmove at 0xb329 -- 0xb32a
; data inside code section at 0xb32a -- 0xb350
0xb32a:     ff ff ff 8b 54 24 10 89  53 28 8d 46 04 89 44 24   |....T$..S(.F..D$|
0xb33a:     0c 8b 44 24 18 89 5c 24  04 89 44 24 08 0f b6 44   |..D$..\$..D$...D|
0xb34a:     24 1f 89 04 24 e8                                  |$...$.          |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xb350 -- 0xb351
; data inside code section at 0xb351 -- 0xb353
0xb351:     ff ff                                              |..              |
; function: function_b353 at 0xb353 -- 0xb380
0xb353:     ff 89 e8 83 46 14                  	dec dword ptr [ecx + 0x144683e8]
0xb359:     01 8b 54 24 2c 65                  	add dword ptr [ebx + 0x652c2454], ecx
0xb35f:     33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xb365:     89 5d 00                           	mov dword ptr [ebp], ebx
0xb368:     75 47                              	jne 0xb3b1 <function_b3b1>
0xb36a:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xb36e:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xb372:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xb376:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xb37a:     83 c4 4c                           	add esp, 0x4c
0xb37d:     c2 04 00                           	ret 4
; function: function_b380 at 0xb380 -- 0xb384
0xb380:     31 c0                              	xor eax, eax
0xb382:     eb 84                              	jmp 0xb308 <function_b308>
; data inside code section at 0xb384 -- 0xb388
0xb384:     8d 74 26 00                                        |.t&.            |
; function: function_b388 at 0xb388 -- 0xb3b1
0xb388:     8d 46 04                           	lea eax, [esi + 4]
0xb38b:     39 44 24 18                        	cmp dword ptr [esp + 0x18], eax
0xb38f:     0f 84 10 ff ff ff                  	je 0xb2a5
0xb395:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xb399:     89 3c 24                           	mov dword ptr [esp], edi
0xb39c:     83 c0 10                           	add eax, 0x10
0xb39f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb3a3:     e8 68 82 00 00                     	call 0x13610 <unknown_13610>
0xb3a8:     88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0xb3ac:     e9 f4 fe ff ff                     	jmp 0xb2a5
; function: function_b3b1 at 0xb3b1 -- 0xb3b2
; dynamically linked function: __stack_chk_fail at 0xb3b2 -- 0xb3b3
; data inside code section at 0xb3b3 -- 0xb3c3
0xb3b3:     ff ff ff 8b 53 24 89 c6  85 d2 74 08 89 14 24 e8   |....S$....t...$.|
; dynamically linked function: _ZdlPv at 0xb3c3 -- 0xb3c4
; data inside code section at 0xb3c4 -- 0xb3cb
0xb3c4:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: __cxa_begin_catch at 0xb3cb -- 0xb3cc
; data inside code section at 0xb3cc -- 0xb3d3
0xb3cc:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xb3d3 -- 0xb3d4
; data inside code section at 0xb3d4 -- 0xb3d8
0xb3d4:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb3d8 -- 0xb3d9
; data inside code section at 0xb3d9 -- 0xb3dd
0xb3d9:     ff ff ff 89                                        |....            |
; function: function_b3dd at 0xb3dd -- 0xb3de
0xb3dd:     c3                                 	ret 
; data inside code section at 0xb3de -- 0xb3df
0xb3de:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xb3df -- 0xb3e0
; data inside code section at 0xb3e0 -- 0xb3e7
0xb3e0:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xb3e7 -- 0xb3e8
; data inside code section at 0xb3e8 -- 0xb3eb
0xb3e8:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_
; function: _ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_ at 0xb3f0 -- 0xb48c
0xb3f0:     55                                 	push ebp
0xb3f1:     57                                 	push edi
0xb3f2:     56                                 	push esi
0xb3f3:     53                                 	push ebx
0xb3f4:     83 ec 4c                           	sub esp, 0x4c
0xb3f7:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xb3fb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb401:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xb405:     31 c0                              	xor eax, eax
0xb407:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0xb40b:     8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0xb40f:     8b 5a 08                           	mov ebx, dword ptr [edx + 8]
0xb412:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xb416:     85 db                              	test ebx, ebx
0xb418:     75 0f                              	jne 0xb429 <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x39>
0xb41a:     eb 5f                              	jmp 0xb47b <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x8b>
; data inside code section at 0xb41c -- 0xb420
0xb41c:     8d 74 26 00                                        |.t&.            |
0xb420:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0xb423:     85 d2                              	test edx, edx
0xb425:     74 1c                              	je 0xb443 <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x53>
0xb427:     89 d3                              	mov ebx, edx
0xb429:     8d 43 10                           	lea eax, [ebx + 0x10]
0xb42c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb430:     89 34 24                           	mov dword ptr [esp], esi
0xb433:     e8 68 83 00 00                     	call 0x137a0 <unknown_137a0>
0xb438:     84 c0                              	test al, al
0xb43a:     75 e4                              	jne 0xb420 <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x30>
0xb43c:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0xb43f:     85 d2                              	test edx, edx
0xb441:     75 e4                              	jne 0xb427 <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x37>
0xb443:     84 c0                              	test al, al
0xb445:     89 dd                              	mov ebp, ebx
0xb447:     75 37                              	jne 0xb480 <_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x90>
0xb449:     8d 45 10                           	lea eax, [ebp + 0x10]
0xb44c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xb450:     89 04 24                           	mov dword ptr [esp], eax
0xb453:     e8 48 83 00 00                     	call 0x137a0 <unknown_137a0>
0xb458:     84 c0                              	test al, al
0xb45a:     75 3c                              	jne 0xb498 <function_b498>
0xb45c:     89 2f                              	mov dword ptr [edi], ebp
0xb45e:     c6 47 04 00                        	mov byte ptr [edi + 4], 0
0xb462:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xb466:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb46d:     89 f8                              	mov eax, edi
0xb46f:     75 70                              	jne 0xb4e1 <function_b4e1>
0xb471:     83 c4 4c                           	add esp, 0x4c
0xb474:     5b                                 	pop ebx
0xb475:     5e                                 	pop esi
0xb476:     5f                                 	pop edi
0xb477:     5d                                 	pop ebp
0xb478:     c2 04 00                           	ret 4
0xb47b:     89 d3                              	mov ebx, edx
0xb47d:     83 c3 04                           	add ebx, 4
0xb480:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xb484:     3b 5a 0c                           	cmp ebx, dword ptr [edx + 0xc]
0xb487:     74 42                              	je 0xb4cb <function_b4cb>
0xb489:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xb48c -- 0xb48d
0xb48c:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xb48d -- 0xb48e
; data inside code section at 0xb48e -- 0xb491
0xb48e:     ff ff ff                                           |...             |
; function: function_b491 at 0xb491 -- 0xb495
0xb491:     89 c5                              	mov ebp, eax
0xb493:     eb b4                              	jmp 0xb449
; data inside code section at 0xb495 -- 0xb498
0xb495:     8d 76 00                                           |.v.             |
; function: function_b498 at 0xb498 -- 0xb4cb
0xb498:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xb49c:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xb4a0:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0xb4a4:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xb4a8:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xb4b0:     89 04 24                           	mov dword ptr [esp], eax
0xb4b3:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb4b7:     e8 94 b1 00 00                     	call 0x16650 <unknown_16650>
0xb4bc:     83 ec 04                           	sub esp, 4
0xb4bf:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xb4c3:     c6 47 04 01                        	mov byte ptr [edi + 4], 1
0xb4c7:     89 07                              	mov dword ptr [edi], eax
0xb4c9:     eb 97                              	jmp 0xb462
; function: function_b4cb at 0xb4cb -- 0xb4e1
0xb4cb:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xb4cf:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0xb4d3:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xb4d7:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xb4df:     eb cf                              	jmp 0xb4b0
; function: function_b4e1 at 0xb4e1 -- 0xb4e2
; dynamically linked function: __stack_chk_fail at 0xb4e2 -- 0xb4e3
; data inside code section at 0xb4e3 -- 0xb4e6
0xb4e3:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_
; function: _ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_ at 0xb4f0 -- 0xb557
0xb4f0:     83 ec 5c                           	sub esp, 0x5c
0xb4f3:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xb4f7:     8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0xb4fb:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xb4ff:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xb503:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb509:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xb50d:     31 c0                              	xor eax, eax
0xb50f:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xb513:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xb517:     8d 45 04                           	lea eax, [ebp + 4]
0xb51a:     39 c3                              	cmp ebx, eax
0xb51c:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xb520:     8b 7c 24 6c                        	mov edi, dword ptr [esp + 0x6c]
0xb524:     0f 84 16 01 00 00                  	je 0xb640 <function_b640>
0xb52a:     8d 53 10                           	lea edx, [ebx + 0x10]
0xb52d:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb531:     89 3c 24                           	mov dword ptr [esp], edi
0xb534:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xb538:     e8 63 83 00 00                     	call 0x138a0 <unknown_138a0>
0xb53d:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xb541:     84 c0                              	test al, al
0xb543:     0f 84 87 00 00 00                  	je 0xb5d0 <function_b5d0>
0xb549:     8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0xb54c:     39 d8                              	cmp eax, ebx
0xb54e:     0f 84 72 01 00 00                  	je 0xb6c6 <function_b6c6>
0xb554:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xb557 -- 0xb558
0xb557:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0xb558 -- 0xb559
; data inside code section at 0xb559 -- 0xb55b
0xb559:     ff ff                                              |..              |
; function: function_b55b at 0xb55b -- 0xb564
0xb55b:     ff 89 7c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb84]
0xb561:     c2 8d 40                           	ret 0x408d
; data inside code section at 0xb564 -- 0xb5a3
0xb564:     10 89 04 24 89 54 24 24  e8 2f 83 00 00 8b 54 24   |...$.T$$./....T$|
0xb574:     24 84 c0 0f 84 e3 00 00  00 8b 42 0c 89 7c 24 10   |$.........B..|$.|
0xb584:     85 c0 0f 84 2c 01 00 00  89 5c 24 0c 89 5c 24 08   |....,....\$..\$.|
0xb594:     89 6c 24 04 89 34 24 e8  b0 b1 00 00 83 ec 04      |.l$..4$........ |
; function: function_b5a3 at 0xb5a3 -- 0xb5cc
0xb5a3:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xb5a7:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb5ae:     89 f0                              	mov eax, esi
0xb5b0:     0f 85 3a 01 00 00                  	jne 0xb6f0 <function_b6f0>
0xb5b6:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xb5ba:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xb5be:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xb5c2:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xb5c6:     83 c4 5c                           	add esp, 0x5c
0xb5c9:     c2 04 00                           	ret 4
; data inside code section at 0xb5cc -- 0xb5d0
0xb5cc:     8d 74 26 00                                        |.t&.            |
; function: function_b5d0 at 0xb5d0 -- 0xb5f2
0xb5d0:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xb5d4:     89 14 24                           	mov dword ptr [esp], edx
0xb5d7:     e8 c4 82 00 00                     	call 0x138a0 <unknown_138a0>
0xb5dc:     84 c0                              	test al, al
0xb5de:     0f 84 a4 00 00 00                  	je 0xb688 <function_b688>
0xb5e4:     8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0xb5e7:     39 d8                              	cmp eax, ebx
0xb5e9:     0f 84 f7 00 00 00                  	je 0xb6e6 <function_b6e6>
0xb5ef:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xb5f2 -- 0xb5f3
0xb5f2:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xb5f3 -- 0xb5f4
; data inside code section at 0xb5f4 -- 0xb5f6
0xb5f4:     ff ff                                              |..              |
; function: function_b5f6 at 0xb5f6 -- 0xb63f
0xb5f6:     ff 89 3c 24 89 c2                  	dec dword ptr [ecx - 0x3d76dbc4]
0xb5fc:     8d 40 10                           	lea eax, [eax + 0x10]
0xb5ff:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb603:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xb607:     e8 94 82 00 00                     	call 0x138a0 <unknown_138a0>
0xb60c:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xb610:     84 c0                              	test al, al
0xb612:     74 4c                              	je 0xb660
0xb614:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xb617:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb61b:     85 c0                              	test eax, eax
0xb61d:     0f 84 9d 00 00 00                  	je 0xb6c0 <function_b6c0>
0xb623:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb627:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xb62b:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb62f:     89 34 24                           	mov dword ptr [esp], esi
0xb632:     e8 19 b1 00 00                     	call 0x16750 <unknown_16750>
0xb637:     83 ec 04                           	sub esp, 4
0xb63a:     e9 64 ff ff ff                     	jmp 0xb5a3 <function_b5a3>
; data inside code section at 0xb63f -- 0xb640
0xb63f:     90                                                 |.               |
; function: function_b640 at 0xb640 -- 0xb682
0xb640:     8b 55 14                           	mov edx, dword ptr [ebp + 0x14]
0xb643:     85 d2                              	test edx, edx
0xb645:     74 19                              	je 0xb660 <function_b640+0x20>
0xb647:     8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0xb64a:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xb64e:     8d 43 10                           	lea eax, [ebx + 0x10]
0xb651:     89 04 24                           	mov dword ptr [esp], eax
0xb654:     e8 47 82 00 00                     	call 0x138a0 <unknown_138a0>
0xb659:     84 c0                              	test al, al
0xb65b:     75 33                              	jne 0xb690 <function_b690>
0xb65d:     8d 76 00                           	lea esi, [esi]
0xb660:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xb664:     89 04 24                           	mov dword ptr [esp], eax
0xb667:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0xb66b:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb66f:     e8 6c b2 00 00                     	call 0x168e0 <unknown_168e0>
0xb674:     83 ec 04                           	sub esp, 4
0xb677:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xb67b:     89 06                              	mov dword ptr [esi], eax
0xb67d:     e9 21 ff ff ff                     	jmp 0xb5a3 <function_b5a3>
; data inside code section at 0xb682 -- 0xb688
0xb682:     8d b6 00 00 00 00                                  |......          |
; function: function_b688 at 0xb688 -- 0xb68f
0xb688:     89 1e                              	mov dword ptr [esi], ebx
0xb68a:     e9 14 ff ff ff                     	jmp 0xb5a3 <function_b5a3>
; data inside code section at 0xb68f -- 0xb690
0xb68f:     90                                                 |.               |
; function: function_b690 at 0xb690 -- 0xb6b4
0xb690:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb694:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xb698:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xb6a0:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb6a4:     89 34 24                           	mov dword ptr [esp], esi
0xb6a7:     e8 a4 b0 00 00                     	call 0x16750 <unknown_16750>
0xb6ac:     83 ec 04                           	sub esp, 4
0xb6af:     e9 ef fe ff ff                     	jmp 0xb5a3 <function_b5a3>
; data inside code section at 0xb6b4 -- 0xb6b8
0xb6b4:     8d 74 26 00                                        |.t&.            |
; function: function_b6b8 at 0xb6b8 -- 0xb6be
0xb6b8:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb6bc:     eb da                              	jmp 0xb698
; data inside code section at 0xb6be -- 0xb6c0
0xb6be:     66 90                                              |f.              |
; function: function_b6c0 at 0xb6c0 -- 0xb6c6
0xb6c0:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xb6c4:     eb d2                              	jmp 0xb698
; function: function_b6c6 at 0xb6c6 -- 0xb6e6
0xb6c6:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb6ca:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xb6ce:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb6d2:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb6d6:     89 34 24                           	mov dword ptr [esp], esi
0xb6d9:     e8 72 b0 00 00                     	call 0x16750 <unknown_16750>
0xb6de:     83 ec 04                           	sub esp, 4
0xb6e1:     e9 bd fe ff ff                     	jmp 0xb5a3 <function_b5a3>
; function: function_b6e6 at 0xb6e6 -- 0xb6f0
0xb6e6:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xb6ea:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xb6ee:     eb a8                              	jmp 0xb698
; function: function_b6f0 at 0xb6f0 -- 0xb6f1
; dynamically linked function: __stack_chk_fail at 0xb6f1 -- 0xb6f2
; data inside code section at 0xb6f2 -- 0xb6f5
0xb6f2:     ff ff ff                                           |...             |
; section: .text._ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_
; function: _ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_ at 0xb700 -- 0xb7f8
0xb700:     55                                 	push ebp
0xb701:     57                                 	push edi
0xb702:     56                                 	push esi
0xb703:     53                                 	push ebx
0xb704:     83 ec 5c                           	sub esp, 0x5c
0xb707:     8b 6c 24 70                        	mov ebp, dword ptr [esp + 0x70]
0xb70b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb711:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xb715:     31 c0                              	xor eax, eax
0xb717:     8b 74 24 74                        	mov esi, dword ptr [esp + 0x74]
0xb71b:     8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0xb71e:     8d 55 04                           	lea edx, [ebp + 4]
0xb721:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xb725:     85 db                              	test ebx, ebx
0xb727:     0f 84 f8 00 00 00                  	je 0xb825 <function_b825>
0xb72d:     89 d7                              	mov edi, edx
0xb72f:     eb 10                              	jmp 0xb741 <_ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x41>
; data inside code section at 0xb731 -- 0xb738
0xb731:     8d b4 26 00 00 00 00                               |..&....         |
0xb738:     89 df                              	mov edi, ebx
0xb73a:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0xb73d:     85 db                              	test ebx, ebx
0xb73f:     74 1a                              	je 0xb75b <_ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x5b>
0xb741:     8d 43 10                           	lea eax, [ebx + 0x10]
0xb744:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xb748:     89 04 24                           	mov dword ptr [esp], eax
0xb74b:     e8 60 83 00 00                     	call 0x13ab0 <unknown_13ab0>
0xb750:     84 c0                              	test al, al
0xb752:     74 e4                              	je 0xb738 <_ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x38>
0xb754:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0xb757:     85 db                              	test ebx, ebx
0xb759:     75 e6                              	jne 0xb741 <_ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x41>
0xb75b:     39 7c 24 18                        	cmp dword ptr [esp + 0x18], edi
0xb75f:     74 17                              	je 0xb778 <_ZNSt3mapI9CScriptID7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x78>
0xb761:     8d 47 10                           	lea eax, [edi + 0x10]
0xb764:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb768:     89 34 24                           	mov dword ptr [esp], esi
0xb76b:     e8 40 83 00 00                     	call 0x13ab0 <unknown_13ab0>
0xb770:     84 c0                              	test al, al
0xb772:     0f 84 95 00 00 00                  	je 0xb80d <function_b80d>
0xb778:     8b 06                              	mov eax, dword ptr [esi]
0xb77a:     8d 54 24 2c                        	lea edx, [esp + 0x2c]
0xb77e:     c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0xb786:     c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0xb78e:     c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0xb796:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xb79a:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xb79d:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0xb7a5:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0xb7ad:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0xb7b5:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xb7b9:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xb7bc:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xb7c0:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xb7c3:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0xb7c7:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xb7ca:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb7ce:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0xb7d2:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xb7d6:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xb7da:     8d 44 24 1c                        	lea eax, [esp + 0x1c]
0xb7de:     89 04 24                           	mov dword ptr [esp], eax
0xb7e1:     e8 0a b4 00 00                     	call 0x16bf0 <unknown_16bf0>
0xb7e6:     83 ec 04                           	sub esp, 4
0xb7e9:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0xb7ed:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0xb7f1:     85 c0                              	test eax, eax
0xb7f3:     74 08                              	je 0xb7fd <function_b7fd>
0xb7f5:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xb7f8 -- 0xb7f9
0xb7f8:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb7f9 -- 0xb7fa
; data inside code section at 0xb7fa -- 0xb7fd
0xb7fa:     ff ff ff                                           |...             |
; function: function_b7fd at 0xb7fd -- 0xb808
0xb7fd:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb801:     85 c0                              	test eax, eax
0xb803:     74 08                              	je 0xb80d <function_b80d>
0xb805:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xb808 -- 0xb809
0xb808:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb809 -- 0xb80a
; data inside code section at 0xb80a -- 0xb80d
0xb80a:     ff ff ff                                           |...             |
; function: function_b80d at 0xb80d -- 0xb825
0xb80d:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0xb811:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb818:     8d 47 24                           	lea eax, [edi + 0x24]
0xb81b:     75 11                              	jne 0xb82e <function_b82e>
0xb81d:     83 c4 5c                           	add esp, 0x5c
0xb820:     5b                                 	pop ebx
0xb821:     5e                                 	pop esi
0xb822:     5f                                 	pop edi
0xb823:     5d                                 	pop ebp
0xb824:     c3                                 	ret 
; function: function_b825 at 0xb825 -- 0xb82e
0xb825:     8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0xb829:     e9 4a ff ff ff                     	jmp 0xb778
; function: function_b82e at 0xb82e -- 0xb82f
; dynamically linked function: __stack_chk_fail at 0xb82f -- 0xb830
; data inside code section at 0xb830 -- 0xb834
0xb830:     ff ff ff 89                                        |....            |
; function: function_b834 at 0xb834 -- 0xb835
0xb834:     c3                                 	ret 
; data inside code section at 0xb835 -- 0xb851
0xb835:     8d 44 24 40 89 04 24 e8  8f 86 00 00 8d 44 24 20   |.D$@..$......D$ |
0xb845:     89 04 24 e8 83 86 00 00  89 1c 24 e8               |..$.......$.    |
; dynamically linked function: _Unwind_Resume at 0xb851 -- 0xb852
; data inside code section at 0xb852 -- 0xb855
0xb852:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE10_M_insert_EPKSt18_Rb_tree_node_baseSH_RKS8_
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE10_M_insert_EPKSt18_Rb_tree_node_baseSH_RKS8_ at 0xb860 -- 0xb8a8
0xb860:     55                                 	push ebp
0xb861:     57                                 	push edi
0xb862:     56                                 	push esi
0xb863:     53                                 	push ebx
0xb864:     83 ec 3c                           	sub esp, 0x3c
0xb867:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0xb86b:     8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0xb86f:     8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0xb873:     8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0xb877:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xb87b:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0xb87f:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xb883:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb88a:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xb88e:     31 d2                              	xor edx, edx
0xb890:     85 c9                              	test ecx, ecx
0xb892:     c6 44 24 1f 01                     	mov byte ptr [esp + 0x1f], 1
0xb897:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xb89b:     0f 84 ef 00 00 00                  	je 0xb990 <function_b990>
0xb8a1:     c7 04 24 74 00 00 00               	mov dword ptr [esp], 0x74
; data inside code section at 0xb8a8 -- 0xb8a9
0xb8a8:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb8a9 -- 0xb8aa
; data inside code section at 0xb8aa -- 0xb8b1
0xb8aa:     ff ff ff 83 f8 f0 89                               |.......         |
; function: function_b8b1 at 0xb8b1 -- 0xb8b2
0xb8b1:     c3                                 	ret 
; data inside code section at 0xb8b2 -- 0xb8e8
0xb8b2:     74 7f 8b 45 00 8d 7b 24  b9 10 00 00 00 8d 75 14   |t..E..{$......u.|
0xb8c2:     89 43 10 8b 45 04 89 43  14 8b 45 08 89 43 18 8b   |.C..E..C..E..C..|
0xb8d2:     45 0c 89 43 1c 8b 45 10  89 43 20 f3 a5 0f b6 06   |E..C..E..C .....|
0xb8e2:     88 07 8b 75 5c 31                                  |...u\1          |
; function: function_b8e8 at 0xb8e8 -- 0xb8ea
0xb8e8:     ff 2b                              	ljmp [ebx]
; data inside code section at 0xb8ea -- 0xb905
0xb8ea:     75 58 c7 43 68 00 00 00  00 c7 43 6c 00 00 00 00   |uX.Ch.....Cl....|
0xb8fa:     85 f6 c7 43 70 00 00 00  00 75 7b                  |...Cp....u{     |
; function: function_b905 at 0xb905 -- 0xb906
; data inside code section at 0xb906 -- 0xb919
0xb906:     fe 89 73 70 31 f6 89 7b  68 89 7b 6c 8b 45 58 8b   |..sp1..{h.{l.EX.|
0xb916:     55 5c 29                                           |U\)             |
; function: function_b919 at 0xb919 -- 0xb91c
0xb919:     c2 74 12                           	ret 0x1274
; data inside code section at 0xb91c -- 0xb92a
0xb91c:     89 d6 89 54 24 08 89 44  24 04 89 3c 24 e8         |...T$..D$..<$.  |
; dynamically linked function: memmove at 0xb92a -- 0xb92b
; data inside code section at 0xb92b -- 0xb953
0xb92b:     ff ff ff 01 f7 89 7b 6c  8b 44 24 10 89 5c 24 04   |......{l.D$..\$.|
0xb93b:     83 c0 04 89 44 24 0c 8b  44 24 18 89 44 24 08 0f   |....D$..D$..D$..|
0xb94b:     b6 44 24 1f 89 04 24 e8                            |.D$...$.        |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xb953 -- 0xb954
; data inside code section at 0xb954 -- 0xb956
0xb954:     ff ff                                              |..              |
; function: function_b956 at 0xb956 -- 0xb97c
0xb956:     ff 8b 54 24 10 8b                  	dec dword ptr [ebx - 0x74efdbac]
0xb95c:     44                                 	inc esp
0xb95d:     24 14                              	and al, 0x14
0xb95f:     83 42 14 01                        	add dword ptr [edx + 0x14], 1
0xb963:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xb967:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb96e:     89 18                              	mov dword ptr [eax], ebx
0xb970:     75 4b                              	jne 0xb9bd <function_b9bd>
0xb972:     83 c4 3c                           	add esp, 0x3c
0xb975:     5b                                 	pop ebx
0xb976:     5e                                 	pop esi
0xb977:     5f                                 	pop edi
0xb978:     5d                                 	pop ebp
0xb979:     c2 04 00                           	ret 4
; data inside code section at 0xb97c -- 0xb980
0xb97c:     8d 74 26 00                                        |.t&.            |
; function: function_b980 at 0xb980 -- 0xb98f
0xb980:     89 34 24                           	mov dword ptr [esp], esi
0xb983:     e8 fc ff ff ff                     	call 0xb984
0xb988:     89 c7                              	mov edi, eax
0xb98a:     e9 76 ff ff ff                     	jmp 0xb905 <function_b905>
; data inside code section at 0xb98f -- 0xb990
0xb98f:     90                                                 |.               |
; function: function_b990 at 0xb990 -- 0xb9bd
0xb990:     8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0xb994:     83 c0 04                           	add eax, 4
0xb997:     39 44 24 18                        	cmp dword ptr [esp + 0x18], eax
0xb99b:     0f 84 00 ff ff ff                  	je 0xb8a1
0xb9a1:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xb9a5:     89 2c 24                           	mov dword ptr [esp], ebp
0xb9a8:     83 c0 10                           	add eax, 0x10
0xb9ab:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb9af:     e8 5c 82 00 00                     	call 0x13c10 <unknown_13c10>
0xb9b4:     88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0xb9b8:     e9 e4 fe ff ff                     	jmp 0xb8a1
; function: function_b9bd at 0xb9bd -- 0xb9be
; dynamically linked function: __stack_chk_fail at 0xb9be -- 0xb9bf
; data inside code section at 0xb9bf -- 0xb9c6
0xb9bf:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xb9c6 -- 0xb9c7
; data inside code section at 0xb9c7 -- 0xb9ce
0xb9c7:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xb9ce -- 0xb9cf
; data inside code section at 0xb9cf -- 0xb9d3
0xb9cf:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb9d3 -- 0xb9d4
; data inside code section at 0xb9d4 -- 0xb9d8
0xb9d4:     ff ff ff 89                                        |....            |
; function: function_b9d8 at 0xb9d8 -- 0xb9d9
0xb9d8:     c3                                 	ret 
; data inside code section at 0xb9d9 -- 0xb9da
0xb9d9:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xb9da -- 0xb9db
; data inside code section at 0xb9db -- 0xb9e2
0xb9db:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xb9e2 -- 0xb9e3
; data inside code section at 0xb9e3 -- 0xb9e6
0xb9e3:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_ at 0xb9f0 -- 0xba8c
0xb9f0:     55                                 	push ebp
0xb9f1:     57                                 	push edi
0xb9f2:     56                                 	push esi
0xb9f3:     53                                 	push ebx
0xb9f4:     83 ec 4c                           	sub esp, 0x4c
0xb9f7:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xb9fb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xba01:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xba05:     31 c0                              	xor eax, eax
0xba07:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0xba0b:     8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0xba0f:     8b 5a 08                           	mov ebx, dword ptr [edx + 8]
0xba12:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xba16:     85 db                              	test ebx, ebx
0xba18:     75 0f                              	jne 0xba29 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_+0x39>
0xba1a:     eb 5f                              	jmp 0xba7b <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_+0x8b>
; data inside code section at 0xba1c -- 0xba20
0xba1c:     8d 74 26 00                                        |.t&.            |
0xba20:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0xba23:     85 d2                              	test edx, edx
0xba25:     74 1c                              	je 0xba43 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_+0x53>
0xba27:     89 d3                              	mov ebx, edx
0xba29:     8d 43 10                           	lea eax, [ebx + 0x10]
0xba2c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xba30:     89 34 24                           	mov dword ptr [esp], esi
0xba33:     e8 68 83 00 00                     	call 0x13da0 <unknown_13da0>
0xba38:     84 c0                              	test al, al
0xba3a:     75 e4                              	jne 0xba20 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_+0x30>
0xba3c:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0xba3f:     85 d2                              	test edx, edx
0xba41:     75 e4                              	jne 0xba27 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_+0x37>
0xba43:     84 c0                              	test al, al
0xba45:     89 dd                              	mov ebp, ebx
0xba47:     75 37                              	jne 0xba80 <_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE16_M_insert_uniqueERKS8_+0x90>
0xba49:     8d 45 10                           	lea eax, [ebp + 0x10]
0xba4c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xba50:     89 04 24                           	mov dword ptr [esp], eax
0xba53:     e8 48 83 00 00                     	call 0x13da0 <unknown_13da0>
0xba58:     84 c0                              	test al, al
0xba5a:     75 3c                              	jne 0xba98 <function_ba98>
0xba5c:     89 2f                              	mov dword ptr [edi], ebp
0xba5e:     c6 47 04 00                        	mov byte ptr [edi + 4], 0
0xba62:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xba66:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xba6d:     89 f8                              	mov eax, edi
0xba6f:     75 70                              	jne 0xbae1 <function_bae1>
0xba71:     83 c4 4c                           	add esp, 0x4c
0xba74:     5b                                 	pop ebx
0xba75:     5e                                 	pop esi
0xba76:     5f                                 	pop edi
0xba77:     5d                                 	pop ebp
0xba78:     c2 04 00                           	ret 4
0xba7b:     89 d3                              	mov ebx, edx
0xba7d:     83 c3 04                           	add ebx, 4
0xba80:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xba84:     3b 5a 0c                           	cmp ebx, dword ptr [edx + 0xc]
0xba87:     74 42                              	je 0xbacb <function_bacb>
0xba89:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xba8c -- 0xba8d
0xba8c:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xba8d -- 0xba8e
; data inside code section at 0xba8e -- 0xba91
0xba8e:     ff ff ff                                           |...             |
; function: function_ba91 at 0xba91 -- 0xba95
0xba91:     89 c5                              	mov ebp, eax
0xba93:     eb b4                              	jmp 0xba49
; data inside code section at 0xba95 -- 0xba98
0xba95:     8d 76 00                                           |.v.             |
; function: function_ba98 at 0xba98 -- 0xbacb
0xba98:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xba9c:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xbaa0:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0xbaa4:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xbaa8:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbab0:     89 04 24                           	mov dword ptr [esp], eax
0xbab3:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xbab7:     e8 94 b7 00 00                     	call 0x17250 <unknown_17250>
0xbabc:     83 ec 04                           	sub esp, 4
0xbabf:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xbac3:     c6 47 04 01                        	mov byte ptr [edi + 4], 1
0xbac7:     89 07                              	mov dword ptr [edi], eax
0xbac9:     eb 97                              	jmp 0xba62
; function: function_bacb at 0xbacb -- 0xbae1
0xbacb:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xbacf:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0xbad3:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xbad7:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbadf:     eb cf                              	jmp 0xbab0
; function: function_bae1 at 0xbae1 -- 0xbae2
; dynamically linked function: __stack_chk_fail at 0xbae2 -- 0xbae3
; data inside code section at 0xbae3 -- 0xbae6
0xbae3:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS8_ERKS8_
; function: _ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS8_ERKS8_ at 0xbaf0 -- 0xbb57
0xbaf0:     83 ec 5c                           	sub esp, 0x5c
0xbaf3:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xbaf7:     8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0xbafb:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xbaff:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xbb03:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbb09:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xbb0d:     31 c0                              	xor eax, eax
0xbb0f:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xbb13:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xbb17:     8d 45 04                           	lea eax, [ebp + 4]
0xbb1a:     39 c3                              	cmp ebx, eax
0xbb1c:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xbb20:     8b 7c 24 6c                        	mov edi, dword ptr [esp + 0x6c]
0xbb24:     0f 84 16 01 00 00                  	je 0xbc40 <function_bc40>
0xbb2a:     8d 53 10                           	lea edx, [ebx + 0x10]
0xbb2d:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xbb31:     89 3c 24                           	mov dword ptr [esp], edi
0xbb34:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xbb38:     e8 63 83 00 00                     	call 0x13ea0 <unknown_13ea0>
0xbb3d:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xbb41:     84 c0                              	test al, al
0xbb43:     0f 84 87 00 00 00                  	je 0xbbd0 <function_bbd0>
0xbb49:     8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0xbb4c:     39 d8                              	cmp eax, ebx
0xbb4e:     0f 84 72 01 00 00                  	je 0xbcc6 <function_bcc6>
0xbb54:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbb57 -- 0xbb58
0xbb57:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0xbb58 -- 0xbb59
; data inside code section at 0xbb59 -- 0xbb5b
0xbb59:     ff ff                                              |..              |
; function: function_bb5b at 0xbb5b -- 0xbb64
0xbb5b:     ff 89 7c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb84]
0xbb61:     c2 8d 40                           	ret 0x408d
; data inside code section at 0xbb64 -- 0xbba3
0xbb64:     10 89 04 24 89 54 24 24  e8 2f 83 00 00 8b 54 24   |...$.T$$./....T$|
0xbb74:     24 84 c0 0f 84 e3 00 00  00 8b 42 0c 89 7c 24 10   |$.........B..|$.|
0xbb84:     85 c0 0f 84 2c 01 00 00  89 5c 24 0c 89 5c 24 08   |....,....\$..\$.|
0xbb94:     89 6c 24 04 89 34 24 e8  b0 b7 00 00 83 ec 04      |.l$..4$........ |
; function: function_bba3 at 0xbba3 -- 0xbbcc
0xbba3:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xbba7:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xbbae:     89 f0                              	mov eax, esi
0xbbb0:     0f 85 3a 01 00 00                  	jne 0xbcf0 <function_bcf0>
0xbbb6:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xbbba:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xbbbe:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xbbc2:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xbbc6:     83 c4 5c                           	add esp, 0x5c
0xbbc9:     c2 04 00                           	ret 4
; data inside code section at 0xbbcc -- 0xbbd0
0xbbcc:     8d 74 26 00                                        |.t&.            |
; function: function_bbd0 at 0xbbd0 -- 0xbbf2
0xbbd0:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xbbd4:     89 14 24                           	mov dword ptr [esp], edx
0xbbd7:     e8 c4 82 00 00                     	call 0x13ea0 <unknown_13ea0>
0xbbdc:     84 c0                              	test al, al
0xbbde:     0f 84 a4 00 00 00                  	je 0xbc88 <function_bc88>
0xbbe4:     8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0xbbe7:     39 d8                              	cmp eax, ebx
0xbbe9:     0f 84 f7 00 00 00                  	je 0xbce6 <function_bce6>
0xbbef:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbbf2 -- 0xbbf3
0xbbf2:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xbbf3 -- 0xbbf4
; data inside code section at 0xbbf4 -- 0xbbf6
0xbbf4:     ff ff                                              |..              |
; function: function_bbf6 at 0xbbf6 -- 0xbc3f
0xbbf6:     ff 89 3c 24 89 c2                  	dec dword ptr [ecx - 0x3d76dbc4]
0xbbfc:     8d 40 10                           	lea eax, [eax + 0x10]
0xbbff:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xbc03:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xbc07:     e8 94 82 00 00                     	call 0x13ea0 <unknown_13ea0>
0xbc0c:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xbc10:     84 c0                              	test al, al
0xbc12:     74 4c                              	je 0xbc60
0xbc14:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xbc17:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xbc1b:     85 c0                              	test eax, eax
0xbc1d:     0f 84 9d 00 00 00                  	je 0xbcc0 <function_bcc0>
0xbc23:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xbc27:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xbc2b:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbc2f:     89 34 24                           	mov dword ptr [esp], esi
0xbc32:     e8 19 b7 00 00                     	call 0x17350 <unknown_17350>
0xbc37:     83 ec 04                           	sub esp, 4
0xbc3a:     e9 64 ff ff ff                     	jmp 0xbba3 <function_bba3>
; data inside code section at 0xbc3f -- 0xbc40
0xbc3f:     90                                                 |.               |
; function: function_bc40 at 0xbc40 -- 0xbc82
0xbc40:     8b 45 14                           	mov eax, dword ptr [ebp + 0x14]
0xbc43:     85 c0                              	test eax, eax
0xbc45:     74 19                              	je 0xbc60 <function_bc40+0x20>
0xbc47:     8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0xbc4a:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xbc4e:     8d 43 10                           	lea eax, [ebx + 0x10]
0xbc51:     89 04 24                           	mov dword ptr [esp], eax
0xbc54:     e8 47 82 00 00                     	call 0x13ea0 <unknown_13ea0>
0xbc59:     84 c0                              	test al, al
0xbc5b:     75 33                              	jne 0xbc90 <function_bc90>
0xbc5d:     8d 76 00                           	lea esi, [esi]
0xbc60:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xbc64:     89 04 24                           	mov dword ptr [esp], eax
0xbc67:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0xbc6b:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbc6f:     e8 6c b8 00 00                     	call 0x174e0 <unknown_174e0>
0xbc74:     83 ec 04                           	sub esp, 4
0xbc77:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xbc7b:     89 06                              	mov dword ptr [esi], eax
0xbc7d:     e9 21 ff ff ff                     	jmp 0xbba3 <function_bba3>
; data inside code section at 0xbc82 -- 0xbc88
0xbc82:     8d b6 00 00 00 00                                  |......          |
; function: function_bc88 at 0xbc88 -- 0xbc8f
0xbc88:     89 1e                              	mov dword ptr [esi], ebx
0xbc8a:     e9 14 ff ff ff                     	jmp 0xbba3 <function_bba3>
; data inside code section at 0xbc8f -- 0xbc90
0xbc8f:     90                                                 |.               |
; function: function_bc90 at 0xbc90 -- 0xbcb4
0xbc90:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xbc94:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xbc98:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbca0:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbca4:     89 34 24                           	mov dword ptr [esp], esi
0xbca7:     e8 a4 b6 00 00                     	call 0x17350 <unknown_17350>
0xbcac:     83 ec 04                           	sub esp, 4
0xbcaf:     e9 ef fe ff ff                     	jmp 0xbba3 <function_bba3>
; data inside code section at 0xbcb4 -- 0xbcb8
0xbcb4:     8d 74 26 00                                        |.t&.            |
; function: function_bcb8 at 0xbcb8 -- 0xbcbe
0xbcb8:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xbcbc:     eb da                              	jmp 0xbc98
; data inside code section at 0xbcbe -- 0xbcc0
0xbcbe:     66 90                                              |f.              |
; function: function_bcc0 at 0xbcc0 -- 0xbcc6
0xbcc0:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xbcc4:     eb d2                              	jmp 0xbc98
; function: function_bcc6 at 0xbcc6 -- 0xbce6
0xbcc6:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xbcca:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xbcce:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xbcd2:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbcd6:     89 34 24                           	mov dword ptr [esp], esi
0xbcd9:     e8 72 b6 00 00                     	call 0x17350 <unknown_17350>
0xbcde:     83 ec 04                           	sub esp, 4
0xbce1:     e9 bd fe ff ff                     	jmp 0xbba3 <function_bba3>
; function: function_bce6 at 0xbce6 -- 0xbcf0
0xbce6:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xbcea:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xbcee:     eb a8                              	jmp 0xbc98
; function: function_bcf0 at 0xbcf0 -- 0xbcf1
; dynamically linked function: __stack_chk_fail at 0xbcf1 -- 0xbcf2
; data inside code section at 0xbcf2 -- 0xbcf5
0xbcf2:     ff ff ff                                           |...             |
; section: .text._ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_
; function: _ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_ at 0xbd00 -- 0xbe34
0xbd00:     55                                 	push ebp
0xbd01:     57                                 	push edi
0xbd02:     56                                 	push esi
0xbd03:     53                                 	push ebx
0xbd04:     81 ec ec 00 00 00                  	sub esp, 0xec
0xbd0a:     8b ac 24 00 01 00 00               	mov ebp, dword ptr [esp + 0x100]
0xbd11:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbd17:     89 84 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], eax
0xbd1e:     31 c0                              	xor eax, eax
0xbd20:     8b bc 24 04 01 00 00               	mov edi, dword ptr [esp + 0x104]
0xbd27:     8b 75 08                           	mov esi, dword ptr [ebp + 8]
0xbd2a:     8d 55 04                           	lea edx, [ebp + 4]
0xbd2d:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xbd31:     85 f6                              	test esi, esi
0xbd33:     0f 84 31 01 00 00                  	je 0xbe6a <function_be6a>
0xbd39:     89 d3                              	mov ebx, edx
0xbd3b:     eb 0c                              	jmp 0xbd49 <_ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_+0x49>
; data inside code section at 0xbd3d -- 0xbd40
0xbd3d:     8d 76 00                                           |.v.             |
0xbd40:     89 f3                              	mov ebx, esi
0xbd42:     8b 76 08                           	mov esi, dword ptr [esi + 8]
0xbd45:     85 f6                              	test esi, esi
0xbd47:     74 1a                              	je 0xbd63 <_ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_+0x63>
0xbd49:     8d 46 10                           	lea eax, [esi + 0x10]
0xbd4c:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xbd50:     89 04 24                           	mov dword ptr [esp], eax
0xbd53:     e8 58 83 00 00                     	call 0x140b0 <unknown_140b0>
0xbd58:     84 c0                              	test al, al
0xbd5a:     74 e4                              	je 0xbd40 <_ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_+0x40>
0xbd5c:     8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0xbd5f:     85 f6                              	test esi, esi
0xbd61:     75 e6                              	jne 0xbd49 <_ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_+0x49>
0xbd63:     39 5c 24 18                        	cmp dword ptr [esp + 0x18], ebx
0xbd67:     74 17                              	je 0xbd80 <_ZNSt3mapI6CKeyIDSt4pairI7CPubKeySt6vectorIhSaIhEEESt4lessIS0_ESaIS1_IKS0_S6_EEEixERS9_+0x80>
0xbd69:     8d 43 10                           	lea eax, [ebx + 0x10]
0xbd6c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xbd70:     89 3c 24                           	mov dword ptr [esp], edi
0xbd73:     e8 38 83 00 00                     	call 0x140b0 <unknown_140b0>
0xbd78:     84 c0                              	test al, al
0xbd7a:     0f 84 cc 00 00 00                  	je 0xbe4c <function_be4c>
0xbd80:     8b 07                              	mov eax, dword ptr [edi]
0xbd82:     8d b4 24 8c 00 00 00               	lea esi, [esp + 0x8c]
0xbd89:     b9 10 00 00 00                     	mov ecx, 0x10
0xbd8e:     c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0xbd99:     8d 54 24 28                        	lea edx, [esp + 0x28]
0xbd9d:     c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0xbda8:     c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0xbdb3:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xbdb7:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0xbdba:     c6 84 24 8c 00 00 00 ff            	mov byte ptr [esp + 0x8c], 0xff
0xbdc2:     c7 84 24 84 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x84], 0
0xbdcd:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xbdd1:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xbdd4:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xbdd8:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xbddb:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xbddf:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xbde2:     8d 7c 24 3c                        	lea edi, [esp + 0x3c]
0xbde6:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0xbdea:     f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0xbdec:     0f b6 06                           	movzx eax, byte ptr [esi]
0xbdef:     88 07                              	mov byte ptr [edi], al
0xbdf1:     8d 44 24 1c                        	lea eax, [esp + 0x1c]
0xbdf5:     c7 84 24 80 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x80], 0
0xbe00:     c7 84 24 88 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x88], 0
0xbe0b:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xbe0f:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0xbe13:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbe17:     89 04 24                           	mov dword ptr [esp], eax
0xbe1a:     e8 d1 b9 00 00                     	call 0x177f0 <unknown_177f0>
0xbe1f:     83 ec 04                           	sub esp, 4
0xbe22:     8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0xbe29:     8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0xbe2d:     85 c0                              	test eax, eax
0xbe2f:     74 08                              	je 0xbe39 <function_be39>
0xbe31:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xbe34 -- 0xbe35
0xbe34:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xbe35 -- 0xbe36
; data inside code section at 0xbe36 -- 0xbe39
0xbe36:     ff ff ff                                           |...             |
; function: function_be39 at 0xbe39 -- 0xbe47
0xbe39:     8b 84 24 d0 00 00 00               	mov eax, dword ptr [esp + 0xd0]
0xbe40:     85 c0                              	test eax, eax
0xbe42:     74 08                              	je 0xbe4c <function_be4c>
0xbe44:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xbe47 -- 0xbe48
0xbe47:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xbe48 -- 0xbe49
; data inside code section at 0xbe49 -- 0xbe4c
0xbe49:     ff ff ff                                           |...             |
; function: function_be4c at 0xbe4c -- 0xbe6a
0xbe4c:     8b 94 24 dc 00 00 00               	mov edx, dword ptr [esp + 0xdc]
0xbe53:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xbe5a:     8d 43 24                           	lea eax, [ebx + 0x24]
0xbe5d:     75 14                              	jne 0xbe73 <function_be73>
0xbe5f:     81 c4 ec 00 00 00                  	add esp, 0xec
0xbe65:     5b                                 	pop ebx
0xbe66:     5e                                 	pop esi
0xbe67:     5f                                 	pop edi
0xbe68:     5d                                 	pop ebp
0xbe69:     c3                                 	ret 
; function: function_be6a at 0xbe6a -- 0xbe73
0xbe6a:     8b 5c 24 18                        	mov ebx, dword ptr [esp + 0x18]
0xbe6e:     e9 0d ff ff ff                     	jmp 0xbd80
; function: function_be73 at 0xbe73 -- 0xbea0
0xbe73:     e8 fc ff ff ff                     	call 0xbe74
0xbe78:     89 c3                              	mov ebx, eax
0xbe7a:     8d 84 24 80 00 00 00               	lea eax, [esp + 0x80]
0xbe81:     89 04 24                           	mov dword ptr [esp], eax
0xbe84:     e8 47 86 00 00                     	call 0x144d0 <unknown_144d0>
0xbe89:     8d 84 24 d0 00 00 00               	lea eax, [esp + 0xd0]
0xbe90:     89 04 24                           	mov dword ptr [esp], eax
0xbe93:     e8 38 86 00 00                     	call 0x144d0 <unknown_144d0>
0xbe98:     89 1c 24                           	mov dword ptr [esp], ebx
0xbe9b:     e8 fc ff ff ff                     	call 0xbe9c
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E at 0xbea0 -- 0xbee1
0xbea0:     57                                 	push edi
0xbea1:     56                                 	push esi
0xbea2:     53                                 	push ebx
0xbea3:     83 ec 20                           	sub esp, 0x20
0xbea6:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xbeaa:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbeb0:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xbeb4:     31 c0                              	xor eax, eax
0xbeb6:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xbeba:     85 db                              	test ebx, ebx
0xbebc:     75 04                              	jne 0xbec2 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x22>
0xbebe:     eb 2a                              	jmp 0xbeea <function_beea>
0xbec0:     89 f3                              	mov ebx, esi
0xbec2:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xbec5:     89 3c 24                           	mov dword ptr [esp], edi
0xbec8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xbecc:     e8 6f be 00 00                     	call 0x17d40 <unknown_17d40>
0xbed1:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xbed4:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xbed8:     74 04                              	je 0xbede <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x3e>
0xbeda:     c6 43 14 00                        	mov byte ptr [ebx + 0x14], 0
0xbede:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbee1 -- 0xbee2
0xbee1:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xbee2 -- 0xbee3
; data inside code section at 0xbee3 -- 0xbeea
0xbee3:     ff ff ff 85 f6 75 d6                               |.....u.         |
; function: function_beea at 0xbeea -- 0xbefe
0xbeea:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xbeee:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xbef5:     75 07                              	jne 0xbefe <function_beea+0x13>
0xbef7:     83 c4 20                           	add esp, 0x20
0xbefa:     5b                                 	pop ebx
0xbefb:     5e                                 	pop esi
0xbefc:     5f                                 	pop edi
0xbefd:     c3                                 	ret 
; data inside code section at 0xbefe -- 0xbeff
0xbefe:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xbeff -- 0xbf00
; data inside code section at 0xbf00 -- 0xbf03
0xbf00:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv at 0xbf10 -- 0xbf5a
0xbf10:     57                                 	push edi
0xbf11:     56                                 	push esi
0xbf12:     53                                 	push ebx
0xbf13:     83 ec 20                           	sub esp, 0x20
0xbf16:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbf1c:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xbf20:     31 c0                              	xor eax, eax
0xbf22:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xbf26:     8b 78 0c                           	mov edi, dword ptr [eax + 0xc]
0xbf29:     85 ff                              	test edi, edi
0xbf2b:     74 53                              	je 0xbf80 <function_bf80>
0xbf2d:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xbf30:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xbf34:     8d 47 08                           	lea eax, [edi + 8]
0xbf37:     89 04 24                           	mov dword ptr [esp], eax
0xbf3a:     e8 71 be 00 00                     	call 0x17db0 <unknown_17db0>
0xbf3f:     8b 1f                              	mov ebx, dword ptr [edi]
0xbf41:     39 fb                              	cmp ebx, edi
0xbf43:     75 05                              	jne 0xbf4a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv+0x3a>
0xbf45:     eb 1c                              	jmp 0xbf63 <function_bf63>
; data inside code section at 0xbf47 -- 0xbf48
0xbf47:     90                                                 |.               |
0xbf48:     89 f3                              	mov ebx, esi
0xbf4a:     8b 33                              	mov esi, dword ptr [ebx]
0xbf4c:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xbf4f:     89 04 24                           	mov dword ptr [esp], eax
0xbf52:     e8 89 44 00 00                     	call 0x103e0 <unknown_103e0>
0xbf57:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbf5a -- 0xbf5b
0xbf5a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xbf5b -- 0xbf5c
; data inside code section at 0xbf5c -- 0xbf63
0xbf5c:     ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_bf63 at 0xbf63 -- 0xbf7a
0xbf63:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xbf67:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xbf6e:     75 24                              	jne 0xbf94 <function_bf94>
0xbf70:     89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0xbf74:     83 c4 20                           	add esp, 0x20
0xbf77:     5b                                 	pop ebx
0xbf78:     5e                                 	pop esi
0xbf79:     5f                                 	pop edi
; data inside code section at 0xbf7a -- 0xbf7b
0xbf7a:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xbf7b -- 0xbf7c
; data inside code section at 0xbf7c -- 0xbf80
0xbf7c:     ff ff ff 90                                        |....            |
; function: function_bf80 at 0xbf80 -- 0xbf94
0xbf80:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xbf84:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xbf8b:     75 07                              	jne 0xbf94 <function_bf94>
0xbf8d:     83 c4 20                           	add esp, 0x20
0xbf90:     5b                                 	pop ebx
0xbf91:     5e                                 	pop esi
0xbf92:     5f                                 	pop edi
0xbf93:     c3                                 	ret 
; function: function_bf94 at 0xbf94 -- 0xbf95
; dynamically linked function: __stack_chk_fail at 0xbf95 -- 0xbf96
; data inside code section at 0xbf96 -- 0xbf99
0xbf96:     ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_ at 0xbfa0 -- 0xc000
0xbfa0:     53                                 	push ebx
0xbfa1:     83 ec 38                           	sub esp, 0x38
0xbfa4:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xbfa8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbfae:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xbfb2:     31 c0                              	xor eax, eax
0xbfb4:     85 db                              	test ebx, ebx
0xbfb6:     74 30                              	je 0xbfe8 <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x48>
0xbfb8:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xbfbb:     89 04 24                           	mov dword ptr [esp], eax
0xbfbe:     e8 ad 44 00 00                     	call 0x10470 <unknown_10470>
0xbfc3:     8d 43 04                           	lea eax, [ebx + 4]
0xbfc6:     89 04 24                           	mov dword ptr [esp], eax
0xbfc9:     e8 a2 44 00 00                     	call 0x10470 <unknown_10470>
0xbfce:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xbfd2:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xbfd9:     75 1f                              	jne 0xbffa <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0xbfdb:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0xbfdf:     83 c4 38                           	add esp, 0x38
0xbfe2:     5b                                 	pop ebx
0xbfe3:     e9 fc ff ff ff                     	jmp 0xbfe4
0xbfe8:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xbfec:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xbff3:     75 05                              	jne 0xbffa <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0xbff5:     83 c4 38                           	add esp, 0x38
0xbff8:     5b                                 	pop ebx
0xbff9:     c3                                 	ret 
0xbffa:     8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0xc000 -- 0xc001
0xc000:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc001 -- 0xc002
; data inside code section at 0xc002 -- 0xc006
0xc002:     ff ff ff 83                                        |....            |
; function: function_c006 at 0xc006 -- 0xc007
0xc006:     c3                                 	ret 
; data inside code section at 0xc007 -- 0xc020
0xc007:     04 89 44 24 1c 89 1c 24  e8 5c 44 00 00 8b 44 24   |..D$...$.\D...D$|
0xc017:     1c 89 04 24 e8 fc ff ff  ff                        |...$.....       |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSF_EEEEENS1_5mutexEEEEEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSF_EEEEENS1_5mutexEEEEEEEEEvPT_ at 0xc020 -- 0xc06a
0xc020:     57                                 	push edi
0xc021:     56                                 	push esi
0xc022:     53                                 	push ebx
0xc023:     83 ec 20                           	sub esp, 0x20
0xc026:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xc02a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc030:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xc034:     31 c0                              	xor eax, eax
0xc036:     85 ff                              	test edi, edi
0xc038:     74 56                              	je 0xc090 <function_c090>
0xc03a:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xc03d:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xc041:     8d 47 08                           	lea eax, [edi + 8]
0xc044:     89 04 24                           	mov dword ptr [esp], eax
0xc047:     e8 74 be 00 00                     	call 0x17ec0 <unknown_17ec0>
0xc04c:     8b 1f                              	mov ebx, dword ptr [edi]
0xc04e:     39 fb                              	cmp ebx, edi
0xc050:     75 08                              	jne 0xc05a <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x3a>
0xc052:     eb 1f                              	jmp 0xc073 <function_c073>
; data inside code section at 0xc054 -- 0xc058
0xc054:     8d 74 26 00                                        |.t&.            |
0xc058:     89 f3                              	mov ebx, esi
0xc05a:     8b 33                              	mov esi, dword ptr [ebx]
0xc05c:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xc05f:     89 04 24                           	mov dword ptr [esp], eax
0xc062:     e8 89 44 00 00                     	call 0x104f0 <unknown_104f0>
0xc067:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xc06a -- 0xc06b
0xc06a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xc06b -- 0xc06c
; data inside code section at 0xc06c -- 0xc073
0xc06c:     ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_c073 at 0xc073 -- 0xc08a
0xc073:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xc077:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xc07e:     75 24                              	jne 0xc0a4 <function_c0a4>
0xc080:     89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0xc084:     83 c4 20                           	add esp, 0x20
0xc087:     5b                                 	pop ebx
0xc088:     5e                                 	pop esi
0xc089:     5f                                 	pop edi
; data inside code section at 0xc08a -- 0xc08b
0xc08a:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xc08b -- 0xc08c
; data inside code section at 0xc08c -- 0xc090
0xc08c:     ff ff ff 90                                        |....            |
; function: function_c090 at 0xc090 -- 0xc0a4
0xc090:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xc094:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xc09b:     75 07                              	jne 0xc0a4 <function_c0a4>
0xc09d:     83 c4 20                           	add esp, 0x20
0xc0a0:     5b                                 	pop ebx
0xc0a1:     5e                                 	pop esi
0xc0a2:     5f                                 	pop edi
0xc0a3:     c3                                 	ret 
; function: function_c0a4 at 0xc0a4 -- 0xc0a5
; dynamically linked function: __stack_chk_fail at 0xc0a5 -- 0xc0a6
; data inside code section at 0xc0a6 -- 0xc0a9
0xc0a6:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_ at 0xc0b0 -- 0xc0d6
0xc0b0:     55                                 	push ebp
0xc0b1:     57                                 	push edi
0xc0b2:     56                                 	push esi
0xc0b3:     53                                 	push ebx
0xc0b4:     83 ec 3c                           	sub esp, 0x3c
0xc0b7:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc0bd:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xc0c1:     31 c0                              	xor eax, eax
0xc0c3:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xc0c7:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xc0cb:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0xc0cf:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xc0d6 -- 0xc0d7
0xc0d6:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xc0d7 -- 0xc0d8
; data inside code section at 0xc0d8 -- 0xc0da
0xc0d8:     ff ff                                              |..              |
; function: function_c0da at 0xc0da -- 0xc159
0xc0da:     ff 83 f8 f0 89 44                  	inc dword ptr [ebx + 0x4489f0f8]
0xc0e0:     24 1c                              	and al, 0x1c
0xc0e2:     74 22                              	je 0xc106 <function_c0da+0x2c>
0xc0e4:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xc0e7:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc0eb:     89 42 10                           	mov dword ptr [edx + 0x10], eax
0xc0ee:     c6 42 14 00                        	mov byte ptr [edx + 0x14], 0
0xc0f2:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xc0f6:     0f 85 dc 00 00 00                  	jne 0xc1d8 <function_c1d8>
0xc0fc:     8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0xc0ff:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc103:     89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0xc106:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc10a:     8b 03                              	mov eax, dword ptr [ebx]
0xc10c:     c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0xc113:     89 02                              	mov dword ptr [edx], eax
0xc115:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xc118:     c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0xc11f:     89 72 04                           	mov dword ptr [edx + 4], esi
0xc122:     85 c0                              	test eax, eax
0xc124:     74 17                              	je 0xc13d <function_c0da+0x63>
0xc126:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xc12a:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xc12e:     89 2c 24                           	mov dword ptr [esp], ebp
0xc131:     e8 2a c0 00 00                     	call 0x18160 <unknown_18160>
0xc136:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc13a:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0xc13d:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xc140:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0xc144:     85 f6                              	test esi, esi
0xc146:     75 0a                              	jne 0xc152 <function_c0da+0x78>
0xc148:     eb 74                              	jmp 0xc1be <function_c1be>
; data inside code section at 0xc14a -- 0xc150
0xc14a:     8d b6 00 00 00 00                                  |......          |
0xc150:     89 df                              	mov edi, ebx
0xc152:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xc159 -- 0xc15a
0xc159:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xc15a -- 0xc15b
; data inside code section at 0xc15b -- 0xc162
0xc15b:     ff ff ff 83 f8 f0 89                               |.......         |
; function: function_c162 at 0xc162 -- 0xc163
0xc162:     c3                                 	ret 
; data inside code section at 0xc163 -- 0xc1be
0xc163:     74 20 8b 46 10 c6 43 14  00 89 43 10 80 7e 14 00   |t .F..C...C..~..|
0xc173:     74 0a 8b 46 18 c6 43 14  01 89 43 18 8b 46 1c 89   |t..F..C...C..F..|
0xc183:     43 1c 8b 06 c7 43 0c 00  00 00 00 c7 43 08 00 00   |C....C......C...|
0xc193:     00 00 89 7b 04 89 03 8b  46 0c 89 5f 08 85 c0 74   |...{....F.._...t|
0xc1a3:     13 89 5c 24 08 89 44 24  04 89 2c 24 e8 ac bf 00   |..\$..D$..,$....|
0xc1b3:     00 89 43 0c 8b 76 08 85  f6 75 92                  |..C..v...u.     |
; function: function_c1be at 0xc1be -- 0xc1d7
0xc1be:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xc1c2:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc1c9:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xc1cd:     75 18                              	jne 0xc1e7 <function_c1e7>
0xc1cf:     83 c4 3c                           	add esp, 0x3c
0xc1d2:     5b                                 	pop ebx
0xc1d3:     5e                                 	pop esi
0xc1d4:     5f                                 	pop edi
0xc1d5:     5d                                 	pop ebp
0xc1d6:     c3                                 	ret 
; data inside code section at 0xc1d7 -- 0xc1d8
0xc1d7:     90                                                 |.               |
; function: function_c1d8 at 0xc1d8 -- 0xc1e7
0xc1d8:     8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0xc1db:     c6 42 14 01                        	mov byte ptr [edx + 0x14], 1
0xc1df:     89 42 18                           	mov dword ptr [edx + 0x18], eax
0xc1e2:     e9 15 ff ff ff                     	jmp 0xc0fc
; function: function_c1e7 at 0xc1e7 -- 0xc1e8
; dynamically linked function: __stack_chk_fail at 0xc1e8 -- 0xc1e9
; data inside code section at 0xc1e9 -- 0xc1f0
0xc1e9:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xc1f0 -- 0xc1f1
; data inside code section at 0xc1f1 -- 0xc205
0xc1f1:     ff ff ff 8b 44 24 1c 89  2c 24 89 44 24 04 e8 4c   |....D$..,$.D$..L|
0xc201:     bd 00 00 e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xc205 -- 0xc206
; data inside code section at 0xc206 -- 0xc20a
0xc206:     ff ff ff 89                                        |....            |
; function: function_c20a at 0xc20a -- 0xc20b
0xc20a:     c3                                 	ret 
; data inside code section at 0xc20b -- 0xc218
0xc20b:     e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC2ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEE
; function: _ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEE at 0xc220 -- 0xc252
0xc220:     55                                 	push ebp
0xc221:     57                                 	push edi
0xc222:     56                                 	push esi
0xc223:     53                                 	push ebx
0xc224:     83 ec 4c                           	sub esp, 0x4c
0xc227:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0xc22b:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xc22f:     8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0xc233:     c7 04 24 24 00 00 00               	mov dword ptr [esp], 0x24
0xc23a:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xc23e:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xc242:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc248:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xc24c:     31 c0                              	xor eax, eax
0xc24e:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
; data inside code section at 0xc252 -- 0xc253
0xc252:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xc253 -- 0xc254
; data inside code section at 0xc254 -- 0xc278
0xc254:     ff ff ff 8b 54 24 1c 89  00 89 40 04 8b 1a 89 44   |....T$....@....D|
0xc264:     24 24 39 da 74 3d 89 c6  89 d7 66 90 c7 04 24 10   |$$9.t=....f...$.|
0xc274:     00 00 00 e8                                        |....            |
; dynamically linked function: _Znwj at 0xc278 -- 0xc279
; data inside code section at 0xc279 -- 0xc29d
0xc279:     ff ff ff 83 f8 f8 74 14  8b 53 08 89 50 08 8b 53   |......t..S..P..S|
0xc289:     0c 85 d2 89 50 0c 74 04  f0 ff 42 04 89 74 24 04   |....P.t...B..t$.|
0xc299:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0xc29d -- 0xc29e
; data inside code section at 0xc29e -- 0xc2a0
0xc29e:     ff ff                                              |..              |
; function: function_c2a0 at 0xc2a0 -- 0xc36d
0xc2a0:     ff 8b 1b 39 df 75                  	dec dword ptr [ebx + 0x75df391b]
0xc2a6:     c9                                 	leave 
0xc2a7:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xc2ab:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xc2af:     c7 40 0c 00 00 00 00               	mov dword ptr [eax + 0xc], 0
0xc2b6:     89 c2                              	mov edx, eax
0xc2b8:     c7 40 10 00 00 00 00               	mov dword ptr [eax + 0x10], 0
0xc2bf:     83 c2 08                           	add edx, 8
0xc2c2:     c7 40 1c 00 00 00 00               	mov dword ptr [eax + 0x1c], 0
0xc2c9:     83 c0 0c                           	add eax, 0xc
0xc2cc:     89 41 14                           	mov dword ptr [ecx + 0x14], eax
0xc2cf:     89 c5                              	mov ebp, eax
0xc2d1:     89 41 18                           	mov dword ptr [ecx + 0x18], eax
0xc2d4:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0xc2d8:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xc2dc:     8b 41 10                           	mov eax, dword ptr [ecx + 0x10]
0xc2df:     85 c0                              	test eax, eax
0xc2e1:     74 4f                              	je 0xc332 <function_c2a0+0x92>
0xc2e3:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xc2e7:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xc2eb:     89 14 24                           	mov dword ptr [esp], edx
0xc2ee:     e8 dd bf 00 00                     	call 0x182d0 <unknown_182d0>
0xc2f3:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xc2f7:     89 c5                              	mov ebp, eax
0xc2f9:     89 42 10                           	mov dword ptr [edx + 0x10], eax
0xc2fc:     eb 04                              	jmp 0xc302 <function_c2a0+0x62>
; data inside code section at 0xc2fe -- 0xc300
0xc2fe:     66 90                                              |f.              |
0xc300:     89 d5                              	mov ebp, edx
0xc302:     8b 55 08                           	mov edx, dword ptr [ebp + 8]
0xc305:     85 d2                              	test edx, edx
0xc307:     75 f7                              	jne 0xc300 <function_c2a0+0x60>
0xc309:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xc30d:     89 69 14                           	mov dword ptr [ecx + 0x14], ebp
0xc310:     eb 08                              	jmp 0xc31a <function_c2a0+0x7a>
; data inside code section at 0xc312 -- 0xc318
0xc312:     8d b6 00 00 00 00                                  |......          |
0xc318:     89 d0                              	mov eax, edx
0xc31a:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xc31d:     85 d2                              	test edx, edx
0xc31f:     75 f7                              	jne 0xc318 <function_c2a0+0x78>
0xc321:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xc325:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0xc329:     89 42 18                           	mov dword ptr [edx + 0x18], eax
0xc32c:     8b 41 1c                           	mov eax, dword ptr [ecx + 0x1c]
0xc32f:     89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0xc332:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc336:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xc33a:     8b 7a 14                           	mov edi, dword ptr [edx + 0x14]
0xc33d:     83 c2 0c                           	add edx, 0xc
0xc340:     8b 30                              	mov esi, dword ptr [eax]
0xc342:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xc346:     39 d7                              	cmp edi, edx
0xc348:     74 56                              	je 0xc3a0 <function_c3a0>
0xc34a:     8d b6 00 00 00 00                  	lea esi, [esi]
0xc350:     39 6c 24 20                        	cmp dword ptr [esp + 0x20], ebp
0xc354:     0f 84 f2 00 00 00                  	je 0xc44c <function_c44c>
0xc35a:     3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0xc35e:     89 75 1c                           	mov dword ptr [ebp + 0x1c], esi
0xc361:     8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0xc365:     74 03                              	je 0xc36a <function_c2a0+0xca>
0xc367:     8b 5f 1c                           	mov ebx, dword ptr [edi + 0x1c]
0xc36a:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0xc36d -- 0xc36e
0xc36d:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xc36e -- 0xc36f
; data inside code section at 0xc36f -- 0xc372
0xc36f:     ff ff ff                                           |...             |
; function: function_c372 at 0xc372 -- 0xc3a0
0xc372:     89 c7                              	mov edi, eax
0xc374:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xc378:     3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0xc37c:     74 0e                              	je 0xc38c <function_c372+0x1a>
0xc37e:     8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0xc381:     eb 09                              	jmp 0xc38c <function_c372+0x1a>
; data inside code section at 0xc383 -- 0xc388
0xc383:     90 8d 74 26 00                                     |..t&.           |
0xc388:     8b 1b                              	mov ebx, dword ptr [ebx]
0xc38a:     8b 36                              	mov esi, dword ptr [esi]
0xc38c:     39 c3                              	cmp ebx, eax
0xc38e:     75 f8                              	jne 0xc388 <function_c372+0x16>
0xc390:     89 2c 24                           	mov dword ptr [esp], ebp
0xc393:     e8 fc ff ff ff                     	call 0xc394
0xc398:     3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0xc39c:     89 c5                              	mov ebp, eax
0xc39e:     75 b0                              	jne 0xc350
; function: function_c3a0 at 0xc3a0 -- 0xc3b8
0xc3a0:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xc3a4:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xc3a8:     c7 42 04 00 00 00 00               	mov dword ptr [edx + 4], 0
0xc3af:     89 02                              	mov dword ptr [edx], eax
0xc3b1:     c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0xc3b8 -- 0xc3b9
0xc3b8:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xc3b9 -- 0xc3ba
; data inside code section at 0xc3ba -- 0xc3bc
0xc3ba:     ff ff                                              |..              |
; function: function_c3bc at 0xc3bc -- 0xc40c
0xc3bc:     ff 8b 54 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbac]
0xc3c2:     4c                                 	dec esp
0xc3c3:     24 28                              	and al, 0x28
0xc3c5:     c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0xc3cc:     c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0xc3d3:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0xc3d6:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xc3da:     c7 00 08 f2 00 00                  	mov dword ptr [eax], 0xf208
0xc3e0:     89 41 04                           	mov dword ptr [ecx + 4], eax
0xc3e3:     8b 42 08                           	mov eax, dword ptr [edx + 8]
0xc3e6:     89 41 08                           	mov dword ptr [ecx + 8], eax
0xc3e9:     8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0xc3ec:     85 c0                              	test eax, eax
0xc3ee:     89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0xc3f1:     74 04                              	je 0xc3f7 <function_c3bc+0x3b>
0xc3f3:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0xc3f7:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xc3fb:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc402:     75 2a                              	jne 0xc42e <function_c42e>
0xc404:     83 c4 4c                           	add esp, 0x4c
0xc407:     5b                                 	pop ebx
0xc408:     5e                                 	pop esi
0xc409:     5f                                 	pop edi
0xc40a:     5d                                 	pop ebp
0xc40b:     c3                                 	ret 
; data inside code section at 0xc40c -- 0xc40d
0xc40c:     89                                                 |.               |
; function: function_c40d at 0xc40d -- 0xc40e
0xc40d:     c3                                 	ret 
; data inside code section at 0xc40e -- 0xc41a
0xc40e:     8b 44 24 24 89 04 24 e8  a6 a9 00 00               |.D$$..$.....    |
; function: function_c41a at 0xc41a -- 0xc421
0xc41a:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xc41e:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xc421 -- 0xc422
0xc421:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xc422 -- 0xc423
; data inside code section at 0xc423 -- 0xc42a
0xc423:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xc42a -- 0xc42b
; data inside code section at 0xc42b -- 0xc42e
0xc42b:     ff ff ff                                           |...             |
; function: function_c42e at 0xc42e -- 0xc42f
; dynamically linked function: __stack_chk_fail at 0xc42f -- 0xc430
; data inside code section at 0xc430 -- 0xc437
0xc430:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xc437 -- 0xc438
; data inside code section at 0xc438 -- 0xc448
0xc438:     ff ff ff 8b 44 24 24 89  04 24 e8 f9 bd 00 00 e8   |....D$$..$......|
; dynamically linked function: __cxa_rethrow at 0xc448 -- 0xc449
; data inside code section at 0xc449 -- 0xc44c
0xc449:     ff ff ff                                           |...             |
; function: function_c44c at 0xc44c -- 0xc480
0xc44c:     c7 44 24 0c 20 7d 00 00            	mov dword ptr [esp + 0xc], 0x7d20 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >]"
0xc454:     c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0xc45c:     c7 44 24 04 60 34 00 00            	mov dword ptr [esp + 4], 0x3460 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0xc464:     c7 04 24 94 34 00 00               	mov dword ptr [esp], 0x3494 ; "this_map_it != _group_map.end()"
0xc46b:     e8 fc ff ff ff                     	call 0xc46c
0xc470:     89 c3                              	mov ebx, eax
0xc472:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xc476:     89 04 24                           	mov dword ptr [esp], eax
0xc479:     e8 42 a9 00 00                     	call 0x16dc0 <unknown_16dc0>
0xc47e:     eb 9a                              	jmp 0xc41a <function_c41a>
; data inside code section at 0xc480 -- 0xc481
0xc480:     89                                                 |.               |
; function: function_c481 at 0xc481 -- 0xc482
0xc481:     c3                                 	ret 
; data inside code section at 0xc482 -- 0xc48f
0xc482:     e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_ at 0xc490 -- 0xc51c
0xc490:     83 ec 4c                           	sub esp, 0x4c
0xc493:     ba 01 00 00 00                     	mov edx, 1
0xc498:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc49e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xc4a2:     31 c0                              	xor eax, eax
0xc4a4:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xc4a8:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xc4ac:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xc4b0:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xc4b4:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0xc4b8:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xc4bc:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xc4c0:     85 c0                              	test eax, eax
0xc4c2:     8d 4e 04                           	lea ecx, [esi + 4]
0xc4c5:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xc4c9:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0xc4cd:     89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0xc4d1:     0f 84 89 00 00 00                  	je 0xc560 <function_c560>
0xc4d7:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xc4db:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
0xc4e2:     e8 fc ff ff ff                     	call 0xc4e3
0xc4e7:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc4eb:     83 f8 f0                           	cmp eax, -0x10
0xc4ee:     74 15                              	je 0xc505 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_+0x75>
0xc4f0:     8b 0b                              	mov ecx, dword ptr [ebx]
0xc4f2:     c6 40 14 00                        	mov byte ptr [eax + 0x14], 0
0xc4f6:     89 48 10                           	mov dword ptr [eax + 0x10], ecx
0xc4f9:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xc4fd:     75 51                              	jne 0xc550 <function_c550>
0xc4ff:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0xc502:     89 58 1c                           	mov dword ptr [eax + 0x1c], ebx
0xc505:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xc509:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xc50d:     89 14 24                           	mov dword ptr [esp], edx
0xc510:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xc514:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xc518:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
; data inside code section at 0xc51c -- 0xc51d
0xc51c:     e8                                                 |.               |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xc51d -- 0xc51e
; data inside code section at 0xc51e -- 0xc520
0xc51e:     ff ff                                              |..              |
; function: function_c520 at 0xc520 -- 0xc550
0xc520:     ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0xc526:     46                                 	inc esi
0xc527:     14 01                              	adc al, 1
0xc529:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xc52d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc534:     89 07                              	mov dword ptr [edi], eax
0xc536:     89 f8                              	mov eax, edi
0xc538:     75 68                              	jne 0xc5a2
0xc53a:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xc53e:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xc542:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xc546:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xc54a:     83 c4 4c                           	add esp, 0x4c
0xc54d:     c2 04 00                           	ret 4
; function: function_c550 at 0xc550 -- 0xc55c
0xc550:     8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0xc553:     c6 40 14 01                        	mov byte ptr [eax + 0x14], 1
0xc557:     89 48 18                           	mov dword ptr [eax + 0x18], ecx
0xc55a:     eb a3                              	jmp 0xc4ff
; data inside code section at 0xc55c -- 0xc560
0xc55c:     8d 74 26 00                                        |.t&.            |
; function: function_c560 at 0xc560 -- 0xc5d0
0xc560:     39 cd                              	cmp ebp, ecx
0xc562:     0f 84 6f ff ff ff                  	je 0xc4d7
0xc568:     8b 03                              	mov eax, dword ptr [ebx]
0xc56a:     3b 45 10                           	cmp eax, dword ptr [ebp + 0x10]
0xc56d:     74 11                              	je 0xc580 <function_c560+0x20>
0xc56f:     0f 9c c2                           	setl dl
0xc572:     0f b6 d2                           	movzx edx, dl
0xc575:     e9 5d ff ff ff                     	jmp 0xc4d7
; data inside code section at 0xc57a -- 0xc580
0xc57a:     8d b6 00 00 00 00                                  |......          |
0xc580:     31 d2                              	xor edx, edx
0xc582:     83 f8 01                           	cmp eax, 1
0xc585:     0f 85 4c ff ff ff                  	jne 0xc4d7
0xc58b:     80 7d 14 00                        	cmp byte ptr [ebp + 0x14], 0
0xc58f:     74 1b                              	je 0xc5ac <function_c560+0x4c>
0xc591:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xc595:     74 10                              	je 0xc5a7 <function_c560+0x47>
0xc597:     8b 45 18                           	mov eax, dword ptr [ebp + 0x18]
0xc59a:     39 43 08                           	cmp dword ptr [ebx + 8], eax
0xc59d:     0f 9c c2                           	setl dl
0xc5a0:     eb d0                              	jmp 0xc572 <function_c560+0x12>
0xc5a2:     e8 fc ff ff ff                     	call 0xc5a3
0xc5a7:     e8 2a 36 00 00                     	call 0xfbd6 <unknown_fbd6>
0xc5ac:     c7 44 24 0c 40 63 00 00            	mov dword ptr [esp + 0xc], 0x6340 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xc5b4:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xc5bc:     c7 44 24 04 fc 33 00 00            	mov dword ptr [esp + 4], 0x33fc ; "/usr/include/boost/optional/optional.hpp"
0xc5c4:     c7 04 24 24 24 00 00               	mov dword ptr [esp], 0x2424 ; "this->is_initialized()"
0xc5cb:     e8 fc ff ff ff                     	call 0xc5cc
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_ at 0xc5d0 -- 0xc5ef
0xc5d0:     55                                 	push ebp
0xc5d1:     57                                 	push edi
0xc5d2:     56                                 	push esi
0xc5d3:     53                                 	push ebx
0xc5d4:     83 ec 4c                           	sub esp, 0x4c
0xc5d7:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xc5db:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc5e1:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xc5e5:     31 c0                              	xor eax, eax
0xc5e7:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xc5eb:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
; data inside code section at 0xc5ef -- 0xc5f0
0xc5ef:     8b                                                 |.               |
; function: function_c5f0 at 0xc5f0 -- 0xc734
0xc5f0:     7a 08                              	jp 0xc5fa <function_c5f0+0xa>
0xc5f2:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xc5f6:     85 ff                              	test edi, edi
; data inside code section at 0xc5f8 -- 0xc5fa
0xc5f8:     0f 84                                              |..              |
0xc5fa:     11 01                              	adc dword ptr [ecx], eax
0xc5fc:     00 00                              	add byte ptr [eax], al
0xc5fe:     8b 0b                              	mov ecx, dword ptr [ebx]
0xc600:     89 cd                              	mov ebp, ecx
0xc602:     eb 11                              	jmp 0xc615 <function_c5f0+0x25>
; data inside code section at 0xc604 -- 0xc608
0xc604:     8d 74 26 00                                        |.t&.            |
0xc608:     84 c9                              	test cl, cl
0xc60a:     74 1a                              	je 0xc626 <function_c5f0+0x36>
0xc60c:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xc60f:     85 c0                              	test eax, eax
0xc611:     74 1c                              	je 0xc62f <function_c5f0+0x3f>
0xc613:     89 c7                              	mov edi, eax
0xc615:     8b 57 10                           	mov edx, dword ptr [edi + 0x10]
0xc618:     39 d5                              	cmp ebp, edx
0xc61a:     0f 9c c1                           	setl cl
0xc61d:     39 ea                              	cmp edx, ebp
0xc61f:     75 e7                              	jne 0xc608 <function_c5f0+0x18>
0xc621:     83 fd 01                           	cmp ebp, 1
0xc624:     74 62                              	je 0xc688 <function_c5f0+0x98>
0xc626:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xc629:     31 c9                              	xor ecx, ecx
0xc62b:     85 c0                              	test eax, eax
0xc62d:     75 e4                              	jne 0xc613 <function_c5f0+0x23>
0xc62f:     89 c8                              	mov eax, ecx
0xc631:     89 e9                              	mov ecx, ebp
0xc633:     84 c0                              	test al, al
0xc635:     0f 84 cd 00 00 00                  	je 0xc708 <function_c5f0+0x118>
0xc63b:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xc63f:     3b 7a 0c                           	cmp edi, dword ptr [edx + 0xc]
0xc642:     0f 84 d1 00 00 00                  	je 0xc719 <function_c5f0+0x129>
0xc648:     89 3c 24                           	mov dword ptr [esp], edi
0xc64b:     e8 fc ff ff ff                     	call 0xc64c
0xc650:     8b 0b                              	mov ecx, dword ptr [ebx]
0xc652:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xc655:     39 d1                              	cmp ecx, edx
0xc657:     74 57                              	je 0xc6b0 <function_c5f0+0xc0>
0xc659:     39 ca                              	cmp edx, ecx
0xc65b:     0f 9c c2                           	setl dl
0xc65e:     84 d2                              	test dl, dl
0xc660:     75 6e                              	jne 0xc6d0 <function_c5f0+0xe0>
0xc662:     89 06                              	mov dword ptr [esi], eax
0xc664:     c6 46 04 00                        	mov byte ptr [esi + 4], 0
0xc668:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xc66c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc673:     89 f0                              	mov eax, esi
0xc675:     0f 85 b9 00 00 00                  	jne 0xc734 <function_c5f0+0x13f>
0xc67b:     83 c4 4c                           	add esp, 0x4c
0xc67e:     5b                                 	pop ebx
0xc67f:     5e                                 	pop esi
0xc680:     5f                                 	pop edi
0xc681:     5d                                 	pop ebp
0xc682:     c2 04 00                           	ret 4
; data inside code section at 0xc685 -- 0xc688
0xc685:     8d 76 00                                           |.v.             |
0xc688:     80 7f 14 00                        	cmp byte ptr [edi + 0x14], 0
0xc68c:     0f 84 a7 00 00 00                  	je 0xc739 <function_c739>
0xc692:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xc696:     0f 84 93 00 00 00                  	je 0xc72f <function_c5f0+0x13f>
0xc69c:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0xc69f:     39 43 08                           	cmp dword ptr [ebx + 8], eax
0xc6a2:     0f 9c c1                           	setl cl
0xc6a5:     e9 5e ff ff ff                     	jmp 0xc608 <function_c5f0+0x18>
; data inside code section at 0xc6aa -- 0xc6b0
0xc6aa:     8d b6 00 00 00 00                                  |......          |
0xc6b0:     83 f9 01                           	cmp ecx, 1
0xc6b3:     75 ad                              	jne 0xc662 <function_c5f0+0x72>
0xc6b5:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xc6b9:     74 7e                              	je 0xc739 <function_c739>
0xc6bb:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xc6bf:     74 6e                              	je 0xc72f <function_c5f0+0x13f>
0xc6c1:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0xc6c4:     39 50 18                           	cmp dword ptr [eax + 0x18], edx
0xc6c7:     0f 9c c2                           	setl dl
0xc6ca:     84 d2                              	test dl, dl
0xc6cc:     74 94                              	je 0xc662 <function_c5f0+0x72>
0xc6ce:     66 90                              	nop 
0xc6d0:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xc6d4:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xc6d8:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xc6dc:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xc6e0:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xc6e8:     89 04 24                           	mov dword ptr [esp], eax
0xc6eb:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xc6ef:     e8 6c c3 00 00                     	call 0x18a60 <unknown_18a60>
0xc6f4:     83 ec 04                           	sub esp, 4
0xc6f7:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xc6fb:     c6 46 04 01                        	mov byte ptr [esi + 4], 1
0xc6ff:     89 06                              	mov dword ptr [esi], eax
0xc701:     e9 62 ff ff ff                     	jmp 0xc668 <function_c5f0+0x78>
; data inside code section at 0xc706 -- 0xc708
0xc706:     66 90                                              |f.              |
0xc708:     89 f8                              	mov eax, edi
0xc70a:     e9 46 ff ff ff                     	jmp 0xc655 <function_c5f0+0x65>
0xc70f:     89 d7                              	mov edi, edx
0xc711:     83 c7 04                           	add edi, 4
0xc714:     e9 22 ff ff ff                     	jmp 0xc63b <function_c5f0+0x4b>
0xc719:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xc71d:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xc721:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xc725:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xc72d:     eb b9                              	jmp 0xc6e8 <function_c5f0+0xf8>
0xc72f:     e8 e2 35 00 00                     	call 0xfd16 <unknown_fd16>
; data inside code section at 0xc734 -- 0xc735
0xc734:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc735 -- 0xc736
; data inside code section at 0xc736 -- 0xc739
0xc736:     ff ff ff                                           |...             |
; function: function_c739 at 0xc739 -- 0xc758
0xc739:     c7 44 24 0c 40 63 00 00            	mov dword ptr [esp + 0xc], 0x6340 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xc741:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xc749:     c7 44 24 04 fc 33 00 00            	mov dword ptr [esp + 4], 0x33fc ; "/usr/include/boost/optional/optional.hpp"
0xc751:     c7 04 24 24 24 00 00               	mov dword ptr [esp], 0x2424 ; "this->is_initialized()"
; data inside code section at 0xc758 -- 0xc759
0xc758:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xc759 -- 0xc75a
; data inside code section at 0xc75a -- 0xc75d
0xc75a:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_ at 0xc760 -- 0xc7c3
0xc760:     83 ec 5c                           	sub esp, 0x5c
0xc763:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xc767:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xc76b:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xc76f:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xc773:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc779:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xc77d:     31 c0                              	xor eax, eax
0xc77f:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xc783:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xc787:     8d 47 04                           	lea eax, [edi + 4]
0xc78a:     39 c3                              	cmp ebx, eax
0xc78c:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xc790:     8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0xc794:     0f 84 a6 00 00 00                  	je 0xc840 <function_c840>
0xc79a:     8b 55 00                           	mov edx, dword ptr [ebp]
0xc79d:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xc7a0:     39 c2                              	cmp edx, eax
0xc7a2:     0f 84 88 00 00 00                  	je 0xc830 <function_c830>
0xc7a8:     0f 9c c1                           	setl cl
0xc7ab:     84 c9                              	test cl, cl
0xc7ad:     0f 84 5d 01 00 00                  	je 0xc910 <function_c910>
0xc7b3:     39 5f 0c                           	cmp dword ptr [edi + 0xc], ebx
0xc7b6:     0f 84 44 01 00 00                  	je 0xc900 <function_c900>
0xc7bc:     89 1c 24                           	mov dword ptr [esp], ebx
0xc7bf:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
; data inside code section at 0xc7c3 -- 0xc7c4
0xc7c3:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0xc7c4 -- 0xc7c5
; data inside code section at 0xc7c5 -- 0xc7c7
0xc7c5:     ff ff                                              |..              |
; function: function_c7c7 at 0xc7c7 -- 0xc7d3
0xc7c7:     ff 8b 54 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbac]
0xc7cd:     48                                 	dec eax
0xc7ce:     10 39                              	adc byte ptr [ecx], bh
0xc7d0:     ca 0f 84                           	retf -0x7bf1
; function: function_c7d3 at 0xc7d3 -- 0xc7de
0xc7d3:     f9                                 	stc 
0xc7d4:     00 00                              	add byte ptr [eax], al
0xc7d6:     00 39                              	add byte ptr [ecx], bh
0xc7d8:     d1 0f                              	ror dword ptr [edi], 1
0xc7da:     9c                                 	pushfd 
0xc7db:     c2 84 d2                           	ret 0xd284
; data inside code section at 0xc7de -- 0xc7e6
0xc7de:     74 67 8b 48 0c 89 6c 24                            |tg.H..l$        |
; function: function_c7e6 at 0xc7e6 -- 0xc7ee
0xc7e6:     10 85 c9 0f 84 bb                  	adc byte ptr [ebp - 0x447bf037], al
0xc7ec:     00 00                              	add byte ptr [eax], al
; data inside code section at 0xc7ee -- 0xc7ef
0xc7ee:     00                                                 |.               |
; function: function_c7ef at 0xc7ef -- 0xc806
0xc7ef:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xc7f3:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0xc7f7:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xc7fb:     89 34 24                           	mov dword ptr [esp], esi
0xc7fe:     e8 ed c3 00 00                     	call 0x18bf0 <unknown_18bf0>
0xc803:     83 ec 04                           	sub esp, 4
; function: function_c806 at 0xc806 -- 0xc82f
0xc806:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xc80a:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xc811:     89 f0                              	mov eax, esi
0xc813:     0f 85 b8 01 00 00                  	jne 0xc9d1 <function_c9d1>
0xc819:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xc81d:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xc821:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xc825:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xc829:     83 c4 5c                           	add esp, 0x5c
0xc82c:     c2 04 00                           	ret 4
; data inside code section at 0xc82f -- 0xc830
0xc82f:     90                                                 |.               |
; function: function_c830 at 0xc830 -- 0xc839
0xc830:     83 fa 01                           	cmp edx, 1
0xc833:     74 33                              	je 0xc868 <function_c868>
0xc835:     89 1e                              	mov dword ptr [esi], ebx
0xc837:     eb cd                              	jmp 0xc806 <function_c806>
; data inside code section at 0xc839 -- 0xc840
0xc839:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_c840 at 0xc840 -- 0xc866
0xc840:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xc843:     85 db                              	test ebx, ebx
0xc845:     75 49                              	jne 0xc890 <function_c890>
0xc847:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xc84b:     89 04 24                           	mov dword ptr [esp], eax
0xc84e:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xc852:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xc856:     e8 d5 c4 00 00                     	call 0x18d30 <unknown_18d30>
0xc85b:     83 ec 04                           	sub esp, 4
0xc85e:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xc862:     89 06                              	mov dword ptr [esi], eax
0xc864:     eb a0                              	jmp 0xc806 <function_c806>
; data inside code section at 0xc866 -- 0xc868
0xc866:     66 90                                              |f.              |
; function: function_c868 at 0xc868 -- 0xc88a
0xc868:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xc86c:     0f 84 8c 01 00 00                  	je 0xc9fe <function_c9fe>
0xc872:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xc876:     0f 84 7d 01 00 00                  	je 0xc9f9 <function_c9f9>
0xc87c:     8b 4b 18                           	mov ecx, dword ptr [ebx + 0x18]
0xc87f:     39 4d 08                           	cmp dword ptr [ebp + 8], ecx
0xc882:     0f 9c c1                           	setl cl
0xc885:     e9 21 ff ff ff                     	jmp 0xc7ab
; data inside code section at 0xc88a -- 0xc890
0xc88a:     8d b6 00 00 00 00                                  |......          |
; function: function_c890 at 0xc890 -- 0xc8ca
0xc890:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xc893:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xc896:     3b 55 00                           	cmp edx, dword ptr [ebp]
0xc899:     0f 84 f9 00 00 00                  	je 0xc998 <function_c998>
0xc89f:     0f 9c c2                           	setl dl
0xc8a2:     84 d2                              	test dl, dl
0xc8a4:     74 a1                              	je 0xc847
0xc8a6:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xc8aa:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xc8ae:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xc8b6:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xc8ba:     89 34 24                           	mov dword ptr [esp], esi
0xc8bd:     e8 2e c3 00 00                     	call 0x18bf0 <unknown_18bf0>
0xc8c2:     83 ec 04                           	sub esp, 4
0xc8c5:     e9 3c ff ff ff                     	jmp 0xc806 <function_c806>
; data inside code section at 0xc8ca -- 0xc8d0
0xc8ca:     8d b6 00 00 00 00                                  |......          |
; function: function_c8d0 at 0xc8d0 -- 0xc8fb
0xc8d0:     83 fa 01                           	cmp edx, 1
0xc8d3:     0f 85 6e ff ff ff                  	jne 0xc847
0xc8d9:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xc8dd:     0f 84 1b 01 00 00                  	je 0xc9fe <function_c9fe>
0xc8e3:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xc8e7:     0f 84 0c 01 00 00                  	je 0xc9f9 <function_c9f9>
0xc8ed:     8b 55 08                           	mov edx, dword ptr [ebp + 8]
0xc8f0:     39 50 18                           	cmp dword ptr [eax + 0x18], edx
0xc8f3:     0f 9c c2                           	setl dl
0xc8f6:     e9 e1 fe ff ff                     	jmp 0xc7dc
; data inside code section at 0xc8fb -- 0xc900
0xc8fb:     90 8d 74 26 00                                     |..t&.           |
; function: function_c900 at 0xc900 -- 0xc909
0xc900:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xc904:     e9 e6 fe ff ff                     	jmp 0xc7ef <function_c7ef>
; data inside code section at 0xc909 -- 0xc910
0xc909:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_c910 at 0xc910 -- 0xc935
0xc910:     39 c2                              	cmp edx, eax
0xc912:     0f 84 be 00 00 00                  	je 0xc9d6 <function_c9d6>
0xc918:     39 d0                              	cmp eax, edx
0xc91a:     0f 9c c0                           	setl al
0xc91d:     84 c0                              	test al, al
0xc91f:     0f 84 10 ff ff ff                  	je 0xc835
0xc925:     39 5f 10                           	cmp dword ptr [edi + 0x10], ebx
0xc928:     0f 84 96 00 00 00                  	je 0xc9c4 <function_c9c4>
0xc92e:     89 1c 24                           	mov dword ptr [esp], ebx
0xc931:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
; data inside code section at 0xc935 -- 0xc936
0xc935:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xc936 -- 0xc937
; data inside code section at 0xc937 -- 0xc939
0xc937:     ff ff                                              |..              |
; function: function_c939 at 0xc939 -- 0xc948
0xc939:     ff 8b 54 24 24 3b                  	dec dword ptr [ebx + 0x3b242454]
0xc93f:     50                                 	push eax
0xc940:     10 74 35 0f                        	adc byte ptr [ebp + esi + 0xf], dh
0xc944:     9c                                 	pushfd 
0xc945:     c2 84 d2                           	ret 0xd284
; function: function_c948 at 0xc948 -- 0xc975
0xc948:     0f 84 f9 fe ff ff                  	je 0xc847
0xc94e:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0xc951:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xc955:     85 d2                              	test edx, edx
0xc957:     74 62                              	je 0xc9bb <function_c9bb>
0xc959:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xc95d:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xc961:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xc965:     89 34 24                           	mov dword ptr [esp], esi
0xc968:     e8 83 c2 00 00                     	call 0x18bf0 <unknown_18bf0>
0xc96d:     83 ec 04                           	sub esp, 4
0xc970:     e9 91 fe ff ff                     	jmp 0xc806 <function_c806>
; data inside code section at 0xc975 -- 0xc978
0xc975:     8d 76 00                                           |.v.             |
; function: function_c978 at 0xc978 -- 0xc998
0xc978:     83 fa 01                           	cmp edx, 1
0xc97b:     0f 85 c6 fe ff ff                  	jne 0xc847
0xc981:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xc985:     74 77                              	je 0xc9fe <function_c9fe>
0xc987:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xc98b:     74 6c                              	je 0xc9f9 <function_c9f9>
0xc98d:     8b 50 18                           	mov edx, dword ptr [eax + 0x18]
0xc990:     39 55 08                           	cmp dword ptr [ebp + 8], edx
0xc993:     0f 9c c2                           	setl dl
0xc996:     eb ae                              	jmp 0xc946
; function: function_c998 at 0xc998 -- 0xc9bb
0xc998:     83 fa 01                           	cmp edx, 1
0xc99b:     0f 85 a6 fe ff ff                  	jne 0xc847
0xc9a1:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xc9a5:     74 57                              	je 0xc9fe <function_c9fe>
0xc9a7:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xc9ab:     74 4c                              	je 0xc9f9 <function_c9f9>
0xc9ad:     8b 55 08                           	mov edx, dword ptr [ebp + 8]
0xc9b0:     39 50 18                           	cmp dword ptr [eax + 0x18], edx
0xc9b3:     0f 9c c2                           	setl dl
0xc9b6:     e9 e7 fe ff ff                     	jmp 0xc8a2
; function: function_c9bb at 0xc9bb -- 0xc9c4
0xc9bb:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xc9bf:     e9 ea fe ff ff                     	jmp 0xc8ae
; function: function_c9c4 at 0xc9c4 -- 0xc9d1
0xc9c4:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xc9c8:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xc9cc:     e9 dd fe ff ff                     	jmp 0xc8ae
; function: function_c9d1 at 0xc9d1 -- 0xc9d2
; dynamically linked function: __stack_chk_fail at 0xc9d2 -- 0xc9d3
; data inside code section at 0xc9d3 -- 0xc9d6
0xc9d3:     ff ff ff                                           |...             |
; function: function_c9d6 at 0xc9d6 -- 0xc9f9
0xc9d6:     83 fa 01                           	cmp edx, 1
0xc9d9:     0f 85 56 fe ff ff                  	jne 0xc835
0xc9df:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xc9e3:     74 19                              	je 0xc9fe <function_c9fe>
0xc9e5:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xc9e9:     74 0e                              	je 0xc9f9 <function_c9f9>
0xc9eb:     8b 4d 08                           	mov ecx, dword ptr [ebp + 8]
0xc9ee:     39 4b 18                           	cmp dword ptr [ebx + 0x18], ecx
0xc9f1:     0f 9c c0                           	setl al
0xc9f4:     e9 24 ff ff ff                     	jmp 0xc91d
; function: function_c9f9 at 0xc9f9 -- 0xc9fe
0xc9f9:     e8 a8 34 00 00                     	call 0xfea6 <unknown_fea6>
; function: function_c9fe at 0xc9fe -- 0xca1d
0xc9fe:     c7 44 24 0c 40 63 00 00            	mov dword ptr [esp + 0xc], 0x6340 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xca06:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xca0e:     c7 44 24 04 fc 33 00 00            	mov dword ptr [esp + 4], 0x33fc ; "/usr/include/boost/optional/optional.hpp"
0xca16:     c7 04 24 24 24 00 00               	mov dword ptr [esp], 0x2424 ; "this->is_initialized()"
; data inside code section at 0xca1d -- 0xca1e
0xca1d:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xca1e -- 0xca1f
; data inside code section at 0xca1f -- 0xca22
0xca1f:     ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEj
; function: _ZNK5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEj at 0xca30 -- 0xcb20
0xca30:     55                                 	push ebp
0xca31:     57                                 	push edi
0xca32:     56                                 	push esi
0xca33:     53                                 	push ebx
0xca34:     83 ec 6c                           	sub esp, 0x6c
0xca37:     8b ac 24 80 00 00 00               	mov ebp, dword ptr [esp + 0x80]
0xca3e:     8b 9c 24 8c 00 00 00               	mov ebx, dword ptr [esp + 0x8c]
0xca45:     65 8b 35 14 00 00 00               	mov esi, dword ptr gs:[0x14]
0xca4c:     89 74 24 5c                        	mov dword ptr [esp + 0x5c], esi
0xca50:     31 f6                              	xor esi, esi
0xca52:     8b 94 24 88 00 00 00               	mov edx, dword ptr [esp + 0x88]
0xca59:     8b 45 04                           	mov eax, dword ptr [ebp + 4]
0xca5c:     89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0xca60:     0f b6 9c 24 84 00 00 00            	movzx ebx, byte ptr [esp + 0x84]
0xca68:     85 c0                              	test eax, eax
0xca6a:     88 5c 24 26                        	mov byte ptr [esp + 0x26], bl
0xca6e:     0f 84 88 05 00 00                  	je 0xcffc <function_cffc>
0xca74:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xca77:     83 f8 01                           	cmp eax, 1
0xca7a:     0f 85 7c 05 00 00                  	jne 0xcffc <function_cffc>
0xca80:     8b 45 00                           	mov eax, dword ptr [ebp]
0xca83:     8b 1a                              	mov ebx, dword ptr [edx]
0xca85:     85 c0                              	test eax, eax
0xca87:     0f 84 65 05 00 00                  	je 0xcff2 <function_cff2>
0xca8d:     8b 00                              	mov eax, dword ptr [eax]
0xca8f:     85 c0                              	test eax, eax
0xca91:     0f 84 60 05 00 00                  	je 0xcff7 <function_cff7>
0xca97:     39 c3                              	cmp ebx, eax
0xca99:     0f 84 89 00 00 00                  	je 0xcb28 <function_cb28>
0xca9f:     8b 74 24 1c                        	mov esi, dword ptr [esp + 0x1c]
0xcaa3:     85 f6                              	test esi, esi
0xcaa5:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xcaa8:     0f 94 44 24 27                     	sete byte ptr [esp + 0x27]
0xcaad:     85 f6                              	test esi, esi
0xcaaf:     0f 84 29 01 00 00                  	je 0xcbde <function_cbde>
0xcab5:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0xcabd:     8b 06                              	mov eax, dword ptr [esi]
0xcabf:     89 34 24                           	mov dword ptr [esp], esi
0xcac2:     ff 50 0c                           	call dword ptr [eax + 0xc]
0xcac5:     8b 7b 08                           	mov edi, dword ptr [ebx + 8]
0xcac8:     80 7c 24 26 00                     	cmp byte ptr [esp + 0x26], 0
0xcacd:     0f 84 ad 00 00 00                  	je 0xcb80 <function_cb80>
0xcad3:     85 ff                              	test edi, edi
0xcad5:     0f 84 fe 02 00 00                  	je 0xcdd9 <function_cdd9>
0xcadb:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xcade:     3b 47 14                           	cmp eax, dword ptr [edi + 0x14]
0xcae1:     0f 84 a1 00 00 00                  	je 0xcb88 <function_cb88>
0xcae7:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcaeb:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcaef:     8b 10                              	mov edx, dword ptr [eax]
0xcaf1:     89 d0                              	mov eax, edx
0xcaf3:     c1 f8 1f                           	sar eax, 0x1f
0xcaf6:     31 d0                              	xor eax, edx
0xcaf8:     83 f8 13                           	cmp eax, 0x13
0xcafb:     0f 86 07 01 00 00                  	jbe 0xcc08 <function_cc08>
0xcb01:     c7 44 24 0c e0 5a 00 00            	mov dword ptr [esp + 0xc], 0x5ae0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0xcb09:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xcb11:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xcb19:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xcb20 -- 0xcb21
0xcb20:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xcb21 -- 0xcb22
; data inside code section at 0xcb22 -- 0xcb28
0xcb22:     ff ff ff 8d 76 00                                  |....v.          |
; function: function_cb28 at 0xcb28 -- 0xcb44
0xcb28:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0xcb2c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xcb33:     89 5d 08                           	mov dword ptr [ebp + 8], ebx
0xcb36:     0f 85 e4 04 00 00                  	jne 0xd020 <function_d020>
0xcb3c:     83 c4 6c                           	add esp, 0x6c
0xcb3f:     5b                                 	pop ebx
0xcb40:     5e                                 	pop esi
0xcb41:     5f                                 	pop edi
0xcb42:     5d                                 	pop ebp
0xcb43:     c3                                 	ret 
; data inside code section at 0xcb44 -- 0xcb5b
0xcb44:     85 d2 0f 88 f5 03 00 00  8b 54 24 14 8b 42 08 85   |.........T$..B..|
0xcb54:     c0 0f 84 f8 03 00 00                               |.......         |
; function: function_cb5b at 0xcb5b -- 0xcb5c
; data inside code section at 0xcb5c -- 0xcb63
0xcb5c:     40 04 85 c0 0f 94 c0                               |@......         |
; function: function_cb63 at 0xcb63 -- 0xcb64
; data inside code section at 0xcb64 -- 0xcb7d
0xcb64:     c0 0f 85 e8 03 00 00 83  44 24 14 0c 8b 44 24 14   |........D$...D$.|
0xcb74:     3b 47 14 0f 85 6e ff ff  ff                        |;G...n...       |
; function: function_cb7d at 0xcb7d -- 0xcb7e
; data inside code section at 0xcb7e -- 0xcb80
0xcb7e:     7b 08                                              |{.              |
; function: function_cb80 at 0xcb80 -- 0xcb88
0xcb80:     85 ff                              	test edi, edi
0xcb82:     0f 84 51 02 00 00                  	je 0xcdd9
; function: function_cb88 at 0xcb88 -- 0xcbde
0xcb88:     0f b6 7f 04                        	movzx edi, byte ptr [edi + 4]
0xcb8c:     8b 06                              	mov eax, dword ptr [esi]
0xcb8e:     89 34 24                           	mov dword ptr [esp], esi
0xcb91:     ff 50 10                           	call dword ptr [eax + 0x10]
0xcb94:     89 fa                              	mov edx, edi
0xcb96:     84 d2                              	test dl, dl
0xcb98:     74 7e                              	je 0xcc18 <function_cc18>
0xcb9a:     8b 1b                              	mov ebx, dword ptr [ebx]
0xcb9c:     8b 45 00                           	mov eax, dword ptr [ebp]
0xcb9f:     85 c0                              	test eax, eax
0xcba1:     0f 84 4b 04 00 00                  	je 0xcff2 <function_cff2>
0xcba7:     8b 00                              	mov eax, dword ptr [eax]
0xcba9:     85 c0                              	test eax, eax
0xcbab:     0f 84 46 04 00 00                  	je 0xcff7 <function_cff7>
0xcbb1:     39 d8                              	cmp eax, ebx
0xcbb3:     0f 84 6f ff ff ff                  	je 0xcb28 <function_cb28>
0xcbb9:     83 44 24 18 01                     	add dword ptr [esp + 0x18], 1
0xcbbe:     8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0xcbc2:     39 74 24 1c                        	cmp dword ptr [esp + 0x1c], esi
0xcbc6:     77 0b                              	ja 0xcbd3 <function_cb88+0x4b>
0xcbc8:     80 7c 24 27 00                     	cmp byte ptr [esp + 0x27], 0
0xcbcd:     0f 84 55 ff ff ff                  	je 0xcb28 <function_cb28>
0xcbd3:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xcbd6:     85 f6                              	test esi, esi
0xcbd8:     0f 85 df fe ff ff                  	jne 0xcabd
; function: function_cbde at 0xcbde -- 0xcbfd
0xcbde:     c7 44 24 0c 00 58 00 00            	mov dword ptr [esp + 0xc], 0x5800 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>&]"
0xcbe6:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xcbee:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xcbf6:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xcbfd -- 0xcbfe
0xcbfd:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xcbfe -- 0xcbff
; data inside code section at 0xcbff -- 0xcc08
0xcbff:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_cc08 at 0xcc08 -- 0xcc0f
0xcc08:     ff 24 85 a8 d0 00 00               	jmp dword ptr [eax*4 + 0xd0a8]
; data inside code section at 0xcc0f -- 0xcc18
0xcc0f:     90 e8 5b ff ff ff 8d 76  00                        |..[....v.       |
; function: function_cc18 at 0xcc18 -- 0xcce2
0xcc18:     8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0xcc1b:     85 c9                              	test ecx, ecx
0xcc1d:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0xcc21:     0f 84 b2 01 00 00                  	je 0xcdd9 <function_cdd9>
0xcc27:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0xcc2b:     8b 45 00                           	mov eax, dword ptr [ebp]
0xcc2e:     83 c6 44                           	add esi, 0x44
0xcc31:     85 c0                              	test eax, eax
0xcc33:     89 74 24 20                        	mov dword ptr [esp + 0x20], esi
0xcc37:     0f 84 b5 03 00 00                  	je 0xcff2 <function_cff2>
0xcc3d:     8b 00                              	mov eax, dword ptr [eax]
0xcc3f:     85 c0                              	test eax, eax
0xcc41:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcc45:     0f 84 ac 03 00 00                  	je 0xcff7 <function_cff7>
0xcc4b:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xcc4f:     39 d3                              	cmp ebx, edx
0xcc51:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xcc55:     0f 84 29 04 00 00                  	je 0xd084 <function_d084>
0xcc5b:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xcc5f:     8b 71 10                           	mov esi, dword ptr [ecx + 0x10]
0xcc62:     85 f6                              	test esi, esi
0xcc64:     0f 84 f6 03 00 00                  	je 0xd060
0xcc6a:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xcc6e:     83 c1 0c                           	add ecx, 0xc
0xcc71:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xcc75:     89 cf                              	mov edi, ecx
0xcc77:     8b 50 44                           	mov edx, dword ptr [eax + 0x44]
0xcc7a:     89 f0                              	mov eax, esi
0xcc7c:     eb 12                              	jmp 0xcc90 <function_cc18+0x78>
; data inside code section at 0xcc7e -- 0xcc80
0xcc7e:     66 90                                              |f.              |
0xcc80:     39 d1                              	cmp ecx, edx
0xcc82:     0f 9c c1                           	setl cl
0xcc85:     84 c9                              	test cl, cl
0xcc87:     74 13                              	je 0xcc9c <function_cc18+0x84>
0xcc89:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xcc8c:     85 c0                              	test eax, eax
0xcc8e:     74 15                              	je 0xcca5 <function_cc18+0x8d>
0xcc90:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0xcc93:     39 ca                              	cmp edx, ecx
0xcc95:     75 e9                              	jne 0xcc80 <function_cc18+0x68>
0xcc97:     83 fa 01                           	cmp edx, 1
0xcc9a:     74 4c                              	je 0xcce8 <function_cce8>
0xcc9c:     89 c7                              	mov edi, eax
0xcc9e:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xcca1:     85 c0                              	test eax, eax
0xcca3:     75 eb                              	jne 0xcc90 <function_cc18+0x78>
0xcca5:     39 7c 24 2c                        	cmp dword ptr [esp + 0x2c], edi
0xcca9:     0f 84 b1 03 00 00                  	je 0xd060
0xccaf:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xccb2:     39 d0                              	cmp eax, edx
0xccb4:     0f 9c c1                           	setl cl
0xccb7:     39 c2                              	cmp edx, eax
0xccb9:     74 5d                              	je 0xcd18 <function_cd18>
0xccbb:     84 c9                              	test cl, cl
0xccbd:     0f 84 6e 02 00 00                  	je 0xcf31 <function_cf31>
0xccc3:     c7 44 24 0c 20 5f 00 00            	mov dword ptr [esp + 0xc], 0x5f20 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0xcccb:     c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0xccd3:     c7 44 24 04 60 34 00 00            	mov dword ptr [esp + 4], 0x3460 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0xccdb:     c7 04 24 18 35 00 00               	mov dword ptr [esp], 0x3518 ; "weakly_equivalent(map_it->first, key)"
; data inside code section at 0xcce2 -- 0xcce3
0xcce2:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xcce3 -- 0xcce4
; data inside code section at 0xcce4 -- 0xcce8
0xcce4:     ff ff ff 90                                        |....            |
; function: function_cce8 at 0xcce8 -- 0xcd12
0xcce8:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xccec:     80 79 04 00                        	cmp byte ptr [ecx + 4], 0
0xccf0:     0f 84 2f 03 00 00                  	je 0xd025 <function_d025>
0xccf6:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xccfa:     0f 84 49 03 00 00                  	je 0xd049 <function_d049>
0xcd00:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xcd04:     8b 49 08                           	mov ecx, dword ptr [ecx + 8]
0xcd07:     39 48 18                           	cmp dword ptr [eax + 0x18], ecx
0xcd0a:     0f 9c c1                           	setl cl
0xcd0d:     e9 73 ff ff ff                     	jmp 0xcc85
; data inside code section at 0xcd12 -- 0xcd18
0xcd12:     8d b6 00 00 00 00                                  |......          |
; function: function_cd18 at 0xcd18 -- 0xcd2d
0xcd18:     83 fa 01                           	cmp edx, 1
0xcd1b:     0f 84 e7 00 00 00                  	je 0xce08 <function_ce08>
0xcd21:     83 f8 01                           	cmp eax, 1
0xcd24:     74 4d                              	je 0xcd73 <function_cd73>
0xcd26:     3b 5f 1c                           	cmp ebx, dword ptr [edi + 0x1c]
0xcd29:     74 77                              	je 0xcda2 <function_cda2>
0xcd2b:     8b 33                              	mov esi, dword ptr [ebx]
; function: function_cd2d at 0xcd2d -- 0xcd30
0xcd2d:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xcd30 -- 0xcd31
0xcd30:     e8                                                 |.               |
; dynamically linked function: _ZNSt8__detail15_List_node_base9_M_unhookEv at 0xcd31 -- 0xcd32
; data inside code section at 0xcd32 -- 0xcd46
0xcd32:     ff ff ff 8d 43 0c 89 04  24 e8 c0 41 00 00 89 1c   |....C...$..A....|
0xcd42:     24 89 f3 e8                                        |$...            |
; dynamically linked function: _ZdlPv at 0xcd46 -- 0xcd47
; data inside code section at 0xcd47 -- 0xcd4a
0xcd47:     ff ff ff                                           |...             |
; function: function_cd4a at 0xcd4a -- 0xcd4f
0xcd4a:     e9 4d fe ff ff                     	jmp 0xcb9c
; function: function_cd4f at 0xcd4f -- 0xcd73
0xcd4f:     85 d2                              	test edx, edx
0xcd51:     0f 88 05 02 00 00                  	js 0xcf5c <function_cf5c>
0xcd57:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xcd5b:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xcd5e:     85 c0                              	test eax, eax
0xcd60:     0f 84 07 02 00 00                  	je 0xcf6d <function_cf6d>
0xcd66:     8b 10                              	mov edx, dword ptr [eax]
0xcd68:     89 04 24                           	mov dword ptr [esp], eax
0xcd6b:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xcd6e:     e9 f0 fd ff ff                     	jmp 0xcb63 <function_cb63>
; function: function_cd73 at 0xcd73 -- 0xcda2
0xcd73:     80 7f 14 00                        	cmp byte ptr [edi + 0x14], 0
0xcd77:     0f 84 a8 02 00 00                  	je 0xd025 <function_d025>
0xcd7d:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xcd81:     80 78 48 00                        	cmp byte ptr [eax + 0x48], 0
0xcd85:     0f 84 be 02 00 00                  	je 0xd049 <function_d049>
0xcd8b:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xcd8f:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0xcd92:     39 41 4c                           	cmp dword ptr [ecx + 0x4c], eax
0xcd95:     0f 9c c0                           	setl al
0xcd98:     84 c0                              	test al, al
0xcd9a:     0f 85 23 ff ff ff                  	jne 0xccc3
0xcda0:     eb 84                              	jmp 0xcd26
; function: function_cda2 at 0xcda2 -- 0xcdd9
0xcda2:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xcda6:     8b 0b                              	mov ecx, dword ptr [ebx]
0xcda8:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xcdac:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xcdb0:     89 f0                              	mov eax, esi
0xcdb2:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xcdb6:     eb 12                              	jmp 0xcdca <function_cda2+0x28>
0xcdb8:     0f 9c c1                           	setl cl
0xcdbb:     84 c9                              	test cl, cl
0xcdbd:     74 15                              	je 0xcdd4 <function_cda2+0x32>
0xcdbf:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xcdc3:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xcdc6:     85 c0                              	test eax, eax
0xcdc8:     74 6e                              	je 0xce38 <function_ce38>
0xcdca:     3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0xcdcd:     75 e9                              	jne 0xcdb8 <function_cda2+0x16>
0xcdcf:     83 fa 01                           	cmp edx, 1
0xcdd2:     74 0c                              	je 0xcde0 <function_cde0>
0xcdd4:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xcdd7:     eb ed                              	jmp 0xcdc6 <function_cda2+0x24>
; function: function_cdd9 at 0xcdd9 -- 0xcde0
0xcdd9:     e8 94 32 00 00                     	call 0x10072 <unknown_10072>
0xcdde:     66 90                              	nop 
; function: function_cde0 at 0xcde0 -- 0xce07
0xcde0:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xcde4:     0f 84 3b 02 00 00                  	je 0xd025 <function_d025>
0xcdea:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xcdee:     80 79 04 00                        	cmp byte ptr [ecx + 4], 0
0xcdf2:     0f 84 51 02 00 00                  	je 0xd049 <function_d049>
0xcdf8:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xcdfc:     8b 48 18                           	mov ecx, dword ptr [eax + 0x18]
0xcdff:     39 4b 08                           	cmp dword ptr [ebx + 8], ecx
0xce02:     0f 9c c1                           	setl cl
0xce05:     eb b4                              	jmp 0xcdbb
; data inside code section at 0xce07 -- 0xce08
0xce07:     90                                                 |.               |
; function: function_ce08 at 0xce08 -- 0xce32
0xce08:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xce0c:     80 79 48 00                        	cmp byte ptr [ecx + 0x48], 0
0xce10:     0f 84 0f 02 00 00                  	je 0xd025 <function_d025>
0xce16:     80 7f 14 00                        	cmp byte ptr [edi + 0x14], 0
0xce1a:     0f 84 29 02 00 00                  	je 0xd049 <function_d049>
0xce20:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xce24:     8b 49 4c                           	mov ecx, dword ptr [ecx + 0x4c]
0xce27:     39 4f 18                           	cmp dword ptr [edi + 0x18], ecx
0xce2a:     0f 9c c1                           	setl cl
0xce2d:     e9 89 fe ff ff                     	jmp 0xccbb
; data inside code section at 0xce32 -- 0xce38
0xce32:     8d b6 00 00 00 00                                  |......          |
; function: function_ce38 at 0xce38 -- 0xce9c
0xce38:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xce3c:     39 44 24 34                        	cmp dword ptr [esp + 0x34], eax
0xce40:     8b 5c 24 10                        	mov ebx, dword ptr [esp + 0x10]
0xce44:     74 0b                              	je 0xce51 <function_ce38+0x19>
0xce46:     8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0xce4a:     8b 49 1c                           	mov ecx, dword ptr [ecx + 0x1c]
0xce4d:     89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0xce51:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xce55:     39 44 24 38                        	cmp dword ptr [esp + 0x38], eax
0xce59:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xce5d:     0f 84 64 01 00 00                  	je 0xcfc7 <function_cfc7>
0xce63:     8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0xce67:     eb 17                              	jmp 0xce80 <function_ce38+0x48>
; data inside code section at 0xce69 -- 0xce70
0xce69:     8d b4 26 00 00 00 00                               |..&....         |
0xce70:     39 d0                              	cmp eax, edx
0xce72:     0f 9c c0                           	setl al
0xce75:     84 c0                              	test al, al
0xce77:     74 13                              	je 0xce8c <function_ce38+0x54>
0xce79:     8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0xce7c:     85 f6                              	test esi, esi
0xce7e:     74 38                              	je 0xceb8
0xce80:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xce83:     39 c2                              	cmp edx, eax
0xce85:     75 e9                              	jne 0xce70 <function_ce38+0x38>
0xce87:     83 fa 01                           	cmp edx, 1
0xce8a:     74 0c                              	je 0xce98 <function_ce38+0x60>
0xce8c:     89 f1                              	mov ecx, esi
0xce8e:     8b 76 08                           	mov esi, dword ptr [esi + 8]
0xce91:     eb e9                              	jmp 0xce7c <function_ce38+0x44>
; data inside code section at 0xce93 -- 0xce98
0xce93:     90 8d 74 26 00                                     |..t&.           |
0xce98:     80 7f 04 00                        	cmp byte ptr [edi + 4], 0
; data inside code section at 0xce9c -- 0xce9e
0xce9c:     0f 84                                              |..              |
; function: function_ce9e at 0xce9e -- 0xcf31
0xce9e:     83 01 00                           	add dword ptr [ecx], 0
0xcea1:     00 80 7e 14 00 0f                  	add byte ptr [eax + 0xf00147e], al
0xcea7:     84 9d 01 00 00 8b                  	test byte ptr [ebp - 0x74ffffff], bl
0xcead:     47                                 	inc edi
0xceae:     08 39                              	or byte ptr [ecx], bh
0xceb0:     46                                 	inc esi
0xceb1:     18 0f                              	sbb byte ptr [edi], cl
0xceb3:     9c                                 	pushfd 
0xceb4:     c0 eb be                           	shr bl, 0xbe
0xceb7:     90                                 	nop 
0xceb8:     3b 4c 24 2c                        	cmp ecx, dword ptr [esp + 0x2c]
0xcebc:     74 14                              	je 0xced2 <function_ce9e+0x34>
0xcebe:     3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0xcec1:     0f 84 d1 00 00 00                  	je 0xcf98 <function_cf98>
0xcec7:     0f 9c c0                           	setl al
0xceca:     84 c0                              	test al, al
0xcecc:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0xced0:     74 53                              	je 0xcf25 <function_ce9e+0x87>
0xced2:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xced6:     89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0xceda:     c6 44 24 50 00                     	mov byte ptr [esp + 0x50], 0
0xcedf:     80 78 48 00                        	cmp byte ptr [eax + 0x48], 0
0xcee3:     74 0c                              	je 0xcef1 <function_ce9e+0x53>
0xcee5:     8b 40 4c                           	mov eax, dword ptr [eax + 0x4c]
0xcee8:     c6 44 24 50 01                     	mov byte ptr [esp + 0x50], 1
0xceed:     89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0xcef1:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcef5:     8d 74 24 4c                        	lea esi, [esp + 0x4c]
0xcef9:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xcefd:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xcf01:     c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
0xcf09:     83 c0 08                           	add eax, 8
0xcf0c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xcf10:     8d 44 24 3c                        	lea eax, [esp + 0x3c]
0xcf14:     89 04 24                           	mov dword ptr [esp], eax
0xcf17:     e8 74 c2 00 00                     	call 0x19190 <unknown_19190>
0xcf1c:     8b 33                              	mov esi, dword ptr [ebx]
0xcf1e:     83 ec 04                           	sub esp, 4
0xcf21:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xcf25:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xcf29:     89 51 1c                           	mov dword ptr [ecx + 0x1c], edx
0xcf2c:     e9 fc fd ff ff                     	jmp 0xcd2d <function_cd2d>
; function: function_cf31 at 0xcf31 -- 0xcf41
0xcf31:     39 c2                              	cmp edx, eax
0xcf33:     0f 84 e8 fd ff ff                  	je 0xcd21
0xcf39:     0f 9c c0                           	setl al
0xcf3c:     e9 57 fe ff ff                     	jmp 0xcd98
; function: function_cf41 at 0xcf41 -- 0xcf5c
0xcf41:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xcf45:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0xcf48:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xcf4b:     85 c0                              	test eax, eax
0xcf4d:     0f 85 08 fc ff ff                  	jne 0xcb5b <function_cb5b>
0xcf53:     c6 47 04 00                        	mov byte ptr [edi + 4], 0
0xcf57:     e9 21 fc ff ff                     	jmp 0xcb7d <function_cb7d>
; function: function_cf5c at 0xcf5c -- 0xcf6d
0xcf5c:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xcf60:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0xcf63:     8b 00                              	mov eax, dword ptr [eax]
0xcf65:     85 c0                              	test eax, eax
0xcf67:     0f 85 f9 fd ff ff                  	jne 0xcd66
; function: function_cf6d at 0xcf6d -- 0xcf8c
0xcf6d:     c7 44 24 0c 60 5a 00 00            	mov dword ptr [esp + 0xc], 0x5a60 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0xcf75:     c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0xcf7d:     c7 44 24 04 ec 34 00 00            	mov dword ptr [esp + 4], 0x34ec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0xcf85:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xcf8c -- 0xcf8d
0xcf8c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xcf8d -- 0xcf8e
; data inside code section at 0xcf8e -- 0xcf98
0xcf8e:     ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_cf98 at 0xcf98 -- 0xcfc7
0xcf98:     83 fa 01                           	cmp edx, 1
0xcf9b:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0xcf9f:     75 84                              	jne 0xcf25
0xcfa1:     80 79 14 00                        	cmp byte ptr [ecx + 0x14], 0
0xcfa5:     74 7e                              	je 0xd025 <function_d025>
0xcfa7:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0xcfab:     80 7e 48 00                        	cmp byte ptr [esi + 0x48], 0
0xcfaf:     0f 84 94 00 00 00                  	je 0xd049 <function_d049>
0xcfb5:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xcfb9:     8b 71 18                           	mov esi, dword ptr [ecx + 0x18]
0xcfbc:     39 70 4c                           	cmp dword ptr [eax + 0x4c], esi
0xcfbf:     0f 9c c0                           	setl al
0xcfc2:     e9 03 ff ff ff                     	jmp 0xceca
; function: function_cfc7 at 0xcfc7 -- 0xcfce
0xcfc7:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xcfcb:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0xcfce -- 0xcfcf
0xcfce:     e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0xcfcf -- 0xcfd0
; data inside code section at 0xcfd0 -- 0xcfe1
0xcfd0:     ff ff ff 80 78 14 00 74  04 c6 40 14 00 89 04 24   |....x..t..@....$|
0xcfe0:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xcfe1 -- 0xcfe2
; data inside code section at 0xcfe2 -- 0xcfe4
0xcfe2:     ff ff                                              |..              |
; function: function_cfe4 at 0xcfe4 -- 0xcff2
0xcfe4:     ff 8b 74 24 14 83                  	dec dword ptr [ebx - 0x7cebdb8c]
0xcfea:     6e                                 	outsb dx, byte ptr [esi]
0xcfeb:     1c 01                              	sbb al, 1
0xcfed:     e9 39 fd ff ff                     	jmp 0xcd2b
; function: function_cff2 at 0xcff2 -- 0xcff7
0xcff2:     e8 47 30 00 00                     	call 0x1003e <unknown_1003e>
; function: function_cff7 at 0xcff7 -- 0xcffc
0xcff7:     e8 aa 30 00 00                     	call 0x100a6 <unknown_100a6>
; function: function_cffc at 0xcffc -- 0xd020
0xcffc:     c7 44 24 0c a0 53 00 00            	mov dword ptr [esp + 0xc], 0x53a0 ; "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = void, T1 = CCryptoKeyStore*, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(CCryptoKeyStore*)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >]"
0xd004:     c7 44 24 08 ae 01 00 00            	mov dword ptr [esp + 8], 0x1ae
0xd00c:     c7 44 24 04 b4 34 00 00            	mov dword ptr [esp + 4], 0x34b4 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0xd014:     c7 04 24 c4 24 00 00               	mov dword ptr [esp], 0x24c4 ; "_shared_state.unique()"
0xd01b:     e8 fc ff ff ff                     	call 0xd01c
; function: function_d020 at 0xd020 -- 0xd021
; dynamically linked function: __stack_chk_fail at 0xd021 -- 0xd022
; data inside code section at 0xd022 -- 0xd025
0xd022:     ff ff ff                                           |...             |
; function: function_d025 at 0xd025 -- 0xd044
0xd025:     c7 44 24 0c 40 63 00 00            	mov dword ptr [esp + 0xc], 0x6340 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xd02d:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xd035:     c7 44 24 04 fc 33 00 00            	mov dword ptr [esp + 4], 0x33fc ; "/usr/include/boost/optional/optional.hpp"
0xd03d:     c7 04 24 24 24 00 00               	mov dword ptr [esp], 0x2424 ; "this->is_initialized()"
; data inside code section at 0xd044 -- 0xd045
0xd044:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xd045 -- 0xd046
; data inside code section at 0xd046 -- 0xd049
0xd046:     ff ff ff                                           |...             |
; function: function_d049 at 0xd049 -- 0xd07f
0xd049:     e8 28 31 00 00                     	call 0x10176 <unknown_10176>
0xd04e:     89 c3                              	mov ebx, eax
0xd050:     8b 06                              	mov eax, dword ptr [esi]
0xd052:     89 34 24                           	mov dword ptr [esp], esi
0xd055:     ff 50 10                           	call dword ptr [eax + 0x10]
0xd058:     89 1c 24                           	mov dword ptr [esp], ebx
0xd05b:     e8 fc ff ff ff                     	call 0xd05c
0xd060:     c7 44 24 0c 20 5f 00 00            	mov dword ptr [esp + 0xc], 0x5f20 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0xd068:     c7 44 24 08 96 00 00 00            	mov dword ptr [esp + 8], 0x96
0xd070:     c7 44 24 04 60 34 00 00            	mov dword ptr [esp + 4], 0x3460 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0xd078:     c7 04 24 ed 24 00 00               	mov dword ptr [esp], 0x24ed ; "map_it != _group_map.end()"
; data inside code section at 0xd07f -- 0xd080
0xd07f:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xd080 -- 0xd081
; data inside code section at 0xd081 -- 0xd084
0xd081:     ff ff ff                                           |...             |
; function: function_d084 at 0xd084 -- 0xd0a8
0xd084:     c7 44 24 0c 20 5f 00 00            	mov dword ptr [esp + 0xc], 0x5f20 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0xd08c:     c7 44 24 08 94 00 00 00            	mov dword ptr [esp + 8], 0x94
0xd094:     c7 44 24 04 60 34 00 00            	mov dword ptr [esp + 4], 0x3460 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0xd09c:     c7 04 24 db 24 00 00               	mov dword ptr [esp], 0x24db ; "it != _list.end()"
0xd0a3:     e8 fc ff ff ff                     	call 0xd0a4
; section: .text._ZNK5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEE
; function: _ZNK5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEE at 0xd100 -- 0xd12d
0xd100:     83 ec 4c                           	sub esp, 0x4c
0xd103:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xd107:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xd10b:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xd10f:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xd113:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xd117:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xd11b:     8d 6b 0c                           	lea ebp, [ebx + 0xc]
0xd11e:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd124:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd128:     31 c0                              	xor eax, eax
0xd12a:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xd12d -- 0xd12e
0xd12d:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xd12e -- 0xd12f
; data inside code section at 0xd12f -- 0xd14a
0xd12f:     ff ff ff 8b 33 85 f6 0f  84 18 01 00 00 8b 06 85   |....3...........|
0xd13f:     c0 0f 84 09 01 00 00 39  c7 74 2e                  |.......9.t.     |
; function: function_d14a at 0xd14a -- 0xd14b
; data inside code section at 0xd14b -- 0xd14e
0xd14b:     2c 24 e8                                           |,$.             |
; dynamically linked function: pthread_mutex_unlock at 0xd14e -- 0xd14f
; data inside code section at 0xd14f -- 0xd151
0xd14f:     ff ff                                              |..              |
; function: function_d151 at 0xd151 -- 0xd177
0xd151:     ff 8b 54 24 2c 65                  	dec dword ptr [ebx + 0x652c2454]
0xd157:     33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xd15d:     0f 85 f6 00 00 00                  	jne 0xd259 <function_d259>
0xd163:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xd167:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xd16b:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xd16f:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xd173:     83 c4 4c                           	add esp, 0x4c
0xd176:     c3                                 	ret 
; data inside code section at 0xd177 -- 0xd193
0xd177:     90 8b 43 04 85 c0 74 0c  8b 40 04 83 f8 01 0f 84   |..C...t..@......|
0xd187:     95 00 00 00 c7 04 24 10  00 00 00 e8               |......$.....    |
; dynamically linked function: _Znwj at 0xd193 -- 0xd194
; data inside code section at 0xd194 -- 0xd196
0xd194:     ff ff                                              |..              |
; function: function_d196 at 0xd196 -- 0xd259
0xd196:     ff 89 44 24 1c 89                  	dec dword ptr [ecx - 0x76e3dbbc]
0xd19c:     7c 24                              	jl 0xd1c2 <function_d196+0x2c>
0xd19e:     08 89 74 24 04 89                  	or byte ptr [ecx - 0x76fbdb8c], cl
0xd1a4:     04 24                              	add al, 0x24
0xd1a6:     e8 75 c1 00 00                     	call 0x19320 <unknown_19320>
0xd1ab:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0xd1af:     85 ff                              	test edi, edi
0xd1b1:     74 0c                              	je 0xd1bf <function_d196+0x23>
0xd1b3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xd1b7:     3b 03                              	cmp eax, dword ptr [ebx]
0xd1b9:     0f 84 9f 00 00 00                  	je 0xd25e <function_d25e>
; data inside code section at 0xd1bf -- 0xd1c2
0xd1bf:     8b 44 24                                           |.D$             |
0xd1c2:     1c c7                              	sbb al, 0xc7
0xd1c4:     44                                 	inc esp
0xd1c5:     24 24                              	and al, 0x24
0xd1c7:     00 00                              	add byte ptr [eax], al
0xd1c9:     00 00                              	add byte ptr [eax], al
0xd1cb:     c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
0xd1d2:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd1d6:     e8 fc ff ff ff                     	call 0xd1d7
0xd1db:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xd1df:     c7 00 28 f2 00 00                  	mov dword ptr [eax], 0xf228
0xd1e5:     c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0xd1ec:     c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0xd1f3:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0xd1f6:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xd1fa:     8b 0b                              	mov ecx, dword ptr [ebx]
0xd1fc:     89 13                              	mov dword ptr [ebx], edx
0xd1fe:     8b 53 04                           	mov edx, dword ptr [ebx + 4]
0xd201:     89 43 04                           	mov dword ptr [ebx + 4], eax
0xd204:     8d 44 24 24                        	lea eax, [esp + 0x24]
0xd208:     89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0xd20c:     89 04 24                           	mov dword ptr [esp], eax
0xd20f:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xd213:     e8 b8 43 00 00                     	call 0x115d0 <unknown_115d0>
0xd218:     8b 03                              	mov eax, dword ptr [ebx]
0xd21a:     85 c0                              	test eax, eax
0xd21c:     74 36                              	je 0xd254 <function_d196+0xbe>
0xd21e:     8b 38                              	mov edi, dword ptr [eax]
0xd220:     85 ff                              	test edi, edi
0xd222:     74 2b                              	je 0xd24f <function_d196+0xb9>
0xd224:     8b 07                              	mov eax, dword ptr [edi]
0xd226:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0xd22e:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0xd236:     89 1c 24                           	mov dword ptr [esp], ebx
0xd239:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xd23d:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xd241:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xd245:     e8 e6 c8 00 00                     	call 0x19b30 <unknown_19b30>
0xd24a:     e9 fb fe ff ff                     	jmp 0xd14a <function_d14a>
0xd24f:     e8 22 35 00 00                     	call 0x10776 <unknown_10776>
0xd254:     e8 b5 34 00 00                     	call 0x1070e <unknown_1070e>
; function: function_d259 at 0xd259 -- 0xd25a
; dynamically linked function: __stack_chk_fail at 0xd25a -- 0xd25b
; data inside code section at 0xd25b -- 0xd25e
0xd25b:     ff ff ff                                           |...             |
; function: function_d25e at 0xd25e -- 0xd27d
0xd25e:     c7 44 24 0c 80 80 00 00            	mov dword ptr [esp + 0xc], 0x8080 ; "void boost::shared_ptr<T>::reset(Y*) [with Y = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>::invocation_state, T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>::invocation_state]"
0xd266:     c7 44 24 08 87 01 00 00            	mov dword ptr [esp + 8], 0x187
0xd26e:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xd276:     c7 04 24 08 25 00 00               	mov dword ptr [esp], 0x2508 ; "p == 0 || p != px"
; data inside code section at 0xd27d -- 0xd27e
0xd27d:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xd27e -- 0xd27f
; data inside code section at 0xd27f -- 0xd286
0xd27f:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xd286 -- 0xd287
; data inside code section at 0xd287 -- 0xd297
0xd287:     ff ff ff 8b 44 24 1c 89  04 24 e8 0a be 00 00 e8   |....D$...$......|
; dynamically linked function: __cxa_rethrow at 0xd297 -- 0xd298
; data inside code section at 0xd298 -- 0xd29c
0xd298:     ff ff ff 89                                        |....            |
; function: function_d29c at 0xd29c -- 0xd29d
0xd29c:     c3                                 	ret 
; function: function_d29d at 0xd29d -- 0xd29e
; data inside code section at 0xd29e -- 0xd2a1
0xd29e:     2c 24 e8                                           |,$.             |
; dynamically linked function: pthread_mutex_unlock at 0xd2a1 -- 0xd2a2
; data inside code section at 0xd2a2 -- 0xd2a9
0xd2a2:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xd2a9 -- 0xd2aa
; data inside code section at 0xd2aa -- 0xd2ae
0xd2aa:     ff ff ff 89                                        |....            |
; function: function_d2ae at 0xd2ae -- 0xd2af
0xd2ae:     c3                                 	ret 
; data inside code section at 0xd2af -- 0xd2b7
0xd2af:     8b 44 24 1c 89 04 24 e8                            |.D$...$.        |
; dynamically linked function: _ZdlPv at 0xd2b7 -- 0xd2b8
; data inside code section at 0xd2b8 -- 0xd2bb
0xd2b8:     ff ff ff                                           |...             |
; function: function_d2bb at 0xd2bb -- 0xd2bd
0xd2bb:     eb e0                              	jmp 0xd29d <function_d29d>
; data inside code section at 0xd2bd -- 0xd2be
0xd2bd:     89                                                 |.               |
; function: function_d2be at 0xd2be -- 0xd2bf
0xd2be:     c3                                 	ret 
; data inside code section at 0xd2bf -- 0xd2c0
0xd2bf:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xd2c0 -- 0xd2c1
; data inside code section at 0xd2c1 -- 0xd2c4
0xd2c1:     ff ff ff                                           |...             |
; function: function_d2c4 at 0xd2c4 -- 0xd2c6
0xd2c4:     eb d7                              	jmp 0xd29d <function_d29d>
; section: .text._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE at 0xd2d0 -- 0xd316
0xd2d0:     83 ec 4c                           	sub esp, 0x4c
0xd2d3:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xd2d7:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0xd2db:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xd2df:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xd2e3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd2e9:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd2ed:     31 c0                              	xor eax, eax
0xd2ef:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xd2f3:     83 fd 0a                           	cmp ebp, 0xa
0xd2f6:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xd2fa:     89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0xd2fe:     76 1f                              	jbe 0xd31f <function_d31f>
0xd300:     81 fd 55 55 55 15                  	cmp ebp, 0x15555555
0xd306:     0f 87 09 01 00 00                  	ja 0xd415 <function_d415>
0xd30c:     8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0xd310:     c1 e0 02                           	shl eax, 2
0xd313:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd316 -- 0xd317
0xd316:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd317 -- 0xd318
; data inside code section at 0xd318 -- 0xd31f
0xd318:     ff ff ff 89 44 24 1c                               |....D$.         |
; function: function_d31f at 0xd31f -- 0xd36b
0xd31f:     8b 83 80 00 00 00                  	mov eax, dword ptr [ebx + 0x80]
0xd325:     8b 73 7c                           	mov esi, dword ptr [ebx + 0x7c]
0xd328:     8d 04 40                           	lea eax, [eax + eax*2]
0xd32b:     8d 04 86                           	lea eax, [esi + eax*4]
0xd32e:     39 c6                              	cmp esi, eax
0xd330:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xd334:     74 66                              	je 0xd39c <function_d39c>
0xd336:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0xd33a:     85 ff                              	test edi, edi
0xd33c:     74 52                              	je 0xd390 <function_d390>
0xd33e:     8b 16                              	mov edx, dword ptr [esi]
0xd340:     89 d0                              	mov eax, edx
0xd342:     c1 f8 1f                           	sar eax, 0x1f
0xd345:     31 d0                              	xor eax, edx
0xd347:     83 f8 13                           	cmp eax, 0x13
0xd34a:     76 7c                              	jbe 0xd3c8 <function_d3c8>
0xd34c:     c7 44 24 0c 40 6f 00 00            	mov dword ptr [esp + 0xc], 0x6f40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xd354:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xd35c:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xd364:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xd36b -- 0xd36c
0xd36b:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xd36c -- 0xd36d
; data inside code section at 0xd36d -- 0xd377
0xd36d:     ff ff ff 85 d2 8b 46 04  78 7e                     |......F.x~      |
; function: function_d377 at 0xd377 -- 0xd378
; data inside code section at 0xd378 -- 0xd382
0xd378:     10 89 04 24 ff 52 0c 89  47 04                     |...$.R..G.      |
; function: function_d382 at 0xd382 -- 0xd383
; data inside code section at 0xd383 -- 0xd385
0xd383:     06 89                                              |..              |
; function: function_d385 at 0xd385 -- 0xd388
0xd385:     c2 c1 fa                           	ret 0xfac1
; data inside code section at 0xd388 -- 0xd390
0xd388:     1f 31 d0 89 07 8d 76 00                            |.1....v.        |
; function: function_d390 at 0xd390 -- 0xd39c
0xd390:     83 c6 0c                           	add esi, 0xc
0xd393:     83 c7 0c                           	add edi, 0xc
0xd396:     39 74 24 18                        	cmp dword ptr [esp + 0x18], esi
0xd39a:     75 9e                              	jne 0xd33a
; function: function_d39c at 0xd39c -- 0xd3c1
0xd39c:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xd3a0:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd3a7:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xd3ab:     75 63                              	jne 0xd410 <function_d410>
0xd3ad:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xd3b1:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xd3b5:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xd3b9:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xd3bd:     83 c4 4c                           	add esp, 0x4c
0xd3c0:     c3                                 	ret 
; data inside code section at 0xd3c1 -- 0xd3c8
0xd3c1:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_d3c8 at 0xd3c8 -- 0xd3cf
0xd3c8:     ff 24 85 60 d4 00 00               	jmp dword ptr [eax*4 + 0xd460]
; data inside code section at 0xd3cf -- 0xd3d0
0xd3cf:     90                                                 |.               |
; function: function_d3d0 at 0xd3d0 -- 0xd410
0xd3d0:     e8 bb ff ff ff                     	call 0xd390 <function_d390>
0xd3d5:     8d 76 00                           	lea esi, [esi]
0xd3d8:     85 d2                              	test edx, edx
0xd3da:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xd3dd:     8d 76 00                           	lea esi, [esi]
0xd3e0:     78 1a                              	js 0xd3fc <function_d3d0+0x2c>
0xd3e2:     89 47 04                           	mov dword ptr [edi + 4], eax
0xd3e5:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xd3e8:     85 c0                              	test eax, eax
0xd3ea:     89 47 08                           	mov dword ptr [edi + 8], eax
0xd3ed:     74 93                              	je 0xd382 <function_d382>
0xd3ef:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0xd3f3:     eb 8d                              	jmp 0xd382 <function_d382>
0xd3f5:     8b 00                              	mov eax, dword ptr [eax]
0xd3f7:     e9 7b ff ff ff                     	jmp 0xd377 <function_d377>
0xd3fc:     8b 10                              	mov edx, dword ptr [eax]
0xd3fe:     89 57 04                           	mov dword ptr [edi + 4], edx
0xd401:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xd404:     85 c0                              	test eax, eax
0xd406:     89 47 08                           	mov dword ptr [edi + 8], eax
0xd409:     75 e4                              	jne 0xd3ef <function_d3d0+0x1f>
0xd40b:     e9 72 ff ff ff                     	jmp 0xd382 <function_d382>
; function: function_d410 at 0xd410 -- 0xd411
; dynamically linked function: __stack_chk_fail at 0xd411 -- 0xd412
; data inside code section at 0xd412 -- 0xd415
0xd412:     ff ff ff                                           |...             |
; function: function_d415 at 0xd415 -- 0xd416
; dynamically linked function: _ZSt17__throw_bad_allocv at 0xd416 -- 0xd417
; data inside code section at 0xd417 -- 0xd41a
0xd417:     ff ff ff                                           |...             |
; function: function_d41a at 0xd41a -- 0xd437
0xd41a:     89 04 24                           	mov dword ptr [esp], eax
0xd41d:     e8 fc ff ff ff                     	call 0xd41e
0xd422:     8b 74 24 1c                        	mov esi, dword ptr [esp + 0x1c]
0xd426:     39 f7                              	cmp edi, esi
0xd428:     74 0d                              	je 0xd437 <function_d41a+0x1b>
0xd42a:     89 34 24                           	mov dword ptr [esp], esi
0xd42d:     e8 3e 8a 00 00                     	call 0x15e70 <unknown_15e70>
0xd432:     83 c6 0c                           	add esi, 0xc
0xd435:     eb ef                              	jmp 0xd426 <function_d41a+0xc>
; data inside code section at 0xd437 -- 0xd438
0xd437:     e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0xd438 -- 0xd439
; data inside code section at 0xd439 -- 0xd43f
0xd439:     ff ff ff 89 c6 e8                                  |......          |
; dynamically linked function: __cxa_end_catch at 0xd43f -- 0xd440
; data inside code section at 0xd440 -- 0xd45b
0xd440:     ff ff ff 8b 44 24 1c 89  6c 24 08 89 1c 24 89 44   |....D$..l$...$.D|
0xd450:     24 04 e8 b9 29 00 00 89  34 24 e8                  |$...)...4$.     |
; dynamically linked function: _Unwind_Resume at 0xd45b -- 0xd45c
; data inside code section at 0xd45c -- 0xd45f
0xd45c:     ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSA_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISR_EEEEEEvT_
; function: _ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSA_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISR_EEEEEEvT_ at 0xd4b0 -- 0xd520
0xd4b0:     81 ec 8c 00 00 00                  	sub esp, 0x8c
0xd4b6:     89 5c 24 7c                        	mov dword ptr [esp + 0x7c], ebx
0xd4ba:     8b 9c 24 90 00 00 00               	mov ebx, dword ptr [esp + 0x90]
0xd4c1:     89 b4 24 80 00 00 00               	mov dword ptr [esp + 0x80], esi
0xd4c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd4ce:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0xd4d2:     31 c0                              	xor eax, eax
0xd4d4:     89 ac 24 88 00 00 00               	mov dword ptr [esp + 0x88], ebp
0xd4db:     8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0xd4e2:     8b 73 10                           	mov esi, dword ptr [ebx + 0x10]
0xd4e5:     3b 73 14                           	cmp esi, dword ptr [ebx + 0x14]
0xd4e8:     89 bc 24 84 00 00 00               	mov dword ptr [esp + 0x84], edi
0xd4ef:     74 57                              	je 0xd548 <function_d548>
0xd4f1:     89 f7                              	mov edi, esi
0xd4f3:     8b 17                              	mov edx, dword ptr [edi]
0xd4f5:     89 d0                              	mov eax, edx
0xd4f7:     c1 f8 1f                           	sar eax, 0x1f
0xd4fa:     31 d0                              	xor eax, edx
0xd4fc:     83 f8 13                           	cmp eax, 0x13
0xd4ff:     76 7f                              	jbe 0xd580 <function_d580>
0xd501:     c7 44 24 0c 80 6a 00 00            	mov dword ptr [esp + 0xc], 0x6a80 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0xd509:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xd511:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xd519:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xd520 -- 0xd521
0xd520:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xd521 -- 0xd522
; data inside code section at 0xd522 -- 0xd525
0xd522:     ff ff ff                                           |...             |
; function: function_d525 at 0xd525 -- 0xd526
; data inside code section at 0xd526 -- 0xd53f
0xd526:     5c 24 64 85 db 74 1b 8b  03 85 c0 74 08 8b 10 89   |\$d..t.....t....|
0xd536:     04 24 ff 52 04 89 1c 24  e8                        |.$.R...$.       |
; dynamically linked function: _ZdlPv at 0xd53f -- 0xd540
; data inside code section at 0xd540 -- 0xd548
0xd540:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_d548 at 0xd548 -- 0xd579
0xd548:     8b 4c 24 6c                        	mov ecx, dword ptr [esp + 0x6c]
0xd54c:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xd553:     0f 85 67 08 00 00                  	jne 0xddc0 <function_ddc0>
0xd559:     8b 5c 24 7c                        	mov ebx, dword ptr [esp + 0x7c]
0xd55d:     8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0xd564:     8b bc 24 84 00 00 00               	mov edi, dword ptr [esp + 0x84]
0xd56b:     8b ac 24 88 00 00 00               	mov ebp, dword ptr [esp + 0x88]
0xd572:     81 c4 8c 00 00 00                  	add esp, 0x8c
0xd578:     c3                                 	ret 
; data inside code section at 0xd579 -- 0xd580
0xd579:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_d580 at 0xd580 -- 0xd587
0xd580:     ff 24 85 bc e0 00 00               	jmp dword ptr [eax*4 + 0xe0bc]
; data inside code section at 0xd587 -- 0xd5b0
0xd587:     90 8d 44 24 30 e8 9f ff  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd597:     00 85 d2 0f 88 40 03 00  00 8b 4f 08 89 fa 29 f2   |.....@....O...).|
0xd5a7:     c7 44 24 44 00 00 00 00  89                        |.D$D.....       |
; function: function_d5b0 at 0xd5b0 -- 0xd5b1
; data inside code section at 0xd5b1 -- 0xd5c7
0xd5b1:     24 20 85 c9 89 4c 24 48  0f 84 09 03 00 00 8b 41   |$ ...L$H.......A|
0xd5c1:     04 85 c0 74 0a 89                                  |...t..          |
; function: function_d5c7 at 0xd5c7 -- 0xd5ca
0xd5c7:     c2 42 f0                           	ret 0xf042
; data inside code section at 0xd5ca -- 0xd5f0
0xd5ca:     0f b1 51 04 75 f2 85 c0  0f 84 e8 02 00 00 8b 54   |..Q.u..........T|
0xd5da:     24 20 8b 44 16 04 89 4c  24 68 89 44 24 44 89 44   |$ .D...L$h.D$D.D|
0xd5ea:     24 64 f0 ff 41 04                                  |$d..A.          |
; function: function_d5f0 at 0xd5f0 -- 0xd604
0xd5f0:     8d 44 24 48                        	lea eax, [esp + 0x48]
0xd5f4:     c7 44 24 60 00 00 00 00            	mov dword ptr [esp + 0x60], 0
0xd5fc:     89 04 24                           	mov dword ptr [esp], eax
0xd5ff:     e8 7c 43 00 00                     	call 0x11980 <unknown_11980>
; function: function_d604 at 0xd604 -- 0xd635
0xd604:     8b 17                              	mov edx, dword ptr [edi]
0xd606:     89 d0                              	mov eax, edx
0xd608:     c1 f8 1f                           	sar eax, 0x1f
0xd60b:     31 d0                              	xor eax, edx
0xd60d:     83 f8 13                           	cmp eax, 0x13
0xd610:     0f 86 92 01 00 00                  	jbe 0xd7a8 <function_d7a8>
0xd616:     c7 44 24 0c e0 5a 00 00            	mov dword ptr [esp + 0xc], 0x5ae0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0xd61e:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xd626:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xd62e:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xd635 -- 0xd636
0xd635:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xd636 -- 0xd637
; data inside code section at 0xd637 -- 0xd639
0xd637:     ff ff                                              |..              |
; function: function_d639 at 0xd639 -- 0xd697
0xd639:     ff 8d b6 00 00 00                  	dec dword ptr [ebp + 0xb6]
0xd63f:     00 85 d2 8b 47 04                  	add byte ptr [ebp + 0x4478bd2], al
0xd645:     0f 88 fd 02 00 00                  	js 0xd948
0xd64b:     85 c0                              	test eax, eax
0xd64d:     0f 84 9c 08 00 00                  	je 0xdeef <function_deef>
0xd653:     8b 10                              	mov edx, dword ptr [eax]
0xd655:     8d 4c 24 54                        	lea ecx, [esp + 0x54]
0xd659:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xd65d:     89 0c 24                           	mov dword ptr [esp], ecx
0xd660:     ff 52 08                           	call dword ptr [edx + 8]
0xd663:     83 ec 04                           	sub esp, 4
0xd666:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0xd66a:     8b 10                              	mov edx, dword ptr [eax]
0xd66c:     89 04 24                           	mov dword ptr [esp], eax
0xd66f:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xd672:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0xd676:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0xd67a:     c7 44 24 60 01 00 00 00            	mov dword ptr [esp + 0x60], 1
0xd682:     85 c0                              	test eax, eax
0xd684:     0f 84 7a ff ff ff                  	je 0xd604 <function_d604>
0xd68a:     8b 10                              	mov edx, dword ptr [eax]
0xd68c:     89 04 24                           	mov dword ptr [esp], eax
0xd68f:     ff 52 04                           	call dword ptr [edx + 4]
0xd692:     e9 6d ff ff ff                     	jmp 0xd604 <function_d604>
; data inside code section at 0xd697 -- 0xd79e
0xd697:     90 8d 44 24 30 e8 8f fe  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd6a7:     00 8d 44 24 30 e8 7f fe  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd6b7:     00 8d 44 24 30 e8 6f fe  ff ff 8d b4 26 00 00 00   |..D$0.o.....&...|
0xd6c7:     00 8d 44 24 30 e8 5f fe  ff ff 8d b4 26 00 00 00   |..D$0._.....&...|
0xd6d7:     00 8d 44 24 30 e8 4f fe  ff ff 8d b4 26 00 00 00   |..D$0.O.....&...|
0xd6e7:     00 8d 44 24 30 e8 3f fe  ff ff 8d b4 26 00 00 00   |..D$0.?.....&...|
0xd6f7:     00 8d 44 24 30 e8 2f fe  ff ff 8d b4 26 00 00 00   |..D$0./.....&...|
0xd707:     00 8d 44 24 30 e8 1f fe  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd717:     00 8d 44 24 30 e8 0f fe  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd727:     00 8d 44 24 30 e8 ff fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd737:     00 8d 44 24 30 e8 ef fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd747:     00 8d 44 24 30 e8 df fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd757:     00 8d 44 24 30 e8 cf fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd767:     00 8d 44 24 30 e8 bf fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd777:     00 8d 44 24 30 e8 af fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd787:     00 8d 44 24 30 e8 9f fd  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0xd797:     00 8d 44 24 30 e8 8f                               |..D$0..         |
; function: function_d79e at 0xd79e -- 0xd79f
0xd79e:     fd                                 	std 
; data inside code section at 0xd79f -- 0xd7a8
0xd79f:     ff ff 8d b4 26 00 00 00  00                        |....&....       |
; function: function_d7a8 at 0xd7a8 -- 0xd7af
0xd7a8:     ff 24 85 0c e1 00 00               	jmp dword ptr [eax*4 + 0xe10c]
; data inside code section at 0xd7af -- 0xd7bd
0xd7af:     e8 3c fe ff ff e8 37 fe  ff ff e8 32 fe ff         |.<....7....2..  |
; function: function_d7bd at 0xd7bd -- 0xd7c0
0xd7bd:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; data inside code section at 0xd7c0 -- 0xd7d2
0xd7c0:     e8 2b fe ff ff e8 26 fe  ff ff e8 21 fe ff ff 90   |.+....&....!....|
0xd7d0:     e8 1b                                              |..              |
; function: function_d7d2 at 0xd7d2 -- 0xd7d3
; data inside code section at 0xd7d3 -- 0xd800
0xd7d3:     ff ff e8 16 fe ff ff e8  11 fe ff ff 90 e8 0b fe   |................|
0xd7e3:     ff ff e8 06 fe ff ff e8  01 fe ff ff 90 e8 fb fd   |................|
0xd7f3:     ff ff e8 f6 fd ff ff e8  f1 fd ff ff 90            |.............   |
; function: function_d800 at 0xd800 -- 0xd801
; function: function_d801 at 0xd801 -- 0xd803
0xd801:     eb fd                              	jmp 0xd800 <function_d800>
; data inside code section at 0xd803 -- 0xd806
0xd803:     ff ff e8                                           |...             |
; function: function_d806 at 0xd806 -- 0xd808
0xd806:     e6 fd                              	out 0xfd, al
; data inside code section at 0xd808 -- 0xd809
0xd808:     ff                                                 |.               |
; function: function_d809 at 0xd809 -- 0xd8b6
0xd809:     ff 85 d2 8b 47 04                  	inc dword ptr [ebp + 0x4478bd2]
0xd80f:     0f 88 90 04 00 00                  	js 0xdca5 <function_dca5>
0xd815:     85 c0                              	test eax, eax
0xd817:     0f 84 f6 06 00 00                  	je 0xdf13 <function_df13>
0xd81d:     8b 10                              	mov edx, dword ptr [eax]
0xd81f:     8d 4c 24 60                        	lea ecx, [esp + 0x60]
0xd823:     89 04 24                           	mov dword ptr [esp], eax
0xd826:     89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0xd82a:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xd82d:     84 c0                              	test al, al
0xd82f:     0f 85 90 05 00 00                  	jne 0xddc5 <function_ddc5>
0xd835:     8b 85 80 00 00 00                  	mov eax, dword ptr [ebp + 0x80]
0xd83b:     3b 45 78                           	cmp eax, dword ptr [ebp + 0x78]
0xd83e:     0f 84 6c 02 00 00                  	je 0xdab0
0xd844:     8d 14 40                           	lea edx, [eax + eax*2]
0xd847:     c1 e2 02                           	shl edx, 2
0xd84a:     03 55 7c                           	add edx, dword ptr [ebp + 0x7c]
0xd84d:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xd851:     0f 84 69 03 00 00                  	je 0xdbc0
0xd857:     8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0xd85b:     8d 4c 24 60                        	lea ecx, [esp + 0x60]
0xd85f:     89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0xd863:     89 d0                              	mov eax, edx
0xd865:     c1 f8 1f                           	sar eax, 0x1f
0xd868:     31 d0                              	xor eax, edx
0xd86a:     83 f8 13                           	cmp eax, 0x13
0xd86d:     0f 86 35 01 00 00                  	jbe 0xd9a8 <function_d9a8>
0xd873:     c7 44 24 0c 40 6f 00 00            	mov dword ptr [esp + 0xc], 0x6f40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xd87b:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xd883:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xd88b:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
0xd892:     e8 fc ff ff ff                     	call 0xd893
0xd897:     90                                 	nop 
0xd898:     85 d2                              	test edx, edx
0xd89a:     0f 88 f0 03 00 00                  	js 0xdc90 <function_dc90>
0xd8a0:     8b 57 08                           	mov edx, dword ptr [edi + 8]
0xd8a3:     31 c0                              	xor eax, eax
0xd8a5:     85 d2                              	test edx, edx
0xd8a7:     74 03                              	je 0xd8ac <function_d809+0xa3>
0xd8a9:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xd8ac:     85 c0                              	test eax, eax
0xd8ae:     0f 94 c0                           	sete al
0xd8b1:     e9 77 ff ff ff                     	jmp 0xd82d <function_d809+0x24>
; function: function_d8b6 at 0xd8b6 -- 0xd8dd
0xd8b6:     e8 35 fd ff ff                     	call 0xd5f0 <function_d5f0>
0xd8bb:     90                                 	nop 
0xd8bc:     8d 74 26 00                        	lea esi, [esi]
0xd8c0:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0xd8c8:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0xd8cc:     c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0xd8d4:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0xd8d8:     e9 13 fd ff ff                     	jmp 0xd5f0 <function_d5f0>
; data inside code section at 0xd8dd -- 0xd906
0xd8dd:     8d 76 00 8b 4f 04 c7 44  24 4c 00 00 00 00 89 4c   |.v..O..D$L.....L|
0xd8ed:     24 20 8b 49 04 85 c9 89  4c 24 50 0f 84 98 00 00   |$ .I....L$P.....|
0xd8fd:     00 8b 41 04 85 c0 74 0a  89                        |..A...t..       |
; function: function_d906 at 0xd906 -- 0xd909
0xd906:     c2 42 f0                           	ret 0xf042
; data inside code section at 0xd909 -- 0xd90a
0xd909:     0f                                                 |.               |
; function: function_d90a at 0xd90a -- 0xd9a8
0xd90a:     b1 51                              	mov cl, 0x51
0xd90c:     04 75                              	add al, 0x75
0xd90e:     f2 85 c0                           	test eax, eax
0xd911:     74 7b                              	je 0xd98e <function_d90a+0x84>
0xd913:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xd917:     8b 02                              	mov eax, dword ptr [edx]
0xd919:     89 4c 24 68                        	mov dword ptr [esp + 0x68], ecx
0xd91d:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xd921:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0xd925:     f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0xd929:     8d 44 24 50                        	lea eax, [esp + 0x50]
0xd92d:     c7 44 24 60 00 00 00 00            	mov dword ptr [esp + 0x60], 0
0xd935:     89 04 24                           	mov dword ptr [esp], eax
0xd938:     e8 43 40 00 00                     	call 0x11980 <unknown_11980>
0xd93d:     e9 c2 fc ff ff                     	jmp 0xd604 <function_d604>
; data inside code section at 0xd942 -- 0xd98e
0xd942:     8d b6 00 00 00 00 8b 00  85 c0 0f 84 27 05 00 00   |............'...|
0xd952:     8b 10 89 44 24 04 8d 44  24 58 89 04 24 ff 52 08   |...D$..D$X..$.R.|
0xd962:     83 ec 04 8b 44 24 58 8b  10 89 04 24 ff 52 0c 89   |....D$X....$.R..|
0xd972:     44 24 64 8b 44 24 58 c7  44 24 60 01 00 00 00 85   |D$d.D$X.D$`.....|
0xd982:     c0 0f 85 01 fd ff ff e9  76 fc ff ff               |........v...    |
0xd98e:     c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0xd996:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0xd99a:     c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0xd9a2:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0xd9a6:     eb 81                              	jmp 0xd929 <function_d90a+0x1f>
; function: function_d9a8 at 0xd9a8 -- 0xd9af
0xd9a8:     ff 24 85 5c e1 00 00               	jmp dword ptr [eax*4 + 0xe15c]
; data inside code section at 0xd9af -- 0xd9bd
0xd9af:     e8 bc fb ff ff e8 b7 fb  ff ff e8 b2 fb ff         |..............  |
; function: function_d9bd at 0xd9bd -- 0xd9c0
0xd9bd:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; data inside code section at 0xd9c0 -- 0xda1a
0xd9c0:     e8 ab fb ff ff e8 a6 fb  ff ff e8 a1 fb ff ff 90   |................|
0xd9d0:     e8 9b fb ff ff e8 96 fb  ff ff e8 91 fb ff ff 90   |................|
0xd9e0:     e8 8b fb ff ff e8 86 fb  ff ff e8 81 fb ff ff 90   |................|
0xd9f0:     e8 7b fb ff ff e8 76 fb  ff ff e8 71 fb ff ff 90   |.{....v....q....|
0xda00:     e8 6b fb ff ff e8 66 fb  ff ff 85 d2 8b 44 24 64   |.k....f......D$d|
0xda10:     0f 88 e7 03 00 00 8b 10  89 04                     |..........      |
; function: function_da1a at 0xda1a -- 0xda7c
0xda1a:     24 ff                              	and al, 0xff
0xda1c:     52                                 	push edx
0xda1d:     0c 8b                              	or al, 0x8b
0xda1f:     54                                 	push esp
0xda20:     24 24                              	and al, 0x24
0xda22:     89 42 04                           	mov dword ptr [edx + 4], eax
0xda25:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xda29:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xda2d:     8b 02                              	mov eax, dword ptr [edx]
0xda2f:     89 c2                              	mov edx, eax
0xda31:     c1 fa 1f                           	sar edx, 0x1f
0xda34:     31 d0                              	xor eax, edx
0xda36:     89 01                              	mov dword ptr [ecx], eax
0xda38:     8b 85 80 00 00 00                  	mov eax, dword ptr [ebp + 0x80]
0xda3e:     83 c0 01                           	add eax, 1
0xda41:     89 85 80 00 00 00                  	mov dword ptr [ebp + 0x80], eax
0xda47:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xda4b:     8b 10                              	mov edx, dword ptr [eax]
0xda4d:     89 d0                              	mov eax, edx
0xda4f:     c1 f8 1f                           	sar eax, 0x1f
0xda52:     31 d0                              	xor eax, edx
0xda54:     83 f8 13                           	cmp eax, 0x13
0xda57:     0f 86 70 01 00 00                  	jbe 0xdbcd <function_dbcd>
0xda5d:     c7 44 24 0c e0 63 00 00            	mov dword ptr [esp + 0xc], 0x63e0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xda65:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xda6d:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xda75:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xda7c -- 0xda7d
0xda7c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xda7d -- 0xda7e
; data inside code section at 0xda7e -- 0xda80
0xda7e:     ff ff                                              |..              |
; function: function_da80 at 0xda80 -- 0xdaa5
0xda80:     ff 85 d2 8b 44 24                  	inc dword ptr [ebp + 0x24448bd2]
0xda86:     64 0f 88 8d 03 00 00               	js 0xde1a <function_de1a>
0xda8d:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xda91:     89 42 04                           	mov dword ptr [edx + 4], eax
0xda94:     8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0xda98:     85 c0                              	test eax, eax
0xda9a:     89 42 08                           	mov dword ptr [edx + 8], eax
0xda9d:     74 86                              	je 0xda25
0xda9f:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0xdaa3:     eb 80                              	jmp 0xda25
; data inside code section at 0xdaa5 -- 0xdaaa
0xdaa5:     e8 c6 fa ff ff                                     |.....           |
; function: function_daaa at 0xdaaa -- 0xdb31
0xdaaa:     8d b6 00 00 00 00                  	lea esi, [esi]
0xdab0:     83 f8 09                           	cmp eax, 9
0xdab3:     0f 86 9f 04 00 00                  	jbe 0xdf58 <function_df58>
0xdab9:     8d 50 01                           	lea edx, [eax + 1]
0xdabc:     39 d0                              	cmp eax, edx
0xdabe:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xdac2:     0f 83 8b 04 00 00                  	jae 0xdf53 <function_df53>
0xdac8:     c1 e0 02                           	shl eax, 2
0xdacb:     39 d0                              	cmp eax, edx
0xdacd:     0f 42 c2                           	cmovb eax, edx
0xdad0:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xdad4:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xdad8:     8d 44 24 5f                        	lea eax, [esp + 0x5f]
0xdadc:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xdae0:     8d 44 24 60                        	lea eax, [esp + 0x60]
0xdae4:     89 2c 24                           	mov dword ptr [esp], ebp
0xdae7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xdaeb:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xdaef:     e8 8c cc 00 00                     	call 0x1a780 <unknown_1a780>
0xdaf4:     8b 55 7c                           	mov edx, dword ptr [ebp + 0x7c]
0xdaf7:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xdafb:     85 d2                              	test edx, edx
0xdafd:     74 37                              	je 0xdb36 <function_db36>
0xdaff:     8b 45 78                           	mov eax, dword ptr [ebp + 0x78]
0xdb02:     83 f8 09                           	cmp eax, 9
0xdb05:     0f 86 34 03 00 00                  	jbe 0xde3f <function_de3f>
0xdb0b:     39 ea                              	cmp edx, ebp
0xdb0d:     0f 84 23 03 00 00                  	je 0xde36 <function_de36>
0xdb13:     8b 8d 80 00 00 00                  	mov ecx, dword ptr [ebp + 0x80]
0xdb19:     39 c8                              	cmp eax, ecx
0xdb1b:     0f 82 1e 03 00 00                  	jb 0xde3f <function_de3f>
0xdb21:     85 c9                              	test ecx, ecx
0xdb23:     0f 85 6e 02 00 00                  	jne 0xdd97 <function_dd97>
0xdb29:     83 f8 0a                           	cmp eax, 0xa
0xdb2c:     76 08                              	jbe 0xdb36 <function_db36>
0xdb2e:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0xdb31 -- 0xdb32
0xdb31:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xdb32 -- 0xdb33
; data inside code section at 0xdb33 -- 0xdb36
0xdb33:     ff ff ff                                           |...             |
; function: function_db36 at 0xdb36 -- 0xdbcd
0xdb36:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xdb3a:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xdb3e:     89 45 7c                           	mov dword ptr [ebp + 0x7c], eax
0xdb41:     8b 85 80 00 00 00                  	mov eax, dword ptr [ebp + 0x80]
0xdb47:     89 55 78                           	mov dword ptr [ebp + 0x78], edx
0xdb4a:     39 d0                              	cmp eax, edx
0xdb4c:     0f 87 88 04 00 00                  	ja 0xdfda <function_dfda>
0xdb52:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xdb56:     39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0xdb5a:     0f 87 56 04 00 00                  	ja 0xdfb6 <function_dfb6>
0xdb60:     3b 44 24 28                        	cmp eax, dword ptr [esp + 0x28]
0xdb64:     0f 84 e9 03 00 00                  	je 0xdf53 <function_df53>
0xdb6a:     8d 04 40                           	lea eax, [eax + eax*2]
0xdb6d:     c1 e0 02                           	shl eax, 2
0xdb70:     03 45 7c                           	add eax, dword ptr [ebp + 0x7c]
0xdb73:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0xdb77:     0f 84 10 02 00 00                  	je 0xdd8d <function_dd8d>
0xdb7d:     8d 54 24 60                        	lea edx, [esp + 0x60]
0xdb81:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xdb85:     8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0xdb89:     89 d0                              	mov eax, edx
0xdb8b:     c1 f8 1f                           	sar eax, 0x1f
0xdb8e:     31 d0                              	xor eax, edx
0xdb90:     83 f8 13                           	cmp eax, 0x13
0xdb93:     0f 86 2b 01 00 00                  	jbe 0xdcc4 <function_dcc4>
0xdb99:     c7 44 24 0c 40 6f 00 00            	mov dword ptr [esp + 0xc], 0x6f40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xdba1:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xdba9:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xdbb1:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
0xdbb8:     e8 fc ff ff ff                     	call 0xdbb9
0xdbbd:     8d 76 00                           	lea esi, [esi]
0xdbc0:     8d 54 24 60                        	lea edx, [esp + 0x60]
0xdbc4:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xdbc8:     e9 71 fe ff ff                     	jmp 0xda3e
; function: function_dbcd at 0xdbcd -- 0xdbd4
0xdbcd:     ff 24 85 ac e1 00 00               	jmp dword ptr [eax*4 + 0xe1ac]
; function: function_dbd4 at 0xdbd4 -- 0xdc5e
0xdbd4:     e8 d7 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbd9:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xdbe0:     e8 cb f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbe5:     e8 c6 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbea:     e8 c1 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbef:     90                                 	nop 
0xdbf0:     e8 bb f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbf5:     e8 b6 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbfa:     e8 b1 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdbff:     90                                 	nop 
0xdc00:     e8 ab f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc05:     e8 a6 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc0a:     e8 a1 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc0f:     90                                 	nop 
0xdc10:     e8 9b f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc15:     e8 96 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc1a:     e8 91 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc1f:     90                                 	nop 
0xdc20:     e8 8b f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc25:     e8 86 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc2a:     e8 81 f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc2f:     90                                 	nop 
0xdc30:     e8 7b f9 ff ff                     	call 0xd5b0 <function_d5b0>
0xdc35:     85 d2                              	test edx, edx
0xdc37:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0xdc3b:     0f 88 83 02 00 00                  	js 0xdec4 <function_dec4>
0xdc41:     85 c0                              	test eax, eax
0xdc43:     74 08                              	je 0xdc4d <function_dbd4+0x79>
0xdc45:     8b 10                              	mov edx, dword ptr [eax]
0xdc47:     89 04 24                           	mov dword ptr [esp], eax
0xdc4a:     ff 52 04                           	call dword ptr [edx + 4]
0xdc4d:     83 c7 0c                           	add edi, 0xc
0xdc50:     39 7b 14                           	cmp dword ptr [ebx + 0x14], edi
0xdc53:     0f 85 9a f8 ff ff                  	jne 0xd4f3
0xdc59:     e9 ea f8 ff ff                     	jmp 0xd548 <function_d548>
; data inside code section at 0xdc5e -- 0xdc85
0xdc5e:     85 d2 0f 89 4d 02 00 00  8b 44 24 64 85 c0 74 df   |....M....D$d..t.|
0xdc6e:     8d 50 04 89 44 24 1c 89  14 24 e8 03 3d 00 00 8b   |.P..D$...$..=...|
0xdc7e:     44 24 1c 89 04 24 e8                               |D$...$.         |
; dynamically linked function: _ZdlPv at 0xdc85 -- 0xdc86
; data inside code section at 0xdc86 -- 0xdc89
0xdc86:     ff ff ff                                           |...             |
; function: function_dc89 at 0xdc89 -- 0xdc8b
0xdc89:     eb c2                              	jmp 0xdc4d
; data inside code section at 0xdc8b -- 0xdc90
0xdc8b:     e8 20 f9 ff ff                                     |. ...           |
; function: function_dc90 at 0xdc90 -- 0xdca5
0xdc90:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0xdc93:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0xdc96:     31 c0                              	xor eax, eax
0xdc98:     85 d2                              	test edx, edx
0xdc9a:     0f 85 09 fc ff ff                  	jne 0xd8a9
0xdca0:     e9 07 fc ff ff                     	jmp 0xd8ac
; function: function_dca5 at 0xdca5 -- 0xdcc4
0xdca5:     8b 00                              	mov eax, dword ptr [eax]
0xdca7:     85 c0                              	test eax, eax
0xdca9:     0f 84 e3 02 00 00                  	je 0xdf92 <function_df92>
0xdcaf:     8b 10                              	mov edx, dword ptr [eax]
0xdcb1:     89 04 24                           	mov dword ptr [esp], eax
0xdcb4:     8d 44 24 60                        	lea eax, [esp + 0x60]
0xdcb8:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xdcbc:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xdcbf:     e9 69 fb ff ff                     	jmp 0xd82d
; function: function_dcc4 at 0xdcc4 -- 0xdccb
0xdcc4:     ff 24 85 fc e1 00 00               	jmp dword ptr [eax*4 + 0xe1fc]
; data inside code section at 0xdccb -- 0xdd45
0xdccb:     90 8d 74 26 00 e8 9b f8  ff ff e8 96 f8 ff ff e8   |..t&............|
0xdcdb:     91 f8 ff ff 90 e8 8b f8  ff ff e8 86 f8 ff ff e8   |................|
0xdceb:     81 f8 ff ff 90 e8 7b f8  ff ff e8 76 f8 ff ff e8   |......{....v....|
0xdcfb:     71 f8 ff ff 90 e8 6b f8  ff ff e8 66 f8 ff ff e8   |q.....k....f....|
0xdd0b:     61 f8 ff ff 90 e8 5b f8  ff ff e8 56 f8 ff ff e8   |a.....[....V....|
0xdd1b:     51 f8 ff ff 90 e8 4b f8  ff ff e8 46 f8 ff ff 85   |Q.....K....F....|
0xdd2b:     d2 8b 44 24 64 0f 88 46  02 00 00 8b 10 89 04 24   |..D$d..F.......$|
0xdd3b:     ff 52 0c 8b 54 24 24 89  42 04                     |.R..T$$.B.      |
; function: function_dd45 at 0xdd45 -- 0xdd46
; data inside code section at 0xdd46 -- 0xdd50
0xdd46:     54 24 20 8b 4c 24 24 8b  02 89                     |T$ .L$$...      |
; function: function_dd50 at 0xdd50 -- 0xdd53
0xdd50:     c2 c1 fa                           	ret 0xfac1
; data inside code section at 0xdd53 -- 0xdd58
0xdd53:     1f 31 d0 89 01                                     |.1...           |
; function: function_dd58 at 0xdd58 -- 0xdd64
0xdd58:     83 85 80 00 00 00 01               	add dword ptr [ebp + 0x80], 1
0xdd5f:     e9 e3 fc ff ff                     	jmp 0xda47
; function: function_dd64 at 0xdd64 -- 0xdd88
0xdd64:     85 d2                              	test edx, edx
0xdd66:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0xdd6a:     0f 88 c7 01 00 00                  	js 0xdf37 <function_df37>
0xdd70:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xdd74:     89 41 04                           	mov dword ptr [ecx + 4], eax
0xdd77:     8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0xdd7b:     85 c0                              	test eax, eax
0xdd7d:     89 41 08                           	mov dword ptr [ecx + 8], eax
0xdd80:     74 c3                              	je 0xdd45 <function_dd45>
0xdd82:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0xdd86:     eb bd                              	jmp 0xdd45 <function_dd45>
; data inside code section at 0xdd88 -- 0xdd8d
0xdd88:     e8 e3 f7 ff ff                                     |.....           |
; function: function_dd8d at 0xdd8d -- 0xdd97
0xdd8d:     8d 44 24 60                        	lea eax, [esp + 0x60]
0xdd91:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xdd95:     eb c1                              	jmp 0xdd58 <function_dd58>
; function: function_dd97 at 0xdd97 -- 0xddc0
0xdd97:     8d 45 7c                           	lea eax, [ebp + 0x7c]
0xdd9a:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xdd9e:     8d 44 24 60                        	lea eax, [esp + 0x60]
0xdda2:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xdda6:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xddaa:     8d 95 80 00 00 00                  	lea edx, [ebp + 0x80]
0xddb0:     e8 7b f8 ff ff                     	call 0xd630 <function_d630>
0xddb5:     8b 45 78                           	mov eax, dword ptr [ebp + 0x78]
0xddb8:     8b 55 7c                           	mov edx, dword ptr [ebp + 0x7c]
0xddbb:     e9 69 fd ff ff                     	jmp 0xdb29
; function: function_ddc0 at 0xddc0 -- 0xddc1
; dynamically linked function: __stack_chk_fail at 0xddc1 -- 0xddc2
; data inside code section at 0xddc2 -- 0xddc5
0xddc2:     ff ff ff                                           |...             |
; function: function_ddc5 at 0xddc5 -- 0xde1a
0xddc5:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0xddc9:     c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0xddcd:     89 c2                              	mov edx, eax
0xddcf:     c1 fa 1f                           	sar edx, 0x1f
0xddd2:     31 c2                              	xor edx, eax
0xddd4:     83 fa 13                           	cmp edx, 0x13
0xddd7:     76 3a                              	jbe 0xde13 <function_ddc5+0x4e>
0xddd9:     c7 44 24 0c e0 63 00 00            	mov dword ptr [esp + 0xc], 0x63e0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xdde1:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xdde9:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xddf1:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
0xddf8:     e8 fc ff ff ff                     	call 0xddf9
0xddfd:     8b 00                              	mov eax, dword ptr [eax]
0xddff:     8b 10                              	mov edx, dword ptr [eax]
0xde01:     89 04 24                           	mov dword ptr [esp], eax
0xde04:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xde07:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xde0b:     89 41 04                           	mov dword ptr [ecx + 4], eax
0xde0e:     e9 12 fc ff ff                     	jmp 0xda25
0xde13:     ff 24 95 4c e2 00 00               	jmp dword ptr [edx*4 + 0xe24c]
; function: function_de1a at 0xde1a -- 0xde36
0xde1a:     8b 10                              	mov edx, dword ptr [eax]
0xde1c:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xde1f:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xde23:     85 c0                              	test eax, eax
0xde25:     89 51 04                           	mov dword ptr [ecx + 4], edx
0xde28:     89 41 08                           	mov dword ptr [ecx + 8], eax
0xde2b:     0f 85 6e fc ff ff                  	jne 0xda9f <function_da9f>
0xde31:     e9 ef fb ff ff                     	jmp 0xda25
; function: function_de36 at 0xde36 -- 0xde3f
0xde36:     83 f8 0a                           	cmp eax, 0xa
0xde39:     0f 84 d4 fc ff ff                  	je 0xdb13
; function: function_de3f at 0xde3f -- 0xde5a
0xde3f:     90                                 	nop 
0xde40:     e8 49 2d 00 00                     	call 0x10b8e <unknown_10b8e>
0xde45:     8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0xde49:     89 c3                              	mov ebx, eax
0xde4b:     85 d2                              	test edx, edx
0xde4d:     74 08                              	je 0xde57 <function_de3f+0x18>
0xde4f:     8b 02                              	mov eax, dword ptr [edx]
0xde51:     89 14 24                           	mov dword ptr [esp], edx
0xde54:     ff 50 04                           	call dword ptr [eax + 4]
0xde57:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xde5a -- 0xde5b
0xde5a:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xde5b -- 0xde5c
; data inside code section at 0xde5c -- 0xde5e
0xde5c:     ff ff                                              |..              |
; function: function_de5e at 0xde5e -- 0xde65
0xde5e:     ff 8b 54 24 58 89                  	dec dword ptr [ebx - 0x76a7dbac]
0xde64:     c3                                 	ret 
; data inside code section at 0xde65 -- 0xde99
0xde65:     85 d2 74 08 8b 02 89 14  24 ff 50 04 89 1c 24 e8   |..t.....$.P...$.|
0xde75:     fc ff ff ff c7 44 24 0c  60 5a 00 00 c7 44 24 08   |.....D$.`Z...D$.|
0xde85:     61 00 00 00 c7 44 24 04  ec 34 00 00 c7 04 24 03   |a....D$..4....$.|
0xde95:     24 00 00 e8                                        |$...            |
; dynamically linked function: __assert_fail at 0xde99 -- 0xde9a
; data inside code section at 0xde9a -- 0xde9c
0xde9a:     ff ff                                              |..              |
; function: function_de9c at 0xde9c -- 0xdea3
0xde9c:     ff 8b 54 24 20 89                  	dec dword ptr [ebx - 0x76dfdbac]
0xdea2:     c3                                 	ret 
; data inside code section at 0xdea3 -- 0xdeaf
0xdea3:     89 14 24 e8 a5 81 00 00  89 1c 24 e8               |..$.......$.    |
; dynamically linked function: _Unwind_Resume at 0xdeaf -- 0xdeb0
; data inside code section at 0xdeb0 -- 0xdeb2
0xdeb0:     ff ff                                              |..              |
; function: function_deb2 at 0xdeb2 -- 0xdec4
0xdeb2:     ff 8d 44 24 68 89                  	dec dword ptr [ebp - 0x7697dbbc]
0xdeb8:     04 24                              	add al, 0x24
0xdeba:     e8 c1 3a 00 00                     	call 0x11980 <unknown_11980>
0xdebf:     e9 89 fd ff ff                     	jmp 0xdc4d
; function: function_dec4 at 0xdec4 -- 0xdee5
0xdec4:     85 c0                              	test eax, eax
0xdec6:     0f 84 81 fd ff ff                  	je 0xdc4d
0xdecc:     8b 10                              	mov edx, dword ptr [eax]
0xdece:     85 d2                              	test edx, edx
0xded0:     74 10                              	je 0xdee2 <function_dec4+0x1e>
0xded2:     8b 0a                              	mov ecx, dword ptr [edx]
0xded4:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xded8:     89 14 24                           	mov dword ptr [esp], edx
0xdedb:     ff 51 04                           	call dword ptr [ecx + 4]
0xdede:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xdee2:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xdee5 -- 0xdee6
0xdee5:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xdee6 -- 0xdee7
; data inside code section at 0xdee7 -- 0xdeea
0xdee7:     ff ff ff                                           |...             |
; function: function_deea at 0xdeea -- 0xdeef
0xdeea:     e9 5e fd ff ff                     	jmp 0xdc4d
; function: function_deef at 0xdeef -- 0xdf0e
0xdeef:     c7 44 24 0c 60 5a 00 00            	mov dword ptr [esp + 0xc], 0x5a60 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0xdef7:     c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0xdeff:     c7 44 24 04 ec 34 00 00            	mov dword ptr [esp + 4], 0x34ec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0xdf07:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xdf0e -- 0xdf0f
0xdf0e:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xdf0f -- 0xdf10
; data inside code section at 0xdf10 -- 0xdf13
0xdf10:     ff ff ff                                           |...             |
; function: function_df13 at 0xdf13 -- 0xdf32
0xdf13:     c7 44 24 0c 60 5a 00 00            	mov dword ptr [esp + 0xc], 0x5a60 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0xdf1b:     c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0xdf23:     c7 44 24 04 ec 34 00 00            	mov dword ptr [esp + 4], 0x34ec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0xdf2b:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xdf32 -- 0xdf33
0xdf32:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xdf33 -- 0xdf34
; data inside code section at 0xdf34 -- 0xdf37
0xdf34:     ff ff ff                                           |...             |
; function: function_df37 at 0xdf37 -- 0xdf53
0xdf37:     8b 10                              	mov edx, dword ptr [eax]
0xdf39:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xdf3c:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xdf40:     85 c0                              	test eax, eax
0xdf42:     89 51 04                           	mov dword ptr [ecx + 4], edx
0xdf45:     89 41 08                           	mov dword ptr [ecx + 8], eax
0xdf48:     0f 85 34 fe ff ff                  	jne 0xdd82
0xdf4e:     e9 f2 fd ff ff                     	jmp 0xdd45 <function_dd45>
; function: function_df53 at 0xdf53 -- 0xdf58
0xdf53:     e8 6a 2c 00 00                     	call 0x10bc2 <unknown_10bc2>
; function: function_df58 at 0xdf58 -- 0xdf77
0xdf58:     c7 44 24 0c 20 76 00 00            	mov dword ptr [esp + 0xc], 0x7620 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0xdf60:     c7 44 24 08 15 03 00 00            	mov dword ptr [esp + 8], 0x315
0xdf68:     c7 44 24 04 c8 33 00 00            	mov dword ptr [esp + 4], 0x33c8 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xdf70:     c7 04 24 1a 25 00 00               	mov dword ptr [esp], 0x251a ; "members_.capacity_ >= N"
; data inside code section at 0xdf77 -- 0xdf78
0xdf77:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xdf78 -- 0xdf79
; data inside code section at 0xdf79 -- 0xdf7b
0xdf79:     ff ff                                              |..              |
; function: function_df7b at 0xdf7b -- 0xdf92
0xdf7b:     ff 8b 00 8b 10 89                  	dec dword ptr [ebx - 0x76ef7500]
0xdf81:     04 24                              	add al, 0x24
0xdf83:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xdf86:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xdf8a:     89 41 04                           	mov dword ptr [ecx + 4], eax
0xdf8d:     e9 b3 fd ff ff                     	jmp 0xdd45 <function_dd45>
; function: function_df92 at 0xdf92 -- 0xdfb6
0xdf92:     c7 44 24 0c 60 5a 00 00            	mov dword ptr [esp + 0xc], 0x5a60 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0xdf9a:     c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0xdfa2:     c7 44 24 04 ec 34 00 00            	mov dword ptr [esp + 4], 0x34ec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0xdfaa:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
0xdfb1:     e8 fc ff ff ff                     	call 0xdfb2
; function: function_dfb6 at 0xdfb6 -- 0xdfd5
0xdfb6:     c7 44 24 0c 20 76 00 00            	mov dword ptr [esp + 0xc], 0x7620 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0xdfbe:     c7 44 24 08 1b 03 00 00            	mov dword ptr [esp + 8], 0x31b
0xdfc6:     c7 44 24 04 c8 33 00 00            	mov dword ptr [esp + 4], 0x33c8 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xdfce:     c7 04 24 4e 25 00 00               	mov dword ptr [esp], 0x254e ; "members_.capacity_ >= n"
; data inside code section at 0xdfd5 -- 0xdfd6
0xdfd5:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xdfd6 -- 0xdfd7
; data inside code section at 0xdfd7 -- 0xdfda
0xdfd7:     ff ff ff                                           |...             |
; function: function_dfda at 0xdfda -- 0xdff9
0xdfda:     c7 44 24 0c c0 78 00 00            	mov dword ptr [esp + 0xc], 0x78c0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve_impl(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0xdfe2:     c7 44 24 08 34 01 00 00            	mov dword ptr [esp + 8], 0x134
0xdfea:     c7 44 24 04 c8 33 00 00            	mov dword ptr [esp + 4], 0x33c8 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xdff2:     c7 04 24 32 25 00 00               	mov dword ptr [esp], 0x2532 ; "size_ <= members_.capacity_"
; data inside code section at 0xdff9 -- 0xdffa
0xdff9:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xdffa -- 0xdffb
; data inside code section at 0xdffb -- 0xdffe
0xdffb:     ff ff ff                                           |...             |
; function: function_dffe at 0xdffe -- 0xe07b
0xdffe:     e8 ad f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe003:     e8 a8 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe008:     e8 a3 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe00d:     8d 76 00                           	lea esi, [esi]
0xe010:     e8 9b f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe015:     e8 96 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe01a:     e8 91 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe01f:     90                                 	nop 
0xe020:     e8 8b f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe025:     e8 86 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe02a:     e8 81 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe02f:     90                                 	nop 
0xe030:     e8 7b f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe035:     e8 76 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe03a:     e8 71 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe03f:     90                                 	nop 
0xe040:     e8 6b f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe045:     e8 66 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe04a:     e8 61 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe04f:     90                                 	nop 
0xe050:     e8 5b f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe055:     e8 56 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe05a:     85 c0                              	test eax, eax
0xe05c:     0f 88 c3 f4 ff ff                  	js 0xd525 <function_d525>
0xe062:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0xe066:     85 c0                              	test eax, eax
0xe068:     0f 84 da f4 ff ff                  	je 0xd548 <function_d548>
0xe06e:     8b 10                              	mov edx, dword ptr [eax]
0xe070:     89 04 24                           	mov dword ptr [esp], eax
0xe073:     ff 52 04                           	call dword ptr [edx + 4]
0xe076:     e9 cd f4 ff ff                     	jmp 0xd548 <function_d548>
; function: function_e07b at 0xe07b -- 0xe07c
; data inside code section at 0xe07c -- 0xe09d
0xe07c:     c0 8d 76 00 79 29 8b 5c  24 64 85 db 0f 84 ba f4   |..v.y).\$d......|
0xe08c:     ff ff 8d 43 04 89 04 24  e8 e7 38 00 00 89 1c 24   |...C...$..8....$|
0xe09c:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe09d -- 0xe09e
; data inside code section at 0xe09e -- 0xe0a1
0xe09e:     ff ff ff                                           |...             |
; function: function_e0a1 at 0xe0a1 -- 0xe0a6
0xe0a1:     e9 a2 f4 ff ff                     	jmp 0xd548 <function_d548>
; function: function_e0a6 at 0xe0a6 -- 0xe0bc
0xe0a6:     e8 05 f5 ff ff                     	call 0xd5b0 <function_d5b0>
0xe0ab:     8d 44 24 68                        	lea eax, [esp + 0x68]
0xe0af:     89 04 24                           	mov dword ptr [esp], eax
0xe0b2:     e8 c9 38 00 00                     	call 0x11980 <unknown_11980>
0xe0b7:     e9 8c f4 ff ff                     	jmp 0xd548 <function_d548>
; section: .text._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS5_SC_EESI_EEEEESV_E18lock_next_callableEv
; function: _ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS5_SC_EESI_EEEEESV_E18lock_next_callableEv at 0xe2a0 -- 0xe348
0xe2a0:     55                                 	push ebp
0xe2a1:     57                                 	push edi
0xe2a2:     56                                 	push esi
0xe2a3:     53                                 	push ebx
0xe2a4:     83 ec 3c                           	sub esp, 0x3c
0xe2a7:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xe2ab:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe2b1:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xe2b5:     31 c0                              	xor eax, eax
0xe2b7:     8b 06                              	mov eax, dword ptr [esi]
0xe2b9:     3b 46 0c                           	cmp eax, dword ptr [esi + 0xc]
0xe2bc:     0f 84 0e 01 00 00                  	je 0xe3d0 <function_e3d0>
0xe2c2:     3b 46 04                           	cmp eax, dword ptr [esi + 4]
0xe2c5:     0f 84 fd 00 00 00                  	je 0xe3c8 <function_e3c8>
0xe2cb:     8b 78 08                           	mov edi, dword ptr [eax + 8]
0xe2ce:     85 ff                              	test edi, edi
0xe2d0:     0f 84 ef 01 00 00                  	je 0xe4c5 <function_e4c5>
0xe2d6:     8b 07                              	mov eax, dword ptr [edi]
0xe2d8:     89 3c 24                           	mov dword ptr [esp], edi
0xe2db:     ff 50 0c                           	call dword ptr [eax + 0xc]
0xe2de:     8b 56 08                           	mov edx, dword ptr [esi + 8]
0xe2e1:     8b aa 84 00 00 00                  	mov ebp, dword ptr [edx + 0x84]
0xe2e7:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xe2eb:     85 ed                              	test ebp, ebp
0xe2ed:     74 79                              	je 0xe368 <function_e368>
0xe2ef:     8b 8a 80 00 00 00                  	mov ecx, dword ptr [edx + 0x80]
0xe2f5:     8d 44 6d fd                        	lea eax, [ebp + ebp*2 - 3]
0xe2f9:     8d 54 6d 00                        	lea edx, [ebp + ebp*2]
0xe2fd:     c1 e2 02                           	shl edx, 2
0xe300:     8d 04 81                           	lea eax, [ecx + eax*4]
0xe303:     89 c1                              	mov ecx, eax
0xe305:     29 d1                              	sub ecx, edx
0xe307:     39 c8                              	cmp eax, ecx
0xe309:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0xe30d:     76 41                              	jbe 0xe350 <function_e350>
0xe30f:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xe313:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xe317:     8b 10                              	mov edx, dword ptr [eax]
0xe319:     89 d0                              	mov eax, edx
0xe31b:     c1 f8 1f                           	sar eax, 0x1f
0xe31e:     31 d0                              	xor eax, edx
0xe320:     83 f8 13                           	cmp eax, 0x13
0xe323:     0f 86 ef 00 00 00                  	jbe 0xe418 <function_e418>
0xe329:     c7 44 24 0c e0 63 00 00            	mov dword ptr [esp + 0xc], 0x63e0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xe331:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xe339:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xe341:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xe348 -- 0xe349
0xe348:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe349 -- 0xe34a
; data inside code section at 0xe34a -- 0xe350
0xe34a:     ff ff ff 8d 76 00                                  |....v.          |
; function: function_e350 at 0xe350 -- 0xe368
0xe350:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xe354:     31 c0                              	xor eax, eax
0xe356:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xe35a:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xe35e:     89 81 84 00 00 00                  	mov dword ptr [ecx + 0x84], eax
0xe364:     8d 74 26 00                        	lea esi, [esi]
; function: function_e368 at 0xe368 -- 0xe3c8
0xe368:     8b 06                              	mov eax, dword ptr [esi]
0xe36a:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xe36e:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xe371:     83 c2 04                           	add edx, 4
0xe374:     85 c0                              	test eax, eax
0xe376:     0f 84 41 01 00 00                  	je 0xe4bd <function_e4bd>
0xe37c:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xe380:     89 04 24                           	mov dword ptr [esp], eax
0xe383:     e8 c8 d3 00 00                     	call 0x1b750 <unknown_1b750>
0xe388:     8b 06                              	mov eax, dword ptr [esi]
0xe38a:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xe38d:     85 c0                              	test eax, eax
0xe38f:     0f 84 28 01 00 00                  	je 0xe4bd <function_e4bd>
0xe395:     80 78 04 00                        	cmp byte ptr [eax + 4], 0
0xe399:     74 55                              	je 0xe3f0 <function_e3f0>
0xe39b:     8b 56 08                           	mov edx, dword ptr [esi + 8]
0xe39e:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xe3a1:     83 82 8c 00 00 00 01               	add dword ptr [edx + 0x8c], 1
0xe3a8:     85 c0                              	test eax, eax
0xe3aa:     74 07                              	je 0xe3b3 <function_e368+0x4b>
0xe3ac:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xe3af:     85 c0                              	test eax, eax
0xe3b1:     75 47                              	jne 0xe3fa <function_e3fa>
0xe3b3:     8b 06                              	mov eax, dword ptr [esi]
0xe3b5:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0xe3b8:     8b 07                              	mov eax, dword ptr [edi]
0xe3ba:     89 3c 24                           	mov dword ptr [esp], edi
0xe3bd:     ff 50 10                           	call dword ptr [eax + 0x10]
0xe3c0:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xe3c3:     39 06                              	cmp dword ptr [esi], eax
0xe3c5:     75 09                              	jne 0xe3d0 <function_e3d0>
0xe3c7:     90                                 	nop 
; function: function_e3c8 at 0xe3c8 -- 0xe3d0
0xe3c8:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xe3cb:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0xe3ce:     66 90                              	nop 
; function: function_e3d0 at 0xe3d0 -- 0xe3e9
0xe3d0:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xe3d4:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xe3db:     0f 85 08 01 00 00                  	jne 0xe4e9 <function_e4e9>
0xe3e1:     83 c4 3c                           	add esp, 0x3c
0xe3e4:     5b                                 	pop ebx
0xe3e5:     5e                                 	pop esi
0xe3e6:     5f                                 	pop edi
0xe3e7:     5d                                 	pop ebp
0xe3e8:     c3                                 	ret 
; data inside code section at 0xe3e9 -- 0xe3f0
0xe3e9:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_e3f0 at 0xe3f0 -- 0xe3fa
0xe3f0:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xe3f3:     83 80 90 00 00 00 01               	add dword ptr [eax + 0x90], 1
; function: function_e3fa at 0xe3fa -- 0xe413
0xe3fa:     8b 07                              	mov eax, dword ptr [edi]
0xe3fc:     89 3c 24                           	mov dword ptr [esp], edi
0xe3ff:     ff 50 10                           	call dword ptr [eax + 0x10]
0xe402:     8b 06                              	mov eax, dword ptr [esi]
0xe404:     8b 00                              	mov eax, dword ptr [eax]
0xe406:     3b 46 04                           	cmp eax, dword ptr [esi + 4]
0xe409:     89 06                              	mov dword ptr [esi], eax
0xe40b:     0f 85 ba fe ff ff                  	jne 0xe2cb
0xe411:     eb b5                              	jmp 0xe3c8 <function_e3c8>
; data inside code section at 0xe413 -- 0xe418
0xe413:     90 8d 74 26 00                                     |..t&.           |
; function: function_e418 at 0xe418 -- 0xe41f
0xe418:     ff 24 85 00 e5 00 00               	jmp dword ptr [eax*4 + 0xe500]
; data inside code section at 0xe41f -- 0xe448
0xe41f:     90 e8 7b ff ff ff 8d 76  00 85 d2 8d b6 00 00 00   |..{....v........|
0xe42f:     00 79 5f 8b 54 24 18 8b  5a 04 85 db 74 13 8d 43   |.y_.T$..Z...t..C|
0xe43f:     04 89 04 24 e8 28 43 00  00                        |...$.(C..       |
; function: function_e448 at 0xe448 -- 0xe449
; data inside code section at 0xe449 -- 0xe44c
0xe449:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xe44c -- 0xe44d
; data inside code section at 0xe44d -- 0xe44f
0xe44d:     ff ff                                              |..              |
; function: function_e44f at 0xe44f -- 0xe477
0xe44f:     ff 83 6c 24 18 0c                  	inc dword ptr [ebx + 0xc18246c]
0xe455:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xe459:     39 54 24 1c                        	cmp dword ptr [esp + 0x1c], edx
0xe45d:     0f 82 b0 fe ff ff                  	jb 0xe313
0xe463:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xe467:     8b 56 08                           	mov edx, dword ptr [esi + 8]
0xe46a:     8b 81 84 00 00 00                  	mov eax, dword ptr [ecx + 0x84]
0xe470:     29 e8                              	sub eax, ebp
0xe472:     e9 df fe ff ff                     	jmp 0xe356
; data inside code section at 0xe477 -- 0xe478
0xe477:     90                                                 |.               |
; function: function_e478 at 0xe478 -- 0xe4bd
0xe478:     85 d2                              	test edx, edx
0xe47a:     78 26                              	js 0xe4a2 <function_e478+0x2a>
0xe47c:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0xe480:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0xe483:     85 c0                              	test eax, eax
0xe485:     74 c9                              	je 0xe450
0xe487:     8b 10                              	mov edx, dword ptr [eax]
0xe489:     89 04 24                           	mov dword ptr [esp], eax
0xe48c:     ff 52 04                           	call dword ptr [edx + 4]
0xe48f:     eb bf                              	jmp 0xe450
0xe491:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xe495:     83 c0 08                           	add eax, 8
0xe498:     89 04 24                           	mov dword ptr [esp], eax
0xe49b:     e8 d0 42 00 00                     	call 0x12770 <unknown_12770>
0xe4a0:     eb ae                              	jmp 0xe450
0xe4a2:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xe4a6:     8b 58 04                           	mov ebx, dword ptr [eax + 4]
0xe4a9:     85 db                              	test ebx, ebx
0xe4ab:     74 a3                              	je 0xe450
0xe4ad:     8b 03                              	mov eax, dword ptr [ebx]
0xe4af:     85 c0                              	test eax, eax
0xe4b1:     74 95                              	je 0xe448 <function_e448>
0xe4b3:     8b 10                              	mov edx, dword ptr [eax]
0xe4b5:     89 04 24                           	mov dword ptr [esp], eax
0xe4b8:     ff 52 04                           	call dword ptr [edx + 4]
0xe4bb:     eb 8b                              	jmp 0xe448 <function_e448>
; function: function_e4bd at 0xe4bd -- 0xe4c5
0xe4bd:     8d 76 00                           	lea esi, [esi]
0xe4c0:     e8 1d 34 00 00                     	call 0x118e2 <unknown_118e2>
; function: function_e4c5 at 0xe4c5 -- 0xe4e4
0xe4c5:     c7 44 24 0c 00 58 00 00            	mov dword ptr [esp + 0xc], 0x5800 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>&]"
0xe4cd:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe4d5:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe4dd:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xe4e4 -- 0xe4e5
0xe4e4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe4e5 -- 0xe4e6
; data inside code section at 0xe4e6 -- 0xe4e9
0xe4e6:     ff ff ff                                           |...             |
; function: function_e4e9 at 0xe4e9 -- 0xe4ea
; dynamically linked function: __stack_chk_fail at 0xe4ea -- 0xe4eb
; data inside code section at 0xe4eb -- 0xe4ef
0xe4eb:     ff ff ff 89                                        |....            |
; function: function_e4ef at 0xe4ef -- 0xe4f0
0xe4ef:     c3                                 	ret 
; data inside code section at 0xe4f0 -- 0xe4fc
0xe4f0:     8b 07 89 3c 24 ff 50 10  89 1c 24 e8               |...<$.P...$.    |
; dynamically linked function: _Unwind_Resume at 0xe4fc -- 0xe4fd
; data inside code section at 0xe4fd -- 0xe500
0xe4fd:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEclES4_
; function: _ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEclES4_ at 0xe550 -- 0xe59a
0xe550:     55                                 	push ebp
0xe551:     57                                 	push edi
0xe552:     56                                 	push esi
0xe553:     53                                 	push ebx
0xe554:     81 ec 2c 01 00 00                  	sub esp, 0x12c
0xe55a:     8b 84 24 40 01 00 00               	mov eax, dword ptr [esp + 0x140]
0xe561:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xe568:     89 94 24 1c 01 00 00               	mov dword ptr [esp + 0x11c], edx
0xe56f:     31 d2                              	xor edx, edx
0xe571:     c7 44 24 64 00 00 00 00            	mov dword ptr [esp + 0x64], 0
0xe579:     c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0xe581:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xe585:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xe589:     8b 84 24 44 01 00 00               	mov eax, dword ptr [esp + 0x144]
0xe590:     83 c3 0c                           	add ebx, 0xc
0xe593:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xe597:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe59a -- 0xe59b
0xe59a:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xe59b -- 0xe59c
; data inside code section at 0xe59c -- 0xe5c8
0xe59c:     ff ff ff 8b 4c 24 20 8b  41 04 85 c0 0f 84 0a 04   |....L$ .A.......|
0xe5ac:     00 00 8b 50 04 83 fa 01  0f 84 0e 03 00 00 8b 4c   |...P...........L|
0xe5bc:     24 20 89 44 24 70 8b 11  89 54 24 6c               |$ .D$p...T$l    |
; function: function_e5c8 at 0xe5c8 -- 0xe5d4
0xe5c8:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0xe5cc:     8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0xe5d0:     8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
; function: function_e5d4 at 0xe5d4 -- 0xe5fb
0xe5d4:     8b 4c 24 64                        	mov ecx, dword ptr [esp + 0x64]
0xe5d8:     89 54 24 64                        	mov dword ptr [esp + 0x64], edx
0xe5dc:     8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0xe5e0:     89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0xe5e4:     8d 44 24 70                        	lea eax, [esp + 0x70]
0xe5e8:     89 04 24                           	mov dword ptr [esp], eax
0xe5eb:     89 4c 24 6c                        	mov dword ptr [esp + 0x6c], ecx
0xe5ef:     89 54 24 70                        	mov dword ptr [esp + 0x70], edx
0xe5f3:     e8 28 44 00 00                     	call 0x12a20 <unknown_12a20>
0xe5f8:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe5fb -- 0xe5fc
0xe5fb:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0xe5fc -- 0xe5fd
; data inside code section at 0xe5fd -- 0xe660
0xe5fd:     ff ff ff 8d 84 24 8c 00  00 00 89 44 24 18 89 84   |.....$.....D$...|
0xe60d:     24 08 01 00 00 8d 44 24  3c 89 84 24 10 01 00 00   |$.....D$<..$....|
0xe61d:     8b 44 24 64 c6 84 24 88  00 00 00 00 c7 84 24 04   |.D$d..$.......$.|
0xe62d:     01 00 00 0a 00 00 00 c7  84 24 0c 01 00 00 00 00   |.........$......|
0xe63d:     00 00 85 c0 c7 84 24 14  01 00 00 00 00 00 00 c7   |......$.........|
0xe64d:     84 24 18 01 00 00 00 00  00 00 0f 84 8d 04 00 00   |.$..............|
0xe65d:     8b 00 85                                           |...             |
; function: function_e660 at 0xe660 -- 0xe6cd
0xe660:     c0 89 44 24 24 0f 84               	ror byte ptr [ecx + 0xf242444], 0x84
0xe667:     9a 04 00 00 8b 54 24               	lcall 0x2454:0x8b000004 <unknown_8b000004>
0xe66e:     24 8d                              	and al, 0x8d
0xe670:     8c 24 88                           	mov word ptr [eax + ecx*4], fs
0xe673:     00 00                              	add byte ptr [eax], al
0xe675:     00 8d 44 24 54 89                  	add byte ptr [ebp - 0x76abdbbc], cl
0xe67b:     4c                                 	dec esp
0xe67c:     24 5c                              	and al, 0x5c
0xe67e:     89 04 24                           	mov dword ptr [esp], eax
0xe681:     89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0xe685:     89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0xe689:     89 54 24 60                        	mov dword ptr [esp + 0x60], edx
0xe68d:     e8 5e e1 00 00                     	call 0x1c7f0 <unknown_1c7f0>
0xe692:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0xe696:     85 c0                              	test eax, eax
0xe698:     0f 84 4c 04 00 00                  	je 0xeaea <function_eaea>
0xe69e:     8b 00                              	mov eax, dword ptr [eax]
0xe6a0:     85 c0                              	test eax, eax
0xe6a2:     0f 84 5d 04 00 00                  	je 0xeb05
0xe6a8:     8b 10                              	mov edx, dword ptr [eax]
0xe6aa:     89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0xe6ae:     89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0xe6b2:     8d 44 24 44                        	lea eax, [esp + 0x44]
0xe6b6:     89 04 24                           	mov dword ptr [esp], eax
0xe6b9:     89 54 24 44                        	mov dword ptr [esp + 0x44], edx
0xe6bd:     8d 94 24 88 00 00 00               	lea edx, [esp + 0x88]
0xe6c4:     89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0xe6c8:     e8 23 e1 00 00                     	call 0x1c7f0 <unknown_1c7f0>
; data inside code section at 0xe6cd -- 0xe6d0
0xe6cd:     8b 44 24                                           |.D$             |
; function: function_e6d0 at 0xe6d0 -- 0xe700
0xe6d0:     64 85 c0                           	test eax, eax
0xe6d3:     0f 84 11 04 00 00                  	je 0xeaea <function_eaea>
0xe6d9:     8b 70 08                           	mov esi, dword ptr [eax + 8]
0xe6dc:     85 f6                              	test esi, esi
0xe6de:     0f 84 2b 04 00 00                  	je 0xeb0f <function_eb0f>
0xe6e4:     8b 4c 24 54                        	mov ecx, dword ptr [esp + 0x54]
0xe6e8:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0xe6ec:     8b 7c 24 4c                        	mov edi, dword ptr [esp + 0x4c]
0xe6f0:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xe6f4:     8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0xe6f8:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xe6fc:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
; function: function_e700 at 0xe700 -- 0xe72c
0xe700:     39 74 24 38                        	cmp dword ptr [esp + 0x38], esi
0xe704:     0f 84 ee 02 00 00                  	je 0xe9f8 <function_e9f8>
0xe70a:     80 3f 00                           	cmp byte ptr [edi], 0
0xe70d:     0f 84 75 01 00 00                  	je 0xe888 <function_e888>
0xe713:     8b 36                              	mov esi, dword ptr [esi]
0xe715:     39 de                              	cmp esi, ebx
0xe717:     0f 84 f3 00 00 00                  	je 0xe810
0xe71d:     39 74 24 28                        	cmp dword ptr [esp + 0x28], esi
0xe721:     0f 84 79 03 00 00                  	je 0xeaa0 <function_eaa0>
0xe727:     8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0xe72a:     85 ed                              	test ebp, ebp
; data inside code section at 0xe72c -- 0xe730
0xe72c:     0f 84 1d 01                                        |....            |
; function: function_e730 at 0xe730 -- 0xe7a8
0xe730:     00 00                              	add byte ptr [eax], al
0xe732:     8d 47 04                           	lea eax, [edi + 4]
0xe735:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xe739:     8b 45 00                           	mov eax, dword ptr [ebp]
0xe73c:     89 2c 24                           	mov dword ptr [esp], ebp
0xe73f:     ff 50 0c                           	call dword ptr [eax + 0xc]
0xe742:     8b 97 84 00 00 00                  	mov edx, dword ptr [edi + 0x84]
0xe748:     85 d2                              	test edx, edx
0xe74a:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xe74e:     74 68                              	je 0xe7b8 <function_e7b8>
0xe750:     8b 9f 80 00 00 00                  	mov ebx, dword ptr [edi + 0x80]
0xe756:     8d 44 52 fd                        	lea eax, [edx + edx*2 - 3]
0xe75a:     8d 14 52                           	lea edx, [edx + edx*2]
0xe75d:     c1 e2 02                           	shl edx, 2
0xe760:     8d 04 83                           	lea eax, [ebx + eax*4]
0xe763:     89 c1                              	mov ecx, eax
0xe765:     29 d1                              	sub ecx, edx
0xe767:     39 c8                              	cmp eax, ecx
0xe769:     89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0xe76d:     76 41                              	jbe 0xe7b0 <function_e7b0>
0xe76f:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xe773:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xe777:     8b 10                              	mov edx, dword ptr [eax]
0xe779:     89 d0                              	mov eax, edx
0xe77b:     c1 f8 1f                           	sar eax, 0x1f
0xe77e:     31 d0                              	xor eax, edx
0xe780:     83 f8 13                           	cmp eax, 0x13
0xe783:     0f 86 ef 00 00 00                  	jbe 0xe878 <function_e878>
0xe789:     c7 44 24 0c e0 63 00 00            	mov dword ptr [esp + 0xc], 0x63e0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0xe791:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xe799:     c7 44 24 04 90 33 00 00            	mov dword ptr [esp + 4], 0x3390 ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xe7a1:     c7 04 24 0b 24 00 00               	mov dword ptr [esp], 0x240b ; "false"
; data inside code section at 0xe7a8 -- 0xe7a9
0xe7a8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe7a9 -- 0xe7aa
; data inside code section at 0xe7aa -- 0xe7b0
0xe7aa:     ff ff ff 8d 76 00                                  |....v.          |
; function: function_e7b0 at 0xe7b0 -- 0xe7b8
0xe7b0:     31 c0                              	xor eax, eax
0xe7b2:     89 87 84 00 00 00                  	mov dword ptr [edi + 0x84], eax
; function: function_e7b8 at 0xe7b8 -- 0xe86e
0xe7b8:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xe7bb:     85 c0                              	test eax, eax
0xe7bd:     0f 84 3d 03 00 00                  	je 0xeb00 <function_eb00>
0xe7c3:     8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0xe7c7:     89 04 24                           	mov dword ptr [esp], eax
0xe7ca:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xe7ce:     e8 2d d2 00 00                     	call 0x1ba00 <unknown_1ba00>
0xe7d3:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xe7d6:     85 c0                              	test eax, eax
0xe7d8:     0f 84 22 03 00 00                  	je 0xeb00 <function_eb00>
0xe7de:     80 78 04 00                        	cmp byte ptr [eax + 4], 0
0xe7e2:     74 44                              	je 0xe828 <function_e7b8+0x70>
0xe7e4:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xe7e7:     83 87 8c 00 00 00 01               	add dword ptr [edi + 0x8c], 1
0xe7ee:     85 c0                              	test eax, eax
0xe7f0:     74 07                              	je 0xe7f9 <function_e7b8+0x41>
0xe7f2:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xe7f5:     85 c0                              	test eax, eax
0xe7f7:     75 36                              	jne 0xe82f <function_e7b8+0x77>
0xe7f9:     8b 45 00                           	mov eax, dword ptr [ebp]
0xe7fc:     89 2c 24                           	mov dword ptr [esp], ebp
0xe7ff:     ff 50 10                           	call dword ptr [eax + 0x10]
0xe802:     39 74 24 28                        	cmp dword ptr [esp + 0x28], esi
0xe806:     0f 84 94 02 00 00                  	je 0xeaa0 <function_eaa0>
0xe80c:     89 f3                              	mov ebx, esi
0xe80e:     66 90                              	nop 
0xe810:     80 3f 00                           	cmp byte ptr [edi], 0
0xe813:     0f 84 e7 fe ff ff                  	je 0xe700 <function_e700>
0xe819:     c6 07 00                           	mov byte ptr [edi], 0
0xe81c:     e9 df fe ff ff                     	jmp 0xe700 <function_e700>
; data inside code section at 0xe821 -- 0xe828
0xe821:     8d b4 26 00 00 00 00                               |..&....         |
0xe828:     83 87 90 00 00 00 01               	add dword ptr [edi + 0x90], 1
0xe82f:     8b 45 00                           	mov eax, dword ptr [ebp]
0xe832:     89 2c 24                           	mov dword ptr [esp], ebp
0xe835:     ff 50 10                           	call dword ptr [eax + 0x10]
0xe838:     8b 36                              	mov esi, dword ptr [esi]
0xe83a:     39 74 24 28                        	cmp dword ptr [esp + 0x28], esi
0xe83e:     0f 84 5c 02 00 00                  	je 0xeaa0 <function_eaa0>
0xe844:     8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0xe847:     85 ed                              	test ebp, ebp
0xe849:     0f 85 ea fe ff ff                  	jne 0xe739
0xe84f:     c7 44 24 0c 00 58 00 00            	mov dword ptr [esp + 0xc], 0x5800 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>&]"
0xe857:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe85f:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe867:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xe86e -- 0xe86f
0xe86e:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe86f -- 0xe870
; data inside code section at 0xe870 -- 0xe878
0xe870:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_e878 at 0xe878 -- 0xe87f
0xe878:     ff 24 85 e0 ec 00 00               	jmp dword ptr [eax*4 + 0xece0]
; data inside code section at 0xe87f -- 0xe881
0xe87f:     90 e8                                              |..              |
; function: function_e881 at 0xe881 -- 0xe882
0xe881:     cb                                 	retf 
; data inside code section at 0xe882 -- 0xe888
0xe882:     fd ff ff 8d 76 00                                  |....v.          |
; function: function_e888 at 0xe888 -- 0xe8c7
0xe888:     8b 87 88 00 00 00                  	mov eax, dword ptr [edi + 0x88]
0xe88e:     8b 08                              	mov ecx, dword ptr [eax]
0xe890:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xe893:     85 c0                              	test eax, eax
0xe895:     0f 84 65 02 00 00                  	je 0xeb00 <function_eb00>
0xe89b:     8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0xe89e:     85 d2                              	test edx, edx
0xe8a0:     0f 84 b1 02 00 00                  	je 0xeb57 <function_eb57>
0xe8a6:     83 c0 20                           	add eax, 0x20
0xe8a9:     83 e2 fe                           	and edx, 0xfffffffe
0xe8ac:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xe8b0:     89 04 24                           	mov dword ptr [esp], eax
0xe8b3:     ff 52 04                           	call dword ptr [edx + 4]
0xe8b6:     80 3f 00                           	cmp byte ptr [edi], 0
0xe8b9:     0f 85 54 fe ff ff                  	jne 0xe713
0xe8bf:     c6 07 01                           	mov byte ptr [edi], 1
0xe8c2:     e9 4c fe ff ff                     	jmp 0xe713
; data inside code section at 0xe8c7 -- 0xe8d0
0xe8c7:     90 8b 40 04 83 f8 01 0f  85                        |..@......       |
; function: function_e8d0 at 0xe8d0 -- 0xe950
0xe8d0:     5f                                 	pop edi
0xe8d1:     02 00                              	add al, byte ptr [eax]
0xe8d3:     00 8b 54 24 20 c7                  	add byte ptr [ebx - 0x38dfdbac], cl
0xe8d9:     44                                 	inc esp
0xe8da:     24 7c                              	and al, 0x7c
0xe8dc:     00 00                              	add byte ptr [eax], al
0xe8de:     00 00                              	add byte ptr [eax], al
0xe8e0:     8b 02                              	mov eax, dword ptr [edx]
0xe8e2:     85 c0                              	test eax, eax
0xe8e4:     0f 84 00 02 00 00                  	je 0xeaea <function_eaea>
0xe8ea:     8b 00                              	mov eax, dword ptr [eax]
0xe8ec:     85 c0                              	test eax, eax
0xe8ee:     0f 84 11 02 00 00                  	je 0xeb05
0xe8f4:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xe8f8:     3b 41 08                           	cmp eax, dword ptr [ecx + 8]
0xe8fb:     0f 84 91 01 00 00                  	je 0xea92 <function_ea92>
0xe901:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xe905:     8b 42 08                           	mov eax, dword ptr [edx + 8]
0xe908:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0xe90c:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xe910:     8d 44 24 7c                        	lea eax, [esp + 0x7c]
0xe914:     c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0xe91c:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xe920:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0xe928:     89 0c 24                           	mov dword ptr [esp], ecx
0xe92b:     e8 50 c6 00 00                     	call 0x1af80 <unknown_1af80>
0xe930:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xe934:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xe937:     8b 12                              	mov edx, dword ptr [edx]
0xe939:     85 c0                              	test eax, eax
0xe93b:     89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0xe93f:     89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0xe943:     0f 85 7f fc ff ff                  	jne 0xe5c8 <function_e5c8>
0xe949:     31 c0                              	xor eax, eax
0xe94b:     e9 84 fc ff ff                     	jmp 0xe5d4 <function_e5d4>
; function: function_e950 at 0xe950 -- 0xe98d
0xe950:     85 d2                              	test edx, edx
0xe952:     0f 88 7e 00 00 00                  	js 0xe9d6 <function_e9d6>
0xe958:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xe95c:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0xe95f:     85 c0                              	test eax, eax
0xe961:     74 08                              	je 0xe96b <function_e950+0x1b>
0xe963:     8b 10                              	mov edx, dword ptr [eax]
0xe965:     89 04 24                           	mov dword ptr [esp], eax
0xe968:     ff 52 04                           	call dword ptr [edx + 4]
0xe96b:     83 6c 24 2c 0c                     	sub dword ptr [esp + 0x2c], 0xc
0xe970:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xe974:     39 54 24 30                        	cmp dword ptr [esp + 0x30], edx
0xe978:     0f 82 f5 fd ff ff                  	jb 0xe773
0xe97e:     8b 87 84 00 00 00                  	mov eax, dword ptr [edi + 0x84]
0xe984:     2b 44 24 1c                        	sub eax, dword ptr [esp + 0x1c]
0xe988:     e9 25 fe ff ff                     	jmp 0xe7b2
; data inside code section at 0xe98d -- 0xe9aa
0xe98d:     8d 76 00 85 d2 79 31 8b  54 24 2c 8b 5a 04 85 db   |.v...y1.T$,.Z...|
0xe99d:     74 cc 8d 43 04 89 04 24  e8 76 40 00 00            |t..C...$.v@..   |
; function: function_e9aa at 0xe9aa -- 0xe9ad
0xe9aa:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe9ad -- 0xe9ae
0xe9ad:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe9ae -- 0xe9af
; data inside code section at 0xe9af -- 0xe9b2
0xe9af:     ff ff ff                                           |...             |
; function: function_e9b2 at 0xe9b2 -- 0xe9b4
0xe9b2:     eb b7                              	jmp 0xe96b
; data inside code section at 0xe9b4 -- 0xe9b8
0xe9b4:     8d 74 26 00                                        |.t&.            |
; function: function_e9b8 at 0xe9b8 -- 0xe9c5
0xe9b8:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xe9bc:     8b 10                              	mov edx, dword ptr [eax]
0xe9be:     31 c0                              	xor eax, eax
0xe9c0:     e9 0f fc ff ff                     	jmp 0xe5d4 <function_e5d4>
; function: function_e9c5 at 0xe9c5 -- 0xe9d6
0xe9c5:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xe9c9:     83 c0 08                           	add eax, 8
0xe9cc:     89 04 24                           	mov dword ptr [esp], eax
0xe9cf:     e8 4c 40 00 00                     	call 0x12a20 <unknown_12a20>
0xe9d4:     eb 95                              	jmp 0xe96b
; function: function_e9d6 at 0xe9d6 -- 0xe9f1
0xe9d6:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xe9da:     8b 58 04                           	mov ebx, dword ptr [eax + 4]
0xe9dd:     85 db                              	test ebx, ebx
0xe9df:     74 8a                              	je 0xe96b
0xe9e1:     8b 03                              	mov eax, dword ptr [ebx]
0xe9e3:     85 c0                              	test eax, eax
0xe9e5:     74 c3                              	je 0xe9aa <function_e9aa>
0xe9e7:     8b 10                              	mov edx, dword ptr [eax]
0xe9e9:     89 04 24                           	mov dword ptr [esp], eax
0xe9ec:     ff 52 04                           	call dword ptr [edx + 4]
0xe9ef:     eb b9                              	jmp 0xe9aa <function_e9aa>
; data inside code section at 0xe9f1 -- 0xe9f8
0xe9f1:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_e9f8 at 0xe9f8 -- 0xea50
0xe9f8:     8b 84 24 14 01 00 00               	mov eax, dword ptr [esp + 0x114]
0xe9ff:     39 84 24 18 01 00 00               	cmp dword ptr [esp + 0x118], eax
0xea06:     0f 87 9f 00 00 00                  	ja 0xeaab <function_eaab>
0xea0c:     8b 84 24 08 01 00 00               	mov eax, dword ptr [esp + 0x108]
0xea13:     85 c0                              	test eax, eax
0xea15:     74 3e                              	je 0xea55 <function_ea55>
0xea17:     8b 94 24 04 01 00 00               	mov edx, dword ptr [esp + 0x104]
0xea1e:     83 fa 09                           	cmp edx, 9
0xea21:     0f 86 d1 00 00 00                  	jbe 0xeaf8 <function_eaf8>
0xea27:     3b 44 24 18                        	cmp eax, dword ptr [esp + 0x18]
0xea2b:     0f 84 be 00 00 00                  	je 0xeaef <function_eaef>
0xea31:     8b 8c 24 0c 01 00 00               	mov ecx, dword ptr [esp + 0x10c]
0xea38:     39 ca                              	cmp edx, ecx
0xea3a:     0f 82 b8 00 00 00                  	jb 0xeaf8 <function_eaf8>
0xea40:     85 c9                              	test ecx, ecx
0xea42:     0f 85 7c 00 00 00                  	jne 0xeac4 <function_eac4>
0xea48:     83 fa 0a                           	cmp edx, 0xa
0xea4b:     76 08                              	jbe 0xea55 <function_ea55>
0xea4d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xea50 -- 0xea51
0xea50:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xea51 -- 0xea52
; data inside code section at 0xea52 -- 0xea55
0xea52:     ff ff ff                                           |...             |
; function: function_ea55 at 0xea55 -- 0xea92
0xea55:     80 bc 24 88 00 00 00 00            	cmp byte ptr [esp + 0x88], 0
0xea5d:     74 08                              	je 0xea67 <function_ea55+0x12>
0xea5f:     c6 84 24 88 00 00 00 00            	mov byte ptr [esp + 0x88], 0
0xea67:     8d 44 24 68                        	lea eax, [esp + 0x68]
0xea6b:     89 04 24                           	mov dword ptr [esp], eax
0xea6e:     e8 ad 3f 00 00                     	call 0x12a20 <unknown_12a20>
0xea73:     8b 84 24 1c 01 00 00               	mov eax, dword ptr [esp + 0x11c]
0xea7a:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xea81:     0f 85 83 00 00 00                  	jne 0xeb0a <function_eb0a>
0xea87:     81 c4 2c 01 00 00                  	add esp, 0x12c
0xea8d:     5b                                 	pop ebx
0xea8e:     5e                                 	pop esi
0xea8f:     5f                                 	pop edi
0xea90:     5d                                 	pop ebp
0xea91:     c3                                 	ret 
; function: function_ea92 at 0xea92 -- 0xea9d
0xea92:     8b 00                              	mov eax, dword ptr [eax]
0xea94:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0xea98:     e9 6f fe ff ff                     	jmp 0xe90c
; data inside code section at 0xea9d -- 0xeaa0
0xea9d:     8d 76 00                                           |.v.             |
; function: function_eaa0 at 0xeaa0 -- 0xeaab
0xeaa0:     8b 5c 24 28                        	mov ebx, dword ptr [esp + 0x28]
0xeaa4:     89 de                              	mov esi, ebx
0xeaa6:     e9 65 fd ff ff                     	jmp 0xe810
; function: function_eaab at 0xeaab -- 0xeac4
0xeaab:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xeaaf:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xeab3:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xeab7:     89 0c 24                           	mov dword ptr [esp], ecx
0xeaba:     e8 91 cb 00 00                     	call 0x1b650 <unknown_1b650>
0xeabf:     e9 48 ff ff ff                     	jmp 0xea0c
; function: function_eac4 at 0xeac4 -- 0xeaea
0xeac4:     8d 94 24 0c 01 00 00               	lea edx, [esp + 0x10c]
0xeacb:     8d 84 24 08 01 00 00               	lea eax, [esp + 0x108]
0xead2:     e8 f9 fb ff ff                     	call 0xe6d0 <function_e6d0>
0xead7:     8b 94 24 04 01 00 00               	mov edx, dword ptr [esp + 0x104]
0xeade:     8b 84 24 08 01 00 00               	mov eax, dword ptr [esp + 0x108]
0xeae5:     e9 5e ff ff ff                     	jmp 0xea48
; function: function_eaea at 0xeaea -- 0xeaef
0xeaea:     e8 6f 30 00 00                     	call 0x11b5e <unknown_11b5e>
; function: function_eaef at 0xeaef -- 0xeaf8
0xeaef:     83 fa 0a                           	cmp edx, 0xa
0xeaf2:     0f 84 39 ff ff ff                  	je 0xea31
; function: function_eaf8 at 0xeaf8 -- 0xeb00
0xeaf8:     e8 31 31 00 00                     	call 0x11c2e <unknown_11c2e>
0xeafd:     8d 76 00                           	lea esi, [esi]
; function: function_eb00 at 0xeb00 -- 0xeb0a
0xeb00:     e8 8d 30 00 00                     	call 0x11b92 <unknown_11b92>
0xeb05:     e8 bc 30 00 00                     	call 0x11bc6 <unknown_11bc6>
; function: function_eb0a at 0xeb0a -- 0xeb0b
; dynamically linked function: __stack_chk_fail at 0xeb0b -- 0xeb0c
; data inside code section at 0xeb0c -- 0xeb0f
0xeb0c:     ff ff ff                                           |...             |
; function: function_eb0f at 0xeb0f -- 0xeb2e
0xeb0f:     c7 44 24 0c c0 52 00 00            	mov dword ptr [esp + 0xc], 0x52c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<void>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<void>&]"
0xeb17:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xeb1f:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xeb27:     c7 04 24 03 24 00 00               	mov dword ptr [esp], 0x2403 ; "px != 0"
; data inside code section at 0xeb2e -- 0xeb2f
0xeb2e:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xeb2f -- 0xeb30
; data inside code section at 0xeb30 -- 0xeb57
0xeb30:     ff ff ff c7 44 24 0c c0  50 00 00 c7 44 24 08 c9   |....D$..P...D$..|
0xeb40:     01 00 00 c7 44 24 04 b4  34 00 00 c7 04 24 c4 24   |....D$..4....$.$|
0xeb50:     00 00 e8 fc ff ff ff                               |.......         |
; function: function_eb57 at 0xeb57 -- 0xeb74
0xeb57:     8d 94 24 87 00 00 00               	lea edx, [esp + 0x87]
0xeb5e:     8d 8c 24 80 00 00 00               	lea ecx, [esp + 0x80]
0xeb65:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xeb69:     c7 44 24 04 66 25 00 00            	mov dword ptr [esp + 4], 0x2566 ; "call to empty boost::function"
0xeb71:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xeb74 -- 0xeb75
0xeb74:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xeb75 -- 0xeb76
; data inside code section at 0xeb76 -- 0xeb8c
0xeb76:     ff ff ff 8d 84 24 80 00  00 00 8d 6c 24 74 89 44   |.....$.....l$t.D|
0xeb86:     24 04 89 2c 24 e8                                  |$..,$.          |
; dynamically linked function: _ZNSt13runtime_errorC2ERKSs at 0xeb8c -- 0xeb8d
; data inside code section at 0xeb8d -- 0xeb9b
0xeb8d:     ff ff ff 8d 94 24 80 00  00 00 89 14 24 e8         |.....$......$.  |
; dynamically linked function: _ZNSsD1Ev at 0xeb9b -- 0xeb9c
; data inside code section at 0xeb9c -- 0xebc7
0xeb9c:     ff ff ff c7 44 24 74 f8  f0 00 00 89 2c 24 e8 b1   |....D$t.....,$..|
0xebac:     8f 00 00 89 44 24 14 89  54 24 10 89 2c 24 e8 31   |....D$..T$..,$.1|
0xebbc:     25 00 00 8b 44 24 14 8b  54 24 10                  |%...D$..T$.     |
; function: function_ebc7 at 0xebc7 -- 0xebc8
; function: function_ebc8 at 0xebc8 -- 0xebd4
0xebc8:     fa                                 	cli 
0xebc9:     01 74 62 83                        	add dword ptr [edx - 0x7d], esi
0xebcd:     ea 01 74 4b 89 c3 8b               	ljmp 0x8bc3:0x894b7401 <function_894b7401>
; data inside code section at 0xebd4 -- 0xebf1
0xebd4:     94 24 14 01 00 00 39 94  24 18 01 00 00 76 14 8b   |.$....9.$....v..|
0xebe4:     4c 24 24 8b 44 24 20 89  4c 24 04 89 04            |L$$.D$ .L$...   |
; function: function_ebf1 at 0xebf1 -- 0xebf7
0xebf1:     24 e8                              	and al, 0xe8
0xebf3:     59                                 	pop ecx
0xebf4:     ca 00 00                           	retf 0
; function: function_ebf7 at 0xebf7 -- 0xebf8
; data inside code section at 0xebf8 -- 0xec08
0xebf8:     94 24 88 00 00 00 89 de  89 14 24 e8 08 91 00 00   |.$........$.....|
; function: function_ec08 at 0xec08 -- 0xec09
; data inside code section at 0xec09 -- 0xec18
0xec09:     44 24 68 89 04 24 e8 0c  3e 00 00 89 34 24 e8      |D$h..$..>...4$. |
; dynamically linked function: _Unwind_Resume at 0xec18 -- 0xec19
; data inside code section at 0xec19 -- 0xec20
0xec19:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xec20 -- 0xec21
; data inside code section at 0xec21 -- 0xec25
0xec21:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_end_catch at 0xec25 -- 0xec26
; data inside code section at 0xec26 -- 0xec29
0xec26:     ff ff ff                                           |...             |
; function: function_ec29 at 0xec29 -- 0xec2e
0xec29:     e9 e5 fa ff ff                     	jmp 0xe713
; data inside code section at 0xec2e -- 0xec58
0xec2e:     89 04 24 e8 fc ff ff ff  8b 6e 08 85 ed 0f 84 bf   |..$......n......|
0xec3e:     fe ff ff 8b 45 00 89 2c  24 ff 50 0c 8b 45 00 c6   |....E..,$.P..E..|
0xec4e:     45 04 00 89 2c 24 ff 50  10 e8                     |E...,$.P..      |
; dynamically linked function: __cxa_rethrow at 0xec58 -- 0xec59
; data inside code section at 0xec59 -- 0xec6d
0xec59:     ff ff ff 89 c5 8d 8c 24  80 00 00 00 89 54 24 10   |.......$.....T$.|
0xec69:     89 0c 24 e8                                        |..$.            |
; dynamically linked function: _ZNSsD1Ev at 0xec6d -- 0xec6e
; data inside code section at 0xec6e -- 0xec71
0xec6e:     ff ff ff                                           |...             |
; function: function_ec71 at 0xec71 -- 0xec7c
0xec71:     89 e8                              	mov eax, ebp
0xec73:     8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0xec77:     e9 4b ff ff ff                     	jmp 0xebc7 <function_ebc7>
; function: function_ec7c at 0xec7c -- 0xec81
0xec7c:     e9 50 ff ff ff                     	jmp 0xebd1
; data inside code section at 0xec81 -- 0xec87
0xec81:     89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: pthread_mutex_unlock at 0xec87 -- 0xec88
; data inside code section at 0xec88 -- 0xec8b
0xec88:     ff ff ff                                           |...             |
; function: function_ec8b at 0xec8b -- 0xec90
0xec8b:     e9 78 ff ff ff                     	jmp 0xec08 <function_ec08>
; function: function_ec90 at 0xec90 -- 0xeca0
0xec90:     89 c3                              	mov ebx, eax
0xec92:     8b 45 00                           	mov eax, dword ptr [ebp]
0xec95:     89 2c 24                           	mov dword ptr [esp], ebp
0xec98:     ff 50 10                           	call dword ptr [eax + 0x10]
0xec9b:     e9 33 ff ff ff                     	jmp 0xebd3
; function: function_eca0 at 0xeca0 -- 0xeca5
0xeca0:     e9 22 ff ff ff                     	jmp 0xebc7 <function_ebc7>
; function: function_eca5 at 0xeca5 -- 0xecc1
0xeca5:     80 bc 24 88 00 00 00 00            	cmp byte ptr [esp + 0x88], 0
0xecad:     8d 76 00                           	lea esi, [esi]
0xecb0:     74 08                              	je 0xecba <function_eca5+0x15>
0xecb2:     c6 84 24 88 00 00 00 00            	mov byte ptr [esp + 0x88], 0
0xecba:     89 c6                              	mov esi, eax
0xecbc:     e9 47 ff ff ff                     	jmp 0xec08 <function_ec08>
; function: function_ecc1 at 0xecc1 -- 0xecc8
0xecc1:     89 c3                              	mov ebx, eax
0xecc3:     e9 2f ff ff ff                     	jmp 0xebf7 <function_ebf7>
; data inside code section at 0xecc8 -- 0xeccf
0xecc8:     89 c5 89 54 24 10 e8                               |...T$..         |
; dynamically linked function: __cxa_end_catch at 0xeccf -- 0xecd0
; data inside code section at 0xecd0 -- 0xecd3
0xecd0:     ff ff ff                                           |...             |
; function: function_ecd3 at 0xecd3 -- 0xecde
0xecd3:     89 e8                              	mov eax, ebp
0xecd5:     8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0xecd9:     e9 ee fe ff ff                     	jmp 0xebcc
; section: .text.startup
; function: _GLOBAL__sub_I__ZNK9CKeyStore9GetPubKeyERK6CKeyIDR7CPubKey at 0xed30 -- 0xed46
0xed30:     83 ec 2c                           	sub esp, 0x2c
0xed33:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xed39:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xed3d:     31 c0                              	xor eax, eax
0xed3f:     c7 04 24 38 23 00 00               	mov dword ptr [esp], 0x2338
; data inside code section at 0xed46 -- 0xed47
0xed46:     e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0xed47 -- 0xed48
; data inside code section at 0xed48 -- 0xed4f
0xed48:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0xed4f -- 0xed5b
; data inside code section at 0xed5b -- 0xed5e
0xed5b:     c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0xed5e -- 0xed62
; data inside code section at 0xed62 -- 0xed63
0xed62:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0xed63 -- 0xed64
; data inside code section at 0xed64 -- 0xed88
0xed64:     ff ff ff 80 3d 40 f2 00  00 00 75 30 c6 05 40 f2   |....=@....u0..@.|
0xed74:     00 00 01 c7 04 24 40 f2  00 00 e8 4d 8d 00 00 50   |.....$@....M...P|
0xed84:     c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0xed88 -- 0xed9b
; data inside code section at 0xed9b -- 0xed9c
0xed9b:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0xed9c -- 0xed9d
; data inside code section at 0xed9d -- 0xeda1
0xed9d:     ff ff ff e8                                        |....            |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0xeda1 -- 0xeda2
; data inside code section at 0xeda2 -- 0xeda4
0xeda2:     ff ff                                              |..              |
; function: function_eda4 at 0xeda4 -- 0xedaa
0xeda4:     ff a3 3c 23 00 00                  	jmp dword ptr [ebx + 0x233c]
; data inside code section at 0xedaa -- 0xedab
0xedaa:     e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0xedab -- 0xedac
; data inside code section at 0xedac -- 0xedae
0xedac:     ff ff                                              |..              |
; function: function_edae at 0xedae -- 0xedb4
0xedae:     ff a3 40 23 00 00                  	jmp dword ptr [ebx + 0x2340]
; data inside code section at 0xedb4 -- 0xedb5
0xedb4:     e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0xedb5 -- 0xedb6
; data inside code section at 0xedb6 -- 0xedb8
0xedb6:     ff ff                                              |..              |
; function: function_edb8 at 0xedb8 -- 0xedbe
0xedb8:     ff a3 44 23 00 00                  	jmp dword ptr [ebx + 0x2344]
; function: function_edbe at 0xedbe -- 0xedcf
0xedbe:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xedc2:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xedc9:     75 04                              	jne 0xedcf <function_edbe+0x10>
0xedcb:     83 c4 2c                           	add esp, 0x2c
0xedce:     c3                                 	ret 
; data inside code section at 0xedcf -- 0xedd0
0xedcf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xedd0 -- 0xedd1
; data inside code section at 0xedd1 -- 0xedd4
0xedd1:     ff ff ff                                           |...             |

;;
;; Data Segment
;;

; section: .rodata.str1.1
0x236f:     62 6f 6f 73 74 3a 3a 6c  6f 63 6b 5f 65 72 72 6f   |boost::lock_erro|   "boost::lock_error"
0x237f:     72 00                                              |r.              |
0x2381:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 6c   |!pthread_mutex_l|   "!pthread_mutex_lock(m)"
0x2391:     6f 63 6b 28 6d 29 00                               |ock(m).         |
0x2398:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(m)"
0x23a8:     6e 6c 6f 63 6b 28 6d 29  00                        |nlock(m).       |
0x23b1:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 64   |!pthread_mutex_d|   "!pthread_mutex_destroy(&m)"
0x23c1:     65 73 74 72 6f 79 28 26  6d 29 00                  |estroy(&m).     |
0x23cc:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 64 65   |!pthread_cond_de|   "!pthread_cond_destroy(&cond)"
0x23dc:     73 74 72 6f 79 28 26 63  6f 6e 64 29 00            |stroy(&cond).   |
0x23e9:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(&m)"
0x23f9:     6e 6c 6f 63 6b 28 26 6d  29 00                     |nlock(&m).      |
0x2403:     70 78 20 21 3d 20 30 00                            |px != 0.        |   "px != 0"
0x240b:     66 61 6c 73 65 00                                  |false.          |   "false"
0x2411:     69 73 5f 76 61 6c 69 64  28 29 00                  |is_valid().     |   "is_valid()"
0x241c:     21 66 75 6c 6c 28 29 00                            |!full().        |   "!full()"
0x2424:     74 68 69 73 2d 3e 69 73  5f 69 6e 69 74 69 61 6c   |this->is_initial|   "this->is_initialized()"
0x2434:     69 7a 65 64 28 29 00                               |ized().         |
0x243b:     3a 20 00                                           |: .             |
0x243e:     6e 20 3e 20 30 00                                  |n > 0.          |   "n > 0"
0x2444:     61 6c 6c 6f 63 61 74 6f  72 73 2e 68 00            |allocators.h.   |   "allocators.h"
0x2451:     69 74 20 21 3d 20 68 69  73 74 6f 67 72 61 6d 2e   |it != histogram.|   "it != histogram.end()"
0x2461:     65 6e 64 28 29 00                                  |end().          |
0x2467:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 73 69   |!pthread_cond_si|
0x2477:     67 6e 61 6c 28 26 63 6f  6e 64 29 00               |gnal(&cond).    |
0x2483:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 77 61   |!pthread_cond_wa|   "!pthread_cond_wait(&cond,&m)"
0x2493:     69 74 28 26 63 6f 6e 64  2c 26 6d 29 00            |it(&cond,&m).   |
0x24a0:     6b 65 79 73 74 6f 72 65  2e 63 70 70 00            |keystore.cpp.   |   "keystore.cpp"
0x24ad:     63 73 5f 4b 65 79 53 74  6f 72 65 00               |cs_KeyStore.    |   "cs_KeyStore"
0x24b9:     6b 65 79 73 74 6f 72 65  2e 68 00                  |keystore.h.     |   "keystore.h"
0x24c4:     5f 73 68 61 72 65 64 5f  73 74 61 74 65 2e 75 6e   |_shared_state.un|   "_shared_state.unique()"
0x24d4:     69 71 75 65 28 29 00                               |ique().         |
0x24db:     69 74 20 21 3d 20 5f 6c  69 73 74 2e 65 6e 64 28   |it != _list.end(|   "it != _list.end()"
0x24eb:     29 00                                              |).              |
0x24ed:     6d 61 70 5f 69 74 20 21  3d 20 5f 67 72 6f 75 70   |map_it != _group|   "map_it != _group_map.end()"
0x24fd:     5f 6d 61 70 2e 65 6e 64  28 29 00                  |_map.end().     |
0x2508:     70 20 3d 3d 20 30 20 7c  7c 20 70 20 21 3d 20 70   |p == 0 || p != p|   "p == 0 || p != px"
0x2518:     78 00                                              |x.              |
0x251a:     6d 65 6d 62 65 72 73 5f  2e 63 61 70 61 63 69 74   |members_.capacit|   "members_.capacity_ >= N"
0x252a:     79 5f 20 3e 3d 20 4e 00                            |y_ >= N.        |
0x2532:     73 69 7a 65 5f 20 3c 3d  20 6d 65 6d 62 65 72 73   |size_ <= members|   "size_ <= members_.capacity_"
0x2542:     5f 2e 63 61 70 61 63 69  74 79 5f 00               |_.capacity_.    |
0x254e:     6d 65 6d 62 65 72 73 5f  2e 63 61 70 61 63 69 74   |members_.capacit|   "members_.capacity_ >= n"
0x255e:     79 5f 20 3e 3d 20 6e 00                            |y_ >= n.        |
0x2566:     63 61 6c 6c 20 74 6f 20  65 6d 70 74 79 20 62 6f   |call to empty bo|   "call to empty boost::function"
0x2576:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 00         |ost::function.  |
0x2584:     ??                                                 |?               |
; section: .gcc_except_table
0x2cbc:     ff ff 01 08 38 03 79 00  74 17 00 00 ff ff 01 0d   |....8.y.t.......|
0x2ccc:     1c 05 00 00 38 03 7c 00  89 01 05 00 00 ff ff 01   |....8.|.........|
0x2cdc:     0e 1c 05 00 00 45 03 89  01 00 9e 01 05 00 00 ff   |.....E..........|
0x2cec:     ff 01 13 1c 05 00 00 36  05 b5 01 00 57 03 9b 01   |.......6....W...|
0x2cfc:     00 b0 01 05 00 00 00 00  ff 00 29 01 1c 70 29 ae   |..........)..p).|
0x2d0c:     02 01 a3 01 05 86 02 03  d3 01 05 ae 02 01 a4 02   |................|
0x2d1c:     05 bd 02 05 c5 02 0a 00  00 01 00 00 7d 7f 00 00   |............}...|
0x2d2c:     00 00 00 00 00 00 00 00  ff 00 0d 01 08 26 03 56   |.............&.V|
0x2d3c:     01 5e 0a 00 00 7f 00 00  00 ff ff 01 0c 21 05 67   |.^...........!.g|
0x2d4c:     00 2c 05 00 00 7d 05 00  00 ff ff 01 19 47 03 a7   |.,...}.......G..|
0x2d5c:     02 00 5e 13 89 02 00 7e  3b a7 02 00 c6 01 03 00   |..^....~;.......|
0x2d6c:     00 a2 02 05 00 00 ff ff  01 09 3b 03 75 00 82 01   |..........;.u...|
0x2d7c:     05 00 00 ff ff 01 08 2a  05 5b 00 56 17 00 00 ff   |.......*.[.V....|
0x2d8c:     ff 01 10 65 05 b1 01 00  8c 01 05 d1 01 00 ac 01   |...e............|
0x2d9c:     25 00 00 ff ff 01 0b a7  02 05 b6 02 00 c3 02 05   |%...............|
0x2dac:     00 00 00 00 ff 00 25 01  1d bb 02 05 bb 04 00 d8   |......%.........|
0x2dbc:     02 03 85 04 00 9d 03 05  f0 03 01 80 04 05 bf 04   |................|
0x2dcc:     00 b6 04 05 00 00 01 00  00 00 00 00 ff ff 01 0a   |................|
0x2ddc:     39 05 a2 01 00 b5 01 05  00 00 ff ff 01 0a 39 05   |9.............9.|
0x2dec:     aa 01 00 bd 01 05 00 00  ff ff 01 0f 2c 05 99 01   |............,...|
0x2dfc:     00 4d 03 87 01 00 94 01  17 00 00 ff ff 01 08 2a   |.M.............*|
0x2e0c:     05 5b 00 56 17 00 00 ff  ff 01 15 39 05 c5 01 00   |.[.V.......9....|
0x2e1c:     79 05 8e 02 00 a0 01 05  e3 01 00 c0 01 23 00 00   |y............#..|
0x2e2c:     ff ff 01 0a 74 05 97 01  00 a2 01 05 00 00 ff ff   |....t...........|
0x2e3c:     01 10 57 05 b8 02 00 f8  01 05 82 02 00 8f 02 05   |..W.............|
0x2e4c:     00 00 ff ff 01 0b 9b 01  05 b5 01 00 c2 01 05 00   |................|
0x2e5c:     00 ff ff 01 0f 59 05 00  00 8d 01 05 d1 01 00 de   |.....Y..........|
0x2e6c:     01 05 00 00 ff ff 01 0f  55 05 00 00 92 01 05 a1   |........U.......|
0x2e7c:     02 00 ae 02 05 00 00 ff  ff 01 22 60 05 00 00 a1   |.........."`....|
0x2e8c:     01 05 ed 07 00 bb 04 92  01 ff 07 00 82 06 19 ed   |................|
0x2e9c:     07 00 89 07 05 ff 07 00  fa 07 05 00 00 ff ff 01   |................|
0x2eac:     0f 6f 05 00 00 96 01 05  cd 01 00 de 01 05 00 00   |.o..............|
0x2ebc:     ff ff 01 0f 5c 0f b5 01  00 86 01 05 00 00 c6 01   |....\...........|
0x2ecc:     05 00 00 ff ff 01 0c 24  05 64 00 2f 05 56 00 5f   |.......$.d./.V._|
0x2edc:     05 00 00 ff ff 01 0c 24  05 6c 00 2f 05 5e 00 67   |.......$.l./.^.g|
0x2eec:     05 00 00 ff ff 01 0c 24  05 6c 00 2f 05 5e 00 67   |.......$.l./.^.g|
0x2efc:     05 00 00 ff ff 01 0c 24  05 64 00 2f 05 56 00 5f   |.......$.d./.V._|
0x2f0c:     05 00 00 ff ff 01 1a 37  05 f9 02 00 45 05 df 03   |.......7....E...|
0x2f1c:     00 6d 19 c9 03 00 cb 01  05 cd 03 00 c4 03 1b 00   |.m..............|
0x2f2c:     00 ff ff 01 11 fd 01 05  9f 02 00 9a 02 05 b5 02   |................|
0x2f3c:     00 b0 02 17 00 00 ff ff  01 14 6a 05 00 00 80 01   |..........j.....|
0x2f4c:     1b 9d 03 00 e0 01 1d 00  00 aa 03 05 00 00 ff ff   |................|
0x2f5c:     01 0e 59 05 00 00 72 05  d6 02 00 e3 02 05 00 00   |..Y...r.........|
0x2f6c:     ff ff 01 23 61 05 00 00  b8 01 05 8e 08 00 87 02   |...#a...........|
0x2f7c:     23 a4 08 00 a1 04 ca 01  b7 08 00 93 06 c3 01 8e   |#...............|
0x2f8c:     08 00 9f 08 05 00 00 00  ff 00 1d 01 15 43 05 00   |.............C..|
0x2f9c:     00 90 01 05 b2 02 01 c2  02 05 c7 02 00 d1 02 05   |................|
0x2fac:     00 00 01 00 00 00 00 00  ff ff 01 21 9e 01 05 00   |...........!....|
0x2fbc:     00 ee 01 05 c6 03 00 ca  02 05 dc 03 00 e1 02 1d   |................|
0x2fcc:     c6 03 00 89 03 1d 00 00  d7 03 05 00 00 ff ff 01   |................|
0x2fdc:     10 59 05 00 00 da 01 80  01 d6 03 00 e3 03 05 00   |.Y..............|
0x2fec:     00 ff ff 01 34 64 05 00  00 a1 01 05 9c 08 00 cb   |....4d..........|
0x2ffc:     02 25 a0 08 00 d8 04 8f  01 b7 08 00 80 06 19 82   |.%..............|
0x300c:     08 00 d3 06 05 9c 08 00  f1 06 03 b7 08 00 91 07   |................|
0x301c:     19 82 08 00 97 08 05 00  00 00 00 00 ff 00 21 01   |..............!.|
0x302c:     15 4c 05 00 00 a3 01 05  d6 02 03 f7 02 05 fc 02   |.L..............|
0x303c:     00 86 03 05 00 00 01 00  00 7d 00 00 00 00 00 00   |.........}......|
0x304c:     ff ff 01 0b e1 01 05 b3  02 00 d0 02 05 00 00 ff   |................|
0x305c:     ff 01 10 56 05 00 00 b9  01 8c 01 ef 02 00 fc 02   |...V............|
0x306c:     05 00 00 00 ff 00 1d 01  15 48 05 00 00 a3 02 05   |.........H......|
0x307c:     e2 02 01 f2 02 05 f7 02  00 81 03 05 00 00 01 00   |................|
0x308c:     00 00 00 00 ff ff 01 0b  9a 02 05 f8 02 00 9b 03   |................|
0x309c:     05 00 00 ff ff 01 21 61  05 00 00 6d 05 a5 09 00   |......!a...m....|
0x30ac:     9c 04 ef 01 f9 08 00 ab  07 05 a9 09 00 fb 07 05   |................|
0x30bc:     a5 09 00 a0 09 05 00 00  ff ff 01 0c 1e 05 65 00   |..............e.|
0x30cc:     29 05 00 00 7b 05 00 00  ff 00 21 01 16 26 05 00   |)...{.....!..&..|
0x30dc:     00 81 01 83 01 bc 02 01  d4 02 05 d9 02 00 e3 02   |................|
0x30ec:     05 00 00 01 00 00 00 00  00 00 00 00 ff 00 2d 01   |..............-.|
0x30fc:     25 32 05 00 00 57 05 ec  03 00 ce 01 05 d0 04 00   |%2...W..........|
0x310c:     98 03 05 93 04 01 89 04  05 00 00 a2 04 0a e0 04   |................|
0x311c:     00 ea 04 05 00 00 01 00  00 00 00 00 ff ff 01 16   |................|
0x312c:     92 01 fe 04 00 00 bb 06  03 9e 0c 00 e7 09 05 00   |................|
0x313c:     00 ab 0c 05 00 00 00 00  ff 00 2d 01 23 92 01 05   |..........-.#...|
0x314c:     9b 03 00 a6 01 05 ad 03  00 d6 01 05 82 03 01 93   |................|
0x315c:     02 37 9b 03 00 91 03 0a  bd 03 00 a8 03 05 00 00   |.7..............|
0x316c:     01 00 00 00 00 00 00 00  ff 00 25 01 1a 46 05 00   |..........%..F..|
0x317c:     00 ac 01 03 ca 02 01 c5  02 05 00 00 dd 02 0f ec   |................|
0x318c:     02 00 8a 03 05 00 00 01  00 00 00 00 00 00 00 00   |................|
0x319c:     ff ff 01 4f 88 01 ab 02  00 00 bf 03 03 95 13 00   |...O............|
0x31ac:     df 03 03 00 00 fa 06 03  ed 13 00 88 09 2a 00 00   |.............*..|
0x31bc:     be 09 03 af 13 00 eb 0a  d9 01 ed 13 00 9a 0f 33   |...............3|
0x31cc:     00 00 8c 10 cb 02 ed 13  00 aa 13 05 00 00 c4 13   |................|
0x31dc:     05 00 00 fe 13 30 00 00  d3 15 03 ed 13 00 c3 17   |.....0..........|
0x31ec:     44 00 00 ff ff 01 1a 3b  03 00 00 e3 01 05 ce 04   |D......;........|
0x31fc:     00 9d 02 45 00 00 a3 03  78 ce 04 00 db 04 05 00   |...E....x.......|
0x320c:     00 00 00 00 ff 00 69 01  5a a3 01 05 b1 0e 00 bd   |......i.Z.......|
0x321c:     02 b5 01 ac 0e 00 fe 04  05 c0 0e 00 af 05 39 ac   |..............9.|
0x322c:     0e 00 e3 06 03 d0 0e 05  db 07 05 b1 0e 00 98 08   |................|
0x323c:     87 01 c0 0e 00 9e 0a 05  00 00 ea 0a 05 f1 0e 00   |................|
0x324c:     82 0b 05 d5 0e 00 a4 0c  05 d0 0e 05 bb 0c 05 8c   |................|
0x325c:     0e 05 da 0c 05 df 0c 05  c7 0d 05 00 00 f7 0d 15   |................|
0x326c:     f8 0e 03 00 00 01 7d 01  7d 00 00 00 e4 f0 00 00   |......}.}.......|
0x327c:     ff ff 01 3f 5a 05 00 00  62 05 cf 09 00 ca 02 aa   |...?Z...b.......|
0x328c:     01 cb 09 00 98 04 19 cf  09 00 a2 05 05 cb 09 00   |................|
0x329c:     e8 05 05 9e 09 00 8c 06  87 01 cb 09 00 9a 07 1b   |................|
0x32ac:     cf 09 00 d2 07 05 00 00  ef 07 05 9e 09 00 c1 09   |................|
0x32bc:     05 00 00 ??                                        |...?            |
; section: .rodata.str1.4
0x32c0:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x32d0:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x32e0:     64 2f 70 74 68 72 65 61  64 5f 6d 75 74 65 78 5f   |d/pthread_mutex_|
0x32f0:     73 63 6f 70 65 64 5f 6c  6f 63 6b 2e 68 70 70 00   |scoped_lock.hpp.|
0x3300:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x3310:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x3320:     64 2f 72 65 63 75 72 73  69 76 65 5f 6d 75 74 65   |d/recursive_mute|
0x3330:     78 2e 68 70 70 00                                  |x.hpp.          |
0x3336:     00 00                                              |..              |
0x3338:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/mutex.hpp"
0x3348:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x3358:     64 2f 6d 75 74 65 78 2e  68 70 70 00               |d/mutex.hpp.    |
0x3364:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x3374:     73 74 2f 73 6d 61 72 74  5f 70 74 72 2f 73 68 61   |st/smart_ptr/sha|
0x3384:     72 65 64 5f 70 74 72 2e  68 70 70 00               |red_ptr.hpp.    |
0x3390:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x33a0:     73 74 2f 76 61 72 69 61  6e 74 2f 64 65 74 61 69   |st/variant/detai|
0x33b0:     6c 2f 76 69 73 69 74 61  74 69 6f 6e 5f 69 6d 70   |l/visitation_imp|
0x33c0:     6c 2e 68 70 70 00                                  |l.hpp.          |
0x33c6:     00 00                                              |..              |
0x33c8:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x33d8:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0x33e8:     69 6c 2f 61 75 74 6f 5f  62 75 66 66 65 72 2e 68   |il/auto_buffer.h|
0x33f8:     70 70 00                                           |pp.             |
0x33fb:     00                                                 |.               |
0x33fc:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/optional/optional.hpp"
0x340c:     73 74 2f 6f 70 74 69 6f  6e 61 6c 2f 6f 70 74 69   |st/optional/opti|
0x341c:     6f 6e 61 6c 2e 68 70 70  00                        |onal.hpp.       |
0x3425:     00 00 00                                           |...             |
0x3428:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x3438:     73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x3448:     61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x3458:     72 2e 68 70 70 00                                  |r.hpp.          |
0x345e:     00 00                                              |..              |
0x3460:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x3470:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0x3480:     69 6c 2f 73 6c 6f 74 5f  67 72 6f 75 70 73 2e 68   |il/slot_groups.h|
0x3490:     70 70 00                                           |pp.             |
0x3493:     00                                                 |.               |
0x3494:     74 68 69 73 5f 6d 61 70  5f 69 74 20 21 3d 20 5f   |this_map_it != _|   "this_map_it != _group_map.end()"
0x34a4:     67 72 6f 75 70 5f 6d 61  70 2e 65 6e 64 28 29 00   |group_map.end().|
0x34b4:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/signal_template.hpp"
0x34c4:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0x34d4:     69 6c 2f 73 69 67 6e 61  6c 5f 74 65 6d 70 6c 61   |il/signal_templa|
0x34e4:     74 65 2e 68 70 70 00                               |te.hpp.         |
0x34eb:     00                                                 |.               |
0x34ec:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x34fc:     73 74 2f 73 6d 61 72 74  5f 70 74 72 2f 73 63 6f   |st/smart_ptr/sco|
0x350c:     70 65 64 5f 70 74 72 2e  68 70 70 00               |ped_ptr.hpp.    |
0x3518:     77 65 61 6b 6c 79 5f 65  71 75 69 76 61 6c 65 6e   |weakly_equivalen|   "weakly_equivalent(map_it->first, key)"
0x3528:     74 28 6d 61 70 5f 69 74  2d 3e 66 69 72 73 74 2c   |t(map_it->first,|
0x3538:     20 6b 65 79 29 00                                  | key).          |
0x353e:     83                                                 |.               |
; section: .rodata
0x4640:     e8 01 00 00 40 02 00 00  38 02 00 00 38 02 00 00   |....@...8...8...|
0x4650:     38 02 00 00 38 02 00 00  38 02 00 00 38 02 00 00   |8...8...8...8...|
0x4660:     38 02 00 00 38 02 00 00  38 02 00 00 38 02 00 00   |8...8...8...8...|
0x4670:     38 02 00 00 38 02 00 00  38 02 00 00 38 02 00 00   |8...8...8...8...|
0x4680:     38 02 00 00 38 02 00 00  38 02 00 00 38 02 00 00   |8...8...8...8...|
0x4690:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x46a0:     62 6f 6f 73 74 3a 3a 72  65 63 75 72 73 69 76 65   |boost::recursive|   "boost::recursive_mutex::~recursive_mutex()"
0x46b0:     5f 6d 75 74 65 78 3a 3a  7e 72 65 63 75 72 73 69   |_mutex::~recursi|
0x46c0:     76 65 5f 6d 75 74 65 78  28 29 00                  |ve_mutex().     |
0x46cb:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x46db:     00 00 00 00 00                                     |.....           |
0x46e0:     62 6f 6f 73 74 3a 3a 70  74 68 72 65 61 64 3a 3a   |boost::pthread::|   "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x46f0:     70 74 68 72 65 61 64 5f  6d 75 74 65 78 5f 73 63   |pthread_mutex_sc|
0x4700:     6f 70 65 64 5f 6c 6f 63  6b 3a 3a 70 74 68 72 65   |oped_lock::pthre|
0x4710:     61 64 5f 6d 75 74 65 78  5f 73 63 6f 70 65 64 5f   |ad_mutex_scoped_|
0x4720:     6c 6f 63 6b 28 70 74 68  72 65 61 64 5f 6d 75 74   |lock(pthread_mut|
0x4730:     65 78 5f 74 2a 29 00                               |ex_t*).         |
0x4737:     00 00 00 00 00 00 00 00  00                        |.........       |
0x4740:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 70 74 68 72   |void boost::pthr|   "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x4750:     65 61 64 3a 3a 70 74 68  72 65 61 64 5f 6d 75 74   |ead::pthread_mut|
0x4760:     65 78 5f 73 63 6f 70 65  64 5f 6c 6f 63 6b 3a 3a   |ex_scoped_lock::|
0x4770:     75 6e 6c 6f 63 6b 28 29  00                        |unlock().       |
0x4779:     00 00 00 00 00 00 00 76  6f 69 64 20 62 6f 6f 73   |.......void boos|
0x4789:     74 3a 3a 72 65 63 75 72  73 69 76 65 5f 6d 75 74   |t::recursive_mut|
0x4799:     65 78 3a 3a 6c 6f 63 6b  28 29 00 00 00 00 00 00   |ex::lock()......|
0x47a9:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x47b9:     00 00 00 00 00 00 00 76  6f 69 64 20 62 6f 6f 73   |.......void boos|
0x47c9:     74 3a 3a 72 65 63 75 72  73 69 76 65 5f 6d 75 74   |t::recursive_mut|
0x47d9:     65 78 3a 3a 75 6e 6c 6f  63 6b 28 29 00 00 00 00   |ex::unlock()....|
0x47e9:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x47f9:     00 00 00 00 00 00 00                               |.......         |
0x4800:     76 6f 69 64 20 4c 6f 63  6b 65 64 50 61 67 65 4d   |void LockedPageM|   "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x4810:     61 6e 61 67 65 72 42 61  73 65 3c 4c 6f 63 6b 65   |anagerBase<Locke|
0x4820:     72 3e 3a 3a 55 6e 6c 6f  63 6b 52 61 6e 67 65 28   |r>::UnlockRange(|
0x4830:     76 6f 69 64 2a 2c 20 73  69 7a 65 5f 74 29 20 5b   |void*, size_t) [|
0x4840:     77 69 74 68 20 4c 6f 63  6b 65 72 20 3d 20 4d 65   |with Locker = Me|
0x4850:     6d 6f 72 79 50 61 67 65  4c 6f 63 6b 65 72 2c 20   |moryPageLocker, |
0x4860:     73 69 7a 65 5f 74 20 3d  20 75 6e 73 69 67 6e 65   |size_t = unsigne|
0x4870:     64 20 69 6e 74 5d 00                               |d int].         |
0x4877:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 6d 75 74 65   |void boost::mute|   "void boost::mutex::unlock()"
0x4887:     78 3a 3a 75 6e 6c 6f 63  6b 28 29 00               |x::unlock().    |
0x4893:     00 00 00 00 00 00 00 00  00 00 00 00 00            |.............   |
0x48a0:     54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>::invocation_state]"
0x48b0:     5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x48c0:     72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x48d0:     68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x48e0:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x48f0:     69 67 6e 61 6c 31 5f 69  6d 70 6c 3c 76 6f 69 64   |ignal1_impl<void|
0x4900:     2c 20 43 43 72 79 70 74  6f 4b 65 79 53 74 6f 72   |, CCryptoKeyStor|
0x4910:     65 2a 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |e*, boost::signa|
0x4920:     6c 73 32 3a 3a 6f 70 74  69 6f 6e 61 6c 5f 6c 61   |ls2::optional_la|
0x4930:     73 74 5f 76 61 6c 75 65  3c 76 6f 69 64 3e 2c 20   |st_value<void>, |
0x4940:     69 6e 74 2c 20 73 74 64  3a 3a 6c 65 73 73 3c 69   |int, std::less<i|
0x4950:     6e 74 3e 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |nt>, boost::func|
0x4960:     74 69 6f 6e 3c 76 6f 69  64 28 43 43 72 79 70 74   |tion<void(CCrypt|
0x4970:     6f 4b 65 79 53 74 6f 72  65 2a 29 3e 2c 20 62 6f   |oKeyStore*)>, bo|
0x4980:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x4990:     69 64 28 63 6f 6e 73 74  20 62 6f 6f 73 74 3a 3a   |id(const boost::|
0x49a0:     73 69 67 6e 61 6c 73 32  3a 3a 63 6f 6e 6e 65 63   |signals2::connec|
0x49b0:     74 69 6f 6e 26 2c 20 43  43 72 79 70 74 6f 4b 65   |tion&, CCryptoKe|
0x49c0:     79 53 74 6f 72 65 2a 29  3e 2c 20 62 6f 6f 73 74   |yStore*)>, boost|
0x49d0:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x49e0:     78 3e 3a 3a 69 6e 76 6f  63 61 74 69 6f 6e 5f 73   |x>::invocation_s|
0x49f0:     74 61 74 65 5d 00                                  |tate].          |
0x49f6:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x4a00:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >&]"
0x4a10:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x4a20:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x4a30:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x4a40:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x4a50:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x4a60:     32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x4a70:     65 64 5f 6c 69 73 74 3c  69 6e 74 2c 20 73 74 64   |ed_list<int, std|
0x4a80:     3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x4a90:     73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x4aa0:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x4ab0:     64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x4ac0:     6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x4ad0:     72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x4ae0:     32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x4af0:     6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x4b00:     74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x4b10:     20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x4b20:     6c 73 32 3a 3a 73 6c 6f  74 31 3c 76 6f 69 64 2c   |ls2::slot1<void,|
0x4b30:     20 43 43 72 79 70 74 6f  4b 65 79 53 74 6f 72 65   | CCryptoKeyStore|
0x4b40:     2a 2c 20 62 6f 6f 73 74  3a 3a 66 75 6e 63 74 69   |*, boost::functi|
0x4b50:     6f 6e 3c 76 6f 69 64 28  43 43 72 79 70 74 6f 4b   |on<void(CCryptoK|
0x4b60:     65 79 53 74 6f 72 65 2a  29 3e 20 3e 2c 20 62 6f   |eyStore*)> >, bo|
0x4b70:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6d   |ost::signals2::m|
0x4b80:     75 74 65 78 3e 20 3e 20  3e 2c 20 62 6f 6f 73 74   |utex> > >, boost|
0x4b90:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 54 3e 3a   |::shared_ptr<T>:|
0x4ba0:     3a 72 65 66 65 72 65 6e  63 65 20 3d 20 62 6f 6f   |:reference = boo|
0x4bb0:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x4bc0:     74 61 69 6c 3a 3a 67 72  6f 75 70 65 64 5f 6c 69   |tail::grouped_li|
0x4bd0:     73 74 3c 69 6e 74 2c 20  73 74 64 3a 3a 6c 65 73   |st<int, std::les|
0x4be0:     73 3c 69 6e 74 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |s<int>, boost::s|
0x4bf0:     68 61 72 65 64 5f 70 74  72 3c 62 6f 6f 73 74 3a   |hared_ptr<boost:|
0x4c00:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x4c10:     6c 3a 3a 63 6f 6e 6e 65  63 74 69 6f 6e 5f 62 6f   |l::connection_bo|
0x4c20:     64 79 3c 73 74 64 3a 3a  70 61 69 72 3c 62 6f 6f   |dy<std::pair<boo|
0x4c30:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x4c40:     74 61 69 6c 3a 3a 73 6c  6f 74 5f 6d 65 74 61 5f   |tail::slot_meta_|
0x4c50:     67 72 6f 75 70 2c 20 62  6f 6f 73 74 3a 3a 6f 70   |group, boost::op|
0x4c60:     74 69 6f 6e 61 6c 3c 69  6e 74 3e 20 3e 2c 20 62   |tional<int> >, b|
0x4c70:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x4c80:     73 6c 6f 74 31 3c 76 6f  69 64 2c 20 43 43 72 79   |slot1<void, CCry|
0x4c90:     70 74 6f 4b 65 79 53 74  6f 72 65 2a 2c 20 62 6f   |ptoKeyStore*, bo|
0x4ca0:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x4cb0:     69 64 28 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |id(CCryptoKeySto|
0x4cc0:     72 65 2a 29 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |re*)> >, boost::|
0x4cd0:     73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x4ce0:     20 3e 20 3e 26 5d 00                               | > >&].         |
0x4ce7:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cf7:     00 00 00 00 00 00 00 00  00                        |.........       |
0x4d00:     54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>]"
0x4d10:     5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x4d20:     72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x4d30:     68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x4d40:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x4d50:     6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x4d60:     74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x4d70:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x4d80:     3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x4d90:     70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x4da0:     61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x4db0:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x4dc0:     31 3c 76 6f 69 64 2c 20  43 43 72 79 70 74 6f 4b   |1<void, CCryptoK|
0x4dd0:     65 79 53 74 6f 72 65 2a  2c 20 62 6f 6f 73 74 3a   |eyStore*, boost:|
0x4de0:     3a 66 75 6e 63 74 69 6f  6e 3c 76 6f 69 64 28 43   |:function<void(C|
0x4df0:     43 72 79 70 74 6f 4b 65  79 53 74 6f 72 65 2a 29   |CryptoKeyStore*)|
0x4e00:     3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x4e10:     61 6c 73 32 3a 3a 6d 75  74 65 78 3e 5d 00         |als2::mutex>].  |
0x4e1e:     00 00                                              |..              |
0x4e20:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>&]"
0x4e30:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x4e40:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x4e50:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x4e60:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x4e70:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x4e80:     32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x4e90:     6c 31 5f 69 6d 70 6c 3c  76 6f 69 64 2c 20 43 43   |l1_impl<void, CC|
0x4ea0:     72 79 70 74 6f 4b 65 79  53 74 6f 72 65 2a 2c 20   |ryptoKeyStore*, |
0x4eb0:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x4ec0:     3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x4ed0:     61 6c 75 65 3c 76 6f 69  64 3e 2c 20 69 6e 74 2c   |alue<void>, int,|
0x4ee0:     20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x4ef0:     20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x4f00:     3c 76 6f 69 64 28 43 43  72 79 70 74 6f 4b 65 79   |<void(CCryptoKey|
0x4f10:     53 74 6f 72 65 2a 29 3e  2c 20 62 6f 6f 73 74 3a   |Store*)>, boost:|
0x4f20:     3a 66 75 6e 63 74 69 6f  6e 3c 76 6f 69 64 28 63   |:function<void(c|
0x4f30:     6f 6e 73 74 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |onst boost::sign|
0x4f40:     61 6c 73 32 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |als2::connection|
0x4f50:     26 2c 20 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |&, CCryptoKeySto|
0x4f60:     72 65 2a 29 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |re*)>, boost::si|
0x4f70:     67 6e 61 6c 73 32 3a 3a  6d 75 74 65 78 3e 2c 20   |gnals2::mutex>, |
0x4f80:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x4f90:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x4fa0:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x4fb0:     32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x4fc0:     6c 31 5f 69 6d 70 6c 3c  76 6f 69 64 2c 20 43 43   |l1_impl<void, CC|
0x4fd0:     72 79 70 74 6f 4b 65 79  53 74 6f 72 65 2a 2c 20   |ryptoKeyStore*, |
0x4fe0:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x4ff0:     3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x5000:     61 6c 75 65 3c 76 6f 69  64 3e 2c 20 69 6e 74 2c   |alue<void>, int,|
0x5010:     20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x5020:     20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x5030:     3c 76 6f 69 64 28 43 43  72 79 70 74 6f 4b 65 79   |<void(CCryptoKey|
0x5040:     53 74 6f 72 65 2a 29 3e  2c 20 62 6f 6f 73 74 3a   |Store*)>, boost:|
0x5050:     3a 66 75 6e 63 74 69 6f  6e 3c 76 6f 69 64 28 63   |:function<void(c|
0x5060:     6f 6e 73 74 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |onst boost::sign|
0x5070:     61 6c 73 32 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |als2::connection|
0x5080:     26 2c 20 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |&, CCryptoKeySto|
0x5090:     72 65 2a 29 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |re*)>, boost::si|
0x50a0:     67 6e 61 6c 73 32 3a 3a  6d 75 74 65 78 3e 26 5d   |gnals2::mutex>&]|
0x50b0:     00                                                 |.               |
0x50b1:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 76   |...............v|
0x50c1:     6f 69 64 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |oid boost::signa|
0x50d1:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 73 69 67   |ls2::detail::sig|
0x50e1:     6e 61 6c 31 5f 69 6d 70  6c 3c 52 2c 20 54 31 2c   |nal1_impl<R, T1,|
0x50f1:     20 43 6f 6d 62 69 6e 65  72 2c 20 47 72 6f 75 70   | Combiner, Group|
0x5101:     2c 20 47 72 6f 75 70 43  6f 6d 70 61 72 65 2c 20   |, GroupCompare, |
0x5111:     53 6c 6f 74 46 75 6e 63  74 69 6f 6e 2c 20 45 78   |SlotFunction, Ex|
0x5121:     74 65 6e 64 65 64 53 6c  6f 74 46 75 6e 63 74 69   |tendedSlotFuncti|
0x5131:     6f 6e 2c 20 4d 75 74 65  78 3e 3a 3a 6e 6f 6c 6f   |on, Mutex>::nolo|
0x5141:     63 6b 5f 63 6c 65 61 6e  75 70 5f 63 6f 6e 6e 65   |ck_cleanup_conne|
0x5151:     63 74 69 6f 6e 73 28 62  6f 6f 6c 2c 20 75 6e 73   |ctions(bool, uns|
0x5161:     69 67 6e 65 64 20 69 6e  74 29 20 63 6f 6e 73 74   |igned int) const|
0x5171:     20 5b 77 69 74 68 20 52  20 3d 20 76 6f 69 64 2c   | [with R = void,|
0x5181:     20 54 31 20 3d 20 43 43  72 79 70 74 6f 4b 65 79   | T1 = CCryptoKey|
0x5191:     53 74 6f 72 65 2a 2c 20  43 6f 6d 62 69 6e 65 72   |Store*, Combiner|
0x51a1:     20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x51b1:     73 32 3a 3a 6f 70 74 69  6f 6e 61 6c 5f 6c 61 73   |s2::optional_las|
0x51c1:     74 5f 76 61 6c 75 65 3c  76 6f 69 64 3e 2c 20 47   |t_value<void>, G|
0x51d1:     72 6f 75 70 20 3d 20 69  6e 74 2c 20 47 72 6f 75   |roup = int, Grou|
0x51e1:     70 43 6f 6d 70 61 72 65  20 3d 20 73 74 64 3a 3a   |pCompare = std::|
0x51f1:     6c 65 73 73 3c 69 6e 74  3e 2c 20 53 6c 6f 74 46   |less<int>, SlotF|
0x5201:     75 6e 63 74 69 6f 6e 20  3d 20 62 6f 6f 73 74 3a   |unction = boost:|
0x5211:     3a 66 75 6e 63 74 69 6f  6e 3c 76 6f 69 64 28 43   |:function<void(C|
0x5221:     43 72 79 70 74 6f 4b 65  79 53 74 6f 72 65 2a 29   |CryptoKeyStore*)|
0x5231:     3e 2c 20 45 78 74 65 6e  64 65 64 53 6c 6f 74 46   |>, ExtendedSlotF|
0x5241:     75 6e 63 74 69 6f 6e 20  3d 20 62 6f 6f 73 74 3a   |unction = boost:|
0x5251:     3a 66 75 6e 63 74 69 6f  6e 3c 76 6f 69 64 28 63   |:function<void(c|
0x5261:     6f 6e 73 74 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |onst boost::sign|
0x5271:     61 6c 73 32 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |als2::connection|
0x5281:     26 2c 20 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |&, CCryptoKeySto|
0x5291:     72 65 2a 29 3e 2c 20 4d  75 74 65 78 20 3d 20 62   |re*)>, Mutex = b|
0x52a1:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x52b1:     6d 75 74 65 78 5d 00 00  00 00 00 00 00 00 00      |mutex]......... |
0x52c0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<void>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<void>&]"
0x52d0:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x52e0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x52f0:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x5300:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x5310:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x5320:     32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x5330:     5f 76 61 6c 75 65 3c 76  6f 69 64 3e 2c 20 62 6f   |_value<void>, bo|
0x5340:     6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x5350:     54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x5360:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x5370:     3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x5380:     61 6c 75 65 3c 76 6f 69  64 3e 26 5d 00            |alue<void>&].   |
0x538d:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x539d:     00 00 00                                           |...             |
0x53a0:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = void, T1 = CCryptoKeyStore*, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(CCryptoKeyStore*)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >]"
0x53b0:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x53c0:     67 6e 61 6c 31 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal1_impl<R, T1|
0x53d0:     2c 20 43 6f 6d 62 69 6e  65 72 2c 20 47 72 6f 75   |, Combiner, Grou|
0x53e0:     70 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 2c   |p, GroupCompare,|
0x53f0:     20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 2c 20 45   | SlotFunction, E|
0x5400:     78 74 65 6e 64 65 64 53  6c 6f 74 46 75 6e 63 74   |xtendedSlotFunct|
0x5410:     69 6f 6e 2c 20 4d 75 74  65 78 3e 3a 3a 6e 6f 6c   |ion, Mutex>::nol|
0x5420:     6f 63 6b 5f 63 6c 65 61  6e 75 70 5f 63 6f 6e 6e   |ock_cleanup_conn|
0x5430:     65 63 74 69 6f 6e 73 5f  66 72 6f 6d 28 62 6f 6f   |ections_from(boo|
0x5440:     6c 2c 20 63 6f 6e 73 74  20 74 79 70 65 6e 61 6d   |l, const typenam|
0x5450:     65 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |e boost::signals|
0x5460:     32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x5470:     6c 31 5f 69 6d 70 6c 3c  52 2c 20 54 31 2c 20 43   |l1_impl<R, T1, C|
0x5480:     6f 6d 62 69 6e 65 72 2c  20 47 72 6f 75 70 2c 20   |ombiner, Group, |
0x5490:     47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 53 6c   |GroupCompare, Sl|
0x54a0:     6f 74 46 75 6e 63 74 69  6f 6e 2c 20 45 78 74 65   |otFunction, Exte|
0x54b0:     6e 64 65 64 53 6c 6f 74  46 75 6e 63 74 69 6f 6e   |ndedSlotFunction|
0x54c0:     2c 20 4d 75 74 65 78 3e  3a 3a 63 6f 6e 6e 65 63   |, Mutex>::connec|
0x54d0:     74 69 6f 6e 5f 6c 69 73  74 5f 74 79 70 65 3a 3a   |tion_list_type::|
0x54e0:     69 74 65 72 61 74 6f 72  26 2c 20 75 6e 73 69 67   |iterator&, unsig|
0x54f0:     6e 65 64 20 69 6e 74 29  20 63 6f 6e 73 74 20 5b   |ned int) const [|
0x5500:     77 69 74 68 20 52 20 3d  20 76 6f 69 64 2c 20 54   |with R = void, T|
0x5510:     31 20 3d 20 43 43 72 79  70 74 6f 4b 65 79 53 74   |1 = CCryptoKeySt|
0x5520:     6f 72 65 2a 2c 20 43 6f  6d 62 69 6e 65 72 20 3d   |ore*, Combiner =|
0x5530:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x5540:     3a 3a 6f 70 74 69 6f 6e  61 6c 5f 6c 61 73 74 5f   |::optional_last_|
0x5550:     76 61 6c 75 65 3c 76 6f  69 64 3e 2c 20 47 72 6f   |value<void>, Gro|
0x5560:     75 70 20 3d 20 69 6e 74  2c 20 47 72 6f 75 70 43   |up = int, GroupC|
0x5570:     6f 6d 70 61 72 65 20 3d  20 73 74 64 3a 3a 6c 65   |ompare = std::le|
0x5580:     73 73 3c 69 6e 74 3e 2c  20 53 6c 6f 74 46 75 6e   |ss<int>, SlotFun|
0x5590:     63 74 69 6f 6e 20 3d 20  62 6f 6f 73 74 3a 3a 66   |ction = boost::f|
0x55a0:     75 6e 63 74 69 6f 6e 3c  76 6f 69 64 28 43 43 72   |unction<void(CCr|
0x55b0:     79 70 74 6f 4b 65 79 53  74 6f 72 65 2a 29 3e 2c   |yptoKeyStore*)>,|
0x55c0:     20 45 78 74 65 6e 64 65  64 53 6c 6f 74 46 75 6e   | ExtendedSlotFun|
0x55d0:     63 74 69 6f 6e 20 3d 20  62 6f 6f 73 74 3a 3a 66   |ction = boost::f|
0x55e0:     75 6e 63 74 69 6f 6e 3c  76 6f 69 64 28 63 6f 6e   |unction<void(con|
0x55f0:     73 74 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |st boost::signal|
0x5600:     73 32 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 26 2c   |s2::connection&,|
0x5610:     20 43 43 72 79 70 74 6f  4b 65 79 53 74 6f 72 65   | CCryptoKeyStore|
0x5620:     2a 29 3e 2c 20 4d 75 74  65 78 20 3d 20 62 6f 6f   |*)>, Mutex = boo|
0x5630:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x5640:     74 65 78 2c 20 74 79 70  65 6e 61 6d 65 20 62 6f   |tex, typename bo|
0x5650:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x5660:     65 74 61 69 6c 3a 3a 73  69 67 6e 61 6c 31 5f 69   |etail::signal1_i|
0x5670:     6d 70 6c 3c 52 2c 20 54  31 2c 20 43 6f 6d 62 69   |mpl<R, T1, Combi|
0x5680:     6e 65 72 2c 20 47 72 6f  75 70 2c 20 47 72 6f 75   |ner, Group, Grou|
0x5690:     70 43 6f 6d 70 61 72 65  2c 20 53 6c 6f 74 46 75   |pCompare, SlotFu|
0x56a0:     6e 63 74 69 6f 6e 2c 20  45 78 74 65 6e 64 65 64   |nction, Extended|
0x56b0:     53 6c 6f 74 46 75 6e 63  74 69 6f 6e 2c 20 4d 75   |SlotFunction, Mu|
0x56c0:     74 65 78 3e 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |tex>::connection|
0x56d0:     5f 6c 69 73 74 5f 74 79  70 65 3a 3a 69 74 65 72   |_list_type::iter|
0x56e0:     61 74 6f 72 20 3d 20 73  74 64 3a 3a 5f 4c 69 73   |ator = std::_Lis|
0x56f0:     74 5f 69 74 65 72 61 74  6f 72 3c 62 6f 6f 73 74   |t_iterator<boost|
0x5700:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 62 6f 6f   |::shared_ptr<boo|
0x5710:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x5720:     74 61 69 6c 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |tail::connection|
0x5730:     5f 62 6f 64 79 3c 73 74  64 3a 3a 70 61 69 72 3c   |_body<std::pair<|
0x5740:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x5750:     3a 64 65 74 61 69 6c 3a  3a 73 6c 6f 74 5f 6d 65   |:detail::slot_me|
0x5760:     74 61 5f 67 72 6f 75 70  2c 20 62 6f 6f 73 74 3a   |ta_group, boost:|
0x5770:     3a 6f 70 74 69 6f 6e 61  6c 3c 69 6e 74 3e 20 3e   |:optional<int> >|
0x5780:     2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x5790:     32 3a 3a 73 6c 6f 74 31  3c 76 6f 69 64 2c 20 43   |2::slot1<void, C|
0x57a0:     43 72 79 70 74 6f 4b 65  79 53 74 6f 72 65 2a 2c   |CryptoKeyStore*,|
0x57b0:     20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x57c0:     3c 76 6f 69 64 28 43 43  72 79 70 74 6f 4b 65 79   |<void(CCryptoKey|
0x57d0:     53 74 6f 72 65 2a 29 3e  20 3e 2c 20 62 6f 6f 73   |Store*)> >, boos|
0x57e0:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 6d 75 74   |t::signals2::mut|
0x57f0:     65 78 3e 20 3e 20 3e 5d  00                        |ex> > >].       |
0x57f9:     00 00 00 00 00 00 00                               |.......         |
0x5800:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex>&]"
0x5810:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x5820:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x5830:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x5840:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x5850:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x5860:     32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x5870:     63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x5880:     70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x5890:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x58a0:     6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x58b0:     6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x58c0:     6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x58d0:     67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 76 6f   |gnals2::slot1<vo|
0x58e0:     69 64 2c 20 43 43 72 79  70 74 6f 4b 65 79 53 74   |id, CCryptoKeySt|
0x58f0:     6f 72 65 2a 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |ore*, boost::fun|
0x5900:     63 74 69 6f 6e 3c 76 6f  69 64 28 43 43 72 79 70   |ction<void(CCryp|
0x5910:     74 6f 4b 65 79 53 74 6f  72 65 2a 29 3e 20 3e 2c   |toKeyStore*)> >,|
0x5920:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x5930:     3a 3a 6d 75 74 65 78 3e  2c 20 62 6f 6f 73 74 3a   |::mutex>, boost:|
0x5940:     3a 73 68 61 72 65 64 5f  70 74 72 3c 54 3e 3a 3a   |:shared_ptr<T>::|
0x5950:     72 65 66 65 72 65 6e 63  65 20 3d 20 62 6f 6f 73   |reference = boos|
0x5960:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x5970:     61 69 6c 3a 3a 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |ail::connection_|
0x5980:     62 6f 64 79 3c 73 74 64  3a 3a 70 61 69 72 3c 62   |body<std::pair<b|
0x5990:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x59a0:     64 65 74 61 69 6c 3a 3a  73 6c 6f 74 5f 6d 65 74   |detail::slot_met|
0x59b0:     61 5f 67 72 6f 75 70 2c  20 62 6f 6f 73 74 3a 3a   |a_group, boost::|
0x59c0:     6f 70 74 69 6f 6e 61 6c  3c 69 6e 74 3e 20 3e 2c   |optional<int> >,|
0x59d0:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x59e0:     3a 3a 73 6c 6f 74 31 3c  76 6f 69 64 2c 20 43 43   |::slot1<void, CC|
0x59f0:     72 79 70 74 6f 4b 65 79  53 74 6f 72 65 2a 2c 20   |ryptoKeyStore*, |
0x5a00:     62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x5a10:     76 6f 69 64 28 43 43 72  79 70 74 6f 4b 65 79 53   |void(CCryptoKeyS|
0x5a20:     74 6f 72 65 2a 29 3e 20  3e 2c 20 62 6f 6f 73 74   |tore*)> >, boost|
0x5a30:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x5a40:     78 3e 26 5d 00                                     |x>&].           |
0x5a45:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5a55:     00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x5a60:     54 2a 20 62 6f 6f 73 74  3a 3a 73 63 6f 70 65 64   |T* boost::scoped|   "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x5a70:     5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x5a80:     72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x5a90:     68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x5aa0:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 66   |nals2::detail::f|
0x5ab0:     6f 72 65 69 67 6e 5f 77  65 61 6b 5f 70 74 72 5f   |oreign_weak_ptr_|
0x5ac0:     69 6d 70 6c 5f 62 61 73  65 5d 00                  |impl_base].     |
0x5acb:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5adb:     00 00 00 00 00                                     |.....           |
0x5ae0:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0x5af0:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x5b00:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x5b10:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x5b20:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x5b30:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x5b40:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x5b50:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x5b60:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x5b70:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x5b80:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x5b90:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x5ba0:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x5bb0:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x5bc0:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x5bd0:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x5be0:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x5bf0:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x5c00:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x5c10:     72 69 61 6e 74 3a 3a 69  6e 76 6f 6b 65 5f 76 69   |riant::invoke_vi|
0x5c20:     73 69 74 6f 72 3c 63 6f  6e 73 74 20 62 6f 6f 73   |sitor<const boos|
0x5c30:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x5c40:     61 69 6c 3a 3a 65 78 70  69 72 65 64 5f 77 65 61   |ail::expired_wea|
0x5c50:     6b 5f 70 74 72 5f 76 69  73 69 74 6f 72 3e 2c 20   |k_ptr_visitor>, |
0x5c60:     56 50 43 56 20 3d 20 63  6f 6e 73 74 20 76 6f 69   |VPCV = const voi|
0x5c70:     64 2a 2c 20 4e 42 46 20  3d 20 62 6f 6f 73 74 3a   |d*, NBF = boost:|
0x5c80:     3a 76 61 72 69 61 6e 74  3c 62 6f 6f 73 74 3a 3a   |:variant<boost::|
0x5c90:     77 65 61 6b 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |weak_ptr<void>, |
0x5ca0:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x5cb0:     3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x5cc0:     5f 76 6f 69 64 5f 77 65  61 6b 5f 70 74 72 3e 3a   |_void_weak_ptr>:|
0x5cd0:     3a 68 61 73 5f 66 61 6c  6c 62 61 63 6b 5f 74 79   |:has_fallback_ty|
0x5ce0:     70 65 5f 2c 20 74 79 70  65 6e 61 6d 65 20 56 69   |pe_, typename Vi|
0x5cf0:     73 69 74 6f 72 3a 3a 72  65 73 75 6c 74 5f 74 79   |sitor::result_ty|
0x5d00:     70 65 20 3d 20 62 6f 6f  6c 2c 20 6d 70 6c 5f 3a   |pe = bool, mpl_:|
0x5d10:     3a 74 72 75 65 5f 20 3d  20 6d 70 6c 5f 3a 3a 62   |:true_ = mpl_::b|
0x5d20:     6f 6f 6c 5f 3c 74 72 75  65 3e 5d 00               |ool_<true>].    |
0x5d2c:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5d3c:     00 00 00 00                                        |....            |
0x5d40:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, boost::detail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VoidPtrCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool]"
0x5d50:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x5d60:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x5d70:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x5d80:     5f 69 6d 70 6c 5f 69 6e  76 6f 6b 65 28 69 6e 74   |_impl_invoke(int|
0x5d90:     2c 20 56 69 73 69 74 6f  72 26 2c 20 56 6f 69 64   |, Visitor&, Void|
0x5da0:     50 74 72 43 56 2c 20 62  6f 6f 73 74 3a 3a 64 65   |PtrCV, boost::de|
0x5db0:     74 61 69 6c 3a 3a 76 61  72 69 61 6e 74 3a 3a 61   |tail::variant::a|
0x5dc0:     70 70 6c 79 5f 76 69 73  69 74 6f 72 5f 75 6e 72   |pply_visitor_unr|
0x5dd0:     6f 6c 6c 65 64 2a 2c 20  4e 42 46 2c 20 6c 6f 6e   |olled*, NBF, lon|
0x5de0:     67 20 69 6e 74 29 20 5b  77 69 74 68 20 56 69 73   |g int) [with Vis|
0x5df0:     69 74 6f 72 20 3d 20 62  6f 6f 73 74 3a 3a 64 65   |itor = boost::de|
0x5e00:     74 61 69 6c 3a 3a 76 61  72 69 61 6e 74 3a 3a 69   |tail::variant::i|
0x5e10:     6e 76 6f 6b 65 5f 76 69  73 69 74 6f 72 3c 63 6f   |nvoke_visitor<co|
0x5e20:     6e 73 74 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |nst boost::signa|
0x5e30:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 65 78 70   |ls2::detail::exp|
0x5e40:     69 72 65 64 5f 77 65 61  6b 5f 70 74 72 5f 76 69   |ired_weak_ptr_vi|
0x5e50:     73 69 74 6f 72 3e 2c 20  56 6f 69 64 50 74 72 43   |sitor>, VoidPtrC|
0x5e60:     56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x5e70:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x5e80:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 77 65 61   |riant<boost::wea|
0x5e90:     6b 5f 70 74 72 3c 76 6f  69 64 3e 2c 20 62 6f 6f   |k_ptr<void>, boo|
0x5ea0:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x5eb0:     74 61 69 6c 3a 3a 66 6f  72 65 69 67 6e 5f 76 6f   |tail::foreign_vo|
0x5ec0:     69 64 5f 77 65 61 6b 5f  70 74 72 3e 3a 3a 68 61   |id_weak_ptr>::ha|
0x5ed0:     73 5f 66 61 6c 6c 62 61  63 6b 5f 74 79 70 65 5f   |s_fallback_type_|
0x5ee0:     2c 20 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |, typename Visit|
0x5ef0:     6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x5f00:     3d 20 62 6f 6f 6c 5d 00                            |= bool].        |
0x5f08:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5f18:     00 00 00 00 00 00 00 00                            |........        |
0x5f20:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x5f30:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x5f40:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x5f50:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x5f60:     54 79 70 65 3e 3a 3a 69  74 65 72 61 74 6f 72 20   |Type>::iterator |
0x5f70:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x5f80:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x5f90:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x5fa0:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x5fb0:     54 79 70 65 3e 3a 3a 65  72 61 73 65 28 63 6f 6e   |Type>::erase(con|
0x5fc0:     73 74 20 67 72 6f 75 70  5f 6b 65 79 5f 74 79 70   |st group_key_typ|
0x5fd0:     65 26 2c 20 63 6f 6e 73  74 20 69 74 65 72 61 74   |e&, const iterat|
0x5fe0:     6f 72 26 29 20 5b 77 69  74 68 20 47 72 6f 75 70   |or&) [with Group|
0x5ff0:     20 3d 20 69 6e 74 2c 20  47 72 6f 75 70 43 6f 6d   | = int, GroupCom|
0x6000:     70 61 72 65 20 3d 20 73  74 64 3a 3a 6c 65 73 73   |pare = std::less|
0x6010:     3c 69 6e 74 3e 2c 20 56  61 6c 75 65 54 79 70 65   |<int>, ValueType|
0x6020:     20 3d 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   | = boost::shared|
0x6030:     5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x6040:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x6050:     6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x6060:     64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x6070:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x6080:     3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x6090:     2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x60a0:     6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x60b0:     3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 31   |:signals2::slot1|
0x60c0:     3c 76 6f 69 64 2c 20 43  43 72 79 70 74 6f 4b 65   |<void, CCryptoKe|
0x60d0:     79 53 74 6f 72 65 2a 2c  20 62 6f 6f 73 74 3a 3a   |yStore*, boost::|
0x60e0:     66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 43 43   |function<void(CC|
0x60f0:     72 79 70 74 6f 4b 65 79  53 74 6f 72 65 2a 29 3e   |ryptoKeyStore*)>|
0x6100:     20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x6110:     6c 73 32 3a 3a 6d 75 74  65 78 3e 20 3e 2c 20 62   |ls2::mutex> >, b|
0x6120:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x6130:     64 65 74 61 69 6c 3a 3a  67 72 6f 75 70 65 64 5f   |detail::grouped_|
0x6140:     6c 69 73 74 3c 47 72 6f  75 70 2c 20 47 72 6f 75   |list<Group, Grou|
0x6150:     70 43 6f 6d 70 61 72 65  2c 20 56 61 6c 75 65 54   |pCompare, ValueT|
0x6160:     79 70 65 3e 3a 3a 69 74  65 72 61 74 6f 72 20 3d   |ype>::iterator =|
0x6170:     20 73 74 64 3a 3a 5f 4c  69 73 74 5f 69 74 65 72   | std::_List_iter|
0x6180:     61 74 6f 72 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |ator<boost::shar|
0x6190:     65 64 5f 70 74 72 3c 62  6f 6f 73 74 3a 3a 73 69   |ed_ptr<boost::si|
0x61a0:     67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x61b0:     63 6f 6e 6e 65 63 74 69  6f 6e 5f 62 6f 64 79 3c   |connection_body<|
0x61c0:     73 74 64 3a 3a 70 61 69  72 3c 62 6f 6f 73 74 3a   |std::pair<boost:|
0x61d0:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x61e0:     6c 3a 3a 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |l::slot_meta_gro|
0x61f0:     75 70 2c 20 62 6f 6f 73  74 3a 3a 6f 70 74 69 6f   |up, boost::optio|
0x6200:     6e 61 6c 3c 69 6e 74 3e  20 3e 2c 20 62 6f 6f 73   |nal<int> >, boos|
0x6210:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 73 6c 6f   |t::signals2::slo|
0x6220:     74 31 3c 76 6f 69 64 2c  20 43 43 72 79 70 74 6f   |t1<void, CCrypto|
0x6230:     4b 65 79 53 74 6f 72 65  2a 2c 20 62 6f 6f 73 74   |KeyStore*, boost|
0x6240:     3a 3a 66 75 6e 63 74 69  6f 6e 3c 76 6f 69 64 28   |::function<void(|
0x6250:     43 43 72 79 70 74 6f 4b  65 79 53 74 6f 72 65 2a   |CCryptoKeyStore*|
0x6260:     29 3e 20 3e 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |)> >, boost::sig|
0x6270:     6e 61 6c 73 32 3a 3a 6d  75 74 65 78 3e 20 3e 20   |nals2::mutex> > |
0x6280:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x6290:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 67 72 6f 75   |s2::detail::grou|
0x62a0:     70 65 64 5f 6c 69 73 74  3c 47 72 6f 75 70 2c 20   |ped_list<Group, |
0x62b0:     47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 56 61   |GroupCompare, Va|
0x62c0:     6c 75 65 54 79 70 65 3e  3a 3a 67 72 6f 75 70 5f   |lueType>::group_|
0x62d0:     6b 65 79 5f 74 79 70 65  20 3d 20 73 74 64 3a 3a   |key_type = std::|
0x62e0:     70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x62f0:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x6300:     6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x6310:     6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x6320:     6e 74 3e 20 3e 5d 00                               |nt> >].         |
0x6327:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6337:     00 00 00 00 00 00 00 00  00                        |.........       |
0x6340:     62 6f 6f 73 74 3a 3a 6f  70 74 69 6f 6e 61 6c 3c   |boost::optional<|   "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0x6350:     54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 5f 63 6f   |T>::reference_co|
0x6360:     6e 73 74 5f 74 79 70 65  20 62 6f 6f 73 74 3a 3a   |nst_type boost::|
0x6370:     6f 70 74 69 6f 6e 61 6c  3c 54 3e 3a 3a 67 65 74   |optional<T>::get|
0x6380:     28 29 20 63 6f 6e 73 74  20 5b 77 69 74 68 20 54   |() const [with T|
0x6390:     20 3d 20 69 6e 74 2c 20  62 6f 6f 73 74 3a 3a 6f   | = int, boost::o|
0x63a0:     70 74 69 6f 6e 61 6c 3c  54 3e 3a 3a 72 65 66 65   |ptional<T>::refe|
0x63b0:     72 65 6e 63 65 5f 63 6f  6e 73 74 5f 74 79 70 65   |rence_const_type|
0x63c0:     20 3d 20 63 6f 6e 73 74  20 69 6e 74 26 5d 00      | = const int&]. |
0x63cf:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x63df:     00                                                 |.               |
0x63e0:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x63f0:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x6400:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x6410:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x6420:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x6430:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x6440:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x6450:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x6460:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x6470:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x6480:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x6490:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x64a0:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x64b0:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x64c0:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x64d0:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x64e0:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x64f0:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x6500:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x6510:     72 69 61 6e 74 3a 3a 64  65 73 74 72 6f 79 65 72   |riant::destroyer|
0x6520:     2c 20 56 50 43 56 20 3d  20 76 6f 69 64 2a 2c 20   |, VPCV = void*, |
0x6530:     4e 42 46 20 3d 20 62 6f  6f 73 74 3a 3a 76 61 72   |NBF = boost::var|
0x6540:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x6550:     65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x6560:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x6570:     65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x6580:     6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 3a   |oid_shared_ptr>:|
0x6590:     3a 68 61 73 5f 66 61 6c  6c 62 61 63 6b 5f 74 79   |:has_fallback_ty|
0x65a0:     70 65 5f 2c 20 74 79 70  65 6e 61 6d 65 20 56 69   |pe_, typename Vi|
0x65b0:     73 69 74 6f 72 3a 3a 72  65 73 75 6c 74 5f 74 79   |sitor::result_ty|
0x65c0:     70 65 20 3d 20 76 6f 69  64 2c 20 6d 70 6c 5f 3a   |pe = void, mpl_:|
0x65d0:     3a 74 72 75 65 5f 20 3d  20 6d 70 6c 5f 3a 3a 62   |:true_ = mpl_::b|
0x65e0:     6f 6f 6c 5f 3c 74 72 75  65 3e 5d 00               |ool_<true>].    |
0x65ec:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x65fc:     00 00 00 00 74 79 70 65  6e 61 6d 65 20 56 69 73   |....typename Vis|
0x660c:     69 74 6f 72 3a 3a 72 65  73 75 6c 74 5f 74 79 70   |itor::result_typ|
0x661c:     65 20 62 6f 6f 73 74 3a  3a 64 65 74 61 69 6c 3a   |e boost::detail:|
0x662c:     3a 76 61 72 69 61 6e 74  3a 3a 76 69 73 69 74 61   |:variant::visita|
0x663c:     74 69 6f 6e 5f 69 6d 70  6c 5f 69 6e 76 6f 6b 65   |tion_impl_invoke|
0x664c:     28 69 6e 74 2c 20 56 69  73 69 74 6f 72 26 2c 20   |(int, Visitor&, |
0x665c:     56 6f 69 64 50 74 72 43  56 2c 20 62 6f 6f 73 74   |VoidPtrCV, boost|
0x666c:     3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x667c:     74 3a 3a 61 70 70 6c 79  5f 76 69 73 69 74 6f 72   |t::apply_visitor|
0x668c:     5f 75 6e 72 6f 6c 6c 65  64 2a 2c 20 4e 42 46 2c   |_unrolled*, NBF,|
0x669c:     20 6c 6f 6e 67 20 69 6e  74 29 20 5b 77 69 74 68   | long int) [with|
0x66ac:     20 56 69 73 69 74 6f 72  20 3d 20 62 6f 6f 73 74   | Visitor = boost|
0x66bc:     3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x66cc:     74 3a 3a 64 65 73 74 72  6f 79 65 72 2c 20 56 6f   |t::destroyer, Vo|
0x66dc:     69 64 50 74 72 43 56 20  3d 20 76 6f 69 64 2a 2c   |idPtrCV = void*,|
0x66ec:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x66fc:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 73 68 61   |riant<boost::sha|
0x670c:     72 65 64 5f 70 74 72 3c  76 6f 69 64 3e 2c 20 62   |red_ptr<void>, b|
0x671c:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x672c:     64 65 74 61 69 6c 3a 3a  66 6f 72 65 69 67 6e 5f   |detail::foreign_|
0x673c:     76 6f 69 64 5f 73 68 61  72 65 64 5f 70 74 72 3e   |void_shared_ptr>|
0x674c:     3a 3a 68 61 73 5f 66 61  6c 6c 62 61 63 6b 5f 74   |::has_fallback_t|
0x675c:     79 70 65 5f 2c 20 74 79  70 65 6e 61 6d 65 20 56   |ype_, typename V|
0x676c:     69 73 69 74 6f 72 3a 3a  72 65 73 75 6c 74 5f 74   |isitor::result_t|
0x677c:     79 70 65 20 3d 20 76 6f  69 64 5d 00 00 00 00 00   |ype = void].....|
0x678c:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x679c:     00 00 00 00                                        |....            |
0x67a0:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::destroy_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type, const false_type&) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]"
0x67b0:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x67c0:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x67d0:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x67e0:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x67f0:     63 61 74 6f 72 3e 3a 3a  64 65 73 74 72 6f 79 5f   |cator>::destroy_|
0x6800:     62 61 63 6b 5f 6e 28 62  6f 6f 73 74 3a 3a 73 69   |back_n(boost::si|
0x6810:     67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x6820:     61 75 74 6f 5f 62 75 66  66 65 72 3c 54 2c 20 53   |auto_buffer<T, S|
0x6830:     74 61 63 6b 42 75 66 66  65 72 50 6f 6c 69 63 79   |tackBufferPolicy|
0x6840:     2c 20 47 72 6f 77 50 6f  6c 69 63 79 2c 20 41 6c   |, GrowPolicy, Al|
0x6850:     6c 6f 63 61 74 6f 72 3e  3a 3a 73 69 7a 65 5f 74   |locator>::size_t|
0x6860:     79 70 65 2c 20 63 6f 6e  73 74 20 66 61 6c 73 65   |ype, const false|
0x6870:     5f 74 79 70 65 26 29 20  5b 77 69 74 68 20 54 20   |_type&) [with T |
0x6880:     3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x6890:     3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x68a0:     74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x68b0:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x68c0:     6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x68d0:     73 68 61 72 65 64 5f 70  74 72 3e 2c 20 53 74 61   |shared_ptr>, Sta|
0x68e0:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 20 3d   |ckBufferPolicy =|
0x68f0:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x6900:     3a 3a 64 65 74 61 69 6c  3a 3a 73 74 6f 72 65 5f   |::detail::store_|
0x6910:     6e 5f 6f 62 6a 65 63 74  73 3c 31 30 75 3e 2c 20   |n_objects<10u>, |
0x6920:     47 72 6f 77 50 6f 6c 69  63 79 20 3d 20 62 6f 6f   |GrowPolicy = boo|
0x6930:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x6940:     74 61 69 6c 3a 3a 64 65  66 61 75 6c 74 5f 67 72   |tail::default_gr|
0x6950:     6f 77 5f 70 6f 6c 69 63  79 2c 20 41 6c 6c 6f 63   |ow_policy, Alloc|
0x6960:     61 74 6f 72 20 3d 20 73  74 64 3a 3a 61 6c 6c 6f   |ator = std::allo|
0x6970:     63 61 74 6f 72 3c 62 6f  6f 73 74 3a 3a 76 61 72   |cator<boost::var|
0x6980:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x6990:     65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x69a0:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x69b0:     65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x69c0:     6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 20   |oid_shared_ptr> |
0x69d0:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x69e0:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 61 75 74 6f   |s2::detail::auto|
0x69f0:     5f 62 75 66 66 65 72 3c  54 2c 20 53 74 61 63 6b   |_buffer<T, Stack|
0x6a00:     42 75 66 66 65 72 50 6f  6c 69 63 79 2c 20 47 72   |BufferPolicy, Gr|
0x6a10:     6f 77 50 6f 6c 69 63 79  2c 20 41 6c 6c 6f 63 61   |owPolicy, Alloca|
0x6a20:     74 6f 72 3e 3a 3a 73 69  7a 65 5f 74 79 70 65 20   |tor>::size_type |
0x6a30:     3d 20 75 6e 73 69 67 6e  65 64 20 69 6e 74 2c 20   |= unsigned int, |
0x6a40:     62 6f 6f 73 74 3a 3a 66  61 6c 73 65 5f 74 79 70   |boost::false_typ|
0x6a50:     65 20 3d 20 62 6f 6f 73  74 3a 3a 69 6e 74 65 67   |e = boost::integ|
0x6a60:     72 61 6c 5f 63 6f 6e 73  74 61 6e 74 3c 62 6f 6f   |ral_constant<boo|
0x6a70:     6c 2c 20 66 61 6c 73 65  3e 5d 00                  |l, false>].     |
0x6a7b:     00 00 00 00 00                                     |.....           |
0x6a80:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x6a90:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x6aa0:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x6ab0:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x6ac0:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x6ad0:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x6ae0:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x6af0:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x6b00:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x6b10:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x6b20:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x6b30:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x6b40:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x6b50:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x6b60:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x6b70:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x6b80:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x6b90:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x6ba0:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x6bb0:     72 69 61 6e 74 3a 3a 69  6e 76 6f 6b 65 5f 76 69   |riant::invoke_vi|
0x6bc0:     73 69 74 6f 72 3c 63 6f  6e 73 74 20 62 6f 6f 73   |sitor<const boos|
0x6bd0:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x6be0:     61 69 6c 3a 3a 6c 6f 63  6b 5f 77 65 61 6b 5f 70   |ail::lock_weak_p|
0x6bf0:     74 72 5f 76 69 73 69 74  6f 72 3e 2c 20 56 50 43   |tr_visitor>, VPC|
0x6c00:     56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x6c10:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x6c20:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 77 65 61   |riant<boost::wea|
0x6c30:     6b 5f 70 74 72 3c 76 6f  69 64 3e 2c 20 62 6f 6f   |k_ptr<void>, boo|
0x6c40:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x6c50:     74 61 69 6c 3a 3a 66 6f  72 65 69 67 6e 5f 76 6f   |tail::foreign_vo|
0x6c60:     69 64 5f 77 65 61 6b 5f  70 74 72 3e 3a 3a 68 61   |id_weak_ptr>::ha|
0x6c70:     73 5f 66 61 6c 6c 62 61  63 6b 5f 74 79 70 65 5f   |s_fallback_type_|
0x6c80:     2c 20 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |, typename Visit|
0x6c90:     6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x6ca0:     3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x6cb0:     3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x6cc0:     74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x6cd0:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x6ce0:     6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x6cf0:     73 68 61 72 65 64 5f 70  74 72 3e 2c 20 6d 70 6c   |shared_ptr>, mpl|
0x6d00:     5f 3a 3a 74 72 75 65 5f  20 3d 20 6d 70 6c 5f 3a   |_::true_ = mpl_:|
0x6d10:     3a 62 6f 6f 6c 5f 3c 74  72 75 65 3e 5d 00         |:bool_<true>].  |
0x6d1e:     00 00 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |..typename Visit|
0x6d2e:     6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x6d3e:     62 6f 6f 73 74 3a 3a 64  65 74 61 69 6c 3a 3a 76   |boost::detail::v|
0x6d4e:     61 72 69 61 6e 74 3a 3a  76 69 73 69 74 61 74 69   |ariant::visitati|
0x6d5e:     6f 6e 5f 69 6d 70 6c 5f  69 6e 76 6f 6b 65 28 69   |on_impl_invoke(i|
0x6d6e:     6e 74 2c 20 56 69 73 69  74 6f 72 26 2c 20 56 6f   |nt, Visitor&, Vo|
0x6d7e:     69 64 50 74 72 43 56 2c  20 62 6f 6f 73 74 3a 3a   |idPtrCV, boost::|
0x6d8e:     64 65 74 61 69 6c 3a 3a  76 61 72 69 61 6e 74 3a   |detail::variant:|
0x6d9e:     3a 61 70 70 6c 79 5f 76  69 73 69 74 6f 72 5f 75   |:apply_visitor_u|
0x6dae:     6e 72 6f 6c 6c 65 64 2a  2c 20 4e 42 46 2c 20 6c   |nrolled*, NBF, l|
0x6dbe:     6f 6e 67 20 69 6e 74 29  20 5b 77 69 74 68 20 56   |ong int) [with V|
0x6dce:     69 73 69 74 6f 72 20 3d  20 62 6f 6f 73 74 3a 3a   |isitor = boost::|
0x6dde:     64 65 74 61 69 6c 3a 3a  76 61 72 69 61 6e 74 3a   |detail::variant:|
0x6dee:     3a 69 6e 76 6f 6b 65 5f  76 69 73 69 74 6f 72 3c   |:invoke_visitor<|
0x6dfe:     63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x6e0e:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 6c   |nals2::detail::l|
0x6e1e:     6f 63 6b 5f 77 65 61 6b  5f 70 74 72 5f 76 69 73   |ock_weak_ptr_vis|
0x6e2e:     69 74 6f 72 3e 2c 20 56  6f 69 64 50 74 72 43 56   |itor>, VoidPtrCV|
0x6e3e:     20 3d 20 63 6f 6e 73 74  20 76 6f 69 64 2a 2c 20   | = const void*, |
0x6e4e:     4e 42 46 20 3d 20 62 6f  6f 73 74 3a 3a 76 61 72   |NBF = boost::var|
0x6e5e:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 77 65 61 6b   |iant<boost::weak|
0x6e6e:     5f 70 74 72 3c 76 6f 69  64 3e 2c 20 62 6f 6f 73   |_ptr<void>, boos|
0x6e7e:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x6e8e:     61 69 6c 3a 3a 66 6f 72  65 69 67 6e 5f 76 6f 69   |ail::foreign_voi|
0x6e9e:     64 5f 77 65 61 6b 5f 70  74 72 3e 3a 3a 68 61 73   |d_weak_ptr>::has|
0x6eae:     5f 66 61 6c 6c 62 61 63  6b 5f 74 79 70 65 5f 2c   |_fallback_type_,|
0x6ebe:     20 74 79 70 65 6e 61 6d  65 20 56 69 73 69 74 6f   | typename Visito|
0x6ece:     72 3a 3a 72 65 73 75 6c  74 5f 74 79 70 65 20 3d   |r::result_type =|
0x6ede:     20 62 6f 6f 73 74 3a 3a  76 61 72 69 61 6e 74 3c   | boost::variant<|
0x6eee:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x6efe:     72 3c 76 6f 69 64 3e 2c  20 62 6f 6f 73 74 3a 3a   |r<void>, boost::|
0x6f0e:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x6f1e:     3a 3a 66 6f 72 65 69 67  6e 5f 76 6f 69 64 5f 73   |::foreign_void_s|
0x6f2e:     68 61 72 65 64 5f 70 74  72 3e 5d 00 00 00 00 00   |hared_ptr>].....|
0x6f3e:     00 00                                              |..              |
0x6f40:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x6f50:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x6f60:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x6f70:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x6f80:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x6f90:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x6fa0:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x6fb0:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x6fc0:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x6fd0:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x6fe0:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x6ff0:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x7000:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x7010:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x7020:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x7030:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x7040:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x7050:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x7060:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x7070:     72 69 61 6e 74 3a 3a 63  6f 70 79 5f 69 6e 74 6f   |riant::copy_into|
0x7080:     2c 20 56 50 43 56 20 3d  20 63 6f 6e 73 74 20 76   |, VPCV = const v|
0x7090:     6f 69 64 2a 2c 20 4e 42  46 20 3d 20 62 6f 6f 73   |oid*, NBF = boos|
0x70a0:     74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x70b0:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x70c0:     64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x70d0:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x70e0:     65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x70f0:     5f 70 74 72 3e 3a 3a 68  61 73 5f 66 61 6c 6c 62   |_ptr>::has_fallb|
0x7100:     61 63 6b 5f 74 79 70 65  5f 2c 20 74 79 70 65 6e   |ack_type_, typen|
0x7110:     61 6d 65 20 56 69 73 69  74 6f 72 3a 3a 72 65 73   |ame Visitor::res|
0x7120:     75 6c 74 5f 74 79 70 65  20 3d 20 76 6f 69 64 2c   |ult_type = void,|
0x7130:     20 6d 70 6c 5f 3a 3a 74  72 75 65 5f 20 3d 20 6d   | mpl_::true_ = m|
0x7140:     70 6c 5f 3a 3a 62 6f 6f  6c 5f 3c 74 72 75 65 3e   |pl_::bool_<true>|
0x7150:     5d 00                                              |].              |
0x7152:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 74 79   |..............ty|
0x7162:     70 65 6e 61 6d 65 20 56  69 73 69 74 6f 72 3a 3a   |pename Visitor::|
0x7172:     72 65 73 75 6c 74 5f 74  79 70 65 20 62 6f 6f 73   |result_type boos|
0x7182:     74 3a 3a 64 65 74 61 69  6c 3a 3a 76 61 72 69 61   |t::detail::varia|
0x7192:     6e 74 3a 3a 76 69 73 69  74 61 74 69 6f 6e 5f 69   |nt::visitation_i|
0x71a2:     6d 70 6c 5f 69 6e 76 6f  6b 65 28 69 6e 74 2c 20   |mpl_invoke(int, |
0x71b2:     56 69 73 69 74 6f 72 26  2c 20 56 6f 69 64 50 74   |Visitor&, VoidPt|
0x71c2:     72 43 56 2c 20 62 6f 6f  73 74 3a 3a 64 65 74 61   |rCV, boost::deta|
0x71d2:     69 6c 3a 3a 76 61 72 69  61 6e 74 3a 3a 61 70 70   |il::variant::app|
0x71e2:     6c 79 5f 76 69 73 69 74  6f 72 5f 75 6e 72 6f 6c   |ly_visitor_unrol|
0x71f2:     6c 65 64 2a 2c 20 4e 42  46 2c 20 6c 6f 6e 67 20   |led*, NBF, long |
0x7202:     69 6e 74 29 20 5b 77 69  74 68 20 56 69 73 69 74   |int) [with Visit|
0x7212:     6f 72 20 3d 20 62 6f 6f  73 74 3a 3a 64 65 74 61   |or = boost::deta|
0x7222:     69 6c 3a 3a 76 61 72 69  61 6e 74 3a 3a 63 6f 70   |il::variant::cop|
0x7232:     79 5f 69 6e 74 6f 2c 20  56 6f 69 64 50 74 72 43   |y_into, VoidPtrC|
0x7242:     56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x7252:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x7262:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 73 68 61   |riant<boost::sha|
0x7272:     72 65 64 5f 70 74 72 3c  76 6f 69 64 3e 2c 20 62   |red_ptr<void>, b|
0x7282:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x7292:     64 65 74 61 69 6c 3a 3a  66 6f 72 65 69 67 6e 5f   |detail::foreign_|
0x72a2:     76 6f 69 64 5f 73 68 61  72 65 64 5f 70 74 72 3e   |void_shared_ptr>|
0x72b2:     3a 3a 68 61 73 5f 66 61  6c 6c 62 61 63 6b 5f 74   |::has_fallback_t|
0x72c2:     79 70 65 5f 2c 20 74 79  70 65 6e 61 6d 65 20 56   |ype_, typename V|
0x72d2:     69 73 69 74 6f 72 3a 3a  72 65 73 75 6c 74 5f 74   |isitor::result_t|
0x72e2:     79 70 65 20 3d 20 76 6f  69 64 5d 00 00 00 00 00   |ype = void].....|
0x72f2:     00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x7300:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::unchecked_push_back(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference = const boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>&]"
0x7310:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x7320:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x7330:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7340:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x7350:     63 61 74 6f 72 3e 3a 3a  75 6e 63 68 65 63 6b 65   |cator>::unchecke|
0x7360:     64 5f 70 75 73 68 5f 62  61 63 6b 28 62 6f 6f 73   |d_push_back(boos|
0x7370:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x7380:     61 69 6c 3a 3a 61 75 74  6f 5f 62 75 66 66 65 72   |ail::auto_buffer|
0x7390:     3c 54 2c 20 53 74 61 63  6b 42 75 66 66 65 72 50   |<T, StackBufferP|
0x73a0:     6f 6c 69 63 79 2c 20 47  72 6f 77 50 6f 6c 69 63   |olicy, GrowPolic|
0x73b0:     79 2c 20 41 6c 6c 6f 63  61 74 6f 72 3e 3a 3a 6f   |y, Allocator>::o|
0x73c0:     70 74 69 6d 69 7a 65 64  5f 63 6f 6e 73 74 5f 72   |ptimized_const_r|
0x73d0:     65 66 65 72 65 6e 63 65  29 20 5b 77 69 74 68 20   |eference) [with |
0x73e0:     54 20 3d 20 62 6f 6f 73  74 3a 3a 76 61 72 69 61   |T = boost::varia|
0x73f0:     6e 74 3c 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |nt<boost::shared|
0x7400:     5f 70 74 72 3c 76 6f 69  64 3e 2c 20 62 6f 6f 73   |_ptr<void>, boos|
0x7410:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x7420:     61 69 6c 3a 3a 66 6f 72  65 69 67 6e 5f 76 6f 69   |ail::foreign_voi|
0x7430:     64 5f 73 68 61 72 65 64  5f 70 74 72 3e 2c 20 53   |d_shared_ptr>, S|
0x7440:     74 61 63 6b 42 75 66 66  65 72 50 6f 6c 69 63 79   |tackBufferPolicy|
0x7450:     20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x7460:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 74 6f 72   |s2::detail::stor|
0x7470:     65 5f 6e 5f 6f 62 6a 65  63 74 73 3c 31 30 75 3e   |e_n_objects<10u>|
0x7480:     2c 20 47 72 6f 77 50 6f  6c 69 63 79 20 3d 20 62   |, GrowPolicy = b|
0x7490:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x74a0:     64 65 74 61 69 6c 3a 3a  64 65 66 61 75 6c 74 5f   |detail::default_|
0x74b0:     67 72 6f 77 5f 70 6f 6c  69 63 79 2c 20 41 6c 6c   |grow_policy, All|
0x74c0:     6f 63 61 74 6f 72 20 3d  20 73 74 64 3a 3a 61 6c   |ocator = std::al|
0x74d0:     6c 6f 63 61 74 6f 72 3c  62 6f 6f 73 74 3a 3a 76   |locator<boost::v|
0x74e0:     61 72 69 61 6e 74 3c 62  6f 6f 73 74 3a 3a 73 68   |ariant<boost::sh|
0x74f0:     61 72 65 64 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |ared_ptr<void>, |
0x7500:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x7510:     3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x7520:     5f 76 6f 69 64 5f 73 68  61 72 65 64 5f 70 74 72   |_void_shared_ptr|
0x7530:     3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x7540:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x7550:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x7560:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7570:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x7580:     63 61 74 6f 72 3e 3a 3a  6f 70 74 69 6d 69 7a 65   |cator>::optimize|
0x7590:     64 5f 63 6f 6e 73 74 5f  72 65 66 65 72 65 6e 63   |d_const_referenc|
0x75a0:     65 20 3d 20 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |e = const boost:|
0x75b0:     3a 76 61 72 69 61 6e 74  3c 62 6f 6f 73 74 3a 3a   |:variant<boost::|
0x75c0:     73 68 61 72 65 64 5f 70  74 72 3c 76 6f 69 64 3e   |shared_ptr<void>|
0x75d0:     2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x75e0:     32 3a 3a 64 65 74 61 69  6c 3a 3a 66 6f 72 65 69   |2::detail::forei|
0x75f0:     67 6e 5f 76 6f 69 64 5f  73 68 61 72 65 64 5f 70   |gn_void_shared_p|
0x7600:     74 72 3e 26 5d 00                                  |tr>&].          |
0x7606:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7616:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x7620:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x7630:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x7640:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x7650:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7660:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x7670:     63 61 74 6f 72 3e 3a 3a  72 65 73 65 72 76 65 28   |cator>::reserve(|
0x7680:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x7690:     3a 64 65 74 61 69 6c 3a  3a 61 75 74 6f 5f 62 75   |:detail::auto_bu|
0x76a0:     66 66 65 72 3c 54 2c 20  53 74 61 63 6b 42 75 66   |ffer<T, StackBuf|
0x76b0:     66 65 72 50 6f 6c 69 63  79 2c 20 47 72 6f 77 50   |ferPolicy, GrowP|
0x76c0:     6f 6c 69 63 79 2c 20 41  6c 6c 6f 63 61 74 6f 72   |olicy, Allocator|
0x76d0:     3e 3a 3a 73 69 7a 65 5f  74 79 70 65 29 20 5b 77   |>::size_type) [w|
0x76e0:     69 74 68 20 54 20 3d 20  62 6f 6f 73 74 3a 3a 76   |ith T = boost::v|
0x76f0:     61 72 69 61 6e 74 3c 62  6f 6f 73 74 3a 3a 73 68   |ariant<boost::sh|
0x7700:     61 72 65 64 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |ared_ptr<void>, |
0x7710:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x7720:     3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x7730:     5f 76 6f 69 64 5f 73 68  61 72 65 64 5f 70 74 72   |_void_shared_ptr|
0x7740:     3e 2c 20 53 74 61 63 6b  42 75 66 66 65 72 50 6f   |>, StackBufferPo|
0x7750:     6c 69 63 79 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |licy = boost::si|
0x7760:     67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x7770:     73 74 6f 72 65 5f 6e 5f  6f 62 6a 65 63 74 73 3c   |store_n_objects<|
0x7780:     31 30 75 3e 2c 20 47 72  6f 77 50 6f 6c 69 63 79   |10u>, GrowPolicy|
0x7790:     20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x77a0:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 64 65 66 61   |s2::detail::defa|
0x77b0:     75 6c 74 5f 67 72 6f 77  5f 70 6f 6c 69 63 79 2c   |ult_grow_policy,|
0x77c0:     20 41 6c 6c 6f 63 61 74  6f 72 20 3d 20 73 74 64   | Allocator = std|
0x77d0:     3a 3a 61 6c 6c 6f 63 61  74 6f 72 3c 62 6f 6f 73   |::allocator<boos|
0x77e0:     74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x77f0:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x7800:     64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x7810:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x7820:     65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x7830:     5f 70 74 72 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |_ptr> >, boost::|
0x7840:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x7850:     3a 3a 61 75 74 6f 5f 62  75 66 66 65 72 3c 54 2c   |::auto_buffer<T,|
0x7860:     20 53 74 61 63 6b 42 75  66 66 65 72 50 6f 6c 69   | StackBufferPoli|
0x7870:     63 79 2c 20 47 72 6f 77  50 6f 6c 69 63 79 2c 20   |cy, GrowPolicy, |
0x7880:     41 6c 6c 6f 63 61 74 6f  72 3e 3a 3a 73 69 7a 65   |Allocator>::size|
0x7890:     5f 74 79 70 65 20 3d 20  75 6e 73 69 67 6e 65 64   |_type = unsigned|
0x78a0:     20 69 6e 74 5d 00                                  | int].          |
0x78a6:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x78b6:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x78c0:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve_impl(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x78d0:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x78e0:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x78f0:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7900:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x7910:     63 61 74 6f 72 3e 3a 3a  72 65 73 65 72 76 65 5f   |cator>::reserve_|
0x7920:     69 6d 70 6c 28 62 6f 6f  73 74 3a 3a 73 69 67 6e   |impl(boost::sign|
0x7930:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x7940:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x7950:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7960:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x7970:     63 61 74 6f 72 3e 3a 3a  73 69 7a 65 5f 74 79 70   |cator>::size_typ|
0x7980:     65 29 20 5b 77 69 74 68  20 54 20 3d 20 62 6f 6f   |e) [with T = boo|
0x7990:     73 74 3a 3a 76 61 72 69  61 6e 74 3c 62 6f 6f 73   |st::variant<boos|
0x79a0:     74 3a 3a 73 68 61 72 65  64 5f 70 74 72 3c 76 6f   |t::shared_ptr<vo|
0x79b0:     69 64 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |id>, boost::sign|
0x79c0:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 66 6f   |als2::detail::fo|
0x79d0:     72 65 69 67 6e 5f 76 6f  69 64 5f 73 68 61 72 65   |reign_void_share|
0x79e0:     64 5f 70 74 72 3e 2c 20  53 74 61 63 6b 42 75 66   |d_ptr>, StackBuf|
0x79f0:     66 65 72 50 6f 6c 69 63  79 20 3d 20 62 6f 6f 73   |ferPolicy = boos|
0x7a00:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x7a10:     61 69 6c 3a 3a 73 74 6f  72 65 5f 6e 5f 6f 62 6a   |ail::store_n_obj|
0x7a20:     65 63 74 73 3c 31 30 75  3e 2c 20 47 72 6f 77 50   |ects<10u>, GrowP|
0x7a30:     6f 6c 69 63 79 20 3d 20  62 6f 6f 73 74 3a 3a 73   |olicy = boost::s|
0x7a40:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x7a50:     3a 64 65 66 61 75 6c 74  5f 67 72 6f 77 5f 70 6f   |:default_grow_po|
0x7a60:     6c 69 63 79 2c 20 41 6c  6c 6f 63 61 74 6f 72 20   |licy, Allocator |
0x7a70:     3d 20 73 74 64 3a 3a 61  6c 6c 6f 63 61 74 6f 72   |= std::allocator|
0x7a80:     3c 62 6f 6f 73 74 3a 3a  76 61 72 69 61 6e 74 3c   |<boost::variant<|
0x7a90:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x7aa0:     72 3c 76 6f 69 64 3e 2c  20 62 6f 6f 73 74 3a 3a   |r<void>, boost::|
0x7ab0:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x7ac0:     3a 3a 66 6f 72 65 69 67  6e 5f 76 6f 69 64 5f 73   |::foreign_void_s|
0x7ad0:     68 61 72 65 64 5f 70 74  72 3e 20 3e 2c 20 62 6f   |hared_ptr> >, bo|
0x7ae0:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x7af0:     65 74 61 69 6c 3a 3a 61  75 74 6f 5f 62 75 66 66   |etail::auto_buff|
0x7b00:     65 72 3c 54 2c 20 53 74  61 63 6b 42 75 66 66 65   |er<T, StackBuffe|
0x7b10:     72 50 6f 6c 69 63 79 2c  20 47 72 6f 77 50 6f 6c   |rPolicy, GrowPol|
0x7b20:     69 63 79 2c 20 41 6c 6c  6f 63 61 74 6f 72 3e 3a   |icy, Allocator>:|
0x7b30:     3a 73 69 7a 65 5f 74 79  70 65 20 3d 20 75 6e 73   |:size_type = uns|
0x7b40:     69 67 6e 65 64 20 69 6e  74 5d 00                  |igned int].     |
0x7b4b:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7b5b:     00 00 00 00 00                                     |.....           |
0x7b60:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x7b70:     3a 64 65 74 61 69 6c 3a  3a 61 75 74 6f 5f 62 75   |:detail::auto_bu|
0x7b80:     66 66 65 72 3c 54 2c 20  53 74 61 63 6b 42 75 66   |ffer<T, StackBuf|
0x7b90:     66 65 72 50 6f 6c 69 63  79 2c 20 47 72 6f 77 50   |ferPolicy, GrowP|
0x7ba0:     6f 6c 69 63 79 2c 20 41  6c 6c 6f 63 61 74 6f 72   |olicy, Allocator|
0x7bb0:     3e 3a 3a 7e 61 75 74 6f  5f 62 75 66 66 65 72 28   |>::~auto_buffer(|
0x7bc0:     29 20 5b 77 69 74 68 20  54 20 3d 20 62 6f 6f 73   |) [with T = boos|
0x7bd0:     74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x7be0:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x7bf0:     64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x7c00:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x7c10:     65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x7c20:     5f 70 74 72 3e 2c 20 53  74 61 63 6b 42 75 66 66   |_ptr>, StackBuff|
0x7c30:     65 72 50 6f 6c 69 63 79  20 3d 20 62 6f 6f 73 74   |erPolicy = boost|
0x7c40:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x7c50:     69 6c 3a 3a 73 74 6f 72  65 5f 6e 5f 6f 62 6a 65   |il::store_n_obje|
0x7c60:     63 74 73 3c 31 30 75 3e  2c 20 47 72 6f 77 50 6f   |cts<10u>, GrowPo|
0x7c70:     6c 69 63 79 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |licy = boost::si|
0x7c80:     67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x7c90:     64 65 66 61 75 6c 74 5f  67 72 6f 77 5f 70 6f 6c   |default_grow_pol|
0x7ca0:     69 63 79 2c 20 41 6c 6c  6f 63 61 74 6f 72 20 3d   |icy, Allocator =|
0x7cb0:     20 73 74 64 3a 3a 61 6c  6c 6f 63 61 74 6f 72 3c   | std::allocator<|
0x7cc0:     62 6f 6f 73 74 3a 3a 76  61 72 69 61 6e 74 3c 62   |boost::variant<b|
0x7cd0:     6f 6f 73 74 3a 3a 73 68  61 72 65 64 5f 70 74 72   |oost::shared_ptr|
0x7ce0:     3c 76 6f 69 64 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |<void>, boost::s|
0x7cf0:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x7d00:     3a 66 6f 72 65 69 67 6e  5f 76 6f 69 64 5f 73 68   |:foreign_void_sh|
0x7d10:     61 72 65 64 5f 70 74 72  3e 20 3e 5d 00            |ared_ptr> >].   |
0x7d1d:     00 00 00                                           |...             |
0x7d20:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, CCryptoKeyStore*, boost::function<void(CCryptoKeyStore*)> >, boost::signals2::mutex> > >]"
0x7d30:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x7d40:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x7d50:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x7d60:     54 79 70 65 3e 3a 3a 67  72 6f 75 70 65 64 5f 6c   |Type>::grouped_l|
0x7d70:     69 73 74 28 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |ist(const boost:|
0x7d80:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x7d90:     6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x7da0:     47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x7db0:     61 72 65 2c 20 56 61 6c  75 65 54 79 70 65 3e 26   |are, ValueType>&|
0x7dc0:     29 20 5b 77 69 74 68 20  47 72 6f 75 70 20 3d 20   |) [with Group = |
0x7dd0:     69 6e 74 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |int, GroupCompar|
0x7de0:     65 20 3d 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |e = std::less<in|
0x7df0:     74 3e 2c 20 56 61 6c 75  65 54 79 70 65 20 3d 20   |t>, ValueType = |
0x7e00:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x7e10:     72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x7e20:     32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x7e30:     63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x7e40:     70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x7e50:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x7e60:     6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x7e70:     6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x7e80:     6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x7e90:     67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 76 6f   |gnals2::slot1<vo|
0x7ea0:     69 64 2c 20 43 43 72 79  70 74 6f 4b 65 79 53 74   |id, CCryptoKeySt|
0x7eb0:     6f 72 65 2a 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |ore*, boost::fun|
0x7ec0:     63 74 69 6f 6e 3c 76 6f  69 64 28 43 43 72 79 70   |ction<void(CCryp|
0x7ed0:     74 6f 4b 65 79 53 74 6f  72 65 2a 29 3e 20 3e 2c   |toKeyStore*)> >,|
0x7ee0:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x7ef0:     3a 3a 6d 75 74 65 78 3e  20 3e 2c 20 62 6f 6f 73   |::mutex> >, boos|
0x7f00:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x7f10:     61 69 6c 3a 3a 67 72 6f  75 70 65 64 5f 6c 69 73   |ail::grouped_lis|
0x7f20:     74 3c 47 72 6f 75 70 2c  20 47 72 6f 75 70 43 6f   |t<Group, GroupCo|
0x7f30:     6d 70 61 72 65 2c 20 56  61 6c 75 65 54 79 70 65   |mpare, ValueType|
0x7f40:     3e 20 3d 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |> = boost::signa|
0x7f50:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 67 72 6f   |ls2::detail::gro|
0x7f60:     75 70 65 64 5f 6c 69 73  74 3c 69 6e 74 2c 20 73   |uped_list<int, s|
0x7f70:     74 64 3a 3a 6c 65 73 73  3c 69 6e 74 3e 2c 20 62   |td::less<int>, b|
0x7f80:     6f 6f 73 74 3a 3a 73 68  61 72 65 64 5f 70 74 72   |oost::shared_ptr|
0x7f90:     3c 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   |<boost::signals2|
0x7fa0:     3a 3a 64 65 74 61 69 6c  3a 3a 63 6f 6e 6e 65 63   |::detail::connec|
0x7fb0:     74 69 6f 6e 5f 62 6f 64  79 3c 73 74 64 3a 3a 70   |tion_body<std::p|
0x7fc0:     61 69 72 3c 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |air<boost::signa|
0x7fd0:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 73 6c 6f   |ls2::detail::slo|
0x7fe0:     74 5f 6d 65 74 61 5f 67  72 6f 75 70 2c 20 62 6f   |t_meta_group, bo|
0x7ff0:     6f 73 74 3a 3a 6f 70 74  69 6f 6e 61 6c 3c 69 6e   |ost::optional<in|
0x8000:     74 3e 20 3e 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |t> >, boost::sig|
0x8010:     6e 61 6c 73 32 3a 3a 73  6c 6f 74 31 3c 76 6f 69   |nals2::slot1<voi|
0x8020:     64 2c 20 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |d, CCryptoKeySto|
0x8030:     72 65 2a 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |re*, boost::func|
0x8040:     74 69 6f 6e 3c 76 6f 69  64 28 43 43 72 79 70 74   |tion<void(CCrypt|
0x8050:     6f 4b 65 79 53 74 6f 72  65 2a 29 3e 20 3e 2c 20   |oKeyStore*)> >, |
0x8060:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x8070:     3a 6d 75 74 65 78 3e 20  3e 20 3e 5d 00            |:mutex> > >].   |
0x807d:     00 00 00                                           |...             |
0x8080:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 68 61 72   |void boost::shar|   "void boost::shared_ptr<T>::reset(Y*) [with Y = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>::invocation_state, T = boost::signals2::detail::signal1_impl<void, CCryptoKeyStore*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(CCryptoKeyStore*)>, boost::function<void(const boost::signals2::connection&, CCryptoKeyStore*)>, boost::signals2::mutex>::invocation_state]"
0x8090:     65 64 5f 70 74 72 3c 54  3e 3a 3a 72 65 73 65 74   |ed_ptr<T>::reset|
0x80a0:     28 59 2a 29 20 5b 77 69  74 68 20 59 20 3d 20 62   |(Y*) [with Y = b|
0x80b0:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x80c0:     64 65 74 61 69 6c 3a 3a  73 69 67 6e 61 6c 31 5f   |detail::signal1_|
0x80d0:     69 6d 70 6c 3c 76 6f 69  64 2c 20 43 43 72 79 70   |impl<void, CCryp|
0x80e0:     74 6f 4b 65 79 53 74 6f  72 65 2a 2c 20 62 6f 6f   |toKeyStore*, boo|
0x80f0:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6f 70   |st::signals2::op|
0x8100:     74 69 6f 6e 61 6c 5f 6c  61 73 74 5f 76 61 6c 75   |tional_last_valu|
0x8110:     65 3c 76 6f 69 64 3e 2c  20 69 6e 74 2c 20 73 74   |e<void>, int, st|
0x8120:     64 3a 3a 6c 65 73 73 3c  69 6e 74 3e 2c 20 62 6f   |d::less<int>, bo|
0x8130:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x8140:     69 64 28 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |id(CCryptoKeySto|
0x8150:     72 65 2a 29 3e 2c 20 62  6f 6f 73 74 3a 3a 66 75   |re*)>, boost::fu|
0x8160:     6e 63 74 69 6f 6e 3c 76  6f 69 64 28 63 6f 6e 73   |nction<void(cons|
0x8170:     74 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |t boost::signals|
0x8180:     32 3a 3a 63 6f 6e 6e 65  63 74 69 6f 6e 26 2c 20   |2::connection&, |
0x8190:     43 43 72 79 70 74 6f 4b  65 79 53 74 6f 72 65 2a   |CCryptoKeyStore*|
0x81a0:     29 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |)>, boost::signa|
0x81b0:     6c 73 32 3a 3a 6d 75 74  65 78 3e 3a 3a 69 6e 76   |ls2::mutex>::inv|
0x81c0:     6f 63 61 74 69 6f 6e 5f  73 74 61 74 65 2c 20 54   |ocation_state, T|
0x81d0:     20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x81e0:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 69 67 6e   |s2::detail::sign|
0x81f0:     61 6c 31 5f 69 6d 70 6c  3c 76 6f 69 64 2c 20 43   |al1_impl<void, C|
0x8200:     43 72 79 70 74 6f 4b 65  79 53 74 6f 72 65 2a 2c   |CryptoKeyStore*,|
0x8210:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x8220:     3a 3a 6f 70 74 69 6f 6e  61 6c 5f 6c 61 73 74 5f   |::optional_last_|
0x8230:     76 61 6c 75 65 3c 76 6f  69 64 3e 2c 20 69 6e 74   |value<void>, int|
0x8240:     2c 20 73 74 64 3a 3a 6c  65 73 73 3c 69 6e 74 3e   |, std::less<int>|
0x8250:     2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x8260:     6e 3c 76 6f 69 64 28 43  43 72 79 70 74 6f 4b 65   |n<void(CCryptoKe|
0x8270:     79 53 74 6f 72 65 2a 29  3e 2c 20 62 6f 6f 73 74   |yStore*)>, boost|
0x8280:     3a 3a 66 75 6e 63 74 69  6f 6e 3c 76 6f 69 64 28   |::function<void(|
0x8290:     63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x82a0:     6e 61 6c 73 32 3a 3a 63  6f 6e 6e 65 63 74 69 6f   |nals2::connectio|
0x82b0:     6e 26 2c 20 43 43 72 79  70 74 6f 4b 65 79 53 74   |n&, CCryptoKeySt|
0x82c0:     6f 72 65 2a 29 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |ore*)>, boost::s|
0x82d0:     69 67 6e 61 6c 73 32 3a  3a 6d 75 74 65 78 3e 3a   |ignals2::mutex>:|
0x82e0:     3a 69 6e 76 6f 63 61 74  69 6f 6e 5f 73 74 61 74   |:invocation_stat|
0x82f0:     65 5d 00                                           |e].             |
0x82f3:     00 00 00 00 00 00 00 00  00 00 00 00 00            |.............   |
0x8300:     62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x8310:     5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x8320:     70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x8330:     74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x8340:     69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x8350:     34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x8360:     74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x8370:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x8380:     73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x8390:     69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x83a0:     65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x83a9:     ??                                                 |?               |
; section: .rodata._ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED2Ev
0x8cc0:     30 8c 00 00 f8 8b 00 00  f0 8b 00 00 f0 8b 00 00   |0...............|
0x8cd0:     f0 8b 00 00 f0 8b 00 00  f0 8b 00 00 f0 8b 00 00   |................|
0x8ce0:     f0 8b 00 00 f0 8b 00 00  f0 8b 00 00 f0 8b 00 00   |................|
0x8cf0:     f0 8b 00 00 f0 8b 00 00  f0 8b 00 00 f0 8b 00 00   |................|
0x8d00:     f0 8b 00 00 f0 8b 00 00  f0 8b 00 00 f0 8b 00 00   |................|
0x8d10:     83                                                 |.               |
; section: .rodata._ZNK5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEj
0xd0a8:     44 cb 00 00 4f cd 00 00  10 cc 00 00 10 cc 00 00   |D...O...........|
0xd0b8:     10 cc 00 00 10 cc 00 00  10 cc 00 00 10 cc 00 00   |................|
0xd0c8:     10 cc 00 00 10 cc 00 00  10 cc 00 00 10 cc 00 00   |................|
0xd0d8:     10 cc 00 00 10 cc 00 00  10 cc 00 00 10 cc 00 00   |................|
0xd0e8:     10 cc 00 00 10 cc 00 00  10 cc 00 00 10 cc 00 00   |................|
0xd0f8:     ??                                                 |?               |
; section: .rodata._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE
0xd460:     d8 d3 00 00 70 d3 00 00  d0 d3 00 00 d0 d3 00 00   |....p...........|
0xd470:     d0 d3 00 00 d0 d3 00 00  d0 d3 00 00 d0 d3 00 00   |................|
0xd480:     d0 d3 00 00 d0 d3 00 00  d0 d3 00 00 d0 d3 00 00   |................|
0xd490:     d0 d3 00 00 d0 d3 00 00  d0 d3 00 00 d0 d3 00 00   |................|
0xd4a0:     d0 d3 00 00 d0 d3 00 00  d0 d3 00 00 d0 d3 00 00   |................|
0xd4b0:     81                                                 |.               |
; section: .rodata._ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSA_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISR_EEEEEEvT_
0xe0bc:     98 d5 00 00 40 d6 00 00  98 d6 00 00 a8 d6 00 00   |....@...........|
0xe0cc:     b8 d6 00 00 c8 d6 00 00  d8 d6 00 00 e8 d6 00 00   |................|
0xe0dc:     f8 d6 00 00 08 d7 00 00  18 d7 00 00 28 d7 00 00   |............(...|
0xe0ec:     38 d7 00 00 48 d7 00 00  58 d7 00 00 68 d7 00 00   |8...H...X...h...|
0xe0fc:     78 d7 00 00 88 d7 00 00  98 d7 00 00 88 d5 00 00   |x...............|
0xe10c:     98 d8 00 00 0a d8 00 00  05 d8 00 00 ff d7 00 00   |................|
0xe11c:     fa d7 00 00 f5 d7 00 00  ef d7 00 00 ea d7 00 00   |................|
0xe12c:     e5 d7 00 00 df d7 00 00  da d7 00 00 d5 d7 00 00   |................|
0xe13c:     cf d7 00 00 ca d7 00 00  c5 d7 00 00 be d7 00 00   |................|
0xe14c:     b9 d7 00 00 b4 d7 00 00  af d7 00 00 b6 d8 00 00   |................|
0xe15c:     81 da 00 00 0a da 00 00  05 da 00 00 ff d9 00 00   |................|
0xe16c:     fa d9 00 00 f5 d9 00 00  ef d9 00 00 ea d9 00 00   |................|
0xe17c:     e5 d9 00 00 df d9 00 00  da d9 00 00 d5 d9 00 00   |................|
0xe18c:     cf d9 00 00 ca d9 00 00  c5 d9 00 00 be d9 00 00   |................|
0xe19c:     b9 d9 00 00 b4 d9 00 00  af d9 00 00 a5 da 00 00   |................|
0xe1ac:     5e dc 00 00 35 dc 00 00  2f dc 00 00 2a dc 00 00   |^...5.../...*...|
0xe1bc:     25 dc 00 00 1f dc 00 00  1a dc 00 00 15 dc 00 00   |%...............|
0xe1cc:     0f dc 00 00 0a dc 00 00  05 dc 00 00 ff db 00 00   |................|
0xe1dc:     fa db 00 00 f5 db 00 00  ef db 00 00 ea db 00 00   |................|
0xe1ec:     e5 db 00 00 d9 db 00 00  d4 db 00 00 8b dc 00 00   |................|
0xe1fc:     64 dd 00 00 2a dd 00 00  25 dd 00 00 1f dd 00 00   |d...*...%.......|
0xe20c:     1a dd 00 00 15 dd 00 00  0f dd 00 00 0a dd 00 00   |................|
0xe21c:     05 dd 00 00 ff dc 00 00  fa dc 00 00 f5 dc 00 00   |................|
0xe22c:     ef dc 00 00 ea dc 00 00  e5 dc 00 00 df dc 00 00   |................|
0xe23c:     da dc 00 00 d5 dc 00 00  cb dc 00 00 88 dd 00 00   |................|
0xe24c:     7b e0 00 00 5a e0 00 00  55 e0 00 00 4f e0 00 00   |{...Z...U...O...|
0xe25c:     4a e0 00 00 45 e0 00 00  3f e0 00 00 3a e0 00 00   |J...E...?...:...|
0xe26c:     35 e0 00 00 2f e0 00 00  2a e0 00 00 25 e0 00 00   |5.../...*...%...|
0xe27c:     1f e0 00 00 1a e0 00 00  15 e0 00 00 0d e0 00 00   |................|
0xe28c:     08 e0 00 00 03 e0 00 00  fe df 00 00 a6 e0 00 00   |................|
0xe29c:     ??                                                 |?               |
; section: .rodata._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS5_SC_EESI_EEEEESV_E18lock_next_callableEv
0xe500:     28 e4 00 00 78 e4 00 00  20 e4 00 00 20 e4 00 00   |(...x... ... ...|
0xe510:     20 e4 00 00 20 e4 00 00  20 e4 00 00 20 e4 00 00   | ... ... ... ...|
0xe520:     20 e4 00 00 20 e4 00 00  20 e4 00 00 20 e4 00 00   | ... ... ... ...|
0xe530:     20 e4 00 00 20 e4 00 00  20 e4 00 00 20 e4 00 00   | ... ... ... ...|
0xe540:     20 e4 00 00 20 e4 00 00  20 e4 00 00 20 e4 00 00   | ... ... ... ...|
0xe550:     55                                                 |U               |
; section: .rodata._ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEclES4_
0xece0:     90 e9 00 00 50 e9 00 00  80 e8 00 00 80 e8 00 00   |....P...........|
0xecf0:     80 e8 00 00 80 e8 00 00  80 e8 00 00 80 e8 00 00   |................|
0xed00:     80 e8 00 00 80 e8 00 00  80 e8 00 00 80 e8 00 00   |................|
0xed10:     80 e8 00 00 80 e8 00 00  80 e8 00 00 80 e8 00 00   |................|
0xed20:     80 e8 00 00 80 e8 00 00  80 e8 00 00 80 e8 00 00   |................|
0xed30:     83                                                 |.               |
; section: .ctors
0xedd4:     30 ed 00 00 39                                     |0...9           |
; section: .rodata._ZTS9CKeyStore
0xedd8:     39 43 4b 65 79 53 74 6f  72 65 00 ??               |9CKeyStore.?    |
; section: .rodata._ZTI9CKeyStore
0xede4:     08 00 00 00 d8 ed 00 00  31                        |........1       |
; section: .rodata._ZTS14CBasicKeyStore
0xedec:     31 34 43 42 61 73 69 63  4b 65 79 53 74 6f 72 65   |14CBasicKeyStore|
0xedfc:     00 ??                                              |.?              |
; section: .rodata._ZTI14CBasicKeyStore
0xee00:     08 00 00 00 ec ed 00 00  e4 ed 00 00 31            |............1   |
; section: .rodata._ZTS15CCryptoKeyStore
0xee0c:     31 35 43 43 72 79 70 74  6f 4b 65 79 53 74 6f 72   |15CCryptoKeyStor|
0xee1c:     65 00 ??                                           |e.?             |
; section: .rodata._ZTI15CCryptoKeyStore
0xee20:     08 00 00 00 0c ee 00 00  00 ee 00 00 ??            |............?   |
; section: .rodata._ZTSN5boost6system14error_categoryE
0xee40:     4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0xee50:     65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0xee60:     08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0xee60:     08 00 00 00 40 ee 00 00  20 f3 00 00 4e            |....@... ...N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0xee6c:     4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0xee7c:     73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0xee8c:     08 00 00 00 6c ee 00 00  00 00 00 00 ??            |....l.......?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0xeea0:     00 00 00 00 60 ee 00 00  80 26 00 00 c0 2a 00 00   |....`....&...*..|
0xeeb0:     00 00 00 00 00 00 00 00  b0 26 00 00 f0 26 00 00   |.........&...&..|
0xeec0:     60 27 00 00 ??                                     |`'..?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0xeec8:     00 00 00 00 8c ee 00 00  20 3c 00 00 b0 3c 00 00   |........ <...<..|
0xeed8:     40 3d 00 00 ??                                     |@=..?           |
; section: .rodata._ZTV9CKeyStore
0xeee0:     00 00 00 00 e4 ed 00 00  b0 37 00 00 c0 3a 00 00   |.........7...:..|
0xeef0:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xef00:     00 00 00 00 b0 09 00 00  00 00 00 00 00 00 00 00   |................|
0xef10:     00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTV14CBasicKeyStore
0xef20:     00 00 00 00 00 ee 00 00  40 92 00 00 00 93 00 00   |........@.......|
0xef30:     30 11 00 00 00 00 00 00  90 9b 00 00 90 9a 00 00   |0...............|
0xef40:     d0 9f 00 00 b0 09 00 00  70 17 00 00 f0 04 00 00   |........p.......|
0xef50:     00 04 00 00 ??                                     |....?           |
; section: .rodata._ZTV15CCryptoKeyStore
0xef60:     00 00 00 00 20 ee 00 00  80 a4 00 00 70 a6 00 00   |.... .......p...|
0xef70:     20 13 00 00 00 00 00 00  40 9c 00 00 a0 05 00 00   | .......@.......|
0xef80:     c0 a0 00 00 60 0b 00 00  70 17 00 00 f0 04 00 00   |....`...p.......|
0xef90:     00 04 00 00 00 19 00 00  00                        |.........       |
; section: .rodata._ZTVN5boost16thread_exceptionE
0xef98:     00 00 00 00 28 f3 00 00  e0 2b 00 00 c0 38 00 00   |....(....+...8..|
0xefa8:     00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost10lock_errorE
0xefb0:     00 00 00 00 34 f3 00 00  80 38 00 00 10 39 00 00   |....4....8...9..|
0xefc0:     90 25 00 00 ??                                     |.%..?           |
; section: .rodata._ZTVN5boost9exceptionE
0xefc8:     00 00 00 00 40 f3 00 00  00 00 00 00 00 00 00 00   |....@...........|
0xefd8:     ??                                                 |?               |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0xefe0:     00 00 00 00 60 f3 00 00  10 3f 00 00 30 44 00 00   |....`....?..0D..|
0xeff0:     90 25 00 00 f8 ff ff ff  60 f3 00 00 00 3f 00 00   |.%......`....?..|
0xf000:     20 44 00 00 ??                                     | D..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0xf008:     00 00 00 00 80 f3 00 00  00 00 00 00 00 00 00 00   |................|
0xf018:     40 23 00 00 80 2a 00 00  00                        |@#...*...       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0xf020:     00 00 00 00 80 f0 00 00  c0 43 00 00 40 43 00 00   |.........C..@C..|
0xf030:     90 25 00 00 10 3a 00 00  70 86 00 00 f8 ff ff ff   |.%...:..p.......|
0xf040:     80 f0 00 00 b0 43 00 00  30 43 00 00 e4 ff ff ff   |.....C..0C......|
0xf050:     80 f0 00 00 00 3a 00 00  60 86 00 00 a0 43 00 00   |.....:..`....C..|
0xf060:     20 43 00 00 ??                                     | C..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0xf080:     08 00 00 00 a0 f3 00 00  00 00 00 00 02 00 00 00   |................|
0xf090:     60 f3 00 00 02 00 00 00  80 f3 00 00 02 1c 00 00   |`...............|
0xf0a0:     00                                                 |.               |
; section: .rodata._ZTVN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE
0xf0a0:     00 00 00 00 f8 f3 00 00  00 a4 00 00 e0 a2 00 00   |................|
0xf0b0:     30 29 00 00 ??                                     |0)..?           |
; section: .rodata._ZTVN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE
0xf0b8:     00 00 00 00 20 f4 00 00  60 a2 00 00 70 a3 00 00   |.... ...`...p...|
0xf0c8:     30 29 00 00 ??                                     |0)..?           |
; section: .rodata._ZTVN5boost8signals211signal_baseE
0xf0d0:     00 00 00 00 40 f4 00 00  50 26 00 00 00 2b 00 00   |....@...P&...+..|
0xf0e0:     00 00 00 00 08                                     |.....           |
; section: .rodata._ZTIN5boost8signals212expired_slotE
0xf0e4:     08 00 00 00 60 f4 00 00  80 f4 00 00 00            |....`........   |
; section: .rodata._ZTVN5boost17bad_function_callE
0xf0f0:     00 00 00 00 8c f4 00 00  a0 2b 00 00 30 38 00 00   |.........+..08..|
0xf100:     00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0xf120:     00 00 00 00 a0 f4 00 00  e0 3f 00 00 c0 42 00 00   |.........?...B..|
0xf130:     00 00 00 00 f8 ff ff ff  a0 f4 00 00 d0 3f 00 00   |.............?..|
0xf140:     b0 42 00 00 ??                                     |.B..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0xf160:     00 00 00 00 c0 f1 00 00  50 42 00 00 d0 41 00 00   |........PB...A..|
0xf170:     00 00 00 00 50 3b 00 00  a0 95 00 00 f8 ff ff ff   |....P;..........|
0xf180:     c0 f1 00 00 40 42 00 00  c0 41 00 00 e4 ff ff ff   |....@B...A......|
0xf190:     c0 f1 00 00 40 3b 00 00  90 95 00 00 30 42 00 00   |....@;......0B..|
0xf1a0:     b0 41 00 00 ??                                     |.A..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0xf1c0:     08 00 00 00 c0 f4 00 00  00 00 00 00 02 00 00 00   |................|
0xf1d0:     a0 f4 00 00 02 00 00 00  80 f3 00 00 02 1c 00 00   |................|
0xf1e0:     00                                                 |.               |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0xf1e0:     00 00 00 00 1c f5 00 00  c0 25 00 00 40 2a 00 00   |.........%..@*..|
0xf1f0:     00 00 00 00 f0 25 00 00  00 00 00 00 ??            |.....%......?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE
0xf200:     00 00 00 00 24 f5 00 00  b0 27 00 00 00 2a 00 00   |....$....'...*..|
0xf210:     10 bf 00 00 f0 25 00 00  40 28 00 00 ??            |.....%..@(..?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0xf220:     00 00 00 00 30 f5 00 00  e0 27 00 00 c0 29 00 00   |....0....'...)..|
0xf230:     a0 45 00 00 f0 25 00 00  70 28 00 00 00            |.E...%..p(...   |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0xf240:     00 00 00 00 40 f5 00 00  80 3f 00 00 d0 40 00 00   |....@....?...@..|
0xf250:     ec ff ff ff 40 f5 00 00  70 3f 00 00 c0 40 00 00   |....@...p?...@..|
0xf260:     00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0xf280:     00 00 00 00 00 f3 00 00  50 41 00 00 60 40 00 00   |........PA..`@..|
0xf290:     70 39 00 00 30 2c 00 00  ec ff ff ff 00 f3 00 00   |p9..0,..........|
0xf2a0:     40 41 00 00 50 40 00 00  00 00 00 00 e8 ff ff ff   |@A..P@..........|
0xf2b0:     00 f3 00 00 60 39 00 00  20 2c 00 00 30 41 00 00   |....`9.. ,..0A..|
0xf2c0:     40 40 00 00 ??                                     |@@..?           |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0xf2c8:     00 00 00 00 60 f5 00 00  10 28 00 00 80 29 00 00   |....`....(...)..|
0xf2d8:     a0 28 00 00 f0 25 00 00  00 29 00 00 ??            |.(...%...)..?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0xf300:     08 00 00 00 80 f5 00 00  00 00 00 00 02 00 00 00   |................|
0xf310:     40 f5 00 00 02 00 00 00  80 f3 00 00 02 18 00 00   |@...............|
0xf320:     08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0xf320:     08 00 00 00 c0 f5 00 00  08                        |.........       |
; section: .rodata._ZTIN5boost16thread_exceptionE
0xf328:     08 00 00 00 e4 f5 00 00  00 00 00 00 08            |.............   |
; section: .rodata._ZTIN5boost10lock_errorE
0xf334:     08 00 00 00 ff f5 00 00  28 f3 00 00 08            |........(....   |
; section: .rodata._ZTIN5boost9exceptionE
0xf340:     08 00 00 00 14 f6 00 00  ??                        |........?       |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0xf360:     08 00 00 00 40 f6 00 00  00 00 00 00 02 00 00 00   |....@...........|
0xf370:     34 f3 00 00 02 00 00 00  40 f3 00 00 02 08 00 00   |4.......@.......|
0xf380:     08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0xf380:     08 00 00 00 a0 f6 00 00  ??                        |........?       |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0xf3a0:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xf3b0:     6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0xf3c0:     5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0xf3d0:     72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0xf3e0:     4e 53 5f 31 30 6c 6f 63  6b 5f 65 72 72 6f 72 45   |NS_10lock_errorE|
0xf3f0:     45 45 45 45 00 ??                                  |EEEE.?          |
; section: .rodata._ZTIN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE
0xf3f8:     08 00 00 00 e0 f6 00 00  20 f4 00 00 ??            |........ ...?   |
; section: .rodata._ZTIN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE
0xf420:     08 00 00 00 80 f7 00 00  00 00 00 00 02 00 00 00   |................|
0xf430:     40 f4 00 00 02 00 00 00  18 f8 00 00 02 00 00 00   |@...............|
0xf440:     08                                                 |.               |
; section: .rodata._ZTIN5boost8signals211signal_baseE
0xf440:     08 00 00 00 20 f8 00 00  20 f3 00 00 ??            |.... ... ...?   |
; section: .rodata._ZTSN5boost8signals212expired_slotE
0xf460:     4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0xf470:     31 32 65 78 70 69 72 65  64 5f 73 6c 6f 74 45 00   |12expired_slotE.|
0xf480:     08                                                 |.               |
; section: .rodata._ZTIN5boost12bad_weak_ptrE
0xf480:     08 00 00 00 3f f8 00 00  00 00 00 00 08            |....?........   |
; section: .rodata._ZTIN5boost17bad_function_callE
0xf48c:     08 00 00 00 56 f8 00 00  00 00 00 00 ??            |....V.......?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0xf4a0:     08 00 00 00 80 f8 00 00  00 00 00 00 02 00 00 00   |................|
0xf4b0:     8c f4 00 00 02 00 00 00  40 f3 00 00 02 08 00 00   |........@.......|
0xf4c0:     4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0xf4c0:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xf4d0:     6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0xf4e0:     5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0xf4f0:     72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0xf500:     4e 53 5f 31 37 62 61 64  5f 66 75 6e 63 74 69 6f   |NS_17bad_functio|
0xf510:     6e 5f 63 61 6c 6c 45 45  45 45 45 00 08            |n_callEEEEE..   |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0xf51c:     08 00 00 00 e0 f8 00 00  08                        |.........       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE
0xf524:     08 00 00 00 20 f9 00 00  1c f5 00 00 08            |.... ........   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0xf530:     08 00 00 00 20 fa 00 00  1c f5 00 00 ??            |.... .......?   |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0xf540:     08 00 00 00 00 fb 00 00  00 00 00 00 02 00 00 00   |................|
0xf550:     40 f3 00 00 02 00 00 00  00 00 00 00 02 14 00 00   |@...............|
0xf560:     08                                                 |.               |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0xf560:     08 00 00 00 40 fb 00 00  1c f5 00 00 ??            |....@.......?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0xf580:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xf590:     6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0xf5a0:     5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0xf5b0:     61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0xf5c0:     4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0xf5d0:     61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0xf5e0:     6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost16thread_exceptionE
0xf5e4:     4e 35 62 6f 6f 73 74 31  36 74 68 72 65 61 64 5f   |N5boost16thread_|
0xf5f4:     65 78 63 65 70 74 69 6f  6e 45 00 4e               |exceptionE.N    |
; section: .rodata._ZTSN5boost10lock_errorE
0xf5ff:     4e 35 62 6f 6f 73 74 31  30 6c 6f 63 6b 5f 65 72   |N5boost10lock_er|
0xf60f:     72 6f 72 45 00 4e                                  |rorE.N          |
; section: .rodata._ZTSN5boost9exceptionE
0xf614:     4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0xf624:     6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0xf640:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xf650:     6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0xf660:     5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0xf670:     53 5f 31 30 6c 6f 63 6b  5f 65 72 72 6f 72 45 45   |S_10lock_errorEE|
0xf680:     45 00 ??                                           |E.?             |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0xf6a0:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xf6b0:     6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0xf6c0:     5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTSN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE
0xf6e0:     4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0xf6f0:     36 73 69 67 6e 61 6c 49  46 76 50 31 35 43 43 72   |6signalIFvP15CCr|
0xf700:     79 70 74 6f 4b 65 79 53  74 6f 72 65 45 4e 53 30   |yptoKeyStoreENS0|
0xf710:     5f 31 39 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |_19optional_last|
0xf720:     5f 76 61 6c 75 65 49 76  45 45 69 53 74 34 6c 65   |_valueIvEEiSt4le|
0xf730:     73 73 49 69 45 4e 53 5f  38 66 75 6e 63 74 69 6f   |ssIiENS_8functio|
0xf740:     6e 49 53 34 5f 45 45 4e  53 39 5f 49 46 76 52 4b   |nIS4_EENS9_IFvRK|
0xf750:     4e 53 30 5f 31 30 63 6f  6e 6e 65 63 74 69 6f 6e   |NS0_10connection|
0xf760:     45 53 33 5f 45 45 45 4e  53 30 5f 35 6d 75 74 65   |ES3_EEENS0_5mute|
0xf770:     78 45 45 45 00 ??                                  |xEEE.?          |
; section: .rodata._ZTSN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE
0xf780:     4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0xf790:     37 73 69 67 6e 61 6c 31  49 76 50 31 35 43 43 72   |7signal1IvP15CCr|
0xf7a0:     79 70 74 6f 4b 65 79 53  74 6f 72 65 4e 53 30 5f   |yptoKeyStoreNS0_|
0xf7b0:     31 39 6f 70 74 69 6f 6e  61 6c 5f 6c 61 73 74 5f   |19optional_last_|
0xf7c0:     76 61 6c 75 65 49 76 45  45 69 53 74 34 6c 65 73   |valueIvEEiSt4les|
0xf7d0:     73 49 69 45 4e 53 5f 38  66 75 6e 63 74 69 6f 6e   |sIiENS_8function|
0xf7e0:     49 46 76 53 33 5f 45 45  45 4e 53 38 5f 49 46 76   |IFvS3_EEENS8_IFv|
0xf7f0:     52 4b 4e 53 30 5f 31 30  63 6f 6e 6e 65 63 74 69   |RKNS0_10connecti|
0xf800:     6f 6e 45 53 33 5f 45 45  45 4e 53 30 5f 35 6d 75   |onES3_EEENS0_5mu|
0xf810:     74 65 78 45 45 45 00 ??                            |texEEE.?        |
; section: .rodata._ZTIN5boost8signals26detail19std_functional_baseE
0xf818:     08 00 00 00 a0 fb 00 00  4e                        |........N       |
; section: .rodata._ZTSN5boost8signals211signal_baseE
0xf820:     4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0xf830:     31 31 73 69 67 6e 61 6c  5f 62 61 73 65 45 00 4e   |11signal_baseE.N|
; section: .rodata._ZTSN5boost12bad_weak_ptrE
0xf83f:     4e 35 62 6f 6f 73 74 31  32 62 61 64 5f 77 65 61   |N5boost12bad_wea|
0xf84f:     6b 5f 70 74 72 45 00 4e                            |k_ptrE.N        |
; section: .rodata._ZTSN5boost17bad_function_callE
0xf856:     4e 35 62 6f 6f 73 74 31  37 62 61 64 5f 66 75 6e   |N5boost17bad_fun|
0xf866:     63 74 69 6f 6e 5f 63 61  6c 6c 45 00 ??            |ction_callE.?   |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0xf880:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xf890:     6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0xf8a0:     5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0xf8b0:     53 5f 31 37 62 61 64 5f  66 75 6e 63 74 69 6f 6e   |S_17bad_function|
0xf8c0:     5f 63 61 6c 6c 45 45 45  00 ??                     |_callEEE.?      |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0xf8e0:     4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|
0xf8f0:     73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0xf900:     00 ??                                              |.?              |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE
0xf920:     4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0xf930:     73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0xf940:     70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0xf950:     65 74 61 69 6c 31 32 67  72 6f 75 70 65 64 5f 6c   |etail12grouped_l|
0xf960:     69 73 74 49 69 53 74 34  6c 65 73 73 49 69 45 4e   |istIiSt4lessIiEN|
0xf970:     53 5f 31 30 73 68 61 72  65 64 5f 70 74 72 49 4e   |S_10shared_ptrIN|
0xf980:     53 33 5f 31 35 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |S3_15connection_|
0xf990:     62 6f 64 79 49 53 74 34  70 61 69 72 49 4e 53 33   |bodyISt4pairINS3|
0xf9a0:     5f 31 35 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |_15slot_meta_gro|
0xf9b0:     75 70 45 4e 53 5f 38 6f  70 74 69 6f 6e 61 6c 49   |upENS_8optionalI|
0xf9c0:     69 45 45 45 4e 53 32 5f  35 73 6c 6f 74 31 49 76   |iEEENS2_5slot1Iv|
0xf9d0:     50 31 35 43 43 72 79 70  74 6f 4b 65 79 53 74 6f   |P15CCryptoKeySto|
0xf9e0:     72 65 4e 53 5f 38 66 75  6e 63 74 69 6f 6e 49 46   |reNS_8functionIF|
0xf9f0:     76 53 47 5f 45 45 45 45  45 4e 53 32 5f 35 6d 75   |vSG_EEEEENS2_5mu|
0xfa00:     74 65 78 45 45 45 45 45  45 45 45 45 00 ??         |texEEEEEEEEE.?  |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0xfa20:     4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0xfa30:     73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0xfa40:     70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0xfa50:     65 74 61 69 6c 31 32 73  69 67 6e 61 6c 31 5f 69   |etail12signal1_i|
0xfa60:     6d 70 6c 49 76 50 31 35  43 43 72 79 70 74 6f 4b   |mplIvP15CCryptoK|
0xfa70:     65 79 53 74 6f 72 65 4e  53 32 5f 31 39 6f 70 74   |eyStoreNS2_19opt|
0xfa80:     69 6f 6e 61 6c 5f 6c 61  73 74 5f 76 61 6c 75 65   |ional_last_value|
0xfa90:     49 76 45 45 69 53 74 34  6c 65 73 73 49 69 45 4e   |IvEEiSt4lessIiEN|
0xfaa0:     53 5f 38 66 75 6e 63 74  69 6f 6e 49 46 76 53 36   |S_8functionIFvS6|
0xfab0:     5f 45 45 45 4e 53 42 5f  49 46 76 52 4b 4e 53 32   |_EEENSB_IFvRKNS2|
0xfac0:     5f 31 30 63 6f 6e 6e 65  63 74 69 6f 6e 45 53 36   |_10connectionES6|
0xfad0:     5f 45 45 45 4e 53 32 5f  35 6d 75 74 65 78 45 45   |_EEENS2_5mutexEE|
0xfae0:     31 36 69 6e 76 6f 63 61  74 69 6f 6e 5f 73 74 61   |16invocation_sta|
0xfaf0:     74 65 45 45 45 00 ??                               |teEEE.?         |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0xfb00:     4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0xfb10:     6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0xfb20:     6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0xfb40:     4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|   "N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE"
0xfb50:     73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0xfb60:     70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0xfb70:     5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0xfb80:     6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0xfb90:     6c 6f 63 5f 45 45 45 45  45 00                     |loc_EEEEE.      |
0xfb9a:     ??                                                 |?               |
; section: .rodata._ZTSN5boost8signals26detail19std_functional_baseE
0xfba0:     4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0xfbb0:     36 64 65 74 61 69 6c 31  39 73 74 64 5f 66 75 6e   |6detail19std_fun|
0xfbc0:     63 74 69 6f 6e 61 6c 5f  62 61 73 65 45 00 ??      |ctional_baseE.? |
; section: .eh_frame
0x127e54:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x127e64:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0x127e74:   20 23 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   | #../....C. f...|
0x127e84:   41 0b 00 00 18 00 00 00  38 00 00 00 54 25 00 00   |A.......8...T%..|
0x127e94:   2a 00 00 00 00 43 0e 20  61 0a 0e 04 41 0b 00 00   |*....C. a...A...|
0x127ea4:   18 00 00 00 54 00 00 00  68 25 00 00 2f 00 00 00   |....T...h%../...|
0x127eb4:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 1c 00 00 00   |.C. f...A.......|
0x127ec4:   70 00 00 00 7c 25 00 00  55 00 00 00 00 43 0e 20   |p...|%..U....C. |
0x127ed4:   6e 0a 0e 04 47 0b 50 0a  0e 04 41 0b 18 00 00 00   |n...G.P...A.....|
0x127ee4:   90 00 00 00 bc 25 00 00  2f 00 00 00 00 43 0e 20   |.....%../....C. |
0x127ef4:   66 0a 0e 04 41 0b 00 00  18 00 00 00 ac 00 00 00   |f...A...........|
0x127f04:   d0 25 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |.%../....C. f...|
0x127f14:   41 0b 00 00 18 00 00 00  c8 00 00 00 e4 25 00 00   |A............%..|
0x127f24:   39 00 00 00 00 43 0e 20  6e 0a 0e 04 43 0b 00 00   |9....C. n...C...|
0x127f34:   2c 00 00 00 e4 00 00 00  08 26 00 00 64 00 00 00   |,........&..d...|
0x127f44:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 4f   |.A....A....C.@.O|
0x127f54:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 42 0b 00 00 00   |...A...A...B....|
0x127f64:   20 00 00 00 14 01 00 00  48 26 00 00 44 00 00 00   | .......H&..D...|
0x127f74:   00 41 0e 08 83 02 43 0e  20 6d 0a 0e 08 41 0e 04   |.A....C. m...A..|
0x127f84:   c3 46 0b 00 18 00 00 00  38 01 00 00 74 26 00 00   |.F......8...t&..|
0x127f94:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x127fa4:   18 00 00 00 54 01 00 00  88 26 00 00 2f 00 00 00   |....T....&../...|
0x127fb4:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x127fc4:   70 01 00 00 9c 26 00 00  2f 00 00 00 00 43 0e 20   |p....&../....C. |
0x127fd4:   66 0a 0e 04 41 0b 00 00  18 00 00 00 8c 01 00 00   |f...A...........|
0x127fe4:   b0 26 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |.&..%....C. \...|
0x127ff4:   41 0b 00 00 18 00 00 00  a8 01 00 00 c4 26 00 00   |A............&..|
0x128004:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x128014:   1c 00 00 00 c4 01 00 00  d8 26 00 00 55 00 00 00   |.........&..U...|
0x128024:   00 43 0e 20 70 0a 0e 04  45 0b 50 0a 0e 04 41 0b   |.C. p...E.P...A.|
0x128034:   18 00 00 00 e4 01 00 00  18 27 00 00 25 00 00 00   |.........'..%...|
0x128044:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. \...A.......|
0x128054:   00 02 00 00 2c 27 00 00  45 00 00 00 00 43 0e 20   |....,'..E....C. |
0x128064:   78 0a 0e 04 43 0b 00 00  18 00 00 00 1c 02 00 00   |x...C...........|
0x128074:   60 27 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |`'..8....C. k...|
0x128084:   45 0b 00 00 18 00 00 00  38 02 00 00 84 27 00 00   |E.......8....'..|
0x128094:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x1280a4:   18 00 00 00 54 02 00 00  a8 27 00 00 38 00 00 00   |....T....'..8...|
0x1280b4:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x1280c4:   70 02 00 00 cc 27 00 00  38 00 00 00 00 43 0e 20   |p....'..8....C. |
0x1280d4:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 8c 02 00 00   |k...E...........|
0x1280e4:   f0 27 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |.'..8....C. k...|
0x1280f4:   45 0b 00 00 18 00 00 00  a8 02 00 00 14 28 00 00   |E............(..|
0x128104:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x128114:   18 00 00 00 c4 02 00 00  38 28 00 00 38 00 00 00   |........8(..8...|
0x128124:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 1c 00 00 00   |.C. k...E.......|
0x128134:   e0 02 00 00 5c 28 00 00  53 00 00 00 00 43 0e 20   |....\(..S....C. |
0x128144:   68 0a 0e 04 45 0b 59 0a  0e 04 45 0b 18 00 00 00   |h...E.Y...E.....|
0x128154:   00 03 00 00 9c 28 00 00  38 00 00 00 00 43 0e 20   |.....(..8....C. |
0x128164:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 1c 03 00 00   |k...E...........|
0x128174:   c0 28 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |.(..8....C. k...|
0x128184:   45 0b 00 00 10 00 00 00  38 03 00 00 e4 28 00 00   |E.......8....(..|
0x128194:   07 00 00 00 00 00 00 00  1c 00 00 00 00 00 00 00   |................|
0x1281a4:   01 7a 50 4c 52 00 01 7c  08 07 00 00 00 00 00 00   |.zPLR..|........|
0x1281b4:   1b 0c 04 04 88 01 00 00  20 00 00 00 24 00 00 00   |........ ...$...|
0x1281c4:   c0 28 00 00 8b 00 00 00  04 bc 2c 00 00 41 0e 08   |.(........,..A..|
0x1281d4:   86 02 41 0e 0c 83 03 43  0e 30 00 00 28 00 00 00   |..A....C.0..(...|
0x1281e4:   90 03 00 00 6c fc ff ff  78 00 00 00 00 43 0e 80   |....l...x....C..|
0x1281f4:   01 4b 83 05 57 86 04 48  87 03 49 85 02 7c 0a 0e   |.K..W..H..I..|..|
0x128204:   04 c5 c7 c6 c3 41 0b 00  10 00 00 00 bc 03 00 00   |.....A..........|
0x128214:   7e 31 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |~1..3....C.0....|
0x128224:   d0 03 00 00 9e 31 00 00  33 00 00 00 00 43 0e 30   |.....1..3....C.0|
0x128234:   10 00 00 00 e4 03 00 00  be 31 00 00 33 00 00 00   |.........1..3...|
0x128244:   00 43 0e 30 20 00 00 00  f8 03 00 00 b4 33 00 00   |.C.0 ........3..|
0x128254:   7e 00 00 00 00 41 0e 08  83 02 43 0e 30 02 44 0a   |~....A....C.0.D.|
0x128264:   0e 08 41 0e 04 c3 41 0b  10 00 00 00 1c 04 00 00   |..A...A.........|
0x128274:   ba 31 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |.1..3....C.0....|
0x128284:   30 04 00 00 da 31 00 00  33 00 00 00 00 43 0e 30   |0....1..3....C.0|
0x128294:   10 00 00 00 44 04 00 00  fa 31 00 00 33 00 00 00   |....D....1..3...|
0x1282a4:   00 43 0e 30 10 00 00 00  58 04 00 00 1a 32 00 00   |.C.0....X....2..|
0x1282b4:   33 00 00 00 00 43 0e 30  10 00 00 00 6c 04 00 00   |3....C.0....l...|
0x1282c4:   3a 32 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |:2..3....C.0....|
0x1282d4:   80 04 00 00 fc fb ff ff  33 00 00 00 00 43 0e 30   |........3....C.0|
0x1282e4:   10 00 00 00 94 04 00 00  28 fc ff ff 33 00 00 00   |........(...3...|
0x1282f4:   00 43 0e 30 10 00 00 00  a8 04 00 00 54 fc ff ff   |.C.0........T...|
0x128304:   33 00 00 00 00 43 0e 30  10 00 00 00 bc 04 00 00   |3....C.0........|
0x128314:   80 fc ff ff 33 00 00 00  00 43 0e 30 10 00 00 00   |....3....C.0....|
0x128324:   d0 04 00 00 0a 32 00 00  33 00 00 00 00 43 0e 30   |.....2..3....C.0|
0x128334:   10 00 00 00 e4 04 00 00  2a 32 00 00 33 00 00 00   |........*2..3...|
0x128344:   00 43 0e 30 10 00 00 00  f8 04 00 00 4a 32 00 00   |.C.0........J2..|
0x128354:   33 00 00 00 00 43 0e 30  10 00 00 00 0c 05 00 00   |3....C.0........|
0x128364:   6a 32 00 00 33 00 00 00  00 43 0e 30 20 00 00 00   |j2..3....C.0 ...|
0x128374:   20 05 00 00 0c 33 00 00  41 00 00 00 00 41 0e 08   | ....3..A....A..|
0x128384:   83 02 43 0e 30 72 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0r...A...E..|
0x128394:   18 00 00 00 44 05 00 00  38 33 00 00 38 00 00 00   |....D...83..8...|
0x1283a4:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 20 00 00 00   |.C. k...E... ...|
0x1283b4:   60 05 00 00 5c 33 00 00  41 00 00 00 00 41 0e 08   |`...\3..A....A..|
0x1283c4:   83 02 43 0e 30 72 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0r...A...E..|
0x1283d4:   20 00 00 00 84 05 00 00  88 33 00 00 41 00 00 00   | ........3..A...|
0x1283e4:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x1283f4:   c3 45 0b 00 10 00 00 00  a8 05 00 00 b4 33 00 00   |.E...........3..|
0x128404:   07 00 00 00 00 00 00 00  30 00 00 00 74 02 00 00   |........0...t...|
0x128414:   b0 33 00 00 8e 00 00 00  04 c8 2c 00 00 41 0e 08   |.3........,..A..|
0x128424:   86 02 41 0e 0c 83 03 43  0e 30 02 6f 0a 0e 0c 41   |..A....C.0.o...A|
0x128434:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x128444:   f0 05 00 00 0c 34 00 00  07 00 00 00 00 00 00 00   |.....4..........|
0x128454:   30 00 00 00 bc 02 00 00  08 34 00 00 a3 00 00 00   |0........4......|
0x128464:   04 d9 2c 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..,..A....A....C|
0x128474:   0e 30 02 7c 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.|...A...A...A|
0x128484:   0b 00 00 00 20 00 00 00  38 06 00 00 84 34 00 00   |.... ...8....4..|
0x128494:   80 00 00 00 00 41 0e 08  83 02 43 0e 30 02 48 0a   |.....A....C.0.H.|
0x1284a4:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 5c 06 00 00   |..A...E.....\...|
0x1284b4:   e0 34 00 00 07 00 00 00  00 00 00 00 30 00 00 00   |.4..........0...|
0x1284c4:   28 03 00 00 dc 34 00 00  c1 00 00 00 04 eb 2c 00   |(....4........,.|
0x1284d4:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 8e   |.A....A....C.0..|
0x1284e4:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x1284f4:   20 00 00 00 a4 06 00 00  78 35 00 00 87 00 00 00   | .......x5......|
0x128504:   00 43 0e 30 48 83 03 64  86 02 60 0a 0e 04 c6 c3   |.C.0H..d..`.....|
0x128514:   41 0b 00 00 20 00 00 00  c8 06 00 00 e4 35 00 00   |A... ........5..|
0x128524:   8f 00 00 00 00 43 0e 30  48 83 03 64 86 02 68 0a   |.....C.0H..d..h.|
0x128534:   0e 04 c6 c3 41 0b 00 00  28 00 00 00 a4 03 00 00   |....A...(.......|
0x128544:   50 36 00 00 4f 01 00 00  04 04 2d 00 00 43 0e 30   |P6..O.....-..C.0|
0x128554:   48 86 03 57 87 02 83 04  69 0a 0e 04 c7 c6 c3 45   |H..W....i......E|
0x128564:   0b 00 00 00 24 00 00 00  d0 03 00 00 74 37 00 00   |....$.......t7..|
0x128574:   68 00 00 00 04 34 2d 00  00 41 0e 08 83 02 43 0e   |h....4-..A....C.|
0x128584:   30 79 0a 0e 08 41 0e 04  c3 4a 0b 00 10 00 00 00   |0y...A...J......|
0x128594:   40 07 00 00 bc 37 00 00  0a 00 00 00 00 00 00 00   |@....7..........|
0x1285a4:   20 00 00 00 54 07 00 00  b8 37 00 00 51 00 00 00   | ...T....7..Q...|
0x1285b4:   00 41 0e 08 83 02 43 0e  30 02 42 0a 0e 08 41 0e   |.A....C.0.B...A.|
0x1285c4:   04 c3 45 0b 10 00 00 00  78 07 00 00 f4 37 00 00   |..E.....x....7..|
0x1285d4:   0a 00 00 00 00 00 00 00  20 00 00 00 8c 07 00 00   |........ .......|
0x1285e4:   f0 37 00 00 4b 00 00 00  00 41 0e 08 83 02 43 0e   |.7..K....A....C.|
0x1285f4:   30 7c 0a 0e 08 41 0e 04  c3 45 0b 00 10 00 00 00   |0|...A...E......|
0x128604:   b0 07 00 00 1c 38 00 00  0a 00 00 00 00 00 00 00   |.....8..........|
0x128614:   20 00 00 00 c4 07 00 00  18 38 00 00 51 00 00 00   | ........8..Q...|
0x128624:   00 41 0e 08 83 02 43 0e  30 02 42 0a 0e 08 41 0e   |.A....C.0.B...A.|
0x128634:   04 c3 45 0b 10 00 00 00  e8 07 00 00 54 38 00 00   |..E.........T8..|
0x128644:   07 00 00 00 00 00 00 00  10 00 00 00 fc 07 00 00   |................|
0x128654:   50 38 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |P8.......... ...|
0x128664:   10 08 00 00 4c 38 00 00  5a 00 00 00 00 41 0e 08   |....L8..Z....A..|
0x128674:   83 02 43 0e 30 02 4b 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.K...A...E.|
0x128684:   10 00 00 00 34 08 00 00  88 38 00 00 07 00 00 00   |....4....8......|
0x128694:   00 00 00 00 20 00 00 00  48 08 00 00 84 38 00 00   |.... ...H....8..|
0x1286a4:   53 00 00 00 00 41 0e 08  83 02 43 0e 30 02 44 0a   |S....A....C.0.D.|
0x1286b4:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 6c 08 00 00   |..A...E.....l...|
0x1286c4:   c0 38 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   |.8..............|
0x1286d4:   80 08 00 00 bc 38 00 00  0a 00 00 00 00 00 00 00   |.....8..........|
0x1286e4:   20 00 00 00 94 08 00 00  b8 38 00 00 52 00 00 00   | ........8..R...|
0x1286f4:   00 41 0e 08 83 02 43 0e  30 02 43 0a 0e 08 41 0e   |.A....C.0.C...A.|
0x128704:   04 c3 45 0b 10 00 00 00  b8 08 00 00 f4 38 00 00   |..E..........8..|
0x128714:   07 00 00 00 00 00 00 00  10 00 00 00 cc 08 00 00   |................|
0x128724:   f0 38 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |.8.......... ...|
0x128734:   e0 08 00 00 ec 38 00 00  60 00 00 00 00 41 0e 08   |.....8..`....A..|
0x128744:   83 02 43 0e 30 02 51 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.Q...A...E.|
0x128754:   10 00 00 00 04 09 00 00  28 39 00 00 0a 00 00 00   |........(9......|
0x128764:   00 00 00 00 10 00 00 00  18 09 00 00 24 39 00 00   |............$9..|
0x128774:   0a 00 00 00 00 00 00 00  20 00 00 00 2c 09 00 00   |........ ...,...|
0x128784:   20 39 00 00 58 00 00 00  00 41 0e 08 83 02 43 0e   | 9..X....A....C.|
0x128794:   30 02 49 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.I...A...E.....|
0x1287a4:   50 09 00 00 5c 39 00 00  07 00 00 00 00 00 00 00   |P...\9..........|
0x1287b4:   20 00 00 00 64 09 00 00  58 39 00 00 59 00 00 00   | ...d...X9..Y...|
0x1287c4:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x1287d4:   04 c3 45 0b 10 00 00 00  88 09 00 00 94 39 00 00   |..E..........9..|
0x1287e4:   07 00 00 00 00 00 00 00  10 00 00 00 9c 09 00 00   |................|
0x1287f4:   90 39 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |.9.......... ...|
0x128804:   b0 09 00 00 8c 39 00 00  60 00 00 00 00 41 0e 08   |.....9..`....A..|
0x128814:   83 02 43 0e 30 02 51 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.Q...A...E.|
0x128824:   10 00 00 00 d4 09 00 00  c8 39 00 00 0a 00 00 00   |.........9......|
0x128834:   00 00 00 00 10 00 00 00  e8 09 00 00 c4 39 00 00   |.............9..|
0x128844:   0a 00 00 00 00 00 00 00  20 00 00 00 fc 09 00 00   |........ .......|
0x128854:   c0 39 00 00 58 00 00 00  00 41 0e 08 83 02 43 0e   |.9..X....A....C.|
0x128864:   30 02 49 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.I...A...E.....|
0x128874:   20 0a 00 00 fc 39 00 00  07 00 00 00 00 00 00 00   | ....9..........|
0x128884:   20 00 00 00 34 0a 00 00  f8 39 00 00 59 00 00 00   | ...4....9..Y...|
0x128894:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x1288a4:   04 c3 45 0b 20 00 00 00  58 0a 00 00 34 3a 00 00   |..E. ...X...4:..|
0x1288b4:   3b 00 00 00 00 41 0e 08  83 02 43 0e 30 6c 0a 0e   |;....A....C.0l..|
0x1288c4:   08 41 0e 04 c3 45 0b 00  28 00 00 00 7c 0a 00 00   |.A...E..(...|...|
0x1288d4:   50 3a 00 00 8a 00 00 00  00 43 0e 30 5a 86 02 83   |P:.......C.0Z...|
0x1288e4:   03 6d 0a 0e 04 c6 c3 46  0b 73 0a 0e 04 c6 c3 42   |.m.....F.s.....B|
0x1288f4:   0b 00 00 00 18 00 00 00  a8 0a 00 00 b4 3a 00 00   |.............:..|
0x128904:   35 00 00 00 00 43 0e 20  68 0a 0e 04 45 0b 00 00   |5....C. h...E...|
0x128914:   30 00 00 00 7c 07 00 00  d8 3a 00 00 82 00 00 00   |0...|....:......|
0x128924:   04 45 2d 00 00 41 0e 08  83 02 43 0e 40 02 41 0a   |.E-..A....C.@.A.|
0x128934:   0e 08 41 0e 04 c3 4a 0b  50 0a 0e 08 41 0e 04 c3   |..A...J.P...A...|
0x128944:   41 0b 00 00 2c 00 00 00  f8 0a 00 00 84 f6 ff ff   |A...,...........|
0x128954:   53 01 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |S....A....A....C|
0x128964:   0e 40 02 a7 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 42   |.@.....A...A...B|
0x128974:   0b 00 00 00 18 00 00 00  28 0b 00 00 84 78 00 00   |........(....x..|
0x128984:   94 00 00 00 00 43 0e 40  02 84 0a 0e 04 41 0b 00   |.....C.@.....A..|
0x128994:   20 00 00 00 44 0b 00 00  08 79 00 00 45 00 00 00   | ...D....y..E...|
0x1289a4:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x1289b4:   c3 41 0b 00 2c 00 00 00  20 08 00 00 34 79 00 00   |.A..,... ...4y..|
0x1289c4:   2b 01 00 00 04 55 2d 00  00 43 0e 40 48 83 05 54   |+....U-..C.@H..T|
0x1289d4:   86 04 5b 85 02 87 03 02  af 0a 0e 04 c5 c7 c6 c3   |..[.............|
0x1289e4:   47 0b 00 00 30 00 00 00  50 08 00 00 34 7a 00 00   |G...0...P...4z..|
0x1289f4:   87 00 00 00 04 72 2d 00  00 41 0e 08 86 02 41 0e   |.....r-..A....A.|
0x128a04:   0c 83 03 43 0e 30 02 68  0a 0e 0c 41 0e 08 c3 41   |...C.0.h...A...A|
0x128a14:   0e 04 c6 41 0b 00 00 00  10 00 00 00 cc 0b 00 00   |...A............|
0x128a24:   90 7a 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |.z.......... ...|
0x128a34:   98 08 00 00 8c 7a 00 00  6d 00 00 00 04 7f 2d 00   |.....z..m.....-.|
0x128a44:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x128a54:   20 00 00 00 bc 08 00 00  d8 7a 00 00 ea 00 00 00   | ........z......|
0x128a64:   04 8b 2d 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..-..A....A....C|
0x128a74:   0e 50 00 00 1c 00 00 00  28 0c 00 00 a4 7b 00 00   |.P......(....{..|
0x128a84:   55 00 00 00 00 43 0e 20  6a 0a 0e 04 4b 0b 50 0a   |U....C. j...K.P.|
0x128a94:   0e 04 41 0b 28 00 00 00  48 0c 00 00 e4 7b 00 00   |..A.(...H....{..|
0x128aa4:   49 01 00 00 00 43 0e 50  48 83 05 48 87 03 58 85   |I....C.PH..H..X.|
0x128ab4:   02 86 04 02 71 0a 0e 04  c5 c7 c6 c3 44 0b 00 00   |....q.......D...|
0x128ac4:   40 00 00 00 2c 09 00 00  08 7d 00 00 48 01 00 00   |@...,....}..H...|
0x128ad4:   04 9f 2d 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |..-..A....A....A|
0x128ae4:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 e2 0a 0e   |....A....C.P....|
0x128af4:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x128b04:   c5 43 0b 00 20 00 00 00  b8 0c 00 00 14 7e 00 00   |.C.. ........~..|
0x128b14:   56 00 00 00 00 41 0e 08  83 02 43 0e 30 02 4b 0a   |V....A....C.0.K.|
0x128b24:   0e 08 41 0e 04 c3 41 0b  20 00 00 00 dc 0c 00 00   |..A...A. .......|
0x128b34:   00 f6 ff ff 65 00 00 00  00 43 0e 30 46 83 03 54   |....e....C.0F..T|
0x128b44:   86 02 02 42 0a 0e 04 c6  c3 41 0b 00 18 00 00 00   |...B.....A......|
0x128b54:   00 0d 00 00 2c 7e 00 00  67 00 00 00 00 43 0e 30   |....,~..g....C.0|
0x128b64:   67 0a 0e 04 46 0b 00 00  40 00 00 00 1c 0d 00 00   |g...F...@.......|
0x128b74:   80 7e 00 00 1f 01 00 00  00 41 0e 08 83 02 43 0e   |.~.......A....C.|
0x128b84:   30 02 86 0a 0e 08 41 0e  04 c3 45 0b 6a 0a 0e 08   |0.....A...E.j...|
0x128b94:   41 0e 04 c3 45 0b 50 0a  0e 08 41 0e 04 c3 47 0b   |A...E.P...A...G.|
0x128ba4:   57 0a 0e 08 41 0e 04 c3  48 0b 00 00 28 00 00 00   |W...A...H...(...|
0x128bb4:   60 0d 00 00 ac 7f 00 00  86 00 00 00 00 43 0e 30   |`............C.0|
0x128bc4:   5b 86 02 83 03 02 45 0a  0e 04 c6 c3 45 0b 58 0a   |[.....E.....E.X.|
0x128bd4:   0e 04 c6 c3 41 0b 00 00  30 00 00 00 44 0a 00 00   |....A...0...D...|
0x128be4:   10 80 00 00 48 02 00 00  04 b0 2d 00 00 41 0e 08   |....H.....-..A..|
0x128bf4:   86 02 41 0e 0c 83 03 43  0e 60 03 12 01 0a 0e 0c   |..A....C.`......|
0x128c04:   41 0e 08 c3 41 0e 04 c6  47 0b 00 00 20 00 00 00   |A...A...G... ...|
0x128c14:   c0 0d 00 00 2c 82 00 00  a4 00 00 00 00 41 0e 08   |....,........A..|
0x128c24:   83 02 43 0e 30 67 0a 0e  08 41 0e 04 c3 44 0b 00   |..C.0g...A...D..|
0x128c34:   3c 00 00 00 e4 0d 00 00  b8 82 00 00 9e 00 00 00   |<...............|
0x128c44:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x128c54:   41 0e 14 83 05 43 0e 50  02 82 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x128c64:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x128c74:   3c 00 00 00 24 0e 00 00  18 83 00 00 8d 00 00 00   |<...$...........|
0x128c84:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x128c94:   41 0e 14 83 05 43 0e 40  02 7c 0a 0e 14 41 0e 10   |A....C.@.|...A..|
0x128ca4:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x128cb4:   34 00 00 00 64 0e 00 00  68 83 00 00 68 00 00 00   |4...d...h...h...|
0x128cc4:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x128cd4:   43 0e 30 02 59 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.Y...A...A...|
0x128ce4:   41 0e 04 c7 41 0b 00 00  24 00 00 00 54 0b 00 00   |A...A...$...T...|
0x128cf4:   a0 83 00 00 ba 00 00 00  04 d8 2d 00 00 41 0e 08   |..........-..A..|
0x128d04:   83 02 43 0e 40 02 6e 0a  0e 08 41 0e 04 c3 41 0b   |..C.@.n...A...A.|
0x128d14:   24 00 00 00 7c 0b 00 00  38 84 00 00 c2 00 00 00   |$...|...8.......|
0x128d24:   04 e6 2d 00 00 41 0e 08  83 02 43 0e 40 02 72 0a   |..-..A....C.@.r.|
0x128d34:   0e 08 41 0e 04 c3 45 0b  34 00 00 00 ec 0e 00 00   |..A...E.4.......|
0x128d44:   e0 84 00 00 68 00 00 00  00 41 0e 08 87 02 41 0e   |....h....A....A.|
0x128d54:   0c 86 03 41 0e 10 83 04  43 0e 30 02 59 0a 0e 10   |...A....C.0.Y...|
0x128d64:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x128d74:   3c 00 00 00 24 0f 00 00  18 85 00 00 9e 00 00 00   |<...$...........|
0x128d84:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x128d94:   41 0e 14 83 05 43 0e 50  02 82 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x128da4:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x128db4:   30 00 00 00 1c 0c 00 00  78 85 00 00 ab 00 00 00   |0.......x.......|
0x128dc4:   04 f4 2d 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..-..A....A....C|
0x128dd4:   0e 30 02 7a 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.z...A...A...A|
0x128de4:   0b 00 00 00 10 00 00 00  98 0f 00 00 f4 85 00 00   |................|
0x128df4:   07 00 00 00 00 00 00 00  20 00 00 00 64 0c 00 00   |........ ...d...|
0x128e04:   f0 85 00 00 6d 00 00 00  04 07 2e 00 00 41 0e 08   |....m........A..|
0x128e14:   86 02 41 0e 0c 83 03 43  0e 30 00 00 20 00 00 00   |..A....C.0.. ...|
0x128e24:   88 0c 00 00 3c 86 00 00  10 01 00 00 04 13 2e 00   |....<...........|
0x128e34:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 50 00 00   |.A....A....C.P..|
0x128e44:   3c 00 00 00 f4 0f 00 00  28 87 00 00 9e 00 00 00   |<.......(.......|
0x128e54:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x128e64:   41 0e 14 83 05 43 0e 50  02 82 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x128e74:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x128e84:   24 00 00 00 ec 0c 00 00  88 87 00 00 a7 00 00 00   |$...............|
0x128e94:   04 2c 2e 00 00 41 0e 08  83 02 43 0e 30 02 5c 0a   |.,...A....C.0.\.|
0x128ea4:   0e 08 41 0e 04 c3 47 0b  38 00 00 00 14 0d 00 00   |..A...G.8.......|
0x128eb4:   10 88 00 00 4b 01 00 00  04 3a 2e 00 00 41 0e 08   |....K....:...A..|
0x128ec4:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x128ed4:   96 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |....A...A...A...|
0x128ee4:   41 0b 00 00 28 00 00 00  50 0d 00 00 24 89 00 00   |A...(...P...$...|
0x128ef4:   c7 00 00 00 04 4e 2e 00  00 43 0e 30 48 83 04 48   |.....N...C.0H..H|
0x128f04:   86 03 5d 87 02 02 54 0a  0e 04 c7 c6 c3 44 0b 00   |..]...T......D..|
0x128f14:   24 00 00 00 c4 10 00 00  88 f2 ff ff a3 00 00 00   |$...............|
0x128f24:   00 43 0e 40 48 83 04 54  86 03 49 87 02 02 67 0a   |.C.@H..T..I...g.|
0x128f34:   0e 04 c7 c6 c3 41 0b 00  28 00 00 00 ec 10 00 00   |.....A..(.......|
0x128f44:   a0 89 00 00 f9 00 00 00  00 43 0e 60 48 86 04 48   |.........C.`H..H|
0x128f54:   85 02 54 87 03 4b 83 05  02 b5 0a 0e 04 c5 c7 c6   |..T..K..........|
0x128f64:   c3 41 0b 00 24 00 00 00  18 11 00 00 74 8a 00 00   |.A..$.......t...|
0x128f74:   a6 00 00 00 00 43 0e 50  48 83 04 48 87 02 54 86   |.....C.PH..H..T.|
0x128f84:   03 02 79 0a 0e 04 c7 c6  c3 41 0b 00 2c 00 00 00   |..y......A..,...|
0x128f94:   f8 0d 00 00 bc f2 ff ff  e3 00 00 00 04 5d 2e 00   |.............]..|
0x128fa4:   00 43 0e 60 48 86 04 48  85 02 54 83 05 4b 87 03   |.C.`H..H..T..K..|
0x128fb4:   02 8f 0a 0e 04 c5 c7 c6  c3 47 0b 00 24 00 00 00   |.........G..$...|
0x128fc4:   70 11 00 00 7c f3 ff ff  a6 00 00 00 00 43 0e 50   |p...|........C.P|
0x128fd4:   48 83 04 48 87 02 54 86  03 02 79 0a 0e 04 c7 c6   |H..H..T...y.....|
0x128fe4:   c3 41 0b 00 2c 00 00 00  50 0e 00 00 a4 8a 00 00   |.A..,...P.......|
0x128ff4:   33 01 00 00 04 70 2e 00  00 43 0e 70 48 83 05 48   |3....p...C.pH..H|
0x129004:   86 04 4c 87 03 85 02 02  ce 0a 0e 04 c5 c7 c6 c3   |..L.............|
0x129014:   43 0b 00 00 44 00 00 00  80 0e 00 00 d4 f3 ff ff   |C...D...........|
0x129024:   0f 04 00 00 04 83 2e 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x129034:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e c0   |...A....A....F..|
0x129044:   01 03 34 01 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |..4....A...A...A|
0x129054:   0e 08 c7 41 0e 04 c5 46  0b 00 00 00 34 00 00 00   |...A...F....4...|
0x129064:   10 12 00 00 6c 8b 00 00  59 00 00 00 00 41 0e 08   |....l...Y....A..|
0x129074:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x129084:   4a 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |J...A...A...A...|
0x129094:   41 0b 00 00 28 00 00 00  48 12 00 00 94 8b 00 00   |A...(...H.......|
0x1290a4:   ec 00 00 00 00 43 0e 50  5d 86 04 48 83 05 48 87   |.....C.P]..H..H.|
0x1290b4:   03 4d 85 02 02 88 0a 0e  04 c5 c7 c6 c3 43 0b 00   |.M...........C..|
0x1290c4:   3c 00 00 00 74 12 00 00  58 8c 00 00 f6 00 00 00   |<...t...X.......|
0x1290d4:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1290e4:   41 0e 14 83 05 43 0e 60  02 7d 0a 0e 14 41 0e 10   |A....C.`.}...A..|
0x1290f4:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x129104:   40 00 00 00 6c 0f 00 00  18 8d 00 00 e8 00 00 00   |@...l...........|
0x129114:   04 a9 2e 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x129124:   0e 10 86 04 41 0e 14 83  05 43 0e 60 02 c1 0a 0e   |....A....C.`....|
0x129134:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x129144:   c5 41 0b 00 54 00 00 00  f8 12 00 00 c4 8d 00 00   |.A..T...........|
0x129154:   c6 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x129164:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 8d 0a 0e   |....A....C.P....|
0x129174:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x129184:   c5 48 0b 58 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.H.X...A...A...A|
0x129194:   0e 08 c7 41 0e 04 c5 45  0b 00 00 00 30 00 00 00   |...A...E....0...|
0x1291a4:   08 10 00 00 3c 8e 00 00  cb 00 00 00 04 bc 2e 00   |....<...........|
0x1291b4:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 96   |.A....A....C.0..|
0x1291c4:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x1291d4:   24 00 00 00 3c 10 00 00  d8 8e 00 00 79 00 00 00   |$...<.......y...|
0x1291e4:   04 cf 2e 00 00 41 0e 08  83 02 43 0e 40 02 46 0a   |.....A....C.@.F.|
0x1291f4:   0e 08 41 0e 04 c3 41 0b  24 00 00 00 64 10 00 00   |..A...A.$...d...|
0x129204:   30 8f 00 00 81 00 00 00  04 df 2e 00 00 41 0e 08   |0............A..|
0x129214:   83 02 43 0e 40 02 4a 0a  0e 08 41 0e 04 c3 45 0b   |..C.@.J...A...E.|
0x129224:   24 00 00 00 8c 10 00 00  98 8f 00 00 81 00 00 00   |$...............|
0x129234:   04 ef 2e 00 00 41 0e 08  83 02 43 0e 40 02 4a 0a   |.....A....C.@.J.|
0x129244:   0e 08 41 0e 04 c3 45 0b  24 00 00 00 b4 10 00 00   |..A...E.$.......|
0x129254:   00 90 00 00 79 00 00 00  04 ff 2e 00 00 41 0e 08   |....y........A..|
0x129264:   83 02 43 0e 40 02 46 0a  0e 08 41 0e 04 c3 41 0b   |..C.@.F...A...A.|
0x129274:   38 00 00 00 dc 10 00 00  58 90 00 00 e3 01 00 00   |8.......X.......|
0x129284:   04 0f 2f 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |../..A....A....A|
0x129294:   0e 10 83 04 43 0e 30 02  fe 0a 0e 10 41 0e 0c c3   |....C.0.....A...|
0x1292a4:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 20 00 00 00   |A...A...A... ...|
0x1292b4:   60 14 00 00 0c 92 00 00  3b 00 00 00 00 41 0e 08   |`.......;....A..|
0x1292c4:   83 02 43 0e 30 6c 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0l...A...E..|
0x1292d4:   28 00 00 00 84 14 00 00  28 92 00 00 d5 00 00 00   |(.......(.......|
0x1292e4:   00 43 0e 50 58 83 05 48  86 04 48 87 03 4d 85 02   |.C.PX..H..H..M..|
0x1292f4:   02 77 0a 0e 04 c5 c7 c6  c3 49 0b 00 3c 00 00 00   |.w.......I..<...|
0x129304:   b0 14 00 00 dc 92 00 00  e8 00 00 00 00 41 0e 08   |.............A..|
0x129314:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x129324:   05 43 0e 60 02 79 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.y...A...A..|
0x129334:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 40 00 00 00   |.A...A...C..@...|
0x129344:   a8 11 00 00 8c 93 00 00  4c 01 00 00 04 2d 2f 00   |........L....-/.|
0x129354:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x129364:   41 0e 14 83 05 43 0e 60  02 ad 0a 0e 14 41 0e 10   |A....C.`.....A..|
0x129374:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x129384:   3c 00 00 00 34 15 00 00  98 94 00 00 c4 01 00 00   |<...4...........|
0x129394:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1293a4:   41 0e 14 83 05 43 0e 50  02 67 0a 0e 14 41 0e 10   |A....C.P.g...A..|
0x1293b4:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 46 0b 00   |.A...A...A...F..|
0x1293c4:   2c 00 00 00 2c 12 00 00  38 f4 ff ff af 01 00 00   |,...,...8.......|
0x1293d4:   04 42 2f 00 00 46 0e c0  01 55 86 04 4b 85 02 4b   |.B/..F...U..K..K|
0x1293e4:   83 05 4e 87 03 02 f6 0a  0e 04 c5 c7 c6 c3 43 0b   |..N...........C.|
0x1293f4:   2c 00 00 00 5c 12 00 00  b8 f5 ff ff 68 01 00 00   |,...\.......h...|
0x129404:   04 5a 2f 00 00 43 0e 60  48 86 04 54 83 05 48 87   |.Z/..C.`H..T..H.|
0x129414:   03 4b 85 02 02 75 0a 0e  04 c5 c7 c6 c3 41 0b 00   |.K...u.......A..|
0x129424:   44 00 00 00 8c 12 00 00  f8 f6 ff ff 55 04 00 00   |D...........U...|
0x129434:   04 6c 2f 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.l/..A....A....A|
0x129444:   0e 10 86 04 41 0e 14 83  05 46 0e 90 02 03 f8 03   |....A....F......|
0x129454:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x129464:   0e 04 c5 41 0b 00 00 00  34 00 00 00 1c 16 00 00   |...A....4.......|
0x129474:   80 95 00 00 54 00 00 00  00 41 0e 08 87 02 41 0e   |....T....A....A.|
0x129484:   0c 86 03 41 0e 10 83 04  43 0e 30 02 45 0a 0e 10   |...A....C.0.E...|
0x129494:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x1294a4:   40 00 00 00 0c 13 00 00  a8 95 00 00 56 01 00 00   |@...........V...|
0x1294b4:   04 94 2f 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |../..A....A....A|
0x1294c4:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 f8 0a 0e   |....A....C.P....|
0x1294d4:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x1294e4:   c5 45 0b 00 3c 00 00 00  98 16 00 00 c4 96 00 00   |.E..<...........|
0x1294f4:   f6 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x129504:   0e 10 86 04 41 0e 14 83  05 43 0e 60 02 7d 0a 0e   |....A....C.`.}..|
0x129514:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x129524:   c5 43 0b 00 28 00 00 00  d8 16 00 00 84 97 00 00   |.C..(...........|
0x129534:   05 02 00 00 00 43 0e 60  48 85 02 48 83 05 54 86   |.....C.`H..H..T.|
0x129544:   04 4d 87 03 02 a5 0a 0e  04 c5 c7 c6 c3 47 0b 00   |.M...........G..|
0x129554:   44 00 00 00 bc 13 00 00  68 99 00 00 ec 01 00 00   |D.......h.......|
0x129564:   04 b4 2f 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |../..A....A....A|
0x129574:   0e 10 86 04 41 0e 14 83  05 46 0e a0 01 03 b2 01   |....A....F......|
0x129584:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x129594:   0e 04 c5 41 0b 00 00 00  44 00 00 00 04 14 00 00   |...A....D.......|
0x1295a4:   e0 f9 ff ff e8 01 00 00  04 d9 2f 00 00 41 0e 08   |........../..A..|
0x1295b4:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1295c4:   05 46 0e a0 01 03 a6 01  0a 0e 14 41 0e 10 c3 41   |.F.........A...A|
0x1295d4:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 44 0b 00 00 00   |...A...A...D....|
0x1295e4:   40 00 00 00 4c 14 00 00  88 fb ff ff 45 04 00 00   |@...L.......E...|
0x1295f4:   04 ed 2f 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |../..A....A....A|
0x129604:   0e 10 86 04 41 0e 14 83  05 46 0e c0 01 02 e0 0a   |....A....F......|
0x129614:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x129624:   04 c5 41 0b 2c 00 00 00  90 14 00 00 84 9a 00 00   |..A.,...........|
0x129634:   8b 01 00 00 04 28 30 00  00 43 0e 50 59 86 04 48   |.....(0..C.PY..H|
0x129644:   87 03 50 85 02 51 83 05  02 d8 0a 0e 04 c5 c7 c6   |..P..Q..........|
0x129654:   c3 43 0b 00 3c 00 00 00  08 18 00 00 e4 9b 00 00   |.C..<...........|
0x129664:   f6 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x129674:   0e 10 86 04 41 0e 14 83  05 43 0e 60 02 7d 0a 0e   |....A....C.`.}..|
0x129684:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x129694:   c5 43 0b 00 28 00 00 00  48 18 00 00 a4 9c 00 00   |.C..(...H.......|
0x1296a4:   05 02 00 00 00 43 0e 60  48 85 02 48 83 05 54 86   |.....C.`H..H..T.|
0x1296b4:   04 4d 87 03 02 a5 0a 0e  04 c5 c7 c6 c3 47 0b 00   |.M...........G..|
0x1296c4:   40 00 00 00 2c 15 00 00  88 9e 00 00 55 01 00 00   |@...,.......U...|
0x1296d4:   04 4c 30 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.L0..A....A....A|
0x1296e4:   0e 10 86 04 41 0e 14 83  05 43 0e 70 03 19 01 0a   |....A....C.p....|
0x1296f4:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x129704:   04 c5 41 0b 44 00 00 00  70 15 00 00 b4 fe ff ff   |..A.D...p.......|
0x129714:   81 01 00 00 04 5b 30 00  00 41 0e 08 85 02 41 0e   |.....[0..A....A.|
0x129724:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e a0   |...A....A....F..|
0x129734:   01 03 5b 01 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |..[....A...A...A|
0x129744:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 40 00 00 00   |...A...A....@...|
0x129754:   b8 15 00 00 5c 9f 00 00  86 01 00 00 04 70 30 00   |....\........p0.|
0x129764:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x129774:   41 0e 14 83 05 43 0e 50  03 0e 01 0a 0e 14 41 0e   |A....C.P......A.|
0x129784:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 47 0b   |..A...A...A...G.|
0x129794:   3c 00 00 00 44 19 00 00  a8 a0 00 00 f6 00 00 00   |<...D...........|
0x1297a4:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1297b4:   41 0e 14 83 05 43 0e 60  02 7d 0a 0e 14 41 0e 10   |A....C.`.}...A..|
0x1297c4:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x1297d4:   28 00 00 00 84 19 00 00  68 a1 00 00 05 02 00 00   |(.......h.......|
0x1297e4:   00 43 0e 60 48 85 02 48  83 05 54 86 04 4d 87 03   |.C.`H..H..T..M..|
0x1297f4:   02 a5 0a 0e 04 c5 c7 c6  c3 47 0b 00 44 00 00 00   |.........G..D...|
0x129804:   68 16 00 00 4c a3 00 00  a0 01 00 00 04 90 30 00   |h...L.........0.|
0x129814:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x129824:   41 0e 14 83 05 46 0e 80  02 03 5b 01 0a 0e 14 41   |A....F....[....A|
0x129834:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x129844:   0b 00 00 00 44 00 00 00  b0 16 00 00 04 ff ff ff   |....D...........|
0x129854:   ad 04 00 00 04 9f 30 00  00 41 0e 08 85 02 41 0e   |......0..A....A.|
0x129864:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e d0   |...A....A....F..|
0x129874:   02 03 4f 03 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |..O....A...A...A|
0x129884:   0e 08 c7 41 0e 04 c5 43  0b 00 00 00 34 00 00 00   |...A...C....4...|
0x129894:   40 1a 00 00 5c a4 00 00  63 00 00 00 00 41 0e 08   |@...\...c....A..|
0x1298a4:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x1298b4:   54 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |T...A...A...A...|
0x1298c4:   41 0b 00 00 44 00 00 00  78 1a 00 00 94 a4 00 00   |A...D...x.......|
0x1298d4:   89 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |.....A....A....A|
0x1298e4:   0e 10 83 04 43 0e 30 02  61 0a 0e 10 41 0e 0c c3   |....C.0.a...A...|
0x1298f4:   41 0e 08 c6 41 0e 04 c7  46 0b 50 0a 0e 10 41 0e   |A...A...F.P...A.|
0x129904:   0c c3 41 0e 08 c6 41 0e  04 c7 41 0b 30 00 00 00   |..A...A...A.0...|
0x129914:   78 17 00 00 dc a4 00 00  80 00 00 00 04 c4 30 00   |x.............0.|
0x129924:   00 41 0e 08 83 02 43 0e  40 7e 0a 0e 08 41 0e 04   |.A....C.@~...A..|
0x129934:   c3 45 0b 50 0a 0e 08 41  0e 04 c3 41 0b 00 00 00   |.E.P...A...A....|
0x129944:   44 00 00 00 f4 1a 00 00  28 a5 00 00 89 00 00 00   |D.......(.......|
0x129954:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x129964:   43 0e 30 02 61 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.a...A...A...|
0x129974:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x129984:   08 c6 41 0e 04 c7 41 0b  40 00 00 00 f4 17 00 00   |..A...A.@.......|
0x129994:   70 a5 00 00 68 01 00 00  04 d4 30 00 00 41 0e 08   |p...h.....0..A..|
0x1299a4:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1299b4:   05 43 0e 50 03 1b 01 0a  0e 14 41 0e 10 c3 41 0e   |.C.P......A...A.|
0x1299c4:   0c c6 41 0e 08 c7 41 0e  04 c5 42 0b 40 00 00 00   |..A...A...B.@...|
0x1299d4:   38 18 00 00 9c a6 00 00  6f 02 00 00 04 f8 30 00   |8.......o.....0.|
0x1299e4:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1299f4:   41 0e 14 83 05 43 0e 60  03 e0 01 0a 0e 14 41 0e   |A....C.`......A.|
0x129a04:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0x129a14:   28 00 00 00 c4 1b 00 00  c8 a8 00 00 40 01 00 00   |(...........@...|
0x129a24:   00 43 0e 50 5d 86 04 48  83 05 48 87 03 4d 85 02   |.C.P]..H..H..M..|
0x129a34:   02 80 0a 0e 04 c5 c7 c6  c3 43 0b 00 3c 00 00 00   |.........C..<...|
0x129a44:   f0 1b 00 00 dc a9 00 00  8d 01 00 00 00 41 0e 08   |.............A..|
0x129a54:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x129a64:   05 43 0e 60 02 a7 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.....A...A..|
0x129a74:   c6 41 0e 08 c7 41 0e 04  c5 46 0b 00 28 00 00 00   |.A...A...F..(...|
0x129a84:   30 1c 00 00 2c ab 00 00  c2 02 00 00 00 43 0e 60   |0...,........C.`|
0x129a94:   48 87 03 48 83 05 54 86  04 4d 85 02 02 98 0a 0e   |H..H..T..M......|
0x129aa4:   04 c5 c7 c6 c3 44 0b 00  44 00 00 00 14 19 00 00   |.....D..D.......|
0x129ab4:   d0 ad 00 00 78 06 00 00  04 28 31 00 00 41 0e 08   |....x....(1..A..|
0x129ac4:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x129ad4:   05 43 0e 80 01 03 08 01  0a 0e 14 41 0e 10 c3 41   |.C.........A...A|
0x129ae4:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 41 0b 00 00 00   |...A...A...A....|
0x129af4:   2c 00 00 00 5c 19 00 00  58 b4 00 00 c6 01 00 00   |,...\...X.......|
0x129b04:   04 44 31 00 00 43 0e 50  48 83 05 50 87 03 86 04   |.D1..C.PH..P....|
0x129b14:   85 02 02 5b 0a 0e 04 c5  c7 c6 c3 42 0b 00 00 00   |...[.......B....|
0x129b24:   2c 00 00 00 8c 19 00 00  f8 b5 00 00 8f 01 00 00   |,...............|
0x129b34:   04 74 31 00 00 43 0e 50  48 85 02 48 83 05 5d 87   |.t1..C.PH..H..].|
0x129b44:   03 86 04 02 c0 0a 0e 04  c5 c7 c6 c3 48 0b 00 00   |............H...|
0x129b54:   2c 00 00 00 bc 19 00 00  a8 b7 00 00 0c 0c 00 00   |,...............|
0x129b64:   04 9c 31 00 00 46 0e 90  01 4b 83 05 61 85 02 86   |..1..F...K..a...|
0x129b74:   04 4f 87 03 02 87 0a 0e  04 c5 c7 c6 c3 48 0b 00   |.O...........H..|
0x129b84:   40 00 00 00 ec 19 00 00  68 c5 00 00 60 02 00 00   |@.......h...`...|
0x129b94:   04 ef 31 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |..1..A....A....A|
0x129ba4:   0e 10 86 04 41 0e 14 83  05 43 0e 50 03 3d 01 0a   |....A....C.P.=..|
0x129bb4:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x129bc4:   04 c5 48 0b 44 00 00 00  30 1a 00 00 d4 c7 00 00   |..H.D...0.......|
0x129bd4:   8e 07 00 00 04 10 32 00  00 41 0e 08 85 02 41 0e   |......2..A....A.|
0x129be4:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e c0   |...A....A....F..|
0x129bf4:   02 03 33 05 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |..3....A...A...A|
0x129c04:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 44 00 00 00   |...A...A....D...|
0x129c14:   78 1a 00 00 ec ff ff ff  d3 04 00 00 04 7c 32 00   |x............|2.|
0x129c24:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x129c34:   41 0e 14 83 05 46 0e a0  02 03 53 02 0a 0e 14 41   |A....F....S....A|
0x129c44:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 47   |...A...A...A...G|
0x129c54:   0b 00 00 00 28 00 00 00  08 1e 00 00 84 04 00 00   |....(...........|
0x129c64:   a6 00 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x129c74:   0e 40 70 0a 0e 0c 41 0e  08 c3 41 0e 04 c6 41 0b   |.@p...A...A...A.|
0x129c84:   18 00 00 00 34 1e 00 00  f8 ce 00 00 a4 00 00 00   |....4...........|
0x129c94:   00 43 0e 30 02 9b 0a 0e  04 41 0b 00 ??            |.C.0.....A..?   |

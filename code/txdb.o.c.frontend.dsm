;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:51:06
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: _ZL15BatchWriteCoinsR13CLevelDBBatchRK7uint256RK6CCoins at 0x0 -- 0x1
; function: function_1 at 0x1 -- 0x2
; data inside code section at 0x2 -- 0x8
0x2:        e5 81 ec 98 00 00                                  |......          |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x8 -- 0x9
; data inside code section at 0x9 -- 0xe
0x9:        8b 45 08 89 45                                     |.E..E           |
; function: ~clone_impl at 0xe -- 0xf
; data inside code section at 0xf -- 0x84
0xf:        8b 45 0c 89 45 a0 8b 45  10 89 45 9c 65 a1 14 00   |.E..E..E..E.e...|
0x1f:       00 00 89 45 f4 31 c0 8b  45 9c 89 04 24 e8 ff 63   |...E.1..E...$..c|
0x2f:       00 00 84 c0 74 64 8d 55  ac 8b 45 a0 8b 08 89 4c   |....td.U..E....L|
0x3f:       24 08 8b 48 04 89 4c 24  0c 8b 48 08 89 4c 24 10   |$..H..L$..H..L$.|
0x4f:       8b 48 0c 89 4c 24 14 8b  48 10 89 4c 24 18 8b 48   |.H..L$..H..L$..H|
0x5f:       14 89 4c 24 1c 8b 48 18  89 4c 24 20 8b 40 1c 89   |..L$..H..L$ .@..|
0x6f:       44 24 24 c7 44 24 04 63  00 00 00 89 14 24 e8 da   |D$$.D$.c.....$..|
0x7f:       a2 00 00 83 ec                                     |.....           |
; function: function_84 at 0x84 -- 0x99
0x84:       04 8d                           	add al, 0x8d
0x86:       45                              	inc ebp
0x87:       ac                              	lodsb al, byte ptr [esi]
0x88:       89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8c:       8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8f:       89 04 24                        	mov dword ptr [esp], eax
0x92:       e8 43 a3 00 00                  	call 0xa3da <_ZN13CLevelDBBatch5EraseISt4pairIc7uint256EEEvRKT_>
0x97:       eb 69                           	jmp 0x102 <function_102>
; function: function_99 at 0x99 -- 0x102
0x99:       8d 55 d0                        	lea edx, [ebp - 0x30]
0x9c:       8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x9f:       8b 08                           	mov ecx, dword ptr [eax]
0xa1:       89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0xa5:       8b 48 04                        	mov ecx, dword ptr [eax + 4]
0xa8:       89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xac:       8b 48 08                        	mov ecx, dword ptr [eax + 8]
0xaf:       89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xb3:       8b 48 0c                        	mov ecx, dword ptr [eax + 0xc]
0xb6:       89 4c 24 14                     	mov dword ptr [esp + 0x14], ecx
0xba:       8b 48 10                        	mov ecx, dword ptr [eax + 0x10]
0xbd:       89 4c 24 18                     	mov dword ptr [esp + 0x18], ecx
0xc1:       8b 48 14                        	mov ecx, dword ptr [eax + 0x14]
0xc4:       89 4c 24 1c                     	mov dword ptr [esp + 0x1c], ecx
0xc8:       8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0xcb:       89 4c 24 20                     	mov dword ptr [esp + 0x20], ecx
0xcf:       8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0xd2:       89 44 24 24                     	mov dword ptr [esp + 0x24], eax
0xd6:       c7 44 24 04 63 00 00 00         	mov dword ptr [esp + 4], 0x63
0xde:       89 14 24                        	mov dword ptr [esp], edx
0xe1:       e8 76 a2 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0xe6:       83 ec 04                        	sub esp, 4
0xe9:       8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xec:       89 44 24 08                     	mov dword ptr [esp + 8], eax
0xf0:       8d 45 d0                        	lea eax, [ebp - 0x30]
0xf3:       89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf7:       8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xfa:       89 04 24                        	mov dword ptr [esp], eax
0xfd:       e8 c4 a3 00 00                  	call 0xa4c6 <_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E6CCoinsEEvRKT_RKT0_>
; function: function_102 at 0x102 -- 0x10e
0x102:      8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x105:      65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10c:      74 05                           	je 0x113 <function_113>
; data inside code section at 0x10e -- 0x10f
0x10e:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10f -- 0x110
; data inside code section at 0x110 -- 0x113
0x110:      ff ff ff                                           |...             |
; function: function_113 at 0x113 -- 0x115
0x113:      c9                              	leave 
0x114:      c3                              	ret 
; function: BatchWriteHashBestChain at 0x115 -- 0x15b
0x115:      55                              	push ebp
0x116:      89 e5                           	mov ebp, esp
0x118:      83 ec 38                        	sub esp, 0x38
0x11b:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11e:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x121:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x124:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x127:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12d:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x130:      31 c0                           	xor eax, eax
0x132:      c6 45 f3 42                     	mov byte ptr [ebp - 0xd], 0x42
0x136:      8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x139:      89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13d:      8d 45 f3                        	lea eax, [ebp - 0xd]
0x140:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x144:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x147:      89 04 24                        	mov dword ptr [esp], eax
0x14a:      e8 0b a5 00 00                  	call 0xa65a <_ZN13CLevelDBBatch5WriteIc7uint256EEvRKT_RKT0_>
0x14f:      8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x152:      65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x159:      74 05                           	je 0x160 <function_160>
; data inside code section at 0x15b -- 0x15c
0x15b:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15c -- 0x15d
; data inside code section at 0x15d -- 0x160
0x15d:      ff ff ff                                           |...             |
; function: function_160 at 0x160 -- 0x162
0x160:      c9                              	leave 
0x161:      c3                              	ret 
; function: CCoinsViewDB at 0x162 -- 0x1cb
0x162:      55                              	push ebp
0x163:      89 e5                           	mov ebp, esp
0x165:      56                              	push esi
0x166:      53                              	push ebx
0x167:      83 ec 40                        	sub esp, 0x40
0x16a:      8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x16d:      8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x170:      8b 4d 08                        	mov ecx, dword ptr [ebp + 8]
0x173:      89 4d e4                        	mov dword ptr [ebp - 0x1c], ecx
0x176:      8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x179:      89 4d e0                        	mov dword ptr [ebp - 0x20], ecx
0x17c:      88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x17f:      88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x182:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x188:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18b:      31 c0                           	xor eax, eax
0x18d:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x190:      89 04 24                        	mov dword ptr [esp], eax
0x193:      e8 08 76 00 00                  	call 0x77a0 <_ZN10CCoinsViewC1Ev>
0x198:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19b:      c7 00 ec b4 01 00               	mov dword ptr [eax], 0x1b4ec
0x1a1:      0f b6 75 d8                     	movzx esi, byte ptr [ebp - 0x28]
0x1a5:      0f b6 5d dc                     	movzx ebx, byte ptr [ebp - 0x24]
0x1a9:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x1b1:      c7 44 24 04 f5 3d 00 00         	mov dword ptr [esp + 4], 0x3df5 ; "chainstate"
0x1b9:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x1bc:      89 04 24                        	mov dword ptr [esp], eax
0x1bf:      e8 2a a6 00 00                  	call 0xa7ee <_ZN5boost11filesystem34pathC1IA11_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE>
0x1c4:      c7 04 24 01 00 00 00            	mov dword ptr [esp], 1
; data inside code section at 0x1cb -- 0x1cc
0x1cb:      e8                                                 |.               |
; dynamically linked function: _Z10GetDataDirb at 0x1cc -- 0x1cd
; data inside code section at 0x1cd -- 0x1d1
0x1cd:      ff ff ff 89                                        |....            |
; function: function_1d1 at 0x1d1 -- 0x1d4
0x1d1:      c2 8d 45                        	ret 0x458d
; data inside code section at 0x1d4 -- 0x20b
0x1d4:      ec 8d 4d f0 89 4c 24 08  89 54 24 04 89 04 24 e8   |..M..L$..T$...$.|
0x1e4:      87 53 00 00 83 ec 04 8b  45 e4 8d 50 04 89 74 24   |.S......E..P..t$|
0x1f4:      10 89 5c 24 0c 8b 45 e0  89 44 24 08 8d 45 ec 89   |..\$..E..D$..E..|
0x204:      44 24 04 89 14 24 e8                               |D$...$.         |
; dynamically linked function: _ZN8CLevelDBC1ERKN5boost11filesystem34pathEjbb at 0x20b -- 0x20c
; data inside code section at 0x20c -- 0x20e
0x20c:      ff ff                                              |..              |
; function: function_20e at 0x20e -- 0x227
0x20e:      ff 8d 45 ec 89 04               	dec dword ptr [ebp + 0x489ec45]
0x214:      24 e8                           	and al, 0xe8
0x216:      b2 52                           	mov dl, 0x52
0x218:      00 00                           	add byte ptr [eax], al
0x21a:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x21d:      89 04 24                        	mov dword ptr [esp], eax
0x220:      e8 a7 52 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x225:      eb 35                           	jmp 0x25c <function_25c>
; function: function_227 at 0x227 -- 0x236
0x227:      89 c3                           	mov ebx, eax
0x229:      8d 45 ec                        	lea eax, [ebp - 0x14]
0x22c:      89 04 24                        	mov dword ptr [esp], eax
0x22f:      e8 98 52 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x234:      eb 02                           	jmp 0x238 <function_238>
; function: function_236 at 0x236 -- 0x238
0x236:      89 c3                           	mov ebx, eax
; function: function_238 at 0x238 -- 0x245
0x238:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x23b:      89 04 24                        	mov dword ptr [esp], eax
0x23e:      e8 89 52 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x243:      eb 02                           	jmp 0x247 <function_247>
; function: function_245 at 0x245 -- 0x247
0x245:      89 c3                           	mov ebx, eax
; function: function_247 at 0x247 -- 0x257
0x247:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x24a:      89 04 24                        	mov dword ptr [esp], eax
0x24d:      e8 16 72 00 00                  	call 0x7468 <_ZN10CCoinsViewD1Ev>
0x252:      89 d8                           	mov eax, ebx
0x254:      89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x257 -- 0x258
0x257:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x258 -- 0x259
; data inside code section at 0x259 -- 0x25c
0x259:      ff ff ff                                           |...             |
; function: function_25c at 0x25c -- 0x268
0x25c:      8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x25f:      65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x266:      74 05                           	je 0x26d <function_26d>
; data inside code section at 0x268 -- 0x269
0x268:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x269 -- 0x26a
; data inside code section at 0x26a -- 0x26d
0x26a:      ff ff ff                                           |...             |
; function: function_26d at 0x26d -- 0x274
0x26d:      8d 65 f8                        	lea esp, [ebp - 8]
0x270:      5b                              	pop ebx
0x271:      5e                              	pop esi
0x272:      5d                              	pop ebp
0x273:      c3                              	ret 
; function: _ZN12CCoinsViewDB8GetCoinsERK7uint256R6CCoins at 0x274 -- 0x30f
0x274:      55                              	push ebp
0x275:      89 e5                           	mov ebp, esp
0x277:      83 ec 78                        	sub esp, 0x78
0x27a:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x27d:      89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x280:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x283:      89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x286:      8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x289:      89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x28c:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x292:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x295:      31 c0                           	xor eax, eax
0x297:      8d 55 d0                        	lea edx, [ebp - 0x30]
0x29a:      8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x29d:      8b 08                           	mov ecx, dword ptr [eax]
0x29f:      89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x2a3:      8b 48 04                        	mov ecx, dword ptr [eax + 4]
0x2a6:      89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x2aa:      8b 48 08                        	mov ecx, dword ptr [eax + 8]
0x2ad:      89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0x2b1:      8b 48 0c                        	mov ecx, dword ptr [eax + 0xc]
0x2b4:      89 4c 24 14                     	mov dword ptr [esp + 0x14], ecx
0x2b8:      8b 48 10                        	mov ecx, dword ptr [eax + 0x10]
0x2bb:      89 4c 24 18                     	mov dword ptr [esp + 0x18], ecx
0x2bf:      8b 48 14                        	mov ecx, dword ptr [eax + 0x14]
0x2c2:      89 4c 24 1c                     	mov dword ptr [esp + 0x1c], ecx
0x2c6:      8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0x2c9:      89 4c 24 20                     	mov dword ptr [esp + 0x20], ecx
0x2cd:      8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x2d0:      89 44 24 24                     	mov dword ptr [esp + 0x24], eax
0x2d4:      c7 44 24 04 63 00 00 00         	mov dword ptr [esp + 4], 0x63
0x2dc:      89 14 24                        	mov dword ptr [esp], edx
0x2df:      e8 78 a0 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0x2e4:      83 ec 04                        	sub esp, 4
0x2e7:      8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x2ea:      8d 50 04                        	lea edx, [eax + 4]
0x2ed:      8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x2f0:      89 44 24 08                     	mov dword ptr [esp + 8], eax
0x2f4:      8d 45 d0                        	lea eax, [ebp - 0x30]
0x2f7:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x2fb:      89 14 24                        	mov dword ptr [esp], edx
0x2fe:      e8 c1 a5 00 00                  	call 0xa8c4 <_ZN8CLevelDB4ReadISt4pairIc7uint256E6CCoinsEEbRKT_RT0_>
0x303:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x306:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x30d:      74 05                           	je 0x314 <DEFAULT_BLOCK_PRIORITY_SIZE>
; data inside code section at 0x30f -- 0x310
0x30f:      e8                                                 |.               |
; dynamically linked function: MAX_SCRIPTCHECK_THREADS at 0x310 -- 0x311
; data inside code section at 0x311 -- 0x314
0x311:      ff ff ff                                           |...             |
; function: DEFAULT_BLOCK_PRIORITY_SIZE at 0x314 -- 0x316
0x314:      c9                              	leave 
0x315:      c3                              	ret 
; function: _ZN12CCoinsViewDB8SetCoinsERK7uint256RK6CCoins at 0x316 -- 0x376
0x316:      55                              	push ebp
0x317:      89 e5                           	mov ebp, esp
0x319:      53                              	push ebx
0x31a:      83 ec 34                        	sub esp, 0x34
0x31d:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x320:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x323:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x326:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x329:      8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x32c:      89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x32f:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x335:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x338:      31 c0                           	xor eax, eax
0x33a:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x33d:      89 04 24                        	mov dword ptr [esp], eax
0x340:      e8 a3 73 00 00                  	call 0x76e8 <_ZN13CLevelDBBatchC1Ev>
0x345:      8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x348:      89 44 24 08                     	mov dword ptr [esp + 8], eax
0x34c:      8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x34f:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x353:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x356:      89 04 24                        	mov dword ptr [esp], eax
0x359:      e8 a2 fc ff ff                  	call 0
0x35e:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x361:      8d 50 04                        	lea edx, [eax + 4]
0x364:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x36c:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x36f:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x373:      89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x376 -- 0x377
0x376:      e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0x377 -- 0x378
; data inside code section at 0x378 -- 0x37a
0x378:      ff ff                                              |..              |
; function: function_37a at 0x37a -- 0x398
0x37a:      ff 89 c3 8d 45 f0               	dec dword ptr [ecx - 0xfba723d]
0x380:      89 04 24                        	mov dword ptr [esp], eax
0x383:      e8 96 73 00 00                  	call 0x771e <_ZN13CLevelDBBatchD1Ev>
0x388:      89 d8                           	mov eax, ebx
0x38a:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x38d:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x394:      74 1e                           	je 0x3b4 <function_3b4>
0x396:      eb 17                           	jmp 0x3af <function_3af>
; data inside code section at 0x398 -- 0x399
0x398:      89                                                 |.               |
; function: function_399 at 0x399 -- 0x39a
0x399:      c3                              	ret 
; data inside code section at 0x39a -- 0x3ab
0x39a:      8d 45 f0 89 04 24 e8 79  73 00 00 89 d8 89 04 24   |.E...$.ys......$|
0x3aa:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x3ab -- 0x3ac
; data inside code section at 0x3ac -- 0x3af
0x3ac:      ff ff ff                                           |...             |
; function: function_3af at 0x3af -- 0x3b0
; dynamically linked function: __stack_chk_fail at 0x3b0 -- 0x3b1
; data inside code section at 0x3b1 -- 0x3b4
0x3b1:      ff ff ff                                           |...             |
; function: function_3b4 at 0x3b4 -- 0x3ba
0x3b4:      83 c4 34                        	add esp, 0x34
0x3b7:      5b                              	pop ebx
0x3b8:      5d                              	pop ebp
0x3b9:      c3                              	ret 
; function: _ZN12CCoinsViewDB9HaveCoinsERK7uint256 at 0x3ba -- 0x44f
0x3ba:      55                              	push ebp
0x3bb:      89 e5                           	mov ebp, esp
0x3bd:      83 ec 78                        	sub esp, 0x78
0x3c0:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3c3:      89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x3c6:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x3c9:      89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x3cc:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3d2:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3d5:      31 c0                           	xor eax, eax
0x3d7:      8d 55 d0                        	lea edx, [ebp - 0x30]
0x3da:      8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x3dd:      8b 08                           	mov ecx, dword ptr [eax]
0x3df:      89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x3e3:      8b 48 04                        	mov ecx, dword ptr [eax + 4]
0x3e6:      89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x3ea:      8b 48 08                        	mov ecx, dword ptr [eax + 8]
0x3ed:      89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0x3f1:      8b 48 0c                        	mov ecx, dword ptr [eax + 0xc]
0x3f4:      89 4c 24 14                     	mov dword ptr [esp + 0x14], ecx
0x3f8:      8b 48 10                        	mov ecx, dword ptr [eax + 0x10]
0x3fb:      89 4c 24 18                     	mov dword ptr [esp + 0x18], ecx
0x3ff:      8b 48 14                        	mov ecx, dword ptr [eax + 0x14]
0x402:      89 4c 24 1c                     	mov dword ptr [esp + 0x1c], ecx
0x406:      8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0x409:      89 4c 24 20                     	mov dword ptr [esp + 0x20], ecx
0x40d:      8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x410:      89 44 24 24                     	mov dword ptr [esp + 0x24], eax
0x414:      c7 44 24 04 63 00 00 00         	mov dword ptr [esp + 4], 0x63
0x41c:      89 14 24                        	mov dword ptr [esp], edx
0x41f:      e8 38 9f 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0x424:      83 ec 04                        	sub esp, 4
0x427:      8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x42a:      8d 50 04                        	lea edx, [eax + 4]
0x42d:      8d 45 d0                        	lea eax, [ebp - 0x30]
0x430:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x434:      89 14 24                        	mov dword ptr [esp], edx
0x437:      e8 2e a7 00 00                  	call 0xab6a <_ZN8CLevelDB6ExistsISt4pairIc7uint256EEEbRKT_>
0x43c:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x43f:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x446:      74 05                           	je 0x44d <_ZN12CCoinsViewDB9HaveCoinsERK7uint256+0x93>
0x448:      e8 fc ff ff ff                  	call 0x449
0x44d:      c9                              	leave 
0x44e:      c3                              	ret 
; data inside code section at 0x44f -- 0x450
0x44f:      90                                                 |.               |
; function: _ZN12CCoinsViewDB12GetBestBlockEv at 0x450 -- 0x4aa
0x450:      55                              	push ebp
0x451:      89 e5                           	mov ebp, esp
0x453:      83 ec 58                        	sub esp, 0x58
0x456:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x459:      89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x45c:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x462:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x465:      31 c0                           	xor eax, eax
0x467:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x46a:      89 04 24                        	mov dword ptr [esp], eax
0x46d:      e8 6e 22 00 00                  	call 0x26e0 <_ZN7uint256C1Ev>
0x472:      c6 45 d3 42                     	mov byte ptr [ebp - 0x2d], 0x42
0x476:      8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x479:      8d 50 04                        	lea edx, [eax + 4]
0x47c:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x47f:      89 44 24 08                     	mov dword ptr [esp + 8], eax
0x483:      8d 45 d3                        	lea eax, [ebp - 0x2d]
0x486:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x48a:      89 14 24                        	mov dword ptr [esp], edx
0x48d:      e8 ca a8 00 00                  	call 0xad5c <_ZN8CLevelDB4ReadIc7uint256EEbRKT_RT0_>
0x492:      83 f0 01                        	xor eax, 1
0x495:      84 c0                           	test al, al
0x497:      74 07                           	je 0x4a0 <_ZN12CCoinsViewDB12GetBestBlockEv+0x50>
0x499:      b8 00 00 00 00                  	mov eax, 0
0x49e:      eb 5e                           	jmp 0x4fe
0x4a0:      8d 45 c8                        	lea eax, [ebp - 0x38]
0x4a3:      8d 55 d4                        	lea edx, [ebp - 0x2c]
0x4a6:      89 54 24 08                     	mov dword ptr [esp + 8], edx
; data inside code section at 0x4aa -- 0x4ae
0x4aa:      c7 44 24 04                                        |.D$.            |
; dynamically linked function: mapBlockIndex at 0x4ae -- 0x4c0
; data inside code section at 0x4c0 -- 0x4c4
0x4c0:      c7 44 24 04                                        |.D$.            |
; dynamically linked function: mapBlockIndex at 0x4c4 -- 0x50a
; data inside code section at 0x50a -- 0x50b
0x50a:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x50b -- 0x50c
; data inside code section at 0x50c -- 0x50f
0x50c:      ff ff ff                                           |...             |
; function: function_50f at 0x50f -- 0x511
0x50f:      c9                              	leave 
0x510:      c3                              	ret 
; data inside code section at 0x511 -- 0x512
0x511:      90                                                 |.               |
; function: _ZN12CCoinsViewDB12SetBestBlockEP11CBlockIndex at 0x512 -- 0x57a
0x512:      55                              	push ebp
0x513:      89 e5                           	mov ebp, esp
0x515:      53                              	push ebx
0x516:      83 ec 54                        	sub esp, 0x54
0x519:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x51c:      89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x51f:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x522:      89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x525:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x52b:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x52e:      31 c0                           	xor eax, eax
0x530:      8d 45 d0                        	lea eax, [ebp - 0x30]
0x533:      89 04 24                        	mov dword ptr [esp], eax
0x536:      e8 ad 71 00 00                  	call 0x76e8 <_ZN13CLevelDBBatchC1Ev>
0x53b:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x53e:      8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x541:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x545:      89 04 24                        	mov dword ptr [esp], eax
0x548:      e8 2f 67 00 00                  	call 0x6c7c <_ZNK11CBlockIndex12GetBlockHashEv>
0x54d:      83 ec 04                        	sub esp, 4
0x550:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x553:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x557:      8d 45 d0                        	lea eax, [ebp - 0x30]
0x55a:      89 04 24                        	mov dword ptr [esp], eax
0x55d:      e8 b3 fb ff ff                  	call 0x115 <BatchWriteHashBestChain>
0x562:      8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x565:      8d 50 04                        	lea edx, [eax + 4]
0x568:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x570:      8d 45 d0                        	lea eax, [ebp - 0x30]
0x573:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x577:      89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x57a -- 0x57b
0x57a:      e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0x57b -- 0x57c
; data inside code section at 0x57c -- 0x57e
0x57c:      ff ff                                              |..              |
; function: function_57e at 0x57e -- 0x59c
0x57e:      ff 89 c3 8d 45 d0               	dec dword ptr [ecx - 0x2fba723d]
0x584:      89 04 24                        	mov dword ptr [esp], eax
0x587:      e8 92 71 00 00                  	call 0x771e <_ZN13CLevelDBBatchD1Ev>
0x58c:      89 d8                           	mov eax, ebx
0x58e:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x591:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x598:      74 1e                           	je 0x5b8 <function_5b8>
0x59a:      eb 17                           	jmp 0x5b3 <function_5b3>
; data inside code section at 0x59c -- 0x59d
0x59c:      89                                                 |.               |
; function: function_59d at 0x59d -- 0x59e
0x59d:      c3                              	ret 
; data inside code section at 0x59e -- 0x5af
0x59e:      8d 45 d0 89 04 24 e8 75  71 00 00 89 d8 89 04 24   |.E...$.uq......$|
0x5ae:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x5af -- 0x5b0
; data inside code section at 0x5b0 -- 0x5b3
0x5b0:      ff ff ff                                           |...             |
; function: function_5b3 at 0x5b3 -- 0x5b4
; dynamically linked function: __stack_chk_fail at 0x5b4 -- 0x5b5
; data inside code section at 0x5b5 -- 0x5b8
0x5b5:      ff ff ff                                           |...             |
; function: function_5b8 at 0x5b8 -- 0x5bd
0x5b8:      8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x5bb:      c9                              	leave 
0x5bc:      c3                              	ret 
; data inside code section at 0x5bd -- 0x5be
0x5bd:      90                                                 |.               |
; function: _ZN12CCoinsViewDB10BatchWriteERKSt3mapI7uint2566CCoinsSt4lessIS1_ESaISt4pairIKS1_S2_EEEP11CBlockIndex at 0x5be -- 0x5f8
0x5be:      55                              	push ebp
0x5bf:      89 e5                           	mov ebp, esp
0x5c1:      53                              	push ebx
0x5c2:      83 ec 64                        	sub esp, 0x64
0x5c5:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5c8:      89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x5cb:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5ce:      89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x5d1:      8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x5d4:      89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x5d7:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5dd:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5e0:      31 c0                           	xor eax, eax
0x5e2:      8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x5e5:      89 04 24                        	mov dword ptr [esp], eax
0x5e8:      e8 31 ab 00 00                  	call 0xb11e <_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE4sizeEv>
0x5ed:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5f1:      c7 04 24 00 3e 00 00            	mov dword ptr [esp], 0x3e00 ; "Committing %u changed transactions to coin database...\n"
; data inside code section at 0x5f8 -- 0x5f9
0x5f8:      e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5f9 -- 0x5fa
; data inside code section at 0x5fa -- 0x5fc
0x5fa:      ff ff                                              |..              |
; function: function_5fc at 0x5fc -- 0x6d8
0x5fc:      ff 8d 45 c4 89 04               	dec dword ptr [ebp + 0x489c445]
0x602:      24 e8                           	and al, 0xe8
0x604:      e0 70                           	loopne 0x676 <function_5fc+0x7a>
0x606:      00 00                           	add byte ptr [eax], al
0x608:      8d 45 c8                        	lea eax, [ebp - 0x38]
0x60b:      8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x60e:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x612:      89 04 24                        	mov dword ptr [esp], eax
0x615:      e8 3a ab 00 00                  	call 0xb154 <_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE5beginEv>
0x61a:      83 ec 04                        	sub esp, 4
0x61d:      eb 49                           	jmp 0x668 <function_5fc+0x6c>
0x61f:      8d 45 c8                        	lea eax, [ebp - 0x38]
0x622:      89 04 24                        	mov dword ptr [esp], eax
0x625:      e8 56 ac 00 00                  	call 0xb280 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv>
0x62a:      8d 58 20                        	lea ebx, [eax + 0x20]
0x62d:      8d 45 c8                        	lea eax, [ebp - 0x38]
0x630:      89 04 24                        	mov dword ptr [esp], eax
0x633:      e8 48 ac 00 00                  	call 0xb280 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv>
0x638:      89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x63c:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x640:      8d 45 c4                        	lea eax, [ebp - 0x3c]
0x643:      89 04 24                        	mov dword ptr [esp], eax
0x646:      e8 b5 f9 ff ff                  	call 0
0x64b:      8d 45 d0                        	lea eax, [ebp - 0x30]
0x64e:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x656:      8d 55 c8                        	lea edx, [ebp - 0x38]
0x659:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x65d:      89 04 24                        	mov dword ptr [esp], eax
0x660:      e8 c3 ab 00 00                  	call 0xb228 <_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEppEi>
0x665:      83 ec 04                        	sub esp, 4
0x668:      8d 45 cc                        	lea eax, [ebp - 0x34]
0x66b:      8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x66e:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x672:      89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x675 -- 0x676
0x675:      e8                                                 |.               |
0x676:      24 ab                           	and al, 0xab
0x678:      00 00                           	add byte ptr [eax], al
0x67a:      83 ec 04                        	sub esp, 4
0x67d:      8d 45 cc                        	lea eax, [ebp - 0x34]
0x680:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x684:      8d 45 c8                        	lea eax, [ebp - 0x38]
0x687:      89 04 24                        	mov dword ptr [esp], eax
0x68a:      e8 59 ab 00 00                  	call 0xb1e8 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEneERKS5_>
0x68f:      84 c0                           	test al, al
0x691:      75 8c                           	jne 0x61f <function_5fc+0x23>
0x693:      83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x697:      74 27                           	je 0x6c0 <function_5fc+0xc4>
0x699:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x69c:      8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x69f:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x6a3:      89 04 24                        	mov dword ptr [esp], eax
0x6a6:      e8 d1 65 00 00                  	call 0x6c7c <_ZNK11CBlockIndex12GetBlockHashEv>
0x6ab:      83 ec 04                        	sub esp, 4
0x6ae:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x6b1:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6b5:      8d 45 c4                        	lea eax, [ebp - 0x3c]
0x6b8:      89 04 24                        	mov dword ptr [esp], eax
0x6bb:      e8 55 fa ff ff                  	call 0x115 <BatchWriteHashBestChain>
0x6c0:      8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x6c3:      8d 50 04                        	lea edx, [eax + 4]
0x6c6:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6ce:      8d 45 c4                        	lea eax, [ebp - 0x3c]
0x6d1:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6d5:      89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x6d8 -- 0x6d9
0x6d8:      e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0x6d9 -- 0x6da
; data inside code section at 0x6da -- 0x6dc
0x6da:      ff ff                                              |..              |
; function: function_6dc at 0x6dc -- 0x6fa
0x6dc:      ff 89 c3 8d 45 c4               	dec dword ptr [ecx - 0x3bba723d]
0x6e2:      89 04 24                        	mov dword ptr [esp], eax
0x6e5:      e8 34 70 00 00                  	call 0x771e <_ZN13CLevelDBBatchD1Ev>
0x6ea:      89 d8                           	mov eax, ebx
0x6ec:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x6ef:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6f6:      74 1e                           	je 0x716 <function_716>
0x6f8:      eb 17                           	jmp 0x711 <function_711>
; data inside code section at 0x6fa -- 0x6fb
0x6fa:      89                                                 |.               |
; function: function_6fb at 0x6fb -- 0x6fc
0x6fb:      c3                              	ret 
; data inside code section at 0x6fc -- 0x70d
0x6fc:      8d 45 c4 89 04 24 e8 17  70 00 00 89 d8 89 04 24   |.E...$..p......$|
0x70c:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x70d -- 0x70e
; data inside code section at 0x70e -- 0x711
0x70e:      ff ff ff                                           |...             |
; function: function_711 at 0x711 -- 0x712
; dynamically linked function: __stack_chk_fail at 0x712 -- 0x713
; data inside code section at 0x713 -- 0x716
0x713:      ff ff ff                                           |...             |
; function: function_716 at 0x716 -- 0x71b
0x716:      8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x719:      c9                              	leave 
0x71a:      c3                              	ret 
; data inside code section at 0x71b -- 0x71c
0x71b:      90                                                 |.               |
; function: CBlockTreeDB at 0x71c -- 0x78c
0x71c:      55                              	push ebp
0x71d:      89 e5                           	mov ebp, esp
0x71f:      56                              	push esi
0x720:      53                              	push ebx
0x721:      83 ec 50                        	sub esp, 0x50
0x724:      8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x727:      8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x72a:      8b 4d 08                        	mov ecx, dword ptr [ebp + 8]
0x72d:      89 4d d4                        	mov dword ptr [ebp - 0x2c], ecx
0x730:      8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x733:      89 4d d0                        	mov dword ptr [ebp - 0x30], ecx
0x736:      88 55 cc                        	mov byte ptr [ebp - 0x34], dl
0x739:      88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x73c:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x742:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x745:      31 c0                           	xor eax, eax
0x747:      0f b6 75 c8                     	movzx esi, byte ptr [ebp - 0x38]
0x74b:      0f b6 5d cc                     	movzx ebx, byte ptr [ebp - 0x34]
0x74f:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x757:      c7 44 24 04 38 3e 00 00         	mov dword ptr [esp + 4], 0x3e38 ; "index"
0x75f:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x762:      89 04 24                        	mov dword ptr [esp], eax
0x765:      e8 26 ac 00 00                  	call 0xb390 <_ZN5boost11filesystem34pathC1IA6_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE>
0x76a:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x772:      c7 44 24 04 3e 3e 00 00         	mov dword ptr [esp + 4], 0x3e3e ; "blocks"
0x77a:      8d 45 ec                        	lea eax, [ebp - 0x14]
0x77d:      89 04 24                        	mov dword ptr [esp], eax
0x780:      e8 35 ab 00 00                  	call 0xb2ba <_ZN5boost11filesystem34pathC1IA7_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE>
0x785:      c7 04 24 01 00 00 00            	mov dword ptr [esp], 1
; data inside code section at 0x78c -- 0x78d
0x78c:      e8                                                 |.               |
; dynamically linked function: _Z10GetDataDirb at 0x78d -- 0x78e
; data inside code section at 0x78e -- 0x792
0x78e:      ff ff ff 89                                        |....            |
; function: function_792 at 0x792 -- 0x795
0x792:      c2 8d 45                        	ret 0x458d
; data inside code section at 0x795 -- 0x7e5
0x795:      e8 8d 4d ec 89 4c 24 08  89 54 24 04 89 04 24 e8   |..M..L$..T$...$.|
0x7a5:      c6 4d 00 00 83 ec 04 8d  45 e4 8d 55 f0 89 54 24   |.M......E..U..T$|
0x7b5:      08 8d 55 e8 89 54 24 04  89 04 24 e8 aa 4d 00 00   |..U..T$...$..M..|
0x7c5:      83 ec 04 8b 45 d4 89 74  24 10 89 5c 24 0c 8b 55   |....E..t$..\$..U|
0x7d5:      d0 89 54 24 08 8d 55 e4  89 54 24 04 89 04 24 e8   |..T$..U..T$...$.|
; dynamically linked function: _ZN8CLevelDBC2ERKN5boost11filesystem34pathEjbb at 0x7e5 -- 0x7e6
; data inside code section at 0x7e6 -- 0x7e8
0x7e6:      ff ff                                              |..              |
; function: function_7e8 at 0x7e8 -- 0x823
0x7e8:      ff 8d 45 e4 89 04               	dec dword ptr [ebp + 0x489e445]
0x7ee:      24 e8                           	and al, 0xe8
0x7f0:      d8 4c 00 00                     	fmul dword ptr [eax + eax]
0x7f4:      8d 45 e8                        	lea eax, [ebp - 0x18]
0x7f7:      89 04 24                        	mov dword ptr [esp], eax
0x7fa:      e8 cd 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x7ff:      8d 45 ec                        	lea eax, [ebp - 0x14]
0x802:      89 04 24                        	mov dword ptr [esp], eax
0x805:      e8 c2 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x80a:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x80d:      89 04 24                        	mov dword ptr [esp], eax
0x810:      e8 b7 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x815:      8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x818:      65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x81f:      74 4b                           	je 0x86c <function_86c>
0x821:      eb 44                           	jmp 0x867 <function_867>
; function: function_823 at 0x823 -- 0x832
0x823:      89 c3                           	mov ebx, eax
0x825:      8d 45 e4                        	lea eax, [ebp - 0x1c]
0x828:      89 04 24                        	mov dword ptr [esp], eax
0x82b:      e8 9c 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x830:      eb 02                           	jmp 0x834 <function_834>
; function: function_832 at 0x832 -- 0x834
0x832:      89 c3                           	mov ebx, eax
; function: function_834 at 0x834 -- 0x841
0x834:      8d 45 e8                        	lea eax, [ebp - 0x18]
0x837:      89 04 24                        	mov dword ptr [esp], eax
0x83a:      e8 8d 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x83f:      eb 02                           	jmp 0x843 <function_843>
; function: function_841 at 0x841 -- 0x843
0x841:      89 c3                           	mov ebx, eax
; function: function_843 at 0x843 -- 0x850
0x843:      8d 45 ec                        	lea eax, [ebp - 0x14]
0x846:      89 04 24                        	mov dword ptr [esp], eax
0x849:      e8 7e 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x84e:      eb 02                           	jmp 0x852 <function_852>
; function: function_850 at 0x850 -- 0x852
0x850:      89 c3                           	mov ebx, eax
; function: function_852 at 0x852 -- 0x862
0x852:      8d 45 f0                        	lea eax, [ebp - 0x10]
0x855:      89 04 24                        	mov dword ptr [esp], eax
0x858:      e8 6f 4c 00 00                  	call 0x54cc <_ZN5boost11filesystem34pathD1Ev>
0x85d:      89 d8                           	mov eax, ebx
0x85f:      89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x862 -- 0x863
0x862:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x863 -- 0x864
; data inside code section at 0x864 -- 0x867
0x864:      ff ff ff                                           |...             |
; function: function_867 at 0x867 -- 0x86c
0x867:      e8 fc ff ff ff                  	call 0x868
; function: function_86c at 0x86c -- 0x873
0x86c:      8d 65 f8                        	lea esp, [ebp - 8]
0x86f:      5b                              	pop ebx
0x870:      5e                              	pop esi
0x871:      5d                              	pop ebp
0x872:      c3                              	ret 
; data inside code section at 0x873 -- 0x874
0x873:      90                                                 |.               |
; function: _ZN12CBlockTreeDB15WriteBlockIndexERK15CDiskBlockIndex at 0x874 -- 0x924
0x874:      55                              	push ebp
0x875:      89 e5                           	mov ebp, esp
0x877:      81 ec 98 00 00 00               	sub esp, 0x98
0x87d:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x880:      89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x883:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x886:      89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x889:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x88f:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x892:      31 c0                           	xor eax, eax
0x894:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0x897:      8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x89a:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x89e:      89 04 24                        	mov dword ptr [esp], eax
0x8a1:      e8 d0 6a 00 00                  	call 0x7376 <_ZNK15CDiskBlockIndex12GetBlockHashEv>
0x8a6:      83 ec 04                        	sub esp, 4
0x8a9:      8d 45 b0                        	lea eax, [ebp - 0x50]
0x8ac:      8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8af:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0x8b3:      8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8b6:      89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x8ba:      8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x8bd:      89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x8c1:      8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8c4:      89 54 24 14                     	mov dword ptr [esp + 0x14], edx
0x8c8:      8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8cb:      89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x8cf:      8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x8d2:      89 54 24 1c                     	mov dword ptr [esp + 0x1c], edx
0x8d6:      8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8d9:      89 54 24 20                     	mov dword ptr [esp + 0x20], edx
0x8dd:      8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8e0:      89 54 24 24                     	mov dword ptr [esp + 0x24], edx
0x8e4:      c7 44 24 04 62 00 00 00         	mov dword ptr [esp + 4], 0x62
0x8ec:      89 04 24                        	mov dword ptr [esp], eax
0x8ef:      e8 68 9a 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0x8f4:      83 ec 04                        	sub esp, 4
0x8f7:      8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8fa:      c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0x902:      8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x905:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0x909:      8d 55 b0                        	lea edx, [ebp - 0x50]
0x90c:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x910:      89 04 24                        	mov dword ptr [esp], eax
0x913:      e8 4e ab 00 00                  	call 0xb466 <_ZN8CLevelDB5WriteISt4pairIc7uint256E15CDiskBlockIndexEEbRKT_RKT0_b>
0x918:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x91b:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x922:      74 05                           	je 0x929 <function_929>
; data inside code section at 0x924 -- 0x925
0x924:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x925 -- 0x926
; data inside code section at 0x926 -- 0x929
0x926:      ff ff ff                                           |...             |
; function: function_929 at 0x929 -- 0x92b
0x929:      c9                              	leave 
0x92a:      c3                              	ret 
; data inside code section at 0x92b -- 0x92c
0x92b:      90                                                 |.               |
; function: _ZN12CBlockTreeDB19ReadBestInvalidWorkER7CBigNum at 0x92c -- 0x972
0x92c:      55                              	push ebp
0x92d:      89 e5                           	mov ebp, esp
0x92f:      83 ec 38                        	sub esp, 0x38
0x932:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x935:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x938:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x93b:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x93e:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x944:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x947:      31 c0                           	xor eax, eax
0x949:      c6 45 f3 49                     	mov byte ptr [ebp - 0xd], 0x49
0x94d:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x950:      8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x953:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0x957:      8d 55 f3                        	lea edx, [ebp - 0xd]
0x95a:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x95e:      89 04 24                        	mov dword ptr [esp], eax
0x961:      e8 bc ab 00 00                  	call 0xb522 <_ZN8CLevelDB4ReadIc7CBigNumEEbRKT_RT0_>
0x966:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x969:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x970:      74 05                           	je 0x977 <function_977>
; data inside code section at 0x972 -- 0x973
0x972:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x973 -- 0x974
; data inside code section at 0x974 -- 0x977
0x974:      ff ff ff                                           |...             |
; function: function_977 at 0x977 -- 0x979
0x977:      c9                              	leave 
0x978:      c3                              	ret 
; data inside code section at 0x979 -- 0x97a
0x979:      90                                                 |.               |
; function: _ZN12CBlockTreeDB20WriteBestInvalidWorkERK7CBigNum at 0x97a -- 0x9c8
0x97a:      55                              	push ebp
0x97b:      89 e5                           	mov ebp, esp
0x97d:      83 ec 38                        	sub esp, 0x38
0x980:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x983:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x986:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x989:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x98c:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x992:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x995:      31 c0                           	xor eax, eax
0x997:      c6 45 f3 49                     	mov byte ptr [ebp - 0xd], 0x49
0x99b:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x99e:      c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0x9a6:      8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x9a9:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0x9ad:      8d 55 f3                        	lea edx, [ebp - 0xd]
0x9b0:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9b4:      89 04 24                        	mov dword ptr [esp], eax
0x9b7:      e8 0c ae 00 00                  	call 0xb7c8 <_ZN8CLevelDB5WriteIc7CBigNumEEbRKT_RKT0_b>
0x9bc:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9bf:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9c6:      74 05                           	je 0x9cd <function_9cd>
; data inside code section at 0x9c8 -- 0x9c9
0x9c8:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9c9 -- 0x9ca
; data inside code section at 0x9ca -- 0x9cd
0x9ca:      ff ff ff                                           |...             |
; function: function_9cd at 0x9cd -- 0x9cf
0x9cd:      c9                              	leave 
0x9ce:      c3                              	ret 
; data inside code section at 0x9cf -- 0x9d0
0x9cf:      90                                                 |.               |
; function: _ZN12CBlockTreeDB18WriteBlockFileInfoEiRK14CBlockFileInfo at 0x9d0 -- 0xa3d
0x9d0:      55                              	push ebp
0x9d1:      89 e5                           	mov ebp, esp
0x9d3:      83 ec 38                        	sub esp, 0x38
0x9d6:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9d9:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9dc:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9df:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9e2:      8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9e5:      89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9e8:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9ee:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9f1:      31 c0                           	xor eax, eax
0x9f3:      8d 45 ec                        	lea eax, [ebp - 0x14]
0x9f6:      8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x9f9:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0x9fd:      c7 44 24 04 66 00 00 00         	mov dword ptr [esp + 4], 0x66
0xa05:      89 04 24                        	mov dword ptr [esp], eax
0xa08:      e8 77 ae 00 00                  	call 0xb884 <_ZSt9make_pairIciESt4pairIT_T0_ES1_S2_>
0xa0d:      83 ec 04                        	sub esp, 4
0xa10:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa13:      c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0xa1b:      8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xa1e:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0xa22:      8d 55 ec                        	lea edx, [ebp - 0x14]
0xa25:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa29:      89 04 24                        	mov dword ptr [esp], eax
0xa2c:      e8 a7 ae 00 00                  	call 0xb8d8 <_ZN8CLevelDB5WriteISt4pairIciE14CBlockFileInfoEEbRKT_RKT0_b>
0xa31:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa34:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa3b:      74 05                           	je 0xa42 <function_a42>
; data inside code section at 0xa3d -- 0xa3e
0xa3d:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa3e -- 0xa3f
; data inside code section at 0xa3f -- 0xa42
0xa3f:      ff ff ff                                           |...             |
; function: function_a42 at 0xa42 -- 0xa44
0xa42:      c9                              	leave 
0xa43:      c3                              	ret 
; function: _ZN12CBlockTreeDB17ReadBlockFileInfoEiR14CBlockFileInfo at 0xa44 -- 0xab0
0xa44:      55                              	push ebp
0xa45:      89 e5                           	mov ebp, esp
0xa47:      83 ec 38                        	sub esp, 0x38
0xa4a:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa4d:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa50:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa53:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa56:      8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa59:      89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xa5c:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa62:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa65:      31 c0                           	xor eax, eax
0xa67:      8d 45 ec                        	lea eax, [ebp - 0x14]
0xa6a:      8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xa6d:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0xa71:      c7 44 24 04 66 00 00 00         	mov dword ptr [esp + 4], 0x66
0xa79:      89 04 24                        	mov dword ptr [esp], eax
0xa7c:      e8 03 ae 00 00                  	call 0xb884 <_ZSt9make_pairIciESt4pairIT_T0_ES1_S2_>
0xa81:      83 ec 04                        	sub esp, 4
0xa84:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa87:      8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xa8a:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0xa8e:      8d 55 ec                        	lea edx, [ebp - 0x14]
0xa91:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa95:      89 04 24                        	mov dword ptr [esp], eax
0xa98:      e8 f7 ae 00 00                  	call 0xb994 <_ZN8CLevelDB4ReadISt4pairIciE14CBlockFileInfoEEbRKT_RT0_>
0xa9d:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xaa0:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xaa7:      74 05                           	je 0xaae <_ZN12CBlockTreeDB17ReadBlockFileInfoEiR14CBlockFileInfo+0x6a>
0xaa9:      e8 fc ff ff ff                  	call 0xaaa
0xaae:      c9                              	leave 
0xaaf:      c3                              	ret 
; function: _ZN12CBlockTreeDB18WriteLastBlockFileEi at 0xab0 -- 0xafe
0xab0:      55                              	push ebp
0xab1:      89 e5                           	mov ebp, esp
0xab3:      83 ec 38                        	sub esp, 0x38
0xab6:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xab9:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xabc:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xabf:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xac2:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xac8:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xacb:      31 c0                           	xor eax, eax
0xacd:      c6 45 f3 6c                     	mov byte ptr [ebp - 0xd], 0x6c
0xad1:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xad4:      c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0xadc:      8d 55 e0                        	lea edx, [ebp - 0x20]
0xadf:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0xae3:      8d 55 f3                        	lea edx, [ebp - 0xd]
0xae6:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xaea:      89 04 24                        	mov dword ptr [esp], eax
0xaed:      e8 48 b1 00 00                  	call 0xbc3a <_ZN8CLevelDB5WriteIciEEbRKT_RKT0_b>
0xaf2:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xaf5:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xafc:      74 05                           	je 0xb03 <function_b03>
; data inside code section at 0xafe -- 0xaff
0xafe:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaff -- 0xb00
; data inside code section at 0xb00 -- 0xb03
0xb00:      ff ff ff                                           |...             |
; function: function_b03 at 0xb03 -- 0xb05
0xb03:      c9                              	leave 
0xb04:      c3                              	ret 
; data inside code section at 0xb05 -- 0xb06
0xb05:      90                                                 |.               |
; function: _ZN12CBlockTreeDB15WriteReindexingEb at 0xb06 -- 0xb7e
0xb06:      55                              	push ebp
0xb07:      89 e5                           	mov ebp, esp
0xb09:      83 ec 38                        	sub esp, 0x38
0xb0c:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb0f:      8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xb12:      89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xb15:      88 45 e0                        	mov byte ptr [ebp - 0x20], al
0xb18:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb1e:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb21:      31 c0                           	xor eax, eax
0xb23:      80 7d e0 00                     	cmp byte ptr [ebp - 0x20], 0
0xb27:      74 2b                           	je 0xb54 <_ZN12CBlockTreeDB15WriteReindexingEb+0x4e>
0xb29:      c6 45 f2 31                     	mov byte ptr [ebp - 0xe], 0x31
0xb2d:      c6 45 f1 52                     	mov byte ptr [ebp - 0xf], 0x52
0xb31:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb34:      c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0xb3c:      8d 55 f2                        	lea edx, [ebp - 0xe]
0xb3f:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0xb43:      8d 55 f1                        	lea edx, [ebp - 0xf]
0xb46:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb4a:      89 04 24                        	mov dword ptr [esp], eax
0xb4d:      e8 a4 b1 00 00                  	call 0xbcf6 <_ZN8CLevelDB5WriteIccEEbRKT_RKT0_b>
0xb52:      eb 1e                           	jmp 0xb72 <_ZN12CBlockTreeDB15WriteReindexingEb+0x6c>
0xb54:      c6 45 f3 52                     	mov byte ptr [ebp - 0xd], 0x52
0xb58:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb5b:      c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0xb63:      8d 55 f3                        	lea edx, [ebp - 0xd]
0xb66:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb6a:      89 04 24                        	mov dword ptr [esp], eax
0xb6d:      e8 40 b2 00 00                  	call 0xbdb2 <_ZN8CLevelDB5EraseIcEEbRKT_b>
0xb72:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb75:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb7c:      74 05                           	je 0xb83 <function_b83>
; data inside code section at 0xb7e -- 0xb7f
0xb7e:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb7f -- 0xb80
; data inside code section at 0xb80 -- 0xb83
0xb80:      ff ff ff                                           |...             |
; function: function_b83 at 0xb83 -- 0xb85
0xb83:      c9                              	leave 
0xb84:      c3                              	ret 
; data inside code section at 0xb85 -- 0xb86
0xb85:      90                                                 |.               |
; function: _ZN12CBlockTreeDB14ReadReindexingERb at 0xb86 -- 0xbd1
0xb86:      55                              	push ebp
0xb87:      89 e5                           	mov ebp, esp
0xb89:      83 ec 38                        	sub esp, 0x38
0xb8c:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb8f:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb92:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb95:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb98:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb9e:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xba1:      31 c0                           	xor eax, eax
0xba3:      c6 45 f3 52                     	mov byte ptr [ebp - 0xd], 0x52
0xba7:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xbaa:      8d 55 f3                        	lea edx, [ebp - 0xd]
0xbad:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xbb1:      89 04 24                        	mov dword ptr [esp], eax
0xbb4:      e8 a9 b2 00 00                  	call 0xbe62 <_ZN8CLevelDB6ExistsIcEEbRKT_>
0xbb9:      89 c2                           	mov edx, eax
0xbbb:      8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xbbe:      88 10                           	mov byte ptr [eax], dl
0xbc0:      b8 01 00 00 00                  	mov eax, 1
0xbc5:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xbc8:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xbcf:      74 05                           	je 0xbd6 <function_bd6>
; data inside code section at 0xbd1 -- 0xbd2
0xbd1:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xbd2 -- 0xbd3
; data inside code section at 0xbd3 -- 0xbd6
0xbd3:      ff ff ff                                           |...             |
; function: function_bd6 at 0xbd6 -- 0xbd8
0xbd6:      c9                              	leave 
0xbd7:      c3                              	ret 
; function: _ZN12CBlockTreeDB17ReadLastBlockFileERi at 0xbd8 -- 0xc1e
0xbd8:      55                              	push ebp
0xbd9:      89 e5                           	mov ebp, esp
0xbdb:      83 ec 38                        	sub esp, 0x38
0xbde:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xbe1:      89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xbe4:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xbe7:      89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xbea:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xbf0:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xbf3:      31 c0                           	xor eax, eax
0xbf5:      c6 45 f3 6c                     	mov byte ptr [ebp - 0xd], 0x6c
0xbf9:      8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xbfc:      8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xbff:      89 54 24 08                     	mov dword ptr [esp + 8], edx
0xc03:      8d 55 f3                        	lea edx, [ebp - 0xd]
0xc06:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xc0a:      89 04 24                        	mov dword ptr [esp], eax
0xc0d:      e8 42 b4 00 00                  	call 0xc054 <_ZN8CLevelDB4ReadIciEEbRKT_RT0_>
0xc12:      8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc15:      65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc1c:      74 05                           	je 0xc23 <function_c23>
; data inside code section at 0xc1e -- 0xc1f
0xc1e:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc1f -- 0xc20
; data inside code section at 0xc20 -- 0xc23
0xc20:      ff ff ff                                           |...             |
; function: function_c23 at 0xc23 -- 0xc25
0xc23:      c9                              	leave 
0xc24:      c3                              	ret 
; data inside code section at 0xc25 -- 0xc26
0xc25:      90                                                 |.               |
; function: _ZN12CCoinsViewDB8GetStatsER11CCoinsStats at 0xc26 -- 0xd4c
0xc26:      55                              	push ebp
0xc27:      89 e5                           	mov ebp, esp
0xc29:      56                              	push esi
0xc2a:      53                              	push ebx
0xc2b:      81 ec 80 01 00 00               	sub esp, 0x180
0xc31:      8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc34:      89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0xc3a:      8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc3d:      89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0xc43:      65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc49:      89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc4c:      31 c0                           	xor eax, eax
0xc4e:      8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0xc54:      83 c0 04                        	add eax, 4
0xc57:      89 04 24                        	mov dword ptr [esp], eax
0xc5a:      e8 f5 6a 00 00                  	call 0x7754 <_ZN8CLevelDB11NewIteratorEv>
0xc5f:      89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0xc65:      8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0xc6b:      8b 00                           	mov eax, dword ptr [eax]
0xc6d:      83 c0 0c                        	add eax, 0xc
0xc70:      8b 10                           	mov edx, dword ptr [eax]
0xc72:      8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0xc78:      89 04 24                        	mov dword ptr [esp], eax
0xc7b:      ff d2                           	call edx
0xc7d:      c7 44 24 08 80 38 01 00         	mov dword ptr [esp + 8], 0x13880
0xc85:      c7 44 24 04 04 00 00 00         	mov dword ptr [esp + 4], 4
0xc8d:      8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0xc93:      89 04 24                        	mov dword ptr [esp], eax
0xc96:      e8 0f 40 00 00                  	call 0x4caa <_ZN11CHashWriterC1Eii>
0xc9b:      8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0xca1:      8b 00                           	mov eax, dword ptr [eax]
0xca3:      83 c0 0c                        	add eax, 0xc
0xca6:      8b 10                           	mov edx, dword ptr [eax]
0xca8:      8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0xcae:      89 04 24                        	mov dword ptr [esp], eax
0xcb1:      ff d2                           	call edx
0xcb3:      89 c2                           	mov edx, eax
0xcb5:      8b 9d c0 fe ff ff               	mov ebx, dword ptr [ebp - 0x140]
0xcbb:      8d 85 98 fe ff ff               	lea eax, [ebp - 0x168]
0xcc1:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xcc5:      89 04 24                        	mov dword ptr [esp], eax
0xcc8:      e8 af 5f 00 00                  	call 0x6c7c <_ZNK11CBlockIndex12GetBlockHashEv>
0xccd:      83 ec 04                        	sub esp, 4
0xcd0:      8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0xcd6:      89 43 04                        	mov dword ptr [ebx + 4], eax
0xcd9:      8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0xcdf:      89 43 08                        	mov dword ptr [ebx + 8], eax
0xce2:      8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0xce8:      89 43 0c                        	mov dword ptr [ebx + 0xc], eax
0xceb:      8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0xcf1:      89 43 10                        	mov dword ptr [ebx + 0x10], eax
0xcf4:      8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0xcfa:      89 43 14                        	mov dword ptr [ebx + 0x14], eax
0xcfd:      8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0xd03:      89 43 18                        	mov dword ptr [ebx + 0x18], eax
0xd06:      8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0xd0c:      89 43 1c                        	mov dword ptr [ebx + 0x1c], eax
0xd0f:      8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0xd15:      89 43 20                        	mov dword ptr [ebx + 0x20], eax
0xd18:      8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0xd1e:      83 c0 04                        	add eax, 4
0xd21:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd25:      8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0xd2b:      89 04 24                        	mov dword ptr [esp], eax
0xd2e:      e8 25 94 00 00                  	call 0xa158 <_ZN11CHashWriterlsI7uint256EERS_RKT_>
0xd33:      c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0xd3d:      c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0xd47:      e9 2a 04 00 00                  	jmp 0x1176 <function_1176>
; data inside code section at 0xd4c -- 0xd4d
0xd4c:      e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0xd4d -- 0xd4e
; data inside code section at 0xd4e -- 0xd50
0xd4e:      ff ff                                              |..              |
; function: function_d50 at 0xd50 -- 0x1176
0xd50:      ff 8b 85 4c ff ff               	dec dword ptr [ebx - 0xb37b]
0xd56:      ff 8b 00 83 c0 20               	dec dword ptr [ebx + 0x20c08300]
0xd5c:      8b 08                           	mov ecx, dword ptr [eax]
0xd5e:      8d 85 20 ff ff ff               	lea eax, [ebp - 0xe0]
0xd64:      8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0xd6a:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xd6e:      89 04 24                        	mov dword ptr [esp], eax
0xd71:      ff d1                           	call ecx
0xd73:      83 ec 04                        	sub esp, 4
0xd76:      8d 85 20 ff ff ff               	lea eax, [ebp - 0xe0]
0xd7c:      89 04 24                        	mov dword ptr [esp], eax
0xd7f:      e8 0c 68 00 00                  	call 0x7590 <_ZNK7leveldb5Slice4dataEv>
0xd84:      89 c3                           	mov ebx, eax
0xd86:      8d 85 20 ff ff ff               	lea eax, [ebp - 0xe0]
0xd8c:      89 04 24                        	mov dword ptr [esp], eax
0xd8f:      e8 2c 68 00 00                  	call 0x75c0 <_ZNK7leveldb5Slice4sizeEv>
0xd94:      01 c3                           	add ebx, eax
0xd96:      8d 85 20 ff ff ff               	lea eax, [ebp - 0xe0]
0xd9c:      89 04 24                        	mov dword ptr [esp], eax
0xd9f:      e8 ec 67 00 00                  	call 0x7590 <_ZNK7leveldb5Slice4dataEv>
0xda4:      c7 44 24 10 60 90 0f 00         	mov dword ptr [esp + 0x10], 0xf9060
0xdac:      c7 44 24 0c 02 00 00 00         	mov dword ptr [esp + 0xc], 2
0xdb4:      89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xdb8:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xdbc:      8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0xdc2:      89 04 24                        	mov dword ptr [esp], eax
0xdc5:      e8 6c 37 00 00                  	call 0x4536 <_ZN11CDataStreamC1EPKcS1_ii>
0xdca:      8d 85 5a ff ff ff               	lea eax, [ebp - 0xa6]
0xdd0:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xdd4:      8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0xdda:      89 04 24                        	mov dword ptr [esp], eax
0xddd:      e8 18 b5 00 00                  	call 0xc2fa <_ZN11CDataStreamrsIcEERS_RT_>
0xde2:      0f b6 85 5a ff ff ff            	movzx eax, byte ptr [ebp - 0xa6]
0xde9:      3c 63                           	cmp al, 0x63
0xdeb:      0f 85 5f 03 00 00               	jne 0x1150 <function_d50+0x400>
0xdf1:      8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0xdf7:      8b 00                           	mov eax, dword ptr [eax]
0xdf9:      83 c0 24                        	add eax, 0x24
0xdfc:      8b 08                           	mov ecx, dword ptr [eax]
0xdfe:      8d 85 28 ff ff ff               	lea eax, [ebp - 0xd8]
0xe04:      8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0xe0a:      89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe0e:      89 04 24                        	mov dword ptr [esp], eax
0xe11:      ff d1                           	call ecx
0xe13:      83 ec 04                        	sub esp, 4
0xe16:      8d 85 28 ff ff ff               	lea eax, [ebp - 0xd8]
0xe1c:      89 04 24                        	mov dword ptr [esp], eax
0xe1f:      e8 6c 67 00 00                  	call 0x7590 <_ZNK7leveldb5Slice4dataEv>
0xe24:      89 c3                           	mov ebx, eax
0xe26:      8d 85 28 ff ff ff               	lea eax, [ebp - 0xd8]
0xe2c:      89 04 24                        	mov dword ptr [esp], eax
0xe2f:      e8 8c 67 00 00                  	call 0x75c0 <_ZNK7leveldb5Slice4sizeEv>
0xe34:      01 c3                           	add ebx, eax
0xe36:      8d 85 28 ff ff ff               	lea eax, [ebp - 0xd8]
0xe3c:      89 04 24                        	mov dword ptr [esp], eax
0xe3f:      e8 4c 67 00 00                  	call 0x7590 <_ZNK7leveldb5Slice4dataEv>
0xe44:      c7 44 24 10 60 90 0f 00         	mov dword ptr [esp + 0x10], 0xf9060
0xe4c:      c7 44 24 0c 02 00 00 00         	mov dword ptr [esp + 0xc], 2
0xe54:      89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xe58:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe5c:      8d 85 e4 fe ff ff               	lea eax, [ebp - 0x11c]
0xe62:      89 04 24                        	mov dword ptr [esp], eax
0xe65:      e8 cc 36 00 00                  	call 0x4536 <_ZN11CDataStreamC1EPKcS1_ii>
0xe6a:      8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0xe70:      89 04 24                        	mov dword ptr [esp], eax
0xe73:      e8 12 51 00 00                  	call 0x5f8a <_ZN6CCoinsC1Ev>
0xe78:      8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0xe7e:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe82:      8d 85 e4 fe ff ff               	lea eax, [ebp - 0x11c]
0xe88:      89 04 24                        	mov dword ptr [esp], eax
0xe8b:      e8 c4 b4 00 00                  	call 0xc354 <_ZN11CDataStreamrsI6CCoinsEERS_RT_>
0xe90:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0xe93:      89 04 24                        	mov dword ptr [esp], eax
0xe96:      e8 45 18 00 00                  	call 0x26e0 <_ZN7uint256C1Ev>
0xe9b:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0xe9e:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xea2:      8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0xea8:      89 04 24                        	mov dword ptr [esp], eax
0xeab:      e8 fe b4 00 00                  	call 0xc3ae <_ZN11CDataStreamrsI7uint256EERS_RT_>
0xeb0:      8d 45 d4                        	lea eax, [ebp - 0x2c]
0xeb3:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xeb7:      8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0xebd:      89 04 24                        	mov dword ptr [esp], eax
0xec0:      e8 93 92 00 00                  	call 0xa158 <_ZN11CHashWriterlsI7uint256EERS_RKT_>
0xec5:      8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0xecb:      83 c0 14                        	add eax, 0x14
0xece:      89 04 24                        	mov dword ptr [esp], eax
0xed1:      e8 d5 89 00 00                  	call 0x98ab <_Z3REFIiERT_RKS0_>
0xed6:      8d 95 30 ff ff ff               	lea edx, [ebp - 0xd0]
0xedc:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xee0:      89 14 24                        	mov dword ptr [esp], edx
0xee3:      e8 f0 89 00 00                  	call 0x98d8 <_Z10WrapVarIntIiE7CVarIntIT_ERS1_>
0xee8:      83 ec 04                        	sub esp, 4
0xeeb:      8d 85 30 ff ff ff               	lea eax, [ebp - 0xd0]
0xef1:      89 04 24                        	mov dword ptr [esp], eax
0xef4:      e8 26 8a 00 00                  	call 0x991f <_Z3REFI7CVarIntIiEERT_RKS2_>
0xef9:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xefd:      8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0xf03:      89 04 24                        	mov dword ptr [esp], eax
0xf06:      e8 fd b4 00 00                  	call 0xc408 <_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_>
0xf0b:      0f b6 85 00 ff ff ff            	movzx eax, byte ptr [ebp - 0x100]
0xf12:      84 c0                           	test al, al
0xf14:      74 07                           	je 0xf1d <function_d50+0x1cd>
0xf16:      b8 63 00 00 00                  	mov eax, 0x63
0xf1b:      eb 05                           	jmp 0xf22 <function_d50+0x1d2>
0xf1d:      b8 6e 00 00 00                  	mov eax, 0x6e
0xf22:      88 85 5b ff ff ff               	mov byte ptr [ebp - 0xa5], al
0xf28:      8d 85 5b ff ff ff               	lea eax, [ebp - 0xa5]
0xf2e:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf32:      8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0xf38:      89 04 24                        	mov dword ptr [esp], eax
0xf3b:      e8 22 b5 00 00                  	call 0xc462 <_ZN11CHashWriterlsIcEERS_RKT_>
0xf40:      8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0xf46:      83 c0 10                        	add eax, 0x10
0xf49:      89 04 24                        	mov dword ptr [esp], eax
0xf4c:      e8 5a 89 00 00                  	call 0x98ab <_Z3REFIiERT_RKS0_>
0xf51:      8d 95 34 ff ff ff               	lea edx, [ebp - 0xcc]
0xf57:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf5b:      89 14 24                        	mov dword ptr [esp], edx
0xf5e:      e8 75 89 00 00                  	call 0x98d8 <_Z10WrapVarIntIiE7CVarIntIT_ERS1_>
0xf63:      83 ec 04                        	sub esp, 4
0xf66:      8d 85 34 ff ff ff               	lea eax, [ebp - 0xcc]
0xf6c:      89 04 24                        	mov dword ptr [esp], eax
0xf6f:      e8 ab 89 00 00                  	call 0x991f <_Z3REFI7CVarIntIiEERT_RKS2_>
0xf74:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf78:      8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0xf7e:      89 04 24                        	mov dword ptr [esp], eax
0xf81:      e8 82 b4 00 00                  	call 0xc408 <_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_>
0xf86:      8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0xf8c:      8b 50 28                        	mov edx, dword ptr [eax + 0x28]
0xf8f:      8b 40 24                        	mov eax, dword ptr [eax + 0x24]
0xf92:      83 c0 01                        	add eax, 1
0xf95:      83 d2 00                        	adc edx, 0
0xf98:      8b 8d c0 fe ff ff               	mov ecx, dword ptr [ebp - 0x140]
0xf9e:      89 41 24                        	mov dword ptr [ecx + 0x24], eax
0xfa1:      89 51 28                        	mov dword ptr [ecx + 0x28], edx
0xfa4:      c7 85 48 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb8], 0
0xfae:      e9 e0 00 00 00                  	jmp 0x1093 <function_d50+0x343>
0xfb3:      8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0xfb9:      89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfbd:      8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0xfc3:      83 c0 04                        	add eax, 4
0xfc6:      89 04 24                        	mov dword ptr [esp], eax
0xfc9:      e8 f4 b4 00 00                  	call 0xc4c2 <_ZNSt6vectorI6CTxOutSaIS0_EEixEj>
0xfce:      89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0xfd4:      8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0xfda:      89 04 24                        	mov dword ptr [esp], eax
0xfdd:      e8 96 4d 00 00                  	call 0x5d78 <_ZNK6CTxOut6IsNullEv>
0xfe2:      83 f0 01                        	xor eax, 1
0xfe5:      84 c0                           	test al, al
0xfe7:      0f 84 9f 00 00 00               	je 0x108c <function_d50+0x33c>
0xfed:      8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0xff3:      8b 50 30                        	mov edx, dword ptr [eax + 0x30]
0xff6:      8b 40 2c                        	mov eax, dword ptr [eax + 0x2c]
0xff9:      83 c0 01                        	add eax, 1
0xffc:      83 d2 00                        	adc edx, 0
0xfff:      8b 8d c0 fe ff ff               	mov ecx, dword ptr [ebp - 0x140]
0x1005:     89 41 2c                        	mov dword ptr [ecx + 0x2c], eax
0x1008:     89 51 30                        	mov dword ptr [ecx + 0x30], edx
0x100b:     8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x1011:     83 c0 01                        	add eax, 1
0x1014:     89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x101a:     8d 85 38 ff ff ff               	lea eax, [ebp - 0xc8]
0x1020:     89 04 24                        	mov dword ptr [esp], eax
0x1023:     e8 53 84 00 00                  	call 0x947b <_Z3REFIjERT_RKS0_>
0x1028:     8d 95 3c ff ff ff               	lea edx, [ebp - 0xc4]
0x102e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1032:     89 14 24                        	mov dword ptr [esp], edx
0x1035:     e8 6e 84 00 00                  	call 0x94a8 <_Z10WrapVarIntIjE7CVarIntIT_ERS1_>
0x103a:     83 ec 04                        	sub esp, 4
0x103d:     8d 85 3c ff ff ff               	lea eax, [ebp - 0xc4]
0x1043:     89 04 24                        	mov dword ptr [esp], eax
0x1046:     e8 a4 84 00 00                  	call 0x94ef <_Z3REFI7CVarIntIjEERT_RKS2_>
0x104b:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x104f:     8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0x1055:     89 04 24                        	mov dword ptr [esp], eax
0x1058:     e8 a9 b4 00 00                  	call 0xc506 <_ZN11CHashWriterlsI7CVarIntIjEEERS_RKT_>
0x105d:     8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x1063:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1067:     8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0x106d:     89 04 24                        	mov dword ptr [esp], eax
0x1070:     e8 eb b4 00 00                  	call 0xc560 <_ZN11CHashWriterlsI6CTxOutEERS_RKT_>
0x1075:     8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x107b:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x107e:     8b 00                           	mov eax, dword ptr [eax]
0x1080:     01 85 18 ff ff ff               	add dword ptr [ebp - 0xe8], eax
0x1086:     11 95 1c ff ff ff               	adc dword ptr [ebp - 0xe4], edx
0x108c:     83 85 48 ff ff ff 01            	add dword ptr [ebp - 0xb8], 1
0x1093:     8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0x1099:     83 c0 04                        	add eax, 4
0x109c:     89 04 24                        	mov dword ptr [esp], eax
0x109f:     e8 6c 8a 00 00                  	call 0x9b10 <_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv>
0x10a4:     3b 85 48 ff ff ff               	cmp eax, dword ptr [ebp - 0xb8]
0x10aa:     0f 97 c0                        	seta al
0x10ad:     84 c0                           	test al, al
0x10af:     0f 85 fe fe ff ff               	jne 0xfb3 <function_d50+0x263>
0x10b5:     8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x10bb:     8b 58 34                        	mov ebx, dword ptr [eax + 0x34]
0x10be:     8b 70 38                        	mov esi, dword ptr [eax + 0x38]
0x10c1:     8d 85 28 ff ff ff               	lea eax, [ebp - 0xd8]
0x10c7:     89 04 24                        	mov dword ptr [esp], eax
0x10ca:     e8 f1 64 00 00                  	call 0x75c0 <_ZNK7leveldb5Slice4sizeEv>
0x10cf:     83 c0 20                        	add eax, 0x20
0x10d2:     ba 00 00 00 00                  	mov edx, 0
0x10d7:     01 d8                           	add eax, ebx
0x10d9:     11 f2                           	adc edx, esi
0x10db:     8b 8d c0 fe ff ff               	mov ecx, dword ptr [ebp - 0x140]
0x10e1:     89 41 34                        	mov dword ptr [ecx + 0x34], eax
0x10e4:     89 51 38                        	mov dword ptr [ecx + 0x38], edx
0x10e7:     c7 85 40 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc0], 0
0x10f1:     8d 85 40 ff ff ff               	lea eax, [ebp - 0xc0]
0x10f7:     89 04 24                        	mov dword ptr [esp], eax
0x10fa:     e8 ac 87 00 00                  	call 0x98ab <_Z3REFIiERT_RKS0_>
0x10ff:     8d 95 44 ff ff ff               	lea edx, [ebp - 0xbc]
0x1105:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1109:     89 14 24                        	mov dword ptr [esp], edx
0x110c:     e8 c7 87 00 00                  	call 0x98d8 <_Z10WrapVarIntIiE7CVarIntIT_ERS1_>
0x1111:     83 ec 04                        	sub esp, 4
0x1114:     8d 85 44 ff ff ff               	lea eax, [ebp - 0xbc]
0x111a:     89 04 24                        	mov dword ptr [esp], eax
0x111d:     e8 fd 87 00 00                  	call 0x991f <_Z3REFI7CVarIntIiEERT_RKS2_>
0x1122:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1126:     8d 85 5c ff ff ff               	lea eax, [ebp - 0xa4]
0x112c:     89 04 24                        	mov dword ptr [esp], eax
0x112f:     e8 d4 b2 00 00                  	call 0xc408 <_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_>
0x1134:     8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0x113a:     89 04 24                        	mov dword ptr [esp], eax
0x113d:     e8 92 66 00 00                  	call 0x77d4 <_ZN6CCoinsD1Ev>
0x1142:     8d 85 e4 fe ff ff               	lea eax, [ebp - 0x11c]
0x1148:     89 04 24                        	mov dword ptr [esp], eax
0x114b:     e8 0e 35 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1150:     8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x1156:     8b 00                           	mov eax, dword ptr [eax]
0x1158:     83 c0 18                        	add eax, 0x18
0x115b:     8b 10                           	mov edx, dword ptr [eax]
0x115d:     8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x1163:     89 04 24                        	mov dword ptr [esp], eax
0x1166:     ff d2                           	call edx
0x1168:     8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0x116e:     89 04 24                        	mov dword ptr [esp], eax
0x1171:     e8 e8 34 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
; function: function_1176 at 0x1176 -- 0x1277
0x1176:     8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x117c:     8b 00                           	mov eax, dword ptr [eax]
0x117e:     83 c0 08                        	add eax, 8
0x1181:     8b 10                           	mov edx, dword ptr [eax]
0x1183:     8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x1189:     89 04 24                        	mov dword ptr [esp], eax
0x118c:     ff d2                           	call edx
0x118e:     84 c0                           	test al, al
0x1190:     0f 85 b6 fb ff ff               	jne 0xd4c
0x1196:     83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x119d:     74 18                           	je 0x11b7 <function_1176+0x41>
0x119f:     8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x11a5:     8b 00                           	mov eax, dword ptr [eax]
0x11a7:     83 c0 04                        	add eax, 4
0x11aa:     8b 10                           	mov edx, dword ptr [eax]
0x11ac:     8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x11b2:     89 04 24                        	mov dword ptr [esp], eax
0x11b5:     ff d2                           	call edx
0x11b7:     8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x11bd:     8b 00                           	mov eax, dword ptr [eax]
0x11bf:     83 c0 0c                        	add eax, 0xc
0x11c2:     8b 10                           	mov edx, dword ptr [eax]
0x11c4:     8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x11ca:     89 04 24                        	mov dword ptr [esp], eax
0x11cd:     ff d2                           	call edx
0x11cf:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x11d2:     8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x11d8:     89 10                           	mov dword ptr [eax], edx
0x11da:     8b 9d c0 fe ff ff               	mov ebx, dword ptr [ebp - 0x140]
0x11e0:     8d 85 98 fe ff ff               	lea eax, [ebp - 0x168]
0x11e6:     8d 95 5c ff ff ff               	lea edx, [ebp - 0xa4]
0x11ec:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11f0:     89 04 24                        	mov dword ptr [esp], eax
0x11f3:     e8 58 3b 00 00                  	call 0x4d50 <_ZN11CHashWriter7GetHashEv>
0x11f8:     83 ec 04                        	sub esp, 4
0x11fb:     8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x1201:     89 43 3c                        	mov dword ptr [ebx + 0x3c], eax
0x1204:     8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x120a:     89 43 40                        	mov dword ptr [ebx + 0x40], eax
0x120d:     8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x1213:     89 43 44                        	mov dword ptr [ebx + 0x44], eax
0x1216:     8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x121c:     89 43 48                        	mov dword ptr [ebx + 0x48], eax
0x121f:     8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x1225:     89 43 4c                        	mov dword ptr [ebx + 0x4c], eax
0x1228:     8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x122e:     89 43 50                        	mov dword ptr [ebx + 0x50], eax
0x1231:     8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x1237:     89 43 54                        	mov dword ptr [ebx + 0x54], eax
0x123a:     8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x1240:     89 43 58                        	mov dword ptr [ebx + 0x58], eax
0x1243:     8b 8d c0 fe ff ff               	mov ecx, dword ptr [ebp - 0x140]
0x1249:     8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x124f:     8b 95 1c ff ff ff               	mov edx, dword ptr [ebp - 0xe4]
0x1255:     89 41 5c                        	mov dword ptr [ecx + 0x5c], eax
0x1258:     89 51 60                        	mov dword ptr [ecx + 0x60], edx
0x125b:     bb 01 00 00 00                  	mov ebx, 1
0x1260:     89 d8                           	mov eax, ebx
0x1262:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1265:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x126c:     0f 84 96 00 00 00               	je 0x1308 <function_1308>
0x1272:     e9 8c 00 00 00                  	jmp 0x1303 <function_1303>
; function: function_1277 at 0x1277 -- 0x128b
0x1277:     89 c6                           	mov esi, eax
0x1279:     89 d3                           	mov ebx, edx
0x127b:     8d 85 00 ff ff ff               	lea eax, [ebp - 0x100]
0x1281:     89 04 24                        	mov dword ptr [esp], eax
0x1284:     e8 4b 65 00 00                  	call 0x77d4 <_ZN6CCoinsD1Ev>
0x1289:     eb 04                           	jmp 0x128f <function_128f>
; function: function_128b at 0x128b -- 0x128f
0x128b:     89 c6                           	mov esi, eax
0x128d:     89 d3                           	mov ebx, edx
; function: function_128f at 0x128f -- 0x129f
0x128f:     8d 85 e4 fe ff ff               	lea eax, [ebp - 0x11c]
0x1295:     89 04 24                        	mov dword ptr [esp], eax
0x1298:     e8 c1 33 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x129d:     eb 04                           	jmp 0x12a3 <function_12a3>
; function: function_129f at 0x129f -- 0x12a3
0x129f:     89 c6                           	mov esi, eax
0x12a1:     89 d3                           	mov ebx, edx
; function: function_12a3 at 0x12a3 -- 0x12b7
0x12a3:     8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0x12a9:     89 04 24                        	mov dword ptr [esp], eax
0x12ac:     e8 ad 33 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x12b1:     89 f0                           	mov eax, esi
0x12b3:     89 da                           	mov edx, ebx
0x12b5:     eb 11                           	jmp 0x12c8 <function_12c8>
; data inside code section at 0x12b7 -- 0x12b8
0x12b7:     89                                                 |.               |
; function: function_12b8 at 0x12b8 -- 0x12b9
0x12b8:     c3                              	ret 
; data inside code section at 0x12b9 -- 0x12ba
0x12b9:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x12ba -- 0x12bb
; data inside code section at 0x12bb -- 0x12c4
0x12bb:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x12c4 -- 0x12c5
; data inside code section at 0x12c5 -- 0x12c8
0x12c5:     ff ff ff                                           |...             |
; function: function_12c8 at 0x12c8 -- 0x12d0
0x12c8:     83 fa 01                        	cmp edx, 1
0x12cb:     74 08                           	je 0x12d5 <function_12d5>
0x12cd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x12d0 -- 0x12d1
0x12d0:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x12d1 -- 0x12d2
; data inside code section at 0x12d2 -- 0x12d5
0x12d2:     ff ff ff                                           |...             |
; function: function_12d5 at 0x12d5 -- 0x12d8
0x12d5:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x12d8 -- 0x12d9
0x12d8:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x12d9 -- 0x12da
; data inside code section at 0x12da -- 0x12f3
0x12da:     ff ff ff 89 85 54 ff ff  ff c7 44 24 04 e4 41 00   |.....T....D$..A.|
0x12ea:     00 c7 04 24 45 3e 00 00  e8                        |...$E>...       |
; dynamically linked function: _Z5errorPKcz at 0x12f3 -- 0x12f4
; data inside code section at 0x12f4 -- 0x12f8
0x12f4:     ff ff ff 89                                        |....            |
; function: function_12f8 at 0x12f8 -- 0x12f9
0x12f8:     c3                              	ret 
; data inside code section at 0x12f9 -- 0x12fa
0x12f9:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x12fa -- 0x12fb
; data inside code section at 0x12fb -- 0x12fe
0x12fb:     ff ff ff                                           |...             |
; function: function_12fe at 0x12fe -- 0x1303
0x12fe:     e9 5d ff ff ff                  	jmp 0x1260
; function: function_1303 at 0x1303 -- 0x1304
; dynamically linked function: __stack_chk_fail at 0x1304 -- 0x1305
; data inside code section at 0x1305 -- 0x1308
0x1305:     ff ff ff                                           |...             |
; function: function_1308 at 0x1308 -- 0x130f
0x1308:     8d 65 f8                        	lea esp, [ebp - 8]
0x130b:     5b                              	pop ebx
0x130c:     5e                              	pop esi
0x130d:     5d                              	pop ebp
0x130e:     c3                              	ret 
; data inside code section at 0x130f -- 0x1310
0x130f:     90                                                 |.               |
; function: _ZN12CBlockTreeDB11ReadTxIndexERK7uint256R10CDiskTxPos at 0x1310 -- 0x13a8
0x1310:     55                              	push ebp
0x1311:     89 e5                           	mov ebp, esp
0x1313:     83 ec 78                        	sub esp, 0x78
0x1316:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1319:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x131c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x131f:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x1322:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1325:     89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x1328:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x132e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1331:     31 c0                           	xor eax, eax
0x1333:     8d 55 d0                        	lea edx, [ebp - 0x30]
0x1336:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1339:     8b 08                           	mov ecx, dword ptr [eax]
0x133b:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x133f:     8b 48 04                        	mov ecx, dword ptr [eax + 4]
0x1342:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x1346:     8b 48 08                        	mov ecx, dword ptr [eax + 8]
0x1349:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0x134d:     8b 48 0c                        	mov ecx, dword ptr [eax + 0xc]
0x1350:     89 4c 24 14                     	mov dword ptr [esp + 0x14], ecx
0x1354:     8b 48 10                        	mov ecx, dword ptr [eax + 0x10]
0x1357:     89 4c 24 18                     	mov dword ptr [esp + 0x18], ecx
0x135b:     8b 48 14                        	mov ecx, dword ptr [eax + 0x14]
0x135e:     89 4c 24 1c                     	mov dword ptr [esp + 0x1c], ecx
0x1362:     8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0x1365:     89 4c 24 20                     	mov dword ptr [esp + 0x20], ecx
0x1369:     8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x136c:     89 44 24 24                     	mov dword ptr [esp + 0x24], eax
0x1370:     c7 44 24 04 74 00 00 00         	mov dword ptr [esp + 4], 0x74
0x1378:     89 14 24                        	mov dword ptr [esp], edx
0x137b:     e8 dc 8f 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0x1380:     83 ec 04                        	sub esp, 4
0x1383:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1386:     8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x1389:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x138d:     8d 55 d0                        	lea edx, [ebp - 0x30]
0x1390:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1394:     89 04 24                        	mov dword ptr [esp], eax
0x1397:     e8 1e b2 00 00                  	call 0xc5ba <_ZN8CLevelDB4ReadISt4pairIc7uint256E10CDiskTxPosEEbRKT_RT0_>
0x139c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x139f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13a6:     74 05                           	je 0x13ad <function_13ad>
; data inside code section at 0x13a8 -- 0x13a9
0x13a8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13a9 -- 0x13aa
; data inside code section at 0x13aa -- 0x13ad
0x13aa:     ff ff ff                                           |...             |
; function: function_13ad at 0x13ad -- 0x13af
0x13ad:     c9                              	leave 
0x13ae:     c3                              	ret 
; data inside code section at 0x13af -- 0x13b0
0x13af:     90                                                 |.               |
; function: _ZN12CBlockTreeDB12WriteTxIndexERKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS4_EE at 0x13b0 -- 0x14d3
0x13b0:     55                              	push ebp
0x13b1:     89 e5                           	mov ebp, esp
0x13b3:     53                              	push ebx
0x13b4:     81 ec 84 00 00 00               	sub esp, 0x84
0x13ba:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13bd:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x13c0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13c3:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x13c6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13cc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13cf:     31 c0                           	xor eax, eax
0x13d1:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x13d4:     89 04 24                        	mov dword ptr [esp], eax
0x13d7:     e8 0c 63 00 00                  	call 0x76e8 <_ZN13CLevelDBBatchC1Ev>
0x13dc:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x13df:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x13e2:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13e6:     89 04 24                        	mov dword ptr [esp], eax
0x13e9:     e8 72 b4 00 00                  	call 0xc860 <_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE5beginEv>
0x13ee:     83 ec 04                        	sub esp, 4
0x13f1:     e9 99 00 00 00                  	jmp 0x148f <_ZN12CBlockTreeDB12WriteTxIndexERKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS4_EE+0xdf>
0x13f6:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x13f9:     89 04 24                        	mov dword ptr [esp], eax
0x13fc:     e8 b1 b5 00 00                  	call 0xc9b2 <_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv>
0x1401:     8d 58 20                        	lea ebx, [eax + 0x20]
0x1404:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x1407:     89 04 24                        	mov dword ptr [esp], eax
0x140a:     e8 a3 b5 00 00                  	call 0xc9b2 <_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv>
0x140f:     8d 55 d0                        	lea edx, [ebp - 0x30]
0x1412:     8b 08                           	mov ecx, dword ptr [eax]
0x1414:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x1418:     8b 48 04                        	mov ecx, dword ptr [eax + 4]
0x141b:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x141f:     8b 48 08                        	mov ecx, dword ptr [eax + 8]
0x1422:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0x1426:     8b 48 0c                        	mov ecx, dword ptr [eax + 0xc]
0x1429:     89 4c 24 14                     	mov dword ptr [esp + 0x14], ecx
0x142d:     8b 48 10                        	mov ecx, dword ptr [eax + 0x10]
0x1430:     89 4c 24 18                     	mov dword ptr [esp + 0x18], ecx
0x1434:     8b 48 14                        	mov ecx, dword ptr [eax + 0x14]
0x1437:     89 4c 24 1c                     	mov dword ptr [esp + 0x1c], ecx
0x143b:     8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0x143e:     89 4c 24 20                     	mov dword ptr [esp + 0x20], ecx
0x1442:     8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x1445:     89 44 24 24                     	mov dword ptr [esp + 0x24], eax
0x1449:     c7 44 24 04 74 00 00 00         	mov dword ptr [esp + 4], 0x74
0x1451:     89 14 24                        	mov dword ptr [esp], edx
0x1454:     e8 03 8f 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0x1459:     83 ec 04                        	sub esp, 4
0x145c:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x1460:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x1463:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1467:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x146a:     89 04 24                        	mov dword ptr [esp], eax
0x146d:     e8 70 b5 00 00                  	call 0xc9e2 <_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E10CDiskTxPosEEvRKT_RKT0_>
0x1472:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x1475:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x147d:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x1480:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1484:     89 04 24                        	mov dword ptr [esp], eax
0x1487:     e8 c8 b4 00 00                  	call 0xc954 <_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEppEi>
0x148c:     83 ec 04                        	sub esp, 4
0x148f:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x1492:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x1495:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1499:     89 04 24                        	mov dword ptr [esp], eax
0x149c:     e8 0f b4 00 00                  	call 0xc8b0 <_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE3endEv>
0x14a1:     83 ec 04                        	sub esp, 4
0x14a4:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x14a7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14ab:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x14ae:     89 04 24                        	mov dword ptr [esp], eax
0x14b1:     e8 4a b4 00 00                  	call 0xc900 <_ZN9__gnu_cxxneIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_>
0x14b6:     84 c0                           	test al, al
0x14b8:     0f 85 38 ff ff ff               	jne 0x13f6 <_ZN12CBlockTreeDB12WriteTxIndexERKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS4_EE+0x46>
0x14be:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x14c1:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x14c9:     8d 55 c0                        	lea edx, [ebp - 0x40]
0x14cc:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x14d0:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x14d3 -- 0x14d4
0x14d3:     e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0x14d4 -- 0x14d5
; data inside code section at 0x14d5 -- 0x14d7
0x14d5:     ff ff                                              |..              |
; function: function_14d7 at 0x14d7 -- 0x14f5
0x14d7:     ff 89 c3 8d 45 c0               	dec dword ptr [ecx - 0x3fba723d]
0x14dd:     89 04 24                        	mov dword ptr [esp], eax
0x14e0:     e8 39 62 00 00                  	call 0x771e <_ZN13CLevelDBBatchD1Ev>
0x14e5:     89 d8                           	mov eax, ebx
0x14e7:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14ea:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14f1:     74 1e                           	je 0x1511 <function_1511>
0x14f3:     eb 17                           	jmp 0x150c <function_150c>
; data inside code section at 0x14f5 -- 0x14f6
0x14f5:     89                                                 |.               |
; function: function_14f6 at 0x14f6 -- 0x14f7
0x14f6:     c3                              	ret 
; data inside code section at 0x14f7 -- 0x1508
0x14f7:     8d 45 c0 89 04 24 e8 1c  62 00 00 89 d8 89 04 24   |.E...$..b......$|
0x1507:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1508 -- 0x1509
; data inside code section at 0x1509 -- 0x150c
0x1509:     ff ff ff                                           |...             |
; function: function_150c at 0x150c -- 0x150d
; dynamically linked function: __stack_chk_fail at 0x150d -- 0x150e
; data inside code section at 0x150e -- 0x1511
0x150e:     ff ff ff                                           |...             |
; function: function_1511 at 0x1511 -- 0x1516
0x1511:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1514:     c9                              	leave 
0x1515:     c3                              	ret 
; function: _ZN12CBlockTreeDB9WriteFlagERKSsb at 0x1516 -- 0x155c
0x1516:     55                              	push ebp
0x1517:     89 e5                           	mov ebp, esp
0x1519:     53                              	push ebx
0x151a:     83 ec 44                        	sub esp, 0x44
0x151d:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1520:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x1523:     89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x1526:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x1529:     89 55 d0                        	mov dword ptr [ebp - 0x30], edx
0x152c:     88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x152f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1535:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1538:     31 c0                           	xor eax, eax
0x153a:     80 7d cc 00                     	cmp byte ptr [ebp - 0x34], 0
0x153e:     74 07                           	je 0x1547 <_ZN12CBlockTreeDB9WriteFlagERKSsb+0x31>
0x1540:     b8 31 00 00 00                  	mov eax, 0x31
0x1545:     eb 05                           	jmp 0x154c <_ZN12CBlockTreeDB9WriteFlagERKSsb+0x36>
0x1547:     b8 30 00 00 00                  	mov eax, 0x30
0x154c:     88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x154f:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x1552:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1556:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x1559:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x155c -- 0x155d
0x155c:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x155d -- 0x155e
; data inside code section at 0x155e -- 0x15a0
0x155e:     ff ff ff 8d 45 e4 8d 55  ec 89 54 24 08 c7 44 24   |....E..U..T$..D$|
0x156e:     04 46 00 00 00 89 04 24  e8 fb b5 00 00 83 ec 04   |.F.....$........|
0x157e:     8b 45 d4 c7 44 24 0c 00  00 00 00 8d 55 f3 89 54   |.E..D$......U..T|
0x158e:     24 08 8d 55 e4 89 54 24  04 89 04 24 e8 2b b6 00   |$..U..T$...$.+..|
0x159e:     00 89                                              |..              |
; function: function_15a0 at 0x15a0 -- 0x15a1
0x15a0:     c3                              	ret 
; data inside code section at 0x15a1 -- 0x15b3
0x15a1:     8d 45 e4 89 04 24 e8 60  62 00 00 8d 45 ec 89 04   |.E...$.`b...E...|
0x15b1:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsD1Ev at 0x15b3 -- 0x15b4
; data inside code section at 0x15b4 -- 0x15b6
0x15b4:     ff ff                                              |..              |
; function: function_15b6 at 0x15b6 -- 0x15c7
0x15b6:     ff 89 d8 8b 55 f4               	dec dword ptr [ecx - 0xbaa7428]
0x15bc:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x15c3:     74 2d                           	je 0x15f2 <function_15f2>
0x15c5:     eb 26                           	jmp 0x15ed <function_15ed>
; function: function_15c7 at 0x15c7 -- 0x15d6
0x15c7:     89 c3                           	mov ebx, eax
0x15c9:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x15cc:     89 04 24                        	mov dword ptr [esp], eax
0x15cf:     e8 38 62 00 00                  	call 0x780c <_ZNSt4pairIcSsED1Ev>
0x15d4:     eb 02                           	jmp 0x15d8 <function_15d8>
; function: function_15d6 at 0x15d6 -- 0x15d8
0x15d6:     89 c3                           	mov ebx, eax
; function: function_15d8 at 0x15d8 -- 0x15de
0x15d8:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x15db:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x15de -- 0x15df
0x15de:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x15df -- 0x15e0
; data inside code section at 0x15e0 -- 0x15e9
0x15e0:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x15e9 -- 0x15ea
; data inside code section at 0x15ea -- 0x15ed
0x15ea:     ff ff ff                                           |...             |
; function: function_15ed at 0x15ed -- 0x15ee
; dynamically linked function: __stack_chk_fail at 0x15ee -- 0x15ef
; data inside code section at 0x15ef -- 0x15f2
0x15ef:     ff ff ff                                           |...             |
; function: function_15f2 at 0x15f2 -- 0x15f7
0x15f2:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x15f5:     c9                              	leave 
0x15f6:     c3                              	ret 
; data inside code section at 0x15f7 -- 0x15f8
0x15f7:     90                                                 |.               |
; function: _ZN12CBlockTreeDB8ReadFlagERKSsRb at 0x15f8 -- 0x1629
0x15f8:     55                              	push ebp
0x15f9:     89 e5                           	mov ebp, esp
0x15fb:     53                              	push ebx
0x15fc:     83 ec 44                        	sub esp, 0x44
0x15ff:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1602:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1605:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1608:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x160b:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x160e:     89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1611:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1617:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x161a:     31 c0                           	xor eax, eax
0x161c:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x161f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1623:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x1626:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1629 -- 0x162a
0x1629:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x162a -- 0x162b
; data inside code section at 0x162b -- 0x1665
0x162b:     ff ff ff 8d 45 e4 8d 55  ec 89 54 24 08 c7 44 24   |....E..U..T$..D$|
0x163b:     04 46 00 00 00 89 04 24  e8 2e b5 00 00 83 ec 04   |.F.....$........|
0x164b:     8b 45 d4 8d 55 f3 89 54  24 08 8d 55 e4 89 54 24   |.E..U..T$..U..T$|
0x165b:     04 89 04 24 e8 22 b6 00  00 89                     |...$."....      |
; function: function_1665 at 0x1665 -- 0x1666
0x1665:     c3                              	ret 
; data inside code section at 0x1666 -- 0x167b
0x1666:     83 f3 01 8d 45 e4 89 04  24 e8 98 61 00 00 8d 45   |....E...$..a...E|
0x1676:     ec 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZNSsD1Ev at 0x167b -- 0x167c
; data inside code section at 0x167c -- 0x167e
0x167c:     ff ff                                              |..              |
; function: function_167e at 0x167e -- 0x16ab
0x167e:     ff 84 db 74 07 b8 00            	inc dword ptr [ebx + ebx*8 + 0xb80774]
0x1685:     00 00                           	add byte ptr [eax], al
0x1687:     00 eb                           	add bl, ch
0x1689:     13 0f                           	adc ecx, dword ptr [edi]
0x168b:     b6 45                           	mov dh, 0x45
0x168d:     f3 3c 31                        	cmp al, 0x31
0x1690:     0f 94 c2                        	sete dl
0x1693:     8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x1696:     88 10                           	mov byte ptr [eax], dl
0x1698:     b8 01 00 00 00                  	mov eax, 1
0x169d:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16a0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16a7:     74 2d                           	je 0x16d6 <function_16d6>
0x16a9:     eb 26                           	jmp 0x16d1 <function_16d1>
; function: function_16ab at 0x16ab -- 0x16ba
0x16ab:     89 c3                           	mov ebx, eax
0x16ad:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x16b0:     89 04 24                        	mov dword ptr [esp], eax
0x16b3:     e8 54 61 00 00                  	call 0x780c <_ZNSt4pairIcSsED1Ev>
0x16b8:     eb 02                           	jmp 0x16bc <function_16bc>
; function: function_16ba at 0x16ba -- 0x16bc
0x16ba:     89 c3                           	mov ebx, eax
; function: function_16bc at 0x16bc -- 0x16c2
0x16bc:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x16bf:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x16c2 -- 0x16c3
0x16c2:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x16c3 -- 0x16c4
; data inside code section at 0x16c4 -- 0x16cd
0x16c4:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16cd -- 0x16ce
; data inside code section at 0x16ce -- 0x16d1
0x16ce:     ff ff ff                                           |...             |
; function: function_16d1 at 0x16d1 -- 0x16d2
; dynamically linked function: __stack_chk_fail at 0x16d2 -- 0x16d3
; data inside code section at 0x16d3 -- 0x16d6
0x16d3:     ff ff ff                                           |...             |
; function: function_16d6 at 0x16d6 -- 0x16db
0x16d6:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x16d9:     c9                              	leave 
0x16da:     c3                              	ret 
; data inside code section at 0x16db -- 0x16dc
0x16db:     90                                                 |.               |
; function: _ZN12CBlockTreeDB18LoadBlockIndexGutsEv at 0x16dc -- 0x180f
0x16dc:     55                              	push ebp
0x16dd:     89 e5                           	mov ebp, esp
0x16df:     56                              	push esi
0x16e0:     53                              	push ebx
0x16e1:     81 ec e0 01 00 00               	sub esp, 0x1e0
0x16e7:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16ea:     89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x16f0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16f6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16f9:     31 c0                           	xor eax, eax
0x16fb:     8b 85 54 fe ff ff               	mov eax, dword ptr [ebp - 0x1ac]
0x1701:     89 04 24                        	mov dword ptr [esp], eax
0x1704:     e8 4b 60 00 00                  	call 0x7754 <_ZN8CLevelDB11NewIteratorEv>
0x1709:     89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x170f:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x1717:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x171f:     8d 85 58 fe ff ff               	lea eax, [ebp - 0x1a8]
0x1725:     89 04 24                        	mov dword ptr [esp], eax
0x1728:     e8 af 2d 00 00                  	call 0x44dc <_ZN11CDataStreamC1Eii>
0x172d:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x1735:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x173d:     8d 45 94                        	lea eax, [ebp - 0x6c]
0x1740:     89 04 24                        	mov dword ptr [esp], eax
0x1743:     e8 f2 0f 00 00                  	call 0x273a <_ZN7uint256C1Ey>
0x1748:     8d 85 70 ff ff ff               	lea eax, [ebp - 0x90]
0x174e:     8b 55 94                        	mov edx, dword ptr [ebp - 0x6c]
0x1751:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1755:     8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x1758:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x175c:     8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x175f:     89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x1763:     8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x1766:     89 54 24 14                     	mov dword ptr [esp + 0x14], edx
0x176a:     8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x176d:     89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x1771:     8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x1774:     89 54 24 1c                     	mov dword ptr [esp + 0x1c], edx
0x1778:     8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x177b:     89 54 24 20                     	mov dword ptr [esp + 0x20], edx
0x177f:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x1782:     89 54 24 24                     	mov dword ptr [esp + 0x24], edx
0x1786:     c7 44 24 04 62 00 00 00         	mov dword ptr [esp + 4], 0x62
0x178e:     89 04 24                        	mov dword ptr [esp], eax
0x1791:     e8 c6 8b 00 00                  	call 0xa35c <_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_>
0x1796:     83 ec 04                        	sub esp, 4
0x1799:     8d 85 70 ff ff ff               	lea eax, [ebp - 0x90]
0x179f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17a3:     8d 85 58 fe ff ff               	lea eax, [ebp - 0x1a8]
0x17a9:     89 04 24                        	mov dword ptr [esp], eax
0x17ac:     e8 7b b7 00 00                  	call 0xcf2c <_ZN11CDataStreamlsISt4pairIc7uint256EEERS_RKT_>
0x17b1:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x17b7:     8b 00                           	mov eax, dword ptr [eax]
0x17b9:     83 c0 14                        	add eax, 0x14
0x17bc:     8b 18                           	mov ebx, dword ptr [eax]
0x17be:     8d 85 c4 fe ff ff               	lea eax, [ebp - 0x13c]
0x17c4:     8d 95 58 fe ff ff               	lea edx, [ebp - 0x1a8]
0x17ca:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17ce:     89 04 24                        	mov dword ptr [esp], eax
0x17d1:     e8 be 2e 00 00                  	call 0x4694 <_ZNK11CDataStream3strEv>
0x17d6:     83 ec 04                        	sub esp, 4
0x17d9:     8d 85 c4 fe ff ff               	lea eax, [ebp - 0x13c]
0x17df:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17e3:     8d 85 ac fe ff ff               	lea eax, [ebp - 0x154]
0x17e9:     89 04 24                        	mov dword ptr [esp], eax
0x17ec:     e8 49 5d 00 00                  	call 0x753a <_ZN7leveldb5SliceC1ERKSs>
0x17f1:     8d 85 ac fe ff ff               	lea eax, [ebp - 0x154]
0x17f7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17fb:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1801:     89 04 24                        	mov dword ptr [esp], eax
0x1804:     ff d3                           	call ebx
0x1806:     8d 85 c4 fe ff ff               	lea eax, [ebp - 0x13c]
0x180c:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x180f -- 0x1810
0x180f:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x1810 -- 0x1811
; data inside code section at 0x1811 -- 0x1814
0x1811:     ff ff ff                                           |...             |
; function: function_1814 at 0x1814 -- 0x1819
0x1814:     e9 fe 03 00 00                  	jmp 0x1c17
; function: function_1819 at 0x1819 -- 0x181a
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x181a -- 0x181b
; data inside code section at 0x181b -- 0x1852
0x181b:     ff ff ff 8b 85 cc fe ff  ff 8b 00 83 c0 20 8b 08   |............. ..|
0x182b:     8d 85 b4 fe ff ff 8b 95  cc fe ff ff 89 54 24 04   |.............T$.|
0x183b:     89 04 24 ff d1 83 ec 04  8d 85 b4 fe ff ff 89 04   |..$.............|
0x184b:     24 e8 3f 5d 00 00 89                               |$.?]...         |
; function: function_1852 at 0x1852 -- 0x1853
0x1852:     c3                              	ret 
; data inside code section at 0x1853 -- 0x1860
0x1853:     8d 85 b4 fe ff ff 89 04  24 e8 5f 5d 00            |........$._].   |
; function: function_1860 at 0x1860 -- 0x1863
0x1860:     00 01                           	add byte ptr [ecx], al
0x1862:     c3                              	ret 
; data inside code section at 0x1863 -- 0x18f2
0x1863:     8d 85 b4 fe ff ff 89 04  24 e8 1f 5d 00 00 c7 44   |........$..]...D|
0x1873:     24 10 60 90 0f 00 c7 44  24 0c 02 00 00 00 89 5c   |$.`....D$......\|
0x1883:     24 08 89 44 24 04 8d 85  74 fe ff ff 89 04 24 e8   |$..D$...t.....$.|
0x1893:     9f 2c 00 00 8d 85 db fe  ff ff 89 44 24 04 8d 85   |.,.........D$...|
0x18a3:     74 fe ff ff 89 04 24 e8  4b aa 00 00 0f b6 85 db   |t.....$.K.......|
0x18b3:     fe ff ff 3c 62 0f 85 36  03 00 00 8b 85 cc fe ff   |...<b..6........|
0x18c3:     ff 8b 00 83 c0 24 8b 08  8d 85 bc fe ff ff 8b 95   |.....$..........|
0x18d3:     cc fe ff ff 89 54 24 04  89 04 24 ff d1 83 ec 04   |.....T$...$.....|
0x18e3:     8d 85 bc fe ff ff 89 04  24 e8 9f 5c 00 00 89      |........$..\... |
; function: function_18f2 at 0x18f2 -- 0x18f3
0x18f2:     c3                              	ret 
; data inside code section at 0x18f3 -- 0x18f4
0x18f3:     8d                                                 |.               |
; function: function_18f4 at 0x18f4 -- 0x1903
0x18f4:     85 bc fe ff ff 89 04            	test dword ptr [esi + edi*8 + 0x489ffff], edi
0x18fb:     24 e8                           	and al, 0xe8
0x18fd:     bf 5c 00 00 01                  	mov edi, 0x100005c
0x1902:     c3                              	ret 
; data inside code section at 0x1903 -- 0x1931
0x1903:     8d 85 bc fe ff ff 89 04  24 e8 7f 5c 00 00 c7 44   |........$..\...D|
0x1913:     24 10 60 90 0f 00 c7 44  24 0c 02 00 00 00 89 5c   |$.`....D$......\|
0x1923:     24 08 89 44 24 04 8d 85  90 fe ff ff 89 04         |$..D$.........  |
; function: function_1931 at 0x1931 -- 0x1935
0x1931:     24 e8                           	and al, 0xe8
0x1933:     ff 2b                           	ljmp [ebx]
; data inside code section at 0x1935 -- 0x19ad
0x1935:     00 00 8d 85 dc fe ff ff  89 04 24 e8 dd 55 00 00   |..........$..U..|
0x1945:     8d 85 dc fe ff ff 89 44  24 04 8d 85 90 fe ff ff   |.......D$.......|
0x1955:     89 04 24 e8 29 b6 00 00  8d 45 b4 8d 95 dc fe ff   |..$.)....E......|
0x1965:     ff 89 54 24 04 89 04 24  e8 04 5a 00 00 83 ec 04   |..T$...$..Z.....|
0x1975:     8b 45 b4 89 04 24 8b 45  b8 89 44 24 04 8b 45 bc   |.E...$.E..D$..E.|
0x1985:     89 44 24 08 8b 45 c0 89  44 24 0c 8b 45 c4 89 44   |.D$..E..D$..E..D|
0x1995:     24 10 8b 45 c8 89 44 24  14 8b 45 cc 89 44 24 18   |$..E..D$..E..D$.|
0x19a5:     8b 45 d0 89 44 24 1c e8                            |.E..D$..        |
; dynamically linked function: _Z16InsertBlockIndex7uint256 at 0x19ad -- 0x19ae
; data inside code section at 0x19ae -- 0x1a07
0x19ae:     ff ff ff 89 85 d0 fe ff  ff 8b 85 50 ff ff ff 89   |...........P....|
0x19be:     04 24 8b 85 54 ff ff ff  89 44 24 04 8b 85 58 ff   |.$..T....D$...X.|
0x19ce:     ff ff 89 44 24 08 8b 85  5c ff ff ff 89 44 24 0c   |...D$...\....D$.|
0x19de:     8b 85 60 ff ff ff 89 44  24 10 8b 85 64 ff ff ff   |..`....D$...d...|
0x19ee:     89 44 24 14 8b 85 68 ff  ff ff 89 44 24 18 8b 85   |.D$...h....D$...|
0x19fe:     6c ff ff ff 89 44 24 1c  e8                        |l....D$..       |
; dynamically linked function: _Z16InsertBlockIndex7uint256 at 0x1a07 -- 0x1a08
; data inside code section at 0x1a08 -- 0x1a0c
0x1a08:     ff ff ff 89                                        |....            |
; function: function_1a0c at 0x1a0c -- 0x1a0f
0x1a0c:     c2 8b 85                        	ret 0x858b
; data inside code section at 0x1a0f -- 0x1afb
0x1a0f:     d0 fe ff ff 89 50 04 8b  95 e4 fe ff ff 8b 85 d0   |.....P..........|
0x1a1f:     fe ff ff 89 50 08 8b 95  e8 fe ff ff 8b 85 d0 fe   |....P...........|
0x1a2f:     ff ff 89 50 0c 8b 95 ec  fe ff ff 8b 85 d0 fe ff   |...P............|
0x1a3f:     ff 89 50 10 8b 95 f0 fe  ff ff 8b 85 d0 fe ff ff   |..P.............|
0x1a4f:     89 50 14 8b 95 20 ff ff  ff 8b 85 d0 fe ff ff 89   |.P... ..........|
0x1a5f:     50 44 8b 85 d0 fe ff ff  8b 95 24 ff ff ff 89 50   |PD........$....P|
0x1a6f:     48 8b 95 28 ff ff ff 89  50 4c 8b 95 2c ff ff ff   |H..(....PL..,...|
0x1a7f:     89 50 50 8b 95 30 ff ff  ff 89 50 54 8b 95 34 ff   |.PP..0....PT..4.|
0x1a8f:     ff ff 89 50 58 8b 95 38  ff ff ff 89 50 5c 8b 95   |...PX..8....P\..|
0x1a9f:     3c ff ff ff 89 50 60 8b  95 40 ff ff ff 89 50 64   |<....P`..@....Pd|
0x1aaf:     8b 95 44 ff ff ff 8b 85  d0 fe ff ff 89 50 68 8b   |..D..........Ph.|
0x1abf:     95 48 ff ff ff 8b 85 d0  fe ff ff 89 50 6c 8b 95   |.H..........Pl..|
0x1acf:     4c ff ff ff 8b 85 d0 fe  ff ff 89 50 70 8b 95 1c   |L..........Pp...|
0x1adf:     ff ff ff 8b 85 d0 fe ff  ff 89 50 40 8b 95 14 ff   |..........P@....|
0x1aef:     ff ff 8b 85 d0 fe ff ff  89 50 38 a1               |.........P8.    |
; dynamically linked function: pindexGenesisBlock at 0x1afb -- 0x1b03
; data inside code section at 0x1b03 -- 0x1b04
0x1b03:     e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x1b04 -- 0x1b05
; data inside code section at 0x1b05 -- 0x1b07
0x1b05:     ff ff                                              |..              |
; function: function_1b07 at 0x1b07 -- 0x1b44
0x1b07:     ff 89 04 24 e8 92               	dec dword ptr [ecx - 0x6d17dbfc]
0x1b0d:     4b                              	dec ebx
0x1b0e:     00 00                           	add byte ptr [eax], al
0x1b10:     89 c3                           	mov ebx, eax
0x1b12:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x1b15:     8d 95 dc fe ff ff               	lea edx, [ebp - 0x124]
0x1b1b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1b1f:     89 04 24                        	mov dword ptr [esp], eax
0x1b22:     e8 4f 58 00 00                  	call 0x7376 <_ZNK15CDiskBlockIndex12GetBlockHashEv>
0x1b27:     83 ec 04                        	sub esp, 4
0x1b2a:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x1b2e:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x1b31:     89 04 24                        	mov dword ptr [esp], eax
0x1b34:     e8 9f 0d 00 00                  	call 0x28d8 <_ZeqRK7uint256S1_>
0x1b39:     84 c0                           	test al, al
0x1b3b:     74 07                           	je 0x1b44 <function_1b44>
0x1b3d:     b8 01 00 00 00                  	mov eax, 1
0x1b42:     eb 05                           	jmp 0x1b49
; function: function_1b44 at 0x1b44 -- 0x1b53
0x1b44:     b8 00 00 00 00                  	mov eax, 0
0x1b49:     84 c0                           	test al, al
0x1b4b:     74 0b                           	je 0x1b58 <function_1b58>
0x1b4d:     8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
; data inside code section at 0x1b53 -- 0x1b54
0x1b53:     a3                                                 |.               |
; dynamically linked function: pindexGenesisBlock at 0x1b54 -- 0x1b58
; function: function_1b58 at 0x1b58 -- 0x1b91
0x1b58:     8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x1b5e:     89 04 24                        	mov dword ptr [esp], eax
0x1b61:     e8 ec 51 00 00                  	call 0x6d52 <_ZNK11CBlockIndex10CheckIndexEv>
0x1b66:     83 f0 01                        	xor eax, 1
0x1b69:     84 c0                           	test al, al
0x1b6b:     74 50                           	je 0x1bbd <function_1bbd>
0x1b6d:     8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0x1b73:     8b 95 d0 fe ff ff               	mov edx, dword ptr [ebp - 0x130]
0x1b79:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1b7d:     89 04 24                        	mov dword ptr [esp], eax
0x1b80:     e8 79 52 00 00                  	call 0x6dfe <_ZNK11CBlockIndex8ToStringEv>
0x1b85:     83 ec 04                        	sub esp, 4
0x1b88:     8d 85 c8 fe ff ff               	lea eax, [ebp - 0x138]
0x1b8e:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1b91 -- 0x1b92
0x1b91:     e8                                                 |.               |
; dynamically linked function: _ZNKSs5c_strEv at 0x1b92 -- 0x1b93
; data inside code section at 0x1b93 -- 0x1ba2
0x1b93:     ff ff ff 89 44 24 04 c7  04 24 60 3e 00 00 e8      |....D$...$`>... |
; dynamically linked function: _Z5errorPKcz at 0x1ba2 -- 0x1ba3
; data inside code section at 0x1ba3 -- 0x1bb2
0x1ba3:     ff ff ff 89 c6 8d 85 c8  fe ff ff 89 04 24 e8      |.............$. |
; dynamically linked function: _ZNSsD1Ev at 0x1bb2 -- 0x1bb3
; data inside code section at 0x1bb3 -- 0x1bb6
0x1bb3:     ff ff ff                                           |...             |
; function: function_1bb6 at 0x1bb6 -- 0x1bbd
0x1bb6:     bb 00 00 00 00                  	mov ebx, 0
0x1bbb:     eb 1d                           	jmp 0x1bda
; function: function_1bbd at 0x1bbd -- 0x1c82
0x1bbd:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1bc3:     8b 00                           	mov eax, dword ptr [eax]
0x1bc5:     83 c0 18                        	add eax, 0x18
0x1bc8:     8b 10                           	mov edx, dword ptr [eax]
0x1bca:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1bd0:     89 04 24                        	mov dword ptr [esp], eax
0x1bd3:     ff d2                           	call edx
0x1bd5:     bb 01 00 00 00                  	mov ebx, 1
0x1bda:     8d 85 90 fe ff ff               	lea eax, [ebp - 0x170]
0x1be0:     89 04 24                        	mov dword ptr [esp], eax
0x1be3:     e8 76 2a 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1be8:     83 fb 01                        	cmp ebx, 1
0x1beb:     74 0e                           	je 0x1bfb <function_1bbd+0x3e>
0x1bed:     bb 00 00 00 00                  	mov ebx, 0
0x1bf2:     eb 0c                           	jmp 0x1c00 <function_1bbd+0x43>
0x1bf4:     bb 01 00 00 00                  	mov ebx, 1
0x1bf9:     eb 05                           	jmp 0x1c00 <function_1bbd+0x43>
0x1bfb:     bb 02 00 00 00                  	mov ebx, 2
0x1c00:     8d 85 74 fe ff ff               	lea eax, [ebp - 0x18c]
0x1c06:     89 04 24                        	mov dword ptr [esp], eax
0x1c09:     e8 50 2a 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1c0e:     85 db                           	test ebx, ebx
0x1c10:     74 4b                           	je 0x1c5d <function_1bbd+0xa0>
0x1c12:     83 fb 02                        	cmp ebx, 2
0x1c15:     75 20                           	jne 0x1c37 <function_1bbd+0x7a>
0x1c17:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1c1d:     8b 00                           	mov eax, dword ptr [eax]
0x1c1f:     83 c0 08                        	add eax, 8
0x1c22:     8b 10                           	mov edx, dword ptr [eax]
0x1c24:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1c2a:     89 04 24                        	mov dword ptr [esp], eax
0x1c2d:     ff d2                           	call edx
0x1c2f:     84 c0                           	test al, al
0x1c31:     0f 85 e2 fb ff ff               	jne 0x1819 <function_1819>
0x1c37:     83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x1c3e:     74 18                           	je 0x1c58 <function_1bbd+0x9b>
0x1c40:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1c46:     8b 00                           	mov eax, dword ptr [eax]
0x1c48:     83 c0 04                        	add eax, 4
0x1c4b:     8b 10                           	mov edx, dword ptr [eax]
0x1c4d:     8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x1c53:     89 04 24                        	mov dword ptr [esp], eax
0x1c56:     ff d2                           	call edx
0x1c58:     be 01 00 00 00                  	mov esi, 1
0x1c5d:     8d 85 58 fe ff ff               	lea eax, [ebp - 0x1a8]
0x1c63:     89 04 24                        	mov dword ptr [esp], eax
0x1c66:     e8 f3 29 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1c6b:     89 f0                           	mov eax, esi
0x1c6d:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1c70:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1c77:     0f 84 b9 00 00 00               	je 0x1d36 <function_1d36>
0x1c7d:     e9 af 00 00 00                  	jmp 0x1d31 <function_1d31>
; data inside code section at 0x1c82 -- 0x1c83
0x1c82:     89                                                 |.               |
; function: function_1c83 at 0x1c83 -- 0x1c84
0x1c83:     c3                              	ret 
; data inside code section at 0x1c84 -- 0x1c8e
0x1c84:     8d 85 c4 fe ff ff 89 04  24 e8                     |........$.      |
; dynamically linked function: _ZNSsD1Ev at 0x1c8e -- 0x1c8f
; data inside code section at 0x1c8f -- 0x1c92
0x1c8f:     ff ff ff                                           |...             |
; function: function_1c92 at 0x1c92 -- 0x1c97
0x1c92:     e9 82 00 00 00                  	jmp 0x1d19 <function_1d19>
; data inside code section at 0x1c97 -- 0x1ca5
0x1c97:     89 c6 89 d3 8d 85 c8 fe  ff ff 89 04 24 e8         |............$.  |
; dynamically linked function: _ZNSsD1Ev at 0x1ca5 -- 0x1ca6
; data inside code section at 0x1ca6 -- 0x1ca9
0x1ca6:     ff ff ff                                           |...             |
; function: function_1ca9 at 0x1ca9 -- 0x1cab
0x1ca9:     eb 04                           	jmp 0x1caf <function_1caf>
; function: function_1cab at 0x1cab -- 0x1caf
0x1cab:     89 c6                           	mov esi, eax
0x1cad:     89 d3                           	mov ebx, edx
; function: function_1caf at 0x1caf -- 0x1cbf
0x1caf:     8d 85 90 fe ff ff               	lea eax, [ebp - 0x170]
0x1cb5:     89 04 24                        	mov dword ptr [esp], eax
0x1cb8:     e8 a1 29 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1cbd:     eb 04                           	jmp 0x1cc3 <function_1cc3>
; function: function_1cbf at 0x1cbf -- 0x1cc3
0x1cbf:     89 c6                           	mov esi, eax
0x1cc1:     89 d3                           	mov ebx, edx
; function: function_1cc3 at 0x1cc3 -- 0x1cd7
0x1cc3:     8d 85 74 fe ff ff               	lea eax, [ebp - 0x18c]
0x1cc9:     89 04 24                        	mov dword ptr [esp], eax
0x1ccc:     e8 8d 29 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1cd1:     89 f0                           	mov eax, esi
0x1cd3:     89 da                           	mov edx, ebx
0x1cd5:     eb 09                           	jmp 0x1ce0 <function_1ce0>
; data inside code section at 0x1cd7 -- 0x1cd8
0x1cd7:     89                                                 |.               |
; function: function_1cd8 at 0x1cd8 -- 0x1cd9
0x1cd8:     c3                              	ret 
; data inside code section at 0x1cd9 -- 0x1cda
0x1cd9:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1cda -- 0x1cdb
; data inside code section at 0x1cdb -- 0x1cde
0x1cdb:     ff ff ff                                           |...             |
; function: function_1cde at 0x1cde -- 0x1ce0
0x1cde:     eb 39                           	jmp 0x1d19 <function_1d19>
; function: function_1ce0 at 0x1ce0 -- 0x1cec
0x1ce0:     83 fa 01                        	cmp edx, 1
0x1ce3:     74 04                           	je 0x1ce9 <function_1ce0+0x9>
0x1ce5:     89 c3                           	mov ebx, eax
0x1ce7:     eb 30                           	jmp 0x1d19 <function_1d19>
0x1ce9:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1cec -- 0x1ced
0x1cec:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x1ced -- 0x1cee
; data inside code section at 0x1cee -- 0x1d07
0x1cee:     ff ff ff 89 85 d4 fe ff  ff c7 44 24 04 24 41 00   |..........D$.$A.|
0x1cfe:     00 c7 04 24 45 3e 00 00  e8                        |...$E>...       |
; dynamically linked function: _Z5errorPKcz at 0x1d07 -- 0x1d08
; data inside code section at 0x1d08 -- 0x1d0e
0x1d08:     ff ff ff 89 c6 e8                                  |......          |
; dynamically linked function: __cxa_end_catch at 0x1d0e -- 0x1d0f
; data inside code section at 0x1d0f -- 0x1d12
0x1d0f:     ff ff ff                                           |...             |
; function: function_1d12 at 0x1d12 -- 0x1d17
0x1d12:     e9 46 ff ff ff                  	jmp 0x1c5d
; data inside code section at 0x1d17 -- 0x1d18
0x1d17:     89                                                 |.               |
; function: function_1d18 at 0x1d18 -- 0x1d19
0x1d18:     c3                              	ret 
; function: function_1d19 at 0x1d19 -- 0x1d2c
0x1d19:     8d 85 58 fe ff ff               	lea eax, [ebp - 0x1a8]
0x1d1f:     89 04 24                        	mov dword ptr [esp], eax
0x1d22:     e8 37 29 00 00                  	call 0x465e <_ZN11CDataStreamD1Ev>
0x1d27:     89 d8                           	mov eax, ebx
0x1d29:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1d2c -- 0x1d2d
0x1d2c:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1d2d -- 0x1d2e
; data inside code section at 0x1d2e -- 0x1d31
0x1d2e:     ff ff ff                                           |...             |
; function: function_1d31 at 0x1d31 -- 0x1d32
; dynamically linked function: __stack_chk_fail at 0x1d32 -- 0x1d33
; data inside code section at 0x1d33 -- 0x1d36
0x1d33:     ff ff ff                                           |...             |
; function: function_1d36 at 0x1d36 -- 0x1d3d
0x1d36:     8d 65 f8                        	lea esp, [ebp - 8]
0x1d39:     5b                              	pop ebx
0x1d3a:     5e                              	pop esi
0x1d3b:     5d                              	pop ebp
0x1d3c:     c3                              	ret 
; function: __static_initialization_and_destruction_0 at 0x1d3d -- 0x1d78
0x1d3d:     55                              	push ebp
0x1d3e:     89 e5                           	mov ebp, esp
0x1d40:     83 ec 38                        	sub esp, 0x38
0x1d43:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1d46:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1d49:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1d4c:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1d4f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1d55:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1d58:     31 c0                           	xor eax, eax
0x1d5a:     83 7d e4 01                     	cmp dword ptr [ebp - 0x1c], 1
0x1d5e:     0f 85 01 01 00 00               	jne 0x1e65 <function_1e65>
0x1d64:     81 7d e0 ff ff 00 00            	cmp dword ptr [ebp - 0x20], 0xffff
0x1d6b:     0f 85 f4 00 00 00               	jne 0x1e65 <function_1e65>
0x1d71:     c7 04 24 b0 1e 00 00            	mov dword ptr [esp], 0x1eb0
; data inside code section at 0x1d78 -- 0x1d79
0x1d78:     e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x1d79 -- 0x1d7a
; data inside code section at 0x1d7a -- 0x1d7e
0x1d7a:     ff ff ff b8                                        |....            |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x1d7e -- 0x1d82
; data inside code section at 0x1d82 -- 0x1d86
0x1d82:     c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x1d86 -- 0x1d95
; data inside code section at 0x1d95 -- 0x1d96
0x1d95:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x1d96 -- 0x1d97
; data inside code section at 0x1d97 -- 0x1e33
0x1d97:     ff ff ff c7 04 24 b1 1e  00 00 e8 7c 69 00 00 c7   |.....$.....|i...|
0x1da7:     04 24 b2 1e 00 00 e8 9a  69 00 00 c7 04 24 b3 1e   |.$......i....$..|
0x1db7:     00 00 e8 b8 69 00 00 c7  04 24 b4 1e 00 00 e8 d6   |....i....$......|
0x1dc7:     69 00 00 c7 04 24 b5 1e  00 00 e8 f4 69 00 00 c7   |i....$......i...|
0x1dd7:     04 24 b6 1e 00 00 e8 12  6a 00 00 c7 04 24 b7 1e   |.$......j....$..|
0x1de7:     00 00 e8 30 6a 00 00 c7  04 24 b8 1e 00 00 e8 4e   |...0j....$.....N|
0x1df7:     6a 00 00 c7 04 24 b9 1e  00 00 e8 6c 6a 00 00 b8   |j....$.....lj...|
0x1e07:     74 b9 01 00 0f b6 00 84  c0 75 35 b8 74 b9 01 00   |t........u5.t...|
0x1e17:     c6 00 01 b8 70 b9 01 00  89 04 24 e8 55 6d 00 00   |....p.....$.Um..|
0x1e27:     83 ec 04 b8 3e 4e 00 00  c7 44 24 08               |....>N...D$.    |
; dynamically linked function: __dso_handle at 0x1e33 -- 0x1e42
; data inside code section at 0x1e42 -- 0x1e43
0x1e42:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x1e43 -- 0x1e44
; data inside code section at 0x1e44 -- 0x1e4b
0x1e44:     ff ff ff e8 fc ff ff                               |.......         |
; function: function_1e4b at 0x1e4b -- 0x1e51
0x1e4b:     ff a3 bc 1e 00 00               	jmp dword ptr [ebx + 0x1ebc]
; data inside code section at 0x1e51 -- 0x1e52
0x1e51:     e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x1e52 -- 0x1e53
; data inside code section at 0x1e53 -- 0x1e55
0x1e53:     ff ff                                              |..              |
; function: function_1e55 at 0x1e55 -- 0x1e5b
0x1e55:     ff a3 c0 1e 00 00               	jmp dword ptr [ebx + 0x1ec0]
; data inside code section at 0x1e5b -- 0x1e5c
0x1e5b:     e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x1e5c -- 0x1e5d
; data inside code section at 0x1e5d -- 0x1e5f
0x1e5d:     ff ff                                              |..              |
; function: function_1e5f at 0x1e5f -- 0x1e65
0x1e5f:     ff a3 c4 1e 00 00               	jmp dword ptr [ebx + 0x1ec4]
; function: function_1e65 at 0x1e65 -- 0x1e71
0x1e65:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1e68:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1e6f:     74 05                           	je 0x1e76 <function_1e76>
; data inside code section at 0x1e71 -- 0x1e72
0x1e71:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e72 -- 0x1e73
; data inside code section at 0x1e73 -- 0x1e76
0x1e73:     ff ff ff                                           |...             |
; function: function_1e76 at 0x1e76 -- 0x1e78
0x1e76:     c9                              	leave 
0x1e77:     c3                              	ret 
; function: _GLOBAL__sub_I__ZN12CCoinsViewDBC2Ejbb at 0x1e78 -- 0x1ea9
0x1e78:     55                              	push ebp
0x1e79:     89 e5                           	mov ebp, esp
0x1e7b:     83 ec 28                        	sub esp, 0x28
0x1e7e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1e84:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1e87:     31 c0                           	xor eax, eax
0x1e89:     c7 44 24 04 ff ff 00 00         	mov dword ptr [esp + 4], 0xffff
0x1e91:     c7 04 24 01 00 00 00            	mov dword ptr [esp], 1
0x1e98:     e8 a0 fe ff ff                  	call 0x1d3d <__static_initialization_and_destruction_0>
0x1e9d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1ea0:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1ea7:     74 05                           	je 0x1eae <function_1eae>
; data inside code section at 0x1ea9 -- 0x1eaa
0x1ea9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1eaa -- 0x1eab
; data inside code section at 0x1eab -- 0x1eae
0x1eab:     ff ff ff                                           |...             |
; function: function_1eae at 0x1eae -- 0x1eb0
0x1eae:     c9                              	leave 
0x1eaf:     c3                              	ret 
; section: .text._ZNSt11char_traitsIcE6assignERcRKc
; function: _ZNSt11char_traitsIcE6assignERcRKc at 0x1eb0 -- 0x1eeb
0x1eb0:     55                              	push ebp
0x1eb1:     89 e5                           	mov ebp, esp
0x1eb3:     83 ec 28                        	sub esp, 0x28
0x1eb6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1eb9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ebc:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1ebf:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1ec2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ec8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1ecb:     31 c0                           	xor eax, eax
0x1ecd:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1ed0:     0f b6 10                        	movzx edx, byte ptr [eax]
0x1ed3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1ed6:     88 10                           	mov byte ptr [eax], dl
0x1ed8:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1edb:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1ee2:     74 05                           	je 0x1ee9 <_ZNSt11char_traitsIcE6assignERcRKc+0x39>
0x1ee4:     e8 fc ff ff ff                  	call 0x1ee5
0x1ee9:     c9                              	leave 
0x1eea:     c3                              	ret 
; section: .text._ZNSt9exceptionC2Ev
; function: _ZNSt9exceptionC1Ev at 0x1eec -- 0x1f18
0x1eec:     55                              	push ebp
0x1eed:     89 e5                           	mov ebp, esp
0x1eef:     83 ec 28                        	sub esp, 0x28
0x1ef2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ef5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ef8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1efe:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1f01:     31 c0                           	xor eax, eax
0x1f03:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1f06:     c7 00 08 00 00 00               	mov dword ptr [eax], 8
0x1f0c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1f0f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1f16:     74 05                           	je 0x1f1d <function_1f1d>
; data inside code section at 0x1f18 -- 0x1f19
0x1f18:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1f19 -- 0x1f1a
; data inside code section at 0x1f1a -- 0x1f1d
0x1f1a:     ff ff ff                                           |...             |
; function: function_1f1d at 0x1f1d -- 0x1f1f
0x1f1d:     c9                              	leave 
0x1f1e:     c3                              	ret 
; section: .text._ZNSt9bad_allocC2Ev
; function: _ZNSt9bad_allocC1Ev at 0x1f20 -- 0x1f5e
0x1f20:     55                              	push ebp
0x1f21:     89 e5                           	mov ebp, esp
0x1f23:     83 ec 38                        	sub esp, 0x38
0x1f26:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1f29:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1f2c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1f32:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1f35:     31 c0                           	xor eax, eax
0x1f37:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1f3a:     89 04 24                        	mov dword ptr [esp], eax
0x1f3d:     e8 ca 1e 00 00                  	call 0x3e0c <function_3e0c>
0x1f42:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1f45:     c7 00 08 00 00 00               	mov dword ptr [eax], 8
0x1f4b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1f4e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1f55:     74 05                           	je 0x1f5c <_ZNSt9bad_allocC1Ev+0x3c>
0x1f57:     e8 fc ff ff ff                  	call 0x1f58
0x1f5c:     c9                              	leave 
0x1f5d:     c3                              	ret 
; section: .text._ZnwjPv
; function: _ZnwjPv at 0x1f5e -- 0x1f8a
0x1f5e:     55                              	push ebp
0x1f5f:     89 e5                           	mov ebp, esp
0x1f61:     83 ec 28                        	sub esp, 0x28
0x1f64:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1f67:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1f6a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1f6d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1f70:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1f76:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1f79:     31 c0                           	xor eax, eax
0x1f7b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1f7e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1f81:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1f88:     74 05                           	je 0x1f8f <function_1f8f>
; data inside code section at 0x1f8a -- 0x1f8b
0x1f8a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1f8b -- 0x1f8c
; data inside code section at 0x1f8c -- 0x1f8f
0x1f8c:     ff ff ff                                           |...             |
; function: function_1f8f at 0x1f8f -- 0x1f91
0x1f8f:     c9                              	leave 
0x1f90:     c3                              	ret 
; section: .text._ZdlPvS_
; function: _ZdlPvS_ at 0x1f91 -- 0x1fba
0x1f91:     55                              	push ebp
0x1f92:     89 e5                           	mov ebp, esp
0x1f94:     83 ec 28                        	sub esp, 0x28
0x1f97:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1f9a:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1f9d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1fa0:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1fa3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1fa9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1fac:     31 c0                           	xor eax, eax
0x1fae:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1fb1:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1fb8:     74 05                           	je 0x1fbf <function_1fbf>
; data inside code section at 0x1fba -- 0x1fbb
0x1fba:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1fbb -- 0x1fbc
; data inside code section at 0x1fbc -- 0x1fbf
0x1fbc:     ff ff ff                                           |...             |
; function: function_1fbf at 0x1fbf -- 0x1fc1
0x1fbf:     c9                              	leave 
0x1fc0:     c3                              	ret 
; section: .text._ZNSt14_Bit_referenceC2EPmm
; function: _ZNSt14_Bit_referenceC1EPmm at 0x1fc2 -- 0x2009
0x1fc2:     55                              	push ebp
0x1fc3:     89 e5                           	mov ebp, esp
0x1fc5:     83 ec 28                        	sub esp, 0x28
0x1fc8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1fcb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1fce:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1fd1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1fd4:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1fd7:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1fda:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1fe0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1fe3:     31 c0                           	xor eax, eax
0x1fe5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1fe8:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1feb:     89 10                           	mov dword ptr [eax], edx
0x1fed:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1ff0:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1ff3:     89 50 04                        	mov dword ptr [eax + 4], edx
0x1ff6:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1ff9:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2000:     74 05                           	je 0x2007 <_ZNSt14_Bit_referenceC1EPmm+0x45>
0x2002:     e8 fc ff ff ff                  	call 0x2003
0x2007:     c9                              	leave 
0x2008:     c3                              	ret 
; section: .text._ZNKSt14_Bit_referencecvbEv
; function: _ZNKSt14_Bit_referencecvbEv at 0x200a -- 0x2041
0x200a:     55                              	push ebp
0x200b:     89 e5                           	mov ebp, esp
0x200d:     83 ec 28                        	sub esp, 0x28
0x2010:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2013:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2016:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x201c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x201f:     31 c0                           	xor eax, eax
0x2021:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2024:     8b 00                           	mov eax, dword ptr [eax]
0x2026:     8b 10                           	mov edx, dword ptr [eax]
0x2028:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x202b:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x202e:     21 d0                           	and eax, edx
0x2030:     85 c0                           	test eax, eax
0x2032:     0f 95 c0                        	setne al
0x2035:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x2038:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x203f:     74 05                           	je 0x2046 <function_2046>
; data inside code section at 0x2041 -- 0x2042
0x2041:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2042 -- 0x2043
; data inside code section at 0x2043 -- 0x2046
0x2043:     ff ff ff                                           |...             |
; function: function_2046 at 0x2046 -- 0x2048
0x2046:     c9                              	leave 
0x2047:     c3                              	ret 
; section: .text._ZNSt14_Bit_referenceaSEb
; function: _ZNSt14_Bit_referenceaSEb at 0x2048 -- 0x20b1
0x2048:     55                              	push ebp
0x2049:     89 e5                           	mov ebp, esp
0x204b:     83 ec 28                        	sub esp, 0x28
0x204e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2051:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x2054:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x2057:     88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x205a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2060:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2063:     31 c0                           	xor eax, eax
0x2065:     80 7d e0 00                     	cmp byte ptr [ebp - 0x20], 0
0x2069:     74 18                           	je 0x2083 <_ZNSt14_Bit_referenceaSEb+0x3b>
0x206b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x206e:     8b 00                           	mov eax, dword ptr [eax]
0x2070:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x2073:     8b 12                           	mov edx, dword ptr [edx]
0x2075:     8b 0a                           	mov ecx, dword ptr [edx]
0x2077:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x207a:     8b 52 04                        	mov edx, dword ptr [edx + 4]
0x207d:     09 ca                           	or edx, ecx
0x207f:     89 10                           	mov dword ptr [eax], edx
0x2081:     eb 18                           	jmp 0x209b <_ZNSt14_Bit_referenceaSEb+0x53>
0x2083:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2086:     8b 00                           	mov eax, dword ptr [eax]
0x2088:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x208b:     8b 12                           	mov edx, dword ptr [edx]
0x208d:     8b 0a                           	mov ecx, dword ptr [edx]
0x208f:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x2092:     8b 52 04                        	mov edx, dword ptr [edx + 4]
0x2095:     f7 d2                           	not edx
0x2097:     21 ca                           	and edx, ecx
0x2099:     89 10                           	mov dword ptr [eax], edx
0x209b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x209e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x20a1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x20a8:     74 05                           	je 0x20af <_ZNSt14_Bit_referenceaSEb+0x67>
0x20aa:     e8 fc ff ff ff                  	call 0x20ab
0x20af:     c9                              	leave 
0x20b0:     c3                              	ret 
; section: .text._ZNSt14_Bit_referenceaSERKS_
; function: _ZNSt14_Bit_referenceaSERKS_ at 0x20b2 -- 0x20f8
0x20b2:     55                              	push ebp
0x20b3:     89 e5                           	mov ebp, esp
0x20b5:     83 ec 38                        	sub esp, 0x38
0x20b8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x20bb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x20be:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x20c1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x20c4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x20ca:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x20cd:     31 c0                           	xor eax, eax
0x20cf:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x20d2:     89 04 24                        	mov dword ptr [esp], eax
0x20d5:     e8 e2 1f 00 00                  	call 0x40bc <function_40bc>
0x20da:     0f b6 c0                        	movzx eax, al
0x20dd:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x20e1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x20e4:     89 04 24                        	mov dword ptr [esp], eax
0x20e7:     e8 0e 20 00 00                  	call 0x40fa <function_40fa>
0x20ec:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x20ef:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x20f6:     74 05                           	je 0x20fd <function_20fd>
; data inside code section at 0x20f8 -- 0x20f9
0x20f8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x20f9 -- 0x20fa
; data inside code section at 0x20fa -- 0x20fd
0x20fa:     ff ff ff                                           |...             |
; function: function_20fd at 0x20fd -- 0x20ff
0x20fd:     c9                              	leave 
0x20fe:     c3                              	ret 
; section: .text._ZNSt8iteratorISt26random_access_iterator_tagbiPbRbEC2Ev
; function: _ZNSt8iteratorISt26random_access_iterator_tagbiPbRbEC1Ev at 0x2100 -- 0x212a
0x2100:     55                              	push ebp
0x2101:     89 e5                           	mov ebp, esp
0x2103:     83 ec 28                        	sub esp, 0x28
0x2106:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2109:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x210c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2112:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2115:     31 c0                           	xor eax, eax
0x2117:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x211a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2121:     74 05                           	je 0x2128 <_ZNSt8iteratorISt26random_access_iterator_tagbiPbRbEC1Ev+0x28>
0x2123:     e8 fc ff ff ff                  	call 0x2124
0x2128:     c9                              	leave 
0x2129:     c3                              	ret 
; section: .text._ZNSt18_Bit_iterator_baseC2EPmj
; function: _ZNSt18_Bit_iterator_baseC1EPmj at 0x212a -- 0x2175
0x212a:     55                              	push ebp
0x212b:     89 e5                           	mov ebp, esp
0x212d:     83 ec 38                        	sub esp, 0x38
0x2130:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2133:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2136:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2139:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x213c:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x213f:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x2142:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2148:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x214b:     31 c0                           	xor eax, eax
0x214d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2150:     89 04 24                        	mov dword ptr [esp], eax
0x2153:     e8 d2 20 00 00                  	call 0x422a <function_422a>
0x2158:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x215b:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x215e:     89 10                           	mov dword ptr [eax], edx
0x2160:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2163:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x2166:     89 50 04                        	mov dword ptr [eax + 4], edx
0x2169:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x216c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2173:     74 05                           	je 0x217a <function_217a>
; data inside code section at 0x2175 -- 0x2176
0x2175:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2176 -- 0x2177
; data inside code section at 0x2177 -- 0x217a
0x2177:     ff ff ff                                           |...             |
; function: function_217a at 0x217a -- 0x217c
0x217a:     c9                              	leave 
0x217b:     c3                              	ret 
; section: .text._ZNSt18_Bit_iterator_base10_M_bump_upEv
; function: _ZNSt18_Bit_iterator_base10_M_bump_upEv at 0x217c -- 0x21d6
0x217c:     55                              	push ebp
0x217d:     89 e5                           	mov ebp, esp
0x217f:     83 ec 28                        	sub esp, 0x28
0x2182:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2185:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2188:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x218e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2191:     31 c0                           	xor eax, eax
0x2193:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2196:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x2199:     83 f8 1f                        	cmp eax, 0x1f
0x219c:     0f 94 c2                        	sete dl
0x219f:     8d 48 01                        	lea ecx, [eax + 1]
0x21a2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x21a5:     89 48 04                        	mov dword ptr [eax + 4], ecx
0x21a8:     84 d2                           	test dl, dl
0x21aa:     74 17                           	je 0x21c3 <_ZNSt18_Bit_iterator_base10_M_bump_upEv+0x47>
0x21ac:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x21af:     c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x21b6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x21b9:     8b 00                           	mov eax, dword ptr [eax]
0x21bb:     8d 50 04                        	lea edx, [eax + 4]
0x21be:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x21c1:     89 10                           	mov dword ptr [eax], edx
0x21c3:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x21c6:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x21cd:     74 05                           	je 0x21d4 <_ZNSt18_Bit_iterator_base10_M_bump_upEv+0x58>
0x21cf:     e8 fc ff ff ff                  	call 0x21d0
0x21d4:     c9                              	leave 
0x21d5:     c3                              	ret 
; section: .text._ZNSt18_Bit_iterator_base12_M_bump_downEv
; function: _ZNSt18_Bit_iterator_base12_M_bump_downEv at 0x21d6 -- 0x2228
0x21d6:     55                              	push ebp
0x21d7:     89 e5                           	mov ebp, esp
0x21d9:     83 ec 28                        	sub esp, 0x28
0x21dc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x21df:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x21e2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x21e8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x21eb:     31 c0                           	xor eax, eax
0x21ed:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x21f0:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x21f3:     85 c0                           	test eax, eax
0x21f5:     0f 94 c2                        	sete dl
0x21f8:     8d 48 ff                        	lea ecx, [eax - 1]
0x21fb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x21fe:     89 48 04                        	mov dword ptr [eax + 4], ecx
0x2201:     84 d2                           	test dl, dl
0x2203:     74 17                           	je 0x221c <_ZNSt18_Bit_iterator_base12_M_bump_downEv+0x46>
0x2205:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2208:     c7 40 04 1f 00 00 00            	mov dword ptr [eax + 4], 0x1f
0x220f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2212:     8b 00                           	mov eax, dword ptr [eax]
0x2214:     8d 50 fc                        	lea edx, [eax - 4]
0x2217:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x221a:     89 10                           	mov dword ptr [eax], edx
0x221c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x221f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2226:     74 05                           	je 0x222d <function_222d>
; data inside code section at 0x2228 -- 0x2229
0x2228:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2229 -- 0x222a
; data inside code section at 0x222a -- 0x222d
0x222a:     ff ff ff                                           |...             |
; function: function_222d at 0x222d -- 0x222f
0x222d:     c9                              	leave 
0x222e:     c3                              	ret 
; section: .text._ZNSt18_Bit_iterator_base7_M_incrEi
; function: _ZNSt18_Bit_iterator_base7_M_incrEi at 0x2230 -- 0x22b9
0x2230:     55                              	push ebp
0x2231:     89 e5                           	mov ebp, esp
0x2233:     83 ec 28                        	sub esp, 0x28
0x2236:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2239:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x223c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x223f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x2242:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2248:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x224b:     31 c0                           	xor eax, eax
0x224d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2250:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x2253:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x2256:     01 d0                           	add eax, edx
0x2258:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x225b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x225e:     8b 10                           	mov edx, dword ptr [eax]
0x2260:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x2263:     8d 48 1f                        	lea ecx, [eax + 0x1f]
0x2266:     85 c0                           	test eax, eax
0x2268:     0f 48 c1                        	cmovs eax, ecx
0x226b:     c1 f8 05                        	sar eax, 5
0x226e:     c1 e0 02                        	shl eax, 2
0x2271:     01 c2                           	add edx, eax
0x2273:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2276:     89 10                           	mov dword ptr [eax], edx
0x2278:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x227b:     89 c2                           	mov edx, eax
0x227d:     c1 fa 1f                        	sar edx, 0x1f
0x2280:     c1 ea 1b                        	shr edx, 0x1b
0x2283:     01 d0                           	add eax, edx
0x2285:     83 e0 1f                        	and eax, 0x1f
0x2288:     29 d0                           	sub eax, edx
0x228a:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x228d:     83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x2291:     79 11                           	jns 0x22a4 <_ZNSt18_Bit_iterator_base7_M_incrEi+0x74>
0x2293:     83 45 f0 20                     	add dword ptr [ebp - 0x10], 0x20
0x2297:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x229a:     8b 00                           	mov eax, dword ptr [eax]
0x229c:     8d 50 fc                        	lea edx, [eax - 4]
0x229f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x22a2:     89 10                           	mov dword ptr [eax], edx
0x22a4:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x22a7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x22aa:     89 50 04                        	mov dword ptr [eax + 4], edx
0x22ad:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x22b0:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x22b7:     74 05                           	je 0x22be <function_22be>
; data inside code section at 0x22b9 -- 0x22ba
0x22b9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x22ba -- 0x22bb
; data inside code section at 0x22bb -- 0x22be
0x22bb:     ff ff ff                                           |...             |
; function: function_22be at 0x22be -- 0x22c0
0x22be:     c9                              	leave 
0x22bf:     c3                              	ret 
; section: .text._ZStmiRKSt18_Bit_iterator_baseS1_
; function: _ZStmiRKSt18_Bit_iterator_baseS1_ at 0x22c0 -- 0x231e
0x22c0:     55                              	push ebp
0x22c1:     89 e5                           	mov ebp, esp
0x22c3:     83 ec 28                        	sub esp, 0x28
0x22c6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x22c9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x22cc:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x22cf:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x22d2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x22d8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x22db:     31 c0                           	xor eax, eax
0x22dd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x22e0:     8b 00                           	mov eax, dword ptr [eax]
0x22e2:     89 c2                           	mov edx, eax
0x22e4:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x22e7:     8b 00                           	mov eax, dword ptr [eax]
0x22e9:     89 d1                           	mov ecx, edx
0x22eb:     29 c1                           	sub ecx, eax
0x22ed:     89 c8                           	mov eax, ecx
0x22ef:     c1 f8 02                        	sar eax, 2
0x22f2:     c1 e0 05                        	shl eax, 5
0x22f5:     89 c2                           	mov edx, eax
0x22f7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x22fa:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x22fd:     01 c2                           	add edx, eax
0x22ff:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x2302:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x2305:     89 d1                           	mov ecx, edx
0x2307:     29 c1                           	sub ecx, eax
0x2309:     89 c8                           	mov eax, ecx
0x230b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x230e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2315:     74 05                           	je 0x231c <_ZStmiRKSt18_Bit_iterator_baseS1_+0x5c>
0x2317:     e8 fc ff ff ff                  	call 0x2318
0x231c:     c9                              	leave 
0x231d:     c3                              	ret 
; section: .text._ZNSt13_Bit_iteratorC2Ev
; function: _ZNSt13_Bit_iteratorC1Ev at 0x231e -- 0x235c
0x231e:     55                              	push ebp
0x231f:     89 e5                           	mov ebp, esp
0x2321:     83 ec 38                        	sub esp, 0x38
0x2324:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2327:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x232a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2330:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2333:     31 c0                           	xor eax, eax
0x2335:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2338:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x2340:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x2348:     89 04 24                        	mov dword ptr [esp], eax
0x234b:     e8 f8 20 00 00                  	call 0x4448 <function_4448>
0x2350:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2353:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x235a:     74 05                           	je 0x2361 <function_2361>
; data inside code section at 0x235c -- 0x235d
0x235c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x235d -- 0x235e
; data inside code section at 0x235e -- 0x2361
0x235e:     ff ff ff                                           |...             |
; function: function_2361 at 0x2361 -- 0x2363
0x2361:     c9                              	leave 
0x2362:     c3                              	ret 
; section: .text._ZNSt13_Bit_iteratorC2EPmj
; function: _ZNSt13_Bit_iteratorC1EPmj at 0x2364 -- 0x23ac
0x2364:     55                              	push ebp
0x2365:     89 e5                           	mov ebp, esp
0x2367:     83 ec 38                        	sub esp, 0x38
0x236a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x236d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2370:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2373:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x2376:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x2379:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x237c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2382:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2385:     31 c0                           	xor eax, eax
0x2387:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x238a:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x238d:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x2391:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x2394:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x2398:     89 04 24                        	mov dword ptr [esp], eax
0x239b:     e8 ee 20 00 00                  	call 0x448e <function_448e>
0x23a0:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x23a3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x23aa:     74 05                           	je 0x23b1 <function_23b1>
; data inside code section at 0x23ac -- 0x23ad
0x23ac:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x23ad -- 0x23ae
; data inside code section at 0x23ae -- 0x23b1
0x23ae:     ff ff ff                                           |...             |
; function: function_23b1 at 0x23b1 -- 0x23b3
0x23b1:     c9                              	leave 
0x23b2:     c3                              	ret 
; section: .text._ZNKSt13_Bit_iteratordeEv
; function: _ZNKSt13_Bit_iteratordeEv at 0x23b4 -- 0x2410
0x23b4:     55                              	push ebp
0x23b5:     89 e5                           	mov ebp, esp
0x23b7:     83 ec 38                        	sub esp, 0x38
0x23ba:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x23bd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x23c0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x23c3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x23c6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x23cc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x23cf:     31 c0                           	xor eax, eax
0x23d1:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x23d4:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x23d7:     ba 01 00 00 00                  	mov edx, 1
0x23dc:     89 c1                           	mov ecx, eax
0x23de:     d3 e2                           	shl edx, cl
0x23e0:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x23e3:     8b 00                           	mov eax, dword ptr [eax]
0x23e5:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x23e9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x23ed:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x23f0:     89 04 24                        	mov dword ptr [esp], eax
0x23f3:     e8 7e 1f 00 00                  	call 0x4376 <function_4376>
0x23f8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x23fb:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x23fe:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2405:     74 05                           	je 0x240c <_ZNKSt13_Bit_iteratordeEv+0x58>
0x2407:     e8 fc ff ff ff                  	call 0x2408
0x240c:     c9                              	leave 
0x240d:     c2 04 00                        	ret 4
; section: .text._ZNSt13_Bit_iteratorppEv
; function: _ZNSt13_Bit_iteratorppEv at 0x2410 -- 0x2441
0x2410:     55                              	push ebp
0x2411:     89 e5                           	mov ebp, esp
0x2413:     83 ec 38                        	sub esp, 0x38
0x2416:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2419:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x241c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2422:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2425:     31 c0                           	xor eax, eax
0x2427:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x242a:     89 04 24                        	mov dword ptr [esp], eax
0x242d:     e8 5a 21 00 00                  	call 0x458c <function_458c>
0x2432:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2435:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x2438:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x243f:     74 05                           	je 0x2446 <function_2446>
; data inside code section at 0x2441 -- 0x2442
0x2441:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2442 -- 0x2443
; data inside code section at 0x2443 -- 0x2446
0x2443:     ff ff ff                                           |...             |
; function: function_2446 at 0x2446 -- 0x2448
0x2446:     c9                              	leave 
0x2447:     c3                              	ret 
; section: .text._ZNSt13_Bit_iteratorppEi
; function: _ZNSt13_Bit_iteratorppEi at 0x2448 -- 0x2495
0x2448:     55                              	push ebp
0x2449:     89 e5                           	mov ebp, esp
0x244b:     83 ec 38                        	sub esp, 0x38
0x244e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2451:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2454:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2457:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x245a:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x245d:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x2460:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2466:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2469:     31 c0                           	xor eax, eax
0x246b:     8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x246e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x2471:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x2474:     8b 00                           	mov eax, dword ptr [eax]
0x2476:     89 01                           	mov dword ptr [ecx], eax
0x2478:     89 51 04                        	mov dword ptr [ecx + 4], edx
0x247b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x247e:     89 04 24                        	mov dword ptr [esp], eax
0x2481:     e8 3e 21 00 00                  	call 0x45c4 <function_45c4>
0x2486:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2489:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x248c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2493:     74 05                           	je 0x249a <function_249a>
; data inside code section at 0x2495 -- 0x2496
0x2495:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2496 -- 0x2497
; data inside code section at 0x2497 -- 0x249a
0x2497:     ff ff ff                                           |...             |
; function: function_249a at 0x249a -- 0x249e
0x249a:     c9                              	leave 
0x249b:     c2 04 00                        	ret 4
; section: .text._ZNSt13_Bit_iteratormmEv
; function: _ZNSt13_Bit_iteratormmEv at 0x249e -- 0x24d6
0x249e:     55                              	push ebp
0x249f:     89 e5                           	mov ebp, esp
0x24a1:     83 ec 38                        	sub esp, 0x38
0x24a4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x24a7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x24aa:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x24b0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x24b3:     31 c0                           	xor eax, eax
0x24b5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x24b8:     89 04 24                        	mov dword ptr [esp], eax
0x24bb:     e8 b4 21 00 00                  	call 0x4674
0x24c0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x24c3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x24c6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x24cd:     74 05                           	je 0x24d4 <_ZNSt13_Bit_iteratormmEv+0x36>
0x24cf:     e8 fc ff ff ff                  	call 0x24d0
0x24d4:     c9                              	leave 
0x24d5:     c3                              	ret 
; section: .text._ZNSt13_Bit_iteratorpLEi
; function: _ZNSt13_Bit_iteratorpLEi at 0x24d6 -- 0x2514
0x24d6:     55                              	push ebp
0x24d7:     89 e5                           	mov ebp, esp
0x24d9:     83 ec 38                        	sub esp, 0x38
0x24dc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x24df:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x24e2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x24e5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x24e8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x24ee:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x24f1:     31 c0                           	xor eax, eax
0x24f3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x24f6:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x24f9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x24fd:     89 04 24                        	mov dword ptr [esp], eax
0x2500:     e8 01 22 00 00                  	call 0x4706 <function_4706>
0x2505:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2508:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x250b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2512:     74 05                           	je 0x2519 <function_2519>
; data inside code section at 0x2514 -- 0x2515
0x2514:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2515 -- 0x2516
; data inside code section at 0x2516 -- 0x2519
0x2516:     ff ff ff                                           |...             |
; function: function_2519 at 0x2519 -- 0x251b
0x2519:     c9                              	leave 
0x251a:     c3                              	ret 
; section: .text._ZNKSt13_Bit_iteratorplEi
; function: _ZNKSt13_Bit_iteratorplEi at 0x251c -- 0x257b
0x251c:     55                              	push ebp
0x251d:     89 e5                           	mov ebp, esp
0x251f:     83 ec 38                        	sub esp, 0x38
0x2522:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2525:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2528:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x252b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x252e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x2531:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x2534:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x253a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x253d:     31 c0                           	xor eax, eax
0x253f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x2542:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x2545:     8b 00                           	mov eax, dword ptr [eax]
0x2547:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x254a:     89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x254d:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x2550:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x2554:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x2557:     89 04 24                        	mov dword ptr [esp], eax
0x255a:     e8 93 24 00 00                  	call 0x49f2
0x255f:     8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x2562:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x2565:     8b 00                           	mov eax, dword ptr [eax]
0x2567:     89 01                           	mov dword ptr [ecx], eax
0x2569:     89 51 04                        	mov dword ptr [ecx + 4], edx
0x256c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x256f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x2572:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2579:     74 05                           	je 0x2580 <function_2580>
; data inside code section at 0x257b -- 0x257c
0x257b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x257c -- 0x257d
; data inside code section at 0x257d -- 0x2580
0x257d:     ff ff ff                                           |...             |
; function: function_2580 at 0x2580 -- 0x2584
0x2580:     c9                              	leave 
0x2581:     c2 04 00                        	ret 4
; section: .text._ZNSt19_Bit_const_iteratorC2EPmj
; function: _ZNSt19_Bit_const_iteratorC1EPmj at 0x2584 -- 0x25d3
0x2584:     55                              	push ebp
0x2585:     89 e5                           	mov ebp, esp
0x2587:     83 ec 38                        	sub esp, 0x38
0x258a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x258d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2590:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2593:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x2596:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x2599:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x259c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x25a2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x25a5:     31 c0                           	xor eax, eax
0x25a7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x25aa:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x25ad:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x25b1:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x25b4:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x25b8:     89 04 24                        	mov dword ptr [esp], eax
0x25bb:     e8 ee 20 00 00                  	call 0x46ae
0x25c0:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x25c3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x25ca:     74 05                           	je 0x25d1 <_ZNSt19_Bit_const_iteratorC1EPmj+0x4d>
0x25cc:     e8 fc ff ff ff                  	call 0x25cd
0x25d1:     c9                              	leave 
0x25d2:     c3                              	ret 
; section: .text._ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
; function: _ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator at 0x25d4 -- 0x261b
0x25d4:     55                              	push ebp
0x25d5:     89 e5                           	mov ebp, esp
0x25d7:     83 ec 38                        	sub esp, 0x38
0x25da:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x25dd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x25e0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x25e3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x25e6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x25ec:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x25ef:     31 c0                           	xor eax, eax
0x25f1:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x25f4:     8b 48 04                        	mov ecx, dword ptr [eax + 4]
0x25f7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x25fa:     8b 10                           	mov edx, dword ptr [eax]
0x25fc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x25ff:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x2603:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x2607:     89 04 24                        	mov dword ptr [esp], eax
0x260a:     e8 ef 20 00 00                  	call 0x46fe <function_46fe>
0x260f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2612:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2619:     74 05                           	je 0x2620 <function_2620>
; data inside code section at 0x261b -- 0x261c
0x261b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x261c -- 0x261d
; data inside code section at 0x261d -- 0x2620
0x261d:     ff ff ff                                           |...             |
; function: function_2620 at 0x2620 -- 0x2622
0x2620:     c9                              	leave 
0x2621:     c3                              	ret 
; section: .text._ZNKSt19_Bit_const_iteratordeEv
; function: _ZNKSt19_Bit_const_iteratordeEv at 0x2622 -- 0x267e
0x2622:     55                              	push ebp
0x2623:     89 e5                           	mov ebp, esp
0x2625:     83 ec 38                        	sub esp, 0x38
0x2628:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x262b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x262e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2634:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2637:     31 c0                           	xor eax, eax
0x2639:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x263c:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x263f:     ba 01 00 00 00                  	mov edx, 1
0x2644:     89 c1                           	mov ecx, eax
0x2646:     d3 e2                           	shl edx, cl
0x2648:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x264b:     8b 00                           	mov eax, dword ptr [eax]
0x264d:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x2651:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x2655:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x2658:     89 04 24                        	mov dword ptr [esp], eax
0x265b:     e8 84 1f 00 00                  	call 0x45e4
0x2660:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x2663:     89 04 24                        	mov dword ptr [esp], eax
0x2666:     e8 c1 1f 00 00                  	call 0x462c <function_462c>
0x266b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x266e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2675:     74 05                           	je 0x267c <_ZNKSt19_Bit_const_iteratordeEv+0x5a>
0x2677:     e8 fc ff ff ff                  	call 0x2678
0x267c:     c9                              	leave 
0x267d:     c3                              	ret 
; section: .text._ZNSt19_Bit_const_iteratorppEv
; function: _ZNSt19_Bit_const_iteratorppEv at 0x267e -- 0x26b6
0x267e:     55                              	push ebp
0x267f:     89 e5                           	mov ebp, esp
0x2681:     83 ec 38                        	sub esp, 0x38
0x2684:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2687:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x268a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2690:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2693:     31 c0                           	xor eax, eax
0x2695:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2698:     89 04 24                        	mov dword ptr [esp], eax
0x269b:     e8 5a 21 00 00                  	call 0x47fa <function_47fa>
0x26a0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x26a3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x26a6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x26ad:     74 05                           	je 0x26b4 <_ZNSt19_Bit_const_iteratorppEv+0x36>
0x26af:     e8 fc ff ff ff                  	call 0x26b0
0x26b4:     c9                              	leave 
0x26b5:     c3                              	ret 
; section: .text._ZN9base_uintILj256EEC2Ev
; function: _ZN9base_uintILj256EEC1Ev at 0x26b6 -- 0x26d9
0x26b6:     55                              	push ebp
0x26b7:     89 e5                           	mov ebp, esp
0x26b9:     83 ec 28                        	sub esp, 0x28
0x26bc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x26bf:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x26c2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x26c8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x26cb:     31 c0                           	xor eax, eax
0x26cd:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x26d0:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x26d7:     74 05                           	je 0x26de <function_26de>
; data inside code section at 0x26d9 -- 0x26da
0x26d9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x26da -- 0x26db
; data inside code section at 0x26db -- 0x26de
0x26db:     ff ff ff                                           |...             |
; function: function_26de at 0x26de -- 0x26e0
0x26de:     c9                              	leave 
0x26df:     c3                              	ret 
; section: .text._ZN7uint256C2Ev
; function: _ZN7uint256C1Ev at 0x26e0 -- 0x2733
0x26e0:     55                              	push ebp
0x26e1:     89 e5                           	mov ebp, esp
0x26e3:     83 ec 38                        	sub esp, 0x38
0x26e6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x26e9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x26ec:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x26f2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x26f5:     31 c0                           	xor eax, eax
0x26f7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x26fa:     89 04 24                        	mov dword ptr [esp], eax
0x26fd:     e8 94 26 00 00                  	call 0x4d96 <function_4d96>
0x2702:     c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x2709:     eb 11                           	jmp 0x271c <_ZN7uint256C1Ev+0x3c>
0x270b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x270e:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x2711:     c7 04 90 00 00 00 00            	mov dword ptr [eax + edx*4], 0
0x2718:     83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x271c:     83 7d f0 07                     	cmp dword ptr [ebp - 0x10], 7
0x2720:     0f 9e c0                        	setle al
0x2723:     84 c0                           	test al, al
0x2725:     75 e4                           	jne 0x270b <_ZN7uint256C1Ev+0x2b>
0x2727:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x272a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2731:     74 05                           	je 0x2738 <function_2738>
; data inside code section at 0x2733 -- 0x2734
0x2733:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2734 -- 0x2735
; data inside code section at 0x2735 -- 0x2738
0x2735:     ff ff ff                                           |...             |
; function: function_2738 at 0x2738 -- 0x273a
0x2738:     c9                              	leave 
0x2739:     c3                              	ret 
; section: .text._ZN7uint256C2Ey
; function: _ZN7uint256C1Ey at 0x273a -- 0x27b3
0x273a:     55                              	push ebp
0x273b:     89 e5                           	mov ebp, esp
0x273d:     83 ec 38                        	sub esp, 0x38
0x2740:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2743:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2746:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2749:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x274c:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x274f:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x2752:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2758:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x275b:     31 c0                           	xor eax, eax
0x275d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2760:     89 04 24                        	mov dword ptr [esp], eax
0x2763:     e8 88 26 00 00                  	call 0x4df0 <function_4df0>
0x2768:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x276b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x276e:     89 10                           	mov dword ptr [eax], edx
0x2770:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x2773:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x2776:     89 d0                           	mov eax, edx
0x2778:     31 d2                           	xor edx, edx
0x277a:     89 c2                           	mov edx, eax
0x277c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x277f:     89 50 04                        	mov dword ptr [eax + 4], edx
0x2782:     c7 45 f0 02 00 00 00            	mov dword ptr [ebp - 0x10], 2
0x2789:     eb 11                           	jmp 0x279c <_ZN7uint256C1Ey+0x62>
0x278b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x278e:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x2791:     c7 04 90 00 00 00 00            	mov dword ptr [eax + edx*4], 0
0x2798:     83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x279c:     83 7d f0 07                     	cmp dword ptr [ebp - 0x10], 7
0x27a0:     0f 9e c0                        	setle al
0x27a3:     84 c0                           	test al, al
0x27a5:     75 e4                           	jne 0x278b <_ZN7uint256C1Ey+0x51>
0x27a7:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x27aa:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x27b1:     74 05                           	je 0x27b8 <function_27b8>
; data inside code section at 0x27b3 -- 0x27b4
0x27b3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x27b4 -- 0x27b5
; data inside code section at 0x27b5 -- 0x27b8
0x27b5:     ff ff ff                                           |...             |
; function: function_27b8 at 0x27b8 -- 0x27ba
0x27b8:     c9                              	leave 
0x27b9:     c3                              	ret 
; section: .text._ZN7uint256aSEy
; function: _ZN7uint256aSEy at 0x27ba -- 0x282b
0x27ba:     55                              	push ebp
0x27bb:     89 e5                           	mov ebp, esp
0x27bd:     83 ec 28                        	sub esp, 0x28
0x27c0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x27c3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x27c6:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x27c9:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x27cc:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x27cf:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x27d2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x27d8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x27db:     31 c0                           	xor eax, eax
0x27dd:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x27e0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x27e3:     89 10                           	mov dword ptr [eax], edx
0x27e5:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x27e8:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x27eb:     89 d0                           	mov eax, edx
0x27ed:     31 d2                           	xor edx, edx
0x27ef:     89 c2                           	mov edx, eax
0x27f1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x27f4:     89 50 04                        	mov dword ptr [eax + 4], edx
0x27f7:     c7 45 f0 02 00 00 00            	mov dword ptr [ebp - 0x10], 2
0x27fe:     eb 11                           	jmp 0x2811 <_ZN7uint256aSEy+0x57>
0x2800:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2803:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x2806:     c7 04 90 00 00 00 00            	mov dword ptr [eax + edx*4], 0
0x280d:     83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x2811:     83 7d f0 07                     	cmp dword ptr [ebp - 0x10], 7
0x2815:     0f 9e c0                        	setle al
0x2818:     84 c0                           	test al, al
0x281a:     75 e4                           	jne 0x2800 <_ZN7uint256aSEy+0x46>
0x281c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x281f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x2822:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2829:     74 05                           	je 0x2830 <function_2830>
; data inside code section at 0x282b -- 0x282c
0x282b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x282c -- 0x282d
; data inside code section at 0x282d -- 0x2830
0x282d:     ff ff ff                                           |...             |
; function: function_2830 at 0x2830 -- 0x2832
0x2830:     c9                              	leave 
0x2831:     c3                              	ret 
; section: .text._ZltRK7uint256S1_
; function: _ZltRK7uint256S1_ at 0x2832 -- 0x28d1
0x2832:     55                              	push ebp
0x2833:     89 e5                           	mov ebp, esp
0x2835:     83 ec 78                        	sub esp, 0x78
0x2838:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x283b:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x283e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2841:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x2844:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x284a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x284d:     31 c0                           	xor eax, eax
0x284f:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x2852:     8b 10                           	mov edx, dword ptr [eax]
0x2854:     89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x2857:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x285a:     89 55 d8                        	mov dword ptr [ebp - 0x28], edx
0x285d:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x2860:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0x2863:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x2866:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x2869:     8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x286c:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x286f:     8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0x2872:     89 55 e8                        	mov dword ptr [ebp - 0x18], edx
0x2875:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x2878:     89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x287b:     8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x287e:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x2881:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x2884:     8b 10                           	mov edx, dword ptr [eax]
0x2886:     89 55 b4                        	mov dword ptr [ebp - 0x4c], edx
0x2889:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x288c:     89 55 b8                        	mov dword ptr [ebp - 0x48], edx
0x288f:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x2892:     89 55 bc                        	mov dword ptr [ebp - 0x44], edx
0x2895:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x2898:     89 55 c0                        	mov dword ptr [ebp - 0x40], edx
0x289b:     8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x289e:     89 55 c4                        	mov dword ptr [ebp - 0x3c], edx
0x28a1:     8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0x28a4:     89 55 c8                        	mov dword ptr [ebp - 0x38], edx
0x28a7:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x28aa:     89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x28ad:     8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x28b0:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x28b3:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x28b6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x28ba:     8d 45 b4                        	lea eax, [ebp - 0x4c]
0x28bd:     89 04 24                        	mov dword ptr [esp], eax
0x28c0:     e8 8d 78 00 00                  	call 0xa152 <function_a152>
0x28c5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x28c8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x28cf:     74 05                           	je 0x28d6 <function_28d6>
; data inside code section at 0x28d1 -- 0x28d2
0x28d1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x28d2 -- 0x28d3
; data inside code section at 0x28d3 -- 0x28d6
0x28d3:     ff ff ff                                           |...             |
; function: function_28d6 at 0x28d6 -- 0x28d8
0x28d6:     c9                              	leave 
0x28d7:     c3                              	ret 
; section: .text._ZeqRK7uint256S1_
; function: _ZeqRK7uint256S1_ at 0x28d8 -- 0x297e
0x28d8:     55                              	push ebp
0x28d9:     89 e5                           	mov ebp, esp
0x28db:     83 ec 78                        	sub esp, 0x78
0x28de:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x28e1:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x28e4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x28e7:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x28ea:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x28f0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x28f3:     31 c0                           	xor eax, eax
0x28f5:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x28f8:     8b 10                           	mov edx, dword ptr [eax]
0x28fa:     89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x28fd:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x2900:     89 55 d8                        	mov dword ptr [ebp - 0x28], edx
0x2903:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x2906:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0x2909:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x290c:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x290f:     8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x2912:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x2915:     8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0x2918:     89 55 e8                        	mov dword ptr [ebp - 0x18], edx
0x291b:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x291e:     89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x2921:     8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x2924:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x2927:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x292a:     8b 10                           	mov edx, dword ptr [eax]
0x292c:     89 55 b4                        	mov dword ptr [ebp - 0x4c], edx
0x292f:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x2932:     89 55 b8                        	mov dword ptr [ebp - 0x48], edx
0x2935:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x2938:     89 55 bc                        	mov dword ptr [ebp - 0x44], edx
0x293b:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x293e:     89 55 c0                        	mov dword ptr [ebp - 0x40], edx
0x2941:     8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x2944:     89 55 c4                        	mov dword ptr [ebp - 0x3c], edx
0x2947:     8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0x294a:     89 55 c8                        	mov dword ptr [ebp - 0x38], edx
0x294d:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x2950:     89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x2953:     8b 40 1c                        	mov eax, dword ptr [eax + 0x1c]
0x2956:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x2959:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x295c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x2960:     8d 45 b4                        	lea eax, [ebp - 0x4c]
0x2963:     89 04 24                        	mov dword ptr [esp], eax
0x2966:     e8 15 79 00 00                  	call 0xa280 <function_a280>
0x296b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x296e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x2975:     74 05                           	je 0x297c <_ZeqRK7uint256S1_+0xa4>
0x2977:     e8 fc ff ff ff                  	call 0x2978
0x297c:     c9                              	leave 
0x297d:     c3                              	ret 
; section: .text._ZNSt14numeric_limitsItE3maxEv
; function: _ZNSt14numeric_limitsItE3maxEv at 0x297e -- 0x29a0
0x297e:     55                              	push ebp
0x297f:     89 e5                           	mov ebp, esp
0x2981:     83 ec 18                        	sub esp, 0x18
0x2984:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x298a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x298d:     31 c0                           	xor eax, eax
0x298f:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2994:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x2997:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x299e:     74 05                           	je 0x29a5 <function_29a5>
; data inside code section at 0x29a0 -- 0x29a1
0x29a0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x29a1 -- 0x29a2
; data inside code section at 0x29a2 -- 0x29a5
0x29a2:     ff ff ff                                           |...             |
; function: function_29a5 at 0x29a5 -- 0x29a7
0x29a5:     c9                              	leave 
0x29a6:     c3                              	ret 
; section: .text._ZNSt14numeric_limitsIjE3maxEv
; function: _ZNSt14numeric_limitsIjE3maxEv at 0x29a7 -- 0x29c9
0x29a7:     55                              	push ebp
0x29a8:     89 e5                           	mov ebp, esp
0x29aa:     83 ec 18                        	sub esp, 0x18
0x29ad:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x29b3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x29b6:     31 c0                           	xor eax, eax
0x29b8:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x29bd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x29c0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x29c7:     74 05                           	je 0x29ce <function_29ce>
; data inside code section at 0x29c9 -- 0x29ca
0x29c9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x29ca -- 0x29cb
; data inside code section at 0x29cb -- 0x29ce
0x29cb:     ff ff ff                                           |...             |
; function: function_29ce at 0x29ce -- 0x29d0
0x29ce:     c9                              	leave 
0x29cf:     c3                              	ret 
; section: .text._ZStorSt12_Ios_IostateS_
; function: _ZStorSt12_Ios_IostateS_ at 0x29d0 -- 0x2a01
0x29d0:     55                              	push ebp
0x29d1:     89 e5                           	mov ebp, esp
0x29d3:     83 ec 28                        	sub esp, 0x28
0x29d6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x29d9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x29dc:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x29df:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x29e2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x29e8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x29eb:     31 c0                           	xor eax, eax
0x29ed:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x29f0:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x29f3:     09 d0                           	or eax, edx
0x29f5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x29f8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x29ff:     74 05                           	je 0x2a06 <function_2a06>
; data inside code section at 0x2a01 -- 0x2a02
0x2a01:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a02 -- 0x2a03
; data inside code section at 0x2a03 -- 0x2a06
0x2a03:     ff ff ff                                           |...             |
; function: function_2a06 at 0x2a06 -- 0x2a08
0x2a06:     c9                              	leave 
0x2a07:     c3                              	ret 
; section: .text._ZN5boost12noncopyable_11noncopyableD2Ev
; function: _ZN5boost12noncopyable_11noncopyableD1Ev at 0x2a08 -- 0x2a2b
0x2a08:     55                              	push ebp
0x2a09:     89 e5                           	mov ebp, esp
0x2a0b:     83 ec 28                        	sub esp, 0x28
0x2a0e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2a11:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2a14:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2a1a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2a1d:     31 c0                           	xor eax, eax
0x2a1f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2a22:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2a29:     74 05                           	je 0x2a30 <function_2a30>
; data inside code section at 0x2a2b -- 0x2a2c
0x2a2b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a2c -- 0x2a2d
; data inside code section at 0x2a2d -- 0x2a30
0x2a2d:     ff ff ff                                           |...             |
; function: function_2a30 at 0x2a30 -- 0x2a32
0x2a30:     c9                              	leave 
0x2a31:     c3                              	ret 
; section: .text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_
; function: _ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_ at 0x2a32 -- 0x2a63
0x2a32:     55                              	push ebp
0x2a33:     89 e5                           	mov ebp, esp
0x2a35:     83 ec 28                        	sub esp, 0x28
0x2a38:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2a3b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2a3e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2a41:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x2a44:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2a4a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2a4d:     31 c0                           	xor eax, eax
0x2a4f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2a52:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x2a55:     89 10                           	mov dword ptr [eax], edx
0x2a57:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2a5a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2a61:     74 05                           	je 0x2a68 <function_2a68>
; data inside code section at 0x2a63 -- 0x2a64
0x2a63:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a64 -- 0x2a65
; data inside code section at 0x2a65 -- 0x2a68
0x2a65:     ff ff ff                                           |...             |
; function: function_2a68 at 0x2a68 -- 0x2a6a
0x2a68:     c9                              	leave 
0x2a69:     c3                              	ret 
; section: .text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_
; function: _ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_ at 0x2a6a -- 0x2a9b
0x2a6a:     55                              	push ebp
0x2a6b:     89 e5                           	mov ebp, esp
0x2a6d:     83 ec 28                        	sub esp, 0x28
0x2a70:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2a73:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2a76:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2a79:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x2a7c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2a82:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2a85:     31 c0                           	xor eax, eax
0x2a87:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2a8a:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x2a8d:     89 10                           	mov dword ptr [eax], edx
0x2a8f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2a92:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2a99:     74 05                           	je 0x2aa0 <function_2aa0>
; data inside code section at 0x2a9b -- 0x2a9c
0x2a9b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a9c -- 0x2a9d
; data inside code section at 0x2a9d -- 0x2aa0
0x2a9d:     ff ff ff                                           |...             |
; function: function_2aa0 at 0x2aa0 -- 0x2aa2
0x2aa0:     c9                              	leave 
0x2aa1:     c3                              	ret 
; section: .text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei
; function: _ZN5boost10error_infoINS_11throw_line_EiEC1Ei at 0x2aa2 -- 0x2ad3
0x2aa2:     55                              	push ebp
0x2aa3:     89 e5                           	mov ebp, esp
0x2aa5:     83 ec 28                        	sub esp, 0x28
0x2aa8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2aab:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2aae:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x2ab1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x2ab4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2aba:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2abd:     31 c0                           	xor eax, eax
0x2abf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2ac2:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x2ac5:     89 10                           	mov dword ptr [eax], edx
0x2ac7:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2aca:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2ad1:     74 05                           	je 0x2ad8 <function_2ad8>
; data inside code section at 0x2ad3 -- 0x2ad4
0x2ad3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2ad4 -- 0x2ad5
; data inside code section at 0x2ad5 -- 0x2ad8
0x2ad5:     ff ff ff                                           |...             |
; function: function_2ad8 at 0x2ad8 -- 0x2ada
0x2ad8:     c9                              	leave 
0x2ad9:     c3                              	ret 
; section: .text._ZN5boost9exceptionC2Ev
; function: _ZN5boost9exceptionC1Ev at 0x2ada -- 0x2b32
0x2ada:     55                              	push ebp
0x2adb:     89 e5                           	mov ebp, esp
0x2add:     83 ec 38                        	sub esp, 0x38
0x2ae0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2ae3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2ae6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2aec:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2aef:     31 c0                           	xor eax, eax
0x2af1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2af4:     c7 00 0c b7 01 00               	mov dword ptr [eax], 0x1b70c
0x2afa:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2afd:     83 c0 04                        	add eax, 4
0x2b00:     89 04 24                        	mov dword ptr [esp], eax
0x2b03:     e8 e4 79 00 00                  	call 0xa4ec <function_a4ec>
0x2b08:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2b0b:     c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x2b12:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2b15:     c7 40 0c 00 00 00 00            	mov dword ptr [eax + 0xc], 0
0x2b1c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2b1f:     c7 40 10 ff ff ff ff            	mov dword ptr [eax + 0x10], 0xffffffff
0x2b26:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2b29:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2b30:     74 05                           	je 0x2b37 <function_2b37>
; data inside code section at 0x2b32 -- 0x2b33
0x2b32:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2b33 -- 0x2b34
; data inside code section at 0x2b34 -- 0x2b37
0x2b34:     ff ff ff                                           |...             |
; function: function_2b37 at 0x2b37 -- 0x2b39
0x2b37:     c9                              	leave 
0x2b38:     c3                              	ret 
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x2b3a -- 0x2b7a
0x2b3a:     55                              	push ebp
0x2b3b:     89 e5                           	mov ebp, esp
0x2b3d:     83 ec 38                        	sub esp, 0x38
0x2b40:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x2b43:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x2b46:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x2b4c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x2b4f:     31 c0                           	xor eax, eax
0x2b51:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2b54:     c7 00 0c b7 01 00               	mov dword ptr [eax], 0x1b70c
0x2b5a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2b5d:     83 c0 04                        	add eax, 4
0x2b60:     89 04 24                        	mov dword ptr [esp], eax
0x2b63:     e8 18 7a 00 00                  	call 0xa580 <function_a580>
0x2b68:     b8 00 00 00 00                  	mov eax, 0
0x2b6d:     83 e0 01                        	and eax, 1
0x2b70:     84 c0                           	test al, al
0x2b72:     74 22                           	je 0x2b96 <function_2b96>
0x2b74:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x2b77:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x2b7a -- 0x2b7b
0x2b7a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2b7b -- 0x2b7c
; data inside code section at 0x2b7c -- 0x2b7f
0x2b7c:     ff ff ff                                           |...             |
; function: function_2b7f at 0x2b7f -- 0x2b81
0x2b7f:     eb 15                           	jmp 0x2b96 <function_2b96>
; data inside code section at 0x2b81 -- 0x2b8a
0x2b81:     83 fa ff 74 08 89 04 24  e8                        |...t...$.       |
; dynamically linked function: _Unwind_Resume at 0x2b8a -- 0x2b8b
; data inside code section at 0x2b8b -- 0x2b92
0x2b8b:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_call_unexpected at 0x2b92 -- 0x2b93
; data inside code section at 0x2b93 -- 0x2b96
0x2b93:     ff ff ff                                           |...             |
; function: function_2b96 at 0x2b96 -- 0x2ba2
0x2b96:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x2b99:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x2ba0:     74 05                           	je 0x2ba7 <function_2ba7>
; data inside code section at 0x2ba2 -- 0x2ba3
0x2ba2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2ba3 -- 0x2ba4
; data inside code section at 0x2ba4 -- 0x2ba7
0x2ba4:     ff ff ff                                           |...             |
; function: function_2ba7 at 0x2ba7 -- 0x2ba9
0x2ba7:     c9                              	leave 
0x2ba8:     c3                              	ret 
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x37f0 -- 0x3818
0x37f0:     55                              	push ebp
0x37f1:     89 e5                           	mov ebp, esp
0x37f3:     83 ec 38                        	sub esp, 0x38
0x37f6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x37f9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x37fc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3802:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3805:     31 c0                           	xor eax, eax
0x3807:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x380a:     89 04 24                        	mov dword ptr [esp], eax
0x380d:     e8 18 2b 00 00                  	call 0x632a <function_632a>
0x3812:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3815:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x3818 -- 0x3819
0x3818:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3819 -- 0x381a
; data inside code section at 0x381a -- 0x382a
0x381a:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x382a -- 0x382b
; data inside code section at 0x382b -- 0x382d
0x382b:     ff ff                                              |..              |
; function: function_382d at 0x382d -- 0x3830
0x382d:     ff c9                           	dec ecx
0x382f:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x3830 -- 0x3862
0x3830:     55                              	push ebp
0x3831:     89 e5                           	mov ebp, esp
0x3833:     83 ec 38                        	sub esp, 0x38
0x3836:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3839:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x383c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3842:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3845:     31 c0                           	xor eax, eax
0x3847:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x384a:     c7 00 f4 b6 01 00               	mov dword ptr [eax], 0x1b6f4
0x3850:     b8 00 00 00 00                  	mov eax, 0
0x3855:     83 e0 01                        	and eax, 1
0x3858:     84 c0                           	test al, al
0x385a:     74 0b                           	je 0x3867 <function_3867>
0x385c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x385f:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x3862 -- 0x3863
0x3862:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3863 -- 0x3864
; data inside code section at 0x3864 -- 0x3867
0x3864:     ff ff ff                                           |...             |
; function: function_3867 at 0x3867 -- 0x3873
0x3867:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x386a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3871:     74 05                           	je 0x3878 <function_3878>
; data inside code section at 0x3873 -- 0x3874
0x3873:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3874 -- 0x3875
; data inside code section at 0x3875 -- 0x3878
0x3875:     ff ff ff                                           |...             |
; function: function_3878 at 0x3878 -- 0x387a
0x3878:     c9                              	leave 
0x3879:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x387a -- 0x38a2
0x387a:     55                              	push ebp
0x387b:     89 e5                           	mov ebp, esp
0x387d:     83 ec 38                        	sub esp, 0x38
0x3880:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3883:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3886:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x388c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x388f:     31 c0                           	xor eax, eax
0x3891:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3894:     89 04 24                        	mov dword ptr [esp], eax
0x3897:     e8 0e 38 00 00                  	call 0x70aa
0x389c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x389f:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x38a2 -- 0x38a3
0x38a2:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x38a3 -- 0x38a4
; data inside code section at 0x38a4 -- 0x38b4
0x38a4:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x38b4 -- 0x38b5
; data inside code section at 0x38b5 -- 0x38b7
0x38b5:     ff ff                                              |..              |
; function: function_38b7 at 0x38b7 -- 0x38ba
0x38b7:     ff c9                           	dec ecx
0x38b9:     c3                              	ret 
; section: .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
; function: _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ at 0x38ba -- 0x3985
0x38ba:     55                              	push ebp
0x38bb:     89 e5                           	mov ebp, esp
0x38bd:     53                              	push ebx
0x38be:     83 ec 34                        	sub esp, 0x34
0x38c1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x38c4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x38c7:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x38ca:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x38cd:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x38d3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x38d6:     31 c0                           	xor eax, eax
0x38d8:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x38db:     89 04 24                        	mov dword ptr [esp], eax
0x38de:     e8 e9 79 00 00                  	call 0xb2cc
0x38e3:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x38e6:     83 c0 04                        	add eax, 4
0x38e9:     89 04 24                        	mov dword ptr [esp], eax
0x38ec:     e8 45 7a 00 00                  	call 0xb336
0x38f1:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x38f4:     83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x38f8:     74 39                           	je 0x3933 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x79>
0x38fa:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x38fd:     8b 00                           	mov eax, dword ptr [eax]
0x38ff:     83 c0 14                        	add eax, 0x14
0x3902:     8b 08                           	mov ecx, dword ptr [eax]
0x3904:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x3907:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x390a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x390e:     89 04 24                        	mov dword ptr [esp], eax
0x3911:     ff d1                           	call ecx
0x3913:     83 ec 04                        	sub esp, 4
0x3916:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x3919:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x391d:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x3920:     89 04 24                        	mov dword ptr [esp], eax
0x3923:     e8 3e 7a 00 00                  	call 0xb366 <function_b366>
0x3928:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x392b:     89 04 24                        	mov dword ptr [esp], eax
0x392e:     e8 cd 79 00 00                  	call 0xb300
0x3933:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x3936:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x3939:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x393c:     89 50 0c                        	mov dword ptr [eax + 0xc], edx
0x393f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x3942:     8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x3945:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3948:     89 50 10                        	mov dword ptr [eax + 0x10], edx
0x394b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x394e:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x3951:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3954:     89 50 08                        	mov dword ptr [eax + 8], edx
0x3957:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x395a:     8d 50 04                        	lea edx, [eax + 4]
0x395d:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x3960:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x3964:     89 14 24                        	mov dword ptr [esp], edx
0x3967:     e8 fa 79 00 00                  	call 0xb366 <function_b366>
0x396c:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x396f:     89 04 24                        	mov dword ptr [esp], eax
0x3972:     e8 89 79 00 00                  	call 0xb300
0x3977:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x397a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3981:     74 2d                           	je 0x39b0 <function_39b0>
0x3983:     eb 26                           	jmp 0x39ab <function_39ab>
; function: function_3985 at 0x3985 -- 0x3994
0x3985:     89 c3                           	mov ebx, eax
0x3987:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x398a:     89 04 24                        	mov dword ptr [esp], eax
0x398d:     e8 6e 79 00 00                  	call 0xb300
0x3992:     eb 02                           	jmp 0x3996 <function_3996>
; function: function_3994 at 0x3994 -- 0x3996
0x3994:     89 c3                           	mov ebx, eax
; function: function_3996 at 0x3996 -- 0x39a6
0x3996:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x3999:     89 04 24                        	mov dword ptr [esp], eax
0x399c:     e8 5f 79 00 00                  	call 0xb300
0x39a1:     89 d8                           	mov eax, ebx
0x39a3:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x39a6 -- 0x39a7
0x39a6:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x39a7 -- 0x39a8
; data inside code section at 0x39a8 -- 0x39ab
0x39a8:     ff ff ff                                           |...             |
; function: function_39ab at 0x39ab -- 0x39ac
; dynamically linked function: __stack_chk_fail at 0x39ac -- 0x39ad
; data inside code section at 0x39ad -- 0x39b0
0x39ad:     ff ff ff                                           |...             |
; function: function_39b0 at 0x39b0 -- 0x39b5
0x39b0:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x39b3:     c9                              	leave 
0x39b4:     c3                              	ret 
; section: .text._ZN5boost6detail23atomic_exchange_and_addEPii
; function: _ZN5boost6detail23atomic_exchange_and_addEPii at 0x39b5 -- 0x39f4
0x39b5:     55                              	push ebp
0x39b6:     89 e5                           	mov ebp, esp
0x39b8:     53                              	push ebx
0x39b9:     83 ec 24                        	sub esp, 0x24
0x39bc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x39bf:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x39c2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x39c5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x39c8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x39ce:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x39d1:     31 c0                           	xor eax, eax
0x39d3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x39d6:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x39d9:     8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x39dc:     89 cb                           	mov ebx, ecx
0x39de:     f0 0f c1 18                     	lock xadd dword ptr [eax], ebx
0x39e2:     89 5d f0                        	mov dword ptr [ebp - 0x10], ebx
0x39e5:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x39e8:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x39eb:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x39f2:     74 05                           	je 0x39f9 <function_39f9>
; data inside code section at 0x39f4 -- 0x39f5
0x39f4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x39f5 -- 0x39f6
; data inside code section at 0x39f6 -- 0x39f9
0x39f6:     ff ff ff                                           |...             |
; function: function_39f9 at 0x39f9 -- 0x39ff
0x39f9:     83 c4 24                        	add esp, 0x24
0x39fc:     5b                              	pop ebx
0x39fd:     5d                              	pop ebp
0x39fe:     c3                              	ret 
; section: .text._ZN5boost6detail16atomic_incrementEPi
; function: _ZN5boost6detail16atomic_incrementEPi at 0x39ff -- 0x3a2b
0x39ff:     55                              	push ebp
0x3a00:     89 e5                           	mov ebp, esp
0x3a02:     83 ec 28                        	sub esp, 0x28
0x3a05:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3a08:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3a0b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3a11:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3a14:     31 c0                           	xor eax, eax
0x3a16:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3a19:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x3a1c:     f0 ff 00                        	lock inc dword ptr [eax]
0x3a1f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3a22:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3a29:     74 05                           	je 0x3a30 <function_3a30>
; data inside code section at 0x3a2b -- 0x3a2c
0x3a2b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3a2c -- 0x3a2d
; data inside code section at 0x3a2d -- 0x3a30
0x3a2d:     ff ff ff                                           |...             |
; function: function_3a30 at 0x3a30 -- 0x3a32
0x3a30:     c9                              	leave 
0x3a31:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_baseC2Ev
; function: _ZN5boost6detail15sp_counted_baseC1Ev at 0x3a32 -- 0x3a72
0x3a32:     55                              	push ebp
0x3a33:     89 e5                           	mov ebp, esp
0x3a35:     83 ec 28                        	sub esp, 0x28
0x3a38:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3a3b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3a3e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3a44:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3a47:     31 c0                           	xor eax, eax
0x3a49:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3a4c:     c7 00 d4 b6 01 00               	mov dword ptr [eax], 0x1b6d4
0x3a52:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3a55:     c7 40 04 01 00 00 00            	mov dword ptr [eax + 4], 1
0x3a5c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3a5f:     c7 40 08 01 00 00 00            	mov dword ptr [eax + 8], 1
0x3a66:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3a69:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3a70:     74 05                           	je 0x3a77 <function_3a77>
; data inside code section at 0x3a72 -- 0x3a73
0x3a72:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3a73 -- 0x3a74
; data inside code section at 0x3a74 -- 0x3a77
0x3a74:     ff ff ff                                           |...             |
; function: function_3a77 at 0x3a77 -- 0x3a79
0x3a77:     c9                              	leave 
0x3a78:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0x3a7a -- 0x3aac
0x3a7a:     55                              	push ebp
0x3a7b:     89 e5                           	mov ebp, esp
0x3a7d:     83 ec 38                        	sub esp, 0x38
0x3a80:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3a83:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3a86:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3a8c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3a8f:     31 c0                           	xor eax, eax
0x3a91:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3a94:     c7 00 d4 b6 01 00               	mov dword ptr [eax], 0x1b6d4
0x3a9a:     b8 00 00 00 00                  	mov eax, 0
0x3a9f:     83 e0 01                        	and eax, 1
0x3aa2:     84 c0                           	test al, al
0x3aa4:     74 0b                           	je 0x3ab1 <function_3ab1>
0x3aa6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3aa9:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x3aac -- 0x3aad
0x3aac:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3aad -- 0x3aae
; data inside code section at 0x3aae -- 0x3ab1
0x3aae:     ff ff ff                                           |...             |
; function: function_3ab1 at 0x3ab1 -- 0x3abd
0x3ab1:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3ab4:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3abb:     74 05                           	je 0x3ac2 <function_3ac2>
; data inside code section at 0x3abd -- 0x3abe
0x3abd:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3abe -- 0x3abf
; data inside code section at 0x3abf -- 0x3ac2
0x3abf:     ff ff ff                                           |...             |
; function: function_3ac2 at 0x3ac2 -- 0x3ac4
0x3ac2:     c9                              	leave 
0x3ac3:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0x3ac4 -- 0x3aec
0x3ac4:     55                              	push ebp
0x3ac5:     89 e5                           	mov ebp, esp
0x3ac7:     83 ec 38                        	sub esp, 0x38
0x3aca:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3acd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3ad0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3ad6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3ad9:     31 c0                           	xor eax, eax
0x3adb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3ade:     89 04 24                        	mov dword ptr [esp], eax
0x3ae1:     e8 58 3a 00 00                  	call 0x753e
0x3ae6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3ae9:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x3aec -- 0x3aed
0x3aec:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3aed -- 0x3aee
; data inside code section at 0x3aee -- 0x3afe
0x3aee:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x3afe -- 0x3aff
; data inside code section at 0x3aff -- 0x3b01
0x3aff:     ff ff                                              |..              |
; function: function_3b01 at 0x3b01 -- 0x3b04
0x3b01:     ff c9                           	dec ecx
0x3b03:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0x3b04 -- 0x3b3f
0x3b04:     55                              	push ebp
0x3b05:     89 e5                           	mov ebp, esp
0x3b07:     83 ec 38                        	sub esp, 0x38
0x3b0a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3b0d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3b10:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3b16:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3b19:     31 c0                           	xor eax, eax
0x3b1b:     83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x3b1f:     74 12                           	je 0x3b33 <_ZN5boost6detail15sp_counted_base7destroyEv+0x2f>
0x3b21:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3b24:     8b 00                           	mov eax, dword ptr [eax]
0x3b26:     83 c0 04                        	add eax, 4
0x3b29:     8b 10                           	mov edx, dword ptr [eax]
0x3b2b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3b2e:     89 04 24                        	mov dword ptr [esp], eax
0x3b31:     ff d2                           	call edx
0x3b33:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3b36:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3b3d:     74 05                           	je 0x3b44 <function_3b44>
; data inside code section at 0x3b3f -- 0x3b40
0x3b3f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3b40 -- 0x3b41
; data inside code section at 0x3b41 -- 0x3b44
0x3b41:     ff ff ff                                           |...             |
; function: function_3b44 at 0x3b44 -- 0x3b46
0x3b44:     c9                              	leave 
0x3b45:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_base12add_ref_copyEv
; function: _ZN5boost6detail15sp_counted_base12add_ref_copyEv at 0x3b46 -- 0x3b77
0x3b46:     55                              	push ebp
0x3b47:     89 e5                           	mov ebp, esp
0x3b49:     83 ec 38                        	sub esp, 0x38
0x3b4c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3b4f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3b52:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3b58:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3b5b:     31 c0                           	xor eax, eax
0x3b5d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3b60:     83 c0 04                        	add eax, 4
0x3b63:     89 04 24                        	mov dword ptr [esp], eax
0x3b66:     e8 da 39 00 00                  	call 0x7545
0x3b6b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3b6e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3b75:     74 05                           	je 0x3b7c <function_3b7c>
; data inside code section at 0x3b77 -- 0x3b78
0x3b77:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3b78 -- 0x3b79
; data inside code section at 0x3b79 -- 0x3b7c
0x3b79:     ff ff ff                                           |...             |
; function: function_3b7c at 0x3b7c -- 0x3b7e
0x3b7c:     c9                              	leave 
0x3b7d:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_base7releaseEv
; function: _ZN5boost6detail15sp_counted_base7releaseEv at 0x3b7e -- 0x3bde
0x3b7e:     55                              	push ebp
0x3b7f:     89 e5                           	mov ebp, esp
0x3b81:     83 ec 38                        	sub esp, 0x38
0x3b84:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3b87:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3b8a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3b90:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3b93:     31 c0                           	xor eax, eax
0x3b95:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3b98:     83 c0 04                        	add eax, 4
0x3b9b:     c7 44 24 04 ff ff ff ff         	mov dword ptr [esp + 4], 0xffffffff
0x3ba3:     89 04 24                        	mov dword ptr [esp], eax
0x3ba6:     e8 88 39 00 00                  	call 0x7533 <__stack_chk_fail>
0x3bab:     83 f8 01                        	cmp eax, 1
0x3bae:     0f 94 c0                        	sete al
0x3bb1:     84 c0                           	test al, al
0x3bb3:     74 1d                           	je 0x3bd2 <_ZN5boost6detail15sp_counted_base7releaseEv+0x54>
0x3bb5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3bb8:     8b 00                           	mov eax, dword ptr [eax]
0x3bba:     83 c0 08                        	add eax, 8
0x3bbd:     8b 10                           	mov edx, dword ptr [eax]
0x3bbf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3bc2:     89 04 24                        	mov dword ptr [esp], eax
0x3bc5:     ff d2                           	call edx
0x3bc7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3bca:     89 04 24                        	mov dword ptr [esp], eax
0x3bcd:     e8 92 3b 00 00                  	call 0x7764
0x3bd2:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3bd5:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3bdc:     74 05                           	je 0x3be3 <function_3be3>
; data inside code section at 0x3bde -- 0x3bdf
0x3bde:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3bdf -- 0x3be0
; data inside code section at 0x3be0 -- 0x3be3
0x3be0:     ff ff ff                                           |...             |
; function: function_3be3 at 0x3be3 -- 0x3be5
0x3be3:     c9                              	leave 
0x3be4:     c3                              	ret 
; section: .text._ZN5boost6detail15sp_counted_base12weak_releaseEv
; function: _ZN5boost6detail15sp_counted_base12weak_releaseEv at 0x3be6 -- 0x3c3b
0x3be6:     55                              	push ebp
0x3be7:     89 e5                           	mov ebp, esp
0x3be9:     83 ec 38                        	sub esp, 0x38
0x3bec:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3bef:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3bf2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3bf8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3bfb:     31 c0                           	xor eax, eax
0x3bfd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3c00:     83 c0 08                        	add eax, 8
0x3c03:     c7 44 24 04 ff ff ff ff         	mov dword ptr [esp + 4], 0xffffffff
0x3c0b:     89 04 24                        	mov dword ptr [esp], eax
0x3c0e:     e8 88 39 00 00                  	call 0x759b <function_759b>
0x3c13:     83 f8 01                        	cmp eax, 1
0x3c16:     0f 94 c0                        	sete al
0x3c19:     84 c0                           	test al, al
0x3c1b:     74 12                           	je 0x3c2f <_ZN5boost6detail15sp_counted_base12weak_releaseEv+0x49>
0x3c1d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3c20:     8b 00                           	mov eax, dword ptr [eax]
0x3c22:     83 c0 0c                        	add eax, 0xc
0x3c25:     8b 10                           	mov edx, dword ptr [eax]
0x3c27:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3c2a:     89 04 24                        	mov dword ptr [esp], eax
0x3c2d:     ff d2                           	call edx
0x3c2f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3c32:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3c39:     74 05                           	je 0x3c40 <function_3c40>
; data inside code section at 0x3c3b -- 0x3c3c
0x3c3b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3c3c -- 0x3c3d
; data inside code section at 0x3c3d -- 0x3c40
0x3c3d:     ff ff ff                                           |...             |
; function: function_3c40 at 0x3c40 -- 0x3c42
0x3c40:     c9                              	leave 
0x3c41:     c3                              	ret 
; section: .text._ZN5boost6detail12shared_countD2Ev
; function: _ZN5boost6detail12shared_countD1Ev at 0x3c42 -- 0x3c7b
0x3c42:     55                              	push ebp
0x3c43:     89 e5                           	mov ebp, esp
0x3c45:     83 ec 38                        	sub esp, 0x38
0x3c48:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3c4b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3c4e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3c54:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3c57:     31 c0                           	xor eax, eax
0x3c59:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3c5c:     8b 00                           	mov eax, dword ptr [eax]
0x3c5e:     85 c0                           	test eax, eax
0x3c60:     74 0d                           	je 0x3c6f <_ZN5boost6detail12shared_countD1Ev+0x2d>
0x3c62:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3c65:     8b 00                           	mov eax, dword ptr [eax]
0x3c67:     89 04 24                        	mov dword ptr [esp], eax
0x3c6a:     e8 51 3b 00 00                  	call 0x77c0
0x3c6f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3c72:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3c79:     74 05                           	je 0x3c80 <function_3c80>
; data inside code section at 0x3c7b -- 0x3c7c
0x3c7b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3c7c -- 0x3c7d
; data inside code section at 0x3c7d -- 0x3c80
0x3c7d:     ff ff ff                                           |...             |
; function: function_3c80 at 0x3c80 -- 0x3c82
0x3c80:     c9                              	leave 
0x3c81:     c3                              	ret 
; section: .text._ZN5boost6detail12shared_countC2ERKS1_
; function: _ZN5boost6detail12shared_countC1ERKS1_ at 0x3c82 -- 0x3ccb
0x3c82:     55                              	push ebp
0x3c83:     89 e5                           	mov ebp, esp
0x3c85:     83 ec 38                        	sub esp, 0x38
0x3c88:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x3c8b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x3c8e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x3c91:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x3c94:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3c9a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3c9d:     31 c0                           	xor eax, eax
0x3c9f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x3ca2:     8b 10                           	mov edx, dword ptr [eax]
0x3ca4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3ca7:     89 10                           	mov dword ptr [eax], edx
0x3ca9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3cac:     8b 00                           	mov eax, dword ptr [eax]
0x3cae:     85 c0                           	test eax, eax
0x3cb0:     74 0d                           	je 0x3cbf <_ZN5boost6detail12shared_countC1ERKS1_+0x3d>
0x3cb2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x3cb5:     8b 00                           	mov eax, dword ptr [eax]
0x3cb7:     89 04 24                        	mov dword ptr [esp], eax
0x3cba:     e8 09 3b 00 00                  	call 0x77c8
0x3cbf:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3cc2:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3cc9:     74 05                           	je 0x3cd0 <function_3cd0>
; data inside code section at 0x3ccb -- 0x3ccc
0x3ccb:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3ccc -- 0x3ccd
; data inside code section at 0x3ccd -- 0x3cd0
0x3ccd:     ff ff ff                                           |...             |
; function: function_3cd0 at 0x3cd0 -- 0x3cd2
0x3cd0:     c9                              	leave 
0x3cd1:     c3                              	ret 
; section: .text._ZN5boost6detail26sp_enable_shared_from_thisEz
; function: _ZN5boost6detail26sp_enable_shared_from_thisEz at 0x3cd2 -- 0x3cef
0x3cd2:     55                              	push ebp
0x3cd3:     89 e5                           	mov ebp, esp
0x3cd5:     83 ec 18                        	sub esp, 0x18
0x3cd8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x3cde:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x3ce1:     31 c0                           	xor eax, eax
0x3ce3:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x3ce6:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x3ced:     74 05                           	je 0x3cf4 <function_3cf4>
; data inside code section at 0x3cef -- 0x3cf0
0x3cef:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3cf0 -- 0x3cf1
; data inside code section at 0x3cf1 -- 0x3cf4
0x3cf1:     ff ff ff                                           |...             |
; function: function_3cf4 at 0x3cf4 -- 0x3cf6
0x3cf4:     c9                              	leave 
0x3cf5:     c3                              	ret 
; section: .text._Z16GetSerializeSizecii
; function: _Z16GetSerializeSizecii at 0x4330 -- 0x4364
0x4330:     55                              	push ebp
0x4331:     89 e5                           	mov ebp, esp
0x4333:     83 ec 28                        	sub esp, 0x28
0x4336:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4339:     88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x433c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x433f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4342:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x4345:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x4348:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x434e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4351:     31 c0                           	xor eax, eax
0x4353:     b8 01 00 00 00                  	mov eax, 1
0x4358:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x435b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4362:     74 05                           	je 0x4369 <function_4369>
; data inside code section at 0x4364 -- 0x4365
0x4364:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4365 -- 0x4366
; data inside code section at 0x4366 -- 0x4369
0x4366:     ff ff ff                                           |...             |
; function: function_4369 at 0x4369 -- 0x436b
0x4369:     c9                              	leave 
0x436a:     c3                              	ret 
; section: .text._Z16GetSerializeSizeiii
; function: _Z16GetSerializeSizeiii at 0x436b -- 0x4374
0x436b:     55                              	push ebp
0x436c:     89 e5                           	mov ebp, esp
0x436e:     83 ec 28                        	sub esp, 0x28
0x4371:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x4374 -- 0x4376
0x4374:     89 45                                              |.E              |
; function: function_4376 at 0x4376 -- 0x439f
0x4376:     e4 8b                           	in al, 0x8b
0x4378:     45                              	inc ebp
0x4379:     0c 89                           	or al, 0x89
0x437b:     45                              	inc ebp
0x437c:     e0 8b                           	loopne 0x4309 <function_4309>
0x437e:     45                              	inc ebp
0x437f:     10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0x4385:     14 00                           	adc al, 0
0x4387:     00 00                           	add byte ptr [eax], al
0x4389:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x438c:     31 c0                           	xor eax, eax
0x438e:     b8 04 00 00 00                  	mov eax, 4
0x4393:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4396:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x439d:     74 05                           	je 0x43a4 <function_43a4>
; data inside code section at 0x439f -- 0x43a0
0x439f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x43a0 -- 0x43a1
; data inside code section at 0x43a1 -- 0x43a4
0x43a1:     ff ff ff                                           |...             |
; function: function_43a4 at 0x43a4 -- 0x43a6
0x43a4:     c9                              	leave 
0x43a5:     c3                              	ret 
; section: .text._Z16GetSerializeSizejii
; function: _Z16GetSerializeSizejii at 0x43a6 -- 0x43da
0x43a6:     55                              	push ebp
0x43a7:     89 e5                           	mov ebp, esp
0x43a9:     83 ec 28                        	sub esp, 0x28
0x43ac:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x43af:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x43b2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x43b5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x43b8:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x43bb:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x43be:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x43c4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x43c7:     31 c0                           	xor eax, eax
0x43c9:     b8 04 00 00 00                  	mov eax, 4
0x43ce:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x43d1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x43d8:     74 05                           	je 0x43df <function_43df>
; data inside code section at 0x43da -- 0x43db
0x43da:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x43db -- 0x43dc
; data inside code section at 0x43dc -- 0x43df
0x43dc:     ff ff ff                                           |...             |
; function: function_43df at 0x43df -- 0x43e1
0x43df:     c9                              	leave 
0x43e0:     c3                              	ret 
; section: .text._Z20GetSizeOfCompactSizey
; function: _Z20GetSizeOfCompactSizey at 0x43e1 -- 0x4446
0x43e1:     55                              	push ebp
0x43e2:     89 e5                           	mov ebp, esp
0x43e4:     83 ec 28                        	sub esp, 0x28
0x43e7:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x43ea:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x43ed:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x43f0:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x43f3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x43f9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x43fc:     31 c0                           	xor eax, eax
0x43fe:     83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x4402:     77 16                           	ja 0x441a <_Z20GetSizeOfCompactSizey+0x39>
0x4404:     83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x4408:     72 09                           	jb 0x4413 <_Z20GetSizeOfCompactSizey+0x32>
0x440a:     81 7d e0 fc 00 00 00            	cmp dword ptr [ebp - 0x20], 0xfc
0x4411:     77 07                           	ja 0x441a <_Z20GetSizeOfCompactSizey+0x39>
0x4413:     b8 01 00 00 00                  	mov eax, 1
0x4418:     eb 66                           	jmp 0x4480
0x441a:     e8 40 29 00 00                  	call 0x6d5f
0x441f:     89 c1                           	mov ecx, eax
0x4421:     0f b7 c1                        	movzx eax, cx
0x4424:     ba 00 00 00 00                  	mov edx, 0
0x4429:     b9 01 00 00 00                  	mov ecx, 1
0x442e:     3b 55 e4                        	cmp edx, dword ptr [ebp - 0x1c]
0x4431:     77 0f                           	ja 0x4442 <_Z20GetSizeOfCompactSizey+0x61>
0x4433:     3b 55 e4                        	cmp edx, dword ptr [ebp - 0x1c]
0x4436:     72 05                           	jb 0x443d <_Z20GetSizeOfCompactSizey+0x5c>
0x4438:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x443b:     73 05                           	jae 0x4442 <_Z20GetSizeOfCompactSizey+0x61>
0x443d:     b9 00 00 00 00                  	mov ecx, 0
0x4442:     84 c9                           	test cl, cl
0x4444:     74 07                           	je 0x444d
; data inside code section at 0x4446 -- 0x4448
0x4446:     b8 03                                              |..              |
; function: function_4448 at 0x4448 -- 0x448c
0x4448:     00 00                           	add byte ptr [eax], al
0x444a:     00 eb                           	add bl, ch
0x444c:     33 e8                           	xor ebp, eax
0x444e:     36 29 00                        	sub dword ptr ss:[eax], eax
0x4451:     00 ba 00 00 00 00               	add byte ptr [edx], bh
0x4457:     b9 01 00 00 00                  	mov ecx, 1
0x445c:     3b 55 e4                        	cmp edx, dword ptr [ebp - 0x1c]
0x445f:     77 0f                           	ja 0x4470 <function_4448+0x28>
0x4461:     3b 55 e4                        	cmp edx, dword ptr [ebp - 0x1c]
0x4464:     72 05                           	jb 0x446b <function_4448+0x23>
0x4466:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x4469:     73 05                           	jae 0x4470 <function_4448+0x28>
0x446b:     b9 00 00 00 00                  	mov ecx, 0
0x4470:     84 c9                           	test cl, cl
0x4472:     74 07                           	je 0x447b <function_4448+0x33>
0x4474:     b8 05 00 00 00                  	mov eax, 5
0x4479:     eb 05                           	jmp 0x4480 <function_4448+0x38>
0x447b:     b8 09 00 00 00                  	mov eax, 9
0x4480:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4483:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x448a:     74 05                           	je 0x4491 <function_4491>
; data inside code section at 0x448c -- 0x448d
0x448c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x448d -- 0x448e
; function: function_448e at 0x448e -- 0x448f
; data inside code section at 0x448f -- 0x4491
0x448f:     ff ff                                              |..              |
; function: function_4491 at 0x4491 -- 0x4493
0x4491:     c9                              	leave 
0x4492:     c3                              	ret 
; section: .text._ZN9CFlatDataC2EPvS0_
; function: _ZN9CFlatDataC1EPvS0_ at 0x4494 -- 0x44d4
0x4494:     55                              	push ebp
0x4495:     89 e5                           	mov ebp, esp
0x4497:     83 ec 28                        	sub esp, 0x28
0x449a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x449d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x44a0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x44a3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x44a6:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x44a9:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x44ac:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x44b2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x44b5:     31 c0                           	xor eax, eax
0x44b7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x44ba:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x44bd:     89 10                           	mov dword ptr [eax], edx
0x44bf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x44c2:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x44c5:     89 50 04                        	mov dword ptr [eax + 4], edx
0x44c8:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x44cb:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x44d2:     74 05                           	je 0x44d9 <function_44d9>
; data inside code section at 0x44d4 -- 0x44d5
0x44d4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x44d5 -- 0x44d6
; data inside code section at 0x44d6 -- 0x44d9
0x44d6:     ff ff ff                                           |...             |
; function: function_44d9 at 0x44d9 -- 0x44db
0x44d9:     c9                              	leave 
0x44da:     c3                              	ret 
; section: .text._ZN11CDataStreamC2Eii
; function: _ZN11CDataStreamC1Eii at 0x44dc -- 0x452f
0x44dc:     55                              	push ebp
0x44dd:     89 e5                           	mov ebp, esp
0x44df:     83 ec 38                        	sub esp, 0x38
0x44e2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x44e5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x44e8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x44eb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x44ee:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x44f1:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x44f4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x44fa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x44fd:     31 c0                           	xor eax, eax
0x44ff:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4502:     89 04 24                        	mov dword ptr [esp], eax
0x4505:     e8 56 7b 00 00                  	call 0xc060
0x450a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x450d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x4511:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4514:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x4518:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x451b:     89 04 24                        	mov dword ptr [esp], eax
0x451e:     e8 9f 45 00 00                  	call 0x8ac2 <function_8ac2>
0x4523:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4526:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x452d:     74 05                           	je 0x4534 <function_4534>
; data inside code section at 0x452f -- 0x4530
0x452f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4530 -- 0x4531
; data inside code section at 0x4531 -- 0x4534
0x4531:     ff ff ff                                           |...             |
; function: function_4534 at 0x4534 -- 0x4536
0x4534:     c9                              	leave 
0x4535:     c3                              	ret 
; section: .text._ZN11CDataStreamC2EPKcS1_ii
; function: _ZN11CDataStreamC1EPKcS1_ii at 0x4536 -- 0x458c
0x4536:     55                              	push ebp
0x4537:     89 e5                           	mov ebp, esp
0x4539:     53                              	push ebx
0x453a:     83 ec 44                        	sub esp, 0x44
0x453d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4540:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4543:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4546:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4549:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x454c:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x454f:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x4552:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x4555:     8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x4558:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x455b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4561:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4564:     31 c0                           	xor eax, eax
0x4566:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x4569:     89 04 24                        	mov dword ptr [esp], eax
0x456c:     e8 f9 7b 00 00                  	call 0xc16a
0x4571:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4574:     8d 55 f3                        	lea edx, [ebp - 0xd]
0x4577:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x457b:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x457e:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x4582:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x4585:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4589:     89 04 24                        	mov dword ptr [esp], eax
; function: function_458c at 0x458c -- 0x45c3
0x458c:     e8 45 7c 00 00                  	call 0xc1d6 <function_c1d6>
0x4591:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x4594:     89 04 24                        	mov dword ptr [esp], eax
0x4597:     e8 04 7c 00 00                  	call 0xc1a0 <function_c1a0>
0x459c:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x459f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x45a3:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x45a6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x45aa:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x45ad:     89 04 24                        	mov dword ptr [esp], eax
0x45b0:     e8 67 45 00 00                  	call 0x8b1c <function_8b1c>
0x45b5:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x45b8:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x45bf:     74 1e                           	je 0x45df <function_45df>
0x45c1:     eb 17                           	jmp 0x45da <function_45da>
; data inside code section at 0x45c3 -- 0x45c4
0x45c3:     89                                                 |.               |
; function: function_45c4 at 0x45c4 -- 0x45c5
0x45c4:     c3                              	ret 
; data inside code section at 0x45c5 -- 0x45d6
0x45c5:     8d 45 f3 89 04 24 e8 d0  7b 00 00 89 d8 89 04 24   |.E...$..{......$|
0x45d5:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x45d6 -- 0x45d7
; data inside code section at 0x45d7 -- 0x45da
0x45d7:     ff ff ff                                           |...             |
; function: function_45da at 0x45da -- 0x45df
0x45da:     e8 fc ff ff ff                  	call 0x45db
; function: function_45df at 0x45df -- 0x45e5
0x45df:     83 c4 44                        	add esp, 0x44
0x45e2:     5b                              	pop ebx
0x45e3:     5d                              	pop ebp
0x45e4:     c3                              	ret 
; section: .text._ZN11CDataStream4InitEii
; function: _ZN11CDataStream4InitEii at 0x45e6 -- 0x4628
0x45e6:     55                              	push ebp
0x45e7:     89 e5                           	mov ebp, esp
0x45e9:     83 ec 38                        	sub esp, 0x38
0x45ec:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x45ef:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x45f2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x45f5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x45f8:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x45fb:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x45fe:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4604:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4607:     31 c0                           	xor eax, eax
0x4609:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x460c:     c7 40 0c 00 00 00 00            	mov dword ptr [eax + 0xc], 0
0x4613:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4616:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x4619:     89 50 14                        	mov dword ptr [eax + 0x14], edx
0x461c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x461f:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x4622:     89 50 18                        	mov dword ptr [eax + 0x18], edx
0x4625:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x4628 -- 0x462c
0x4628:     66 c7 40 10                                        |f.@.            |
; function: function_462c at 0x462c -- 0x4657
0x462c:     00 00                           	add byte ptr [eax], al
0x462e:     c7 44 24 04 04 00 00 00         	mov dword ptr [esp + 4], 4
0x4636:     c7 04 24 01 00 00 00            	mov dword ptr [esp], 1
0x463d:     e8 74 29 00 00                  	call 0x6fb6 <function_6fb6>
0x4642:     89 c2                           	mov edx, eax
0x4644:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4647:     66 89 50 12                     	mov word ptr [eax + 0x12], dx
0x464b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x464e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4655:     74 05                           	je 0x465c <function_465c>
; data inside code section at 0x4657 -- 0x4658
0x4657:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4658 -- 0x4659
; data inside code section at 0x4659 -- 0x465c
0x4659:     ff ff ff                                           |...             |
; function: function_465c at 0x465c -- 0x465e
0x465c:     c9                              	leave 
0x465d:     c3                              	ret 
; section: .text._ZN11CDataStreamD2Ev
; function: _ZN11CDataStreamD1Ev at 0x465e -- 0x4693
0x465e:     55                              	push ebp
0x465f:     89 e5                           	mov ebp, esp
0x4661:     83 ec 38                        	sub esp, 0x38
0x4664:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4667:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x466a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4670:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4673:     31 c0                           	xor eax, eax
0x4675:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4678:     89 04 24                        	mov dword ptr [esp], eax
0x467b:     e8 98 7b 00 00                  	call 0xc218 <function_c218>
0x4680:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4683:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x468a:     74 05                           	je 0x4691 <_ZN11CDataStreamD1Ev+0x33>
0x468c:     e8 fc ff ff ff                  	call 0x468d
0x4691:     c9                              	leave 
0x4692:     c3                              	ret 
; section: .text._ZNK11CDataStream3strEv
; function: _ZNK11CDataStream3strEv at 0x4694 -- 0x46b8
0x4694:     55                              	push ebp
0x4695:     89 e5                           	mov ebp, esp
0x4697:     53                              	push ebx
0x4698:     83 ec 34                        	sub esp, 0x34
0x469b:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x469e:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x46a1:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x46a4:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x46a7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x46ad:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x46b0:     31 c0                           	xor eax, eax
0x46b2:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x46b5:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x46b8 -- 0x46b9
0x46b8:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC1Ev at 0x46b9 -- 0x46ba
; data inside code section at 0x46ba -- 0x46fe
0x46ba:     ff ff ff 8d 45 ec 8b 55  e0 89 54 24 04 89 04 24   |....E..U..T$...$|
0x46ca:     e8 7b 47 00 00 83 ec 04  8d 45 e8 8b 55 e0 89 54   |.{G......E..U..T|
0x46da:     24 04 89 04 24 e8 f6 46  00 00 83 ec 04 8d 45 f3   |$...$..F......E.|
0x46ea:     89 44 24 0c 8b 45 ec 89  44 24 08 8b 45 e8 89 44   |.D$..E..D$..E..D|
0x46fa:     24 04 8b 45                                        |$..E            |
; function: function_46fe at 0x46fe -- 0x4702
0x46fe:     e4 89                           	in al, 0x89
0x4700:     04 24                           	add al, 0x24
; data inside code section at 0x4702 -- 0x4706
0x4702:     e8 41 7e 00                                        |.A~.            |
; function: function_4706 at 0x4706 -- 0x470e
0x4706:     00 8d 45 f3 89 04               	add byte ptr [ebp + 0x489f345], cl
0x470c:     24 e8                           	and al, 0xe8
; dynamically linked function: _ZNSaIcED1Ev at 0x470e -- 0x470f
; data inside code section at 0x470f -- 0x4711
0x470f:     ff ff                                              |..              |
; function: function_4711 at 0x4711 -- 0x4723
0x4711:     ff 8b 45 e4 8b 55               	dec dword ptr [ebx + 0x558be445]
0x4717:     f4                              	hlt 
0x4718:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x471f:     74 1e                           	je 0x473f <function_473f>
0x4721:     eb 17                           	jmp 0x473a <function_473a>
; data inside code section at 0x4723 -- 0x4724
0x4723:     89                                                 |.               |
; function: function_4724 at 0x4724 -- 0x4725
0x4724:     c3                              	ret 
; data inside code section at 0x4725 -- 0x472c
0x4725:     8d 45 f3 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSaIcED1Ev at 0x472c -- 0x472d
; data inside code section at 0x472d -- 0x4736
0x472d:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x4736 -- 0x4737
; data inside code section at 0x4737 -- 0x473a
0x4737:     ff ff ff                                           |...             |
; function: function_473a at 0x473a -- 0x473b
; dynamically linked function: __stack_chk_fail at 0x473b -- 0x473c
; data inside code section at 0x473c -- 0x473f
0x473c:     ff ff ff                                           |...             |
; function: function_473f at 0x473f -- 0x4746
0x473f:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x4742:     c9                              	leave 
0x4743:     c2 04 00                        	ret 4
; section: .text._ZNK11CDataStream5beginEv
; function: _ZNK11CDataStream5beginEv at 0x4746 -- 0x47ac
0x4746:     55                              	push ebp
0x4747:     89 e5                           	mov ebp, esp
0x4749:     83 ec 38                        	sub esp, 0x38
0x474c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x474f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4752:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4755:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4758:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x475e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4761:     31 c0                           	xor eax, eax
0x4763:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4766:     8b 40 0c                        	mov eax, dword ptr [eax + 0xc]
0x4769:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x476c:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x476f:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x4772:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4776:     89 04 24                        	mov dword ptr [esp], eax
0x4779:     e8 f2 7c 00 00                  	call 0xc470 <function_c470>
0x477e:     83 ec 04                        	sub esp, 4
0x4781:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4784:     8d 55 f0                        	lea edx, [ebp - 0x10]
0x4787:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x478b:     8d 55 ec                        	lea edx, [ebp - 0x14]
0x478e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4792:     89 04 24                        	mov dword ptr [esp], eax
0x4795:     e8 ce 7e 00 00                  	call 0xc668
0x479a:     83 ec 04                        	sub esp, 4
0x479d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x47a0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x47a3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x47aa:     74 05                           	je 0x47b1 <function_47b1>
; data inside code section at 0x47ac -- 0x47ad
0x47ac:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x47ad -- 0x47ae
; data inside code section at 0x47ae -- 0x47b1
0x47ae:     ff ff ff                                           |...             |
; function: function_47b1 at 0x47b1 -- 0x47b5
0x47b1:     c9                              	leave 
0x47b2:     c2 04 00                        	ret 4
; section: .text._ZNK11CDataStream3endEv
; function: _ZNK11CDataStream3endEv at 0x47b6 -- 0x47f7
0x47b6:     55                              	push ebp
0x47b7:     89 e5                           	mov ebp, esp
0x47b9:     83 ec 38                        	sub esp, 0x38
0x47bc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x47bf:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x47c2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x47c5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x47c8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x47ce:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x47d1:     31 c0                           	xor eax, eax
0x47d3:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x47d6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x47d9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x47dd:     89 04 24                        	mov dword ptr [esp], eax
0x47e0:     e8 4b 7d 00 00                  	call 0xc530 <function_c530>
0x47e5:     83 ec 04                        	sub esp, 4
0x47e8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x47eb:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x47ee:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x47f5:     74 05                           	je 0x47fc <function_47fc>
; data inside code section at 0x47f7 -- 0x47f8
0x47f7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x47f8 -- 0x47f9
; data inside code section at 0x47f9 -- 0x47fa
0x47f9:     ff                                                 |.               |
; function: function_47fa at 0x47fa -- 0x47fb
; data inside code section at 0x47fb -- 0x47fc
0x47fb:     ff                                                 |.               |
; function: function_47fc at 0x47fc -- 0x4800
0x47fc:     c9                              	leave 
0x47fd:     c2 04 00                        	ret 4
; section: .text._ZNK11CDataStream4sizeEv
; function: _ZNK11CDataStream4sizeEv at 0x4800 -- 0x4836
0x4800:     55                              	push ebp
0x4801:     89 e5                           	mov ebp, esp
0x4803:     83 ec 38                        	sub esp, 0x38
0x4806:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4809:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x480c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4812:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4815:     31 c0                           	xor eax, eax
0x4817:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x481a:     89 04 24                        	mov dword ptr [esp], eax
0x481d:     e8 5c 7f 00 00                  	call 0xc77e <function_c77e>
0x4822:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x4825:     8b 52 0c                        	mov edx, dword ptr [edx + 0xc]
0x4828:     29 d0                           	sub eax, edx
0x482a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x482d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4834:     74 05                           	je 0x483b <function_483b>
; data inside code section at 0x4836 -- 0x4837
0x4836:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4837 -- 0x4838
; data inside code section at 0x4838 -- 0x483b
0x4838:     ff ff ff                                           |...             |
; function: function_483b at 0x483b -- 0x483d
0x483b:     c9                              	leave 
0x483c:     c3                              	ret 
; section: .text._ZN11CDataStream7reserveEj
; function: _ZN11CDataStream7reserveEj at 0x483e -- 0x4881
0x483e:     55                              	push ebp
0x483f:     89 e5                           	mov ebp, esp
0x4841:     83 ec 38                        	sub esp, 0x38
0x4844:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4847:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x484a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x484d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4850:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4856:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4859:     31 c0                           	xor eax, eax
0x485b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x485e:     8b 40 0c                        	mov eax, dword ptr [eax + 0xc]
0x4861:     89 c2                           	mov edx, eax
0x4863:     03 55 e0                        	add edx, dword ptr [ebp - 0x20]
0x4866:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4869:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x486d:     89 04 24                        	mov dword ptr [esp], eax
0x4870:     e8 85 7f 00 00                  	call 0xc7fa <function_c7fa>
0x4875:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4878:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x487f:     74 05                           	je 0x4886 <function_4886>
; data inside code section at 0x4881 -- 0x4882
0x4881:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4882 -- 0x4883
; data inside code section at 0x4883 -- 0x4886
0x4883:     ff ff ff                                           |...             |
; function: function_4886 at 0x4886 -- 0x4888
0x4886:     c9                              	leave 
0x4887:     c3                              	ret 
; section: .text._ZN11CDataStreamixEj
; function: _ZN11CDataStreamixEj at 0x4888 -- 0x48d2
0x4888:     55                              	push ebp
0x4889:     89 e5                           	mov ebp, esp
0x488b:     83 ec 38                        	sub esp, 0x38
0x488e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4891:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4894:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4897:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x489a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x48a0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x48a3:     31 c0                           	xor eax, eax
0x48a5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x48a8:     8b 40 0c                        	mov eax, dword ptr [eax + 0xc]
0x48ab:     89 c2                           	mov edx, eax
0x48ad:     03 55 e0                        	add edx, dword ptr [ebp - 0x20]
0x48b0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x48b3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x48b7:     89 04 24                        	mov dword ptr [esp], eax
0x48ba:     e8 9f 80 00 00                  	call 0xc95e
0x48bf:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x48c2:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x48c9:     74 05                           	je 0x48d0 <_ZN11CDataStreamixEj+0x48>
0x48cb:     e8 fc ff ff ff                  	call 0x48cc
0x48d0:     c9                              	leave 
0x48d1:     c3                              	ret 
; section: .text._ZN11CDataStream8setstateEsPKc
; function: _ZN11CDataStream8setstateEsPKc at 0x48d2 -- 0x492c
0x48d2:     55                              	push ebp
0x48d3:     89 e5                           	mov ebp, esp
0x48d5:     56                              	push esi
0x48d6:     53                              	push ebx
0x48d7:     83 ec 30                        	sub esp, 0x30
0x48da:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x48dd:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x48e0:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x48e3:     66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x48e7:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x48ea:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x48ed:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x48f3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x48f6:     31 c0                           	xor eax, eax
0x48f8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x48fb:     0f b7 40 10                     	movzx eax, word ptr [eax + 0x10]
0x48ff:     89 c2                           	mov edx, eax
0x4901:     66 0b 55 e0                     	or dx, word ptr [ebp - 0x20]
0x4905:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4908:     66 89 50 10                     	mov word ptr [eax + 0x10], dx
0x490c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x490f:     0f b7 50 10                     	movzx edx, word ptr [eax + 0x10]
0x4913:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4916:     0f b7 40 12                     	movzx eax, word ptr [eax + 0x12]
0x491a:     21 d0                           	and eax, edx
0x491c:     66 85 c0                        	test ax, ax
0x491f:     0f 84 8f 00 00 00               	je 0x49b4 <function_49b4>
0x4925:     c7 04 24 08 00 00 00            	mov dword ptr [esp], 8
; data inside code section at 0x492c -- 0x492d
0x492c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x492d -- 0x492e
; data inside code section at 0x492e -- 0x4932
0x492e:     ff ff ff 89                                        |....            |
; function: function_4932 at 0x4932 -- 0x4933
0x4932:     c3                              	ret 
; data inside code section at 0x4933 -- 0x493a
0x4933:     8d 45 f3 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSaIcEC1Ev at 0x493a -- 0x493b
; data inside code section at 0x493b -- 0x4953
0x493b:     ff ff ff 8d 45 f3 89 44  24 08 8b 45 dc 89 44 24   |....E..D$..E..D$|
0x494b:     04 8d 45 ec 89 04 24 e8                            |..E...$.        |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x4953 -- 0x4954
; data inside code section at 0x4954 -- 0x4962
0x4954:     ff ff ff 8d 45 ec 89 44  24 04 89 1c 24 e8         |....E..D$...$.  |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x4962 -- 0x4963
; data inside code section at 0x4963 -- 0x496d
0x4963:     ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0x496d -- 0x496e
; data inside code section at 0x496e -- 0x497d
0x496e:     ff ff ff 8d 45 f3 89 04  24 e8 fc ff ff ff b8      |....E...$...... |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x497d -- 0x4985
; data inside code section at 0x4985 -- 0x4989
0x4985:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x4989 -- 0x4990
; data inside code section at 0x4990 -- 0x4991
0x4990:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x4991 -- 0x4992
; data inside code section at 0x4992 -- 0x499e
0x4992:     ff ff ff 89 c6 8d 45 f3  89 04 24 e8               |......E...$.    |
; dynamically linked function: _ZNSaIcED1Ev at 0x499e -- 0x499f
; data inside code section at 0x499f -- 0x49a6
0x499f:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_free_exception at 0x49a6 -- 0x49a7
; data inside code section at 0x49a7 -- 0x49b0
0x49a7:     ff ff ff 89 f0 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x49b0 -- 0x49b1
; data inside code section at 0x49b1 -- 0x49b4
0x49b1:     ff ff ff                                           |...             |
; function: function_49b4 at 0x49b4 -- 0x49cc
0x49b4:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x49b7:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x49be:     74 05                           	je 0x49c5 <function_49b4+0x11>
0x49c0:     e8 fc ff ff ff                  	call 0x49c1
0x49c5:     83 c4 30                        	add esp, 0x30
0x49c8:     5b                              	pop ebx
0x49c9:     5e                              	pop esi
0x49ca:     5d                              	pop ebp
0x49cb:     c3                              	ret 
; section: .text._ZNSt9exceptionC2ERKS_
; function: _ZNSt9exceptionC1ERKS_ at 0x49cc -- 0x49ec
0x49cc:     55                              	push ebp
0x49cd:     89 e5                           	mov ebp, esp
0x49cf:     83 ec 28                        	sub esp, 0x28
0x49d2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x49d5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x49d8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x49db:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x49de:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x49e4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x49e7:     31 c0                           	xor eax, eax
0x49e9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x49ec -- 0x49ee
0x49ec:     c7 00                                              |..              |
; dynamically linked function: _ZTVSt9exception at 0x49ee -- 0x49fe
; data inside code section at 0x49fe -- 0x49ff
0x49fe:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x49ff -- 0x4a00
; data inside code section at 0x4a00 -- 0x4a03
0x4a00:     ff ff ff                                           |...             |
; function: function_4a03 at 0x4a03 -- 0x4a05
0x4a03:     c9                              	leave 
0x4a04:     c3                              	ret 
; section: .text._ZN11CDataStream4readEPci
; function: _ZN11CDataStream4readEPci at 0x4a06 -- 0x4a4f
0x4a06:     55                              	push ebp
0x4a07:     89 e5                           	mov ebp, esp
0x4a09:     53                              	push ebx
0x4a0a:     83 ec 34                        	sub esp, 0x34
0x4a0d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4a10:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4a13:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4a16:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4a19:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x4a1c:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x4a1f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4a25:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4a28:     31 c0                           	xor eax, eax
0x4a2a:     83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x4a2e:     79 24                           	jns 0x4a54 <function_4a54>
0x4a30:     c7 44 24 0c a4 41 00 00         	mov dword ptr [esp + 0xc], 0x41a4 ; "CDataStream& CDataStream::read(char*, int)"
0x4a38:     c7 44 24 08 f0 03 00 00         	mov dword ptr [esp + 8], 0x3f0
0x4a40:     c7 44 24 04 07 3d 00 00         	mov dword ptr [esp + 4], 0x3d07 ; "serialize.h"
0x4a48:     c7 04 24 13 3d 00 00            	mov dword ptr [esp], 0x3d13 ; "nSize >= 0"
; data inside code section at 0x4a4f -- 0x4a50
0x4a4f:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x4a50 -- 0x4a51
; data inside code section at 0x4a51 -- 0x4a54
0x4a51:     ff ff ff                                           |...             |
; function: function_4a54 at 0x4a54 -- 0x4ac0
0x4a54:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4a57:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x4a5a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x4a5d:     01 d0                           	add eax, edx
0x4a5f:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x4a62:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4a65:     89 04 24                        	mov dword ptr [esp], eax
0x4a68:     e8 17 7f 00 00                  	call 0xc984
0x4a6d:     3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x4a70:     0f 96 c0                        	setbe al
0x4a73:     84 c0                           	test al, al
0x4a75:     0f 84 a5 00 00 00               	je 0x4b20 <function_4b20>
0x4a7b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4a7e:     89 04 24                        	mov dword ptr [esp], eax
0x4a81:     e8 fe 7e 00 00                  	call 0xc984
0x4a86:     3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x4a89:     0f 92 c0                        	setb al
0x4a8c:     84 c0                           	test al, al
0x4a8e:     74 4b                           	je 0x4adb <function_4adb>
0x4a90:     c7 44 24 08 20 3d 00 00         	mov dword ptr [esp + 8], 0x3d20 ; "CDataStream::read() : end of data"
0x4a98:     c7 44 24 04 04 00 00 00         	mov dword ptr [esp + 4], 4
0x4aa0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4aa3:     89 04 24                        	mov dword ptr [esp], eax
0x4aa6:     e8 2d 48 00 00                  	call 0x92d8 <function_92d8>
0x4aab:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x4aae:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x4ab2:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x4aba:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4abd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4ac0 -- 0x4ac1
0x4ac0:     e8                                                 |.               |
; dynamically linked function: memset at 0x4ac1 -- 0x4ac2
; data inside code section at 0x4ac2 -- 0x4adb
0x4ac2:     ff ff ff 8b 45 e4 89 04  24 e8 b4 7e 00 00 8b 55   |....E...$..~...U|
0x4ad2:     e4 8b 52 0c 29 d0 89 45  dc                        |..R.)..E.       |
; function: function_4adb at 0x4adb -- 0x4b01
0x4adb:     8b 5d dc                        	mov ebx, dword ptr [ebp - 0x24]
0x4ade:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4ae1:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x4ae4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4ae7:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4aeb:     89 04 24                        	mov dword ptr [esp], eax
0x4aee:     e8 e9 7f 00 00                  	call 0xcadc
0x4af3:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x4af7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x4afb:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4afe:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4b01 -- 0x4b02
0x4b01:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x4b02 -- 0x4b03
; data inside code section at 0x4b03 -- 0x4b06
0x4b03:     ff ff ff                                           |...             |
; function: function_4b06 at 0x4b06 -- 0x4b20
0x4b06:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4b09:     c7 40 0c 00 00 00 00            	mov dword ptr [eax + 0xc], 0
0x4b10:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4b13:     89 04 24                        	mov dword ptr [esp], eax
0x4b16:     e8 f9 7f 00 00                  	call 0xcb14
0x4b1b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4b1e:     eb 37                           	jmp 0x4b57 <function_4b57>
; function: function_4b20 at 0x4b20 -- 0x4b46
0x4b20:     8b 5d dc                        	mov ebx, dword ptr [ebp - 0x24]
0x4b23:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4b26:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x4b29:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4b2c:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4b30:     89 04 24                        	mov dword ptr [esp], eax
0x4b33:     e8 a4 7f 00 00                  	call 0xcadc
0x4b38:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x4b3c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x4b40:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4b43:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4b46 -- 0x4b47
0x4b46:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x4b47 -- 0x4b48
; data inside code section at 0x4b48 -- 0x4b57
0x4b48:     ff ff ff 8b 45 e4 8b 55  f0 89 50 0c 8b 45 e4      |....E..U..P..E. |
; function: function_4b57 at 0x4b57 -- 0x4b6e
0x4b57:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4b5a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4b61:     74 05                           	je 0x4b68 <function_4b57+0x11>
0x4b63:     e8 fc ff ff ff                  	call 0x4b64
0x4b68:     83 c4 34                        	add esp, 0x34
0x4b6b:     5b                              	pop ebx
0x4b6c:     5d                              	pop ebp
0x4b6d:     c3                              	ret 
; section: .text._ZN11CDataStream5writeEPKci
; function: _ZN11CDataStream5writeEPKci at 0x4b6e -- 0x4bb7
0x4b6e:     55                              	push ebp
0x4b6f:     89 e5                           	mov ebp, esp
0x4b71:     53                              	push ebx
0x4b72:     83 ec 34                        	sub esp, 0x34
0x4b75:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4b78:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4b7b:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4b7e:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4b81:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x4b84:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x4b87:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4b8d:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4b90:     31 c0                           	xor eax, eax
0x4b92:     83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x4b96:     79 24                           	jns 0x4bbc <function_4bbc>
0x4b98:     c7 44 24 0c 64 41 00 00         	mov dword ptr [esp + 0xc], 0x4164 ; "CDataStream& CDataStream::write(const char*, int)"
0x4ba0:     c7 44 24 08 1b 04 00 00         	mov dword ptr [esp + 8], 0x41b
0x4ba8:     c7 44 24 04 07 3d 00 00         	mov dword ptr [esp + 4], 0x3d07 ; "serialize.h"
0x4bb0:     c7 04 24 13 3d 00 00            	mov dword ptr [esp], 0x3d13 ; "nSize >= 0"
; data inside code section at 0x4bb7 -- 0x4bb8
0x4bb7:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x4bb8 -- 0x4bb9
; data inside code section at 0x4bb9 -- 0x4bbc
0x4bb9:     ff ff ff                                           |...             |
; function: function_4bbc at 0x4bbc -- 0x4c05
0x4bbc:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x4bbf:     89 c3                           	mov ebx, eax
0x4bc1:     03 5d e0                        	add ebx, dword ptr [ebp - 0x20]
0x4bc4:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x4bc7:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x4bca:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4bce:     89 04 24                        	mov dword ptr [esp], eax
0x4bd1:     e8 02 7e 00 00                  	call 0xc9d8
0x4bd6:     83 ec 04                        	sub esp, 4
0x4bd9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4bdc:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x4be0:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x4be3:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x4be7:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x4bea:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4bee:     89 04 24                        	mov dword ptr [esp], eax
0x4bf1:     e8 c4 80 00 00                  	call 0xccba <function_ccba>
0x4bf6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4bf9:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4bfc:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4c03:     74 05                           	je 0x4c0a <function_4c0a>
; data inside code section at 0x4c05 -- 0x4c06
0x4c05:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4c06 -- 0x4c07
; data inside code section at 0x4c07 -- 0x4c0a
0x4c07:     ff ff ff                                           |...             |
; function: function_4c0a at 0x4c0a -- 0x4c0f
0x4c0a:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x4c0d:     c9                              	leave 
0x4c0e:     c3                              	ret 
; section: .text._ZNK5boost15foreach_detail_13auto_any_basecvbEv
; function: _ZNK5boost15foreach_detail_13auto_any_basecvbEv at 0x4c10 -- 0x4c38
0x4c10:     55                              	push ebp
0x4c11:     89 e5                           	mov ebp, esp
0x4c13:     83 ec 28                        	sub esp, 0x28
0x4c16:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4c19:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4c1c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4c22:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4c25:     31 c0                           	xor eax, eax
0x4c27:     b8 00 00 00 00                  	mov eax, 0
0x4c2c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4c2f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4c36:     74 05                           	je 0x4c3d <function_4c3d>
; data inside code section at 0x4c38 -- 0x4c39
0x4c38:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4c39 -- 0x4c3a
; data inside code section at 0x4c3a -- 0x4c3d
0x4c3a:     ff ff ff                                           |...             |
; function: function_4c3d at 0x4c3d -- 0x4c3f
0x4c3d:     c9                              	leave 
0x4c3e:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_9set_falseERb
; function: _ZN5boost15foreach_detail_9set_falseERb at 0x4c3f -- 0x4c6d
0x4c3f:     55                              	push ebp
0x4c40:     89 e5                           	mov ebp, esp
0x4c42:     83 ec 28                        	sub esp, 0x28
0x4c45:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4c48:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4c4b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4c51:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4c54:     31 c0                           	xor eax, eax
0x4c56:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4c59:     c6 00 00                        	mov byte ptr [eax], 0
0x4c5c:     b8 00 00 00 00                  	mov eax, 0
0x4c61:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4c64:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4c6b:     74 05                           	je 0x4c72 <function_4c72>
; data inside code section at 0x4c6d -- 0x4c6e
0x4c6d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4c6e -- 0x4c6f
; data inside code section at 0x4c6f -- 0x4c72
0x4c6f:     ff ff ff                                           |...             |
; function: function_4c72 at 0x4c72 -- 0x4c74
0x4c72:     c9                              	leave 
0x4c73:     c3                              	ret 
; section: .text._ZN11CHashWriter4InitEv
; function: _ZN11CHashWriter4InitEv at 0x4c74 -- 0x4c91
0x4c74:     55                              	push ebp
0x4c75:     89 e5                           	mov ebp, esp
0x4c77:     83 ec 38                        	sub esp, 0x38
0x4c7a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4c7d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4c80:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4c86:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4c89:     31 c0                           	xor eax, eax
0x4c8b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4c8e:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4c91 -- 0x4c92
0x4c91:     e8                                                 |.               |
; dynamically linked function: SHA256_Init at 0x4c92 -- 0x4c93
; data inside code section at 0x4c93 -- 0x4ca3
0x4c93:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x4ca3 -- 0x4ca4
; data inside code section at 0x4ca4 -- 0x4ca6
0x4ca4:     ff ff                                              |..              |
; function: function_4ca6 at 0x4ca6 -- 0x4ca9
0x4ca6:     ff c9                           	dec ecx
0x4ca8:     c3                              	ret 
; section: .text._ZN11CHashWriterC2Eii
; function: _ZN11CHashWriterC1Eii at 0x4caa -- 0x4cf6
0x4caa:     55                              	push ebp
0x4cab:     89 e5                           	mov ebp, esp
0x4cad:     83 ec 38                        	sub esp, 0x38
0x4cb0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4cb3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4cb6:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4cb9:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4cbc:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x4cbf:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x4cc2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4cc8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4ccb:     31 c0                           	xor eax, eax
0x4ccd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4cd0:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x4cd3:     89 50 70                        	mov dword ptr [eax + 0x70], edx
0x4cd6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4cd9:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x4cdc:     89 50 74                        	mov dword ptr [eax + 0x74], edx
0x4cdf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4ce2:     89 04 24                        	mov dword ptr [esp], eax
0x4ce5:     e8 34 4c 00 00                  	call 0x991e <function_991e>
0x4cea:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4ced:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4cf4:     74 05                           	je 0x4cfb <function_4cfb>
; data inside code section at 0x4cf6 -- 0x4cf7
0x4cf6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4cf7 -- 0x4cf8
; data inside code section at 0x4cf8 -- 0x4cfb
0x4cf8:     ff ff ff                                           |...             |
; function: function_4cfb at 0x4cfb -- 0x4cfd
0x4cfb:     c9                              	leave 
0x4cfc:     c3                              	ret 
; section: .text._ZN11CHashWriter5writeEPKcj
; function: _ZN11CHashWriter5writeEPKcj at 0x4cfe -- 0x4d35
0x4cfe:     55                              	push ebp
0x4cff:     89 e5                           	mov ebp, esp
0x4d01:     83 ec 38                        	sub esp, 0x38
0x4d04:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4d07:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4d0a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4d0d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4d10:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x4d13:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x4d16:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4d1c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4d1f:     31 c0                           	xor eax, eax
0x4d21:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4d24:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x4d27:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x4d2b:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x4d2e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4d32:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4d35 -- 0x4d36
0x4d35:     e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x4d36 -- 0x4d37
; data inside code section at 0x4d37 -- 0x4d4a
0x4d37:     ff ff ff 8b 45 e4 8b 55  f4 65 33 15 14 00 00 00   |....E..U.e3.....|
0x4d47:     74 05 e8                                           |t..             |
; dynamically linked function: __stack_chk_fail at 0x4d4a -- 0x4d4b
; data inside code section at 0x4d4b -- 0x4d4d
0x4d4b:     ff ff                                              |..              |
; function: function_4d4d at 0x4d4d -- 0x4d50
0x4d4d:     ff c9                           	dec ecx
0x4d4f:     c3                              	ret 
; section: .text._ZN11CHashWriter7GetHashEv
; function: _ZN11CHashWriter7GetHashEv at 0x4d50 -- 0x4d85
0x4d50:     55                              	push ebp
0x4d51:     89 e5                           	mov ebp, esp
0x4d53:     83 ec 58                        	sub esp, 0x58
0x4d56:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4d59:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x4d5c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4d5f:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x4d62:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4d68:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4d6b:     31 c0                           	xor eax, eax
0x4d6d:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x4d70:     89 04 24                        	mov dword ptr [esp], eax
0x4d73:     e8 b8 26 00 00                  	call 0x7430
0x4d78:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x4d7b:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x4d7f:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x4d82:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4d85 -- 0x4d86
0x4d85:     e8                                                 |.               |
; dynamically linked function: SHA256_Final at 0x4d86 -- 0x4d87
; data inside code section at 0x4d87 -- 0x4d96
0x4d87:     ff ff ff 8b 45 c4 89 04  24 e8 9b 26 00 00 8b      |....E...$..&... |
; function: function_4d96 at 0x4d96 -- 0x4daa
0x4d96:     45                              	inc ebp
0x4d97:     c4 89 44 24 08 c7               	les ecx, ptr [ecx - 0x38f7dbbc]
0x4d9d:     44                              	inc esp
0x4d9e:     24 04                           	and al, 4
0x4da0:     20 00                           	and byte ptr [eax], al
0x4da2:     00 00                           	add byte ptr [eax], al
0x4da4:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x4da7:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4daa -- 0x4dab
0x4daa:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x4dab -- 0x4dac
; data inside code section at 0x4dac -- 0x4dae
0x4dac:     ff ff                                              |..              |
; function: function_4dae at 0x4dae -- 0x4dc7
0x4dae:     ff 8b 45 c4 8b 55               	dec dword ptr [ebx + 0x558bc445]
0x4db4:     f4                              	hlt 
0x4db5:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4dbc:     74 05                           	je 0x4dc3 <function_4dae+0x15>
0x4dbe:     e8 fc ff ff ff                  	call 0x4dbf
0x4dc3:     c9                              	leave 
0x4dc4:     c2 04 00                        	ret 4
; section: .text._ZN5boost9exceptionC2ERKS0_
; function: _ZN5boost9exceptionC1ERKS0_ at 0x4dc8 -- 0x4dee
0x4dc8:     55                              	push ebp
0x4dc9:     89 e5                           	mov ebp, esp
0x4dcb:     83 ec 38                        	sub esp, 0x38
0x4dce:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4dd1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4dd4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4dd7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4dda:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4de0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4de3:     31 c0                           	xor eax, eax
0x4de5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4de8:     c7 00 0c b7 01 00               	mov dword ptr [eax], 0x1b70c
; data inside code section at 0x4dee -- 0x4df0
0x4dee:     8b 45                                              |.E              |
; function: function_4df0 at 0x4df0 -- 0x4e36
0x4df0:     e0 8d                           	loopne 0x4d7f
0x4df2:     50                              	push eax
0x4df3:     04 8b                           	add al, 0x8b
0x4df5:     45                              	inc ebp
0x4df6:     e4 83                           	in al, 0x83
0x4df8:     c0 04 89 54                     	rol byte ptr [ecx + ecx*4], 0x54
0x4dfc:     24 04                           	and al, 4
0x4dfe:     89 04 24                        	mov dword ptr [esp], eax
0x4e01:     e8 ac 88 00 00                  	call 0xd6b2 <function_d6b2>
0x4e06:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4e09:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0x4e0c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4e0f:     89 50 08                        	mov dword ptr [eax + 8], edx
0x4e12:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4e15:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x4e18:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4e1b:     89 50 0c                        	mov dword ptr [eax + 0xc], edx
0x4e1e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4e21:     8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x4e24:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4e27:     89 50 10                        	mov dword ptr [eax + 0x10], edx
0x4e2a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4e2d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4e34:     74 05                           	je 0x4e3b <function_4e3b>
; data inside code section at 0x4e36 -- 0x4e37
0x4e36:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4e37 -- 0x4e38
; data inside code section at 0x4e38 -- 0x4e3b
0x4e38:     ff ff ff                                           |...             |
; function: function_4e3b at 0x4e3b -- 0x4e3d
0x4e3b:     c9                              	leave 
0x4e3c:     c3                              	ret 
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x4e3e -- 0x4e76
0x4e3e:     55                              	push ebp
0x4e3f:     89 e5                           	mov ebp, esp
0x4e41:     83 ec 38                        	sub esp, 0x38
0x4e44:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4e47:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4e4a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4e50:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4e53:     31 c0                           	xor eax, eax
0x4e55:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4e58:     83 c0 04                        	add eax, 4
0x4e5b:     89 04 24                        	mov dword ptr [esp], eax
0x4e5e:     e8 1d 3c 00 00                  	call 0x8a80
0x4e63:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4e66:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4e6d:     74 05                           	je 0x4e74 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x36>
0x4e6f:     e8 fc ff ff ff                  	call 0x4e70
0x4e74:     c9                              	leave 
0x4e75:     c3                              	ret 
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_ at 0x4e76 -- 0x4ec1
0x4e76:     55                              	push ebp
0x4e77:     89 e5                           	mov ebp, esp
0x4e79:     83 ec 38                        	sub esp, 0x38
0x4e7c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4e7f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4e82:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4e85:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4e88:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4e8e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4e91:     31 c0                           	xor eax, eax
0x4e93:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4e96:     8b 10                           	mov edx, dword ptr [eax]
0x4e98:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4e9b:     89 10                           	mov dword ptr [eax], edx
0x4e9d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x4ea0:     8d 50 04                        	lea edx, [eax + 4]
0x4ea3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4ea6:     83 c0 04                        	add eax, 4
0x4ea9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x4ead:     89 04 24                        	mov dword ptr [esp], eax
0x4eb0:     e8 43 3c 00 00                  	call 0x8af8
0x4eb5:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4eb8:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4ebf:     74 05                           	je 0x4ec6 <function_4ec6>
; data inside code section at 0x4ec1 -- 0x4ec2
0x4ec1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4ec2 -- 0x4ec3
; data inside code section at 0x4ec3 -- 0x4ec6
0x4ec3:     ff ff ff                                           |...             |
; function: function_4ec6 at 0x4ec6 -- 0x4ec8
0x4ec6:     c9                              	leave 
0x4ec7:     c3                              	ret 
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0x4ec8 -- 0x4f05
0x4ec8:     55                              	push ebp
0x4ec9:     89 e5                           	mov ebp, esp
0x4ecb:     83 ec 38                        	sub esp, 0x38
0x4ece:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4ed1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4ed4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4eda:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4edd:     31 c0                           	xor eax, eax
0x4edf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4ee2:     c7 00 0c b6 01 00               	mov dword ptr [eax], 0x1b60c
0x4ee8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4eeb:     89 04 24                        	mov dword ptr [esp], eax
0x4eee:     e8 dd 29 00 00                  	call 0x78d0 <function_78d0>
0x4ef3:     b8 00 00 00 00                  	mov eax, 0
0x4ef8:     83 e0 01                        	and eax, 1
0x4efb:     84 c0                           	test al, al
0x4efd:     74 0b                           	je 0x4f0a <function_4f0a>
0x4eff:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4f02:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4f05 -- 0x4f06
0x4f05:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x4f06 -- 0x4f07
; data inside code section at 0x4f07 -- 0x4f0a
0x4f07:     ff ff ff                                           |...             |
; function: function_4f0a at 0x4f0a -- 0x4f16
0x4f0a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4f0d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4f14:     74 05                           	je 0x4f1b <function_4f1b>
; data inside code section at 0x4f16 -- 0x4f17
0x4f16:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4f17 -- 0x4f18
; data inside code section at 0x4f18 -- 0x4f1b
0x4f18:     ff ff ff                                           |...             |
; function: function_4f1b at 0x4f1b -- 0x4f1d
0x4f1b:     c9                              	leave 
0x4f1c:     c3                              	ret 
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0x4f1e -- 0x4f46
0x4f1e:     55                              	push ebp
0x4f1f:     89 e5                           	mov ebp, esp
0x4f21:     83 ec 38                        	sub esp, 0x38
0x4f24:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4f27:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4f2a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4f30:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4f33:     31 c0                           	xor eax, eax
0x4f35:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4f38:     89 04 24                        	mov dword ptr [esp], eax
0x4f3b:     e8 a6 4e 00 00                  	call 0x9de6 <function_9de6>
0x4f40:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4f43:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x4f46 -- 0x4f47
0x4f46:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x4f47 -- 0x4f48
; data inside code section at 0x4f48 -- 0x4f4a
0x4f48:     ff ff                                              |..              |
; function: function_4f4a at 0x4f4a -- 0x4f5e
0x4f4a:     ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0x4f50:     05 14 00 00 00                  	add eax, 0x14
0x4f55:     74 05                           	je 0x4f5c <function_4f4a+0x12>
0x4f57:     e8 fc ff ff ff                  	call 0x4f58
0x4f5c:     c9                              	leave 
0x4f5d:     c3                              	ret 
; section: .text._ZNK5boost6system14error_categoryeqERKS1_
; function: _ZNK5boost6system14error_categoryeqERKS1_ at 0x4f5e -- 0x4f90
0x4f5e:     55                              	push ebp
0x4f5f:     89 e5                           	mov ebp, esp
0x4f61:     83 ec 28                        	sub esp, 0x28
0x4f64:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4f67:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4f6a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4f6d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4f70:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4f76:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4f79:     31 c0                           	xor eax, eax
0x4f7b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4f7e:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x4f81:     0f 94 c0                        	sete al
0x4f84:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x4f87:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x4f8e:     74 05                           	je 0x4f95 <function_4f95>
; data inside code section at 0x4f90 -- 0x4f91
0x4f90:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4f91 -- 0x4f92
; data inside code section at 0x4f92 -- 0x4f95
0x4f92:     ff ff ff                                           |...             |
; function: function_4f95 at 0x4f95 -- 0x4f97
0x4f95:     c9                              	leave 
0x4f96:     c3                              	ret 
; section: .text._ZN5boost6system15error_conditionC2EiRKNS0_14error_categoryE
; function: _ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE at 0x4f98 -- 0x4fd8
0x4f98:     55                              	push ebp
0x4f99:     89 e5                           	mov ebp, esp
0x4f9b:     83 ec 28                        	sub esp, 0x28
0x4f9e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4fa1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4fa4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4fa7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4faa:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x4fad:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x4fb0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4fb6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4fb9:     31 c0                           	xor eax, eax
0x4fbb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4fbe:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x4fc1:     89 10                           	mov dword ptr [eax], edx
0x4fc3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4fc6:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x4fc9:     89 50 04                        	mov dword ptr [eax + 4], edx
0x4fcc:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x4fcf:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x4fd6:     74 05                           	je 0x4fdd <function_4fdd>
; data inside code section at 0x4fd8 -- 0x4fd9
0x4fd8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4fd9 -- 0x4fda
; data inside code section at 0x4fda -- 0x4fdd
0x4fda:     ff ff ff                                           |...             |
; function: function_4fdd at 0x4fdd -- 0x4fdf
0x4fdd:     c9                              	leave 
0x4fde:     c3                              	ret 
; section: .text._ZN5boost6systemeqERKNS0_15error_conditionES3_
; function: _ZN5boost6systemeqERKNS0_15error_conditionES3_ at 0x4fdf -- 0x5032
0x4fdf:     55                              	push ebp
0x4fe0:     89 e5                           	mov ebp, esp
0x4fe2:     83 ec 28                        	sub esp, 0x28
0x4fe5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x4fe8:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x4feb:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x4fee:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x4ff1:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x4ff7:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x4ffa:     31 c0                           	xor eax, eax
0x4ffc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x4fff:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x5002:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x5005:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x5008:     39 c2                           	cmp edx, eax
0x500a:     75 15                           	jne 0x5021 <_ZN5boost6systemeqERKNS0_15error_conditionES3_+0x42>
0x500c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x500f:     8b 10                           	mov edx, dword ptr [eax]
0x5011:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x5014:     8b 00                           	mov eax, dword ptr [eax]
0x5016:     39 c2                           	cmp edx, eax
0x5018:     75 07                           	jne 0x5021 <_ZN5boost6systemeqERKNS0_15error_conditionES3_+0x42>
0x501a:     b8 01 00 00 00                  	mov eax, 1
0x501f:     eb 05                           	jmp 0x5026 <_ZN5boost6systemeqERKNS0_15error_conditionES3_+0x47>
0x5021:     b8 00 00 00 00                  	mov eax, 0
0x5026:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5029:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5030:     74 05                           	je 0x5037 <function_5037>
; data inside code section at 0x5032 -- 0x5033
0x5032:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5033 -- 0x5034
; data inside code section at 0x5034 -- 0x5037
0x5034:     ff ff ff                                           |...             |
; function: function_5037 at 0x5037 -- 0x5039
0x5037:     c9                              	leave 
0x5038:     c3                              	ret 
; section: .text._ZNK5boost6system10error_code5valueEv
; function: _ZNK5boost6system10error_code5valueEv at 0x503a -- 0x5069
0x503a:     55                              	push ebp
0x503b:     89 e5                           	mov ebp, esp
0x503d:     83 ec 28                        	sub esp, 0x28
0x5040:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5043:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5046:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x504c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x504f:     31 c0                           	xor eax, eax
0x5051:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5054:     8b 00                           	mov eax, dword ptr [eax]
0x5056:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5059:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5060:     74 05                           	je 0x5067 <_ZNK5boost6system10error_code5valueEv+0x2d>
0x5062:     e8 fc ff ff ff                  	call 0x5063
0x5067:     c9                              	leave 
0x5068:     c3                              	ret 
; section: .text._ZNK5boost6system10error_code8categoryEv
; function: _ZNK5boost6system10error_code8categoryEv at 0x506a -- 0x5093
0x506a:     55                              	push ebp
0x506b:     89 e5                           	mov ebp, esp
0x506d:     83 ec 28                        	sub esp, 0x28
0x5070:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5073:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5076:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x507c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x507f:     31 c0                           	xor eax, eax
0x5081:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5084:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x5087:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x508a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5091:     74 05                           	je 0x5098 <function_5098>
; data inside code section at 0x5093 -- 0x5094
0x5093:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5094 -- 0x5095
; data inside code section at 0x5095 -- 0x5098
0x5095:     ff ff ff                                           |...             |
; function: function_5098 at 0x5098 -- 0x509a
0x5098:     c9                              	leave 
0x5099:     c3                              	ret 
; section: .text._ZNK5boost6system10error_code7messageEv
; function: _ZNK5boost6system10error_code7messageEv at 0x509a -- 0x5104
0x509a:     55                              	push ebp
0x509b:     89 e5                           	mov ebp, esp
0x509d:     53                              	push ebx
0x509e:     83 ec 34                        	sub esp, 0x34
0x50a1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x50a4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x50a7:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x50aa:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x50ad:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x50b3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x50b6:     31 c0                           	xor eax, eax
0x50b8:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x50bb:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x50be:     8b 00                           	mov eax, dword ptr [eax]
0x50c0:     83 c0 0c                        	add eax, 0xc
0x50c3:     8b 18                           	mov ebx, dword ptr [eax]
0x50c5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x50c8:     89 04 24                        	mov dword ptr [esp], eax
0x50cb:     e8 04 50 00 00                  	call 0xa0d4 <function_a0d4>
0x50d0:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x50d3:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x50d6:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x50d9:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x50dd:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x50e1:     89 14 24                        	mov dword ptr [esp], edx
0x50e4:     ff d3                           	call ebx
0x50e6:     83 ec 04                        	sub esp, 4
0x50e9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x50ec:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x50ef:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x50f6:     74 05                           	je 0x50fd <_ZNK5boost6system10error_code7messageEv+0x63>
0x50f8:     e8 fc ff ff ff                  	call 0x50f9
0x50fd:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x5100:     c9                              	leave 
0x5101:     c2 04 00                        	ret 4
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0x5104 -- 0x5158
0x5104:     55                              	push ebp
0x5105:     89 e5                           	mov ebp, esp
0x5107:     83 ec 38                        	sub esp, 0x38
0x510a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x510d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5110:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5113:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5116:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x5119:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x511c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5122:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5125:     31 c0                           	xor eax, eax
0x5127:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x512a:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x512e:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x5131:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5135:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5138:     89 04 24                        	mov dword ptr [esp], eax
0x513b:     e8 5c 4f 00 00                  	call 0xa09c <function_a09c>
0x5140:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5143:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5146:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x514d:     74 05                           	je 0x5154 <_ZNK5boost6system14error_category23default_error_conditionEi+0x50>
0x514f:     e8 fc ff ff ff                  	call 0x5150
0x5154:     c9                              	leave 
0x5155:     c2 04 00                        	ret 4
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0x5158 -- 0x51bc
0x5158:     55                              	push ebp
0x5159:     89 e5                           	mov ebp, esp
0x515b:     83 ec 38                        	sub esp, 0x38
0x515e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5161:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5164:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5167:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x516a:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x516d:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x5170:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5176:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5179:     31 c0                           	xor eax, eax
0x517b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x517e:     8b 00                           	mov eax, dword ptr [eax]
0x5180:     83 c0 10                        	add eax, 0x10
0x5183:     8b 08                           	mov ecx, dword ptr [eax]
0x5185:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x5188:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x518b:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x518f:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x5192:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5196:     89 04 24                        	mov dword ptr [esp], eax
0x5199:     ff d1                           	call ecx
0x519b:     83 ec 04                        	sub esp, 4
0x519e:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x51a1:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x51a5:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x51a8:     89 04 24                        	mov dword ptr [esp], eax
0x51ab:     e8 87 4f 00 00                  	call 0xa137 <function_a137>
0x51b0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x51b3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x51ba:     74 05                           	je 0x51c1 <function_51c1>
; data inside code section at 0x51bc -- 0x51bd
0x51bc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x51bd -- 0x51be
; data inside code section at 0x51be -- 0x51c1
0x51be:     ff ff ff                                           |...             |
; function: function_51c1 at 0x51c1 -- 0x51c3
0x51c1:     c9                              	leave 
0x51c2:     c3                              	ret 
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0x51c4 -- 0x522d
0x51c4:     55                              	push ebp
0x51c5:     89 e5                           	mov ebp, esp
0x51c7:     83 ec 38                        	sub esp, 0x38
0x51ca:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x51cd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x51d0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x51d3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x51d6:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x51d9:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x51dc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x51e2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x51e5:     31 c0                           	xor eax, eax
0x51e7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x51ea:     89 04 24                        	mov dword ptr [esp], eax
0x51ed:     e8 3c 50 00 00                  	call 0xa22e <function_a22e>
0x51f2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x51f6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x51f9:     89 04 24                        	mov dword ptr [esp], eax
0x51fc:     e8 21 4f 00 00                  	call 0xa122 <function_a122>
0x5201:     84 c0                           	test al, al
0x5203:     74 17                           	je 0x521c <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x58>
0x5205:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x5208:     89 04 24                        	mov dword ptr [esp], eax
0x520b:     e8 ee 4f 00 00                  	call 0xa1fe <function_a1fe>
0x5210:     3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x5213:     75 07                           	jne 0x521c <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x58>
0x5215:     b8 01 00 00 00                  	mov eax, 1
0x521a:     eb 05                           	jmp 0x5221 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x5d>
0x521c:     b8 00 00 00 00                  	mov eax, 0
0x5221:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5224:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x522b:     74 05                           	je 0x5232 <function_5232>
; data inside code section at 0x522d -- 0x522e
0x522d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x522e -- 0x522f
; data inside code section at 0x522f -- 0x5232
0x522f:     ff ff ff                                           |...             |
; function: function_5232 at 0x5232 -- 0x5234
0x5232:     c9                              	leave 
0x5233:     c3                              	ret 
; section: .text._ZN5boost11filesystem311path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE
; function: _ZN5boost11filesystem311path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE at 0x5234 -- 0x5282
0x5234:     55                              	push ebp
0x5235:     89 e5                           	mov ebp, esp
0x5237:     83 ec 38                        	sub esp, 0x38
0x523a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x523d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5240:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5243:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5246:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x5249:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x524c:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x524f:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x5252:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5258:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x525b:     31 c0                           	xor eax, eax
0x525d:     83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x5261:     75 24                           	jne 0x5287 <function_5287>
0x5263:     c7 44 24 0c 24 42 00 00         	mov dword ptr [esp + 0xc], 0x4224 ; "void boost::filesystem3::path_traits::convert(const char*, const char*, std::string&, const codecvt_type&)"
0x526b:     c7 44 24 08 85 00 00 00         	mov dword ptr [esp + 8], 0x85
0x5273:     c7 44 24 04 44 3d 00 00         	mov dword ptr [esp + 4], 0x3d44 ; "/usr/include/boost/filesystem/v3/path_traits.hpp"
0x527b:     c7 04 24 75 3d 00 00            	mov dword ptr [esp], 0x3d75 ; "from"
; data inside code section at 0x5282 -- 0x5283
0x5282:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x5283 -- 0x5284
; data inside code section at 0x5284 -- 0x5287
0x5284:     ff ff ff                                           |...             |
; function: function_5287 at 0x5287 -- 0x52ac
0x5287:     83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x528b:     75 24                           	jne 0x52b1 <function_52b1>
0x528d:     c7 44 24 0c 24 42 00 00         	mov dword ptr [esp + 0xc], 0x4224 ; "void boost::filesystem3::path_traits::convert(const char*, const char*, std::string&, const codecvt_type&)"
0x5295:     c7 44 24 08 86 00 00 00         	mov dword ptr [esp + 8], 0x86
0x529d:     c7 44 24 04 44 3d 00 00         	mov dword ptr [esp + 4], 0x3d44 ; "/usr/include/boost/filesystem/v3/path_traits.hpp"
0x52a5:     c7 04 24 7a 3d 00 00            	mov dword ptr [esp], 0x3d7a ; "from_end"
; data inside code section at 0x52ac -- 0x52ad
0x52ac:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x52ad -- 0x52ae
; data inside code section at 0x52ae -- 0x52b1
0x52ae:     ff ff ff                                           |...             |
; function: function_52b1 at 0x52b1 -- 0x52d6
0x52b1:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x52b4:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x52b8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x52bb:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x52bf:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x52c2:     89 04 24                        	mov dword ptr [esp], eax
0x52c5:     e8 c6 8c 00 00                  	call 0xdf90 <function_df90>
0x52ca:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x52cd:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x52d4:     74 05                           	je 0x52db <function_52db>
; data inside code section at 0x52d6 -- 0x52d7
0x52d6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x52d7 -- 0x52d8
; data inside code section at 0x52d8 -- 0x52db
0x52d8:     ff ff ff                                           |...             |
; function: function_52db at 0x52db -- 0x52dd
0x52db:     c9                              	leave 
0x52dc:     c3                              	ret 
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x52de -- 0x5309
0x52de:     55                              	push ebp
0x52df:     89 e5                           	mov ebp, esp
0x52e1:     56                              	push esi
0x52e2:     53                              	push ebx
0x52e3:     83 ec 30                        	sub esp, 0x30
0x52e6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x52e9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x52ec:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x52f2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x52f5:     31 c0                           	xor eax, eax
0x52f7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x52fa:     c7 00 dc b5 01 00               	mov dword ptr [eax], 0x1b5dc
0x5300:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5303:     83 c0 10                        	add eax, 0x10
0x5306:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x5309 -- 0x530a
0x5309:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x530a -- 0x530b
; data inside code section at 0x530b -- 0x5315
0x530b:     ff ff ff 8b 45 e4 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x5315 -- 0x5316
; data inside code section at 0x5316 -- 0x5319
0x5316:     ff ff ff                                           |...             |
; function: function_5319 at 0x5319 -- 0x5332
0x5319:     b8 00 00 00 00                  	mov eax, 0
0x531e:     83 e0 01                        	and eax, 1
0x5321:     84 c0                           	test al, al
0x5323:     74 35                           	je 0x535a <function_535a>
0x5325:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5328:     89 04 24                        	mov dword ptr [esp], eax
0x532b:     e8 fc ff ff ff                  	call 0x532c
0x5330:     eb 28                           	jmp 0x535a <function_535a>
; data inside code section at 0x5332 -- 0x533d
0x5332:     89 c6 89 d3 8b 45 e4 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x533d -- 0x533e
; data inside code section at 0x533e -- 0x534e
0x533e:     ff ff ff 89 f0 89 da 83  fa ff 74 08 89 04 24 e8   |..........t...$.|
; dynamically linked function: _Unwind_Resume at 0x534e -- 0x534f
; data inside code section at 0x534f -- 0x5356
0x534f:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_call_unexpected at 0x5356 -- 0x5357
; data inside code section at 0x5357 -- 0x535a
0x5357:     ff ff ff                                           |...             |
; function: function_535a at 0x535a -- 0x5366
0x535a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x535d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5364:     74 05                           	je 0x536b <function_536b>
; data inside code section at 0x5366 -- 0x5367
0x5366:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5367 -- 0x5368
; data inside code section at 0x5368 -- 0x536b
0x5368:     ff ff ff                                           |...             |
; function: function_536b at 0x536b -- 0x5372
0x536b:     83 c4 30                        	add esp, 0x30
0x536e:     5b                              	pop ebx
0x536f:     5e                              	pop esi
0x5370:     5d                              	pop ebp
0x5371:     c3                              	ret 
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x5372 -- 0x539a
0x5372:     55                              	push ebp
0x5373:     89 e5                           	mov ebp, esp
0x5375:     83 ec 38                        	sub esp, 0x38
0x5378:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x537b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x537e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5384:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5387:     31 c0                           	xor eax, eax
0x5389:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x538c:     89 04 24                        	mov dword ptr [esp], eax
0x538f:     e8 bc 52 00 00                  	call 0xa650 <__stack_chk_fail>
0x5394:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5397:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x539a -- 0x539b
0x539a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x539b -- 0x539c
; data inside code section at 0x539c -- 0x539e
0x539c:     ff ff                                              |..              |
; function: function_539e at 0x539e -- 0x53b2
0x539e:     ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0x53a4:     05 14 00 00 00                  	add eax, 0x14
0x53a9:     74 05                           	je 0x53b0 <function_539e+0x12>
0x53ab:     e8 fc ff ff ff                  	call 0x53ac
0x53b0:     c9                              	leave 
0x53b1:     c3                              	ret 
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x53b2 -- 0x53e6
0x53b2:     55                              	push ebp
0x53b3:     89 e5                           	mov ebp, esp
0x53b5:     53                              	push ebx
0x53b6:     83 ec 34                        	sub esp, 0x34
0x53b9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x53bc:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x53bf:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x53c5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x53c8:     31 c0                           	xor eax, eax
0x53ca:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x53cd:     83 c0 10                        	add eax, 0x10
0x53d0:     89 04 24                        	mov dword ptr [esp], eax
0x53d3:     e8 fc ff ff ff                  	call 0x53d4
0x53d8:     84 c0                           	test al, al
0x53da:     0f 84 80 00 00 00               	je 0x5460 <function_5460>
0x53e0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x53e3:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x53e6 -- 0x53e7
0x53e6:     e8                                                 |.               |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x53e7 -- 0x53e8
; data inside code section at 0x53e8 -- 0x53ec
0x53e8:     ff ff ff 8b                                        |....            |
; function: function_53ec at 0x53ec -- 0x53f2
0x53ec:     55                              	push ebp
0x53ed:     e4 83                           	in al, 0x83
0x53ef:     c2 10 89                        	ret 0x8910
; data inside code section at 0x53f2 -- 0x53f9
0x53f2:     44 24 04 89 14 24 e8                               |D$...$.         |
; dynamically linked function: _ZNSsaSEPKc at 0x53f9 -- 0x53fa
; data inside code section at 0x53fa -- 0x5407
0x53fa:     ff ff ff 8b 45 e4 83 c0  10 89 04 24 e8            |....E......$.   |
; dynamically linked function: _ZNKSs5emptyEv at 0x5407 -- 0x5408
; data inside code section at 0x5408 -- 0x5424
0x5408:     ff ff ff 83 f0 01 84 c0  74 16 8b 45 e4 83 c0 10   |........t..E....|
0x5418:     c7 44 24 04 83 3d 00 00  89 04 24 e8               |.D$..=....$.    |
; dynamically linked function: _ZNSspLEPKc at 0x5424 -- 0x5425
; data inside code section at 0x5425 -- 0x5451
0x5425:     ff ff ff 8b 45 e4 8d 50  08 8d 45 f0 89 54 24 04   |....E..P..E..T$.|
0x5435:     89 04 24 e8 0f 50 00 00  83 ec 04 8b 45 e4 8d 50   |..$..P......E..P|
0x5445:     10 8d 45 f0 89 44 24 04  89 14 24 e8               |..E..D$...$.    |
; dynamically linked function: _ZNSspLERKSs at 0x5451 -- 0x5452
; data inside code section at 0x5452 -- 0x545c
0x5452:     ff ff ff 8d 45 f0 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0x545c -- 0x545d
; data inside code section at 0x545d -- 0x5460
0x545d:     ff ff ff                                           |...             |
; function: function_5460 at 0x5460 -- 0x5469
0x5460:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5463:     83 c0 10                        	add eax, 0x10
0x5466:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x5469 -- 0x546a
0x5469:     e8                                                 |.               |
; dynamically linked function: _ZNKSs5c_strEv at 0x546a -- 0x546b
; data inside code section at 0x546b -- 0x546d
0x546b:     ff ff                                              |..              |
; function: function_546d at 0x546d -- 0x5480
0x546d:     ff 89 c3 89 d8 8b               	dec dword ptr [ecx - 0x7427763d]
0x5473:     55                              	push ebp
0x5474:     f4                              	hlt 
0x5475:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x547c:     74 49                           	je 0x54c7 <function_54c7>
0x547e:     eb 42                           	jmp 0x54c2 <function_54c2>
; data inside code section at 0x5480 -- 0x5481
0x5480:     89                                                 |.               |
; function: function_5481 at 0x5481 -- 0x5482
0x5481:     c3                              	ret 
; data inside code section at 0x5482 -- 0x5489
0x5482:     8d 45 f0 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSsD1Ev at 0x5489 -- 0x548a
; data inside code section at 0x548a -- 0x548d
0x548a:     ff ff ff                                           |...             |
; function: function_548d at 0x548d -- 0x5494
0x548d:     89 d8                           	mov eax, ebx
0x548f:     eb 00                           	jmp 0x5491
0x5491:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x5494 -- 0x5495
0x5494:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x5495 -- 0x5496
; data inside code section at 0x5496 -- 0x54a0
0x5496:     ff ff ff 8b 45 e4 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x54a0 -- 0x54a1
; data inside code section at 0x54a1 -- 0x54a5
0x54a1:     ff ff ff 89                                        |....            |
; function: function_54a5 at 0x54a5 -- 0x54a6
0x54a5:     c3                              	ret 
; data inside code section at 0x54a6 -- 0x54a7
0x54a6:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x54a7 -- 0x54a8
; data inside code section at 0x54a8 -- 0x54ab
0x54a8:     ff ff ff                                           |...             |
; function: function_54ab at 0x54ab -- 0x54ad
0x54ab:     eb c3                           	jmp 0x5470
; data inside code section at 0x54ad -- 0x54b6
0x54ad:     83 fa ff 74 08 89 04 24  e8                        |...t...$.       |
; dynamically linked function: _Unwind_Resume at 0x54b6 -- 0x54b7
; data inside code section at 0x54b7 -- 0x54be
0x54b7:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_call_unexpected at 0x54be -- 0x54bf
; data inside code section at 0x54bf -- 0x54c2
0x54bf:     ff ff ff                                           |...             |
; function: function_54c2 at 0x54c2 -- 0x54c3
; dynamically linked function: __stack_chk_fail at 0x54c3 -- 0x54c4
; data inside code section at 0x54c4 -- 0x54c7
0x54c4:     ff ff ff                                           |...             |
; function: function_54c7 at 0x54c7 -- 0x54cc
0x54c7:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x54ca:     c9                              	leave 
0x54cb:     c3                              	ret 
; section: .text._ZN5boost11filesystem34pathD2Ev
; function: _ZN5boost11filesystem34pathD1Ev at 0x54cc -- 0x54e9
0x54cc:     55                              	push ebp
0x54cd:     89 e5                           	mov ebp, esp
0x54cf:     83 ec 38                        	sub esp, 0x38
0x54d2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x54d5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x54d8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x54de:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x54e1:     31 c0                           	xor eax, eax
0x54e3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x54e6:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x54e9 -- 0x54ea
0x54e9:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x54ea -- 0x54eb
; data inside code section at 0x54eb -- 0x54fb
0x54eb:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x54fb -- 0x54fc
; data inside code section at 0x54fc -- 0x54fe
0x54fc:     ff ff                                              |..              |
; function: function_54fe at 0x54fe -- 0x5501
0x54fe:     ff c9                           	dec ecx
0x5500:     c3                              	ret 
; section: .text._ZN5boost11filesystem34pathC2ERKS1_
; function: _ZN5boost11filesystem34pathC1ERKS1_ at 0x5502 -- 0x552c
0x5502:     55                              	push ebp
0x5503:     89 e5                           	mov ebp, esp
0x5505:     83 ec 38                        	sub esp, 0x38
0x5508:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x550b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x550e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5511:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5514:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x551a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x551d:     31 c0                           	xor eax, eax
0x551f:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x5522:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5525:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5529:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x552c -- 0x552d
0x552c:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x552d -- 0x552e
; data inside code section at 0x552e -- 0x553e
0x552e:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x553e -- 0x553f
; data inside code section at 0x553f -- 0x5541
0x553f:     ff ff                                              |..              |
; function: function_5541 at 0x5541 -- 0x5544
0x5541:     ff c9                           	dec ecx
0x5543:     c3                              	ret 
; section: .text._ZN5boost11filesystem34path7codecvtEv
; function: _ZN5boost11filesystem34path7codecvtEv at 0x5544 -- 0x5555
0x5544:     55                              	push ebp
0x5545:     89 e5                           	mov ebp, esp
0x5547:     83 ec 18                        	sub esp, 0x18
0x554a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5550:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5553:     31 c0                           	xor eax, eax
; data inside code section at 0x5555 -- 0x5556
0x5555:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11filesystem34path21wchar_t_codecvt_facetEv at 0x5556 -- 0x5557
; data inside code section at 0x5557 -- 0x5569
0x5557:     ff ff ff 8b 00 8b 55 f4  65 33 15 14 00 00 00 74   |......U.e3.....t|
0x5567:     05 e8                                              |..              |
; dynamically linked function: __stack_chk_fail at 0x5569 -- 0x556a
; data inside code section at 0x556a -- 0x556c
0x556a:     ff ff                                              |..              |
; function: function_556c at 0x556c -- 0x556f
0x556c:     ff c9                           	dec ecx
0x556e:     c3                              	ret 
; section: .text._ZN5boost11filesystem3dvERKNS0_4pathES3_
; function: _ZN5boost11filesystem3dvERKNS0_4pathES3_ at 0x556f -- 0x55b2
0x556f:     55                              	push ebp
0x5570:     89 e5                           	mov ebp, esp
0x5572:     53                              	push ebx
0x5573:     83 ec 34                        	sub esp, 0x34
0x5576:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5579:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x557c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x557f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5582:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x5585:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x5588:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x558e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5591:     31 c0                           	xor eax, eax
0x5593:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x5596:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x559a:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x559d:     89 04 24                        	mov dword ptr [esp], eax
0x55a0:     e8 cc 54 00 00                  	call 0xaa71 <function_aa71>
0x55a5:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x55a8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x55ac:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x55af:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x55b2 -- 0x55b3
0x55b2:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11filesystem34pathdVERKS1_ at 0x55b3 -- 0x55b4
; data inside code section at 0x55b4 -- 0x55b6
0x55b4:     ff ff                                              |..              |
; function: function_55b6 at 0x55b6 -- 0x55e2
0x55b6:     ff 89 44 24 04 8b               	dec dword ptr [ecx - 0x74fbdbbc]
0x55bc:     45                              	inc ebp
0x55bd:     e4 89                           	in al, 0x89
0x55bf:     04 24                           	add al, 0x24
0x55c1:     e8 ab 54 00 00                  	call 0xaa71 <function_aa71>
0x55c6:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x55c9:     89 04 24                        	mov dword ptr [esp], eax
0x55cc:     e8 6a 54 00 00                  	call 0xaa3b <function_aa3b>
0x55d1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x55d4:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x55d7:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x55de:     74 1e                           	je 0x55fe <function_55fe>
0x55e0:     eb 17                           	jmp 0x55f9 <function_55f9>
; data inside code section at 0x55e2 -- 0x55e3
0x55e2:     89                                                 |.               |
; function: function_55e3 at 0x55e3 -- 0x55e4
0x55e3:     c3                              	ret 
; data inside code section at 0x55e4 -- 0x55f5
0x55e4:     8d 45 f0 89 04 24 e8 4c  54 00 00 89 d8 89 04 24   |.E...$.LT......$|
0x55f4:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x55f5 -- 0x55f6
; data inside code section at 0x55f6 -- 0x55f9
0x55f6:     ff ff ff                                           |...             |
; function: function_55f9 at 0x55f9 -- 0x55fa
; dynamically linked function: __stack_chk_fail at 0x55fa -- 0x55fb
; data inside code section at 0x55fb -- 0x55fe
0x55fb:     ff ff ff                                           |...             |
; function: function_55fe at 0x55fe -- 0x5606
0x55fe:     83 c4 34                        	add esp, 0x34
0x5601:     5b                              	pop ebx
0x5602:     5d                              	pop ebp
0x5603:     c2 04 00                        	ret 4
; section: .text._ZN7CBigNum6setvchERKSt6vectorIhSaIhEE
; function: _ZN7CBigNum6setvchERKSt6vectorIhSaIhEE at 0x5606 -- 0x5794
0x5606:     55                              	push ebp
0x5607:     89 e5                           	mov ebp, esp
0x5609:     56                              	push esi
0x560a:     53                              	push ebx
0x560b:     83 ec 50                        	sub esp, 0x50
0x560e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5611:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x5614:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5617:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x561a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5620:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5623:     31 c0                           	xor eax, eax
0x5625:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5628:     89 04 24                        	mov dword ptr [esp], eax
0x562b:     e8 9e 83 00 00                  	call 0xd9ce <function_d9ce>
0x5630:     c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x5634:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x5637:     89 04 24                        	mov dword ptr [esp], eax
0x563a:     e8 71 78 00 00                  	call 0xceb0 <function_ceb0>
0x563f:     8d 50 04                        	lea edx, [eax + 4]
0x5642:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5645:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x5649:     8d 45 f2                        	lea eax, [ebp - 0xe]
0x564c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x5650:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5654:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x5657:     89 04 24                        	mov dword ptr [esp], eax
0x565a:     e8 db 83 00 00                  	call 0xda3a <function_da3a>
0x565f:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5662:     89 04 24                        	mov dword ptr [esp], eax
0x5665:     e8 9a 83 00 00                  	call 0xda04 <function_da04>
0x566a:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x566d:     89 04 24                        	mov dword ptr [esp], eax
0x5670:     e8 3b 78 00 00                  	call 0xceb0 <function_ceb0>
0x5675:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x5678:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x5680:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x5683:     89 04 24                        	mov dword ptr [esp], eax
0x5686:     e8 8b 8d 00 00                  	call 0xe416 <function_e416>
0x568b:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x568e:     c1 ea 18                        	shr edx, 0x18
0x5691:     88 10                           	mov byte ptr [eax], dl
0x5693:     c7 44 24 04 01 00 00 00         	mov dword ptr [esp + 4], 1
0x569b:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x569e:     89 04 24                        	mov dword ptr [esp], eax
0x56a1:     e8 70 8d 00 00                  	call 0xe416 <function_e416>
0x56a6:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x56a9:     c1 ea 10                        	shr edx, 0x10
0x56ac:     88 10                           	mov byte ptr [eax], dl
0x56ae:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x56b6:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x56b9:     89 04 24                        	mov dword ptr [esp], eax
0x56bc:     e8 55 8d 00 00                  	call 0xe416 <function_e416>
0x56c1:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x56c4:     c1 ea 08                        	shr edx, 8
0x56c7:     88 10                           	mov byte ptr [eax], dl
0x56c9:     c7 44 24 04 03 00 00 00         	mov dword ptr [esp + 4], 3
0x56d1:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x56d4:     89 04 24                        	mov dword ptr [esp], eax
0x56d7:     e8 3a 8d 00 00                  	call 0xe416 <function_e416>
0x56dc:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x56df:     88 10                           	mov byte ptr [eax], dl
0x56e1:     c7 45 e0 04 00 00 00            	mov dword ptr [ebp - 0x20], 4
0x56e8:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x56eb:     8d 55 c8                        	lea edx, [ebp - 0x38]
0x56ee:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x56f2:     89 04 24                        	mov dword ptr [esp], eax
0x56f5:     e8 54 8d 00 00                  	call 0xe44e <function_e44e>
0x56fa:     83 ec 04                        	sub esp, 4
0x56fd:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x5700:     8d 55 e0                        	lea edx, [ebp - 0x20]
0x5703:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x5707:     8d 55 dc                        	lea edx, [ebp - 0x24]
0x570a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x570e:     89 04 24                        	mov dword ptr [esp], eax
0x5711:     e8 80 8d 00 00                  	call 0xe496 <function_e496>
0x5716:     83 ec 04                        	sub esp, 4
0x5719:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x571c:     8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x571f:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5723:     89 04 24                        	mov dword ptr [esp], eax
0x5726:     e8 f5 7c 00 00                  	call 0xd420 <function_d420>
0x572b:     83 ec 04                        	sub esp, 4
0x572e:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x5731:     8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x5734:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5738:     89 04 24                        	mov dword ptr [esp], eax
0x573b:     e8 90 7c 00 00                  	call 0xd3d0 <function_d3d0>
0x5740:     83 ec 04                        	sub esp, 4
0x5743:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x5746:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x5749:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x574d:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x5750:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x5754:     8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x5757:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x575b:     89 04 24                        	mov dword ptr [esp], eax
0x575e:     e8 8f 8d 00 00                  	call 0xe4f2 <function_e4f2>
0x5763:     83 ec 04                        	sub esp, 4
0x5766:     8b 75 c4                        	mov esi, dword ptr [ebp - 0x3c]
0x5769:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x576c:     89 04 24                        	mov dword ptr [esp], eax
0x576f:     e8 3c 77 00 00                  	call 0xceb0 <function_ceb0>
0x5774:     89 c3                           	mov ebx, eax
0x5776:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x577e:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x5781:     89 04 24                        	mov dword ptr [esp], eax
0x5784:     e8 8d 8c 00 00                  	call 0xe416 <function_e416>
0x5789:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0x578d:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x5791:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x5794 -- 0x5795
0x5794:     e8                                                 |.               |
; dynamically linked function: BN_mpi2bn at 0x5795 -- 0x5796
; data inside code section at 0x5796 -- 0x5798
0x5796:     ff ff                                              |..              |
; function: function_5798 at 0x5798 -- 0x57b2
0x5798:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0x579e:     24 e8                           	and al, 0xe8
0x57a0:     b0 81                           	mov al, 0x81
0x57a2:     00 00                           	add byte ptr [eax], al
0x57a4:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x57a7:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x57ae:     74 35                           	je 0x57e5 <function_57e5>
0x57b0:     eb 2e                           	jmp 0x57e0 <function_57e0>
; data inside code section at 0x57b2 -- 0x57b3
0x57b2:     89                                                 |.               |
; function: function_57b3 at 0x57b3 -- 0x57b4
0x57b3:     c3                              	ret 
; data inside code section at 0x57b4 -- 0x57c5
0x57b4:     8d 45 f3 89 04 24 e8 45  82 00 00 89 d8 89 04 24   |.E...$.E.......$|
0x57c4:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x57c5 -- 0x57c6
; data inside code section at 0x57c6 -- 0x57ca
0x57c6:     ff ff ff 89                                        |....            |
; function: function_57ca at 0x57ca -- 0x57cb
0x57ca:     c3                              	ret 
; data inside code section at 0x57cb -- 0x57dc
0x57cb:     8d 45 c8 89 04 24 e8 7e  81 00 00 89 d8 89 04 24   |.E...$.~.......$|
0x57db:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x57dc -- 0x57dd
; data inside code section at 0x57dd -- 0x57e0
0x57dd:     ff ff ff                                           |...             |
; function: function_57e0 at 0x57e0 -- 0x57e1
; dynamically linked function: __stack_chk_fail at 0x57e1 -- 0x57e2
; data inside code section at 0x57e2 -- 0x57e5
0x57e2:     ff ff ff                                           |...             |
; function: function_57e5 at 0x57e5 -- 0x57ec
0x57e5:     8d 65 f8                        	lea esp, [ebp - 8]
0x57e8:     5b                              	pop ebx
0x57e9:     5e                              	pop esi
0x57ea:     5d                              	pop ebp
0x57eb:     c3                              	ret 
; section: .text._ZNK7CBigNum6getvchEv
; function: _ZNK7CBigNum6getvchEv at 0x57ec -- 0x5818
0x57ec:     55                              	push ebp
0x57ed:     89 e5                           	mov ebp, esp
0x57ef:     53                              	push ebx
0x57f0:     83 ec 64                        	sub esp, 0x64
0x57f3:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x57f6:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x57f9:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x57fc:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x57ff:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5805:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5808:     31 c0                           	xor eax, eax
0x580a:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x580d:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x5815:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x5818 -- 0x5819
0x5818:     e8                                                 |.               |
; dynamically linked function: BN_bn2mpi at 0x5819 -- 0x581a
; data inside code section at 0x581a -- 0x581d
0x581a:     ff ff ff                                           |...             |
; function: function_581d at 0x581d -- 0x588d
0x581d:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x5820:     83 7d ec 04                     	cmp dword ptr [ebp - 0x14], 4
0x5824:     77 10                           	ja 0x5836 <function_581d+0x19>
0x5826:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x5829:     89 04 24                        	mov dword ptr [esp], eax
0x582c:     e8 d3 82 00 00                  	call 0xdb04
0x5831:     e9 55 01 00 00                  	jmp 0x598b <function_598b>
0x5836:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5839:     89 04 24                        	mov dword ptr [esp], eax
0x583c:     e8 73 83 00 00                  	call 0xdbb4
0x5841:     c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x5845:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5848:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x584c:     8d 45 f2                        	lea eax, [ebp - 0xe]
0x584f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x5853:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x5856:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x585a:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x585d:     89 04 24                        	mov dword ptr [esp], eax
0x5860:     e8 bb 83 00 00                  	call 0xdc20 <function_dc20>
0x5865:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5868:     89 04 24                        	mov dword ptr [esp], eax
0x586b:     e8 7a 83 00 00                  	call 0xdbea
0x5870:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x5878:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x587b:     89 04 24                        	mov dword ptr [esp], eax
0x587e:     e8 79 8d 00 00                  	call 0xe5fc
0x5883:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x5886:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x588a:     89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x588d -- 0x588e
0x588d:     e8                                                 |.               |
; dynamically linked function: BN_bn2mpi at 0x588e -- 0x588f
; data inside code section at 0x588f -- 0x5891
0x588f:     ff ff                                              |..              |
; function: function_5891 at 0x5891 -- 0x595d
0x5891:     ff c7                           	inc edi
0x5893:     45                              	inc ebp
0x5894:     d8 04 00                        	fadd dword ptr [eax + eax]
0x5897:     00 00                           	add byte ptr [eax], al
0x5899:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x589c:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x589f:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x58a3:     89 04 24                        	mov dword ptr [esp], eax
0x58a6:     e8 89 8d 00 00                  	call 0xe634
0x58ab:     83 ec 04                        	sub esp, 4
0x58ae:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x58b1:     8d 55 d8                        	lea edx, [ebp - 0x28]
0x58b4:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x58b8:     8d 55 d4                        	lea edx, [ebp - 0x2c]
0x58bb:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x58bf:     89 04 24                        	mov dword ptr [esp], eax
0x58c2:     e8 b5 8d 00 00                  	call 0xe67c
0x58c7:     83 ec 04                        	sub esp, 4
0x58ca:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x58cd:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x58d0:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x58d4:     89 04 24                        	mov dword ptr [esp], eax
0x58d7:     e8 58 8d 00 00                  	call 0xe634
0x58dc:     83 ec 04                        	sub esp, 4
0x58df:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x58e2:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x58e5:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x58e9:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x58ec:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x58f0:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x58f3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x58f7:     89 04 24                        	mov dword ptr [esp], eax
0x58fa:     e8 4d 8f 00 00                  	call 0xe84c
0x58ff:     83 ec 04                        	sub esp, 4
0x5902:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x5905:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x5908:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x590c:     89 04 24                        	mov dword ptr [esp], eax
0x590f:     e8 48 90 00 00                  	call 0xe95c
0x5914:     83 ec 04                        	sub esp, 4
0x5917:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x591a:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x591d:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5921:     89 04 24                        	mov dword ptr [esp], eax
0x5924:     e8 0b 8d 00 00                  	call 0xe634
0x5929:     83 ec 04                        	sub esp, 4
0x592c:     8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x592f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5933:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5936:     89 04 24                        	mov dword ptr [esp], eax
0x5939:     e8 68 90 00 00                  	call 0xe9a6
0x593e:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x5941:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5945:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x5948:     89 04 24                        	mov dword ptr [esp], eax
0x594b:     e8 22 8e 00 00                  	call 0xe772
0x5950:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x5953:     89 04 24                        	mov dword ptr [esp], eax
0x5956:     e8 df 81 00 00                  	call 0xdb3a
0x595b:     eb 2e                           	jmp 0x598b <function_598b>
; data inside code section at 0x595d -- 0x595e
0x595d:     89                                                 |.               |
; function: function_595e at 0x595e -- 0x595f
0x595e:     c3                              	ret 
; data inside code section at 0x595f -- 0x5975
0x595f:     8d 45 f3 89 04 24 e8 80  82 00 00 89 d8 89 04 24   |.E...$.........$|
0x596f:     e8 fc ff ff ff 89                                  |......          |
; function: function_5975 at 0x5975 -- 0x5976
0x5975:     c3                              	ret 
; data inside code section at 0x5976 -- 0x5987
0x5976:     8d 45 c4 89 04 24 e8 b9  81 00 00 89 d8 89 04 24   |.E...$.........$|
0x5986:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x5987 -- 0x5988
; data inside code section at 0x5988 -- 0x598b
0x5988:     ff ff ff                                           |...             |
; function: function_598b at 0x598b -- 0x599a
0x598b:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x598e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5991:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5998:     74 05                           	je 0x599f <function_599f>
; data inside code section at 0x599a -- 0x599b
0x599a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x599b -- 0x599c
; data inside code section at 0x599c -- 0x599f
0x599c:     ff ff ff                                           |...             |
; function: function_599f at 0x599f -- 0x59a6
0x599f:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x59a2:     c9                              	leave 
0x59a3:     c2 04 00                        	ret 4
; section: .text._ZNK7CBigNum16GetSerializeSizeEii
; function: _ZNK7CBigNum16GetSerializeSizeEii at 0x59a6 -- 0x5a15
0x59a6:     55                              	push ebp
0x59a7:     89 e5                           	mov ebp, esp
0x59a9:     53                              	push ebx
0x59aa:     83 ec 34                        	sub esp, 0x34
0x59ad:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x59b0:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x59b3:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x59b6:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x59b9:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x59bc:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x59bf:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x59c5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x59c8:     31 c0                           	xor eax, eax
0x59ca:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x59cd:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x59d0:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x59d4:     89 04 24                        	mov dword ptr [esp], eax
0x59d7:     e8 b6 57 00 00                  	call 0xb192 <function_b192>
0x59dc:     83 ec 04                        	sub esp, 4
0x59df:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x59e2:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x59e6:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x59e9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x59ed:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x59f0:     89 04 24                        	mov dword ptr [esp], eax
0x59f3:     e8 db 7a 00 00                  	call 0xd4d3 <function_d4d3>
0x59f8:     89 c3                           	mov ebx, eax
0x59fa:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x59fd:     89 04 24                        	mov dword ptr [esp], eax
0x5a00:     e8 ef 82 00 00                  	call 0xdcf4 <function_dcf4>
0x5a05:     89 d8                           	mov eax, ebx
0x5a07:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5a0a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5a11:     74 1e                           	je 0x5a31 <function_5a31>
0x5a13:     eb 17                           	jmp 0x5a2c <function_5a2c>
; data inside code section at 0x5a15 -- 0x5a16
0x5a15:     89                                                 |.               |
; function: function_5a16 at 0x5a16 -- 0x5a17
0x5a16:     c3                              	ret 
; data inside code section at 0x5a17 -- 0x5a28
0x5a17:     8d 45 e8 89 04 24 e8 d2  82 00 00 89 d8 89 04 24   |.E...$.........$|
0x5a27:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x5a28 -- 0x5a29
; data inside code section at 0x5a29 -- 0x5a2c
0x5a29:     ff ff ff                                           |...             |
; function: function_5a2c at 0x5a2c -- 0x5a2d
; dynamically linked function: __stack_chk_fail at 0x5a2d -- 0x5a2e
; data inside code section at 0x5a2e -- 0x5a31
0x5a2e:     ff ff ff                                           |...             |
; function: function_5a31 at 0x5a31 -- 0x5a36
0x5a31:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x5a34:     c9                              	leave 
0x5a35:     c3                              	ret 
; section: .text._ZN7CScriptC2Ev
; function: _ZN7CScriptC1Ev at 0x5a36 -- 0x5a64
0x5a36:     55                              	push ebp
0x5a37:     89 e5                           	mov ebp, esp
0x5a39:     83 ec 38                        	sub esp, 0x38
0x5a3c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5a3f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5a42:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5a48:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5a4b:     31 c0                           	xor eax, eax
0x5a4d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5a50:     89 04 24                        	mov dword ptr [esp], eax
0x5a53:     e8 f6 82 00 00                  	call 0xdd4e <function_dd4e>
0x5a58:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5a5b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5a62:     74 05                           	je 0x5a69 <function_5a69>
; data inside code section at 0x5a64 -- 0x5a65
0x5a64:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5a65 -- 0x5a66
; data inside code section at 0x5a66 -- 0x5a69
0x5a66:     ff ff ff                                           |...             |
; function: function_5a69 at 0x5a69 -- 0x5a6b
0x5a69:     c9                              	leave 
0x5a6a:     c3                              	ret 
; section: .text._ZN7CScriptC2ERKS_
; function: _ZN7CScriptC1ERKS_ at 0x5a6c -- 0x5b19
0x5a6c:     55                              	push ebp
0x5a6d:     89 e5                           	mov ebp, esp
0x5a6f:     53                              	push ebx
0x5a70:     83 ec 34                        	sub esp, 0x34
0x5a73:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5a76:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5a79:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5a7c:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5a7f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5a85:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5a88:     31 c0                           	xor eax, eax
0x5a8a:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5a8d:     89 04 24                        	mov dword ptr [esp], eax
0x5a90:     e8 9f 83 00 00                  	call 0xde34 <function_de34>
0x5a95:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x5a98:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x5a9b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5a9f:     89 04 24                        	mov dword ptr [esp], eax
0x5aa2:     e8 df 7d 00 00                  	call 0xd886 <function_d886>
0x5aa7:     83 ec 04                        	sub esp, 4
0x5aaa:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x5aad:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x5ab0:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5ab4:     89 04 24                        	mov dword ptr [esp], eax
0x5ab7:     e8 7a 7d 00 00                  	call 0xd836 <function_d836>
0x5abc:     83 ec 04                        	sub esp, 4
0x5abf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5ac2:     8d 55 f3                        	lea edx, [ebp - 0xd]
0x5ac5:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x5ac9:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x5acc:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x5ad0:     8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x5ad3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5ad7:     89 04 24                        	mov dword ptr [esp], eax
0x5ada:     e8 a7 91 00 00                  	call 0xec86 <function_ec86>
0x5adf:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5ae2:     89 04 24                        	mov dword ptr [esp], eax
0x5ae5:     e8 80 83 00 00                  	call 0xde6a <function_de6a>
0x5aea:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5aed:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5af4:     74 1e                           	je 0x5b14 <_ZN7CScriptC1ERKS_+0xa8>
0x5af6:     eb 17                           	jmp 0x5b0f <_ZN7CScriptC1ERKS_+0xa3>
0x5af8:     89 c3                           	mov ebx, eax
0x5afa:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5afd:     89 04 24                        	mov dword ptr [esp], eax
0x5b00:     e8 65 83 00 00                  	call 0xde6a <function_de6a>
0x5b05:     89 d8                           	mov eax, ebx
0x5b07:     89 04 24                        	mov dword ptr [esp], eax
0x5b0a:     e8 fc ff ff ff                  	call 0x5b0b
0x5b0f:     e8 fc ff ff ff                  	call 0x5b10
0x5b14:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x5b17:     c9                              	leave 
0x5b18:     c3                              	ret 
; section: .text._ZN7CScriptD2Ev
; function: _ZN7CScriptD1Ev at 0x5b1a -- 0x5b48
0x5b1a:     55                              	push ebp
0x5b1b:     89 e5                           	mov ebp, esp
0x5b1d:     83 ec 38                        	sub esp, 0x38
0x5b20:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5b23:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5b26:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5b2c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5b2f:     31 c0                           	xor eax, eax
0x5b31:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5b34:     89 04 24                        	mov dword ptr [esp], eax
0x5b37:     e8 2c 83 00 00                  	call 0xde68
0x5b3c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5b3f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5b46:     74 05                           	je 0x5b4d <function_5b4d>
; data inside code section at 0x5b48 -- 0x5b49
0x5b48:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5b49 -- 0x5b4a
; data inside code section at 0x5b4a -- 0x5b4d
0x5b4a:     ff ff ff                                           |...             |
; function: function_5b4d at 0x5b4d -- 0x5b4f
0x5b4d:     c9                              	leave 
0x5b4e:     c3                              	ret 
; section: .text._ZN17CScriptCompressorC2ER7CScript
; function: _ZN17CScriptCompressorC1ER7CScript at 0x5b50 -- 0x5b81
0x5b50:     55                              	push ebp
0x5b51:     89 e5                           	mov ebp, esp
0x5b53:     83 ec 28                        	sub esp, 0x28
0x5b56:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5b59:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5b5c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5b5f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5b62:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5b68:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5b6b:     31 c0                           	xor eax, eax
0x5b6d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5b70:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x5b73:     89 10                           	mov dword ptr [eax], edx
0x5b75:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5b78:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5b7f:     74 05                           	je 0x5b86 <function_5b86>
; data inside code section at 0x5b81 -- 0x5b82
0x5b81:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5b82 -- 0x5b83
; data inside code section at 0x5b83 -- 0x5b86
0x5b83:     ff ff ff                                           |...             |
; function: function_5b86 at 0x5b86 -- 0x5b88
0x5b86:     c9                              	leave 
0x5b87:     c3                              	ret 
; section: .text._ZNK17CScriptCompressor16GetSerializeSizeEii
; function: _ZNK17CScriptCompressor16GetSerializeSizeEii at 0x5b88 -- 0x5bc4
0x5b88:     55                              	push ebp
0x5b89:     89 e5                           	mov ebp, esp
0x5b8b:     53                              	push ebx
0x5b8c:     83 ec 44                        	sub esp, 0x44
0x5b8f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5b92:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x5b95:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5b98:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x5b9b:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x5b9e:     89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x5ba1:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5ba7:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5baa:     31 c0                           	xor eax, eax
0x5bac:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x5baf:     89 04 24                        	mov dword ptr [esp], eax
0x5bb2:     e8 e9 82 00 00                  	call 0xdea0 <function_dea0>
0x5bb7:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x5bba:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5bbe:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x5bc1:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x5bc4 -- 0x5bc5
0x5bc4:     e8                                                 |.               |
; dynamically linked function: _ZNK17CScriptCompressor8CompressERSt6vectorIhSaIhEE at 0x5bc5 -- 0x5bc6
; data inside code section at 0x5bc6 -- 0x5bc8
0x5bc6:     ff ff                                              |..              |
; function: function_5bc8 at 0x5bc8 -- 0x5bdc
0x5bc8:     ff 84 c0 74 0f 8d 45            	inc dword ptr [eax + eax*8 + 0x458d0f74]
0x5bcf:     e0 89                           	loopne 0x5b5a
0x5bd1:     04 24                           	add al, 0x24
0x5bd3:     e8 5a 78 00 00                  	call 0xd432
0x5bd8:     89 c3                           	mov ebx, eax
0x5bda:     eb 62                           	jmp 0x5c3e <function_5c3e>
; function: function_5bdc at 0x5bdc -- 0x5c3e
0x5bdc:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x5bdf:     8b 00                           	mov eax, dword ptr [eax]
0x5be1:     89 04 24                        	mov dword ptr [esp], eax
0x5be4:     e8 49 78 00 00                  	call 0xd432
0x5be9:     83 c0 06                        	add eax, 6
0x5bec:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x5bef:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x5bf2:     8b 00                           	mov eax, dword ptr [eax]
0x5bf4:     89 04 24                        	mov dword ptr [esp], eax
0x5bf7:     e8 36 78 00 00                  	call 0xd432
0x5bfc:     89 c3                           	mov ebx, eax
0x5bfe:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x5c01:     89 04 24                        	mov dword ptr [esp], eax
0x5c04:     e8 fa 93 00 00                  	call 0xf003
0x5c09:     8d 55 f0                        	lea edx, [ebp - 0x10]
0x5c0c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5c10:     89 14 24                        	mov dword ptr [esp], edx
0x5c13:     e8 18 94 00 00                  	call 0xf030
0x5c18:     83 ec 04                        	sub esp, 4
0x5c1b:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x5c1e:     89 04 24                        	mov dword ptr [esp], eax
0x5c21:     e8 51 94 00 00                  	call 0xf077
0x5c26:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x5c29:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x5c2d:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x5c30:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5c34:     89 04 24                        	mov dword ptr [esp], eax
0x5c37:     e8 68 94 00 00                  	call 0xf0a4
0x5c3c:     01 c3                           	add ebx, eax
; function: function_5c3e at 0x5c3e -- 0x5c59
0x5c3e:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x5c41:     89 04 24                        	mov dword ptr [esp], eax
0x5c44:     e8 8d 82 00 00                  	call 0xded6
0x5c49:     89 d8                           	mov eax, ebx
0x5c4b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5c4e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5c55:     74 1e                           	je 0x5c75 <function_5c75>
0x5c57:     eb 17                           	jmp 0x5c70 <function_5c70>
; data inside code section at 0x5c59 -- 0x5c5a
0x5c59:     89                                                 |.               |
; function: function_5c5a at 0x5c5a -- 0x5c5b
0x5c5a:     c3                              	ret 
; data inside code section at 0x5c5b -- 0x5c6c
0x5c5b:     8d 45 e0 89 04 24 e8 70  82 00 00 89 d8 89 04 24   |.E...$.p.......$|
0x5c6b:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x5c6c -- 0x5c6d
; data inside code section at 0x5c6d -- 0x5c70
0x5c6d:     ff ff ff                                           |...             |
; function: function_5c70 at 0x5c70 -- 0x5c71
; dynamically linked function: __stack_chk_fail at 0x5c71 -- 0x5c72
; data inside code section at 0x5c72 -- 0x5c75
0x5c72:     ff ff ff                                           |...             |
; function: function_5c75 at 0x5c75 -- 0x5c7a
0x5c75:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x5c78:     c9                              	leave 
0x5c79:     c3                              	ret 
; section: .text._Z7GetAlgoi
; function: _Z7GetAlgoi at 0x5c7a -- 0x5cc5
0x5c7a:     55                              	push ebp
0x5c7b:     89 e5                           	mov ebp, esp
0x5c7d:     83 ec 28                        	sub esp, 0x28
0x5c80:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5c83:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5c86:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5c8c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5c8f:     31 c0                           	xor eax, eax
0x5c91:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5c94:     25 00 0e 00 00                  	and eax, 0xe00
0x5c99:     85 c0                           	test eax, eax
0x5c9b:     74 09                           	je 0x5ca6 <_Z7GetAlgoi+0x2c>
0x5c9d:     3d 00 02 00 00                  	cmp eax, 0x200
0x5ca2:     74 09                           	je 0x5cad <_Z7GetAlgoi+0x33>
0x5ca4:     eb 0e                           	jmp 0x5cb4 <_Z7GetAlgoi+0x3a>
0x5ca6:     b8 00 00 00 00                  	mov eax, 0
0x5cab:     eb 0c                           	jmp 0x5cb9 <_Z7GetAlgoi+0x3f>
0x5cad:     b8 01 00 00 00                  	mov eax, 1
0x5cb2:     eb 05                           	jmp 0x5cb9 <_Z7GetAlgoi+0x3f>
0x5cb4:     b8 00 00 00 00                  	mov eax, 0
0x5cb9:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5cbc:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5cc3:     74 05                           	je 0x5cca <function_5cca>
; data inside code section at 0x5cc5 -- 0x5cc6
0x5cc5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5cc6 -- 0x5cc7
; data inside code section at 0x5cc7 -- 0x5cca
0x5cc7:     ff ff ff                                           |...             |
; function: function_5cca at 0x5cca -- 0x5ccc
0x5cca:     c9                              	leave 
0x5ccb:     c3                              	ret 
; section: .text._ZN6CTxOutC2Ev
; function: _ZN6CTxOutC1Ev at 0x5ccc -- 0x5cff
0x5ccc:     55                              	push ebp
0x5ccd:     89 e5                           	mov ebp, esp
0x5ccf:     53                              	push ebx
0x5cd0:     83 ec 34                        	sub esp, 0x34
0x5cd3:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5cd6:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5cd9:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5cdf:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5ce2:     31 c0                           	xor eax, eax
0x5ce4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5ce7:     83 c0 08                        	add eax, 8
0x5cea:     89 04 24                        	mov dword ptr [esp], eax
0x5ced:     e8 10 5a 00 00                  	call 0xb702 <function_b702>
0x5cf2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5cf5:     89 04 24                        	mov dword ptr [esp], eax
0x5cf8:     e8 ff 5c 00 00                  	call 0xb9fc
0x5cfd:     eb 1a                           	jmp 0x5d19 <function_5d19>
; data inside code section at 0x5cff -- 0x5d00
0x5cff:     89                                                 |.               |
; function: function_5d00 at 0x5d00 -- 0x5d01
0x5d00:     c3                              	ret 
; data inside code section at 0x5d01 -- 0x5d15
0x5d01:     8b 45 e4 83 c0 08 89 04  24 e8 d7 5a 00 00 89 d8   |.E......$..Z....|
0x5d11:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _Unwind_Resume at 0x5d15 -- 0x5d16
; data inside code section at 0x5d16 -- 0x5d19
0x5d16:     ff ff ff                                           |...             |
; function: function_5d19 at 0x5d19 -- 0x5d25
0x5d19:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5d1c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5d23:     74 05                           	je 0x5d2a <function_5d2a>
; data inside code section at 0x5d25 -- 0x5d26
0x5d25:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5d26 -- 0x5d27
; data inside code section at 0x5d27 -- 0x5d2a
0x5d27:     ff ff ff                                           |...             |
; function: function_5d2a at 0x5d2a -- 0x5d30
0x5d2a:     83 c4 34                        	add esp, 0x34
0x5d2d:     5b                              	pop ebx
0x5d2e:     5d                              	pop ebp
0x5d2f:     c3                              	ret 
; section: .text._ZN6CTxOut7SetNullEv
; function: _ZN6CTxOut7SetNullEv at 0x5d30 -- 0x5d71
0x5d30:     55                              	push ebp
0x5d31:     89 e5                           	mov ebp, esp
0x5d33:     83 ec 38                        	sub esp, 0x38
0x5d36:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5d39:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5d3c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5d42:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5d45:     31 c0                           	xor eax, eax
0x5d47:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5d4a:     c7 00 ff ff ff ff               	mov dword ptr [eax], 0xffffffff
0x5d50:     c7 40 04 ff ff ff ff            	mov dword ptr [eax + 4], 0xffffffff
0x5d57:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5d5a:     83 c0 08                        	add eax, 8
0x5d5d:     89 04 24                        	mov dword ptr [esp], eax
0x5d60:     e8 6f 92 00 00                  	call 0xefd4 <function_efd4>
0x5d65:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5d68:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5d6f:     74 05                           	je 0x5d76 <function_5d76>
; data inside code section at 0x5d71 -- 0x5d72
0x5d71:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5d72 -- 0x5d73
; data inside code section at 0x5d73 -- 0x5d76
0x5d73:     ff ff ff                                           |...             |
; function: function_5d76 at 0x5d76 -- 0x5d78
0x5d76:     c9                              	leave 
0x5d77:     c3                              	ret 
; section: .text._ZNK6CTxOut6IsNullEv
; function: _ZNK6CTxOut6IsNullEv at 0x5d78 -- 0x5db2
0x5d78:     55                              	push ebp
0x5d79:     89 e5                           	mov ebp, esp
0x5d7b:     83 ec 28                        	sub esp, 0x28
0x5d7e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5d81:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5d84:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5d8a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5d8d:     31 c0                           	xor eax, eax
0x5d8f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5d92:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x5d95:     8b 00                           	mov eax, dword ptr [eax]
0x5d97:     21 d0                           	and eax, edx
0x5d99:     83 f8 ff                        	cmp eax, -1
0x5d9c:     0f 94 c0                        	sete al
0x5d9f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5da2:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5da9:     74 05                           	je 0x5db0 <_ZNK6CTxOut6IsNullEv+0x38>
0x5dab:     e8 fc ff ff ff                  	call 0x5dac
0x5db0:     c9                              	leave 
0x5db1:     c3                              	ret 
; section: .text._ZN16CTxOutCompressorC2ER6CTxOut
; function: _ZN16CTxOutCompressorC1ER6CTxOut at 0x5db2 -- 0x5dea
0x5db2:     55                              	push ebp
0x5db3:     89 e5                           	mov ebp, esp
0x5db5:     83 ec 28                        	sub esp, 0x28
0x5db8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5dbb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5dbe:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5dc1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5dc4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5dca:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5dcd:     31 c0                           	xor eax, eax
0x5dcf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5dd2:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x5dd5:     89 10                           	mov dword ptr [eax], edx
0x5dd7:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5dda:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5de1:     74 05                           	je 0x5de8 <_ZN16CTxOutCompressorC1ER6CTxOut+0x36>
0x5de3:     e8 fc ff ff ff                  	call 0x5de4
0x5de8:     c9                              	leave 
0x5de9:     c3                              	ret 
; section: .text._ZNK16CTxOutCompressor16GetSerializeSizeEii
; function: _ZNK16CTxOutCompressor16GetSerializeSizeEii at 0x5dea -- 0x5eed
0x5dea:     55                              	push ebp
0x5deb:     89 e5                           	mov ebp, esp
0x5ded:     56                              	push esi
0x5dee:     53                              	push ebx
0x5def:     83 ec 60                        	sub esp, 0x60
0x5df2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5df5:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x5df8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5dfb:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x5dfe:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x5e01:     89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x5e04:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5e0a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5e0d:     31 c0                           	xor eax, eax
0x5e0f:     c6 45 f1 01                     	mov byte ptr [ebp - 0xf], 1
0x5e13:     c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x5e17:     c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x5e1b:     c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x5e22:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x5e25:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x5e28:     8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x5e2b:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x5e2e:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x5e31:     8b 00                           	mov eax, dword ptr [eax]
0x5e33:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x5e36:     8b 00                           	mov eax, dword ptr [eax]
0x5e38:     89 04 24                        	mov dword ptr [esp], eax
0x5e3b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5e3f:     e8 fc ff ff ff                  	call 0x5e40
0x5e44:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x5e47:     89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x5e4a:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x5e4d:     89 04 24                        	mov dword ptr [esp], eax
0x5e50:     e8 6b 96 00 00                  	call 0xf4c0 <function_f4c0>
0x5e55:     8d 55 e0                        	lea edx, [ebp - 0x20]
0x5e58:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5e5c:     89 14 24                        	mov dword ptr [esp], edx
0x5e5f:     e8 89 96 00 00                  	call 0xf4ed <function_f4ed>
0x5e64:     83 ec 04                        	sub esp, 4
0x5e67:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x5e6a:     89 04 24                        	mov dword ptr [esp], eax
0x5e6d:     e8 c2 96 00 00                  	call 0xf534 <function_f534>
0x5e72:     89 f2                           	mov edx, esi
0x5e74:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x5e78:     8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x5e7b:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x5e7f:     8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x5e82:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x5e86:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5e8a:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x5e8d:     89 04 24                        	mov dword ptr [esp], eax
0x5e90:     e8 cc 96 00 00                  	call 0xf561 <function_f561>
0x5e95:     01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x5e98:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x5e9b:     8b 00                           	mov eax, dword ptr [eax]
0x5e9d:     83 c0 08                        	add eax, 8
0x5ea0:     89 04 24                        	mov dword ptr [esp], eax
0x5ea3:     e8 15 97 00 00                  	call 0xf5bd <function_f5bd>
0x5ea8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5eac:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x5eaf:     89 04 24                        	mov dword ptr [esp], eax
0x5eb2:     e8 83 5a 00 00                  	call 0xb93a
0x5eb7:     88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x5ebb:     8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x5ebe:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x5ec2:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x5ec5:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x5ec9:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x5ecc:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x5ed0:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x5ed3:     89 04 24                        	mov dword ptr [esp], eax
0x5ed6:     e8 0f 97 00 00                  	call 0xf5ea
0x5edb:     01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x5ede:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x5ee1:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x5ee4:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x5eeb:     74 05                           	je 0x5ef2 <function_5ef2>
; data inside code section at 0x5eed -- 0x5eee
0x5eed:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5eee -- 0x5eef
; data inside code section at 0x5eef -- 0x5ef2
0x5eef:     ff ff ff                                           |...             |
; function: function_5ef2 at 0x5ef2 -- 0x5ef9
0x5ef2:     8d 65 f8                        	lea esp, [ebp - 8]
0x5ef5:     5b                              	pop ebx
0x5ef6:     5e                              	pop esi
0x5ef7:     5d                              	pop ebp
0x5ef8:     c3                              	ret 
; section: .text._ZN6CTxOutD2Ev
; function: _ZN6CTxOutD1Ev at 0x5efa -- 0x5f32
0x5efa:     55                              	push ebp
0x5efb:     89 e5                           	mov ebp, esp
0x5efd:     83 ec 38                        	sub esp, 0x38
0x5f00:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5f03:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5f06:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5f0c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5f0f:     31 c0                           	xor eax, eax
0x5f11:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5f14:     83 c0 08                        	add eax, 8
0x5f17:     89 04 24                        	mov dword ptr [esp], eax
0x5f1a:     e8 f5 5a 00 00                  	call 0xba14
0x5f1f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5f22:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5f29:     74 05                           	je 0x5f30 <_ZN6CTxOutD1Ev+0x36>
0x5f2b:     e8 fc ff ff ff                  	call 0x5f2c
0x5f30:     c9                              	leave 
0x5f31:     c3                              	ret 
; section: .text._ZN6CTxOutC2ERKS_
; function: _ZN6CTxOutC1ERKS_ at 0x5f32 -- 0x5f83
0x5f32:     55                              	push ebp
0x5f33:     89 e5                           	mov ebp, esp
0x5f35:     83 ec 38                        	sub esp, 0x38
0x5f38:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5f3b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x5f3e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x5f41:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x5f44:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5f4a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5f4d:     31 c0                           	xor eax, eax
0x5f4f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x5f52:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x5f55:     8b 00                           	mov eax, dword ptr [eax]
0x5f57:     8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x5f5a:     89 01                           	mov dword ptr [ecx], eax
0x5f5c:     89 51 04                        	mov dword ptr [ecx + 4], edx
0x5f5f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x5f62:     8d 50 08                        	lea edx, [eax + 8]
0x5f65:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x5f68:     83 c0 08                        	add eax, 8
0x5f6b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x5f6f:     89 04 24                        	mov dword ptr [esp], eax
0x5f72:     e8 27 5a 00 00                  	call 0xb99e
0x5f77:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x5f7a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x5f81:     74 05                           	je 0x5f88 <function_5f88>
; data inside code section at 0x5f83 -- 0x5f84
0x5f83:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5f84 -- 0x5f85
; data inside code section at 0x5f85 -- 0x5f88
0x5f85:     ff ff ff                                           |...             |
; function: function_5f88 at 0x5f88 -- 0x5f8a
0x5f88:     c9                              	leave 
0x5f89:     c3                              	ret 
; section: .text._ZN6CCoinsC2Ev
; function: _ZN6CCoinsC1Ev at 0x5f8a -- 0x601a
0x5f8a:     55                              	push ebp
0x5f8b:     89 e5                           	mov ebp, esp
0x5f8d:     53                              	push ebx
0x5f8e:     83 ec 44                        	sub esp, 0x44
0x5f91:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x5f94:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x5f97:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x5f9d:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x5fa0:     31 c0                           	xor eax, eax
0x5fa2:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x5fa5:     c6 00 00                        	mov byte ptr [eax], 0
0x5fa8:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5fab:     89 04 24                        	mov dword ptr [esp], eax
0x5fae:     e8 ef 99 00 00                  	call 0xf9a2 <function_f9a2>
0x5fb3:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x5fb6:     89 04 24                        	mov dword ptr [esp], eax
0x5fb9:     e8 98 5c 00 00                  	call 0xbc56
0x5fbe:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x5fc1:     8d 50 04                        	lea edx, [eax + 4]
0x5fc4:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5fc7:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x5fcb:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x5fce:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x5fd2:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x5fda:     89 14 24                        	mov dword ptr [esp], edx
0x5fdd:     e8 2c 9a 00 00                  	call 0xfa0e <function_fa0e>
0x5fe2:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x5fe5:     89 04 24                        	mov dword ptr [esp], eax
0x5fe8:     e8 97 5e 00 00                  	call 0xbe84
0x5fed:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x5ff0:     89 04 24                        	mov dword ptr [esp], eax
0x5ff3:     e8 e0 99 00 00                  	call 0xf9d8 <function_f9d8>
0x5ff8:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x5ffb:     c7 40 10 00 00 00 00            	mov dword ptr [eax + 0x10], 0
0x6002:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x6005:     c7 40 14 00 00 00 00            	mov dword ptr [eax + 0x14], 0
0x600c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x600f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x6016:     74 2d                           	je 0x6045 <function_6045>
0x6018:     eb 26                           	jmp 0x6040 <function_6040>
; function: function_601a at 0x601a -- 0x6029
0x601a:     89 c3                           	mov ebx, eax
0x601c:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x601f:     89 04 24                        	mov dword ptr [esp], eax
0x6022:     e8 5d 5e 00 00                  	call 0xbe84
0x6027:     eb 02                           	jmp 0x602b <function_602b>
; function: function_6029 at 0x6029 -- 0x602b
0x6029:     89 c3                           	mov ebx, eax
; function: function_602b at 0x602b -- 0x603b
0x602b:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x602e:     89 04 24                        	mov dword ptr [esp], eax
0x6031:     e8 a2 99 00 00                  	call 0xf9d8 <function_f9d8>
0x6036:     89 d8                           	mov eax, ebx
0x6038:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x603b -- 0x603c
0x603b:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x603c -- 0x603d
; data inside code section at 0x603d -- 0x6040
0x603d:     ff ff ff                                           |...             |
; function: function_6040 at 0x6040 -- 0x6041
; dynamically linked function: __stack_chk_fail at 0x6041 -- 0x6042
; data inside code section at 0x6042 -- 0x6045
0x6042:     ff ff ff                                           |...             |
; function: function_6045 at 0x6045 -- 0x604b
0x6045:     83 c4 44                        	add esp, 0x44
0x6048:     5b                              	pop ebx
0x6049:     5d                              	pop ebp
0x604a:     c3                              	ret 
; section: .text._ZN6CCoins7CleanupEv
; function: _ZN6CCoins7CleanupEv at 0x604c -- 0x60ef
0x604c:     55                              	push ebp
0x604d:     89 e5                           	mov ebp, esp
0x604f:     53                              	push ebx
0x6050:     83 ec 34                        	sub esp, 0x34
0x6053:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6056:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6059:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x605f:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6062:     31 c0                           	xor eax, eax
0x6064:     eb 0e                           	jmp 0x6074 <_ZN6CCoins7CleanupEv+0x28>
0x6066:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6069:     83 c0 04                        	add eax, 4
0x606c:     89 04 24                        	mov dword ptr [esp], eax
0x606f:     e8 9c 9b 00 00                  	call 0xfc10 <function_fc10>
0x6074:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6077:     83 c0 04                        	add eax, 4
0x607a:     89 04 24                        	mov dword ptr [esp], eax
0x607d:     e8 da 9a 00 00                  	call 0xfb5c <function_fb5c>
0x6082:     85 c0                           	test eax, eax
0x6084:     74 21                           	je 0x60a7 <_ZN6CCoins7CleanupEv+0x5b>
0x6086:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6089:     83 c0 04                        	add eax, 4
0x608c:     89 04 24                        	mov dword ptr [esp], eax
0x608f:     e8 0e 9b 00 00                  	call 0xfba2 <function_fba2>
0x6094:     89 04 24                        	mov dword ptr [esp], eax
0x6097:     e8 28 5d 00 00                  	call 0xbdc4
0x609c:     84 c0                           	test al, al
0x609e:     74 07                           	je 0x60a7 <_ZN6CCoins7CleanupEv+0x5b>
0x60a0:     b8 01 00 00 00                  	mov eax, 1
0x60a5:     eb 05                           	jmp 0x60ac <_ZN6CCoins7CleanupEv+0x60>
0x60a7:     b8 00 00 00 00                  	mov eax, 0
0x60ac:     84 c0                           	test al, al
0x60ae:     75 b6                           	jne 0x6066 <_ZN6CCoins7CleanupEv+0x1a>
0x60b0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x60b3:     83 c0 04                        	add eax, 4
0x60b6:     89 04 24                        	mov dword ptr [esp], eax
0x60b9:     e8 fe 95 00 00                  	call 0xf6bc <function_f6bc>
0x60be:     84 c0                           	test al, al
0x60c0:     74 44                           	je 0x6106 <function_6106>
0x60c2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x60c5:     8d 58 04                        	lea ebx, [eax + 4]
0x60c8:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x60cb:     89 04 24                        	mov dword ptr [esp], eax
0x60ce:     e8 db 94 00 00                  	call 0xf5ae <function_f5ae>
0x60d3:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x60d7:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x60da:     89 04 24                        	mov dword ptr [esp], eax
0x60dd:     e8 7c 9b 00 00                  	call 0xfc5e
0x60e2:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x60e5:     89 04 24                        	mov dword ptr [esp], eax
0x60e8:     e8 f7 94 00 00                  	call 0xf5e4 <function_f5e4>
0x60ed:     eb 17                           	jmp 0x6106 <function_6106>
; data inside code section at 0x60ef -- 0x60f0
0x60ef:     89                                                 |.               |
; function: function_60f0 at 0x60f0 -- 0x60f1
0x60f0:     c3                              	ret 
; data inside code section at 0x60f1 -- 0x6102
0x60f1:     8d 45 e8 89 04 24 e8 e8  94 00 00 89 d8 89 04 24   |.E...$.........$|
0x6101:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x6102 -- 0x6103
; data inside code section at 0x6103 -- 0x6106
0x6103:     ff ff ff                                           |...             |
; function: function_6106 at 0x6106 -- 0x611d
0x6106:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x6109:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x6110:     74 05                           	je 0x6117 <function_6106+0x11>
0x6112:     e8 fc ff ff ff                  	call 0x6113
0x6117:     83 c4 34                        	add esp, 0x34
0x611a:     5b                              	pop ebx
0x611b:     5d                              	pop ebp
0x611c:     c3                              	ret 
; section: .text._ZNK6CCoins16GetSerializeSizeEii
; function: _ZNK6CCoins16GetSerializeSizeEii at 0x611e -- 0x616a
0x611e:     55                              	push ebp
0x611f:     89 e5                           	mov ebp, esp
0x6121:     83 ec 58                        	sub esp, 0x58
0x6124:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6127:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x612a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x612d:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x6130:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x6133:     89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x6136:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x613c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x613f:     31 c0                           	xor eax, eax
0x6141:     c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x6148:     c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x614f:     c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x6156:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x6159:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x615d:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x6160:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6164:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x6167:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x616a -- 0x616b
0x616a:     e8                                                 |.               |
; dynamically linked function: _ZNK6CCoins12CalcMaskSizeERjS0_ at 0x616b -- 0x616c
; data inside code section at 0x616c -- 0x616e
0x616c:     ff ff                                              |..              |
; function: function_616e at 0x616e -- 0x6328
0x616e:     ff 8b 45 c4 83 c0               	dec dword ptr [ebx - 0x3f7c3bbb]
0x6174:     04 89                           	add al, 0x89
0x6176:     04 24                           	add al, 0x24
0x6178:     e8 b1 9a 00 00                  	call 0xfc2e <function_fc2e>
0x617d:     85 c0                           	test eax, eax
0x617f:     74 2c                           	je 0x61ad <function_616e+0x3f>
0x6181:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x6184:     83 c0 04                        	add eax, 4
0x6187:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x618f:     89 04 24                        	mov dword ptr [esp], eax
0x6192:     e8 35 9c 00 00                  	call 0xfdcc
0x6197:     89 04 24                        	mov dword ptr [esp], eax
0x619a:     e8 f7 5c 00 00                  	call 0xbe96
0x619f:     83 f0 01                        	xor eax, 1
0x61a2:     84 c0                           	test al, al
0x61a4:     74 07                           	je 0x61ad <function_616e+0x3f>
0x61a6:     b8 01 00 00 00                  	mov eax, 1
0x61ab:     eb 05                           	jmp 0x61b2 <function_616e+0x44>
0x61ad:     b8 00 00 00 00                  	mov eax, 0
0x61b2:     88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x61b5:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x61b8:     83 c0 04                        	add eax, 4
0x61bb:     89 04 24                        	mov dword ptr [esp], eax
0x61be:     e8 6b 9a 00 00                  	call 0xfc2e <function_fc2e>
0x61c3:     83 f8 01                        	cmp eax, 1
0x61c6:     76 2c                           	jbe 0x61f4 <function_616e+0x86>
0x61c8:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x61cb:     83 c0 04                        	add eax, 4
0x61ce:     c7 44 24 04 01 00 00 00         	mov dword ptr [esp + 4], 1
0x61d6:     89 04 24                        	mov dword ptr [esp], eax
0x61d9:     e8 ee 9b 00 00                  	call 0xfdcc
0x61de:     89 04 24                        	mov dword ptr [esp], eax
0x61e1:     e8 b0 5c 00 00                  	call 0xbe96
0x61e6:     83 f0 01                        	xor eax, 1
0x61e9:     84 c0                           	test al, al
0x61eb:     74 07                           	je 0x61f4 <function_616e+0x86>
0x61ed:     b8 01 00 00 00                  	mov eax, 1
0x61f2:     eb 05                           	jmp 0x61f9 <function_616e+0x8b>
0x61f4:     b8 00 00 00 00                  	mov eax, 0
0x61f9:     88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x61fc:     0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x6200:     83 f0 01                        	xor eax, 1
0x6203:     84 c0                           	test al, al
0x6205:     74 36                           	je 0x623d <function_616e+0xcf>
0x6207:     0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x620b:     83 f0 01                        	xor eax, 1
0x620e:     84 c0                           	test al, al
0x6210:     74 2b                           	je 0x623d <function_616e+0xcf>
0x6212:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x6215:     85 c0                           	test eax, eax
0x6217:     75 24                           	jne 0x623d <function_616e+0xcf>
0x6219:     c7 44 24 0c a4 42 00 00         	mov dword ptr [esp + 0xc], 0x42a4 ; "unsigned int CCoins::GetSerializeSize(int, int) const"
0x6221:     c7 44 24 08 db 01 00 00         	mov dword ptr [esp + 8], 0x1db
0x6229:     c7 44 24 04 86 3d 00 00         	mov dword ptr [esp + 4], 0x3d86 ; "core.h"
0x6231:     c7 04 24 90 3d 00 00            	mov dword ptr [esp], 0x3d90 ; "fFirst || fSecond || nMaskCode"
0x6238:     e8 fc ff ff ff                  	call 0x6239
0x623d:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x6240:     0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x6244:     83 f0 01                        	xor eax, 1
0x6247:     84 c0                           	test al, al
0x6249:     74 12                           	je 0x625d <function_616e+0xef>
0x624b:     0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x624f:     83 f0 01                        	xor eax, 1
0x6252:     84 c0                           	test al, al
0x6254:     74 07                           	je 0x625d <function_616e+0xef>
0x6256:     b8 01 00 00 00                  	mov eax, 1
0x625b:     eb 05                           	jmp 0x6262 <function_616e+0xf4>
0x625d:     b8 00 00 00 00                  	mov eax, 0
0x6262:     0f b6 c0                        	movzx eax, al
0x6265:     89 d1                           	mov ecx, edx
0x6267:     29 c1                           	sub ecx, eax
0x6269:     89 c8                           	mov eax, ecx
0x626b:     8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x6272:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x6275:     0f b6 00                        	movzx eax, byte ptr [eax]
0x6278:     84 c0                           	test al, al
0x627a:     74 07                           	je 0x6283 <function_616e+0x115>
0x627c:     b8 01 00 00 00                  	mov eax, 1
0x6281:     eb 05                           	jmp 0x6288 <function_616e+0x11a>
0x6283:     b8 00 00 00 00                  	mov eax, 0
0x6288:     01 c2                           	add edx, eax
0x628a:     80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x628e:     74 07                           	je 0x6297 <function_616e+0x129>
0x6290:     b8 02 00 00 00                  	mov eax, 2
0x6295:     eb 05                           	jmp 0x629c <function_616e+0x12e>
0x6297:     b8 00 00 00 00                  	mov eax, 0
0x629c:     01 c2                           	add edx, eax
0x629e:     80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x62a2:     74 07                           	je 0x62ab <function_616e+0x13d>
0x62a4:     b8 04 00 00 00                  	mov eax, 4
0x62a9:     eb 05                           	jmp 0x62b0 <function_616e+0x142>
0x62ab:     b8 00 00 00 00                  	mov eax, 0
0x62b0:     01 d0                           	add eax, edx
0x62b2:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x62b5:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x62b8:     83 c0 14                        	add eax, 0x14
0x62bb:     89 04 24                        	mov dword ptr [esp], eax
0x62be:     e8 06 97 00 00                  	call 0xf9c9 <function_f9c9>
0x62c3:     8d 55 d8                        	lea edx, [ebp - 0x28]
0x62c6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x62ca:     89 14 24                        	mov dword ptr [esp], edx
0x62cd:     e8 24 97 00 00                  	call 0xf9f6 <function_f9f6>
0x62d2:     83 ec 04                        	sub esp, 4
0x62d5:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x62d8:     89 04 24                        	mov dword ptr [esp], eax
0x62db:     e8 5d 97 00 00                  	call 0xfa3d <function_fa3d>
0x62e0:     8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x62e3:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x62e7:     8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x62ea:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x62ee:     89 04 24                        	mov dword ptr [esp], eax
0x62f1:     e8 74 97 00 00                  	call 0xfa6a <function_fa6a>
0x62f6:     01 45 e8                        	add dword ptr [ebp - 0x18], eax
0x62f9:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x62fc:     89 04 24                        	mov dword ptr [esp], eax
0x62ff:     e8 95 92 00 00                  	call 0xf599 <function_f599>
0x6304:     8d 55 dc                        	lea edx, [ebp - 0x24]
0x6307:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x630b:     89 14 24                        	mov dword ptr [esp], edx
0x630e:     e8 b3 92 00 00                  	call 0xf5c6 <function_f5c6>
0x6313:     83 ec 04                        	sub esp, 4
0x6316:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x6319:     89 04 24                        	mov dword ptr [esp], eax
0x631c:     e8 ec 92 00 00                  	call 0xf60d
0x6321:     8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x6324:     89 54 24 08                     	mov dword ptr [esp + 8], edx
; data inside code section at 0x6328 -- 0x632a
0x6328:     8b 55                                              |.U              |
; function: function_632a at 0x632a -- 0x6428
0x632a:     c0 89 54 24 04 89 04            	ror byte ptr [ecx - 0x76fbdbac], 4
0x6331:     24 e8                           	and al, 0xe8
0x6333:     43                              	inc ebx
0x6334:     96                              	xchg eax, esi
0x6335:     00 00                           	add byte ptr [eax], al
0x6337:     01 45 e8                        	add dword ptr [ebp - 0x18], eax
0x633a:     8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x633d:     01 45 e8                        	add dword ptr [ebp - 0x18], eax
0x6340:     c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x6347:     eb 70                           	jmp 0x63b9 <function_632a+0x8f>
0x6349:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x634c:     8d 50 04                        	lea edx, [eax + 4]
0x634f:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x6352:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6356:     89 14 24                        	mov dword ptr [esp], edx
0x6359:     e8 6e 9a 00 00                  	call 0xfdcc
0x635e:     89 04 24                        	mov dword ptr [esp], eax
0x6361:     e8 30 5b 00 00                  	call 0xbe96
0x6366:     83 f0 01                        	xor eax, 1
0x6369:     84 c0                           	test al, al
0x636b:     74 48                           	je 0x63b5 <function_632a+0x8b>
0x636d:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x6370:     8d 50 04                        	lea edx, [eax + 4]
0x6373:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x6376:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x637a:     89 14 24                        	mov dword ptr [esp], edx
0x637d:     e8 4a 9a 00 00                  	call 0xfdcc
0x6382:     89 04 24                        	mov dword ptr [esp], eax
0x6385:     e8 2f 97 00 00                  	call 0xfab9 <function_fab9>
0x638a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x638e:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x6391:     89 04 24                        	mov dword ptr [esp], eax
0x6394:     e8 37 5b 00 00                  	call 0xbed0
0x6399:     8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x639c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x63a0:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x63a3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x63a7:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x63aa:     89 04 24                        	mov dword ptr [esp], eax
0x63ad:     e8 34 97 00 00                  	call 0xfae6 <function_fae6>
0x63b2:     01 45 e8                        	add dword ptr [ebp - 0x18], eax
0x63b5:     83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x63b9:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x63bc:     83 c0 04                        	add eax, 4
0x63bf:     89 04 24                        	mov dword ptr [esp], eax
0x63c2:     e8 67 98 00 00                  	call 0xfc2e <function_fc2e>
0x63c7:     3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x63ca:     0f 97 c0                        	seta al
0x63cd:     84 c0                           	test al, al
0x63cf:     0f 85 74 ff ff ff               	jne 0x6349 <function_632a+0x1f>
0x63d5:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x63d8:     83 c0 10                        	add eax, 0x10
0x63db:     89 04 24                        	mov dword ptr [esp], eax
0x63de:     e8 e6 95 00 00                  	call 0xf9c9 <function_f9c9>
0x63e3:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0x63e6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x63ea:     89 14 24                        	mov dword ptr [esp], edx
0x63ed:     e8 04 96 00 00                  	call 0xf9f6 <function_f9f6>
0x63f2:     83 ec 04                        	sub esp, 4
0x63f5:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x63f8:     89 04 24                        	mov dword ptr [esp], eax
0x63fb:     e8 3d 96 00 00                  	call 0xfa3d <function_fa3d>
0x6400:     8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x6403:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6407:     8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x640a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x640e:     89 04 24                        	mov dword ptr [esp], eax
0x6411:     e8 54 96 00 00                  	call 0xfa6a <function_fa6a>
0x6416:     01 45 e8                        	add dword ptr [ebp - 0x18], eax
0x6419:     8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x641c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x641f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6426:     74 05                           	je 0x642d <function_642d>
; data inside code section at 0x6428 -- 0x6429
0x6428:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6429 -- 0x642a
; data inside code section at 0x642a -- 0x642d
0x642a:     ff ff ff                                           |...             |
; function: function_642d at 0x642d -- 0x642f
0x642d:     c9                              	leave 
0x642e:     c3                              	ret 
; section: .text._ZNK6CCoins8IsPrunedEv
; function: _ZNK6CCoins8IsPrunedEv at 0x6430 -- 0x65ba
0x6430:     55                              	push ebp
0x6431:     89 e5                           	mov ebp, esp
0x6433:     83 ec 58                        	sub esp, 0x58
0x6436:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6439:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x643c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6442:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6445:     31 c0                           	xor eax, eax
0x6447:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x644a:     8d 50 04                        	lea edx, [eax + 4]
0x644d:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x6450:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6458:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x645c:     89 04 24                        	mov dword ptr [esp], eax
0x645f:     e8 be 9c 00 00                  	call 0x10122 <function_10122>
0x6464:     83 ec 04                        	sub esp, 4
0x6467:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x646a:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x646d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x6470:     89 04 24                        	mov dword ptr [esp], eax
0x6473:     e8 c8 4b 00 00                  	call 0xb040
0x6478:     84 c0                           	test al, al
0x647a:     0f 85 29 01 00 00               	jne 0x65a9 <_ZNK6CCoins8IsPrunedEv+0x179>
0x6480:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x6483:     c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0x648b:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6493:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x6496:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x649a:     89 04 24                        	mov dword ptr [esp], eax
0x649d:     e8 db 9c 00 00                  	call 0x1017d <function_1017d>
0x64a2:     83 ec 04                        	sub esp, 4
0x64a5:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x64a8:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x64ab:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x64ae:     89 04 24                        	mov dword ptr [esp], eax
0x64b1:     e8 8a 4b 00 00                  	call 0xb040
0x64b6:     84 c0                           	test al, al
0x64b8:     0f 85 eb 00 00 00               	jne 0x65a9 <_ZNK6CCoins8IsPrunedEv+0x179>
0x64be:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x64c1:     c7 44 24 0c 00 00 00 00         	mov dword ptr [esp + 0xc], 0
0x64c9:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x64d1:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x64d4:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x64d8:     89 04 24                        	mov dword ptr [esp], eax
0x64db:     e8 17 9d 00 00                  	call 0x101f7 <function_101f7>
0x64e0:     83 ec 04                        	sub esp, 4
0x64e3:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x64e6:     89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x64e9:     8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x64ec:     89 04 24                        	mov dword ptr [esp], eax
0x64ef:     e8 4c 4b 00 00                  	call 0xb040
0x64f4:     84 c0                           	test al, al
0x64f6:     0f 85 ad 00 00 00               	jne 0x65a9 <_ZNK6CCoins8IsPrunedEv+0x179>
0x64fc:     c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x6500:     eb 6a                           	jmp 0x656c <_ZNK6CCoins8IsPrunedEv+0x13c>
0x6502:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x6505:     89 04 24                        	mov dword ptr [esp], eax
0x6508:     e8 62 4b 00 00                  	call 0xb06f
0x650d:     84 c0                           	test al, al
0x650f:     75 40                           	jne 0x6551 <_ZNK6CCoins8IsPrunedEv+0x121>
0x6511:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6519:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x651c:     89 04 24                        	mov dword ptr [esp], eax
0x651f:     e8 ef 9d 00 00                  	call 0x10313 <function_10313>
0x6524:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x6527:     eb 1d                           	jmp 0x6546 <_ZNK6CCoins8IsPrunedEv+0x116>
0x6529:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x652c:     89 04 24                        	mov dword ptr [esp], eax
0x652f:     e8 74 5c 00 00                  	call 0xc1a8
0x6534:     83 f0 01                        	xor eax, 1
0x6537:     84 c0                           	test al, al
0x6539:     74 07                           	je 0x6542 <_ZNK6CCoins8IsPrunedEv+0x112>
0x653b:     b8 00 00 00 00                  	mov eax, 0
0x6540:     eb 6c                           	jmp 0x65ae <_ZNK6CCoins8IsPrunedEv+0x17e>
0x6542:     c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x6546:     0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x654a:     83 f0 01                        	xor eax, 1
0x654d:     84 c0                           	test al, al
0x654f:     75 d8                           	jne 0x6529 <_ZNK6CCoins8IsPrunedEv+0xf9>
0x6551:     0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x6555:     84 c0                           	test al, al
0x6557:     74 13                           	je 0x656c <_ZNK6CCoins8IsPrunedEv+0x13c>
0x6559:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6561:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6564:     89 04 24                        	mov dword ptr [esp], eax
0x6567:     e8 64 9d 00 00                  	call 0x102d0 <function_102d0>
0x656c:     0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x6570:     84 c0                           	test al, al
0x6572:     74 28                           	je 0x659c <_ZNK6CCoins8IsPrunedEv+0x16c>
0x6574:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x657c:     8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x657f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6583:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6586:     89 04 24                        	mov dword ptr [esp], eax
0x6589:     e8 e3 9c 00 00                  	call 0x10271 <function_10271>
0x658e:     83 f0 01                        	xor eax, 1
0x6591:     84 c0                           	test al, al
0x6593:     74 07                           	je 0x659c <_ZNK6CCoins8IsPrunedEv+0x16c>
0x6595:     b8 01 00 00 00                  	mov eax, 1
0x659a:     eb 05                           	jmp 0x65a1 <_ZNK6CCoins8IsPrunedEv+0x171>
0x659c:     b8 00 00 00 00                  	mov eax, 0
0x65a1:     84 c0                           	test al, al
0x65a3:     0f 85 59 ff ff ff               	jne 0x6502 <_ZNK6CCoins8IsPrunedEv+0xd2>
0x65a9:     b8 01 00 00 00                  	mov eax, 1
0x65ae:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x65b1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x65b8:     74 05                           	je 0x65bf <function_65bf>
; data inside code section at 0x65ba -- 0x65bb
0x65ba:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x65bb -- 0x65bc
; data inside code section at 0x65bc -- 0x65bf
0x65bc:     ff ff ff                                           |...             |
; function: function_65bf at 0x65bf -- 0x65c1
0x65bf:     c9                              	leave 
0x65c0:     c3                              	ret 
; section: .text._ZN12CBlockHeaderC2Ev
; function: _ZN12CBlockHeaderC1Ev at 0x65c2 -- 0x660c
0x65c2:     55                              	push ebp
0x65c3:     89 e5                           	mov ebp, esp
0x65c5:     83 ec 38                        	sub esp, 0x38
0x65c8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x65cb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x65ce:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x65d4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x65d7:     31 c0                           	xor eax, eax
0x65d9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x65dc:     83 c0 04                        	add eax, 4
0x65df:     89 04 24                        	mov dword ptr [esp], eax
0x65e2:     e8 bb 26 00 00                  	call 0x8ca2 <function_8ca2>
0x65e7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x65ea:     83 c0 24                        	add eax, 0x24
0x65ed:     89 04 24                        	mov dword ptr [esp], eax
0x65f0:     e8 ad 26 00 00                  	call 0x8ca2 <function_8ca2>
0x65f5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x65f8:     89 04 24                        	mov dword ptr [esp], eax
0x65fb:     e8 d6 65 00 00                  	call 0xcbd6 <function_cbd6>
0x6600:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x6603:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x660a:     74 05                           	je 0x6611 <function_6611>
; data inside code section at 0x660c -- 0x660d
0x660c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x660d -- 0x660e
; data inside code section at 0x660e -- 0x6611
0x660e:     ff ff ff                                           |...             |
; function: function_6611 at 0x6611 -- 0x6613
0x6611:     c9                              	leave 
0x6612:     c3                              	ret 
; section: .text._ZN12CBlockHeader7SetNullEv
; function: _ZN12CBlockHeader7SetNullEv at 0x6614 -- 0x66a1
0x6614:     55                              	push ebp
0x6615:     89 e5                           	mov ebp, esp
0x6617:     83 ec 38                        	sub esp, 0x38
0x661a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x661d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6620:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6626:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6629:     31 c0                           	xor eax, eax
0x662b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x662e:     c7 00 02 00 00 00               	mov dword ptr [eax], 2
0x6634:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6637:     83 c0 04                        	add eax, 4
0x663a:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6642:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x664a:     89 04 24                        	mov dword ptr [esp], eax
0x664d:     e8 7c 27 00 00                  	call 0x8dce <function_8dce>
0x6652:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6655:     83 c0 24                        	add eax, 0x24
0x6658:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6660:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6668:     89 04 24                        	mov dword ptr [esp], eax
0x666b:     e8 5e 27 00 00                  	call 0x8dce <function_8dce>
0x6670:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6673:     c7 40 44 00 00 00 00            	mov dword ptr [eax + 0x44], 0
0x667a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x667d:     c7 40 48 00 00 00 00            	mov dword ptr [eax + 0x48], 0
0x6684:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6687:     c7 40 4c 00 00 00 00            	mov dword ptr [eax + 0x4c], 0
0x668e:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x6691:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x6698:     74 05                           	je 0x669f <_ZN12CBlockHeader7SetNullEv+0x8b>
0x669a:     e8 fc ff ff ff                  	call 0x669b
0x669f:     c9                              	leave 
0x66a0:     c3                              	ret 
; section: .text._ZNK12CChainParams16HashGenesisBlockEv
; function: _ZNK12CChainParams16HashGenesisBlockEv at 0x66a2 -- 0x66cb
0x66a2:     55                              	push ebp
0x66a3:     89 e5                           	mov ebp, esp
0x66a5:     83 ec 28                        	sub esp, 0x28
0x66a8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x66ab:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x66ae:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x66b4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x66b7:     31 c0                           	xor eax, eax
0x66b9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x66bc:     83 c0 04                        	add eax, 4
0x66bf:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x66c2:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x66c9:     74 05                           	je 0x66d0 <function_66d0>
; data inside code section at 0x66cb -- 0x66cc
0x66cb:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x66cc -- 0x66cd
; data inside code section at 0x66cd -- 0x66d0
0x66cd:     ff ff ff                                           |...             |
; function: function_66d0 at 0x66d0 -- 0x66d2
0x66d0:     c9                              	leave 
0x66d1:     c3                              	ret 
; section: .text._ZNK13CDiskBlockPos16GetSerializeSizeEii
; function: _ZNK13CDiskBlockPos16GetSerializeSizeEii at 0x66d2 -- 0x67c2
0x66d2:     55                              	push ebp
0x66d3:     89 e5                           	mov ebp, esp
0x66d5:     56                              	push esi
0x66d6:     53                              	push ebx
0x66d7:     83 ec 50                        	sub esp, 0x50
0x66da:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x66dd:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x66e0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x66e3:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x66e6:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x66e9:     89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x66ec:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x66f2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x66f5:     31 c0                           	xor eax, eax
0x66f7:     c6 45 f1 01                     	mov byte ptr [ebp - 0xf], 1
0x66fb:     c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x66ff:     c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x6703:     c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x670a:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x670d:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x6710:     8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x6713:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x6716:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x6719:     89 04 24                        	mov dword ptr [esp], eax
0x671c:     e8 5c 98 00 00                  	call 0xff7d <function_ff7d>
0x6721:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0x6724:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6728:     89 14 24                        	mov dword ptr [esp], edx
0x672b:     e8 7a 98 00 00                  	call 0xffaa <function_ffaa>
0x6730:     83 ec 04                        	sub esp, 4
0x6733:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x6736:     89 04 24                        	mov dword ptr [esp], eax
0x6739:     e8 b3 98 00 00                  	call 0xfff1 <function_fff1>
0x673e:     89 f2                           	mov edx, esi
0x6740:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x6744:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x6747:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x674b:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x674e:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6752:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6756:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x6759:     89 04 24                        	mov dword ptr [esp], eax
0x675c:     e8 b4 9f 00 00                  	call 0x10715 <function_10715>
0x6761:     01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x6764:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x6767:     83 c0 04                        	add eax, 4
0x676a:     89 04 24                        	mov dword ptr [esp], eax
0x676d:     e8 db 93 00 00                  	call 0xfb4d <function_fb4d>
0x6772:     8d 55 e8                        	lea edx, [ebp - 0x18]
0x6775:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6779:     89 14 24                        	mov dword ptr [esp], edx
0x677c:     e8 f9 93 00 00                  	call 0xfb7a <function_fb7a>
0x6781:     83 ec 04                        	sub esp, 4
0x6784:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x6787:     89 04 24                        	mov dword ptr [esp], eax
0x678a:     e8 32 94 00 00                  	call 0xfbc1 <function_fbc1>
0x678f:     88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x6793:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x6796:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x679a:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x679d:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x67a1:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x67a5:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x67a8:     89 04 24                        	mov dword ptr [esp], eax
0x67ab:     e8 c1 9f 00 00                  	call 0x10771 <function_10771>
0x67b0:     01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x67b3:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x67b6:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x67b9:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x67c0:     74 05                           	je 0x67c7 <function_67c7>
; data inside code section at 0x67c2 -- 0x67c3
0x67c2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x67c3 -- 0x67c4
; data inside code section at 0x67c4 -- 0x67c7
0x67c4:     ff ff ff                                           |...             |
; function: function_67c7 at 0x67c7 -- 0x67ce
0x67c7:     8d 65 f8                        	lea esp, [ebp - 8]
0x67ca:     5b                              	pop ebx
0x67cb:     5e                              	pop esi
0x67cc:     5d                              	pop ebp
0x67cd:     c3                              	ret 
; section: .text._ZNK10CDiskTxPos16GetSerializeSizeEii
; function: _ZNK10CDiskTxPos16GetSerializeSizeEii at 0x67ce -- 0x6896
0x67ce:     55                              	push ebp
0x67cf:     89 e5                           	mov ebp, esp
0x67d1:     53                              	push ebx
0x67d2:     83 ec 54                        	sub esp, 0x54
0x67d5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x67d8:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x67db:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x67de:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x67e1:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x67e4:     89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x67e7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x67ed:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x67f0:     31 c0                           	xor eax, eax
0x67f2:     c6 45 f1 01                     	mov byte ptr [ebp - 0xf], 1
0x67f6:     c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x67fa:     c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x67fe:     c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x6805:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x6808:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x680b:     8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x680e:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6811:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x6814:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x6818:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x681b:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x681f:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x6822:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6826:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x682a:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x682d:     89 04 24                        	mov dword ptr [esp], eax
0x6830:     e8 94 a0 00 00                  	call 0x108c9 <function_108c9>
0x6835:     01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x6838:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x683b:     83 c0 08                        	add eax, 8
0x683e:     89 04 24                        	mov dword ptr [esp], eax
0x6841:     e8 03 94 00 00                  	call 0xfc49 <function_fc49>
0x6846:     8d 55 e8                        	lea edx, [ebp - 0x18]
0x6849:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x684d:     89 14 24                        	mov dword ptr [esp], edx
0x6850:     e8 21 94 00 00                  	call 0xfc76 <function_fc76>
0x6855:     83 ec 04                        	sub esp, 4
0x6858:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x685b:     89 04 24                        	mov dword ptr [esp], eax
0x685e:     e8 5a 94 00 00                  	call 0xfcbd <function_fcbd>
0x6863:     88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x6867:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x686a:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x686e:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x6871:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6875:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6879:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x687c:     89 04 24                        	mov dword ptr [esp], eax
0x687f:     e8 e9 9f 00 00                  	call 0x1086d <function_1086d>
0x6884:     01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x6887:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x688a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x688d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6894:     74 05                           	je 0x689b <function_689b>
; data inside code section at 0x6896 -- 0x6897
0x6896:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6897 -- 0x6898
; data inside code section at 0x6898 -- 0x689b
0x6898:     ff ff ff                                           |...             |
; function: function_689b at 0x689b -- 0x68a0
0x689b:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x689e:     c9                              	leave 
0x689f:     c3                              	ret 
; section: .text._ZNK14CBlockFileInfo16GetSerializeSizeEii
; function: _ZNK14CBlockFileInfo16GetSerializeSizeEii at 0x68a0 -- 0x6b3f
0x68a0:     55                              	push ebp
0x68a1:     89 e5                           	mov ebp, esp
0x68a3:     57                              	push edi
0x68a4:     56                              	push esi
0x68a5:     53                              	push ebx
0x68a6:     83 ec 6c                        	sub esp, 0x6c
0x68a9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x68ac:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x68af:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x68b2:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x68b5:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x68b8:     89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x68bb:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x68c1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x68c4:     31 c0                           	xor eax, eax
0x68c6:     c6 45 e1 01                     	mov byte ptr [ebp - 0x1f], 1
0x68ca:     c6 45 e2 00                     	mov byte ptr [ebp - 0x1e], 0
0x68ce:     c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x68d2:     c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x68d9:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x68dc:     89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x68df:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x68e2:     89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x68e5:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x68e8:     89 04 24                        	mov dword ptr [esp], eax
0x68eb:     e8 2b 94 00 00                  	call 0xfd1b <function_fd1b>
0x68f0:     8d 55 c0                        	lea edx, [ebp - 0x40]
0x68f3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x68f7:     89 14 24                        	mov dword ptr [esp], edx
0x68fa:     e8 49 94 00 00                  	call 0xfd48 <function_fd48>
0x68ff:     83 ec 04                        	sub esp, 4
0x6902:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x6905:     89 04 24                        	mov dword ptr [esp], eax
0x6908:     e8 82 94 00 00                  	call 0xfd8f <function_fd8f>
0x690d:     89 c2                           	mov edx, eax
0x690f:     88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x6913:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x6916:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x691a:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x691d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x6921:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x6925:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x6928:     89 04 24                        	mov dword ptr [esp], eax
0x692b:     e8 0f a0 00 00                  	call 0x1093f <function_1093f>
0x6930:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x6933:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x6936:     83 c0 04                        	add eax, 4
0x6939:     89 04 24                        	mov dword ptr [esp], eax
0x693c:     e8 da 93 00 00                  	call 0xfd1b <function_fd1b>
0x6941:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x6944:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6948:     89 14 24                        	mov dword ptr [esp], edx
0x694b:     e8 f8 93 00 00                  	call 0xfd48 <function_fd48>
0x6950:     83 ec 04                        	sub esp, 4
0x6953:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x6956:     89 04 24                        	mov dword ptr [esp], eax
0x6959:     e8 31 94 00 00                  	call 0xfd8f <function_fd8f>
0x695e:     89 c2                           	mov edx, eax
0x6960:     89 f0                           	mov eax, esi
0x6962:     88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x6966:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x6969:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x696d:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x6970:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x6974:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x6978:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x697b:     89 04 24                        	mov dword ptr [esp], eax
0x697e:     e8 bc 9f 00 00                  	call 0x1093f <function_1093f>
0x6983:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x6986:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x6989:     83 c0 08                        	add eax, 8
0x698c:     89 04 24                        	mov dword ptr [esp], eax
0x698f:     e8 87 93 00 00                  	call 0xfd1b <function_fd1b>
0x6994:     8d 55 c8                        	lea edx, [ebp - 0x38]
0x6997:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x699b:     89 14 24                        	mov dword ptr [esp], edx
0x699e:     e8 a5 93 00 00                  	call 0xfd48 <function_fd48>
0x69a3:     83 ec 04                        	sub esp, 4
0x69a6:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x69a9:     89 04 24                        	mov dword ptr [esp], eax
0x69ac:     e8 de 93 00 00                  	call 0xfd8f <function_fd8f>
0x69b1:     0f b6 55 a8                     	movzx edx, byte ptr [ebp - 0x58]
0x69b5:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x69b9:     8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x69bc:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x69c0:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x69c3:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x69c7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x69cb:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x69ce:     89 04 24                        	mov dword ptr [esp], eax
0x69d1:     e8 69 9f 00 00                  	call 0x1093f <function_1093f>
0x69d6:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x69d9:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x69dc:     83 c0 0c                        	add eax, 0xc
0x69df:     89 04 24                        	mov dword ptr [esp], eax
0x69e2:     e8 34 93 00 00                  	call 0xfd1b <function_fd1b>
0x69e7:     8d 55 cc                        	lea edx, [ebp - 0x34]
0x69ea:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x69ee:     89 14 24                        	mov dword ptr [esp], edx
0x69f1:     e8 52 93 00 00                  	call 0xfd48 <function_fd48>
0x69f6:     83 ec 04                        	sub esp, 4
0x69f9:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x69fc:     89 04 24                        	mov dword ptr [esp], eax
0x69ff:     e8 8b 93 00 00                  	call 0xfd8f <function_fd8f>
0x6a04:     0f b6 55 a9                     	movzx edx, byte ptr [ebp - 0x57]
0x6a08:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x6a0c:     8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x6a0f:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x6a13:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x6a16:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6a1a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6a1e:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x6a21:     89 04 24                        	mov dword ptr [esp], eax
0x6a24:     e8 16 9f 00 00                  	call 0x1093f <function_1093f>
0x6a29:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x6a2c:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x6a2f:     83 c0 10                        	add eax, 0x10
0x6a32:     89 04 24                        	mov dword ptr [esp], eax
0x6a35:     e8 e1 92 00 00                  	call 0xfd1b <function_fd1b>
0x6a3a:     8d 55 d0                        	lea edx, [ebp - 0x30]
0x6a3d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6a41:     89 14 24                        	mov dword ptr [esp], edx
0x6a44:     e8 ff 92 00 00                  	call 0xfd48 <function_fd48>
0x6a49:     83 ec 04                        	sub esp, 4
0x6a4c:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x6a4f:     89 04 24                        	mov dword ptr [esp], eax
0x6a52:     e8 38 93 00 00                  	call 0xfd8f <function_fd8f>
0x6a57:     0f b6 55 aa                     	movzx edx, byte ptr [ebp - 0x56]
0x6a5b:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x6a5f:     8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x6a62:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x6a66:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x6a69:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6a6d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6a71:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x6a74:     89 04 24                        	mov dword ptr [esp], eax
0x6a77:     e8 c3 9e 00 00                  	call 0x1093f <function_1093f>
0x6a7c:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x6a7f:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x6a82:     83 c0 14                        	add eax, 0x14
0x6a85:     89 04 24                        	mov dword ptr [esp], eax
0x6a88:     e8 e9 94 00 00                  	call 0xff76 <function_ff76>
0x6a8d:     8d 55 d4                        	lea edx, [ebp - 0x2c]
0x6a90:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6a94:     89 14 24                        	mov dword ptr [esp], edx
0x6a97:     e8 07 95 00 00                  	call 0xffa3 <function_ffa3>
0x6a9c:     83 ec 04                        	sub esp, 4
0x6a9f:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x6aa2:     89 04 24                        	mov dword ptr [esp], eax
0x6aa5:     e8 40 95 00 00                  	call 0xffea <function_ffea>
0x6aaa:     0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x6aae:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x6ab2:     8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x6ab5:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x6ab9:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x6abc:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6ac0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6ac4:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x6ac7:     89 04 24                        	mov dword ptr [esp], eax
0x6aca:     e8 48 95 00 00                  	call 0x10017 <__stack_chk_fail>
0x6acf:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x6ad2:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x6ad5:     83 c0 1c                        	add eax, 0x1c
0x6ad8:     89 04 24                        	mov dword ptr [esp], eax
0x6adb:     e8 96 94 00 00                  	call 0xff76 <function_ff76>
0x6ae0:     8d 55 d8                        	lea edx, [ebp - 0x28]
0x6ae3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6ae7:     89 14 24                        	mov dword ptr [esp], edx
0x6aea:     e8 b4 94 00 00                  	call 0xffa3 <function_ffa3>
0x6aef:     83 ec 04                        	sub esp, 4
0x6af2:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x6af5:     89 04 24                        	mov dword ptr [esp], eax
0x6af8:     e8 ed 94 00 00                  	call 0xffea <function_ffea>
0x6afd:     89 fa                           	mov edx, edi
0x6aff:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x6b03:     8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x6b06:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x6b0a:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x6b0d:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x6b11:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6b15:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x6b18:     89 04 24                        	mov dword ptr [esp], eax
0x6b1b:     e8 f7 94 00 00                  	call 0x10017 <__stack_chk_fail>
0x6b20:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x6b23:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x6b26:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x6b29:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6b30:     74 05                           	je 0x6b37 <_ZNK14CBlockFileInfo16GetSerializeSizeEii+0x297>
0x6b32:     e8 fc ff ff ff                  	call 0x6b33
0x6b37:     8d 65 f4                        	lea esp, [ebp - 0xc]
0x6b3a:     5b                              	pop ebx
0x6b3b:     5e                              	pop esi
0x6b3c:     5f                              	pop edi
0x6b3d:     5d                              	pop ebp
0x6b3e:     c3                              	ret 
; section: .text._ZN11CBlockIndexC2Ev
; function: _ZN11CBlockIndexC1Ev at 0x6b40 -- 0x6c3c
0x6b40:     55                              	push ebp
0x6b41:     89 e5                           	mov ebp, esp
0x6b43:     83 ec 38                        	sub esp, 0x38
0x6b46:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6b49:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6b4c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6b52:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6b55:     31 c0                           	xor eax, eax
0x6b57:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b5a:     83 c0 18                        	add eax, 0x18
0x6b5d:     89 04 24                        	mov dword ptr [esp], eax
0x6b60:     e8 bb 26 00 00                  	call 0x9220 <function_9220>
0x6b65:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b68:     83 c0 48                        	add eax, 0x48
0x6b6b:     89 04 24                        	mov dword ptr [esp], eax
0x6b6e:     e8 ad 26 00 00                  	call 0x9220 <function_9220>
0x6b73:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b76:     c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x6b7c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b7f:     c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x6b86:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b89:     c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x6b90:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b93:     c7 40 0c 00 00 00 00            	mov dword ptr [eax + 0xc], 0
0x6b9a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6b9d:     c7 40 10 00 00 00 00            	mov dword ptr [eax + 0x10], 0
0x6ba4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6ba7:     c7 40 14 00 00 00 00            	mov dword ptr [eax + 0x14], 0
0x6bae:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6bb1:     83 c0 18                        	add eax, 0x18
0x6bb4:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6bbc:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6bc4:     89 04 24                        	mov dword ptr [esp], eax
0x6bc7:     e8 2e 27 00 00                  	call 0x92fa <function_92fa>
0x6bcc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6bcf:     c7 40 38 00 00 00 00            	mov dword ptr [eax + 0x38], 0
0x6bd6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6bd9:     c7 40 3c 00 00 00 00            	mov dword ptr [eax + 0x3c], 0
0x6be0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6be3:     c7 40 40 00 00 00 00            	mov dword ptr [eax + 0x40], 0
0x6bea:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6bed:     c7 40 44 00 00 00 00            	mov dword ptr [eax + 0x44], 0
0x6bf4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6bf7:     83 c0 48                        	add eax, 0x48
0x6bfa:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6c02:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6c0a:     89 04 24                        	mov dword ptr [esp], eax
0x6c0d:     e8 e8 26 00 00                  	call 0x92fa <function_92fa>
0x6c12:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6c15:     c7 40 68 00 00 00 00            	mov dword ptr [eax + 0x68], 0
0x6c1c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6c1f:     c7 40 6c 00 00 00 00            	mov dword ptr [eax + 0x6c], 0
0x6c26:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6c29:     c7 40 70 00 00 00 00            	mov dword ptr [eax + 0x70], 0
0x6c30:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x6c33:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x6c3a:     74 05                           	je 0x6c41 <function_6c41>
; data inside code section at 0x6c3c -- 0x6c3d
0x6c3c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6c3d -- 0x6c3e
; data inside code section at 0x6c3e -- 0x6c41
0x6c3e:     ff ff ff                                           |...             |
; function: function_6c41 at 0x6c41 -- 0x6c43
0x6c41:     c9                              	leave 
0x6c42:     c3                              	ret 
; section: .text._ZNK11CBlockIndex7GetAlgoEv
; function: _ZNK11CBlockIndex7GetAlgoEv at 0x6c44 -- 0x6c75
0x6c44:     55                              	push ebp
0x6c45:     89 e5                           	mov ebp, esp
0x6c47:     83 ec 38                        	sub esp, 0x38
0x6c4a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6c4d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6c50:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6c56:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6c59:     31 c0                           	xor eax, eax
0x6c5b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6c5e:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0x6c61:     89 04 24                        	mov dword ptr [esp], eax
0x6c64:     e8 55 5c 00 00                  	call 0xc8be
0x6c69:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x6c6c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6c73:     74 05                           	je 0x6c7a <function_6c7a>
; data inside code section at 0x6c75 -- 0x6c76
0x6c75:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6c76 -- 0x6c77
; data inside code section at 0x6c77 -- 0x6c7a
0x6c77:     ff ff ff                                           |...             |
; function: function_6c7a at 0x6c7a -- 0x6c7c
0x6c7a:     c9                              	leave 
0x6c7b:     c3                              	ret 
; section: .text._ZNK11CBlockIndex12GetBlockHashEv
; function: _ZNK11CBlockIndex12GetBlockHashEv at 0x6c7c -- 0x6cde
0x6c7c:     55                              	push ebp
0x6c7d:     89 e5                           	mov ebp, esp
0x6c7f:     83 ec 28                        	sub esp, 0x28
0x6c82:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6c85:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6c88:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x6c8b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x6c8e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6c94:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6c97:     31 c0                           	xor eax, eax
0x6c99:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x6c9c:     8b 10                           	mov edx, dword ptr [eax]
0x6c9e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6ca1:     8b 0a                           	mov ecx, dword ptr [edx]
0x6ca3:     89 08                           	mov dword ptr [eax], ecx
0x6ca5:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x6ca8:     89 48 04                        	mov dword ptr [eax + 4], ecx
0x6cab:     8b 4a 08                        	mov ecx, dword ptr [edx + 8]
0x6cae:     89 48 08                        	mov dword ptr [eax + 8], ecx
0x6cb1:     8b 4a 0c                        	mov ecx, dword ptr [edx + 0xc]
0x6cb4:     89 48 0c                        	mov dword ptr [eax + 0xc], ecx
0x6cb7:     8b 4a 10                        	mov ecx, dword ptr [edx + 0x10]
0x6cba:     89 48 10                        	mov dword ptr [eax + 0x10], ecx
0x6cbd:     8b 4a 14                        	mov ecx, dword ptr [edx + 0x14]
0x6cc0:     89 48 14                        	mov dword ptr [eax + 0x14], ecx
0x6cc3:     8b 4a 18                        	mov ecx, dword ptr [edx + 0x18]
0x6cc6:     89 48 18                        	mov dword ptr [eax + 0x18], ecx
0x6cc9:     8b 52 1c                        	mov edx, dword ptr [edx + 0x1c]
0x6ccc:     89 50 1c                        	mov dword ptr [eax + 0x1c], edx
0x6ccf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6cd2:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x6cd5:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6cdc:     74 05                           	je 0x6ce3 <function_6ce3>
; data inside code section at 0x6cde -- 0x6cdf
0x6cde:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6cdf -- 0x6ce0
; data inside code section at 0x6ce0 -- 0x6ce3
0x6ce0:     ff ff ff                                           |...             |
; function: function_6ce3 at 0x6ce3 -- 0x6ce7
0x6ce3:     c9                              	leave 
0x6ce4:     c2 04 00                        	ret 4
; section: .text._ZNK11CBlockIndex18GetNextInMainChainEv
; function: _ZNK11CBlockIndex18GetNextInMainChainEv at 0x6ce8 -- 0x6d09
0x6ce8:     55                              	push ebp
0x6ce9:     89 e5                           	mov ebp, esp
0x6ceb:     53                              	push ebx
0x6cec:     83 ec 34                        	sub esp, 0x34
0x6cef:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6cf2:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6cf5:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6cfb:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6cfe:     31 c0                           	xor eax, eax
0x6d00:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6d03:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0x6d06:     8d 58 01                        	lea ebx, [eax + 1]
; data inside code section at 0x6d09 -- 0x6d0c
0x6d09:     c7 04 24                                           |..$             |
; dynamically linked function: vBlockIndexByHeight at 0x6d0c -- 0x6d26
; data inside code section at 0x6d26 -- 0x6d29
0x6d26:     c7 04 24                                           |..$             |
; dynamically linked function: vBlockIndexByHeight at 0x6d29 -- 0x6d36
; function: function_6d36 at 0x6d36 -- 0x6d47
0x6d36:     b8 00 00 00 00                  	mov eax, 0
0x6d3b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x6d3e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6d45:     74 05                           	je 0x6d4c <function_6d4c>
; data inside code section at 0x6d47 -- 0x6d48
0x6d47:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6d48 -- 0x6d49
; data inside code section at 0x6d49 -- 0x6d4c
0x6d49:     ff ff ff                                           |...             |
; function: function_6d4c at 0x6d4c -- 0x6d52
0x6d4c:     83 c4 34                        	add esp, 0x34
0x6d4f:     5b                              	pop ebx
0x6d50:     5d                              	pop ebp
0x6d51:     c3                              	ret 
; section: .text._ZNK11CBlockIndex10CheckIndexEv
; function: _ZNK11CBlockIndex10CheckIndexEv at 0x6d52 -- 0x6ddb
0x6d52:     55                              	push ebp
0x6d53:     89 e5                           	mov ebp, esp
0x6d55:     53                              	push ebx
0x6d56:     83 ec 74                        	sub esp, 0x74
0x6d59:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6d5c:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x6d5f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6d65:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6d68:     31 c0                           	xor eax, eax
0x6d6a:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x6d6d:     89 04 24                        	mov dword ptr [esp], eax
0x6d70:     e8 21 6c 00 00                  	call 0xd996 <function_d996>
0x6d75:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x6d78:     83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x6d7c:     75 64                           	jne 0x6de2 <function_6de2>
0x6d7e:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x6d81:     8b 58 6c                        	mov ebx, dword ptr [eax + 0x6c]
0x6d84:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x6d87:     8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x6d8a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x6d8e:     89 04 24                        	mov dword ptr [esp], eax
0x6d91:     e8 38 6c 00 00                  	call 0xd9ce <function_d9ce>
0x6d96:     83 ec 04                        	sub esp, 4
0x6d99:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x6d9c:     89 44 24 24                     	mov dword ptr [esp + 0x24], eax
0x6da0:     89 5c 24 20                     	mov dword ptr [esp + 0x20], ebx
0x6da4:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x6da7:     89 04 24                        	mov dword ptr [esp], eax
0x6daa:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x6dad:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6db1:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x6db4:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x6db8:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x6dbb:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x6dbf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6dc2:     89 44 24 10                     	mov dword ptr [esp + 0x10], eax
0x6dc6:     8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x6dc9:     89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x6dcd:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x6dd0:     89 44 24 18                     	mov dword ptr [esp + 0x18], eax
0x6dd4:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x6dd7:     89 44 24 1c                     	mov dword ptr [esp + 0x1c], eax
; data inside code section at 0x6ddb -- 0x6ddc
0x6ddb:     e8                                                 |.               |
; dynamically linked function: _Z16CheckProofOfWork7uint256ji at 0x6ddc -- 0x6ddd
; data inside code section at 0x6ddd -- 0x6de0
0x6ddd:     ff ff ff                                           |...             |
; function: function_6de0 at 0x6de0 -- 0x6de2
0x6de0:     eb 05                           	jmp 0x6de7
; function: function_6de2 at 0x6de2 -- 0x6dfd
0x6de2:     b8 01 00 00 00                  	mov eax, 1
0x6de7:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x6dea:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x6df1:     74 05                           	je 0x6df8 <function_6de2+0x16>
0x6df3:     e8 fc ff ff ff                  	call 0x6df4
0x6df8:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x6dfb:     c9                              	leave 
0x6dfc:     c3                              	ret 
; section: .text._ZNK11CBlockIndex8ToStringEv
; function: _ZNK11CBlockIndex8ToStringEv at 0x6dfe -- 0x6e4e
0x6dfe:     55                              	push ebp
0x6dff:     89 e5                           	mov ebp, esp
0x6e01:     57                              	push edi
0x6e02:     56                              	push esi
0x6e03:     53                              	push ebx
0x6e04:     83 ec 6c                        	sub esp, 0x6c
0x6e07:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6e0a:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x6e0d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x6e10:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x6e13:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6e19:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6e1c:     31 c0                           	xor eax, eax
0x6e1e:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x6e21:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x6e24:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x6e28:     89 04 24                        	mov dword ptr [esp], eax
0x6e2b:     e8 4a 6c 00 00                  	call 0xda7a <function_da7a>
0x6e30:     83 ec 04                        	sub esp, 4
0x6e33:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x6e36:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x6e39:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x6e3d:     89 04 24                        	mov dword ptr [esp], eax
0x6e40:     e8 cb a2 00 00                  	call 0x11110 <function_11110>
0x6e45:     83 ec 04                        	sub esp, 4
0x6e48:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x6e4b:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x6e4e -- 0x6e4f
0x6e4e:     e8                                                 |.               |
; dynamically linked function: _ZNKSs5c_strEv at 0x6e4f -- 0x6e50
; data inside code section at 0x6e50 -- 0x6e74
0x6e50:     ff ff ff 89 c7 8b 45 b0  8d 50 48 8d 45 bc 89 54   |......E..PH.E..T|
0x6e60:     24 04 89 04 24 e8 a6 a2  00 00 83 ec 04 8d 45 bc   |$...$.........E.|
0x6e70:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNKSs5c_strEv at 0x6e74 -- 0x6e75
; data inside code section at 0x6e75 -- 0x6ebe
0x6e75:     ff ff ff 89 c6 8b 45 b0  8b 58 08 8b 45 b0 89 04   |......E..X..E...|
0x6e85:     24 e8 5b 6c 00 00 89 c1  8b 45 b0 8b 50 04 8b 45   |$.[l.....E..P..E|
0x6e95:     b4 89 7c 24 1c 89 74 24  18 89 5c 24 14 89 4c 24   |..|$..t$..\$..L$|
0x6ea5:     10 89 54 24 0c c7 44 24  08 00 00 00 00 c7 44 24   |..T$..D$......D$|
0x6eb5:     04 b0 3d 00 00 89 04 24  e8                        |..=....$.       |
; dynamically linked function: _Z14real_strprintfPKciz at 0x6ebe -- 0x6ebf
; data inside code section at 0x6ebf -- 0x6ed7
0x6ebf:     ff ff ff 83 ec 04 8d 45  bc 89 04 24 e8 fc ff ff   |.......E...$....|
0x6ecf:     ff 8d 45 c0 89 04 24 e8                            |..E...$.        |
; dynamically linked function: _ZNSsD1Ev at 0x6ed7 -- 0x6ed8
; data inside code section at 0x6ed8 -- 0x6eda
0x6ed8:     ff ff                                              |..              |
; function: function_6eda at 0x6eda -- 0x6eec
0x6eda:     ff 8b 45 b4 8b 55               	dec dword ptr [ebx + 0x558bb445]
0x6ee0:     e4 65                           	in al, 0x65
0x6ee2:     33 15 14 00 00 00               	xor edx, dword ptr [0x14]
0x6ee8:     74 2d                           	je 0x6f17 <function_6f17>
0x6eea:     eb 26                           	jmp 0x6f12 <function_6f12>
; data inside code section at 0x6eec -- 0x6eed
0x6eec:     89                                                 |.               |
; function: function_6eed at 0x6eed -- 0x6eee
0x6eed:     c3                              	ret 
; data inside code section at 0x6eee -- 0x6ef5
0x6eee:     8d 45 bc 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSsD1Ev at 0x6ef5 -- 0x6ef6
; data inside code section at 0x6ef6 -- 0x6ef9
0x6ef6:     ff ff ff                                           |...             |
; function: function_6ef9 at 0x6ef9 -- 0x6efb
0x6ef9:     eb 02                           	jmp 0x6efd <function_6efd>
; function: function_6efb at 0x6efb -- 0x6efd
0x6efb:     89 c3                           	mov ebx, eax
; function: function_6efd at 0x6efd -- 0x6f0d
0x6efd:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x6f00:     89 04 24                        	mov dword ptr [esp], eax
0x6f03:     e8 fc ff ff ff                  	call 0x6f04
0x6f08:     89 d8                           	mov eax, ebx
0x6f0a:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x6f0d -- 0x6f0e
0x6f0d:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x6f0e -- 0x6f0f
; data inside code section at 0x6f0f -- 0x6f12
0x6f0f:     ff ff ff                                           |...             |
; function: function_6f12 at 0x6f12 -- 0x6f13
; dynamically linked function: __stack_chk_fail at 0x6f13 -- 0x6f14
; data inside code section at 0x6f14 -- 0x6f17
0x6f14:     ff ff ff                                           |...             |
; function: function_6f17 at 0x6f17 -- 0x6f21
0x6f17:     8d 65 f4                        	lea esp, [ebp - 0xc]
0x6f1a:     5b                              	pop ebx
0x6f1b:     5e                              	pop esi
0x6f1c:     5f                              	pop edi
0x6f1d:     5d                              	pop ebp
0x6f1e:     c2 04 00                        	ret 4
; section: .text._ZN15CDiskBlockIndexC2Ev
; function: _ZN15CDiskBlockIndexC1Ev at 0x6f22 -- 0x6f7c
0x6f22:     55                              	push ebp
0x6f23:     89 e5                           	mov ebp, esp
0x6f25:     83 ec 38                        	sub esp, 0x38
0x6f28:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6f2b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6f2e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6f34:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x6f37:     31 c0                           	xor eax, eax
0x6f39:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6f3c:     89 04 24                        	mov dword ptr [esp], eax
0x6f3f:     e8 1e 6b 00 00                  	call 0xda62 <function_da62>
0x6f44:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6f47:     83 c0 74                        	add eax, 0x74
0x6f4a:     89 04 24                        	mov dword ptr [esp], eax
0x6f4d:     e8 b0 26 00 00                  	call 0x9602 <_Unwind_Resume>
0x6f52:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x6f55:     83 c0 74                        	add eax, 0x74
0x6f58:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x6f60:     c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x6f68:     89 04 24                        	mov dword ptr [esp], eax
0x6f6b:     e8 6c 27 00 00                  	call 0x96dc <function_96dc>
0x6f70:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x6f73:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x6f7a:     74 05                           	je 0x6f81 <function_6f81>
; data inside code section at 0x6f7c -- 0x6f7d
0x6f7c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6f7d -- 0x6f7e
; data inside code section at 0x6f7e -- 0x6f81
0x6f7e:     ff ff ff                                           |...             |
; function: function_6f81 at 0x6f81 -- 0x6f83
0x6f81:     c9                              	leave 
0x6f82:     c3                              	ret 
; section: .text._ZNK15CDiskBlockIndex16GetSerializeSizeEii
; function: _ZNK15CDiskBlockIndex16GetSerializeSizeEii at 0x6f84 -- 0x6fb6
0x6f84:     55                              	push ebp
0x6f85:     89 e5                           	mov ebp, esp
0x6f87:     57                              	push edi
0x6f88:     56                              	push esi
0x6f89:     53                              	push ebx
0x6f8a:     83 ec 7c                        	sub esp, 0x7c
0x6f8d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x6f90:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x6f93:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x6f96:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x6f99:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x6f9c:     89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x6f9f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x6fa5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x6fa8:     31 c0                           	xor eax, eax
0x6faa:     c6 45 e1 01                     	mov byte ptr [ebp - 0x1f], 1
0x6fae:     c6 45 e2 00                     	mov byte ptr [ebp - 0x1e], 0
0x6fb2:     c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
; function: function_6fb6 at 0x6fb6 -- 0x7369
0x6fb6:     c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x6fbd:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x6fc0:     89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x6fc3:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x6fc6:     89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x6fc9:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x6fcc:     83 e0 04                        	and eax, 4
0x6fcf:     85 c0                           	test eax, eax
0x6fd1:     75 50                           	jne 0x7023 <function_6fb6+0x6d>
0x6fd3:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x6fd6:     8d 45 ac                        	lea eax, [ebp - 0x54]
0x6fd9:     89 04 24                        	mov dword ptr [esp], eax
0x6fdc:     e8 4e 98 00 00                  	call 0x1082f <function_1082f>
0x6fe1:     8d 55 c0                        	lea edx, [ebp - 0x40]
0x6fe4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x6fe8:     89 14 24                        	mov dword ptr [esp], edx
0x6feb:     e8 6c 98 00 00                  	call 0x1085c <function_1085c>
0x6ff0:     83 ec 04                        	sub esp, 4
0x6ff3:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x6ff6:     89 04 24                        	mov dword ptr [esp], eax
0x6ff9:     e8 a5 98 00 00                  	call 0x108a3
0x6ffe:     89 c2                           	mov edx, eax
0x7000:     89 f1                           	mov ecx, esi
0x7002:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x7006:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x700a:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x700d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7011:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7015:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x7018:     89 04 24                        	mov dword ptr [esp], eax
0x701b:     e8 a7 9f 00 00                  	call 0x10fc7 <function_10fc7>
0x7020:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x7023:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x7026:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x7029:     83 c0 08                        	add eax, 8
0x702c:     89 04 24                        	mov dword ptr [esp], eax
0x702f:     e8 fb 97 00 00                  	call 0x1082f <function_1082f>
0x7034:     8d 55 c4                        	lea edx, [ebp - 0x3c]
0x7037:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x703b:     89 14 24                        	mov dword ptr [esp], edx
0x703e:     e8 19 98 00 00                  	call 0x1085c <function_1085c>
0x7043:     83 ec 04                        	sub esp, 4
0x7046:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x7049:     89 04 24                        	mov dword ptr [esp], eax
0x704c:     e8 52 98 00 00                  	call 0x108a3
0x7051:     89 c2                           	mov edx, eax
0x7053:     89 f8                           	mov eax, edi
0x7055:     88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x7059:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x705d:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x7060:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7064:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7068:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x706b:     89 04 24                        	mov dword ptr [esp], eax
0x706e:     e8 54 9f 00 00                  	call 0x10fc7 <function_10fc7>
0x7073:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x7076:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x7079:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x707c:     83 c0 40                        	add eax, 0x40
0x707f:     89 04 24                        	mov dword ptr [esp], eax
0x7082:     e8 78 93 00 00                  	call 0x103ff <function_103ff>
0x7087:     8d 55 c8                        	lea edx, [ebp - 0x38]
0x708a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x708e:     89 14 24                        	mov dword ptr [esp], edx
0x7091:     e8 96 93 00 00                  	call 0x1042c <function_1042c>
0x7096:     83 ec 04                        	sub esp, 4
0x7099:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x709c:     89 04 24                        	mov dword ptr [esp], eax
0x709f:     e8 cf 93 00 00                  	call 0x10473 <function_10473>
0x70a4:     89 c2                           	mov edx, eax
0x70a6:     0f b6 4d a1                     	movzx ecx, byte ptr [ebp - 0x5f]
0x70aa:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x70ae:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x70b2:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x70b5:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x70b9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x70bd:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x70c0:     89 04 24                        	mov dword ptr [esp], eax
0x70c3:     e8 5b 9f 00 00                  	call 0x11023 <function_11023>
0x70c8:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x70cb:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x70ce:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x70d1:     83 c0 38                        	add eax, 0x38
0x70d4:     89 04 24                        	mov dword ptr [esp], eax
0x70d7:     e8 23 93 00 00                  	call 0x103ff <function_103ff>
0x70dc:     8d 55 cc                        	lea edx, [ebp - 0x34]
0x70df:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x70e3:     89 14 24                        	mov dword ptr [esp], edx
0x70e6:     e8 41 93 00 00                  	call 0x1042c <function_1042c>
0x70eb:     83 ec 04                        	sub esp, 4
0x70ee:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x70f1:     89 04 24                        	mov dword ptr [esp], eax
0x70f4:     e8 7a 93 00 00                  	call 0x10473 <function_10473>
0x70f9:     89 c2                           	mov edx, eax
0x70fb:     0f b6 45 a2                     	movzx eax, byte ptr [ebp - 0x5e]
0x70ff:     88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x7103:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x7107:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x710a:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x710e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7112:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x7115:     89 04 24                        	mov dword ptr [esp], eax
0x7118:     e8 06 9f 00 00                  	call 0x11023 <function_11023>
0x711d:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x7120:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x7123:     8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x7126:     83 e0 18                        	and eax, 0x18
0x7129:     85 c0                           	test eax, eax
0x712b:     74 55                           	je 0x7182 <function_6fb6+0x1cc>
0x712d:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x7130:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x7133:     83 c0 0c                        	add eax, 0xc
0x7136:     89 04 24                        	mov dword ptr [esp], eax
0x7139:     e8 f1 96 00 00                  	call 0x1082f <function_1082f>
0x713e:     8d 55 d0                        	lea edx, [ebp - 0x30]
0x7141:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7145:     89 14 24                        	mov dword ptr [esp], edx
0x7148:     e8 0f 97 00 00                  	call 0x1085c <function_1085c>
0x714d:     83 ec 04                        	sub esp, 4
0x7150:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x7153:     89 04 24                        	mov dword ptr [esp], eax
0x7156:     e8 48 97 00 00                  	call 0x108a3
0x715b:     89 c2                           	mov edx, eax
0x715d:     0f b6 4d a3                     	movzx ecx, byte ptr [ebp - 0x5d]
0x7161:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x7165:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x7169:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x716c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7170:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7174:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x7177:     89 04 24                        	mov dword ptr [esp], eax
0x717a:     e8 48 9e 00 00                  	call 0x10fc7 <function_10fc7>
0x717f:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x7182:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x7185:     8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x7188:     83 e0 08                        	and eax, 8
0x718b:     85 c0                           	test eax, eax
0x718d:     74 55                           	je 0x71e4 <function_6fb6+0x22e>
0x718f:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x7192:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x7195:     83 c0 10                        	add eax, 0x10
0x7198:     89 04 24                        	mov dword ptr [esp], eax
0x719b:     e8 5f 92 00 00                  	call 0x103ff <function_103ff>
0x71a0:     8d 55 d4                        	lea edx, [ebp - 0x2c]
0x71a3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x71a7:     89 14 24                        	mov dword ptr [esp], edx
0x71aa:     e8 7d 92 00 00                  	call 0x1042c <function_1042c>
0x71af:     83 ec 04                        	sub esp, 4
0x71b2:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x71b5:     89 04 24                        	mov dword ptr [esp], eax
0x71b8:     e8 b6 92 00 00                  	call 0x10473 <function_10473>
0x71bd:     89 c2                           	mov edx, eax
0x71bf:     0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x71c3:     88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x71c7:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x71cb:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x71ce:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x71d2:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x71d6:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x71d9:     89 04 24                        	mov dword ptr [esp], eax
0x71dc:     e8 42 9e 00 00                  	call 0x11023 <function_11023>
0x71e1:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x71e4:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x71e7:     8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x71ea:     83 e0 10                        	and eax, 0x10
0x71ed:     85 c0                           	test eax, eax
0x71ef:     74 55                           	je 0x7246 <function_6fb6+0x290>
0x71f1:     8b 5d ac                        	mov ebx, dword ptr [ebp - 0x54]
0x71f4:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x71f7:     83 c0 14                        	add eax, 0x14
0x71fa:     89 04 24                        	mov dword ptr [esp], eax
0x71fd:     e8 fd 91 00 00                  	call 0x103ff <function_103ff>
0x7202:     8d 55 d8                        	lea edx, [ebp - 0x28]
0x7205:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7209:     89 14 24                        	mov dword ptr [esp], edx
0x720c:     e8 1b 92 00 00                  	call 0x1042c <function_1042c>
0x7211:     83 ec 04                        	sub esp, 4
0x7214:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x7217:     89 04 24                        	mov dword ptr [esp], eax
0x721a:     e8 54 92 00 00                  	call 0x10473 <function_10473>
0x721f:     89 c2                           	mov edx, eax
0x7221:     0f b6 4d a5                     	movzx ecx, byte ptr [ebp - 0x5b]
0x7225:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x7229:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x722d:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x7230:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7234:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7238:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x723b:     89 04 24                        	mov dword ptr [esp], eax
0x723e:     e8 e0 9d 00 00                  	call 0x11023 <function_11023>
0x7243:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x7246:     8b 4d ac                        	mov ecx, dword ptr [ebp - 0x54]
0x7249:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x724c:     8d 50 44                        	lea edx, [eax + 0x44]
0x724f:     0f b6 45 a6                     	movzx eax, byte ptr [ebp - 0x5a]
0x7253:     88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x7257:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x725b:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x725e:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7262:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7266:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x7269:     89 04 24                        	mov dword ptr [esp], eax
0x726c:     e8 24 93 00 00                  	call 0x10595 <function_10595>
0x7271:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x7274:     8b 4d ac                        	mov ecx, dword ptr [ebp - 0x54]
0x7277:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x727a:     8d 50 74                        	lea edx, [eax + 0x74]
0x727d:     0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x7281:     88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x7285:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x7289:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x728c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7290:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7294:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x7297:     89 04 24                        	mov dword ptr [esp], eax
0x729a:     e8 0b 9c 00 00                  	call 0x10eaa <function_10eaa>
0x729f:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x72a2:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x72a5:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x72a8:     83 c2 48                        	add edx, 0x48
0x72ab:     0f b6 4d a8                     	movzx ecx, byte ptr [ebp - 0x58]
0x72af:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x72b3:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x72b7:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x72ba:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x72be:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x72c2:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x72c5:     89 04 24                        	mov dword ptr [esp], eax
0x72c8:     e8 dd 9b 00 00                  	call 0x10eaa <function_10eaa>
0x72cd:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x72d0:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x72d3:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x72d6:     83 c2 68                        	add edx, 0x68
0x72d9:     0f b6 4d a9                     	movzx ecx, byte ptr [ebp - 0x57]
0x72dd:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x72e1:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x72e5:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x72e8:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x72ec:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x72f0:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x72f3:     89 04 24                        	mov dword ptr [esp], eax
0x72f6:     e8 42 7f 00 00                  	call 0xf23d
0x72fb:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x72fe:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x7301:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x7304:     83 c2 6c                        	add edx, 0x6c
0x7307:     0f b6 4d aa                     	movzx ecx, byte ptr [ebp - 0x56]
0x730b:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x730f:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x7313:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x7316:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x731a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x731e:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x7321:     89 04 24                        	mov dword ptr [esp], eax
0x7324:     e8 14 7f 00 00                  	call 0xf23d
0x7329:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x732c:     8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x732f:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x7332:     83 c2 70                        	add edx, 0x70
0x7335:     0f b6 4d ab                     	movzx ecx, byte ptr [ebp - 0x55]
0x7339:     88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x733d:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x7341:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x7344:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7348:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x734c:     8d 45 b8                        	lea eax, [ebp - 0x48]
0x734f:     89 04 24                        	mov dword ptr [esp], eax
0x7352:     e8 e6 7e 00 00                  	call 0xf23d
0x7357:     01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x735a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x735d:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x7360:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7367:     74 05                           	je 0x736e <function_736e>
; data inside code section at 0x7369 -- 0x736a
0x7369:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x736a -- 0x736b
; data inside code section at 0x736b -- 0x736e
0x736b:     ff ff ff                                           |...             |
; function: function_736e at 0x736e -- 0x7376
0x736e:     8d 65 f4                        	lea esp, [ebp - 0xc]
0x7371:     5b                              	pop ebx
0x7372:     5e                              	pop esi
0x7373:     5f                              	pop edi
0x7374:     5d                              	pop ebp
0x7375:     c3                              	ret 
; section: .text._ZNK15CDiskBlockIndex12GetBlockHashEv
; function: _ZNK15CDiskBlockIndex12GetBlockHashEv at 0x7376 -- 0x7447
0x7376:     55                              	push ebp
0x7377:     89 e5                           	mov ebp, esp
0x7379:     81 ec 88 00 00 00               	sub esp, 0x88
0x737f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7382:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x7385:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7388:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x738b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7391:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7394:     31 c0                           	xor eax, eax
0x7396:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0x7399:     89 04 24                        	mov dword ptr [esp], eax
0x739c:     e8 97 65 00 00                  	call 0xd938 <function_d938>
0x73a1:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x73a4:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0x73a7:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x73aa:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x73ad:     8b 50 74                        	mov edx, dword ptr [eax + 0x74]
0x73b0:     89 55 a8                        	mov dword ptr [ebp - 0x58], edx
0x73b3:     8b 50 78                        	mov edx, dword ptr [eax + 0x78]
0x73b6:     89 55 ac                        	mov dword ptr [ebp - 0x54], edx
0x73b9:     8b 50 7c                        	mov edx, dword ptr [eax + 0x7c]
0x73bc:     89 55 b0                        	mov dword ptr [ebp - 0x50], edx
0x73bf:     8b 90 80 00 00 00               	mov edx, dword ptr [eax + 0x80]
0x73c5:     89 55 b4                        	mov dword ptr [ebp - 0x4c], edx
0x73c8:     8b 90 84 00 00 00               	mov edx, dword ptr [eax + 0x84]
0x73ce:     89 55 b8                        	mov dword ptr [ebp - 0x48], edx
0x73d1:     8b 90 88 00 00 00               	mov edx, dword ptr [eax + 0x88]
0x73d7:     89 55 bc                        	mov dword ptr [ebp - 0x44], edx
0x73da:     8b 90 8c 00 00 00               	mov edx, dword ptr [eax + 0x8c]
0x73e0:     89 55 c0                        	mov dword ptr [ebp - 0x40], edx
0x73e3:     8b 80 90 00 00 00               	mov eax, dword ptr [eax + 0x90]
0x73e9:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x73ec:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x73ef:     8b 50 48                        	mov edx, dword ptr [eax + 0x48]
0x73f2:     89 55 c8                        	mov dword ptr [ebp - 0x38], edx
0x73f5:     8b 50 4c                        	mov edx, dword ptr [eax + 0x4c]
0x73f8:     89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x73fb:     8b 50 50                        	mov edx, dword ptr [eax + 0x50]
0x73fe:     89 55 d0                        	mov dword ptr [ebp - 0x30], edx
0x7401:     8b 50 54                        	mov edx, dword ptr [eax + 0x54]
0x7404:     89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x7407:     8b 50 58                        	mov edx, dword ptr [eax + 0x58]
0x740a:     89 55 d8                        	mov dword ptr [ebp - 0x28], edx
0x740d:     8b 50 5c                        	mov edx, dword ptr [eax + 0x5c]
0x7410:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0x7413:     8b 50 60                        	mov edx, dword ptr [eax + 0x60]
0x7416:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x7419:     8b 40 64                        	mov eax, dword ptr [eax + 0x64]
0x741c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x741f:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x7422:     8b 40 68                        	mov eax, dword ptr [eax + 0x68]
0x7425:     89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x7428:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x742b:     8b 40 6c                        	mov eax, dword ptr [eax + 0x6c]
0x742e:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x7431:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x7434:     8b 40 70                        	mov eax, dword ptr [eax + 0x70]
0x7437:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x743a:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x743d:     8d 55 a4                        	lea edx, [ebp - 0x5c]
0x7440:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7444:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x7447 -- 0x7448
0x7447:     e8                                                 |.               |
; dynamically linked function: _ZNK12CBlockHeader7GetHashEv at 0x7448 -- 0x7449
; data inside code section at 0x7449 -- 0x745f
0x7449:     ff ff ff 83 ec 04 8b 45  94 8b 55 f4 65 33 15 14   |.......E..U.e3..|
0x7459:     00 00 00 74 05 e8                                  |...t..          |
; dynamically linked function: __stack_chk_fail at 0x745f -- 0x7460
; data inside code section at 0x7460 -- 0x7462
0x7460:     ff ff                                              |..              |
; function: function_7462 at 0x7462 -- 0x7467
0x7462:     ff c9                           	dec ecx
0x7464:     c2 04 00                        	ret 4
; section: .text._ZN10CCoinsViewD2Ev
; function: _ZN10CCoinsViewD1Ev at 0x7468 -- 0x7482
0x7468:     55                              	push ebp
0x7469:     89 e5                           	mov ebp, esp
0x746b:     83 ec 38                        	sub esp, 0x38
0x746e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7471:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7474:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x747a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x747d:     31 c0                           	xor eax, eax
0x747f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x7482 -- 0x7484
0x7482:     c7 00                                              |..              |
; dynamically linked function: _ZTV10CCoinsView at 0x7484 -- 0x749a
; data inside code section at 0x749a -- 0x749b
0x749a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x749b -- 0x749c
; data inside code section at 0x749c -- 0x749f
0x749c:     ff ff ff                                           |...             |
; function: function_749f at 0x749f -- 0x74ab
0x749f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x74a2:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x74a9:     74 05                           	je 0x74b0 <function_74b0>
; data inside code section at 0x74ab -- 0x74ac
0x74ab:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x74ac -- 0x74ad
; data inside code section at 0x74ad -- 0x74b0
0x74ad:     ff ff ff                                           |...             |
; function: function_74b0 at 0x74b0 -- 0x74b2
0x74b0:     c9                              	leave 
0x74b1:     c3                              	ret 
; section: .text._ZN10CCoinsViewD0Ev
; function: _ZN10CCoinsViewD0Ev at 0x74b2 -- 0x74da
0x74b2:     55                              	push ebp
0x74b3:     89 e5                           	mov ebp, esp
0x74b5:     83 ec 38                        	sub esp, 0x38
0x74b8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x74bb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x74be:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x74c4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x74c7:     31 c0                           	xor eax, eax
0x74c9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x74cc:     89 04 24                        	mov dword ptr [esp], eax
0x74cf:     e8 46 74 00 00                  	call 0xe91a <function_e91a>
0x74d4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x74d7:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x74da -- 0x74db
0x74da:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x74db -- 0x74dc
; data inside code section at 0x74dc -- 0x74ec
0x74dc:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x74ec -- 0x74ed
; data inside code section at 0x74ed -- 0x74ef
0x74ed:     ff ff                                              |..              |
; function: function_74ef at 0x74ef -- 0x74f2
0x74ef:     ff c9                           	dec ecx
0x74f1:     c3                              	ret 
; section: .text._ZN7leveldb5SliceC2EPKcj
; function: _ZN7leveldb5SliceC1EPKcj at 0x74f2 -- 0x7532
0x74f2:     55                              	push ebp
0x74f3:     89 e5                           	mov ebp, esp
0x74f5:     83 ec 28                        	sub esp, 0x28
0x74f8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x74fb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x74fe:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7501:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7504:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x7507:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x750a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7510:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7513:     31 c0                           	xor eax, eax
0x7515:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7518:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x751b:     89 10                           	mov dword ptr [eax], edx
0x751d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7520:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x7523:     89 50 04                        	mov dword ptr [eax + 4], edx
0x7526:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7529:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7530:     74 05                           	je 0x7537 <function_7537>
; data inside code section at 0x7532 -- 0x7533
0x7532:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7533 -- 0x7534
; data inside code section at 0x7534 -- 0x7537
0x7534:     ff ff ff                                           |...             |
; function: function_7537 at 0x7537 -- 0x7539
0x7537:     c9                              	leave 
0x7538:     c3                              	ret 
; section: .text._ZN7leveldb5SliceC2ERKSs
; function: _ZN7leveldb5SliceC1ERKSs at 0x753a -- 0x755d
0x753a:     55                              	push ebp
0x753b:     89 e5                           	mov ebp, esp
0x753d:     83 ec 38                        	sub esp, 0x38
0x7540:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7543:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7546:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7549:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x754c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7552:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7555:     31 c0                           	xor eax, eax
0x7557:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x755a:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x755d -- 0x755e
0x755d:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4dataEv at 0x755e -- 0x755f
; data inside code section at 0x755f -- 0x7563
0x755f:     ff ff ff 89                                        |....            |
; function: function_7563 at 0x7563 -- 0x7566
0x7563:     c2 8b 45                        	ret 0x458b
; data inside code section at 0x7566 -- 0x7570
0x7566:     e4 89 10 8b 45 e0 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNKSs4sizeEv at 0x7570 -- 0x7571
; data inside code section at 0x7571 -- 0x7575
0x7571:     ff ff ff 89                                        |....            |
; function: function_7575 at 0x7575 -- 0x7578
0x7575:     c2 8b 45                        	ret 0x458b
; data inside code section at 0x7578 -- 0x7589
0x7578:     e4 89 50 04 8b 45 f4 65  33 05 14 00 00 00 74 05   |..P..E.e3.....t.|
0x7588:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7589 -- 0x758a
; data inside code section at 0x758a -- 0x758c
0x758a:     ff ff                                              |..              |
; function: function_758c at 0x758c -- 0x758f
0x758c:     ff c9                           	dec ecx
0x758e:     c3                              	ret 
; section: .text._ZNK7leveldb5Slice4dataEv
; function: _ZNK7leveldb5Slice4dataEv at 0x7590 -- 0x7599
0x7590:     55                              	push ebp
0x7591:     89 e5                           	mov ebp, esp
0x7593:     83 ec 28                        	sub esp, 0x28
0x7596:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x7599 -- 0x759b
0x7599:     89 45                                              |.E              |
; function: function_759b at 0x759b -- 0x75b8
0x759b:     e4 65                           	in al, 0x65
0x759d:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x75a2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x75a5:     31 c0                           	xor eax, eax
0x75a7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x75aa:     8b 00                           	mov eax, dword ptr [eax]
0x75ac:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x75af:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x75b6:     74 05                           	je 0x75bd <function_75bd>
; data inside code section at 0x75b8 -- 0x75b9
0x75b8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x75b9 -- 0x75ba
; data inside code section at 0x75ba -- 0x75bd
0x75ba:     ff ff ff                                           |...             |
; function: function_75bd at 0x75bd -- 0x75bf
0x75bd:     c9                              	leave 
0x75be:     c3                              	ret 
; section: .text._ZNK7leveldb5Slice4sizeEv
; function: _ZNK7leveldb5Slice4sizeEv at 0x75c0 -- 0x75e9
0x75c0:     55                              	push ebp
0x75c1:     89 e5                           	mov ebp, esp
0x75c3:     83 ec 28                        	sub esp, 0x28
0x75c6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x75c9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x75cc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x75d2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x75d5:     31 c0                           	xor eax, eax
0x75d7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x75da:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x75dd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x75e0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x75e7:     74 05                           	je 0x75ee <function_75ee>
; data inside code section at 0x75e9 -- 0x75ea
0x75e9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x75ea -- 0x75eb
; data inside code section at 0x75eb -- 0x75ee
0x75eb:     ff ff ff                                           |...             |
; function: function_75ee at 0x75ee -- 0x75f0
0x75ee:     c9                              	leave 
0x75ef:     c3                              	ret 
; section: .text._ZN7leveldb6StatusD2Ev
; function: _ZN7leveldb6StatusD1Ev at 0x75f0 -- 0x7618
0x75f0:     55                              	push ebp
0x75f1:     89 e5                           	mov ebp, esp
0x75f3:     83 ec 38                        	sub esp, 0x38
0x75f6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x75f9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x75fc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7602:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7605:     31 c0                           	xor eax, eax
0x7607:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x760a:     8b 00                           	mov eax, dword ptr [eax]
0x760c:     85 c0                           	test eax, eax
0x760e:     74 0d                           	je 0x761d <function_761d>
0x7610:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7613:     8b 00                           	mov eax, dword ptr [eax]
0x7615:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x7618 -- 0x7619
0x7618:     e8                                                 |.               |
; dynamically linked function: _ZdaPv at 0x7619 -- 0x761a
; data inside code section at 0x761a -- 0x761d
0x761a:     ff ff ff                                           |...             |
; function: function_761d at 0x761d -- 0x7630
0x761d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7620:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7627:     74 05                           	je 0x762e <function_761d+0x11>
0x7629:     e8 fc ff ff ff                  	call 0x762a
0x762e:     c9                              	leave 
0x762f:     c3                              	ret 
; section: .text._ZNK7leveldb6Status2okEv
; function: _ZNK7leveldb6Status2okEv at 0x7630 -- 0x765d
0x7630:     55                              	push ebp
0x7631:     89 e5                           	mov ebp, esp
0x7633:     83 ec 28                        	sub esp, 0x28
0x7636:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7639:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x763c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7642:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7645:     31 c0                           	xor eax, eax
0x7647:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x764a:     8b 00                           	mov eax, dword ptr [eax]
0x764c:     85 c0                           	test eax, eax
0x764e:     0f 94 c0                        	sete al
0x7651:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7654:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x765b:     74 05                           	je 0x7662 <function_7662>
; data inside code section at 0x765d -- 0x765e
0x765d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x765e -- 0x765f
; data inside code section at 0x765f -- 0x7662
0x765f:     ff ff ff                                           |...             |
; function: function_7662 at 0x7662 -- 0x7664
0x7662:     c9                              	leave 
0x7663:     c3                              	ret 
; section: .text._ZNK7leveldb6Status10IsNotFoundEv
; function: _ZNK7leveldb6Status10IsNotFoundEv at 0x7664 -- 0x7698
0x7664:     55                              	push ebp
0x7665:     89 e5                           	mov ebp, esp
0x7667:     83 ec 38                        	sub esp, 0x38
0x766a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x766d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7670:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7676:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7679:     31 c0                           	xor eax, eax
0x767b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x767e:     89 04 24                        	mov dword ptr [esp], eax
0x7681:     e8 7e 76 00 00                  	call 0xed04 <function_ed04>
0x7686:     83 f8 01                        	cmp eax, 1
0x7689:     0f 94 c0                        	sete al
0x768c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x768f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7696:     74 05                           	je 0x769d <function_769d>
; data inside code section at 0x7698 -- 0x7699
0x7698:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7699 -- 0x769a
; data inside code section at 0x769a -- 0x769d
0x769a:     ff ff ff                                           |...             |
; function: function_769d at 0x769d -- 0x769f
0x769d:     c9                              	leave 
0x769e:     c3                              	ret 
; section: .text._ZNK7leveldb6Status4codeEv
; function: _ZNK7leveldb6Status4codeEv at 0x76a0 -- 0x76e1
0x76a0:     55                              	push ebp
0x76a1:     89 e5                           	mov ebp, esp
0x76a3:     83 ec 28                        	sub esp, 0x28
0x76a6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x76a9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x76ac:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x76b2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x76b5:     31 c0                           	xor eax, eax
0x76b7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x76ba:     8b 00                           	mov eax, dword ptr [eax]
0x76bc:     85 c0                           	test eax, eax
0x76be:     74 10                           	je 0x76d0 <_ZNK7leveldb6Status4codeEv+0x30>
0x76c0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x76c3:     8b 00                           	mov eax, dword ptr [eax]
0x76c5:     83 c0 04                        	add eax, 4
0x76c8:     0f b6 00                        	movzx eax, byte ptr [eax]
0x76cb:     0f be c0                        	movsx eax, al
0x76ce:     eb 05                           	jmp 0x76d5 <_ZNK7leveldb6Status4codeEv+0x35>
0x76d0:     b8 00 00 00 00                  	mov eax, 0
0x76d5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x76d8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x76df:     74 05                           	je 0x76e6 <function_76e6>
; data inside code section at 0x76e1 -- 0x76e2
0x76e1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x76e2 -- 0x76e3
; data inside code section at 0x76e3 -- 0x76e6
0x76e3:     ff ff ff                                           |...             |
; function: function_76e6 at 0x76e6 -- 0x76e8
0x76e6:     c9                              	leave 
0x76e7:     c3                              	ret 
; section: .text._ZN13CLevelDBBatchC2Ev
; function: _ZN13CLevelDBBatchC1Ev at 0x76e8 -- 0x7705
0x76e8:     55                              	push ebp
0x76e9:     89 e5                           	mov ebp, esp
0x76eb:     83 ec 38                        	sub esp, 0x38
0x76ee:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x76f1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x76f4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x76fa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x76fd:     31 c0                           	xor eax, eax
0x76ff:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7702:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x7705 -- 0x7706
0x7705:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatchC1Ev at 0x7706 -- 0x7707
; data inside code section at 0x7707 -- 0x7717
0x7707:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x7717 -- 0x7718
; data inside code section at 0x7718 -- 0x771a
0x7718:     ff ff                                              |..              |
; function: function_771a at 0x771a -- 0x771d
0x771a:     ff c9                           	dec ecx
0x771c:     c3                              	ret 
; section: .text._ZN13CLevelDBBatchD2Ev
; function: _ZN13CLevelDBBatchD1Ev at 0x771e -- 0x773b
0x771e:     55                              	push ebp
0x771f:     89 e5                           	mov ebp, esp
0x7721:     83 ec 38                        	sub esp, 0x38
0x7724:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7727:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x772a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7730:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7733:     31 c0                           	xor eax, eax
0x7735:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7738:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x773b -- 0x773c
0x773b:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatchD1Ev at 0x773c -- 0x773d
; data inside code section at 0x773d -- 0x774d
0x773d:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x774d -- 0x774e
; data inside code section at 0x774e -- 0x7750
0x774e:     ff ff                                              |..              |
; function: function_7750 at 0x7750 -- 0x7753
0x7750:     ff c9                           	dec ecx
0x7752:     c3                              	ret 
; section: .text._ZN8CLevelDB11NewIteratorEv
; function: _ZN8CLevelDB11NewIteratorEv at 0x7754 -- 0x7799
0x7754:     55                              	push ebp
0x7755:     89 e5                           	mov ebp, esp
0x7757:     83 ec 38                        	sub esp, 0x38
0x775a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x775d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7760:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7766:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7769:     31 c0                           	xor eax, eax
0x776b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x776e:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0x7771:     8b 00                           	mov eax, dword ptr [eax]
0x7773:     83 c0 18                        	add eax, 0x18
0x7776:     8b 10                           	mov edx, dword ptr [eax]
0x7778:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x777b:     8d 48 38                        	lea ecx, [eax + 0x38]
0x777e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7781:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0x7784:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x7788:     89 04 24                        	mov dword ptr [esp], eax
0x778b:     ff d2                           	call edx
0x778d:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7790:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7797:     74 05                           	je 0x779e <function_779e>
; data inside code section at 0x7799 -- 0x779a
0x7799:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x779a -- 0x779b
; data inside code section at 0x779b -- 0x779e
0x779b:     ff ff ff                                           |...             |
; function: function_779e at 0x779e -- 0x77a0
0x779e:     c9                              	leave 
0x779f:     c3                              	ret 
; section: .text._ZN10CCoinsViewC2Ev
; function: _ZN10CCoinsViewC1Ev at 0x77a0 -- 0x77ba
0x77a0:     55                              	push ebp
0x77a1:     89 e5                           	mov ebp, esp
0x77a3:     83 ec 28                        	sub esp, 0x28
0x77a6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x77a9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x77ac:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x77b2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x77b5:     31 c0                           	xor eax, eax
0x77b7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x77ba -- 0x77bc
0x77ba:     c7 00                                              |..              |
; dynamically linked function: _ZTV10CCoinsView at 0x77bc -- 0x77cc
; data inside code section at 0x77cc -- 0x77cd
0x77cc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x77cd -- 0x77ce
; data inside code section at 0x77ce -- 0x77d1
0x77ce:     ff ff ff                                           |...             |
; function: function_77d1 at 0x77d1 -- 0x77d3
0x77d1:     c9                              	leave 
0x77d2:     c3                              	ret 
; section: .text._ZN6CCoinsD2Ev
; function: _ZN6CCoinsD1Ev at 0x77d4 -- 0x7805
0x77d4:     55                              	push ebp
0x77d5:     89 e5                           	mov ebp, esp
0x77d7:     83 ec 38                        	sub esp, 0x38
0x77da:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x77dd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x77e0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x77e6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x77e9:     31 c0                           	xor eax, eax
0x77eb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x77ee:     83 c0 04                        	add eax, 4
0x77f1:     89 04 24                        	mov dword ptr [esp], eax
0x77f4:     e8 73 95 00 00                  	call 0x10d6c <function_10d6c>
0x77f9:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x77fc:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7803:     74 05                           	je 0x780a <function_780a>
; data inside code section at 0x7805 -- 0x7806
0x7805:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7806 -- 0x7807
; data inside code section at 0x7807 -- 0x780a
0x7807:     ff ff ff                                           |...             |
; function: function_780a at 0x780a -- 0x780c
0x780a:     c9                              	leave 
0x780b:     c3                              	ret 
; section: .text._ZNSt4pairIcSsED2Ev
; function: _ZNSt4pairIcSsED1Ev at 0x780c -- 0x783d
0x780c:     55                              	push ebp
0x780d:     89 e5                           	mov ebp, esp
0x780f:     83 ec 38                        	sub esp, 0x38
0x7812:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7815:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7818:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x781e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7821:     31 c0                           	xor eax, eax
0x7823:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7826:     83 c0 04                        	add eax, 4
0x7829:     89 04 24                        	mov dword ptr [esp], eax
0x782c:     e8 fc ff ff ff                  	call 0x782d
0x7831:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7834:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x783b:     74 05                           	je 0x7842 <function_7842>
; data inside code section at 0x783d -- 0x783e
0x783d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x783e -- 0x783f
; data inside code section at 0x783f -- 0x7842
0x783f:     ff ff ff                                           |...             |
; function: function_7842 at 0x7842 -- 0x7844
0x7842:     c9                              	leave 
0x7843:     c3                              	ret 
; section: .text._ZSt4fillIPmiEvT_S1_RKT0_
; function: _ZSt4fillIPmiEvT_S1_RKT0_ at 0x7844 -- 0x789f
0x7844:     55                              	push ebp
0x7845:     89 e5                           	mov ebp, esp
0x7847:     53                              	push ebx
0x7848:     83 ec 34                        	sub esp, 0x34
0x784b:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x784e:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7851:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7854:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7857:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x785a:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x785d:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7863:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7866:     31 c0                           	xor eax, eax
0x7868:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x786b:     89 04 24                        	mov dword ptr [esp], eax
0x786e:     e8 b0 cf 00 00                  	call 0x14823 <function_14823>
0x7873:     89 c3                           	mov ebx, eax
0x7875:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7878:     89 04 24                        	mov dword ptr [esp], eax
0x787b:     e8 a3 cf 00 00                  	call 0x14823 <function_14823>
0x7880:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x7883:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x7887:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x788b:     89 04 24                        	mov dword ptr [esp], eax
0x788e:     e8 c5 cf 00 00                  	call 0x14858 <function_14858>
0x7893:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7896:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x789d:     74 05                           	je 0x78a4 <function_78a4>
; data inside code section at 0x789f -- 0x78a0
0x789f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x78a0 -- 0x78a1
; data inside code section at 0x78a1 -- 0x78a4
0x78a1:     ff ff ff                                           |...             |
; function: function_78a4 at 0x78a4 -- 0x78aa
0x78a4:     83 c4 34                        	add esp, 0x34
0x78a7:     5b                              	pop ebx
0x78a8:     5d                              	pop ebp
0x78a9:     c3                              	ret 
; section: .text._ZNKSt6vectorIhSaIhEE4sizeEv
; function: _ZNKSt6vectorIhSaIhEE4sizeEv at 0x78aa -- 0x78d0
0x78aa:     55                              	push ebp
0x78ab:     89 e5                           	mov ebp, esp
0x78ad:     83 ec 28                        	sub esp, 0x28
0x78b0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x78b3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x78b6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x78bc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x78bf:     31 c0                           	xor eax, eax
0x78c1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x78c4:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x78c7:     89 c2                           	mov edx, eax
0x78c9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x78cc:     8b 00                           	mov eax, dword ptr [eax]
0x78ce:     89 d1                           	mov ecx, edx
; function: function_78d0 at 0x78d0 -- 0x78e0
0x78d0:     29 c1                           	sub ecx, eax
0x78d2:     89 c8                           	mov eax, ecx
0x78d4:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x78d7:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x78de:     74 05                           	je 0x78e5 <function_78e5>
; data inside code section at 0x78e0 -- 0x78e1
0x78e0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x78e1 -- 0x78e2
; data inside code section at 0x78e2 -- 0x78e5
0x78e2:     ff ff ff                                           |...             |
; function: function_78e5 at 0x78e5 -- 0x78e7
0x78e5:     c9                              	leave 
0x78e6:     c3                              	ret 
; section: .text._ZNKSt6vectorIhSaIhEEixEj
; function: _ZNKSt6vectorIhSaIhEEixEj at 0x78e8 -- 0x7919
0x78e8:     55                              	push ebp
0x78e9:     89 e5                           	mov ebp, esp
0x78eb:     83 ec 28                        	sub esp, 0x28
0x78ee:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x78f1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x78f4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x78f7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x78fa:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7900:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7903:     31 c0                           	xor eax, eax
0x7905:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7908:     8b 00                           	mov eax, dword ptr [eax]
0x790a:     03 45 e0                        	add eax, dword ptr [ebp - 0x20]
0x790d:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7910:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7917:     74 05                           	je 0x791e <function_791e>
; data inside code section at 0x7919 -- 0x791a
0x7919:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x791a -- 0x791b
; data inside code section at 0x791b -- 0x791e
0x791b:     ff ff ff                                           |...             |
; function: function_791e at 0x791e -- 0x7920
0x791e:     c9                              	leave 
0x791f:     c3                              	ret 
; section: .text._ZltRK9base_uintILj256EES2_
; function: _ZltRK9base_uintILj256EES2_ at 0x7920 -- 0x79a1
0x7920:     55                              	push ebp
0x7921:     89 e5                           	mov ebp, esp
0x7923:     83 ec 28                        	sub esp, 0x28
0x7926:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7929:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x792c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x792f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7932:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7938:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x793b:     31 c0                           	xor eax, eax
0x793d:     c7 45 f0 07 00 00 00            	mov dword ptr [ebp - 0x10], 7
0x7944:     eb 3e                           	jmp 0x7984 <_ZltRK9base_uintILj256EES2_+0x64>
0x7946:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7949:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x794c:     8b 0c 90                        	mov ecx, dword ptr [eax + edx*4]
0x794f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7952:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x7955:     8b 04 90                        	mov eax, dword ptr [eax + edx*4]
0x7958:     39 c1                           	cmp ecx, eax
0x795a:     73 07                           	jae 0x7963 <_ZltRK9base_uintILj256EES2_+0x43>
0x795c:     b8 01 00 00 00                  	mov eax, 1
0x7961:     eb 32                           	jmp 0x7995 <_ZltRK9base_uintILj256EES2_+0x75>
0x7963:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7966:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x7969:     8b 0c 90                        	mov ecx, dword ptr [eax + edx*4]
0x796c:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x796f:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x7972:     8b 04 90                        	mov eax, dword ptr [eax + edx*4]
0x7975:     39 c1                           	cmp ecx, eax
0x7977:     76 07                           	jbe 0x7980 <_ZltRK9base_uintILj256EES2_+0x60>
0x7979:     b8 00 00 00 00                  	mov eax, 0
0x797e:     eb 15                           	jmp 0x7995 <_ZltRK9base_uintILj256EES2_+0x75>
0x7980:     83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x7984:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x7987:     f7 d0                           	not eax
0x7989:     c1 e8 1f                        	shr eax, 0x1f
0x798c:     84 c0                           	test al, al
0x798e:     75 b6                           	jne 0x7946 <_ZltRK9base_uintILj256EES2_+0x26>
0x7990:     b8 00 00 00 00                  	mov eax, 0
0x7995:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7998:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x799f:     74 05                           	je 0x79a6 <function_79a6>
; data inside code section at 0x79a1 -- 0x79a2
0x79a1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x79a2 -- 0x79a3
; data inside code section at 0x79a3 -- 0x79a6
0x79a3:     ff ff ff                                           |...             |
; function: function_79a6 at 0x79a6 -- 0x79a8
0x79a6:     c9                              	leave 
0x79a7:     c3                              	ret 
; section: .text._ZeqRK9base_uintILj256EES2_
; function: _ZeqRK9base_uintILj256EES2_ at 0x79a8 -- 0x7a0b
0x79a8:     55                              	push ebp
0x79a9:     89 e5                           	mov ebp, esp
0x79ab:     83 ec 28                        	sub esp, 0x28
0x79ae:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x79b1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x79b4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x79b7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x79ba:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x79c0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x79c3:     31 c0                           	xor eax, eax
0x79c5:     c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x79cc:     eb 21                           	jmp 0x79ef <_ZeqRK9base_uintILj256EES2_+0x47>
0x79ce:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x79d1:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x79d4:     8b 0c 90                        	mov ecx, dword ptr [eax + edx*4]
0x79d7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x79da:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x79dd:     8b 04 90                        	mov eax, dword ptr [eax + edx*4]
0x79e0:     39 c1                           	cmp ecx, eax
0x79e2:     74 07                           	je 0x79eb <_ZeqRK9base_uintILj256EES2_+0x43>
0x79e4:     b8 00 00 00 00                  	mov eax, 0
0x79e9:     eb 14                           	jmp 0x79ff <_ZeqRK9base_uintILj256EES2_+0x57>
0x79eb:     83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x79ef:     83 7d f0 07                     	cmp dword ptr [ebp - 0x10], 7
0x79f3:     0f 9e c0                        	setle al
0x79f6:     84 c0                           	test al, al
0x79f8:     75 d4                           	jne 0x79ce <_ZeqRK9base_uintILj256EES2_+0x26>
0x79fa:     b8 01 00 00 00                  	mov eax, 1
0x79ff:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7a02:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7a09:     74 05                           	je 0x7a10 <function_7a10>
; data inside code section at 0x7a0b -- 0x7a0c
0x7a0b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7a0c -- 0x7a0d
; data inside code section at 0x7a0d -- 0x7a10
0x7a0d:     ff ff ff                                           |...             |
; function: function_7a10 at 0x7a10 -- 0x7a12
0x7a10:     c9                              	leave 
0x7a11:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev at 0x7a12 -- 0x7a3e
0x7a12:     55                              	push ebp
0x7a13:     89 e5                           	mov ebp, esp
0x7a15:     83 ec 28                        	sub esp, 0x28
0x7a18:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7a1b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7a1e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7a24:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7a27:     31 c0                           	xor eax, eax
0x7a29:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7a2c:     c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x7a32:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7a35:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7a3c:     74 05                           	je 0x7a43 <function_7a43>
; data inside code section at 0x7a3e -- 0x7a3f
0x7a3e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7a3f -- 0x7a40
; data inside code section at 0x7a40 -- 0x7a43
0x7a40:     ff ff ff                                           |...             |
; function: function_7a43 at 0x7a43 -- 0x7a45
0x7a43:     c9                              	leave 
0x7a44:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x7a46 -- 0x7a74
0x7a46:     55                              	push ebp
0x7a47:     89 e5                           	mov ebp, esp
0x7a49:     83 ec 38                        	sub esp, 0x38
0x7a4c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7a4f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7a52:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7a58:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7a5b:     31 c0                           	xor eax, eax
0x7a5d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7a60:     89 04 24                        	mov dword ptr [esp], eax
0x7a63:     e8 4c d0 00 00                  	call 0x14ab4 <function_14ab4>
0x7a68:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7a6b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7a72:     74 05                           	je 0x7a79 <function_7a79>
; data inside code section at 0x7a74 -- 0x7a75
0x7a74:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7a75 -- 0x7a76
; data inside code section at 0x7a76 -- 0x7a79
0x7a76:     ff ff ff                                           |...             |
; function: function_7a79 at 0x7a79 -- 0x7a7b
0x7a79:     c9                              	leave 
0x7a7a:     c3                              	ret 
; section: .text._ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
; function: _ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv at 0x7a7c -- 0x7aa4
0x7a7c:     55                              	push ebp
0x7a7d:     89 e5                           	mov ebp, esp
0x7a7f:     83 ec 28                        	sub esp, 0x28
0x7a82:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7a85:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7a88:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7a8e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7a91:     31 c0                           	xor eax, eax
0x7a93:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7a96:     8b 00                           	mov eax, dword ptr [eax]
0x7a98:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7a9b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7aa2:     74 05                           	je 0x7aa9 <function_7aa9>
; data inside code section at 0x7aa4 -- 0x7aa5
0x7aa4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7aa5 -- 0x7aa6
; data inside code section at 0x7aa6 -- 0x7aa9
0x7aa6:     ff ff ff                                           |...             |
; function: function_7aa9 at 0x7aa9 -- 0x7aab
0x7aa9:     c9                              	leave 
0x7aaa:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_ at 0x7aac -- 0x7aec
0x7aac:     55                              	push ebp
0x7aad:     89 e5                           	mov ebp, esp
0x7aaf:     83 ec 38                        	sub esp, 0x38
0x7ab2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7ab5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7ab8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7abb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7abe:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7ac4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7ac7:     31 c0                           	xor eax, eax
0x7ac9:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7acc:     8b 00                           	mov eax, dword ptr [eax]
0x7ace:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7ad2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7ad5:     89 04 24                        	mov dword ptr [esp], eax
0x7ad8:     e8 6b 88 00 00                  	call 0x10348 <function_10348>
0x7add:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7ae0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7ae3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7aea:     74 05                           	je 0x7af1 <function_7af1>
; data inside code section at 0x7aec -- 0x7aed
0x7aec:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7aed -- 0x7aee
; data inside code section at 0x7aee -- 0x7af1
0x7aee:     ff ff ff                                           |...             |
; function: function_7af1 at 0x7af1 -- 0x7af3
0x7af1:     c9                              	leave 
0x7af2:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_baseC2ERKS1_
; function: _ZN5boost16exception_detail10clone_baseC1ERKS1_ at 0x7af4 -- 0x7b26
0x7af4:     55                              	push ebp
0x7af5:     89 e5                           	mov ebp, esp
0x7af7:     83 ec 28                        	sub esp, 0x28
0x7afa:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7afd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7b00:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7b03:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7b06:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7b0c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7b0f:     31 c0                           	xor eax, eax
0x7b11:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7b14:     c7 00 f4 b6 01 00               	mov dword ptr [eax], 0x1b6f4
0x7b1a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7b1d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7b24:     74 05                           	je 0x7b2b <function_7b2b>
; data inside code section at 0x7b26 -- 0x7b27
0x7b26:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7b27 -- 0x7b28
; data inside code section at 0x7b28 -- 0x7b2b
0x7b28:     ff ff ff                                           |...             |
; function: function_7b2b at 0x7b2b -- 0x7b2d
0x7b2b:     c9                              	leave 
0x7b2c:     c3                              	ret 
; section: .text._Z16GetSerializeSizeIhSaIhEEjRKSt6vectorIT_T0_Eii
; function: _Z16GetSerializeSizeIhSaIhEEjRKSt6vectorIT_T0_Eii at 0x7b2d -- 0x7b83
0x7b2d:     55                              	push ebp
0x7b2e:     89 e5                           	mov ebp, esp
0x7b30:     83 ec 38                        	sub esp, 0x38
0x7b33:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7b36:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7b39:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7b3c:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7b3f:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x7b42:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x7b45:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7b4b:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7b4e:     31 c0                           	xor eax, eax
0x7b50:     8d 45 f3                        	lea eax, [ebp - 0xd]
0x7b53:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x7b57:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x7b5a:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7b5e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7b61:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7b65:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7b68:     89 04 24                        	mov dword ptr [esp], eax
0x7b6b:     e8 91 d0 00 00                  	call 0x14c01 <function_14c01>
0x7b70:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7b73:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7b7a:     74 05                           	je 0x7b81 <_Z16GetSerializeSizeIhSaIhEEjRKSt6vectorIT_T0_Eii+0x54>
0x7b7c:     e8 fc ff ff ff                  	call 0x7b7d
0x7b81:     c9                              	leave 
0x7b82:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEC2Ev
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEC1Ev at 0x7b84 -- 0x7bb2
0x7b84:     55                              	push ebp
0x7b85:     89 e5                           	mov ebp, esp
0x7b87:     83 ec 38                        	sub esp, 0x38
0x7b8a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7b8d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7b90:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7b96:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7b99:     31 c0                           	xor eax, eax
0x7b9b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7b9e:     89 04 24                        	mov dword ptr [esp], eax
0x7ba1:     e8 54 d1 00 00                  	call 0x14cfa <function_14cfa>
0x7ba6:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7ba9:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7bb0:     74 05                           	je 0x7bb7 <function_7bb7>
; data inside code section at 0x7bb2 -- 0x7bb3
0x7bb2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7bb3 -- 0x7bb4
; data inside code section at 0x7bb4 -- 0x7bb7
0x7bb4:     ff ff ff                                           |...             |
; function: function_7bb7 at 0x7bb7 -- 0x7bb9
0x7bb7:     c9                              	leave 
0x7bb8:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEED2Ev
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev at 0x7bba -- 0x7c11
0x7bba:     55                              	push ebp
0x7bbb:     89 e5                           	mov ebp, esp
0x7bbd:     53                              	push ebx
0x7bbe:     83 ec 34                        	sub esp, 0x34
0x7bc1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7bc4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7bc7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7bcd:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7bd0:     31 c0                           	xor eax, eax
0x7bd2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7bd5:     89 04 24                        	mov dword ptr [esp], eax
0x7bd8:     e8 09 d2 00 00                  	call 0x14de6 <function_14de6>
0x7bdd:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x7be0:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x7be3:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x7be6:     8b 12                           	mov edx, dword ptr [edx]
0x7be8:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7bec:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x7bf0:     89 14 24                        	mov dword ptr [esp], edx
0x7bf3:     e8 1b d2 00 00                  	call 0x14e13 <function_14e13>
0x7bf8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7bfb:     89 04 24                        	mov dword ptr [esp], eax
0x7bfe:     e8 63 d1 00 00                  	call 0x14d66
0x7c03:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7c06:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7c0d:     74 1e                           	je 0x7c2d <function_7c2d>
0x7c0f:     eb 17                           	jmp 0x7c28 <function_7c28>
; data inside code section at 0x7c11 -- 0x7c12
0x7c11:     89                                                 |.               |
; function: function_7c12 at 0x7c12 -- 0x7c13
0x7c12:     c3                              	ret 
; data inside code section at 0x7c13 -- 0x7c24
0x7c13:     8b 45 e4 89 04 24 e8 48  d1 00 00 89 d8 89 04 24   |.E...$.H.......$|
0x7c23:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x7c24 -- 0x7c25
; data inside code section at 0x7c25 -- 0x7c28
0x7c25:     ff ff ff                                           |...             |
; function: function_7c28 at 0x7c28 -- 0x7c29
; dynamically linked function: __stack_chk_fail at 0x7c29 -- 0x7c2a
; data inside code section at 0x7c2a -- 0x7c2d
0x7c2a:     ff ff ff                                           |...             |
; function: function_7c2d at 0x7c2d -- 0x7c33
0x7c2d:     83 c4 34                        	add esp, 0x34
0x7c30:     5b                              	pop ebx
0x7c31:     5d                              	pop ebp
0x7c32:     c3                              	ret 
; section: .text._ZN25zero_after_free_allocatorIcEC2Ev
; function: _ZN25zero_after_free_allocatorIcEC1Ev at 0x7c34 -- 0x7c51
0x7c34:     55                              	push ebp
0x7c35:     89 e5                           	mov ebp, esp
0x7c37:     83 ec 38                        	sub esp, 0x38
0x7c3a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7c3d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7c40:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7c46:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7c49:     31 c0                           	xor eax, eax
0x7c4b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7c4e:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x7c51 -- 0x7c52
0x7c51:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC2Ev at 0x7c52 -- 0x7c53
; data inside code section at 0x7c53 -- 0x7c63
0x7c53:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x7c63 -- 0x7c64
; data inside code section at 0x7c64 -- 0x7c66
0x7c64:     ff ff                                              |..              |
; function: function_7c66 at 0x7c66 -- 0x7c69
0x7c66:     ff c9                           	dec ecx
0x7c68:     c3                              	ret 
; section: .text._ZN25zero_after_free_allocatorIcED2Ev
; function: _ZN25zero_after_free_allocatorIcED1Ev at 0x7c6a -- 0x7c87
0x7c6a:     55                              	push ebp
0x7c6b:     89 e5                           	mov ebp, esp
0x7c6d:     83 ec 38                        	sub esp, 0x38
0x7c70:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7c73:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7c76:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7c7c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7c7f:     31 c0                           	xor eax, eax
0x7c81:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7c84:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x7c87 -- 0x7c88
0x7c87:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcED2Ev at 0x7c88 -- 0x7c89
; data inside code section at 0x7c89 -- 0x7c99
0x7c89:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x7c99 -- 0x7c9a
; data inside code section at 0x7c9a -- 0x7c9c
0x7c9a:     ff ff                                              |..              |
; function: function_7c9c at 0x7c9c -- 0x7c9f
0x7c9c:     ff c9                           	dec ecx
0x7c9e:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEC2IPKcEET_S6_RKS1_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEC1IPKcEET_S6_RKS1_ at 0x7ca0 -- 0x7cfb
0x7ca0:     55                              	push ebp
0x7ca1:     89 e5                           	mov ebp, esp
0x7ca3:     53                              	push ebx
0x7ca4:     83 ec 34                        	sub esp, 0x34
0x7ca7:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7caa:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7cad:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7cb0:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7cb3:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x7cb6:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x7cb9:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x7cbc:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x7cbf:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7cc5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7cc8:     31 c0                           	xor eax, eax
0x7cca:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7ccd:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x7cd0:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7cd4:     89 04 24                        	mov dword ptr [esp], eax
0x7cd7:     e8 80 d2 00 00                  	call 0x14f5c <function_14f5c>
0x7cdc:     88 5c 24 0c                     	mov byte ptr [esp + 0xc], bl
0x7ce0:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x7ce3:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7ce7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7cea:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7cee:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7cf1:     89 04 24                        	mov dword ptr [esp], eax
0x7cf4:     e8 a5 d2 00 00                  	call 0x14f9e <function_14f9e>
0x7cf9:     eb 17                           	jmp 0x7d12 <function_7d12>
; data inside code section at 0x7cfb -- 0x7cfc
0x7cfb:     89                                                 |.               |
; function: function_7cfc at 0x7cfc -- 0x7cfd
0x7cfc:     c3                              	ret 
; data inside code section at 0x7cfd -- 0x7d0e
0x7cfd:     8b 45 e4 89 04 24 e8 44  d1 00 00 89 d8 89 04 24   |.E...$.D.......$|
0x7d0d:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x7d0e -- 0x7d0f
; data inside code section at 0x7d0f -- 0x7d12
0x7d0f:     ff ff ff                                           |...             |
; function: function_7d12 at 0x7d12 -- 0x7d1e
0x7d12:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x7d15:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x7d1c:     74 05                           	je 0x7d23 <function_7d23>
; data inside code section at 0x7d1e -- 0x7d1f
0x7d1e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7d1f -- 0x7d20
; data inside code section at 0x7d20 -- 0x7d23
0x7d20:     ff ff ff                                           |...             |
; function: function_7d23 at 0x7d23 -- 0x7d29
0x7d23:     83 c4 34                        	add esp, 0x34
0x7d26:     5b                              	pop ebx
0x7d27:     5d                              	pop ebp
0x7d28:     c3                              	ret 
; section: .text._ZNKSt6vectorIc25zero_after_free_allocatorIcEE5beginEv
; function: _ZNKSt6vectorIc25zero_after_free_allocatorIcEE5beginEv at 0x7d2a -- 0x7d70
0x7d2a:     55                              	push ebp
0x7d2b:     89 e5                           	mov ebp, esp
0x7d2d:     83 ec 38                        	sub esp, 0x38
0x7d30:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7d33:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7d36:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7d39:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7d3c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7d42:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7d45:     31 c0                           	xor eax, eax
0x7d47:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7d4a:     8b 00                           	mov eax, dword ptr [eax]
0x7d4c:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x7d4f:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x7d52:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7d56:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7d59:     89 04 24                        	mov dword ptr [esp], eax
0x7d5c:     e8 21 d3 00 00                  	call 0x15082 <function_15082>
0x7d61:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7d64:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7d67:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7d6e:     74 05                           	je 0x7d75 <function_7d75>
; data inside code section at 0x7d70 -- 0x7d71
0x7d70:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7d71 -- 0x7d72
; data inside code section at 0x7d72 -- 0x7d75
0x7d72:     ff ff ff                                           |...             |
; function: function_7d75 at 0x7d75 -- 0x7d79
0x7d75:     c9                              	leave 
0x7d76:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIc25zero_after_free_allocatorIcEE3endEv
; function: _ZNKSt6vectorIc25zero_after_free_allocatorIcEE3endEv at 0x7d7a -- 0x7dc1
0x7d7a:     55                              	push ebp
0x7d7b:     89 e5                           	mov ebp, esp
0x7d7d:     83 ec 38                        	sub esp, 0x38
0x7d80:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7d83:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7d86:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7d89:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7d8c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7d92:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7d95:     31 c0                           	xor eax, eax
0x7d97:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7d9a:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x7d9d:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x7da0:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x7da3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7da7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7daa:     89 04 24                        	mov dword ptr [esp], eax
0x7dad:     e8 20 d3 00 00                  	call 0x150d2
0x7db2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7db5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7db8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7dbf:     74 05                           	je 0x7dc6 <function_7dc6>
; data inside code section at 0x7dc1 -- 0x7dc2
0x7dc1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7dc2 -- 0x7dc3
; data inside code section at 0x7dc3 -- 0x7dc6
0x7dc3:     ff ff ff                                           |...             |
; function: function_7dc6 at 0x7dc6 -- 0x7dca
0x7dc6:     c9                              	leave 
0x7dc7:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIhSaIhEE5beginEv
; function: _ZNKSt6vectorIhSaIhEE5beginEv at 0x7dca -- 0x7e10
0x7dca:     55                              	push ebp
0x7dcb:     89 e5                           	mov ebp, esp
0x7dcd:     83 ec 38                        	sub esp, 0x38
0x7dd0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7dd3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7dd6:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7dd9:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7ddc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7de2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7de5:     31 c0                           	xor eax, eax
0x7de7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7dea:     8b 00                           	mov eax, dword ptr [eax]
0x7dec:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x7def:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x7df2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7df6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7df9:     89 04 24                        	mov dword ptr [esp], eax
0x7dfc:     e8 5b d3 00 00                  	call 0x1515c
0x7e01:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7e04:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7e07:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7e0e:     74 05                           	je 0x7e15 <function_7e15>
; data inside code section at 0x7e10 -- 0x7e11
0x7e10:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7e11 -- 0x7e12
; data inside code section at 0x7e12 -- 0x7e15
0x7e12:     ff ff ff                                           |...             |
; function: function_7e15 at 0x7e15 -- 0x7e19
0x7e15:     c9                              	leave 
0x7e16:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIhSaIhEE3endEv
; function: _ZNKSt6vectorIhSaIhEE3endEv at 0x7e1a -- 0x7e61
0x7e1a:     55                              	push ebp
0x7e1b:     89 e5                           	mov ebp, esp
0x7e1d:     83 ec 38                        	sub esp, 0x38
0x7e20:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7e23:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7e26:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7e29:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7e2c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7e32:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7e35:     31 c0                           	xor eax, eax
0x7e37:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7e3a:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x7e3d:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x7e40:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x7e43:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7e47:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7e4a:     89 04 24                        	mov dword ptr [esp], eax
0x7e4d:     e8 5a d3 00 00                  	call 0x151ac
0x7e52:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7e55:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7e58:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7e5f:     74 05                           	je 0x7e66 <function_7e66>
; data inside code section at 0x7e61 -- 0x7e62
0x7e61:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7e62 -- 0x7e63
; data inside code section at 0x7e63 -- 0x7e66
0x7e63:     ff ff ff                                           |...             |
; function: function_7e66 at 0x7e66 -- 0x7e6a
0x7e66:     c9                              	leave 
0x7e67:     c2 04 00                        	ret 4
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE3endEv
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE3endEv at 0x7e6a -- 0x7eab
0x7e6a:     55                              	push ebp
0x7e6b:     89 e5                           	mov ebp, esp
0x7e6d:     83 ec 38                        	sub esp, 0x38
0x7e70:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7e73:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7e76:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7e79:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7e7c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7e82:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7e85:     31 c0                           	xor eax, eax
0x7e87:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7e8a:     83 c0 04                        	add eax, 4
0x7e8d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7e91:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7e94:     89 04 24                        	mov dword ptr [esp], eax
0x7e97:     e8 9a d3 00 00                  	call 0x15236
0x7e9c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7e9f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7ea2:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7ea9:     74 05                           	je 0x7eb0 <function_7eb0>
; data inside code section at 0x7eab -- 0x7eac
0x7eab:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7eac -- 0x7ead
; data inside code section at 0x7ead -- 0x7eb0
0x7ead:     ff ff ff                                           |...             |
; function: function_7eb0 at 0x7eb0 -- 0x7eb4
0x7eb0:     c9                              	leave 
0x7eb1:     c2 04 00                        	ret 4
; section: .text._ZNSsC2IN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEET_S9_RKSaIcE
; function: _ZNSsC1IN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEET_S9_RKSaIcE at 0x7eb4 -- 0x7f09
0x7eb4:     55                              	push ebp
0x7eb5:     89 e5                           	mov ebp, esp
0x7eb7:     83 ec 38                        	sub esp, 0x38
0x7eba:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7ebd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7ec0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7ec3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7ec6:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x7ec9:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x7ecc:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x7ecf:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x7ed2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7ed8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7edb:     31 c0                           	xor eax, eax
0x7edd:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x7ee0:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x7ee4:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x7ee7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7eeb:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7eee:     89 04 24                        	mov dword ptr [esp], eax
0x7ef1:     e8 f1 d3 00 00                  	call 0x152e7
0x7ef6:     89 c2                           	mov edx, eax
0x7ef8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7efb:     8b 4d d8                        	mov ecx, dword ptr [ebp - 0x28]
0x7efe:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x7f02:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x7f06:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x7f09 -- 0x7f0a
0x7f09:     e8                                                 |.               |
; dynamically linked function: _ZNSs12_Alloc_hiderC1EPcRKSaIcE at 0x7f0a -- 0x7f0b
; data inside code section at 0x7f0b -- 0x7f0d
0x7f0b:     ff ff                                              |..              |
; function: function_7f0d at 0x7f0d -- 0x7f21
0x7f0d:     ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0x7f13:     05 14 00 00 00                  	add eax, 0x14
0x7f18:     74 05                           	je 0x7f1f <function_7f0d+0x12>
0x7f1a:     e8 fc ff ff ff                  	call 0x7f1b
0x7f1f:     c9                              	leave 
0x7f20:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEplERKi
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEplERKi at 0x7f22 -- 0x7f7e
0x7f22:     55                              	push ebp
0x7f23:     89 e5                           	mov ebp, esp
0x7f25:     83 ec 38                        	sub esp, 0x38
0x7f28:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7f2b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7f2e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7f31:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7f34:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x7f37:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x7f3a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7f40:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7f43:     31 c0                           	xor eax, eax
0x7f45:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x7f48:     8b 10                           	mov edx, dword ptr [eax]
0x7f4a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x7f4d:     8b 00                           	mov eax, dword ptr [eax]
0x7f4f:     01 d0                           	add eax, edx
0x7f51:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x7f54:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x7f57:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x7f5b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7f5e:     89 04 24                        	mov dword ptr [esp], eax
0x7f61:     e8 14 d3 00 00                  	call 0x1527a
0x7f66:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7f69:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7f6c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7f73:     74 05                           	je 0x7f7a <_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEplERKi+0x58>
0x7f75:     e8 fc ff ff ff                  	call 0x7f76
0x7f7a:     c9                              	leave 
0x7f7b:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIc25zero_after_free_allocatorIcEE4sizeEv
; function: _ZNKSt6vectorIc25zero_after_free_allocatorIcEE4sizeEv at 0x7f7e -- 0x7fb4
0x7f7e:     55                              	push ebp
0x7f7f:     89 e5                           	mov ebp, esp
0x7f81:     83 ec 28                        	sub esp, 0x28
0x7f84:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7f87:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7f8a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7f90:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7f93:     31 c0                           	xor eax, eax
0x7f95:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7f98:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x7f9b:     89 c2                           	mov edx, eax
0x7f9d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7fa0:     8b 00                           	mov eax, dword ptr [eax]
0x7fa2:     89 d1                           	mov ecx, edx
0x7fa4:     29 c1                           	sub ecx, eax
0x7fa6:     89 c8                           	mov eax, ecx
0x7fa8:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x7fab:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x7fb2:     74 05                           	je 0x7fb9 <function_7fb9>
; data inside code section at 0x7fb4 -- 0x7fb5
0x7fb4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7fb5 -- 0x7fb6
; data inside code section at 0x7fb6 -- 0x7fb9
0x7fb6:     ff ff ff                                           |...             |
; function: function_7fb9 at 0x7fb9 -- 0x7fbb
0x7fb9:     c9                              	leave 
0x7fba:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE7reserveEj
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE7reserveEj at 0x7fbc -- 0x80ce
0x7fbc:     55                              	push ebp
0x7fbd:     89 e5                           	mov ebp, esp
0x7fbf:     83 ec 38                        	sub esp, 0x38
0x7fc2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x7fc5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x7fc8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x7fcb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x7fce:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x7fd4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x7fd7:     31 c0                           	xor eax, eax
0x7fd9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7fdc:     89 04 24                        	mov dword ptr [esp], eax
0x7fdf:     e8 bc d4 00 00                  	call 0x154a0 <function_154a0>
0x7fe4:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x7fe7:     0f 92 c0                        	setb al
0x7fea:     84 c0                           	test al, al
0x7fec:     74 0c                           	je 0x7ffa <_ZNSt6vectorIc25zero_after_free_allocatorIcEE7reserveEj+0x3e>
0x7fee:     c7 04 24 89 3e 00 00            	mov dword ptr [esp], 0x3e89 ; "vector::reserve"
0x7ff5:     e8 fc ff ff ff                  	call 0x7ff6
0x7ffa:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x7ffd:     89 04 24                        	mov dword ptr [esp], eax
0x8000:     e8 d9 d4 00 00                  	call 0x154de <function_154de>
0x8005:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x8008:     0f 92 c0                        	setb al
0x800b:     84 c0                           	test al, al
0x800d:     0f 84 af 00 00 00               	je 0x80c2 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE7reserveEj+0x106>
0x8013:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8016:     89 04 24                        	mov dword ptr [esp], eax
0x8019:     e8 1c 7f 00 00                  	call 0xff3a <function_ff3a>
0x801e:     89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8021:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8024:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x8027:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x802a:     8b 00                           	mov eax, dword ptr [eax]
0x802c:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x8030:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x8034:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8037:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x803b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x803e:     89 04 24                        	mov dword ptr [esp], eax
0x8041:     e8 d6 d4 00 00                  	call 0x1551c <function_1551c>
0x8046:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804c:     89 04 24                        	mov dword ptr [esp], eax
0x804f:     e8 94 d1 00 00                  	call 0x151e8
0x8054:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8057:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x805a:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x805d:     8b 12                           	mov edx, dword ptr [edx]
0x805f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x8063:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x8067:     89 14 24                        	mov dword ptr [esp], edx
0x806a:     e8 a6 d1 00 00                  	call 0x15215
0x806f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8072:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0x8075:     89 c2                           	mov edx, eax
0x8077:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x807a:     8b 00                           	mov eax, dword ptr [eax]
0x807c:     89 d1                           	mov ecx, edx
0x807e:     29 c1                           	sub ecx, eax
0x8080:     89 c8                           	mov eax, ecx
0x8082:     89 c1                           	mov ecx, eax
0x8084:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8087:     8b 10                           	mov edx, dword ptr [eax]
0x8089:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x808c:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x8090:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8094:     89 04 24                        	mov dword ptr [esp], eax
0x8097:     e8 3a d5 00 00                  	call 0x155d6 <function_155d6>
0x809c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x809f:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x80a2:     89 10                           	mov dword ptr [eax], edx
0x80a4:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80a7:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x80aa:     01 c2                           	add edx, eax
0x80ac:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80af:     89 50 04                        	mov dword ptr [eax + 4], edx
0x80b2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80b5:     8b 00                           	mov eax, dword ptr [eax]
0x80b7:     89 c2                           	mov edx, eax
0x80b9:     03 55 e0                        	add edx, dword ptr [ebp - 0x20]
0x80bc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80bf:     89 50 08                        	mov dword ptr [eax + 8], edx
0x80c2:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80c5:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x80cc:     74 05                           	je 0x80d3 <function_80d3>
; data inside code section at 0x80ce -- 0x80cf
0x80ce:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x80cf -- 0x80d0
; data inside code section at 0x80d0 -- 0x80d3
0x80d0:     ff ff ff                                           |...             |
; function: function_80d3 at 0x80d3 -- 0x80d5
0x80d3:     c9                              	leave 
0x80d4:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEixEj
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEixEj at 0x80d6 -- 0x8107
0x80d6:     55                              	push ebp
0x80d7:     89 e5                           	mov ebp, esp
0x80d9:     83 ec 28                        	sub esp, 0x28
0x80dc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80df:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x80e2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80e5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x80e8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x80ee:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x80f1:     31 c0                           	xor eax, eax
0x80f3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80f6:     8b 00                           	mov eax, dword ptr [eax]
0x80f8:     03 45 e0                        	add eax, dword ptr [ebp - 0x20]
0x80fb:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80fe:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8105:     74 05                           	je 0x810c <function_810c>
; data inside code section at 0x8107 -- 0x8108
0x8107:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8108 -- 0x8109
; data inside code section at 0x8109 -- 0x810c
0x8109:     ff ff ff                                           |...             |
; function: function_810c at 0x810c -- 0x810e
0x810c:     c9                              	leave 
0x810d:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE5clearEv
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE5clearEv at 0x810e -- 0x8145
0x810e:     55                              	push ebp
0x810f:     89 e5                           	mov ebp, esp
0x8111:     83 ec 38                        	sub esp, 0x38
0x8114:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8117:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x811a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8120:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8123:     31 c0                           	xor eax, eax
0x8125:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8128:     8b 00                           	mov eax, dword ptr [eax]
0x812a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x812e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8131:     89 04 24                        	mov dword ptr [esp], eax
0x8134:     e8 5b d4 00 00                  	call 0x15594 <function_15594>
0x8139:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x813c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8143:     74 05                           	je 0x814a <function_814a>
; data inside code section at 0x8145 -- 0x8146
0x8145:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8146 -- 0x8147
; data inside code section at 0x8147 -- 0x814a
0x8147:     ff ff ff                                           |...             |
; function: function_814a at 0x814a -- 0x814c
0x814a:     c9                              	leave 
0x814b:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE6insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE6insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_ at 0x814c -- 0x81a5
0x814c:     55                              	push ebp
0x814d:     89 e5                           	mov ebp, esp
0x814f:     83 ec 48                        	sub esp, 0x48
0x8152:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8155:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8158:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x815b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x815e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8161:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8164:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8167:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x816a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8170:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8173:     31 c0                           	xor eax, eax
0x8175:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x8179:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x817c:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x8180:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8183:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x8187:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x818a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x818e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8191:     89 04 24                        	mov dword ptr [esp], eax
0x8194:     e8 a7 d6 00 00                  	call 0x15840
0x8199:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x819c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x81a3:     74 05                           	je 0x81aa <function_81aa>
; data inside code section at 0x81a5 -- 0x81a6
0x81a5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x81a6 -- 0x81a7
; data inside code section at 0x81a7 -- 0x81aa
0x81a7:     ff ff ff                                           |...             |
; function: function_81aa at 0x81aa -- 0x81ac
0x81aa:     c9                              	leave 
0x81ab:     c3                              	ret 
; section: .text._ZN9__gnu_cxxmiIPcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_
; function: _ZN9__gnu_cxxmiIPcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ at 0x81ac -- 0x81f8
0x81ac:     55                              	push ebp
0x81ad:     89 e5                           	mov ebp, esp
0x81af:     53                              	push ebx
0x81b0:     83 ec 34                        	sub esp, 0x34
0x81b3:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x81b6:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x81b9:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x81bc:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x81bf:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x81c5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x81c8:     31 c0                           	xor eax, eax
0x81ca:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x81cd:     89 04 24                        	mov dword ptr [esp], eax
0x81d0:     e8 9d d6 00 00                  	call 0x15872
0x81d5:     8b 00                           	mov eax, dword ptr [eax]
0x81d7:     89 c3                           	mov ebx, eax
0x81d9:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x81dc:     89 04 24                        	mov dword ptr [esp], eax
0x81df:     e8 8e d6 00 00                  	call 0x15872
0x81e4:     8b 00                           	mov eax, dword ptr [eax]
0x81e6:     89 da                           	mov edx, ebx
0x81e8:     29 c2                           	sub edx, eax
0x81ea:     89 d0                           	mov eax, edx
0x81ec:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x81ef:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x81f6:     74 05                           	je 0x81fd <function_81fd>
; data inside code section at 0x81f8 -- 0x81f9
0x81f8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x81f9 -- 0x81fa
; data inside code section at 0x81fa -- 0x81fd
0x81fa:     ff ff ff                                           |...             |
; function: function_81fd at 0x81fd -- 0x8203
0x81fd:     83 c4 34                        	add esp, 0x34
0x8200:     5b                              	pop ebx
0x8201:     5d                              	pop ebp
0x8202:     c3                              	ret 
; section: .text._ZN11CDataStreamrsIiEERS_RT_
; function: _ZN11CDataStreamrsIiEERS_RT_ at 0x8204 -- 0x8256
0x8204:     55                              	push ebp
0x8205:     89 e5                           	mov ebp, esp
0x8207:     83 ec 38                        	sub esp, 0x38
0x820a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x820d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8210:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8213:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8216:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x821c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x821f:     31 c0                           	xor eax, eax
0x8221:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8224:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x8227:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x822a:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x822d:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x8231:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x8235:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8238:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x823c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x823f:     89 04 24                        	mov dword ptr [esp], eax
0x8242:     e8 49 d7 00 00                  	call 0x15990
0x8247:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x824a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x824d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8254:     74 05                           	je 0x825b <function_825b>
; data inside code section at 0x8256 -- 0x8257
0x8256:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8257 -- 0x8258
; data inside code section at 0x8258 -- 0x825b
0x8258:     ff ff ff                                           |...             |
; function: function_825b at 0x825b -- 0x825d
0x825b:     c9                              	leave 
0x825c:     c3                              	ret 
; section: .text._ZN11CDataStreamlsIiEERS_RKT_
; function: _ZN11CDataStreamlsIiEERS_RKT_ at 0x825e -- 0x82b2
0x825e:     55                              	push ebp
0x825f:     89 e5                           	mov ebp, esp
0x8261:     83 ec 38                        	sub esp, 0x38
0x8264:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8267:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x826a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x826d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8270:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8276:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8279:     31 c0                           	xor eax, eax
0x827b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x827e:     8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0x8281:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8284:     8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0x8287:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x828a:     8b 00                           	mov eax, dword ptr [eax]
0x828c:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x8290:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x8294:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8298:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x829b:     89 04 24                        	mov dword ptr [esp], eax
0x829e:     e8 9d d7 00 00                  	call 0x15a40 <function_15a40>
0x82a3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x82a6:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x82a9:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x82b0:     74 05                           	je 0x82b7 <function_82b7>
; data inside code section at 0x82b2 -- 0x82b3
0x82b2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x82b3 -- 0x82b4
; data inside code section at 0x82b4 -- 0x82b7
0x82b4:     ff ff ff                                           |...             |
; function: function_82b7 at 0x82b7 -- 0x82b9
0x82b7:     c9                              	leave 
0x82b8:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholderjEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholderjEjRT_RKT0_ii26CSerActionGetSerializeSize at 0x82b9 -- 0x8317
0x82b9:     55                              	push ebp
0x82ba:     89 e5                           	mov ebp, esp
0x82bc:     83 ec 48                        	sub esp, 0x48
0x82bf:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x82c2:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x82c5:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x82c8:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x82cb:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x82ce:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x82d1:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x82d4:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x82d7:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x82db:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x82de:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x82e4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x82e7:     31 c0                           	xor eax, eax
0x82e9:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x82ec:     8b 00                           	mov eax, dword ptr [eax]
0x82ee:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x82f1:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x82f5:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x82f8:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x82fc:     89 04 24                        	mov dword ptr [esp], eax
0x82ff:     e8 5b 43 00 00                  	call 0xc65f
0x8304:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8307:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x830e:     74 05                           	je 0x8315 <_Z12SerReadWriteI21ser_streamplaceholderjEjRT_RKT0_ii26CSerActionGetSerializeSize+0x5c>
0x8310:     e8 fc ff ff ff                  	call 0x8311
0x8315:     c9                              	leave 
0x8316:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEEC2Ev
; function: _ZNSt6vectorIhSaIhEEC1Ev at 0x8318 -- 0x8346
0x8318:     55                              	push ebp
0x8319:     89 e5                           	mov ebp, esp
0x831b:     83 ec 38                        	sub esp, 0x38
0x831e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8321:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8324:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x832a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x832d:     31 c0                           	xor eax, eax
0x832f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8332:     89 04 24                        	mov dword ptr [esp], eax
0x8335:     e8 a0 d8 00 00                  	call 0x15bda <function_15bda>
0x833a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x833d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8344:     74 05                           	je 0x834b <function_834b>
; data inside code section at 0x8346 -- 0x8347
0x8346:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8347 -- 0x8348
; data inside code section at 0x8348 -- 0x834b
0x8348:     ff ff ff                                           |...             |
; function: function_834b at 0x834b -- 0x834d
0x834b:     c9                              	leave 
0x834c:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEED2Ev
; function: _ZNSt6vectorIhSaIhEED1Ev at 0x834e -- 0x83a5
0x834e:     55                              	push ebp
0x834f:     89 e5                           	mov ebp, esp
0x8351:     53                              	push ebx
0x8352:     83 ec 34                        	sub esp, 0x34
0x8355:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8358:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x835b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8361:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8364:     31 c0                           	xor eax, eax
0x8366:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8369:     89 04 24                        	mov dword ptr [esp], eax
0x836c:     e8 55 d9 00 00                  	call 0x15cc6 <function_15cc6>
0x8371:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8374:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x8377:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x837a:     8b 12                           	mov edx, dword ptr [edx]
0x837c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x8380:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x8384:     89 14 24                        	mov dword ptr [esp], edx
0x8387:     e8 67 d9 00 00                  	call 0x15cf3 <function_15cf3>
0x838c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x838f:     89 04 24                        	mov dword ptr [esp], eax
0x8392:     e8 af d8 00 00                  	call 0x15c46 <function_15c46>
0x8397:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x839a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x83a1:     74 1e                           	je 0x83c1 <function_83c1>
0x83a3:     eb 17                           	jmp 0x83bc <function_83bc>
; data inside code section at 0x83a5 -- 0x83a6
0x83a5:     89                                                 |.               |
; function: function_83a6 at 0x83a6 -- 0x83a7
0x83a6:     c3                              	ret 
; data inside code section at 0x83a7 -- 0x83b8
0x83a7:     8b 45 e4 89 04 24 e8 94  d8 00 00 89 d8 89 04 24   |.E...$.........$|
0x83b7:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x83b8 -- 0x83b9
; data inside code section at 0x83b9 -- 0x83bc
0x83b9:     ff ff ff                                           |...             |
; function: function_83bc at 0x83bc -- 0x83bd
; dynamically linked function: __stack_chk_fail at 0x83bd -- 0x83be
; data inside code section at 0x83be -- 0x83c1
0x83be:     ff ff ff                                           |...             |
; function: function_83c1 at 0x83c1 -- 0x83c7
0x83c1:     83 c4 34                        	add esp, 0x34
0x83c4:     5b                              	pop ebx
0x83c5:     5d                              	pop ebp
0x83c6:     c3                              	ret 
; section: .text._ZNSaIhEC2Ev
; function: _ZNSaIhEC1Ev at 0x83c8 -- 0x83fd
0x83c8:     55                              	push ebp
0x83c9:     89 e5                           	mov ebp, esp
0x83cb:     83 ec 38                        	sub esp, 0x38
0x83ce:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x83d1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x83d4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x83da:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x83dd:     31 c0                           	xor eax, eax
0x83df:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x83e2:     89 04 24                        	mov dword ptr [esp], eax
0x83e5:     e8 cc d9 00 00                  	call 0x15db6 <function_15db6>
0x83ea:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x83ed:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x83f4:     74 05                           	je 0x83fb <_ZNSaIhEC1Ev+0x33>
0x83f6:     e8 fc ff ff ff                  	call 0x83f7
0x83fb:     c9                              	leave 
0x83fc:     c3                              	ret 
; section: .text._ZNSaIhED2Ev
; function: _ZNSaIhED1Ev at 0x83fe -- 0x842c
0x83fe:     55                              	push ebp
0x83ff:     89 e5                           	mov ebp, esp
0x8401:     83 ec 38                        	sub esp, 0x38
0x8404:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8407:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x840a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8410:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8413:     31 c0                           	xor eax, eax
0x8415:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8418:     89 04 24                        	mov dword ptr [esp], eax
0x841b:     e8 f6 d9 00 00                  	call 0x15e16 <function_15e16>
0x8420:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8423:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x842a:     74 05                           	je 0x8431 <function_8431>
; data inside code section at 0x842c -- 0x842d
0x842c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x842d -- 0x842e
; data inside code section at 0x842e -- 0x8431
0x842e:     ff ff ff                                           |...             |
; function: function_8431 at 0x8431 -- 0x8433
0x8431:     c9                              	leave 
0x8432:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEEC2EjRKhRKS0_
; function: _ZNSt6vectorIhSaIhEEC1EjRKhRKS0_ at 0x8434 -- 0x8492
0x8434:     55                              	push ebp
0x8435:     89 e5                           	mov ebp, esp
0x8437:     53                              	push ebx
0x8438:     83 ec 34                        	sub esp, 0x34
0x843b:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x843e:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8441:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8444:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8447:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x844a:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x844d:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8450:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8453:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8459:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x845c:     31 c0                           	xor eax, eax
0x845e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8461:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8464:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x8468:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x846b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x846f:     89 04 24                        	mov dword ptr [esp], eax
0x8472:     e8 ff d9 00 00                  	call 0x15e76
0x8477:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x847a:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x847e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8481:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8485:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8488:     89 04 24                        	mov dword ptr [esp], eax
0x848b:     e8 80 da 00 00                  	call 0x15f10 <function_15f10>
0x8490:     eb 17                           	jmp 0x84a9 <function_84a9>
; data inside code section at 0x8492 -- 0x8493
0x8492:     89                                                 |.               |
; function: function_8493 at 0x8493 -- 0x8494
0x8493:     c3                              	ret 
; data inside code section at 0x8494 -- 0x84a5
0x8494:     8b 45 e4 89 04 24 e8 8d  d8 00 00 89 d8 89 04 24   |.E...$.........$|
0x84a4:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x84a5 -- 0x84a6
; data inside code section at 0x84a6 -- 0x84a9
0x84a6:     ff ff ff                                           |...             |
; function: function_84a9 at 0x84a9 -- 0x84b5
0x84a9:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x84ac:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x84b3:     74 05                           	je 0x84ba <function_84ba>
; data inside code section at 0x84b5 -- 0x84b6
0x84b5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x84b6 -- 0x84b7
; data inside code section at 0x84b7 -- 0x84ba
0x84b7:     ff ff ff                                           |...             |
; function: function_84ba at 0x84ba -- 0x84c0
0x84ba:     83 c4 34                        	add esp, 0x34
0x84bd:     5b                              	pop ebx
0x84be:     5d                              	pop ebp
0x84bf:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEEaSERKS1_
; function: _ZNSt6vectorIhSaIhEEaSERKS1_ at 0x84c0 -- 0x8721
0x84c0:     55                              	push ebp
0x84c1:     89 e5                           	mov ebp, esp
0x84c3:     57                              	push edi
0x84c4:     56                              	push esi
0x84c5:     53                              	push ebx
0x84c6:     83 ec 5c                        	sub esp, 0x5c
0x84c9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x84cc:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x84cf:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x84d2:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x84d5:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x84db:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x84de:     31 c0                           	xor eax, eax
0x84e0:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x84e3:     3b 45 b4                        	cmp eax, dword ptr [ebp - 0x4c]
0x84e6:     0f 84 19 02 00 00               	je 0x8705 <_ZNSt6vectorIhSaIhEEaSERKS1_+0x245>
0x84ec:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x84ef:     89 04 24                        	mov dword ptr [esp], eax
0x84f2:     e8 73 78 00 00                  	call 0xfd6a
0x84f7:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x84fa:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x84fd:     89 04 24                        	mov dword ptr [esp], eax
0x8500:     e8 03 db 00 00                  	call 0x16008 <function_16008>
0x8505:     3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x8508:     0f 92 c0                        	setb al
0x850b:     84 c0                           	test al, al
0x850d:     0f 84 bd 00 00 00               	je 0x85d0 <_ZNSt6vectorIhSaIhEEaSERKS1_+0x110>
0x8513:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0x8516:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x8519:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x851d:     89 04 24                        	mov dword ptr [esp], eax
0x8520:     e8 b5 7d 00 00                  	call 0x102da <function_102da>
0x8525:     83 ec 04                        	sub esp, 4
0x8528:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x852b:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x852e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8532:     89 04 24                        	mov dword ptr [esp], eax
0x8535:     e8 50 7d 00 00                  	call 0x1028a <function_1028a>
0x853a:     83 ec 04                        	sub esp, 4
0x853d:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8540:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x8544:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8547:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x854b:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x854e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8552:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8555:     89 04 24                        	mov dword ptr [esp], eax
0x8558:     e8 e9 da 00 00                  	call 0x16046 <function_16046>
0x855d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8560:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8563:     89 04 24                        	mov dword ptr [esp], eax
0x8566:     e8 cd d8 00 00                  	call 0x15e38
0x856b:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x856e:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x8571:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8574:     8b 12                           	mov edx, dword ptr [edx]
0x8576:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x857a:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x857e:     89 14 24                        	mov dword ptr [esp], edx
0x8581:     e8 df d8 00 00                  	call 0x15e65
0x8586:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8589:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0x858c:     89 c2                           	mov edx, eax
0x858e:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8591:     8b 00                           	mov eax, dword ptr [eax]
0x8593:     89 d1                           	mov ecx, edx
0x8595:     29 c1                           	sub ecx, eax
0x8597:     89 c8                           	mov eax, ecx
0x8599:     89 c1                           	mov ecx, eax
0x859b:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x859e:     8b 10                           	mov edx, dword ptr [eax]
0x85a0:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x85a3:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x85a7:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x85ab:     89 04 24                        	mov dword ptr [esp], eax
0x85ae:     e8 4d db 00 00                  	call 0x16100 <function_16100>
0x85b3:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x85b6:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x85b9:     89 10                           	mov dword ptr [eax], edx
0x85bb:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x85be:     8b 00                           	mov eax, dword ptr [eax]
0x85c0:     89 c2                           	mov edx, eax
0x85c2:     03 55 dc                        	add edx, dword ptr [ebp - 0x24]
0x85c5:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x85c8:     89 50 08                        	mov dword ptr [eax + 8], edx
0x85cb:     e9 25 01 00 00                  	jmp 0x86f5 <_ZNSt6vectorIhSaIhEEaSERKS1_+0x235>
0x85d0:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x85d3:     89 04 24                        	mov dword ptr [esp], eax
0x85d6:     e8 8f 77 00 00                  	call 0xfd6a
0x85db:     3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x85de:     0f 93 c0                        	setae al
0x85e1:     84 c0                           	test al, al
0x85e3:     0f 84 9c 00 00 00               	je 0x8685 <_ZNSt6vectorIhSaIhEEaSERKS1_+0x1c5>
0x85e9:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x85ec:     89 04 24                        	mov dword ptr [esp], eax
0x85ef:     e8 44 d8 00 00                  	call 0x15e38
0x85f4:     89 c3                           	mov ebx, eax
0x85f6:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x85f9:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x85fc:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8600:     89 04 24                        	mov dword ptr [esp], eax
0x8603:     e8 28 90 00 00                  	call 0x11630 <function_11630>
0x8608:     83 ec 04                        	sub esp, 4
0x860b:     8d 45 d0                        	lea eax, [ebp - 0x30]
0x860e:     8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8611:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8615:     89 04 24                        	mov dword ptr [esp], eax
0x8618:     e8 eb 8c 00 00                  	call 0x11308
0x861d:     83 ec 04                        	sub esp, 4
0x8620:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x8623:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x8626:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x862a:     89 04 24                        	mov dword ptr [esp], eax
0x862d:     e8 a8 7c 00 00                  	call 0x102da <function_102da>
0x8632:     83 ec 04                        	sub esp, 4
0x8635:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x8638:     8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x863b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x863f:     89 04 24                        	mov dword ptr [esp], eax
0x8642:     e8 43 7c 00 00                  	call 0x1028a <function_1028a>
0x8647:     83 ec 04                        	sub esp, 4
0x864a:     8d 45 d4                        	lea eax, [ebp - 0x2c]
0x864d:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x8650:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x8654:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x8657:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x865b:     8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x865e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8662:     89 04 24                        	mov dword ptr [esp], eax
0x8665:     e8 eb da 00 00                  	call 0x16155 <function_16155>
0x866a:     83 ec 04                        	sub esp, 4
0x866d:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x8671:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8674:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8678:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x867b:     89 04 24                        	mov dword ptr [esp], eax
0x867e:     e8 60 db 00 00                  	call 0x161e3 <function_161e3>
0x8683:     eb 70                           	jmp 0x86f5 <_ZNSt6vectorIhSaIhEEaSERKS1_+0x235>
0x8685:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8688:     8b 18                           	mov ebx, dword ptr [eax]
0x868a:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x868d:     8b 30                           	mov esi, dword ptr [eax]
0x868f:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8692:     89 04 24                        	mov dword ptr [esp], eax
0x8695:     e8 d0 76 00 00                  	call 0xfd6a
0x869a:     8d 14 06                        	lea edx, [esi + eax]
0x869d:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x86a0:     8b 00                           	mov eax, dword ptr [eax]
0x86a2:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x86a6:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x86aa:     89 04 24                        	mov dword ptr [esp], eax
0x86ad:     e8 79 db 00 00                  	call 0x1622b <function_1622b>
0x86b2:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x86b5:     89 04 24                        	mov dword ptr [esp], eax
0x86b8:     e8 7b d7 00 00                  	call 0x15e38
0x86bd:     89 c3                           	mov ebx, eax
0x86bf:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x86c2:     8b 78 04                        	mov edi, dword ptr [eax + 4]
0x86c5:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x86c8:     8b 70 04                        	mov esi, dword ptr [eax + 4]
0x86cb:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x86ce:     8b 00                           	mov eax, dword ptr [eax]
0x86d0:     89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x86d3:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x86d6:     89 04 24                        	mov dword ptr [esp], eax
0x86d9:     e8 8c 76 00 00                  	call 0xfd6a
0x86de:     03 45 ac                        	add eax, dword ptr [ebp - 0x54]
0x86e1:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x86e5:     89 7c 24 08                     	mov dword ptr [esp + 8], edi
0x86e9:     89 74 24 04                     	mov dword ptr [esp + 4], esi
0x86ed:     89 04 24                        	mov dword ptr [esp], eax
0x86f0:     e8 9c db 00 00                  	call 0x16291 <function_16291>
0x86f5:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x86f8:     8b 00                           	mov eax, dword ptr [eax]
0x86fa:     89 c2                           	mov edx, eax
0x86fc:     03 55 dc                        	add edx, dword ptr [ebp - 0x24]
0x86ff:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8702:     89 50 04                        	mov dword ptr [eax + 4], edx
0x8705:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8708:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x870b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8712:     74 05                           	je 0x8719 <_ZNSt6vectorIhSaIhEEaSERKS1_+0x259>
0x8714:     e8 fc ff ff ff                  	call 0x8715
0x8719:     8d 65 f4                        	lea esp, [ebp - 0xc]
0x871c:     5b                              	pop ebx
0x871d:     5e                              	pop esi
0x871e:     5f                              	pop edi
0x871f:     5d                              	pop ebp
0x8720:     c3                              	ret 
; section: .text._ZN5boost3argILi1EEC2Ev
; function: _ZN5boost3argILi1EEC1Ev at 0x8722 -- 0x8745
0x8722:     55                              	push ebp
0x8723:     89 e5                           	mov ebp, esp
0x8725:     83 ec 28                        	sub esp, 0x28
0x8728:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x872b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x872e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8734:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8737:     31 c0                           	xor eax, eax
0x8739:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x873c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8743:     74 05                           	je 0x874a <function_874a>
; data inside code section at 0x8745 -- 0x8746
0x8745:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8746 -- 0x8747
; data inside code section at 0x8747 -- 0x874a
0x8747:     ff ff ff                                           |...             |
; function: function_874a at 0x874a -- 0x874c
0x874a:     c9                              	leave 
0x874b:     c3                              	ret 
; section: .text._ZN5boost3argILi2EEC2Ev
; function: _ZN5boost3argILi2EEC1Ev at 0x874c -- 0x876f
0x874c:     55                              	push ebp
0x874d:     89 e5                           	mov ebp, esp
0x874f:     83 ec 28                        	sub esp, 0x28
0x8752:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8755:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8758:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x875e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8761:     31 c0                           	xor eax, eax
0x8763:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8766:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x876d:     74 05                           	je 0x8774 <function_8774>
; data inside code section at 0x876f -- 0x8770
0x876f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8770 -- 0x8771
; data inside code section at 0x8771 -- 0x8774
0x8771:     ff ff ff                                           |...             |
; function: function_8774 at 0x8774 -- 0x8776
0x8774:     c9                              	leave 
0x8775:     c3                              	ret 
; section: .text._ZN5boost3argILi3EEC2Ev
; function: _ZN5boost3argILi3EEC1Ev at 0x8776 -- 0x8799
0x8776:     55                              	push ebp
0x8777:     89 e5                           	mov ebp, esp
0x8779:     83 ec 28                        	sub esp, 0x28
0x877c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x877f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8782:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8788:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x878b:     31 c0                           	xor eax, eax
0x878d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8790:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8797:     74 05                           	je 0x879e <function_879e>
; data inside code section at 0x8799 -- 0x879a
0x8799:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x879a -- 0x879b
; data inside code section at 0x879b -- 0x879e
0x879b:     ff ff ff                                           |...             |
; function: function_879e at 0x879e -- 0x87a0
0x879e:     c9                              	leave 
0x879f:     c3                              	ret 
; section: .text._ZN5boost3argILi4EEC2Ev
; function: _ZN5boost3argILi4EEC1Ev at 0x87a0 -- 0x87c3
0x87a0:     55                              	push ebp
0x87a1:     89 e5                           	mov ebp, esp
0x87a3:     83 ec 28                        	sub esp, 0x28
0x87a6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x87a9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x87ac:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x87b2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x87b5:     31 c0                           	xor eax, eax
0x87b7:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x87ba:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x87c1:     74 05                           	je 0x87c8 <function_87c8>
; data inside code section at 0x87c3 -- 0x87c4
0x87c3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x87c4 -- 0x87c5
; data inside code section at 0x87c5 -- 0x87c8
0x87c5:     ff ff ff                                           |...             |
; function: function_87c8 at 0x87c8 -- 0x87ca
0x87c8:     c9                              	leave 
0x87c9:     c3                              	ret 
; section: .text._ZN5boost3argILi5EEC2Ev
; function: _ZN5boost3argILi5EEC1Ev at 0x87ca -- 0x87ed
0x87ca:     55                              	push ebp
0x87cb:     89 e5                           	mov ebp, esp
0x87cd:     83 ec 28                        	sub esp, 0x28
0x87d0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x87d3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x87d6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x87dc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x87df:     31 c0                           	xor eax, eax
0x87e1:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x87e4:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x87eb:     74 05                           	je 0x87f2 <function_87f2>
; data inside code section at 0x87ed -- 0x87ee
0x87ed:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x87ee -- 0x87ef
; data inside code section at 0x87ef -- 0x87f2
0x87ef:     ff ff ff                                           |...             |
; function: function_87f2 at 0x87f2 -- 0x87f4
0x87f2:     c9                              	leave 
0x87f3:     c3                              	ret 
; section: .text._ZN5boost3argILi6EEC2Ev
; function: _ZN5boost3argILi6EEC1Ev at 0x87f4 -- 0x8817
0x87f4:     55                              	push ebp
0x87f5:     89 e5                           	mov ebp, esp
0x87f7:     83 ec 28                        	sub esp, 0x28
0x87fa:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x87fd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8800:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8806:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8809:     31 c0                           	xor eax, eax
0x880b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x880e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8815:     74 05                           	je 0x881c <function_881c>
; data inside code section at 0x8817 -- 0x8818
0x8817:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8818 -- 0x8819
; data inside code section at 0x8819 -- 0x881c
0x8819:     ff ff ff                                           |...             |
; function: function_881c at 0x881c -- 0x881e
0x881c:     c9                              	leave 
0x881d:     c3                              	ret 
; section: .text._ZN5boost3argILi7EEC2Ev
; function: _ZN5boost3argILi7EEC1Ev at 0x881e -- 0x8841
0x881e:     55                              	push ebp
0x881f:     89 e5                           	mov ebp, esp
0x8821:     83 ec 28                        	sub esp, 0x28
0x8824:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8827:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x882a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8830:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8833:     31 c0                           	xor eax, eax
0x8835:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8838:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x883f:     74 05                           	je 0x8846 <function_8846>
; data inside code section at 0x8841 -- 0x8842
0x8841:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8842 -- 0x8843
; data inside code section at 0x8843 -- 0x8846
0x8843:     ff ff ff                                           |...             |
; function: function_8846 at 0x8846 -- 0x8848
0x8846:     c9                              	leave 
0x8847:     c3                              	ret 
; section: .text._ZN5boost3argILi8EEC2Ev
; function: _ZN5boost3argILi8EEC1Ev at 0x8848 -- 0x886b
0x8848:     55                              	push ebp
0x8849:     89 e5                           	mov ebp, esp
0x884b:     83 ec 28                        	sub esp, 0x28
0x884e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8851:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8854:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x885a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x885d:     31 c0                           	xor eax, eax
0x885f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8862:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8869:     74 05                           	je 0x8870 <function_8870>
; data inside code section at 0x886b -- 0x886c
0x886b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x886c -- 0x886d
; data inside code section at 0x886d -- 0x8870
0x886d:     ff ff ff                                           |...             |
; function: function_8870 at 0x8870 -- 0x8872
0x8870:     c9                              	leave 
0x8871:     c3                              	ret 
; section: .text._ZN5boost3argILi9EEC2Ev
; function: _ZN5boost3argILi9EEC1Ev at 0x8872 -- 0x8895
0x8872:     55                              	push ebp
0x8873:     89 e5                           	mov ebp, esp
0x8875:     83 ec 28                        	sub esp, 0x28
0x8878:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x887b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x887e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8884:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8887:     31 c0                           	xor eax, eax
0x8889:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x888c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8893:     74 05                           	je 0x889a <function_889a>
; data inside code section at 0x8895 -- 0x8896
0x8895:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8896 -- 0x8897
; data inside code section at 0x8897 -- 0x889a
0x8897:     ff ff ff                                           |...             |
; function: function_889a at 0x889a -- 0x889c
0x889a:     c9                              	leave 
0x889b:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_ at 0x889c -- 0x88e3
0x889c:     55                              	push ebp
0x889d:     89 e5                           	mov ebp, esp
0x889f:     83 ec 38                        	sub esp, 0x38
0x88a2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x88a5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x88a8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x88ab:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x88ae:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x88b4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x88b7:     31 c0                           	xor eax, eax
0x88b9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x88bc:     89 04 24                        	mov dword ptr [esp], eax
0x88bf:     e8 46 d0 00 00                  	call 0x1590a
0x88c4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x88c7:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x88ca:     89 10                           	mov dword ptr [eax], edx
0x88cc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x88cf:     89 04 24                        	mov dword ptr [esp], eax
0x88d2:     e8 eb dd 00 00                  	call 0x166c2 <function_166c2>
0x88d7:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x88da:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x88e1:     74 05                           	je 0x88e8 <function_88e8>
; data inside code section at 0x88e3 -- 0x88e4
0x88e3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x88e4 -- 0x88e5
; data inside code section at 0x88e5 -- 0x88e8
0x88e5:     ff ff ff                                           |...             |
; function: function_88e8 at 0x88e8 -- 0x88ea
0x88e8:     c9                              	leave 
0x88e9:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_ at 0x88ea -- 0x8928
0x88ea:     55                              	push ebp
0x88eb:     89 e5                           	mov ebp, esp
0x88ed:     83 ec 38                        	sub esp, 0x38
0x88f0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x88f3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x88f6:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x88f9:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x88fc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8902:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8905:     31 c0                           	xor eax, eax
0x8907:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x890a:     8b 10                           	mov edx, dword ptr [eax]
0x890c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x890f:     89 10                           	mov dword ptr [eax], edx
0x8911:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8914:     89 04 24                        	mov dword ptr [esp], eax
0x8917:     e8 f4 dd 00 00                  	call 0x16710 <function_16710>
0x891c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x891f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8926:     74 05                           	je 0x892d <function_892d>
; data inside code section at 0x8928 -- 0x8929
0x8928:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8929 -- 0x892a
; data inside code section at 0x892a -- 0x892d
0x892a:     ff ff ff                                           |...             |
; function: function_892d at 0x892d -- 0x892f
0x892d:     c9                              	leave 
0x892e:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10bad_alloc_C2Ev
; function: _ZN5boost16exception_detail10bad_alloc_C1Ev at 0x8930 -- 0x897f
0x8930:     55                              	push ebp
0x8931:     89 e5                           	mov ebp, esp
0x8933:     83 ec 38                        	sub esp, 0x38
0x8936:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8939:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x893c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8942:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8945:     31 c0                           	xor eax, eax
0x8947:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x894a:     89 04 24                        	mov dword ptr [esp], eax
0x894d:     e8 b8 2a 00 00                  	call 0xb40a <function_b40a>
0x8952:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8955:     83 c0 14                        	add eax, 0x14
0x8958:     89 04 24                        	mov dword ptr [esp], eax
0x895b:     e8 f0 1e 00 00                  	call 0xa850 <function_a850>
0x8960:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8963:     c7 00 ac b6 01 00               	mov dword ptr [eax], 0x1b6ac
0x8969:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x896c:     c7 40 14 bc b6 01 00            	mov dword ptr [eax + 0x14], 0x1b6bc
0x8973:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8976:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x897d:     74 05                           	je 0x8984 <function_8984>
; data inside code section at 0x897f -- 0x8980
0x897f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8980 -- 0x8981
; data inside code section at 0x8981 -- 0x8984
0x8981:     ff ff ff                                           |...             |
; function: function_8984 at 0x8984 -- 0x8986
0x8984:     c9                              	leave 
0x8985:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x8986 -- 0x8990
0x8986:     83 6c 24 04 14                  	sub dword ptr [esp + 4], 0x14
0x898b:     e9 86 89 00 00                  	jmp 0x11316
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x8990 -- 0x89c3
0x8990:     55                              	push ebp
0x8991:     89 e5                           	mov ebp, esp
0x8993:     83 ec 38                        	sub esp, 0x38
0x8996:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8999:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x899c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x89a2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x89a5:     31 c0                           	xor eax, eax
0x89a7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x89aa:     c7 00 ac b6 01 00               	mov dword ptr [eax], 0x1b6ac
0x89b0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x89b3:     c7 40 14 bc b6 01 00            	mov dword ptr [eax + 0x14], 0x1b6bc
0x89ba:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x89bd:     83 c0 14                        	add eax, 0x14
0x89c0:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x89c3 -- 0x89c4
0x89c3:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x89c4 -- 0x89c5
; data inside code section at 0x89c5 -- 0x89e6
0x89c5:     ff ff ff 8b 45 e4 89 04  24 e8 f7 2a 00 00 b8 00   |....E...$..*....|
0x89d5:     00 00 00 83 e0 01 84 c0  74 0b 8b 45 e4 89 04 24   |........t..E...$|
0x89e5:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x89e6 -- 0x89e7
; data inside code section at 0x89e7 -- 0x89e9
0x89e7:     ff ff                                              |..              |
; function: function_89e9 at 0x89e9 -- 0x89fd
0x89e9:     ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0x89ef:     05 14 00 00 00                  	add eax, 0x14
0x89f4:     74 05                           	je 0x89fb <function_89e9+0x12>
0x89f6:     e8 fc ff ff ff                  	call 0x89f7
0x89fb:     c9                              	leave 
0x89fc:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x89fe -- 0x8a05
0x89fe:     83 6c 24 04 14                  	sub dword ptr [esp + 4], 0x14
0x8a03:     eb 01                           	jmp 0x8a06 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x8a05 -- 0x8a06
0x8a05:     90                                                 |.               |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x8a06 -- 0x8a2e
0x8a06:     55                              	push ebp
0x8a07:     89 e5                           	mov ebp, esp
0x8a09:     83 ec 38                        	sub esp, 0x38
0x8a0c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8a0f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8a12:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8a18:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8a1b:     31 c0                           	xor eax, eax
0x8a1d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8a20:     89 04 24                        	mov dword ptr [esp], eax
0x8a23:     e8 66 89 00 00                  	call 0x1138e <function_1138e>
0x8a28:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8a2b:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x8a2e -- 0x8a2f
0x8a2e:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x8a2f -- 0x8a30
; data inside code section at 0x8a30 -- 0x8a40
0x8a30:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x8a40 -- 0x8a41
; data inside code section at 0x8a41 -- 0x8a43
0x8a41:     ff ff                                              |..              |
; function: function_8a43 at 0x8a43 -- 0x8a46
0x8a43:     ff c9                           	dec ecx
0x8a45:     c3                              	ret 
; section: .text._ZNSt9bad_allocC2ERKS_
; function: _ZNSt9bad_allocC1ERKS_ at 0x8a46 -- 0x8a52
0x8a46:     55                              	push ebp
0x8a47:     89 e5                           	mov ebp, esp
0x8a49:     83 ec 38                        	sub esp, 0x38
0x8a4c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8a4f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0x8a52 -- 0x8a7a
0x8a52:     8b 45 0c 89 45 e0 65 a1  14 00 00 00 89 45 f4 31   |.E..E.e......E.1|
0x8a62:     c0 8b 55 e0 8b 45 e4 89  54 24 04 89 04 24 e8 9d   |..U..E..T$...$..|
0x8a72:     49 00 00 8b 45 e4 c7 00                            |I...E...        |
; dynamically linked function: _ZTVSt9bad_alloc at 0x8a7a -- 0x8a8a
; data inside code section at 0x8a8a -- 0x8a8b
0x8a8a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8a8b -- 0x8a8c
; data inside code section at 0x8a8c -- 0x8a8f
0x8a8c:     ff ff ff                                           |...             |
; function: function_8a8f at 0x8a8f -- 0x8a91
0x8a8f:     c9                              	leave 
0x8a90:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_
; function: _ZN5boost16exception_detail10bad_alloc_C1ERKS1_ at 0x8a92 -- 0x8ac1
0x8a92:     55                              	push ebp
0x8a93:     89 e5                           	mov ebp, esp
0x8a95:     83 ec 38                        	sub esp, 0x38
0x8a98:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8a9b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8a9e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8aa1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8aa4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8aaa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8aad:     31 c0                           	xor eax, eax
0x8aaf:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8ab2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8ab5:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8ab9:     89 04 24                        	mov dword ptr [esp], eax
0x8abc:     e8 99 4d 00 00                  	call 0xd85a <function_d85a>
; data inside code section at 0x8ac1 -- 0x8ac2
0x8ac1:     8b                                                 |.               |
; function: function_8ac2 at 0x8ac2 -- 0x8af8
0x8ac2:     45                              	inc ebp
0x8ac3:     e0 8d                           	loopne 0x8a52
0x8ac5:     50                              	push eax
0x8ac6:     14 8b                           	adc al, 0x8b
0x8ac8:     45                              	inc ebp
0x8ac9:     e4 83                           	in al, 0x83
0x8acb:     c0 14 89 54                     	rcl byte ptr [ecx + ecx*4], 0x54
0x8acf:     24 04                           	and al, 4
0x8ad1:     89 04 24                        	mov dword ptr [esp], eax
0x8ad4:     e8 ff 89 00 00                  	call 0x114d8 <function_114d8>
0x8ad9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8adc:     c7 00 ac b6 01 00               	mov dword ptr [eax], 0x1b6ac
0x8ae2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8ae5:     c7 40 14 bc b6 01 00            	mov dword ptr [eax + 0x14], 0x1b6bc
0x8aec:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8aef:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8af6:     74 05                           	je 0x8afd <function_8afd>
; data inside code section at 0x8af8 -- 0x8af9
0x8af8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8af9 -- 0x8afa
; data inside code section at 0x8afa -- 0x8afd
0x8afa:     ff ff ff                                           |...             |
; function: function_8afd at 0x8afd -- 0x8aff
0x8afd:     c9                              	leave 
0x8afe:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC2ERKS3_
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_ at 0x8b00 -- 0x8b1b
0x8b00:     55                              	push ebp
0x8b01:     89 e5                           	mov ebp, esp
0x8b03:     83 ec 38                        	sub esp, 0x38
0x8b06:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8b09:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8b0c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8b0f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8b12:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8b18:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0x8b1b -- 0x8b1c
0x8b1b:     31                                                 |1               |
; function: function_8b1c at 0x8b1c -- 0x8b70
0x8b1c:     c0 8b 55 e0 8b 45 e4            	ror byte ptr [ebx + 0x458be055], 0xe4
0x8b23:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8b27:     89 04 24                        	mov dword ptr [esp], eax
0x8b2a:     e8 63 8a 00 00                  	call 0x11592 <function_11592>
0x8b2f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8b32:     8d 50 18                        	lea edx, [eax + 0x18]
0x8b35:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8b38:     83 c0 18                        	add eax, 0x18
0x8b3b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8b3f:     89 04 24                        	mov dword ptr [esp], eax
0x8b42:     e8 ad 7a 00 00                  	call 0x105f4 <function_105f4>
0x8b47:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8b4a:     c7 00 4c b6 01 00               	mov dword ptr [eax], 0x1b64c
0x8b50:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8b53:     c7 40 14 64 b6 01 00            	mov dword ptr [eax + 0x14], 0x1b664
0x8b5a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8b5d:     c7 40 18 78 b6 01 00            	mov dword ptr [eax + 0x18], 0x1b678
0x8b64:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x8b67:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x8b6e:     74 05                           	je 0x8b75 <function_8b75>
; data inside code section at 0x8b70 -- 0x8b71
0x8b70:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8b71 -- 0x8b72
; data inside code section at 0x8b72 -- 0x8b75
0x8b72:     ff ff ff                                           |...             |
; function: function_8b75 at 0x8b75 -- 0x8b77
0x8b75:     c9                              	leave 
0x8b76:     c3                              	ret 
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x8b7c -- 0x8c2f
0x8b7c:     55                              	push ebp
0x8b7d:     89 e5                           	mov ebp, esp
0x8b7f:     57                              	push edi
0x8b80:     56                              	push esi
0x8b81:     53                              	push ebx
0x8b82:     83 ec 7c                        	sub esp, 0x7c
0x8b85:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8b88:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8b8b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8b91:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8b94:     31 c0                           	xor eax, eax
0x8b96:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x8b99:     89 04 24                        	mov dword ptr [esp], eax
0x8b9c:     e8 0b 89 00 00                  	call 0x114ac
0x8ba1:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x8ba4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8ba8:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0x8bab:     89 04 24                        	mov dword ptr [esp], eax
0x8bae:     e8 6d de 00 00                  	call 0x16a20 <function_16a20>
0x8bb3:     c7 44 24 04 51 00 00 00         	mov dword ptr [esp + 4], 0x51
0x8bbb:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x8bbe:     89 04 24                        	mov dword ptr [esp], eax
0x8bc1:     e8 58 2a 00 00                  	call 0xb61e
0x8bc6:     c7 44 24 04 9c 3e 00 00         	mov dword ptr [esp + 4], 0x3e9c ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x8bce:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x8bd1:     89 04 24                        	mov dword ptr [esp], eax
0x8bd4:     e8 0d 2a 00 00                  	call 0xb5e6
0x8bd9:     c7 44 24 04 64 40 00 00         	mov dword ptr [esp + 4], 0x4064 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x8be1:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x8be4:     89 04 24                        	mov dword ptr [esp], eax
0x8be7:     e8 c2 29 00 00                  	call 0xb5ae
0x8bec:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x8bef:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8bf3:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0x8bf6:     89 04 24                        	mov dword ptr [esp], eax
0x8bf9:     e8 a8 df 00 00                  	call 0x16ba6 <function_16ba6>
0x8bfe:     8d 55 dc                        	lea edx, [ebp - 0x24]
0x8c01:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8c05:     89 04 24                        	mov dword ptr [esp], eax
0x8c08:     e8 db df 00 00                  	call 0x16be8 <function_16be8>
0x8c0d:     8d 55 d8                        	lea edx, [ebp - 0x28]
0x8c10:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8c14:     89 04 24                        	mov dword ptr [esp], eax
0x8c17:     e8 0e e0 00 00                  	call 0x16c2a <function_16c2a>
0x8c1c:     b8 7c 8b 00 00                  	mov eax, 0x8b7c
0x8c21:     0f b6 00                        	movzx eax, byte ptr [eax]
0x8c24:     84 c0                           	test al, al
0x8c26:     75 70                           	jne 0x8c98 <function_8c98>
0x8c28:     c7 04 24 7c 8b 00 00            	mov dword ptr [esp], 0x8b7c
; data inside code section at 0x8c2f -- 0x8c30
0x8c2f:     e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x8c30 -- 0x8c31
; data inside code section at 0x8c31 -- 0x8c4a
0x8c31:     ff ff ff 85 c0 0f 95 c0  84 c0 74 5b be 00 00 00   |..........t[....|
0x8c41:     00 c7 04 24 1c 00 00 00  e8                        |...$.....       |
; dynamically linked function: _Znwj at 0x8c4a -- 0x8c4b
; data inside code section at 0x8c4b -- 0x8c4f
0x8c4b:     ff ff ff 89                                        |....            |
; function: function_8c4f at 0x8c4f -- 0x8c50
0x8c4f:     c3                              	ret 
; data inside code section at 0x8c50 -- 0x8c77
0x8c50:     8d 45 a4 89 44 24 04 89  1c 24 e8 1d 8a 00 00 89   |.E..D$...$......|
0x8c60:     5c 24 04 c7 04 24 14 bb  01 00 e8 fd df 00 00 c7   |\$...$..........|
0x8c70:     04 24 7c 8b 00 00 e8                               |.$|....         |
; dynamically linked function: __cxa_guard_release at 0x8c77 -- 0x8c78
; data inside code section at 0x8c78 -- 0x8c84
0x8c78:     ff ff ff b8 3e 4e 00 00  c7 44 24 08               |....>N...D$.    |
; dynamically linked function: __dso_handle at 0x8c84 -- 0x8c93
; data inside code section at 0x8c93 -- 0x8c94
0x8c93:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x8c94 -- 0x8c95
; data inside code section at 0x8c95 -- 0x8c98
0x8c95:     ff ff ff                                           |...             |
; function: function_8c98 at 0x8c98 -- 0x8ca0
0x8c98:     c7 44 24 04 14 bb 01 00         	mov dword ptr [esp + 4], 0x1bb14
; data inside code section at 0x8ca0 -- 0x8ca2
0x8ca0:     8b 45                                              |.E              |
; function: function_8ca2 at 0x8ca2 -- 0x8cd2
0x8ca2:     94                              	xchg eax, esp
0x8ca3:     89 04 24                        	mov dword ptr [esp], eax
0x8ca6:     e8 47 4d 00 00                  	call 0xd9f2 <function_d9f2>
0x8cab:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0x8cae:     89 04 24                        	mov dword ptr [esp], eax
0x8cb1:     e8 2a de 00 00                  	call 0x16ae0 <function_16ae0>
0x8cb6:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x8cb9:     89 04 24                        	mov dword ptr [esp], eax
0x8cbc:     e8 4b 88 00 00                  	call 0x1150c <function_1150c>
0x8cc1:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8cc4:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8cc7:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8cce:     74 51                           	je 0x8d21 <function_8d21>
0x8cd0:     eb 4a                           	jmp 0x8d1c <function_8d1c>
; data inside code section at 0x8cd2 -- 0x8cd8
0x8cd2:     89 c7 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZdlPv at 0x8cd8 -- 0x8cd9
; data inside code section at 0x8cd9 -- 0x8cdb
0x8cd9:     ff ff                                              |..              |
; function: function_8cdb at 0x8cdb -- 0x8ce2
0x8cdb:     ff 89 fb eb 02 89               	dec dword ptr [ecx - 0x76fd1405]
0x8ce1:     c3                              	ret 
; data inside code section at 0x8ce2 -- 0x8cf0
0x8ce2:     89 f0 84 c0 75 0c c7 04  24 7c 8b 00 00 e8         |....u...$|....  |
; dynamically linked function: __cxa_guard_abort at 0x8cf0 -- 0x8cf1
; data inside code section at 0x8cf1 -- 0x8cf4
0x8cf1:     ff ff ff                                           |...             |
; function: function_8cf4 at 0x8cf4 -- 0x8cf6
0x8cf4:     eb 02                           	jmp 0x8cf8 <function_8cf8>
; function: function_8cf6 at 0x8cf6 -- 0x8cf8
0x8cf6:     89 c3                           	mov ebx, eax
; function: function_8cf8 at 0x8cf8 -- 0x8d05
0x8cf8:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0x8cfb:     89 04 24                        	mov dword ptr [esp], eax
0x8cfe:     e8 dd dd 00 00                  	call 0x16ae0 <function_16ae0>
0x8d03:     eb 02                           	jmp 0x8d07 <function_8d07>
; function: function_8d05 at 0x8d05 -- 0x8d07
0x8d05:     89 c3                           	mov ebx, eax
; function: function_8d07 at 0x8d07 -- 0x8d17
0x8d07:     8d 45 c0                        	lea eax, [ebp - 0x40]
0x8d0a:     89 04 24                        	mov dword ptr [esp], eax
0x8d0d:     e8 fa 87 00 00                  	call 0x1150c <function_1150c>
0x8d12:     89 d8                           	mov eax, ebx
0x8d14:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x8d17 -- 0x8d18
0x8d17:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x8d18 -- 0x8d19
; data inside code section at 0x8d19 -- 0x8d1c
0x8d19:     ff ff ff                                           |...             |
; function: function_8d1c at 0x8d1c -- 0x8d1d
; dynamically linked function: __stack_chk_fail at 0x8d1d -- 0x8d1e
; data inside code section at 0x8d1e -- 0x8d21
0x8d1e:     ff ff ff                                           |...             |
; function: function_8d21 at 0x8d21 -- 0x8d2b
0x8d21:     83 c4 7c                        	add esp, 0x7c
0x8d24:     5b                              	pop ebx
0x8d25:     5e                              	pop esi
0x8d26:     5f                              	pop edi
0x8d27:     5d                              	pop ebp
0x8d28:     c2 04 00                        	ret 4
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv at 0x8d2c -- 0x8d54
0x8d2c:     55                              	push ebp
0x8d2d:     89 e5                           	mov ebp, esp
0x8d2f:     83 ec 28                        	sub esp, 0x28
0x8d32:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8d35:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8d38:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8d3e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8d41:     31 c0                           	xor eax, eax
0x8d43:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8d46:     8b 00                           	mov eax, dword ptr [eax]
0x8d48:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8d4b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8d52:     74 05                           	je 0x8d59 <function_8d59>
; data inside code section at 0x8d54 -- 0x8d55
0x8d54:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8d55 -- 0x8d56
; data inside code section at 0x8d56 -- 0x8d59
0x8d56:     ff ff ff                                           |...             |
; function: function_8d59 at 0x8d59 -- 0x8d5b
0x8d59:     c9                              	leave 
0x8d5a:     c3                              	ret 
; section: .text._ZNSs6appendIPKcEERSsT_S3_
; function: _ZNSs6appendIPKcEERSsT_S3_ at 0x8d5c -- 0x8d8c
0x8d5c:     55                              	push ebp
0x8d5d:     89 e5                           	mov ebp, esp
0x8d5f:     83 ec 48                        	sub esp, 0x48
0x8d62:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8d65:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8d68:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8d6b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8d6e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8d71:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8d74:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8d7a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8d7d:     31 c0                           	xor eax, eax
0x8d7f:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x8d82:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8d85:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8d89:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x8d8c -- 0x8d8d
0x8d8c:     e8                                                 |.               |
; dynamically linked function: _ZNKSs7_M_iendEv at 0x8d8d -- 0x8d8e
; data inside code section at 0x8d8e -- 0x8da2
0x8d8e:     ff ff ff 83 ec 04 8d 45  ec 8b 55 e4 89 54 24 04   |.......E..U..T$.|
0x8d9e:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNKSs7_M_iendEv at 0x8da2 -- 0x8da3
; data inside code section at 0x8da3 -- 0x8dcc
0x8da3:     ff ff ff 83 ec 04 8b 45  dc 89 44 24 10 8b 45 e0   |.......E..D$..E.|
0x8db3:     89 44 24 0c 8b 45 f0 89  44 24 08 8b 45 ec 89 44   |.D$..E..D$..E..D|
0x8dc3:     24 04 8b 45 e4 89 04 24  e8                        |$..E...$.       |
; dynamically linked function: _ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_ at 0x8dcc -- 0x8dcd
; data inside code section at 0x8dcd -- 0x8dce
0x8dcd:     ff                                                 |.               |
; function: function_8dce at 0x8dce -- 0x8dcf
; data inside code section at 0x8dcf -- 0x8ddd
0x8dcf:     ff 8b 55 f4 65 33 15 14  00 00 00 74 05 e8         |..U.e3.....t..  |
; dynamically linked function: __stack_chk_fail at 0x8ddd -- 0x8dde
; data inside code section at 0x8dde -- 0x8de0
0x8dde:     ff ff                                              |..              |
; function: function_8de0 at 0x8de0 -- 0x8de3
0x8de0:     ff c9                           	dec ecx
0x8de2:     c3                              	ret 
; section: .text._Z3REFI9CFlatDataERT_RKS1_
; function: _Z3REFI9CFlatDataERT_RKS1_ at 0x8de3 -- 0x8e09
0x8de3:     55                              	push ebp
0x8de4:     89 e5                           	mov ebp, esp
0x8de6:     83 ec 28                        	sub esp, 0x28
0x8de9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8dec:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8def:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8df5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8df8:     31 c0                           	xor eax, eax
0x8dfa:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8dfd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8e00:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8e07:     74 05                           	je 0x8e0e <function_8e0e>
; data inside code section at 0x8e09 -- 0x8e0a
0x8e09:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8e0a -- 0x8e0b
; data inside code section at 0x8e0b -- 0x8e0e
0x8e0b:     ff ff ff                                           |...             |
; function: function_8e0e at 0x8e0e -- 0x8e10
0x8e0e:     c9                              	leave 
0x8e0f:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEEixEj
; function: _ZNSt6vectorIhSaIhEEixEj at 0x8e10 -- 0x8e41
0x8e10:     55                              	push ebp
0x8e11:     89 e5                           	mov ebp, esp
0x8e13:     83 ec 28                        	sub esp, 0x28
0x8e16:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8e19:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8e1c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8e1f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8e22:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8e28:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8e2b:     31 c0                           	xor eax, eax
0x8e2d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8e30:     8b 00                           	mov eax, dword ptr [eax]
0x8e32:     03 45 e0                        	add eax, dword ptr [ebp - 0x20]
0x8e35:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8e38:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8e3f:     74 05                           	je 0x8e46 <function_8e46>
; data inside code section at 0x8e41 -- 0x8e42
0x8e41:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8e42 -- 0x8e43
; data inside code section at 0x8e43 -- 0x8e46
0x8e43:     ff ff ff                                           |...             |
; function: function_8e46 at 0x8e46 -- 0x8e48
0x8e46:     c9                              	leave 
0x8e47:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE5beginEv
; function: _ZNSt6vectorIhSaIhEE5beginEv at 0x8e48 -- 0x8e86
0x8e48:     55                              	push ebp
0x8e49:     89 e5                           	mov ebp, esp
0x8e4b:     83 ec 38                        	sub esp, 0x38
0x8e4e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8e51:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8e54:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8e57:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8e5a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8e60:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8e63:     31 c0                           	xor eax, eax
0x8e65:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8e68:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8e6c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8e6f:     89 04 24                        	mov dword ptr [esp], eax
0x8e72:     e8 37 e1 00 00                  	call 0x16fae <function_16fae>
0x8e77:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8e7a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8e7d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8e84:     74 05                           	je 0x8e8b <function_8e8b>
; data inside code section at 0x8e86 -- 0x8e87
0x8e86:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8e87 -- 0x8e88
; data inside code section at 0x8e88 -- 0x8e8b
0x8e88:     ff ff ff                                           |...             |
; function: function_8e8b at 0x8e8b -- 0x8e8f
0x8e8b:     c9                              	leave 
0x8e8c:     c2 04 00                        	ret 4
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplERKi
; function: _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplERKi at 0x8e90 -- 0x8ee3
0x8e90:     55                              	push ebp
0x8e91:     89 e5                           	mov ebp, esp
0x8e93:     83 ec 38                        	sub esp, 0x38
0x8e96:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8e99:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8e9c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8e9f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8ea2:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8ea5:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8ea8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8eae:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8eb1:     31 c0                           	xor eax, eax
0x8eb3:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8eb6:     8b 10                           	mov edx, dword ptr [eax]
0x8eb8:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8ebb:     8b 00                           	mov eax, dword ptr [eax]
0x8ebd:     01 d0                           	add eax, edx
0x8ebf:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8ec2:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x8ec5:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8ec9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8ecc:     89 04 24                        	mov dword ptr [esp], eax
0x8ecf:     e8 22 e1 00 00                  	call 0x16ff6 <function_16ff6>
0x8ed4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8ed7:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8eda:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8ee1:     74 05                           	je 0x8ee8 <function_8ee8>
; data inside code section at 0x8ee3 -- 0x8ee4
0x8ee3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8ee4 -- 0x8ee5
; data inside code section at 0x8ee5 -- 0x8ee8
0x8ee5:     ff ff ff                                           |...             |
; function: function_8ee8 at 0x8ee8 -- 0x8eec
0x8ee8:     c9                              	leave 
0x8ee9:     c2 04 00                        	ret 4
; section: .text._ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
; function: _ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_ at 0x8eec -- 0x8f85
0x8eec:     55                              	push ebp
0x8eed:     89 e5                           	mov ebp, esp
0x8eef:     53                              	push ebx
0x8ef0:     83 ec 34                        	sub esp, 0x34
0x8ef3:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8ef6:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8ef9:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8efc:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8eff:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8f02:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8f05:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8f08:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8f0b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8f11:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8f14:     31 c0                           	xor eax, eax
0x8f16:     eb 33                           	jmp 0x8f4b <_ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_+0x5f>
0x8f18:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x8f1b:     89 04 24                        	mov dword ptr [esp], eax
0x8f1e:     e8 69 e1 00 00                  	call 0x1708c <function_1708c>
0x8f23:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x8f26:     89 04 24                        	mov dword ptr [esp], eax
0x8f29:     e8 98 e1 00 00                  	call 0x170c6
0x8f2e:     89 c3                           	mov ebx, eax
0x8f30:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x8f33:     89 04 24                        	mov dword ptr [esp], eax
0x8f36:     e8 eb 92 00 00                  	call 0x12226 <function_12226>
0x8f3b:     0f b6 00                        	movzx eax, byte ptr [eax]
0x8f3e:     88 03                           	mov byte ptr [ebx], al
0x8f40:     8d 45 d8                        	lea eax, [ebp - 0x28]
0x8f43:     89 04 24                        	mov dword ptr [esp], eax
0x8f46:     e8 ab e1 00 00                  	call 0x170f6 <function_170f6>
0x8f4b:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x8f4e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8f52:     8d 45 e0                        	lea eax, [ebp - 0x20]
0x8f55:     89 04 24                        	mov dword ptr [esp], eax
0x8f58:     e8 b6 93 00 00                  	call 0x12313 <function_12313>
0x8f5d:     84 c0                           	test al, al
0x8f5f:     75 b7                           	jne 0x8f18 <_ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_+0x2c>
0x8f61:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8f64:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8f67:     89 10                           	mov dword ptr [eax], edx
0x8f69:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8f6c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x8f6f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x8f76:     74 05                           	je 0x8f7d <_ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_+0x91>
0x8f78:     e8 fc ff ff ff                  	call 0x8f79
0x8f7d:     83 c4 34                        	add esp, 0x34
0x8f80:     5b                              	pop ebx
0x8f81:     5d                              	pop ebp
0x8f82:     c2 04 00                        	ret 4
; section: .text._ZNSt6vectorIhSaIhEEC2ERKS1_
; function: _ZNSt6vectorIhSaIhEEC1ERKS1_ at 0x8f86 -- 0x903c
0x8f86:     55                              	push ebp
0x8f87:     89 e5                           	mov ebp, esp
0x8f89:     56                              	push esi
0x8f8a:     53                              	push ebx
0x8f8b:     83 ec 30                        	sub esp, 0x30
0x8f8e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8f91:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8f94:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8f97:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8f9a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x8fa0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x8fa3:     31 c0                           	xor eax, eax
0x8fa5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8fa8:     89 04 24                        	mov dword ptr [esp], eax
0x8fab:     e8 1a e2 00 00                  	call 0x171ca <function_171ca>
0x8fb0:     89 c3                           	mov ebx, eax
0x8fb2:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8fb5:     89 04 24                        	mov dword ptr [esp], eax
0x8fb8:     e8 73 78 00 00                  	call 0x10830 <function_10830>
0x8fbd:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8fc0:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x8fc4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x8fc8:     89 14 24                        	mov dword ptr [esp], edx
0x8fcb:     e8 f8 d9 00 00                  	call 0x169c8 <function_169c8>
0x8fd0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8fd3:     89 04 24                        	mov dword ptr [esp], eax
0x8fd6:     e8 23 d9 00 00                  	call 0x168fe
0x8fdb:     89 c3                           	mov ebx, eax
0x8fdd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8fe0:     8b 30                           	mov esi, dword ptr [eax]
0x8fe2:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x8fe5:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8fe8:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x8fec:     89 04 24                        	mov dword ptr [esp], eax
0x8fef:     e8 ac 7d 00 00                  	call 0x10da0 <function_10da0>
0x8ff4:     83 ec 04                        	sub esp, 4
0x8ff7:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x8ffa:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8ffd:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9001:     89 04 24                        	mov dword ptr [esp], eax
0x9004:     e8 47 7d 00 00                  	call 0x10d50 <function_10d50>
0x9009:     83 ec 04                        	sub esp, 4
0x900c:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x9010:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0x9014:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x9017:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x901b:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x901e:     89 04 24                        	mov dword ptr [esp], eax
0x9021:     e8 d1 e1 00 00                  	call 0x171f7 <function_171f7>
0x9026:     89 c2                           	mov edx, eax
0x9028:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x902b:     89 50 04                        	mov dword ptr [eax + 4], edx
0x902e:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9031:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9038:     74 1e                           	je 0x9058 <function_9058>
0x903a:     eb 17                           	jmp 0x9053 <function_9053>
; data inside code section at 0x903c -- 0x903d
0x903c:     89                                                 |.               |
; function: function_903d at 0x903d -- 0x903e
0x903d:     c3                              	ret 
; data inside code section at 0x903e -- 0x904f
0x903e:     8b 45 e4 89 04 24 e8 35  d8 00 00 89 d8 89 04 24   |.E...$.5.......$|
0x904e:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x904f -- 0x9050
; data inside code section at 0x9050 -- 0x9053
0x9050:     ff ff ff                                           |...             |
; function: function_9053 at 0x9053 -- 0x9058
0x9053:     e8 fc ff ff ff                  	call 0x9054
; function: function_9058 at 0x9058 -- 0x905f
0x9058:     8d 65 f8                        	lea esp, [ebp - 8]
0x905b:     5b                              	pop ebx
0x905c:     5e                              	pop esi
0x905d:     5d                              	pop ebp
0x905e:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_
; function: _ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_ at 0x9060 -- 0x9163
0x9060:     55                              	push ebp
0x9061:     89 e5                           	mov ebp, esp
0x9063:     53                              	push ebx
0x9064:     83 ec 44                        	sub esp, 0x44
0x9067:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x906a:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x906d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9070:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x9073:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9076:     89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x9079:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x907c:     89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x907f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9085:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9088:     31 c0                           	xor eax, eax
0x908a:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x908d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9091:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x9094:     89 04 24                        	mov dword ptr [esp], eax
0x9097:     e8 8a e2 00 00                  	call 0x17326
0x909c:     84 c0                           	test al, al
0x909e:     0f 84 a8 00 00 00               	je 0x914c <_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_+0xec>
0x90a4:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x90a7:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x90aa:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x90ae:     89 04 24                        	mov dword ptr [esp], eax
0x90b1:     e8 1a 91 00 00                  	call 0x121d0 <function_121d0>
0x90b6:     83 ec 04                        	sub esp, 4
0x90b9:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0x90bc:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x90c0:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x90c3:     89 04 24                        	mov dword ptr [esp], eax
0x90c6:     e8 5b e2 00 00                  	call 0x17326
0x90cb:     84 c0                           	test al, al
0x90cd:     74 38                           	je 0x9107 <_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_+0xa7>
0x90cf:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x90d2:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x90d5:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x90d9:     89 04 24                        	mov dword ptr [esp], eax
0x90dc:     e8 ef 90 00 00                  	call 0x121d0 <function_121d0>
0x90e1:     83 ec 04                        	sub esp, 4
0x90e4:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x90e7:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x90ea:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x90ee:     8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x90f1:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x90f5:     8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x90f8:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x90fc:     89 04 24                        	mov dword ptr [esp], eax
0x90ff:     e8 76 e2 00 00                  	call 0x1737a
0x9104:     83 ec 04                        	sub esp, 4
0x9107:     8d 45 cc                        	lea eax, [ebp - 0x34]
0x910a:     89 04 24                        	mov dword ptr [esp], eax
0x910d:     e8 54 e3 00 00                  	call 0x17466 <function_17466>
0x9112:     8b 18                           	mov ebx, dword ptr [eax]
0x9114:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9117:     8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x911a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x911e:     89 04 24                        	mov dword ptr [esp], eax
0x9121:     e8 aa 90 00 00                  	call 0x121d0 <function_121d0>
0x9126:     83 ec 04                        	sub esp, 4
0x9129:     8d 45 c8                        	lea eax, [ebp - 0x38]
0x912c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9130:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9133:     89 04 24                        	mov dword ptr [esp], eax
0x9136:     e8 f5 92 00 00                  	call 0x12430 <function_12430>
0x913b:     01 d8                           	add eax, ebx
0x913d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9141:     8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x9144:     89 04 24                        	mov dword ptr [esp], eax
0x9147:     e8 bc e2 00 00                  	call 0x17408 <function_17408>
0x914c:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x914f:     8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x9152:     89 10                           	mov dword ptr [eax], edx
0x9154:     8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x9157:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x915a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9161:     74 05                           	je 0x9168 <function_9168>
; data inside code section at 0x9163 -- 0x9164
0x9163:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9164 -- 0x9165
; data inside code section at 0x9165 -- 0x9168
0x9165:     ff ff ff                                           |...             |
; function: function_9168 at 0x9168 -- 0x916f
0x9168:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x916b:     c9                              	leave 
0x916c:     c2 04 00                        	ret 4
; section: .text._ZNSt6vectorIhSaIhEE3endEv
; function: _ZNSt6vectorIhSaIhEE3endEv at 0x9170 -- 0x91b1
0x9170:     55                              	push ebp
0x9171:     89 e5                           	mov ebp, esp
0x9173:     83 ec 38                        	sub esp, 0x38
0x9176:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9179:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x917c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x917f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9182:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9188:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x918b:     31 c0                           	xor eax, eax
0x918d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9190:     83 c0 04                        	add eax, 4
0x9193:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9197:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x919a:     89 04 24                        	mov dword ptr [esp], eax
0x919d:     e8 34 e1 00 00                  	call 0x172d6
0x91a2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x91a5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x91a8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x91af:     74 05                           	je 0x91b6 <function_91b6>
; data inside code section at 0x91b1 -- 0x91b2
0x91b1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x91b2 -- 0x91b3
; data inside code section at 0x91b3 -- 0x91b6
0x91b3:     ff ff ff                                           |...             |
; function: function_91b6 at 0x91b6 -- 0x91b7
0x91b6:     c9                              	leave 
; data inside code section at 0x91b7 -- 0x91b9
0x91b7:     c2 04                                              |..              |
; function: function_91b9 at 0x91b9 -- 0x91ba
; section: .text._ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
; function: _ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_ at 0x91ba -- 0x920f
0x91ba:     55                              	push ebp
0x91bb:     89 e5                           	mov ebp, esp
0x91bd:     53                              	push ebx
0x91be:     83 ec 34                        	sub esp, 0x34
0x91c1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x91c4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x91c7:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x91ca:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x91cd:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x91d3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x91d6:     31 c0                           	xor eax, eax
0x91d8:     8d 45 df                        	lea eax, [ebp - 0x21]
0x91db:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0x91de:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x91e2:     89 04 24                        	mov dword ptr [esp], eax
0x91e5:     e8 03 e4 00 00                  	call 0x175ed <function_175ed>
0x91ea:     83 ec 04                        	sub esp, 4
0x91ed:     88 5c 24 08                     	mov byte ptr [esp + 8], bl
0x91f1:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x91f4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x91f8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x91fb:     89 04 24                        	mov dword ptr [esp], eax
0x91fe:     e8 1f e4 00 00                  	call 0x17622 <function_17622>
0x9203:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9206:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x920d:     74 05                           	je 0x9214 <function_9214>
; data inside code section at 0x920f -- 0x9210
0x920f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9210 -- 0x9211
; data inside code section at 0x9211 -- 0x9214
0x9211:     ff ff ff                                           |...             |
; function: function_9214 at 0x9214 -- 0x9219
0x9214:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x9217:     c9                              	leave 
0x9218:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEEC2IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_
; function: _ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_ at 0x921a -- 0x921e
0x921a:     55                              	push ebp
0x921b:     89 e5                           	mov ebp, esp
0x921d:     53                              	push ebx
; data inside code section at 0x921e -- 0x9220
0x921e:     83 ec                                              |..              |
; function: function_9220 at 0x9220 -- 0x9275
0x9220:     34 8b                           	xor al, 0x8b
0x9222:     45                              	inc ebp
0x9223:     08 89 45 e4 8b 45               	or byte ptr [ecx + 0x458be445], cl
0x9229:     0c 89                           	or al, 0x89
0x922b:     45                              	inc ebp
0x922c:     e0 8b                           	loopne 0x91b9 <function_91b9>
0x922e:     45                              	inc ebp
0x922f:     10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x9235:     14 89                           	adc al, 0x89
0x9237:     45                              	inc ebp
0x9238:     d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x923b:     14 00                           	adc al, 0
0x923d:     00 00                           	add byte ptr [eax], al
0x923f:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9242:     31 c0                           	xor eax, eax
0x9244:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9247:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x924a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x924e:     89 04 24                        	mov dword ptr [esp], eax
0x9251:     e8 f2 e4 00 00                  	call 0x17748
0x9256:     88 5c 24 0c                     	mov byte ptr [esp + 0xc], bl
0x925a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x925d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x9261:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9264:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9268:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x926b:     89 04 24                        	mov dword ptr [esp], eax
0x926e:     e8 17 e5 00 00                  	call 0x1778a
0x9273:     eb 17                           	jmp 0x928c <function_928c>
; data inside code section at 0x9275 -- 0x9276
0x9275:     89                                                 |.               |
; function: function_9276 at 0x9276 -- 0x9277
0x9276:     c3                              	ret 
; data inside code section at 0x9277 -- 0x9288
0x9277:     8b 45 e4 89 04 24 e8 90  d8 00 00 89 d8 89 04 24   |.E...$.........$|
0x9287:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x9288 -- 0x9289
; data inside code section at 0x9289 -- 0x928c
0x9289:     ff ff ff                                           |...             |
; function: function_928c at 0x928c -- 0x9298
0x928c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x928f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9296:     74 05                           	je 0x929d <function_929d>
; data inside code section at 0x9298 -- 0x9299
0x9298:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9299 -- 0x929a
; data inside code section at 0x929a -- 0x929d
0x929a:     ff ff ff                                           |...             |
; function: function_929d at 0x929d -- 0x92a3
0x929d:     83 c4 34                        	add esp, 0x34
0x92a0:     5b                              	pop ebx
0x92a1:     5d                              	pop ebp
0x92a2:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE5clearEv
; function: _ZNSt6vectorIhSaIhEE5clearEv at 0x92a4 -- 0x92d2
0x92a4:     55                              	push ebp
0x92a5:     89 e5                           	mov ebp, esp
0x92a7:     83 ec 38                        	sub esp, 0x38
0x92aa:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x92ad:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x92b0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x92b6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x92b9:     31 c0                           	xor eax, eax
0x92bb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x92be:     8b 00                           	mov eax, dword ptr [eax]
0x92c0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x92c4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x92c7:     89 04 24                        	mov dword ptr [esp], eax
0x92ca:     e8 7d e3 00 00                  	call 0x1764c <function_1764c>
0x92cf:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; data inside code section at 0x92d2 -- 0x92d8
0x92d2:     65 33 05 14 00 00                                  |e3....          |
; function: function_92d8 at 0x92d8 -- 0x92dc
0x92d8:     00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
; dynamically linked function: __stack_chk_fail at 0x92dc -- 0x92dd
; data inside code section at 0x92dd -- 0x92df
0x92dd:     ff ff                                              |..              |
; function: function_92df at 0x92df -- 0x92e2
0x92df:     ff c9                           	dec ecx
0x92e1:     c3                              	ret 
; section: .text._ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_
; function: _ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ at 0x92e2 -- 0x92f5
0x92e2:     55                              	push ebp
0x92e3:     89 e5                           	mov ebp, esp
0x92e5:     53                              	push ebx
0x92e6:     83 ec 34                        	sub esp, 0x34
0x92e9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x92ec:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x92ef:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x92f2:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x92f5 -- 0x92fa
0x92f5:     65 a1 14 00 00                                     |e....           |
; function: function_92fa at 0x92fa -- 0x932e
0x92fa:     00 89 45 f4 31 c0               	add byte ptr [ecx - 0x3fce0bbb], cl
0x9300:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9303:     89 04 24                        	mov dword ptr [esp], eax
0x9306:     e8 f5 e5 00 00                  	call 0x17900
0x930b:     8b 00                           	mov eax, dword ptr [eax]
0x930d:     89 c3                           	mov ebx, eax
0x930f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9312:     89 04 24                        	mov dword ptr [esp], eax
0x9315:     e8 e6 e5 00 00                  	call 0x17900
0x931a:     8b 00                           	mov eax, dword ptr [eax]
0x931c:     89 da                           	mov edx, ebx
0x931e:     29 c2                           	sub edx, eax
0x9320:     89 d0                           	mov eax, edx
0x9322:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9325:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x932c:     74 05                           	je 0x9333 <function_9333>
; data inside code section at 0x932e -- 0x932f
0x932e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x932f -- 0x9330
; data inside code section at 0x9330 -- 0x9333
0x9330:     ff ff ff                                           |...             |
; function: function_9333 at 0x9333 -- 0x9339
0x9333:     83 c4 34                        	add esp, 0x34
0x9336:     5b                              	pop ebx
0x9337:     5d                              	pop ebp
0x9338:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEdeEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEdeEv at 0x933a -- 0x9362
0x933a:     55                              	push ebp
0x933b:     89 e5                           	mov ebp, esp
0x933d:     83 ec 28                        	sub esp, 0x28
0x9340:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9343:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9346:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x934c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x934f:     31 c0                           	xor eax, eax
0x9351:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9354:     8b 00                           	mov eax, dword ptr [eax]
0x9356:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9359:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9360:     74 05                           	je 0x9367 <function_9367>
; data inside code section at 0x9362 -- 0x9363
0x9362:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9363 -- 0x9364
; data inside code section at 0x9364 -- 0x9367
0x9364:     ff ff ff                                           |...             |
; function: function_9367 at 0x9367 -- 0x9369
0x9367:     c9                              	leave 
0x9368:     c3                              	ret 
; section: .text._ZNKSt6vectorIhSaIhEE5emptyEv
; function: _ZNKSt6vectorIhSaIhEE5emptyEv at 0x936a -- 0x93d0
0x936a:     55                              	push ebp
0x936b:     89 e5                           	mov ebp, esp
0x936d:     83 ec 38                        	sub esp, 0x38
0x9370:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9373:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9376:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x937c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x937f:     31 c0                           	xor eax, eax
0x9381:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x9384:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x9387:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x938b:     89 04 24                        	mov dword ptr [esp], eax
0x938e:     e8 f1 7d 00 00                  	call 0x11184
0x9393:     83 ec 04                        	sub esp, 4
0x9396:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9399:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x939c:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x93a0:     89 04 24                        	mov dword ptr [esp], eax
0x93a3:     e8 8c 7d 00 00                  	call 0x11134
0x93a8:     83 ec 04                        	sub esp, 4
0x93ab:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x93ae:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x93b2:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x93b5:     89 04 24                        	mov dword ptr [esp], eax
0x93b8:     e8 e5 d7 00 00                  	call 0x16ba2 <function_16ba2>
0x93bd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x93c0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x93c7:     74 05                           	je 0x93ce <_ZNKSt6vectorIhSaIhEE5emptyEv+0x64>
0x93c9:     e8 fc ff ff ff                  	call 0x93ca
0x93ce:     c9                              	leave 
0x93cf:     c3                              	ret 
; section: .text._ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
; function: _ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ at 0x93d0 -- 0x941c
0x93d0:     55                              	push ebp
0x93d1:     89 e5                           	mov ebp, esp
0x93d3:     53                              	push ebx
0x93d4:     83 ec 34                        	sub esp, 0x34
0x93d7:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x93da:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x93dd:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x93e0:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x93e3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x93e9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x93ec:     31 c0                           	xor eax, eax
0x93ee:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x93f1:     89 04 24                        	mov dword ptr [esp], eax
0x93f4:     e8 dd e3 00 00                  	call 0x177d6 <function_177d6>
0x93f9:     8b 00                           	mov eax, dword ptr [eax]
0x93fb:     89 c3                           	mov ebx, eax
0x93fd:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9400:     89 04 24                        	mov dword ptr [esp], eax
0x9403:     e8 ce e3 00 00                  	call 0x177d6 <function_177d6>
0x9408:     8b 00                           	mov eax, dword ptr [eax]
0x940a:     89 da                           	mov edx, ebx
0x940c:     29 c2                           	sub edx, eax
0x940e:     89 d0                           	mov eax, edx
0x9410:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9413:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x941a:     74 05                           	je 0x9421 <function_9421>
; data inside code section at 0x941c -- 0x941d
0x941c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x941d -- 0x941e
; data inside code section at 0x941e -- 0x9421
0x941e:     ff ff ff                                           |...             |
; function: function_9421 at 0x9421 -- 0x9427
0x9421:     83 c4 34                        	add esp, 0x34
0x9424:     5b                              	pop ebx
0x9425:     5d                              	pop ebp
0x9426:     c3                              	ret 
; section: .text._ZN9__gnu_cxxneIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_
; function: _ZN9__gnu_cxxneIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ at 0x9427 -- 0x9470
0x9427:     55                              	push ebp
0x9428:     89 e5                           	mov ebp, esp
0x942a:     53                              	push ebx
0x942b:     83 ec 34                        	sub esp, 0x34
0x942e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9431:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9434:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9437:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x943a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9440:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9443:     31 c0                           	xor eax, eax
0x9445:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9448:     89 04 24                        	mov dword ptr [esp], eax
0x944b:     e8 f5 e5 00 00                  	call 0x17a45 <function_17a45>
0x9450:     8b 18                           	mov ebx, dword ptr [eax]
0x9452:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9455:     89 04 24                        	mov dword ptr [esp], eax
0x9458:     e8 e8 e5 00 00                  	call 0x17a45 <function_17a45>
0x945d:     8b 00                           	mov eax, dword ptr [eax]
0x945f:     39 c3                           	cmp ebx, eax
0x9461:     0f 95 c0                        	setne al
0x9464:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9467:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x946e:     74 05                           	je 0x9475 <function_9475>
; data inside code section at 0x9470 -- 0x9471
0x9470:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9471 -- 0x9472
; data inside code section at 0x9472 -- 0x9475
0x9472:     ff ff ff                                           |...             |
; function: function_9475 at 0x9475 -- 0x947b
0x9475:     83 c4 34                        	add esp, 0x34
0x9478:     5b                              	pop ebx
0x9479:     5d                              	pop ebp
0x947a:     c3                              	ret 
; section: .text._Z3REFIjERT_RKS0_
; function: _Z3REFIjERT_RKS0_ at 0x947b -- 0x94a1
0x947b:     55                              	push ebp
0x947c:     89 e5                           	mov ebp, esp
0x947e:     83 ec 28                        	sub esp, 0x28
0x9481:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9484:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9487:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x948d:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9490:     31 c0                           	xor eax, eax
0x9492:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9495:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9498:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x949f:     74 05                           	je 0x94a6 <function_94a6>
; data inside code section at 0x94a1 -- 0x94a2
0x94a1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x94a2 -- 0x94a3
; data inside code section at 0x94a3 -- 0x94a6
0x94a3:     ff ff ff                                           |...             |
; function: function_94a6 at 0x94a6 -- 0x94a8
0x94a6:     c9                              	leave 
0x94a7:     c3                              	ret 
; section: .text._Z10WrapVarIntIjE7CVarIntIT_ERS1_
; function: _Z10WrapVarIntIjE7CVarIntIT_ERS1_ at 0x94a8 -- 0x94e6
0x94a8:     55                              	push ebp
0x94a9:     89 e5                           	mov ebp, esp
0x94ab:     83 ec 38                        	sub esp, 0x38
0x94ae:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x94b1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x94b4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x94b7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x94ba:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x94c0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x94c3:     31 c0                           	xor eax, eax
0x94c5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x94c8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x94cc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x94cf:     89 04 24                        	mov dword ptr [esp], eax
0x94d2:     e8 1d e6 00 00                  	call 0x17af4
0x94d7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x94da:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x94dd:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x94e4:     74 05                           	je 0x94eb <function_94eb>
; data inside code section at 0x94e6 -- 0x94e7
0x94e6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x94e7 -- 0x94e8
; data inside code section at 0x94e8 -- 0x94eb
0x94e8:     ff ff ff                                           |...             |
; function: function_94eb at 0x94eb -- 0x94ef
0x94eb:     c9                              	leave 
0x94ec:     c2 04 00                        	ret 4
; section: .text._Z3REFI7CVarIntIjEERT_RKS2_
; function: _Z3REFI7CVarIntIjEERT_RKS2_ at 0x94ef -- 0x951c
0x94ef:     55                              	push ebp
0x94f0:     89 e5                           	mov ebp, esp
0x94f2:     83 ec 28                        	sub esp, 0x28
0x94f5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x94f8:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x94fb:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9501:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9504:     31 c0                           	xor eax, eax
0x9506:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9509:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x950c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9513:     74 05                           	je 0x951a <_Z3REFI7CVarIntIjEERT_RKS2_+0x2b>
0x9515:     e8 fc ff ff ff                  	call 0x9516
0x951a:     c9                              	leave 
0x951b:     c3                              	ret 
; section: .text._ZNK7CVarIntIjE16GetSerializeSizeEii
; function: _ZNK7CVarIntIjE16GetSerializeSizeEii at 0x951c -- 0x955a
0x951c:     55                              	push ebp
0x951d:     89 e5                           	mov ebp, esp
0x951f:     83 ec 38                        	sub esp, 0x38
0x9522:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9525:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9528:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x952b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x952e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9531:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9534:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x953a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x953d:     31 c0                           	xor eax, eax
0x953f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9542:     8b 00                           	mov eax, dword ptr [eax]
0x9544:     8b 00                           	mov eax, dword ptr [eax]
0x9546:     89 04 24                        	mov dword ptr [esp], eax
0x9549:     e8 52 e6 00 00                  	call 0x17ba0
0x954e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9551:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9558:     74 05                           	je 0x955f <function_955f>
; data inside code section at 0x955a -- 0x955b
0x955a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x955b -- 0x955c
; data inside code section at 0x955c -- 0x955f
0x955c:     ff ff ff                                           |...             |
; function: function_955f at 0x955f -- 0x9561
0x955f:     c9                              	leave 
0x9560:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EEC2Ev
; function: _ZNSt6vectorI6CTxOutSaIS0_EEC1Ev at 0x9562 -- 0x9590
0x9562:     55                              	push ebp
0x9563:     89 e5                           	mov ebp, esp
0x9565:     83 ec 38                        	sub esp, 0x38
0x9568:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x956b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x956e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9574:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9577:     31 c0                           	xor eax, eax
0x9579:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x957c:     89 04 24                        	mov dword ptr [esp], eax
0x957f:     e8 e6 e6 00 00                  	call 0x17c6a
0x9584:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9587:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x958e:     74 05                           	je 0x9595 <function_9595>
; data inside code section at 0x9590 -- 0x9591
0x9590:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9591 -- 0x9592
; data inside code section at 0x9592 -- 0x9595
0x9592:     ff ff ff                                           |...             |
; function: function_9595 at 0x9595 -- 0x9597
0x9595:     c9                              	leave 
0x9596:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EED2Ev
; function: _ZNSt6vectorI6CTxOutSaIS0_EED1Ev at 0x9598 -- 0x95ef
0x9598:     55                              	push ebp
0x9599:     89 e5                           	mov ebp, esp
0x959b:     53                              	push ebx
0x959c:     83 ec 34                        	sub esp, 0x34
0x959f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x95a2:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x95a5:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x95ab:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x95ae:     31 c0                           	xor eax, eax
0x95b0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x95b3:     89 04 24                        	mov dword ptr [esp], eax
0x95b6:     e8 a5 e7 00 00                  	call 0x17d60
0x95bb:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x95be:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x95c1:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x95c4:     8b 12                           	mov edx, dword ptr [edx]
0x95c6:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x95ca:     89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x95ce:     89 14 24                        	mov dword ptr [esp], edx
0x95d1:     e8 b7 e7 00 00                  	call 0x17d8d <function_17d8d>
0x95d6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x95d9:     89 04 24                        	mov dword ptr [esp], eax
0x95dc:     e8 f5 e6 00 00                  	call 0x17cd6
0x95e1:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x95e4:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x95eb:     74 1e                           	je 0x960b <function_960b>
0x95ed:     eb 17                           	jmp 0x9606 <function_9606>
; data inside code section at 0x95ef -- 0x95f0
0x95ef:     89                                                 |.               |
; function: function_95f0 at 0x95f0 -- 0x95f1
0x95f0:     c3                              	ret 
; data inside code section at 0x95f1 -- 0x9602
0x95f1:     8b 45 e4 89 04 24 e8 da  e6 00 00 89 d8 89 04 24   |.E...$.........$|
0x9601:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x9602 -- 0x9603
; data inside code section at 0x9603 -- 0x9606
0x9603:     ff ff ff                                           |...             |
; function: function_9606 at 0x9606 -- 0x9607
; dynamically linked function: __stack_chk_fail at 0x9607 -- 0x9608
; data inside code section at 0x9608 -- 0x960b
0x9608:     ff ff ff                                           |...             |
; function: function_960b at 0x960b -- 0x9611
0x960b:     83 c4 34                        	add esp, 0x34
0x960e:     5b                              	pop ebx
0x960f:     5d                              	pop ebp
0x9610:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholderiEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholderiEjRT_RKT0_ii26CSerActionGetSerializeSize at 0x9611 -- 0x966f
0x9611:     55                              	push ebp
0x9612:     89 e5                           	mov ebp, esp
0x9614:     83 ec 48                        	sub esp, 0x48
0x9617:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x961a:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x961d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9620:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9623:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9626:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9629:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x962c:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x962f:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x9633:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x9636:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x963c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x963f:     31 c0                           	xor eax, eax
0x9641:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9644:     8b 00                           	mov eax, dword ptr [eax]
0x9646:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x9649:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x964d:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x9650:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9654:     89 04 24                        	mov dword ptr [esp], eax
0x9657:     e8 20 43 00 00                  	call 0xd97c <function_d97c>
0x965c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x965f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9666:     74 05                           	je 0x966d <_Z12SerReadWriteI21ser_streamplaceholderiEjRT_RKT0_ii26CSerActionGetSerializeSize+0x5c>
0x9668:     e8 fc ff ff ff                  	call 0x9669
0x966d:     c9                              	leave 
0x966e:     c3                              	ret 
; section: .text._ZNKSt6vectorI6CTxOutSaIS0_EE5emptyEv
; function: _ZNKSt6vectorI6CTxOutSaIS0_EE5emptyEv at 0x9670 -- 0x96cf
0x9670:     55                              	push ebp
0x9671:     89 e5                           	mov ebp, esp
0x9673:     83 ec 38                        	sub esp, 0x38
0x9676:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9679:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x967c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9682:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9685:     31 c0                           	xor eax, eax
0x9687:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x968a:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x968d:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9691:     89 04 24                        	mov dword ptr [esp], eax
0x9694:     e8 73 e8 00 00                  	call 0x17f0c <function_17f0c>
0x9699:     83 ec 04                        	sub esp, 4
0x969c:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x969f:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x96a2:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x96a6:     89 04 24                        	mov dword ptr [esp], eax
0x96a9:     e8 ae e8 00 00                  	call 0x17f5c <function_17f5c>
0x96ae:     83 ec 04                        	sub esp, 4
0x96b1:     8d 45 ec                        	lea eax, [ebp - 0x14]
0x96b4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x96b8:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x96bb:     89 04 24                        	mov dword ptr [esp], eax
0x96be:     e8 e8 e8 00 00                  	call 0x17fab <function_17fab>
0x96c3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x96c6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x96cd:     74 05                           	je 0x96d4 <function_96d4>
; data inside code section at 0x96cf -- 0x96d0
0x96cf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x96d0 -- 0x96d1
; data inside code section at 0x96d1 -- 0x96d4
0x96d1:     ff ff ff                                           |...             |
; function: function_96d4 at 0x96d4 -- 0x96d6
0x96d4:     c9                              	leave 
0x96d5:     c3                              	ret 
; section: .text._Z3REFIyERT_RKS0_
; function: _Z3REFIyERT_RKS0_ at 0x96d6 -- 0x96dc
0x96d6:     55                              	push ebp
0x96d7:     89 e5                           	mov ebp, esp
0x96d9:     83 ec 28                        	sub esp, 0x28
; function: function_96dc at 0x96dc -- 0x96fc
0x96dc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x96df:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x96e2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x96e8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x96eb:     31 c0                           	xor eax, eax
0x96ed:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x96f0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x96f3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x96fa:     74 05                           	je 0x9701 <function_9701>
; data inside code section at 0x96fc -- 0x96fd
0x96fc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x96fd -- 0x96fe
; data inside code section at 0x96fe -- 0x9701
0x96fe:     ff ff ff                                           |...             |
; function: function_9701 at 0x9701 -- 0x9703
0x9701:     c9                              	leave 
0x9702:     c3                              	ret 
; section: .text._Z10WrapVarIntIyE7CVarIntIT_ERS1_
; function: _Z10WrapVarIntIyE7CVarIntIT_ERS1_ at 0x9703 -- 0x9741
0x9703:     55                              	push ebp
0x9704:     89 e5                           	mov ebp, esp
0x9706:     83 ec 38                        	sub esp, 0x38
0x9709:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x970c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x970f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9712:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9715:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x971b:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x971e:     31 c0                           	xor eax, eax
0x9720:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9723:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9727:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x972a:     89 04 24                        	mov dword ptr [esp], eax
0x972d:     e8 61 e9 00 00                  	call 0x18093 <function_18093>
0x9732:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9735:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9738:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x973f:     74 05                           	je 0x9746 <function_9746>
; data inside code section at 0x9741 -- 0x9742
0x9741:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9742 -- 0x9743
; data inside code section at 0x9743 -- 0x9746
0x9743:     ff ff ff                                           |...             |
; function: function_9746 at 0x9746 -- 0x974a
0x9746:     c9                              	leave 
0x9747:     c2 04 00                        	ret 4
; section: .text._Z3REFI7CVarIntIyEERT_RKS2_
; function: _Z3REFI7CVarIntIyEERT_RKS2_ at 0x974a -- 0x9770
0x974a:     55                              	push ebp
0x974b:     89 e5                           	mov ebp, esp
0x974d:     83 ec 28                        	sub esp, 0x28
0x9750:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9753:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9756:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x975c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x975f:     31 c0                           	xor eax, eax
0x9761:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9764:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9767:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x976e:     74 05                           	je 0x9775 <function_9775>
; data inside code section at 0x9770 -- 0x9771
0x9770:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9771 -- 0x9772
; data inside code section at 0x9772 -- 0x9775
0x9772:     ff ff ff                                           |...             |
; function: function_9775 at 0x9775 -- 0x9777
0x9775:     c9                              	leave 
0x9776:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholder7CVarIntIyEEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholder7CVarIntIyEEjRT_RKT0_ii26CSerActionGetSerializeSize at 0x9777 -- 0x97cc
0x9777:     55                              	push ebp
0x9778:     89 e5                           	mov ebp, esp
0x977a:     83 ec 48                        	sub esp, 0x48
0x977d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9780:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9783:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9786:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9789:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x978c:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x978f:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x9792:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x9795:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x9799:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x979c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x97a2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x97a5:     31 c0                           	xor eax, eax
0x97a7:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x97aa:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x97ae:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x97b1:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x97b5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x97b8:     89 04 24                        	mov dword ptr [esp], eax
0x97bb:     e8 7f e9 00 00                  	call 0x1813f <function_1813f>
0x97c0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x97c3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x97ca:     74 05                           	je 0x97d1 <function_97d1>
; data inside code section at 0x97cc -- 0x97cd
0x97cc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x97cd -- 0x97ce
; data inside code section at 0x97ce -- 0x97d1
0x97ce:     ff ff ff                                           |...             |
; function: function_97d1 at 0x97d1 -- 0x97d3
0x97d1:     c9                              	leave 
0x97d2:     c3                              	ret 
; section: .text._Z3REFI7CScriptERT_RKS1_
; function: _Z3REFI7CScriptERT_RKS1_ at 0x97d3 -- 0x97f9
0x97d3:     55                              	push ebp
0x97d4:     89 e5                           	mov ebp, esp
0x97d6:     83 ec 28                        	sub esp, 0x28
0x97d9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x97dc:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x97df:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x97e5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x97e8:     31 c0                           	xor eax, eax
0x97ea:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x97ed:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x97f0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x97f7:     74 05                           	je 0x97fe <function_97fe>
; data inside code section at 0x97f9 -- 0x97fa
0x97f9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x97fa -- 0x97fb
; data inside code section at 0x97fb -- 0x97fe
0x97fb:     ff ff ff                                           |...             |
; function: function_97fe at 0x97fe -- 0x9800
0x97fe:     c9                              	leave 
0x97ff:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholder17CScriptCompressorEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholder17CScriptCompressorEjRT_RKT0_ii26CSerActionGetSerializeSize at 0x9800 -- 0x9855
0x9800:     55                              	push ebp
0x9801:     89 e5                           	mov ebp, esp
0x9803:     83 ec 48                        	sub esp, 0x48
0x9806:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9809:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x980c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x980f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9812:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9815:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9818:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x981b:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x981e:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x9822:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x9825:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x982b:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x982e:     31 c0                           	xor eax, eax
0x9830:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x9833:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x9837:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x983a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x983e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9841:     89 04 24                        	mov dword ptr [esp], eax
0x9844:     e8 ce e9 00 00                  	call 0x18217 <function_18217>
0x9849:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x984c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9853:     74 05                           	je 0x985a <function_985a>
; data inside code section at 0x9855 -- 0x9856
0x9855:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9856 -- 0x9857
; data inside code section at 0x9857 -- 0x985a
0x9857:     ff ff ff                                           |...             |
; function: function_985a at 0x985a -- 0x985c
0x985a:     c9                              	leave 
0x985b:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI7CVarIntIjEEjRKT_li
; function: _Z16GetSerializeSizeI7CVarIntIjEEjRKT_li at 0x985c -- 0x98a4
0x985c:     55                              	push ebp
0x985d:     89 e5                           	mov ebp, esp
0x985f:     83 ec 38                        	sub esp, 0x38
0x9862:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9865:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9868:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x986b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x986e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9871:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9874:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x987a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x987d:     31 c0                           	xor eax, eax
0x987f:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x9882:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x9886:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9889:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x988d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9890:     89 04 24                        	mov dword ptr [esp], eax
0x9893:     e8 e0 94 00 00                  	call 0x12d78 <function_12d78>
0x9898:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x989b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x98a2:     74 05                           	je 0x98a9 <function_98a9>
; data inside code section at 0x98a4 -- 0x98a5
0x98a4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x98a5 -- 0x98a6
; data inside code section at 0x98a6 -- 0x98a9
0x98a6:     ff ff ff                                           |...             |
; function: function_98a9 at 0x98a9 -- 0x98ab
0x98a9:     c9                              	leave 
0x98aa:     c3                              	ret 
; section: .text._Z3REFIiERT_RKS0_
; function: _Z3REFIiERT_RKS0_ at 0x98ab -- 0x98d1
0x98ab:     55                              	push ebp
0x98ac:     89 e5                           	mov ebp, esp
0x98ae:     83 ec 28                        	sub esp, 0x28
0x98b1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x98b4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x98b7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x98bd:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x98c0:     31 c0                           	xor eax, eax
0x98c2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x98c5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x98c8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x98cf:     74 05                           	je 0x98d6 <function_98d6>
; data inside code section at 0x98d1 -- 0x98d2
0x98d1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x98d2 -- 0x98d3
; data inside code section at 0x98d3 -- 0x98d6
0x98d3:     ff ff ff                                           |...             |
; function: function_98d6 at 0x98d6 -- 0x98d8
0x98d6:     c9                              	leave 
0x98d7:     c3                              	ret 
; section: .text._Z10WrapVarIntIiE7CVarIntIT_ERS1_
; function: _Z10WrapVarIntIiE7CVarIntIT_ERS1_ at 0x98d8 -- 0x9916
0x98d8:     55                              	push ebp
0x98d9:     89 e5                           	mov ebp, esp
0x98db:     83 ec 38                        	sub esp, 0x38
0x98de:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x98e1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x98e4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x98e7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x98ea:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x98f0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x98f3:     31 c0                           	xor eax, eax
0x98f5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x98f8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x98fc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x98ff:     89 04 24                        	mov dword ptr [esp], eax
0x9902:     e8 37 ea 00 00                  	call 0x1833e <function_1833e>
0x9907:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x990a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x990d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9914:     74 05                           	je 0x991b <function_991b>
; data inside code section at 0x9916 -- 0x9917
0x9916:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9917 -- 0x9918
; data inside code section at 0x9918 -- 0x991b
0x9918:     ff ff ff                                           |...             |
; function: function_991b at 0x991b -- 0x991c
0x991b:     c9                              	leave 
; data inside code section at 0x991c -- 0x991e
0x991c:     c2 04                                              |..              |
; function: function_991e at 0x991e -- 0x991f
; section: .text._Z3REFI7CVarIntIiEERT_RKS2_
; function: _Z3REFI7CVarIntIiEERT_RKS2_ at 0x991f -- 0x9945
0x991f:     55                              	push ebp
0x9920:     89 e5                           	mov ebp, esp
0x9922:     83 ec 28                        	sub esp, 0x28
0x9925:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9928:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x992b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9931:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9934:     31 c0                           	xor eax, eax
0x9936:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9939:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x993c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9943:     74 05                           	je 0x994a <function_994a>
; data inside code section at 0x9945 -- 0x9946
0x9945:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9946 -- 0x9947
; data inside code section at 0x9947 -- 0x994a
0x9947:     ff ff ff                                           |...             |
; function: function_994a at 0x994a -- 0x994c
0x994a:     c9                              	leave 
0x994b:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI7CVarIntIiEEjRKT_li
; function: _Z16GetSerializeSizeI7CVarIntIiEEjRKT_li at 0x994c -- 0x9994
0x994c:     55                              	push ebp
0x994d:     89 e5                           	mov ebp, esp
0x994f:     83 ec 38                        	sub esp, 0x38
0x9952:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9955:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9958:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x995b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x995e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9961:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9964:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x996a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x996d:     31 c0                           	xor eax, eax
0x996f:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x9972:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x9976:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9979:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x997d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9980:     89 04 24                        	mov dword ptr [esp], eax
0x9983:     e8 62 ea 00 00                  	call 0x183ea <function_183ea>
0x9988:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x998b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9992:     74 05                           	je 0x9999 <function_9999>
; data inside code section at 0x9994 -- 0x9995
0x9994:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9995 -- 0x9996
; data inside code section at 0x9996 -- 0x9999
0x9996:     ff ff ff                                           |...             |
; function: function_9999 at 0x9999 -- 0x999b
0x9999:     c9                              	leave 
0x999a:     c3                              	ret 
; section: .text._Z3REFI6CTxOutERT_RKS1_
; function: _Z3REFI6CTxOutERT_RKS1_ at 0x999b -- 0x99c8
0x999b:     55                              	push ebp
0x999c:     89 e5                           	mov ebp, esp
0x999e:     83 ec 28                        	sub esp, 0x28
0x99a1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x99a4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x99a7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x99ad:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x99b0:     31 c0                           	xor eax, eax
0x99b2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x99b5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x99b8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x99bf:     74 05                           	je 0x99c6 <_Z3REFI6CTxOutERT_RKS1_+0x2b>
0x99c1:     e8 fc ff ff ff                  	call 0x99c2
0x99c6:     c9                              	leave 
0x99c7:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI16CTxOutCompressorEjRKT_li
; function: _Z16GetSerializeSizeI16CTxOutCompressorEjRKT_li at 0x99c8 -- 0x9a10
0x99c8:     55                              	push ebp
0x99c9:     89 e5                           	mov ebp, esp
0x99cb:     83 ec 38                        	sub esp, 0x38
0x99ce:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x99d1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x99d4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x99d7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x99da:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x99dd:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x99e0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x99e6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x99e9:     31 c0                           	xor eax, eax
0x99eb:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x99ee:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x99f2:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x99f5:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x99f9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x99fc:     89 04 24                        	mov dword ptr [esp], eax
0x99ff:     e8 ae 5d 00 00                  	call 0xf7b2 <function_f7b2>
0x9a04:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9a07:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9a0e:     74 05                           	je 0x9a15 <function_9a15>
; data inside code section at 0x9a10 -- 0x9a11
0x9a10:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9a11 -- 0x9a12
; data inside code section at 0x9a12 -- 0x9a15
0x9a12:     ff ff ff                                           |...             |
; function: function_9a15 at 0x9a15 -- 0x9a17
0x9a15:     c9                              	leave 
0x9a16:     c3                              	ret 
; section: .text._ZNSaI6CTxOutEC2Ev
; function: _ZNSaI6CTxOutEC1Ev at 0x9a18 -- 0x9a46
0x9a18:     55                              	push ebp
0x9a19:     89 e5                           	mov ebp, esp
0x9a1b:     83 ec 38                        	sub esp, 0x38
0x9a1e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9a21:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9a24:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9a2a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9a2d:     31 c0                           	xor eax, eax
0x9a2f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9a32:     89 04 24                        	mov dword ptr [esp], eax
0x9a35:     e8 68 eb 00 00                  	call 0x185a2
0x9a3a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9a3d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9a44:     74 05                           	je 0x9a4b <function_9a4b>
; data inside code section at 0x9a46 -- 0x9a47
0x9a46:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9a47 -- 0x9a48
; data inside code section at 0x9a48 -- 0x9a4b
0x9a48:     ff ff ff                                           |...             |
; function: function_9a4b at 0x9a4b -- 0x9a4d
0x9a4b:     c9                              	leave 
0x9a4c:     c3                              	ret 
; section: .text._ZNSaI6CTxOutED2Ev
; function: _ZNSaI6CTxOutED1Ev at 0x9a4e -- 0x9a7c
0x9a4e:     55                              	push ebp
0x9a4f:     89 e5                           	mov ebp, esp
0x9a51:     83 ec 38                        	sub esp, 0x38
0x9a54:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9a57:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9a5a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9a60:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9a63:     31 c0                           	xor eax, eax
0x9a65:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9a68:     89 04 24                        	mov dword ptr [esp], eax
0x9a6b:     e8 92 eb 00 00                  	call 0x18602 <function_18602>
0x9a70:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9a73:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9a7a:     74 05                           	je 0x9a81 <function_9a81>
; data inside code section at 0x9a7c -- 0x9a7d
0x9a7c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9a7d -- 0x9a7e
; data inside code section at 0x9a7e -- 0x9a81
0x9a7e:     ff ff ff                                           |...             |
; function: function_9a81 at 0x9a81 -- 0x9a83
0x9a81:     c9                              	leave 
0x9a82:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EEC2EjRKS0_RKS1_
; function: _ZNSt6vectorI6CTxOutSaIS0_EEC1EjRKS0_RKS1_ at 0x9a84 -- 0x9ae2
0x9a84:     55                              	push ebp
0x9a85:     89 e5                           	mov ebp, esp
0x9a87:     53                              	push ebx
0x9a88:     83 ec 34                        	sub esp, 0x34
0x9a8b:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9a8e:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9a91:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9a94:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9a97:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9a9a:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9a9d:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x9aa0:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x9aa3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9aa9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9aac:     31 c0                           	xor eax, eax
0x9aae:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9ab1:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x9ab4:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x9ab8:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x9abb:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9abf:     89 04 24                        	mov dword ptr [esp], eax
0x9ac2:     e8 a1 ea 00 00                  	call 0x18568 <function_18568>
0x9ac7:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x9aca:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x9ace:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9ad1:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9ad5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9ad8:     89 04 24                        	mov dword ptr [esp], eax
0x9adb:     e8 82 eb 00 00                  	call 0x18662 <function_18662>
0x9ae0:     eb 17                           	jmp 0x9af9 <function_9af9>
; data inside code section at 0x9ae2 -- 0x9ae3
0x9ae2:     89                                                 |.               |
; function: function_9ae3 at 0x9ae3 -- 0x9ae4
0x9ae3:     c3                              	ret 
; data inside code section at 0x9ae4 -- 0x9af5
0x9ae4:     8b 45 e4 89 04 24 e8 d3  e6 00 00 89 d8 89 04 24   |.E...$.........$|
0x9af4:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x9af5 -- 0x9af6
; data inside code section at 0x9af6 -- 0x9af9
0x9af6:     ff ff ff                                           |...             |
; function: function_9af9 at 0x9af9 -- 0x9b05
0x9af9:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9afc:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9b03:     74 05                           	je 0x9b0a <function_9b0a>
; data inside code section at 0x9b05 -- 0x9b06
0x9b05:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9b06 -- 0x9b07
; data inside code section at 0x9b07 -- 0x9b0a
0x9b07:     ff ff ff                                           |...             |
; function: function_9b0a at 0x9b0a -- 0x9b10
0x9b0a:     83 c4 34                        	add esp, 0x34
0x9b0d:     5b                              	pop ebx
0x9b0e:     5d                              	pop ebp
0x9b0f:     c3                              	ret 
; section: .text._ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv
; function: _ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv at 0x9b10 -- 0x9b4f
0x9b10:     55                              	push ebp
0x9b11:     89 e5                           	mov ebp, esp
0x9b13:     83 ec 28                        	sub esp, 0x28
0x9b16:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9b19:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9b1c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9b22:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9b25:     31 c0                           	xor eax, eax
0x9b27:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9b2a:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x9b2d:     89 c2                           	mov edx, eax
0x9b2f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9b32:     8b 00                           	mov eax, dword ptr [eax]
0x9b34:     89 d1                           	mov ecx, edx
0x9b36:     29 c1                           	sub ecx, eax
0x9b38:     89 c8                           	mov eax, ecx
0x9b3a:     c1 f8 02                        	sar eax, 2
0x9b3d:     69 c0 cd cc cc cc               	imul eax, eax, 0xcccccccd
0x9b43:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9b46:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9b4d:     74 05                           	je 0x9b54 <function_9b54>
; data inside code section at 0x9b4f -- 0x9b50
0x9b4f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9b50 -- 0x9b51
; data inside code section at 0x9b51 -- 0x9b54
0x9b51:     ff ff ff                                           |...             |
; function: function_9b54 at 0x9b54 -- 0x9b56
0x9b54:     c9                              	leave 
0x9b55:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE4backEv
; function: _ZNSt6vectorI6CTxOutSaIS0_EE4backEv at 0x9b56 -- 0x9bbc
0x9b56:     55                              	push ebp
0x9b57:     89 e5                           	mov ebp, esp
0x9b59:     83 ec 38                        	sub esp, 0x38
0x9b5c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9b5f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9b62:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9b68:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9b6b:     31 c0                           	xor eax, eax
0x9b6d:     c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x9b74:     8d 45 e8                        	lea eax, [ebp - 0x18]
0x9b77:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x9b7a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9b7e:     89 04 24                        	mov dword ptr [esp], eax
0x9b81:     e8 1a ec 00 00                  	call 0x187a0 <function_187a0>
0x9b86:     83 ec 04                        	sub esp, 4
0x9b89:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9b8c:     8d 55 ec                        	lea edx, [ebp - 0x14]
0x9b8f:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0x9b93:     8d 55 e8                        	lea edx, [ebp - 0x18]
0x9b96:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9b9a:     89 04 24                        	mov dword ptr [esp], eax
0x9b9d:     e8 48 ec 00 00                  	call 0x187ea <function_187ea>
0x9ba2:     83 ec 04                        	sub esp, 4
0x9ba5:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9ba8:     89 04 24                        	mov dword ptr [esp], eax
0x9bab:     e8 a4 ec 00 00                  	call 0x18854 <function_18854>
0x9bb0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9bb3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9bba:     74 05                           	je 0x9bc1 <function_9bc1>
; data inside code section at 0x9bbc -- 0x9bbd
0x9bbc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9bbd -- 0x9bbe
; data inside code section at 0x9bbe -- 0x9bc1
0x9bbe:     ff ff ff                                           |...             |
; function: function_9bc1 at 0x9bc1 -- 0x9bc3
0x9bc1:     c9                              	leave 
0x9bc2:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE8pop_backEv
; function: _ZNSt6vectorI6CTxOutSaIS0_EE8pop_backEv at 0x9bc4 -- 0x9c0b
0x9bc4:     55                              	push ebp
0x9bc5:     89 e5                           	mov ebp, esp
0x9bc7:     83 ec 38                        	sub esp, 0x38
0x9bca:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9bcd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9bd0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9bd6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9bd9:     31 c0                           	xor eax, eax
0x9bdb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9bde:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0x9be1:     8d 50 ec                        	lea edx, [eax - 0x14]
0x9be4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9be7:     89 50 04                        	mov dword ptr [eax + 4], edx
0x9bea:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9bed:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0x9bf0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9bf3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9bf7:     89 04 24                        	mov dword ptr [esp], eax
0x9bfa:     e8 f3 ec 00 00                  	call 0x188f2 <function_188f2>
0x9bff:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9c02:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9c09:     74 05                           	je 0x9c10 <function_9c10>
; data inside code section at 0x9c0b -- 0x9c0c
0x9c0b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9c0c -- 0x9c0d
; data inside code section at 0x9c0d -- 0x9c10
0x9c0d:     ff ff ff                                           |...             |
; function: function_9c10 at 0x9c10 -- 0x9c12
0x9c10:     c9                              	leave 
0x9c11:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE4swapERS2_
; function: _ZNSt6vectorI6CTxOutSaIS0_EE4swapERS2_ at 0x9c12 -- 0x9ca2
0x9c12:     55                              	push ebp
0x9c13:     89 e5                           	mov ebp, esp
0x9c15:     53                              	push ebx
0x9c16:     83 ec 34                        	sub esp, 0x34
0x9c19:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9c1c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9c1f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9c22:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9c25:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9c2b:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9c2e:     31 c0                           	xor eax, eax
0x9c30:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x9c33:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9c36:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9c3a:     89 04 24                        	mov dword ptr [esp], eax
0x9c3d:     e8 39 ed 00 00                  	call 0x1897b <function_1897b>
0x9c42:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9c45:     8d 50 04                        	lea edx, [eax + 4]
0x9c48:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9c4b:     83 c0 04                        	add eax, 4
0x9c4e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9c52:     89 04 24                        	mov dword ptr [esp], eax
0x9c55:     e8 21 ed 00 00                  	call 0x1897b <function_1897b>
0x9c5a:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9c5d:     8d 50 08                        	lea edx, [eax + 8]
0x9c60:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9c63:     83 c0 08                        	add eax, 8
0x9c66:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9c6a:     89 04 24                        	mov dword ptr [esp], eax
0x9c6d:     e8 09 ed 00 00                  	call 0x1897b <function_1897b>
0x9c72:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9c75:     89 04 24                        	mov dword ptr [esp], eax
0x9c78:     e8 5d e7 00 00                  	call 0x183da <function_183da>
0x9c7d:     89 c3                           	mov ebx, eax
0x9c7f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9c82:     89 04 24                        	mov dword ptr [esp], eax
0x9c85:     e8 50 e7 00 00                  	call 0x183da <function_183da>
0x9c8a:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x9c8e:     89 04 24                        	mov dword ptr [esp], eax
0x9c91:     e8 2f ed 00 00                  	call 0x189c5 <function_189c5>
0x9c96:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9c99:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9ca0:     74 05                           	je 0x9ca7 <function_9ca7>
; data inside code section at 0x9ca2 -- 0x9ca3
0x9ca2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9ca3 -- 0x9ca4
; data inside code section at 0x9ca4 -- 0x9ca7
0x9ca4:     ff ff ff                                           |...             |
; function: function_9ca7 at 0x9ca7 -- 0x9cad
0x9ca7:     83 c4 34                        	add esp, 0x34
0x9caa:     5b                              	pop ebx
0x9cab:     5d                              	pop ebp
0x9cac:     c3                              	ret 
; section: .text._ZNKSt6vectorI6CTxOutSaIS0_EEixEj
; function: _ZNKSt6vectorI6CTxOutSaIS0_EEixEj at 0x9cae -- 0x9cf2
0x9cae:     55                              	push ebp
0x9caf:     89 e5                           	mov ebp, esp
0x9cb1:     83 ec 28                        	sub esp, 0x28
0x9cb4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9cb7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9cba:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9cbd:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9cc0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9cc6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9cc9:     31 c0                           	xor eax, eax
0x9ccb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9cce:     8b 08                           	mov ecx, dword ptr [eax]
0x9cd0:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x9cd3:     89 d0                           	mov eax, edx
0x9cd5:     c1 e0 02                        	shl eax, 2
0x9cd8:     01 d0                           	add eax, edx
0x9cda:     c1 e0 02                        	shl eax, 2
0x9cdd:     01 c8                           	add eax, ecx
0x9cdf:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9ce2:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9ce9:     74 05                           	je 0x9cf0 <_ZNKSt6vectorI6CTxOutSaIS0_EEixEj+0x42>
0x9ceb:     e8 fc ff ff ff                  	call 0x9cec
0x9cf0:     c9                              	leave 
0x9cf1:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_7containIKSt6vectorI6CTxOutSaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE
; function: _ZN5boost15foreach_detail_7containIKSt6vectorI6CTxOutSaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE at 0x9cf2 -- 0x9d44
0x9cf2:     55                              	push ebp
0x9cf3:     89 e5                           	mov ebp, esp
0x9cf5:     83 ec 38                        	sub esp, 0x38
0x9cf8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9cfb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9cfe:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9d01:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9d04:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9d07:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9d0a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9d10:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9d13:     31 c0                           	xor eax, eax
0x9d15:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9d18:     89 04 24                        	mov dword ptr [esp], eax
0x9d1b:     e8 b5 ed 00 00                  	call 0x18ad5 <function_18ad5>
0x9d20:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x9d23:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9d26:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9d2a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9d2d:     89 04 24                        	mov dword ptr [esp], eax
0x9d30:     e8 f7 ed 00 00                  	call 0x18b2c <function_18b2c>
0x9d35:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9d38:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9d3b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9d42:     74 05                           	je 0x9d49 <function_9d49>
; data inside code section at 0x9d44 -- 0x9d45
0x9d44:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9d45 -- 0x9d46
; data inside code section at 0x9d46 -- 0x9d49
0x9d46:     ff ff ff                                           |...             |
; function: function_9d49 at 0x9d49 -- 0x9d4d
0x9d49:     c9                              	leave 
0x9d4a:     c2 04 00                        	ret 4
; section: .text._ZN5boost15foreach_detail_5beginISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE
; function: _ZN5boost15foreach_detail_5beginISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE at 0x9d4d -- 0x9dbe
0x9d4d:     55                              	push ebp
0x9d4e:     89 e5                           	mov ebp, esp
0x9d50:     83 ec 38                        	sub esp, 0x38
0x9d53:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9d56:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9d59:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9d5c:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9d5f:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9d62:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9d65:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x9d68:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x9d6b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9d71:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9d74:     31 c0                           	xor eax, eax
0x9d76:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9d79:     89 04 24                        	mov dword ptr [esp], eax
0x9d7c:     e8 4b ee 00 00                  	call 0x18bcc
0x9d81:     8b 00                           	mov eax, dword ptr [eax]
0x9d83:     89 04 24                        	mov dword ptr [esp], eax
0x9d86:     e8 6e ee 00 00                  	call 0x18bf9 <function_18bf9>
0x9d8b:     8d 55 f0                        	lea edx, [ebp - 0x10]
0x9d8e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9d92:     89 14 24                        	mov dword ptr [esp], edx
0x9d95:     e8 8c ee 00 00                  	call 0x18c26 <function_18c26>
0x9d9a:     83 ec 04                        	sub esp, 4
0x9d9d:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9da0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9da4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9da7:     89 04 24                        	mov dword ptr [esp], eax
0x9daa:     e8 c2 ee 00 00                  	call 0x18c71 <function_18c71>
0x9daf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9db2:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9db5:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9dbc:     74 05                           	je 0x9dc3 <function_9dc3>
; data inside code section at 0x9dbe -- 0x9dbf
0x9dbe:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9dbf -- 0x9dc0
; data inside code section at 0x9dc0 -- 0x9dc3
0x9dc0:     ff ff ff                                           |...             |
; function: function_9dc3 at 0x9dc3 -- 0x9dc7
0x9dc3:     c9                              	leave 
0x9dc4:     c2 04 00                        	ret 4
; section: .text._ZN5boost15foreach_detail_3endISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE
; function: _ZN5boost15foreach_detail_3endISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE at 0x9dc7 -- 0x9de5
0x9dc7:     55                              	push ebp
0x9dc8:     89 e5                           	mov ebp, esp
0x9dca:     83 ec 38                        	sub esp, 0x38
0x9dcd:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9dd0:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9dd3:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9dd6:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9dd9:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9ddc:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9ddf:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x9de2:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
; data inside code section at 0x9de5 -- 0x9de6
0x9de5:     65                                                 |e               |
; function: function_9de6 at 0x9de6 -- 0x9e38
0x9de6:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x9deb:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9dee:     31 c0                           	xor eax, eax
0x9df0:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9df3:     89 04 24                        	mov dword ptr [esp], eax
0x9df6:     e8 4b ee 00 00                  	call 0x18c46 <function_18c46>
0x9dfb:     8b 00                           	mov eax, dword ptr [eax]
0x9dfd:     89 04 24                        	mov dword ptr [esp], eax
0x9e00:     e8 6e ee 00 00                  	call 0x18c73 <__cxa_rethrow>
0x9e05:     8d 55 f0                        	lea edx, [ebp - 0x10]
0x9e08:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9e0c:     89 14 24                        	mov dword ptr [esp], edx
0x9e0f:     e8 1c ef 00 00                  	call 0x18d30 <function_18d30>
0x9e14:     83 ec 04                        	sub esp, 4
0x9e17:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9e1a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9e1e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9e21:     89 04 24                        	mov dword ptr [esp], eax
0x9e24:     e8 c2 ee 00 00                  	call 0x18ceb <function_18ceb>
0x9e29:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9e2c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9e2f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9e36:     74 05                           	je 0x9e3d <function_9e3d>
; data inside code section at 0x9e38 -- 0x9e39
0x9e38:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9e39 -- 0x9e3a
; data inside code section at 0x9e3a -- 0x9e3d
0x9e3a:     ff ff ff                                           |...             |
; function: function_9e3d at 0x9e3d -- 0x9e41
0x9e3d:     c9                              	leave 
0x9e3e:     c2 04 00                        	ret 4
; section: .text._ZN5boost15foreach_detail_4doneISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE
; function: _ZN5boost15foreach_detail_4doneISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE at 0x9e41 -- 0x9ea0
0x9e41:     55                              	push ebp
0x9e42:     89 e5                           	mov ebp, esp
0x9e44:     53                              	push ebx
0x9e45:     83 ec 34                        	sub esp, 0x34
0x9e48:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9e4b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9e4e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9e51:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9e54:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9e57:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9e5a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9e60:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9e63:     31 c0                           	xor eax, eax
0x9e65:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9e68:     89 04 24                        	mov dword ptr [esp], eax
0x9e6b:     e8 84 ef 00 00                  	call 0x18df4 <function_18df4>
0x9e70:     89 c3                           	mov ebx, eax
0x9e72:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9e75:     89 04 24                        	mov dword ptr [esp], eax
0x9e78:     e8 77 ef 00 00                  	call 0x18df4 <function_18df4>
0x9e7d:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x9e81:     89 04 24                        	mov dword ptr [esp], eax
0x9e84:     e8 f3 e8 00 00                  	call 0x1877c <function_1877c>
0x9e89:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9e8c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9e93:     74 05                           	je 0x9e9a <_ZN5boost15foreach_detail_4doneISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE+0x59>
0x9e95:     e8 fc ff ff ff                  	call 0x9e96
0x9e9a:     83 c4 34                        	add esp, 0x34
0x9e9d:     5b                              	pop ebx
0x9e9e:     5d                              	pop ebp
0x9e9f:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_4nextISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE
; function: _ZN5boost15foreach_detail_4nextISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE at 0x9ea0 -- 0x9edc
0x9ea0:     55                              	push ebp
0x9ea1:     89 e5                           	mov ebp, esp
0x9ea3:     83 ec 38                        	sub esp, 0x38
0x9ea6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9ea9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9eac:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9eaf:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9eb2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9eb8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9ebb:     31 c0                           	xor eax, eax
0x9ebd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9ec0:     89 04 24                        	mov dword ptr [esp], eax
0x9ec3:     e8 8b ef 00 00                  	call 0x18e53 <function_18e53>
0x9ec8:     89 04 24                        	mov dword ptr [esp], eax
0x9ecb:     e8 b0 ef 00 00                  	call 0x18e80 <function_18e80>
0x9ed0:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x9ed3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x9eda:     74 05                           	je 0x9ee1 <function_9ee1>
; data inside code section at 0x9edc -- 0x9edd
0x9edc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9edd -- 0x9ede
; data inside code section at 0x9ede -- 0x9ee1
0x9ede:     ff ff ff                                           |...             |
; function: function_9ee1 at 0x9ee1 -- 0x9ee3
0x9ee1:     c9                              	leave 
0x9ee2:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_5derefISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE
; function: _ZN5boost15foreach_detail_5derefISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE at 0x9ee3 -- 0x9f1f
0x9ee3:     55                              	push ebp
0x9ee4:     89 e5                           	mov ebp, esp
0x9ee6:     83 ec 38                        	sub esp, 0x38
0x9ee9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9eec:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9eef:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9ef2:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9ef5:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9efb:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9efe:     31 c0                           	xor eax, eax
0x9f00:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9f03:     89 04 24                        	mov dword ptr [esp], eax
0x9f06:     e8 8b ef 00 00                  	call 0x18e96 <function_18e96>
0x9f0b:     89 04 24                        	mov dword ptr [esp], eax
0x9f0e:     e8 ea ef 00 00                  	call 0x18efd <function_18efd>
0x9f13:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9f16:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9f1d:     74 05                           	je 0x9f24 <function_9f24>
; data inside code section at 0x9f1f -- 0x9f20
0x9f1f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9f20 -- 0x9f21
; data inside code section at 0x9f21 -- 0x9f24
0x9f21:     ff ff ff                                           |...             |
; function: function_9f24 at 0x9f24 -- 0x9f26
0x9f24:     c9                              	leave 
0x9f25:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholder7uint256EjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholder7uint256EjRT_RKT0_ii26CSerActionGetSerializeSize at 0x9f26 -- 0x9f7b
0x9f26:     55                              	push ebp
0x9f27:     89 e5                           	mov ebp, esp
0x9f29:     83 ec 48                        	sub esp, 0x48
0x9f2c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x9f2f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x9f32:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x9f35:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x9f38:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9f3b:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x9f3e:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x9f41:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x9f44:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x9f48:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x9f4b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9f51:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9f54:     31 c0                           	xor eax, eax
0x9f56:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x9f59:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0x9f5d:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x9f60:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9f64:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x9f67:     89 04 24                        	mov dword ptr [esp], eax
0x9f6a:     e8 00 f0 00 00                  	call 0x18f6f <function_18f6f>
0x9f6f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x9f72:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x9f79:     74 05                           	je 0x9f80 <function_9f80>
; data inside code section at 0x9f7b -- 0x9f7c
0x9f7b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9f7c -- 0x9f7d
; data inside code section at 0x9f7d -- 0x9f80
0x9f7d:     ff ff ff                                           |...             |
; function: function_9f80 at 0x9f80 -- 0x9f82
0x9f80:     c9                              	leave 
0x9f81:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE6resizeEjh
; function: _ZNSt6vectorIhSaIhEE6resizeEjh at 0x9f82 -- 0xa039
0x9f82:     55                              	push ebp
0x9f83:     89 e5                           	mov ebp, esp
0x9f85:     53                              	push ebx
0x9f86:     83 ec 34                        	sub esp, 0x34
0x9f89:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x9f8c:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x9f8f:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x9f92:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x9f95:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x9f98:     88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x9f9b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x9fa1:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x9fa4:     31 c0                           	xor eax, eax
0x9fa6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9fa9:     89 04 24                        	mov dword ptr [esp], eax
0x9fac:     e8 7b 78 00 00                  	call 0x1182c <function_1182c>
0x9fb1:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x9fb4:     0f 92 c0                        	setb al
0x9fb7:     84 c0                           	test al, al
0x9fb9:     74 46                           	je 0xa001 <_ZNSt6vectorIhSaIhEE6resizeEjh+0x7f>
0x9fbb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9fbe:     89 04 24                        	mov dword ptr [esp], eax
0x9fc1:     e8 66 78 00 00                  	call 0x1182c <function_1182c>
0x9fc6:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x9fc9:     89 d3                           	mov ebx, edx
0x9fcb:     29 c3                           	sub ebx, eax
0x9fcd:     8d 45 f0                        	lea eax, [ebp - 0x10]
0x9fd0:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x9fd3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0x9fd7:     89 04 24                        	mov dword ptr [esp], eax
0x9fda:     e8 13 91 00 00                  	call 0x130f2 <function_130f2>
0x9fdf:     83 ec 04                        	sub esp, 4
0x9fe2:     8d 45 dc                        	lea eax, [ebp - 0x24]
0x9fe5:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x9fe9:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x9fed:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x9ff0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0x9ff4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x9ff7:     89 04 24                        	mov dword ptr [esp], eax
0x9ffa:     e8 1b f0 00 00                  	call 0x1901a <function_1901a>
0x9fff:     eb 2c                           	jmp 0xa02d <_ZNSt6vectorIhSaIhEE6resizeEjh+0xab>
0xa001:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa004:     89 04 24                        	mov dword ptr [esp], eax
0xa007:     e8 20 78 00 00                  	call 0x1182c <function_1182c>
0xa00c:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0xa00f:     0f 97 c0                        	seta al
0xa012:     84 c0                           	test al, al
0xa014:     74 17                           	je 0xa02d <_ZNSt6vectorIhSaIhEE6resizeEjh+0xab>
0xa016:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa019:     8b 00                           	mov eax, dword ptr [eax]
0xa01b:     03 45 e0                        	add eax, dword ptr [ebp - 0x20]
0xa01e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa022:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa025:     89 04 24                        	mov dword ptr [esp], eax
0xa028:     e8 fd e2 00 00                  	call 0x1832a <function_1832a>
0xa02d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xa030:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xa037:     74 05                           	je 0xa03e <function_a03e>
; data inside code section at 0xa039 -- 0xa03a
0xa039:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa03a -- 0xa03b
; data inside code section at 0xa03b -- 0xa03e
0xa03b:     ff ff ff                                           |...             |
; function: function_a03e at 0xa03e -- 0xa043
0xa03e:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0xa041:     c9                              	leave 
0xa042:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholder7CVarIntIiEEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholder7CVarIntIiEEjRT_RKT0_ii26CSerActionGetSerializeSize at 0xa043 -- 0xa098
0xa043:     55                              	push ebp
0xa044:     89 e5                           	mov ebp, esp
0xa046:     83 ec 48                        	sub esp, 0x48
0xa049:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa04c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa04f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa052:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa055:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa058:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xa05b:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xa05e:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xa061:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0xa065:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0xa068:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa06e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa071:     31 c0                           	xor eax, eax
0xa073:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0xa076:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xa07a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xa07d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa081:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xa084:     89 04 24                        	mov dword ptr [esp], eax
0xa087:     e8 03 99 00 00                  	call 0x1398f
0xa08c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa08f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa096:     74 05                           	je 0xa09d
; data inside code section at 0xa098 -- 0xa099
0xa098:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa099 -- 0xa09a
; data inside code section at 0xa09a -- 0xa09c
0xa09a:     ff ff                                              |..              |
; function: function_a09c at 0xa09c -- 0xa09f
0xa09c:     ff c9                           	dec ecx
0xa09e:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholder7CVarIntIjEEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholder7CVarIntIjEEjRT_RKT0_ii26CSerActionGetSerializeSize at 0xa09f -- 0xa0d2
0xa09f:     55                              	push ebp
0xa0a0:     89 e5                           	mov ebp, esp
0xa0a2:     83 ec 48                        	sub esp, 0x48
0xa0a5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa0a8:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa0ab:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa0ae:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa0b1:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa0b4:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xa0b7:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xa0ba:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xa0bd:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0xa0c1:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0xa0c4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa0ca:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa0cd:     31 c0                           	xor eax, eax
0xa0cf:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
; data inside code section at 0xa0d2 -- 0xa0d4
0xa0d2:     89 44                                              |.D              |
; function: function_a0d4 at 0xa0d4 -- 0xa0f4
0xa0d4:     24 08                           	and al, 8
0xa0d6:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xa0d9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa0dd:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xa0e0:     89 04 24                        	mov dword ptr [esp], eax
0xa0e3:     e8 13 98 00 00                  	call 0x138fb
0xa0e8:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa0eb:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa0f2:     74 05                           	je 0xa0f9 <function_a0f9>
; data inside code section at 0xa0f4 -- 0xa0f5
0xa0f4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa0f5 -- 0xa0f6
; data inside code section at 0xa0f6 -- 0xa0f9
0xa0f6:     ff ff ff                                           |...             |
; function: function_a0f9 at 0xa0f9 -- 0xa0fb
0xa0f9:     c9                              	leave 
0xa0fa:     c3                              	ret 
; section: .text._Z12SerReadWriteI21ser_streamplaceholder13CDiskBlockPosEjRT_RKT0_ii26CSerActionGetSerializeSize
; function: _Z12SerReadWriteI21ser_streamplaceholder13CDiskBlockPosEjRT_RKT0_ii26CSerActionGetSerializeSize at 0xa0fb -- 0xa120
0xa0fb:     55                              	push ebp
0xa0fc:     89 e5                           	mov ebp, esp
0xa0fe:     83 ec 48                        	sub esp, 0x48
0xa101:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa104:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa107:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa10a:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa10d:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa110:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xa113:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xa116:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xa119:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0xa11d:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
; data inside code section at 0xa120 -- 0xa122
0xa120:     65 a1                                              |e.              |
; function: function_a122 at 0xa122 -- 0xa135
0xa122:     14 00                           	adc al, 0
0xa124:     00 00                           	add byte ptr [eax], al
0xa126:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa129:     31 c0                           	xor eax, eax
0xa12b:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0xa12e:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xa132:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
; data inside code section at 0xa135 -- 0xa137
0xa135:     89 44                                              |.D              |
; function: function_a137 at 0xa137 -- 0xa150
0xa137:     24 04                           	and al, 4
0xa139:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xa13c:     89 04 24                        	mov dword ptr [esp], eax
0xa13f:     e8 ab f0 00 00                  	call 0x191ef <function_191ef>
0xa144:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa147:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa14e:     74 05                           	je 0xa155 <function_a155>
; data inside code section at 0xa150 -- 0xa151
0xa150:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa151 -- 0xa152
; function: function_a152 at 0xa152 -- 0xa153
; data inside code section at 0xa153 -- 0xa155
0xa153:     ff ff                                              |..              |
; function: function_a155 at 0xa155 -- 0xa157
0xa155:     c9                              	leave 
0xa156:     c3                              	ret 
; section: .text._ZN11CHashWriterlsI7uint256EERS_RKT_
; function: _ZN11CHashWriterlsI7uint256EERS_RKT_ at 0xa158 -- 0xa1aa
0xa158:     55                              	push ebp
0xa159:     89 e5                           	mov ebp, esp
0xa15b:     83 ec 38                        	sub esp, 0x38
0xa15e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa161:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa164:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa167:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa16a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa170:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa173:     31 c0                           	xor eax, eax
0xa175:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa178:     8b 50 74                        	mov edx, dword ptr [eax + 0x74]
0xa17b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa17e:     8b 40 70                        	mov eax, dword ptr [eax + 0x70]
0xa181:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xa185:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xa189:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xa18c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa190:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa193:     89 04 24                        	mov dword ptr [esp], eax
0xa196:     e8 00 f1 00 00                  	call 0x1929b <function_1929b>
0xa19b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa19e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa1a1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa1a8:     74 05                           	je 0xa1af <function_a1af>
; data inside code section at 0xa1aa -- 0xa1ab
0xa1aa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa1ab -- 0xa1ac
; data inside code section at 0xa1ac -- 0xa1af
0xa1ac:     ff ff ff                                           |...             |
; function: function_a1af at 0xa1af -- 0xa1b1
0xa1af:     c9                              	leave 
0xa1b0:     c3                              	ret 
; section: .text._ZNKSt6vectorIbSaIbEE4sizeEv
; function: _ZNKSt6vectorIbSaIbEE4sizeEv at 0xa1b2 -- 0xa1fd
0xa1b2:     55                              	push ebp
0xa1b3:     89 e5                           	mov ebp, esp
0xa1b5:     83 ec 48                        	sub esp, 0x48
0xa1b8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa1bb:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0xa1be:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa1c4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa1c7:     31 c0                           	xor eax, eax
0xa1c9:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xa1cc:     8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0xa1cf:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa1d3:     89 04 24                        	mov dword ptr [esp], eax
0xa1d6:     e8 03 f2 00 00                  	call 0x193de <function_193de>
0xa1db:     83 ec 04                        	sub esp, 4
0xa1de:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa1e1:     8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0xa1e4:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa1e8:     89 04 24                        	mov dword ptr [esp], eax
0xa1eb:     e8 36 f2 00 00                  	call 0x19426 <function_19426>
0xa1f0:     83 ec 04                        	sub esp, 4
0xa1f3:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xa1f6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa1fa:     8d 45 ec                        	lea eax, [ebp - 0x14]
; data inside code section at 0xa1fd -- 0xa1fe
0xa1fd:     89                                                 |.               |
; function: function_a1fe at 0xa1fe -- 0xa211
0xa1fe:     04 24                           	add al, 0x24
0xa200:     e8 6d 22 00 00                  	call 0xc472
0xa205:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa208:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa20f:     74 05                           	je 0xa216 <function_a216>
; data inside code section at 0xa211 -- 0xa212
0xa211:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa212 -- 0xa213
; data inside code section at 0xa213 -- 0xa216
0xa213:     ff ff ff                                           |...             |
; function: function_a216 at 0xa216 -- 0xa218
0xa216:     c9                              	leave 
0xa217:     c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEEixEj
; function: _ZNSt6vectorIbSaIbEEixEj at 0xa218 -- 0xa22d
0xa218:     55                              	push ebp
0xa219:     89 e5                           	mov ebp, esp
0xa21b:     83 ec 38                        	sub esp, 0x38
0xa21e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa221:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa224:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa227:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa22a:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; data inside code section at 0xa22d -- 0xa22e
0xa22d:     89                                                 |.               |
; function: function_a22e at 0xa22e -- 0xa27e
0xa22e:     45                              	inc ebp
0xa22f:     dc 65 a1                        	fsub qword ptr [ebp - 0x5f]
0xa232:     14 00                           	adc al, 0
0xa234:     00 00                           	add byte ptr [eax], al
0xa236:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa239:     31 c0                           	xor eax, eax
0xa23b:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xa23e:     89 c2                           	mov edx, eax
0xa240:     83 e2 1f                        	and edx, 0x1f
0xa243:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xa246:     8b 00                           	mov eax, dword ptr [eax]
0xa248:     8b 4d dc                        	mov ecx, dword ptr [ebp - 0x24]
0xa24b:     c1 e9 05                        	shr ecx, 5
0xa24e:     c1 e1 02                        	shl ecx, 2
0xa251:     01 c8                           	add eax, ecx
0xa253:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xa257:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa25b:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa25e:     89 04 24                        	mov dword ptr [esp], eax
0xa261:     e8 16 23 00 00                  	call 0xc57c <function_c57c>
0xa266:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa269:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xa26c:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa270:     89 04 24                        	mov dword ptr [esp], eax
0xa273:     e8 54 23 00 00                  	call 0xc5cc
0xa278:     83 ec 04                        	sub esp, 4
0xa27b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0xa27e -- 0xa280
0xa27e:     8b 55                                              |.U              |
; function: function_a280 at 0xa280 -- 0xa28a
0xa280:     f4                              	hlt 
0xa281:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa288:     74 05                           	je 0xa28f <function_a28f>
; data inside code section at 0xa28a -- 0xa28b
0xa28a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa28b -- 0xa28c
; data inside code section at 0xa28c -- 0xa28f
0xa28c:     ff ff ff                                           |...             |
; function: function_a28f at 0xa28f -- 0xa293
0xa28f:     c9                              	leave 
0xa290:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIP11CBlockIndexSaIS1_EE4sizeEv
; function: _ZNKSt6vectorIP11CBlockIndexSaIS1_EE4sizeEv at 0xa294 -- 0xa2cd
0xa294:     55                              	push ebp
0xa295:     89 e5                           	mov ebp, esp
0xa297:     83 ec 28                        	sub esp, 0x28
0xa29a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa29d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa2a0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa2a6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa2a9:     31 c0                           	xor eax, eax
0xa2ab:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa2ae:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0xa2b1:     89 c2                           	mov edx, eax
0xa2b3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa2b6:     8b 00                           	mov eax, dword ptr [eax]
0xa2b8:     89 d1                           	mov ecx, edx
0xa2ba:     29 c1                           	sub ecx, eax
0xa2bc:     89 c8                           	mov eax, ecx
0xa2be:     c1 f8 02                        	sar eax, 2
0xa2c1:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa2c4:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa2cb:     74 05                           	je 0xa2d2 <function_a2d2>
; data inside code section at 0xa2cd -- 0xa2ce
0xa2cd:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa2ce -- 0xa2cf
; data inside code section at 0xa2cf -- 0xa2d2
0xa2cf:     ff ff ff                                           |...             |
; function: function_a2d2 at 0xa2d2 -- 0xa2d4
0xa2d2:     c9                              	leave 
0xa2d3:     c3                              	ret 
; section: .text._ZNSt6vectorIP11CBlockIndexSaIS1_EEixEj
; function: _ZNSt6vectorIP11CBlockIndexSaIS1_EEixEj at 0xa2d4 -- 0xa30a
0xa2d4:     55                              	push ebp
0xa2d5:     89 e5                           	mov ebp, esp
0xa2d7:     83 ec 28                        	sub esp, 0x28
0xa2da:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa2dd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa2e0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa2e3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa2e6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa2ec:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa2ef:     31 c0                           	xor eax, eax
0xa2f1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa2f4:     8b 00                           	mov eax, dword ptr [eax]
0xa2f6:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xa2f9:     c1 e2 02                        	shl edx, 2
0xa2fc:     01 d0                           	add eax, edx
0xa2fe:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa301:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa308:     74 05                           	je 0xa30f <function_a30f>
; data inside code section at 0xa30a -- 0xa30b
0xa30a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa30b -- 0xa30c
; data inside code section at 0xa30c -- 0xa30f
0xa30c:     ff ff ff                                           |...             |
; function: function_a30f at 0xa30f -- 0xa311
0xa30f:     c9                              	leave 
0xa310:     c3                              	ret 
; section: .text._ZNK9base_uintILj256EE8ToStringEv
; function: _ZNK9base_uintILj256EE8ToStringEv at 0xa312 -- 0xa353
0xa312:     55                              	push ebp
0xa313:     89 e5                           	mov ebp, esp
0xa315:     83 ec 38                        	sub esp, 0x38
0xa318:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa31b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa31e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa321:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa324:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa32a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa32d:     31 c0                           	xor eax, eax
0xa32f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa332:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xa335:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa339:     89 04 24                        	mov dword ptr [esp], eax
0xa33c:     e8 8f f2 00 00                  	call 0x195d0 <function_195d0>
0xa341:     83 ec 04                        	sub esp, 4
0xa344:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa347:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa34a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa351:     74 05                           	je 0xa358 <function_a358>
; data inside code section at 0xa353 -- 0xa354
0xa353:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa354 -- 0xa355
; data inside code section at 0xa355 -- 0xa358
0xa355:     ff ff ff                                           |...             |
; function: function_a358 at 0xa358 -- 0xa35c
0xa358:     c9                              	leave 
0xa359:     c2 04 00                        	ret 4
; section: .text._ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_
; function: _ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_ at 0xa35c -- 0xa3d1
0xa35c:     55                              	push ebp
0xa35d:     89 e5                           	mov ebp, esp
0xa35f:     83 ec 58                        	sub esp, 0x58
0xa362:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa365:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xa368:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xa36b:     88 45 e0                        	mov byte ptr [ebp - 0x20], al
0xa36e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa371:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0xa374:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xa377:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0xa37a:     8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0xa37d:     89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0xa380:     8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0xa383:     89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0xa386:     8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0xa389:     89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0xa38c:     8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0xa38f:     89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0xa392:     8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0xa395:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xa398:     8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0xa39b:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xa39e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa3a4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa3a7:     31 c0                           	xor eax, eax
0xa3a9:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xa3ac:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xa3b0:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xa3b3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa3b7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa3ba:     89 04 24                        	mov dword ptr [esp], eax
0xa3bd:     e8 76 f3 00 00                  	call 0x19738 <function_19738>
0xa3c2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa3c5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xa3c8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xa3cf:     74 05                           	je 0xa3d6 <function_a3d6>
; data inside code section at 0xa3d1 -- 0xa3d2
0xa3d1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa3d2 -- 0xa3d3
; data inside code section at 0xa3d3 -- 0xa3d6
0xa3d3:     ff ff ff                                           |...             |
; function: function_a3d6 at 0xa3d6 -- 0xa3da
0xa3d6:     c9                              	leave 
0xa3d7:     c2 04 00                        	ret 4
; section: .text._ZN13CLevelDBBatch5EraseISt4pairIc7uint256EEEvRKT_
; function: _ZN13CLevelDBBatch5EraseISt4pairIc7uint256EEEvRKT_ at 0xa3da -- 0xa486
0xa3da:     55                              	push ebp
0xa3db:     89 e5                           	mov ebp, esp
0xa3dd:     53                              	push ebx
0xa3de:     83 ec 54                        	sub esp, 0x54
0xa3e1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa3e4:     89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0xa3e7:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa3ea:     89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0xa3ed:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa3f3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa3f6:     31 c0                           	xor eax, eax
0xa3f8:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xa400:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xa408:     8d 45 d0                        	lea eax, [ebp - 0x30]
0xa40b:     89 04 24                        	mov dword ptr [esp], eax
0xa40e:     e8 a3 44 00 00                  	call 0xe8b6 <function_e8b6>
0xa413:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0xa416:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa41a:     8d 45 d0                        	lea eax, [ebp - 0x30]
0xa41d:     89 04 24                        	mov dword ptr [esp], eax
0xa420:     e8 07 f4 00 00                  	call 0x1982c <function_1982c>
0xa425:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa429:     8d 45 d0                        	lea eax, [ebp - 0x30]
0xa42c:     89 04 24                        	mov dword ptr [esp], eax
0xa42f:     e8 e4 47 00 00                  	call 0xec18 <function_ec18>
0xa434:     8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0xa437:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa43b:     8d 45 d0                        	lea eax, [ebp - 0x30]
0xa43e:     89 04 24                        	mov dword ptr [esp], eax
0xa441:     e8 c0 ce 00 00                  	call 0x17306
0xa446:     8d 45 d0                        	lea eax, [ebp - 0x30]
0xa449:     89 04 24                        	mov dword ptr [esp], eax
0xa44c:     e8 89 47 00 00                  	call 0xebda <function_ebda>
0xa451:     89 c3                           	mov ebx, eax
0xa453:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xa45b:     8d 45 d0                        	lea eax, [ebp - 0x30]
0xa45e:     89 04 24                        	mov dword ptr [esp], eax
0xa461:     e8 fc 47 00 00                  	call 0xec62 <function_ec62>
0xa466:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xa46a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa46e:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa471:     89 04 24                        	mov dword ptr [esp], eax
0xa474:     e8 53 74 00 00                  	call 0x118cc <function_118cc>
0xa479:     8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0xa47c:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xa47f:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa483:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa486 -- 0xa487
0xa486:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE at 0xa487 -- 0xa488
; data inside code section at 0xa488 -- 0xa48a
0xa488:     ff ff                                              |..              |
; function: function_a48a at 0xa48a -- 0xa4a4
0xa48a:     ff 8d 45 d0 89 04               	dec dword ptr [ebp + 0x489d045]
0xa490:     24 e8                           	and al, 0xe8
0xa492:     a2 45 00 00 8b                  	mov byte ptr [0x8b000045], al
0xa497:     45                              	inc ebp
0xa498:     f4                              	hlt 
0xa499:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xa4a0:     74 1e                           	je 0xa4c0 <function_a4c0>
0xa4a2:     eb 17                           	jmp 0xa4bb <function_a4bb>
; data inside code section at 0xa4a4 -- 0xa4a5
0xa4a4:     89                                                 |.               |
; function: function_a4a5 at 0xa4a5 -- 0xa4a6
0xa4a5:     c3                              	ret 
; data inside code section at 0xa4a6 -- 0xa4b7
0xa4a6:     8d 45 d0 89 04 24 e8 87  45 00 00 89 d8 89 04 24   |.E...$..E......$|
0xa4b6:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xa4b7 -- 0xa4b8
; data inside code section at 0xa4b8 -- 0xa4bb
0xa4b8:     ff ff ff                                           |...             |
; function: function_a4bb at 0xa4bb -- 0xa4bc
; dynamically linked function: __stack_chk_fail at 0xa4bc -- 0xa4bd
; data inside code section at 0xa4bd -- 0xa4c0
0xa4bd:     ff ff ff                                           |...             |
; function: function_a4c0 at 0xa4c0 -- 0xa4c6
0xa4c0:     83 c4 54                        	add esp, 0x54
0xa4c3:     5b                              	pop ebx
0xa4c4:     5d                              	pop ebp
0xa4c5:     c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteISt4pairIc7uint256E6CCoinsEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteISt4pairIc7uint256E6CCoinsEEvRKT_RKT0_ at 0xa4c6 -- 0xa4ea
0xa4c6:     55                              	push ebp
0xa4c7:     89 e5                           	mov ebp, esp
0xa4c9:     53                              	push ebx
0xa4ca:     83 ec 74                        	sub esp, 0x74
0xa4cd:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa4d0:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0xa4d3:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa4d6:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0xa4d9:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa4dc:     89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0xa4df:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa4e5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa4e8:     31 c0                           	xor eax, eax
; data inside code section at 0xa4ea -- 0xa4ec
0xa4ea:     c7 44                                              |.D              |
; function: function_a4ec at 0xa4ec -- 0xa600
0xa4ec:     24 08                           	and al, 8
0xa4ee:     60                              	pushal 
0xa4ef:     90                              	nop 
0xa4f0:     0f 00 c7                        	sldt edi
0xa4f3:     44                              	inc esp
0xa4f4:     24 04                           	and al, 4
0xa4f6:     02 00                           	add al, byte ptr [eax]
0xa4f8:     00 00                           	add byte ptr [eax], al
0xa4fa:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa4fd:     89 04 24                        	mov dword ptr [esp], eax
0xa500:     e8 9d 44 00 00                  	call 0xe9a2 <function_e9a2>
0xa505:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xa508:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa50c:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa50f:     89 04 24                        	mov dword ptr [esp], eax
0xa512:     e8 01 f4 00 00                  	call 0x19918
0xa517:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa51b:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa51e:     89 04 24                        	mov dword ptr [esp], eax
0xa521:     e8 de 47 00 00                  	call 0xed04 <function_ed04>
0xa526:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xa529:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa52d:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa530:     89 04 24                        	mov dword ptr [esp], eax
0xa533:     e8 ba ce 00 00                  	call 0x173f2 <function_173f2>
0xa538:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa53b:     89 04 24                        	mov dword ptr [esp], eax
0xa53e:     e8 83 47 00 00                  	call 0xecc6 <function_ecc6>
0xa543:     89 c3                           	mov ebx, eax
0xa545:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xa54d:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa550:     89 04 24                        	mov dword ptr [esp], eax
0xa553:     e8 f6 47 00 00                  	call 0xed4e <function_ed4e>
0xa558:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xa55c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa560:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xa563:     89 04 24                        	mov dword ptr [esp], eax
0xa566:     e8 4d 74 00 00                  	call 0x119b8 <function_119b8>
0xa56b:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xa573:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xa57b:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa57e:     89 04 24                        	mov dword ptr [esp], eax
0xa581:     e8 1c 44 00 00                  	call 0xe9a2 <function_e9a2>
0xa586:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xa589:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa58d:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa590:     89 04 24                        	mov dword ptr [esp], eax
0xa593:     e8 d0 f3 00 00                  	call 0x19968 <function_19968>
0xa598:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa59c:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa59f:     89 04 24                        	mov dword ptr [esp], eax
0xa5a2:     e8 5d 47 00 00                  	call 0xed04 <function_ed04>
0xa5a7:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xa5aa:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa5ae:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa5b1:     89 04 24                        	mov dword ptr [esp], eax
0xa5b4:     e8 ff f3 00 00                  	call 0x199b8 <function_199b8>
0xa5b9:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa5bc:     89 04 24                        	mov dword ptr [esp], eax
0xa5bf:     e8 02 47 00 00                  	call 0xecc6 <function_ecc6>
0xa5c4:     89 c3                           	mov ebx, eax
0xa5c6:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xa5ce:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa5d1:     89 04 24                        	mov dword ptr [esp], eax
0xa5d4:     e8 75 47 00 00                  	call 0xed4e <function_ed4e>
0xa5d9:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xa5dd:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa5e1:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa5e4:     89 04 24                        	mov dword ptr [esp], eax
0xa5e7:     e8 cc 73 00 00                  	call 0x119b8 <function_119b8>
0xa5ec:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xa5ef:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xa5f2:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xa5f6:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0xa5f9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa5fd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa600 -- 0xa601
0xa600:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0xa601 -- 0xa602
; data inside code section at 0xa602 -- 0xa604
0xa602:     ff ff                                              |..              |
; function: function_a604 at 0xa604 -- 0xa629
0xa604:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0xa60a:     24 e8                           	and al, 0xe8
0xa60c:     14 45                           	adc al, 0x45
0xa60e:     00 00                           	add byte ptr [eax], al
0xa610:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa613:     89 04 24                        	mov dword ptr [esp], eax
0xa616:     e8 09 45 00 00                  	call 0xeb24
0xa61b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xa61e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xa625:     74 2d                           	je 0xa654 <function_a654>
0xa627:     eb 26                           	jmp 0xa64f
; function: function_a629 at 0xa629 -- 0xa638
0xa629:     89 c3                           	mov ebx, eax
0xa62b:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa62e:     89 04 24                        	mov dword ptr [esp], eax
0xa631:     e8 ee 44 00 00                  	call 0xeb24
0xa636:     eb 02                           	jmp 0xa63a <function_a63a>
; function: function_a638 at 0xa638 -- 0xa63a
0xa638:     89 c3                           	mov ebx, eax
; function: function_a63a at 0xa63a -- 0xa64f
0xa63a:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa63d:     89 04 24                        	mov dword ptr [esp], eax
0xa640:     e8 df 44 00 00                  	call 0xeb24
0xa645:     89 d8                           	mov eax, ebx
0xa647:     89 04 24                        	mov dword ptr [esp], eax
0xa64a:     e8 fc ff ff ff                  	call 0xa64b
; data inside code section at 0xa64f -- 0xa650
0xa64f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa650 -- 0xa651
; data inside code section at 0xa651 -- 0xa654
0xa651:     ff ff ff                                           |...             |
; function: function_a654 at 0xa654 -- 0xa65a
0xa654:     83 c4 74                        	add esp, 0x74
0xa657:     5b                              	pop ebx
0xa658:     5d                              	pop ebp
0xa659:     c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteIc7uint256EEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteIc7uint256EEvRKT_RKT0_ at 0xa65a -- 0xa794
0xa65a:     55                              	push ebp
0xa65b:     89 e5                           	mov ebp, esp
0xa65d:     53                              	push ebx
0xa65e:     83 ec 74                        	sub esp, 0x74
0xa661:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa664:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0xa667:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa66a:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0xa66d:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa670:     89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0xa673:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa679:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa67c:     31 c0                           	xor eax, eax
0xa67e:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xa686:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xa68e:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa691:     89 04 24                        	mov dword ptr [esp], eax
0xa694:     e8 9d 44 00 00                  	call 0xeb36 <function_eb36>
0xa699:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xa69c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa6a0:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa6a3:     89 04 24                        	mov dword ptr [esp], eax
0xa6a6:     e8 fb f4 00 00                  	call 0x19ba6 <function_19ba6>
0xa6ab:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa6af:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa6b2:     89 04 24                        	mov dword ptr [esp], eax
0xa6b5:     e8 de 47 00 00                  	call 0xee98 <function_ee98>
0xa6ba:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xa6bd:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa6c1:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa6c4:     89 04 24                        	mov dword ptr [esp], eax
0xa6c7:     e8 30 f5 00 00                  	call 0x19bfc <function_19bfc>
0xa6cc:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa6cf:     89 04 24                        	mov dword ptr [esp], eax
0xa6d2:     e8 83 47 00 00                  	call 0xee5a <function_ee5a>
0xa6d7:     89 c3                           	mov ebx, eax
0xa6d9:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xa6e1:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa6e4:     89 04 24                        	mov dword ptr [esp], eax
0xa6e7:     e8 f6 47 00 00                  	call 0xeee2 <function_eee2>
0xa6ec:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xa6f0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa6f4:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xa6f7:     89 04 24                        	mov dword ptr [esp], eax
0xa6fa:     e8 4d 74 00 00                  	call 0x11b4c <function_11b4c>
0xa6ff:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xa707:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xa70f:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa712:     89 04 24                        	mov dword ptr [esp], eax
0xa715:     e8 1c 44 00 00                  	call 0xeb36 <function_eb36>
0xa71a:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xa71d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa721:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa724:     89 04 24                        	mov dword ptr [esp], eax
0xa727:     e8 30 f5 00 00                  	call 0x19c5c <function_19c5c>
0xa72c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa730:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa733:     89 04 24                        	mov dword ptr [esp], eax
0xa736:     e8 5d 47 00 00                  	call 0xee98 <function_ee98>
0xa73b:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xa73e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa742:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa745:     89 04 24                        	mov dword ptr [esp], eax
0xa748:     e8 5f f5 00 00                  	call 0x19cac <function_19cac>
0xa74d:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa750:     89 04 24                        	mov dword ptr [esp], eax
0xa753:     e8 02 47 00 00                  	call 0xee5a <function_ee5a>
0xa758:     89 c3                           	mov ebx, eax
0xa75a:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xa762:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa765:     89 04 24                        	mov dword ptr [esp], eax
0xa768:     e8 75 47 00 00                  	call 0xeee2 <function_eee2>
0xa76d:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xa771:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa775:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa778:     89 04 24                        	mov dword ptr [esp], eax
0xa77b:     e8 cc 73 00 00                  	call 0x11b4c <function_11b4c>
0xa780:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xa783:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xa786:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xa78a:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0xa78d:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa791:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa794 -- 0xa795
0xa794:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0xa795 -- 0xa796
; data inside code section at 0xa796 -- 0xa798
0xa796:     ff ff                                              |..              |
; function: function_a798 at 0xa798 -- 0xa7bd
0xa798:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0xa79e:     24 e8                           	and al, 0xe8
0xa7a0:     14 45                           	adc al, 0x45
0xa7a2:     00 00                           	add byte ptr [eax], al
0xa7a4:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa7a7:     89 04 24                        	mov dword ptr [esp], eax
0xa7aa:     e8 09 45 00 00                  	call 0xecb8
0xa7af:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xa7b2:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xa7b9:     74 2d                           	je 0xa7e8 <function_a7e8>
0xa7bb:     eb 26                           	jmp 0xa7e3 <function_a7e3>
; function: function_a7bd at 0xa7bd -- 0xa7cc
0xa7bd:     89 c3                           	mov ebx, eax
0xa7bf:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xa7c2:     89 04 24                        	mov dword ptr [esp], eax
0xa7c5:     e8 ee 44 00 00                  	call 0xecb8
0xa7ca:     eb 02                           	jmp 0xa7ce <function_a7ce>
; function: function_a7cc at 0xa7cc -- 0xa7ce
0xa7cc:     89 c3                           	mov ebx, eax
; function: function_a7ce at 0xa7ce -- 0xa7de
0xa7ce:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xa7d1:     89 04 24                        	mov dword ptr [esp], eax
0xa7d4:     e8 df 44 00 00                  	call 0xecb8
0xa7d9:     89 d8                           	mov eax, ebx
0xa7db:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa7de -- 0xa7df
0xa7de:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xa7df -- 0xa7e0
; data inside code section at 0xa7e0 -- 0xa7e3
0xa7e0:     ff ff ff                                           |...             |
; function: function_a7e3 at 0xa7e3 -- 0xa7e4
; dynamically linked function: __stack_chk_fail at 0xa7e4 -- 0xa7e5
; data inside code section at 0xa7e5 -- 0xa7e8
0xa7e5:     ff ff ff                                           |...             |
; function: function_a7e8 at 0xa7e8 -- 0xa7ee
0xa7e8:     83 c4 74                        	add esp, 0x74
0xa7eb:     5b                              	pop ebx
0xa7ec:     5d                              	pop ebp
0xa7ed:     c3                              	ret 
; section: .text._ZN5boost11filesystem34pathC2IA11_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE
; function: _ZN5boost11filesystem34pathC1IA11_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE at 0xa7ee -- 0xa819
0xa7ee:     55                              	push ebp
0xa7ef:     89 e5                           	mov ebp, esp
0xa7f1:     56                              	push esi
0xa7f2:     53                              	push ebx
0xa7f3:     83 ec 30                        	sub esp, 0x30
0xa7f6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa7f9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xa7fc:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa7ff:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xa802:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa805:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xa808:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa80e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa811:     31 c0                           	xor eax, eax
0xa813:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa816:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa819 -- 0xa81a
0xa819:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xa81a -- 0xa81b
; data inside code section at 0xa81b -- 0xa82f
0xa81b:     ff ff ff e8 0f 55 00 00  89 c6 8b 5d e4 8d 45 f3   |.....U.....]..E.|
0xa82b:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNSaIcEC1Ev at 0xa82f -- 0xa830
; data inside code section at 0xa830 -- 0xa848
0xa830:     ff ff ff 8d 45 f3 89 44  24 08 8b 45 e0 89 44 24   |....E..D$..E..D$|
0xa840:     04 8d 45 ec 89 04 24 e8                            |..E...$.        |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xa848 -- 0xa849
; data inside code section at 0xa849 -- 0xa850
0xa849:     ff ff ff 89 74 24 08                               |....t$.         |
; function: function_a850 at 0xa850 -- 0xa865
0xa850:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0xa854:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa857:     89 04 24                        	mov dword ptr [esp], eax
0xa85a:     e8 3a f6 00 00                  	call 0x19e99 <function_19e99>
0xa85f:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa862:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa865 -- 0xa866
0xa865:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xa866 -- 0xa867
; data inside code section at 0xa867 -- 0xa871
0xa867:     ff ff ff 8d 45 f3 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSaIcED1Ev at 0xa871 -- 0xa872
; data inside code section at 0xa872 -- 0xa874
0xa872:     ff ff                                              |..              |
; function: function_a874 at 0xa874 -- 0xa883
0xa874:     ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0xa87a:     05 14 00 00 00                  	add eax, 0x14
0xa87f:     74 3c                           	je 0xa8bd <function_a8bd>
0xa881:     eb 35                           	jmp 0xa8b8 <function_a8b8>
; data inside code section at 0xa883 -- 0xa884
0xa883:     89                                                 |.               |
; function: function_a884 at 0xa884 -- 0xa885
0xa884:     c3                              	ret 
; data inside code section at 0xa885 -- 0xa88c
0xa885:     8d 45 ec 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSsD1Ev at 0xa88c -- 0xa88d
; data inside code section at 0xa88d -- 0xa890
0xa88d:     ff ff ff                                           |...             |
; function: function_a890 at 0xa890 -- 0xa892
0xa890:     eb 02                           	jmp 0xa894 <function_a894>
; function: function_a892 at 0xa892 -- 0xa894
0xa892:     89 c3                           	mov ebx, eax
; function: function_a894 at 0xa894 -- 0xa89a
0xa894:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xa897:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa89a -- 0xa89b
0xa89a:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcED1Ev at 0xa89b -- 0xa89c
; data inside code section at 0xa89c -- 0xa89f
0xa89c:     ff ff ff                                           |...             |
; function: function_a89f at 0xa89f -- 0xa8a1
0xa89f:     eb 02                           	jmp 0xa8a3 <function_a8a3>
; function: function_a8a1 at 0xa8a1 -- 0xa8a3
0xa8a1:     89 c3                           	mov ebx, eax
; function: function_a8a3 at 0xa8a3 -- 0xa8b3
0xa8a3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xa8a6:     89 04 24                        	mov dword ptr [esp], eax
0xa8a9:     e8 fc ff ff ff                  	call 0xa8aa
0xa8ae:     89 d8                           	mov eax, ebx
0xa8b0:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa8b3 -- 0xa8b4
0xa8b3:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xa8b4 -- 0xa8b5
; data inside code section at 0xa8b5 -- 0xa8b8
0xa8b5:     ff ff ff                                           |...             |
; function: function_a8b8 at 0xa8b8 -- 0xa8b9
; dynamically linked function: __stack_chk_fail at 0xa8b9 -- 0xa8ba
; data inside code section at 0xa8ba -- 0xa8bd
0xa8ba:     ff ff ff                                           |...             |
; function: function_a8bd at 0xa8bd -- 0xa8c4
0xa8bd:     83 c4 30                        	add esp, 0x30
0xa8c0:     5b                              	pop ebx
0xa8c1:     5e                              	pop esi
0xa8c2:     5d                              	pop ebp
0xa8c3:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadISt4pairIc7uint256E6CCoinsEEbRKT_RT0_
; function: _ZN8CLevelDB4ReadISt4pairIc7uint256E6CCoinsEEbRKT_RT0_ at 0xa8c4 -- 0xa973
0xa8c4:     55                              	push ebp
0xa8c5:     89 e5                           	mov ebp, esp
0xa8c7:     56                              	push esi
0xa8c8:     53                              	push ebx
0xa8c9:     81 ec 90 00 00 00               	sub esp, 0x90
0xa8cf:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xa8d2:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xa8d5:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xa8d8:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xa8db:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xa8de:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xa8e1:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xa8e7:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xa8ea:     31 c0                           	xor eax, eax
0xa8ec:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xa8f4:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xa8fc:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xa8ff:     89 04 24                        	mov dword ptr [esp], eax
0xa902:     e8 99 44 00 00                  	call 0xeda0 <function_eda0>
0xa907:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xa90a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa90e:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xa911:     89 04 24                        	mov dword ptr [esp], eax
0xa914:     e8 fd f3 00 00                  	call 0x19d16 <function_19d16>
0xa919:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa91d:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xa920:     89 04 24                        	mov dword ptr [esp], eax
0xa923:     e8 da 47 00 00                  	call 0xf102 <function_f102>
0xa928:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xa92b:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa92f:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xa932:     89 04 24                        	mov dword ptr [esp], eax
0xa935:     e8 b6 ce 00 00                  	call 0x177f0 <function_177f0>
0xa93a:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xa93d:     89 04 24                        	mov dword ptr [esp], eax
0xa940:     e8 7f 47 00 00                  	call 0xf0c4 <function_f0c4>
0xa945:     89 c3                           	mov ebx, eax
0xa947:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xa94f:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xa952:     89 04 24                        	mov dword ptr [esp], eax
0xa955:     e8 f2 47 00 00                  	call 0xf14c <function_f14c>
0xa95a:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xa95e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xa962:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xa965:     89 04 24                        	mov dword ptr [esp], eax
0xa968:     e8 49 74 00 00                  	call 0x11db6 <function_11db6>
0xa96d:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xa970:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa973 -- 0xa974
0xa973:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xa974 -- 0xa975
; data inside code section at 0xa975 -- 0xa977
0xa975:     ff ff                                              |..              |
; function: function_a977 at 0xa977 -- 0xa9ea
0xa977:     ff 8b 45 94 8b 40               	dec dword ptr [ebx + 0x408b9445]
0xa97d:     44                              	inc esp
0xa97e:     8b 00                           	mov eax, dword ptr [eax]
0xa980:     83 c0 14                        	add eax, 0x14
0xa983:     8b 18                           	mov ebx, dword ptr [eax]
0xa985:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xa988:     8d 70 30                        	lea esi, [eax + 0x30]
0xa98b:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xa98e:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xa991:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xa994:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xa997:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xa99b:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xa99e:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xa9a2:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xa9a6:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa9aa:     89 04 24                        	mov dword ptr [esp], eax
0xa9ad:     ff d3                           	call ebx
0xa9af:     83 ec 04                        	sub esp, 4
0xa9b2:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xa9b5:     89 04 24                        	mov dword ptr [esp], eax
0xa9b8:     e8 37 75 00 00                  	call 0x11ef4
0xa9bd:     83 f0 01                        	xor eax, 1
0xa9c0:     84 c0                           	test al, al
0xa9c2:     74 5f                           	je 0xaa23 <function_aa23>
0xa9c4:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xa9c7:     89 04 24                        	mov dword ptr [esp], eax
0xa9ca:     e8 59 75 00 00                  	call 0x11f28
0xa9cf:     84 c0                           	test al, al
0xa9d1:     74 0a                           	je 0xa9dd <function_a977+0x66>
0xa9d3:     bb 00 00 00 00                  	mov ebx, 0
0xa9d8:     e9 b0 00 00 00                  	jmp 0xaa8d
0xa9dd:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xa9e0:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xa9e3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xa9e7:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xa9ea -- 0xa9eb
0xa9ea:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xa9eb -- 0xa9ec
; data inside code section at 0xa9ec -- 0xa9f9
0xa9ec:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xa9f9 -- 0xa9fa
; data inside code section at 0xa9fa -- 0xaa09
0xa9fa:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xaa09 -- 0xaa0a
; data inside code section at 0xaa0a -- 0xaa14
0xaa0a:     ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0xaa14 -- 0xaa15
; data inside code section at 0xaa15 -- 0xaa1f
0xaa15:     ff ff ff 8d 45 e8 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xaa1f -- 0xaa20
; data inside code section at 0xaa20 -- 0xaa23
0xaa20:     ff ff ff                                           |...             |
; function: function_aa23 at 0xaa23 -- 0xaa29
0xaa23:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xaa26:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xaa29 -- 0xaa2a
0xaa29:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4dataEv at 0xaa2a -- 0xaa2b
; data inside code section at 0xaa2b -- 0xaa2f
0xaa2b:     ff ff ff 89                                        |....            |
; function: function_aa2f at 0xaa2f -- 0xaa30
0xaa2f:     c3                              	ret 
; data inside code section at 0xaa30 -- 0xaa37
0xaa30:     8d 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4sizeEv at 0xaa37 -- 0xaa38
; data inside code section at 0xaa38 -- 0xaa3b
0xaa38:     ff ff ff                                           |...             |
; function: function_aa3b at 0xaa3b -- 0xaa43
0xaa3b:     01 c3                           	add ebx, eax
0xaa3d:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xaa40:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xaa43 -- 0xaa44
0xaa43:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4dataEv at 0xaa44 -- 0xaa45
; data inside code section at 0xaa45 -- 0xaa71
0xaa45:     ff ff ff c7 44 24 10 60  90 0f 00 c7 44 24 0c 02   |....D$.`....D$..|
0xaa55:     00 00 00 89 5c 24 08 89  44 24 04 8d 45 c0 89 04   |....\$..D$..E...|
0xaa65:     24 e8 8f 43 00 00 8b 45  8c 89 44 24               |$..C...E..D$    |
; function: function_aa71 at 0xaa71 -- 0xaac5
0xaa71:     04 8d                           	add al, 0x8d
0xaa73:     45                              	inc ebp
0xaa74:     c0 89 04 24 e8 9b c1            	ror byte ptr [ecx - 0x6417dbfc], 0xc1
0xaa7b:     00 00                           	add byte ptr [eax], al
0xaa7d:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xaa80:     89 04 24                        	mov dword ptr [esp], eax
0xaa83:     e8 9a 44 00 00                  	call 0xef22 <function_ef22>
0xaa88:     bb 01 00 00 00                  	mov ebx, 1
0xaa8d:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xaa90:     89 04 24                        	mov dword ptr [esp], eax
0xaa93:     e8 1c 74 00 00                  	call 0x11eb4 <function_11eb4>
0xaa98:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xaa9b:     89 04 24                        	mov dword ptr [esp], eax
0xaa9e:     e8 fc ff ff ff                  	call 0xaa9f
0xaaa3:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xaaa6:     89 04 24                        	mov dword ptr [esp], eax
0xaaa9:     e8 74 44 00 00                  	call 0xef22 <function_ef22>
0xaaae:     89 d8                           	mov eax, ebx
0xaab0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xaab3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xaaba:     0f 84 a3 00 00 00               	je 0xab63 <function_ab63>
0xaac0:     e9 99 00 00 00                  	jmp 0xab5e <function_ab5e>
; data inside code section at 0xaac5 -- 0xaad0
0xaac5:     89 c6 89 d3 8d 45 ec 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xaad0 -- 0xaad1
; data inside code section at 0xaad1 -- 0xaad4
0xaad1:     ff ff ff                                           |...             |
; function: function_aad4 at 0xaad4 -- 0xaad6
0xaad4:     eb 40                           	jmp 0xab16 <function_ab16>
; function: function_aad6 at 0xaad6 -- 0xaafb
0xaad6:     89 c6                           	mov esi, eax
0xaad8:     89 d3                           	mov ebx, edx
0xaada:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xaadd:     89 04 24                        	mov dword ptr [esp], eax
0xaae0:     e8 3d 44 00 00                  	call 0xef22 <function_ef22>
0xaae5:     89 f0                           	mov eax, esi
0xaae7:     89 da                           	mov edx, ebx
0xaae9:     eb 00                           	jmp 0xaaeb
0xaaeb:     89 d1                           	mov ecx, edx
0xaaed:     83 f9 02                        	cmp ecx, 2
0xaaf0:     74 06                           	je 0xaaf8 <function_aad6+0x22>
0xaaf2:     89 c6                           	mov esi, eax
0xaaf4:     89 d3                           	mov ebx, edx
0xaaf6:     eb 1e                           	jmp 0xab16 <function_ab16>
0xaaf8:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xaafb -- 0xaafc
0xaafb:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0xaafc -- 0xaafd
; data inside code section at 0xaafd -- 0xab09
0xaafd:     ff ff ff 89 45 f0 bb 00  00 00 00 e8               |....E.......    |
; dynamically linked function: __cxa_end_catch at 0xab09 -- 0xab0a
; data inside code section at 0xab0a -- 0xab0d
0xab0a:     ff ff ff                                           |...             |
; function: function_ab0d at 0xab0d -- 0xab12
0xab0d:     e9 7b ff ff ff                  	jmp 0xaa8d
; data inside code section at 0xab12 -- 0xab16
0xab12:     89 c6 89 d3                                        |....            |
; function: function_ab16 at 0xab16 -- 0xab23
0xab16:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xab19:     89 04 24                        	mov dword ptr [esp], eax
0xab1c:     e8 93 73 00 00                  	call 0x11eb4 <function_11eb4>
0xab21:     eb 04                           	jmp 0xab27 <function_ab27>
; function: function_ab23 at 0xab23 -- 0xab27
0xab23:     89 c6                           	mov esi, eax
0xab25:     89 d3                           	mov ebx, edx
; function: function_ab27 at 0xab27 -- 0xab34
0xab27:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xab2a:     89 04 24                        	mov dword ptr [esp], eax
0xab2d:     e8 fc ff ff ff                  	call 0xab2e
0xab32:     eb 04                           	jmp 0xab38 <function_ab38>
; function: function_ab34 at 0xab34 -- 0xab38
0xab34:     89 c6                           	mov esi, eax
0xab36:     89 d3                           	mov ebx, edx
; function: function_ab38 at 0xab38 -- 0xab51
0xab38:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xab3b:     89 04 24                        	mov dword ptr [esp], eax
0xab3e:     e8 df 43 00 00                  	call 0xef22 <function_ef22>
0xab43:     89 f0                           	mov eax, esi
0xab45:     89 da                           	mov edx, ebx
0xab47:     eb 00                           	jmp 0xab49
0xab49:     83 fa ff                        	cmp edx, -1
0xab4c:     74 08                           	je 0xab56 <function_ab56>
0xab4e:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xab51 -- 0xab52
0xab51:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xab52 -- 0xab53
; data inside code section at 0xab53 -- 0xab56
0xab53:     ff ff ff                                           |...             |
; function: function_ab56 at 0xab56 -- 0xab59
0xab56:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xab59 -- 0xab5a
0xab59:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xab5a -- 0xab5b
; data inside code section at 0xab5b -- 0xab5e
0xab5b:     ff ff ff                                           |...             |
; function: function_ab5e at 0xab5e -- 0xab5f
; dynamically linked function: __stack_chk_fail at 0xab5f -- 0xab60
; data inside code section at 0xab60 -- 0xab63
0xab60:     ff ff ff                                           |...             |
; function: function_ab63 at 0xab63 -- 0xab6a
0xab63:     8d 65 f8                        	lea esp, [ebp - 8]
0xab66:     5b                              	pop ebx
0xab67:     5e                              	pop esi
0xab68:     5d                              	pop ebp
0xab69:     c3                              	ret 
; section: .text._ZN8CLevelDB6ExistsISt4pairIc7uint256EEEbRKT_
; function: _ZN8CLevelDB6ExistsISt4pairIc7uint256EEEbRKT_ at 0xab6a -- 0xac10
0xab6a:     55                              	push ebp
0xab6b:     89 e5                           	mov ebp, esp
0xab6d:     56                              	push esi
0xab6e:     53                              	push ebx
0xab6f:     83 ec 70                        	sub esp, 0x70
0xab72:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xab75:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0xab78:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xab7b:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0xab7e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xab84:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xab87:     31 c0                           	xor eax, eax
0xab89:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xab91:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xab99:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xab9c:     89 04 24                        	mov dword ptr [esp], eax
0xab9f:     e8 a2 44 00 00                  	call 0xf046 <function_f046>
0xaba4:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0xaba7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xabab:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xabae:     89 04 24                        	mov dword ptr [esp], eax
0xabb1:     e8 06 f4 00 00                  	call 0x19fbc <function_19fbc>
0xabb6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xabba:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xabbd:     89 04 24                        	mov dword ptr [esp], eax
0xabc0:     e8 e3 47 00 00                  	call 0xf3a8 <function_f3a8>
0xabc5:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0xabc8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xabcc:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xabcf:     89 04 24                        	mov dword ptr [esp], eax
0xabd2:     e8 bf ce 00 00                  	call 0x17a96 <function_17a96>
0xabd7:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xabda:     89 04 24                        	mov dword ptr [esp], eax
0xabdd:     e8 88 47 00 00                  	call 0xf36a <function_f36a>
0xabe2:     89 c3                           	mov ebx, eax
0xabe4:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xabec:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xabef:     89 04 24                        	mov dword ptr [esp], eax
0xabf2:     e8 fb 47 00 00                  	call 0xf3f2 <function_f3f2>
0xabf7:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xabfb:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xabff:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xac02:     89 04 24                        	mov dword ptr [esp], eax
0xac05:     e8 52 74 00 00                  	call 0x1205c <function_1205c>
0xac0a:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xac0d:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xac10 -- 0xac11
0xac10:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xac11 -- 0xac12
; data inside code section at 0xac12 -- 0xac14
0xac12:     ff ff                                              |..              |
; function: function_ac14 at 0xac14 -- 0xac84
0xac14:     ff 8b 45 b4 8b 40               	dec dword ptr [ebx + 0x408bb445]
0xac1a:     44                              	inc esp
0xac1b:     8b 00                           	mov eax, dword ptr [eax]
0xac1d:     83 c0 14                        	add eax, 0x14
0xac20:     8b 18                           	mov ebx, dword ptr [eax]
0xac22:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0xac25:     8d 70 30                        	lea esi, [eax + 0x30]
0xac28:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0xac2b:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xac2e:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xac31:     8d 4d e8                        	lea ecx, [ebp - 0x18]
0xac34:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xac38:     8d 4d e0                        	lea ecx, [ebp - 0x20]
0xac3b:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xac3f:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xac43:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xac47:     89 04 24                        	mov dword ptr [esp], eax
0xac4a:     ff d3                           	call ebx
0xac4c:     83 ec 04                        	sub esp, 4
0xac4f:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xac52:     89 04 24                        	mov dword ptr [esp], eax
0xac55:     e8 40 75 00 00                  	call 0x1219a <function_1219a>
0xac5a:     83 f0 01                        	xor eax, 1
0xac5d:     84 c0                           	test al, al
0xac5f:     74 5c                           	je 0xacbd <function_acbd>
0xac61:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xac64:     89 04 24                        	mov dword ptr [esp], eax
0xac67:     e8 62 75 00 00                  	call 0x121ce <function_121ce>
0xac6c:     84 c0                           	test al, al
0xac6e:     74 07                           	je 0xac77 <function_ac14+0x63>
0xac70:     bb 00 00 00 00                  	mov ebx, 0
0xac75:     eb 4b                           	jmp 0xacc2 <function_acc2>
0xac77:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xac7a:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xac7d:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xac81:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xac84 -- 0xac85
0xac84:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xac85 -- 0xac86
; data inside code section at 0xac86 -- 0xac93
0xac86:     ff ff ff 83 ec 04 8d 45  f0 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xac93 -- 0xac94
; data inside code section at 0xac94 -- 0xaca3
0xac94:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xaca3 -- 0xaca4
; data inside code section at 0xaca4 -- 0xacae
0xaca4:     ff ff ff 8d 45 f0 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0xacae -- 0xacaf
; data inside code section at 0xacaf -- 0xacb9
0xacaf:     ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xacb9 -- 0xacba
; data inside code section at 0xacba -- 0xacbd
0xacba:     ff ff ff                                           |...             |
; function: function_acbd at 0xacbd -- 0xacc2
0xacbd:     bb 01 00 00 00                  	mov ebx, 1
; function: function_acc2 at 0xacc2 -- 0xacd3
0xacc2:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xacc5:     89 04 24                        	mov dword ptr [esp], eax
0xacc8:     e8 8d 74 00 00                  	call 0x1215a
0xaccd:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xacd0:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xacd3 -- 0xacd4
0xacd3:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xacd4 -- 0xacd5
; data inside code section at 0xacd5 -- 0xacd7
0xacd5:     ff ff                                              |..              |
; function: function_acd7 at 0xacd7 -- 0xacf3
0xacd7:     ff 8d 45 c4 89 04               	dec dword ptr [ebp + 0x489c445]
0xacdd:     24 e8                           	and al, 0xe8
0xacdf:     e5 44                           	in eax, 0x44
0xace1:     00 00                           	add byte ptr [eax], al
0xace3:     89 d8                           	mov eax, ebx
0xace5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xace8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xacef:     74 64                           	je 0xad55 <function_ad55>
0xacf1:     eb 5d                           	jmp 0xad50 <function_ad50>
; data inside code section at 0xacf3 -- 0xacfe
0xacf3:     89 c6 89 d3 8d 45 f0 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xacfe -- 0xacff
; data inside code section at 0xacff -- 0xad02
0xacff:     ff ff ff                                           |...             |
; function: function_ad02 at 0xad02 -- 0xad04
0xad02:     eb 04                           	jmp 0xad08 <function_ad08>
; function: function_ad04 at 0xad04 -- 0xad08
0xad04:     89 c6                           	mov esi, eax
0xad06:     89 d3                           	mov ebx, edx
; function: function_ad08 at 0xad08 -- 0xad15
0xad08:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xad0b:     89 04 24                        	mov dword ptr [esp], eax
0xad0e:     e8 47 74 00 00                  	call 0x1215a
0xad13:     eb 04                           	jmp 0xad19 <function_ad19>
; function: function_ad15 at 0xad15 -- 0xad19
0xad15:     89 c6                           	mov esi, eax
0xad17:     89 d3                           	mov ebx, edx
; function: function_ad19 at 0xad19 -- 0xad1f
0xad19:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xad1c:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xad1f -- 0xad20
0xad1f:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xad20 -- 0xad21
; data inside code section at 0xad21 -- 0xad24
0xad21:     ff ff ff                                           |...             |
; function: function_ad24 at 0xad24 -- 0xad26
0xad24:     eb 04                           	jmp 0xad2a <function_ad2a>
; function: function_ad26 at 0xad26 -- 0xad2a
0xad26:     89 c6                           	mov esi, eax
0xad28:     89 d3                           	mov ebx, edx
; function: function_ad2a at 0xad2a -- 0xad43
0xad2a:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xad2d:     89 04 24                        	mov dword ptr [esp], eax
0xad30:     e8 93 44 00 00                  	call 0xf1c8
0xad35:     89 f0                           	mov eax, esi
0xad37:     89 da                           	mov edx, ebx
0xad39:     eb 00                           	jmp 0xad3b
0xad3b:     83 fa ff                        	cmp edx, -1
0xad3e:     74 08                           	je 0xad48 <function_ad48>
0xad40:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xad43 -- 0xad44
0xad43:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xad44 -- 0xad45
; data inside code section at 0xad45 -- 0xad48
0xad45:     ff ff ff                                           |...             |
; function: function_ad48 at 0xad48 -- 0xad4b
0xad48:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xad4b -- 0xad4c
0xad4b:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xad4c -- 0xad4d
; data inside code section at 0xad4d -- 0xad50
0xad4d:     ff ff ff                                           |...             |
; function: function_ad50 at 0xad50 -- 0xad51
; dynamically linked function: __stack_chk_fail at 0xad51 -- 0xad52
; data inside code section at 0xad52 -- 0xad55
0xad52:     ff ff ff                                           |...             |
; function: function_ad55 at 0xad55 -- 0xad5c
0xad55:     8d 65 f8                        	lea esp, [ebp - 8]
0xad58:     5b                              	pop ebx
0xad59:     5e                              	pop esi
0xad5a:     5d                              	pop ebp
0xad5b:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadIc7uint256EEbRKT_RT0_
; function: _ZN8CLevelDB4ReadIc7uint256EEbRKT_RT0_ at 0xad5c -- 0xae0b
0xad5c:     55                              	push ebp
0xad5d:     89 e5                           	mov ebp, esp
0xad5f:     56                              	push esi
0xad60:     53                              	push ebx
0xad61:     81 ec 90 00 00 00               	sub esp, 0x90
0xad67:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xad6a:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xad6d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xad70:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xad73:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xad76:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xad79:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xad7f:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xad82:     31 c0                           	xor eax, eax
0xad84:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xad8c:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xad94:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xad97:     89 04 24                        	mov dword ptr [esp], eax
0xad9a:     e8 99 44 00 00                  	call 0xf238 <function_f238>
0xad9f:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xada2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xada6:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xada9:     89 04 24                        	mov dword ptr [esp], eax
0xadac:     e8 f7 f4 00 00                  	call 0x1a2a8 <function_1a2a8>
0xadb1:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xadb5:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xadb8:     89 04 24                        	mov dword ptr [esp], eax
0xadbb:     e8 da 47 00 00                  	call 0xf59a <function_f59a>
0xadc0:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xadc3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xadc7:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xadca:     89 04 24                        	mov dword ptr [esp], eax
0xadcd:     e8 2c f5 00 00                  	call 0x1a2fe <_ZNSsC1EPKcRKSaIcE>
0xadd2:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xadd5:     89 04 24                        	mov dword ptr [esp], eax
0xadd8:     e8 7f 47 00 00                  	call 0xf55c <function_f55c>
0xaddd:     89 c3                           	mov ebx, eax
0xaddf:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xade7:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xadea:     89 04 24                        	mov dword ptr [esp], eax
0xaded:     e8 f2 47 00 00                  	call 0xf5e4 <function_f5e4>
0xadf2:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xadf6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xadfa:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xadfd:     89 04 24                        	mov dword ptr [esp], eax
0xae00:     e8 49 74 00 00                  	call 0x1224e <function_1224e>
0xae05:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xae08:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xae0b -- 0xae0c
0xae0b:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xae0c -- 0xae0d
; data inside code section at 0xae0d -- 0xae0f
0xae0d:     ff ff                                              |..              |
; function: function_ae0f at 0xae0f -- 0xae82
0xae0f:     ff 8b 45 94 8b 40               	dec dword ptr [ebx + 0x408b9445]
0xae15:     44                              	inc esp
0xae16:     8b 00                           	mov eax, dword ptr [eax]
0xae18:     83 c0 14                        	add eax, 0x14
0xae1b:     8b 18                           	mov ebx, dword ptr [eax]
0xae1d:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xae20:     8d 70 30                        	lea esi, [eax + 0x30]
0xae23:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xae26:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xae29:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xae2c:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xae2f:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xae33:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xae36:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xae3a:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xae3e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xae42:     89 04 24                        	mov dword ptr [esp], eax
0xae45:     ff d3                           	call ebx
0xae47:     83 ec 04                        	sub esp, 4
0xae4a:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xae4d:     89 04 24                        	mov dword ptr [esp], eax
0xae50:     e8 37 75 00 00                  	call 0x1238c
0xae55:     83 f0 01                        	xor eax, 1
0xae58:     84 c0                           	test al, al
0xae5a:     74 5f                           	je 0xaebb <function_aebb>
0xae5c:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xae5f:     89 04 24                        	mov dword ptr [esp], eax
0xae62:     e8 59 75 00 00                  	call 0x123c0
0xae67:     84 c0                           	test al, al
0xae69:     74 0a                           	je 0xae75 <function_ae0f+0x66>
0xae6b:     bb 00 00 00 00                  	mov ebx, 0
0xae70:     e9 b0 00 00 00                  	jmp 0xaf25 <function_af25>
0xae75:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xae78:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xae7b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xae7f:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xae82 -- 0xae83
0xae82:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xae83 -- 0xae84
; data inside code section at 0xae84 -- 0xae91
0xae84:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xae91 -- 0xae92
; data inside code section at 0xae92 -- 0xaea1
0xae92:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xaea1 -- 0xaea2
; data inside code section at 0xaea2 -- 0xaebb
0xaea2:     ff ff ff 8d 45 ec 89 04  24 e8 fc ff ff ff 8d 45   |....E...$......E|
0xaeb2:     e8 89 04 24 e8 fc ff ff  ff                        |...$.....       |
; function: function_aebb at 0xaebb -- 0xaece
0xaebb:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xaebe:     89 04 24                        	mov dword ptr [esp], eax
0xaec1:     e8 fc ff ff ff                  	call 0xaec2
0xaec6:     89 c3                           	mov ebx, eax
0xaec8:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xaecb:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xaece -- 0xaecf
0xaece:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0xaecf -- 0xaed0
; data inside code section at 0xaed0 -- 0xaed2
0xaed0:     ff ff                                              |..              |
; function: function_aed2 at 0xaed2 -- 0xaed5
0xaed2:     ff 01                           	inc dword ptr [ecx]
0xaed4:     c3                              	ret 
; data inside code section at 0xaed5 -- 0xaedc
0xaed5:     8d 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4dataEv at 0xaedc -- 0xaedd
; data inside code section at 0xaedd -- 0xaf25
0xaedd:     ff ff ff c7 44 24 10 60  90 0f 00 c7 44 24 0c 02   |....D$.`....D$..|
0xaeed:     00 00 00 89 5c 24 08 89  44 24 04 8d 45 c0 89 04   |....\$..D$..E...|
0xaefd:     24 e8 8f 43 00 00 8b 45  8c 89 44 24 04 8d 45 c0   |$..C...E..D$..E.|
0xaf0d:     89 04 24 e8 f5 c1 00 00  8d 45 c0 89 04 24 e8 9a   |..$......E...$..|
0xaf1d:     44 00 00 bb 01 00 00 00                            |D.......        |
; function: function_af25 at 0xaf25 -- 0xaf5d
0xaf25:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xaf28:     89 04 24                        	mov dword ptr [esp], eax
0xaf2b:     e8 1c 74 00 00                  	call 0x1234c <function_1234c>
0xaf30:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xaf33:     89 04 24                        	mov dword ptr [esp], eax
0xaf36:     e8 fc ff ff ff                  	call 0xaf37
0xaf3b:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xaf3e:     89 04 24                        	mov dword ptr [esp], eax
0xaf41:     e8 74 44 00 00                  	call 0xf3ba
0xaf46:     89 d8                           	mov eax, ebx
0xaf48:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xaf4b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xaf52:     0f 84 a3 00 00 00               	je 0xaffb <function_affb>
0xaf58:     e9 99 00 00 00                  	jmp 0xaff6 <function_aff6>
; function: function_af5d at 0xaf5d -- 0xaf6e
0xaf5d:     89 c6                           	mov esi, eax
0xaf5f:     89 d3                           	mov ebx, edx
0xaf61:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xaf64:     89 04 24                        	mov dword ptr [esp], eax
0xaf67:     e8 fc ff ff ff                  	call 0xaf68
0xaf6c:     eb 40                           	jmp 0xafae <function_afae>
; function: function_af6e at 0xaf6e -- 0xafaa
0xaf6e:     89 c6                           	mov esi, eax
0xaf70:     89 d3                           	mov ebx, edx
0xaf72:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xaf75:     89 04 24                        	mov dword ptr [esp], eax
0xaf78:     e8 3d 44 00 00                  	call 0xf3ba
0xaf7d:     89 f0                           	mov eax, esi
0xaf7f:     89 da                           	mov edx, ebx
0xaf81:     eb 00                           	jmp 0xaf83
0xaf83:     89 d1                           	mov ecx, edx
0xaf85:     83 f9 02                        	cmp ecx, 2
0xaf88:     74 06                           	je 0xaf90 <function_af6e+0x22>
0xaf8a:     89 c6                           	mov esi, eax
0xaf8c:     89 d3                           	mov ebx, edx
0xaf8e:     eb 1e                           	jmp 0xafae <function_afae>
0xaf90:     89 04 24                        	mov dword ptr [esp], eax
0xaf93:     e8 fc ff ff ff                  	call 0xaf94
0xaf98:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xaf9b:     bb 00 00 00 00                  	mov ebx, 0
0xafa0:     e8 fc ff ff ff                  	call 0xafa1
0xafa5:     e9 7b ff ff ff                  	jmp 0xaf25 <function_af25>
; data inside code section at 0xafaa -- 0xafae
0xafaa:     89 c6 89 d3                                        |....            |
; function: function_afae at 0xafae -- 0xafbb
0xafae:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xafb1:     89 04 24                        	mov dword ptr [esp], eax
0xafb4:     e8 93 73 00 00                  	call 0x1234c <function_1234c>
0xafb9:     eb 04                           	jmp 0xafbf <function_afbf>
; function: function_afbb at 0xafbb -- 0xafbf
0xafbb:     89 c6                           	mov esi, eax
0xafbd:     89 d3                           	mov ebx, edx
; function: function_afbf at 0xafbf -- 0xafc5
0xafbf:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xafc2:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xafc5 -- 0xafc6
0xafc5:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xafc6 -- 0xafc7
; data inside code section at 0xafc7 -- 0xafca
0xafc7:     ff ff ff                                           |...             |
; function: function_afca at 0xafca -- 0xafcc
0xafca:     eb 04                           	jmp 0xafd0 <function_afd0>
; function: function_afcc at 0xafcc -- 0xafd0
0xafcc:     89 c6                           	mov esi, eax
0xafce:     89 d3                           	mov ebx, edx
; function: function_afd0 at 0xafd0 -- 0xaff1
0xafd0:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xafd3:     89 04 24                        	mov dword ptr [esp], eax
0xafd6:     e8 df 43 00 00                  	call 0xf3ba
0xafdb:     89 f0                           	mov eax, esi
0xafdd:     89 da                           	mov edx, ebx
0xafdf:     eb 00                           	jmp 0xafe1
0xafe1:     83 fa ff                        	cmp edx, -1
0xafe4:     74 08                           	je 0xafee <function_afd0+0x1e>
0xafe6:     89 04 24                        	mov dword ptr [esp], eax
0xafe9:     e8 fc ff ff ff                  	call 0xafea
0xafee:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xaff1 -- 0xaff2
0xaff1:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xaff2 -- 0xaff3
; data inside code section at 0xaff3 -- 0xaff6
0xaff3:     ff ff ff                                           |...             |
; function: function_aff6 at 0xaff6 -- 0xaffb
0xaff6:     e8 fc ff ff ff                  	call 0xaff7
; function: function_affb at 0xaffb -- 0xb002
0xaffb:     8d 65 f8                        	lea esp, [ebp - 8]
0xaffe:     5b                              	pop ebx
0xafff:     5e                              	pop esi
0xb000:     5d                              	pop ebp
0xb001:     c3                              	ret 
; section: .text._ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE4findERS6_
; function: _ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE4findERS6_ at 0xb002 -- 0xb050
0xb002:     55                              	push ebp
0xb003:     89 e5                           	mov ebp, esp
0xb005:     83 ec 38                        	sub esp, 0x38
0xb008:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb00b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb00e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb011:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb014:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb017:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xb01a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb020:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb023:     31 c0                           	xor eax, eax
0xb025:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xb028:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb02b:     8b 4d dc                        	mov ecx, dword ptr [ebp - 0x24]
0xb02e:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0xb032:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb036:     89 04 24                        	mov dword ptr [esp], eax
0xb039:     e8 26 f7 00 00                  	call 0x1a764 <function_1a764>
0xb03e:     83 ec 04                        	sub esp, 4
0xb041:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb044:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb047:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb04e:     74 05                           	je 0xb055 <function_b055>
; data inside code section at 0xb050 -- 0xb051
0xb050:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb051 -- 0xb052
; data inside code section at 0xb052 -- 0xb055
0xb052:     ff ff ff                                           |...             |
; function: function_b055 at 0xb055 -- 0xb059
0xb055:     c9                              	leave 
0xb056:     c2 04 00                        	ret 4
; section: .text._ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE3endEv
; function: _ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE3endEv at 0xb05a -- 0xb09b
0xb05a:     55                              	push ebp
0xb05b:     89 e5                           	mov ebp, esp
0xb05d:     83 ec 38                        	sub esp, 0x38
0xb060:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb063:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb066:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb069:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb06c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb072:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb075:     31 c0                           	xor eax, eax
0xb077:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xb07a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb07d:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb081:     89 04 24                        	mov dword ptr [esp], eax
0xb084:     e8 1f f8 00 00                  	call 0x1a8a8 <function_1a8a8>
0xb089:     83 ec 04                        	sub esp, 4
0xb08c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb08f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb092:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb099:     74 05                           	je 0xb0a0 <function_b0a0>
; data inside code section at 0xb09b -- 0xb09c
0xb09b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb09c -- 0xb09d
; data inside code section at 0xb09d -- 0xb0a0
0xb09d:     ff ff ff                                           |...             |
; function: function_b0a0 at 0xb0a0 -- 0xb0a4
0xb0a0:     c9                              	leave 
0xb0a1:     c2 04 00                        	ret 4
; section: .text._ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEeqERKS6_
; function: _ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEeqERKS6_ at 0xb0a4 -- 0xb0dc
0xb0a4:     55                              	push ebp
0xb0a5:     89 e5                           	mov ebp, esp
0xb0a7:     83 ec 28                        	sub esp, 0x28
0xb0aa:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb0ad:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb0b0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb0b3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb0b6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb0bc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb0bf:     31 c0                           	xor eax, eax
0xb0c1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb0c4:     8b 10                           	mov edx, dword ptr [eax]
0xb0c6:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb0c9:     8b 00                           	mov eax, dword ptr [eax]
0xb0cb:     39 c2                           	cmp edx, eax
0xb0cd:     0f 94 c0                        	sete al
0xb0d0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb0d3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb0da:     74 05                           	je 0xb0e1 <function_b0e1>
; data inside code section at 0xb0dc -- 0xb0dd
0xb0dc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb0dd -- 0xb0de
; data inside code section at 0xb0de -- 0xb0e1
0xb0de:     ff ff ff                                           |...             |
; function: function_b0e1 at 0xb0e1 -- 0xb0e3
0xb0e1:     c9                              	leave 
0xb0e2:     c3                              	ret 
; section: .text._ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEptEv
; function: _ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEptEv at 0xb0e4 -- 0xb117
0xb0e4:     55                              	push ebp
0xb0e5:     89 e5                           	mov ebp, esp
0xb0e7:     83 ec 38                        	sub esp, 0x38
0xb0ea:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb0ed:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb0f0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb0f6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb0f9:     31 c0                           	xor eax, eax
0xb0fb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb0fe:     8b 00                           	mov eax, dword ptr [eax]
0xb100:     83 c0 10                        	add eax, 0x10
0xb103:     89 04 24                        	mov dword ptr [esp], eax
0xb106:     e8 71 f8 00 00                  	call 0x1a97c <function_1a97c>
0xb10b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb10e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb115:     74 05                           	je 0xb11c <function_b11c>
; data inside code section at 0xb117 -- 0xb118
0xb117:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb118 -- 0xb119
; data inside code section at 0xb119 -- 0xb11c
0xb119:     ff ff ff                                           |...             |
; function: function_b11c at 0xb11c -- 0xb11e
0xb11c:     c9                              	leave 
0xb11d:     c3                              	ret 
; section: .text._ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE4sizeEv
; function: _ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE4sizeEv at 0xb11e -- 0xb14c
0xb11e:     55                              	push ebp
0xb11f:     89 e5                           	mov ebp, esp
0xb121:     83 ec 38                        	sub esp, 0x38
0xb124:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb127:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb12a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb130:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb133:     31 c0                           	xor eax, eax
0xb135:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb138:     89 04 24                        	mov dword ptr [esp], eax
0xb13b:     e8 a4 f8 00 00                  	call 0x1a9e4
0xb140:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb143:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb14a:     74 05                           	je 0xb151 <function_b151>
; data inside code section at 0xb14c -- 0xb14d
0xb14c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb14d -- 0xb14e
; data inside code section at 0xb14e -- 0xb151
0xb14e:     ff ff ff                                           |...             |
; function: function_b151 at 0xb151 -- 0xb153
0xb151:     c9                              	leave 
0xb152:     c3                              	ret 
; section: .text._ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE5beginEv
; function: _ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE5beginEv at 0xb154 -- 0xb18c
0xb154:     55                              	push ebp
0xb155:     89 e5                           	mov ebp, esp
0xb157:     83 ec 38                        	sub esp, 0x38
0xb15a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb15d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb160:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb163:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb166:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb16c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb16f:     31 c0                           	xor eax, eax
0xb171:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xb174:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb177:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb17b:     89 04 24                        	mov dword ptr [esp], eax
0xb17e:     e8 c7 f8 00 00                  	call 0x1aa4a <function_1aa4a>
0xb183:     83 ec 04                        	sub esp, 4
0xb186:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb189:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0xb18c -- 0xb192
0xb18c:     65 33 15 14 00 00                                  |e3....          |
; function: function_b192 at 0xb192 -- 0xb197
0xb192:     00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
0xb196:     fc                              	cld 
; data inside code section at 0xb197 -- 0xb199
0xb197:     ff ff                                              |..              |
; function: function_b199 at 0xb199 -- 0xb19e
0xb199:     ff c9                           	dec ecx
0xb19b:     c2 04 00                        	ret 4
; section: .text._ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE3endEv
; function: _ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE3endEv at 0xb19e -- 0xb1df
0xb19e:     55                              	push ebp
0xb19f:     89 e5                           	mov ebp, esp
0xb1a1:     83 ec 38                        	sub esp, 0x38
0xb1a4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb1a7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb1aa:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb1ad:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb1b0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb1b6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb1b9:     31 c0                           	xor eax, eax
0xb1bb:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xb1be:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb1c1:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb1c5:     89 04 24                        	mov dword ptr [esp], eax
0xb1c8:     e8 11 f9 00 00                  	call 0x1aade
0xb1cd:     83 ec 04                        	sub esp, 4
0xb1d0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb1d3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb1d6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb1dd:     74 05                           	je 0xb1e4 <function_b1e4>
; data inside code section at 0xb1df -- 0xb1e0
0xb1df:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb1e0 -- 0xb1e1
; data inside code section at 0xb1e1 -- 0xb1e4
0xb1e1:     ff ff ff                                           |...             |
; function: function_b1e4 at 0xb1e4 -- 0xb1e8
0xb1e4:     c9                              	leave 
0xb1e5:     c2 04 00                        	ret 4
; section: .text._ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEneERKS5_
; function: _ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEneERKS5_ at 0xb1e8 -- 0xb220
0xb1e8:     55                              	push ebp
0xb1e9:     89 e5                           	mov ebp, esp
0xb1eb:     83 ec 28                        	sub esp, 0x28
0xb1ee:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb1f1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb1f4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb1f7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb1fa:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb200:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb203:     31 c0                           	xor eax, eax
0xb205:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb208:     8b 10                           	mov edx, dword ptr [eax]
0xb20a:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb20d:     8b 00                           	mov eax, dword ptr [eax]
0xb20f:     39 c2                           	cmp edx, eax
0xb211:     0f 95 c0                        	setne al
0xb214:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb217:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb21e:     74 05                           	je 0xb225 <function_b225>
; data inside code section at 0xb220 -- 0xb221
0xb220:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb221 -- 0xb222
; data inside code section at 0xb222 -- 0xb225
0xb222:     ff ff ff                                           |...             |
; function: function_b225 at 0xb225 -- 0xb227
0xb225:     c9                              	leave 
0xb226:     c3                              	ret 
; section: .text._ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEppEi
; function: _ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEppEi at 0xb228 -- 0xb25d
0xb228:     55                              	push ebp
0xb229:     89 e5                           	mov ebp, esp
0xb22b:     83 ec 38                        	sub esp, 0x38
0xb22e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb231:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb234:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb237:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb23a:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb23d:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xb240:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb246:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb249:     31 c0                           	xor eax, eax
0xb24b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb24e:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xb251:     8b 12                           	mov edx, dword ptr [edx]
0xb253:     89 10                           	mov dword ptr [eax], edx
0xb255:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb258:     8b 00                           	mov eax, dword ptr [eax]
0xb25a:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb25d -- 0xb25e
0xb25d:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xb25e -- 0xb25f
; data inside code section at 0xb25f -- 0xb261
0xb25f:     ff ff                                              |..              |
; function: function_b261 at 0xb261 -- 0xb27f
0xb261:     ff 8b 55 e0 89 02               	dec dword ptr [ebx + 0x289e055]
0xb267:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb26a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb26d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb274:     74 05                           	je 0xb27b <function_b261+0x1a>
0xb276:     e8 fc ff ff ff                  	call 0xb277
0xb27b:     c9                              	leave 
0xb27c:     c2 04 00                        	ret 4
; section: .text._ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv
; function: _ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv at 0xb280 -- 0xb2ba
0xb280:     55                              	push ebp
0xb281:     89 e5                           	mov ebp, esp
0xb283:     83 ec 38                        	sub esp, 0x38
0xb286:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb289:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb28c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb292:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb295:     31 c0                           	xor eax, eax
0xb297:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb29a:     8b 00                           	mov eax, dword ptr [eax]
0xb29c:     83 c0 10                        	add eax, 0x10
0xb29f:     89 04 24                        	mov dword ptr [esp], eax
0xb2a2:     e8 63 f9 00 00                  	call 0x1ac0a <function_1ac0a>
0xb2a7:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb2aa:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb2b1:     74 05                           	je 0xb2b8 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv+0x38>
0xb2b3:     e8 fc ff ff ff                  	call 0xb2b4
0xb2b8:     c9                              	leave 
0xb2b9:     c3                              	ret 
; section: .text._ZN5boost11filesystem34pathC2IA7_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE
; function: _ZN5boost11filesystem34pathC1IA7_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE at 0xb2ba -- 0xb33c
0xb2ba:     55                              	push ebp
0xb2bb:     89 e5                           	mov ebp, esp
0xb2bd:     56                              	push esi
0xb2be:     53                              	push ebx
0xb2bf:     83 ec 30                        	sub esp, 0x30
0xb2c2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb2c5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb2c8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb2cb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb2ce:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb2d1:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xb2d4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb2da:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb2dd:     31 c0                           	xor eax, eax
0xb2df:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb2e2:     89 04 24                        	mov dword ptr [esp], eax
0xb2e5:     e8 fc ff ff ff                  	call 0xb2e6
0xb2ea:     e8 0f 55 00 00                  	call 0x107fe <function_107fe>
0xb2ef:     89 c6                           	mov esi, eax
0xb2f1:     8b 5d e4                        	mov ebx, dword ptr [ebp - 0x1c]
0xb2f4:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb2f7:     89 04 24                        	mov dword ptr [esp], eax
0xb2fa:     e8 fc ff ff ff                  	call 0xb2fb
0xb2ff:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb302:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb306:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb309:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb30d:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xb310:     89 04 24                        	mov dword ptr [esp], eax
0xb313:     e8 fc ff ff ff                  	call 0xb314
0xb318:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xb31c:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0xb320:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xb323:     89 04 24                        	mov dword ptr [esp], eax
0xb326:     e8 3a f6 00 00                  	call 0x1a965 <function_1a965>
0xb32b:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xb32e:     89 04 24                        	mov dword ptr [esp], eax
0xb331:     e8 fc ff ff ff                  	call 0xb332
0xb336:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb339:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb33c -- 0xb33d
0xb33c:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcED1Ev at 0xb33d -- 0xb33e
; data inside code section at 0xb33e -- 0xb340
0xb33e:     ff ff                                              |..              |
; function: function_b340 at 0xb340 -- 0xb34f
0xb340:     ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0xb346:     05 14 00 00 00                  	add eax, 0x14
0xb34b:     74 3c                           	je 0xb389 <function_b389>
0xb34d:     eb 35                           	jmp 0xb384 <function_b384>
; function: function_b34f at 0xb34f -- 0xb35e
0xb34f:     89 c3                           	mov ebx, eax
0xb351:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xb354:     89 04 24                        	mov dword ptr [esp], eax
0xb357:     e8 fc ff ff ff                  	call 0xb358
0xb35c:     eb 02                           	jmp 0xb360 <function_b360>
; function: function_b35e at 0xb35e -- 0xb360
0xb35e:     89 c3                           	mov ebx, eax
; function: function_b360 at 0xb360 -- 0xb366
0xb360:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb363:     89 04 24                        	mov dword ptr [esp], eax
; function: function_b366 at 0xb366 -- 0xb367
; dynamically linked function: _ZNSaIcED1Ev at 0xb367 -- 0xb368
; data inside code section at 0xb368 -- 0xb36b
0xb368:     ff ff ff                                           |...             |
; function: function_b36b at 0xb36b -- 0xb36d
0xb36b:     eb 02                           	jmp 0xb36f <function_b36f>
; function: function_b36d at 0xb36d -- 0xb36f
0xb36d:     89 c3                           	mov ebx, eax
; function: function_b36f at 0xb36f -- 0xb375
0xb36f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb372:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb375 -- 0xb376
0xb375:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xb376 -- 0xb377
; data inside code section at 0xb377 -- 0xb380
0xb377:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xb380 -- 0xb381
; data inside code section at 0xb381 -- 0xb384
0xb381:     ff ff ff                                           |...             |
; function: function_b384 at 0xb384 -- 0xb385
; dynamically linked function: __stack_chk_fail at 0xb385 -- 0xb386
; data inside code section at 0xb386 -- 0xb389
0xb386:     ff ff ff                                           |...             |
; function: function_b389 at 0xb389 -- 0xb390
0xb389:     83 c4 30                        	add esp, 0x30
0xb38c:     5b                              	pop ebx
0xb38d:     5e                              	pop esi
0xb38e:     5d                              	pop ebp
0xb38f:     c3                              	ret 
; section: .text._ZN5boost11filesystem34pathC2IA6_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE
; function: _ZN5boost11filesystem34pathC1IA6_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE at 0xb390 -- 0xb3d0
0xb390:     55                              	push ebp
0xb391:     89 e5                           	mov ebp, esp
0xb393:     56                              	push esi
0xb394:     53                              	push ebx
0xb395:     83 ec 30                        	sub esp, 0x30
0xb398:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb39b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xb39e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb3a1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xb3a4:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb3a7:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xb3aa:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb3b0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb3b3:     31 c0                           	xor eax, eax
0xb3b5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb3b8:     89 04 24                        	mov dword ptr [esp], eax
0xb3bb:     e8 fc ff ff ff                  	call 0xb3bc
0xb3c0:     e8 0f 55 00 00                  	call 0x108d4 <function_108d4>
0xb3c5:     89 c6                           	mov esi, eax
0xb3c7:     8b 5d e4                        	mov ebx, dword ptr [ebp - 0x1c]
0xb3ca:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb3cd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb3d0 -- 0xb3d1
0xb3d0:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC1Ev at 0xb3d1 -- 0xb3d2
; data inside code section at 0xb3d2 -- 0xb3ea
0xb3d2:     ff ff ff 8d 45 f3 89 44  24 08 8b 45 e0 89 44 24   |....E..D$..E..D$|
0xb3e2:     04 8d 45 ec 89 04 24 e8                            |..E...$.        |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xb3ea -- 0xb3eb
; data inside code section at 0xb3eb -- 0xb40a
0xb3eb:     ff ff ff 89 74 24 08 89  5c 24 04 8d 45 ec 89 04   |....t$..\$..E...|
0xb3fb:     24 e8 3a f6 00 00 8d 45  ec 89 04 24 e8 fc ff      |$.:....E...$... |
; function: function_b40a at 0xb40a -- 0xb40b
; data inside code section at 0xb40b -- 0xb40c
0xb40b:     ff                                                 |.               |
; function: function_b40c at 0xb40c -- 0xb425
0xb40c:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb40f:     89 04 24                        	mov dword ptr [esp], eax
0xb412:     e8 fc ff ff ff                  	call 0xb413
0xb417:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xb41a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xb421:     74 3c                           	je 0xb45f <function_b45f>
0xb423:     eb 35                           	jmp 0xb45a <function_b45a>
; data inside code section at 0xb425 -- 0xb426
0xb425:     89                                                 |.               |
; function: function_b426 at 0xb426 -- 0xb427
0xb426:     c3                              	ret 
; data inside code section at 0xb427 -- 0xb42e
0xb427:     8d 45 ec 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSsD1Ev at 0xb42e -- 0xb42f
; data inside code section at 0xb42f -- 0xb432
0xb42f:     ff ff ff                                           |...             |
; function: function_b432 at 0xb432 -- 0xb434
0xb432:     eb 02                           	jmp 0xb436 <function_b436>
; function: function_b434 at 0xb434 -- 0xb436
0xb434:     89 c3                           	mov ebx, eax
; function: function_b436 at 0xb436 -- 0xb443
0xb436:     8d 45 f3                        	lea eax, [ebp - 0xd]
0xb439:     89 04 24                        	mov dword ptr [esp], eax
0xb43c:     e8 fc ff ff ff                  	call 0xb43d
0xb441:     eb 02                           	jmp 0xb445 <function_b445>
; function: function_b443 at 0xb443 -- 0xb445
0xb443:     89 c3                           	mov ebx, eax
; function: function_b445 at 0xb445 -- 0xb455
0xb445:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb448:     89 04 24                        	mov dword ptr [esp], eax
0xb44b:     e8 fc ff ff ff                  	call 0xb44c
0xb450:     89 d8                           	mov eax, ebx
0xb452:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb455 -- 0xb456
0xb455:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xb456 -- 0xb457
; data inside code section at 0xb457 -- 0xb45a
0xb457:     ff ff ff                                           |...             |
; function: function_b45a at 0xb45a -- 0xb45f
0xb45a:     e8 fc ff ff ff                  	call 0xb45b
; function: function_b45f at 0xb45f -- 0xb466
0xb45f:     83 c4 30                        	add esp, 0x30
0xb462:     5b                              	pop ebx
0xb463:     5e                              	pop esi
0xb464:     5d                              	pop ebp
0xb465:     c3                              	ret 
; section: .text._ZN8CLevelDB5WriteISt4pairIc7uint256E15CDiskBlockIndexEEbRKT_RKT0_b
; function: _ZN8CLevelDB5WriteISt4pairIc7uint256E15CDiskBlockIndexEEbRKT_RKT0_b at 0xb466 -- 0xb4ec
0xb466:     55                              	push ebp
0xb467:     89 e5                           	mov ebp, esp
0xb469:     56                              	push esi
0xb46a:     53                              	push ebx
0xb46b:     83 ec 30                        	sub esp, 0x30
0xb46e:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xb471:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xb474:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xb477:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0xb47a:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0xb47d:     8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0xb480:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0xb483:     88 45 d8                        	mov byte ptr [ebp - 0x28], al
0xb486:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb48c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb48f:     31 c0                           	xor eax, eax
0xb491:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb494:     89 04 24                        	mov dword ptr [esp], eax
0xb497:     e8 b2 76 00 00                  	call 0x12b4e <function_12b4e>
0xb49c:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xb49f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb4a3:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb4a6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb4aa:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb4ad:     89 04 24                        	mov dword ptr [esp], eax
0xb4b0:     e8 69 f9 00 00                  	call 0x1ae1e <function_1ae1e>
0xb4b5:     0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0xb4b9:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb4bd:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb4c0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb4c4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb4c7:     89 04 24                        	mov dword ptr [esp], eax
0xb4ca:     e8 fc ff ff ff                  	call 0xb4cb
0xb4cf:     89 c3                           	mov ebx, eax
0xb4d1:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb4d4:     89 04 24                        	mov dword ptr [esp], eax
0xb4d7:     e8 a8 76 00 00                  	call 0x12b84 <function_12b84>
0xb4dc:     89 d8                           	mov eax, ebx
0xb4de:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb4e1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb4e8:     74 31                           	je 0xb51b <function_b51b>
0xb4ea:     eb 2a                           	jmp 0xb516 <function_b516>
; function: function_b4ec at 0xb4ec -- 0xb509
0xb4ec:     89 c6                           	mov esi, eax
0xb4ee:     89 d3                           	mov ebx, edx
0xb4f0:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb4f3:     89 04 24                        	mov dword ptr [esp], eax
0xb4f6:     e8 89 76 00 00                  	call 0x12b84 <function_12b84>
0xb4fb:     89 f0                           	mov eax, esi
0xb4fd:     89 da                           	mov edx, ebx
0xb4ff:     eb 00                           	jmp 0xb501
0xb501:     83 fa ff                        	cmp edx, -1
0xb504:     74 08                           	je 0xb50e <function_b50e>
0xb506:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb509 -- 0xb50a
0xb509:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xb50a -- 0xb50b
; data inside code section at 0xb50b -- 0xb50e
0xb50b:     ff ff ff                                           |...             |
; function: function_b50e at 0xb50e -- 0xb511
0xb50e:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb511 -- 0xb512
0xb511:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xb512 -- 0xb513
; data inside code section at 0xb513 -- 0xb516
0xb513:     ff ff ff                                           |...             |
; function: function_b516 at 0xb516 -- 0xb51b
0xb516:     e8 fc ff ff ff                  	call 0xb517
; function: function_b51b at 0xb51b -- 0xb522
0xb51b:     83 c4 30                        	add esp, 0x30
0xb51e:     5b                              	pop ebx
0xb51f:     5e                              	pop esi
0xb520:     5d                              	pop ebp
0xb521:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadIc7CBigNumEEbRKT_RT0_
; function: _ZN8CLevelDB4ReadIc7CBigNumEEbRKT_RT0_ at 0xb522 -- 0xb648
0xb522:     55                              	push ebp
0xb523:     89 e5                           	mov ebp, esp
0xb525:     56                              	push esi
0xb526:     53                              	push ebx
0xb527:     81 ec 90 00 00 00               	sub esp, 0x90
0xb52d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb530:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xb533:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb536:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xb539:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb53c:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xb53f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb545:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb548:     31 c0                           	xor eax, eax
0xb54a:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xb552:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xb55a:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb55d:     89 04 24                        	mov dword ptr [esp], eax
0xb560:     e8 99 44 00 00                  	call 0xf9fe <function_f9fe>
0xb565:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xb568:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb56c:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb56f:     89 04 24                        	mov dword ptr [esp], eax
0xb572:     e8 f7 f4 00 00                  	call 0x1aa6e <function_1aa6e>
0xb577:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb57b:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb57e:     89 04 24                        	mov dword ptr [esp], eax
0xb581:     e8 da 47 00 00                  	call 0xfd60 <function_fd60>
0xb586:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xb589:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb58d:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb590:     89 04 24                        	mov dword ptr [esp], eax
0xb593:     e8 2c f5 00 00                  	call 0x1aac4 <function_1aac4>
0xb598:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb59b:     89 04 24                        	mov dword ptr [esp], eax
0xb59e:     e8 7f 47 00 00                  	call 0xfd22 <function_fd22>
0xb5a3:     89 c3                           	mov ebx, eax
0xb5a5:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xb5ad:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb5b0:     89 04 24                        	mov dword ptr [esp], eax
0xb5b3:     e8 f2 47 00 00                  	call 0xfdaa <function_fdaa>
0xb5b8:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xb5bc:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb5c0:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xb5c3:     89 04 24                        	mov dword ptr [esp], eax
0xb5c6:     e8 49 74 00 00                  	call 0x12a14 <function_12a14>
0xb5cb:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xb5ce:     89 04 24                        	mov dword ptr [esp], eax
0xb5d1:     e8 fc ff ff ff                  	call 0xb5d2
0xb5d6:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xb5d9:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0xb5dc:     8b 00                           	mov eax, dword ptr [eax]
0xb5de:     83 c0 14                        	add eax, 0x14
0xb5e1:     8b 18                           	mov ebx, dword ptr [eax]
0xb5e3:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xb5e6:     8d 70 30                        	lea esi, [eax + 0x30]
0xb5e9:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xb5ec:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xb5ef:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xb5f2:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xb5f5:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xb5f9:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xb5fc:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xb600:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xb604:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb608:     89 04 24                        	mov dword ptr [esp], eax
0xb60b:     ff d3                           	call ebx
0xb60d:     83 ec 04                        	sub esp, 4
0xb610:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xb613:     89 04 24                        	mov dword ptr [esp], eax
0xb616:     e8 37 75 00 00                  	call 0x12b52 <function_12b52>
0xb61b:     83 f0 01                        	xor eax, 1
0xb61e:     84 c0                           	test al, al
0xb620:     74 5f                           	je 0xb681 <function_b681>
0xb622:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xb625:     89 04 24                        	mov dword ptr [esp], eax
0xb628:     e8 59 75 00 00                  	call 0x12b86
0xb62d:     84 c0                           	test al, al
0xb62f:     74 0a                           	je 0xb63b <_ZN8CLevelDB4ReadIc7CBigNumEEbRKT_RT0_+0x119>
0xb631:     bb 00 00 00 00                  	mov ebx, 0
0xb636:     e9 b0 00 00 00                  	jmp 0xb6eb <function_b6eb>
0xb63b:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xb63e:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xb641:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xb645:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb648 -- 0xb649
0xb648:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xb649 -- 0xb64a
; data inside code section at 0xb64a -- 0xb657
0xb64a:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xb657 -- 0xb658
; data inside code section at 0xb658 -- 0xb67d
0xb658:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8 fc   |....D$...$.>....|
0xb668:     ff ff ff 8d 45 ec 89 04  24 e8 fc ff ff ff 8d 45   |....E...$......E|
0xb678:     e8 89 04 24 e8                                     |...$.           |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xb67d -- 0xb67e
; data inside code section at 0xb67e -- 0xb681
0xb67e:     ff ff ff                                           |...             |
; function: function_b681 at 0xb681 -- 0xb694
0xb681:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xb684:     89 04 24                        	mov dword ptr [esp], eax
0xb687:     e8 fc ff ff ff                  	call 0xb688
0xb68c:     89 c3                           	mov ebx, eax
0xb68e:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xb691:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb694 -- 0xb695
0xb694:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0xb695 -- 0xb696
; data inside code section at 0xb696 -- 0xb698
0xb696:     ff ff                                              |..              |
; function: function_b698 at 0xb698 -- 0xb69b
0xb698:     ff 01                           	inc dword ptr [ecx]
0xb69a:     c3                              	ret 
; data inside code section at 0xb69b -- 0xb6eb
0xb69b:     8d 45 e4 89 04 24 e8 fc  ff ff ff c7 44 24 10 60   |.E...$......D$.`|
0xb6ab:     90 0f 00 c7 44 24 0c 02  00 00 00 89 5c 24 08 89   |....D$......\$..|
0xb6bb:     44 24 04 8d 45 c0 89 04  24 e8 8f 43 00 00 8b 45   |D$..E...$..C...E|
0xb6cb:     8c 89 44 24 04 8d 45 c0  89 04 24 e8 93 f9 00 00   |..D$..E...$.....|
0xb6db:     8d 45 c0 89 04 24 e8 9a  44 00 00 bb 01 00 00 00   |.E...$..D.......|
; function: function_b6eb at 0xb6eb -- 0xb6fc
0xb6eb:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xb6ee:     89 04 24                        	mov dword ptr [esp], eax
0xb6f1:     e8 1c 74 00 00                  	call 0x12b12 <function_12b12>
0xb6f6:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xb6f9:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb6fc -- 0xb6fd
0xb6fc:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xb6fd -- 0xb6fe
; data inside code section at 0xb6fe -- 0xb702
0xb6fe:     ff ff ff 8d                                        |....            |
; function: function_b702 at 0xb702 -- 0xb723
0xb702:     45                              	inc ebp
0xb703:     a4                              	movsb byte ptr es:[edi], byte ptr [esi]
0xb704:     89 04 24                        	mov dword ptr [esp], eax
0xb707:     e8 74 44 00 00                  	call 0xfb80 <function_fb80>
0xb70c:     89 d8                           	mov eax, ebx
0xb70e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb711:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb718:     0f 84 a3 00 00 00               	je 0xb7c1 <function_b7c1>
0xb71e:     e9 99 00 00 00                  	jmp 0xb7bc <function_b7bc>
; data inside code section at 0xb723 -- 0xb72e
0xb723:     89 c6 89 d3 8d 45 ec 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xb72e -- 0xb72f
; data inside code section at 0xb72f -- 0xb732
0xb72f:     ff ff ff                                           |...             |
; function: function_b732 at 0xb732 -- 0xb734
0xb732:     eb 40                           	jmp 0xb774 <function_b774>
; function: function_b734 at 0xb734 -- 0xb770
0xb734:     89 c6                           	mov esi, eax
0xb736:     89 d3                           	mov ebx, edx
0xb738:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xb73b:     89 04 24                        	mov dword ptr [esp], eax
0xb73e:     e8 3d 44 00 00                  	call 0xfb80 <function_fb80>
0xb743:     89 f0                           	mov eax, esi
0xb745:     89 da                           	mov edx, ebx
0xb747:     eb 00                           	jmp 0xb749
0xb749:     89 d1                           	mov ecx, edx
0xb74b:     83 f9 02                        	cmp ecx, 2
0xb74e:     74 06                           	je 0xb756 <function_b734+0x22>
0xb750:     89 c6                           	mov esi, eax
0xb752:     89 d3                           	mov ebx, edx
0xb754:     eb 1e                           	jmp 0xb774 <function_b774>
0xb756:     89 04 24                        	mov dword ptr [esp], eax
0xb759:     e8 fc ff ff ff                  	call 0xb75a
0xb75e:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xb761:     bb 00 00 00 00                  	mov ebx, 0
0xb766:     e8 fc ff ff ff                  	call 0xb767
0xb76b:     e9 7b ff ff ff                  	jmp 0xb6eb <function_b6eb>
; data inside code section at 0xb770 -- 0xb774
0xb770:     89 c6 89 d3                                        |....            |
; function: function_b774 at 0xb774 -- 0xb781
0xb774:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xb777:     89 04 24                        	mov dword ptr [esp], eax
0xb77a:     e8 93 73 00 00                  	call 0x12b12 <function_12b12>
0xb77f:     eb 04                           	jmp 0xb785 <function_b785>
; function: function_b781 at 0xb781 -- 0xb785
0xb781:     89 c6                           	mov esi, eax
0xb783:     89 d3                           	mov ebx, edx
; function: function_b785 at 0xb785 -- 0xb792
0xb785:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xb788:     89 04 24                        	mov dword ptr [esp], eax
0xb78b:     e8 fc ff ff ff                  	call 0xb78c
0xb790:     eb 04                           	jmp 0xb796 <function_b796>
; function: function_b792 at 0xb792 -- 0xb796
0xb792:     89 c6                           	mov esi, eax
0xb794:     89 d3                           	mov ebx, edx
; function: function_b796 at 0xb796 -- 0xb7bc
0xb796:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb799:     89 04 24                        	mov dword ptr [esp], eax
0xb79c:     e8 df 43 00 00                  	call 0xfb80 <function_fb80>
0xb7a1:     89 f0                           	mov eax, esi
0xb7a3:     89 da                           	mov edx, ebx
0xb7a5:     eb 00                           	jmp 0xb7a7
0xb7a7:     83 fa ff                        	cmp edx, -1
0xb7aa:     74 08                           	je 0xb7b4 <function_b796+0x1e>
0xb7ac:     89 04 24                        	mov dword ptr [esp], eax
0xb7af:     e8 fc ff ff ff                  	call 0xb7b0
0xb7b4:     89 04 24                        	mov dword ptr [esp], eax
0xb7b7:     e8 fc ff ff ff                  	call 0xb7b8
; function: function_b7bc at 0xb7bc -- 0xb7c1
0xb7bc:     e8 fc ff ff ff                  	call 0xb7bd
; function: function_b7c1 at 0xb7c1 -- 0xb7c8
0xb7c1:     8d 65 f8                        	lea esp, [ebp - 8]
0xb7c4:     5b                              	pop ebx
0xb7c5:     5e                              	pop esi
0xb7c6:     5d                              	pop ebp
0xb7c7:     c3                              	ret 
; section: .text._ZN8CLevelDB5WriteIc7CBigNumEEbRKT_RKT0_b
; function: _ZN8CLevelDB5WriteIc7CBigNumEEbRKT_RKT0_b at 0xb7c8 -- 0xb84e
0xb7c8:     55                              	push ebp
0xb7c9:     89 e5                           	mov ebp, esp
0xb7cb:     56                              	push esi
0xb7cc:     53                              	push ebx
0xb7cd:     83 ec 30                        	sub esp, 0x30
0xb7d0:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xb7d3:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xb7d6:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xb7d9:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0xb7dc:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0xb7df:     8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0xb7e2:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0xb7e5:     88 45 d8                        	mov byte ptr [ebp - 0x28], al
0xb7e8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb7ee:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb7f1:     31 c0                           	xor eax, eax
0xb7f3:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb7f6:     89 04 24                        	mov dword ptr [esp], eax
0xb7f9:     e8 b2 76 00 00                  	call 0x12eb0 <function_12eb0>
0xb7fe:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xb801:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb805:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb808:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb80c:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb80f:     89 04 24                        	mov dword ptr [esp], eax
0xb812:     e8 57 fb 00 00                  	call 0x1b36e <function_1b36e>
0xb817:     0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0xb81b:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb81f:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb822:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb826:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb829:     89 04 24                        	mov dword ptr [esp], eax
0xb82c:     e8 fc ff ff ff                  	call 0xb82d
0xb831:     89 c3                           	mov ebx, eax
0xb833:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb836:     89 04 24                        	mov dword ptr [esp], eax
0xb839:     e8 a8 76 00 00                  	call 0x12ee6 <function_12ee6>
0xb83e:     89 d8                           	mov eax, ebx
0xb840:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb843:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb84a:     74 31                           	je 0xb87d <function_b87d>
0xb84c:     eb 2a                           	jmp 0xb878
; function: function_b84e at 0xb84e -- 0xb878
0xb84e:     89 c6                           	mov esi, eax
0xb850:     89 d3                           	mov ebx, edx
0xb852:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb855:     89 04 24                        	mov dword ptr [esp], eax
0xb858:     e8 89 76 00 00                  	call 0x12ee6 <function_12ee6>
0xb85d:     89 f0                           	mov eax, esi
0xb85f:     89 da                           	mov edx, ebx
0xb861:     eb 00                           	jmp 0xb863
0xb863:     83 fa ff                        	cmp edx, -1
0xb866:     74 08                           	je 0xb870 <function_b84e+0x22>
0xb868:     89 04 24                        	mov dword ptr [esp], eax
0xb86b:     e8 fc ff ff ff                  	call 0xb86c
0xb870:     89 04 24                        	mov dword ptr [esp], eax
0xb873:     e8 fc ff ff ff                  	call 0xb874
; data inside code section at 0xb878 -- 0xb879
0xb878:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb879 -- 0xb87a
; data inside code section at 0xb87a -- 0xb87d
0xb87a:     ff ff ff                                           |...             |
; function: function_b87d at 0xb87d -- 0xb884
0xb87d:     83 c4 30                        	add esp, 0x30
0xb880:     5b                              	pop ebx
0xb881:     5e                              	pop esi
0xb882:     5d                              	pop ebp
0xb883:     c3                              	ret 
; section: .text._ZSt9make_pairIciESt4pairIT_T0_ES1_S2_
; function: _ZSt9make_pairIciESt4pairIT_T0_ES1_S2_ at 0xb884 -- 0xb8d8
0xb884:     55                              	push ebp
0xb885:     89 e5                           	mov ebp, esp
0xb887:     83 ec 38                        	sub esp, 0x38
0xb88a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb88d:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xb890:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xb893:     88 45 e0                        	mov byte ptr [ebp - 0x20], al
0xb896:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb899:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xb89c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb8a2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb8a5:     31 c0                           	xor eax, eax
0xb8a7:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xb8aa:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb8ae:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xb8b1:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb8b5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb8b8:     89 04 24                        	mov dword ptr [esp], eax
0xb8bb:     e8 fe fc 00 00                  	call 0x1b5be <function_1b5be>
0xb8c0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb8c3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb8c6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb8cd:     74 05                           	je 0xb8d4 <_ZSt9make_pairIciESt4pairIT_T0_ES1_S2_+0x50>
0xb8cf:     e8 fc ff ff ff                  	call 0xb8d0
0xb8d4:     c9                              	leave 
0xb8d5:     c2 04 00                        	ret 4
; section: .text._ZN8CLevelDB5WriteISt4pairIciE14CBlockFileInfoEEbRKT_RKT0_b
; function: _ZN8CLevelDB5WriteISt4pairIciE14CBlockFileInfoEEbRKT_RKT0_b at 0xb8d8 -- 0xb93c
0xb8d8:     55                              	push ebp
0xb8d9:     89 e5                           	mov ebp, esp
0xb8db:     56                              	push esi
0xb8dc:     53                              	push ebx
0xb8dd:     83 ec 30                        	sub esp, 0x30
0xb8e0:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xb8e3:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xb8e6:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xb8e9:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0xb8ec:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0xb8ef:     8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0xb8f2:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0xb8f5:     88 45 d8                        	mov byte ptr [ebp - 0x28], al
0xb8f8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb8fe:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb901:     31 c0                           	xor eax, eax
0xb903:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb906:     89 04 24                        	mov dword ptr [esp], eax
0xb909:     e8 b2 76 00 00                  	call 0x12fc0 <function_12fc0>
0xb90e:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xb911:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb915:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xb918:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb91c:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb91f:     89 04 24                        	mov dword ptr [esp], eax
0xb922:     e8 37 fd 00 00                  	call 0x1b65e <function_1b65e>
0xb927:     0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0xb92b:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xb92f:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb932:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb936:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xb939:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xb93c -- 0xb93d
0xb93c:     e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0xb93d -- 0xb93e
; data inside code section at 0xb93e -- 0xb940
0xb93e:     ff ff                                              |..              |
; function: function_b940 at 0xb940 -- 0xb95e
0xb940:     ff 89 c3 8d 45 f0               	dec dword ptr [ecx - 0xfba723d]
0xb946:     89 04 24                        	mov dword ptr [esp], eax
0xb949:     e8 a8 76 00 00                  	call 0x12ff6
0xb94e:     89 d8                           	mov eax, ebx
0xb950:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xb953:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xb95a:     74 31                           	je 0xb98d <function_b98d>
0xb95c:     eb 2a                           	jmp 0xb988
; function: function_b95e at 0xb95e -- 0xb988
0xb95e:     89 c6                           	mov esi, eax
0xb960:     89 d3                           	mov ebx, edx
0xb962:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xb965:     89 04 24                        	mov dword ptr [esp], eax
0xb968:     e8 89 76 00 00                  	call 0x12ff6
0xb96d:     89 f0                           	mov eax, esi
0xb96f:     89 da                           	mov edx, ebx
0xb971:     eb 00                           	jmp 0xb973
0xb973:     83 fa ff                        	cmp edx, -1
0xb976:     74 08                           	je 0xb980 <function_b95e+0x22>
0xb978:     89 04 24                        	mov dword ptr [esp], eax
0xb97b:     e8 fc ff ff ff                  	call 0xb97c
0xb980:     89 04 24                        	mov dword ptr [esp], eax
0xb983:     e8 fc ff ff ff                  	call 0xb984
; data inside code section at 0xb988 -- 0xb989
0xb988:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb989 -- 0xb98a
; data inside code section at 0xb98a -- 0xb98d
0xb98a:     ff ff ff                                           |...             |
; function: function_b98d at 0xb98d -- 0xb994
0xb98d:     83 c4 30                        	add esp, 0x30
0xb990:     5b                              	pop ebx
0xb991:     5e                              	pop esi
0xb992:     5d                              	pop ebp
0xb993:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadISt4pairIciE14CBlockFileInfoEEbRKT_RT0_
; function: _ZN8CLevelDB4ReadISt4pairIciE14CBlockFileInfoEEbRKT_RT0_ at 0xb994 -- 0xbad8
0xb994:     55                              	push ebp
0xb995:     89 e5                           	mov ebp, esp
0xb997:     56                              	push esi
0xb998:     53                              	push ebx
0xb999:     81 ec 90 00 00 00               	sub esp, 0x90
0xb99f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xb9a2:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xb9a5:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xb9a8:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xb9ab:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xb9ae:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xb9b1:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xb9b7:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xb9ba:     31 c0                           	xor eax, eax
0xb9bc:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xb9c4:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xb9cc:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb9cf:     89 04 24                        	mov dword ptr [esp], eax
0xb9d2:     e8 99 44 00 00                  	call 0xfe70 <function_fe70>
0xb9d7:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xb9da:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb9de:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb9e1:     89 04 24                        	mov dword ptr [esp], eax
0xb9e4:     e8 c5 fe 00 00                  	call 0x1b8ae <unknown_1b8ae>
0xb9e9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb9ed:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xb9f0:     89 04 24                        	mov dword ptr [esp], eax
0xb9f3:     e8 da 47 00 00                  	call 0x101d2 <function_101d2>
0xb9f8:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xb9fb:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xb9ff:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xba02:     89 04 24                        	mov dword ptr [esp], eax
0xba05:     e8 f4 fe 00 00                  	call 0x1b8fe <function_1b8fe>
0xba0a:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xba0d:     89 04 24                        	mov dword ptr [esp], eax
0xba10:     e8 7f 47 00 00                  	call 0x10194 <function_10194>
0xba15:     89 c3                           	mov ebx, eax
0xba17:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xba1f:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xba22:     89 04 24                        	mov dword ptr [esp], eax
0xba25:     e8 f2 47 00 00                  	call 0x1021c <function_1021c>
0xba2a:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xba2e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xba32:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xba35:     89 04 24                        	mov dword ptr [esp], eax
0xba38:     e8 49 74 00 00                  	call 0x12e86 <function_12e86>
0xba3d:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xba40:     89 04 24                        	mov dword ptr [esp], eax
0xba43:     e8 fc ff ff ff                  	call 0xba44
0xba48:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xba4b:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0xba4e:     8b 00                           	mov eax, dword ptr [eax]
0xba50:     83 c0 14                        	add eax, 0x14
0xba53:     8b 18                           	mov ebx, dword ptr [eax]
0xba55:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xba58:     8d 70 30                        	lea esi, [eax + 0x30]
0xba5b:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xba5e:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xba61:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xba64:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xba67:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xba6b:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xba6e:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xba72:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xba76:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xba7a:     89 04 24                        	mov dword ptr [esp], eax
0xba7d:     ff d3                           	call ebx
0xba7f:     83 ec 04                        	sub esp, 4
0xba82:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xba85:     89 04 24                        	mov dword ptr [esp], eax
0xba88:     e8 37 75 00 00                  	call 0x12fc4
0xba8d:     83 f0 01                        	xor eax, 1
0xba90:     84 c0                           	test al, al
0xba92:     74 5f                           	je 0xbaf3 <function_baf3>
0xba94:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xba97:     89 04 24                        	mov dword ptr [esp], eax
0xba9a:     e8 59 75 00 00                  	call 0x12ff8
0xba9f:     84 c0                           	test al, al
0xbaa1:     74 0a                           	je 0xbaad <_ZN8CLevelDB4ReadISt4pairIciE14CBlockFileInfoEEbRKT_RT0_+0x119>
0xbaa3:     bb 00 00 00 00                  	mov ebx, 0
0xbaa8:     e9 b0 00 00 00                  	jmp 0xbb5d <function_bb5d>
0xbaad:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbab0:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xbab3:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xbab7:     89 04 24                        	mov dword ptr [esp], eax
0xbaba:     e8 fc ff ff ff                  	call 0xbabb
0xbabf:     83 ec 04                        	sub esp, 4
0xbac2:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbac5:     89 04 24                        	mov dword ptr [esp], eax
0xbac8:     e8 fc ff ff ff                  	call 0xbac9
0xbacd:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbad1:     c7 04 24 d2 3e 00 00            	mov dword ptr [esp], 0x3ed2 ; "LevelDB read failure: %s\n"
; data inside code section at 0xbad8 -- 0xbad9
0xbad8:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xbad9 -- 0xbada
; data inside code section at 0xbada -- 0xbae4
0xbada:     ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0xbae4 -- 0xbae5
; data inside code section at 0xbae5 -- 0xbaef
0xbae5:     ff ff ff 8d 45 e8 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xbaef -- 0xbaf0
; data inside code section at 0xbaf0 -- 0xbaf3
0xbaf0:     ff ff ff                                           |...             |
; function: function_baf3 at 0xbaf3 -- 0xbaf9
0xbaf3:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xbaf6:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbaf9 -- 0xbafa
0xbaf9:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4dataEv at 0xbafa -- 0xbafb
; data inside code section at 0xbafb -- 0xbaff
0xbafb:     ff ff ff 89                                        |....            |
; function: function_baff at 0xbaff -- 0xbb00
0xbaff:     c3                              	ret 
; data inside code section at 0xbb00 -- 0xbb0a
0xbb00:     8d 45 e4 89 04 24 e8 fc  ff ff                     |.E...$....      |
; function: function_bb0a at 0xbb0a -- 0xbb0d
0xbb0a:     ff 01                           	inc dword ptr [ecx]
0xbb0c:     c3                              	ret 
; data inside code section at 0xbb0d -- 0xbb5d
0xbb0d:     8d 45 e4 89 04 24 e8 fc  ff ff ff c7 44 24 10 60   |.E...$......D$.`|
0xbb1d:     90 0f 00 c7 44 24 0c 02  00 00 00 89 5c 24 08 89   |....D$......\$..|
0xbb2d:     44 24 04 8d 45 c0 89 04  24 e8 8f 43 00 00 8b 45   |D$..E...$..C...E|
0xbb3d:     8c 89 44 24 04 8d 45 c0  89 04 24 e8 0b fe 00 00   |..D$..E...$.....|
0xbb4d:     8d 45 c0 89 04 24 e8 9a  44 00 00 bb 01 00 00 00   |.E...$..D.......|
; function: function_bb5d at 0xbb5d -- 0xbb95
0xbb5d:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xbb60:     89 04 24                        	mov dword ptr [esp], eax
0xbb63:     e8 1c 74 00 00                  	call 0x12f84 <function_12f84>
0xbb68:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xbb6b:     89 04 24                        	mov dword ptr [esp], eax
0xbb6e:     e8 fc ff ff ff                  	call 0xbb6f
0xbb73:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xbb76:     89 04 24                        	mov dword ptr [esp], eax
0xbb79:     e8 74 44 00 00                  	call 0xfff2 <function_fff2>
0xbb7e:     89 d8                           	mov eax, ebx
0xbb80:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xbb83:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xbb8a:     0f 84 a3 00 00 00               	je 0xbc33 <function_bc33>
0xbb90:     e9 99 00 00 00                  	jmp 0xbc2e <function_bc2e>
; function: function_bb95 at 0xbb95 -- 0xbba6
0xbb95:     89 c6                           	mov esi, eax
0xbb97:     89 d3                           	mov ebx, edx
0xbb99:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbb9c:     89 04 24                        	mov dword ptr [esp], eax
0xbb9f:     e8 fc ff ff ff                  	call 0xbba0
0xbba4:     eb 40                           	jmp 0xbbe6 <function_bbe6>
; function: function_bba6 at 0xbba6 -- 0xbbd8
0xbba6:     89 c6                           	mov esi, eax
0xbba8:     89 d3                           	mov ebx, edx
0xbbaa:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xbbad:     89 04 24                        	mov dword ptr [esp], eax
0xbbb0:     e8 3d 44 00 00                  	call 0xfff2 <function_fff2>
0xbbb5:     89 f0                           	mov eax, esi
0xbbb7:     89 da                           	mov edx, ebx
0xbbb9:     eb 00                           	jmp 0xbbbb
0xbbbb:     89 d1                           	mov ecx, edx
0xbbbd:     83 f9 02                        	cmp ecx, 2
0xbbc0:     74 06                           	je 0xbbc8 <function_bba6+0x22>
0xbbc2:     89 c6                           	mov esi, eax
0xbbc4:     89 d3                           	mov ebx, edx
0xbbc6:     eb 1e                           	jmp 0xbbe6 <function_bbe6>
0xbbc8:     89 04 24                        	mov dword ptr [esp], eax
0xbbcb:     e8 fc ff ff ff                  	call 0xbbcc
0xbbd0:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xbbd3:     bb 00 00 00 00                  	mov ebx, 0
; data inside code section at 0xbbd8 -- 0xbbd9
0xbbd8:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xbbd9 -- 0xbbda
; data inside code section at 0xbbda -- 0xbbdd
0xbbda:     ff ff ff                                           |...             |
; function: function_bbdd at 0xbbdd -- 0xbbe2
0xbbdd:     e9 7b ff ff ff                  	jmp 0xbb5d <function_bb5d>
; data inside code section at 0xbbe2 -- 0xbbe6
0xbbe2:     89 c6 89 d3                                        |....            |
; function: function_bbe6 at 0xbbe6 -- 0xbbf3
0xbbe6:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xbbe9:     89 04 24                        	mov dword ptr [esp], eax
0xbbec:     e8 93 73 00 00                  	call 0x12f84 <function_12f84>
0xbbf1:     eb 04                           	jmp 0xbbf7 <function_bbf7>
; function: function_bbf3 at 0xbbf3 -- 0xbbf7
0xbbf3:     89 c6                           	mov esi, eax
0xbbf5:     89 d3                           	mov ebx, edx
; function: function_bbf7 at 0xbbf7 -- 0xbbfd
0xbbf7:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xbbfa:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbbfd -- 0xbbfe
0xbbfd:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xbbfe -- 0xbbff
; data inside code section at 0xbbff -- 0xbc02
0xbbff:     ff ff ff                                           |...             |
; function: function_bc02 at 0xbc02 -- 0xbc04
0xbc02:     eb 04                           	jmp 0xbc08 <function_bc08>
; function: function_bc04 at 0xbc04 -- 0xbc08
0xbc04:     89 c6                           	mov esi, eax
0xbc06:     89 d3                           	mov ebx, edx
; function: function_bc08 at 0xbc08 -- 0xbc2e
0xbc08:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xbc0b:     89 04 24                        	mov dword ptr [esp], eax
0xbc0e:     e8 df 43 00 00                  	call 0xfff2 <function_fff2>
0xbc13:     89 f0                           	mov eax, esi
0xbc15:     89 da                           	mov edx, ebx
0xbc17:     eb 00                           	jmp 0xbc19
0xbc19:     83 fa ff                        	cmp edx, -1
0xbc1c:     74 08                           	je 0xbc26 <function_bc08+0x1e>
0xbc1e:     89 04 24                        	mov dword ptr [esp], eax
0xbc21:     e8 fc ff ff ff                  	call 0xbc22
0xbc26:     89 04 24                        	mov dword ptr [esp], eax
0xbc29:     e8 fc ff ff ff                  	call 0xbc2a
; function: function_bc2e at 0xbc2e -- 0xbc33
0xbc2e:     e8 fc ff ff ff                  	call 0xbc2f
; function: function_bc33 at 0xbc33 -- 0xbc3a
0xbc33:     8d 65 f8                        	lea esp, [ebp - 8]
0xbc36:     5b                              	pop ebx
0xbc37:     5e                              	pop esi
0xbc38:     5d                              	pop ebp
0xbc39:     c3                              	ret 
; section: .text._ZN8CLevelDB5WriteIciEEbRKT_RKT0_b
; function: _ZN8CLevelDB5WriteIciEEbRKT_RKT0_b at 0xbc3a -- 0xbcc0
0xbc3a:     55                              	push ebp
0xbc3b:     89 e5                           	mov ebp, esp
0xbc3d:     56                              	push esi
0xbc3e:     53                              	push ebx
0xbc3f:     83 ec 30                        	sub esp, 0x30
0xbc42:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xbc45:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xbc48:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xbc4b:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0xbc4e:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0xbc51:     8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0xbc54:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0xbc57:     88 45 d8                        	mov byte ptr [ebp - 0x28], al
0xbc5a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xbc60:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xbc63:     31 c0                           	xor eax, eax
0xbc65:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbc68:     89 04 24                        	mov dword ptr [esp], eax
0xbc6b:     e8 b2 76 00 00                  	call 0x13322 <function_13322>
0xbc70:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xbc73:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xbc77:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xbc7a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbc7e:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbc81:     89 04 24                        	mov dword ptr [esp], eax
0xbc84:     e8 cf ff 00 00                  	call 0x1bc58 <unknown_1bc58>
0xbc89:     0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0xbc8d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xbc91:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbc94:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbc98:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xbc9b:     89 04 24                        	mov dword ptr [esp], eax
0xbc9e:     e8 fc ff ff ff                  	call 0xbc9f
0xbca3:     89 c3                           	mov ebx, eax
0xbca5:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbca8:     89 04 24                        	mov dword ptr [esp], eax
0xbcab:     e8 a8 76 00 00                  	call 0x13358 <function_13358>
0xbcb0:     89 d8                           	mov eax, ebx
0xbcb2:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xbcb5:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xbcbc:     74 31                           	je 0xbcef <function_bcef>
0xbcbe:     eb 2a                           	jmp 0xbcea <function_bcea>
; function: function_bcc0 at 0xbcc0 -- 0xbcdd
0xbcc0:     89 c6                           	mov esi, eax
0xbcc2:     89 d3                           	mov ebx, edx
0xbcc4:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbcc7:     89 04 24                        	mov dword ptr [esp], eax
0xbcca:     e8 89 76 00 00                  	call 0x13358 <function_13358>
0xbccf:     89 f0                           	mov eax, esi
0xbcd1:     89 da                           	mov edx, ebx
0xbcd3:     eb 00                           	jmp 0xbcd5
0xbcd5:     83 fa ff                        	cmp edx, -1
0xbcd8:     74 08                           	je 0xbce2 <function_bce2>
0xbcda:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbcdd -- 0xbcde
0xbcdd:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xbcde -- 0xbcdf
; data inside code section at 0xbcdf -- 0xbce2
0xbcdf:     ff ff ff                                           |...             |
; function: function_bce2 at 0xbce2 -- 0xbce5
0xbce2:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbce5 -- 0xbce6
0xbce5:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xbce6 -- 0xbce7
; data inside code section at 0xbce7 -- 0xbcea
0xbce7:     ff ff ff                                           |...             |
; function: function_bcea at 0xbcea -- 0xbcef
0xbcea:     e8 fc ff ff ff                  	call 0xbceb
; function: function_bcef at 0xbcef -- 0xbcf6
0xbcef:     83 c4 30                        	add esp, 0x30
0xbcf2:     5b                              	pop ebx
0xbcf3:     5e                              	pop esi
0xbcf4:     5d                              	pop ebp
0xbcf5:     c3                              	ret 
; section: .text._ZN8CLevelDB5WriteIccEEbRKT_RKT0_b
; function: _ZN8CLevelDB5WriteIccEEbRKT_RKT0_b at 0xbcf6 -- 0xbd7c
0xbcf6:     55                              	push ebp
0xbcf7:     89 e5                           	mov ebp, esp
0xbcf9:     56                              	push esi
0xbcfa:     53                              	push ebx
0xbcfb:     83 ec 30                        	sub esp, 0x30
0xbcfe:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xbd01:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xbd04:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xbd07:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0xbd0a:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0xbd0d:     8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0xbd10:     89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0xbd13:     88 45 d8                        	mov byte ptr [ebp - 0x28], al
0xbd16:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xbd1c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xbd1f:     31 c0                           	xor eax, eax
0xbd21:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbd24:     89 04 24                        	mov dword ptr [esp], eax
0xbd27:     e8 b2 76 00 00                  	call 0x133de <function_133de>
0xbd2c:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xbd2f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xbd33:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xbd36:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbd3a:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbd3d:     89 04 24                        	mov dword ptr [esp], eax
0xbd40:     e8 63 01 01 00                  	call 0x1bea8 <unknown_1bea8>
0xbd45:     0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0xbd49:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xbd4d:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbd50:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbd54:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xbd57:     89 04 24                        	mov dword ptr [esp], eax
0xbd5a:     e8 fc ff ff ff                  	call 0xbd5b
0xbd5f:     89 c3                           	mov ebx, eax
0xbd61:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbd64:     89 04 24                        	mov dword ptr [esp], eax
0xbd67:     e8 a8 76 00 00                  	call 0x13414 <function_13414>
0xbd6c:     89 d8                           	mov eax, ebx
0xbd6e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xbd71:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xbd78:     74 31                           	je 0xbdab <function_bdab>
0xbd7a:     eb 2a                           	jmp 0xbda6 <function_bda6>
; function: function_bd7c at 0xbd7c -- 0xbd99
0xbd7c:     89 c6                           	mov esi, eax
0xbd7e:     89 d3                           	mov ebx, edx
0xbd80:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbd83:     89 04 24                        	mov dword ptr [esp], eax
0xbd86:     e8 89 76 00 00                  	call 0x13414 <function_13414>
0xbd8b:     89 f0                           	mov eax, esi
0xbd8d:     89 da                           	mov edx, ebx
0xbd8f:     eb 00                           	jmp 0xbd91
0xbd91:     83 fa ff                        	cmp edx, -1
0xbd94:     74 08                           	je 0xbd9e <function_bd9e>
0xbd96:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbd99 -- 0xbd9a
0xbd99:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xbd9a -- 0xbd9b
; data inside code section at 0xbd9b -- 0xbd9e
0xbd9b:     ff ff ff                                           |...             |
; function: function_bd9e at 0xbd9e -- 0xbda6
0xbd9e:     89 04 24                        	mov dword ptr [esp], eax
0xbda1:     e8 fc ff ff ff                  	call 0xbda2
; function: function_bda6 at 0xbda6 -- 0xbdab
0xbda6:     e8 fc ff ff ff                  	call 0xbda7
; function: function_bdab at 0xbdab -- 0xbdb2
0xbdab:     83 c4 30                        	add esp, 0x30
0xbdae:     5b                              	pop ebx
0xbdaf:     5e                              	pop esi
0xbdb0:     5d                              	pop ebp
0xbdb1:     c3                              	ret 
; section: .text._ZN8CLevelDB5EraseIcEEbRKT_b
; function: _ZN8CLevelDB5EraseIcEEbRKT_b at 0xbdb2 -- 0xbe09
0xbdb2:     55                              	push ebp
0xbdb3:     89 e5                           	mov ebp, esp
0xbdb5:     56                              	push esi
0xbdb6:     53                              	push ebx
0xbdb7:     83 ec 30                        	sub esp, 0x30
0xbdba:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xbdbd:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xbdc0:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xbdc3:     8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0xbdc6:     89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0xbdc9:     88 45 dc                        	mov byte ptr [ebp - 0x24], al
0xbdcc:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xbdd2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xbdd5:     31 c0                           	xor eax, eax
0xbdd7:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbdda:     89 04 24                        	mov dword ptr [esp], eax
0xbddd:     e8 b8 76 00 00                  	call 0x1349a <function_1349a>
0xbde2:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xbde5:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbde9:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbdec:     89 04 24                        	mov dword ptr [esp], eax
0xbdef:     e8 04 03 01 00                  	call 0x1c0f8 <unknown_1c0f8>
0xbdf4:     0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0xbdf8:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xbdfc:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbdff:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbe03:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xbe06:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbe09 -- 0xbe0a
0xbe09:     e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0xbe0a -- 0xbe0b
; data inside code section at 0xbe0b -- 0xbe0d
0xbe0b:     ff ff                                              |..              |
; function: function_be0d at 0xbe0d -- 0xbe2b
0xbe0d:     ff 89 c3 8d 45 f0               	dec dword ptr [ecx - 0xfba723d]
0xbe13:     89 04 24                        	mov dword ptr [esp], eax
0xbe16:     e8 b5 76 00 00                  	call 0x134d0
0xbe1b:     89 d8                           	mov eax, ebx
0xbe1d:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xbe20:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xbe27:     74 31                           	je 0xbe5a <function_be5a>
0xbe29:     eb 2a                           	jmp 0xbe55 <function_be55>
; function: function_be2b at 0xbe2b -- 0xbe50
0xbe2b:     89 c6                           	mov esi, eax
0xbe2d:     89 d3                           	mov ebx, edx
0xbe2f:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbe32:     89 04 24                        	mov dword ptr [esp], eax
0xbe35:     e8 96 76 00 00                  	call 0x134d0
0xbe3a:     89 f0                           	mov eax, esi
0xbe3c:     89 da                           	mov edx, ebx
0xbe3e:     eb 00                           	jmp 0xbe40
0xbe40:     83 fa ff                        	cmp edx, -1
0xbe43:     74 08                           	je 0xbe4d <function_be2b+0x22>
0xbe45:     89 04 24                        	mov dword ptr [esp], eax
0xbe48:     e8 fc ff ff ff                  	call 0xbe49
0xbe4d:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbe50 -- 0xbe51
0xbe50:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xbe51 -- 0xbe52
; data inside code section at 0xbe52 -- 0xbe55
0xbe52:     ff ff ff                                           |...             |
; function: function_be55 at 0xbe55 -- 0xbe56
; dynamically linked function: __stack_chk_fail at 0xbe56 -- 0xbe57
; data inside code section at 0xbe57 -- 0xbe5a
0xbe57:     ff ff ff                                           |...             |
; function: function_be5a at 0xbe5a -- 0xbe61
0xbe5a:     83 c4 30                        	add esp, 0x30
0xbe5d:     5b                              	pop ebx
0xbe5e:     5e                              	pop esi
0xbe5f:     5d                              	pop ebp
0xbe60:     c3                              	ret 
; section: .text._ZN8CLevelDB6ExistsIcEEbRKT_
; function: _ZN8CLevelDB6ExistsIcEEbRKT_ at 0xbe62 -- 0xbf08
0xbe62:     55                              	push ebp
0xbe63:     89 e5                           	mov ebp, esp
0xbe65:     56                              	push esi
0xbe66:     53                              	push ebx
0xbe67:     83 ec 70                        	sub esp, 0x70
0xbe6a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xbe6d:     89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0xbe70:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xbe73:     89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0xbe76:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xbe7c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xbe7f:     31 c0                           	xor eax, eax
0xbe81:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xbe89:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xbe91:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xbe94:     89 04 24                        	mov dword ptr [esp], eax
0xbe97:     e8 a2 44 00 00                  	call 0x1033e <function_1033e>
0xbe9c:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0xbe9f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbea3:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xbea6:     89 04 24                        	mov dword ptr [esp], eax
0xbea9:     e8 00 f5 00 00                  	call 0x1b3ae
0xbeae:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbeb2:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xbeb5:     89 04 24                        	mov dword ptr [esp], eax
0xbeb8:     e8 e3 47 00 00                  	call 0x106a0 <function_106a0>
0xbebd:     8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0xbec0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbec4:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xbec7:     89 04 24                        	mov dword ptr [esp], eax
0xbeca:     e8 35 f5 00 00                  	call 0x1b404 <function_1b404>
0xbecf:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xbed2:     89 04 24                        	mov dword ptr [esp], eax
0xbed5:     e8 88 47 00 00                  	call 0x10662 <function_10662>
0xbeda:     89 c3                           	mov ebx, eax
0xbedc:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xbee4:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xbee7:     89 04 24                        	mov dword ptr [esp], eax
0xbeea:     e8 fb 47 00 00                  	call 0x106ea <function_106ea>
0xbeef:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xbef3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xbef7:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xbefa:     89 04 24                        	mov dword ptr [esp], eax
0xbefd:     e8 52 74 00 00                  	call 0x13354 <function_13354>
0xbf02:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xbf05:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbf08 -- 0xbf09
0xbf08:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xbf09 -- 0xbf0a
; data inside code section at 0xbf0a -- 0xbf0c
0xbf0a:     ff ff                                              |..              |
; function: function_bf0c at 0xbf0c -- 0xbf7c
0xbf0c:     ff 8b 45 b4 8b 40               	dec dword ptr [ebx + 0x408bb445]
0xbf12:     44                              	inc esp
0xbf13:     8b 00                           	mov eax, dword ptr [eax]
0xbf15:     83 c0 14                        	add eax, 0x14
0xbf18:     8b 18                           	mov ebx, dword ptr [eax]
0xbf1a:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0xbf1d:     8d 70 30                        	lea esi, [eax + 0x30]
0xbf20:     8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0xbf23:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xbf26:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbf29:     8d 4d e8                        	lea ecx, [ebp - 0x18]
0xbf2c:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xbf30:     8d 4d e0                        	lea ecx, [ebp - 0x20]
0xbf33:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xbf37:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xbf3b:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xbf3f:     89 04 24                        	mov dword ptr [esp], eax
0xbf42:     ff d3                           	call ebx
0xbf44:     83 ec 04                        	sub esp, 4
0xbf47:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbf4a:     89 04 24                        	mov dword ptr [esp], eax
0xbf4d:     e8 40 75 00 00                  	call 0x13492
0xbf52:     83 f0 01                        	xor eax, 1
0xbf55:     84 c0                           	test al, al
0xbf57:     74 5c                           	je 0xbfb5 <function_bfb5>
0xbf59:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbf5c:     89 04 24                        	mov dword ptr [esp], eax
0xbf5f:     e8 62 75 00 00                  	call 0x134c6 <function_134c6>
0xbf64:     84 c0                           	test al, al
0xbf66:     74 07                           	je 0xbf6f <function_bf0c+0x63>
0xbf68:     bb 00 00 00 00                  	mov ebx, 0
0xbf6d:     eb 4b                           	jmp 0xbfba <function_bfba>
0xbf6f:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xbf72:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xbf75:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xbf79:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbf7c -- 0xbf7d
0xbf7c:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xbf7d -- 0xbf7e
; data inside code section at 0xbf7e -- 0xbf8b
0xbf7e:     ff ff ff 83 ec 04 8d 45  f0 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xbf8b -- 0xbf8c
; data inside code section at 0xbf8c -- 0xbf9b
0xbf8c:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xbf9b -- 0xbf9c
; data inside code section at 0xbf9c -- 0xbfa6
0xbf9c:     ff ff ff 8d 45 f0 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0xbfa6 -- 0xbfa7
; data inside code section at 0xbfa7 -- 0xbfb5
0xbfa7:     ff ff ff 8d 45 ec 89 04  24 e8 fc ff ff ff         |....E...$.....  |
; function: function_bfb5 at 0xbfb5 -- 0xbfba
0xbfb5:     bb 01 00 00 00                  	mov ebx, 1
; function: function_bfba at 0xbfba -- 0xbfcb
0xbfba:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xbfbd:     89 04 24                        	mov dword ptr [esp], eax
0xbfc0:     e8 8d 74 00 00                  	call 0x13452
0xbfc5:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xbfc8:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xbfcb -- 0xbfcc
0xbfcb:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xbfcc -- 0xbfcd
; data inside code section at 0xbfcd -- 0xbfcf
0xbfcd:     ff ff                                              |..              |
; function: function_bfcf at 0xbfcf -- 0xbfeb
0xbfcf:     ff 8d 45 c4 89 04               	dec dword ptr [ebp + 0x489c445]
0xbfd5:     24 e8                           	and al, 0xe8
0xbfd7:     e5 44                           	in eax, 0x44
0xbfd9:     00 00                           	add byte ptr [eax], al
0xbfdb:     89 d8                           	mov eax, ebx
0xbfdd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xbfe0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xbfe7:     74 64                           	je 0xc04d <function_c04d>
0xbfe9:     eb 5d                           	jmp 0xc048 <function_c048>
; data inside code section at 0xbfeb -- 0xbff6
0xbfeb:     89 c6 89 d3 8d 45 f0 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xbff6 -- 0xbff7
; data inside code section at 0xbff7 -- 0xbffa
0xbff7:     ff ff ff                                           |...             |
; function: function_bffa at 0xbffa -- 0xbffc
0xbffa:     eb 04                           	jmp 0xc000 <function_c000>
; function: function_bffc at 0xbffc -- 0xc000
0xbffc:     89 c6                           	mov esi, eax
0xbffe:     89 d3                           	mov ebx, edx
; function: function_c000 at 0xc000 -- 0xc00d
0xc000:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xc003:     89 04 24                        	mov dword ptr [esp], eax
0xc006:     e8 47 74 00 00                  	call 0x13452
0xc00b:     eb 04                           	jmp 0xc011 <function_c011>
; function: function_c00d at 0xc00d -- 0xc011
0xc00d:     89 c6                           	mov esi, eax
0xc00f:     89 d3                           	mov ebx, edx
; function: function_c011 at 0xc011 -- 0xc01e
0xc011:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc014:     89 04 24                        	mov dword ptr [esp], eax
0xc017:     e8 fc ff ff ff                  	call 0xc018
0xc01c:     eb 04                           	jmp 0xc022 <function_c022>
; function: function_c01e at 0xc01e -- 0xc022
0xc01e:     89 c6                           	mov esi, eax
0xc020:     89 d3                           	mov ebx, edx
; function: function_c022 at 0xc022 -- 0xc03b
0xc022:     8d 45 c4                        	lea eax, [ebp - 0x3c]
0xc025:     89 04 24                        	mov dword ptr [esp], eax
0xc028:     e8 93 44 00 00                  	call 0x104c0
0xc02d:     89 f0                           	mov eax, esi
0xc02f:     89 da                           	mov edx, ebx
0xc031:     eb 00                           	jmp 0xc033
0xc033:     83 fa ff                        	cmp edx, -1
0xc036:     74 08                           	je 0xc040 <function_c040>
0xc038:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc03b -- 0xc03c
0xc03b:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xc03c -- 0xc03d
; data inside code section at 0xc03d -- 0xc040
0xc03d:     ff ff ff                                           |...             |
; function: function_c040 at 0xc040 -- 0xc048
0xc040:     89 04 24                        	mov dword ptr [esp], eax
0xc043:     e8 fc ff ff ff                  	call 0xc044
; function: function_c048 at 0xc048 -- 0xc049
; dynamically linked function: __stack_chk_fail at 0xc049 -- 0xc04a
; data inside code section at 0xc04a -- 0xc04d
0xc04a:     ff ff ff                                           |...             |
; function: function_c04d at 0xc04d -- 0xc054
0xc04d:     8d 65 f8                        	lea esp, [ebp - 8]
0xc050:     5b                              	pop ebx
0xc051:     5e                              	pop esi
0xc052:     5d                              	pop ebp
0xc053:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadIciEEbRKT_RT0_
; function: _ZN8CLevelDB4ReadIciEEbRKT_RT0_ at 0xc054 -- 0xc17a
0xc054:     55                              	push ebp
0xc055:     89 e5                           	mov ebp, esp
0xc057:     56                              	push esi
0xc058:     53                              	push ebx
0xc059:     81 ec 90 00 00 00               	sub esp, 0x90
0xc05f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc062:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xc065:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc068:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xc06b:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xc06e:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xc071:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc077:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc07a:     31 c0                           	xor eax, eax
0xc07c:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xc084:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xc08c:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc08f:     89 04 24                        	mov dword ptr [esp], eax
0xc092:     e8 99 44 00 00                  	call 0x10530 <function_10530>
0xc097:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xc09a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc09e:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc0a1:     89 04 24                        	mov dword ptr [esp], eax
0xc0a4:     e8 f7 f4 00 00                  	call 0x1b5a0 <function_1b5a0>
0xc0a9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc0ad:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc0b0:     89 04 24                        	mov dword ptr [esp], eax
0xc0b3:     e8 da 47 00 00                  	call 0x10892 <function_10892>
0xc0b8:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xc0bb:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc0bf:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc0c2:     89 04 24                        	mov dword ptr [esp], eax
0xc0c5:     e8 2c f5 00 00                  	call 0x1b5f6 <unknown_1b5f6>
0xc0ca:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc0cd:     89 04 24                        	mov dword ptr [esp], eax
0xc0d0:     e8 7f 47 00 00                  	call 0x10854 <function_10854>
0xc0d5:     89 c3                           	mov ebx, eax
0xc0d7:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xc0df:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc0e2:     89 04 24                        	mov dword ptr [esp], eax
0xc0e5:     e8 f2 47 00 00                  	call 0x108dc <function_108dc>
0xc0ea:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xc0ee:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc0f2:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xc0f5:     89 04 24                        	mov dword ptr [esp], eax
0xc0f8:     e8 49 74 00 00                  	call 0x13546 <function_13546>
0xc0fd:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc100:     89 04 24                        	mov dword ptr [esp], eax
0xc103:     e8 fc ff ff ff                  	call 0xc104
0xc108:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xc10b:     8b 40 44                        	mov eax, dword ptr [eax + 0x44]
0xc10e:     8b 00                           	mov eax, dword ptr [eax]
0xc110:     83 c0 14                        	add eax, 0x14
0xc113:     8b 18                           	mov ebx, dword ptr [eax]
0xc115:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xc118:     8d 70 30                        	lea esi, [eax + 0x30]
0xc11b:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xc11e:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xc121:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc124:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xc127:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xc12b:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xc12e:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xc132:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xc136:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xc13a:     89 04 24                        	mov dword ptr [esp], eax
0xc13d:     ff d3                           	call ebx
0xc13f:     83 ec 04                        	sub esp, 4
0xc142:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc145:     89 04 24                        	mov dword ptr [esp], eax
0xc148:     e8 37 75 00 00                  	call 0x13684 <function_13684>
0xc14d:     83 f0 01                        	xor eax, 1
0xc150:     84 c0                           	test al, al
0xc152:     74 5f                           	je 0xc1b3 <function_c1b3>
0xc154:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc157:     89 04 24                        	mov dword ptr [esp], eax
0xc15a:     e8 59 75 00 00                  	call 0x136b8 <function_136b8>
0xc15f:     84 c0                           	test al, al
0xc161:     74 0a                           	je 0xc16d <_ZN8CLevelDB4ReadIciEEbRKT_RT0_+0x119>
0xc163:     bb 00 00 00 00                  	mov ebx, 0
0xc168:     e9 b0 00 00 00                  	jmp 0xc21d
0xc16d:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xc170:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xc173:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xc177:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc17a -- 0xc17b
0xc17a:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xc17b -- 0xc17c
; data inside code section at 0xc17c -- 0xc189
0xc17c:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xc189 -- 0xc18a
; data inside code section at 0xc18a -- 0xc199
0xc18a:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xc199 -- 0xc19a
; data inside code section at 0xc19a -- 0xc1a0
0xc19a:     ff ff ff 8d 45 ec                                  |....E.          |
; function: function_c1a0 at 0xc1a0 -- 0xc1ae
0xc1a0:     89 04 24                        	mov dword ptr [esp], eax
0xc1a3:     e8 fc ff ff ff                  	call 0xc1a4
0xc1a8:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc1ab:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc1ae -- 0xc1af
0xc1ae:     e8                                                 |.               |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xc1af -- 0xc1b0
; data inside code section at 0xc1b0 -- 0xc1b3
0xc1b0:     ff ff ff                                           |...             |
; function: function_c1b3 at 0xc1b3 -- 0xc1b9
0xc1b3:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc1b6:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc1b9 -- 0xc1ba
0xc1b9:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4dataEv at 0xc1ba -- 0xc1bb
; data inside code section at 0xc1bb -- 0xc1bf
0xc1bb:     ff ff ff 89                                        |....            |
; function: function_c1bf at 0xc1bf -- 0xc1c0
0xc1bf:     c3                              	ret 
; data inside code section at 0xc1c0 -- 0xc1ca
0xc1c0:     8d 45 e4 89 04 24 e8 fc  ff ff                     |.E...$....      |
; function: function_c1ca at 0xc1ca -- 0xc1cd
0xc1ca:     ff 01                           	inc dword ptr [ecx]
0xc1cc:     c3                              	ret 
; data inside code section at 0xc1cd -- 0xc1d6
0xc1cd:     8d 45 e4 89 04 24 e8 fc  ff                        |.E...$...       |
; function: function_c1d6 at 0xc1d6 -- 0xc1d7
; data inside code section at 0xc1d7 -- 0xc218
0xc1d7:     ff c7 44 24 10 60 90 0f  00 c7 44 24 0c 02 00 00   |..D$.`....D$....|
0xc1e7:     00 89 5c 24 08 89 44 24  04 8d 45 c0 89 04 24 e8   |..\$..D$..E...$.|
0xc1f7:     8f 43 00 00 8b 45 8c 89  44 24 04 8d 45 c0 89 04   |.C...E..D$..E...|
0xc207:     24 e8 4b 80 00 00 8d 45  c0 89 04 24 e8 9a 44 00   |$.K....E...$..D.|
0xc217:     00                                                 |.               |
; function: function_c218 at 0xc218 -- 0xc22e
0xc218:     bb 01 00 00 00                  	mov ebx, 1
0xc21d:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc220:     89 04 24                        	mov dword ptr [esp], eax
0xc223:     e8 1c 74 00 00                  	call 0x13644 <function_13644>
0xc228:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc22b:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc22e -- 0xc22f
0xc22e:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xc22f -- 0xc230
; data inside code section at 0xc230 -- 0xc232
0xc230:     ff ff                                              |..              |
; function: function_c232 at 0xc232 -- 0xc28b
0xc232:     ff 8d 45 a4 89 04               	dec dword ptr [ebp + 0x489a445]
0xc238:     24 e8                           	and al, 0xe8
0xc23a:     74 44                           	je 0xc280 <function_c232+0x4e>
0xc23c:     00 00                           	add byte ptr [eax], al
0xc23e:     89 d8                           	mov eax, ebx
0xc240:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc243:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc24a:     0f 84 a3 00 00 00               	je 0xc2f3 <function_c2f3>
0xc250:     e9 99 00 00 00                  	jmp 0xc2ee <function_c2ee>
0xc255:     89 c6                           	mov esi, eax
0xc257:     89 d3                           	mov ebx, edx
0xc259:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xc25c:     89 04 24                        	mov dword ptr [esp], eax
0xc25f:     e8 fc ff ff ff                  	call 0xc260
0xc264:     eb 40                           	jmp 0xc2a6 <function_c2a6>
0xc266:     89 c6                           	mov esi, eax
0xc268:     89 d3                           	mov ebx, edx
0xc26a:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xc26d:     89 04 24                        	mov dword ptr [esp], eax
0xc270:     e8 3d 44 00 00                  	call 0x106b2
0xc275:     89 f0                           	mov eax, esi
0xc277:     89 da                           	mov edx, ebx
0xc279:     eb 00                           	jmp 0xc27b
0xc27b:     89 d1                           	mov ecx, edx
0xc27d:     83 f9 02                        	cmp ecx, 2
0xc280:     74 06                           	je 0xc288 <function_c232+0x56>
0xc282:     89 c6                           	mov esi, eax
0xc284:     89 d3                           	mov ebx, edx
0xc286:     eb 1e                           	jmp 0xc2a6 <function_c2a6>
0xc288:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc28b -- 0xc28c
0xc28b:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0xc28c -- 0xc28d
; data inside code section at 0xc28d -- 0xc299
0xc28d:     ff ff ff 89 45 f0 bb 00  00 00 00 e8               |....E.......    |
; dynamically linked function: __cxa_end_catch at 0xc299 -- 0xc29a
; data inside code section at 0xc29a -- 0xc29d
0xc29a:     ff ff ff                                           |...             |
; function: function_c29d at 0xc29d -- 0xc2a2
0xc29d:     e9 7b ff ff ff                  	jmp 0xc21d
; data inside code section at 0xc2a2 -- 0xc2a6
0xc2a2:     89 c6 89 d3                                        |....            |
; function: function_c2a6 at 0xc2a6 -- 0xc2b3
0xc2a6:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc2a9:     89 04 24                        	mov dword ptr [esp], eax
0xc2ac:     e8 93 73 00 00                  	call 0x13644 <function_13644>
0xc2b1:     eb 04                           	jmp 0xc2b7 <function_c2b7>
; function: function_c2b3 at 0xc2b3 -- 0xc2b7
0xc2b3:     89 c6                           	mov esi, eax
0xc2b5:     89 d3                           	mov ebx, edx
; function: function_c2b7 at 0xc2b7 -- 0xc2bd
0xc2b7:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc2ba:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc2bd -- 0xc2be
0xc2bd:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xc2be -- 0xc2bf
; data inside code section at 0xc2bf -- 0xc2c2
0xc2bf:     ff ff ff                                           |...             |
; function: function_c2c2 at 0xc2c2 -- 0xc2c4
0xc2c2:     eb 04                           	jmp 0xc2c8 <function_c2c8>
; function: function_c2c4 at 0xc2c4 -- 0xc2c8
0xc2c4:     89 c6                           	mov esi, eax
0xc2c6:     89 d3                           	mov ebx, edx
; function: function_c2c8 at 0xc2c8 -- 0xc2e9
0xc2c8:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc2cb:     89 04 24                        	mov dword ptr [esp], eax
0xc2ce:     e8 df 43 00 00                  	call 0x106b2
0xc2d3:     89 f0                           	mov eax, esi
0xc2d5:     89 da                           	mov edx, ebx
0xc2d7:     eb 00                           	jmp 0xc2d9
0xc2d9:     83 fa ff                        	cmp edx, -1
0xc2dc:     74 08                           	je 0xc2e6 <function_c2c8+0x1e>
0xc2de:     89 04 24                        	mov dword ptr [esp], eax
0xc2e1:     e8 fc ff ff ff                  	call 0xc2e2
0xc2e6:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc2e9 -- 0xc2ea
0xc2e9:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xc2ea -- 0xc2eb
; data inside code section at 0xc2eb -- 0xc2ee
0xc2eb:     ff ff ff                                           |...             |
; function: function_c2ee at 0xc2ee -- 0xc2ef
; dynamically linked function: __stack_chk_fail at 0xc2ef -- 0xc2f0
; data inside code section at 0xc2f0 -- 0xc2f3
0xc2f0:     ff ff ff                                           |...             |
; function: function_c2f3 at 0xc2f3 -- 0xc2fa
0xc2f3:     8d 65 f8                        	lea esp, [ebp - 8]
0xc2f6:     5b                              	pop ebx
0xc2f7:     5e                              	pop esi
0xc2f8:     5d                              	pop ebp
0xc2f9:     c3                              	ret 
; section: .text._ZN11CDataStreamrsIcEERS_RT_
; function: _ZN11CDataStreamrsIcEERS_RT_ at 0xc2fa -- 0xc34c
0xc2fa:     55                              	push ebp
0xc2fb:     89 e5                           	mov ebp, esp
0xc2fd:     83 ec 38                        	sub esp, 0x38
0xc300:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc303:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc306:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc309:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc30c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc312:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc315:     31 c0                           	xor eax, eax
0xc317:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc31a:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xc31d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc320:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xc323:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xc327:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xc32b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc32e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc332:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc335:     89 04 24                        	mov dword ptr [esp], eax
0xc338:     e8 ef 03 01 00                  	call 0x1c72c <unknown_1c72c>
0xc33d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc340:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc343:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc34a:     74 05                           	je 0xc351 <function_c351>
; data inside code section at 0xc34c -- 0xc34d
0xc34c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc34d -- 0xc34e
; data inside code section at 0xc34e -- 0xc351
0xc34e:     ff ff ff                                           |...             |
; function: function_c351 at 0xc351 -- 0xc353
0xc351:     c9                              	leave 
0xc352:     c3                              	ret 
; section: .text._ZN11CDataStreamrsI6CCoinsEERS_RT_
; function: _ZN11CDataStreamrsI6CCoinsEERS_RT_ at 0xc354 -- 0xc3ad
0xc354:     55                              	push ebp
0xc355:     89 e5                           	mov ebp, esp
0xc357:     83 ec 38                        	sub esp, 0x38
0xc35a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc35d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc360:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc363:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc366:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc36c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc36f:     31 c0                           	xor eax, eax
0xc371:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc374:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xc377:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc37a:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xc37d:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xc381:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xc385:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc388:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc38c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc38f:     89 04 24                        	mov dword ptr [esp], eax
0xc392:     e8 45 04 01 00                  	call 0x1c7dc <unknown_1c7dc>
0xc397:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc39a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc39d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc3a4:     74 05                           	je 0xc3ab <_ZN11CDataStreamrsI6CCoinsEERS_RT_+0x57>
0xc3a6:     e8 fc ff ff ff                  	call 0xc3a7
0xc3ab:     c9                              	leave 
0xc3ac:     c3                              	ret 
; section: .text._ZN11CDataStreamrsI7uint256EERS_RT_
; function: _ZN11CDataStreamrsI7uint256EERS_RT_ at 0xc3ae -- 0xc407
0xc3ae:     55                              	push ebp
0xc3af:     89 e5                           	mov ebp, esp
0xc3b1:     83 ec 38                        	sub esp, 0x38
0xc3b4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc3b7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc3ba:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc3bd:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc3c0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc3c6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc3c9:     31 c0                           	xor eax, eax
0xc3cb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc3ce:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xc3d1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc3d4:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xc3d7:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xc3db:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xc3df:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc3e2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc3e6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc3e9:     89 04 24                        	mov dword ptr [esp], eax
0xc3ec:     e8 a1 04 01 00                  	call 0x1c892 <unknown_1c892>
0xc3f1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc3f4:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc3f7:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc3fe:     74 05                           	je 0xc405 <_ZN11CDataStreamrsI7uint256EERS_RT_+0x57>
0xc400:     e8 fc ff ff ff                  	call 0xc401
0xc405:     c9                              	leave 
0xc406:     c3                              	ret 
; section: .text._ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_
; function: _ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_ at 0xc408 -- 0xc45a
0xc408:     55                              	push ebp
0xc409:     89 e5                           	mov ebp, esp
0xc40b:     83 ec 38                        	sub esp, 0x38
0xc40e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc411:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc414:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc417:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc41a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc420:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc423:     31 c0                           	xor eax, eax
0xc425:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc428:     8b 50 74                        	mov edx, dword ptr [eax + 0x74]
0xc42b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc42e:     8b 40 70                        	mov eax, dword ptr [eax + 0x70]
0xc431:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xc435:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xc439:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc43c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc440:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc443:     89 04 24                        	mov dword ptr [esp], eax
0xc446:     e8 fd 04 01 00                  	call 0x1c948 <unknown_1c948>
0xc44b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc44e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc451:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc458:     74 05                           	je 0xc45f <function_c45f>
; data inside code section at 0xc45a -- 0xc45b
0xc45a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc45b -- 0xc45c
; data inside code section at 0xc45c -- 0xc45f
0xc45c:     ff ff ff                                           |...             |
; function: function_c45f at 0xc45f -- 0xc461
0xc45f:     c9                              	leave 
0xc460:     c3                              	ret 
; section: .text._ZN11CHashWriterlsIcEERS_RKT_
; function: _ZN11CHashWriterlsIcEERS_RKT_ at 0xc462 -- 0xc46e
0xc462:     55                              	push ebp
0xc463:     89 e5                           	mov ebp, esp
0xc465:     83 ec 38                        	sub esp, 0x38
0xc468:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc46b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0xc46e -- 0xc470
0xc46e:     8b 45                                              |.E              |
; function: function_c470 at 0xc470 -- 0xc4ba
0xc470:     0c 89                           	or al, 0x89
0xc472:     45                              	inc ebp
0xc473:     e0 65                           	loopne 0xc4da
0xc475:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xc47a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc47d:     31 c0                           	xor eax, eax
0xc47f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc482:     8b 48 74                        	mov ecx, dword ptr [eax + 0x74]
0xc485:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc488:     8b 50 70                        	mov edx, dword ptr [eax + 0x70]
0xc48b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc48e:     0f b6 00                        	movzx eax, byte ptr [eax]
0xc491:     0f be c0                        	movsx eax, al
0xc494:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xc498:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xc49c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc4a0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc4a3:     89 04 24                        	mov dword ptr [esp], eax
0xc4a6:     e8 53 05 01 00                  	call 0x1c9fe <unknown_1c9fe>
0xc4ab:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc4ae:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc4b1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc4b8:     74 05                           	je 0xc4bf <function_c4bf>
; data inside code section at 0xc4ba -- 0xc4bb
0xc4ba:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc4bb -- 0xc4bc
; data inside code section at 0xc4bc -- 0xc4bf
0xc4bc:     ff ff ff                                           |...             |
; function: function_c4bf at 0xc4bf -- 0xc4c1
0xc4bf:     c9                              	leave 
0xc4c0:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EEixEj
; function: _ZNSt6vectorI6CTxOutSaIS0_EEixEj at 0xc4c2 -- 0xc506
0xc4c2:     55                              	push ebp
0xc4c3:     89 e5                           	mov ebp, esp
0xc4c5:     83 ec 28                        	sub esp, 0x28
0xc4c8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc4cb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc4ce:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc4d1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc4d4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc4da:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc4dd:     31 c0                           	xor eax, eax
0xc4df:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc4e2:     8b 08                           	mov ecx, dword ptr [eax]
0xc4e4:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xc4e7:     89 d0                           	mov eax, edx
0xc4e9:     c1 e0 02                        	shl eax, 2
0xc4ec:     01 d0                           	add eax, edx
0xc4ee:     c1 e0 02                        	shl eax, 2
0xc4f1:     01 c8                           	add eax, ecx
0xc4f3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc4f6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc4fd:     74 05                           	je 0xc504 <_ZNSt6vectorI6CTxOutSaIS0_EEixEj+0x42>
0xc4ff:     e8 fc ff ff ff                  	call 0xc500
0xc504:     c9                              	leave 
0xc505:     c3                              	ret 
; section: .text._ZN11CHashWriterlsI7CVarIntIjEEERS_RKT_
; function: _ZN11CHashWriterlsI7CVarIntIjEEERS_RKT_ at 0xc506 -- 0xc52f
0xc506:     55                              	push ebp
0xc507:     89 e5                           	mov ebp, esp
0xc509:     83 ec 38                        	sub esp, 0x38
0xc50c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc50f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc512:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc515:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc518:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc51e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc521:     31 c0                           	xor eax, eax
0xc523:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc526:     8b 50 74                        	mov edx, dword ptr [eax + 0x74]
0xc529:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc52c:     8b 40 70                        	mov eax, dword ptr [eax + 0x70]
; data inside code section at 0xc52f -- 0xc530
0xc52f:     89                                                 |.               |
; function: function_c530 at 0xc530 -- 0xc558
0xc530:     54                              	push esp
0xc531:     24 0c                           	and al, 0xc
0xc533:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xc537:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc53a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc53e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc541:     89 04 24                        	mov dword ptr [esp], eax
0xc544:     e8 af 05 01 00                  	call 0x1caf8 <unknown_1caf8>
0xc549:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc54c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc54f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc556:     74 05                           	je 0xc55d <function_c55d>
; data inside code section at 0xc558 -- 0xc559
0xc558:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc559 -- 0xc55a
; data inside code section at 0xc55a -- 0xc55d
0xc55a:     ff ff ff                                           |...             |
; function: function_c55d at 0xc55d -- 0xc55f
0xc55d:     c9                              	leave 
0xc55e:     c3                              	ret 
; section: .text._ZN11CHashWriterlsI6CTxOutEERS_RKT_
; function: _ZN11CHashWriterlsI6CTxOutEERS_RKT_ at 0xc560 -- 0xc57b
0xc560:     55                              	push ebp
0xc561:     89 e5                           	mov ebp, esp
0xc563:     83 ec 38                        	sub esp, 0x38
0xc566:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc569:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc56c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc56f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc572:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc578:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0xc57b -- 0xc57c
0xc57b:     31                                                 |1               |
; function: function_c57c at 0xc57c -- 0xc5b9
0xc57c:     c0 8b 45 e4 8b 50 74            	ror byte ptr [ebx + 0x508be445], 0x74
0xc583:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc586:     8b 40 70                        	mov eax, dword ptr [eax + 0x70]
0xc589:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xc58d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xc591:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc594:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc598:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc59b:     89 04 24                        	mov dword ptr [esp], eax
0xc59e:     e8 0b 06 01 00                  	call 0x1cbae <unknown_1cbae>
0xc5a3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc5a6:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc5a9:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc5b0:     74 05                           	je 0xc5b7 <function_c57c+0x3b>
0xc5b2:     e8 fc ff ff ff                  	call 0xc5b3
0xc5b7:     c9                              	leave 
0xc5b8:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadISt4pairIc7uint256E10CDiskTxPosEEbRKT_RT0_
; function: _ZN8CLevelDB4ReadISt4pairIc7uint256E10CDiskTxPosEEbRKT_RT0_ at 0xc5ba -- 0xc669
0xc5ba:     55                              	push ebp
0xc5bb:     89 e5                           	mov ebp, esp
0xc5bd:     56                              	push esi
0xc5be:     53                              	push ebx
0xc5bf:     81 ec 90 00 00 00               	sub esp, 0x90
0xc5c5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc5c8:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xc5cb:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc5ce:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xc5d1:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xc5d4:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xc5d7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc5dd:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc5e0:     31 c0                           	xor eax, eax
0xc5e2:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xc5ea:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xc5f2:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc5f5:     89 04 24                        	mov dword ptr [esp], eax
0xc5f8:     e8 99 44 00 00                  	call 0x10a96 <function_10a96>
0xc5fd:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xc600:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc604:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc607:     89 04 24                        	mov dword ptr [esp], eax
0xc60a:     e8 fd f3 00 00                  	call 0x1ba0c <function_1ba0c>
0xc60f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc613:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc616:     89 04 24                        	mov dword ptr [esp], eax
0xc619:     e8 da 47 00 00                  	call 0x10df8 <function_10df8>
0xc61e:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xc621:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc625:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc628:     89 04 24                        	mov dword ptr [esp], eax
0xc62b:     e8 b6 ce 00 00                  	call 0x194e6 <function_194e6>
0xc630:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc633:     89 04 24                        	mov dword ptr [esp], eax
0xc636:     e8 7f 47 00 00                  	call 0x10dba <function_10dba>
0xc63b:     89 c3                           	mov ebx, eax
0xc63d:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xc645:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc648:     89 04 24                        	mov dword ptr [esp], eax
0xc64b:     e8 f2 47 00 00                  	call 0x10e42 <function_10e42>
0xc650:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xc654:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc658:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xc65b:     89 04 24                        	mov dword ptr [esp], eax
0xc65e:     e8 49 74 00 00                  	call 0x13aac
0xc663:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc666:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc669 -- 0xc66a
0xc669:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xc66a -- 0xc66b
; data inside code section at 0xc66b -- 0xc66d
0xc66b:     ff ff                                              |..              |
; function: function_c66d at 0xc66d -- 0xc6e0
0xc66d:     ff 8b 45 94 8b 40               	dec dword ptr [ebx + 0x408b9445]
0xc673:     44                              	inc esp
0xc674:     8b 00                           	mov eax, dword ptr [eax]
0xc676:     83 c0 14                        	add eax, 0x14
0xc679:     8b 18                           	mov ebx, dword ptr [eax]
0xc67b:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xc67e:     8d 70 30                        	lea esi, [eax + 0x30]
0xc681:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xc684:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xc687:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc68a:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xc68d:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xc691:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xc694:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xc698:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xc69c:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xc6a0:     89 04 24                        	mov dword ptr [esp], eax
0xc6a3:     ff d3                           	call ebx
0xc6a5:     83 ec 04                        	sub esp, 4
0xc6a8:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc6ab:     89 04 24                        	mov dword ptr [esp], eax
0xc6ae:     e8 37 75 00 00                  	call 0x13bea <function_13bea>
0xc6b3:     83 f0 01                        	xor eax, 1
0xc6b6:     84 c0                           	test al, al
0xc6b8:     74 5f                           	je 0xc719 <function_c719>
0xc6ba:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc6bd:     89 04 24                        	mov dword ptr [esp], eax
0xc6c0:     e8 59 75 00 00                  	call 0x13c1e
0xc6c5:     84 c0                           	test al, al
0xc6c7:     74 0a                           	je 0xc6d3 <function_c66d+0x66>
0xc6c9:     bb 00 00 00 00                  	mov ebx, 0
0xc6ce:     e9 b0 00 00 00                  	jmp 0xc783
0xc6d3:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xc6d6:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xc6d9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xc6dd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc6e0 -- 0xc6e1
0xc6e0:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xc6e1 -- 0xc6e2
; data inside code section at 0xc6e2 -- 0xc6ef
0xc6e2:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xc6ef -- 0xc6f0
; data inside code section at 0xc6f0 -- 0xc6ff
0xc6f0:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xc6ff -- 0xc700
; data inside code section at 0xc700 -- 0xc70a
0xc700:     ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0xc70a -- 0xc70b
; data inside code section at 0xc70b -- 0xc715
0xc70b:     ff ff ff 8d 45 e8 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xc715 -- 0xc716
; data inside code section at 0xc716 -- 0xc719
0xc716:     ff ff ff                                           |...             |
; function: function_c719 at 0xc719 -- 0xc72c
0xc719:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc71c:     89 04 24                        	mov dword ptr [esp], eax
0xc71f:     e8 fc ff ff ff                  	call 0xc720
0xc724:     89 c3                           	mov ebx, eax
0xc726:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc729:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc72c -- 0xc72d
0xc72c:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0xc72d -- 0xc72e
; data inside code section at 0xc72e -- 0xc730
0xc72e:     ff ff                                              |..              |
; function: function_c730 at 0xc730 -- 0xc733
0xc730:     ff 01                           	inc dword ptr [ecx]
0xc732:     c3                              	ret 
; data inside code section at 0xc733 -- 0xc73a
0xc733:     8d 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4dataEv at 0xc73a -- 0xc73b
; data inside code section at 0xc73b -- 0xc77e
0xc73b:     ff ff ff c7 44 24 10 60  90 0f 00 c7 44 24 0c 02   |....D$.`....D$..|
0xc74b:     00 00 00 89 5c 24 08 89  44 24 04 8d 45 c0 89 04   |....\$..D$..E...|
0xc75b:     24 e8 8f 43 00 00 8b 45  8c 89 44 24 04 8d 45 c0   |$..C...E..D$..E.|
0xc76b:     89 04 24 e8 f1 04 01 00  8d 45 c0 89 04 24 e8 9a   |..$......E...$..|
0xc77b:     44 00 00                                           |D..             |
; function: function_c77e at 0xc77e -- 0xc794
0xc77e:     bb 01 00 00 00                  	mov ebx, 1
0xc783:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc786:     89 04 24                        	mov dword ptr [esp], eax
0xc789:     e8 1c 74 00 00                  	call 0x13baa
0xc78e:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc791:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xc794 -- 0xc795
0xc794:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xc795 -- 0xc796
; data inside code section at 0xc796 -- 0xc798
0xc796:     ff ff                                              |..              |
; function: function_c798 at 0xc798 -- 0xc7bb
0xc798:     ff 8d 45 a4 89 04               	dec dword ptr [ebp + 0x489a445]
0xc79e:     24 e8                           	and al, 0xe8
0xc7a0:     74 44                           	je 0xc7e6 <function_c7e6>
0xc7a2:     00 00                           	add byte ptr [eax], al
0xc7a4:     89 d8                           	mov eax, ebx
0xc7a6:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc7a9:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc7b0:     0f 84 a3 00 00 00               	je 0xc859 <function_c859>
0xc7b6:     e9 99 00 00 00                  	jmp 0xc854 <function_c854>
; data inside code section at 0xc7bb -- 0xc7c6
0xc7bb:     89 c6 89 d3 8d 45 ec 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xc7c6 -- 0xc7c7
; data inside code section at 0xc7c7 -- 0xc7ca
0xc7c7:     ff ff ff                                           |...             |
; function: function_c7ca at 0xc7ca -- 0xc7cc
0xc7ca:     eb 40                           	jmp 0xc80c <function_c80c>
; function: function_c7cc at 0xc7cc -- 0xc7e6
0xc7cc:     89 c6                           	mov esi, eax
0xc7ce:     89 d3                           	mov ebx, edx
0xc7d0:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xc7d3:     89 04 24                        	mov dword ptr [esp], eax
0xc7d6:     e8 3d 44 00 00                  	call 0x10c18
0xc7db:     89 f0                           	mov eax, esi
0xc7dd:     89 da                           	mov edx, ebx
0xc7df:     eb 00                           	jmp 0xc7e1
0xc7e1:     89 d1                           	mov ecx, edx
0xc7e3:     83 f9 02                        	cmp ecx, 2
; function: function_c7e6 at 0xc7e6 -- 0xc7f9
0xc7e6:     74 06                           	je 0xc7ee <function_c7e6+0x8>
0xc7e8:     89 c6                           	mov esi, eax
0xc7ea:     89 d3                           	mov ebx, edx
0xc7ec:     eb 1e                           	jmp 0xc80c <function_c80c>
0xc7ee:     89 04 24                        	mov dword ptr [esp], eax
0xc7f1:     e8 fc ff ff ff                  	call 0xc7f2
0xc7f6:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
; data inside code section at 0xc7f9 -- 0xc7fa
0xc7f9:     bb                                                 |.               |
; function: function_c7fa at 0xc7fa -- 0xc7fe
0xc7fa:     00 00                           	add byte ptr [eax], al
0xc7fc:     00 00                           	add byte ptr [eax], al
; data inside code section at 0xc7fe -- 0xc7ff
0xc7fe:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xc7ff -- 0xc800
; data inside code section at 0xc800 -- 0xc803
0xc800:     ff ff ff                                           |...             |
; function: function_c803 at 0xc803 -- 0xc808
0xc803:     e9 7b ff ff ff                  	jmp 0xc783
; data inside code section at 0xc808 -- 0xc80c
0xc808:     89 c6 89 d3                                        |....            |
; function: function_c80c at 0xc80c -- 0xc819
0xc80c:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xc80f:     89 04 24                        	mov dword ptr [esp], eax
0xc812:     e8 93 73 00 00                  	call 0x13baa
0xc817:     eb 04                           	jmp 0xc81d <function_c81d>
; function: function_c819 at 0xc819 -- 0xc81d
0xc819:     89 c6                           	mov esi, eax
0xc81b:     89 d3                           	mov ebx, edx
; function: function_c81d at 0xc81d -- 0xc82a
0xc81d:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xc820:     89 04 24                        	mov dword ptr [esp], eax
0xc823:     e8 fc ff ff ff                  	call 0xc824
0xc828:     eb 04                           	jmp 0xc82e <function_c82e>
; function: function_c82a at 0xc82a -- 0xc82e
0xc82a:     89 c6                           	mov esi, eax
0xc82c:     89 d3                           	mov ebx, edx
; function: function_c82e at 0xc82e -- 0xc854
0xc82e:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xc831:     89 04 24                        	mov dword ptr [esp], eax
0xc834:     e8 df 43 00 00                  	call 0x10c18
0xc839:     89 f0                           	mov eax, esi
0xc83b:     89 da                           	mov edx, ebx
0xc83d:     eb 00                           	jmp 0xc83f
0xc83f:     83 fa ff                        	cmp edx, -1
0xc842:     74 08                           	je 0xc84c <function_c82e+0x1e>
0xc844:     89 04 24                        	mov dword ptr [esp], eax
0xc847:     e8 fc ff ff ff                  	call 0xc848
0xc84c:     89 04 24                        	mov dword ptr [esp], eax
0xc84f:     e8 fc ff ff ff                  	call 0xc850
; function: function_c854 at 0xc854 -- 0xc855
; dynamically linked function: __stack_chk_fail at 0xc855 -- 0xc856
; data inside code section at 0xc856 -- 0xc859
0xc856:     ff ff ff                                           |...             |
; function: function_c859 at 0xc859 -- 0xc860
0xc859:     8d 65 f8                        	lea esp, [ebp - 8]
0xc85c:     5b                              	pop ebx
0xc85d:     5e                              	pop esi
0xc85e:     5d                              	pop ebp
0xc85f:     c3                              	ret 
; section: .text._ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE5beginEv
; function: _ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE5beginEv at 0xc860 -- 0xc8af
0xc860:     55                              	push ebp
0xc861:     89 e5                           	mov ebp, esp
0xc863:     83 ec 38                        	sub esp, 0x38
0xc866:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc869:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc86c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc86f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc872:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc878:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc87b:     31 c0                           	xor eax, eax
0xc87d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc880:     8b 00                           	mov eax, dword ptr [eax]
0xc882:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xc885:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xc888:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc88c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc88f:     89 04 24                        	mov dword ptr [esp], eax
0xc892:     e8 cd 06 01 00                  	call 0x1cf64 <unknown_1cf64>
0xc897:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc89a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc89d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc8a4:     74 05                           	je 0xc8ab <_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE5beginEv+0x4b>
0xc8a6:     e8 fc ff ff ff                  	call 0xc8a7
0xc8ab:     c9                              	leave 
0xc8ac:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE3endEv
; function: _ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE3endEv at 0xc8b0 -- 0xc900
0xc8b0:     55                              	push ebp
0xc8b1:     89 e5                           	mov ebp, esp
0xc8b3:     83 ec 38                        	sub esp, 0x38
0xc8b6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc8b9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc8bc:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc8bf:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc8c2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc8c8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc8cb:     31 c0                           	xor eax, eax
0xc8cd:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc8d0:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0xc8d3:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xc8d6:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xc8d9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xc8dd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc8e0:     89 04 24                        	mov dword ptr [esp], eax
0xc8e3:     e8 cc 06 01 00                  	call 0x1cfb4 <unknown_1cfb4>
0xc8e8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc8eb:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc8ee:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc8f5:     74 05                           	je 0xc8fc <_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE3endEv+0x4c>
0xc8f7:     e8 fc ff ff ff                  	call 0xc8f8
0xc8fc:     c9                              	leave 
0xc8fd:     c2 04 00                        	ret 4
; section: .text._ZN9__gnu_cxxneIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_
; function: _ZN9__gnu_cxxneIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_ at 0xc900 -- 0xc949
0xc900:     55                              	push ebp
0xc901:     89 e5                           	mov ebp, esp
0xc903:     53                              	push ebx
0xc904:     83 ec 34                        	sub esp, 0x34
0xc907:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc90a:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc90d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc910:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc913:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc919:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc91c:     31 c0                           	xor eax, eax
0xc91e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc921:     89 04 24                        	mov dword ptr [esp], eax
0xc924:     e8 15 07 01 00                  	call 0x1d03e <unknown_1d03e>
0xc929:     8b 18                           	mov ebx, dword ptr [eax]
0xc92b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc92e:     89 04 24                        	mov dword ptr [esp], eax
0xc931:     e8 08 07 01 00                  	call 0x1d03e <unknown_1d03e>
0xc936:     8b 00                           	mov eax, dword ptr [eax]
0xc938:     39 c3                           	cmp ebx, eax
0xc93a:     0f 95 c0                        	setne al
0xc93d:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc940:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc947:     74 05                           	je 0xc94e <function_c94e>
; data inside code section at 0xc949 -- 0xc94a
0xc949:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc94a -- 0xc94b
; data inside code section at 0xc94b -- 0xc94e
0xc94b:     ff ff ff                                           |...             |
; function: function_c94e at 0xc94e -- 0xc954
0xc94e:     83 c4 34                        	add esp, 0x34
0xc951:     5b                              	pop ebx
0xc952:     5d                              	pop ebp
0xc953:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEppEi
; function: _ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEppEi at 0xc954 -- 0xc9a8
0xc954:     55                              	push ebp
0xc955:     89 e5                           	mov ebp, esp
0xc957:     83 ec 38                        	sub esp, 0x38
0xc95a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc95d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc960:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc963:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xc966:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xc969:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xc96c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc972:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc975:     31 c0                           	xor eax, eax
0xc977:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc97a:     8b 00                           	mov eax, dword ptr [eax]
0xc97c:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xc97f:     8d 55 f0                        	lea edx, [ebp - 0x10]
0xc982:     8d 48 2c                        	lea ecx, [eax + 0x2c]
0xc985:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xc988:     89 08                           	mov dword ptr [eax], ecx
0xc98a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xc98e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc991:     89 04 24                        	mov dword ptr [esp], eax
0xc994:     e8 bf 06 01 00                  	call 0x1d058 <unknown_1d058>
0xc999:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc99c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc99f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc9a6:     74 05                           	je 0xc9ad <function_c9ad>
; data inside code section at 0xc9a8 -- 0xc9a9
0xc9a8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc9a9 -- 0xc9aa
; data inside code section at 0xc9aa -- 0xc9ad
0xc9aa:     ff ff ff                                           |...             |
; function: function_c9ad at 0xc9ad -- 0xc9b1
0xc9ad:     c9                              	leave 
0xc9ae:     c2 04 00                        	ret 4
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv at 0xc9b2 -- 0xc9da
0xc9b2:     55                              	push ebp
0xc9b3:     89 e5                           	mov ebp, esp
0xc9b5:     83 ec 28                        	sub esp, 0x28
0xc9b8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc9bb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xc9be:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xc9c4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xc9c7:     31 c0                           	xor eax, eax
0xc9c9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xc9cc:     8b 00                           	mov eax, dword ptr [eax]
0xc9ce:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xc9d1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xc9d8:     74 05                           	je 0xc9df <function_c9df>
; data inside code section at 0xc9da -- 0xc9db
0xc9da:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc9db -- 0xc9dc
; data inside code section at 0xc9dc -- 0xc9df
0xc9dc:     ff ff ff                                           |...             |
; function: function_c9df at 0xc9df -- 0xc9e1
0xc9df:     c9                              	leave 
0xc9e0:     c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteISt4pairIc7uint256E10CDiskTxPosEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteISt4pairIc7uint256E10CDiskTxPosEEvRKT_RKT0_ at 0xc9e2 -- 0xcb1c
0xc9e2:     55                              	push ebp
0xc9e3:     89 e5                           	mov ebp, esp
0xc9e5:     53                              	push ebx
0xc9e6:     83 ec 74                        	sub esp, 0x74
0xc9e9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xc9ec:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0xc9ef:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xc9f2:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0xc9f5:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xc9f8:     89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0xc9fb:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xca01:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xca04:     31 c0                           	xor eax, eax
0xca06:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xca0e:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xca16:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xca19:     89 04 24                        	mov dword ptr [esp], eax
0xca1c:     e8 9d 44 00 00                  	call 0x10ebe <function_10ebe>
0xca21:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xca24:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xca28:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xca2b:     89 04 24                        	mov dword ptr [esp], eax
0xca2e:     e8 01 f4 00 00                  	call 0x1be34 <unknown_1be34>
0xca33:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xca37:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xca3a:     89 04 24                        	mov dword ptr [esp], eax
0xca3d:     e8 de 47 00 00                  	call 0x11220 <function_11220>
0xca42:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xca45:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xca49:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xca4c:     89 04 24                        	mov dword ptr [esp], eax
0xca4f:     e8 ba ce 00 00                  	call 0x1990e <function_1990e>
0xca54:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xca57:     89 04 24                        	mov dword ptr [esp], eax
0xca5a:     e8 83 47 00 00                  	call 0x111e2 <function_111e2>
0xca5f:     89 c3                           	mov ebx, eax
0xca61:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xca69:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xca6c:     89 04 24                        	mov dword ptr [esp], eax
0xca6f:     e8 f6 47 00 00                  	call 0x1126a <function_1126a>
0xca74:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xca78:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xca7c:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xca7f:     89 04 24                        	mov dword ptr [esp], eax
0xca82:     e8 4d 74 00 00                  	call 0x13ed4 <function_13ed4>
0xca87:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xca8f:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xca97:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xca9a:     89 04 24                        	mov dword ptr [esp], eax
0xca9d:     e8 1c 44 00 00                  	call 0x10ebe <function_10ebe>
0xcaa2:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xcaa5:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcaa9:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xcaac:     89 04 24                        	mov dword ptr [esp], eax
0xcaaf:     e8 9a 06 01 00                  	call 0x1d14e <unknown_1d14e>
0xcab4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcab8:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xcabb:     89 04 24                        	mov dword ptr [esp], eax
0xcabe:     e8 5d 47 00 00                  	call 0x11220 <function_11220>
0xcac3:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xcac6:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcaca:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xcacd:     89 04 24                        	mov dword ptr [esp], eax
0xcad0:     e8 c9 06 01 00                  	call 0x1d19e <unknown_1d19e>
0xcad5:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xcad8:     89 04 24                        	mov dword ptr [esp], eax
0xcadb:     e8 02 47 00 00                  	call 0x111e2 <function_111e2>
0xcae0:     89 c3                           	mov ebx, eax
0xcae2:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xcaea:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xcaed:     89 04 24                        	mov dword ptr [esp], eax
0xcaf0:     e8 75 47 00 00                  	call 0x1126a <function_1126a>
0xcaf5:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xcaf9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcafd:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xcb00:     89 04 24                        	mov dword ptr [esp], eax
0xcb03:     e8 cc 73 00 00                  	call 0x13ed4 <function_13ed4>
0xcb08:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xcb0b:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xcb0e:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xcb12:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0xcb15:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xcb19:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcb1c -- 0xcb1d
0xcb1c:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0xcb1d -- 0xcb1e
; data inside code section at 0xcb1e -- 0xcb20
0xcb1e:     ff ff                                              |..              |
; function: function_cb20 at 0xcb20 -- 0xcb45
0xcb20:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0xcb26:     24 e8                           	and al, 0xe8
0xcb28:     14 45                           	adc al, 0x45
0xcb2a:     00 00                           	add byte ptr [eax], al
0xcb2c:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xcb2f:     89 04 24                        	mov dword ptr [esp], eax
0xcb32:     e8 09 45 00 00                  	call 0x11040
0xcb37:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xcb3a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xcb41:     74 2d                           	je 0xcb70 <function_cb70>
0xcb43:     eb 26                           	jmp 0xcb6b <function_cb6b>
; function: function_cb45 at 0xcb45 -- 0xcb54
0xcb45:     89 c3                           	mov ebx, eax
0xcb47:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xcb4a:     89 04 24                        	mov dword ptr [esp], eax
0xcb4d:     e8 ee 44 00 00                  	call 0x11040
0xcb52:     eb 02                           	jmp 0xcb56 <function_cb56>
; function: function_cb54 at 0xcb54 -- 0xcb56
0xcb54:     89 c3                           	mov ebx, eax
; function: function_cb56 at 0xcb56 -- 0xcb66
0xcb56:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xcb59:     89 04 24                        	mov dword ptr [esp], eax
0xcb5c:     e8 df 44 00 00                  	call 0x11040
0xcb61:     89 d8                           	mov eax, ebx
0xcb63:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcb66 -- 0xcb67
0xcb66:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xcb67 -- 0xcb68
; data inside code section at 0xcb68 -- 0xcb6b
0xcb68:     ff ff ff                                           |...             |
; function: function_cb6b at 0xcb6b -- 0xcb6c
; dynamically linked function: __stack_chk_fail at 0xcb6c -- 0xcb6d
; function: function_cb6d at 0xcb6d -- 0xcb6e
; data inside code section at 0xcb6e -- 0xcb70
0xcb6e:     ff ff                                              |..              |
; function: function_cb70 at 0xcb70 -- 0xcb76
0xcb70:     83 c4 74                        	add esp, 0x74
0xcb73:     5b                              	pop ebx
0xcb74:     5d                              	pop ebp
0xcb75:     c3                              	ret 
; section: .text._ZSt9make_pairIcSsESt4pairIT_T0_ES1_S2_
; function: _ZSt9make_pairIcSsESt4pairIT_T0_ES1_S2_ at 0xcb76 -- 0xcbc1
0xcb76:     55                              	push ebp
0xcb77:     89 e5                           	mov ebp, esp
0xcb79:     83 ec 38                        	sub esp, 0x38
0xcb7c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xcb7f:     8b 55 08                        	mov edx, dword ptr [ebp + 8]
0xcb82:     89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0xcb85:     88 45 e0                        	mov byte ptr [ebp - 0x20], al
0xcb88:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xcb8b:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xcb8e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xcb94:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xcb97:     31 c0                           	xor eax, eax
0xcb99:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xcb9c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xcba0:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xcba3:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcba7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcbaa:     89 04 24                        	mov dword ptr [esp], eax
0xcbad:     e8 da 07 01 00                  	call 0x1d38c <unknown_1d38c>
0xcbb2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcbb5:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xcbb8:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xcbbf:     74 05                           	je 0xcbc6 <function_cbc6>
; data inside code section at 0xcbc1 -- 0xcbc2
0xcbc1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xcbc2 -- 0xcbc3
; data inside code section at 0xcbc3 -- 0xcbc6
0xcbc3:     ff ff ff                                           |...             |
; function: function_cbc6 at 0xcbc6 -- 0xcbca
0xcbc6:     c9                              	leave 
0xcbc7:     c2 04 00                        	ret 4
; section: .text._ZN8CLevelDB5WriteISt4pairIcSsEcEEbRKT_RKT0_b
; function: _ZN8CLevelDB5WriteISt4pairIcSsEcEEbRKT_RKT0_b at 0xcbca -- 0xcbd5
0xcbca:     55                              	push ebp
0xcbcb:     89 e5                           	mov ebp, esp
0xcbcd:     56                              	push esi
0xcbce:     53                              	push ebx
0xcbcf:     83 ec 30                        	sub esp, 0x30
0xcbd2:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
; data inside code section at 0xcbd5 -- 0xcbd6
0xcbd5:     8b                                                 |.               |
; function: function_cbd6 at 0xcbd6 -- 0xcc2e
0xcbd6:     55                              	push ebp
0xcbd7:     08 89 55 e4 8b 55               	or byte ptr [ecx + 0x558be455], cl
0xcbdd:     0c 89                           	or al, 0x89
0xcbdf:     55                              	push ebp
0xcbe0:     e0 8b                           	loopne 0xcb6d <function_cb6d>
0xcbe2:     55                              	push ebp
0xcbe3:     10 89 55 dc 88 45               	adc byte ptr [ecx + 0x4588dc55], cl
0xcbe9:     d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0xcbec:     14 00                           	adc al, 0
0xcbee:     00 00                           	add byte ptr [eax], al
0xcbf0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xcbf3:     31 c0                           	xor eax, eax
0xcbf5:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xcbf8:     89 04 24                        	mov dword ptr [esp], eax
0xcbfb:     e8 b2 76 00 00                  	call 0x142b2 <function_142b2>
0xcc00:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xcc03:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xcc07:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xcc0a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcc0e:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xcc11:     89 04 24                        	mov dword ptr [esp], eax
0xcc14:     e8 1d 08 01 00                  	call 0x1d436 <unknown_1d436>
0xcc19:     0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0xcc1d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xcc21:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xcc24:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcc28:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcc2b:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcc2e -- 0xcc2f
0xcc2e:     e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDB10WriteBatchER13CLevelDBBatchb at 0xcc2f -- 0xcc30
; data inside code section at 0xcc30 -- 0xcc32
0xcc30:     ff ff                                              |..              |
; function: function_cc32 at 0xcc32 -- 0xcc50
0xcc32:     ff 89 c3 8d 45 f0               	dec dword ptr [ecx - 0xfba723d]
0xcc38:     89 04 24                        	mov dword ptr [esp], eax
0xcc3b:     e8 a8 76 00 00                  	call 0x142e8 <function_142e8>
0xcc40:     89 d8                           	mov eax, ebx
0xcc42:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xcc45:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xcc4c:     74 31                           	je 0xcc7f <function_cc7f>
0xcc4e:     eb 2a                           	jmp 0xcc7a <function_cc7a>
; function: function_cc50 at 0xcc50 -- 0xcc6d
0xcc50:     89 c6                           	mov esi, eax
0xcc52:     89 d3                           	mov ebx, edx
0xcc54:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xcc57:     89 04 24                        	mov dword ptr [esp], eax
0xcc5a:     e8 89 76 00 00                  	call 0x142e8 <function_142e8>
0xcc5f:     89 f0                           	mov eax, esi
0xcc61:     89 da                           	mov edx, ebx
0xcc63:     eb 00                           	jmp 0xcc65
0xcc65:     83 fa ff                        	cmp edx, -1
0xcc68:     74 08                           	je 0xcc72 <function_cc72>
0xcc6a:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcc6d -- 0xcc6e
0xcc6d:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xcc6e -- 0xcc6f
; data inside code section at 0xcc6f -- 0xcc72
0xcc6f:     ff ff ff                                           |...             |
; function: function_cc72 at 0xcc72 -- 0xcc75
0xcc72:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcc75 -- 0xcc76
0xcc75:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xcc76 -- 0xcc77
; data inside code section at 0xcc77 -- 0xcc7a
0xcc77:     ff ff ff                                           |...             |
; function: function_cc7a at 0xcc7a -- 0xcc7b
; dynamically linked function: __stack_chk_fail at 0xcc7b -- 0xcc7c
; data inside code section at 0xcc7c -- 0xcc7f
0xcc7c:     ff ff ff                                           |...             |
; function: function_cc7f at 0xcc7f -- 0xcc86
0xcc7f:     83 c4 30                        	add esp, 0x30
0xcc82:     5b                              	pop ebx
0xcc83:     5e                              	pop esi
0xcc84:     5d                              	pop ebp
0xcc85:     c3                              	ret 
; section: .text._ZN8CLevelDB4ReadISt4pairIcSsEcEEbRKT_RT0_
; function: _ZN8CLevelDB4ReadISt4pairIcSsEcEEbRKT_RT0_ at 0xcc86 -- 0xccb6
0xcc86:     55                              	push ebp
0xcc87:     89 e5                           	mov ebp, esp
0xcc89:     56                              	push esi
0xcc8a:     53                              	push ebx
0xcc8b:     81 ec 90 00 00 00               	sub esp, 0x90
0xcc91:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xcc94:     89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0xcc97:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xcc9a:     89 45 90                        	mov dword ptr [ebp - 0x70], eax
0xcc9d:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xcca0:     89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0xcca3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xcca9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xccac:     31 c0                           	xor eax, eax
0xccae:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
; data inside code section at 0xccb6 -- 0xccba
0xccb6:     c7 44 24 04                                        |.D$.            |
; function: function_ccba at 0xccba -- 0xcd35
0xccba:     02 00                           	add al, byte ptr [eax]
0xccbc:     00 00                           	add byte ptr [eax], al
0xccbe:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xccc1:     89 04 24                        	mov dword ptr [esp], eax
0xccc4:     e8 99 44 00 00                  	call 0x11162 <function_11162>
0xccc9:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xcccc:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xccd0:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xccd3:     89 04 24                        	mov dword ptr [esp], eax
0xccd6:     e8 ab 09 01 00                  	call 0x1d686 <unknown_1d686>
0xccdb:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xccdf:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xcce2:     89 04 24                        	mov dword ptr [esp], eax
0xcce5:     e8 da 47 00 00                  	call 0x114c4 <function_114c4>
0xccea:     8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0xcced:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xccf1:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xccf4:     89 04 24                        	mov dword ptr [esp], eax
0xccf7:     e8 da 09 01 00                  	call 0x1d6d6 <unknown_1d6d6>
0xccfc:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xccff:     89 04 24                        	mov dword ptr [esp], eax
0xcd02:     e8 7f 47 00 00                  	call 0x11486 <function_11486>
0xcd07:     89 c3                           	mov ebx, eax
0xcd09:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xcd11:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xcd14:     89 04 24                        	mov dword ptr [esp], eax
0xcd17:     e8 f2 47 00 00                  	call 0x1150e <function_1150e>
0xcd1c:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xcd20:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcd24:     8d 45 dc                        	lea eax, [ebp - 0x24]
0xcd27:     89 04 24                        	mov dword ptr [esp], eax
0xcd2a:     e8 49 74 00 00                  	call 0x14178 <function_14178>
0xcd2f:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xcd32:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcd35 -- 0xcd36
0xcd35:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1Ev at 0xcd36 -- 0xcd37
; data inside code section at 0xcd37 -- 0xcd39
0xcd37:     ff ff                                              |..              |
; function: function_cd39 at 0xcd39 -- 0xcdac
0xcd39:     ff 8b 45 94 8b 40               	dec dword ptr [ebx + 0x408b9445]
0xcd3f:     44                              	inc esp
0xcd40:     8b 00                           	mov eax, dword ptr [eax]
0xcd42:     83 c0 14                        	add eax, 0x14
0xcd45:     8b 18                           	mov ebx, dword ptr [eax]
0xcd47:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xcd4a:     8d 70 30                        	lea esi, [eax + 0x30]
0xcd4d:     8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0xcd50:     8b 50 44                        	mov edx, dword ptr [eax + 0x44]
0xcd53:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xcd56:     8d 4d e4                        	lea ecx, [ebp - 0x1c]
0xcd59:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xcd5d:     8d 4d dc                        	lea ecx, [ebp - 0x24]
0xcd60:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xcd64:     89 74 24 08                     	mov dword ptr [esp + 8], esi
0xcd68:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xcd6c:     89 04 24                        	mov dword ptr [esp], eax
0xcd6f:     ff d3                           	call ebx
0xcd71:     83 ec 04                        	sub esp, 4
0xcd74:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xcd77:     89 04 24                        	mov dword ptr [esp], eax
0xcd7a:     e8 37 75 00 00                  	call 0x142b6 <function_142b6>
0xcd7f:     83 f0 01                        	xor eax, 1
0xcd82:     84 c0                           	test al, al
0xcd84:     74 5f                           	je 0xcde5 <function_cde5>
0xcd86:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xcd89:     89 04 24                        	mov dword ptr [esp], eax
0xcd8c:     e8 59 75 00 00                  	call 0x142ea
0xcd91:     84 c0                           	test al, al
0xcd93:     74 0a                           	je 0xcd9f <function_cd39+0x66>
0xcd95:     bb 00 00 00 00                  	mov ebx, 0
0xcd9a:     e9 b0 00 00 00                  	jmp 0xce4f <function_ce4f>
0xcd9f:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xcda2:     8d 55 e8                        	lea edx, [ebp - 0x18]
0xcda5:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xcda9:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcdac -- 0xcdad
0xcdac:     e8                                                 |.               |
; dynamically linked function: _ZNK7leveldb6Status8ToStringEv at 0xcdad -- 0xcdae
; data inside code section at 0xcdae -- 0xcdbb
0xcdae:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8            |.......E...$.   |
; dynamically linked function: _ZNKSs5c_strEv at 0xcdbb -- 0xcdbc
; data inside code section at 0xcdbc -- 0xcdcb
0xcdbc:     ff ff ff 89 44 24 04 c7  04 24 d2 3e 00 00 e8      |....D$...$.>... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xcdcb -- 0xcdcc
; data inside code section at 0xcdcc -- 0xcdd6
0xcdcc:     ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0xcdd6 -- 0xcdd7
; data inside code section at 0xcdd7 -- 0xcde1
0xcdd7:     ff ff ff 8d 45 e8 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _Z11HandleErrorRKN7leveldb6StatusE at 0xcde1 -- 0xcde2
; data inside code section at 0xcde2 -- 0xcde5
0xcde2:     ff ff ff                                           |...             |
; function: function_cde5 at 0xcde5 -- 0xcdeb
0xcde5:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xcde8:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcdeb -- 0xcdec
0xcdeb:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4dataEv at 0xcdec -- 0xcded
; data inside code section at 0xcded -- 0xcdf1
0xcded:     ff ff ff 89                                        |....            |
; function: function_cdf1 at 0xcdf1 -- 0xcdf2
0xcdf1:     c3                              	ret 
; data inside code section at 0xcdf2 -- 0xcdf9
0xcdf2:     8d 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4sizeEv at 0xcdf9 -- 0xcdfa
; data inside code section at 0xcdfa -- 0xcdfc
0xcdfa:     ff ff                                              |..              |
; function: function_cdfc at 0xcdfc -- 0xcdff
0xcdfc:     ff 01                           	inc dword ptr [ecx]
0xcdfe:     c3                              	ret 
; data inside code section at 0xcdff -- 0xce06
0xcdff:     8d 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4dataEv at 0xce06 -- 0xce07
; data inside code section at 0xce07 -- 0xce4f
0xce07:     ff ff ff c7 44 24 10 60  90 0f 00 c7 44 24 0c 02   |....D$.`....D$..|
0xce17:     00 00 00 89 5c 24 08 89  44 24 04 8d 45 c0 89 04   |....\$..D$..E...|
0xce27:     24 e8 8f 43 00 00 8b 45  8c 89 44 24 04 8d 45 c0   |$..C...E..D$..E.|
0xce37:     89 04 24 e8 41 c1 00 00  8d 45 c0 89 04 24 e8 9a   |..$.A....E...$..|
0xce47:     44 00 00 bb 01 00 00 00                            |D.......        |
; function: function_ce4f at 0xce4f -- 0xce60
0xce4f:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xce52:     89 04 24                        	mov dword ptr [esp], eax
0xce55:     e8 1c 74 00 00                  	call 0x14276
0xce5a:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xce5d:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xce60 -- 0xce61
0xce60:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xce61 -- 0xce62
; data inside code section at 0xce62 -- 0xce64
0xce62:     ff ff                                              |..              |
; function: function_ce64 at 0xce64 -- 0xce87
0xce64:     ff 8d 45 a4 89 04               	dec dword ptr [ebp + 0x489a445]
0xce6a:     24 e8                           	and al, 0xe8
0xce6c:     74 44                           	je 0xceb2
0xce6e:     00 00                           	add byte ptr [eax], al
0xce70:     89 d8                           	mov eax, ebx
0xce72:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xce75:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xce7c:     0f 84 a3 00 00 00               	je 0xcf25 <function_cf25>
0xce82:     e9 99 00 00 00                  	jmp 0xcf20 <function_cf20>
; data inside code section at 0xce87 -- 0xce92
0xce87:     89 c6 89 d3 8d 45 ec 89  04 24 e8                  |.....E...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xce92 -- 0xce93
; data inside code section at 0xce93 -- 0xce96
0xce93:     ff ff ff                                           |...             |
; function: function_ce96 at 0xce96 -- 0xce98
0xce96:     eb 40                           	jmp 0xced8 <function_ced8>
; function: function_ce98 at 0xce98 -- 0xceaf
0xce98:     89 c6                           	mov esi, eax
0xce9a:     89 d3                           	mov ebx, edx
0xce9c:     8d 45 c0                        	lea eax, [ebp - 0x40]
0xce9f:     89 04 24                        	mov dword ptr [esp], eax
0xcea2:     e8 3d 44 00 00                  	call 0x112e4 <function_112e4>
0xcea7:     89 f0                           	mov eax, esi
0xcea9:     89 da                           	mov edx, ebx
0xceab:     eb 00                           	jmp 0xcead
0xcead:     89 d1                           	mov ecx, edx
; data inside code section at 0xceaf -- 0xceb0
0xceaf:     83                                                 |.               |
; function: function_ceb0 at 0xceb0 -- 0xceb5
0xceb0:     f9                              	stc 
0xceb1:     02 74 06 89                     	add dh, byte ptr [esi + eax - 0x77]
; data inside code section at 0xceb5 -- 0xceb6
0xceb5:     c6                                                 |.               |
; function: function_ceb6 at 0xceb6 -- 0xceba
0xceb6:     89 d3                           	mov ebx, edx
0xceb8:     eb 1e                           	jmp 0xced8 <function_ced8>
; data inside code section at 0xceba -- 0xcebe
0xceba:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0xcebe -- 0xcebf
; data inside code section at 0xcebf -- 0xcecb
0xcebf:     ff ff ff 89 45 f0 bb 00  00 00 00 e8               |....E.......    |
; dynamically linked function: __cxa_end_catch at 0xcecb -- 0xcecc
; data inside code section at 0xcecc -- 0xcecf
0xcecc:     ff ff ff                                           |...             |
; function: function_cecf at 0xcecf -- 0xced4
0xcecf:     e9 7b ff ff ff                  	jmp 0xce4f <function_ce4f>
; data inside code section at 0xced4 -- 0xced8
0xced4:     89 c6 89 d3                                        |....            |
; function: function_ced8 at 0xced8 -- 0xcee5
0xced8:     8d 45 e8                        	lea eax, [ebp - 0x18]
0xcedb:     89 04 24                        	mov dword ptr [esp], eax
0xcede:     e8 93 73 00 00                  	call 0x14276
0xcee3:     eb 04                           	jmp 0xcee9 <function_cee9>
; function: function_cee5 at 0xcee5 -- 0xcee9
0xcee5:     89 c6                           	mov esi, eax
0xcee7:     89 d3                           	mov ebx, edx
; function: function_cee9 at 0xcee9 -- 0xceef
0xcee9:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xceec:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xceef -- 0xcef0
0xceef:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xcef0 -- 0xcef1
; data inside code section at 0xcef1 -- 0xcef4
0xcef1:     ff ff ff                                           |...             |
; function: function_cef4 at 0xcef4 -- 0xcef6
0xcef4:     eb 04                           	jmp 0xcefa <function_cefa>
; function: function_cef6 at 0xcef6 -- 0xcefa
0xcef6:     89 c6                           	mov esi, eax
0xcef8:     89 d3                           	mov ebx, edx
; function: function_cefa at 0xcefa -- 0xcf13
0xcefa:     8d 45 a4                        	lea eax, [ebp - 0x5c]
0xcefd:     89 04 24                        	mov dword ptr [esp], eax
0xcf00:     e8 df 43 00 00                  	call 0x112e4 <function_112e4>
0xcf05:     89 f0                           	mov eax, esi
0xcf07:     89 da                           	mov edx, ebx
0xcf09:     eb 00                           	jmp 0xcf0b
0xcf0b:     83 fa ff                        	cmp edx, -1
0xcf0e:     74 08                           	je 0xcf18 <function_cf18>
0xcf10:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcf13 -- 0xcf14
0xcf13:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xcf14 -- 0xcf15
; data inside code section at 0xcf15 -- 0xcf18
0xcf15:     ff ff ff                                           |...             |
; function: function_cf18 at 0xcf18 -- 0xcf1b
0xcf18:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xcf1b -- 0xcf1c
0xcf1b:     e8                                                 |.               |
; dynamically linked function: __cxa_call_unexpected at 0xcf1c -- 0xcf1d
; data inside code section at 0xcf1d -- 0xcf20
0xcf1d:     ff ff ff                                           |...             |
; function: function_cf20 at 0xcf20 -- 0xcf21
; dynamically linked function: __stack_chk_fail at 0xcf21 -- 0xcf22
; data inside code section at 0xcf22 -- 0xcf25
0xcf22:     ff ff ff                                           |...             |
; function: function_cf25 at 0xcf25 -- 0xcf2c
0xcf25:     8d 65 f8                        	lea esp, [ebp - 8]
0xcf28:     5b                              	pop ebx
0xcf29:     5e                              	pop esi
0xcf2a:     5d                              	pop ebp
0xcf2b:     c3                              	ret 
; section: .text._ZN11CDataStreamlsISt4pairIc7uint256EEERS_RKT_
; function: _ZN11CDataStreamlsISt4pairIc7uint256EEERS_RKT_ at 0xcf2c -- 0xcf7e
0xcf2c:     55                              	push ebp
0xcf2d:     89 e5                           	mov ebp, esp
0xcf2f:     83 ec 38                        	sub esp, 0x38
0xcf32:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xcf35:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xcf38:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xcf3b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xcf3e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xcf44:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xcf47:     31 c0                           	xor eax, eax
0xcf49:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcf4c:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xcf4f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcf52:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xcf55:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xcf59:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xcf5d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xcf60:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcf64:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcf67:     89 04 24                        	mov dword ptr [esp], eax
0xcf6a:     e8 66 0a 01 00                  	call 0x1d9d5 <unknown_1d9d5>
0xcf6f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcf72:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xcf75:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xcf7c:     74 05                           	je 0xcf83 <function_cf83>
; data inside code section at 0xcf7e -- 0xcf7f
0xcf7e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xcf7f -- 0xcf80
; data inside code section at 0xcf80 -- 0xcf83
0xcf80:     ff ff ff                                           |...             |
; function: function_cf83 at 0xcf83 -- 0xcf85
0xcf83:     c9                              	leave 
0xcf84:     c3                              	ret 
; section: .text._ZN11CDataStreamrsI15CDiskBlockIndexEERS_RT_
; function: _ZN11CDataStreamrsI15CDiskBlockIndexEERS_RT_ at 0xcf86 -- 0xcfd8
0xcf86:     55                              	push ebp
0xcf87:     89 e5                           	mov ebp, esp
0xcf89:     83 ec 38                        	sub esp, 0x38
0xcf8c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xcf8f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xcf92:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xcf95:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xcf98:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xcf9e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xcfa1:     31 c0                           	xor eax, eax
0xcfa3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcfa6:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xcfa9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcfac:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xcfaf:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xcfb3:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xcfb7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xcfba:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xcfbe:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcfc1:     89 04 24                        	mov dword ptr [esp], eax
0xcfc4:     e8 eb 0a 01 00                  	call 0x1dab4 <unknown_1dab4>
0xcfc9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcfcc:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xcfcf:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xcfd6:     74 05                           	je 0xcfdd <function_cfdd>
; data inside code section at 0xcfd8 -- 0xcfd9
0xcfd8:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xcfd9 -- 0xcfda
; data inside code section at 0xcfda -- 0xcfdd
0xcfda:     ff ff ff                                           |...             |
; function: function_cfdd at 0xcfdd -- 0xcfdf
0xcfdd:     c9                              	leave 
0xcfde:     c3                              	ret 
; section: .text._ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_
; function: _ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_ at 0xcfdf -- 0xd00d
0xcfdf:     55                              	push ebp
0xcfe0:     89 e5                           	mov ebp, esp
0xcfe2:     83 ec 38                        	sub esp, 0x38
0xcfe5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xcfe8:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xcfeb:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xcff1:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xcff4:     31 c0                           	xor eax, eax
0xcff6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xcff9:     89 04 24                        	mov dword ptr [esp], eax
0xcffc:     e8 68 0b 01 00                  	call 0x1db69 <unknown_1db69>
0xd001:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd004:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd00b:     74 05                           	je 0xd012 <function_d012>
; data inside code section at 0xd00d -- 0xd00e
0xd00d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd00e -- 0xd00f
; data inside code section at 0xd00f -- 0xd012
0xd00f:     ff ff ff                                           |...             |
; function: function_d012 at 0xd012 -- 0xd014
0xd012:     c9                              	leave 
0xd013:     c3                              	ret 
; section: .text._ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_
; function: _ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_ at 0xd014 -- 0xd066
0xd014:     55                              	push ebp
0xd015:     89 e5                           	mov ebp, esp
0xd017:     83 ec 28                        	sub esp, 0x28
0xd01a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd01d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd020:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd023:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd026:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd029:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd02c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd032:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd035:     31 c0                           	xor eax, eax
0xd037:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xd03a:     8b 00                           	mov eax, dword ptr [eax]
0xd03c:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xd03f:     eb 0c                           	jmp 0xd04d <_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_+0x39>
0xd041:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0xd044:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd047:     89 10                           	mov dword ptr [eax], edx
0xd049:     83 45 e4 04                     	add dword ptr [ebp - 0x1c], 4
0xd04d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd050:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0xd053:     0f 95 c0                        	setne al
0xd056:     84 c0                           	test al, al
0xd058:     75 e7                           	jne 0xd041 <_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_+0x2d>
0xd05a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd05d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd064:     74 05                           	je 0xd06b <function_d06b>
; data inside code section at 0xd066 -- 0xd067
0xd066:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd067 -- 0xd068
; data inside code section at 0xd068 -- 0xd06b
0xd068:     ff ff ff                                           |...             |
; function: function_d06b at 0xd06b -- 0xd06d
0xd06b:     c9                              	leave 
0xd06c:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv at 0xd06e -- 0xd0cd
0xd06e:     55                              	push ebp
0xd06f:     89 e5                           	mov ebp, esp
0xd071:     83 ec 38                        	sub esp, 0x38
0xd074:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd077:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd07a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd080:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd083:     31 c0                           	xor eax, eax
0xd085:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd088:     8b 00                           	mov eax, dword ptr [eax]
0xd08a:     85 c0                           	test eax, eax
0xd08c:     74 21                           	je 0xd0af <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv+0x41>
0xd08e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd091:     8b 00                           	mov eax, dword ptr [eax]
0xd093:     8b 00                           	mov eax, dword ptr [eax]
0xd095:     83 c0 10                        	add eax, 0x10
0xd098:     8b 10                           	mov edx, dword ptr [eax]
0xd09a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd09d:     8b 00                           	mov eax, dword ptr [eax]
0xd09f:     89 04 24                        	mov dword ptr [esp], eax
0xd0a2:     ff d2                           	call edx
0xd0a4:     84 c0                           	test al, al
0xd0a6:     74 07                           	je 0xd0af <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv+0x41>
0xd0a8:     b8 01 00 00 00                  	mov eax, 1
0xd0ad:     eb 05                           	jmp 0xd0b4 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv+0x46>
0xd0af:     b8 00 00 00 00                  	mov eax, 0
0xd0b4:     84 c0                           	test al, al
0xd0b6:     74 09                           	je 0xd0c1 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv+0x53>
0xd0b8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd0bb:     c7 00 00 00 00 00               	mov dword ptr [eax], 0
0xd0c1:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd0c4:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd0cb:     74 05                           	je 0xd0d2 <function_d0d2>
; data inside code section at 0xd0cd -- 0xd0ce
0xd0cd:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd0ce -- 0xd0cf
; data inside code section at 0xd0cf -- 0xd0d2
0xd0cf:     ff ff ff                                           |...             |
; function: function_d0d2 at 0xd0d2 -- 0xd0d4
0xd0d2:     c9                              	leave 
0xd0d3:     c3                              	ret 
; section: .text._Z21GetSerializeSize_implIhSaIhEEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb1EEE
; function: _Z21GetSerializeSize_implIhSaIhEEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb1EEE at 0xd0d4 -- 0xd135
0xd0d4:     55                              	push ebp
0xd0d5:     89 e5                           	mov ebp, esp
0xd0d7:     53                              	push ebx
0xd0d8:     83 ec 34                        	sub esp, 0x34
0xd0db:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd0de:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd0e1:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd0e4:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd0e7:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd0ea:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd0ed:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xd0f0:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xd0f3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd0f9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd0fc:     31 c0                           	xor eax, eax
0xd0fe:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd101:     89 04 24                        	mov dword ptr [esp], eax
0xd104:     e8 75 78 00 00                  	call 0x1497e
0xd109:     ba 00 00 00 00                  	mov edx, 0
0xd10e:     89 04 24                        	mov dword ptr [esp], eax
0xd111:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xd115:     e8 9b 43 00 00                  	call 0x114b5
0xd11a:     89 c3                           	mov ebx, eax
0xd11c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd11f:     89 04 24                        	mov dword ptr [esp], eax
0xd122:     e8 57 78 00 00                  	call 0x1497e
0xd127:     01 d8                           	add eax, ebx
0xd129:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd12c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd133:     74 05                           	je 0xd13a <function_d13a>
; data inside code section at 0xd135 -- 0xd136
0xd135:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd136 -- 0xd137
; data inside code section at 0xd137 -- 0xd13a
0xd137:     ff ff ff                                           |...             |
; function: function_d13a at 0xd13a -- 0xd140
0xd13a:     83 c4 34                        	add esp, 0x34
0xd13d:     5b                              	pop ebx
0xd13e:     5d                              	pop ebp
0xd13f:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implD2Ev
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implD1Ev at 0xd140 -- 0xd16e
0xd140:     55                              	push ebp
0xd141:     89 e5                           	mov ebp, esp
0xd143:     83 ec 38                        	sub esp, 0x38
0xd146:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd149:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd14c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd152:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd155:     31 c0                           	xor eax, eax
0xd157:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd15a:     89 04 24                        	mov dword ptr [esp], eax
0xd15d:     e8 48 7c 00 00                  	call 0x14daa <function_14daa>
0xd162:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd165:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd16c:     74 05                           	je 0xd173 <function_d173>
; data inside code section at 0xd16e -- 0xd16f
0xd16e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd16f -- 0xd170
; data inside code section at 0xd170 -- 0xd173
0xd170:     ff ff ff                                           |...             |
; function: function_d173 at 0xd173 -- 0xd175
0xd173:     c9                              	leave 
0xd174:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC2Ev
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1Ev at 0xd176 -- 0xd1a4
0xd176:     55                              	push ebp
0xd177:     89 e5                           	mov ebp, esp
0xd179:     83 ec 38                        	sub esp, 0x38
0xd17c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd17f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd182:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd188:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd18b:     31 c0                           	xor eax, eax
0xd18d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd190:     89 04 24                        	mov dword ptr [esp], eax
0xd193:     e8 96 0b 01 00                  	call 0x1dd2e <unknown_1dd2e>
0xd198:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd19b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd1a2:     74 05                           	je 0xd1a9 <function_d1a9>
; data inside code section at 0xd1a4 -- 0xd1a5
0xd1a4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd1a5 -- 0xd1a6
; data inside code section at 0xd1a6 -- 0xd1a9
0xd1a6:     ff ff ff                                           |...             |
; function: function_d1a9 at 0xd1a9 -- 0xd1ab
0xd1a9:     c9                              	leave 
0xd1aa:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEED2Ev
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEED1Ev at 0xd1ac -- 0xd20a
0xd1ac:     55                              	push ebp
0xd1ad:     89 e5                           	mov ebp, esp
0xd1af:     53                              	push ebx
0xd1b0:     83 ec 34                        	sub esp, 0x34
0xd1b3:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd1b6:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd1b9:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd1bf:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd1c2:     31 c0                           	xor eax, eax
0xd1c4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd1c7:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0xd1ca:     89 c2                           	mov edx, eax
0xd1cc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd1cf:     8b 00                           	mov eax, dword ptr [eax]
0xd1d1:     89 d1                           	mov ecx, edx
0xd1d3:     29 c1                           	sub ecx, eax
0xd1d5:     89 c8                           	mov eax, ecx
0xd1d7:     89 c2                           	mov edx, eax
0xd1d9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd1dc:     8b 00                           	mov eax, dword ptr [eax]
0xd1de:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xd1e2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd1e6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd1e9:     89 04 24                        	mov dword ptr [esp], eax
0xd1ec:     e8 d5 d5 00 00                  	call 0x1a7c6 <function_1a7c6>
0xd1f1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd1f4:     89 04 24                        	mov dword ptr [esp], eax
0xd1f7:     e8 f0 d0 00 00                  	call 0x1a2ec <function_1a2ec>
0xd1fc:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd1ff:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd206:     74 1e                           	je 0xd226 <function_d226>
0xd208:     eb 17                           	jmp 0xd221 <function_d221>
; data inside code section at 0xd20a -- 0xd20b
0xd20a:     89                                                 |.               |
; function: function_d20b at 0xd20b -- 0xd20c
0xd20b:     c3                              	ret 
; data inside code section at 0xd20c -- 0xd21d
0xd20c:     8b 45 e4 89 04 24 e8 d5  d0 00 00 89 d8 89 04 24   |.E...$.........$|
0xd21c:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xd21d -- 0xd21e
; data inside code section at 0xd21e -- 0xd221
0xd21e:     ff ff ff                                           |...             |
; function: function_d221 at 0xd221 -- 0xd222
; dynamically linked function: __stack_chk_fail at 0xd222 -- 0xd223
; data inside code section at 0xd223 -- 0xd226
0xd223:     ff ff ff                                           |...             |
; function: function_d226 at 0xd226 -- 0xd22c
0xd226:     83 c4 34                        	add esp, 0x34
0xd229:     5b                              	pop ebx
0xd22a:     5d                              	pop ebp
0xd22b:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv at 0xd22c -- 0xd252
0xd22c:     55                              	push ebp
0xd22d:     89 e5                           	mov ebp, esp
0xd22f:     83 ec 28                        	sub esp, 0x28
0xd232:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd235:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd238:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd23e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd241:     31 c0                           	xor eax, eax
0xd243:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd246:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd249:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd250:     74 05                           	je 0xd257 <function_d257>
; data inside code section at 0xd252 -- 0xd253
0xd252:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd253 -- 0xd254
; data inside code section at 0xd254 -- 0xd257
0xd254:     ff ff ff                                           |...             |
; function: function_d257 at 0xd257 -- 0xd259
0xd257:     c9                              	leave 
0xd258:     c3                              	ret 
; section: .text._ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_
; function: _ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_ at 0xd259 -- 0xd2b5
0xd259:     55                              	push ebp
0xd25a:     89 e5                           	mov ebp, esp
0xd25c:     83 ec 38                        	sub esp, 0x38
0xd25f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd262:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd265:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd268:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd26b:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd26e:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd271:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd277:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd27a:     31 c0                           	xor eax, eax
0xd27c:     eb 1e                           	jmp 0xd29c <_ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_+0x43>
0xd27e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd281:     89 04 24                        	mov dword ptr [esp], eax
0xd284:     e8 da 0b 01 00                  	call 0x1de63 <unknown_1de63>
0xd289:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd28d:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xd290:     89 04 24                        	mov dword ptr [esp], eax
0xd293:     e8 1d d7 00 00                  	call 0x1a9b5
0xd298:     83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0xd29c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd29f:     3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0xd2a2:     0f 95 c0                        	setne al
0xd2a5:     84 c0                           	test al, al
0xd2a7:     75 d5                           	jne 0xd27e <_ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_+0x25>
0xd2a9:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd2ac:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd2b3:     74 05                           	je 0xd2ba <function_d2ba>
; data inside code section at 0xd2b5 -- 0xd2b6
0xd2b5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd2b6 -- 0xd2b7
; data inside code section at 0xd2b7 -- 0xd2ba
0xd2b7:     ff ff ff                                           |...             |
; function: function_d2ba at 0xd2ba -- 0xd2bc
0xd2ba:     c9                              	leave 
0xd2bb:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC2ERKS1_
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1ERKS1_ at 0xd2bc -- 0xd2f7
0xd2bc:     55                              	push ebp
0xd2bd:     89 e5                           	mov ebp, esp
0xd2bf:     83 ec 38                        	sub esp, 0x38
0xd2c2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd2c5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd2c8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd2cb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd2ce:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd2d4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd2d7:     31 c0                           	xor eax, eax
0xd2d9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd2dc:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xd2df:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xd2e3:     89 04 24                        	mov dword ptr [esp], eax
0xd2e6:     e8 09 0c 01 00                  	call 0x1def4 <unknown_1def4>
0xd2eb:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd2ee:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd2f5:     74 05                           	je 0xd2fc <function_d2fc>
; data inside code section at 0xd2f7 -- 0xd2f8
0xd2f7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd2f8 -- 0xd2f9
; data inside code section at 0xd2f9 -- 0xd2fc
0xd2f9:     ff ff ff                                           |...             |
; function: function_d2fc at 0xd2fc -- 0xd2fe
0xd2fc:     c9                              	leave 
0xd2fd:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE22_M_initialize_dispatchIPKcEEvT_S6_St12__false_type
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE22_M_initialize_dispatchIPKcEEvT_S6_St12__false_type at 0xd2fe -- 0xd351
0xd2fe:     55                              	push ebp
0xd2ff:     89 e5                           	mov ebp, esp
0xd301:     83 ec 38                        	sub esp, 0x38
0xd304:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd307:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd30a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd30d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd310:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd313:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd316:     0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0xd31a:     88 45 db                        	mov byte ptr [ebp - 0x25], al
0xd31d:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd323:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd326:     31 c0                           	xor eax, eax
0xd328:     88 54 24 0c                     	mov byte ptr [esp + 0xc], dl
0xd32c:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xd32f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xd333:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd336:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd33a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd33d:     89 04 24                        	mov dword ptr [esp], eax
0xd340:     e8 51 0c 01 00                  	call 0x1df96 <unknown_1df96>
0xd345:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd348:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd34f:     74 05                           	je 0xd356 <function_d356>
; data inside code section at 0xd351 -- 0xd352
0xd351:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd352 -- 0xd353
; data inside code section at 0xd353 -- 0xd356
0xd353:     ff ff ff                                           |...             |
; function: function_d356 at 0xd356 -- 0xd358
0xd356:     c9                              	leave 
0xd357:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEC2ERKS2_
; function: _ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEC1ERKS2_ at 0xd358 -- 0xd38b
0xd358:     55                              	push ebp
0xd359:     89 e5                           	mov ebp, esp
0xd35b:     83 ec 28                        	sub esp, 0x28
0xd35e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd361:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd364:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd367:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd36a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd370:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd373:     31 c0                           	xor eax, eax
0xd375:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd378:     8b 10                           	mov edx, dword ptr [eax]
0xd37a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd37d:     89 10                           	mov dword ptr [eax], edx
0xd37f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd382:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd389:     74 05                           	je 0xd390 <function_d390>
; data inside code section at 0xd38b -- 0xd38c
0xd38b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd38c -- 0xd38d
; data inside code section at 0xd38d -- 0xd390
0xd38d:     ff ff ff                                           |...             |
; function: function_d390 at 0xd390 -- 0xd392
0xd390:     c9                              	leave 
0xd391:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_
; function: _ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1ERKS2_ at 0xd392 -- 0xd3c5
0xd392:     55                              	push ebp
0xd393:     89 e5                           	mov ebp, esp
0xd395:     83 ec 28                        	sub esp, 0x28
0xd398:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd39b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd39e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd3a1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd3a4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd3aa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd3ad:     31 c0                           	xor eax, eax
0xd3af:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd3b2:     8b 10                           	mov edx, dword ptr [eax]
0xd3b4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd3b7:     89 10                           	mov dword ptr [eax], edx
0xd3b9:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd3bc:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd3c3:     74 05                           	je 0xd3ca <function_d3ca>
; data inside code section at 0xd3c5 -- 0xd3c6
0xd3c5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd3c6 -- 0xd3c7
; data inside code section at 0xd3c7 -- 0xd3ca
0xd3c7:     ff ff ff                                           |...             |
; function: function_d3ca at 0xd3ca -- 0xd3cc
0xd3ca:     c9                              	leave 
0xd3cb:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEC2ERKS1_
; function: _ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEC1ERKS1_ at 0xd3cc -- 0xd3cf
0xd3cc:     55                              	push ebp
0xd3cd:     89 e5                           	mov ebp, esp
; data inside code section at 0xd3cf -- 0xd3d0
0xd3cf:     83                                                 |.               |
; function: function_d3d0 at 0xd3d0 -- 0xd3ff
0xd3d0:     ec                              	in al, dx
0xd3d1:     28 8b 45 08 89 45               	sub byte ptr [ebx + 0x45890845], cl
0xd3d7:     e4 8b                           	in al, 0x8b
0xd3d9:     45                              	inc ebp
0xd3da:     0c 89                           	or al, 0x89
0xd3dc:     45                              	inc ebp
0xd3dd:     e0 65                           	loopne 0xd444
0xd3df:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xd3e4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd3e7:     31 c0                           	xor eax, eax
0xd3e9:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd3ec:     8b 10                           	mov edx, dword ptr [eax]
0xd3ee:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd3f1:     89 10                           	mov dword ptr [eax], edx
0xd3f3:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd3f6:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd3fd:     74 05                           	je 0xd404 <function_d404>
; data inside code section at 0xd3ff -- 0xd400
0xd3ff:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd400 -- 0xd401
; data inside code section at 0xd401 -- 0xd404
0xd401:     ff ff ff                                           |...             |
; function: function_d404 at 0xd404 -- 0xd406
0xd404:     c9                              	leave 
0xd405:     c3                              	ret 
; section: .text._ZNKSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv
; function: _ZNKSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv at 0xd406 -- 0xd420
0xd406:     55                              	push ebp
0xd407:     89 e5                           	mov ebp, esp
0xd409:     83 ec 28                        	sub esp, 0x28
0xd40c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd40f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd412:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd418:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd41b:     31 c0                           	xor eax, eax
0xd41d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_d420 at 0xd420 -- 0xd42c
0xd420:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd423:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd42a:     74 05                           	je 0xd431 <function_d431>
; data inside code section at 0xd42c -- 0xd42d
0xd42c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd42d -- 0xd42e
; data inside code section at 0xd42e -- 0xd431
0xd42e:     ff ff ff                                           |...             |
; function: function_d431 at 0xd431 -- 0xd433
0xd431:     c9                              	leave 
0xd432:     c3                              	ret 
; section: .text._ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcE
; function: _ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcE at 0xd433 -- 0xd442
0xd433:     55                              	push ebp
0xd434:     89 e5                           	mov ebp, esp
0xd436:     83 ec 38                        	sub esp, 0x38
0xd439:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd43c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd43f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0xd442 -- 0xd443
0xd442:     89                                                 |.               |
; function: function_d443 at 0xd443 -- 0xd444
0xd443:     45                              	inc ebp
; data inside code section at 0xd444 -- 0xd480
0xd444:     e0 8b 45 10 89 45 dc 65  a1 14 00 00 00 89 45 f4   |..E..E.e......E.|
0xd454:     31 c0 88 54 24 0c 8b 45  dc 89 44 24 08 8b 45 e0   |1..T$..E..D$..E.|
0xd464:     89 44 24 04 8b 45 e4 89  04 24 e8 1b 0e 01 00 8b   |.D$..E...$......|
0xd474:     55 f4 65 33 15 14 00 00  00 74 05 e8               |U.e3.....t..    |
; dynamically linked function: __stack_chk_fail at 0xd480 -- 0xd481
; data inside code section at 0xd481 -- 0xd483
0xd481:     ff ff                                              |..              |
; function: function_d483 at 0xd483 -- 0xd486
0xd483:     ff c9                           	dec ecx
0xd485:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_erase_at_endEPc
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_erase_at_endEPc at 0xd486 -- 0xd4d3
0xd486:     55                              	push ebp
0xd487:     89 e5                           	mov ebp, esp
0xd489:     83 ec 38                        	sub esp, 0x38
0xd48c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd48f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd492:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd495:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd498:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd49e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd4a1:     31 c0                           	xor eax, eax
0xd4a3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd4a6:     89 04 24                        	mov dword ptr [esp], eax
0xd4a9:     e8 04 d2 00 00                  	call 0x1a6b2 <function_1a6b2>
0xd4ae:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xd4b1:     8b 52 04                        	mov edx, dword ptr [edx + 4]
0xd4b4:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xd4b8:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xd4bc:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd4bf:     89 04 24                        	mov dword ptr [esp], eax
0xd4c2:     e8 18 d2 00 00                  	call 0x1a6df <function_1a6df>
0xd4c7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd4ca:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xd4cd:     89 50 04                        	mov dword ptr [eax + 4], edx
0xd4d0:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; function: function_d4d3 at 0xd4d3 -- 0xd4dc
0xd4d3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd4da:     74 05                           	je 0xd4e1 <function_d4e1>
; data inside code section at 0xd4dc -- 0xd4dd
0xd4dc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd4dd -- 0xd4de
; data inside code section at 0xd4de -- 0xd4e1
0xd4de:     ff ff ff                                           |...             |
; function: function_d4e1 at 0xd4e1 -- 0xd4e3
0xd4e1:     c9                              	leave 
0xd4e2:     c3                              	ret 
; section: .text._ZNKSt6vectorIc25zero_after_free_allocatorIcEE8max_sizeEv
; function: _ZNKSt6vectorIc25zero_after_free_allocatorIcEE8max_sizeEv at 0xd4e4 -- 0xd51a
0xd4e4:     55                              	push ebp
0xd4e5:     89 e5                           	mov ebp, esp
0xd4e7:     83 ec 38                        	sub esp, 0x38
0xd4ea:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd4ed:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd4f0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd4f6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd4f9:     31 c0                           	xor eax, eax
0xd4fb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd4fe:     89 04 24                        	mov dword ptr [esp], eax
0xd501:     e8 e4 d3 00 00                  	call 0x1a8ea
0xd506:     89 04 24                        	mov dword ptr [esp], eax
0xd509:     e8 8c 0e 01 00                  	call 0x1e39a <unknown_1e39a>
0xd50e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd511:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd518:     74 05                           	je 0xd51f <function_d51f>
; data inside code section at 0xd51a -- 0xd51b
0xd51a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd51b -- 0xd51c
; data inside code section at 0xd51c -- 0xd51f
0xd51c:     ff ff ff                                           |...             |
; function: function_d51f at 0xd51f -- 0xd521
0xd51f:     c9                              	leave 
0xd520:     c3                              	ret 
; section: .text._ZNKSt6vectorIc25zero_after_free_allocatorIcEE8capacityEv
; function: _ZNKSt6vectorIc25zero_after_free_allocatorIcEE8capacityEv at 0xd522 -- 0xd558
0xd522:     55                              	push ebp
0xd523:     89 e5                           	mov ebp, esp
0xd525:     83 ec 28                        	sub esp, 0x28
0xd528:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd52b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd52e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd534:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd537:     31 c0                           	xor eax, eax
0xd539:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd53c:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0xd53f:     89 c2                           	mov edx, eax
0xd541:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd544:     8b 00                           	mov eax, dword ptr [eax]
0xd546:     89 d1                           	mov ecx, edx
0xd548:     29 c1                           	sub ecx, eax
0xd54a:     89 c8                           	mov eax, ecx
0xd54c:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd54f:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd556:     74 05                           	je 0xd55d <function_d55d>
; data inside code section at 0xd558 -- 0xd559
0xd558:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd559 -- 0xd55a
; data inside code section at 0xd55a -- 0xd55d
0xd55a:     ff ff ff                                           |...             |
; function: function_d55d at 0xd55d -- 0xd55f
0xd55d:     c9                              	leave 
0xd55e:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE20_M_allocate_and_copyIPcEES4_jT_S5_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE20_M_allocate_and_copyIPcEES4_jT_S5_ at 0xd560 -- 0xd5d8
0xd560:     55                              	push ebp
0xd561:     89 e5                           	mov ebp, esp
0xd563:     53                              	push ebx
0xd564:     83 ec 34                        	sub esp, 0x34
0xd567:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd56a:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd56d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd570:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd573:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd576:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd579:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xd57c:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xd57f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd585:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd588:     31 c0                           	xor eax, eax
0xd58a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd58d:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xd590:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xd594:     89 04 24                        	mov dword ptr [esp], eax
0xd597:     e8 0a 0d 01 00                  	call 0x1e2a6 <unknown_1e2a6>
0xd59c:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xd59f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd5a2:     89 04 24                        	mov dword ptr [esp], eax
0xd5a5:     e8 e2 d1 00 00                  	call 0x1a78c
0xd5aa:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0xd5ae:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0xd5b1:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xd5b5:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0xd5b8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd5bc:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xd5bf:     89 04 24                        	mov dword ptr [esp], eax
0xd5c2:     e8 7e 0e 01 00                  	call 0x1e445 <unknown_1e445>
0xd5c7:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0xd5ca:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd5cd:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd5d4:     74 3e                           	je 0xd614 <function_d614>
0xd5d6:     eb 37                           	jmp 0xd60f <function_d60f>
; data inside code section at 0xd5d8 -- 0xd5d9
0xd5d8:     89                                                 |.               |
; function: function_d5d9 at 0xd5d9 -- 0xd5da
0xd5d9:     c3                              	ret 
; data inside code section at 0xd5da -- 0xd5db
0xd5da:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xd5db -- 0xd5dc
; data inside code section at 0xd5dc -- 0xd5e5
0xd5dc:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xd5e5 -- 0xd5e6
; data inside code section at 0xd5e6 -- 0xd5ed
0xd5e6:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xd5ed -- 0xd5ee
; data inside code section at 0xd5ee -- 0xd60b
0xd5ee:     ff ff ff 8b 45 e4 8b 55  e0 89 54 24 08 8b 55 f0   |....E..U..T$..U.|
0xd5fe:     89 54 24 04 89 04 24 e8  70 d5 00 00 e8            |.T$...$.p....   |
; dynamically linked function: __cxa_rethrow at 0xd60b -- 0xd60c
; data inside code section at 0xd60c -- 0xd60f
0xd60c:     ff ff ff                                           |...             |
; function: function_d60f at 0xd60f -- 0xd610
; dynamically linked function: __stack_chk_fail at 0xd610 -- 0xd611
; data inside code section at 0xd611 -- 0xd614
0xd611:     ff ff ff                                           |...             |
; function: function_d614 at 0xd614 -- 0xd61a
0xd614:     83 c4 34                        	add esp, 0x34
0xd617:     5b                              	pop ebx
0xd618:     5d                              	pop ebp
0xd619:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE13_M_deallocateEPcj
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE13_M_deallocateEPcj at 0xd61a -- 0xd668
0xd61a:     55                              	push ebp
0xd61b:     89 e5                           	mov ebp, esp
0xd61d:     83 ec 38                        	sub esp, 0x38
0xd620:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd623:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd626:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd629:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd62c:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd62f:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd632:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd638:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd63b:     31 c0                           	xor eax, eax
0xd63d:     83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0xd641:     74 19                           	je 0xd65c <_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE13_M_deallocateEPcj+0x42>
0xd643:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd646:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xd649:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xd64d:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xd650:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xd654:     89 04 24                        	mov dword ptr [esp], eax
0xd657:     e8 20 0f 01 00                  	call 0x1e57c <unknown_1e57c>
0xd65c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd65f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd666:     74 05                           	je 0xd66d <function_d66d>
; data inside code section at 0xd668 -- 0xd669
0xd668:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd669 -- 0xd66a
; data inside code section at 0xd66a -- 0xd66d
0xd66a:     ff ff ff                                           |...             |
; function: function_d66d at 0xd66d -- 0xd66f
0xd66d:     c9                              	leave 
0xd66e:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIcE9constructEPcRKc
; function: _ZN9__gnu_cxx13new_allocatorIcE9constructEPcRKc at 0xd670 -- 0xd6b2
0xd670:     55                              	push ebp
0xd671:     89 e5                           	mov ebp, esp
0xd673:     83 ec 38                        	sub esp, 0x38
0xd676:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd679:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd67c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd67f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd682:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd685:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd688:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd68e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd691:     31 c0                           	xor eax, eax
0xd693:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd696:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd69a:     c7 04 24 01 00 00 00            	mov dword ptr [esp], 1
0xd6a1:     e8 28 1f 00 00                  	call 0xf5ce <function_f5ce>
0xd6a6:     85 c0                           	test eax, eax
0xd6a8:     74 08                           	je 0xd6b2 <function_d6b2>
0xd6aa:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xd6ad:     0f b6 12                        	movzx edx, byte ptr [edx]
0xd6b0:     88 10                           	mov byte ptr [eax], dl
; function: function_d6b2 at 0xd6b2 -- 0xd6be
0xd6b2:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd6b5:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd6bc:     74 05                           	je 0xd6c3 <function_d6c3>
; data inside code section at 0xd6be -- 0xd6bf
0xd6be:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd6bf -- 0xd6c0
; data inside code section at 0xd6c0 -- 0xd6c3
0xd6c0:     ff ff ff                                           |...             |
; function: function_d6c3 at 0xd6c3 -- 0xd6c5
0xd6c3:     c9                              	leave 
0xd6c4:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv at 0xd6c6 -- 0xd6ec
0xd6c6:     55                              	push ebp
0xd6c7:     89 e5                           	mov ebp, esp
0xd6c9:     83 ec 28                        	sub esp, 0x28
0xd6cc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd6cf:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd6d2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd6d8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd6db:     31 c0                           	xor eax, eax
0xd6dd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd6e0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd6e3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd6ea:     74 05                           	je 0xd6f1 <function_d6f1>
; data inside code section at 0xd6ec -- 0xd6ed
0xd6ec:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd6ed -- 0xd6ee
; data inside code section at 0xd6ee -- 0xd6f1
0xd6ee:     ff ff ff                                           |...             |
; function: function_d6f1 at 0xd6f1 -- 0xd6f3
0xd6f1:     c9                              	leave 
0xd6f2:     c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE18_M_insert_dispatchIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St12__false_type
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE18_M_insert_dispatchIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St12__false_type at 0xd6f4 -- 0xd754
0xd6f4:     55                              	push ebp
0xd6f5:     89 e5                           	mov ebp, esp
0xd6f7:     83 ec 58                        	sub esp, 0x58
0xd6fa:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd6fd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd700:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd703:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd706:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd709:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd70c:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xd70f:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xd712:     0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0xd716:     88 45 d7                        	mov byte ptr [ebp - 0x29], al
0xd719:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd71f:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd722:     31 c0                           	xor eax, eax
0xd724:     88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0xd728:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0xd72b:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0xd72f:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xd732:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xd736:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd739:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd73d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd740:     89 04 24                        	mov dword ptr [esp], eax
0xd743:     e8 0a 11 01 00                  	call 0x1e852 <unknown_1e852>
0xd748:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd74b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd752:     74 05                           	je 0xd759 <function_d759>
; data inside code section at 0xd754 -- 0xd755
0xd754:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd755 -- 0xd756
; data inside code section at 0xd756 -- 0xd759
0xd756:     ff ff ff                                           |...             |
; function: function_d759 at 0xd759 -- 0xd75b
0xd759:     c9                              	leave 
0xd75a:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIcE7destroyEPc
; function: _ZN9__gnu_cxx13new_allocatorIcE7destroyEPc at 0xd75c -- 0xd785
0xd75c:     55                              	push ebp
0xd75d:     89 e5                           	mov ebp, esp
0xd75f:     83 ec 28                        	sub esp, 0x28
0xd762:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd765:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd768:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd76b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd76e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd774:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd777:     31 c0                           	xor eax, eax
0xd779:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd77c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd783:     74 05                           	je 0xd78a <function_d78a>
; data inside code section at 0xd785 -- 0xd786
0xd785:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd786 -- 0xd787
; data inside code section at 0xd787 -- 0xd78a
0xd787:     ff ff ff                                           |...             |
; function: function_d78a at 0xd78a -- 0xd78c
0xd78a:     c9                              	leave 
0xd78b:     c3                              	ret 
; section: .text._Z11UnserializeI11CDataStreamEvRT_Riii
; function: _Z11UnserializeI11CDataStreamEvRT_Riii at 0xd78c -- 0xd7db
0xd78c:     55                              	push ebp
0xd78d:     89 e5                           	mov ebp, esp
0xd78f:     83 ec 38                        	sub esp, 0x38
0xd792:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd795:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd798:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd79b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd79e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd7a1:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd7a4:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xd7a7:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xd7aa:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd7b0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd7b3:     31 c0                           	xor eax, eax
0xd7b5:     c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0xd7bd:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd7c0:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd7c4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd7c7:     89 04 24                        	mov dword ptr [esp], eax
0xd7ca:     e8 c3 49 00 00                  	call 0x12192 <function_12192>
0xd7cf:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd7d2:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd7d9:     74 05                           	je 0xd7e0 <function_d7e0>
; data inside code section at 0xd7db -- 0xd7dc
0xd7db:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd7dc -- 0xd7dd
; data inside code section at 0xd7dd -- 0xd7e0
0xd7dd:     ff ff ff                                           |...             |
; function: function_d7e0 at 0xd7e0 -- 0xd7e2
0xd7e0:     c9                              	leave 
0xd7e1:     c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamEvRT_iii
; function: _Z9SerializeI11CDataStreamEvRT_iii at 0xd7e2 -- 0xd831
0xd7e2:     55                              	push ebp
0xd7e3:     89 e5                           	mov ebp, esp
0xd7e5:     83 ec 38                        	sub esp, 0x38
0xd7e8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd7eb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd7ee:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd7f1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd7f4:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd7f7:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd7fa:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xd7fd:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xd800:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd806:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd809:     31 c0                           	xor eax, eax
0xd80b:     c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0xd813:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xd816:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd81a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd81d:     89 04 24                        	mov dword ptr [esp], eax
0xd820:     e8 2b 4b 00 00                  	call 0x12350 <function_12350>
0xd825:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd828:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd82f:     74 05                           	je 0xd836 <function_d836>
; data inside code section at 0xd831 -- 0xd832
0xd831:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd832 -- 0xd833
; data inside code section at 0xd833 -- 0xd836
0xd833:     ff ff ff                                           |...             |
; function: function_d836 at 0xd836 -- 0xd838
0xd836:     c9                              	leave 
0xd837:     c3                              	ret 
; section: .text._ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_
; function: _ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ at 0xd838 -- 0xd859
0xd838:     55                              	push ebp
0xd839:     89 e5                           	mov ebp, esp
0xd83b:     53                              	push ebx
0xd83c:     83 ec 34                        	sub esp, 0x34
0xd83f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd842:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd845:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd848:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd84b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd851:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd854:     31 c0                           	xor eax, eax
0xd856:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0xd859 -- 0xd85a
0xd859:     89                                                 |.               |
; function: function_d85a at 0xd85a -- 0xd881
0xd85a:     04 24                           	add al, 0x24
0xd85c:     e8 f5 e5 00 00                  	call 0x1be56 <unknown_1be56>
0xd861:     8b 18                           	mov ebx, dword ptr [eax]
0xd863:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xd866:     89 04 24                        	mov dword ptr [esp], eax
0xd869:     e8 e8 e5 00 00                  	call 0x1be56 <unknown_1be56>
0xd86e:     8b 00                           	mov eax, dword ptr [eax]
0xd870:     39 c3                           	cmp ebx, eax
0xd872:     0f 94 c0                        	sete al
0xd875:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xd878:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xd87f:     74 05                           	je 0xd886 <function_d886>
; data inside code section at 0xd881 -- 0xd882
0xd881:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd882 -- 0xd883
; data inside code section at 0xd883 -- 0xd886
0xd883:     ff ff ff                                           |...             |
; function: function_d886 at 0xd886 -- 0xd88c
0xd886:     83 c4 34                        	add esp, 0x34
0xd889:     5b                              	pop ebx
0xd88a:     5d                              	pop ebp
0xd88b:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
; function: _ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev at 0xd88c -- 0xd8ba
0xd88c:     55                              	push ebp
0xd88d:     89 e5                           	mov ebp, esp
0xd88f:     83 ec 38                        	sub esp, 0x38
0xd892:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd895:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd898:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd89e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd8a1:     31 c0                           	xor eax, eax
0xd8a3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd8a6:     89 04 24                        	mov dword ptr [esp], eax
0xd8a9:     e8 dc 83 00 00                  	call 0x15c8a <function_15c8a>
0xd8ae:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd8b1:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd8b8:     74 05                           	je 0xd8bf <function_d8bf>
; data inside code section at 0xd8ba -- 0xd8bb
0xd8ba:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd8bb -- 0xd8bc
; data inside code section at 0xd8bc -- 0xd8bf
0xd8bc:     ff ff ff                                           |...             |
; function: function_d8bf at 0xd8bf -- 0xd8c1
0xd8bf:     c9                              	leave 
0xd8c0:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEEC2Ev
; function: _ZNSt12_Vector_baseIhSaIhEEC1Ev at 0xd8c2 -- 0xd8f0
0xd8c2:     55                              	push ebp
0xd8c3:     89 e5                           	mov ebp, esp
0xd8c5:     83 ec 38                        	sub esp, 0x38
0xd8c8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd8cb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd8ce:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd8d4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd8d7:     31 c0                           	xor eax, eax
0xd8d9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd8dc:     89 04 24                        	mov dword ptr [esp], eax
0xd8df:     e8 0e 15 01 00                  	call 0x1edf2 <unknown_1edf2>
0xd8e4:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd8e7:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd8ee:     74 05                           	je 0xd8f5 <function_d8f5>
; data inside code section at 0xd8f0 -- 0xd8f1
0xd8f0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd8f1 -- 0xd8f2
; data inside code section at 0xd8f2 -- 0xd8f5
0xd8f2:     ff ff ff                                           |...             |
; function: function_d8f5 at 0xd8f5 -- 0xd8f7
0xd8f5:     c9                              	leave 
0xd8f6:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEED2Ev
; function: _ZNSt12_Vector_baseIhSaIhEED1Ev at 0xd8f8 -- 0xd938
0xd8f8:     55                              	push ebp
0xd8f9:     89 e5                           	mov ebp, esp
0xd8fb:     53                              	push ebx
0xd8fc:     83 ec 34                        	sub esp, 0x34
0xd8ff:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd902:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd905:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd90b:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd90e:     31 c0                           	xor eax, eax
0xd910:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd913:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0xd916:     89 c2                           	mov edx, eax
0xd918:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd91b:     8b 00                           	mov eax, dword ptr [eax]
0xd91d:     89 d1                           	mov ecx, edx
0xd91f:     29 c1                           	sub ecx, eax
0xd921:     89 c8                           	mov eax, ecx
0xd923:     89 c2                           	mov edx, eax
0xd925:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd928:     8b 00                           	mov eax, dword ptr [eax]
0xd92a:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xd92e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xd932:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd935:     89 04 24                        	mov dword ptr [esp], eax
; function: function_d938 at 0xd938 -- 0xd956
0xd938:     e8 fb db 00 00                  	call 0x1b538 <function_1b538>
0xd93d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd940:     89 04 24                        	mov dword ptr [esp], eax
0xd943:     e8 3c d8 00 00                  	call 0x1b184 <function_1b184>
0xd948:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd94b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd952:     74 1e                           	je 0xd972 <function_d972>
0xd954:     eb 17                           	jmp 0xd96d <function_d96d>
; data inside code section at 0xd956 -- 0xd957
0xd956:     89                                                 |.               |
; function: function_d957 at 0xd957 -- 0xd958
0xd957:     c3                              	ret 
; data inside code section at 0xd958 -- 0xd969
0xd958:     8b 45 e4 89 04 24 e8 21  d8 00 00 89 d8 89 04 24   |.E...$.!.......$|
0xd968:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xd969 -- 0xd96a
; data inside code section at 0xd96a -- 0xd96d
0xd96a:     ff ff ff                                           |...             |
; function: function_d96d at 0xd96d -- 0xd96e
; dynamically linked function: __stack_chk_fail at 0xd96e -- 0xd96f
; data inside code section at 0xd96f -- 0xd972
0xd96f:     ff ff ff                                           |...             |
; function: function_d972 at 0xd972 -- 0xd978
0xd972:     83 c4 34                        	add esp, 0x34
0xd975:     5b                              	pop ebx
0xd976:     5d                              	pop ebp
0xd977:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
; function: _ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv at 0xd978 -- 0xd97b
0xd978:     55                              	push ebp
0xd979:     89 e5                           	mov ebp, esp
; data inside code section at 0xd97b -- 0xd97c
0xd97b:     83                                                 |.               |
; function: function_d97c at 0xd97c -- 0xd995
0xd97c:     ec                              	in al, dx
0xd97d:     28 8b 45 08 89 45               	sub byte ptr [ebx + 0x45890845], cl
0xd983:     e4 65                           	in al, 0x65
0xd985:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xd98a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd98d:     31 c0                           	xor eax, eax
0xd98f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xd992:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0xd995 -- 0xd996
0xd995:     65                                                 |e               |
; function: function_d996 at 0xd996 -- 0xd99e
0xd996:     33 15 14 00 00 00               	xor edx, dword ptr [0x14]
0xd99c:     74 05                           	je 0xd9a3 <function_d9a3>
; data inside code section at 0xd99e -- 0xd99f
0xd99e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd99f -- 0xd9a0
; data inside code section at 0xd9a0 -- 0xd9a3
0xd9a0:     ff ff ff                                           |...             |
; function: function_d9a3 at 0xd9a3 -- 0xd9a5
0xd9a3:     c9                              	leave 
0xd9a4:     c3                              	ret 
; section: .text._ZSt8_DestroyIPhhEvT_S1_RSaIT0_E
; function: _ZSt8_DestroyIPhhEvT_S1_RSaIT0_E at 0xd9a5 -- 0xd9cb
0xd9a5:     55                              	push ebp
0xd9a6:     89 e5                           	mov ebp, esp
0xd9a8:     83 ec 38                        	sub esp, 0x38
0xd9ab:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xd9ae:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xd9b1:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xd9b4:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xd9b7:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xd9ba:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xd9bd:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xd9c3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xd9c6:     31 c0                           	xor eax, eax
0xd9c8:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; data inside code section at 0xd9cb -- 0xd9ce
0xd9cb:     89 44 24                                           |.D$             |
; function: function_d9ce at 0xd9ce -- 0xd9e6
0xd9ce:     04 8b                           	add al, 0x8b
0xd9d0:     45                              	inc ebp
0xd9d1:     e4 89                           	in al, 0x89
0xd9d3:     04 24                           	add al, 0x24
0xd9d5:     e8 4d 15 01 00                  	call 0x1ef27 <unknown_1ef27>
0xd9da:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xd9dd:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xd9e4:     74 05                           	je 0xd9eb <function_d9eb>
; data inside code section at 0xd9e6 -- 0xd9e7
0xd9e6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd9e7 -- 0xd9e8
; data inside code section at 0xd9e8 -- 0xd9eb
0xd9e8:     ff ff ff                                           |...             |
; function: function_d9eb at 0xd9eb -- 0xd9ed
0xd9eb:     c9                              	leave 
0xd9ec:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIhEC2Ev
; function: _ZN9__gnu_cxx13new_allocatorIhEC1Ev at 0xd9ee -- 0xd9f1
0xd9ee:     55                              	push ebp
0xd9ef:     89 e5                           	mov ebp, esp
; data inside code section at 0xd9f1 -- 0xd9f2
0xd9f1:     83                                                 |.               |
; function: function_d9f2 at 0xd9f2 -- 0xda03
0xd9f2:     ec                              	in al, dx
0xd9f3:     28 8b 45 08 89 45               	sub byte ptr [ebx + 0x45890845], cl
0xd9f9:     e4 65                           	in al, 0x65
0xd9fb:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xda00:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0xda03 -- 0xda04
0xda03:     31                                                 |1               |
; function: function_da04 at 0xda04 -- 0xda05
; data inside code section at 0xda05 -- 0xda12
0xda05:     8b 45 f4 65 33 05 14 00  00 00 74 05 e8            |.E.e3.....t..   |
; dynamically linked function: __stack_chk_fail at 0xda12 -- 0xda13
; data inside code section at 0xda13 -- 0xda15
0xda13:     ff ff                                              |..              |
; function: function_da15 at 0xda15 -- 0xda18
0xda15:     ff c9                           	dec ecx
0xda17:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIhED2Ev
; function: _ZN9__gnu_cxx13new_allocatorIhED1Ev at 0xda18 -- 0xda39
0xda18:     55                              	push ebp
0xda19:     89 e5                           	mov ebp, esp
0xda1b:     83 ec 28                        	sub esp, 0x28
0xda1e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xda21:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xda24:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xda2a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xda2d:     31 c0                           	xor eax, eax
0xda2f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xda32:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
; data inside code section at 0xda39 -- 0xda3a
0xda39:     74                                                 |t               |
; function: function_da3a at 0xda3a -- 0xda3b
; data inside code section at 0xda3b -- 0xda3c
0xda3b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xda3c -- 0xda3d
; data inside code section at 0xda3d -- 0xda3f
0xda3d:     ff ff                                              |..              |
; function: function_da3f at 0xda3f -- 0xda42
0xda3f:     ff c9                           	dec ecx
0xda41:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEEC2EjRKS0_
; function: _ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_ at 0xda42 -- 0xda61
0xda42:     55                              	push ebp
0xda43:     89 e5                           	mov ebp, esp
0xda45:     53                              	push ebx
0xda46:     83 ec 34                        	sub esp, 0x34
0xda49:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xda4c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xda4f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xda52:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xda55:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xda58:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xda5b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; data inside code section at 0xda61 -- 0xda62
0xda61:     89                                                 |.               |
; function: function_da62 at 0xda62 -- 0xda78
0xda62:     45                              	inc ebp
0xda63:     f4                              	hlt 
0xda64:     31 c0                           	xor eax, eax
0xda66:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xda69:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xda6c:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xda70:     89 04 24                        	mov dword ptr [esp], eax
0xda73:     e8 8e 15 01 00                  	call 0x1f006 <unknown_1f006>
; data inside code section at 0xda78 -- 0xda7a
0xda78:     8b 45                                              |.E              |
; function: function_da7a at 0xda7a -- 0xdaba
0xda7a:     e0 89                           	loopne 0xda05
0xda7c:     44                              	inc esp
0xda7d:     24 04                           	and al, 4
0xda7f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xda82:     89 04 24                        	mov dword ptr [esp], eax
0xda85:     e8 dc 15 01 00                  	call 0x1f066 <unknown_1f066>
0xda8a:     89 c2                           	mov edx, eax
0xda8c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xda8f:     89 10                           	mov dword ptr [eax], edx
0xda91:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xda94:     8b 10                           	mov edx, dword ptr [eax]
0xda96:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xda99:     89 50 04                        	mov dword ptr [eax + 4], edx
0xda9c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xda9f:     8b 00                           	mov eax, dword ptr [eax]
0xdaa1:     89 c2                           	mov edx, eax
0xdaa3:     03 55 e0                        	add edx, dword ptr [ebp - 0x20]
0xdaa6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdaa9:     89 50 08                        	mov dword ptr [eax + 8], edx
0xdaac:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xdaaf:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xdab6:     74 1e                           	je 0xdad6 <function_dad6>
0xdab8:     eb 17                           	jmp 0xdad1 <function_dad1>
; data inside code section at 0xdaba -- 0xdabb
0xdaba:     89                                                 |.               |
; function: function_dabb at 0xdabb -- 0xdabc
0xdabb:     c3                              	ret 
; data inside code section at 0xdabc -- 0xdacd
0xdabc:     8b 45 e4 89 04 24 e8 07  d8 00 00 89 d8 89 04 24   |.E...$.........$|
0xdacc:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xdacd -- 0xdace
; data inside code section at 0xdace -- 0xdad1
0xdace:     ff ff ff                                           |...             |
; function: function_dad1 at 0xdad1 -- 0xdad2
; dynamically linked function: __stack_chk_fail at 0xdad2 -- 0xdad3
; data inside code section at 0xdad3 -- 0xdad6
0xdad3:     ff ff ff                                           |...             |
; function: function_dad6 at 0xdad6 -- 0xdadc
0xdad6:     83 c4 34                        	add esp, 0x34
0xdad9:     5b                              	pop ebx
0xdada:     5d                              	pop ebp
0xdadb:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE18_M_fill_initializeEjRKh
; function: _ZNSt6vectorIhSaIhEE18_M_fill_initializeEjRKh at 0xdadc -- 0xdb41
0xdadc:     55                              	push ebp
0xdadd:     89 e5                           	mov ebp, esp
0xdadf:     83 ec 38                        	sub esp, 0x38
0xdae2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdae5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdae8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdaeb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdaee:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdaf1:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdaf4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdafa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdafd:     31 c0                           	xor eax, eax
0xdaff:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdb02:     89 04 24                        	mov dword ptr [esp], eax
0xdb05:     e8 4a d9 00 00                  	call 0x1b454 <function_1b454>
0xdb0a:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xdb0d:     8b 12                           	mov edx, dword ptr [edx]
0xdb0f:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0xdb13:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xdb16:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xdb1a:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xdb1d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xdb21:     89 14 24                        	mov dword ptr [esp], edx
0xdb24:     e8 2e 16 01 00                  	call 0x1f157 <unknown_1f157>
0xdb29:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdb2c:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0xdb2f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdb32:     89 50 04                        	mov dword ptr [eax + 4], edx
0xdb35:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xdb38:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xdb3f:     74 05                           	je 0xdb46 <function_db46>
; data inside code section at 0xdb41 -- 0xdb42
0xdb41:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdb42 -- 0xdb43
; data inside code section at 0xdb43 -- 0xdb46
0xdb43:     ff ff ff                                           |...             |
; function: function_db46 at 0xdb46 -- 0xdb48
0xdb46:     c9                              	leave 
0xdb47:     c3                              	ret 
; section: .text._ZNKSt6vectorIhSaIhEE8capacityEv
; function: _ZNKSt6vectorIhSaIhEE8capacityEv at 0xdb48 -- 0xdb7e
0xdb48:     55                              	push ebp
0xdb49:     89 e5                           	mov ebp, esp
0xdb4b:     83 ec 28                        	sub esp, 0x28
0xdb4e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdb51:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdb54:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdb5a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdb5d:     31 c0                           	xor eax, eax
0xdb5f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdb62:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0xdb65:     89 c2                           	mov edx, eax
0xdb67:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdb6a:     8b 00                           	mov eax, dword ptr [eax]
0xdb6c:     89 d1                           	mov ecx, edx
0xdb6e:     29 c1                           	sub ecx, eax
0xdb70:     89 c8                           	mov eax, ecx
0xdb72:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xdb75:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xdb7c:     74 05                           	je 0xdb83 <function_db83>
; data inside code section at 0xdb7e -- 0xdb7f
0xdb7e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdb7f -- 0xdb80
; data inside code section at 0xdb80 -- 0xdb83
0xdb80:     ff ff ff                                           |...             |
; function: function_db83 at 0xdb83 -- 0xdb85
0xdb83:     c9                              	leave 
0xdb84:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhjT_S9_
; function: _ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhjT_S9_ at 0xdb86 -- 0xdbfe
0xdb86:     55                              	push ebp
0xdb87:     89 e5                           	mov ebp, esp
0xdb89:     53                              	push ebx
0xdb8a:     83 ec 34                        	sub esp, 0x34
0xdb8d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdb90:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdb93:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdb96:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdb99:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdb9c:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdb9f:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xdba2:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xdba5:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdbab:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdbae:     31 c0                           	xor eax, eax
0xdbb0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdbb3:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xdbb6:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xdbba:     89 04 24                        	mov dword ptr [esp], eax
0xdbbd:     e8 e8 15 01 00                  	call 0x1f1aa <unknown_1f1aa>
0xdbc2:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xdbc5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdbc8:     89 04 24                        	mov dword ptr [esp], eax
0xdbcb:     e8 2e d9 00 00                  	call 0x1b4fe <function_1b4fe>
0xdbd0:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0xdbd4:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0xdbd7:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xdbdb:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0xdbde:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xdbe2:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xdbe5:     89 04 24                        	mov dword ptr [esp], eax
0xdbe8:     e8 0a e2 00 00                  	call 0x1bdf7 <unknown_1bdf7>
0xdbed:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0xdbf0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xdbf3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xdbfa:     74 3e                           	je 0xdc3a <function_dc3a>
0xdbfc:     eb 37                           	jmp 0xdc35 <function_dc35>
; data inside code section at 0xdbfe -- 0xdbff
0xdbfe:     89                                                 |.               |
; function: function_dbff at 0xdbff -- 0xdc00
0xdbff:     c3                              	ret 
; data inside code section at 0xdc00 -- 0xdc01
0xdc00:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xdc01 -- 0xdc02
; data inside code section at 0xdc02 -- 0xdc0b
0xdc02:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xdc0b -- 0xdc0c
; data inside code section at 0xdc0c -- 0xdc13
0xdc0c:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xdc13 -- 0xdc14
; data inside code section at 0xdc14 -- 0xdc20
0xdc14:     ff ff ff 8b 45 e4 8b 55  e0 89 54 24               |....E..U..T$    |
; function: function_dc20 at 0xdc20 -- 0xdc30
0xdc20:     08 8b 55 f0 89 54               	or byte ptr [ebx + 0x5489f055], cl
0xdc26:     24 04                           	and al, 4
0xdc28:     89 04 24                        	mov dword ptr [esp], eax
0xdc2b:     e8 96 db 00 00                  	call 0x1b7c6 <function_1b7c6>
; data inside code section at 0xdc30 -- 0xdc31
0xdc30:     e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0xdc31 -- 0xdc32
; data inside code section at 0xdc32 -- 0xdc35
0xdc32:     ff ff ff                                           |...             |
; function: function_dc35 at 0xdc35 -- 0xdc36
; dynamically linked function: __stack_chk_fail at 0xdc36 -- 0xdc37
; data inside code section at 0xdc37 -- 0xdc3a
0xdc37:     ff ff ff                                           |...             |
; function: function_dc3a at 0xdc3a -- 0xdc40
0xdc3a:     83 c4 34                        	add esp, 0x34
0xdc3d:     5b                              	pop ebx
0xdc3e:     5d                              	pop ebp
0xdc3f:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj
; function: _ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj at 0xdc40 -- 0xdc8e
0xdc40:     55                              	push ebp
0xdc41:     89 e5                           	mov ebp, esp
0xdc43:     83 ec 38                        	sub esp, 0x38
0xdc46:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdc49:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdc4c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdc4f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdc52:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdc55:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdc58:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdc5e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdc61:     31 c0                           	xor eax, eax
0xdc63:     83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0xdc67:     74 19                           	je 0xdc82 <_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj+0x42>
0xdc69:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdc6c:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xdc6f:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xdc73:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xdc76:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xdc7a:     89 04 24                        	mov dword ptr [esp], eax
0xdc7d:     e8 8e 16 01 00                  	call 0x1f310 <unknown_1f310>
0xdc82:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xdc85:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xdc8c:     74 05                           	je 0xdc93 <function_dc93>
; data inside code section at 0xdc8e -- 0xdc8f
0xdc8e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdc8f -- 0xdc90
; data inside code section at 0xdc90 -- 0xdc93
0xdc90:     ff ff ff                                           |...             |
; function: function_dc93 at 0xdc93 -- 0xdc95
0xdc93:     c9                              	leave 
0xdc94:     c3                              	ret 
; section: .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
; function: _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_ at 0xdc95 -- 0xdcf2
0xdc95:     55                              	push ebp
0xdc96:     89 e5                           	mov ebp, esp
0xdc98:     83 ec 38                        	sub esp, 0x38
0xdc9b:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdc9e:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdca1:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdca4:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdca7:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdcaa:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdcad:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xdcb0:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xdcb3:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdcb9:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdcbc:     31 c0                           	xor eax, eax
0xdcbe:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xdcc1:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xdcc4:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xdcc8:     89 04 24                        	mov dword ptr [esp], eax
0xdccb:     e8 d6 16 01 00                  	call 0x1f3a6 <unknown_1f3a6>
0xdcd0:     83 ec 04                        	sub esp, 4
0xdcd3:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xdcd6:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xdcd9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xdcdd:     89 04 24                        	mov dword ptr [esp], eax
0xdce0:     e8 c1 16 01 00                  	call 0x1f3a6 <unknown_1f3a6>
0xdce5:     83 ec 04                        	sub esp, 4
0xdce8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdceb:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0xdcee:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
; data inside code section at 0xdcf2 -- 0xdcf4
0xdcf2:     8b 55                                              |.U              |
; function: function_dcf4 at 0xdcf4 -- 0xdcf5
; data inside code section at 0xdcf5 -- 0xdd1b
0xdcf5:     89 54 24 08 8b 55 ec 89  54 24 04 89 04 24 e8 e8   |.T$..U..T$...$..|
0xdd05:     16 01 00 83 ec 04 8b 45  e4 8b 55 f4 65 33 15 14   |.......E..U.e3..|
0xdd15:     00 00 00 74 05 e8                                  |...t..          |
; dynamically linked function: __stack_chk_fail at 0xdd1b -- 0xdd1c
; data inside code section at 0xdd1c -- 0xdd1e
0xdd1c:     ff ff                                              |..              |
; function: function_dd1e at 0xdd1e -- 0xdd23
0xdd1e:     ff c9                           	dec ecx
0xdd20:     c2 04 00                        	ret 4
; section: .text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E
; function: _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E at 0xdd23 -- 0xdd4d
0xdd23:     55                              	push ebp
0xdd24:     89 e5                           	mov ebp, esp
0xdd26:     83 ec 38                        	sub esp, 0x38
0xdd29:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdd2c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdd2f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdd32:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdd35:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdd38:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdd3b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdd41:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdd44:     31 c0                           	xor eax, eax
0xdd46:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xdd49:     89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0xdd4d -- 0xdd4e
0xdd4d:     8b                                                 |.               |
; function: function_dd4e at 0xdd4e -- 0xdd64
0xdd4e:     45                              	inc ebp
0xdd4f:     e4 89                           	in al, 0x89
0xdd51:     04 24                           	add al, 0x24
0xdd53:     e8 b8 17 01 00                  	call 0x1f510 <unknown_1f510>
0xdd58:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xdd5b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xdd62:     74 05                           	je 0xdd69 <function_dd69>
; data inside code section at 0xdd64 -- 0xdd65
0xdd64:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdd65 -- 0xdd66
; data inside code section at 0xdd66 -- 0xdd69
0xdd66:     ff ff ff                                           |...             |
; function: function_dd69 at 0xdd69 -- 0xdd6b
0xdd69:     c9                              	leave 
0xdd6a:     c3                              	ret 
; section: .text._ZSt4copyIPhS0_ET0_T_S2_S1_
; function: _ZSt4copyIPhS0_ET0_T_S2_S1_ at 0xdd6b -- 0xddc6
0xdd6b:     55                              	push ebp
0xdd6c:     89 e5                           	mov ebp, esp
0xdd6e:     53                              	push ebx
0xdd6f:     83 ec 34                        	sub esp, 0x34
0xdd72:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdd75:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdd78:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdd7b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdd7e:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdd81:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdd84:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdd8a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdd8d:     31 c0                           	xor eax, eax
0xdd8f:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xdd92:     89 04 24                        	mov dword ptr [esp], eax
0xdd95:     e8 00 18 01 00                  	call 0x1f59a <unknown_1f59a>
0xdd9a:     89 c3                           	mov ebx, eax
0xdd9c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdd9f:     89 04 24                        	mov dword ptr [esp], eax
0xdda2:     e8 f3 17 01 00                  	call 0x1f59a <unknown_1f59a>
0xdda7:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xddaa:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xddae:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0xddb2:     89 04 24                        	mov dword ptr [esp], eax
0xddb5:     e8 15 18 01 00                  	call 0x1f5cf <unknown_1f5cf>
0xddba:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xddbd:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xddc4:     74 05                           	je 0xddcb <function_ddcb>
; data inside code section at 0xddc6 -- 0xddc7
0xddc6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xddc7 -- 0xddc8
; data inside code section at 0xddc8 -- 0xddcb
0xddc8:     ff ff ff                                           |...             |
; function: function_ddcb at 0xddcb -- 0xddd1
0xddcb:     83 c4 34                        	add esp, 0x34
0xddce:     5b                              	pop ebx
0xddcf:     5d                              	pop ebp
0xddd0:     c3                              	ret 
; section: .text._ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E
; function: _ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E at 0xddd1 -- 0xde1f
0xddd1:     55                              	push ebp
0xddd2:     89 e5                           	mov ebp, esp
0xddd4:     83 ec 38                        	sub esp, 0x38
0xddd7:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xddda:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdddd:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdde0:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdde3:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xdde6:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xdde9:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xddec:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xddef:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xddf5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xddf8:     31 c0                           	xor eax, eax
0xddfa:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xddfd:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xde01:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xde04:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xde08:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xde0b:     89 04 24                        	mov dword ptr [esp], eax
0xde0e:     e8 94 18 01 00                  	call 0x1f6a7 <unknown_1f6a7>
0xde13:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xde16:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xde1d:     74 05                           	je 0xde24 <function_de24>
; data inside code section at 0xde1f -- 0xde20
0xde1f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xde20 -- 0xde21
; data inside code section at 0xde21 -- 0xde24
0xde21:     ff ff ff                                           |...             |
; function: function_de24 at 0xde24 -- 0xde26
0xde24:     c9                              	leave 
0xde25:     c3                              	ret 
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv at 0xde26 -- 0xde32
0xde26:     55                              	push ebp
0xde27:     89 e5                           	mov ebp, esp
0xde29:     83 ec 38                        	sub esp, 0x38
0xde2c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xde2f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0xde32 -- 0xde34
0xde32:     65 a1                                              |e.              |
; function: function_de34 at 0xde34 -- 0xde68
0xde34:     14 00                           	adc al, 0
0xde36:     00 00                           	add byte ptr [eax], al
0xde38:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xde3b:     31 c0                           	xor eax, eax
0xde3d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xde40:     8b 00                           	mov eax, dword ptr [eax]
0xde42:     85 c0                           	test eax, eax
0xde44:     74 16                           	je 0xde5c <function_de34+0x28>
0xde46:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xde49:     8b 00                           	mov eax, dword ptr [eax]
0xde4b:     8b 00                           	mov eax, dword ptr [eax]
0xde4d:     83 c0 0c                        	add eax, 0xc
0xde50:     8b 10                           	mov edx, dword ptr [eax]
0xde52:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xde55:     8b 00                           	mov eax, dword ptr [eax]
0xde57:     89 04 24                        	mov dword ptr [esp], eax
0xde5a:     ff d2                           	call edx
0xde5c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xde5f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xde66:     74 05                           	je 0xde6d <function_de6d>
; data inside code section at 0xde68 -- 0xde69
0xde68:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xde69 -- 0xde6a
; function: function_de6a at 0xde6a -- 0xde6b
; data inside code section at 0xde6b -- 0xde6d
0xde6b:     ff ff                                              |..              |
; function: function_de6d at 0xde6d -- 0xde6f
0xde6d:     c9                              	leave 
0xde6e:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_baseC2Ev
; function: _ZN5boost16exception_detail10clone_baseC1Ev at 0xde70 -- 0xde9c
0xde70:     55                              	push ebp
0xde71:     89 e5                           	mov ebp, esp
0xde73:     83 ec 28                        	sub esp, 0x28
0xde76:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xde79:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xde7c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xde82:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xde85:     31 c0                           	xor eax, eax
0xde87:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xde8a:     c7 00 f4 b6 01 00               	mov dword ptr [eax], 0x1b6f4
0xde90:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xde93:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xde9a:     74 05                           	je 0xdea1
; data inside code section at 0xde9c -- 0xde9d
0xde9c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xde9d -- 0xde9e
; data inside code section at 0xde9e -- 0xdea0
0xde9e:     ff ff                                              |..              |
; function: function_dea0 at 0xdea0 -- 0xdea3
0xdea0:     ff c9                           	dec ecx
0xdea2:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC2ERKS2_
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_ at 0xdea4 -- 0xdf13
0xdea4:     55                              	push ebp
0xdea5:     89 e5                           	mov ebp, esp
0xdea7:     53                              	push ebx
0xdea8:     83 ec 34                        	sub esp, 0x34
0xdeab:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdeae:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdeb1:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xdeb4:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xdeb7:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdebd:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdec0:     31 c0                           	xor eax, eax
0xdec2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdec5:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xdec8:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xdecc:     89 04 24                        	mov dword ptr [esp], eax
0xdecf:     e8 62 8a 00 00                  	call 0x16936 <function_16936>
0xded4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xded7:     83 c0 18                        	add eax, 0x18
0xdeda:     89 04 24                        	mov dword ptr [esp], eax
0xdedd:     e8 32 de 00 00                  	call 0x1bd14 <unknown_1bd14>
0xdee2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdee5:     c7 00 4c b6 01 00               	mov dword ptr [eax], 0x1b64c
0xdeeb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdeee:     c7 40 14 64 b6 01 00            	mov dword ptr [eax + 0x14], 0x1b664
0xdef5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdef8:     c7 40 18 78 b6 01 00            	mov dword ptr [eax + 0x18], 0x1b678
0xdeff:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xdf02:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdf05:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xdf09:     89 04 24                        	mov dword ptr [esp], eax
0xdf0c:     e8 4d 38 00 00                  	call 0x1175e <function_1175e>
0xdf11:     eb 25                           	jmp 0xdf38 <function_df38>
; data inside code section at 0xdf13 -- 0xdf14
0xdf13:     89                                                 |.               |
; function: function_df14 at 0xdf14 -- 0xdf15
0xdf14:     c3                              	ret 
; data inside code section at 0xdf15 -- 0xdf34
0xdf15:     8b 45 e4 83 c0 18 89 04  24 e8 b1 37 00 00 8b 45   |.E......$..7...E|
0xdf25:     e4 89 04 24 e8 06 89 00  00 89 d8 89 04 24 e8      |...$.........$. |
; dynamically linked function: _Unwind_Resume at 0xdf34 -- 0xdf35
; data inside code section at 0xdf35 -- 0xdf38
0xdf35:     ff ff ff                                           |...             |
; function: function_df38 at 0xdf38 -- 0xdf44
0xdf38:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xdf3b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xdf42:     74 05                           	je 0xdf49 <function_df49>
; data inside code section at 0xdf44 -- 0xdf45
0xdf44:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdf45 -- 0xdf46
; data inside code section at 0xdf46 -- 0xdf49
0xdf46:     ff ff ff                                           |...             |
; function: function_df49 at 0xdf49 -- 0xdf4f
0xdf49:     83 c4 34                        	add esp, 0x34
0xdf4c:     5b                              	pop ebx
0xdf4d:     5d                              	pop ebp
0xdf4e:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0xdf4f -- 0xdf59
0xdf4f:     83 6c 24 04 18                  	sub dword ptr [esp + 4], 0x18
0xdf54:     e9 5a df 00 00                  	jmp 0x1beb3 <function_1beb3>
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0xdf59 -- 0xdf63
0xdf59:     83 6c 24 04 14                  	sub dword ptr [esp + 4], 0x14
0xdf5e:     e9 50 df 00 00                  	jmp 0x1beb3 <function_1beb3>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0xdf64 -- 0xdf8e
0xdf64:     55                              	push ebp
0xdf65:     89 e5                           	mov ebp, esp
0xdf67:     83 ec 38                        	sub esp, 0x38
0xdf6a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdf6d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdf70:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdf76:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdf79:     31 c0                           	xor eax, eax
0xdf7b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdf7e:     c7 00 4c b6 01 00               	mov dword ptr [eax], 0x1b64c
0xdf84:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdf87:     c7 40 14 64 b6 01 00            	mov dword ptr [eax + 0x14], 0x1b664
; data inside code section at 0xdf8e -- 0xdf90
0xdf8e:     8b 45                                              |.E              |
; function: function_df90 at 0xdf90 -- 0xdfc3
0xdf90:     e4 c7                           	in al, 0xc7
0xdf92:     40                              	inc eax
0xdf93:     18 78 b6                        	sbb byte ptr [eax - 0x4a], bh
0xdf96:     01 00                           	add dword ptr [eax], eax
0xdf98:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdf9b:     83 c0 18                        	add eax, 0x18
0xdf9e:     89 04 24                        	mov dword ptr [esp], eax
0xdfa1:     e8 ee 37 00 00                  	call 0x11794 <function_11794>
0xdfa6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdfa9:     89 04 24                        	mov dword ptr [esp], eax
0xdfac:     e8 43 89 00 00                  	call 0x168f4 <_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_>
0xdfb1:     b8 00 00 00 00                  	mov eax, 0
0xdfb6:     83 e0 01                        	and eax, 1
0xdfb9:     84 c0                           	test al, al
0xdfbb:     74 0b                           	je 0xdfc8 <function_dfc8>
0xdfbd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xdfc0:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xdfc3 -- 0xdfc4
0xdfc3:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xdfc4 -- 0xdfc5
; data inside code section at 0xdfc5 -- 0xdfc8
0xdfc5:     ff ff ff                                           |...             |
; function: function_dfc8 at 0xdfc8 -- 0xdfd4
0xdfc8:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xdfcb:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xdfd2:     74 05                           	je 0xdfd9 <function_dfd9>
; data inside code section at 0xdfd4 -- 0xdfd5
0xdfd4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdfd5 -- 0xdfd6
; data inside code section at 0xdfd6 -- 0xdfd9
0xdfd6:     ff ff ff                                           |...             |
; function: function_dfd9 at 0xdfd9 -- 0xdfdb
0xdfd9:     c9                              	leave 
0xdfda:     c3                              	ret 
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0xdfdc -- 0xdfe3
0xdfdc:     83 6c 24 04 18                  	sub dword ptr [esp + 4], 0x18
0xdfe1:     eb 07                           	jmp 0xdfea <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0xdfe3 -- 0xdfea
0xdfe3:     83 6c 24 04 14                  	sub dword ptr [esp + 4], 0x14
0xdfe8:     eb 00                           	jmp 0xdfea <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0xdfea -- 0xe012
0xdfea:     55                              	push ebp
0xdfeb:     89 e5                           	mov ebp, esp
0xdfed:     83 ec 38                        	sub esp, 0x38
0xdff0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xdff3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xdff6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xdffc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xdfff:     31 c0                           	xor eax, eax
0xe001:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe004:     89 04 24                        	mov dword ptr [esp], eax
0xe007:     e8 34 df 00 00                  	call 0x1bf40 <unknown_1bf40>
0xe00c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe00f:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xe012 -- 0xe013
0xe012:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe013 -- 0xe014
; data inside code section at 0xe014 -- 0xe024
0xe014:     ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0xe024 -- 0xe025
; data inside code section at 0xe025 -- 0xe027
0xe025:     ff ff                                              |..              |
; function: function_e027 at 0xe027 -- 0xe02a
0xe027:     ff c9                           	dec ecx
0xe029:     c3                              	ret 
; section: .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE
; function: _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE at 0xe02a -- 0xe065
0xe02a:     55                              	push ebp
0xe02b:     89 e5                           	mov ebp, esp
0xe02d:     83 ec 38                        	sub esp, 0x38
0xe030:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe033:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe036:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe039:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe03c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe042:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe045:     31 c0                           	xor eax, eax
0xe047:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe04a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe04e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe051:     89 04 24                        	mov dword ptr [esp], eax
0xe054:     e8 64 19 01 00                  	call 0x1f9bd <unknown_1f9bd>
0xe059:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe05c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe063:     74 05                           	je 0xe06a <function_e06a>
; data inside code section at 0xe065 -- 0xe066
0xe065:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe066 -- 0xe067
; data inside code section at 0xe067 -- 0xe06a
0xe067:     ff ff ff                                           |...             |
; function: function_e06a at 0xe06a -- 0xe06c
0xe06a:     c9                              	leave 
0xe06b:     c3                              	ret 
; section: .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE
; function: _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE at 0xe06c -- 0xe0a7
0xe06c:     55                              	push ebp
0xe06d:     89 e5                           	mov ebp, esp
0xe06f:     83 ec 38                        	sub esp, 0x38
0xe072:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe075:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe078:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe07b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe07e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe084:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe087:     31 c0                           	xor eax, eax
0xe089:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe08c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe090:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe093:     89 04 24                        	mov dword ptr [esp], eax
0xe096:     e8 a2 19 01 00                  	call 0x1fa3d <unknown_1fa3d>
0xe09b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe09e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe0a5:     74 05                           	je 0xe0ac <function_e0ac>
; data inside code section at 0xe0a7 -- 0xe0a8
0xe0a7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe0a8 -- 0xe0a9
; data inside code section at 0xe0a9 -- 0xe0ac
0xe0a9:     ff ff ff                                           |...             |
; function: function_e0ac at 0xe0ac -- 0xe0ae
0xe0ac:     c9                              	leave 
0xe0ad:     c3                              	ret 
; section: .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE
; function: _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE at 0xe0ae -- 0xe0e9
0xe0ae:     55                              	push ebp
0xe0af:     89 e5                           	mov ebp, esp
0xe0b1:     83 ec 38                        	sub esp, 0x38
0xe0b4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe0b7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe0ba:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe0bd:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe0c0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe0c6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe0c9:     31 c0                           	xor eax, eax
0xe0cb:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe0ce:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe0d2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe0d5:     89 04 24                        	mov dword ptr [esp], eax
0xe0d8:     e8 e0 19 01 00                  	call 0x1fabd <unknown_1fabd>
0xe0dd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe0e0:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe0e7:     74 05                           	je 0xe0ee <function_e0ee>
; data inside code section at 0xe0e9 -- 0xe0ea
0xe0e9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe0ea -- 0xe0eb
; data inside code section at 0xe0eb -- 0xe0ee
0xe0eb:     ff ff ff                                           |...             |
; function: function_e0ee at 0xe0ee -- 0xe0f0
0xe0ee:     c9                              	leave 
0xe0ef:     c3                              	ret 
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_ at 0xe0f0 -- 0xe15f
0xe0f0:     55                              	push ebp
0xe0f1:     89 e5                           	mov ebp, esp
0xe0f3:     83 ec 38                        	sub esp, 0x38
0xe0f6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe0f9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe0fc:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe0ff:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe102:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe108:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe10b:     31 c0                           	xor eax, eax
0xe10d:     83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0xe111:     74 08                           	je 0xe11b <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_+0x2b>
0xe113:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe116:     83 c0 18                        	add eax, 0x18
0xe119:     eb 05                           	jmp 0xe120 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_+0x30>
0xe11b:     b8 00 00 00 00                  	mov eax, 0
0xe120:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xe123:     89 02                           	mov dword ptr [edx], eax
0xe125:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe128:     8d 50 04                        	lea edx, [eax + 4]
0xe12b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe12e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe132:     89 14 24                        	mov dword ptr [esp], edx
0xe135:     e8 04 1a 01 00                  	call 0x1fb3e <unknown_1fb3e>
0xe13a:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe13d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xe141:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe144:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe148:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe14b:     89 04 24                        	mov dword ptr [esp], eax
0xe14e:     e8 6f 3c 00 00                  	call 0x11dc2
0xe153:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe156:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe15d:     74 05                           	je 0xe164 <function_e164>
; data inside code section at 0xe15f -- 0xe160
0xe15f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe160 -- 0xe161
; data inside code section at 0xe161 -- 0xe164
0xe161:     ff ff ff                                           |...             |
; function: function_e164 at 0xe164 -- 0xe166
0xe164:     c9                              	leave 
0xe165:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
; function: _ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC1ERKS1_ at 0xe166 -- 0xe199
0xe166:     55                              	push ebp
0xe167:     89 e5                           	mov ebp, esp
0xe169:     83 ec 28                        	sub esp, 0x28
0xe16c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe16f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe172:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe175:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe178:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe17e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe181:     31 c0                           	xor eax, eax
0xe183:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe186:     8b 10                           	mov edx, dword ptr [eax]
0xe188:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe18b:     89 10                           	mov dword ptr [eax], edx
0xe18d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe190:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe197:     74 05                           	je 0xe19e <function_e19e>
; data inside code section at 0xe199 -- 0xe19a
0xe199:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe19a -- 0xe19b
; data inside code section at 0xe19b -- 0xe19e
0xe19b:     ff ff ff                                           |...             |
; function: function_e19e at 0xe19e -- 0xe1a0
0xe19e:     c9                              	leave 
0xe19f:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEmmEv
; function: _ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEmmEv at 0xe1a0 -- 0xe1d3
0xe1a0:     55                              	push ebp
0xe1a1:     89 e5                           	mov ebp, esp
0xe1a3:     83 ec 28                        	sub esp, 0x28
0xe1a6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe1a9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe1ac:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe1b2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe1b5:     31 c0                           	xor eax, eax
0xe1b7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe1ba:     8b 00                           	mov eax, dword ptr [eax]
0xe1bc:     8d 50 ff                        	lea edx, [eax - 1]
0xe1bf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe1c2:     89 10                           	mov dword ptr [eax], edx
0xe1c4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe1c7:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe1ca:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe1d1:     74 05                           	je 0xe1d8 <function_e1d8>
; data inside code section at 0xe1d3 -- 0xe1d4
0xe1d3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe1d4 -- 0xe1d5
; data inside code section at 0xe1d5 -- 0xe1d8
0xe1d5:     ff ff ff                                           |...             |
; function: function_e1d8 at 0xe1d8 -- 0xe1da
0xe1d8:     c9                              	leave 
0xe1d9:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv at 0xe1da -- 0xe202
0xe1da:     55                              	push ebp
0xe1db:     89 e5                           	mov ebp, esp
0xe1dd:     83 ec 28                        	sub esp, 0x28
0xe1e0:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe1e3:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe1e6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe1ec:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe1ef:     31 c0                           	xor eax, eax
0xe1f1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe1f4:     8b 00                           	mov eax, dword ptr [eax]
0xe1f6:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe1f9:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe200:     74 05                           	je 0xe207 <function_e207>
; data inside code section at 0xe202 -- 0xe203
0xe202:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe203 -- 0xe204
; data inside code section at 0xe204 -- 0xe207
0xe204:     ff ff ff                                           |...             |
; function: function_e207 at 0xe207 -- 0xe209
0xe207:     c9                              	leave 
0xe208:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEppEv
; function: _ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEppEv at 0xe20a -- 0xe23d
0xe20a:     55                              	push ebp
0xe20b:     89 e5                           	mov ebp, esp
0xe20d:     83 ec 28                        	sub esp, 0x28
0xe210:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe213:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe216:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe21c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe21f:     31 c0                           	xor eax, eax
0xe221:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe224:     8b 00                           	mov eax, dword ptr [eax]
0xe226:     8d 50 01                        	lea edx, [eax + 1]
0xe229:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe22c:     89 10                           	mov dword ptr [eax], edx
0xe22e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe231:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe234:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe23b:     74 05                           	je 0xe242 <function_e242>
; data inside code section at 0xe23d -- 0xe23e
0xe23d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe23e -- 0xe23f
; data inside code section at 0xe23f -- 0xe242
0xe23f:     ff ff ff                                           |...             |
; function: function_e242 at 0xe242 -- 0xe244
0xe242:     c9                              	leave 
0xe243:     c3                              	ret 
; section: .text._ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
; function: _ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv at 0xe244 -- 0xe26a
0xe244:     55                              	push ebp
0xe245:     89 e5                           	mov ebp, esp
0xe247:     83 ec 28                        	sub esp, 0x28
0xe24a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe24d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe250:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe256:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe259:     31 c0                           	xor eax, eax
0xe25b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe25e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe261:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe268:     74 05                           	je 0xe26f <function_e26f>
; data inside code section at 0xe26a -- 0xe26b
0xe26a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe26b -- 0xe26c
; data inside code section at 0xe26c -- 0xe26f
0xe26c:     ff ff ff                                           |...             |
; function: function_e26f at 0xe26f -- 0xe271
0xe26f:     c9                              	leave 
0xe270:     c3                              	ret 
; section: .text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
; function: _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E at 0xe271 -- 0xe2bf
0xe271:     55                              	push ebp
0xe272:     89 e5                           	mov ebp, esp
0xe274:     83 ec 38                        	sub esp, 0x38
0xe277:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe27a:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe27d:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe280:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe283:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xe286:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xe289:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xe28c:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xe28f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe295:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe298:     31 c0                           	xor eax, eax
0xe29a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xe29d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xe2a1:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe2a4:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe2a8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe2ab:     89 04 24                        	mov dword ptr [esp], eax
0xe2ae:     e8 dd 1a 01 00                  	call 0x1fd90 <unknown_1fd90>
0xe2b3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe2b6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe2bd:     74 05                           	je 0xe2c4 <function_e2c4>
; data inside code section at 0xe2bf -- 0xe2c0
0xe2bf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe2c0 -- 0xe2c1
; data inside code section at 0xe2c1 -- 0xe2c4
0xe2c1:     ff ff ff                                           |...             |
; function: function_e2c4 at 0xe2c4 -- 0xe2c6
0xe2c4:     c9                              	leave 
0xe2c5:     c3                              	ret 
; section: .text._ZN9__gnu_cxxneIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
; function: _ZN9__gnu_cxxneIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ at 0xe2c6 -- 0xe30f
0xe2c6:     55                              	push ebp
0xe2c7:     89 e5                           	mov ebp, esp
0xe2c9:     53                              	push ebx
0xe2ca:     83 ec 34                        	sub esp, 0x34
0xe2cd:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe2d0:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe2d3:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe2d6:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe2d9:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe2df:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe2e2:     31 c0                           	xor eax, eax
0xe2e4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe2e7:     89 04 24                        	mov dword ptr [esp], eax
0xe2ea:     e8 dd e3 00 00                  	call 0x1c6cc <unknown_1c6cc>
0xe2ef:     8b 18                           	mov ebx, dword ptr [eax]
0xe2f1:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe2f4:     89 04 24                        	mov dword ptr [esp], eax
0xe2f7:     e8 d0 e3 00 00                  	call 0x1c6cc <unknown_1c6cc>
0xe2fc:     8b 00                           	mov eax, dword ptr [eax]
0xe2fe:     39 c3                           	cmp ebx, eax
0xe300:     0f 95 c0                        	setne al
0xe303:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe306:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe30d:     74 05                           	je 0xe314 <function_e314>
; data inside code section at 0xe30f -- 0xe310
0xe30f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe310 -- 0xe311
; data inside code section at 0xe311 -- 0xe314
0xe311:     ff ff ff                                           |...             |
; function: function_e314 at 0xe314 -- 0xe31a
0xe314:     83 c4 34                        	add esp, 0x34
0xe317:     5b                              	pop ebx
0xe318:     5d                              	pop ebp
0xe319:     c3                              	ret 
; section: .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET0_T_S8_S7_
; function: _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET0_T_S8_S7_ at 0xe31a -- 0xe39f
0xe31a:     55                              	push ebp
0xe31b:     89 e5                           	mov ebp, esp
0xe31d:     83 ec 38                        	sub esp, 0x38
0xe320:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe323:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe326:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe329:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe32c:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xe32f:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xe332:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xe335:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xe338:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe33e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe341:     31 c0                           	xor eax, eax
0xe343:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xe346:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xe349:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe34d:     89 04 24                        	mov dword ptr [esp], eax
0xe350:     e8 33 1b 01 00                  	call 0x1fe88 <unknown_1fe88>
0xe355:     83 ec 04                        	sub esp, 4
0xe358:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xe35b:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xe35e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe362:     89 04 24                        	mov dword ptr [esp], eax
0xe365:     e8 1e 1b 01 00                  	call 0x1fe88 <unknown_1fe88>
0xe36a:     83 ec 04                        	sub esp, 4
0xe36d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe370:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0xe373:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xe377:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0xe37a:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xe37e:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0xe381:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe385:     89 04 24                        	mov dword ptr [esp], eax
0xe388:     e8 45 1b 01 00                  	call 0x1fed2 <unknown_1fed2>
0xe38d:     83 ec 04                        	sub esp, 4
0xe390:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe393:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe396:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe39d:     74 05                           	je 0xe3a4 <function_e3a4>
; data inside code section at 0xe39f -- 0xe3a0
0xe39f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe3a0 -- 0xe3a1
; data inside code section at 0xe3a1 -- 0xe3a4
0xe3a1:     ff ff ff                                           |...             |
; function: function_e3a4 at 0xe3a4 -- 0xe3a8
0xe3a4:     c9                              	leave 
0xe3a5:     c2 04 00                        	ret 4
; section: .text._ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh
; function: _ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh at 0xe3a8 -- 0xe3fe
0xe3a8:     55                              	push ebp
0xe3a9:     89 e5                           	mov ebp, esp
0xe3ab:     83 ec 38                        	sub esp, 0x38
0xe3ae:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe3b1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe3b4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe3b7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe3ba:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe3c0:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe3c3:     31 c0                           	xor eax, eax
0xe3c5:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe3c8:     89 04 24                        	mov dword ptr [esp], eax
0xe3cb:     e8 50 d9 00 00                  	call 0x1bd20 <unknown_1bd20>
0xe3d0:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xe3d3:     8b 52 04                        	mov edx, dword ptr [edx + 4]
0xe3d6:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xe3da:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe3de:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe3e1:     89 04 24                        	mov dword ptr [esp], eax
0xe3e4:     e8 64 d9 00 00                  	call 0x1bd4d <unknown_1bd4d>
0xe3e9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe3ec:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xe3ef:     89 50 04                        	mov dword ptr [eax + 4], edx
0xe3f2:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe3f5:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe3fc:     74 05                           	je 0xe403 <function_e403>
; data inside code section at 0xe3fe -- 0xe3ff
0xe3fe:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe3ff -- 0xe400
; data inside code section at 0xe400 -- 0xe403
0xe400:     ff ff ff                                           |...             |
; function: function_e403 at 0xe403 -- 0xe405
0xe403:     c9                              	leave 
0xe404:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv at 0xe406 -- 0xe412
0xe406:     55                              	push ebp
0xe407:     89 e5                           	mov ebp, esp
0xe409:     83 ec 28                        	sub esp, 0x28
0xe40c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe40f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0xe412 -- 0xe416
0xe412:     65 a1 14 00                                        |e...            |
; function: function_e416 at 0xe416 -- 0xe42c
0xe416:     00 00                           	add byte ptr [eax], al
0xe418:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe41b:     31 c0                           	xor eax, eax
0xe41d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe420:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe423:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe42a:     74 05                           	je 0xe431 <function_e431>
; data inside code section at 0xe42c -- 0xe42d
0xe42c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe42d -- 0xe42e
; data inside code section at 0xe42e -- 0xe431
0xe42e:     ff ff ff                                           |...             |
; function: function_e431 at 0xe431 -- 0xe433
0xe431:     c9                              	leave 
0xe432:     c3                              	ret 
; section: .text._ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_
; function: _ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_ at 0xe433 -- 0xe44e
0xe433:     55                              	push ebp
0xe434:     89 e5                           	mov ebp, esp
0xe436:     83 ec 28                        	sub esp, 0x28
0xe439:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe43c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe43f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe442:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe445:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe44b:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; function: function_e44e at 0xe44e -- 0xe45f
0xe44e:     31 c0                           	xor eax, eax
0xe450:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe453:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe456:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe45d:     74 05                           	je 0xe464 <function_e464>
; data inside code section at 0xe45f -- 0xe460
0xe45f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe460 -- 0xe461
; data inside code section at 0xe461 -- 0xe464
0xe461:     ff ff ff                                           |...             |
; function: function_e464 at 0xe464 -- 0xe468
0xe464:     c9                              	leave 
0xe465:     c2 04 00                        	ret 4
; section: .text._ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_St26random_access_iterator_tag
; function: _ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_St26random_access_iterator_tag at 0xe468 -- 0xe496
0xe468:     55                              	push ebp
0xe469:     89 e5                           	mov ebp, esp
0xe46b:     83 ec 38                        	sub esp, 0x38
0xe46e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe471:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe474:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe477:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe47a:     0f b6 45 10                     	movzx eax, byte ptr [ebp + 0x10]
0xe47e:     88 45 df                        	mov byte ptr [ebp - 0x21], al
0xe481:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe487:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe48a:     31 c0                           	xor eax, eax
0xe48c:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xe48f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe493:     8d 45 e4                        	lea eax, [ebp - 0x1c]
; function: function_e496 at 0xe496 -- 0xe4f0
0xe496:     89 04 24                        	mov dword ptr [esp], eax
0xe499:     e8 94 e5 00 00                  	call 0x1ca32 <unknown_1ca32>
0xe49e:     84 c0                           	test al, al
0xe4a0:     75 4d                           	jne 0xe4ef <function_e496+0x59>
0xe4a2:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xe4a5:     89 04 24                        	mov dword ptr [esp], eax
0xe4a8:     e8 05 1c 01 00                  	call 0x200b2 <unknown_200b2>
0xe4ad:     eb 28                           	jmp 0xe4d7 <function_e496+0x41>
0xe4af:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe4b2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe4b6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe4b9:     89 04 24                        	mov dword ptr [esp], eax
0xe4bc:     e8 7f 1c 01 00                  	call 0x20140 <unknown_20140>
0xe4c1:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xe4c4:     89 04 24                        	mov dword ptr [esp], eax
0xe4c7:     e8 a6 e1 00 00                  	call 0x1c672 <unknown_1c672>
0xe4cc:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xe4cf:     89 04 24                        	mov dword ptr [esp], eax
0xe4d2:     e8 db 1b 01 00                  	call 0x200b2 <unknown_200b2>
0xe4d7:     8d 45 e0                        	lea eax, [ebp - 0x20]
0xe4da:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe4de:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xe4e1:     89 04 24                        	mov dword ptr [esp], eax
0xe4e4:     e8 03 1c 01 00                  	call 0x200ec <unknown_200ec>
0xe4e9:     84 c0                           	test al, al
0xe4eb:     75 c2                           	jne 0xe4af <function_e496+0x19>
0xe4ed:     eb 01                           	jmp 0xe4f0
0xe4ef:     90                              	nop 
; data inside code section at 0xe4f0 -- 0xe4f2
0xe4f0:     8b 45                                              |.E              |
; function: function_e4f2 at 0xe4f2 -- 0xe4fc
0xe4f2:     f4                              	hlt 
0xe4f3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe4fa:     74 05                           	je 0xe501 <function_e501>
; data inside code section at 0xe4fc -- 0xe4fd
0xe4fc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe4fd -- 0xe4fe
; data inside code section at 0xe4fe -- 0xe501
0xe4fe:     ff ff ff                                           |...             |
; function: function_e501 at 0xe501 -- 0xe503
0xe501:     c9                              	leave 
0xe502:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_13auto_any_baseC2Ev
; function: _ZN5boost15foreach_detail_13auto_any_baseC1Ev at 0xe504 -- 0xe527
0xe504:     55                              	push ebp
0xe505:     89 e5                           	mov ebp, esp
0xe507:     83 ec 28                        	sub esp, 0x28
0xe50a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe50d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe510:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe516:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe519:     31 c0                           	xor eax, eax
0xe51b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe51e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe525:     74 05                           	je 0xe52c <function_e52c>
; data inside code section at 0xe527 -- 0xe528
0xe527:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe528 -- 0xe529
; data inside code section at 0xe529 -- 0xe52c
0xe529:     ff ff ff                                           |...             |
; function: function_e52c at 0xe52c -- 0xe52e
0xe52c:     c9                              	leave 
0xe52d:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEEC2ERKS0_
; function: _ZNSt12_Vector_baseIhSaIhEEC1ERKS0_ at 0xe52e -- 0xe569
0xe52e:     55                              	push ebp
0xe52f:     89 e5                           	mov ebp, esp
0xe531:     83 ec 38                        	sub esp, 0x38
0xe534:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe537:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe53a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe53d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe540:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe546:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe549:     31 c0                           	xor eax, eax
0xe54b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe54e:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xe551:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe555:     89 04 24                        	mov dword ptr [esp], eax
0xe558:     e8 95 15 01 00                  	call 0x1faf2 <unknown_1faf2>
0xe55d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe560:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe567:     74 05                           	je 0xe56e <function_e56e>
; data inside code section at 0xe569 -- 0xe56a
0xe569:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe56a -- 0xe56b
; data inside code section at 0xe56b -- 0xe56e
0xe56b:     ff ff ff                                           |...             |
; function: function_e56e at 0xe56e -- 0xe570
0xe56e:     c9                              	leave 
0xe56f:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type
; function: _ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type at 0xe570 -- 0xe5c3
0xe570:     55                              	push ebp
0xe571:     89 e5                           	mov ebp, esp
0xe573:     83 ec 38                        	sub esp, 0x38
0xe576:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe579:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe57c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe57f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe582:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xe585:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xe588:     0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0xe58c:     88 45 db                        	mov byte ptr [ebp - 0x25], al
0xe58f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe595:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe598:     31 c0                           	xor eax, eax
0xe59a:     88 54 24 0c                     	mov byte ptr [esp + 0xc], dl
0xe59e:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xe5a1:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xe5a5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe5a8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe5ac:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe5af:     89 04 24                        	mov dword ptr [esp], eax
0xe5b2:     e8 67 1e 01 00                  	call 0x2041e <unknown_2041e>
0xe5b7:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe5ba:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe5c1:     74 05                           	je 0xe5c8 <function_e5c8>
; data inside code section at 0xe5c3 -- 0xe5c4
0xe5c3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe5c4 -- 0xe5c5
; data inside code section at 0xe5c5 -- 0xe5c8
0xe5c5:     ff ff ff                                           |...             |
; function: function_e5c8 at 0xe5c8 -- 0xe5ca
0xe5c8:     c9                              	leave 
0xe5c9:     c3                              	ret 
; section: .text._ZN9__gnu_cxxeqIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
; function: _ZN9__gnu_cxxeqIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ at 0xe5ca -- 0xe613
0xe5ca:     55                              	push ebp
0xe5cb:     89 e5                           	mov ebp, esp
0xe5cd:     53                              	push ebx
0xe5ce:     83 ec 34                        	sub esp, 0x34
0xe5d1:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe5d4:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe5d7:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe5da:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe5dd:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe5e3:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe5e6:     31 c0                           	xor eax, eax
0xe5e8:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe5eb:     89 04 24                        	mov dword ptr [esp], eax
0xe5ee:     e8 dd e3 00 00                  	call 0x1c9d0 <unknown_1c9d0>
0xe5f3:     8b 18                           	mov ebx, dword ptr [eax]
0xe5f5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe5f8:     89 04 24                        	mov dword ptr [esp], eax
0xe5fb:     e8 d0 e3 00 00                  	call 0x1c9d0 <unknown_1c9d0>
0xe600:     8b 00                           	mov eax, dword ptr [eax]
0xe602:     39 c3                           	cmp ebx, eax
0xe604:     0f 94 c0                        	sete al
0xe607:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe60a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe611:     74 05                           	je 0xe618 <function_e618>
; data inside code section at 0xe613 -- 0xe614
0xe613:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe614 -- 0xe615
; data inside code section at 0xe615 -- 0xe618
0xe615:     ff ff ff                                           |...             |
; function: function_e618 at 0xe618 -- 0xe61e
0xe618:     83 c4 34                        	add esp, 0x34
0xe61b:     5b                              	pop ebx
0xe61c:     5d                              	pop ebp
0xe61d:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv at 0xe61e -- 0xe644
0xe61e:     55                              	push ebp
0xe61f:     89 e5                           	mov ebp, esp
0xe621:     83 ec 28                        	sub esp, 0x28
0xe624:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe627:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe62a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe630:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe633:     31 c0                           	xor eax, eax
0xe635:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe638:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe63b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe642:     74 05                           	je 0xe649 <function_e649>
; data inside code section at 0xe644 -- 0xe645
0xe644:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe645 -- 0xe646
; data inside code section at 0xe646 -- 0xe649
0xe646:     ff ff ff                                           |...             |
; function: function_e649 at 0xe649 -- 0xe64b
0xe649:     c9                              	leave 
0xe64a:     c3                              	ret 
; section: .text._ZN7CVarIntIjEC2ERj
; function: _ZN7CVarIntIjEC1ERj at 0xe64c -- 0xe67d
0xe64c:     55                              	push ebp
0xe64d:     89 e5                           	mov ebp, esp
0xe64f:     83 ec 28                        	sub esp, 0x28
0xe652:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe655:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe658:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe65b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe65e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe664:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe667:     31 c0                           	xor eax, eax
0xe669:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe66c:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xe66f:     89 10                           	mov dword ptr [eax], edx
0xe671:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe674:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe67b:     74 05                           	je 0xe682 <function_e682>
; data inside code section at 0xe67d -- 0xe67e
0xe67d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe67e -- 0xe67f
; data inside code section at 0xe67f -- 0xe682
0xe67f:     ff ff ff                                           |...             |
; function: function_e682 at 0xe682 -- 0xe684
0xe682:     c9                              	leave 
0xe683:     c3                              	ret 
; section: .text._Z15GetSizeOfVarIntIjEjT_
; function: _Z15GetSizeOfVarIntIjEjT_ at 0xe684 -- 0xe6ca
0xe684:     55                              	push ebp
0xe685:     89 e5                           	mov ebp, esp
0xe687:     83 ec 28                        	sub esp, 0x28
0xe68a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe68d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe690:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe696:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe699:     31 c0                           	xor eax, eax
0xe69b:     c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0xe6a2:     83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0xe6a6:     83 7d e4 7f                     	cmp dword ptr [ebp - 0x1c], 0x7f
0xe6aa:     76 0e                           	jbe 0xe6ba <_Z15GetSizeOfVarIntIjEjT_+0x36>
0xe6ac:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe6af:     c1 e8 07                        	shr eax, 7
0xe6b2:     83 e8 01                        	sub eax, 1
0xe6b5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe6b8:     eb e8                           	jmp 0xe6a2 <_Z15GetSizeOfVarIntIjEjT_+0x1e>
0xe6ba:     90                              	nop 
0xe6bb:     8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0xe6be:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe6c1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe6c8:     74 05                           	je 0xe6cf <function_e6cf>
; data inside code section at 0xe6ca -- 0xe6cb
0xe6ca:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe6cb -- 0xe6cc
; data inside code section at 0xe6cc -- 0xe6cf
0xe6cc:     ff ff ff                                           |...             |
; function: function_e6cf at 0xe6cf -- 0xe6d1
0xe6cf:     c9                              	leave 
0xe6d0:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD2Ev
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD1Ev at 0xe6d2 -- 0xe700
0xe6d2:     55                              	push ebp
0xe6d3:     89 e5                           	mov ebp, esp
0xe6d5:     83 ec 38                        	sub esp, 0x38
0xe6d8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe6db:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe6de:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe6e4:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe6e7:     31 c0                           	xor eax, eax
0xe6e9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe6ec:     89 04 24                        	mov dword ptr [esp], eax
0xe6ef:     e8 2c 9a 00 00                  	call 0x18120 <function_18120>
0xe6f4:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe6f7:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe6fe:     74 05                           	je 0xe705 <function_e705>
; data inside code section at 0xe700 -- 0xe701
0xe700:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe701 -- 0xe702
; data inside code section at 0xe702 -- 0xe705
0xe702:     ff ff ff                                           |...             |
; function: function_e705 at 0xe705 -- 0xe707
0xe705:     c9                              	leave 
0xe706:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EEC2Ev
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1Ev at 0xe708 -- 0xe736
0xe708:     55                              	push ebp
0xe709:     89 e5                           	mov ebp, esp
0xe70b:     83 ec 38                        	sub esp, 0x38
0xe70e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe711:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe714:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe71a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe71d:     31 c0                           	xor eax, eax
0xe71f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe722:     89 04 24                        	mov dword ptr [esp], eax
0xe725:     e8 6e 1f 01 00                  	call 0x20698 <unknown_20698>
0xe72a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe72d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe734:     74 05                           	je 0xe73b <function_e73b>
; data inside code section at 0xe736 -- 0xe737
0xe736:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe737 -- 0xe738
; data inside code section at 0xe738 -- 0xe73b
0xe738:     ff ff ff                                           |...             |
; function: function_e73b at 0xe73b -- 0xe73d
0xe73b:     c9                              	leave 
0xe73c:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EED2Ev
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EED1Ev at 0xe73e -- 0xe7a5
0xe73e:     55                              	push ebp
0xe73f:     89 e5                           	mov ebp, esp
0xe741:     53                              	push ebx
0xe742:     83 ec 34                        	sub esp, 0x34
0xe745:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe748:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe74b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe751:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe754:     31 c0                           	xor eax, eax
0xe756:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe759:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0xe75c:     89 c2                           	mov edx, eax
0xe75e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe761:     8b 00                           	mov eax, dword ptr [eax]
0xe763:     89 d1                           	mov ecx, edx
0xe765:     29 c1                           	sub ecx, eax
0xe767:     89 c8                           	mov eax, ecx
0xe769:     c1 f8 02                        	sar eax, 2
0xe76c:     69 c0 cd cc cc cc               	imul eax, eax, 0xcccccccd
0xe772:     89 c2                           	mov edx, eax
0xe774:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe777:     8b 00                           	mov eax, dword ptr [eax]
0xe779:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xe77d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe781:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe784:     89 04 24                        	mov dword ptr [esp], eax
0xe787:     e8 94 1f 01 00                  	call 0x20720 <unknown_20720>
0xe78c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe78f:     89 04 24                        	mov dword ptr [esp], eax
0xe792:     e8 79 e6 00 00                  	call 0x1ce10 <unknown_1ce10>
0xe797:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe79a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe7a1:     74 1e                           	je 0xe7c1 <function_e7c1>
0xe7a3:     eb 17                           	jmp 0xe7bc <function_e7bc>
; data inside code section at 0xe7a5 -- 0xe7a6
0xe7a5:     89                                                 |.               |
; function: function_e7a6 at 0xe7a6 -- 0xe7a7
0xe7a6:     c3                              	ret 
; data inside code section at 0xe7a7 -- 0xe7b8
0xe7a7:     8b 45 e4 89 04 24 e8 5e  e6 00 00 89 d8 89 04 24   |.E...$.^.......$|
0xe7b7:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xe7b8 -- 0xe7b9
; data inside code section at 0xe7b9 -- 0xe7bc
0xe7b9:     ff ff ff                                           |...             |
; function: function_e7bc at 0xe7bc -- 0xe7bd
; dynamically linked function: __stack_chk_fail at 0xe7bd -- 0xe7be
; data inside code section at 0xe7be -- 0xe7c1
0xe7be:     ff ff ff                                           |...             |
; function: function_e7c1 at 0xe7c1 -- 0xe7c7
0xe7c1:     83 c4 34                        	add esp, 0x34
0xe7c4:     5b                              	pop ebx
0xe7c5:     5d                              	pop ebp
0xe7c6:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv at 0xe7c8 -- 0xe7ee
0xe7c8:     55                              	push ebp
0xe7c9:     89 e5                           	mov ebp, esp
0xe7cb:     83 ec 28                        	sub esp, 0x28
0xe7ce:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe7d1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe7d4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe7da:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe7dd:     31 c0                           	xor eax, eax
0xe7df:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe7e2:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe7e5:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe7ec:     74 05                           	je 0xe7f3 <function_e7f3>
; data inside code section at 0xe7ee -- 0xe7ef
0xe7ee:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe7ef -- 0xe7f0
; data inside code section at 0xe7f0 -- 0xe7f3
0xe7f0:     ff ff ff                                           |...             |
; function: function_e7f3 at 0xe7f3 -- 0xe7f5
0xe7f3:     c9                              	leave 
0xe7f4:     c3                              	ret 
; section: .text._ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E
; function: _ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E at 0xe7f5 -- 0xe836
0xe7f5:     55                              	push ebp
0xe7f6:     89 e5                           	mov ebp, esp
0xe7f8:     83 ec 38                        	sub esp, 0x38
0xe7fb:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe7fe:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe801:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe804:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe807:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xe80a:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xe80d:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe813:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe816:     31 c0                           	xor eax, eax
0xe818:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe81b:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe81f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe822:     89 04 24                        	mov dword ptr [esp], eax
0xe825:     e8 02 20 01 00                  	call 0x2082c <unknown_2082c>
0xe82a:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe82d:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe834:     74 05                           	je 0xe83b <function_e83b>
; data inside code section at 0xe836 -- 0xe837
0xe836:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe837 -- 0xe838
; data inside code section at 0xe838 -- 0xe83b
0xe838:     ff ff ff                                           |...             |
; function: function_e83b at 0xe83b -- 0xe83d
0xe83b:     c9                              	leave 
0xe83c:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE15_M_erase_at_endEPS0_
; function: _ZNSt6vectorI6CTxOutSaIS0_EE15_M_erase_at_endEPS0_ at 0xe83e -- 0xe894
0xe83e:     55                              	push ebp
0xe83f:     89 e5                           	mov ebp, esp
0xe841:     83 ec 38                        	sub esp, 0x38
0xe844:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe847:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe84a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe84d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe850:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe856:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe859:     31 c0                           	xor eax, eax
0xe85b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe85e:     89 04 24                        	mov dword ptr [esp], eax
0xe861:     e8 a0 e7 00 00                  	call 0x1d006 <unknown_1d006>
0xe866:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xe869:     8b 52 04                        	mov edx, dword ptr [edx + 4]
0xe86c:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xe870:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xe874:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe877:     89 04 24                        	mov dword ptr [esp], eax
0xe87a:     e8 b4 e7 00 00                  	call 0x1d033 <unknown_1d033>
0xe87f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe882:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xe885:     89 50 04                        	mov dword ptr [eax + 4], edx
0xe888:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe88b:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe892:     74 05                           	je 0xe899 <function_e899>
; data inside code section at 0xe894 -- 0xe895
0xe894:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe895 -- 0xe896
; data inside code section at 0xe896 -- 0xe899
0xe896:     ff ff ff                                           |...             |
; function: function_e899 at 0xe899 -- 0xe89b
0xe899:     c9                              	leave 
0xe89a:     c3                              	ret 
; section: .text._ZNKSt6vectorI6CTxOutSaIS0_EE3endEv
; function: _ZNKSt6vectorI6CTxOutSaIS0_EE3endEv at 0xe89c -- 0xe8b4
0xe89c:     55                              	push ebp
0xe89d:     89 e5                           	mov ebp, esp
0xe89f:     83 ec 38                        	sub esp, 0x38
0xe8a2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe8a5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe8a8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe8ab:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe8ae:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; data inside code section at 0xe8b4 -- 0xe8b6
0xe8b4:     89 45                                              |.E              |
; function: function_e8b6 at 0xe8b6 -- 0xe8e3
0xe8b6:     f4                              	hlt 
0xe8b7:     31 c0                           	xor eax, eax
0xe8b9:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe8bc:     8b 40 04                        	mov eax, dword ptr [eax + 4]
0xe8bf:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xe8c2:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xe8c5:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe8c9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe8cc:     89 04 24                        	mov dword ptr [esp], eax
0xe8cf:     e8 42 20 01 00                  	call 0x20916 <unknown_20916>
0xe8d4:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe8d7:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe8da:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe8e1:     74 05                           	je 0xe8e8 <function_e8e8>
; data inside code section at 0xe8e3 -- 0xe8e4
0xe8e3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe8e4 -- 0xe8e5
; data inside code section at 0xe8e5 -- 0xe8e8
0xe8e5:     ff ff ff                                           |...             |
; function: function_e8e8 at 0xe8e8 -- 0xe8ec
0xe8e8:     c9                              	leave 
0xe8e9:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv
; function: _ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv at 0xe8ec -- 0xe918
0xe8ec:     55                              	push ebp
0xe8ed:     89 e5                           	mov ebp, esp
0xe8ef:     83 ec 38                        	sub esp, 0x38
0xe8f2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe8f5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe8f8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe8fb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe8fe:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe904:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe907:     31 c0                           	xor eax, eax
0xe909:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe90c:     8b 00                           	mov eax, dword ptr [eax]
0xe90e:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xe911:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xe914:     89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0xe918 -- 0xe91a
0xe918:     8b 45                                              |.E              |
; function: function_e91a at 0xe91a -- 0xe932
0xe91a:     e4 89                           	in al, 0x89
0xe91c:     04 24                           	add al, 0x24
0xe91e:     e8 43 20 01 00                  	call 0x20966 <unknown_20966>
0xe923:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe926:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe929:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe930:     74 05                           	je 0xe937 <function_e937>
; data inside code section at 0xe932 -- 0xe933
0xe932:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe933 -- 0xe934
; data inside code section at 0xe934 -- 0xe937
0xe934:     ff ff ff                                           |...             |
; function: function_e937 at 0xe937 -- 0xe93b
0xe937:     c9                              	leave 
0xe938:     c2 04 00                        	ret 4
; section: .text._ZN9__gnu_cxxeqIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
; function: _ZN9__gnu_cxxeqIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ at 0xe93b -- 0xe984
0xe93b:     55                              	push ebp
0xe93c:     89 e5                           	mov ebp, esp
0xe93e:     53                              	push ebx
0xe93f:     83 ec 34                        	sub esp, 0x34
0xe942:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe945:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe948:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe94b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe94e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe954:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe957:     31 c0                           	xor eax, eax
0xe959:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe95c:     89 04 24                        	mov dword ptr [esp], eax
0xe95f:     e8 8b 20 01 00                  	call 0x209ef <unknown_209ef>
0xe964:     8b 18                           	mov ebx, dword ptr [eax]
0xe966:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe969:     89 04 24                        	mov dword ptr [esp], eax
0xe96c:     e8 7e 20 01 00                  	call 0x209ef <unknown_209ef>
0xe971:     8b 00                           	mov eax, dword ptr [eax]
0xe973:     39 c3                           	cmp ebx, eax
0xe975:     0f 94 c0                        	sete al
0xe978:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xe97b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xe982:     74 05                           	je 0xe989 <function_e989>
; data inside code section at 0xe984 -- 0xe985
0xe984:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe985 -- 0xe986
; data inside code section at 0xe986 -- 0xe989
0xe986:     ff ff ff                                           |...             |
; function: function_e989 at 0xe989 -- 0xe98f
0xe989:     83 c4 34                        	add esp, 0x34
0xe98c:     5b                              	pop ebx
0xe98d:     5d                              	pop ebp
0xe98e:     c3                              	ret 
; section: .text._ZN7CVarIntIyEC2ERy
; function: _ZN7CVarIntIyEC1ERy at 0xe990 -- 0xe9a2
0xe990:     55                              	push ebp
0xe991:     89 e5                           	mov ebp, esp
0xe993:     83 ec 28                        	sub esp, 0x28
0xe996:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe999:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe99c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe99f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; function: function_e9a2 at 0xe9a2 -- 0xe9c1
0xe9a2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe9a8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe9ab:     31 c0                           	xor eax, eax
0xe9ad:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe9b0:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xe9b3:     89 10                           	mov dword ptr [eax], edx
0xe9b5:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xe9b8:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xe9bf:     74 05                           	je 0xe9c6 <function_e9c6>
; data inside code section at 0xe9c1 -- 0xe9c2
0xe9c1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe9c2 -- 0xe9c3
; data inside code section at 0xe9c3 -- 0xe9c6
0xe9c3:     ff ff ff                                           |...             |
; function: function_e9c6 at 0xe9c6 -- 0xe9c8
0xe9c6:     c9                              	leave 
0xe9c7:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI7CVarIntIyEEjRKT_li
; function: _Z16GetSerializeSizeI7CVarIntIyEEjRKT_li at 0xe9c8 -- 0xea10
0xe9c8:     55                              	push ebp
0xe9c9:     89 e5                           	mov ebp, esp
0xe9cb:     83 ec 38                        	sub esp, 0x38
0xe9ce:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xe9d1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xe9d4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xe9d7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xe9da:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xe9dd:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xe9e0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xe9e6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xe9e9:     31 c0                           	xor eax, eax
0xe9eb:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xe9ee:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xe9f2:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xe9f5:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xe9f9:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xe9fc:     89 04 24                        	mov dword ptr [esp], eax
0xe9ff:     e8 a6 20 01 00                  	call 0x20aaa <unknown_20aaa>
0xea04:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xea07:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xea0e:     74 05                           	je 0xea15 <function_ea15>
; data inside code section at 0xea10 -- 0xea11
0xea10:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xea11 -- 0xea12
; data inside code section at 0xea12 -- 0xea15
0xea12:     ff ff ff                                           |...             |
; function: function_ea15 at 0xea15 -- 0xea17
0xea15:     c9                              	leave 
0xea16:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI17CScriptCompressorEjRKT_li
; function: _Z16GetSerializeSizeI17CScriptCompressorEjRKT_li at 0xea17 -- 0xea5f
0xea17:     55                              	push ebp
0xea18:     89 e5                           	mov ebp, esp
0xea1a:     83 ec 38                        	sub esp, 0x38
0xea1d:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xea20:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xea23:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xea26:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xea29:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xea2c:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xea2f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xea35:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xea38:     31 c0                           	xor eax, eax
0xea3a:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xea3d:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xea41:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xea44:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xea48:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xea4b:     89 04 24                        	mov dword ptr [esp], eax
0xea4e:     e8 4c 5b 00 00                  	call 0x1459f <function_1459f>
0xea53:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xea56:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xea5d:     74 05                           	je 0xea64 <function_ea64>
; data inside code section at 0xea5f -- 0xea60
0xea5f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xea60 -- 0xea61
; data inside code section at 0xea61 -- 0xea64
0xea61:     ff ff ff                                           |...             |
; function: function_ea64 at 0xea64 -- 0xea66
0xea64:     c9                              	leave 
0xea65:     c3                              	ret 
; section: .text._ZN7CVarIntIiEC2ERi
; function: _ZN7CVarIntIiEC1ERi at 0xea66 -- 0xea97
0xea66:     55                              	push ebp
0xea67:     89 e5                           	mov ebp, esp
0xea69:     83 ec 28                        	sub esp, 0x28
0xea6c:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xea6f:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xea72:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xea75:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xea78:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xea7e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xea81:     31 c0                           	xor eax, eax
0xea83:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xea86:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xea89:     89 10                           	mov dword ptr [eax], edx
0xea8b:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xea8e:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xea95:     74 05                           	je 0xea9c <function_ea9c>
; data inside code section at 0xea97 -- 0xea98
0xea97:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xea98 -- 0xea99
; data inside code section at 0xea99 -- 0xea9c
0xea99:     ff ff ff                                           |...             |
; function: function_ea9c at 0xea9c -- 0xea9e
0xea9c:     c9                              	leave 
0xea9d:     c3                              	ret 
; section: .text._ZNK7CVarIntIiE16GetSerializeSizeEii
; function: _ZNK7CVarIntIiE16GetSerializeSizeEii at 0xea9e -- 0xeadc
0xea9e:     55                              	push ebp
0xea9f:     89 e5                           	mov ebp, esp
0xeaa1:     83 ec 38                        	sub esp, 0x38
0xeaa4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xeaa7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xeaaa:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xeaad:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xeab0:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xeab3:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xeab6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xeabc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xeabf:     31 c0                           	xor eax, eax
0xeac1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeac4:     8b 00                           	mov eax, dword ptr [eax]
0xeac6:     8b 00                           	mov eax, dword ptr [eax]
0xeac8:     89 04 24                        	mov dword ptr [esp], eax
0xeacb:     e8 fc 20 01 00                  	call 0x20bcc <unknown_20bcc>
0xead0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xead3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xeada:     74 05                           	je 0xeae1 <function_eae1>
; data inside code section at 0xeadc -- 0xeadd
0xeadc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xeadd -- 0xeade
; data inside code section at 0xeade -- 0xeae1
0xeade:     ff ff ff                                           |...             |
; function: function_eae1 at 0xeae1 -- 0xeae3
0xeae1:     c9                              	leave 
0xeae2:     c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EEC2EjRKS1_
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1EjRKS1_ at 0xeae4 -- 0xeb36
0xeae4:     55                              	push ebp
0xeae5:     89 e5                           	mov ebp, esp
0xeae7:     53                              	push ebx
0xeae8:     83 ec 34                        	sub esp, 0x34
0xeaeb:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xeaee:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xeaf1:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xeaf4:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xeaf7:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xeafa:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xeafd:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xeb03:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xeb06:     31 c0                           	xor eax, eax
0xeb08:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeb0b:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xeb0e:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xeb12:     89 04 24                        	mov dword ptr [esp], eax
0xeb15:     e8 46 21 01 00                  	call 0x20c60 <unknown_20c60>
0xeb1a:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xeb1d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xeb21:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeb24:     89 04 24                        	mov dword ptr [esp], eax
0xeb27:     e8 94 21 01 00                  	call 0x20cc0 <unknown_20cc0>
0xeb2c:     89 c2                           	mov edx, eax
0xeb2e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeb31:     89 10                           	mov dword ptr [eax], edx
0xeb33:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_eb36 at 0xeb36 -- 0xeb67
0xeb36:     8b 10                           	mov edx, dword ptr [eax]
0xeb38:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeb3b:     89 50 04                        	mov dword ptr [eax + 4], edx
0xeb3e:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeb41:     8b 08                           	mov ecx, dword ptr [eax]
0xeb43:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xeb46:     89 d0                           	mov eax, edx
0xeb48:     c1 e0 02                        	shl eax, 2
0xeb4b:     01 d0                           	add eax, edx
0xeb4d:     c1 e0 02                        	shl eax, 2
0xeb50:     8d 14 01                        	lea edx, [ecx + eax]
0xeb53:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeb56:     89 50 08                        	mov dword ptr [eax + 8], edx
0xeb59:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xeb5c:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xeb63:     74 1e                           	je 0xeb83 <function_eb83>
0xeb65:     eb 17                           	jmp 0xeb7e <function_eb7e>
; data inside code section at 0xeb67 -- 0xeb68
0xeb67:     89                                                 |.               |
; function: function_eb68 at 0xeb68 -- 0xeb69
0xeb68:     c3                              	ret 
; data inside code section at 0xeb69 -- 0xeb7a
0xeb69:     8b 45 e4 89 04 24 e8 42  e6 00 00 89 d8 89 04 24   |.E...$.B.......$|
0xeb79:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xeb7a -- 0xeb7b
; data inside code section at 0xeb7b -- 0xeb7e
0xeb7b:     ff ff ff                                           |...             |
; function: function_eb7e at 0xeb7e -- 0xeb7f
; dynamically linked function: __stack_chk_fail at 0xeb7f -- 0xeb80
; data inside code section at 0xeb80 -- 0xeb83
0xeb80:     ff ff ff                                           |...             |
; function: function_eb83 at 0xeb83 -- 0xeb89
0xeb83:     83 c4 34                        	add esp, 0x34
0xeb86:     5b                              	pop ebx
0xeb87:     5d                              	pop ebp
0xeb88:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorI6CTxOutEC2Ev
; function: _ZN9__gnu_cxx13new_allocatorI6CTxOutEC1Ev at 0xeb8a -- 0xebad
0xeb8a:     55                              	push ebp
0xeb8b:     89 e5                           	mov ebp, esp
0xeb8d:     83 ec 28                        	sub esp, 0x28
0xeb90:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xeb93:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xeb96:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xeb9c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xeb9f:     31 c0                           	xor eax, eax
0xeba1:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xeba4:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xebab:     74 05                           	je 0xebb2 <function_ebb2>
; data inside code section at 0xebad -- 0xebae
0xebad:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xebae -- 0xebaf
; data inside code section at 0xebaf -- 0xebb2
0xebaf:     ff ff ff                                           |...             |
; function: function_ebb2 at 0xebb2 -- 0xebb4
0xebb2:     c9                              	leave 
0xebb3:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorI6CTxOutED2Ev
; function: _ZN9__gnu_cxx13new_allocatorI6CTxOutED1Ev at 0xebb4 -- 0xebd7
0xebb4:     55                              	push ebp
0xebb5:     89 e5                           	mov ebp, esp
0xebb7:     83 ec 28                        	sub esp, 0x28
0xebba:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xebbd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xebc0:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xebc6:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xebc9:     31 c0                           	xor eax, eax
0xebcb:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xebce:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xebd5:     74 05                           	je 0xebdc <function_ebdc>
; data inside code section at 0xebd7 -- 0xebd8
0xebd7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xebd8 -- 0xebd9
; data inside code section at 0xebd9 -- 0xebda
0xebd9:     ff                                                 |.               |
; function: function_ebda at 0xebda -- 0xebdb
; data inside code section at 0xebdb -- 0xebdc
0xebdb:     ff                                                 |.               |
; function: function_ebdc at 0xebdc -- 0xebde
0xebdc:     c9                              	leave 
0xebdd:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE18_M_fill_initializeEjRKS0_
; function: _ZNSt6vectorI6CTxOutSaIS0_EE18_M_fill_initializeEjRKS0_ at 0xebde -- 0xec18
0xebde:     55                              	push ebp
0xebdf:     89 e5                           	mov ebp, esp
0xebe1:     83 ec 38                        	sub esp, 0x38
0xebe4:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xebe7:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xebea:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xebed:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xebf0:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xebf3:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xebf6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xebfc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xebff:     31 c0                           	xor eax, eax
0xec01:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xec04:     89 04 24                        	mov dword ptr [esp], eax
0xec07:     e8 9a e7 00 00                  	call 0x1d3a6 <unknown_1d3a6>
0xec0c:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xec0f:     8b 12                           	mov edx, dword ptr [edx]
0xec11:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0xec15:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
; function: function_ec18 at 0xec18 -- 0xec43
0xec18:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xec1c:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xec1f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xec23:     89 14 24                        	mov dword ptr [esp], edx
0xec26:     e8 e6 21 01 00                  	call 0x20e11 <unknown_20e11>
0xec2b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xec2e:     8b 50 08                        	mov edx, dword ptr [eax + 8]
0xec31:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xec34:     89 50 04                        	mov dword ptr [eax + 4], edx
0xec37:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xec3a:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xec41:     74 05                           	je 0xec48 <function_ec48>
; data inside code section at 0xec43 -- 0xec44
0xec43:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xec44 -- 0xec45
; data inside code section at 0xec45 -- 0xec48
0xec45:     ff ff ff                                           |...             |
; function: function_ec48 at 0xec48 -- 0xec4a
0xec48:     c9                              	leave 
0xec49:     c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE3endEv
; function: _ZNSt6vectorI6CTxOutSaIS0_EE3endEv at 0xec4a -- 0xec62
0xec4a:     55                              	push ebp
0xec4b:     89 e5                           	mov ebp, esp
0xec4d:     83 ec 38                        	sub esp, 0x38
0xec50:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xec53:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xec56:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xec59:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xec5c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; function: function_ec62 at 0xec62 -- 0xec82
0xec62:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xec65:     31 c0                           	xor eax, eax
0xec67:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xec6a:     83 c0 04                        	add eax, 4
0xec6d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xec71:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xec74:     89 04 24                        	mov dword ptr [esp], eax
0xec77:     e8 56 22 01 00                  	call 0x20ed2 <unknown_20ed2>
0xec7c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xec7f:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0xec82 -- 0xec86
0xec82:     65 33 15 14                                        |e3..            |
; function: function_ec86 at 0xec86 -- 0xec8c
0xec86:     00 00                           	add byte ptr [eax], al
0xec88:     00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
; dynamically linked function: __stack_chk_fail at 0xec8c -- 0xec8d
; data inside code section at 0xec8d -- 0xec8f
0xec8d:     ff ff                                              |..              |
; function: function_ec8f at 0xec8f -- 0xec94
0xec8f:     ff c9                           	dec ecx
0xec91:     c2 04 00                        	ret 4
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEmiERKi
; function: _ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEmiERKi at 0xec94 -- 0xecc5
0xec94:     55                              	push ebp
0xec95:     89 e5                           	mov ebp, esp
0xec97:     83 ec 38                        	sub esp, 0x38
0xec9a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xec9d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xeca0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xeca3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xeca6:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xeca9:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xecac:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xecb2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xecb5:     31 c0                           	xor eax, eax
0xecb7:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xecba:     8b 08                           	mov ecx, dword ptr [eax]
0xecbc:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xecbf:     8b 00                           	mov eax, dword ptr [eax]
0xecc1:     89 c2                           	mov edx, eax
0xecc3:     89 d0                           	mov eax, edx
; data inside code section at 0xecc5 -- 0xecc6
0xecc5:     c1                                                 |.               |
; function: function_ecc6 at 0xecc6 -- 0xecf5
0xecc6:     e0 02                           	loopne 0xecca <function_ecc6+0x4>
0xecc8:     01 d0                           	add eax, edx
0xecca:     c1 e0 02                        	shl eax, 2
0xeccd:     f7 d8                           	neg eax
0xeccf:     01 c8                           	add eax, ecx
0xecd1:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xecd4:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xecd7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xecdb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xecde:     89 04 24                        	mov dword ptr [esp], eax
0xece1:     e8 36 22 01 00                  	call 0x20f1c <unknown_20f1c>
0xece6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xece9:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xecec:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xecf3:     74 05                           	je 0xecfa <function_ecfa>
; data inside code section at 0xecf5 -- 0xecf6
0xecf5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xecf6 -- 0xecf7
; data inside code section at 0xecf7 -- 0xecfa
0xecf7:     ff ff ff                                           |...             |
; function: function_ecfa at 0xecfa -- 0xecfe
0xecfa:     c9                              	leave 
0xecfb:     c2 04 00                        	ret 4
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEdeEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEdeEv at 0xecfe -- 0xed04
0xecfe:     55                              	push ebp
0xecff:     89 e5                           	mov ebp, esp
0xed01:     83 ec 28                        	sub esp, 0x28
; function: function_ed04 at 0xed04 -- 0xed26
0xed04:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xed07:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xed0a:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xed10:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xed13:     31 c0                           	xor eax, eax
0xed15:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xed18:     8b 00                           	mov eax, dword ptr [eax]
0xed1a:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xed1d:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xed24:     74 05                           	je 0xed2b <function_ed2b>
; data inside code section at 0xed26 -- 0xed27
0xed26:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xed27 -- 0xed28
; data inside code section at 0xed28 -- 0xed2b
0xed28:     ff ff ff                                           |...             |
; function: function_ed2b at 0xed2b -- 0xed2d
0xed2b:     c9                              	leave 
0xed2c:     c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorI6CTxOutE7destroyEPS1_
; function: _ZN9__gnu_cxx13new_allocatorI6CTxOutE7destroyEPS1_ at 0xed2e -- 0xed4e
0xed2e:     55                              	push ebp
0xed2f:     89 e5                           	mov ebp, esp
0xed31:     83 ec 38                        	sub esp, 0x38
0xed34:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xed37:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xed3a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xed3d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xed40:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xed46:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xed49:     31 c0                           	xor eax, eax
0xed4b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; function: function_ed4e at 0xed4e -- 0xed62
0xed4e:     89 04 24                        	mov dword ptr [esp], eax
0xed51:     e8 d2 5e 00 00                  	call 0x14c28 <function_14c28>
0xed56:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xed59:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xed60:     74 05                           	je 0xed67 <function_ed67>
; data inside code section at 0xed62 -- 0xed63
0xed62:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xed63 -- 0xed64
; data inside code section at 0xed64 -- 0xed67
0xed64:     ff ff ff                                           |...             |
; function: function_ed67 at 0xed67 -- 0xed69
0xed67:     c9                              	leave 
0xed68:     c3                              	ret 
; section: .text._ZSt4swapIP6CTxOutEvRT_S3_
; function: _ZSt4swapIP6CTxOutEvRT_S3_ at 0xed69 -- 0xeda0
0xed69:     55                              	push ebp
0xed6a:     89 e5                           	mov ebp, esp
0xed6c:     83 ec 28                        	sub esp, 0x28
0xed6f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xed72:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xed75:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xed78:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xed7b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xed81:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xed84:     31 c0                           	xor eax, eax
0xed86:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xed89:     8b 00                           	mov eax, dword ptr [eax]
0xed8b:     89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0xed8e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xed91:     8b 10                           	mov edx, dword ptr [eax]
0xed93:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xed96:     89 10                           	mov dword ptr [eax], edx
0xed98:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xed9b:     8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0xed9e:     89 10                           	mov dword ptr [eax], edx
; function: function_eda0 at 0xeda0 -- 0xedac
0xeda0:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xeda3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xedaa:     74 05                           	je 0xedb1 <function_edb1>
; data inside code section at 0xedac -- 0xedad
0xedac:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xedad -- 0xedae
; data inside code section at 0xedae -- 0xedb1
0xedae:     ff ff ff                                           |...             |
; function: function_edb1 at 0xedb1 -- 0xedb3
0xedb1:     c9                              	leave 
0xedb2:     c3                              	ret 
; section: .text._ZNSt12__alloc_swapISaI6CTxOutELb1EE8_S_do_itERS1_S3_
; function: _ZNSt12__alloc_swapISaI6CTxOutELb1EE8_S_do_itERS1_S3_ at 0xedb3 -- 0xeddc
0xedb3:     55                              	push ebp
0xedb4:     89 e5                           	mov ebp, esp
0xedb6:     83 ec 28                        	sub esp, 0x28
0xedb9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xedbc:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xedbf:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xedc2:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xedc5:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xedcb:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xedce:     31 c0                           	xor eax, eax
0xedd0:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xedd3:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xedda:     74 05                           	je 0xede1 <function_ede1>
; data inside code section at 0xeddc -- 0xeddd
0xeddc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xeddd -- 0xedde
; data inside code section at 0xedde -- 0xede1
0xedde:     ff ff ff                                           |...             |
; function: function_ede1 at 0xede1 -- 0xede3
0xede1:     c9                              	leave 
0xede2:     c3                              	ret 
; section: .text._ZN5boost9addressofIKSt6vectorI6CTxOutSaIS2_EEEEPT_RS6_
; function: _ZN5boost9addressofIKSt6vectorI6CTxOutSaIS2_EEEEPT_RS6_ at 0xede3 -- 0xee33
0xede3:     55                              	push ebp
0xede4:     89 e5                           	mov ebp, esp
0xede6:     83 ec 38                        	sub esp, 0x38
0xede9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xedec:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xedef:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xedf5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xedf8:     31 c0                           	xor eax, eax
0xedfa:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xedfd:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xee01:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xee04:     89 04 24                        	mov dword ptr [esp], eax
0xee07:     e8 99 22 01 00                  	call 0x210a5 <unknown_210a5>
0xee0c:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xee0f:     89 04 24                        	mov dword ptr [esp], eax
0xee12:     e8 c6 22 01 00                  	call 0x210dd <unknown_210dd>
0xee17:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xee1f:     89 04 24                        	mov dword ptr [esp], eax
0xee22:     e8 e5 22 01 00                  	call 0x2110c <unknown_2110c>
0xee27:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xee2a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xee31:     74 05                           	je 0xee38 <function_ee38>
; data inside code section at 0xee33 -- 0xee34
0xee33:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xee34 -- 0xee35
; data inside code section at 0xee35 -- 0xee38
0xee35:     ff ff ff                                           |...             |
; function: function_ee38 at 0xee38 -- 0xee3a
0xee38:     c9                              	leave 
0xee39:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_8auto_anyIPKSt6vectorI6CTxOutSaIS3_EEEC2ERKS7_
; function: _ZN5boost15foreach_detail_8auto_anyIPKSt6vectorI6CTxOutSaIS3_EEEC1ERKS7_ at 0xee3a -- 0xee5a
0xee3a:     55                              	push ebp
0xee3b:     89 e5                           	mov ebp, esp
0xee3d:     83 ec 38                        	sub esp, 0x38
0xee40:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xee43:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xee46:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xee49:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xee4c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xee52:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xee55:     31 c0                           	xor eax, eax
0xee57:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_ee5a at 0xee5a -- 0xee78
0xee5a:     89 04 24                        	mov dword ptr [esp], eax
0xee5d:     e8 dc e4 00 00                  	call 0x1d33e <unknown_1d33e>
0xee62:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xee65:     8b 10                           	mov edx, dword ptr [eax]
0xee67:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xee6a:     89 10                           	mov dword ptr [eax], edx
0xee6c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xee6f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xee76:     74 05                           	je 0xee7d <function_ee7d>
; data inside code section at 0xee78 -- 0xee79
0xee78:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xee79 -- 0xee7a
; data inside code section at 0xee7a -- 0xee7d
0xee7a:     ff ff ff                                           |...             |
; function: function_ee7d at 0xee7d -- 0xee7f
0xee7d:     c9                              	leave 
0xee7e:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_13auto_any_castIPKSt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE
; function: _ZN5boost15foreach_detail_13auto_any_castIPKSt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE at 0xee7f -- 0xee96
0xee7f:     55                              	push ebp
0xee80:     89 e5                           	mov ebp, esp
0xee82:     83 ec 28                        	sub esp, 0x28
0xee85:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xee88:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xee8b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xee91:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xee94:     31 c0                           	xor eax, eax
; data inside code section at 0xee96 -- 0xee98
0xee96:     8b 45                                              |.E              |
; function: function_ee98 at 0xee98 -- 0xeea5
0xee98:     e4 8b                           	in al, 0x8b
0xee9a:     55                              	push ebp
0xee9b:     f4                              	hlt 
0xee9c:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xeea3:     74 05                           	je 0xeeaa <function_eeaa>
; data inside code section at 0xeea5 -- 0xeea6
0xeea5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xeea6 -- 0xeea7
; data inside code section at 0xeea7 -- 0xeeaa
0xeea7:     ff ff ff                                           |...             |
; function: function_eeaa at 0xeeaa -- 0xeeac
0xeeaa:     c9                              	leave 
0xeeab:     c3                              	ret 
; section: .text._ZN5boost15foreach_detail_7derefofIKSt6vectorI6CTxOutSaIS3_EEEERT_PS7_
; function: _ZN5boost15foreach_detail_7derefofIKSt6vectorI6CTxOutSaIS3_EEEERT_PS7_ at 0xeeac -- 0xeed2
0xeeac:     55                              	push ebp
0xeead:     89 e5                           	mov ebp, esp
0xeeaf:     83 ec 28                        	sub esp, 0x28
0xeeb2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xeeb5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xeeb8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xeebe:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xeec1:     31 c0                           	xor eax, eax
0xeec3:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeec6:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xeec9:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xeed0:     74 05                           	je 0xeed7 <function_eed7>
; data inside code section at 0xeed2 -- 0xeed3
0xeed2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xeed3 -- 0xeed4
; data inside code section at 0xeed4 -- 0xeed7
0xeed4:     ff ff ff                                           |...             |
; function: function_eed7 at 0xeed7 -- 0xeed9
0xeed7:     c9                              	leave 
0xeed8:     c3                              	ret 
; section: .text._ZN5boost17range_adl_barrier5beginISt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_
; function: _ZN5boost17range_adl_barrier5beginISt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_ at 0xeed9 -- 0xeee2
0xeed9:     55                              	push ebp
0xeeda:     89 e5                           	mov ebp, esp
0xeedc:     83 ec 38                        	sub esp, 0x38
0xeedf:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
; function: function_eee2 at 0xeee2 -- 0xef1a
0xeee2:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xeee5:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xeee8:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xeeeb:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xeef1:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xeef4:     31 c0                           	xor eax, eax
0xeef6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeef9:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xeefc:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xef00:     89 04 24                        	mov dword ptr [esp], eax
0xef03:     e8 2d 23 01 00                  	call 0x21235 <unknown_21235>
0xef08:     83 ec 04                        	sub esp, 4
0xef0b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xef0e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xef11:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xef18:     74 05                           	je 0xef1f <function_ef1f>
; data inside code section at 0xef1a -- 0xef1b
0xef1a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xef1b -- 0xef1c
; data inside code section at 0xef1c -- 0xef1f
0xef1c:     ff ff ff                                           |...             |
; function: function_ef1f at 0xef1f -- 0xef23
0xef1f:     c9                              	leave 
0xef20:     c2 04 00                        	ret 4
; section: .text._ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEEC2ERKSA_
; function: _ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEEC1ERKSA_ at 0xef24 -- 0xef62
0xef24:     55                              	push ebp
0xef25:     89 e5                           	mov ebp, esp
0xef27:     83 ec 38                        	sub esp, 0x38
0xef2a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xef2d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xef30:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xef33:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xef36:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xef3c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xef3f:     31 c0                           	xor eax, eax
0xef41:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xef44:     89 04 24                        	mov dword ptr [esp], eax
0xef47:     e8 dc e4 00 00                  	call 0x1d428 <unknown_1d428>
0xef4c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xef4f:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xef52:     8b 12                           	mov edx, dword ptr [edx]
0xef54:     89 10                           	mov dword ptr [eax], edx
0xef56:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xef59:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xef60:     74 05                           	je 0xef67 <function_ef67>
; data inside code section at 0xef62 -- 0xef63
0xef62:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xef63 -- 0xef64
; data inside code section at 0xef64 -- 0xef67
0xef64:     ff ff ff                                           |...             |
; function: function_ef67 at 0xef67 -- 0xef69
0xef67:     c9                              	leave 
0xef68:     c3                              	ret 
; section: .text._ZN5boost17range_adl_barrier3endISt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_
; function: _ZN5boost17range_adl_barrier3endISt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_ at 0xef69 -- 0xefaa
0xef69:     55                              	push ebp
0xef6a:     89 e5                           	mov ebp, esp
0xef6c:     83 ec 38                        	sub esp, 0x38
0xef6f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xef72:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xef75:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xef78:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xef7b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xef81:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xef84:     31 c0                           	xor eax, eax
0xef86:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xef89:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xef8c:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xef90:     89 04 24                        	mov dword ptr [esp], eax
0xef93:     e8 77 23 01 00                  	call 0x2130f <unknown_2130f>
0xef98:     83 ec 04                        	sub esp, 4
0xef9b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xef9e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xefa1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xefa8:     74 05                           	je 0xefaf <function_efaf>
; data inside code section at 0xefaa -- 0xefab
0xefaa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xefab -- 0xefac
; data inside code section at 0xefac -- 0xefaf
0xefac:     ff ff ff                                           |...             |
; function: function_efaf at 0xefaf -- 0xefb3
0xefaf:     c9                              	leave 
0xefb0:     c2 04 00                        	ret 4
; section: .text._ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE
; function: _ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE at 0xefb3 -- 0xefd0
0xefb3:     55                              	push ebp
0xefb4:     89 e5                           	mov ebp, esp
0xefb6:     83 ec 28                        	sub esp, 0x28
0xefb9:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xefbc:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xefbf:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xefc5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xefc8:     31 c0                           	xor eax, eax
0xefca:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xefcd:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0xefd0 -- 0xefd4
0xefd0:     65 33 15 14                                        |e3..            |
; function: function_efd4 at 0xefd4 -- 0xefda
0xefd4:     00 00                           	add byte ptr [eax], al
0xefd6:     00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
; dynamically linked function: __stack_chk_fail at 0xefda -- 0xefdb
; data inside code section at 0xefdb -- 0xefdd
0xefdb:     ff ff                                              |..              |
; function: function_efdd at 0xefdd -- 0xefe0
0xefdd:     ff c9                           	dec ecx
0xefdf:     c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv
; function: _ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv at 0xefe0 -- 0xf013
0xefe0:     55                              	push ebp
0xefe1:     89 e5                           	mov ebp, esp
0xefe3:     83 ec 28                        	sub esp, 0x28
0xefe6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xefe9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xefec:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xeff2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xeff5:     31 c0                           	xor eax, eax
0xeff7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xeffa:     8b 00                           	mov eax, dword ptr [eax]
0xeffc:     8d 50 14                        	lea edx, [eax + 0x14]
0xefff:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf002:     89 10                           	mov dword ptr [eax], edx
0xf004:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf007:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf00a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf011:     74 05                           	je 0xf018 <function_f018>
; data inside code section at 0xf013 -- 0xf014
0xf013:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf014 -- 0xf015
; data inside code section at 0xf015 -- 0xf018
0xf015:     ff ff ff                                           |...             |
; function: function_f018 at 0xf018 -- 0xf01a
0xf018:     c9                              	leave 
0xf019:     c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv at 0xf01a -- 0xf042
0xf01a:     55                              	push ebp
0xf01b:     89 e5                           	mov ebp, esp
0xf01d:     83 ec 28                        	sub esp, 0x28
0xf020:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf023:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf026:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf02c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf02f:     31 c0                           	xor eax, eax
0xf031:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf034:     8b 00                           	mov eax, dword ptr [eax]
0xf036:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf039:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf040:     74 05                           	je 0xf047
; data inside code section at 0xf042 -- 0xf043
0xf042:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf043 -- 0xf044
; data inside code section at 0xf044 -- 0xf046
0xf044:     ff ff                                              |..              |
; function: function_f046 at 0xf046 -- 0xf049
0xf046:     ff c9                           	dec ecx
0xf048:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI7uint256EjRKT_li
; function: _Z16GetSerializeSizeI7uint256EjRKT_li at 0xf049 -- 0xf091
0xf049:     55                              	push ebp
0xf04a:     89 e5                           	mov ebp, esp
0xf04c:     83 ec 38                        	sub esp, 0x38
0xf04f:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf052:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf055:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf058:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf05b:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xf05e:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xf061:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf067:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf06a:     31 c0                           	xor eax, eax
0xf06c:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf06f:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xf072:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xf076:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xf079:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xf07d:     89 04 24                        	mov dword ptr [esp], eax
0xf080:     e8 b4 23 01 00                  	call 0x21439 <unknown_21439>
0xf085:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf088:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf08f:     74 05                           	je 0xf096 <function_f096>
; data inside code section at 0xf091 -- 0xf092
0xf091:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf092 -- 0xf093
; data inside code section at 0xf093 -- 0xf096
0xf093:     ff ff ff                                           |...             |
; function: function_f096 at 0xf096 -- 0xf098
0xf096:     c9                              	leave 
0xf097:     c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh
; function: _ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh at 0xf098 -- 0xf0c4
0xf098:     55                              	push ebp
0xf099:     89 e5                           	mov ebp, esp
0xf09b:     83 ec 38                        	sub esp, 0x38
0xf09e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf0a1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf0a4:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf0a7:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf0aa:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xf0ad:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xf0b0:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xf0b3:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xf0b6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf0bc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf0bf:     31 c0                           	xor eax, eax
0xf0c1:     8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
; function: function_f0c4 at 0xf0c4 -- 0xf0ed
0xf0c4:     89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0xf0c8:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xf0cb:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xf0cf:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf0d2:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf0d6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf0d9:     89 04 24                        	mov dword ptr [esp], eax
0xf0dc:     e8 e3 23 01 00                  	call 0x214c4 <unknown_214c4>
0xf0e1:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xf0e4:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xf0eb:     74 05                           	je 0xf0f2 <function_f0f2>
; data inside code section at 0xf0ed -- 0xf0ee
0xf0ed:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf0ee -- 0xf0ef
; data inside code section at 0xf0ef -- 0xf0f2
0xf0ef:     ff ff ff                                           |...             |
; function: function_f0f2 at 0xf0f2 -- 0xf0f4
0xf0f2:     c9                              	leave 
0xf0f3:     c3                              	ret 
; section: .text._Z16GetSerializeSizeI13CDiskBlockPosEjRKT_li
; function: _Z16GetSerializeSizeI13CDiskBlockPosEjRKT_li at 0xf0f4 -- 0xf100
0xf0f4:     55                              	push ebp
0xf0f5:     89 e5                           	mov ebp, esp
0xf0f7:     83 ec 38                        	sub esp, 0x38
0xf0fa:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf0fd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0xf100 -- 0xf102
0xf100:     8b 45                                              |.E              |
; function: function_f102 at 0xf102 -- 0xf13c
0xf102:     0c 89                           	or al, 0x89
0xf104:     45                              	inc ebp
0xf105:     e0 8b                           	loopne 0xf092 <__stack_chk_fail>
0xf107:     45                              	inc ebp
0xf108:     10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0xf10e:     14 00                           	adc al, 0
0xf110:     00 00                           	add byte ptr [eax], al
0xf112:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf115:     31 c0                           	xor eax, eax
0xf117:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xf11a:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xf11e:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf121:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf125:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf128:     89 04 24                        	mov dword ptr [esp], eax
0xf12b:     e8 96 66 00 00                  	call 0x157c6 <function_157c6>
0xf130:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf133:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf13a:     74 05                           	je 0xf141 <function_f141>
; data inside code section at 0xf13c -- 0xf13d
0xf13c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf13d -- 0xf13e
; data inside code section at 0xf13e -- 0xf141
0xf13e:     ff ff ff                                           |...             |
; function: function_f141 at 0xf141 -- 0xf143
0xf141:     c9                              	leave 
0xf142:     c3                              	ret 
; section: .text._Z9SerializeI11CHashWriter7uint256EvRT_RKT0_li
; function: _Z9SerializeI11CHashWriter7uint256EvRT_RKT0_li at 0xf143 -- 0xf14c
0xf143:     55                              	push ebp
0xf144:     89 e5                           	mov ebp, esp
0xf146:     83 ec 38                        	sub esp, 0x38
0xf149:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
; function: function_f14c at 0xf14c -- 0xf198
0xf14c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf14f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf152:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf155:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xf158:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xf15b:     8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0xf15e:     89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0xf161:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf167:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf16a:     31 c0                           	xor eax, eax
0xf16c:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf16f:     8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0xf172:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xf176:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xf179:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xf17d:     8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0xf180:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xf184:     89 04 24                        	mov dword ptr [esp], eax
0xf187:     e8 0d 28 01 00                  	call 0x21999 <unknown_21999>
0xf18c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xf18f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xf196:     74 05                           	je 0xf19d <function_f19d>
; data inside code section at 0xf198 -- 0xf199
0xf198:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf199 -- 0xf19a
; data inside code section at 0xf19a -- 0xf19d
0xf19a:     ff ff ff                                           |...             |
; function: function_f19d at 0xf19d -- 0xf19f
0xf19d:     c9                              	leave 
0xf19e:     c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEE5beginEv
; function: _ZNSt6vectorIbSaIbEE5beginEv at 0xf1a0 -- 0xf1dc
0xf1a0:     55                              	push ebp
0xf1a1:     89 e5                           	mov ebp, esp
0xf1a3:     83 ec 28                        	sub esp, 0x28
0xf1a6:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf1a9:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf1ac:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf1af:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf1b2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf1b8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf1bb:     31 c0                           	xor eax, eax
0xf1bd:     8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0xf1c0:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf1c3:     8b 50 04                        	mov edx, dword ptr [eax + 4]
0xf1c6:     8b 00                           	mov eax, dword ptr [eax]
0xf1c8:     89 01                           	mov dword ptr [ecx], eax
0xf1ca:     89 51 04                        	mov dword ptr [ecx + 4], edx
0xf1cd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf1d0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf1d3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf1da:     74 05                           	je 0xf1e1 <function_f1e1>
; data inside code section at 0xf1dc -- 0xf1dd
0xf1dc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf1dd -- 0xf1de
; data inside code section at 0xf1de -- 0xf1e1
0xf1de:     ff ff ff                                           |...             |
; function: function_f1e1 at 0xf1e1 -- 0xf1e5
0xf1e1:     c9                              	leave 
0xf1e2:     c2 04 00                        	ret 4
; section: .text._ZNSt6vectorIbSaIbEE3endEv
; function: _ZNSt6vectorIbSaIbEE3endEv at 0xf1e6 -- 0xf223
0xf1e6:     55                              	push ebp
0xf1e7:     89 e5                           	mov ebp, esp
0xf1e9:     83 ec 28                        	sub esp, 0x28
0xf1ec:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf1ef:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf1f2:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf1f5:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf1f8:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf1fe:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf201:     31 c0                           	xor eax, eax
0xf203:     8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0xf206:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf209:     8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0xf20c:     8b 40 08                        	mov eax, dword ptr [eax + 8]
0xf20f:     89 01                           	mov dword ptr [ecx], eax
0xf211:     89 51 04                        	mov dword ptr [ecx + 4], edx
0xf214:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf217:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf21a:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf221:     74 05                           	je 0xf228 <function_f228>
; data inside code section at 0xf223 -- 0xf224
0xf223:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf224 -- 0xf225
; data inside code section at 0xf225 -- 0xf228
0xf225:     ff ff ff                                           |...             |
; function: function_f228 at 0xf228 -- 0xf22c
0xf228:     c9                              	leave 
0xf229:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIbSaIbEE5beginEv
; function: _ZNKSt6vectorIbSaIbEE5beginEv at 0xf22c -- 0xf238
0xf22c:     55                              	push ebp
0xf22d:     89 e5                           	mov ebp, esp
0xf22f:     83 ec 38                        	sub esp, 0x38
0xf232:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf235:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; function: function_f238 at 0xf238 -- 0xf26a
0xf238:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf23b:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf23e:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf244:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf247:     31 c0                           	xor eax, eax
0xf249:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf24c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf250:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf253:     89 04 24                        	mov dword ptr [esp], eax
0xf256:     e8 a5 25 00 00                  	call 0x11800 <function_11800>
0xf25b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf25e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf261:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf268:     74 05                           	je 0xf26f <function_f26f>
; data inside code section at 0xf26a -- 0xf26b
0xf26a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf26b -- 0xf26c
; data inside code section at 0xf26c -- 0xf26f
0xf26c:     ff ff ff                                           |...             |
; function: function_f26f at 0xf26f -- 0xf273
0xf26f:     c9                              	leave 
0xf270:     c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIbSaIbEE3endEv
; function: _ZNKSt6vectorIbSaIbEE3endEv at 0xf274 -- 0xf2b5
0xf274:     55                              	push ebp
0xf275:     89 e5                           	mov ebp, esp
0xf277:     83 ec 38                        	sub esp, 0x38
0xf27a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf27d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf280:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf283:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf286:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf28c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf28f:     31 c0                           	xor eax, eax
0xf291:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf294:     83 c0 08                        	add eax, 8
0xf297:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf29b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf29e:     89 04 24                        	mov dword ptr [esp], eax
0xf2a1:     e8 a2 25 00 00                  	call 0x11848 <function_11848>
0xf2a6:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf2a9:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf2ac:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf2b3:     74 05                           	je 0xf2ba <function_f2ba>
; data inside code section at 0xf2b5 -- 0xf2b6
0xf2b5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf2b6 -- 0xf2b7
; data inside code section at 0xf2b7 -- 0xf2ba
0xf2b7:     ff ff ff                                           |...             |
; function: function_f2ba at 0xf2ba -- 0xf2be
0xf2ba:     c9                              	leave 
0xf2bb:     c2 04 00                        	ret 4
; section: .text._ZNK9base_uintILj256EE6GetHexEv
; function: _ZNK9base_uintILj256EE6GetHexEv at 0xf2be -- 0xf2e5
0xf2be:     55                              	push ebp
0xf2bf:     89 e5                           	mov ebp, esp
0xf2c1:     53                              	push ebx
0xf2c2:     83 ec 74                        	sub esp, 0x74
0xf2c5:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf2c8:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0xf2cb:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf2ce:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0xf2d1:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf2d7:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf2da:     31 c0                           	xor eax, eax
0xf2dc:     c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0xf2e3:     eb 36                           	jmp 0xf31b <function_f31b>
; data inside code section at 0xf2e5 -- 0xf2ff
0xf2e5:     8b 55 a0 b8 1f 00 00 00  2b 45 ac 01 d0 0f b6 00   |.U......+E......|
0xf2f5:     0f b6 c0 8b 55 ac 8d 0c  12 8d                     |....U.....      |
; function: function_f2ff at 0xf2ff -- 0xf305
0xf2ff:     55                              	push ebp
0xf300:     b3 01                           	mov bl, 1
0xf302:     ca 89 44                        	retf 0x4489
; data inside code section at 0xf305 -- 0xf313
0xf305:     24 08 c7 44 24 04 ec 3e  00 00 89 14 24 e8         |$..D$..>....$.  |
; dynamically linked function: sprintf at 0xf313 -- 0xf314
; data inside code section at 0xf314 -- 0xf31b
0xf314:     ff ff ff 83 45 ac 01                               |....E..         |
; function: function_f31b at 0xf31b -- 0xf32c
0xf31b:     83 7d ac 1f                     	cmp dword ptr [ebp - 0x54], 0x1f
0xf31f:     0f 96 c0                        	setbe al
0xf322:     84 c0                           	test al, al
0xf324:     75 bf                           	jne 0xf2e5
0xf326:     8d 45 b2                        	lea eax, [ebp - 0x4e]
0xf329:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xf32c -- 0xf32d
0xf32c:     e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC1Ev at 0xf32d -- 0xf32e
; data inside code section at 0xf32e -- 0xf35b
0xf32e:     ff ff ff 8d 45 b2 89 44  24 0c 8d 45 b3 83 c0 40   |....E..D$..E...@|
0xf33e:     89 44 24 08 8d 45 b3 89  44 24 04 8b 45 a4 89 04   |.D$..E..D$..E...|
0xf34e:     24 e8 90 18 01 00 8d 45  b2 89 04 24 e8            |$......E...$.   |
; dynamically linked function: _ZNSaIcED1Ev at 0xf35b -- 0xf35c
; data inside code section at 0xf35c -- 0xf36a
0xf35c:     ff ff ff 8b 45 a4 8b 55  f4 65 33 15 14 00         |....E..U.e3...  |
; function: function_f36a at 0xf36a -- 0xf370
0xf36a:     00 00                           	add byte ptr [eax], al
0xf36c:     74 1e                           	je 0xf38c <function_f38c>
0xf36e:     eb 17                           	jmp 0xf387 <function_f387>
; data inside code section at 0xf370 -- 0xf371
0xf370:     89                                                 |.               |
; function: function_f371 at 0xf371 -- 0xf372
0xf371:     c3                              	ret 
; data inside code section at 0xf372 -- 0xf379
0xf372:     8d 45 b2 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSaIcED1Ev at 0xf379 -- 0xf37a
; data inside code section at 0xf37a -- 0xf383
0xf37a:     ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0xf383 -- 0xf384
; data inside code section at 0xf384 -- 0xf387
0xf384:     ff ff ff                                           |...             |
; function: function_f387 at 0xf387 -- 0xf388
; dynamically linked function: __stack_chk_fail at 0xf388 -- 0xf389
; data inside code section at 0xf389 -- 0xf38c
0xf389:     ff ff ff                                           |...             |
; function: function_f38c at 0xf38c -- 0xf394
0xf38c:     83 c4 74                        	add esp, 0x74
0xf38f:     5b                              	pop ebx
0xf390:     5d                              	pop ebp
0xf391:     c2 04 00                        	ret 4
; section: .text._ZNKSt4lessI7uint256EclERKS0_S3_
; function: _ZNKSt4lessI7uint256EclERKS0_S3_ at 0xf394 -- 0xf3a6
0xf394:     55                              	push ebp
0xf395:     89 e5                           	mov ebp, esp
0xf397:     83 ec 38                        	sub esp, 0x38
0xf39a:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf39d:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf3a0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf3a3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0xf3a6 -- 0xf3a8
0xf3a6:     8b 45                                              |.E              |
; function: function_f3a8 at 0xf3a8 -- 0xf3d5
0xf3a8:     10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0xf3ae:     14 00                           	adc al, 0
0xf3b0:     00 00                           	add byte ptr [eax], al
0xf3b2:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf3b5:     31 c0                           	xor eax, eax
0xf3b7:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xf3ba:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf3be:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf3c1:     89 04 24                        	mov dword ptr [esp], eax
0xf3c4:     e8 fd 27 00 00                  	call 0x11bc6 <function_11bc6>
0xf3c9:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf3cc:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf3d3:     74 05                           	je 0xf3da <function_f3da>
; data inside code section at 0xf3d5 -- 0xf3d6
0xf3d5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf3d6 -- 0xf3d7
; data inside code section at 0xf3d7 -- 0xf3da
0xf3d7:     ff ff ff                                           |...             |
; function: function_f3da at 0xf3da -- 0xf3dc
0xf3da:     c9                              	leave 
0xf3db:     c3                              	ret 
; section: .text._ZNSt4pairIc7uint256EC2ERKcRKS0_
; function: _ZNSt4pairIc7uint256EC1ERKcRKS0_ at 0xf3dc -- 0xf3f1
0xf3dc:     55                              	push ebp
0xf3dd:     89 e5                           	mov ebp, esp
0xf3df:     83 ec 28                        	sub esp, 0x28
0xf3e2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf3e5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf3e8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf3eb:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf3ee:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; data inside code section at 0xf3f1 -- 0xf3f2
0xf3f1:     89                                                 |.               |
; function: function_f3f2 at 0xf3f2 -- 0xf44b
0xf3f2:     45                              	inc ebp
0xf3f3:     dc 65 a1                        	fsub qword ptr [ebp - 0x5f]
0xf3f6:     14 00                           	adc al, 0
0xf3f8:     00 00                           	add byte ptr [eax], al
0xf3fa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf3fd:     31 c0                           	xor eax, eax
0xf3ff:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf402:     0f b6 10                        	movzx edx, byte ptr [eax]
0xf405:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf408:     88 10                           	mov byte ptr [eax], dl
0xf40a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf40d:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xf410:     8b 0a                           	mov ecx, dword ptr [edx]
0xf412:     89 48 04                        	mov dword ptr [eax + 4], ecx
0xf415:     8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0xf418:     89 48 08                        	mov dword ptr [eax + 8], ecx
0xf41b:     8b 4a 08                        	mov ecx, dword ptr [edx + 8]
0xf41e:     89 48 0c                        	mov dword ptr [eax + 0xc], ecx
0xf421:     8b 4a 0c                        	mov ecx, dword ptr [edx + 0xc]
0xf424:     89 48 10                        	mov dword ptr [eax + 0x10], ecx
0xf427:     8b 4a 10                        	mov ecx, dword ptr [edx + 0x10]
0xf42a:     89 48 14                        	mov dword ptr [eax + 0x14], ecx
0xf42d:     8b 4a 14                        	mov ecx, dword ptr [edx + 0x14]
0xf430:     89 48 18                        	mov dword ptr [eax + 0x18], ecx
0xf433:     8b 4a 18                        	mov ecx, dword ptr [edx + 0x18]
0xf436:     89 48 1c                        	mov dword ptr [eax + 0x1c], ecx
0xf439:     8b 52 1c                        	mov edx, dword ptr [edx + 0x1c]
0xf43c:     89 50 20                        	mov dword ptr [eax + 0x20], edx
0xf43f:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xf442:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xf449:     74 05                           	je 0xf450 <function_f450>
; data inside code section at 0xf44b -- 0xf44c
0xf44b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf44c -- 0xf44d
; data inside code section at 0xf44d -- 0xf450
0xf44d:     ff ff ff                                           |...             |
; function: function_f450 at 0xf450 -- 0xf452
0xf450:     c9                              	leave 
0xf451:     c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeISt4pairIc7uint256EEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeISt4pairIc7uint256EEEjRKT_ at 0xf452 -- 0xf49a
0xf452:     55                              	push ebp
0xf453:     89 e5                           	mov ebp, esp
0xf455:     83 ec 38                        	sub esp, 0x38
0xf458:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf45b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf45e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf461:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf464:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf46a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf46d:     31 c0                           	xor eax, eax
0xf46f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf472:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xf475:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf478:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xf47b:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xf47f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf483:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf486:     89 04 24                        	mov dword ptr [esp], eax
0xf489:     e8 70 28 01 00                  	call 0x21cfe <unknown_21cfe>
0xf48e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf491:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf498:     74 05                           	je 0xf49f <function_f49f>
; data inside code section at 0xf49a -- 0xf49b
0xf49a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf49b -- 0xf49c
; data inside code section at 0xf49c -- 0xf49f
0xf49c:     ff ff ff                                           |...             |
; function: function_f49f at 0xf49f -- 0xf4a1
0xf49f:     c9                              	leave 
0xf4a0:     c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeI6CCoinsEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeI6CCoinsEEjRKT_ at 0xf4a2 -- 0xf4bf
0xf4a2:     55                              	push ebp
0xf4a3:     89 e5                           	mov ebp, esp
0xf4a5:     83 ec 38                        	sub esp, 0x38
0xf4a8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf4ab:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf4ae:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf4b1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf4b4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf4ba:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf4bd:     31 c0                           	xor eax, eax
; data inside code section at 0xf4bf -- 0xf4c0
0xf4bf:     8b                                                 |.               |
; function: function_f4c0 at 0xf4c0 -- 0xf4ea
0xf4c0:     45                              	inc ebp
0xf4c1:     e4 8b                           	in al, 0x8b
0xf4c3:     50                              	push eax
0xf4c4:     18 8b 45 e4 8b 40               	sbb byte ptr [ebx + 0x408be445], cl
0xf4ca:     14 89                           	adc al, 0x89
0xf4cc:     54                              	push esp
0xf4cd:     24 08                           	and al, 8
0xf4cf:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf4d3:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf4d6:     89 04 24                        	mov dword ptr [esp], eax
0xf4d9:     e8 ea 28 01 00                  	call 0x21dc8 <unknown_21dc8>
0xf4de:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf4e1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf4e8:     74 05                           	je 0xf4ef <function_f4ef>
; data inside code section at 0xf4ea -- 0xf4eb
0xf4ea:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf4eb -- 0xf4ec
; data inside code section at 0xf4ec -- 0xf4ed
0xf4ec:     ff                                                 |.               |
; function: function_f4ed at 0xf4ed -- 0xf4ee
; data inside code section at 0xf4ee -- 0xf4ef
0xf4ee:     ff                                                 |.               |
; function: function_f4ef at 0xf4ef -- 0xf4f1
0xf4ef:     c9                              	leave 
0xf4f0:     c3                              	ret 
; section: .text._ZN11CDataStreamlsI6CCoinsEERS_RKT_
; function: _ZN11CDataStreamlsI6CCoinsEERS_RKT_ at 0xf4f2 -- 0xf530
0xf4f2:     55                              	push ebp
0xf4f3:     89 e5                           	mov ebp, esp
0xf4f5:     83 ec 38                        	sub esp, 0x38
0xf4f8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf4fb:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf4fe:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf501:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf504:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf50a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf50d:     31 c0                           	xor eax, eax
0xf50f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf512:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xf515:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf518:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xf51b:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xf51f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xf523:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf526:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf52a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf52d:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xf530 -- 0xf534
0xf530:     e8 32 29 01                                        |.2).            |
; function: function_f534 at 0xf534 -- 0xf544
0xf534:     00 8b 45 e4 8b 55               	add byte ptr [ebx + 0x558be445], cl
0xf53a:     f4                              	hlt 
0xf53b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf542:     74 05                           	je 0xf549 <function_f549>
; data inside code section at 0xf544 -- 0xf545
0xf544:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf545 -- 0xf546
; data inside code section at 0xf546 -- 0xf549
0xf546:     ff ff ff                                           |...             |
; function: function_f549 at 0xf549 -- 0xf54b
0xf549:     c9                              	leave 
0xf54a:     c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeIcEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeIcEEjRKT_ at 0xf54c -- 0xf55b
0xf54c:     55                              	push ebp
0xf54d:     89 e5                           	mov ebp, esp
0xf54f:     83 ec 38                        	sub esp, 0x38
0xf552:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf555:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf558:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0xf55b -- 0xf55c
0xf55b:     89                                                 |.               |
; function: function_f55c at 0xf55c -- 0xf59a
0xf55c:     45                              	inc ebp
0xf55d:     e0 65                           	loopne 0xf5c4
0xf55f:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xf564:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf567:     31 c0                           	xor eax, eax
0xf569:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf56c:     8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0xf56f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf572:     8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0xf575:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf578:     0f b6 00                        	movzx eax, byte ptr [eax]
0xf57b:     0f be c0                        	movsx eax, al
0xf57e:     89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0xf582:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xf586:     89 04 24                        	mov dword ptr [esp], eax
0xf589:     e8 ee 42 00 00                  	call 0x1387c <function_1387c>
0xf58e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf591:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf598:     74 05                           	je 0xf59f
; function: function_f59a at 0xf59a -- 0xf59b
; dynamically linked function: __stack_chk_fail at 0xf59b -- 0xf59c
; data inside code section at 0xf59c -- 0xf59f
0xf59c:     ff ff ff                                           |...             |
; function: function_f59f at 0xf59f -- 0xf5a1
0xf59f:     c9                              	leave 
0xf5a0:     c3                              	ret 
; section: .text._ZN11CDataStreamlsIcEERS_RKT_
; function: _ZN11CDataStreamlsIcEERS_RKT_ at 0xf5a2 -- 0xf5ae
0xf5a2:     55                              	push ebp
0xf5a3:     89 e5                           	mov ebp, esp
0xf5a5:     83 ec 38                        	sub esp, 0x38
0xf5a8:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf5ab:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; function: function_f5ae at 0xf5ae -- 0xf5bd
0xf5ae:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf5b1:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf5b4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf5ba:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; function: function_f5bd at 0xf5bd -- 0xf5c2
0xf5bd:     31 c0                           	xor eax, eax
0xf5bf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0xf5c2 -- 0xf5c3
0xf5c2:     8b                                                 |.               |
; function: function_f5c3 at 0xf5c3 -- 0xf5c4
0xf5c3:     48                              	dec eax
; data inside code section at 0xf5c4 -- 0xf5c6
0xf5c4:     18 8b                                              |..              |
; function: function_f5c6 at 0xf5c6 -- 0xf5cd
0xf5c6:     45                              	inc ebp
0xf5c7:     e4 8b                           	in al, 0x8b
0xf5c9:     50                              	push eax
0xf5ca:     14 8b                           	adc al, 0x8b
0xf5cc:     45                              	inc ebp
; data inside code section at 0xf5cd -- 0xf5ce
0xf5cd:     e0                                                 |.               |
; function: function_f5ce at 0xf5ce -- 0xf5e3
0xf5ce:     0f b6 00                        	movzx eax, byte ptr [eax]
0xf5d1:     0f be c0                        	movsx eax, al
0xf5d4:     89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0xf5d8:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xf5dc:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf5e0:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0xf5e3 -- 0xf5e4
0xf5e3:     89                                                 |.               |
; function: function_f5e4 at 0xf5e4 -- 0xf5fa
0xf5e4:     04 24                           	add al, 0x24
0xf5e6:     e8 88 29 01 00                  	call 0x21f73 <unknown_21f73>
0xf5eb:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf5ee:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf5f1:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf5f8:     74 05                           	je 0xf5ff <function_f5ff>
; data inside code section at 0xf5fa -- 0xf5fb
0xf5fa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf5fb -- 0xf5fc
; data inside code section at 0xf5fc -- 0xf5ff
0xf5fc:     ff ff ff                                           |...             |
; function: function_f5ff at 0xf5ff -- 0xf601
0xf5ff:     c9                              	leave 
0xf600:     c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeI7uint256EEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeI7uint256EEjRKT_ at 0xf602 -- 0xf64a
0xf602:     55                              	push ebp
0xf603:     89 e5                           	mov ebp, esp
0xf605:     83 ec 38                        	sub esp, 0x38
0xf608:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf60b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf60e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf611:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf614:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf61a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf61d:     31 c0                           	xor eax, eax
0xf61f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf622:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xf625:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf628:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xf62b:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xf62f:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf633:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf636:     89 04 24                        	mov dword ptr [esp], eax
0xf639:     e8 0d f0 00 00                  	call 0x1e64b <unknown_1e64b>
0xf63e:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf641:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf648:     74 05                           	je 0xf64f <function_f64f>
; data inside code section at 0xf64a -- 0xf64b
0xf64a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf64b -- 0xf64c
; data inside code section at 0xf64c -- 0xf64f
0xf64c:     ff ff ff                                           |...             |
; function: function_f64f at 0xf64f -- 0xf651
0xf64f:     c9                              	leave 
0xf650:     c3                              	ret 
; section: .text._ZN11CDataStreamlsI7uint256EERS_RKT_
; function: _ZN11CDataStreamlsI7uint256EERS_RKT_ at 0xf652 -- 0xf6a4
0xf652:     55                              	push ebp
0xf653:     89 e5                           	mov ebp, esp
0xf655:     83 ec 38                        	sub esp, 0x38
0xf658:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf65b:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf65e:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf661:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf664:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf66a:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf66d:     31 c0                           	xor eax, eax
0xf66f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf672:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xf675:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf678:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xf67b:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xf67f:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xf683:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf686:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf68a:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf68d:     89 04 24                        	mov dword ptr [esp], eax
0xf690:     e8 e4 29 01 00                  	call 0x22079 <unknown_22079>
0xf695:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf698:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf69b:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf6a2:     74 05                           	je 0xf6a9 <function_f6a9>
; data inside code section at 0xf6a4 -- 0xf6a5
0xf6a4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf6a5 -- 0xf6a6
; data inside code section at 0xf6a6 -- 0xf6a9
0xf6a6:     ff ff ff                                           |...             |
; function: function_f6a9 at 0xf6a9 -- 0xf6ab
0xf6a9:     c9                              	leave 
0xf6aa:     c3                              	ret 
; section: .text._ZN5boost11filesystem311path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE
; function: _ZN5boost11filesystem311path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE at 0xf6ab -- 0xf6bb
0xf6ab:     55                              	push ebp
0xf6ac:     89 e5                           	mov ebp, esp
0xf6ae:     53                              	push ebx
0xf6af:     83 ec 34                        	sub esp, 0x34
0xf6b2:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf6b5:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf6b8:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0xf6bb -- 0xf6bc
0xf6bb:     89                                                 |.               |
; function: function_f6bc at 0xf6bc -- 0xf6d5
0xf6bc:     45                              	inc ebp
0xf6bd:     e0 8b                           	loopne 0xf64a
0xf6bf:     45                              	inc ebp
0xf6c0:     10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0xf6c6:     14 00                           	adc al, 0
0xf6c8:     00 00                           	add byte ptr [eax], al
0xf6ca:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf6cd:     31 c0                           	xor eax, eax
0xf6cf:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf6d2:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xf6d5 -- 0xf6d6
0xf6d5:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0xf6d6 -- 0xf6d7
; data inside code section at 0xf6d7 -- 0xf6f1
0xf6d7:     ff ff ff 85 c0 0f 95 c0  84 c0 74 69 8d 45 f0 8b   |..........ti.E..|
0xf6e7:     55 e4 89 54 24 04 89 04  24 e8                     |U..T$...$.      |
; dynamically linked function: _ZNKSs5beginEv at 0xf6f1 -- 0xf6f2
; data inside code section at 0xf6f2 -- 0xf704
0xf6f2:     ff ff ff 83 ec 04 8d 45  f0 89 04 24 e8 d4 8c 00   |.......E...$....|
0xf702:     00 89                                              |..              |
; function: function_f704 at 0xf704 -- 0xf705
0xf704:     c3                              	ret 
; data inside code section at 0xf705 -- 0xf70c
0xf705:     8b 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4sizeEv at 0xf70c -- 0xf70d
; data inside code section at 0xf70d -- 0xf70f
0xf70d:     ff ff                                              |..              |
; function: function_f70f at 0xf70f -- 0xf712
0xf70f:     ff 01                           	inc dword ptr [ecx]
0xf711:     c3                              	ret 
; data inside code section at 0xf712 -- 0xf720
0xf712:     8d 45 ec 8b 55 e4 89 54  24 04 89 04 24 e8         |.E..U..T$...$.  |
; dynamically linked function: _ZNKSs5beginEv at 0xf720 -- 0xf721
; data inside code section at 0xf721 -- 0xf73d
0xf721:     ff ff ff 83 ec 04 8d 45  ec 89 04 24 e8 a5 8c 00   |.......E...$....|
0xf731:     00 8b 55 dc 89 54 24 0c  8b 55 e0 89               |..U..T$..U..    |
; function: function_f73d at 0xf73d -- 0xf758
0xf73d:     54                              	push esp
0xf73e:     24 08                           	and al, 8
0xf740:     89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0xf744:     89 04 24                        	mov dword ptr [esp], eax
0xf747:     e8 93 51 00 00                  	call 0x148df <function_148df>
0xf74c:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xf74f:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xf756:     74 05                           	je 0xf75d <function_f75d>
; data inside code section at 0xf758 -- 0xf759
0xf758:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf759 -- 0xf75a
; data inside code section at 0xf75a -- 0xf75d
0xf75a:     ff ff ff                                           |...             |
; function: function_f75d at 0xf75d -- 0xf762
0xf75d:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0xf760:     c9                              	leave 
0xf761:     c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE4findERS2_
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE4findERS2_ at 0xf762 -- 0xf7b0
0xf762:     55                              	push ebp
0xf763:     89 e5                           	mov ebp, esp
0xf765:     53                              	push ebx
0xf766:     83 ec 44                        	sub esp, 0x44
0xf769:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf76c:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf76f:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf772:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf775:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xf778:     89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0xf77b:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf781:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf784:     31 c0                           	xor eax, eax
0xf786:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf789:     89 04 24                        	mov dword ptr [esp], eax
0xf78c:     e8 85 2a 01 00                  	call 0x22216 <unknown_22216>
0xf791:     89 c3                           	mov ebx, eax
0xf793:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf796:     89 04 24                        	mov dword ptr [esp], eax
0xf799:     e8 48 2a 01 00                  	call 0x221e6 <unknown_221e6>
0xf79e:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xf7a1:     8b 4d dc                        	mov ecx, dword ptr [ebp - 0x24]
0xf7a4:     89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0xf7a8:     89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0xf7ac:     89 44 24 08                     	mov dword ptr [esp + 8], eax
; data inside code section at 0xf7b0 -- 0xf7b2
0xf7b0:     8b 45                                              |.E              |
; function: function_f7b2 at 0xf7b2 -- 0xf842
0xf7b2:     e0 89                           	loopne 0xf73d <function_f73d>
0xf7b4:     44                              	inc esp
0xf7b5:     24 04                           	and al, 4
0xf7b7:     89 14 24                        	mov dword ptr [esp], edx
0xf7ba:     e8 87 2a 01 00                  	call 0x22246 <unknown_22246>
0xf7bf:     83 ec 04                        	sub esp, 4
0xf7c2:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xf7c5:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xf7c8:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xf7cc:     89 04 24                        	mov dword ptr [esp], eax
0xf7cf:     e8 dc f7 00 00                  	call 0x1efb0 <unknown_1efb0>
0xf7d4:     83 ec 04                        	sub esp, 4
0xf7d7:     8d 45 f0                        	lea eax, [ebp - 0x10]
0xf7da:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf7de:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xf7e1:     89 04 24                        	mov dword ptr [esp], eax
0xf7e4:     e8 1d b0 00 00                  	call 0x1a806 <function_1a806>
0xf7e9:     84 c0                           	test al, al
0xf7eb:     75 27                           	jne 0xf814 <function_f7b2+0x62>
0xf7ed:     8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0xf7f0:     89 04 24                        	mov dword ptr [esp], eax
0xf7f3:     e8 02 2b 01 00                  	call 0x222fa <unknown_222fa>
0xf7f8:     89 c2                           	mov edx, eax
0xf7fa:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf7fd:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xf801:     8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0xf804:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xf808:     89 04 24                        	mov dword ptr [esp], eax
0xf80b:     e8 e6 f2 00 00                  	call 0x1eaf6 <unknown_1eaf6>
0xf810:     84 c0                           	test al, al
0xf812:     74 17                           	je 0xf82b <function_f7b2+0x79>
0xf814:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf817:     8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0xf81a:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xf81e:     89 04 24                        	mov dword ptr [esp], eax
0xf821:     e8 8a f7 00 00                  	call 0x1efb0 <unknown_1efb0>
0xf826:     83 ec 04                        	sub esp, 4
0xf829:     eb 08                           	jmp 0xf833 <function_f7b2+0x81>
0xf82b:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf82e:     8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0xf831:     89 10                           	mov dword ptr [eax], edx
0xf833:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf836:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf839:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf840:     74 05                           	je 0xf847 <function_f847>
; data inside code section at 0xf842 -- 0xf843
0xf842:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf843 -- 0xf844
; data inside code section at 0xf844 -- 0xf847
0xf844:     ff ff ff                                           |...             |
; function: function_f847 at 0xf847 -- 0xf84e
0xf847:     8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0xf84a:     c9                              	leave 
0xf84b:     c2 04 00                        	ret 4
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE3endEv
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE3endEv at 0xf84e -- 0xf88f
0xf84e:     55                              	push ebp
0xf84f:     89 e5                           	mov ebp, esp
0xf851:     83 ec 38                        	sub esp, 0x38
0xf854:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf857:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf85a:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf85d:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf860:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf866:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf869:     31 c0                           	xor eax, eax
0xf86b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf86e:     83 c0 04                        	add eax, 4
0xf871:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf875:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf878:     89 04 24                        	mov dword ptr [esp], eax
0xf87b:     e8 aa 2b 01 00                  	call 0x2242a <unknown_2242a>
0xf880:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf883:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf886:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf88d:     74 05                           	je 0xf894 <function_f894>
; data inside code section at 0xf88f -- 0xf890
0xf88f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf890 -- 0xf891
; data inside code section at 0xf891 -- 0xf894
0xf891:     ff ff ff                                           |...             |
; function: function_f894 at 0xf894 -- 0xf898
0xf894:     c9                              	leave 
0xf895:     c2 04 00                        	ret 4
; section: .text._ZSt11__addressofISt4pairIK7uint256P11CBlockIndexEEPT_RS6_
; function: _ZSt11__addressofISt4pairIK7uint256P11CBlockIndexEEPT_RS6_ at 0xf898 -- 0xf8be
0xf898:     55                              	push ebp
0xf899:     89 e5                           	mov ebp, esp
0xf89b:     83 ec 28                        	sub esp, 0x28
0xf89e:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf8a1:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf8a4:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf8aa:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf8ad:     31 c0                           	xor eax, eax
0xf8af:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf8b2:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf8b5:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf8bc:     74 05                           	je 0xf8c3 <function_f8c3>
; data inside code section at 0xf8be -- 0xf8bf
0xf8be:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf8bf -- 0xf8c0
; data inside code section at 0xf8c0 -- 0xf8c3
0xf8c0:     ff ff ff                                           |...             |
; function: function_f8c3 at 0xf8c3 -- 0xf8c5
0xf8c3:     c9                              	leave 
0xf8c4:     c3                              	ret 
; section: .text._ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4sizeEv
; function: _ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4sizeEv at 0xf8c6 -- 0xf8ef
0xf8c6:     55                              	push ebp
0xf8c7:     89 e5                           	mov ebp, esp
0xf8c9:     83 ec 28                        	sub esp, 0x28
0xf8cc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf8cf:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf8d2:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf8d8:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf8db:     31 c0                           	xor eax, eax
0xf8dd:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf8e0:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xf8e3:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf8e6:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf8ed:     74 05                           	je 0xf8f4 <function_f8f4>
; data inside code section at 0xf8ef -- 0xf8f0
0xf8ef:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf8f0 -- 0xf8f1
; data inside code section at 0xf8f1 -- 0xf8f4
0xf8f1:     ff ff ff                                           |...             |
; function: function_f8f4 at 0xf8f4 -- 0xf8f6
0xf8f4:     c9                              	leave 
0xf8f5:     c3                              	ret 
; section: .text._ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE5beginEv
; function: _ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE5beginEv at 0xf8f6 -- 0xf937
0xf8f6:     55                              	push ebp
0xf8f7:     89 e5                           	mov ebp, esp
0xf8f9:     83 ec 38                        	sub esp, 0x38
0xf8fc:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf8ff:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf902:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf905:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf908:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf90e:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf911:     31 c0                           	xor eax, eax
0xf913:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf916:     8b 40 0c                        	mov eax, dword ptr [eax + 0xc]
0xf919:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf91d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf920:     89 04 24                        	mov dword ptr [esp], eax
0xf923:     e8 e2 2b 01 00                  	call 0x2250a <unknown_2250a>
0xf928:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf92b:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf92e:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf935:     74 05                           	je 0xf93c <function_f93c>
; data inside code section at 0xf937 -- 0xf938
0xf937:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf938 -- 0xf939
; data inside code section at 0xf939 -- 0xf93c
0xf939:     ff ff ff                                           |...             |
; function: function_f93c at 0xf93c -- 0xf940
0xf93c:     c9                              	leave 
0xf93d:     c2 04 00                        	ret 4
; section: .text._ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE3endEv
; function: _ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE3endEv at 0xf940 -- 0xf981
0xf940:     55                              	push ebp
0xf941:     89 e5                           	mov ebp, esp
0xf943:     83 ec 38                        	sub esp, 0x38
0xf946:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf949:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf94c:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xf94f:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xf952:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf958:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf95b:     31 c0                           	xor eax, eax
0xf95d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xf960:     83 c0 04                        	add eax, 4
0xf963:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xf967:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf96a:     89 04 24                        	mov dword ptr [esp], eax
0xf96d:     e8 e2 2b 01 00                  	call 0x22554 <unknown_22554>
0xf972:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xf975:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xf978:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf97f:     74 05                           	je 0xf986 <function_f986>
; data inside code section at 0xf981 -- 0xf982
0xf981:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf982 -- 0xf983
; data inside code section at 0xf983 -- 0xf986
0xf983:     ff ff ff                                           |...             |
; function: function_f986 at 0xf986 -- 0xf98a
0xf986:     c9                              	leave 
0xf987:     c2 04 00                        	ret 4
; section: .text._ZSt11__addressofIKSt4pairIK7uint2566CCoinsEEPT_RS6_
; function: _ZSt11__addressofIKSt4pairIK7uint2566CCoinsEEPT_RS6_ at 0xf98a -- 0xf9a1
0xf98a:     55                              	push ebp
0xf98b:     89 e5                           	mov ebp, esp
0xf98d:     83 ec 28                        	sub esp, 0x28
0xf990:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf993:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xf996:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf99c:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf99f:     31 c0                           	xor eax, eax
; data inside code section at 0xf9a1 -- 0xf9a2
0xf9a1:     8b                                                 |.               |
; function: function_f9a2 at 0xf9a2 -- 0xf9b0
0xf9a2:     45                              	inc ebp
0xf9a3:     e4 8b                           	in al, 0x8b
0xf9a5:     55                              	push ebp
0xf9a6:     f4                              	hlt 
0xf9a7:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xf9ae:     74 05                           	je 0xf9b5 <function_f9b5>
; data inside code section at 0xf9b0 -- 0xf9b1
0xf9b0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf9b1 -- 0xf9b2
; data inside code section at 0xf9b2 -- 0xf9b5
0xf9b2:     ff ff ff                                           |...             |
; function: function_f9b5 at 0xf9b5 -- 0xf9b7
0xf9b5:     c9                              	leave 
0xf9b6:     c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteISt4pairIc7uint256E15CDiskBlockIndexEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteISt4pairIc7uint256E15CDiskBlockIndexEEvRKT_RKT0_ at 0xf9b8 -- 0xf9c8
0xf9b8:     55                              	push ebp
0xf9b9:     89 e5                           	mov ebp, esp
0xf9bb:     53                              	push ebx
0xf9bc:     83 ec 74                        	sub esp, 0x74
0xf9bf:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xf9c2:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0xf9c5:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0xf9c8 -- 0xf9c9
0xf9c8:     89                                                 |.               |
; function: function_f9c9 at 0xf9c9 -- 0xf9f2
0xf9c9:     45                              	inc ebp
0xf9ca:     a0 8b 45 10 89                  	mov al, byte ptr [0x8910458b]
0xf9cf:     45                              	inc ebp
0xf9d0:     9c                              	pushfd 
0xf9d1:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xf9d7:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xf9da:     31 c0                           	xor eax, eax
0xf9dc:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xf9e4:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xf9ec:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xf9ef:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xf9f2 -- 0xf9f6
0xf9f2:     e8 9d 44 00                                        |..D.            |
; function: function_f9f6 at 0xf9f6 -- 0xf9fe
0xf9f6:     00 8b 45 a0 89 44               	add byte ptr [ebx + 0x4489a045], cl
0xf9fc:     24 04                           	and al, 4
; function: function_f9fe at 0xf9fe -- 0xfaf2
0xf9fe:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfa01:     89 04 24                        	mov dword ptr [esp], eax
0xfa04:     e8 01 f4 00 00                  	call 0x1ee0a <unknown_1ee0a>
0xfa09:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfa0d:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfa10:     89 04 24                        	mov dword ptr [esp], eax
0xfa13:     e8 de 47 00 00                  	call 0x141f6 <function_141f6>
0xfa18:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xfa1b:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfa1f:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfa22:     89 04 24                        	mov dword ptr [esp], eax
0xfa25:     e8 ba ce 00 00                  	call 0x1c8e4 <unknown_1c8e4>
0xfa2a:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfa2d:     89 04 24                        	mov dword ptr [esp], eax
0xfa30:     e8 83 47 00 00                  	call 0x141b8 <function_141b8>
0xfa35:     89 c3                           	mov ebx, eax
0xfa37:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xfa3f:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfa42:     89 04 24                        	mov dword ptr [esp], eax
0xfa45:     e8 f6 47 00 00                  	call 0x14240 <function_14240>
0xfa4a:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xfa4e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfa52:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xfa55:     89 04 24                        	mov dword ptr [esp], eax
0xfa58:     e8 4d 74 00 00                  	call 0x16eaa <function_16eaa>
0xfa5d:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xfa65:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xfa6d:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfa70:     89 04 24                        	mov dword ptr [esp], eax
0xfa73:     e8 1c 44 00 00                  	call 0x13e94 <function_13e94>
0xfa78:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xfa7b:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfa7f:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfa82:     89 04 24                        	mov dword ptr [esp], eax
0xfa85:     e8 7a 2b 01 00                  	call 0x22604 <unknown_22604>
0xfa8a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfa8e:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfa91:     89 04 24                        	mov dword ptr [esp], eax
0xfa94:     e8 5d 47 00 00                  	call 0x141f6 <function_141f6>
0xfa99:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xfa9c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfaa0:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfaa3:     89 04 24                        	mov dword ptr [esp], eax
0xfaa6:     e8 a9 2b 01 00                  	call 0x22654 <unknown_22654>
0xfaab:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfaae:     89 04 24                        	mov dword ptr [esp], eax
0xfab1:     e8 02 47 00 00                  	call 0x141b8 <function_141b8>
0xfab6:     89 c3                           	mov ebx, eax
0xfab8:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xfac0:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfac3:     89 04 24                        	mov dword ptr [esp], eax
0xfac6:     e8 75 47 00 00                  	call 0x14240 <function_14240>
0xfacb:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xfacf:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfad3:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xfad6:     89 04 24                        	mov dword ptr [esp], eax
0xfad9:     e8 cc 73 00 00                  	call 0x16eaa <function_16eaa>
0xfade:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xfae1:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xfae4:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xfae8:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0xfaeb:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xfaef:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xfaf2 -- 0xfaf3
0xfaf2:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0xfaf3 -- 0xfaf4
; data inside code section at 0xfaf4 -- 0xfaf6
0xfaf4:     ff ff                                              |..              |
; function: function_faf6 at 0xfaf6 -- 0xfb1b
0xfaf6:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0xfafc:     24 e8                           	and al, 0xe8
0xfafe:     14 45                           	adc al, 0x45
0xfb00:     00 00                           	add byte ptr [eax], al
0xfb02:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfb05:     89 04 24                        	mov dword ptr [esp], eax
0xfb08:     e8 09 45 00 00                  	call 0x14016
0xfb0d:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xfb10:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xfb17:     74 2d                           	je 0xfb46 <function_fb46>
0xfb19:     eb 26                           	jmp 0xfb41 <function_fb41>
; function: function_fb1b at 0xfb1b -- 0xfb2a
0xfb1b:     89 c3                           	mov ebx, eax
0xfb1d:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfb20:     89 04 24                        	mov dword ptr [esp], eax
0xfb23:     e8 ee 44 00 00                  	call 0x14016
0xfb28:     eb 02                           	jmp 0xfb2c <function_fb2c>
; function: function_fb2a at 0xfb2a -- 0xfb2c
0xfb2a:     89 c3                           	mov ebx, eax
; function: function_fb2c at 0xfb2c -- 0xfb3c
0xfb2c:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfb2f:     89 04 24                        	mov dword ptr [esp], eax
0xfb32:     e8 df 44 00 00                  	call 0x14016
0xfb37:     89 d8                           	mov eax, ebx
0xfb39:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xfb3c -- 0xfb3d
0xfb3c:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xfb3d -- 0xfb3e
; data inside code section at 0xfb3e -- 0xfb41
0xfb3e:     ff ff ff                                           |...             |
; function: function_fb41 at 0xfb41 -- 0xfb42
; dynamically linked function: __stack_chk_fail at 0xfb42 -- 0xfb43
; data inside code section at 0xfb43 -- 0xfb46
0xfb43:     ff ff ff                                           |...             |
; function: function_fb46 at 0xfb46 -- 0xfb4c
0xfb46:     83 c4 74                        	add esp, 0x74
0xfb49:     5b                              	pop ebx
0xfb4a:     5d                              	pop ebp
0xfb4b:     c3                              	ret 
; section: .text._ZN11CDataStreamrsI7CBigNumEERS_RT_
; function: _ZN11CDataStreamrsI7CBigNumEERS_RT_ at 0xfb4c -- 0xfb4d
0xfb4c:     55                              	push ebp
; function: function_fb4d at 0xfb4d -- 0xfb5b
0xfb4d:     89 e5                           	mov ebp, esp
0xfb4f:     83 ec 38                        	sub esp, 0x38
0xfb52:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xfb55:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xfb58:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0xfb5b -- 0xfb5c
0xfb5b:     89                                                 |.               |
; function: function_fb5c at 0xfb5c -- 0xfb80
0xfb5c:     45                              	inc ebp
0xfb5d:     e0 65                           	loopne 0xfbc4
0xfb5f:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xfb64:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xfb67:     31 c0                           	xor eax, eax
0xfb69:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xfb6c:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xfb6f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xfb72:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xfb75:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xfb79:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xfb7d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; function: function_fb80 at 0xfb80 -- 0xfb9e
0xfb80:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfb84:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xfb87:     89 04 24                        	mov dword ptr [esp], eax
0xfb8a:     e8 b2 2c 01 00                  	call 0x22841 <unknown_22841>
0xfb8f:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xfb92:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xfb95:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xfb9c:     74 05                           	je 0xfba3 <function_fba3>
; data inside code section at 0xfb9e -- 0xfb9f
0xfb9e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xfb9f -- 0xfba0
; data inside code section at 0xfba0 -- 0xfba2
0xfba0:     ff ff                                              |..              |
; function: function_fba2 at 0xfba2 -- 0xfba3
; function: function_fba3 at 0xfba3 -- 0xfba5
0xfba3:     c9                              	leave 
0xfba4:     c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteIc7CBigNumEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteIc7CBigNumEEvRKT_RKT0_ at 0xfba6 -- 0xfbbf
0xfba6:     55                              	push ebp
0xfba7:     89 e5                           	mov ebp, esp
0xfba9:     53                              	push ebx
0xfbaa:     83 ec 74                        	sub esp, 0x74
0xfbad:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xfbb0:     89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0xfbb3:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xfbb6:     89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0xfbb9:     8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0xfbbc:     89 45 9c                        	mov dword ptr [ebp - 0x64], eax
; data inside code section at 0xfbbf -- 0xfbc1
0xfbbf:     65 a1                                              |e.              |
; function: function_fbc1 at 0xfbc1 -- 0xfbc3
0xfbc1:     14 00                           	adc al, 0
; data inside code section at 0xfbc3 -- 0xfc10
0xfbc3:     00 00 89 45 f4 31 c0 c7  44 24 08 60 90 0f 00 c7   |...E.1..D$.`....|
0xfbd3:     44 24 04 02 00 00 00 8d  45 ac 89 04 24 e8 9d 44   |D$......E...$..D|
0xfbe3:     00 00 8b 45 a0 89 44 24  04 8d 45 ac 89 04 24 e8   |...E..D$..E...$.|
0xfbf3:     fb f4 00 00 89 44 24 04  8d 45 ac 89 04 24 e8 de   |.....D$..E...$..|
0xfc03:     47 00 00 8b 45 a0 89 44  24 04 8d 45 ac            |G...E..D$..E.   |
; function: function_fc10 at 0xfc10 -- 0xfc2d
0xfc10:     89 04 24                        	mov dword ptr [esp], eax
0xfc13:     e8 30 f5 00 00                  	call 0x1f148 <unknown_1f148>
0xfc18:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfc1b:     89 04 24                        	mov dword ptr [esp], eax
0xfc1e:     e8 83 47 00 00                  	call 0x143a6 <function_143a6>
0xfc23:     89 c3                           	mov ebx, eax
0xfc25:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
; data inside code section at 0xfc2d -- 0xfc2e
0xfc2d:     8d                                                 |.               |
; function: function_fc2e at 0xfc2e -- 0xfce0
0xfc2e:     45                              	inc ebp
0xfc2f:     ac                              	lodsb al, byte ptr [esi]
0xfc30:     89 04 24                        	mov dword ptr [esp], eax
0xfc33:     e8 f6 47 00 00                  	call 0x1442e <function_1442e>
0xfc38:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xfc3c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfc40:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xfc43:     89 04 24                        	mov dword ptr [esp], eax
0xfc46:     e8 4d 74 00 00                  	call 0x17098 <function_17098>
0xfc4b:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xfc53:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xfc5b:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfc5e:     89 04 24                        	mov dword ptr [esp], eax
0xfc61:     e8 1c 44 00 00                  	call 0x14082 <function_14082>
0xfc66:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xfc69:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfc6d:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfc70:     89 04 24                        	mov dword ptr [esp], eax
0xfc73:     e8 80 2c 01 00                  	call 0x228f8 <unknown_228f8>
0xfc78:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfc7c:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfc7f:     89 04 24                        	mov dword ptr [esp], eax
0xfc82:     e8 5d 47 00 00                  	call 0x143e4 <function_143e4>
0xfc87:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xfc8a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfc8e:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfc91:     89 04 24                        	mov dword ptr [esp], eax
0xfc94:     e8 af 2c 01 00                  	call 0x22948 <unknown_22948>
0xfc99:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfc9c:     89 04 24                        	mov dword ptr [esp], eax
0xfc9f:     e8 02 47 00 00                  	call 0x143a6 <function_143a6>
0xfca4:     89 c3                           	mov ebx, eax
0xfca6:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xfcae:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfcb1:     89 04 24                        	mov dword ptr [esp], eax
0xfcb4:     e8 75 47 00 00                  	call 0x1442e <function_1442e>
0xfcb9:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xfcbd:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfcc1:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xfcc4:     89 04 24                        	mov dword ptr [esp], eax
0xfcc7:     e8 cc 73 00 00                  	call 0x17098 <function_17098>
0xfccc:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xfccf:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xfcd2:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xfcd6:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0xfcd9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xfcdd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xfce0 -- 0xfce1
0xfce0:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0xfce1 -- 0xfce2
; data inside code section at 0xfce2 -- 0xfce4
0xfce2:     ff ff                                              |..              |
; function: function_fce4 at 0xfce4 -- 0xfd09
0xfce4:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0xfcea:     24 e8                           	and al, 0xe8
0xfcec:     14 45                           	adc al, 0x45
0xfcee:     00 00                           	add byte ptr [eax], al
0xfcf0:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfcf3:     89 04 24                        	mov dword ptr [esp], eax
0xfcf6:     e8 09 45 00 00                  	call 0x14204
0xfcfb:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xfcfe:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xfd05:     74 2d                           	je 0xfd34 <function_fd34>
0xfd07:     eb 26                           	jmp 0xfd2f <function_fd2f>
; function: function_fd09 at 0xfd09 -- 0xfd18
0xfd09:     89 c3                           	mov ebx, eax
0xfd0b:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfd0e:     89 04 24                        	mov dword ptr [esp], eax
0xfd11:     e8 ee 44 00 00                  	call 0x14204
0xfd16:     eb 02                           	jmp 0xfd1a
; function: function_fd18 at 0xfd18 -- 0xfd1a
0xfd18:     89 c3                           	mov ebx, eax
; data inside code section at 0xfd1a -- 0xfd1b
0xfd1a:     8d                                                 |.               |
; function: function_fd1b at 0xfd1b -- 0xfd20
0xfd1b:     45                              	inc ebp
0xfd1c:     ac                              	lodsb al, byte ptr [esi]
0xfd1d:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xfd20 -- 0xfd22
0xfd20:     e8 df                                              |..              |
; function: function_fd22 at 0xfd22 -- 0xfd2a
0xfd22:     44                              	inc esp
0xfd23:     00 00                           	add byte ptr [eax], al
0xfd25:     89 d8                           	mov eax, ebx
0xfd27:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xfd2a -- 0xfd2b
0xfd2a:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xfd2b -- 0xfd2c
; data inside code section at 0xfd2c -- 0xfd2f
0xfd2c:     ff ff ff                                           |...             |
; function: function_fd2f at 0xfd2f -- 0xfd30
; dynamically linked function: __stack_chk_fail at 0xfd30 -- 0xfd31
; data inside code section at 0xfd31 -- 0xfd34
0xfd31:     ff ff ff                                           |...             |
; function: function_fd34 at 0xfd34 -- 0xfd3a
0xfd34:     83 c4 74                        	add esp, 0x74
0xfd37:     5b                              	pop ebx
0xfd38:     5d                              	pop ebp
0xfd39:     c3                              	ret 
; section: .text._ZNSt4pairIciEC2ERKcRKi
; function: _ZNSt4pairIciEC1ERKcRKi at 0xfd3a -- 0xfd46
0xfd3a:     55                              	push ebp
0xfd3b:     89 e5                           	mov ebp, esp
0xfd3d:     83 ec 28                        	sub esp, 0x28
0xfd40:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xfd43:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0xfd46 -- 0xfd48
0xfd46:     8b 45                                              |.E              |
; function: function_fd48 at 0xfd48 -- 0xfd60
0xfd48:     0c 89                           	or al, 0x89
0xfd4a:     45                              	inc ebp
0xfd4b:     e0 8b                           	loopne 0xfcd8 <function_fcd8>
0xfd4d:     45                              	inc ebp
0xfd4e:     10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0xfd54:     14 00                           	adc al, 0
0xfd56:     00 00                           	add byte ptr [eax], al
0xfd58:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xfd5b:     31 c0                           	xor eax, eax
0xfd5d:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; function: function_fd60 at 0xfd60 -- 0xfd7f
0xfd60:     0f b6 10                        	movzx edx, byte ptr [eax]
0xfd63:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xfd66:     88 10                           	mov byte ptr [eax], dl
0xfd68:     8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0xfd6b:     8b 10                           	mov edx, dword ptr [eax]
0xfd6d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xfd70:     89 50 04                        	mov dword ptr [eax + 4], edx
0xfd73:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xfd76:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xfd7d:     74 05                           	je 0xfd84 <function_fd84>
; data inside code section at 0xfd7f -- 0xfd80
0xfd7f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xfd80 -- 0xfd81
; data inside code section at 0xfd81 -- 0xfd84
0xfd81:     ff ff ff                                           |...             |
; function: function_fd84 at 0xfd84 -- 0xfd86
0xfd84:     c9                              	leave 
0xfd85:     c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteISt4pairIciE14CBlockFileInfoEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteISt4pairIciE14CBlockFileInfoEEvRKT_RKT0_ at 0xfd86 -- 0xfd8d
0xfd86:     55                              	push ebp
0xfd87:     89 e5                           	mov ebp, esp
0xfd89:     53                              	push ebx
0xfd8a:     83 ec 74                        	sub esp, 0x74
; data inside code section at 0xfd8d -- 0xfd8f
0xfd8d:     8b 45                                              |.E              |
; function: function_fd8f at 0xfd8f -- 0xfdaa
0xfd8f:     08 89 45 a4 8b 45               	or byte ptr [ecx + 0x458ba445], cl
0xfd95:     0c 89                           	or al, 0x89
0xfd97:     45                              	inc ebp
0xfd98:     a0 8b 45 10 89                  	mov al, byte ptr [0x8910458b]
0xfd9d:     45                              	inc ebp
0xfd9e:     9c                              	pushfd 
0xfd9f:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xfda5:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xfda8:     31 c0                           	xor eax, eax
; function: function_fdaa at 0xfdaa -- 0xfec0
0xfdaa:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xfdb2:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xfdba:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfdbd:     89 04 24                        	mov dword ptr [esp], eax
0xfdc0:     e8 9d 44 00 00                  	call 0x14262 <function_14262>
0xfdc5:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xfdc8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfdcc:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfdcf:     89 04 24                        	mov dword ptr [esp], eax
0xfdd2:     e8 c9 fe 00 00                  	call 0x1fca0 <unknown_1fca0>
0xfdd7:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfddb:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfdde:     89 04 24                        	mov dword ptr [esp], eax
0xfde1:     e8 de 47 00 00                  	call 0x145c4 <function_145c4>
0xfde6:     8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0xfde9:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfded:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfdf0:     89 04 24                        	mov dword ptr [esp], eax
0xfdf3:     e8 f8 fe 00 00                  	call 0x1fcf0 <unknown_1fcf0>
0xfdf8:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfdfb:     89 04 24                        	mov dword ptr [esp], eax
0xfdfe:     e8 83 47 00 00                  	call 0x14586 <function_14586>
0xfe03:     89 c3                           	mov ebx, eax
0xfe05:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xfe0d:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfe10:     89 04 24                        	mov dword ptr [esp], eax
0xfe13:     e8 f6 47 00 00                  	call 0x1460e <function_1460e>
0xfe18:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xfe1c:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfe20:     8d 45 e4                        	lea eax, [ebp - 0x1c]
0xfe23:     89 04 24                        	mov dword ptr [esp], eax
0xfe26:     e8 4d 74 00 00                  	call 0x17278 <function_17278>
0xfe2b:     c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0xfe33:     c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0xfe3b:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfe3e:     89 04 24                        	mov dword ptr [esp], eax
0xfe41:     e8 1c 44 00 00                  	call 0x14262 <function_14262>
0xfe46:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xfe49:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfe4d:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfe50:     89 04 24                        	mov dword ptr [esp], eax
0xfe53:     e8 2a 2d 01 00                  	call 0x22b82 <unknown_22b82>
0xfe58:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfe5c:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfe5f:     89 04 24                        	mov dword ptr [esp], eax
0xfe62:     e8 5d 47 00 00                  	call 0x145c4 <function_145c4>
0xfe67:     8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0xfe6a:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfe6e:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfe71:     89 04 24                        	mov dword ptr [esp], eax
0xfe74:     e8 59 2d 01 00                  	call 0x22bd2 <unknown_22bd2>
0xfe79:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfe7c:     89 04 24                        	mov dword ptr [esp], eax
0xfe7f:     e8 02 47 00 00                  	call 0x14586 <function_14586>
0xfe84:     89 c3                           	mov ebx, eax
0xfe86:     c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0xfe8e:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfe91:     89 04 24                        	mov dword ptr [esp], eax
0xfe94:     e8 75 47 00 00                  	call 0x1460e <function_1460e>
0xfe99:     89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0xfe9d:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfea1:     8d 45 ec                        	lea eax, [ebp - 0x14]
0xfea4:     89 04 24                        	mov dword ptr [esp], eax
0xfea7:     e8 cc 73 00 00                  	call 0x17278 <function_17278>
0xfeac:     8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0xfeaf:     8d 55 ec                        	lea edx, [ebp - 0x14]
0xfeb2:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xfeb6:     8d 55 e4                        	lea edx, [ebp - 0x1c]
0xfeb9:     89 54 24 04                     	mov dword ptr [esp + 4], edx
0xfebd:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xfec0 -- 0xfec1
0xfec0:     e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0xfec1 -- 0xfec2
; data inside code section at 0xfec2 -- 0xfec4
0xfec2:     ff ff                                              |..              |
; function: function_fec4 at 0xfec4 -- 0xfee9
0xfec4:     ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0xfeca:     24 e8                           	and al, 0xe8
0xfecc:     14 45                           	adc al, 0x45
0xfece:     00 00                           	add byte ptr [eax], al
0xfed0:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfed3:     89 04 24                        	mov dword ptr [esp], eax
0xfed6:     e8 09 45 00 00                  	call 0x143e4 <function_143e4>
0xfedb:     8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0xfede:     65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0xfee5:     74 2d                           	je 0xff14 <function_ff14>
0xfee7:     eb 26                           	jmp 0xff0f <function_ff0f>
; function: function_fee9 at 0xfee9 -- 0xfef8
0xfee9:     89 c3                           	mov ebx, eax
0xfeeb:     8d 45 c8                        	lea eax, [ebp - 0x38]
0xfeee:     89 04 24                        	mov dword ptr [esp], eax
0xfef1:     e8 ee 44 00 00                  	call 0x143e4 <function_143e4>
0xfef6:     eb 02                           	jmp 0xfefa <function_fefa>
; function: function_fef8 at 0xfef8 -- 0xfefa
0xfef8:     89 c3                           	mov ebx, eax
; function: function_fefa at 0xfefa -- 0xff0a
0xfefa:     8d 45 ac                        	lea eax, [ebp - 0x54]
0xfefd:     89 04 24                        	mov dword ptr [esp], eax
0xff00:     e8 df 44 00 00                  	call 0x143e4 <function_143e4>
0xff05:     89 d8                           	mov eax, ebx
0xff07:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xff0a -- 0xff0b
0xff0a:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xff0b -- 0xff0c
; data inside code section at 0xff0c -- 0xff0f
0xff0c:     ff ff ff                                           |...             |
; function: function_ff0f at 0xff0f -- 0xff10
; dynamically linked function: __stack_chk_fail at 0xff10 -- 0xff11
; data inside code section at 0xff11 -- 0xff14
0xff11:     ff ff ff                                           |...             |
; function: function_ff14 at 0xff14 -- 0xff1a
0xff14:     83 c4 74                        	add esp, 0x74
0xff17:     5b                              	pop ebx
0xff18:     5d                              	pop ebp
0xff19:     c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeISt4pairIciEEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeISt4pairIciEEEjRKT_ at 0xff1a -- 0xff3a
0xff1a:     55                              	push ebp
0xff1b:     89 e5                           	mov ebp, esp
0xff1d:     83 ec 38                        	sub esp, 0x38
0xff20:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xff23:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xff26:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xff29:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xff2c:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xff32:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xff35:     31 c0                           	xor eax, eax
0xff37:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_ff3a at 0xff3a -- 0xff62
0xff3a:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xff3d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xff40:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xff43:     89 54 24 08                     	mov dword ptr [esp + 8], edx
0xff47:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xff4b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xff4e:     89 04 24                        	mov dword ptr [esp], eax
0xff51:     e8 69 2e 01 00                  	call 0x22dbf <unknown_22dbf>
0xff56:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xff59:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xff60:     74 05                           	je 0xff67 <function_ff67>
; data inside code section at 0xff62 -- 0xff63
0xff62:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xff63 -- 0xff64
; data inside code section at 0xff64 -- 0xff67
0xff64:     ff ff ff                                           |...             |
; function: function_ff67 at 0xff67 -- 0xff69
0xff67:     c9                              	leave 
0xff68:     c3                              	ret 
; section: .text._ZN11CDataStreamlsISt4pairIciEEERS_RKT_
; function: _ZN11CDataStreamlsISt4pairIciEEERS_RKT_ at 0xff6a -- 0xff76
0xff6a:     55                              	push ebp
0xff6b:     89 e5                           	mov ebp, esp
0xff6d:     83 ec 38                        	sub esp, 0x38
0xff70:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xff73:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; function: function_ff76 at 0xff76 -- 0xff7c
0xff76:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xff79:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0xff7c -- 0xff7d
0xff7c:     65                                                 |e               |
; function: function_ff7d at 0xff7d -- 0xffa8
0xff7d:     a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0xff82:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xff85:     31 c0                           	xor eax, eax
0xff87:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xff8a:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xff8d:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xff90:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xff93:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0xff97:     89 44 24 08                     	mov dword ptr [esp + 8], eax
0xff9b:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xff9e:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xffa2:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xffa5:     89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0xffa8 -- 0xffaa
0xffa8:     e8 dc                                              |..              |
; function: function_ffaa at 0xffaa -- 0xffbc
0xffaa:     2e 01 00                        	add dword ptr cs:[eax], eax
0xffad:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xffb0:     8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0xffb3:     65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0xffba:     74 05                           	je 0xffc1 <function_ffc1>
; data inside code section at 0xffbc -- 0xffbd
0xffbc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xffbd -- 0xffbe
; data inside code section at 0xffbe -- 0xffc1
0xffbe:     ff ff ff                                           |...             |
; function: function_ffc1 at 0xffc1 -- 0xffc3
0xffc1:     c9                              	leave 
0xffc2:     c3                              	ret 
; section: .text._ZN11CDataStreamrsI14CBlockFileInfoEERS_RT_
; function: _ZN11CDataStreamrsI14CBlockFileInfoEERS_RT_ at 0xffc4 -- 0xffea
0xffc4:     55                              	push ebp
0xffc5:     89 e5                           	mov ebp, esp
0xffc7:     83 ec 38                        	sub esp, 0x38
0xffca:     8b 45 08                        	mov eax, dword ptr [ebp + 8]
0xffcd:     89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0xffd0:     8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0xffd3:     89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0xffd6:     65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0xffdc:     89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0xffdf:     31 c0                           	xor eax, eax
0xffe1:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xffe4:     8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0xffe7:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_ffea at 0xffea -- 0xfff1
0xffea:     8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0xffed:     89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
; function: function_fff1 at 0xfff1 -- 0xfff2
; function: function_fff2 at 0xfff2 -- 0x10016
0xfff2:     44                              	inc esp
0xfff3:     24 08                           	and al, 8
0xfff5:     8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0xfff8:     89 44 24 04                     	mov dword ptr [esp + 4], eax
0xfffc:     8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0xffff:     89 04 24                        	mov dword ptr [esp], eax
0x10002:    e8 61 2f 01 00                  	call 0x22f68 <unknown_22f68>
0x10007:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1000a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1000d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10014:    74 05                           	je 0x1001b <function_1001b>
; data inside code section at 0x10016 -- 0x10017
0x10016:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10017 -- 0x10018
; data inside code section at 0x10018 -- 0x1001b
0x10018:    ff ff ff                                           |...             |
; function: function_1001b at 0x1001b -- 0x1001d
0x1001b:    c9                              	leave 
0x1001c:    c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteIciEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteIciEEvRKT_RKT0_ at 0x1001e -- 0x1011e
0x1001e:    55                              	push ebp
0x1001f:    89 e5                           	mov ebp, esp
0x10021:    53                              	push ebx
0x10022:    83 ec 74                        	sub esp, 0x74
0x10025:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10028:    89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x1002b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1002e:    89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x10031:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10034:    89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x10037:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1003d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10040:    31 c0                           	xor eax, eax
0x10042:    c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x1004a:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x10052:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10055:    89 04 24                        	mov dword ptr [esp], eax
0x10058:    e8 9d 44 00 00                  	call 0x144fa <function_144fa>
0x1005d:    8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x10060:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10064:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10067:    89 04 24                        	mov dword ptr [esp], eax
0x1006a:    e8 fb f4 00 00                  	call 0x1f56a <unknown_1f56a>
0x1006f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10073:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10076:    89 04 24                        	mov dword ptr [esp], eax
0x10079:    e8 de 47 00 00                  	call 0x1485c
0x1007e:    8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x10081:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10085:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10088:    89 04 24                        	mov dword ptr [esp], eax
0x1008b:    e8 30 f5 00 00                  	call 0x1f5c0 <unknown_1f5c0>
0x10090:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10093:    89 04 24                        	mov dword ptr [esp], eax
0x10096:    e8 83 47 00 00                  	call 0x1481e <function_1481e>
0x1009b:    89 c3                           	mov ebx, eax
0x1009d:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x100a5:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x100a8:    89 04 24                        	mov dword ptr [esp], eax
0x100ab:    e8 f6 47 00 00                  	call 0x148a6 <function_148a6>
0x100b0:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x100b4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x100b8:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x100bb:    89 04 24                        	mov dword ptr [esp], eax
0x100be:    e8 4d 74 00 00                  	call 0x17510 <function_17510>
0x100c3:    c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x100cb:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x100d3:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x100d6:    89 04 24                        	mov dword ptr [esp], eax
0x100d9:    e8 1c 44 00 00                  	call 0x144fa <function_144fa>
0x100de:    8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x100e1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x100e5:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x100e8:    89 04 24                        	mov dword ptr [esp], eax
0x100eb:    e8 2e 2f 01 00                  	call 0x2301e <unknown_2301e>
0x100f0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x100f4:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x100f7:    89 04 24                        	mov dword ptr [esp], eax
0x100fa:    e8 5d 47 00 00                  	call 0x1485c
0x100ff:    8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x10102:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10106:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10109:    89 04 24                        	mov dword ptr [esp], eax
0x1010c:    e8 6b 81 00 00                  	call 0x1827c <function_1827c>
0x10111:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10114:    89 04 24                        	mov dword ptr [esp], eax
0x10117:    e8 02 47 00 00                  	call 0x1481e <function_1481e>
0x1011c:    89 c3                           	mov ebx, eax
; data inside code section at 0x1011e -- 0x10122
0x1011e:    c7 44 24 04                                        |.D$.            |
; function: function_10122 at 0x10122 -- 0x10158
0x10122:    00 00                           	add byte ptr [eax], al
0x10124:    00 00                           	add byte ptr [eax], al
0x10126:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10129:    89 04 24                        	mov dword ptr [esp], eax
0x1012c:    e8 75 47 00 00                  	call 0x148a6 <function_148a6>
0x10131:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x10135:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10139:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x1013c:    89 04 24                        	mov dword ptr [esp], eax
0x1013f:    e8 cc 73 00 00                  	call 0x17510 <function_17510>
0x10144:    8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x10147:    8d 55 ec                        	lea edx, [ebp - 0x14]
0x1014a:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1014e:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x10151:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x10155:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x10158 -- 0x10159
0x10158:    e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0x10159 -- 0x1015a
; data inside code section at 0x1015a -- 0x1017d
0x1015a:    ff ff ff 8d 45 c8 89 04  24 e8 14 45 00 00 8d 45   |....E...$..E...E|
0x1016a:    ac 89 04 24 e8 09 45 00  00 8b 45 f4 65 33 05 14   |...$..E...E.e3..|
0x1017a:    00 00 00                                           |...             |
; function: function_1017d at 0x1017d -- 0x10181
0x1017d:    74 2d                           	je 0x101ac <function_101ac>
0x1017f:    eb 26                           	jmp 0x101a7 <function_101a7>
; function: function_10181 at 0x10181 -- 0x10190
0x10181:    89 c3                           	mov ebx, eax
0x10183:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10186:    89 04 24                        	mov dword ptr [esp], eax
0x10189:    e8 ee 44 00 00                  	call 0x1467c <function_1467c>
0x1018e:    eb 02                           	jmp 0x10192
; function: function_10190 at 0x10190 -- 0x10192
0x10190:    89 c3                           	mov ebx, eax
; data inside code section at 0x10192 -- 0x10194
0x10192:    8d 45                                              |.E              |
; function: function_10194 at 0x10194 -- 0x101a2
0x10194:    ac                              	lodsb al, byte ptr [esi]
0x10195:    89 04 24                        	mov dword ptr [esp], eax
0x10198:    e8 df 44 00 00                  	call 0x1467c <function_1467c>
0x1019d:    89 d8                           	mov eax, ebx
0x1019f:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x101a2 -- 0x101a3
0x101a2:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x101a3 -- 0x101a4
; data inside code section at 0x101a4 -- 0x101a7
0x101a4:    ff ff ff                                           |...             |
; function: function_101a7 at 0x101a7 -- 0x101a8
; dynamically linked function: __stack_chk_fail at 0x101a8 -- 0x101a9
; data inside code section at 0x101a9 -- 0x101ac
0x101a9:    ff ff ff                                           |...             |
; function: function_101ac at 0x101ac -- 0x101b2
0x101ac:    83 c4 74                        	add esp, 0x74
0x101af:    5b                              	pop ebx
0x101b0:    5d                              	pop ebp
0x101b1:    c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteIccEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteIccEEvRKT_RKT0_ at 0x101b2 -- 0x101d1
0x101b2:    55                              	push ebp
0x101b3:    89 e5                           	mov ebp, esp
0x101b5:    53                              	push ebx
0x101b6:    83 ec 74                        	sub esp, 0x74
0x101b9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x101bc:    89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x101bf:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x101c2:    89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x101c5:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x101c8:    89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x101cb:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x101d1 -- 0x101d2
0x101d1:    89                                                 |.               |
; function: function_101d2 at 0x101d2 -- 0x1021c
0x101d2:    45                              	inc ebp
0x101d3:    f4                              	hlt 
0x101d4:    31 c0                           	xor eax, eax
0x101d6:    c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x101de:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x101e6:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x101e9:    89 04 24                        	mov dword ptr [esp], eax
0x101ec:    e8 9d 44 00 00                  	call 0x1468e <function_1468e>
0x101f1:    8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x101f4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x101f8:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x101fb:    89 04 24                        	mov dword ptr [esp], eax
0x101fe:    e8 fb f4 00 00                  	call 0x1f6fe <unknown_1f6fe>
0x10203:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10207:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x1020a:    89 04 24                        	mov dword ptr [esp], eax
0x1020d:    e8 de 47 00 00                  	call 0x149f0 <function_149f0>
0x10212:    8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x10215:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10219:    8d 45 ac                        	lea eax, [ebp - 0x54]
; function: function_1021c at 0x1021c -- 0x102ec
0x1021c:    89 04 24                        	mov dword ptr [esp], eax
0x1021f:    e8 30 f5 00 00                  	call 0x1f754 <unknown_1f754>
0x10224:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10227:    89 04 24                        	mov dword ptr [esp], eax
0x1022a:    e8 83 47 00 00                  	call 0x149b2 <function_149b2>
0x1022f:    89 c3                           	mov ebx, eax
0x10231:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x10239:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x1023c:    89 04 24                        	mov dword ptr [esp], eax
0x1023f:    e8 f6 47 00 00                  	call 0x14a3a <function_14a3a>
0x10244:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x10248:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1024c:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x1024f:    89 04 24                        	mov dword ptr [esp], eax
0x10252:    e8 4d 74 00 00                  	call 0x176a4 <function_176a4>
0x10257:    c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x1025f:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x10267:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x1026a:    89 04 24                        	mov dword ptr [esp], eax
0x1026d:    e8 1c 44 00 00                  	call 0x1468e <function_1468e>
0x10272:    8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x10275:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10279:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x1027c:    89 04 24                        	mov dword ptr [esp], eax
0x1027f:    e8 7a f4 00 00                  	call 0x1f6fe <unknown_1f6fe>
0x10284:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10288:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x1028b:    89 04 24                        	mov dword ptr [esp], eax
0x1028e:    e8 5d 47 00 00                  	call 0x149f0 <function_149f0>
0x10293:    8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x10296:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1029a:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x1029d:    89 04 24                        	mov dword ptr [esp], eax
0x102a0:    e8 af f4 00 00                  	call 0x1f754 <unknown_1f754>
0x102a5:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x102a8:    89 04 24                        	mov dword ptr [esp], eax
0x102ab:    e8 02 47 00 00                  	call 0x149b2 <function_149b2>
0x102b0:    89 c3                           	mov ebx, eax
0x102b2:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x102ba:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x102bd:    89 04 24                        	mov dword ptr [esp], eax
0x102c0:    e8 75 47 00 00                  	call 0x14a3a <function_14a3a>
0x102c5:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x102c9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x102cd:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x102d0:    89 04 24                        	mov dword ptr [esp], eax
0x102d3:    e8 cc 73 00 00                  	call 0x176a4 <function_176a4>
0x102d8:    8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x102db:    8d 55 ec                        	lea edx, [ebp - 0x14]
0x102de:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x102e2:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x102e5:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x102e9:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x102ec -- 0x102ed
0x102ec:    e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0x102ed -- 0x102ee
; data inside code section at 0x102ee -- 0x10313
0x102ee:    ff ff ff 8d 45 c8 89 04  24 e8 14 45 00 00 8d 45   |....E...$..E...E|
0x102fe:    ac 89 04 24 e8 09 45 00  00 8b 45 f4 65 33 05 14   |...$..E...E.e3..|
0x1030e:    00 00 00 74 2d                                     |...t-           |
; function: function_10313 at 0x10313 -- 0x10315
0x10313:    eb 26                           	jmp 0x1033b <function_1033b>
; function: function_10315 at 0x10315 -- 0x10324
0x10315:    89 c3                           	mov ebx, eax
0x10317:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x1031a:    89 04 24                        	mov dword ptr [esp], eax
0x1031d:    e8 ee 44 00 00                  	call 0x14810 <function_14810>
0x10322:    eb 02                           	jmp 0x10326 <function_10326>
; function: function_10324 at 0x10324 -- 0x10326
0x10324:    89 c3                           	mov ebx, eax
; function: function_10326 at 0x10326 -- 0x10336
0x10326:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x10329:    89 04 24                        	mov dword ptr [esp], eax
0x1032c:    e8 df 44 00 00                  	call 0x14810 <function_14810>
0x10331:    89 d8                           	mov eax, ebx
0x10333:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x10336 -- 0x10337
0x10336:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x10337 -- 0x10338
; data inside code section at 0x10338 -- 0x1033b
0x10338:    ff ff ff                                           |...             |
; function: function_1033b at 0x1033b -- 0x1033c
; dynamically linked function: __stack_chk_fail at 0x1033c -- 0x1033d
; data inside code section at 0x1033d -- 0x1033e
0x1033d:    ff                                                 |.               |
; function: function_1033e at 0x1033e -- 0x1033f
; function: function_1033f at 0x1033f -- 0x10346
0x1033f:    ff 83 c4 74 5b 5d               	inc dword ptr [ebx + 0x5d5b74c4]
0x10345:    c3                              	ret 
; section: .text._ZN13CLevelDBBatch5EraseIcEEvRKT_
; function: _ZN13CLevelDBBatch5EraseIcEEvRKT_ at 0x10346 -- 0x10347
0x10346:    55                              	push ebp
; data inside code section at 0x10347 -- 0x10348
0x10347:    89                                                 |.               |
; function: function_10348 at 0x10348 -- 0x103f2
0x10348:    e5 53                           	in eax, 0x53
0x1034a:    83 ec 54                        	sub esp, 0x54
0x1034d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10350:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x10353:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10356:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x10359:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1035f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10362:    31 c0                           	xor eax, eax
0x10364:    c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x1036c:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x10374:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x10377:    89 04 24                        	mov dword ptr [esp], eax
0x1037a:    e8 a3 44 00 00                  	call 0x14822 <function_14822>
0x1037f:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x10382:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10386:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x10389:    89 04 24                        	mov dword ptr [esp], eax
0x1038c:    e8 01 f5 00 00                  	call 0x1f892 <unknown_1f892>
0x10391:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10395:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x10398:    89 04 24                        	mov dword ptr [esp], eax
0x1039b:    e8 e4 47 00 00                  	call 0x14b84 <function_14b84>
0x103a0:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x103a3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x103a7:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x103aa:    89 04 24                        	mov dword ptr [esp], eax
0x103ad:    e8 36 f5 00 00                  	call 0x1f8e8 <unknown_1f8e8>
0x103b2:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x103b5:    89 04 24                        	mov dword ptr [esp], eax
0x103b8:    e8 89 47 00 00                  	call 0x14b46 <function_14b46>
0x103bd:    89 c3                           	mov ebx, eax
0x103bf:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x103c7:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x103ca:    89 04 24                        	mov dword ptr [esp], eax
0x103cd:    e8 fc 47 00 00                  	call 0x14bce <function_14bce>
0x103d2:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x103d6:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x103da:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x103dd:    89 04 24                        	mov dword ptr [esp], eax
0x103e0:    e8 53 74 00 00                  	call 0x17838
0x103e5:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x103e8:    8d 55 ec                        	lea edx, [ebp - 0x14]
0x103eb:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x103ef:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x103f2 -- 0x103f3
0x103f2:    e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE at 0x103f3 -- 0x103f4
; data inside code section at 0x103f4 -- 0x103ff
0x103f4:    ff ff ff 8d 45 d0 89 04  24 e8 a2                  |....E...$..     |
; function: function_103ff at 0x103ff -- 0x10410
0x103ff:    45                              	inc ebp
0x10400:    00 00                           	add byte ptr [eax], al
0x10402:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10405:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1040c:    74 1e                           	je 0x1042c <function_1042c>
0x1040e:    eb 17                           	jmp 0x10427 <function_10427>
; data inside code section at 0x10410 -- 0x10411
0x10410:    89                                                 |.               |
; function: function_10411 at 0x10411 -- 0x10412
0x10411:    c3                              	ret 
; data inside code section at 0x10412 -- 0x10423
0x10412:    8d 45 d0 89 04 24 e8 87  45 00 00 89 d8 89 04 24   |.E...$..E......$|
0x10422:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x10423 -- 0x10424
; data inside code section at 0x10424 -- 0x10427
0x10424:    ff ff ff                                           |...             |
; function: function_10427 at 0x10427 -- 0x10428
; dynamically linked function: __stack_chk_fail at 0x10428 -- 0x10429
; data inside code section at 0x10429 -- 0x1042c
0x10429:    ff ff ff                                           |...             |
; function: function_1042c at 0x1042c -- 0x10432
0x1042c:    83 c4 54                        	add esp, 0x54
0x1042f:    5b                              	pop ebx
0x10430:    5d                              	pop ebp
0x10431:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStreamEvRT_Rcii
; function: _Z11UnserializeI11CDataStreamEvRT_Rcii at 0x10432 -- 0x10470
0x10432:    55                              	push ebp
0x10433:    89 e5                           	mov ebp, esp
0x10435:    83 ec 38                        	sub esp, 0x38
0x10438:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1043b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1043e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10441:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10444:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10447:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1044a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1044d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x10450:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10456:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10459:    31 c0                           	xor eax, eax
0x1045b:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x10463:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10466:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1046a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1046d:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x10470 -- 0x10471
0x10470:    e8                                                 |.               |
; function: function_10471 at 0x10471 -- 0x10472
0x10471:    c3                              	ret 
; data inside code section at 0x10472 -- 0x10473
0x10472:    49                                                 |I               |
; function: function_10473 at 0x10473 -- 0x10481
0x10473:    00 00                           	add byte ptr [eax], al
0x10475:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10478:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1047f:    74 05                           	je 0x10486 <function_10486>
; data inside code section at 0x10481 -- 0x10482
0x10481:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10482 -- 0x10483
; data inside code section at 0x10483 -- 0x10486
0x10483:    ff ff ff                                           |...             |
; function: function_10486 at 0x10486 -- 0x10488
0x10486:    c9                              	leave 
0x10487:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream6CCoinsEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream6CCoinsEvRT_RT0_li at 0x10488 -- 0x104dd
0x10488:    55                              	push ebp
0x10489:    89 e5                           	mov ebp, esp
0x1048b:    83 ec 38                        	sub esp, 0x38
0x1048e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10491:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10494:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10497:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1049a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1049d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x104a0:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x104a3:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x104a6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x104ac:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x104af:    31 c0                           	xor eax, eax
0x104b1:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x104b4:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x104b8:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x104bb:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x104bf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x104c2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x104c6:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x104c9:    89 04 24                        	mov dword ptr [esp], eax
0x104cc:    e8 09 30 01 00                  	call 0x234da <unknown_234da>
0x104d1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x104d4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x104db:    74 05                           	je 0x104e2 <function_104e2>
; data inside code section at 0x104dd -- 0x104de
0x104dd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x104de -- 0x104df
; data inside code section at 0x104df -- 0x104e2
0x104df:    ff ff ff                                           |...             |
; function: function_104e2 at 0x104e2 -- 0x104e4
0x104e2:    c9                              	leave 
0x104e3:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream7uint256EvRT_RT0_li
; function: _Z11UnserializeI11CDataStream7uint256EvRT_RT0_li at 0x104e4 -- 0x10530
0x104e4:    55                              	push ebp
0x104e5:    89 e5                           	mov ebp, esp
0x104e7:    83 ec 38                        	sub esp, 0x38
0x104ea:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x104ed:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x104f0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x104f3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x104f6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x104f9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x104fc:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x104ff:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x10502:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10508:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1050b:    31 c0                           	xor eax, eax
0x1050d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10510:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x10513:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x10517:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1051a:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1051e:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x10521:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x10525:    89 04 24                        	mov dword ptr [esp], eax
0x10528:    e8 d7 33 01 00                  	call 0x23904 <unknown_23904>
0x1052d:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; function: function_10530 at 0x10530 -- 0x10539
0x10530:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10537:    74 05                           	je 0x1053e <function_1053e>
; data inside code section at 0x10539 -- 0x1053a
0x10539:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1053a -- 0x1053b
; data inside code section at 0x1053b -- 0x1053e
0x1053b:    ff ff ff                                           |...             |
; function: function_1053e at 0x1053e -- 0x10540
0x1053e:    c9                              	leave 
0x1053f:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriter7CVarIntIiEEvRT_RKT0_li
; function: _Z9SerializeI11CHashWriter7CVarIntIiEEvRT_RKT0_li at 0x10540 -- 0x1058c
0x10540:    55                              	push ebp
0x10541:    89 e5                           	mov ebp, esp
0x10543:    83 ec 38                        	sub esp, 0x38
0x10546:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10549:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1054c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1054f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10552:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10555:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10558:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1055b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1055e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10564:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10567:    31 c0                           	xor eax, eax
0x10569:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1056c:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x10570:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10573:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10577:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1057a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1057e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10581:    89 04 24                        	mov dword ptr [esp], eax
0x10584:    e8 2d 34 01 00                  	call 0x239b6 <unknown_239b6>
0x10589:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; data inside code section at 0x1058c -- 0x10595
0x1058c:    65 33 05 14 00 00 00 74  05                        |e3.....t.       |
; function: function_10595 at 0x10595 -- 0x10596
; dynamically linked function: __stack_chk_fail at 0x10596 -- 0x10597
; data inside code section at 0x10597 -- 0x10599
0x10597:    ff ff                                              |..              |
; function: function_10599 at 0x10599 -- 0x1059c
0x10599:    ff c9                           	dec ecx
0x1059b:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriterEvRT_cii
; function: _Z9SerializeI11CHashWriterEvRT_cii at 0x1059c -- 0x105eb
0x1059c:    55                              	push ebp
0x1059d:    89 e5                           	mov ebp, esp
0x1059f:    83 ec 38                        	sub esp, 0x38
0x105a2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x105a5:    8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x105a8:    89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x105ab:    88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x105ae:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x105b1:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x105b4:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x105b7:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x105ba:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x105c0:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x105c3:    31 c0                           	xor eax, eax
0x105c5:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x105cd:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x105d0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x105d4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x105d7:    89 04 24                        	mov dword ptr [esp], eax
0x105da:    e8 bb 4c 00 00                  	call 0x1529a
0x105df:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x105e2:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x105e9:    74 05                           	je 0x105f0 <function_105f0>
; data inside code section at 0x105eb -- 0x105ec
0x105eb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x105ec -- 0x105ed
; data inside code section at 0x105ed -- 0x105f0
0x105ed:    ff ff ff                                           |...             |
; function: function_105f0 at 0x105f0 -- 0x105f2
0x105f0:    c9                              	leave 
0x105f1:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriter7CVarIntIjEEvRT_RKT0_li
; function: _Z9SerializeI11CHashWriter7CVarIntIjEEvRT_RKT0_li at 0x105f2 -- 0x105f3
0x105f2:    55                              	push ebp
; data inside code section at 0x105f3 -- 0x105f4
0x105f3:    89                                                 |.               |
; function: function_105f4 at 0x105f4 -- 0x10647
0x105f4:    e5 83                           	in eax, 0x83
0x105f6:    ec                              	in al, dx
0x105f7:    38 8b 45 08 89 45               	cmp byte ptr [ebx + 0x45890845], cl
0x105fd:    e4 8b                           	in al, 0x8b
0x105ff:    45                              	inc ebp
0x10600:    0c 89                           	or al, 0x89
0x10602:    45                              	inc ebp
0x10603:    e0 8b                           	loopne 0x10590
0x10605:    45                              	inc ebp
0x10606:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x1060c:    14 89                           	adc al, 0x89
0x1060e:    45                              	inc ebp
0x1060f:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x10612:    14 00                           	adc al, 0
0x10614:    00 00                           	add byte ptr [eax], al
0x10616:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10619:    31 c0                           	xor eax, eax
0x1061b:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1061e:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x10622:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10625:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10629:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1062c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10630:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10633:    89 04 24                        	mov dword ptr [esp], eax
0x10636:    e8 7f 34 01 00                  	call 0x23aba <unknown_23aba>
0x1063b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1063e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10645:    74 05                           	je 0x1064c <function_1064c>
; data inside code section at 0x10647 -- 0x10648
0x10647:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10648 -- 0x10649
; data inside code section at 0x10649 -- 0x1064c
0x10649:    ff ff ff                                           |...             |
; function: function_1064c at 0x1064c -- 0x1064e
0x1064c:    c9                              	leave 
0x1064d:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriter6CTxOutEvRT_RKT0_li
; function: _Z9SerializeI11CHashWriter6CTxOutEvRT_RKT0_li at 0x1064e -- 0x10660
0x1064e:    55                              	push ebp
0x1064f:    89 e5                           	mov ebp, esp
0x10651:    83 ec 38                        	sub esp, 0x38
0x10654:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10657:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1065a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1065d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x10660 -- 0x10662
0x10660:    8b 45                                              |.E              |
; function: function_10662 at 0x10662 -- 0x1069a
0x10662:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x10668:    14 89                           	adc al, 0x89
0x1066a:    45                              	inc ebp
0x1066b:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x1066e:    14 00                           	adc al, 0
0x10670:    00 00                           	add byte ptr [eax], al
0x10672:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10675:    31 c0                           	xor eax, eax
0x10677:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1067a:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1067e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10681:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10685:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10688:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1068c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1068f:    89 04 24                        	mov dword ptr [esp], eax
0x10692:    e8 d1 34 01 00                  	call 0x23b68 <unknown_23b68>
0x10697:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; data inside code section at 0x1069a -- 0x106a0
0x1069a:    65 33 05 14 00 00                                  |e3....          |
; function: function_106a0 at 0x106a0 -- 0x106a4
0x106a0:    00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
; dynamically linked function: __stack_chk_fail at 0x106a4 -- 0x106a5
; data inside code section at 0x106a5 -- 0x106a7
0x106a5:    ff ff                                              |..              |
; function: function_106a7 at 0x106a7 -- 0x106aa
0x106a7:    ff c9                           	dec ecx
0x106a9:    c3                              	ret 
; section: .text._ZN11CDataStreamrsI10CDiskTxPosEERS_RT_
; function: _ZN11CDataStreamrsI10CDiskTxPosEERS_RT_ at 0x106aa -- 0x106e8
0x106aa:    55                              	push ebp
0x106ab:    89 e5                           	mov ebp, esp
0x106ad:    83 ec 38                        	sub esp, 0x38
0x106b0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x106b3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x106b6:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x106b9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x106bc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x106c2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x106c5:    31 c0                           	xor eax, eax
0x106c7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x106ca:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x106cd:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x106d0:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x106d3:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x106d7:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x106db:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x106de:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x106e2:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x106e5:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x106e8 -- 0x106ea
0x106e8:    e8 7c                                              |.|              |
; function: function_106ea at 0x106ea -- 0x106fc
0x106ea:    35 01 00 8b 45                  	xor eax, 0x458b0001
0x106ef:    e4 8b                           	in al, 0x8b
0x106f1:    55                              	push ebp
0x106f2:    f4                              	hlt 
0x106f3:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x106fa:    74 05                           	je 0x10701 <function_10701>
; data inside code section at 0x106fc -- 0x106fd
0x106fc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x106fd -- 0x106fe
; data inside code section at 0x106fe -- 0x10701
0x106fe:    ff ff ff                                           |...             |
; function: function_10701 at 0x10701 -- 0x10703
0x10701:    c9                              	leave 
0x10702:    c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEC2ERKS6_
; function: _ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEC1ERKS6_ at 0x10704 -- 0x10713
0x10704:    55                              	push ebp
0x10705:    89 e5                           	mov ebp, esp
0x10707:    83 ec 28                        	sub esp, 0x28
0x1070a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1070d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10710:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0x10713 -- 0x10715
0x10713:    89 45                                              |.E              |
; function: function_10715 at 0x10715 -- 0x10737
0x10715:    e0 65                           	loopne 0x1077c <function_1077c>
0x10717:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x1071c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1071f:    31 c0                           	xor eax, eax
0x10721:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10724:    8b 10                           	mov edx, dword ptr [eax]
0x10726:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10729:    89 10                           	mov dword ptr [eax], edx
0x1072b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1072e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10735:    74 05                           	je 0x1073c <function_1073c>
; data inside code section at 0x10737 -- 0x10738
0x10737:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10738 -- 0x10739
; data inside code section at 0x10739 -- 0x1073c
0x10739:    ff ff ff                                           |...             |
; function: function_1073c at 0x1073c -- 0x1073e
0x1073c:    c9                              	leave 
0x1073d:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEE4baseEv at 0x1073e -- 0x10764
0x1073e:    55                              	push ebp
0x1073f:    89 e5                           	mov ebp, esp
0x10741:    83 ec 28                        	sub esp, 0x28
0x10744:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10747:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1074a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10750:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10753:    31 c0                           	xor eax, eax
0x10755:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10758:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1075b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10762:    74 05                           	je 0x10769 <function_10769>
; data inside code section at 0x10764 -- 0x10765
0x10764:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10765 -- 0x10766
; data inside code section at 0x10766 -- 0x10769
0x10766:    ff ff ff                                           |...             |
; function: function_10769 at 0x10769 -- 0x1076b
0x10769:    c9                              	leave 
0x1076a:    c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeI10CDiskTxPosEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeI10CDiskTxPosEEjRKT_ at 0x1076c -- 0x1076f
0x1076c:    55                              	push ebp
0x1076d:    89 e5                           	mov ebp, esp
; data inside code section at 0x1076f -- 0x10771
0x1076f:    83 ec                                              |..              |
; function: function_10771 at 0x10771 -- 0x1077c
0x10771:    38 8b 45 08 89 45               	cmp byte ptr [ebx + 0x45890845], cl
0x10777:    e4 8b                           	in al, 0x8b
0x10779:    45                              	inc ebp
0x1077a:    0c 89                           	or al, 0x89
; function: function_1077c at 0x1077c -- 0x107b4
0x1077c:    45                              	inc ebp
0x1077d:    e0 65                           	loopne 0x107e4
0x1077f:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x10784:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10787:    31 c0                           	xor eax, eax
0x10789:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1078c:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x1078f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10792:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x10795:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x10799:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1079d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x107a0:    89 04 24                        	mov dword ptr [esp], eax
0x107a3:    e8 df 35 01 00                  	call 0x23d87 <unknown_23d87>
0x107a8:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x107ab:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x107b2:    74 05                           	je 0x107b9 <function_107b9>
; data inside code section at 0x107b4 -- 0x107b5
0x107b4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x107b5 -- 0x107b6
; data inside code section at 0x107b6 -- 0x107b9
0x107b6:    ff ff ff                                           |...             |
; function: function_107b9 at 0x107b9 -- 0x107bb
0x107b9:    c9                              	leave 
0x107ba:    c3                              	ret 
; section: .text._ZN11CDataStreamlsI10CDiskTxPosEERS_RKT_
; function: _ZN11CDataStreamlsI10CDiskTxPosEERS_RKT_ at 0x107bc -- 0x107e2
0x107bc:    55                              	push ebp
0x107bd:    89 e5                           	mov ebp, esp
0x107bf:    83 ec 38                        	sub esp, 0x38
0x107c2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x107c5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x107c8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x107cb:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x107ce:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x107d4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x107d7:    31 c0                           	xor eax, eax
0x107d9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x107dc:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x107df:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x107e2 -- 0x107e3
0x107e2:    8b                                                 |.               |
; function: function_107e3 at 0x107e3 -- 0x107e4
0x107e3:    40                              	inc eax
; data inside code section at 0x107e4 -- 0x107fe
0x107e4:    14 89 54 24 0c 89 44 24  08 8b 45 e0 89 44 24 04   |..T$..D$..E..D$.|
0x107f4:    8b 45 e4 89 04 24 e8 27  36 01                     |.E...$.'6.      |
; function: function_107fe at 0x107fe -- 0x1080e
0x107fe:    00 8b 45 e4 8b 55               	add byte ptr [ebx + 0x558be445], cl
0x10804:    f4                              	hlt 
0x10805:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1080c:    74 05                           	je 0x10813 <function_10813>
; data inside code section at 0x1080e -- 0x1080f
0x1080e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1080f -- 0x10810
; data inside code section at 0x10810 -- 0x10813
0x10810:    ff ff ff                                           |...             |
; function: function_10813 at 0x10813 -- 0x10815
0x10813:    c9                              	leave 
0x10814:    c3                              	ret 
; section: .text._ZNSt4pairIcSsEC2ERKcRKSs
; function: _ZNSt4pairIcSsEC1ERKcRKSs at 0x10816 -- 0x1082e
0x10816:    55                              	push ebp
0x10817:    89 e5                           	mov ebp, esp
0x10819:    83 ec 38                        	sub esp, 0x38
0x1081c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1081f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10822:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10825:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10828:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1082b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
; data inside code section at 0x1082e -- 0x1082f
0x1082e:    65                                                 |e               |
; function: function_1082f at 0x1082f -- 0x10854
0x1082f:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x10834:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10837:    31 c0                           	xor eax, eax
0x10839:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1083c:    0f b6 10                        	movzx edx, byte ptr [eax]
0x1083f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10842:    88 10                           	mov byte ptr [eax], dl
0x10844:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10847:    8d 50 04                        	lea edx, [eax + 4]
0x1084a:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1084d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10851:    89 14 24                        	mov dword ptr [esp], edx
; function: function_10854 at 0x10854 -- 0x10855
; dynamically linked function: _ZNSsC1ERKSs at 0x10855 -- 0x10856
; data inside code section at 0x10856 -- 0x1085c
0x10856:    ff ff ff 8b 45 f4                                  |....E.          |
; function: function_1085c at 0x1085c -- 0x10865
0x1085c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10863:    74 05                           	je 0x1086a <function_1086a>
; data inside code section at 0x10865 -- 0x10866
0x10865:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10866 -- 0x10867
; data inside code section at 0x10867 -- 0x1086a
0x10867:    ff ff ff                                           |...             |
; function: function_1086a at 0x1086a -- 0x1086c
0x1086a:    c9                              	leave 
0x1086b:    c3                              	ret 
; section: .text._ZN13CLevelDBBatch5WriteISt4pairIcSsEcEEvRKT_RKT0_
; function: _ZN13CLevelDBBatch5WriteISt4pairIcSsEcEEvRKT_RKT0_ at 0x1086c -- 0x1086d
0x1086c:    55                              	push ebp
; function: function_1086d at 0x1086d -- 0x10890
0x1086d:    89 e5                           	mov ebp, esp
0x1086f:    53                              	push ebx
0x10870:    83 ec 74                        	sub esp, 0x74
0x10873:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10876:    89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x10879:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1087c:    89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x1087f:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10882:    89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x10885:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1088b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1088e:    31 c0                           	xor eax, eax
; data inside code section at 0x10890 -- 0x10892
0x10890:    c7 44                                              |.D              |
; function: function_10892 at 0x10892 -- 0x108d3
0x10892:    24 08                           	and al, 8
0x10894:    60                              	pushal 
0x10895:    90                              	nop 
0x10896:    0f 00 c7                        	sldt edi
0x10899:    44                              	inc esp
0x1089a:    24 04                           	and al, 4
0x1089c:    02 00                           	add al, byte ptr [eax]
0x1089e:    00 00                           	add byte ptr [eax], al
0x108a0:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x108a3:    89 04 24                        	mov dword ptr [esp], eax
0x108a6:    e8 9d 44 00 00                  	call 0x14d48 <function_14d48>
0x108ab:    8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x108ae:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x108b2:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x108b5:    89 04 24                        	mov dword ptr [esp], eax
0x108b8:    e8 af 09 01 00                  	call 0x2126c <unknown_2126c>
0x108bd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x108c1:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x108c4:    89 04 24                        	mov dword ptr [esp], eax
0x108c7:    e8 de 47 00 00                  	call 0x150aa <function_150aa>
0x108cc:    8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x108cf:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0x108d3 -- 0x108d4
0x108d3:    8d                                                 |.               |
; function: function_108d4 at 0x108d4 -- 0x109a6
0x108d4:    45                              	inc ebp
0x108d5:    ac                              	lodsb al, byte ptr [esi]
0x108d6:    89 04 24                        	mov dword ptr [esp], eax
0x108d9:    e8 de 09 01 00                  	call 0x212bc <unknown_212bc>
0x108de:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x108e1:    89 04 24                        	mov dword ptr [esp], eax
0x108e4:    e8 83 47 00 00                  	call 0x1506c <function_1506c>
0x108e9:    89 c3                           	mov ebx, eax
0x108eb:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x108f3:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x108f6:    89 04 24                        	mov dword ptr [esp], eax
0x108f9:    e8 f6 47 00 00                  	call 0x150f4 <function_150f4>
0x108fe:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x10902:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10906:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x10909:    89 04 24                        	mov dword ptr [esp], eax
0x1090c:    e8 4d 74 00 00                  	call 0x17d5e <function_17d5e>
0x10911:    c7 44 24 08 60 90 0f 00         	mov dword ptr [esp + 8], 0xf9060
0x10919:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x10921:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10924:    89 04 24                        	mov dword ptr [esp], eax
0x10927:    e8 1c 44 00 00                  	call 0x14d48 <function_14d48>
0x1092c:    8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x1092f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10933:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10936:    89 04 24                        	mov dword ptr [esp], eax
0x10939:    e8 7a f4 00 00                  	call 0x1fdb8 <unknown_1fdb8>
0x1093e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10942:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10945:    89 04 24                        	mov dword ptr [esp], eax
0x10948:    e8 5d 47 00 00                  	call 0x150aa <function_150aa>
0x1094d:    8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x10950:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10954:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10957:    89 04 24                        	mov dword ptr [esp], eax
0x1095a:    e8 af f4 00 00                  	call 0x1fe0e <unknown_1fe0e>
0x1095f:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10962:    89 04 24                        	mov dword ptr [esp], eax
0x10965:    e8 02 47 00 00                  	call 0x1506c <function_1506c>
0x1096a:    89 c3                           	mov ebx, eax
0x1096c:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x10974:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x10977:    89 04 24                        	mov dword ptr [esp], eax
0x1097a:    e8 75 47 00 00                  	call 0x150f4 <function_150f4>
0x1097f:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x10983:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10987:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x1098a:    89 04 24                        	mov dword ptr [esp], eax
0x1098d:    e8 cc 73 00 00                  	call 0x17d5e <function_17d5e>
0x10992:    8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x10995:    8d 55 ec                        	lea edx, [ebp - 0x14]
0x10998:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1099c:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x1099f:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x109a3:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x109a6 -- 0x109a7
0x109a6:    e8                                                 |.               |
; dynamically linked function: _ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_ at 0x109a7 -- 0x109a8
; data inside code section at 0x109a8 -- 0x109aa
0x109a8:    ff ff                                              |..              |
; function: function_109aa at 0x109aa -- 0x109cf
0x109aa:    ff 8d 45 c8 89 04               	dec dword ptr [ebp + 0x489c845]
0x109b0:    24 e8                           	and al, 0xe8
0x109b2:    14 45                           	adc al, 0x45
0x109b4:    00 00                           	add byte ptr [eax], al
0x109b6:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x109b9:    89 04 24                        	mov dword ptr [esp], eax
0x109bc:    e8 09 45 00 00                  	call 0x14eca
0x109c1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x109c4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x109cb:    74 2d                           	je 0x109fa <function_109fa>
0x109cd:    eb 26                           	jmp 0x109f5 <function_109f5>
; function: function_109cf at 0x109cf -- 0x109de
0x109cf:    89 c3                           	mov ebx, eax
0x109d1:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x109d4:    89 04 24                        	mov dword ptr [esp], eax
0x109d7:    e8 ee 44 00 00                  	call 0x14eca
0x109dc:    eb 02                           	jmp 0x109e0 <function_109e0>
; function: function_109de at 0x109de -- 0x109e0
0x109de:    89 c3                           	mov ebx, eax
; function: function_109e0 at 0x109e0 -- 0x109f0
0x109e0:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x109e3:    89 04 24                        	mov dword ptr [esp], eax
0x109e6:    e8 df 44 00 00                  	call 0x14eca
0x109eb:    89 d8                           	mov eax, ebx
0x109ed:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x109f0 -- 0x109f1
0x109f0:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x109f1 -- 0x109f2
; data inside code section at 0x109f2 -- 0x109f5
0x109f2:    ff ff ff                                           |...             |
; function: function_109f5 at 0x109f5 -- 0x109f6
; dynamically linked function: __stack_chk_fail at 0x109f6 -- 0x109f7
; data inside code section at 0x109f7 -- 0x109fa
0x109f7:    ff ff ff                                           |...             |
; function: function_109fa at 0x109fa -- 0x10a00
0x109fa:    83 c4 74                        	add esp, 0x74
0x109fd:    5b                              	pop ebx
0x109fe:    5d                              	pop ebp
0x109ff:    c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeISt4pairIcSsEEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeISt4pairIcSsEEEjRKT_ at 0x10a00 -- 0x10a48
0x10a00:    55                              	push ebp
0x10a01:    89 e5                           	mov ebp, esp
0x10a03:    83 ec 38                        	sub esp, 0x38
0x10a06:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10a09:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10a0c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10a0f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10a12:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10a18:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10a1b:    31 c0                           	xor eax, eax
0x10a1d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10a20:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x10a23:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10a26:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x10a29:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x10a2d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10a31:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10a34:    89 04 24                        	mov dword ptr [esp], eax
0x10a37:    e8 8a 36 01 00                  	call 0x240c6 <unknown_240c6>
0x10a3c:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10a3f:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10a46:    74 05                           	je 0x10a4d <function_10a4d>
; data inside code section at 0x10a48 -- 0x10a49
0x10a48:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10a49 -- 0x10a4a
; data inside code section at 0x10a4a -- 0x10a4d
0x10a4a:    ff ff ff                                           |...             |
; function: function_10a4d at 0x10a4d -- 0x10a4f
0x10a4d:    c9                              	leave 
0x10a4e:    c3                              	ret 
; section: .text._ZN11CDataStreamlsISt4pairIcSsEEERS_RKT_
; function: _ZN11CDataStreamlsISt4pairIcSsEEERS_RKT_ at 0x10a50 -- 0x10a96
0x10a50:    55                              	push ebp
0x10a51:    89 e5                           	mov ebp, esp
0x10a53:    83 ec 38                        	sub esp, 0x38
0x10a56:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10a59:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10a5c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10a5f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10a62:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10a68:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10a6b:    31 c0                           	xor eax, eax
0x10a6d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10a70:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x10a73:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10a76:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x10a79:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x10a7d:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10a81:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10a84:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10a88:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10a8b:    89 04 24                        	mov dword ptr [esp], eax
0x10a8e:    e8 fd 36 01 00                  	call 0x24190 <unknown_24190>
0x10a93:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_10a96 at 0x10a96 -- 0x10aa2
0x10a96:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10a99:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10aa0:    74 05                           	je 0x10aa7 <function_10aa7>
; data inside code section at 0x10aa2 -- 0x10aa3
0x10aa2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10aa3 -- 0x10aa4
; data inside code section at 0x10aa4 -- 0x10aa7
0x10aa4:    ff ff ff                                           |...             |
; function: function_10aa7 at 0x10aa7 -- 0x10aa9
0x10aa7:    c9                              	leave 
0x10aa8:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamc7uint256EvRT_RKSt4pairIT0_T1_Eii
; function: _Z9SerializeI11CDataStreamc7uint256EvRT_RKSt4pairIT0_T1_Eii at 0x10aa9 -- 0x10b27
0x10aa9:    55                              	push ebp
0x10aaa:    89 e5                           	mov ebp, esp
0x10aac:    83 ec 38                        	sub esp, 0x38
0x10aaf:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10ab2:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10ab5:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10ab8:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10abb:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10abe:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10ac1:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x10ac4:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x10ac7:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10acd:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10ad0:    31 c0                           	xor eax, eax
0x10ad2:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10ad5:    0f b6 00                        	movzx eax, byte ptr [eax]
0x10ad8:    0f be c0                        	movsx eax, al
0x10adb:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x10ade:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x10ae2:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x10ae5:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x10ae9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10aed:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10af0:    89 04 24                        	mov dword ptr [esp], eax
0x10af3:    e8 82 29 01 00                  	call 0x2347a <unknown_2347a>
0x10af8:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10afb:    8d 50 04                        	lea edx, [eax + 4]
0x10afe:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x10b01:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x10b05:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10b08:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10b0c:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x10b10:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10b13:    89 04 24                        	mov dword ptr [esp], eax
0x10b16:    e8 b5 29 01 00                  	call 0x234d0 <unknown_234d0>
0x10b1b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10b1e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10b25:    74 05                           	je 0x10b2c <function_10b2c>
; data inside code section at 0x10b27 -- 0x10b28
0x10b27:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10b28 -- 0x10b29
; data inside code section at 0x10b29 -- 0x10b2c
0x10b29:    ff ff ff                                           |...             |
; function: function_10b2c at 0x10b2c -- 0x10b2e
0x10b2c:    c9                              	leave 
0x10b2d:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream15CDiskBlockIndexEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream15CDiskBlockIndexEvRT_RT0_li at 0x10b2e -- 0x10b83
0x10b2e:    55                              	push ebp
0x10b2f:    89 e5                           	mov ebp, esp
0x10b31:    83 ec 38                        	sub esp, 0x38
0x10b34:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10b37:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10b3a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10b3d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10b40:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10b43:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10b46:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x10b49:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x10b4c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10b52:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10b55:    31 c0                           	xor eax, eax
0x10b57:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x10b5a:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x10b5e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10b61:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10b65:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10b68:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10b6c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10b6f:    89 04 24                        	mov dword ptr [esp], eax
0x10b72:    e8 7d 37 01 00                  	call 0x242f4 <unknown_242f4>
0x10b77:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10b7a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10b81:    74 05                           	je 0x10b88 <function_10b88>
; data inside code section at 0x10b83 -- 0x10b84
0x10b83:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10b84 -- 0x10b85
; data inside code section at 0x10b85 -- 0x10b88
0x10b85:    ff ff ff                                           |...             |
; function: function_10b88 at 0x10b88 -- 0x10b8a
0x10b88:    c9                              	leave 
0x10b89:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_
; function: _ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_ at 0x10b8a -- 0x10bb0
0x10b8a:    55                              	push ebp
0x10b8b:    89 e5                           	mov ebp, esp
0x10b8d:    83 ec 28                        	sub esp, 0x28
0x10b90:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10b93:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10b96:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10b9c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10b9f:    31 c0                           	xor eax, eax
0x10ba1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10ba4:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10ba7:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10bae:    74 05                           	je 0x10bb5 <function_10bb5>
; data inside code section at 0x10bb0 -- 0x10bb1
0x10bb0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10bb1 -- 0x10bb2
; data inside code section at 0x10bb2 -- 0x10bb5
0x10bb2:    ff ff ff                                           |...             |
; function: function_10bb5 at 0x10bb5 -- 0x10bb7
0x10bb5:    c9                              	leave 
0x10bb6:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC2Ev
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1Ev at 0x10bb8 -- 0x10c03
0x10bb8:    55                              	push ebp
0x10bb9:    89 e5                           	mov ebp, esp
0x10bbb:    83 ec 38                        	sub esp, 0x38
0x10bbe:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10bc1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10bc4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10bca:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10bcd:    31 c0                           	xor eax, eax
0x10bcf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10bd2:    89 04 24                        	mov dword ptr [esp], eax
0x10bd5:    e8 12 7c 00 00                  	call 0x187ec <function_187ec>
0x10bda:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10bdd:    c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x10be3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10be6:    c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x10bed:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10bf0:    c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x10bf7:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10bfa:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10c01:    74 05                           	je 0x10c08 <function_10c08>
; data inside code section at 0x10c03 -- 0x10c04
0x10c03:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10c04 -- 0x10c05
; data inside code section at 0x10c05 -- 0x10c08
0x10c05:    ff ff ff                                           |...             |
; function: function_10c08 at 0x10c08 -- 0x10c0a
0x10c08:    c9                              	leave 
0x10c09:    c3                              	ret 
; section: .text._ZSt11__addressofIcEPT_RS0_
; function: _ZSt11__addressofIcEPT_RS0_ at 0x10c0a -- 0x10c30
0x10c0a:    55                              	push ebp
0x10c0b:    89 e5                           	mov ebp, esp
0x10c0d:    83 ec 28                        	sub esp, 0x28
0x10c10:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10c13:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10c16:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10c1c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10c1f:    31 c0                           	xor eax, eax
0x10c21:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10c24:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10c27:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10c2e:    74 05                           	je 0x10c35 <function_10c35>
; data inside code section at 0x10c30 -- 0x10c31
0x10c30:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10c31 -- 0x10c32
; data inside code section at 0x10c32 -- 0x10c35
0x10c32:    ff ff ff                                           |...             |
; function: function_10c35 at 0x10c35 -- 0x10c37
0x10c35:    c9                              	leave 
0x10c36:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC2ERKS1_
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1ERKS1_ at 0x10c38 -- 0x10c90
0x10c38:    55                              	push ebp
0x10c39:    89 e5                           	mov ebp, esp
0x10c3b:    83 ec 38                        	sub esp, 0x38
0x10c3e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10c41:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10c44:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10c47:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10c4a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10c50:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10c53:    31 c0                           	xor eax, eax
0x10c55:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10c58:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10c5c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10c5f:    89 04 24                        	mov dword ptr [esp], eax
0x10c62:    e8 81 3b 01 00                  	call 0x247e8 <unknown_247e8>
0x10c67:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10c6a:    c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x10c70:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10c73:    c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x10c7a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10c7d:    c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x10c84:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10c87:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10c8e:    74 05                           	je 0x10c95 <function_10c95>
; data inside code section at 0x10c90 -- 0x10c91
0x10c90:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10c91 -- 0x10c92
; data inside code section at 0x10c92 -- 0x10c95
0x10c92:    ff ff ff                                           |...             |
; function: function_10c95 at 0x10c95 -- 0x10c97
0x10c95:    c9                              	leave 
0x10c96:    c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE19_M_range_initializeIPKcEEvT_S6_St20forward_iterator_tag
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE19_M_range_initializeIPKcEEvT_S6_St20forward_iterator_tag at 0x10c98 -- 0x10d3e
0x10c98:    55                              	push ebp
0x10c99:    89 e5                           	mov ebp, esp
0x10c9b:    83 ec 38                        	sub esp, 0x38
0x10c9e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10ca1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10ca4:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10ca7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10caa:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10cad:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10cb0:    0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0x10cb4:    88 45 db                        	mov byte ptr [ebp - 0x25], al
0x10cb7:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10cbd:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10cc0:    31 c0                           	xor eax, eax
0x10cc2:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10cc5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10cc9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10ccc:    89 04 24                        	mov dword ptr [esp], eax
0x10ccf:    e8 15 3c 01 00                  	call 0x248e9 <unknown_248e9>
0x10cd4:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x10cd7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10cda:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x10cdd:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x10ce1:    89 04 24                        	mov dword ptr [esp], eax
0x10ce4:    e8 f5 0c 01 00                  	call 0x219de <unknown_219de>
0x10ce9:    89 c2                           	mov edx, eax
0x10ceb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10cee:    89 10                           	mov dword ptr [eax], edx
0x10cf0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10cf3:    8b 00                           	mov eax, dword ptr [eax]
0x10cf5:    89 c2                           	mov edx, eax
0x10cf7:    03 55 f0                        	add edx, dword ptr [ebp - 0x10]
0x10cfa:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10cfd:    89 50 08                        	mov dword ptr [eax + 8], edx
0x10d00:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10d03:    89 04 24                        	mov dword ptr [esp], eax
0x10d06:    e8 b9 d1 00 00                  	call 0x1dec4 <unknown_1dec4>
0x10d0b:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x10d0e:    8b 12                           	mov edx, dword ptr [edx]
0x10d10:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x10d14:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x10d18:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10d1b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10d1f:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10d22:    89 04 24                        	mov dword ptr [esp], eax
0x10d25:    e8 1e 3c 01 00                  	call 0x24948 <unknown_24948>
0x10d2a:    89 c2                           	mov edx, eax
0x10d2c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10d2f:    89 50 04                        	mov dword ptr [eax + 4], edx
0x10d32:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10d35:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10d3c:    74 05                           	je 0x10d43 <function_10d43>
; data inside code section at 0x10d3e -- 0x10d3f
0x10d3e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10d3f -- 0x10d40
; data inside code section at 0x10d40 -- 0x10d43
0x10d40:    ff ff ff                                           |...             |
; function: function_10d43 at 0x10d43 -- 0x10d45
0x10d43:    c9                              	leave 
0x10d44:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE11_M_allocateEj
; function: _ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE11_M_allocateEj at 0x10d46 -- 0x10d4f
0x10d46:    55                              	push ebp
0x10d47:    89 e5                           	mov ebp, esp
0x10d49:    83 ec 38                        	sub esp, 0x38
0x10d4c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x10d4f -- 0x10d50
0x10d4f:    89                                                 |.               |
; function: function_10d50 at 0x10d50 -- 0x10d6c
0x10d50:    45                              	inc ebp
0x10d51:    e4 8b                           	in al, 0x8b
0x10d53:    45                              	inc ebp
0x10d54:    0c 89                           	or al, 0x89
0x10d56:    45                              	inc ebp
0x10d57:    e0 65                           	loopne 0x10dbe
0x10d59:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x10d5e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10d61:    31 c0                           	xor eax, eax
0x10d63:    83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x10d67:    74 1c                           	je 0x10d85 <function_10d85>
0x10d69:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_10d6c at 0x10d6c -- 0x10d85
0x10d6c:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x10d74:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x10d77:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x10d7b:    89 04 24                        	mov dword ptr [esp], eax
0x10d7e:    e8 4f 3d 01 00                  	call 0x24ad2 <unknown_24ad2>
0x10d83:    eb 05                           	jmp 0x10d8a <function_10d8a>
; function: function_10d85 at 0x10d85 -- 0x10d8a
0x10d85:    b8 00 00 00 00                  	mov eax, 0
; function: function_10d8a at 0x10d8a -- 0x10d96
0x10d8a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10d8d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10d94:    74 05                           	je 0x10d9b <function_10d9b>
; data inside code section at 0x10d96 -- 0x10d97
0x10d96:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10d97 -- 0x10d98
; data inside code section at 0x10d98 -- 0x10d9b
0x10d98:    ff ff ff                                           |...             |
; function: function_10d9b at 0x10d9b -- 0x10d9d
0x10d9b:    c9                              	leave 
0x10d9c:    c3                              	ret 
; section: .text._ZN9__gnu_cxxneIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESC_
; function: _ZN9__gnu_cxxneIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESC_ at 0x10d9d -- 0x10da0
0x10d9d:    55                              	push ebp
0x10d9e:    89 e5                           	mov ebp, esp
; function: function_10da0 at 0x10da0 -- 0x10db9
0x10da0:    53                              	push ebx
0x10da1:    83 ec 34                        	sub esp, 0x34
0x10da4:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10da7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10daa:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10dad:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10db0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10db6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0x10db9 -- 0x10dba
0x10db9:    31                                                 |1               |
; function: function_10dba at 0x10dba -- 0x10de6
0x10dba:    c0 8b 45 e4 89 04 24            	ror byte ptr [ebx + 0x489e445], 0x24
0x10dc1:    e8 bf 3d 01 00                  	call 0x24b85 <unknown_24b85>
0x10dc6:    8b 18                           	mov ebx, dword ptr [eax]
0x10dc8:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10dcb:    89 04 24                        	mov dword ptr [esp], eax
0x10dce:    e8 b2 3d 01 00                  	call 0x24b85 <unknown_24b85>
0x10dd3:    8b 00                           	mov eax, dword ptr [eax]
0x10dd5:    39 c3                           	cmp ebx, eax
0x10dd7:    0f 95 c0                        	setne al
0x10dda:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10ddd:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10de4:    74 05                           	je 0x10deb <function_10deb>
; data inside code section at 0x10de6 -- 0x10de7
0x10de6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10de7 -- 0x10de8
; data inside code section at 0x10de8 -- 0x10deb
0x10de8:    ff ff ff                                           |...             |
; function: function_10deb at 0x10deb -- 0x10df1
0x10deb:    83 c4 34                        	add esp, 0x34
0x10dee:    5b                              	pop ebx
0x10def:    5d                              	pop ebp
0x10df0:    c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEppEv
; function: _ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEppEv at 0x10df2 -- 0x10df8
0x10df2:    55                              	push ebp
0x10df3:    89 e5                           	mov ebp, esp
0x10df5:    83 ec 28                        	sub esp, 0x28
; function: function_10df8 at 0x10df8 -- 0x10e25
0x10df8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10dfb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10dfe:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10e04:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10e07:    31 c0                           	xor eax, eax
0x10e09:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10e0c:    8b 00                           	mov eax, dword ptr [eax]
0x10e0e:    8d 50 01                        	lea edx, [eax + 1]
0x10e11:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10e14:    89 10                           	mov dword ptr [eax], edx
0x10e16:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10e19:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10e1c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10e23:    74 05                           	je 0x10e2a <function_10e2a>
; data inside code section at 0x10e25 -- 0x10e26
0x10e25:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10e26 -- 0x10e27
; data inside code section at 0x10e27 -- 0x10e2a
0x10e27:    ff ff ff                                           |...             |
; function: function_10e2a at 0x10e2a -- 0x10e2c
0x10e2a:    c9                              	leave 
0x10e2b:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEdeEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEdeEv at 0x10e2c -- 0x10e41
0x10e2c:    55                              	push ebp
0x10e2d:    89 e5                           	mov ebp, esp
0x10e2f:    83 ec 28                        	sub esp, 0x28
0x10e32:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10e35:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10e38:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10e3e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0x10e41 -- 0x10e42
0x10e41:    31                                                 |1               |
; function: function_10e42 at 0x10e42 -- 0x10e54
0x10e42:    c0 8b 45 e4 8b 00 8b            	ror byte ptr [ebx + 0x8be445], 0x8b
0x10e49:    55                              	push ebp
0x10e4a:    f4                              	hlt 
0x10e4b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10e52:    74 05                           	je 0x10e59 <function_10e59>
; data inside code section at 0x10e54 -- 0x10e55
0x10e54:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10e55 -- 0x10e56
; data inside code section at 0x10e56 -- 0x10e59
0x10e56:    ff ff ff                                           |...             |
; function: function_10e59 at 0x10e59 -- 0x10e5b
0x10e59:    c9                              	leave 
0x10e5a:    c3                              	ret 
; section: .text._ZNSs16_S_construct_auxIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcESt12__false_type
; function: _ZNSs16_S_construct_auxIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcESt12__false_type at 0x10e5b -- 0x10ea5
0x10e5b:    55                              	push ebp
0x10e5c:    89 e5                           	mov ebp, esp
0x10e5e:    83 ec 38                        	sub esp, 0x38
0x10e61:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10e64:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10e67:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10e6a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10e6d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10e70:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10e73:    0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0x10e77:    88 45 db                        	mov byte ptr [ebp - 0x25], al
0x10e7a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10e80:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10e83:    31 c0                           	xor eax, eax
0x10e85:    88 54 24 0c                     	mov byte ptr [esp + 0xc], dl
0x10e89:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10e8c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10e90:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10e93:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10e97:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10e9a:    89 04 24                        	mov dword ptr [esp], eax
0x10e9d:    e8 cf 3d 01 00                  	call 0x24c71 <unknown_24c71>
0x10ea2:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x10ea5 -- 0x10eaa
0x10ea5:    65 33 15 14 00                                     |e3...           |
; function: function_10eaa at 0x10eaa -- 0x10eae
0x10eaa:    00 00                           	add byte ptr [eax], al
0x10eac:    74 05                           	je 0x10eb3 <function_10eb3>
; data inside code section at 0x10eae -- 0x10eaf
0x10eae:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10eaf -- 0x10eb0
; data inside code section at 0x10eb0 -- 0x10eb3
0x10eb0:    ff ff ff                                           |...             |
; function: function_10eb3 at 0x10eb3 -- 0x10eb5
0x10eb3:    c9                              	leave 
0x10eb4:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
; function: _ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv at 0x10eb6 -- 0x10ebc
0x10eb6:    55                              	push ebp
0x10eb7:    89 e5                           	mov ebp, esp
0x10eb9:    83 ec 28                        	sub esp, 0x28
; data inside code section at 0x10ebc -- 0x10ebe
0x10ebc:    8b 45                                              |.E              |
; function: function_10ebe at 0x10ebe -- 0x10ede
0x10ebe:    08 89 45 e4 65 a1               	or byte ptr [ecx - 0x5e9a1bbb], cl
0x10ec4:    14 00                           	adc al, 0
0x10ec6:    00 00                           	add byte ptr [eax], al
0x10ec8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10ecb:    31 c0                           	xor eax, eax
0x10ecd:    b8 ff ff ff ff                  	mov eax, 0xffffffff
0x10ed2:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10ed5:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10edc:    74 05                           	je 0x10ee3 <function_10ee3>
; data inside code section at 0x10ede -- 0x10edf
0x10ede:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10edf -- 0x10ee0
; data inside code section at 0x10ee0 -- 0x10ee3
0x10ee0:    ff ff ff                                           |...             |
; function: function_10ee3 at 0x10ee3 -- 0x10ee5
0x10ee3:    c9                              	leave 
0x10ee4:    c3                              	ret 
; section: .text._ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_
; function: _ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_ at 0x10ee5 -- 0x10f5b
0x10ee5:    55                              	push ebp
0x10ee6:    89 e5                           	mov ebp, esp
0x10ee8:    83 ec 38                        	sub esp, 0x38
0x10eeb:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10eee:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10ef1:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10ef4:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10ef7:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10efa:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10efd:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x10f00:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x10f03:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10f09:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10f0c:    31 c0                           	xor eax, eax
0x10f0e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10f11:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x10f14:    eb 29                           	jmp 0x10f3f <_ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_+0x5a>
0x10f16:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x10f19:    89 04 24                        	mov dword ptr [esp], eax
0x10f1c:    e8 ce 0b 01 00                  	call 0x21aef <unknown_21aef>
0x10f21:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x10f24:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x10f28:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10f2c:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x10f2f:    89 04 24                        	mov dword ptr [esp], eax
0x10f32:    e8 1e d6 00 00                  	call 0x1e555 <unknown_1e555>
0x10f37:    83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x10f3b:    83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x10f3f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10f42:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x10f45:    0f 95 c0                        	setne al
0x10f48:    84 c0                           	test al, al
0x10f4a:    75 ca                           	jne 0x10f16 <_ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_+0x31>
0x10f4c:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x10f4f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x10f52:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x10f59:    74 05                           	je 0x10f60 <function_10f60>
; data inside code section at 0x10f5b -- 0x10f5c
0x10f5b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10f5c -- 0x10f5d
; data inside code section at 0x10f5d -- 0x10f60
0x10f5d:    ff ff ff                                           |...             |
; function: function_10f60 at 0x10f60 -- 0x10f62
0x10f60:    c9                              	leave 
0x10f61:    c3                              	ret 
; section: .text._ZN25zero_after_free_allocatorIcE10deallocateEPcj
; function: _ZN25zero_after_free_allocatorIcE10deallocateEPcj at 0x10f62 -- 0x10f7a
0x10f62:    55                              	push ebp
0x10f63:    89 e5                           	mov ebp, esp
0x10f65:    83 ec 38                        	sub esp, 0x38
0x10f68:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10f6b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10f6e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10f71:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10f74:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10f77:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
; data inside code section at 0x10f7a -- 0x10f7c
0x10f7a:    65 a1                                              |e.              |
; function: function_10f7c at 0x10f7c -- 0x10f98
0x10f7c:    14 00                           	adc al, 0
0x10f7e:    00 00                           	add byte ptr [eax], al
0x10f80:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10f83:    31 c0                           	xor eax, eax
0x10f85:    83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x10f89:    74 12                           	je 0x10f9d <function_10f9d>
0x10f8b:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10f8e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10f92:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10f95:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x10f98 -- 0x10f99
0x10f98:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x10f99 -- 0x10f9a
; data inside code section at 0x10f9a -- 0x10f9d
0x10f9a:    ff ff ff                                           |...             |
; function: function_10f9d at 0x10f9d -- 0x10fc2
0x10f9d:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x10fa0:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x10fa4:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10fa7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x10fab:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10fae:    89 04 24                        	mov dword ptr [esp], eax
0x10fb1:    e8 60 3f 01 00                  	call 0x24f16 <unknown_24f16>
0x10fb6:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x10fb9:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x10fc0:    74 05                           	je 0x10fc7 <function_10fc7>
; data inside code section at 0x10fc2 -- 0x10fc3
0x10fc2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10fc3 -- 0x10fc4
; data inside code section at 0x10fc4 -- 0x10fc7
0x10fc4:    ff ff ff                                           |...             |
; function: function_10fc7 at 0x10fc7 -- 0x10fc9
0x10fc7:    c9                              	leave 
0x10fc8:    c3                              	ret 
; section: .text._ZSt13copy_backwardIPcS0_ET0_T_S2_S1_
; function: _ZSt13copy_backwardIPcS0_ET0_T_S2_S1_ at 0x10fc9 -- 0x11022
0x10fc9:    55                              	push ebp
0x10fca:    89 e5                           	mov ebp, esp
0x10fcc:    53                              	push ebx
0x10fcd:    83 ec 34                        	sub esp, 0x34
0x10fd0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x10fd3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x10fd6:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x10fd9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x10fdc:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x10fdf:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x10fe2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x10fe8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x10feb:    31 c0                           	xor eax, eax
0x10fed:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x10ff0:    89 04 24                        	mov dword ptr [esp], eax
0x10ff3:    e8 c6 3f 01 00                  	call 0x24fbe <unknown_24fbe>
0x10ff8:    89 c3                           	mov ebx, eax
0x10ffa:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x10ffd:    89 04 24                        	mov dword ptr [esp], eax
0x11000:    e8 b9 3f 01 00                  	call 0x24fbe <unknown_24fbe>
0x11005:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x11008:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1100c:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x11010:    89 04 24                        	mov dword ptr [esp], eax
0x11013:    e8 db 3f 01 00                  	call 0x24ff3 <unknown_24ff3>
0x11018:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1101b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
; data inside code section at 0x11022 -- 0x11023
0x11022:    74                                                 |t               |
; function: function_11023 at 0x11023 -- 0x11024
; data inside code section at 0x11024 -- 0x11025
0x11024:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11025 -- 0x11026
; data inside code section at 0x11026 -- 0x11028
0x11026:    ff ff                                              |..              |
; function: function_11028 at 0x11028 -- 0x1102f
0x11028:    ff 83 c4 34 5b 5d               	inc dword ptr [ebx + 0x5d5b34c4]
0x1102e:    c3                              	ret 
; section: .text._ZNKSt6vectorIc25zero_after_free_allocatorIcEE12_M_check_lenEjPKc
; function: _ZNKSt6vectorIc25zero_after_free_allocatorIcEE12_M_check_lenEjPKc at 0x11030 -- 0x11082
0x11030:    55                              	push ebp
0x11031:    89 e5                           	mov ebp, esp
0x11033:    53                              	push ebx
0x11034:    83 ec 34                        	sub esp, 0x34
0x11037:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1103a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1103d:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11040:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11043:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11046:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11049:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1104f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11052:    31 c0                           	xor eax, eax
0x11054:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11057:    89 04 24                        	mov dword ptr [esp], eax
0x1105a:    e8 b5 d4 00 00                  	call 0x1e514 <unknown_1e514>
0x1105f:    89 c3                           	mov ebx, eax
0x11061:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11064:    89 04 24                        	mov dword ptr [esp], eax
0x11067:    e8 42 7f 00 00                  	call 0x18fae <function_18fae>
0x1106c:    89 da                           	mov edx, ebx
0x1106e:    29 c2                           	sub edx, eax
0x11070:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11073:    39 c2                           	cmp edx, eax
0x11075:    0f 92 c0                        	setb al
0x11078:    84 c0                           	test al, al
0x1107a:    74 0b                           	je 0x11087 <function_11087>
0x1107c:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1107f:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x11082 -- 0x11083
0x11082:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x11083 -- 0x11084
; data inside code section at 0x11084 -- 0x11087
0x11084:    ff ff ff                                           |...             |
; function: function_11087 at 0x11087 -- 0x1109f
0x11087:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1108a:    89 04 24                        	mov dword ptr [esp], eax
0x1108d:    e8 1c 7f 00 00                  	call 0x18fae <function_18fae>
0x11092:    89 c3                           	mov ebx, eax
0x11094:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11097:    89 04 24                        	mov dword ptr [esp], eax
0x1109a:    e8 0f 7f 00 00                  	call 0x18fae <function_18fae>
; data inside code section at 0x1109f -- 0x110a0
0x1109f:    89                                                 |.               |
; function: function_110a0 at 0x110a0 -- 0x110f7
0x110a0:    45                              	inc ebp
0x110a1:    ec                              	in al, dx
0x110a2:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x110a5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x110a9:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x110ac:    89 04 24                        	mov dword ptr [esp], eax
0x110af:    e8 18 40 01 00                  	call 0x250cc <unknown_250cc>
0x110b4:    8b 00                           	mov eax, dword ptr [eax]
0x110b6:    01 d8                           	add eax, ebx
0x110b8:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x110bb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x110be:    89 04 24                        	mov dword ptr [esp], eax
0x110c1:    e8 e8 7e 00 00                  	call 0x18fae <function_18fae>
0x110c6:    3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x110c9:    77 10                           	ja 0x110db <function_110a0+0x3b>
0x110cb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x110ce:    89 04 24                        	mov dword ptr [esp], eax
0x110d1:    e8 3e d4 00 00                  	call 0x1e514 <unknown_1e514>
0x110d6:    3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x110d9:    73 0d                           	jae 0x110e8 <function_110a0+0x48>
0x110db:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x110de:    89 04 24                        	mov dword ptr [esp], eax
0x110e1:    e8 2e d4 00 00                  	call 0x1e514 <unknown_1e514>
0x110e6:    eb 03                           	jmp 0x110eb <function_110a0+0x4b>
0x110e8:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x110eb:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x110ee:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x110f5:    74 05                           	je 0x110fc <function_110fc>
; data inside code section at 0x110f7 -- 0x110f8
0x110f7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x110f8 -- 0x110f9
; data inside code section at 0x110f9 -- 0x110fc
0x110f9:    ff ff ff                                           |...             |
; function: function_110fc at 0x110fc -- 0x11102
0x110fc:    83 c4 34                        	add esp, 0x34
0x110ff:    5b                              	pop ebx
0x11100:    5d                              	pop ebp
0x11101:    c3                              	ret 
; section: .text._ZSt22__uninitialized_move_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_
; function: _ZSt22__uninitialized_move_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_ at 0x11102 -- 0x1110e
0x11102:    55                              	push ebp
0x11103:    89 e5                           	mov ebp, esp
0x11105:    83 ec 38                        	sub esp, 0x38
0x11108:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1110b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0x1110e -- 0x11110
0x1110e:    8b 45                                              |.E              |
; function: function_11110 at 0x11110 -- 0x11157
0x11110:    0c 89                           	or al, 0x89
0x11112:    45                              	inc ebp
0x11113:    e0 8b                           	loopne 0x110a0 <function_110a0>
0x11115:    45                              	inc ebp
0x11116:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x1111c:    14 89                           	adc al, 0x89
0x1111e:    45                              	inc ebp
0x1111f:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x11122:    14 00                           	adc al, 0
0x11124:    00 00                           	add byte ptr [eax], al
0x11126:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11129:    31 c0                           	xor eax, eax
0x1112b:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1112e:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x11132:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11135:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x11139:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1113c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11140:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11143:    89 04 24                        	mov dword ptr [esp], eax
0x11146:    e8 9c 0e 01 00                  	call 0x21fe7 <unknown_21fe7>
0x1114b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1114e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11155:    74 05                           	je 0x1115c <function_1115c>
; data inside code section at 0x11157 -- 0x11158
0x11157:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11158 -- 0x11159
; data inside code section at 0x11159 -- 0x1115c
0x11159:    ff ff ff                                           |...             |
; function: function_1115c at 0x1115c -- 0x1115e
0x1115c:    c9                              	leave 
0x1115d:    c3                              	ret 
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag at 0x1115e -- 0x11162
0x1115e:    55                              	push ebp
0x1115f:    89 e5                           	mov ebp, esp
0x11161:    56                              	push esi
; function: function_11162 at 0x11162 -- 0x111e0
0x11162:    53                              	push ebx
0x11163:    83 ec 60                        	sub esp, 0x60
0x11166:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11169:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x1116c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1116f:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x11172:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11175:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x11178:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1117b:    89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x1117e:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x11182:    88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x11185:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1118b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1118e:    31 c0                           	xor eax, eax
0x11190:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x11193:    3b 45 b8                        	cmp eax, dword ptr [ebp - 0x48]
0x11196:    0f 84 7b 03 00 00               	je 0x11517 <function_11517>
0x1119c:    8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x1119f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x111a3:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x111a6:    89 04 24                        	mov dword ptr [esp], eax
0x111a9:    e8 01 3c 01 00                  	call 0x24daf <unknown_24daf>
0x111ae:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x111b1:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x111b4:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x111b7:    89 c2                           	mov edx, eax
0x111b9:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x111bc:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x111bf:    89 d1                           	mov ecx, edx
0x111c1:    29 c1                           	sub ecx, eax
0x111c3:    89 c8                           	mov eax, ecx
0x111c5:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x111c8:    0f 82 a7 01 00 00               	jb 0x11375 <function_11375>
0x111ce:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x111d1:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x111d4:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x111d8:    89 04 24                        	mov dword ptr [esp], eax
0x111db:    e8 e8 7d 00 00                  	call 0x18fc8
; data inside code section at 0x111e0 -- 0x111e2
0x111e0:    83 ec                                              |..              |
; function: function_111e2 at 0x111e2 -- 0x1121e
0x111e2:    04 8d                           	add al, 0x8d
0x111e4:    45                              	inc ebp
0x111e5:    c0 89 44 24 04 8d 45            	ror byte ptr [ecx - 0x72fbdbbc], 0x45
0x111ec:    cc                              	int3 
0x111ed:    89 04 24                        	mov dword ptr [esp], eax
0x111f0:    e8 15 81 00 00                  	call 0x1930a <function_1930a>
0x111f5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x111f8:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x111fb:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x111fe:    89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x11201:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11204:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x11207:    0f 86 9b 00 00 00               	jbe 0x112a8 <function_112a8>
0x1120d:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11210:    89 04 24                        	mov dword ptr [esp], eax
0x11213:    e8 72 d1 00 00                  	call 0x1e38a <unknown_1e38a>
0x11218:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1121b:    8b 4a 04                        	mov ecx, dword ptr [edx + 4]
; data inside code section at 0x1121e -- 0x11220
0x1121e:    8b 55                                              |.U              |
; function: function_11220 at 0x11220 -- 0x11266
0x11220:    c4 8b 52 04 8b 5d               	les ecx, ptr [ebx + 0x5d8b0452]
0x11226:    c4 8b 5b 04 8b 75               	les ecx, ptr [ebx + 0x758b045b]
0x1122c:    e0 f7                           	loopne 0x11225
0x1122e:    de 01                           	fiadd word ptr [ecx]
0x11230:    f3 89 44 24 0c                  	mov dword ptr [esp + 0xc], eax
0x11235:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x11239:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1123d:    89 1c 24                        	mov dword ptr [esp], ebx
0x11240:    e8 1b 10 01 00                  	call 0x22260 <unknown_22260>
0x11245:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11248:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x1124b:    89 c2                           	mov edx, eax
0x1124d:    03 55 e0                        	add edx, dword ptr [ebp - 0x20]
0x11250:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11253:    89 50 04                        	mov dword ptr [eax + 4], edx
0x11256:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11259:    f7 d8                           	neg eax
0x1125b:    89 c3                           	mov ebx, eax
0x1125d:    03 5d e8                        	add ebx, dword ptr [ebp - 0x18]
0x11260:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x11263:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x11266 -- 0x1126a
0x11266:    e8 b9 d5 00                                        |....            |
; function: function_1126a at 0x1126a -- 0x112a8
0x1126a:    00 8b 00 8b 55 e8               	add byte ptr [ebx - 0x17aa7500], cl
0x11270:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x11274:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x11278:    89 04 24                        	mov dword ptr [esp], eax
0x1127b:    e8 a7 0e 01 00                  	call 0x22127 <unknown_22127>
0x11280:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x11283:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x11286:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1128a:    8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x1128d:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x11291:    8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x11294:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11298:    89 04 24                        	mov dword ptr [esp], eax
0x1129b:    e8 d5 3f 01 00                  	call 0x25275 <unknown_25275>
0x112a0:    83 ec 04                        	sub esp, 4
0x112a3:    e9 6f 02 00 00                  	jmp 0x11517 <function_11517>
; function: function_112a8 at 0x112a8 -- 0x11375
0x112a8:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x112ab:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x112ae:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x112b1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x112b5:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x112b8:    89 04 24                        	mov dword ptr [esp], eax
0x112bb:    e8 31 40 01 00                  	call 0x252f1 <unknown_252f1>
0x112c0:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x112c3:    89 04 24                        	mov dword ptr [esp], eax
0x112c6:    e8 bf d0 00 00                  	call 0x1e38a <unknown_1e38a>
0x112cb:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x112ce:    8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x112d1:    8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x112d4:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x112d8:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x112dc:    8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x112df:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x112e3:    89 14 24                        	mov dword ptr [esp], edx
0x112e6:    e8 23 3b 01 00                  	call 0x24e0e <unknown_24e0e>
0x112eb:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x112ee:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x112f1:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x112f4:    8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x112f7:    89 cb                           	mov ebx, ecx
0x112f9:    29 d3                           	sub ebx, edx
0x112fb:    89 da                           	mov edx, ebx
0x112fd:    01 c2                           	add edx, eax
0x112ff:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11302:    89 50 04                        	mov dword ptr [eax + 4], edx
0x11305:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11308:    89 04 24                        	mov dword ptr [esp], eax
0x1130b:    e8 7a d0 00 00                  	call 0x1e38a <unknown_1e38a>
0x11310:    89 c3                           	mov ebx, eax
0x11312:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11315:    8b 70 04                        	mov esi, dword ptr [eax + 4]
0x11318:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x1131b:    89 04 24                        	mov dword ptr [esp], eax
0x1131e:    e8 01 d5 00 00                  	call 0x1e824 <unknown_1e824>
0x11323:    8b 00                           	mov eax, dword ptr [eax]
0x11325:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x11329:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x1132d:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x11330:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11334:    89 04 24                        	mov dword ptr [esp], eax
0x11337:    e8 24 0f 01 00                  	call 0x22260 <unknown_22260>
0x1133c:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1133f:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x11342:    89 c2                           	mov edx, eax
0x11344:    03 55 e4                        	add edx, dword ptr [ebp - 0x1c]
0x11347:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1134a:    89 50 04                        	mov dword ptr [eax + 4], edx
0x1134d:    8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x11350:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x11353:    8b 4d c0                        	mov ecx, dword ptr [ebp - 0x40]
0x11356:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x1135a:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1135e:    8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x11361:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11365:    89 04 24                        	mov dword ptr [esp], eax
0x11368:    e8 08 3f 01 00                  	call 0x25275 <unknown_25275>
0x1136d:    83 ec 04                        	sub esp, 4
0x11370:    e9 a2 01 00 00                  	jmp 0x11517 <function_11517>
; function: function_11375 at 0x11375 -- 0x11486
0x11375:    c7 44 24 08 f1 3e 00 00         	mov dword ptr [esp + 8], 0x3ef1 ; "vector::_M_range_insert"
0x1137d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11380:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11384:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11387:    89 04 24                        	mov dword ptr [esp], eax
0x1138a:    e8 ff 0d 01 00                  	call 0x2218e <unknown_2218e>
0x1138f:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x11392:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11395:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x11398:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1139c:    89 04 24                        	mov dword ptr [esp], eax
0x1139f:    e8 00 0b 01 00                  	call 0x21ea4 <unknown_21ea4>
0x113a4:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x113a7:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x113aa:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x113ad:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x113b0:    89 04 24                        	mov dword ptr [esp], eax
0x113b3:    e8 d2 cf 00 00                  	call 0x1e38a <unknown_1e38a>
0x113b8:    89 c3                           	mov ebx, eax
0x113ba:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x113bd:    89 04 24                        	mov dword ptr [esp], eax
0x113c0:    e8 5f d4 00 00                  	call 0x1e824 <unknown_1e824>
0x113c5:    8b 10                           	mov edx, dword ptr [eax]
0x113c7:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x113ca:    8b 00                           	mov eax, dword ptr [eax]
0x113cc:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x113d0:    8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x113d3:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x113d7:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x113db:    89 04 24                        	mov dword ptr [esp], eax
0x113de:    e8 7d 0e 01 00                  	call 0x22260 <unknown_22260>
0x113e3:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x113e6:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x113e9:    89 04 24                        	mov dword ptr [esp], eax
0x113ec:    e8 99 cf 00 00                  	call 0x1e38a <unknown_1e38a>
0x113f1:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x113f5:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x113f8:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x113fc:    8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x113ff:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11403:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x11406:    89 04 24                        	mov dword ptr [esp], eax
0x11409:    e8 00 3a 01 00                  	call 0x24e0e <unknown_24e0e>
0x1140e:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11411:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11414:    89 04 24                        	mov dword ptr [esp], eax
0x11417:    e8 6e cf 00 00                  	call 0x1e38a <unknown_1e38a>
0x1141c:    89 c3                           	mov ebx, eax
0x1141e:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11421:    8b 70 04                        	mov esi, dword ptr [eax + 4]
0x11424:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x11427:    89 04 24                        	mov dword ptr [esp], eax
0x1142a:    e8 f5 d3 00 00                  	call 0x1e824 <unknown_1e824>
0x1142f:    8b 00                           	mov eax, dword ptr [eax]
0x11431:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x11435:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x11438:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1143c:    89 74 24 04                     	mov dword ptr [esp + 4], esi
0x11440:    89 04 24                        	mov dword ptr [esp], eax
0x11443:    e8 18 0e 01 00                  	call 0x22260 <unknown_22260>
0x11448:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1144b:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1144e:    89 04 24                        	mov dword ptr [esp], eax
0x11451:    e8 34 cf 00 00                  	call 0x1e38a <unknown_1e38a>
0x11456:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x11459:    8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x1145c:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1145f:    8b 12                           	mov edx, dword ptr [edx]
0x11461:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x11465:    89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x11469:    89 14 24                        	mov dword ptr [esp], edx
0x1146c:    e8 46 cf 00 00                  	call 0x1e3b7 <unknown_1e3b7>
0x11471:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11474:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x11477:    89 c2                           	mov edx, eax
0x11479:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1147c:    8b 00                           	mov eax, dword ptr [eax]
0x1147e:    89 d1                           	mov ecx, edx
0x11480:    29 c1                           	sub ecx, eax
0x11482:    89 c8                           	mov eax, ecx
0x11484:    89 c1                           	mov ecx, eax
; function: function_11486 at 0x11486 -- 0x114bf
0x11486:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x11489:    8b 10                           	mov edx, dword ptr [eax]
0x1148b:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1148e:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x11492:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11496:    89 04 24                        	mov dword ptr [esp], eax
0x11499:    e8 da d2 00 00                  	call 0x1e778 <unknown_1e778>
0x1149e:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x114a1:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x114a4:    89 10                           	mov dword ptr [eax], edx
0x114a6:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x114a9:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x114ac:    89 50 04                        	mov dword ptr [eax + 4], edx
0x114af:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x114b2:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x114b5:    01 c2                           	add edx, eax
0x114b7:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x114ba:    89 50 08                        	mov dword ptr [eax + 8], edx
0x114bd:    eb 58                           	jmp 0x11517 <function_11517>
; data inside code section at 0x114bf -- 0x114c0
0x114bf:    89                                                 |.               |
; function: function_114c0 at 0x114c0 -- 0x114c1
0x114c0:    c3                              	ret 
; data inside code section at 0x114c1 -- 0x114c2
0x114c1:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x114c2 -- 0x114c3
; data inside code section at 0x114c3 -- 0x114c4
0x114c3:    ff                                                 |.               |
; function: function_114c4 at 0x114c4 -- 0x114c5
; data inside code section at 0x114c5 -- 0x114cc
0x114c5:    ff 89 d8 89 04 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x114cc -- 0x114cd
; data inside code section at 0x114cd -- 0x114d4
0x114cd:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x114d4 -- 0x114d5
; data inside code section at 0x114d5 -- 0x114d8
0x114d5:    ff ff ff                                           |...             |
; function: function_114d8 at 0x114d8 -- 0x11512
0x114d8:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x114db:    89 04 24                        	mov dword ptr [esp], eax
0x114de:    e8 a7 ce 00 00                  	call 0x1e38a <unknown_1e38a>
0x114e3:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x114e7:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x114ea:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x114ee:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x114f1:    89 04 24                        	mov dword ptr [esp], eax
0x114f4:    e8 be ce 00 00                  	call 0x1e3b7 <unknown_1e3b7>
0x114f9:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x114fc:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x114ff:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x11503:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x11506:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1150a:    89 04 24                        	mov dword ptr [esp], eax
0x1150d:    e8 66 d2 00 00                  	call 0x1e778 <unknown_1e778>
; data inside code section at 0x11512 -- 0x11513
0x11512:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x11513 -- 0x11514
; data inside code section at 0x11514 -- 0x11517
0x11514:    ff ff ff                                           |...             |
; function: function_11517 at 0x11517 -- 0x11523
0x11517:    8b 5d f4                        	mov ebx, dword ptr [ebp - 0xc]
0x1151a:    65 33 1d 14 00 00 00            	xor ebx, dword ptr gs:[0x14]
0x11521:    74 05                           	je 0x11528 <function_11528>
; data inside code section at 0x11523 -- 0x11524
0x11523:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11524 -- 0x11525
; data inside code section at 0x11525 -- 0x11528
0x11525:    ff ff ff                                           |...             |
; function: function_11528 at 0x11528 -- 0x1152f
0x11528:    8d 65 f8                        	lea esp, [ebp - 8]
0x1152b:    5b                              	pop ebx
0x1152c:    5e                              	pop esi
0x1152d:    5d                              	pop ebp
0x1152e:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2Ev
; function: _ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev at 0x11530 -- 0x1157b
0x11530:    55                              	push ebp
0x11531:    89 e5                           	mov ebp, esp
0x11533:    83 ec 38                        	sub esp, 0x38
0x11536:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11539:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1153c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11542:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11545:    31 c0                           	xor eax, eax
0x11547:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1154a:    89 04 24                        	mov dword ptr [esp], eax
0x1154d:    e8 a6 83 00 00                  	call 0x198f8 <function_198f8>
0x11552:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11555:    c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x1155b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1155e:    c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x11565:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11568:    c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x1156f:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x11572:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x11579:    74 05                           	je 0x11580 <function_11580>
; data inside code section at 0x1157b -- 0x1157c
0x1157b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1157c -- 0x1157d
; data inside code section at 0x1157d -- 0x11580
0x1157d:    ff ff ff                                           |...             |
; function: function_11580 at 0x11580 -- 0x11582
0x11580:    c9                              	leave 
0x11581:    c3                              	ret 
; section: .text._ZSt8_DestroyIPhEvT_S1_
; function: _ZSt8_DestroyIPhEvT_S1_ at 0x11582 -- 0x11591
0x11582:    55                              	push ebp
0x11583:    89 e5                           	mov ebp, esp
0x11585:    83 ec 38                        	sub esp, 0x38
0x11588:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1158b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1158e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0x11591 -- 0x11592
0x11591:    89                                                 |.               |
; function: function_11592 at 0x11592 -- 0x115bd
0x11592:    45                              	inc ebp
0x11593:    e0 65                           	loopne 0x115fa
0x11595:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x1159a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1159d:    31 c0                           	xor eax, eax
0x1159f:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x115a2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x115a6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x115a9:    89 04 24                        	mov dword ptr [esp], eax
0x115ac:    e8 fe 41 01 00                  	call 0x257af <unknown_257af>
0x115b1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x115b4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x115bb:    74 05                           	je 0x115c2 <function_115c2>
; data inside code section at 0x115bd -- 0x115be
0x115bd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x115be -- 0x115bf
; data inside code section at 0x115bf -- 0x115c2
0x115bf:    ff ff ff                                           |...             |
; function: function_115c2 at 0x115c2 -- 0x115c4
0x115c2:    c9                              	leave 
0x115c3:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_
; function: _ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_ at 0x115c4 -- 0x115f6
0x115c4:    55                              	push ebp
0x115c5:    89 e5                           	mov ebp, esp
0x115c7:    83 ec 38                        	sub esp, 0x38
0x115ca:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x115cd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x115d0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x115d3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x115d6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x115dc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x115df:    31 c0                           	xor eax, eax
0x115e1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x115e4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x115e8:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x115eb:    89 04 24                        	mov dword ptr [esp], eax
0x115ee:    e8 2f 42 01 00                  	call 0x25822 <unknown_25822>
0x115f3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x115f6 -- 0x115f8
0x115f6:    c7 00                                              |..              |
; function: function_115f8 at 0x115f8 -- 0x115fa
0x115f8:    00 00                           	add byte ptr [eax], al
; data inside code section at 0x115fa -- 0x1161d
0x115fa:    00 00 8b 45 e4 c7 40 04  00 00 00 00 8b 45 e4 c7   |...E..@......E..|
0x1160a:    40 08 00 00 00 00 8b 45  f4 65 33 05 14 00 00 00   |@......E.e3.....|
0x1161a:    74 05 e8                                           |t..             |
; dynamically linked function: __stack_chk_fail at 0x1161d -- 0x1161e
; data inside code section at 0x1161e -- 0x11620
0x1161e:    ff ff                                              |..              |
; function: function_11620 at 0x11620 -- 0x11623
0x11620:    ff c9                           	dec ecx
0x11622:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj
; function: _ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj at 0x11624 -- 0x11630
0x11624:    55                              	push ebp
0x11625:    89 e5                           	mov ebp, esp
0x11627:    83 ec 38                        	sub esp, 0x38
0x1162a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1162d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; function: function_11630 at 0x11630 -- 0x11674
0x11630:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11633:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11636:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1163c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1163f:    31 c0                           	xor eax, eax
0x11641:    83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x11645:    74 1c                           	je 0x11663 <function_11630+0x33>
0x11647:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1164a:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x11652:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x11655:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11659:    89 04 24                        	mov dword ptr [esp], eax
0x1165c:    e8 63 42 01 00                  	call 0x258c4 <unknown_258c4>
0x11661:    eb 05                           	jmp 0x11668 <function_11630+0x38>
0x11663:    b8 00 00 00 00                  	mov eax, 0
0x11668:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1166b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11672:    74 05                           	je 0x11679 <function_11679>
; data inside code section at 0x11674 -- 0x11675
0x11674:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11675 -- 0x11676
; data inside code section at 0x11676 -- 0x11679
0x11676:    ff ff ff                                           |...             |
; function: function_11679 at 0x11679 -- 0x1167b
0x11679:    c9                              	leave 
0x1167a:    c3                              	ret 
; section: .text._ZSt24__uninitialized_fill_n_aIPhjhhEvT_T0_RKT1_RSaIT2_E
; function: _ZSt24__uninitialized_fill_n_aIPhjhhEvT_T0_RKT1_RSaIT2_E at 0x1167b -- 0x116c9
0x1167b:    55                              	push ebp
0x1167c:    89 e5                           	mov ebp, esp
0x1167e:    83 ec 38                        	sub esp, 0x38
0x11681:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11684:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11687:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1168a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1168d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11690:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11693:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x11696:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x11699:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1169f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x116a2:    31 c0                           	xor eax, eax
0x116a4:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x116a7:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x116ab:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x116ae:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x116b2:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x116b5:    89 04 24                        	mov dword ptr [esp], eax
0x116b8:    e8 b9 42 01 00                  	call 0x25976 <unknown_25976>
0x116bd:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x116c0:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x116c7:    74 05                           	je 0x116ce <function_116ce>
; data inside code section at 0x116c9 -- 0x116ca
0x116c9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x116ca -- 0x116cb
; data inside code section at 0x116cb -- 0x116ce
0x116cb:    ff ff ff                                           |...             |
; function: function_116ce at 0x116ce -- 0x116d0
0x116ce:    c9                              	leave 
0x116cf:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj
; function: _ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj at 0x116d0 -- 0x116f9
0x116d0:    55                              	push ebp
0x116d1:    89 e5                           	mov ebp, esp
0x116d3:    83 ec 38                        	sub esp, 0x38
0x116d6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x116d9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x116dc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x116df:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x116e2:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x116e5:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x116e8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x116ee:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x116f1:    31 c0                           	xor eax, eax
0x116f3:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x116f6:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x116f9 -- 0x116fa
0x116f9:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x116fa -- 0x116fb
; data inside code section at 0x116fb -- 0x1170b
0x116fb:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x1170b -- 0x1170c
; data inside code section at 0x1170c -- 0x1170e
0x1170c:    ff ff                                              |..              |
; function: function_1170e at 0x1170e -- 0x11711
0x1170e:    ff c9                           	dec ecx
0x11710:    c3                              	ret 
; section: .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
; function: _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ at 0x11711 -- 0x11752
0x11711:    55                              	push ebp
0x11712:    89 e5                           	mov ebp, esp
0x11714:    83 ec 38                        	sub esp, 0x38
0x11717:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1171a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1171d:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11720:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11723:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11729:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1172c:    31 c0                           	xor eax, eax
0x1172e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11731:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x11734:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11738:    89 04 24                        	mov dword ptr [esp], eax
0x1173b:    e8 1b 43 01 00                  	call 0x25a5b <unknown_25a5b>
0x11740:    83 ec 04                        	sub esp, 4
0x11743:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11746:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11749:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11750:    74 05                           	je 0x11757 <function_11757>
; data inside code section at 0x11752 -- 0x11753
0x11752:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11753 -- 0x11754
; data inside code section at 0x11754 -- 0x11757
0x11754:    ff ff ff                                           |...             |
; function: function_11757 at 0x11757 -- 0x1175b
0x11757:    c9                              	leave 
0x11758:    c2 04 00                        	ret 4
; section: .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_
; function: _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_ at 0x1175b -- 0x1175e
0x1175b:    55                              	push ebp
0x1175c:    89 e5                           	mov ebp, esp
; function: function_1175e at 0x1175e -- 0x11793
0x1175e:    56                              	push esi
0x1175f:    53                              	push ebx
0x11760:    83 ec 30                        	sub esp, 0x30
0x11763:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11766:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11769:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1176c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1176f:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11772:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11775:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x11778:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1177b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11781:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11784:    31 c0                           	xor eax, eax
0x11786:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x11789:    89 04 24                        	mov dword ptr [esp], eax
0x1178c:    e8 51 43 01 00                  	call 0x25ae2 <unknown_25ae2>
0x11791:    89 c6                           	mov esi, eax
; data inside code section at 0x11793 -- 0x11794
0x11793:    8b                                                 |.               |
; function: function_11794 at 0x11794 -- 0x117df
0x11794:    45                              	inc ebp
0x11795:    dc 89 04 24 e8 18               	fmul qword ptr [ecx + 0x18e82404]
0x1179b:    1f                              	pop ds
0x1179c:    01 00                           	add dword ptr [eax], eax
0x1179e:    89 c3                           	mov ebx, eax
0x117a0:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x117a3:    89 04 24                        	mov dword ptr [esp], eax
0x117a6:    e8 0b 1f 01 00                  	call 0x236b6 <unknown_236b6>
0x117ab:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x117af:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x117b3:    89 04 24                        	mov dword ptr [esp], eax
0x117b6:    e8 5c 43 01 00                  	call 0x25b17 <unknown_25b17>
0x117bb:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x117be:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x117c1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x117c5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x117c8:    89 04 24                        	mov dword ptr [esp], eax
0x117cb:    e8 f1 e0 00 00                  	call 0x1f8c1 <unknown_1f8c1>
0x117d0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x117d3:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x117d6:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x117dd:    74 05                           	je 0x117e4 <function_117e4>
; data inside code section at 0x117df -- 0x117e0
0x117df:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x117e0 -- 0x117e1
; data inside code section at 0x117e1 -- 0x117e4
0x117e1:    ff ff ff                                           |...             |
; function: function_117e4 at 0x117e4 -- 0x117ed
0x117e4:    83 c4 30                        	add esp, 0x30
0x117e7:    5b                              	pop ebx
0x117e8:    5e                              	pop esi
0x117e9:    5d                              	pop ebp
0x117ea:    c2 04 00                        	ret 4
; section: .text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
; function: _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_ at 0x117ed -- 0x117ff
0x117ed:    55                              	push ebp
0x117ee:    89 e5                           	mov ebp, esp
0x117f0:    83 ec 38                        	sub esp, 0x38
0x117f3:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x117f6:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x117f9:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x117fc:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x117ff -- 0x11800
0x117ff:    65                                                 |e               |
; function: function_11800 at 0x11800 -- 0x11828
0x11800:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x11805:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11808:    31 c0                           	xor eax, eax
0x1180a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1180d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11811:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11814:    89 04 24                        	mov dword ptr [esp], eax
0x11817:    e8 e0 43 01 00                  	call 0x25bfc <unknown_25bfc>
0x1181c:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1181f:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x11826:    74 05                           	je 0x1182d <function_1182d>
; data inside code section at 0x11828 -- 0x11829
0x11828:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11829 -- 0x1182a
; data inside code section at 0x1182a -- 0x1182c
0x1182a:    ff ff                                              |..              |
; function: function_1182c at 0x1182c -- 0x1182d
; function: function_1182d at 0x1182d -- 0x1182f
0x1182d:    c9                              	leave 
0x1182e:    c3                              	ret 
; section: .text._ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_
; function: _ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_ at 0x1182f -- 0x11846
0x1182f:    55                              	push ebp
0x11830:    89 e5                           	mov ebp, esp
0x11832:    83 ec 38                        	sub esp, 0x38
0x11835:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11838:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1183b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11841:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11844:    31 c0                           	xor eax, eax
; data inside code section at 0x11846 -- 0x11848
0x11846:    8b 45                                              |.E              |
; function: function_11848 at 0x11848 -- 0x1185d
0x11848:    e4 89                           	in al, 0x89
0x1184a:    04 24                           	add al, 0x24
0x1184c:    e8 1d 44 01 00                  	call 0x25c6e <unknown_25c6e>
0x11851:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11854:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1185b:    74 05                           	je 0x11862 <function_11862>
; data inside code section at 0x1185d -- 0x1185e
0x1185d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1185e -- 0x1185f
; data inside code section at 0x1185f -- 0x11862
0x1185f:    ff ff ff                                           |...             |
; function: function_11862 at 0x11862 -- 0x11864
0x11862:    c9                              	leave 
0x11863:    c3                              	ret 
; section: .text._ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_
; function: _ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_ at 0x11864 -- 0x118ca
0x11864:    55                              	push ebp
0x11865:    89 e5                           	mov ebp, esp
0x11867:    56                              	push esi
0x11868:    53                              	push ebx
0x11869:    83 ec 30                        	sub esp, 0x30
0x1186c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1186f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11872:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11875:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11878:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1187b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1187e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11884:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11887:    31 c0                           	xor eax, eax
0x11889:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1188c:    89 04 24                        	mov dword ptr [esp], eax
0x1188f:    e8 3c 44 01 00                  	call 0x25cd0 <unknown_25cd0>
0x11894:    89 c6                           	mov esi, eax
0x11896:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11899:    89 04 24                        	mov dword ptr [esp], eax
0x1189c:    e8 2f 44 01 00                  	call 0x25cd0 <unknown_25cd0>
0x118a1:    89 c3                           	mov ebx, eax
0x118a3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x118a6:    89 04 24                        	mov dword ptr [esp], eax
0x118a9:    e8 22 44 01 00                  	call 0x25cd0 <unknown_25cd0>
0x118ae:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x118b2:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x118b6:    89 04 24                        	mov dword ptr [esp], eax
0x118b9:    e8 47 44 01 00                  	call 0x25d05 <unknown_25d05>
0x118be:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x118c1:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x118c8:    74 05                           	je 0x118cf <function_118cf>
; data inside code section at 0x118ca -- 0x118cb
0x118ca:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x118cb -- 0x118cc
; function: function_118cc at 0x118cc -- 0x118cd
; data inside code section at 0x118cd -- 0x118cf
0x118cd:    ff ff                                              |..              |
; function: function_118cf at 0x118cf -- 0x118d6
0x118cf:    83 c4 30                        	add esp, 0x30
0x118d2:    5b                              	pop ebx
0x118d3:    5e                              	pop esi
0x118d4:    5d                              	pop ebp
0x118d5:    c3                              	ret 
; section: .text._ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_
; function: _ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_ at 0x118d6 -- 0x1191e
0x118d6:    55                              	push ebp
0x118d7:    89 e5                           	mov ebp, esp
0x118d9:    83 ec 38                        	sub esp, 0x38
0x118dc:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x118df:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x118e2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x118e5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x118e8:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x118eb:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x118ee:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x118f4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x118f7:    31 c0                           	xor eax, eax
0x118f9:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x118fc:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x11900:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11903:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11907:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1190a:    89 04 24                        	mov dword ptr [esp], eax
0x1190d:    e8 b8 44 01 00                  	call 0x25dca <unknown_25dca>
0x11912:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11915:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1191c:    74 05                           	je 0x11923 <function_11923>
; data inside code section at 0x1191e -- 0x1191f
0x1191e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1191f -- 0x11920
; data inside code section at 0x11920 -- 0x11923
0x11920:    ff ff ff                                           |...             |
; function: function_11923 at 0x11923 -- 0x11925
0x11923:    c9                              	leave 
0x11924:    c3                              	ret 
; section: .text._ZNSsC2IPcEET_S1_RKSaIcE
; function: _ZNSsC1IPcEET_S1_RKSaIcE at 0x11926 -- 0x1197b
0x11926:    55                              	push ebp
0x11927:    89 e5                           	mov ebp, esp
0x11929:    83 ec 38                        	sub esp, 0x38
0x1192c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1192f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11932:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11935:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11938:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1193b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1193e:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x11941:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x11944:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1194a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1194d:    31 c0                           	xor eax, eax
0x1194f:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x11952:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x11956:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11959:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1195d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11960:    89 04 24                        	mov dword ptr [esp], eax
0x11963:    e8 01 45 01 00                  	call 0x25e69 <unknown_25e69>
0x11968:    89 c2                           	mov edx, eax
0x1196a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1196d:    8b 4d d8                        	mov ecx, dword ptr [ebp - 0x28]
0x11970:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x11974:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11978:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1197b -- 0x1197c
0x1197b:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_Alloc_hiderC1EPcRKSaIcE at 0x1197c -- 0x1197d
; data inside code section at 0x1197d -- 0x1198d
0x1197d:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x1198d -- 0x1198e
; data inside code section at 0x1198e -- 0x11990
0x1198e:    ff ff                                              |..              |
; function: function_11990 at 0x11990 -- 0x11993
0x11990:    ff c9                           	dec ecx
0x11992:    c3                              	ret 
; section: .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE
; function: _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE at 0x11993 -- 0x119b8
0x11993:    55                              	push ebp
0x11994:    89 e5                           	mov ebp, esp
0x11996:    83 ec 28                        	sub esp, 0x28
0x11999:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1199c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1199f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x119a2:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x119a5:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x119ab:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x119ae:    31 c0                           	xor eax, eax
0x119b0:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x119b3:    8b 10                           	mov edx, dword ptr [eax]
0x119b5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_119b8 at 0x119b8 -- 0x119ca
0x119b8:    89 50 08                        	mov dword ptr [eax + 8], edx
0x119bb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x119be:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x119c1:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x119c8:    74 05                           	je 0x119cf <function_119cf>
; data inside code section at 0x119ca -- 0x119cb
0x119ca:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x119cb -- 0x119cc
; data inside code section at 0x119cc -- 0x119cf
0x119cc:    ff ff ff                                           |...             |
; function: function_119cf at 0x119cf -- 0x119d1
0x119cf:    c9                              	leave 
0x119d0:    c3                              	ret 
; section: .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE
; function: _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE at 0x119d1 -- 0x11a08
0x119d1:    55                              	push ebp
0x119d2:    89 e5                           	mov ebp, esp
0x119d4:    83 ec 28                        	sub esp, 0x28
0x119d7:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x119da:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x119dd:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x119e0:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x119e3:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x119e9:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x119ec:    31 c0                           	xor eax, eax
0x119ee:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x119f1:    8b 10                           	mov edx, dword ptr [eax]
0x119f3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x119f6:    89 50 0c                        	mov dword ptr [eax + 0xc], edx
0x119f9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x119fc:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x119ff:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11a06:    74 05                           	je 0x11a0d <function_11a0d>
; data inside code section at 0x11a08 -- 0x11a09
0x11a08:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11a09 -- 0x11a0a
; data inside code section at 0x11a0a -- 0x11a0d
0x11a0a:    ff ff ff                                           |...             |
; function: function_11a0d at 0x11a0d -- 0x11a0f
0x11a0d:    c9                              	leave 
0x11a0e:    c3                              	ret 
; section: .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE
; function: _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE at 0x11a0f -- 0x11a46
0x11a0f:    55                              	push ebp
0x11a10:    89 e5                           	mov ebp, esp
0x11a12:    83 ec 28                        	sub esp, 0x28
0x11a15:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11a18:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11a1b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11a1e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11a21:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11a27:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11a2a:    31 c0                           	xor eax, eax
0x11a2c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11a2f:    8b 10                           	mov edx, dword ptr [eax]
0x11a31:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11a34:    89 50 10                        	mov dword ptr [eax + 0x10], edx
0x11a37:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11a3a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11a3d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11a44:    74 05                           	je 0x11a4b <function_11a4b>
; data inside code section at 0x11a46 -- 0x11a47
0x11a46:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11a47 -- 0x11a48
; data inside code section at 0x11a48 -- 0x11a4b
0x11a48:    ff ff ff                                           |...             |
; function: function_11a4b at 0x11a4b -- 0x11a4d
0x11a4b:    c9                              	leave 
0x11a4c:    c3                              	ret 
; section: .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
; function: _ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_ at 0x11a4e -- 0x11a7c
0x11a4e:    55                              	push ebp
0x11a4f:    89 e5                           	mov ebp, esp
0x11a51:    53                              	push ebx
0x11a52:    83 ec 34                        	sub esp, 0x34
0x11a55:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11a58:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11a5b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11a5e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11a61:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11a67:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11a6a:    31 c0                           	xor eax, eax
0x11a6c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11a6f:    c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x11a75:    c7 04 24 10 00 00 00            	mov dword ptr [esp], 0x10
; data inside code section at 0x11a7c -- 0x11a7d
0x11a7c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x11a7d -- 0x11a7e
; data inside code section at 0x11a7e -- 0x11a80
0x11a7e:    ff ff                                              |..              |
; function: function_11a80 at 0x11a80 -- 0x11aa5
0x11a80:    ff 89 c3 8b 45 e0               	dec dword ptr [ecx - 0x1fba743d]
0x11a86:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11a8a:    89 1c 24                        	mov dword ptr [esp], ebx
0x11a8d:    e8 52 45 01 00                  	call 0x25fe4 <unknown_25fe4>
0x11a92:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11a95:    89 18                           	mov dword ptr [eax], ebx
0x11a97:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x11a9a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x11aa1:    74 30                           	je 0x11ad3 <function_11ad3>
0x11aa3:    eb 29                           	jmp 0x11ace <function_11ace>
; data inside code section at 0x11aa5 -- 0x11aa6
0x11aa5:    89                                                 |.               |
; function: function_11aa6 at 0x11aa6 -- 0x11aa7
0x11aa6:    c3                              	ret 
; data inside code section at 0x11aa7 -- 0x11aa8
0x11aa7:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x11aa8 -- 0x11aa9
; data inside code section at 0x11aa9 -- 0x11ab2
0x11aa9:    ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x11ab2 -- 0x11ab3
; data inside code section at 0x11ab3 -- 0x11aba
0x11ab3:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x11aba -- 0x11abb
; data inside code section at 0x11abb -- 0x11aca
0x11abb:    ff ff ff 8b 45 e0 89 04  24 e8 68 45 01 00 e8      |....E...$.hE... |
; dynamically linked function: __cxa_rethrow at 0x11aca -- 0x11acb
; data inside code section at 0x11acb -- 0x11ace
0x11acb:    ff ff ff                                           |...             |
; function: function_11ace at 0x11ace -- 0x11acf
; dynamically linked function: __stack_chk_fail at 0x11acf -- 0x11ad0
; data inside code section at 0x11ad0 -- 0x11ad3
0x11ad0:    ff ff ff                                           |...             |
; function: function_11ad3 at 0x11ad3 -- 0x11ad9
0x11ad3:    83 c4 34                        	add esp, 0x34
0x11ad6:    5b                              	pop ebx
0x11ad7:    5d                              	pop ebp
0x11ad8:    c3                              	ret 
; section: .text._ZSt3minIjERKT_S2_S2_
; function: _ZSt3minIjERKT_S2_S2_ at 0x11ad9 -- 0x11b18
0x11ad9:    55                              	push ebp
0x11ada:    89 e5                           	mov ebp, esp
0x11adc:    83 ec 28                        	sub esp, 0x28
0x11adf:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11ae2:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11ae5:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11ae8:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11aeb:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11af1:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11af4:    31 c0                           	xor eax, eax
0x11af6:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11af9:    8b 10                           	mov edx, dword ptr [eax]
0x11afb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11afe:    8b 00                           	mov eax, dword ptr [eax]
0x11b00:    39 c2                           	cmp edx, eax
0x11b02:    73 05                           	jae 0x11b09 <_ZSt3minIjERKT_S2_S2_+0x30>
0x11b04:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11b07:    eb 03                           	jmp 0x11b0c <_ZSt3minIjERKT_S2_S2_+0x33>
0x11b09:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11b0c:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11b0f:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11b16:    74 05                           	je 0x11b1d <function_11b1d>
; data inside code section at 0x11b18 -- 0x11b19
0x11b18:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11b19 -- 0x11b1a
; data inside code section at 0x11b1a -- 0x11b1d
0x11b1a:    ff ff ff                                           |...             |
; function: function_11b1d at 0x11b1d -- 0x11b1f
0x11b1d:    c9                              	leave 
0x11b1e:    c3                              	ret 
; section: .text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
; function: _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_ at 0x11b1f -- 0x11b4c
0x11b1f:    55                              	push ebp
0x11b20:    89 e5                           	mov ebp, esp
0x11b22:    83 ec 38                        	sub esp, 0x38
0x11b25:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11b28:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11b2b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11b2e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11b31:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11b34:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11b37:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11b3d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11b40:    31 c0                           	xor eax, eax
0x11b42:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11b45:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x11b49:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; function: function_11b4c at 0x11b4c -- 0x11b67
0x11b4c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11b50:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11b53:    89 04 24                        	mov dword ptr [esp], eax
0x11b56:    e8 e9 45 01 00                  	call 0x26144 <unknown_26144>
0x11b5b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11b5e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11b65:    74 05                           	je 0x11b6c <function_11b6c>
; data inside code section at 0x11b67 -- 0x11b68
0x11b67:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11b68 -- 0x11b69
; data inside code section at 0x11b69 -- 0x11b6c
0x11b69:    ff ff ff                                           |...             |
; function: function_11b6c at 0x11b6c -- 0x11b6e
0x11b6c:    c9                              	leave 
0x11b6d:    c3                              	ret 
; section: .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES8_
; function: _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES8_ at 0x11b6e -- 0x11baf
0x11b6e:    55                              	push ebp
0x11b6f:    89 e5                           	mov ebp, esp
0x11b71:    83 ec 38                        	sub esp, 0x38
0x11b74:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11b77:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11b7a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11b7d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11b80:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11b86:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11b89:    31 c0                           	xor eax, eax
0x11b8b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11b8e:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x11b91:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11b95:    89 04 24                        	mov dword ptr [esp], eax
0x11b98:    e8 45 46 01 00                  	call 0x261e2 <unknown_261e2>
0x11b9d:    83 ec 04                        	sub esp, 4
0x11ba0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11ba3:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11ba6:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11bad:    74 05                           	je 0x11bb4 <function_11bb4>
; data inside code section at 0x11baf -- 0x11bb0
0x11baf:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11bb0 -- 0x11bb1
; data inside code section at 0x11bb1 -- 0x11bb4
0x11bb1:    ff ff ff                                           |...             |
; function: function_11bb4 at 0x11bb4 -- 0x11bb8
0x11bb4:    c9                              	leave 
0x11bb5:    c2 04 00                        	ret 4
; section: .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET1_T0_S8_S7_
; function: _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET1_T0_S8_S7_ at 0x11bb8 -- 0x11bc6
0x11bb8:    55                              	push ebp
0x11bb9:    89 e5                           	mov ebp, esp
0x11bbb:    56                              	push esi
0x11bbc:    53                              	push ebx
0x11bbd:    83 ec 30                        	sub esp, 0x30
0x11bc0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11bc3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; function: function_11bc6 at 0x11bc6 -- 0x11c3c
0x11bc6:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11bc9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11bcc:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11bcf:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11bd2:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x11bd5:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x11bd8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11bde:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11be1:    31 c0                           	xor eax, eax
0x11be3:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x11be6:    89 04 24                        	mov dword ptr [esp], eax
0x11be9:    e8 51 43 01 00                  	call 0x25f3f <unknown_25f3f>
0x11bee:    89 c6                           	mov esi, eax
0x11bf0:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11bf3:    89 04 24                        	mov dword ptr [esp], eax
0x11bf6:    e8 44 43 01 00                  	call 0x25f3f <unknown_25f3f>
0x11bfb:    89 c3                           	mov ebx, eax
0x11bfd:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11c00:    89 04 24                        	mov dword ptr [esp], eax
0x11c03:    e8 37 43 01 00                  	call 0x25f3f <unknown_25f3f>
0x11c08:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x11c0c:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x11c10:    89 04 24                        	mov dword ptr [esp], eax
0x11c13:    e8 41 44 01 00                  	call 0x26059 <unknown_26059>
0x11c18:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x11c1b:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x11c1e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11c22:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11c25:    89 04 24                        	mov dword ptr [esp], eax
0x11c28:    e8 f1 e0 00 00                  	call 0x1fd1e <unknown_1fd1e>
0x11c2d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11c30:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11c33:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11c3a:    74 05                           	je 0x11c41 <function_11c41>
; data inside code section at 0x11c3c -- 0x11c3d
0x11c3c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11c3d -- 0x11c3e
; data inside code section at 0x11c3e -- 0x11c41
0x11c3e:    ff ff ff                                           |...             |
; function: function_11c41 at 0x11c41 -- 0x11c4a
0x11c41:    83 c4 30                        	add esp, 0x30
0x11c44:    5b                              	pop ebx
0x11c45:    5e                              	pop esi
0x11c46:    5d                              	pop ebp
0x11c47:    c2 04 00                        	ret 4
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEmmEv
; function: _ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEmmEv at 0x11c4a -- 0x11c7d
0x11c4a:    55                              	push ebp
0x11c4b:    89 e5                           	mov ebp, esp
0x11c4d:    83 ec 28                        	sub esp, 0x28
0x11c50:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11c53:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11c56:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11c5c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11c5f:    31 c0                           	xor eax, eax
0x11c61:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11c64:    8b 00                           	mov eax, dword ptr [eax]
0x11c66:    8d 50 ff                        	lea edx, [eax - 1]
0x11c69:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11c6c:    89 10                           	mov dword ptr [eax], edx
0x11c6e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11c71:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11c74:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11c7b:    74 05                           	je 0x11c82 <function_11c82>
; data inside code section at 0x11c7d -- 0x11c7e
0x11c7d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11c7e -- 0x11c7f
; data inside code section at 0x11c7f -- 0x11c82
0x11c7f:    ff ff ff                                           |...             |
; function: function_11c82 at 0x11c82 -- 0x11c84
0x11c82:    c9                              	leave 
0x11c83:    c3                              	ret 
; section: .text._ZN9__gnu_cxxltIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
; function: _ZN9__gnu_cxxltIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ at 0x11c84 -- 0x11ccd
0x11c84:    55                              	push ebp
0x11c85:    89 e5                           	mov ebp, esp
0x11c87:    53                              	push ebx
0x11c88:    83 ec 34                        	sub esp, 0x34
0x11c8b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11c8e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11c91:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11c94:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11c97:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11c9d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11ca0:    31 c0                           	xor eax, eax
0x11ca2:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11ca5:    89 04 24                        	mov dword ptr [esp], eax
0x11ca8:    e8 dd e3 00 00                  	call 0x2008a <unknown_2008a>
0x11cad:    8b 18                           	mov ebx, dword ptr [eax]
0x11caf:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11cb2:    89 04 24                        	mov dword ptr [esp], eax
0x11cb5:    e8 d0 e3 00 00                  	call 0x2008a <unknown_2008a>
0x11cba:    8b 00                           	mov eax, dword ptr [eax]
0x11cbc:    39 c3                           	cmp ebx, eax
0x11cbe:    0f 92 c0                        	setb al
0x11cc1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11cc4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11ccb:    74 05                           	je 0x11cd2 <function_11cd2>
; data inside code section at 0x11ccd -- 0x11cce
0x11ccd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11cce -- 0x11ccf
; data inside code section at 0x11ccf -- 0x11cd2
0x11ccf:    ff ff ff                                           |...             |
; function: function_11cd2 at 0x11cd2 -- 0x11cd8
0x11cd2:    83 c4 34                        	add esp, 0x34
0x11cd5:    5b                              	pop ebx
0x11cd6:    5d                              	pop ebp
0x11cd7:    c3                              	ret 
; section: .text._ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_EvT_T0_
; function: _ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_EvT_T0_ at 0x11cd8 -- 0x11d13
0x11cd8:    55                              	push ebp
0x11cd9:    89 e5                           	mov ebp, esp
0x11cdb:    83 ec 38                        	sub esp, 0x38
0x11cde:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11ce1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11ce4:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11ce7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11cea:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11cf0:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11cf3:    31 c0                           	xor eax, eax
0x11cf5:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11cf8:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11cfc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11cff:    89 04 24                        	mov dword ptr [esp], eax
0x11d02:    e8 82 46 01 00                  	call 0x26389 <unknown_26389>
0x11d07:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x11d0a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x11d11:    74 05                           	je 0x11d18 <function_11d18>
; data inside code section at 0x11d13 -- 0x11d14
0x11d13:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11d14 -- 0x11d15
; data inside code section at 0x11d15 -- 0x11d18
0x11d15:    ff ff ff                                           |...             |
; function: function_11d18 at 0x11d18 -- 0x11d1a
0x11d18:    c9                              	leave 
0x11d19:    c3                              	ret 
; section: .text._ZSt13copy_backwardIPhS0_ET0_T_S2_S1_
; function: _ZSt13copy_backwardIPhS0_ET0_T_S2_S1_ at 0x11d1a -- 0x11d75
0x11d1a:    55                              	push ebp
0x11d1b:    89 e5                           	mov ebp, esp
0x11d1d:    53                              	push ebx
0x11d1e:    83 ec 34                        	sub esp, 0x34
0x11d21:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11d24:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11d27:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11d2a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11d2d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11d30:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11d33:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11d39:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11d3c:    31 c0                           	xor eax, eax
0x11d3e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11d41:    89 04 24                        	mov dword ptr [esp], eax
0x11d44:    e8 00 18 01 00                  	call 0x23549 <unknown_23549>
0x11d49:    89 c3                           	mov ebx, eax
0x11d4b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11d4e:    89 04 24                        	mov dword ptr [esp], eax
0x11d51:    e8 f3 17 01 00                  	call 0x23549 <unknown_23549>
0x11d56:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x11d59:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x11d5d:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x11d61:    89 04 24                        	mov dword ptr [esp], eax
0x11d64:    e8 bb 46 01 00                  	call 0x26424 <unknown_26424>
0x11d69:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11d6c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11d73:    74 05                           	je 0x11d7a <function_11d7a>
; data inside code section at 0x11d75 -- 0x11d76
0x11d75:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11d76 -- 0x11d77
; data inside code section at 0x11d77 -- 0x11d7a
0x11d77:    ff ff ff                                           |...             |
; function: function_11d7a at 0x11d7a -- 0x11d80
0x11d7a:    83 c4 34                        	add esp, 0x34
0x11d7d:    5b                              	pop ebx
0x11d7e:    5d                              	pop ebp
0x11d7f:    c3                              	ret 
; section: .text._ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc
; function: _ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc at 0x11d80 -- 0x11db4
0x11d80:    55                              	push ebp
0x11d81:    89 e5                           	mov ebp, esp
0x11d83:    53                              	push ebx
0x11d84:    83 ec 34                        	sub esp, 0x34
0x11d87:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11d8a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11d8d:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11d90:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11d93:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11d96:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11d99:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11d9f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11da2:    31 c0                           	xor eax, eax
0x11da4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11da7:    89 04 24                        	mov dword ptr [esp], eax
0x11daa:    e8 4d 47 01 00                  	call 0x264fc <unknown_264fc>
0x11daf:    89 c3                           	mov ebx, eax
0x11db1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x11db4 -- 0x11db6
0x11db4:    89 04                                              |..              |
; function: function_11db6 at 0x11db6 -- 0x11dc7
0x11db6:    24 e8                           	and al, 0xe8
0x11db8:    6e                              	outsb dx, byte ptr [esi]
0x11db9:    78 00                           	js 0x11dbb <function_11db6+0x5>
0x11dbb:    00 89 da 29 c2 8b               	add byte ptr [ecx - 0x743dd626], cl
0x11dc1:    45                              	inc ebp
0x11dc2:    e0 39                           	loopne 0x11dfd <function_11dfd>
0x11dc4:    c2 0f 92                        	ret 0x920f
; data inside code section at 0x11dc7 -- 0x11dd3
0x11dc7:    c0 84 c0 74 0b 8b 45 dc  89 04 24 e8               |...t..E...$.    |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x11dd3 -- 0x11dd4
; data inside code section at 0x11dd4 -- 0x11de3
0x11dd4:    ff ff ff 8b 45 e4 89 04  24 e8 48 78 00 00 89      |....E...$.Hx... |
; function: function_11de3 at 0x11de3 -- 0x11de4
0x11de3:    c3                              	ret 
; data inside code section at 0x11de4 -- 0x11dfd
0x11de4:    8b 45 e4 89 04 24 e8 3b  78 00 00 89 45 ec 8d 45   |.E...$.;x...E..E|
0x11df4:    e0 89 44 24 04 8d 45 ec  89                        |..D$..E..       |
; function: function_11dfd at 0x11dfd -- 0x11e47
0x11dfd:    04 24                           	add al, 0x24
0x11dff:    e8 18 40 01 00                  	call 0x25e1c <unknown_25e1c>
0x11e04:    8b 00                           	mov eax, dword ptr [eax]
0x11e06:    01 d8                           	add eax, ebx
0x11e08:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x11e0b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11e0e:    89 04 24                        	mov dword ptr [esp], eax
0x11e11:    e8 14 78 00 00                  	call 0x1962a <function_1962a>
0x11e16:    3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x11e19:    77 10                           	ja 0x11e2b <function_11dfd+0x2e>
0x11e1b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11e1e:    89 04 24                        	mov dword ptr [esp], eax
0x11e21:    e8 d6 46 01 00                  	call 0x264fc <unknown_264fc>
0x11e26:    3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x11e29:    73 0d                           	jae 0x11e38 <function_11dfd+0x3b>
0x11e2b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11e2e:    89 04 24                        	mov dword ptr [esp], eax
0x11e31:    e8 c6 46 01 00                  	call 0x264fc <unknown_264fc>
0x11e36:    eb 03                           	jmp 0x11e3b <function_11dfd+0x3e>
0x11e38:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x11e3b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11e3e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11e45:    74 05                           	je 0x11e4c <function_11e4c>
; data inside code section at 0x11e47 -- 0x11e48
0x11e47:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11e48 -- 0x11e49
; data inside code section at 0x11e49 -- 0x11e4c
0x11e49:    ff ff ff                                           |...             |
; function: function_11e4c at 0x11e4c -- 0x11e52
0x11e4c:    83 c4 34                        	add esp, 0x34
0x11e4f:    5b                              	pop ebx
0x11e50:    5d                              	pop ebp
0x11e51:    c3                              	ret 
; section: .text._ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_
; function: _ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_ at 0x11e52 -- 0x11ea7
0x11e52:    55                              	push ebp
0x11e53:    89 e5                           	mov ebp, esp
0x11e55:    83 ec 38                        	sub esp, 0x38
0x11e58:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11e5b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11e5e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11e61:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11e64:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11e67:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11e6a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x11e6d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x11e70:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11e76:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11e79:    31 c0                           	xor eax, eax
0x11e7b:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x11e7e:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x11e82:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11e85:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x11e89:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11e8c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11e90:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11e93:    89 04 24                        	mov dword ptr [esp], eax
0x11e96:    e8 88 dd 00 00                  	call 0x1fc23 <unknown_1fc23>
0x11e9b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11e9e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11ea5:    74 05                           	je 0x11eac <function_11eac>
; data inside code section at 0x11ea7 -- 0x11ea8
0x11ea7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11ea8 -- 0x11ea9
; data inside code section at 0x11ea9 -- 0x11eac
0x11ea9:    ff ff ff                                           |...             |
; function: function_11eac at 0x11eac -- 0x11eae
0x11eac:    c9                              	leave 
0x11ead:    c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag
; function: _ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag at 0x11eae -- 0x11eb4
0x11eae:    55                              	push ebp
0x11eaf:    89 e5                           	mov ebp, esp
0x11eb1:    83 ec 38                        	sub esp, 0x38
; function: function_11eb4 at 0x11eb4 -- 0x11f54
0x11eb4:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11eb7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11eba:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11ebd:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11ec0:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11ec3:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11ec6:    0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0x11eca:    88 45 db                        	mov byte ptr [ebp - 0x25], al
0x11ecd:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11ed3:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11ed6:    31 c0                           	xor eax, eax
0x11ed8:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11edb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11edf:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11ee2:    89 04 24                        	mov dword ptr [esp], eax
0x11ee5:    e8 7d 47 01 00                  	call 0x26667 <unknown_26667>
0x11eea:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x11eed:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11ef0:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x11ef3:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x11ef7:    89 04 24                        	mov dword ptr [esp], eax
0x11efa:    e8 d3 15 01 00                  	call 0x234d2 <unknown_234d2>
0x11eff:    89 c2                           	mov edx, eax
0x11f01:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11f04:    89 10                           	mov dword ptr [eax], edx
0x11f06:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11f09:    8b 00                           	mov eax, dword ptr [eax]
0x11f0b:    89 c2                           	mov edx, eax
0x11f0d:    03 55 f0                        	add edx, dword ptr [ebp - 0x10]
0x11f10:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11f13:    89 50 08                        	mov dword ptr [eax + 8], edx
0x11f16:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11f19:    89 04 24                        	mov dword ptr [esp], eax
0x11f1c:    e8 05 d9 00 00                  	call 0x1f826 <unknown_1f826>
0x11f21:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x11f24:    8b 12                           	mov edx, dword ptr [edx]
0x11f26:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x11f2a:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x11f2e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x11f31:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x11f35:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x11f38:    89 04 24                        	mov dword ptr [esp], eax
0x11f3b:    e8 df e1 00 00                  	call 0x2011f <unknown_2011f>
0x11f40:    89 c2                           	mov edx, eax
0x11f42:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11f45:    89 50 04                        	mov dword ptr [eax + 4], edx
0x11f48:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x11f4b:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x11f52:    74 05                           	je 0x11f59 <function_11f59>
; data inside code section at 0x11f54 -- 0x11f55
0x11f54:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11f55 -- 0x11f56
; data inside code section at 0x11f56 -- 0x11f59
0x11f56:    ff ff ff                                           |...             |
; function: function_11f59 at 0x11f59 -- 0x11f5b
0x11f59:    c9                              	leave 
0x11f5a:    c3                              	ret 
; section: .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
; function: _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ at 0x11f5b -- 0x11f89
0x11f5b:    55                              	push ebp
0x11f5c:    89 e5                           	mov ebp, esp
0x11f5e:    83 ec 38                        	sub esp, 0x38
0x11f61:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11f64:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11f67:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11f6d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11f70:    31 c0                           	xor eax, eax
0x11f72:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11f75:    89 04 24                        	mov dword ptr [esp], eax
0x11f78:    e8 6f 48 01 00                  	call 0x267ec <unknown_267ec>
0x11f7d:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x11f80:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x11f87:    74 05                           	je 0x11f8e <function_11f8e>
; data inside code section at 0x11f89 -- 0x11f8a
0x11f89:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11f8a -- 0x11f8b
; data inside code section at 0x11f8b -- 0x11f8e
0x11f8b:    ff ff ff                                           |...             |
; function: function_11f8e at 0x11f8e -- 0x11f90
0x11f8e:    c9                              	leave 
0x11f8f:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC2Ev
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1Ev at 0x11f90 -- 0x11fdb
0x11f90:    55                              	push ebp
0x11f91:    89 e5                           	mov ebp, esp
0x11f93:    83 ec 38                        	sub esp, 0x38
0x11f96:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11f99:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11f9c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x11fa2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x11fa5:    31 c0                           	xor eax, eax
0x11fa7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11faa:    89 04 24                        	mov dword ptr [esp], eax
0x11fad:    e8 f6 99 00 00                  	call 0x1b9a8 <function_1b9a8>
0x11fb2:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11fb5:    c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x11fbb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11fbe:    c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x11fc5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x11fc8:    c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x11fcf:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x11fd2:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x11fd9:    74 05                           	je 0x11fe0 <function_11fe0>
; data inside code section at 0x11fdb -- 0x11fdc
0x11fdb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11fdc -- 0x11fdd
; data inside code section at 0x11fdd -- 0x11fe0
0x11fdd:    ff ff ff                                           |...             |
; function: function_11fe0 at 0x11fe0 -- 0x11fe2
0x11fe0:    c9                              	leave 
0x11fe1:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j at 0x11fe2 -- 0x12030
0x11fe2:    55                              	push ebp
0x11fe3:    89 e5                           	mov ebp, esp
0x11fe5:    83 ec 38                        	sub esp, 0x38
0x11fe8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x11feb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x11fee:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x11ff1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x11ff4:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x11ff7:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x11ffa:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12000:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12003:    31 c0                           	xor eax, eax
0x12005:    83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x12009:    74 19                           	je 0x12024 <_ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j+0x42>
0x1200b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1200e:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x12011:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12015:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12018:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1201c:    89 04 24                        	mov dword ptr [esp], eax
0x1201f:    e8 86 48 01 00                  	call 0x268aa <unknown_268aa>
0x12024:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12027:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1202e:    74 05                           	je 0x12035 <function_12035>
; data inside code section at 0x12030 -- 0x12031
0x12030:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12031 -- 0x12032
; data inside code section at 0x12032 -- 0x12035
0x12032:    ff ff ff                                           |...             |
; function: function_12035 at 0x12035 -- 0x12037
0x12035:    c9                              	leave 
0x12036:    c3                              	ret 
; section: .text._ZSt8_DestroyIP6CTxOutEvT_S2_
; function: _ZSt8_DestroyIP6CTxOutEvT_S2_ at 0x12037 -- 0x1205b
0x12037:    55                              	push ebp
0x12038:    89 e5                           	mov ebp, esp
0x1203a:    83 ec 38                        	sub esp, 0x38
0x1203d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12040:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12043:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12046:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12049:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1204f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12052:    31 c0                           	xor eax, eax
0x12054:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12057:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0x1205b -- 0x1205c
0x1205b:    8b                                                 |.               |
; function: function_1205c at 0x1205c -- 0x12072
0x1205c:    45                              	inc ebp
0x1205d:    e4 89                           	in al, 0x89
0x1205f:    04 24                           	add al, 0x24
0x12061:    e8 da 48 01 00                  	call 0x26940 <unknown_26940>
0x12066:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12069:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12070:    74 05                           	je 0x12077 <function_12077>
; data inside code section at 0x12072 -- 0x12073
0x12072:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12073 -- 0x12074
; data inside code section at 0x12074 -- 0x12077
0x12074:    ff ff ff                                           |...             |
; function: function_12077 at 0x12077 -- 0x12079
0x12077:    c9                              	leave 
0x12078:    c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC2ERKS3_
; function: _ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS3_ at 0x1207a -- 0x120ad
0x1207a:    55                              	push ebp
0x1207b:    89 e5                           	mov ebp, esp
0x1207d:    83 ec 28                        	sub esp, 0x28
0x12080:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12083:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12086:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12089:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1208c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12092:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12095:    31 c0                           	xor eax, eax
0x12097:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1209a:    8b 10                           	mov edx, dword ptr [eax]
0x1209c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1209f:    89 10                           	mov dword ptr [eax], edx
0x120a1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x120a4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x120ab:    74 05                           	je 0x120b2 <function_120b2>
; data inside code section at 0x120ad -- 0x120ae
0x120ad:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x120ae -- 0x120af
; data inside code section at 0x120af -- 0x120b2
0x120af:    ff ff ff                                           |...             |
; function: function_120b2 at 0x120b2 -- 0x120b4
0x120b2:    c9                              	leave 
0x120b3:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv at 0x120b4 -- 0x120da
0x120b4:    55                              	push ebp
0x120b5:    89 e5                           	mov ebp, esp
0x120b7:    83 ec 28                        	sub esp, 0x28
0x120ba:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x120bd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x120c0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x120c6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x120c9:    31 c0                           	xor eax, eax
0x120cb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x120ce:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x120d1:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x120d8:    74 05                           	je 0x120df <function_120df>
; data inside code section at 0x120da -- 0x120db
0x120da:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x120db -- 0x120dc
; data inside code section at 0x120dc -- 0x120df
0x120dc:    ff ff ff                                           |...             |
; function: function_120df at 0x120df -- 0x120e1
0x120df:    c9                              	leave 
0x120e0:    c3                              	ret 
; section: .text._ZNK7CVarIntIyE16GetSerializeSizeEii
; function: _ZNK7CVarIntIyE16GetSerializeSizeEii at 0x120e2 -- 0x12127
0x120e2:    55                              	push ebp
0x120e3:    89 e5                           	mov ebp, esp
0x120e5:    83 ec 38                        	sub esp, 0x38
0x120e8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x120eb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x120ee:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x120f1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x120f4:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x120f7:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x120fa:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12100:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12103:    31 c0                           	xor eax, eax
0x12105:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12108:    8b 00                           	mov eax, dword ptr [eax]
0x1210a:    8b 50 04                        	mov edx, dword ptr [eax + 4]
0x1210d:    8b 00                           	mov eax, dword ptr [eax]
0x1210f:    89 04 24                        	mov dword ptr [esp], eax
0x12112:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12116:    e8 26 49 01 00                  	call 0x26a41 <unknown_26a41>
0x1211b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1211e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12125:    74 05                           	je 0x1212c <function_1212c>
; data inside code section at 0x12127 -- 0x12128
0x12127:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12128 -- 0x12129
; data inside code section at 0x12129 -- 0x1212c
0x12129:    ff ff ff                                           |...             |
; function: function_1212c at 0x1212c -- 0x1212e
0x1212c:    c9                              	leave 
0x1212d:    c3                              	ret 
; section: .text._Z15GetSizeOfVarIntIiEjT_
; function: _Z15GetSizeOfVarIntIiEjT_ at 0x1212e -- 0x12174
0x1212e:    55                              	push ebp
0x1212f:    89 e5                           	mov ebp, esp
0x12131:    83 ec 28                        	sub esp, 0x28
0x12134:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12137:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1213a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12140:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12143:    31 c0                           	xor eax, eax
0x12145:    c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x1214c:    83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x12150:    83 7d e4 7f                     	cmp dword ptr [ebp - 0x1c], 0x7f
0x12154:    7e 0e                           	jle 0x12164 <_Z15GetSizeOfVarIntIiEjT_+0x36>
0x12156:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12159:    c1 f8 07                        	sar eax, 7
0x1215c:    83 e8 01                        	sub eax, 1
0x1215f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12162:    eb e8                           	jmp 0x1214c <_Z15GetSizeOfVarIntIiEjT_+0x1e>
0x12164:    90                              	nop 
0x12165:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x12168:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1216b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12172:    74 05                           	je 0x12179 <function_12179>
; data inside code section at 0x12174 -- 0x12175
0x12174:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12175 -- 0x12176
; data inside code section at 0x12176 -- 0x12179
0x12176:    ff ff ff                                           |...             |
; function: function_12179 at 0x12179 -- 0x1217b
0x12179:    c9                              	leave 
0x1217a:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC2ERKS1_
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1ERKS1_ at 0x1217c -- 0x1218e
0x1217c:    55                              	push ebp
0x1217d:    89 e5                           	mov ebp, esp
0x1217f:    83 ec 38                        	sub esp, 0x38
0x12182:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12185:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12188:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1218b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x1218e -- 0x12192
0x1218e:    65 a1 14 00                                        |e...            |
; function: function_12192 at 0x12192 -- 0x121cb
0x12192:    00 00                           	add byte ptr [eax], al
0x12194:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12197:    31 c0                           	xor eax, eax
0x12199:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1219c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x121a0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x121a3:    89 04 24                        	mov dword ptr [esp], eax
0x121a6:    e8 9d 49 01 00                  	call 0x26b48 <unknown_26b48>
0x121ab:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x121ae:    c7 00 00 00 00 00               	mov dword ptr [eax], 0
0x121b4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x121b7:    c7 40 04 00 00 00 00            	mov dword ptr [eax + 4], 0
0x121be:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x121c1:    c7 40 08 00 00 00 00            	mov dword ptr [eax + 8], 0
0x121c8:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; data inside code section at 0x121cb -- 0x121ce
0x121cb:    65 33 05                                           |e3.             |
; function: function_121ce at 0x121ce -- 0x121d0
0x121ce:    14 00                           	adc al, 0
; function: function_121d0 at 0x121d0 -- 0x121d4
0x121d0:    00 00                           	add byte ptr [eax], al
0x121d2:    74 05                           	je 0x121d9 <function_121d9>
; data inside code section at 0x121d4 -- 0x121d5
0x121d4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x121d5 -- 0x121d6
; data inside code section at 0x121d6 -- 0x121d9
0x121d6:    ff ff ff                                           |...             |
; function: function_121d9 at 0x121d9 -- 0x121db
0x121d9:    c9                              	leave 
0x121da:    c3                              	ret 
; section: .text._ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj
; function: _ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj at 0x121dc -- 0x12223
0x121dc:    55                              	push ebp
0x121dd:    89 e5                           	mov ebp, esp
0x121df:    83 ec 38                        	sub esp, 0x38
0x121e2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x121e5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x121e8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x121eb:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x121ee:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x121f4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x121f7:    31 c0                           	xor eax, eax
0x121f9:    83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x121fd:    74 1c                           	je 0x1221b <_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj+0x3f>
0x121ff:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12202:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x1220a:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1220d:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12211:    89 04 24                        	mov dword ptr [esp], eax
0x12214:    e8 d1 49 01 00                  	call 0x26bea <unknown_26bea>
0x12219:    eb 05                           	jmp 0x12220 <_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj+0x44>
0x1221b:    b8 00 00 00 00                  	mov eax, 0
0x12220:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x12223 -- 0x12226
0x12223:    65 33 15                                           |e3.             |
; function: function_12226 at 0x12226 -- 0x1222c
0x12226:    14 00                           	adc al, 0
0x12228:    00 00                           	add byte ptr [eax], al
0x1222a:    74 05                           	je 0x12231 <function_12231>
; data inside code section at 0x1222c -- 0x1222d
0x1222c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1222d -- 0x1222e
; data inside code section at 0x1222e -- 0x12231
0x1222e:    ff ff ff                                           |...             |
; function: function_12231 at 0x12231 -- 0x12233
0x12231:    c9                              	leave 
0x12232:    c3                              	ret 
; section: .text._ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E
; function: _ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E at 0x12233 -- 0x1224e
0x12233:    55                              	push ebp
0x12234:    89 e5                           	mov ebp, esp
0x12236:    83 ec 38                        	sub esp, 0x38
0x12239:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1223c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1223f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12242:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12245:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12248:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1224b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
; function: function_1224e at 0x1224e -- 0x12281
0x1224e:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12251:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12257:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1225a:    31 c0                           	xor eax, eax
0x1225c:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1225f:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12263:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12266:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1226a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1226d:    89 04 24                        	mov dword ptr [esp], eax
0x12270:    e8 31 4a 01 00                  	call 0x26ca6 <unknown_26ca6>
0x12275:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12278:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1227f:    74 05                           	je 0x12286 <function_12286>
; data inside code section at 0x12281 -- 0x12282
0x12281:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12282 -- 0x12283
; data inside code section at 0x12283 -- 0x12286
0x12283:    ff ff ff                                           |...             |
; function: function_12286 at 0x12286 -- 0x12288
0x12286:    c9                              	leave 
0x12287:    c3                              	ret 
; section: .text._ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEC2ERKS2_
; function: _ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS2_ at 0x12288 -- 0x122bb
0x12288:    55                              	push ebp
0x12289:    89 e5                           	mov ebp, esp
0x1228b:    83 ec 28                        	sub esp, 0x28
0x1228e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12291:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12294:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12297:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1229a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x122a0:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x122a3:    31 c0                           	xor eax, eax
0x122a5:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x122a8:    8b 10                           	mov edx, dword ptr [eax]
0x122aa:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x122ad:    89 10                           	mov dword ptr [eax], edx
0x122af:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x122b2:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x122b9:    74 05                           	je 0x122c0 <function_122c0>
; data inside code section at 0x122bb -- 0x122bc
0x122bb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x122bc -- 0x122bd
; data inside code section at 0x122bd -- 0x122c0
0x122bd:    ff ff ff                                           |...             |
; function: function_122c0 at 0x122c0 -- 0x122c2
0x122c0:    c9                              	leave 
0x122c1:    c3                              	ret 
; section: .text._ZN5boost6detail13addr_impl_refIKSt6vectorI6CTxOutSaIS3_EEEC2ERS6_
; function: _ZN5boost6detail13addr_impl_refIKSt6vectorI6CTxOutSaIS3_EEEC1ERS6_ at 0x122c2 -- 0x122f3
0x122c2:    55                              	push ebp
0x122c3:    89 e5                           	mov ebp, esp
0x122c5:    83 ec 28                        	sub esp, 0x28
0x122c8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x122cb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x122ce:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x122d1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x122d4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x122da:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x122dd:    31 c0                           	xor eax, eax
0x122df:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x122e2:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x122e5:    89 10                           	mov dword ptr [eax], edx
0x122e7:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x122ea:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x122f1:    74 05                           	je 0x122f8 <function_122f8>
; data inside code section at 0x122f3 -- 0x122f4
0x122f3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x122f4 -- 0x122f5
; data inside code section at 0x122f5 -- 0x122f8
0x122f5:    ff ff ff                                           |...             |
; function: function_122f8 at 0x122f8 -- 0x122fa
0x122f8:    c9                              	leave 
0x122f9:    c3                              	ret 
; section: .text._ZNK5boost6detail13addr_impl_refIKSt6vectorI6CTxOutSaIS3_EEEcvRS6_Ev
; function: _ZNK5boost6detail13addr_impl_refIKSt6vectorI6CTxOutSaIS3_EEEcvRS6_Ev at 0x122fa -- 0x12311
0x122fa:    55                              	push ebp
0x122fb:    89 e5                           	mov ebp, esp
0x122fd:    83 ec 28                        	sub esp, 0x28
0x12300:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12303:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12306:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1230c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1230f:    31 c0                           	xor eax, eax
; data inside code section at 0x12311 -- 0x12313
0x12311:    8b 45                                              |.E              |
; function: function_12313 at 0x12313 -- 0x12322
0x12313:    e4 8b                           	in al, 0x8b
0x12315:    00 8b 55 f4 65 33               	add byte ptr [ebx + 0x3365f455], cl
0x1231b:    15 14 00 00 00                  	adc eax, 0x14
0x12320:    74 05                           	je 0x12327 <function_12327>
; data inside code section at 0x12322 -- 0x12323
0x12322:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12323 -- 0x12324
; data inside code section at 0x12324 -- 0x12327
0x12324:    ff ff ff                                           |...             |
; function: function_12327 at 0x12327 -- 0x12329
0x12327:    c9                              	leave 
0x12328:    c3                              	ret 
; section: .text._ZN5boost6detail14addressof_implIKSt6vectorI6CTxOutSaIS3_EEE1fERS6_l
; function: _ZN5boost6detail14addressof_implIKSt6vectorI6CTxOutSaIS3_EEE1fERS6_l at 0x12329 -- 0x1234c
0x12329:    55                              	push ebp
0x1232a:    89 e5                           	mov ebp, esp
0x1232c:    83 ec 28                        	sub esp, 0x28
0x1232f:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12332:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12335:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12338:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1233b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12341:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12344:    31 c0                           	xor eax, eax
0x12346:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12349:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; function: function_1234c at 0x1234c -- 0x1234d
; data inside code section at 0x1234d -- 0x12350
0x1234d:    33 15 14                                           |3..             |
; function: function_12350 at 0x12350 -- 0x12356
0x12350:    00 00                           	add byte ptr [eax], al
0x12352:    00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
; dynamically linked function: __stack_chk_fail at 0x12356 -- 0x12357
; data inside code section at 0x12357 -- 0x12359
0x12357:    ff ff                                              |..              |
; function: function_12359 at 0x12359 -- 0x1235c
0x12359:    ff c9                           	dec ecx
0x1235b:    c3                              	ret 
; section: .text._ZN5boost12range_detail11range_beginIKSt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_
; function: _ZN5boost12range_detail11range_beginIKSt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_ at 0x1235c -- 0x1239d
0x1235c:    55                              	push ebp
0x1235d:    89 e5                           	mov ebp, esp
0x1235f:    83 ec 38                        	sub esp, 0x38
0x12362:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12365:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12368:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1236b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1236e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12374:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12377:    31 c0                           	xor eax, eax
0x12379:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1237c:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1237f:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12383:    89 04 24                        	mov dword ptr [esp], eax
0x12386:    e8 bd e8 00 00                  	call 0x20c48 <unknown_20c48>
0x1238b:    83 ec 04                        	sub esp, 4
0x1238e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12391:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12394:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1239b:    74 05                           	je 0x123a2 <function_123a2>
; data inside code section at 0x1239d -- 0x1239e
0x1239d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1239e -- 0x1239f
; data inside code section at 0x1239f -- 0x123a2
0x1239f:    ff ff ff                                           |...             |
; function: function_123a2 at 0x123a2 -- 0x123a6
0x123a2:    c9                              	leave 
0x123a3:    c2 04 00                        	ret 4
; section: .text._ZN5boost12range_detail9range_endIKSt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_
; function: _ZN5boost12range_detail9range_endIKSt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_ at 0x123a6 -- 0x123e7
0x123a6:    55                              	push ebp
0x123a7:    89 e5                           	mov ebp, esp
0x123a9:    83 ec 38                        	sub esp, 0x38
0x123ac:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x123af:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x123b2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x123b5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x123b8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x123be:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x123c1:    31 c0                           	xor eax, eax
0x123c3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x123c6:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x123c9:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x123cd:    89 04 24                        	mov dword ptr [esp], eax
0x123d0:    e8 6d e8 00 00                  	call 0x20c42 <unknown_20c42>
0x123d5:    83 ec 04                        	sub esp, 4
0x123d8:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x123db:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x123de:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x123e5:    74 05                           	je 0x123ec <function_123ec>
; data inside code section at 0x123e7 -- 0x123e8
0x123e7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x123e8 -- 0x123e9
; data inside code section at 0x123e9 -- 0x123ec
0x123e9:    ff ff ff                                           |...             |
; function: function_123ec at 0x123ec -- 0x123f0
0x123ec:    c9                              	leave 
0x123ed:    c2 04 00                        	ret 4
; section: .text._ZNK9base_uintILj256EE16GetSerializeSizeEii
; function: _ZNK9base_uintILj256EE16GetSerializeSizeEii at 0x123f0 -- 0x12424
0x123f0:    55                              	push ebp
0x123f1:    89 e5                           	mov ebp, esp
0x123f3:    83 ec 28                        	sub esp, 0x28
0x123f6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x123f9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x123fc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x123ff:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12402:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12405:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12408:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1240e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12411:    31 c0                           	xor eax, eax
0x12413:    b8 20 00 00 00                  	mov eax, 0x20
0x12418:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1241b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12422:    74 05                           	je 0x12429 <function_12429>
; data inside code section at 0x12424 -- 0x12425
0x12424:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12425 -- 0x12426
; data inside code section at 0x12426 -- 0x12429
0x12426:    ff ff ff                                           |...             |
; function: function_12429 at 0x12429 -- 0x1242b
0x12429:    c9                              	leave 
0x1242a:    c3                              	ret 
; section: .text._ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh
; function: _ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh at 0x1242c -- 0x12430
0x1242c:    55                              	push ebp
0x1242d:    89 e5                           	mov ebp, esp
0x1242f:    56                              	push esi
; function: function_12430 at 0x12430 -- 0x127b0
0x12430:    53                              	push ebx
0x12431:    83 ec 50                        	sub esp, 0x50
0x12434:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12437:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x1243a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1243d:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x12440:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12443:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x12446:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12449:    89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x1244c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12452:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12455:    31 c0                           	xor eax, eax
0x12457:    83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x1245b:    0f 84 dd 03 00 00               	je 0x1283e <function_1283e>
0x12461:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12464:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x12467:    89 c2                           	mov edx, eax
0x12469:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1246c:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x1246f:    89 d1                           	mov ecx, edx
0x12471:    29 c1                           	sub ecx, eax
0x12473:    89 c8                           	mov eax, ecx
0x12475:    3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x12478:    0f 82 ac 01 00 00               	jb 0x1262a <function_12430+0x1fa>
0x1247e:    8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x12481:    0f b6 00                        	movzx eax, byte ptr [eax]
0x12484:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x12487:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x1248a:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1248d:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12491:    89 04 24                        	mov dword ptr [esp], eax
0x12494:    e8 03 91 00 00                  	call 0x1b59c <function_1b59c>
0x12499:    83 ec 04                        	sub esp, 4
0x1249c:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x1249f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x124a3:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x124a6:    89 04 24                        	mov dword ptr [esp], eax
0x124a9:    e8 4e 93 00 00                  	call 0x1b7fc <unknown_1b7fc>
0x124ae:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x124b1:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x124b4:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x124b7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x124ba:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x124bd:    3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x124c0:    0f 86 aa 00 00 00               	jbe 0x12570 <function_12430+0x140>
0x124c6:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x124c9:    89 04 24                        	mov dword ptr [esp], eax
0x124cc:    e8 d3 d8 00 00                  	call 0x1fda4 <unknown_1fda4>
0x124d1:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x124d4:    8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x124d7:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x124da:    8b 52 04                        	mov edx, dword ptr [edx + 4]
0x124dd:    8b 5d c4                        	mov ebx, dword ptr [ebp - 0x3c]
0x124e0:    8b 5b 04                        	mov ebx, dword ptr [ebx + 4]
0x124e3:    8b 75 bc                        	mov esi, dword ptr [ebp - 0x44]
0x124e6:    f7 de                           	neg esi
0x124e8:    01 f3                           	add ebx, esi
0x124ea:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x124ee:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x124f2:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x124f6:    89 1c 24                        	mov dword ptr [esp], ebx
0x124f9:    e8 80 1d 01 00                  	call 0x2427e <unknown_2427e>
0x124fe:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12501:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x12504:    89 c2                           	mov edx, eax
0x12506:    03 55 bc                        	add edx, dword ptr [ebp - 0x44]
0x12509:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1250c:    89 50 04                        	mov dword ptr [eax + 4], edx
0x1250f:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x12512:    f7 d8                           	neg eax
0x12514:    89 c3                           	mov ebx, eax
0x12516:    03 5d e0                        	add ebx, dword ptr [ebp - 0x20]
0x12519:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x1251c:    89 04 24                        	mov dword ptr [esp], eax
0x1251f:    e8 0e e3 00 00                  	call 0x20832 <unknown_20832>
0x12524:    8b 00                           	mov eax, dword ptr [eax]
0x12526:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12529:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1252d:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x12531:    89 04 24                        	mov dword ptr [esp], eax
0x12534:    e8 0d 1c 01 00                  	call 0x24146 <unknown_24146>
0x12539:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x1253c:    89 04 24                        	mov dword ptr [esp], eax
0x1253f:    e8 ee e2 00 00                  	call 0x20832 <unknown_20832>
0x12544:    8b 00                           	mov eax, dword ptr [eax]
0x12546:    89 c3                           	mov ebx, eax
0x12548:    03 5d bc                        	add ebx, dword ptr [ebp - 0x44]
0x1254b:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x1254e:    89 04 24                        	mov dword ptr [esp], eax
0x12551:    e8 dc e2 00 00                  	call 0x20832 <unknown_20832>
0x12556:    8b 00                           	mov eax, dword ptr [eax]
0x12558:    8d 55 f3                        	lea edx, [ebp - 0xd]
0x1255b:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1255f:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x12563:    89 04 24                        	mov dword ptr [esp], eax
0x12566:    e8 83 49 01 00                  	call 0x26eee <unknown_26eee>
0x1256b:    e9 ce 02 00 00                  	jmp 0x1283e <function_1283e>
0x12570:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12573:    89 04 24                        	mov dword ptr [esp], eax
0x12576:    e8 29 d8 00 00                  	call 0x1fda4 <unknown_1fda4>
0x1257b:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1257e:    8b 4d bc                        	mov ecx, dword ptr [ebp - 0x44]
0x12581:    29 d1                           	sub ecx, edx
0x12583:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x12586:    8b 52 04                        	mov edx, dword ptr [edx + 4]
0x12589:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1258d:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x12590:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12594:    89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x12598:    89 14 24                        	mov dword ptr [esp], edx
0x1259b:    e8 07 15 01 00                  	call 0x23aa7 <unknown_23aa7>
0x125a0:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x125a3:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x125a6:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x125a9:    8b 4d bc                        	mov ecx, dword ptr [ebp - 0x44]
0x125ac:    89 cb                           	mov ebx, ecx
0x125ae:    29 d3                           	sub ebx, edx
0x125b0:    89 da                           	mov edx, ebx
0x125b2:    01 c2                           	add edx, eax
0x125b4:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x125b7:    89 50 04                        	mov dword ptr [eax + 4], edx
0x125ba:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x125bd:    89 04 24                        	mov dword ptr [esp], eax
0x125c0:    e8 df d7 00 00                  	call 0x1fda4 <unknown_1fda4>
0x125c5:    89 c3                           	mov ebx, eax
0x125c7:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x125ca:    8b 70 04                        	mov esi, dword ptr [eax + 4]
0x125cd:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x125d0:    89 04 24                        	mov dword ptr [esp], eax
0x125d3:    e8 5a e2 00 00                  	call 0x20832 <unknown_20832>
0x125d8:    8b 00                           	mov eax, dword ptr [eax]
0x125da:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x125de:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x125e2:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x125e5:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x125e9:    89 04 24                        	mov dword ptr [esp], eax
0x125ec:    e8 8d 1c 01 00                  	call 0x2427e <unknown_2427e>
0x125f1:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x125f4:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x125f7:    89 c2                           	mov edx, eax
0x125f9:    03 55 dc                        	add edx, dword ptr [ebp - 0x24]
0x125fc:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x125ff:    89 50 04                        	mov dword ptr [eax + 4], edx
0x12602:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x12605:    89 04 24                        	mov dword ptr [esp], eax
0x12608:    e8 25 e2 00 00                  	call 0x20832 <unknown_20832>
0x1260d:    8b 00                           	mov eax, dword ptr [eax]
0x1260f:    8d 55 f3                        	lea edx, [ebp - 0xd]
0x12612:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12616:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12619:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1261d:    89 04 24                        	mov dword ptr [esp], eax
0x12620:    e8 c9 48 01 00                  	call 0x26eee <unknown_26eee>
0x12625:    e9 14 02 00 00                  	jmp 0x1283e <function_1283e>
0x1262a:    c7 44 24 08 09 3f 00 00         	mov dword ptr [esp + 8], 0x3f09 ; "vector::_M_fill_insert"
0x12632:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x12635:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12639:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1263c:    89 04 24                        	mov dword ptr [esp], eax
0x1263f:    e8 68 1b 01 00                  	call 0x241ac <unknown_241ac>
0x12644:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12647:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x1264a:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1264d:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12651:    89 04 24                        	mov dword ptr [esp], eax
0x12654:    e8 1b 8c 00 00                  	call 0x1b274 <function_1b274>
0x12659:    83 ec 04                        	sub esp, 4
0x1265c:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x1265f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12663:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x12666:    89 04 24                        	mov dword ptr [esp], eax
0x12669:    e8 8e 91 00 00                  	call 0x1b7fc <unknown_1b7fc>
0x1266e:    89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x12671:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12674:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x12677:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1267b:    89 04 24                        	mov dword ptr [esp], eax
0x1267e:    e8 cd 13 01 00                  	call 0x23a50 <unknown_23a50>
0x12683:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x12686:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x12689:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1268c:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1268f:    89 04 24                        	mov dword ptr [esp], eax
0x12692:    e8 0d d7 00 00                  	call 0x1fda4 <unknown_1fda4>
0x12697:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x1269a:    8b 4d ec                        	mov ecx, dword ptr [ebp - 0x14]
0x1269d:    01 ca                           	add edx, ecx
0x1269f:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x126a3:    8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x126a6:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x126aa:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x126ad:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x126b1:    89 14 24                        	mov dword ptr [esp], edx
0x126b4:    e8 ee 13 01 00                  	call 0x23aa7 <unknown_23aa7>
0x126b9:    c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x126c0:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x126c3:    89 04 24                        	mov dword ptr [esp], eax
0x126c6:    e8 d9 d6 00 00                  	call 0x1fda4 <unknown_1fda4>
0x126cb:    89 c3                           	mov ebx, eax
0x126cd:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x126d0:    89 04 24                        	mov dword ptr [esp], eax
0x126d3:    e8 5a e1 00 00                  	call 0x20832 <unknown_20832>
0x126d8:    8b 10                           	mov edx, dword ptr [eax]
0x126da:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x126dd:    8b 00                           	mov eax, dword ptr [eax]
0x126df:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x126e3:    8b 4d ec                        	mov ecx, dword ptr [ebp - 0x14]
0x126e6:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x126ea:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x126ee:    89 04 24                        	mov dword ptr [esp], eax
0x126f1:    e8 88 1b 01 00                  	call 0x2427e <unknown_2427e>
0x126f6:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x126f9:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x126fc:    01 45 d8                        	add dword ptr [ebp - 0x28], eax
0x126ff:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12702:    89 04 24                        	mov dword ptr [esp], eax
0x12705:    e8 9a d6 00 00                  	call 0x1fda4 <unknown_1fda4>
0x1270a:    89 c3                           	mov ebx, eax
0x1270c:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1270f:    8b 70 04                        	mov esi, dword ptr [eax + 4]
0x12712:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x12715:    89 04 24                        	mov dword ptr [esp], eax
0x12718:    e8 15 e1 00 00                  	call 0x20832 <unknown_20832>
0x1271d:    8b 00                           	mov eax, dword ptr [eax]
0x1271f:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x12723:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x12726:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1272a:    89 74 24 04                     	mov dword ptr [esp + 4], esi
0x1272e:    89 04 24                        	mov dword ptr [esp], eax
0x12731:    e8 48 1b 01 00                  	call 0x2427e <unknown_2427e>
0x12736:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12739:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1273c:    89 04 24                        	mov dword ptr [esp], eax
0x1273f:    e8 60 d6 00 00                  	call 0x1fda4 <unknown_1fda4>
0x12744:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x12747:    8b 4a 04                        	mov ecx, dword ptr [edx + 4]
0x1274a:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1274d:    8b 12                           	mov edx, dword ptr [edx]
0x1274f:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12753:    89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x12757:    89 14 24                        	mov dword ptr [esp], edx
0x1275a:    e8 72 d6 00 00                  	call 0x1fdd1 <unknown_1fdd1>
0x1275f:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12762:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x12765:    89 c2                           	mov edx, eax
0x12767:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1276a:    8b 00                           	mov eax, dword ptr [eax]
0x1276c:    89 d1                           	mov ecx, edx
0x1276e:    29 c1                           	sub ecx, eax
0x12770:    89 c8                           	mov eax, ecx
0x12772:    89 c1                           	mov ecx, eax
0x12774:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12777:    8b 10                           	mov edx, dword ptr [eax]
0x12779:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1277c:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x12780:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12784:    89 04 24                        	mov dword ptr [esp], eax
0x12787:    e8 e0 d8 00 00                  	call 0x2006c <unknown_2006c>
0x1278c:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1278f:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x12792:    89 10                           	mov dword ptr [eax], edx
0x12794:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12797:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x1279a:    89 50 04                        	mov dword ptr [eax + 4], edx
0x1279d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x127a0:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x127a3:    01 c2                           	add edx, eax
0x127a5:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x127a8:    89 50 08                        	mov dword ptr [eax + 8], edx
0x127ab:    e9 8e 00 00 00                  	jmp 0x1283e <function_1283e>
; data inside code section at 0x127b0 -- 0x127b1
0x127b0:    89                                                 |.               |
; function: function_127b1 at 0x127b1 -- 0x127b2
0x127b1:    c3                              	ret 
; data inside code section at 0x127b2 -- 0x127b3
0x127b2:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x127b3 -- 0x127b4
; data inside code section at 0x127b4 -- 0x127bd
0x127b4:    ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x127bd -- 0x127be
; data inside code section at 0x127be -- 0x127c5
0x127be:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x127c5 -- 0x127c6
; data inside code section at 0x127c6 -- 0x127c8
0x127c6:    ff ff                                              |..              |
; function: function_127c8 at 0x127c8 -- 0x127d9
0x127c8:    ff 83 7d d8 00 75               	inc dword ptr [ebx + 0x7500d87d]
0x127ce:    30 8b 45 c4 89 04               	xor byte ptr [ebx + 0x489c445], cl
0x127d4:    24 e8                           	and al, 0xe8
0x127d6:    ca d5 00                        	retf 0xd5
; function: function_127d9 at 0x127d9 -- 0x127ff
0x127d9:    00 8b 55 bc 8b 4d               	add byte ptr [ebx + 0x4d8bbc55], cl
0x127df:    e8 01 ca 03 55                  	call 0x5504f1e5 <unknown_5504f1e5>
0x127e4:    ec                              	in al, dx
0x127e5:    8b 4d e8                        	mov ecx, dword ptr [ebp - 0x18]
0x127e8:    8b 5d ec                        	mov ebx, dword ptr [ebp - 0x14]
0x127eb:    01 d9                           	add ecx, ebx
0x127ed:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x127f1:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x127f5:    89 0c 24                        	mov dword ptr [esp], ecx
0x127f8:    e8 d4 d5 00 00                  	call 0x1fdd1 <unknown_1fdd1>
0x127fd:    eb 21                           	jmp 0x12820 <function_12820>
; function: function_127ff at 0x127ff -- 0x12820
0x127ff:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12802:    89 04 24                        	mov dword ptr [esp], eax
0x12805:    e8 9a d5 00 00                  	call 0x1fda4 <unknown_1fda4>
0x1280a:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1280e:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x12811:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12815:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x12818:    89 04 24                        	mov dword ptr [esp], eax
0x1281b:    e8 b1 d5 00 00                  	call 0x1fdd1 <unknown_1fdd1>
; function: function_12820 at 0x12820 -- 0x12839
0x12820:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x12823:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x12826:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1282a:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x1282d:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12831:    89 04 24                        	mov dword ptr [esp], eax
0x12834:    e8 33 d8 00 00                  	call 0x2006c <unknown_2006c>
; data inside code section at 0x12839 -- 0x1283a
0x12839:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x1283a -- 0x1283b
; data inside code section at 0x1283b -- 0x1283e
0x1283b:    ff ff ff                                           |...             |
; function: function_1283e at 0x1283e -- 0x1284a
0x1283e:    8b 5d f4                        	mov ebx, dword ptr [ebp - 0xc]
0x12841:    65 33 1d 14 00 00 00            	xor ebx, dword ptr gs:[0x14]
0x12848:    74 05                           	je 0x1284f <function_1284f>
; data inside code section at 0x1284a -- 0x1284b
0x1284a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1284b -- 0x1284c
; data inside code section at 0x1284c -- 0x1284f
0x1284c:    ff ff ff                                           |...             |
; function: function_1284f at 0x1284f -- 0x12856
0x1284f:    8d 65 f8                        	lea esp, [ebp - 8]
0x12852:    5b                              	pop ebx
0x12853:    5e                              	pop esi
0x12854:    5d                              	pop ebp
0x12855:    c3                              	ret 
; section: .text._ZNK9base_uintILj256EE9SerializeI11CHashWriterEEvRT_ii
; function: _ZNK9base_uintILj256EE9SerializeI11CHashWriterEEvRT_ii at 0x12856 -- 0x128a5
0x12856:    55                              	push ebp
0x12857:    89 e5                           	mov ebp, esp
0x12859:    83 ec 38                        	sub esp, 0x38
0x1285c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1285f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12862:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12865:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12868:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1286b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1286e:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12871:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12874:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1287a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1287d:    31 c0                           	xor eax, eax
0x1287f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12882:    c7 44 24 08 20 00 00 00         	mov dword ptr [esp + 8], 0x20
0x1288a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1288e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12891:    89 04 24                        	mov dword ptr [esp], eax
0x12894:    e8 bb 4c 00 00                  	call 0x17554
0x12899:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1289c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x128a3:    74 05                           	je 0x128aa <function_128aa>
; data inside code section at 0x128a5 -- 0x128a6
0x128a5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x128a6 -- 0x128a7
; data inside code section at 0x128a7 -- 0x128aa
0x128a7:    ff ff ff                                           |...             |
; function: function_128aa at 0x128aa -- 0x128ac
0x128aa:    c9                              	leave 
0x128ab:    c3                              	ret 
; section: .text._Z16GetSerializeSizeIc7uint256EjRKSt4pairIT_T0_Eii
; function: _Z16GetSerializeSizeIc7uint256EjRKSt4pairIT_T0_Eii at 0x128ac -- 0x1291b
0x128ac:    55                              	push ebp
0x128ad:    89 e5                           	mov ebp, esp
0x128af:    53                              	push ebx
0x128b0:    83 ec 34                        	sub esp, 0x34
0x128b3:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x128b6:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x128b9:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x128bc:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x128bf:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x128c2:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x128c5:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x128cb:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x128ce:    31 c0                           	xor eax, eax
0x128d0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x128d3:    0f b6 00                        	movzx eax, byte ptr [eax]
0x128d6:    0f be c0                        	movsx eax, al
0x128d9:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x128dc:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x128e0:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x128e3:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x128e7:    89 04 24                        	mov dword ptr [esp], eax
0x128ea:    e8 ed 42 00 00                  	call 0x16bdc <function_16bdc>
0x128ef:    89 c3                           	mov ebx, eax
0x128f1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x128f4:    8d 50 04                        	lea edx, [eax + 4]
0x128f7:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x128fa:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x128fe:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12901:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12905:    89 14 24                        	mov dword ptr [esp], edx
0x12908:    e8 e8 ef 00 00                  	call 0x218f5 <unknown_218f5>
0x1290d:    01 d8                           	add eax, ebx
0x1290f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12912:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12919:    74 05                           	je 0x12920 <function_12920>
; data inside code section at 0x1291b -- 0x1291c
0x1291b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1291c -- 0x1291d
; data inside code section at 0x1291d -- 0x12920
0x1291d:    ff ff ff                                           |...             |
; function: function_12920 at 0x12920 -- 0x12926
0x12920:    83 c4 34                        	add esp, 0x34
0x12923:    5b                              	pop ebx
0x12924:    5d                              	pop ebp
0x12925:    c3                              	ret 
; section: .text._Z16GetSerializeSizeI6CCoinsEjRKT_li
; function: _Z16GetSerializeSizeI6CCoinsEjRKT_li at 0x12926 -- 0x1296e
0x12926:    55                              	push ebp
0x12927:    89 e5                           	mov ebp, esp
0x12929:    83 ec 38                        	sub esp, 0x38
0x1292c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1292f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12932:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12935:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12938:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1293b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1293e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12944:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12947:    31 c0                           	xor eax, eax
0x12949:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1294c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12950:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12953:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12957:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1295a:    89 04 24                        	mov dword ptr [esp], eax
0x1295d:    e8 e2 60 00 00                  	call 0x18a44 <function_18a44>
0x12962:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12965:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1296c:    74 05                           	je 0x12973 <function_12973>
; data inside code section at 0x1296e -- 0x1296f
0x1296e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1296f -- 0x12970
; data inside code section at 0x12970 -- 0x12973
0x12970:    ff ff ff                                           |...             |
; function: function_12973 at 0x12973 -- 0x12975
0x12973:    c9                              	leave 
0x12974:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream6CCoinsEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream6CCoinsEvRT_RKT0_li at 0x12975 -- 0x129ca
0x12975:    55                              	push ebp
0x12976:    89 e5                           	mov ebp, esp
0x12978:    83 ec 38                        	sub esp, 0x38
0x1297b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1297e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12981:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12984:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12987:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1298a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1298d:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12990:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12993:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12999:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1299c:    31 c0                           	xor eax, eax
0x1299e:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x129a1:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x129a5:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x129a8:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x129ac:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x129af:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x129b3:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x129b6:    89 04 24                        	mov dword ptr [esp], eax
0x129b9:    e8 39 4f 01 00                  	call 0x278f7 <unknown_278f7>
0x129be:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x129c1:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x129c8:    74 05                           	je 0x129cf <function_129cf>
; data inside code section at 0x129ca -- 0x129cb
0x129ca:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x129cb -- 0x129cc
; data inside code section at 0x129cc -- 0x129cf
0x129cc:    ff ff ff                                           |...             |
; function: function_129cf at 0x129cf -- 0x129d1
0x129cf:    c9                              	leave 
0x129d0:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamEvRT_cii
; function: _Z9SerializeI11CDataStreamEvRT_cii at 0x129d1 -- 0x12a14
0x129d1:    55                              	push ebp
0x129d2:    89 e5                           	mov ebp, esp
0x129d4:    83 ec 38                        	sub esp, 0x38
0x129d7:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x129da:    8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x129dd:    89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x129e0:    88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x129e3:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x129e6:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x129e9:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x129ec:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x129ef:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x129f5:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x129f8:    31 c0                           	xor eax, eax
0x129fa:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x12a02:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x12a05:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12a09:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12a0c:    89 04 24                        	mov dword ptr [esp], eax
0x12a0f:    e8 2b 4b 00 00                  	call 0x1753f
; function: function_12a14 at 0x12a14 -- 0x12a20
0x12a14:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12a17:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12a1e:    74 05                           	je 0x12a25 <function_12a25>
; data inside code section at 0x12a20 -- 0x12a21
0x12a20:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12a21 -- 0x12a22
; data inside code section at 0x12a22 -- 0x12a25
0x12a22:    ff ff ff                                           |...             |
; function: function_12a25 at 0x12a25 -- 0x12a27
0x12a25:    c9                              	leave 
0x12a26:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream7uint256EvRT_RKT0_li
; function: _Z9SerializeI11CDataStream7uint256EvRT_RKT0_li at 0x12a27 -- 0x12a7c
0x12a27:    55                              	push ebp
0x12a28:    89 e5                           	mov ebp, esp
0x12a2a:    83 ec 38                        	sub esp, 0x38
0x12a2d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12a30:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12a33:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12a36:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12a39:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12a3c:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12a3f:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12a42:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12a45:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12a4b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12a4e:    31 c0                           	xor eax, eax
0x12a50:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12a53:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x12a56:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x12a5a:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x12a5d:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12a61:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x12a64:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12a68:    89 04 24                        	mov dword ptr [esp], eax
0x12a6b:    e8 23 53 01 00                  	call 0x27d93 <unknown_27d93>
0x12a70:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12a73:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12a7a:    74 05                           	je 0x12a81 <function_12a81>
; data inside code section at 0x12a7c -- 0x12a7d
0x12a7c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12a7d -- 0x12a7e
; data inside code section at 0x12a7e -- 0x12a81
0x12a7e:    ff ff ff                                           |...             |
; function: function_12a81 at 0x12a81 -- 0x12a83
0x12a81:    c9                              	leave 
0x12a82:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_beginEv
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_beginEv at 0x12a84 -- 0x12aad
0x12a84:    55                              	push ebp
0x12a85:    89 e5                           	mov ebp, esp
0x12a87:    83 ec 28                        	sub esp, 0x28
0x12a8a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12a8d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12a90:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12a96:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12a99:    31 c0                           	xor eax, eax
0x12a9b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12a9e:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x12aa1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12aa4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12aab:    74 05                           	je 0x12ab2 <function_12ab2>
; data inside code section at 0x12aad -- 0x12aae
0x12aad:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12aae -- 0x12aaf
; data inside code section at 0x12aaf -- 0x12ab2
0x12aaf:    ff ff ff                                           |...             |
; function: function_12ab2 at 0x12ab2 -- 0x12ab4
0x12ab2:    c9                              	leave 
0x12ab3:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_M_endEv
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_M_endEv at 0x12ab4 -- 0x12add
0x12ab4:    55                              	push ebp
0x12ab5:    89 e5                           	mov ebp, esp
0x12ab7:    83 ec 28                        	sub esp, 0x28
0x12aba:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12abd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12ac0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12ac6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12ac9:    31 c0                           	xor eax, eax
0x12acb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12ace:    83 c0 04                        	add eax, 4
0x12ad1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12ad4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12adb:    74 05                           	je 0x12ae2 <function_12ae2>
; data inside code section at 0x12add -- 0x12ade
0x12add:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12ade -- 0x12adf
; data inside code section at 0x12adf -- 0x12ae2
0x12adf:    ff ff ff                                           |...             |
; function: function_12ae2 at 0x12ae2 -- 0x12ae4
0x12ae2:    c9                              	leave 
0x12ae3:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_ESE_RS2_
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_ESE_RS2_ at 0x12ae4 -- 0x12b11
0x12ae4:    55                              	push ebp
0x12ae5:    89 e5                           	mov ebp, esp
0x12ae7:    83 ec 48                        	sub esp, 0x48
0x12aea:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12aed:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12af0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12af3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12af6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12af9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12afc:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12aff:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12b02:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x12b05:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x12b08:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12b0e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0x12b11 -- 0x12b12
0x12b11:    31                                                 |1               |
; function: function_12b12 at 0x12b12 -- 0x12b15
0x12b12:    c0 eb 4e                        	shr bl, 0x4e
; data inside code section at 0x12b15 -- 0x12b21
0x12b15:    8b 45 dc 89 04 24 e8 86  53 01 00 89               |.E...$..S...    |
; function: function_12b21 at 0x12b21 -- 0x12b24
0x12b21:    c2 8b 45                        	ret 0x458b
; data inside code section at 0x12b24 -- 0x12b4e
0x12b24:    e0 8b 4d d4 89 4c 24 08  89 54 24 04 89 04 24 e8   |..M..L$..T$...$.|
0x12b34:    40 f3 00 00 83 f0 01 84  c0 74 16 8b 45 dc 89 45   |@........t..E..E|
0x12b44:    d8 8b 45 dc 89 04 24 e8  9a 53                     |..E...$..S      |
; function: function_12b4e at 0x12b4e -- 0x12b55
0x12b4e:    01 00                           	add dword ptr [eax], eax
0x12b50:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12b53:    eb 0e                           	jmp 0x12b63 <function_12b63>
; data inside code section at 0x12b55 -- 0x12b63
0x12b55:    8b 45 dc 89 04 24 e8 ba  53 01 00 89 45 dc         |.E...$..S...E.  |
; function: function_12b63 at 0x12b63 -- 0x12b83
0x12b63:    83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x12b67:    0f 95 c0                        	setne al
0x12b6a:    84 c0                           	test al, al
0x12b6c:    75 a7                           	jne 0x12b15
0x12b6e:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x12b71:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12b75:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12b78:    89 04 24                        	mov dword ptr [esp], eax
0x12b7b:    e8 40 2b 01 00                  	call 0x256c0 <unknown_256c0>
0x12b80:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x12b83 -- 0x12b84
0x12b83:    8b                                                 |.               |
; function: function_12b84 at 0x12b84 -- 0x12b8f
0x12b84:    55                              	push ebp
0x12b85:    f4                              	hlt 
0x12b86:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12b8d:    74 05                           	je 0x12b94 <function_12b94>
; data inside code section at 0x12b8f -- 0x12b90
0x12b8f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12b90 -- 0x12b91
; data inside code section at 0x12b91 -- 0x12b94
0x12b91:    ff ff ff                                           |...             |
; function: function_12b94 at 0x12b94 -- 0x12b98
0x12b94:    c9                              	leave 
0x12b95:    c2 04 00                        	ret 4
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base at 0x12b98 -- 0x12bd5
0x12b98:    55                              	push ebp
0x12b99:    89 e5                           	mov ebp, esp
0x12b9b:    83 ec 38                        	sub esp, 0x38
0x12b9e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12ba1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12ba4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12baa:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12bad:    31 c0                           	xor eax, eax
0x12baf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12bb2:    89 04 24                        	mov dword ptr [esp], eax
0x12bb5:    e8 44 54 01 00                  	call 0x27ffe <unknown_27ffe>
0x12bba:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12bbe:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x12bc1:    89 04 24                        	mov dword ptr [esp], eax
0x12bc4:    e8 65 54 01 00                  	call 0x2802e <unknown_2802e>
0x12bc9:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12bcc:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12bd3:    74 05                           	je 0x12bda <function_12bda>
; data inside code section at 0x12bd5 -- 0x12bd6
0x12bd5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12bd6 -- 0x12bd7
; data inside code section at 0x12bd7 -- 0x12bda
0x12bd7:    ff ff ff                                           |...             |
; function: function_12bda at 0x12bda -- 0x12bdc
0x12bda:    c9                              	leave 
0x12bdb:    c3                              	ret 
; section: .text._ZNSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEC2EPSt13_Rb_tree_nodeIS5_E
; function: _ZNSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEC1EPSt13_Rb_tree_nodeIS5_E at 0x12bdc -- 0x12c0d
0x12bdc:    55                              	push ebp
0x12bdd:    89 e5                           	mov ebp, esp
0x12bdf:    83 ec 28                        	sub esp, 0x28
0x12be2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12be5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12be8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12beb:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12bee:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12bf4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12bf7:    31 c0                           	xor eax, eax
0x12bf9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12bfc:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12bff:    89 10                           	mov dword ptr [eax], edx
0x12c01:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12c04:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12c0b:    74 05                           	je 0x12c12 <function_12c12>
; data inside code section at 0x12c0d -- 0x12c0e
0x12c0d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12c0e -- 0x12c0f
; data inside code section at 0x12c0f -- 0x12c12
0x12c0f:    ff ff ff                                           |...             |
; function: function_12c12 at 0x12c12 -- 0x12c14
0x12c12:    c9                              	leave 
0x12c13:    c3                              	ret 
; section: .text._ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEC2EPKSt13_Rb_tree_nodeIS4_E
; function: _ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEC1EPKSt13_Rb_tree_nodeIS4_E at 0x12c14 -- 0x12c45
0x12c14:    55                              	push ebp
0x12c15:    89 e5                           	mov ebp, esp
0x12c17:    83 ec 28                        	sub esp, 0x28
0x12c1a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12c1d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12c20:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12c23:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12c26:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12c2c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12c2f:    31 c0                           	xor eax, eax
0x12c31:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12c34:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12c37:    89 10                           	mov dword ptr [eax], edx
0x12c39:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12c3c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12c43:    74 05                           	je 0x12c4a <function_12c4a>
; data inside code section at 0x12c45 -- 0x12c46
0x12c45:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12c46 -- 0x12c47
; data inside code section at 0x12c47 -- 0x12c4a
0x12c47:    ff ff ff                                           |...             |
; function: function_12c4a at 0x12c4a -- 0x12c4c
0x12c4a:    c9                              	leave 
0x12c4b:    c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeI15CDiskBlockIndexEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeI15CDiskBlockIndexEEjRKT_ at 0x12c4c -- 0x12c94
0x12c4c:    55                              	push ebp
0x12c4d:    89 e5                           	mov ebp, esp
0x12c4f:    83 ec 38                        	sub esp, 0x38
0x12c52:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12c55:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12c58:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12c5b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12c5e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12c64:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12c67:    31 c0                           	xor eax, eax
0x12c69:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12c6c:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x12c6f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12c72:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x12c75:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12c79:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12c7d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12c80:    89 04 24                        	mov dword ptr [esp], eax
0x12c83:    e8 8d 54 01 00                  	call 0x28115 <unknown_28115>
0x12c88:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12c8b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12c92:    74 05                           	je 0x12c99 <function_12c99>
; data inside code section at 0x12c94 -- 0x12c95
0x12c94:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12c95 -- 0x12c96
; data inside code section at 0x12c96 -- 0x12c99
0x12c96:    ff ff ff                                           |...             |
; function: function_12c99 at 0x12c99 -- 0x12c9b
0x12c99:    c9                              	leave 
0x12c9a:    c3                              	ret 
; section: .text._ZN11CDataStreamlsI15CDiskBlockIndexEERS_RKT_
; function: _ZN11CDataStreamlsI15CDiskBlockIndexEERS_RKT_ at 0x12c9c -- 0x12cee
0x12c9c:    55                              	push ebp
0x12c9d:    89 e5                           	mov ebp, esp
0x12c9f:    83 ec 38                        	sub esp, 0x38
0x12ca2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12ca5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12ca8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12cab:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12cae:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12cb4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12cb7:    31 c0                           	xor eax, eax
0x12cb9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12cbc:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x12cbf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12cc2:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x12cc5:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x12cc9:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12ccd:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12cd0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12cd4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12cd7:    89 04 24                        	mov dword ptr [esp], eax
0x12cda:    e8 d5 54 01 00                  	call 0x281b4 <unknown_281b4>
0x12cdf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12ce2:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12ce5:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12cec:    74 05                           	je 0x12cf3 <function_12cf3>
; data inside code section at 0x12cee -- 0x12cef
0x12cee:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12cef -- 0x12cf0
; data inside code section at 0x12cf0 -- 0x12cf3
0x12cf0:    ff ff ff                                           |...             |
; function: function_12cf3 at 0x12cf3 -- 0x12cf5
0x12cf3:    c9                              	leave 
0x12cf4:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream7CBigNumEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream7CBigNumEvRT_RT0_li at 0x12cf5 -- 0x12d4a
0x12cf5:    55                              	push ebp
0x12cf6:    89 e5                           	mov ebp, esp
0x12cf8:    83 ec 38                        	sub esp, 0x38
0x12cfb:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12cfe:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12d01:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12d04:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12d07:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12d0a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12d0d:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12d10:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12d13:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12d19:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12d1c:    31 c0                           	xor eax, eax
0x12d1e:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x12d21:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x12d25:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x12d28:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12d2c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12d2f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12d33:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12d36:    89 04 24                        	mov dword ptr [esp], eax
0x12d39:    e8 2b 55 01 00                  	call 0x28269 <unknown_28269>
0x12d3e:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12d41:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12d48:    74 05                           	je 0x12d4f <function_12d4f>
; data inside code section at 0x12d4a -- 0x12d4b
0x12d4a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12d4b -- 0x12d4c
; data inside code section at 0x12d4c -- 0x12d4f
0x12d4c:    ff ff ff                                           |...             |
; function: function_12d4f at 0x12d4f -- 0x12d51
0x12d4f:    c9                              	leave 
0x12d50:    c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeI7CBigNumEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeI7CBigNumEEjRKT_ at 0x12d52 -- 0x12d78
0x12d52:    55                              	push ebp
0x12d53:    89 e5                           	mov ebp, esp
0x12d55:    83 ec 38                        	sub esp, 0x38
0x12d58:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12d5b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12d5e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12d61:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12d64:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12d6a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12d6d:    31 c0                           	xor eax, eax
0x12d6f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12d72:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x12d75:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_12d78 at 0x12d78 -- 0x12d9a
0x12d78:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x12d7b:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12d7f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12d83:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12d86:    89 04 24                        	mov dword ptr [esp], eax
0x12d89:    e8 da 55 01 00                  	call 0x28368 <unknown_28368>
0x12d8e:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12d91:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12d98:    74 05                           	je 0x12d9f <function_12d9f>
; data inside code section at 0x12d9a -- 0x12d9b
0x12d9a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12d9b -- 0x12d9c
; data inside code section at 0x12d9c -- 0x12d9f
0x12d9c:    ff ff ff                                           |...             |
; function: function_12d9f at 0x12d9f -- 0x12da1
0x12d9f:    c9                              	leave 
0x12da0:    c3                              	ret 
; section: .text._ZN11CDataStreamlsI7CBigNumEERS_RKT_
; function: _ZN11CDataStreamlsI7CBigNumEERS_RKT_ at 0x12da2 -- 0x12df4
0x12da2:    55                              	push ebp
0x12da3:    89 e5                           	mov ebp, esp
0x12da5:    83 ec 38                        	sub esp, 0x38
0x12da8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12dab:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12dae:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12db1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12db4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12dba:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12dbd:    31 c0                           	xor eax, eax
0x12dbf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12dc2:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x12dc5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12dc8:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x12dcb:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x12dcf:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12dd3:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12dd6:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12dda:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12ddd:    89 04 24                        	mov dword ptr [esp], eax
0x12de0:    e8 22 56 01 00                  	call 0x28407 <unknown_28407>
0x12de5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12de8:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12deb:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12df2:    74 05                           	je 0x12df9 <function_12df9>
; data inside code section at 0x12df4 -- 0x12df5
0x12df4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12df5 -- 0x12df6
; data inside code section at 0x12df6 -- 0x12df9
0x12df6:    ff ff ff                                           |...             |
; function: function_12df9 at 0x12df9 -- 0x12dfb
0x12df9:    c9                              	leave 
0x12dfa:    c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeI14CBlockFileInfoEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeI14CBlockFileInfoEEjRKT_ at 0x12dfc -- 0x12e44
0x12dfc:    55                              	push ebp
0x12dfd:    89 e5                           	mov ebp, esp
0x12dff:    83 ec 38                        	sub esp, 0x38
0x12e02:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12e05:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12e08:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12e0b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12e0e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12e14:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12e17:    31 c0                           	xor eax, eax
0x12e19:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12e1c:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x12e1f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12e22:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x12e25:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12e29:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12e2d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12e30:    89 04 24                        	mov dword ptr [esp], eax
0x12e33:    e8 85 56 01 00                  	call 0x284bd <unknown_284bd>
0x12e38:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12e3b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12e42:    74 05                           	je 0x12e49 <function_12e49>
; data inside code section at 0x12e44 -- 0x12e45
0x12e44:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12e45 -- 0x12e46
; data inside code section at 0x12e46 -- 0x12e49
0x12e46:    ff ff ff                                           |...             |
; function: function_12e49 at 0x12e49 -- 0x12e4b
0x12e49:    c9                              	leave 
0x12e4a:    c3                              	ret 
; section: .text._ZN11CDataStreamlsI14CBlockFileInfoEERS_RKT_
; function: _ZN11CDataStreamlsI14CBlockFileInfoEERS_RKT_ at 0x12e4c -- 0x12e84
0x12e4c:    55                              	push ebp
0x12e4d:    89 e5                           	mov ebp, esp
0x12e4f:    83 ec 38                        	sub esp, 0x38
0x12e52:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12e55:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12e58:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12e5b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12e5e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12e64:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12e67:    31 c0                           	xor eax, eax
0x12e69:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12e6c:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x12e6f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12e72:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x12e75:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x12e79:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12e7d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12e80:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0x12e84 -- 0x12e86
0x12e84:    8b 45                                              |.E              |
; function: function_12e86 at 0x12e86 -- 0x12e9e
0x12e86:    e4 89                           	in al, 0x89
0x12e88:    04 24                           	add al, 0x24
0x12e8a:    e8 cd 56 01 00                  	call 0x2855c <unknown_2855c>
0x12e8f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12e92:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12e95:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12e9c:    74 05                           	je 0x12ea3 <function_12ea3>
; data inside code section at 0x12e9e -- 0x12e9f
0x12e9e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12e9f -- 0x12ea0
; data inside code section at 0x12ea0 -- 0x12ea3
0x12ea0:    ff ff ff                                           |...             |
; function: function_12ea3 at 0x12ea3 -- 0x12ea5
0x12ea3:    c9                              	leave 
0x12ea4:    c3                              	ret 
; section: .text._Z16GetSerializeSizeIciEjRKSt4pairIT_T0_Eii
; function: _Z16GetSerializeSizeIciEjRKSt4pairIT_T0_Eii at 0x12ea5 -- 0x12eaf
0x12ea5:    55                              	push ebp
0x12ea6:    89 e5                           	mov ebp, esp
0x12ea8:    53                              	push ebx
0x12ea9:    83 ec 34                        	sub esp, 0x34
0x12eac:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x12eaf -- 0x12eb0
0x12eaf:    89                                                 |.               |
; function: function_12eb0 at 0x12eb0 -- 0x12ee3
0x12eb0:    45                              	inc ebp
0x12eb1:    e4 8b                           	in al, 0x8b
0x12eb3:    45                              	inc ebp
0x12eb4:    0c 89                           	or al, 0x89
0x12eb6:    45                              	inc ebp
0x12eb7:    e0 8b                           	loopne 0x12e44
0x12eb9:    45                              	inc ebp
0x12eba:    10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0x12ec0:    14 00                           	adc al, 0
0x12ec2:    00 00                           	add byte ptr [eax], al
0x12ec4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12ec7:    31 c0                           	xor eax, eax
0x12ec9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12ecc:    0f b6 00                        	movzx eax, byte ptr [eax]
0x12ecf:    0f be c0                        	movsx eax, al
0x12ed2:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x12ed5:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12ed9:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12edc:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12ee0:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x12ee3 -- 0x12ee6
0x12ee3:    e8 ed 42                                           |..B             |
; function: function_12ee6 at 0x12ee6 -- 0x12f14
0x12ee6:    00 00                           	add byte ptr [eax], al
0x12ee8:    89 c3                           	mov ebx, eax
0x12eea:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12eed:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x12ef0:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x12ef3:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12ef7:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x12efa:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x12efe:    89 04 24                        	mov dword ptr [esp], eax
0x12f01:    e8 0a 43 00 00                  	call 0x17210 <function_17210>
0x12f06:    01 d8                           	add eax, ebx
0x12f08:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x12f0b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x12f12:    74 05                           	je 0x12f19 <function_12f19>
; data inside code section at 0x12f14 -- 0x12f15
0x12f14:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12f15 -- 0x12f16
; data inside code section at 0x12f16 -- 0x12f19
0x12f16:    ff ff ff                                           |...             |
; function: function_12f19 at 0x12f19 -- 0x12f1f
0x12f19:    83 c4 34                        	add esp, 0x34
0x12f1c:    5b                              	pop ebx
0x12f1d:    5d                              	pop ebp
0x12f1e:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamciEvRT_RKSt4pairIT0_T1_Eii
; function: _Z9SerializeI11CDataStreamciEvRT_RKSt4pairIT0_T1_Eii at 0x12f1f -- 0x12f82
0x12f1f:    55                              	push ebp
0x12f20:    89 e5                           	mov ebp, esp
0x12f22:    83 ec 38                        	sub esp, 0x38
0x12f25:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12f28:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12f2b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12f2e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12f31:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12f34:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12f37:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x12f3a:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x12f3d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x12f43:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12f46:    31 c0                           	xor eax, eax
0x12f48:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12f4b:    0f b6 00                        	movzx eax, byte ptr [eax]
0x12f4e:    0f be c0                        	movsx eax, al
0x12f51:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x12f54:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x12f58:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x12f5b:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x12f5f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12f63:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12f66:    89 04 24                        	mov dword ptr [esp], eax
0x12f69:    e8 82 29 01 00                  	call 0x258f0 <unknown_258f0>
0x12f6e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12f71:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x12f74:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x12f77:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x12f7b:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x12f7e:    89 54 24 08                     	mov dword ptr [esp + 8], edx
; data inside code section at 0x12f82 -- 0x12f84
0x12f82:    89 44                                              |.D              |
; function: function_12f84 at 0x12f84 -- 0x12f9d
0x12f84:    24 04                           	and al, 4
0x12f86:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12f89:    89 04 24                        	mov dword ptr [esp], eax
0x12f8c:    e8 70 d7 00 00                  	call 0x20701 <unknown_20701>
0x12f91:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12f94:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12f9b:    74 05                           	je 0x12fa2 <function_12fa2>
; data inside code section at 0x12f9d -- 0x12f9e
0x12f9d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12f9e -- 0x12f9f
; data inside code section at 0x12f9f -- 0x12fa2
0x12f9f:    ff ff ff                                           |...             |
; function: function_12fa2 at 0x12fa2 -- 0x12fa4
0x12fa2:    c9                              	leave 
0x12fa3:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream14CBlockFileInfoEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream14CBlockFileInfoEvRT_RT0_li at 0x12fa4 -- 0x12fbf
0x12fa4:    55                              	push ebp
0x12fa5:    89 e5                           	mov ebp, esp
0x12fa7:    83 ec 38                        	sub esp, 0x38
0x12faa:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x12fad:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x12fb0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x12fb3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x12fb6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x12fb9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x12fbc:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
; data inside code section at 0x12fbf -- 0x12fc0
0x12fbf:    89                                                 |.               |
; function: function_12fc0 at 0x12fc0 -- 0x12ff9
0x12fc0:    45                              	inc ebp
0x12fc1:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x12fc4:    14 00                           	adc al, 0
0x12fc6:    00 00                           	add byte ptr [eax], al
0x12fc8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x12fcb:    31 c0                           	xor eax, eax
0x12fcd:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x12fd0:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x12fd4:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x12fd7:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x12fdb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x12fde:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x12fe2:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x12fe5:    89 04 24                        	mov dword ptr [esp], eax
0x12fe8:    e8 23 57 01 00                  	call 0x28710 <unknown_28710>
0x12fed:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x12ff0:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x12ff7:    74 05                           	je 0x12ffe <function_12ffe>
; data inside code section at 0x12ff9 -- 0x12ffa
0x12ff9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12ffa -- 0x12ffb
; data inside code section at 0x12ffb -- 0x12ffe
0x12ffb:    ff ff ff                                           |...             |
; function: function_12ffe at 0x12ffe -- 0x13000
0x12ffe:    c9                              	leave 
0x12fff:    c3                              	ret 
; section: .text._ZN11CDataStream16GetSerializeSizeIiEEjRKT_
; function: _ZN11CDataStream16GetSerializeSizeIiEEjRKT_ at 0x13000 -- 0x1304a
0x13000:    55                              	push ebp
0x13001:    89 e5                           	mov ebp, esp
0x13003:    83 ec 38                        	sub esp, 0x38
0x13006:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13009:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1300c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1300f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13012:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13018:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1301b:    31 c0                           	xor eax, eax
0x1301d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13020:    8b 48 18                        	mov ecx, dword ptr [eax + 0x18]
0x13023:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13026:    8b 50 14                        	mov edx, dword ptr [eax + 0x14]
0x13029:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1302c:    8b 00                           	mov eax, dword ptr [eax]
0x1302e:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x13032:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13036:    89 04 24                        	mov dword ptr [esp], eax
0x13039:    e8 2d 43 00 00                  	call 0x1736b
0x1303e:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13041:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13048:    74 05                           	je 0x1304f <function_1304f>
; data inside code section at 0x1304a -- 0x1304b
0x1304a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1304b -- 0x1304c
; data inside code section at 0x1304c -- 0x1304f
0x1304c:    ff ff ff                                           |...             |
; function: function_1304f at 0x1304f -- 0x13051
0x1304f:    c9                              	leave 
0x13050:    c3                              	ret 
; section: .text._ZN6CCoins11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN6CCoins11UnserializeI11CDataStreamEEvRT_ii at 0x13052 -- 0x130ef
0x13052:    55                              	push ebp
0x13053:    89 e5                           	mov ebp, esp
0x13055:    53                              	push ebx
0x13056:    81 ec 94 00 00 00               	sub esp, 0x94
0x1305c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1305f:    89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x13062:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13065:    89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x13068:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1306b:    89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x13071:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x13074:    89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x1307a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13080:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13083:    31 c0                           	xor eax, eax
0x13085:    c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x1308c:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x1308f:    83 c0 14                        	add eax, 0x14
0x13092:    89 04 24                        	mov dword ptr [esp], eax
0x13095:    e8 63 98 00 00                  	call 0x1c8fd <unknown_1c8fd>
0x1309a:    8d 55 d4                        	lea edx, [ebp - 0x2c]
0x1309d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x130a1:    89 14 24                        	mov dword ptr [esp], edx
0x130a4:    e8 81 98 00 00                  	call 0x1c92a <unknown_1c92a>
0x130a9:    83 ec 04                        	sub esp, 4
0x130ac:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x130af:    89 04 24                        	mov dword ptr [esp], eax
0x130b2:    e8 ba 98 00 00                  	call 0x1c971 <unknown_1c971>
0x130b7:    8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x130bd:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x130c1:    8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x130c7:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x130cb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x130cf:    8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x130d2:    89 04 24                        	mov dword ptr [esp], eax
0x130d5:    e8 7a 59 01 00                  	call 0x28a54 <unknown_28a54>
0x130da:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x130dd:    89 04 24                        	mov dword ptr [esp], eax
0x130e0:    e8 e8 93 00 00                  	call 0x1c4cd <unknown_1c4cd>
0x130e5:    8d 55 d8                        	lea edx, [ebp - 0x28]
0x130e8:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x130ec:    89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x130ef -- 0x130f2
0x130ef:    e8 06 94                                           |...             |
; function: function_130f2 at 0x130f2 -- 0x132cc
0x130f2:    00 00                           	add byte ptr [eax], al
0x130f4:    83 ec 04                        	sub esp, 4
0x130f7:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x130fa:    89 04 24                        	mov dword ptr [esp], eax
0x130fd:    e8 3f 94 00 00                  	call 0x1c541 <unknown_1c541>
0x13102:    8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x13108:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1310c:    8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x13112:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x13116:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1311a:    8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x1311d:    89 04 24                        	mov dword ptr [esp], eax
0x13120:    e8 8b 59 01 00                  	call 0x28ab0 <unknown_28ab0>
0x13125:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x13128:    83 e0 01                        	and eax, 1
0x1312b:    89 c2                           	mov edx, eax
0x1312d:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x13130:    88 10                           	mov byte ptr [eax], dl
0x13132:    8d 45 f1                        	lea eax, [ebp - 0xf]
0x13135:    89 04 24                        	mov dword ptr [esp], eax
0x13138:    e8 cf 59 01 00                  	call 0x28b0c <unknown_28b0c>
0x1313d:    c6 45 f0 00                     	mov byte ptr [ebp - 0x10], 0
0x13141:    8d 45 f1                        	lea eax, [ebp - 0xf]
0x13144:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x13148:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x1314b:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1314f:    c7 44 24 04 02 00 00 00         	mov dword ptr [esp + 4], 2
0x13157:    8d 45 90                        	lea eax, [ebp - 0x70]
0x1315a:    89 04 24                        	mov dword ptr [esp], eax
0x1315d:    e8 16 5a 01 00                  	call 0x28b78 <unknown_28b78>
0x13162:    8d 45 f1                        	lea eax, [ebp - 0xf]
0x13165:    89 04 24                        	mov dword ptr [esp], eax
0x13168:    e8 d5 59 01 00                  	call 0x28b42 <unknown_28b42>
0x1316d:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x13170:    83 e0 02                        	and eax, 2
0x13173:    85 c0                           	test eax, eax
0x13175:    0f 95 c0                        	setne al
0x13178:    0f b6 d8                        	movzx ebx, al
0x1317b:    8d 45 b8                        	lea eax, [ebp - 0x48]
0x1317e:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x13186:    8d 55 90                        	lea edx, [ebp - 0x70]
0x13189:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1318d:    89 04 24                        	mov dword ptr [esp], eax
0x13190:    e8 d5 a0 00 00                  	call 0x1d26a <unknown_1d26a>
0x13195:    83 ec 04                        	sub esp, 4
0x13198:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x1319c:    8d 45 b8                        	lea eax, [ebp - 0x48]
0x1319f:    89 04 24                        	mov dword ptr [esp], eax
0x131a2:    e8 f3 1e 00 00                  	call 0x1509a <function_1509a>
0x131a7:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x131aa:    83 e0 04                        	and eax, 4
0x131ad:    85 c0                           	test eax, eax
0x131af:    0f 95 c0                        	setne al
0x131b2:    0f b6 d8                        	movzx ebx, al
0x131b5:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x131b8:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x131c0:    8d 55 90                        	lea edx, [ebp - 0x70]
0x131c3:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x131c7:    89 04 24                        	mov dword ptr [esp], eax
0x131ca:    e8 9b a0 00 00                  	call 0x1d26a <unknown_1d26a>
0x131cf:    83 ec 04                        	sub esp, 4
0x131d2:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x131d6:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x131d9:    89 04 24                        	mov dword ptr [esp], eax
0x131dc:    e8 b9 1e 00 00                  	call 0x1509a <function_1509a>
0x131e1:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x131e4:    89 c2                           	mov edx, eax
0x131e6:    c1 ea 03                        	shr edx, 3
0x131e9:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x131ec:    83 e0 06                        	and eax, 6
0x131ef:    85 c0                           	test eax, eax
0x131f1:    0f 94 c0                        	sete al
0x131f4:    0f b6 c0                        	movzx eax, al
0x131f7:    01 d0                           	add eax, edx
0x131f9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x131fc:    eb 79                           	jmp 0x13277 <function_130f2+0x185>
0x131fe:    c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x13202:    8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x13208:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1320c:    8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x13212:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13216:    8d 45 f2                        	lea eax, [ebp - 0xe]
0x13219:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1321d:    8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x13220:    89 04 24                        	mov dword ptr [esp], eax
0x13223:    e8 3b 5a 01 00                  	call 0x28c63 <unknown_28c63>
0x13228:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x1322f:    eb 2f                           	jmp 0x13260 <function_130f2+0x16e>
0x13231:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x13235:    0f b6 d0                        	movzx edx, al
0x13238:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x1323b:    89 d3                           	mov ebx, edx
0x1323d:    89 c1                           	mov ecx, eax
0x1323f:    d3 fb                           	sar ebx, cl
0x13241:    89 d8                           	mov eax, ebx
0x13243:    83 e0 01                        	and eax, 1
0x13246:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x13249:    0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x1324d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13251:    8d 45 90                        	lea eax, [ebp - 0x70]
0x13254:    89 04 24                        	mov dword ptr [esp], eax
0x13257:    e8 5e 5a 01 00                  	call 0x28cba <unknown_28cba>
0x1325c:    83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x13260:    83 7d e8 07                     	cmp dword ptr [ebp - 0x18], 7
0x13264:    0f 96 c0                        	setbe al
0x13267:    84 c0                           	test al, al
0x13269:    75 c6                           	jne 0x13231 <function_130f2+0x13f>
0x1326b:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x1326f:    84 c0                           	test al, al
0x13271:    74 04                           	je 0x13277 <function_130f2+0x185>
0x13273:    83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x13277:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x1327b:    0f 95 c0                        	setne al
0x1327e:    84 c0                           	test al, al
0x13280:    0f 85 78 ff ff ff               	jne 0x131fe <function_130f2+0x10c>
0x13286:    8d 45 a4                        	lea eax, [ebp - 0x5c]
0x13289:    89 04 24                        	mov dword ptr [esp], eax
0x1328c:    e8 8d 5a 00 00                  	call 0x18d1e <function_18d1e>
0x13291:    8d 45 90                        	lea eax, [ebp - 0x70]
0x13294:    89 04 24                        	mov dword ptr [esp], eax
0x13297:    e8 68 9f 00 00                  	call 0x1d204 <unknown_1d204>
0x1329c:    8b 55 84                        	mov edx, dword ptr [ebp - 0x7c]
0x1329f:    8d 4a 04                        	lea ecx, [edx + 4]
0x132a2:    8d 55 a4                        	lea edx, [ebp - 0x5c]
0x132a5:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x132a9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x132ad:    89 0c 24                        	mov dword ptr [esp], ecx
0x132b0:    e8 c9 5a 01 00                  	call 0x28d7e <unknown_28d7e>
0x132b5:    8d 45 a4                        	lea eax, [ebp - 0x5c]
0x132b8:    89 04 24                        	mov dword ptr [esp], eax
0x132bb:    e8 8c 5c 00 00                  	call 0x18f4c <function_18f4c>
0x132c0:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x132c7:    e9 81 00 00 00                  	jmp 0x1334d
; data inside code section at 0x132cc -- 0x13309
0x132cc:    8d 45 c8 8b 55 ec 89 54  24 08 8d 55 90 89 54 24   |.E..U..T$..U..T$|
0x132dc:    04 89 04 24 e8 85 9f 00  00 83 ec 04 8d 45 c8 89   |...$.........E..|
0x132ec:    04 24 e8 69 1d 00 00 84  c0 74 52 8b 45 84 8d 50   |.$.i.....tR.E..P|
0x132fc:    04 8b 45 ec 89 44 24 04  89 14 24 e8 08            |..E..D$...$..   |
; function: function_13309 at 0x13309 -- 0x1330c
0x13309:    c2 00 00                        	ret 0
; data inside code section at 0x1330c -- 0x13315
0x1330c:    89 44 24 04 8d 45 dc 89  04                        |.D$..E...       |
; function: function_13315 at 0x13315 -- 0x1331c
0x13315:    24 e8                           	and al, 0xe8
0x13317:    e9 5a 00 00 8d                  	jmp 0x8d013376 <function_8d013376>
; data inside code section at 0x1331c -- 0x13322
0x1331c:    45 dc 89 04 24 e8                                  |E...$.          |
; function: function_13322 at 0x13322 -- 0x13358
0x13322:    a7                              	cmpsd dword ptr [esi], dword ptr es:[edi]
0x13323:    5a                              	pop edx
0x13324:    01 00                           	add dword ptr [eax], eax
0x13326:    8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x1332c:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x13330:    8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x13336:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1333a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1333e:    8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x13341:    89 04 24                        	mov dword ptr [esp], eax
0x13344:    e8 b1 5a 01 00                  	call 0x28dfa <unknown_28dfa>
0x13349:    83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x1334d:    8d 45 90                        	lea eax, [ebp - 0x70]
0x13350:    89 04 24                        	mov dword ptr [esp], eax
0x13353:    e8 ac 9e 00 00                  	call 0x1d204 <unknown_1d204>
; function: function_13358 at 0x13358 -- 0x133d8
0x13358:    3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x1335b:    0f 97 c0                        	seta al
0x1335e:    84 c0                           	test al, al
0x13360:    0f 85 66 ff ff ff               	jne 0x132cc
0x13366:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x13369:    83 c0 10                        	add eax, 0x10
0x1336c:    89 04 24                        	mov dword ptr [esp], eax
0x1336f:    e8 89 95 00 00                  	call 0x1c8fd <unknown_1c8fd>
0x13374:    8d 55 e0                        	lea edx, [ebp - 0x20]
0x13377:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1337b:    89 14 24                        	mov dword ptr [esp], edx
0x1337e:    e8 a7 95 00 00                  	call 0x1c92a <unknown_1c92a>
0x13383:    83 ec 04                        	sub esp, 4
0x13386:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x13389:    89 04 24                        	mov dword ptr [esp], eax
0x1338c:    e8 e0 95 00 00                  	call 0x1c971 <unknown_1c971>
0x13391:    8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x13397:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1339b:    8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x133a1:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x133a5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x133a9:    8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x133ac:    89 04 24                        	mov dword ptr [esp], eax
0x133af:    e8 a0 56 01 00                  	call 0x28a54 <unknown_28a54>
0x133b4:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x133b7:    89 04 24                        	mov dword ptr [esp], eax
0x133ba:    e8 df 5c 00 00                  	call 0x1909e <function_1909e>
0x133bf:    8d 45 90                        	lea eax, [ebp - 0x70]
0x133c2:    89 04 24                        	mov dword ptr [esp], eax
0x133c5:    e8 64 58 01 00                  	call 0x28c2e <unknown_28c2e>
0x133ca:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x133cd:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x133d4:    74 44                           	je 0x1341a <function_1341a>
0x133d6:    eb 3d                           	jmp 0x13415 <function_13415>
; data inside code section at 0x133d8 -- 0x133d9
0x133d8:    89                                                 |.               |
; function: function_133d9 at 0x133d9 -- 0x133da
0x133d9:    c3                              	ret 
; data inside code section at 0x133da -- 0x133de
0x133da:    8d 45 f1 89                                        |.E..            |
; function: function_133de at 0x133de -- 0x133ea
0x133de:    04 24                           	add al, 0x24
0x133e0:    e8 5d 57 01 00                  	call 0x28b42 <unknown_28b42>
0x133e5:    89 d8                           	mov eax, ebx
0x133e7:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x133ea -- 0x133eb
0x133ea:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x133eb -- 0x133ec
; data inside code section at 0x133ec -- 0x133ee
0x133ec:    ff ff                                              |..              |
; function: function_133ee at 0x133ee -- 0x133fe
0x133ee:    ff 89 c3 8d 45 a4               	dec dword ptr [ecx - 0x5bba723d]
0x133f4:    89 04 24                        	mov dword ptr [esp], eax
0x133f7:    e8 50 5b 00 00                  	call 0x18f4c <function_18f4c>
0x133fc:    eb 02                           	jmp 0x13400 <function_13400>
; function: function_133fe at 0x133fe -- 0x13400
0x133fe:    89 c3                           	mov ebx, eax
; function: function_13400 at 0x13400 -- 0x13410
0x13400:    8d 45 90                        	lea eax, [ebp - 0x70]
0x13403:    89 04 24                        	mov dword ptr [esp], eax
0x13406:    e8 23 58 01 00                  	call 0x28c2e <unknown_28c2e>
0x1340b:    89 d8                           	mov eax, ebx
0x1340d:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x13410 -- 0x13411
0x13410:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x13411 -- 0x13412
; data inside code section at 0x13412 -- 0x13414
0x13412:    ff ff                                              |..              |
; function: function_13414 at 0x13414 -- 0x13415
; function: function_13415 at 0x13415 -- 0x13416
; dynamically linked function: __stack_chk_fail at 0x13416 -- 0x13417
; data inside code section at 0x13417 -- 0x1341a
0x13417:    ff ff ff                                           |...             |
; function: function_1341a at 0x1341a -- 0x1341f
0x1341a:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1341d:    c9                              	leave 
0x1341e:    c3                              	ret 
; section: .text._ZN9base_uintILj256EE11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN9base_uintILj256EE11UnserializeI11CDataStreamEEvRT_ii at 0x13420 -- 0x1346f
0x13420:    55                              	push ebp
0x13421:    89 e5                           	mov ebp, esp
0x13423:    83 ec 38                        	sub esp, 0x38
0x13426:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13429:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1342c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1342f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13432:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13435:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13438:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1343b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1343e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13444:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13447:    31 c0                           	xor eax, eax
0x13449:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1344c:    c7 44 24 08 20 00 00 00         	mov dword ptr [esp + 8], 0x20
0x13454:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13458:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1345b:    89 04 24                        	mov dword ptr [esp], eax
0x1345e:    e8 c3 49 00 00                  	call 0x17e26 <_ZN9__gnu_cxx13new_allocatorIbEC1Ev>
0x13463:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x13466:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1346d:    74 05                           	je 0x13474 <function_13474>
; data inside code section at 0x1346f -- 0x13470
0x1346f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13470 -- 0x13471
; data inside code section at 0x13471 -- 0x13474
0x13471:    ff ff ff                                           |...             |
; function: function_13474 at 0x13474 -- 0x13476
0x13474:    c9                              	leave 
0x13475:    c3                              	ret 
; section: .text._ZNK7CVarIntIiE9SerializeI11CHashWriterEEvRT_ii
; function: _ZNK7CVarIntIiE9SerializeI11CHashWriterEEvRT_ii at 0x13476 -- 0x1349a
0x13476:    55                              	push ebp
0x13477:    89 e5                           	mov ebp, esp
0x13479:    83 ec 38                        	sub esp, 0x38
0x1347c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1347f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13482:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13485:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13488:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1348b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1348e:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x13491:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x13494:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; function: function_1349a at 0x1349a -- 0x134c1
0x1349a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1349d:    31 c0                           	xor eax, eax
0x1349f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x134a2:    8b 00                           	mov eax, dword ptr [eax]
0x134a4:    8b 00                           	mov eax, dword ptr [eax]
0x134a6:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x134aa:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x134ad:    89 04 24                        	mov dword ptr [esp], eax
0x134b0:    e8 c5 5d 01 00                  	call 0x2927a <unknown_2927a>
0x134b5:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x134b8:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x134bf:    74 05                           	je 0x134c6 <function_134c6>
; data inside code section at 0x134c1 -- 0x134c2
0x134c1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x134c2 -- 0x134c3
; data inside code section at 0x134c3 -- 0x134c6
0x134c3:    ff ff ff                                           |...             |
; function: function_134c6 at 0x134c6 -- 0x134c8
0x134c6:    c9                              	leave 
0x134c7:    c3                              	ret 
; section: .text._ZNK7CVarIntIjE9SerializeI11CHashWriterEEvRT_ii
; function: _ZNK7CVarIntIjE9SerializeI11CHashWriterEEvRT_ii at 0x134c8 -- 0x13513
0x134c8:    55                              	push ebp
0x134c9:    89 e5                           	mov ebp, esp
0x134cb:    83 ec 38                        	sub esp, 0x38
0x134ce:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x134d1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x134d4:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x134d7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x134da:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x134dd:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x134e0:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x134e3:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x134e6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x134ec:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x134ef:    31 c0                           	xor eax, eax
0x134f1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x134f4:    8b 00                           	mov eax, dword ptr [eax]
0x134f6:    8b 00                           	mov eax, dword ptr [eax]
0x134f8:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x134fc:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x134ff:    89 04 24                        	mov dword ptr [esp], eax
0x13502:    e8 67 5e 01 00                  	call 0x2936e <unknown_2936e>
0x13507:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1350a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x13511:    74 05                           	je 0x13518 <function_13518>
; data inside code section at 0x13513 -- 0x13514
0x13513:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13514 -- 0x13515
; data inside code section at 0x13515 -- 0x13518
0x13515:    ff ff ff                                           |...             |
; function: function_13518 at 0x13518 -- 0x1351a
0x13518:    c9                              	leave 
0x13519:    c3                              	ret 
; section: .text._ZNK6CTxOut9SerializeI11CHashWriterEEvRT_ii
; function: _ZNK6CTxOut9SerializeI11CHashWriterEEvRT_ii at 0x1351a -- 0x13544
0x1351a:    55                              	push ebp
0x1351b:    89 e5                           	mov ebp, esp
0x1351d:    53                              	push ebx
0x1351e:    83 ec 44                        	sub esp, 0x44
0x13521:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13524:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13527:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1352a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1352d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13530:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13533:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x13536:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x13539:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1353f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13542:    31 c0                           	xor eax, eax
; data inside code section at 0x13544 -- 0x13546
0x13544:    c6 45                                              |.E              |
; function: function_13546 at 0x13546 -- 0x135b4
0x13546:    f1                              	int1 
0x13547:    00 c6                           	add dh, al
0x13549:    45                              	inc ebp
0x1354a:    f2 01 c6                        	add esi, eax
0x1354d:    45                              	inc ebp
0x1354e:    f3 00 c7                        	add bh, al
0x13551:    45                              	inc ebp
0x13552:    ec                              	in al, dx
0x13553:    00 00                           	add byte ptr [eax], al
0x13555:    00 00                           	add byte ptr [eax], al
0x13557:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1355a:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x1355e:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x13561:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x13565:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x13568:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1356c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13570:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13573:    89 04 24                        	mov dword ptr [esp], eax
0x13576:    e8 e5 5e 01 00                  	call 0x29460 <unknown_29460>
0x1357b:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1357e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13581:    8d 50 08                        	lea edx, [eax + 8]
0x13584:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x13588:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1358b:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1358f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x13592:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13596:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1359a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1359d:    89 04 24                        	mov dword ptr [esp], eax
0x135a0:    e8 2c 5f 01 00                  	call 0x294d1 <unknown_294d1>
0x135a5:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x135a8:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x135ab:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x135b2:    74 05                           	je 0x135b9 <function_135b9>
; data inside code section at 0x135b4 -- 0x135b5
0x135b4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x135b5 -- 0x135b6
; data inside code section at 0x135b6 -- 0x135b9
0x135b6:    ff ff ff                                           |...             |
; function: function_135b9 at 0x135b9 -- 0x135bf
0x135b9:    83 c4 44                        	add esp, 0x44
0x135bc:    5b                              	pop ebx
0x135bd:    5d                              	pop ebp
0x135be:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream10CDiskTxPosEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream10CDiskTxPosEvRT_RT0_li at 0x135bf -- 0x13614
0x135bf:    55                              	push ebp
0x135c0:    89 e5                           	mov ebp, esp
0x135c2:    83 ec 38                        	sub esp, 0x38
0x135c5:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x135c8:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x135cb:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x135ce:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x135d1:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x135d4:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x135d7:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x135da:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x135dd:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x135e3:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x135e6:    31 c0                           	xor eax, eax
0x135e8:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x135eb:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x135ef:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x135f2:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x135f6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x135f9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x135fd:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13600:    89 04 24                        	mov dword ptr [esp], eax
0x13603:    e8 d7 5f 01 00                  	call 0x295df <unknown_295df>
0x13608:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1360b:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x13612:    74 05                           	je 0x13619 <function_13619>
; data inside code section at 0x13614 -- 0x13615
0x13614:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13615 -- 0x13616
; data inside code section at 0x13616 -- 0x13619
0x13616:    ff ff ff                                           |...             |
; function: function_13619 at 0x13619 -- 0x1361b
0x13619:    c9                              	leave 
0x1361a:    c3                              	ret 
; section: .text._Z16GetSerializeSizeI10CDiskTxPosEjRKT_li
; function: _Z16GetSerializeSizeI10CDiskTxPosEjRKT_li at 0x1361b -- 0x13641
0x1361b:    55                              	push ebp
0x1361c:    89 e5                           	mov ebp, esp
0x1361e:    83 ec 38                        	sub esp, 0x38
0x13621:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13624:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13627:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1362a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1362d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13630:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13633:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13639:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1363c:    31 c0                           	xor eax, eax
0x1363e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
; data inside code section at 0x13641 -- 0x13644
0x13641:    89 44 24                                           |.D$             |
; function: function_13644 at 0x13644 -- 0x13663
0x13644:    08 8b 45 e0 89 44               	or byte ptr [ebx + 0x4489e045], cl
0x1364a:    24 04                           	and al, 4
0x1364c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1364f:    89 04 24                        	mov dword ptr [esp], eax
0x13652:    e8 92 67 00 00                  	call 0x19de9 <function_19de9>
0x13657:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1365a:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13661:    74 05                           	je 0x13668 <function_13668>
; data inside code section at 0x13663 -- 0x13664
0x13663:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13664 -- 0x13665
; data inside code section at 0x13665 -- 0x13668
0x13665:    ff ff ff                                           |...             |
; function: function_13668 at 0x13668 -- 0x1366a
0x13668:    c9                              	leave 
0x13669:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream10CDiskTxPosEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream10CDiskTxPosEvRT_RKT0_li at 0x1366a -- 0x13682
0x1366a:    55                              	push ebp
0x1366b:    89 e5                           	mov ebp, esp
0x1366d:    83 ec 38                        	sub esp, 0x38
0x13670:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13673:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13676:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13679:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1367c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1367f:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
; data inside code section at 0x13682 -- 0x13684
0x13682:    8b 45                                              |.E              |
; function: function_13684 at 0x13684 -- 0x136b6
0x13684:    14 89                           	adc al, 0x89
0x13686:    45                              	inc ebp
0x13687:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x1368a:    14 00                           	adc al, 0
0x1368c:    00 00                           	add byte ptr [eax], al
0x1368e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13691:    31 c0                           	xor eax, eax
0x13693:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x13696:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1369a:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1369d:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x136a1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x136a4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x136a8:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x136ab:    89 04 24                        	mov dword ptr [esp], eax
0x136ae:    e8 a1 60 01 00                  	call 0x29754 <unknown_29754>
0x136b3:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; data inside code section at 0x136b6 -- 0x136b8
0x136b6:    65 33                                              |e3              |
; function: function_136b8 at 0x136b8 -- 0x136bf
0x136b8:    05 14 00 00 00                  	add eax, 0x14
0x136bd:    74 05                           	je 0x136c4 <function_136c4>
; data inside code section at 0x136bf -- 0x136c0
0x136bf:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x136c0 -- 0x136c1
; data inside code section at 0x136c1 -- 0x136c4
0x136c1:    ff ff ff                                           |...             |
; function: function_136c4 at 0x136c4 -- 0x136c6
0x136c4:    c9                              	leave 
0x136c5:    c3                              	ret 
; section: .text._Z16GetSerializeSizeIcSsEjRKSt4pairIT_T0_Eii
; function: _Z16GetSerializeSizeIcSsEjRKSt4pairIT_T0_Eii at 0x136c6 -- 0x13735
0x136c6:    55                              	push ebp
0x136c7:    89 e5                           	mov ebp, esp
0x136c9:    53                              	push ebx
0x136ca:    83 ec 34                        	sub esp, 0x34
0x136cd:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x136d0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x136d3:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x136d6:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x136d9:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x136dc:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x136df:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x136e5:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x136e8:    31 c0                           	xor eax, eax
0x136ea:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x136ed:    0f b6 00                        	movzx eax, byte ptr [eax]
0x136f0:    0f be c0                        	movsx eax, al
0x136f3:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x136f6:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x136fa:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x136fd:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13701:    89 04 24                        	mov dword ptr [esp], eax
0x13704:    e8 ed 42 00 00                  	call 0x179f6 <function_179f6>
0x13709:    89 c3                           	mov ebx, eax
0x1370b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1370e:    8d 50 04                        	lea edx, [eax + 4]
0x13711:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x13714:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13718:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1371b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1371f:    89 14 24                        	mov dword ptr [esp], edx
0x13722:    e8 52 61 01 00                  	call 0x29879 <unknown_29879>
0x13727:    01 d8                           	add eax, ebx
0x13729:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1372c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13733:    74 05                           	je 0x1373a <function_1373a>
; data inside code section at 0x13735 -- 0x13736
0x13735:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13736 -- 0x13737
; data inside code section at 0x13737 -- 0x1373a
0x13737:    ff ff ff                                           |...             |
; function: function_1373a at 0x1373a -- 0x13740
0x1373a:    83 c4 34                        	add esp, 0x34
0x1373d:    5b                              	pop ebx
0x1373e:    5d                              	pop ebp
0x1373f:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamcSsEvRT_RKSt4pairIT0_T1_Eii
; function: _Z9SerializeI11CDataStreamcSsEvRT_RKSt4pairIT0_T1_Eii at 0x13740 -- 0x137be
0x13740:    55                              	push ebp
0x13741:    89 e5                           	mov ebp, esp
0x13743:    83 ec 38                        	sub esp, 0x38
0x13746:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13749:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1374c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1374f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13752:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13755:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13758:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1375b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1375e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13764:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13767:    31 c0                           	xor eax, eax
0x13769:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1376c:    0f b6 00                        	movzx eax, byte ptr [eax]
0x1376f:    0f be c0                        	movsx eax, al
0x13772:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x13775:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x13779:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1377c:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x13780:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13784:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13787:    89 04 24                        	mov dword ptr [esp], eax
0x1378a:    e8 82 29 01 00                  	call 0x26111 <unknown_26111>
0x1378f:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13792:    8d 50 04                        	lea edx, [eax + 4]
0x13795:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x13798:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1379c:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1379f:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x137a3:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x137a7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x137aa:    89 04 24                        	mov dword ptr [esp], eax
0x137ad:    e8 a7 61 01 00                  	call 0x29959 <unknown_29959>
0x137b2:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x137b5:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x137bc:    74 05                           	je 0x137c3 <function_137c3>
; data inside code section at 0x137be -- 0x137bf
0x137be:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x137bf -- 0x137c0
; data inside code section at 0x137c0 -- 0x137c3
0x137c0:    ff ff ff                                           |...             |
; function: function_137c3 at 0x137c3 -- 0x137c5
0x137c3:    c9                              	leave 
0x137c4:    c3                              	ret 
; section: .text._ZN15CDiskBlockIndex11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN15CDiskBlockIndex11UnserializeI11CDataStreamEEvRT_ii at 0x137c6 -- 0x1387a
0x137c6:    55                              	push ebp
0x137c7:    89 e5                           	mov ebp, esp
0x137c9:    57                              	push edi
0x137ca:    56                              	push esi
0x137cb:    53                              	push ebx
0x137cc:    83 ec 7c                        	sub esp, 0x7c
0x137cf:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x137d2:    89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x137d5:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x137d8:    89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x137db:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x137de:    89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x137e1:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x137e4:    89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x137e7:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x137ed:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x137f0:    31 c0                           	xor eax, eax
0x137f2:    c6 45 e1 00                     	mov byte ptr [ebp - 0x1f], 0
0x137f6:    c6 45 e2 00                     	mov byte ptr [ebp - 0x1e], 0
0x137fa:    c6 45 e3 01                     	mov byte ptr [ebp - 0x1d], 1
0x137fe:    c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x13805:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13808:    83 e0 04                        	and eax, 4
0x1380b:    85 c0                           	test eax, eax
0x1380d:    75 50                           	jne 0x1385f <_ZN15CDiskBlockIndex11UnserializeI11CDataStreamEEvRT_ii+0x99>
0x1380f:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x13812:    8d 45 a8                        	lea eax, [ebp - 0x58]
0x13815:    89 04 24                        	mov dword ptr [esp], eax
0x13818:    e8 54 98 00 00                  	call 0x1d071 <unknown_1d071>
0x1381d:    8d 55 c0                        	lea edx, [ebp - 0x40]
0x13820:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13824:    89 14 24                        	mov dword ptr [esp], edx
0x13827:    e8 72 98 00 00                  	call 0x1d09e <unknown_1d09e>
0x1382c:    83 ec 04                        	sub esp, 4
0x1382f:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x13832:    89 04 24                        	mov dword ptr [esp], eax
0x13835:    e8 ab 98 00 00                  	call 0x1d0e5 <unknown_1d0e5>
0x1383a:    89 c2                           	mov edx, eax
0x1383c:    89 f1                           	mov ecx, esi
0x1383e:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x13842:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x13846:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13849:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1384d:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13851:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13854:    89 04 24                        	mov dword ptr [esp], eax
0x13857:    e8 2c 62 01 00                  	call 0x29a88 <unknown_29a88>
0x1385c:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1385f:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x13862:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x13865:    83 c0 08                        	add eax, 8
0x13868:    89 04 24                        	mov dword ptr [esp], eax
0x1386b:    e8 01 98 00 00                  	call 0x1d071 <unknown_1d071>
0x13870:    8d 55 c4                        	lea edx, [ebp - 0x3c]
0x13873:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13877:    89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x1387a -- 0x1387c
0x1387a:    e8 1f                                              |..              |
; function: function_1387c at 0x1387c -- 0x13ba2
0x1387c:    98                              	cwde 
0x1387d:    00 00                           	add byte ptr [eax], al
0x1387f:    83 ec 04                        	sub esp, 4
0x13882:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x13885:    89 04 24                        	mov dword ptr [esp], eax
0x13888:    e8 58 98 00 00                  	call 0x1d0e5 <unknown_1d0e5>
0x1388d:    89 c2                           	mov edx, eax
0x1388f:    89 f8                           	mov eax, edi
0x13891:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x13895:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x13899:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x1389c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x138a0:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x138a4:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x138a7:    89 04 24                        	mov dword ptr [esp], eax
0x138aa:    e8 d9 61 01 00                  	call 0x29a88 <unknown_29a88>
0x138af:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x138b2:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x138b5:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x138b8:    83 c0 40                        	add eax, 0x40
0x138bb:    89 04 24                        	mov dword ptr [esp], eax
0x138be:    e8 7e 93 00 00                  	call 0x1cc41 <unknown_1cc41>
0x138c3:    8d 55 c8                        	lea edx, [ebp - 0x38]
0x138c6:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x138ca:    89 14 24                        	mov dword ptr [esp], edx
0x138cd:    e8 9c 93 00 00                  	call 0x1cc6e <unknown_1cc6e>
0x138d2:    83 ec 04                        	sub esp, 4
0x138d5:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x138d8:    89 04 24                        	mov dword ptr [esp], eax
0x138db:    e8 d5 93 00 00                  	call 0x1ccb5 <unknown_1ccb5>
0x138e0:    89 c2                           	mov edx, eax
0x138e2:    0f b6 4d 9d                     	movzx ecx, byte ptr [ebp - 0x63]
0x138e6:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x138ea:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x138ee:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x138f1:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x138f5:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x138f9:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x138fc:    89 04 24                        	mov dword ptr [esp], eax
0x138ff:    e8 ec 61 01 00                  	call 0x29af0 <unknown_29af0>
0x13904:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13907:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x1390a:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1390d:    83 c0 38                        	add eax, 0x38
0x13910:    89 04 24                        	mov dword ptr [esp], eax
0x13913:    e8 29 93 00 00                  	call 0x1cc41 <unknown_1cc41>
0x13918:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x1391b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1391f:    89 14 24                        	mov dword ptr [esp], edx
0x13922:    e8 47 93 00 00                  	call 0x1cc6e <unknown_1cc6e>
0x13927:    83 ec 04                        	sub esp, 4
0x1392a:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x1392d:    89 04 24                        	mov dword ptr [esp], eax
0x13930:    e8 80 93 00 00                  	call 0x1ccb5 <unknown_1ccb5>
0x13935:    89 c2                           	mov edx, eax
0x13937:    0f b6 45 9e                     	movzx eax, byte ptr [ebp - 0x62]
0x1393b:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x1393f:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x13943:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13946:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1394a:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1394e:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13951:    89 04 24                        	mov dword ptr [esp], eax
0x13954:    e8 97 61 01 00                  	call 0x29af0 <unknown_29af0>
0x13959:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1395c:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1395f:    8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x13962:    83 e0 18                        	and eax, 0x18
0x13965:    85 c0                           	test eax, eax
0x13967:    74 55                           	je 0x139be <function_1387c+0x142>
0x13969:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x1396c:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1396f:    83 c0 0c                        	add eax, 0xc
0x13972:    89 04 24                        	mov dword ptr [esp], eax
0x13975:    e8 f7 96 00 00                  	call 0x1d071 <unknown_1d071>
0x1397a:    8d 55 d0                        	lea edx, [ebp - 0x30]
0x1397d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13981:    89 14 24                        	mov dword ptr [esp], edx
0x13984:    e8 15 97 00 00                  	call 0x1d09e <unknown_1d09e>
0x13989:    83 ec 04                        	sub esp, 4
0x1398c:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x1398f:    89 04 24                        	mov dword ptr [esp], eax
0x13992:    e8 4e 97 00 00                  	call 0x1d0e5 <unknown_1d0e5>
0x13997:    89 c2                           	mov edx, eax
0x13999:    0f b6 4d 9f                     	movzx ecx, byte ptr [ebp - 0x61]
0x1399d:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x139a1:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x139a5:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x139a8:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x139ac:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x139b0:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x139b3:    89 04 24                        	mov dword ptr [esp], eax
0x139b6:    e8 cd 60 01 00                  	call 0x29a88 <unknown_29a88>
0x139bb:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x139be:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x139c1:    8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x139c4:    83 e0 08                        	and eax, 8
0x139c7:    85 c0                           	test eax, eax
0x139c9:    74 55                           	je 0x13a20 <function_1387c+0x1a4>
0x139cb:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x139ce:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x139d1:    83 c0 10                        	add eax, 0x10
0x139d4:    89 04 24                        	mov dword ptr [esp], eax
0x139d7:    e8 65 92 00 00                  	call 0x1cc41 <unknown_1cc41>
0x139dc:    8d 55 d4                        	lea edx, [ebp - 0x2c]
0x139df:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x139e3:    89 14 24                        	mov dword ptr [esp], edx
0x139e6:    e8 83 92 00 00                  	call 0x1cc6e <unknown_1cc6e>
0x139eb:    83 ec 04                        	sub esp, 4
0x139ee:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x139f1:    89 04 24                        	mov dword ptr [esp], eax
0x139f4:    e8 bc 92 00 00                  	call 0x1ccb5 <unknown_1ccb5>
0x139f9:    89 c2                           	mov edx, eax
0x139fb:    0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x139ff:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x13a03:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x13a07:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13a0a:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13a0e:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13a12:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13a15:    89 04 24                        	mov dword ptr [esp], eax
0x13a18:    e8 d3 60 01 00                  	call 0x29af0 <unknown_29af0>
0x13a1d:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13a20:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x13a23:    8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x13a26:    83 e0 10                        	and eax, 0x10
0x13a29:    85 c0                           	test eax, eax
0x13a2b:    74 55                           	je 0x13a82 <function_1387c+0x206>
0x13a2d:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x13a30:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x13a33:    83 c0 14                        	add eax, 0x14
0x13a36:    89 04 24                        	mov dword ptr [esp], eax
0x13a39:    e8 03 92 00 00                  	call 0x1cc41 <unknown_1cc41>
0x13a3e:    8d 55 d8                        	lea edx, [ebp - 0x28]
0x13a41:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13a45:    89 14 24                        	mov dword ptr [esp], edx
0x13a48:    e8 21 92 00 00                  	call 0x1cc6e <unknown_1cc6e>
0x13a4d:    83 ec 04                        	sub esp, 4
0x13a50:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x13a53:    89 04 24                        	mov dword ptr [esp], eax
0x13a56:    e8 5a 92 00 00                  	call 0x1ccb5 <unknown_1ccb5>
0x13a5b:    89 c2                           	mov edx, eax
0x13a5d:    0f b6 4d a1                     	movzx ecx, byte ptr [ebp - 0x5f]
0x13a61:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x13a65:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x13a69:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13a6c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13a70:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13a74:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13a77:    89 04 24                        	mov dword ptr [esp], eax
0x13a7a:    e8 71 60 01 00                  	call 0x29af0 <unknown_29af0>
0x13a7f:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13a82:    8b 4d a8                        	mov ecx, dword ptr [ebp - 0x58]
0x13a85:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x13a88:    8d 50 44                        	lea edx, [eax + 0x44]
0x13a8b:    0f b6 45 a2                     	movzx eax, byte ptr [ebp - 0x5e]
0x13a8f:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x13a93:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x13a97:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13a9a:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13a9e:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13aa2:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13aa5:    89 04 24                        	mov dword ptr [esp], eax
0x13aa8:    e8 ab 60 01 00                  	call 0x29b58 <unknown_29b58>
0x13aad:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13ab0:    8b 4d a8                        	mov ecx, dword ptr [ebp - 0x58]
0x13ab3:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x13ab6:    8d 50 74                        	lea edx, [eax + 0x74]
0x13ab9:    0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x13abd:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x13ac1:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x13ac5:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13ac8:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13acc:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13ad0:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13ad3:    89 04 24                        	mov dword ptr [esp], eax
0x13ad6:    e8 e5 60 01 00                  	call 0x29bc0 <unknown_29bc0>
0x13adb:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13ade:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x13ae1:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x13ae4:    83 c2 48                        	add edx, 0x48
0x13ae7:    0f b6 4d a4                     	movzx ecx, byte ptr [ebp - 0x5c]
0x13aeb:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x13aef:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x13af3:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13af6:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13afa:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13afe:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13b01:    89 04 24                        	mov dword ptr [esp], eax
0x13b04:    e8 b7 60 01 00                  	call 0x29bc0 <unknown_29bc0>
0x13b09:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13b0c:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x13b0f:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x13b12:    83 c2 68                        	add edx, 0x68
0x13b15:    0f b6 4d a5                     	movzx ecx, byte ptr [ebp - 0x5b]
0x13b19:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x13b1d:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x13b21:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13b24:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13b28:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13b2c:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13b2f:    89 04 24                        	mov dword ptr [esp], eax
0x13b32:    e8 f1 60 01 00                  	call 0x29c28 <unknown_29c28>
0x13b37:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13b3a:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x13b3d:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x13b40:    83 c2 6c                        	add edx, 0x6c
0x13b43:    0f b6 4d a6                     	movzx ecx, byte ptr [ebp - 0x5a]
0x13b47:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x13b4b:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x13b4f:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13b52:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13b56:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13b5a:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13b5d:    89 04 24                        	mov dword ptr [esp], eax
0x13b60:    e8 c3 60 01 00                  	call 0x29c28 <unknown_29c28>
0x13b65:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13b68:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x13b6b:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x13b6e:    83 c2 70                        	add edx, 0x70
0x13b71:    0f b6 4d a7                     	movzx ecx, byte ptr [ebp - 0x59]
0x13b75:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x13b79:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x13b7d:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x13b80:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13b84:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13b88:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x13b8b:    89 04 24                        	mov dword ptr [esp], eax
0x13b8e:    e8 95 60 01 00                  	call 0x29c28 <unknown_29c28>
0x13b93:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x13b96:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13b99:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x13ba0:    74 05                           	je 0x13ba7 <function_13ba7>
; data inside code section at 0x13ba2 -- 0x13ba3
0x13ba2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13ba3 -- 0x13ba4
; data inside code section at 0x13ba4 -- 0x13ba7
0x13ba4:    ff ff ff                                           |...             |
; function: function_13ba7 at 0x13ba7 -- 0x13baf
0x13ba7:    8d 65 f4                        	lea esp, [ebp - 0xc]
0x13baa:    5b                              	pop ebx
0x13bab:    5e                              	pop esi
0x13bac:    5f                              	pop edi
0x13bad:    5d                              	pop ebp
0x13bae:    c3                              	ret 
; section: .text._ZN25zero_after_free_allocatorIcEC2ERKS0_
; function: _ZN25zero_after_free_allocatorIcEC1ERKS0_ at 0x13bb0 -- 0x13bda
0x13bb0:    55                              	push ebp
0x13bb1:    89 e5                           	mov ebp, esp
0x13bb3:    83 ec 38                        	sub esp, 0x38
0x13bb6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13bb9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13bbc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13bbf:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13bc2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13bc8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13bcb:    31 c0                           	xor eax, eax
0x13bcd:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13bd0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13bd4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13bd7:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x13bda -- 0x13bdb
0x13bda:    e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC2ERKS_ at 0x13bdb -- 0x13bdc
; data inside code section at 0x13bdc -- 0x13bea
0x13bdc:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74         |....E.e3.....t  |
; function: function_13bea at 0x13bea -- 0x13beb
; data inside code section at 0x13beb -- 0x13bec
0x13beb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13bec -- 0x13bed
; data inside code section at 0x13bed -- 0x13bef
0x13bed:    ff ff                                              |..              |
; function: function_13bef at 0x13bef -- 0x13bf2
0x13bef:    ff c9                           	dec ecx
0x13bf1:    c3                              	ret 
; section: .text._ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_
; function: _ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_ at 0x13bf2 -- 0x13c47
0x13bf2:    55                              	push ebp
0x13bf3:    89 e5                           	mov ebp, esp
0x13bf5:    53                              	push ebx
0x13bf6:    83 ec 34                        	sub esp, 0x34
0x13bf9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13bfc:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13bff:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13c02:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13c05:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13c0b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13c0e:    31 c0                           	xor eax, eax
0x13c10:    8d 45 df                        	lea eax, [ebp - 0x21]
0x13c13:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x13c16:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13c1a:    89 04 24                        	mov dword ptr [esp], eax
0x13c1d:    e8 9a 64 01 00                  	call 0x2a0bc <unknown_2a0bc>
0x13c22:    83 ec 04                        	sub esp, 4
0x13c25:    88 5c 24 08                     	mov byte ptr [esp + 8], bl
0x13c29:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13c2c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13c30:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13c33:    89 04 24                        	mov dword ptr [esp], eax
0x13c36:    e8 b6 64 01 00                  	call 0x2a0f1 <unknown_2a0f1>
0x13c3b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13c3e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13c45:    74 05                           	je 0x13c4c <function_13c4c>
; data inside code section at 0x13c47 -- 0x13c48
0x13c47:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13c48 -- 0x13c49
; data inside code section at 0x13c49 -- 0x13c4c
0x13c49:    ff ff ff                                           |...             |
; function: function_13c4c at 0x13c4c -- 0x13c51
0x13c4c:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x13c4f:    c9                              	leave 
0x13c50:    c3                              	ret 
; section: .text._ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
; function: _ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_ at 0x13c51 -- 0x13ca6
0x13c51:    55                              	push ebp
0x13c52:    89 e5                           	mov ebp, esp
0x13c54:    53                              	push ebx
0x13c55:    83 ec 34                        	sub esp, 0x34
0x13c58:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13c5b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13c5e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13c61:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13c64:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13c6a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13c6d:    31 c0                           	xor eax, eax
0x13c6f:    8d 45 df                        	lea eax, [ebp - 0x21]
0x13c72:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x13c75:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13c79:    89 04 24                        	mov dword ptr [esp], eax
0x13c7c:    e8 18 65 01 00                  	call 0x2a199 <unknown_2a199>
0x13c81:    83 ec 04                        	sub esp, 4
0x13c84:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13c87:    88 5c 24 08                     	mov byte ptr [esp + 8], bl
0x13c8b:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x13c8e:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13c92:    89 04 24                        	mov dword ptr [esp], eax
0x13c95:    e8 34 65 01 00                  	call 0x2a1ce <unknown_2a1ce>
0x13c9a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13c9d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13ca4:    74 05                           	je 0x13cab <function_13cab>
; data inside code section at 0x13ca6 -- 0x13ca7
0x13ca6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13ca7 -- 0x13ca8
; data inside code section at 0x13ca8 -- 0x13cab
0x13ca8:    ff ff ff                                           |...             |
; function: function_13cab at 0x13cab -- 0x13cb0
0x13cab:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x13cae:    c9                              	leave 
0x13caf:    c3                              	ret 
; section: .text._ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_
; function: _ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_ at 0x13cb0 -- 0x13d26
0x13cb0:    55                              	push ebp
0x13cb1:    89 e5                           	mov ebp, esp
0x13cb3:    83 ec 38                        	sub esp, 0x38
0x13cb6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13cb9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13cbc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13cbf:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13cc2:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13cc5:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13cc8:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x13ccb:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x13cce:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13cd4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13cd7:    31 c0                           	xor eax, eax
0x13cd9:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x13cdc:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x13cdf:    eb 29                           	jmp 0x13d0a <_ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_+0x5a>
0x13ce1:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x13ce4:    89 04 24                        	mov dword ptr [esp], eax
0x13ce7:    e8 ce 0b 01 00                  	call 0x248ba <unknown_248ba>
0x13cec:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x13cef:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x13cf3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13cf7:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x13cfa:    89 04 24                        	mov dword ptr [esp], eax
0x13cfd:    e8 1e d6 00 00                  	call 0x21320 <unknown_21320>
0x13d02:    83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x13d06:    83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x13d0a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13d0d:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x13d10:    0f 95 c0                        	setne al
0x13d13:    84 c0                           	test al, al
0x13d15:    75 ca                           	jne 0x13ce1 <_ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_+0x31>
0x13d17:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x13d1a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13d1d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13d24:    74 05                           	je 0x13d2b <function_13d2b>
; data inside code section at 0x13d26 -- 0x13d27
0x13d26:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13d27 -- 0x13d28
; data inside code section at 0x13d28 -- 0x13d2b
0x13d28:    ff ff ff                                           |...             |
; function: function_13d2b at 0x13d2b -- 0x13d2d
0x13d2b:    c9                              	leave 
0x13d2c:    c3                              	ret 
; section: .text._ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_
; function: _ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_ at 0x13d2d -- 0x13d82
0x13d2d:    55                              	push ebp
0x13d2e:    89 e5                           	mov ebp, esp
0x13d30:    53                              	push ebx
0x13d31:    83 ec 34                        	sub esp, 0x34
0x13d34:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13d37:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13d3a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13d3d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13d40:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13d46:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13d49:    31 c0                           	xor eax, eax
0x13d4b:    8d 45 df                        	lea eax, [ebp - 0x21]
0x13d4e:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x13d51:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13d55:    89 04 24                        	mov dword ptr [esp], eax
0x13d58:    e8 90 65 01 00                  	call 0x2a2ed <unknown_2a2ed>
0x13d5d:    83 ec 04                        	sub esp, 4
0x13d60:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13d63:    88 5c 24 08                     	mov byte ptr [esp + 8], bl
0x13d67:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x13d6a:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x13d6e:    89 04 24                        	mov dword ptr [esp], eax
0x13d71:    e8 ac 65 01 00                  	call 0x2a322 <unknown_2a322>
0x13d76:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13d79:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13d80:    74 05                           	je 0x13d87 <function_13d87>
; data inside code section at 0x13d82 -- 0x13d83
0x13d82:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13d83 -- 0x13d84
; data inside code section at 0x13d84 -- 0x13d87
0x13d84:    ff ff ff                                           |...             |
; function: function_13d87 at 0x13d87 -- 0x13d8c
0x13d87:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x13d8a:    c9                              	leave 
0x13d8b:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIcE8allocateEjPKv
; function: _ZN9__gnu_cxx13new_allocatorIcE8allocateEjPKv at 0x13d8c -- 0x13dc4
0x13d8c:    55                              	push ebp
0x13d8d:    89 e5                           	mov ebp, esp
0x13d8f:    83 ec 38                        	sub esp, 0x38
0x13d92:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13d95:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13d98:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13d9b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13d9e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13da1:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13da4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13daa:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13dad:    31 c0                           	xor eax, eax
0x13daf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13db2:    89 04 24                        	mov dword ptr [esp], eax
0x13db5:    e8 88 0e 01 00                  	call 0x24c42 <unknown_24c42>
0x13dba:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x13dbd:    0f 92 c0                        	setb al
0x13dc0:    84 c0                           	test al, al
0x13dc2:    74 05                           	je 0x13dc9 <function_13dc9>
; data inside code section at 0x13dc4 -- 0x13dc5
0x13dc4:    e8                                                 |.               |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x13dc5 -- 0x13dc6
; data inside code section at 0x13dc6 -- 0x13dc9
0x13dc6:    ff ff ff                                           |...             |
; function: function_13dc9 at 0x13dc9 -- 0x13dcf
0x13dc9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13dcc:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x13dcf -- 0x13dd0
0x13dcf:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x13dd0 -- 0x13dd1
; data inside code section at 0x13dd1 -- 0x13de1
0x13dd1:    ff ff ff 8b 55 f4 65 33  15 14 00 00 00 74 05 e8   |....U.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x13de1 -- 0x13de2
; data inside code section at 0x13de2 -- 0x13de4
0x13de2:    ff ff                                              |..              |
; function: function_13de4 at 0x13de4 -- 0x13de7
0x13de4:    ff c9                           	dec ecx
0x13de6:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv at 0x13de8 -- 0x13e0e
0x13de8:    55                              	push ebp
0x13de9:    89 e5                           	mov ebp, esp
0x13deb:    83 ec 28                        	sub esp, 0x28
0x13dee:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13df1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13df4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13dfa:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13dfd:    31 c0                           	xor eax, eax
0x13dff:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13e02:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13e05:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13e0c:    74 05                           	je 0x13e13 <function_13e13>
; data inside code section at 0x13e0e -- 0x13e0f
0x13e0e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13e0f -- 0x13e10
; data inside code section at 0x13e10 -- 0x13e13
0x13e10:    ff ff ff                                           |...             |
; function: function_13e13 at 0x13e13 -- 0x13e15
0x13e13:    c9                              	leave 
0x13e14:    c3                              	ret 
; section: .text._ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcESt20forward_iterator_tag
; function: _ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcESt20forward_iterator_tag at 0x13e16 -- 0x13e63
0x13e16:    55                              	push ebp
0x13e17:    89 e5                           	mov ebp, esp
0x13e19:    56                              	push esi
0x13e1a:    53                              	push ebx
0x13e1b:    83 ec 30                        	sub esp, 0x30
0x13e1e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13e21:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13e24:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13e27:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13e2a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13e2d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13e30:    0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0x13e34:    88 45 db                        	mov byte ptr [ebp - 0x25], al
0x13e37:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13e3d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13e40:    31 c0                           	xor eax, eax
0x13e42:    bb 00 00 00 00                  	mov ebx, 0
0x13e47:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x13e4a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13e4e:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x13e51:    89 04 24                        	mov dword ptr [esp], eax
0x13e54:    e8 2a 66 01 00                  	call 0x2a483 <unknown_2a483>
0x13e59:    84 c0                           	test al, al
0x13e5b:    74 2d                           	je 0x13e8a <function_13e8a>
0x13e5d:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x13e60:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x13e63 -- 0x13e64
0x13e63:    e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC1Ev at 0x13e64 -- 0x13e65
; data inside code section at 0x13e65 -- 0x13e68
0x13e65:    ff ff ff                                           |...             |
; function: function_13e68 at 0x13e68 -- 0x13e8a
0x13e68:    bb 01 00 00 00                  	mov ebx, 1
0x13e6d:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x13e70:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13e74:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x13e77:    89 04 24                        	mov dword ptr [esp], eax
0x13e7a:    e8 cf 65 01 00                  	call 0x2a44e <unknown_2a44e>
0x13e7f:    84 c0                           	test al, al
0x13e81:    74 07                           	je 0x13e8a <function_13e8a>
0x13e83:    b8 01 00 00 00                  	mov eax, 1
0x13e88:    eb 05                           	jmp 0x13e8f
; function: function_13e8a at 0x13e8a -- 0x13e93
0x13e8a:    b8 00 00 00 00                  	mov eax, 0
0x13e8f:    89 c6                           	mov esi, eax
0x13e91:    84 db                           	test bl, bl
; data inside code section at 0x13e93 -- 0x13e94
0x13e93:    74                                                 |t               |
; function: function_13e94 at 0x13e94 -- 0x13e9c
0x13e94:    0b 8d 45 f3 89 04               	or ecx, dword ptr [ebp + 0x489f345]
0x13e9a:    24 e8                           	and al, 0xe8
; dynamically linked function: _ZNSaIcED1Ev at 0x13e9c -- 0x13e9d
; data inside code section at 0x13e9d -- 0x13ea7
0x13e9d:    ff ff ff 89 f2 84 d2 74  12 e8                     |.......t..      |
; dynamically linked function: _ZNSs12_S_empty_repEv at 0x13ea7 -- 0x13ea8
; data inside code section at 0x13ea8 -- 0x13eaf
0x13ea8:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZNSs4_Rep10_M_refdataEv at 0x13eaf -- 0x13eb0
; data inside code section at 0x13eb0 -- 0x13eb3
0x13eb0:    ff ff ff                                           |...             |
; function: function_13eb3 at 0x13eb3 -- 0x13eb8
0x13eb3:    e9 b1 00 00 00                  	jmp 0x13f69 <function_13f69>
; data inside code section at 0x13eb8 -- 0x13ed4
0x13eb8:    8b 45 e4 89 04 24 e8 14  66 01 00 84 c0 74 1d 8d   |.E...$..f....t..|
0x13ec8:    45 e0 89 44 24 04 8d 45  e4 89 04 24               |E..D$..E...$    |
; function: function_13ed4 at 0x13ed4 -- 0x13ef4
0x13ed4:    e8 da 0c 01 00                  	call 0x24bb3 <unknown_24bb3>
0x13ed9:    84 c0                           	test al, al
0x13edb:    74 07                           	je 0x13ee4 <function_13ed4+0x10>
0x13edd:    b8 01 00 00 00                  	mov eax, 1
0x13ee2:    eb 05                           	jmp 0x13ee9 <function_13ed4+0x15>
0x13ee4:    b8 00 00 00 00                  	mov eax, 0
0x13ee9:    84 c0                           	test al, al
0x13eeb:    74 0c                           	je 0x13ef9 <function_13ef9>
0x13eed:    c7 04 24 20 3f 00 00            	mov dword ptr [esp], 0x3f20 ; "basic_string::_S_construct null not valid"
; data inside code section at 0x13ef4 -- 0x13ef5
0x13ef4:    e8                                                 |.               |
; dynamically linked function: _ZSt19__throw_logic_errorPKc at 0x13ef5 -- 0x13ef6
; data inside code section at 0x13ef6 -- 0x13ef9
0x13ef6:    ff ff ff                                           |...             |
; function: function_13ef9 at 0x13ef9 -- 0x13f23
0x13ef9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13efc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x13f00:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x13f03:    89 04 24                        	mov dword ptr [esp], eax
0x13f06:    e8 fd 3a 01 00                  	call 0x27a08 <unknown_27a08>
0x13f0b:    89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x13f0e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x13f11:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x13f15:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x13f1d:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x13f20:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x13f23 -- 0x13f24
0x13f23:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x13f24 -- 0x13f25
; data inside code section at 0x13f25 -- 0x13f32
0x13f25:    ff ff ff 89 45 ec 8b 45  ec 89 04 24 e8            |....E..E...$.   |
; dynamically linked function: _ZNSs4_Rep10_M_refdataEv at 0x13f32 -- 0x13f33
; data inside code section at 0x13f33 -- 0x13f5a
0x13f33:    ff ff ff 8b 55 e0 89 54  24 08 8b 55 e4 89 54 24   |....U..T$..U..T$|
0x13f43:    04 89 04 24 e8 ba 65 01  00 8b 45 e8 89 44 24 04   |...$..e...E..D$.|
0x13f53:    8b 45 ec 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSs4_Rep26_M_set_length_and_sharableEj at 0x13f5a -- 0x13f5b
; data inside code section at 0x13f5b -- 0x13f65
0x13f5b:    ff ff ff 8b 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSs4_Rep10_M_refdataEv at 0x13f65 -- 0x13f66
; data inside code section at 0x13f66 -- 0x13f69
0x13f66:    ff ff ff                                           |...             |
; function: function_13f69 at 0x13f69 -- 0x13f77
0x13f69:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x13f6c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x13f73:    74 37                           	je 0x13fac <function_13fac>
0x13f75:    eb 30                           	jmp 0x13fa7 <function_13fa7>
; data inside code section at 0x13f77 -- 0x13f78
0x13f77:    89                                                 |.               |
; function: function_13f78 at 0x13f78 -- 0x13f79
0x13f78:    c3                              	ret 
; data inside code section at 0x13f79 -- 0x13f7a
0x13f79:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x13f7a -- 0x13f7b
; data inside code section at 0x13f7b -- 0x13f84
0x13f7b:    ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x13f84 -- 0x13f85
; data inside code section at 0x13f85 -- 0x13f8c
0x13f85:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x13f8c -- 0x13f8d
; data inside code section at 0x13f8d -- 0x13f9e
0x13f8d:    ff ff ff 8b 45 dc 89 44  24 04 8b 45 ec 89 04 24   |....E..D$..E...$|
0x13f9d:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x13f9e -- 0x13f9f
; data inside code section at 0x13f9f -- 0x13fa3
0x13f9f:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x13fa3 -- 0x13fa4
; data inside code section at 0x13fa4 -- 0x13fa7
0x13fa4:    ff ff ff                                           |...             |
; function: function_13fa7 at 0x13fa7 -- 0x13fa8
; dynamically linked function: __stack_chk_fail at 0x13fa8 -- 0x13fa9
; data inside code section at 0x13fa9 -- 0x13fac
0x13fa9:    ff ff ff                                           |...             |
; function: function_13fac at 0x13fac -- 0x13fb3
0x13fac:    83 c4 30                        	add esp, 0x30
0x13faf:    5b                              	pop ebx
0x13fb0:    5e                              	pop esi
0x13fb1:    5d                              	pop ebp
0x13fb2:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcj
; function: _ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcj at 0x13fb4 -- 0x13fdd
0x13fb4:    55                              	push ebp
0x13fb5:    89 e5                           	mov ebp, esp
0x13fb7:    83 ec 38                        	sub esp, 0x38
0x13fba:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13fbd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x13fc0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x13fc3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x13fc6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x13fc9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x13fcc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x13fd2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x13fd5:    31 c0                           	xor eax, eax
0x13fd7:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x13fda:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x13fdd -- 0x13fde
0x13fdd:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13fde -- 0x13fdf
; data inside code section at 0x13fdf -- 0x13fef
0x13fdf:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x13fef -- 0x13ff0
; data inside code section at 0x13ff0 -- 0x13ff2
0x13ff0:    ff ff                                              |..              |
; function: function_13ff2 at 0x13ff2 -- 0x13ff5
0x13ff2:    ff c9                           	dec ecx
0x13ff4:    c3                              	ret 
; section: .text._ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
; function: _ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_ at 0x13ff5 -- 0x14023
0x13ff5:    55                              	push ebp
0x13ff6:    89 e5                           	mov ebp, esp
0x13ff8:    83 ec 38                        	sub esp, 0x38
0x13ffb:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x13ffe:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14001:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14007:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1400a:    31 c0                           	xor eax, eax
0x1400c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1400f:    89 04 24                        	mov dword ptr [esp], eax
0x14012:    e8 45 67 01 00                  	call 0x2a75c <unknown_2a75c>
0x14017:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1401a:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14021:    74 05                           	je 0x14028 <function_14028>
; data inside code section at 0x14023 -- 0x14024
0x14023:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14024 -- 0x14025
; data inside code section at 0x14025 -- 0x14028
0x14025:    ff ff ff                                           |...             |
; function: function_14028 at 0x14028 -- 0x1402a
0x14028:    c9                              	leave 
0x14029:    c3                              	ret 
; section: .text._ZSt23__copy_move_backward_a2ILb0EPcS0_ET1_T0_S2_S1_
; function: _ZSt23__copy_move_backward_a2ILb0EPcS0_ET1_T0_S2_S1_ at 0x1402a -- 0x1407f
0x1402a:    55                              	push ebp
0x1402b:    89 e5                           	mov ebp, esp
0x1402d:    56                              	push esi
0x1402e:    53                              	push ebx
0x1402f:    83 ec 30                        	sub esp, 0x30
0x14032:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14035:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14038:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1403b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1403e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14041:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14044:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1404a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1404d:    31 c0                           	xor eax, eax
0x1404f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14052:    89 04 24                        	mov dword ptr [esp], eax
0x14055:    e8 b2 40 01 00                  	call 0x2810c <unknown_2810c>
0x1405a:    89 c6                           	mov esi, eax
0x1405c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1405f:    89 04 24                        	mov dword ptr [esp], eax
0x14062:    e8 a5 40 01 00                  	call 0x2810c <unknown_2810c>
0x14067:    89 c3                           	mov ebx, eax
0x14069:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1406c:    89 04 24                        	mov dword ptr [esp], eax
0x1406f:    e8 98 40 01 00                  	call 0x2810c <unknown_2810c>
0x14074:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x14078:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x1407c:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1407f -- 0x14082
0x1407f:    e8 3a 67                                           |.:g             |
; function: function_14082 at 0x14082 -- 0x14090
0x14082:    01 00                           	add dword ptr [eax], eax
0x14084:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14087:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1408e:    74 05                           	je 0x14095 <function_14095>
; data inside code section at 0x14090 -- 0x14091
0x14090:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14091 -- 0x14092
; data inside code section at 0x14092 -- 0x14095
0x14092:    ff ff ff                                           |...             |
; function: function_14095 at 0x14095 -- 0x1409c
0x14095:    83 c4 30                        	add esp, 0x30
0x14098:    5b                              	pop ebx
0x14099:    5e                              	pop esi
0x1409a:    5d                              	pop ebp
0x1409b:    c3                              	ret 
; section: .text._ZSt3maxIjERKT_S2_S2_
; function: _ZSt3maxIjERKT_S2_S2_ at 0x1409c -- 0x140db
0x1409c:    55                              	push ebp
0x1409d:    89 e5                           	mov ebp, esp
0x1409f:    83 ec 28                        	sub esp, 0x28
0x140a2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x140a5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x140a8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x140ab:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x140ae:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x140b4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x140b7:    31 c0                           	xor eax, eax
0x140b9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x140bc:    8b 10                           	mov edx, dword ptr [eax]
0x140be:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x140c1:    8b 00                           	mov eax, dword ptr [eax]
0x140c3:    39 c2                           	cmp edx, eax
0x140c5:    73 05                           	jae 0x140cc <_ZSt3maxIjERKT_S2_S2_+0x30>
0x140c7:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x140ca:    eb 03                           	jmp 0x140cf <_ZSt3maxIjERKT_S2_S2_+0x33>
0x140cc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x140cf:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x140d2:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x140d9:    74 05                           	je 0x140e0 <function_140e0>
; data inside code section at 0x140db -- 0x140dc
0x140db:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x140dc -- 0x140dd
; data inside code section at 0x140dd -- 0x140e0
0x140dd:    ff ff ff                                           |...             |
; function: function_140e0 at 0x140e0 -- 0x140e2
0x140e0:    c9                              	leave 
0x140e1:    c3                              	ret 
; section: .text._ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
; function: _ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_ at 0x140e2 -- 0x14110
0x140e2:    55                              	push ebp
0x140e3:    89 e5                           	mov ebp, esp
0x140e5:    83 ec 38                        	sub esp, 0x38
0x140e8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x140eb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x140ee:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x140f4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x140f7:    31 c0                           	xor eax, eax
0x140f9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x140fc:    89 04 24                        	mov dword ptr [esp], eax
0x140ff:    e8 45 67 01 00                  	call 0x2a849 <unknown_2a849>
0x14104:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14107:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1410e:    74 05                           	je 0x14115 <function_14115>
; data inside code section at 0x14110 -- 0x14111
0x14110:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14111 -- 0x14112
; data inside code section at 0x14112 -- 0x14115
0x14112:    ff ff ff                                           |...             |
; function: function_14115 at 0x14115 -- 0x14117
0x14115:    c9                              	leave 
0x14116:    c3                              	ret 
; section: .text._ZSt4copyIPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET0_T_SB_SA_
; function: _ZSt4copyIPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET0_T_SB_SA_ at 0x14117 -- 0x14178
0x14117:    55                              	push ebp
0x14118:    89 e5                           	mov ebp, esp
0x1411a:    53                              	push ebx
0x1411b:    83 ec 34                        	sub esp, 0x34
0x1411e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14121:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14124:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14127:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1412a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1412d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14130:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x14133:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x14136:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1413c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1413f:    31 c0                           	xor eax, eax
0x14141:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14144:    89 04 24                        	mov dword ptr [esp], eax
0x14147:    e8 b2 67 01 00                  	call 0x2a8fe <unknown_2a8fe>
0x1414c:    89 c3                           	mov ebx, eax
0x1414e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14151:    89 04 24                        	mov dword ptr [esp], eax
0x14154:    e8 a5 67 01 00                  	call 0x2a8fe <unknown_2a8fe>
0x14159:    89 c2                           	mov edx, eax
0x1415b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1415e:    8b 4d d8                        	mov ecx, dword ptr [ebp - 0x28]
0x14161:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x14165:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x14169:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1416d:    89 04 24                        	mov dword ptr [esp], eax
0x14170:    e8 be 67 01 00                  	call 0x2a933 <unknown_2a933>
0x14175:    83 ec 04                        	sub esp, 4
; function: function_14178 at 0x14178 -- 0x14187
0x14178:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1417b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1417e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14185:    74 05                           	je 0x1418c <function_1418c>
; data inside code section at 0x14187 -- 0x14188
0x14187:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14188 -- 0x14189
; data inside code section at 0x14189 -- 0x1418c
0x14189:    ff ff ff                                           |...             |
; function: function_1418c at 0x1418c -- 0x14193
0x1418c:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1418f:    c9                              	leave 
0x14190:    c2 04 00                        	ret 4
; section: .text._ZSt7advanceIPKcjEvRT_T0_
; function: _ZSt7advanceIPKcjEvRT_T0_ at 0x14193 -- 0x141b7
0x14193:    55                              	push ebp
0x14194:    89 e5                           	mov ebp, esp
0x14196:    53                              	push ebx
0x14197:    83 ec 34                        	sub esp, 0x34
0x1419a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1419d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x141a0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x141a3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x141a6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x141ac:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x141af:    31 c0                           	xor eax, eax
0x141b1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x141b4:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
; data inside code section at 0x141b7 -- 0x141b8
0x141b7:    8d                                                 |.               |
; function: function_141b8 at 0x141b8 -- 0x141ee
0x141b8:    45                              	inc ebp
0x141b9:    df 8b 55 e4 89 54               	fisttp word ptr [ebx + 0x5489e455]
0x141bf:    24 04                           	and al, 4
0x141c1:    89 04 24                        	mov dword ptr [esp], eax
0x141c4:    e8 12 65 01 00                  	call 0x2a6db <unknown_2a6db>
0x141c9:    83 ec 04                        	sub esp, 4
0x141cc:    88 5c 24 08                     	mov byte ptr [esp + 8], bl
0x141d0:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x141d3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x141d7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x141da:    89 04 24                        	mov dword ptr [esp], eax
0x141dd:    e8 5f 68 01 00                  	call 0x2aa41 <unknown_2aa41>
0x141e2:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x141e5:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x141ec:    74 05                           	je 0x141f3 <function_141f3>
; data inside code section at 0x141ee -- 0x141ef
0x141ee:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x141ef -- 0x141f0
; data inside code section at 0x141f0 -- 0x141f3
0x141f0:    ff ff ff                                           |...             |
; function: function_141f3 at 0x141f3 -- 0x141f6
0x141f3:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
; function: function_141f6 at 0x141f6 -- 0x141f8
0x141f6:    c9                              	leave 
0x141f7:    c3                              	ret 
; section: .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
; function: _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ at 0x141f8 -- 0x14226
0x141f8:    55                              	push ebp
0x141f9:    89 e5                           	mov ebp, esp
0x141fb:    83 ec 38                        	sub esp, 0x38
0x141fe:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14201:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14204:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1420a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1420d:    31 c0                           	xor eax, eax
0x1420f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14212:    89 04 24                        	mov dword ptr [esp], eax
0x14215:    e8 d2 68 01 00                  	call 0x2aaec <unknown_2aaec>
0x1421a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1421d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14224:    74 05                           	je 0x1422b <function_1422b>
; data inside code section at 0x14226 -- 0x14227
0x14226:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14227 -- 0x14228
; data inside code section at 0x14228 -- 0x1422b
0x14228:    ff ff ff                                           |...             |
; function: function_1422b at 0x1422b -- 0x1422d
0x1422b:    c9                              	leave 
0x1422c:    c3                              	ret 
; section: .text._ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_
; function: _ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_ at 0x1422d -- 0x1423f
0x1422d:    55                              	push ebp
0x1422e:    89 e5                           	mov ebp, esp
0x14230:    83 ec 28                        	sub esp, 0x28
0x14233:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14236:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14239:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1423c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x1423f -- 0x14240
0x1423f:    65                                                 |e               |
; function: function_14240 at 0x14240 -- 0x14256
0x14240:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x14245:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14248:    31 c0                           	xor eax, eax
0x1424a:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1424d:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14254:    74 05                           	je 0x1425b <function_1425b>
; data inside code section at 0x14256 -- 0x14257
0x14256:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14257 -- 0x14258
; data inside code section at 0x14258 -- 0x1425b
0x14258:    ff ff ff                                           |...             |
; function: function_1425b at 0x1425b -- 0x1425d
0x1425b:    c9                              	leave 
0x1425c:    c3                              	ret 
; section: .text._ZNSaIhEC2ERKS_
; function: _ZNSaIhEC1ERKS_ at 0x1425e -- 0x14261
0x1425e:    55                              	push ebp
0x1425f:    89 e5                           	mov ebp, esp
; data inside code section at 0x14261 -- 0x14262
0x14261:    83                                                 |.               |
; function: function_14262 at 0x14262 -- 0x14299
0x14262:    ec                              	in al, dx
0x14263:    38 8b 45 08 89 45               	cmp byte ptr [ebx + 0x45890845], cl
0x14269:    e4 8b                           	in al, 0x8b
0x1426b:    45                              	inc ebp
0x1426c:    0c 89                           	or al, 0x89
0x1426e:    45                              	inc ebp
0x1426f:    e0 65                           	loopne 0x142d6
0x14271:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x14276:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14279:    31 c0                           	xor eax, eax
0x1427b:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1427e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14282:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14285:    89 04 24                        	mov dword ptr [esp], eax
0x14288:    e8 67 69 01 00                  	call 0x2abf4 <unknown_2abf4>
0x1428d:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x14290:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14297:    74 05                           	je 0x1429e <function_1429e>
; data inside code section at 0x14299 -- 0x1429a
0x14299:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1429a -- 0x1429b
; data inside code section at 0x1429b -- 0x1429e
0x1429b:    ff ff ff                                           |...             |
; function: function_1429e at 0x1429e -- 0x142a0
0x1429e:    c9                              	leave 
0x1429f:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv
; function: _ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv at 0x142a0 -- 0x142b2
0x142a0:    55                              	push ebp
0x142a1:    89 e5                           	mov ebp, esp
0x142a3:    83 ec 38                        	sub esp, 0x38
0x142a6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x142a9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x142ac:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x142af:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; function: function_142b2 at 0x142b2 -- 0x142d6
0x142b2:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x142b5:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x142b8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x142be:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x142c1:    31 c0                           	xor eax, eax
0x142c3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x142c6:    89 04 24                        	mov dword ptr [esp], eax
0x142c9:    e8 98 69 01 00                  	call 0x2ac66 <unknown_2ac66>
0x142ce:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x142d1:    0f 92 c0                        	setb al
0x142d4:    84 c0                           	test al, al
; data inside code section at 0x142d6 -- 0x142d9
0x142d6:    74 05 e8                                           |t..             |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x142d9 -- 0x142da
; data inside code section at 0x142da -- 0x142e4
0x142da:    ff ff ff 8b 45 e0 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _Znwj at 0x142e4 -- 0x142e5
; data inside code section at 0x142e5 -- 0x142e8
0x142e5:    ff ff ff                                           |...             |
; function: function_142e8 at 0x142e8 -- 0x142f4
0x142e8:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x142eb:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x142f2:    74 05                           	je 0x142f9 <function_142f9>
; data inside code section at 0x142f4 -- 0x142f5
0x142f4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x142f5 -- 0x142f6
; data inside code section at 0x142f6 -- 0x142f9
0x142f6:    ff ff ff                                           |...             |
; function: function_142f9 at 0x142f9 -- 0x142fb
0x142f9:    c9                              	leave 
0x142fa:    c3                              	ret 
; section: .text._ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_
; function: _ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_ at 0x142fb -- 0x1434a
0x142fb:    55                              	push ebp
0x142fc:    89 e5                           	mov ebp, esp
0x142fe:    83 ec 38                        	sub esp, 0x38
0x14301:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14304:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14307:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1430a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1430d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14310:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14313:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14319:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1431c:    31 c0                           	xor eax, eax
0x1431e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14321:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x14325:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14328:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1432c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1432f:    89 04 24                        	mov dword ptr [esp], eax
0x14332:    e8 b9 69 01 00                  	call 0x2acf0 <unknown_2acf0>
0x14337:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1433a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14341:    74 05                           	je 0x14348 <_ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_+0x4d>
0x14343:    e8 fc ff ff ff                  	call 0x14344
0x14348:    c9                              	leave 
0x14349:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_
; function: _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_ at 0x1434a -- 0x14375
0x1434a:    55                              	push ebp
0x1434b:    89 e5                           	mov ebp, esp
0x1434d:    83 ec 28                        	sub esp, 0x28
0x14350:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14353:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14356:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14359:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1435c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14362:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14365:    31 c0                           	xor eax, eax
0x14367:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1436a:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1436d:    89 10                           	mov dword ptr [eax], edx
0x1436f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14372:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x14375 -- 0x1437f
0x14375:    65 33 15 14 00 00 00 74  05 e8                     |e3.....t..      |
; dynamically linked function: __stack_chk_fail at 0x1437f -- 0x14380
; data inside code section at 0x14380 -- 0x14382
0x14380:    ff ff                                              |..              |
; function: function_14382 at 0x14382 -- 0x14387
0x14382:    ff c9                           	dec ecx
0x14384:    c2 04 00                        	ret 4
; section: .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES8_
; function: _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ at 0x14387 -- 0x143a4
0x14387:    55                              	push ebp
0x14388:    89 e5                           	mov ebp, esp
0x1438a:    83 ec 38                        	sub esp, 0x38
0x1438d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14390:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14393:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14399:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1439c:    31 c0                           	xor eax, eax
0x1439e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x143a1:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x143a4 -- 0x143a6
0x143a4:    e8 22                                              |."              |
; function: function_143a6 at 0x143a6 -- 0x143b5
0x143a6:    6a 01                           	push 1
0x143a8:    00 8b 55 f4 65 33               	add byte ptr [ebx + 0x3365f455], cl
0x143ae:    15 14 00 00 00                  	adc eax, 0x14
0x143b3:    74 05                           	je 0x143ba <function_143ba>
; data inside code section at 0x143b5 -- 0x143b6
0x143b5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x143b6 -- 0x143b7
; data inside code section at 0x143b7 -- 0x143ba
0x143b7:    ff ff ff                                           |...             |
; function: function_143ba at 0x143ba -- 0x143bc
0x143ba:    c9                              	leave 
0x143bb:    c3                              	ret 
; section: .text._ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_
; function: _ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_ at 0x143bc -- 0x143e3
0x143bc:    55                              	push ebp
0x143bd:    89 e5                           	mov ebp, esp
0x143bf:    83 ec 38                        	sub esp, 0x38
0x143c2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x143c5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x143c8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x143cb:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x143ce:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x143d1:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x143d4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x143da:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x143dd:    31 c0                           	xor eax, eax
0x143df:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
; data inside code section at 0x143e3 -- 0x143e4
0x143e3:    8b                                                 |.               |
; function: function_143e4 at 0x143e4 -- 0x14408
0x143e4:    45                              	inc ebp
0x143e5:    dc 89 44 24 08 8b               	fmul qword ptr [ecx - 0x74f7dbbc]
0x143eb:    45                              	inc ebp
0x143ec:    e0 89                           	loopne 0x14377
0x143ee:    44                              	inc esp
0x143ef:    24 04                           	and al, 4
0x143f1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x143f4:    89 04 24                        	mov dword ptr [esp], eax
0x143f7:    e8 3b 6a 01 00                  	call 0x2ae37 <unknown_2ae37>
0x143fc:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x143ff:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14406:    74 05                           	je 0x1440d <function_1440d>
; data inside code section at 0x14408 -- 0x14409
0x14408:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14409 -- 0x1440a
; data inside code section at 0x1440a -- 0x1440d
0x1440a:    ff ff ff                                           |...             |
; function: function_1440d at 0x1440d -- 0x1440f
0x1440d:    c9                              	leave 
0x1440e:    c3                              	ret 
; section: .text._ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_
; function: _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_ at 0x1440f -- 0x1442c
0x1440f:    55                              	push ebp
0x14410:    89 e5                           	mov ebp, esp
0x14412:    83 ec 28                        	sub esp, 0x28
0x14415:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14418:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1441b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1441e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14421:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14427:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1442a:    31 c0                           	xor eax, eax
; data inside code section at 0x1442c -- 0x1442e
0x1442c:    8b 45                                              |.E              |
; function: function_1442e at 0x1442e -- 0x14438
0x1442e:    f4                              	hlt 
0x1442f:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14436:    74 05                           	je 0x1443d <function_1443d>
; data inside code section at 0x14438 -- 0x14439
0x14438:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14439 -- 0x1443a
; data inside code section at 0x1443a -- 0x1443d
0x1443a:    ff ff ff                                           |...             |
; function: function_1443d at 0x1443d -- 0x1443f
0x1443d:    c9                              	leave 
0x1443e:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_
; function: _ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_ at 0x1443f -- 0x14465
0x1443f:    55                              	push ebp
0x14440:    89 e5                           	mov ebp, esp
0x14442:    83 ec 28                        	sub esp, 0x28
0x14445:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14448:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1444b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14451:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14454:    31 c0                           	xor eax, eax
0x14456:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14459:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1445c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14463:    74 05                           	je 0x1446a <function_1446a>
; data inside code section at 0x14465 -- 0x14466
0x14465:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14466 -- 0x14467
; data inside code section at 0x14467 -- 0x1446a
0x14467:    ff ff ff                                           |...             |
; function: function_1446a at 0x1446a -- 0x1446c
0x1446a:    c9                              	leave 
0x1446b:    c3                              	ret 
; section: .text._ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_
; function: _ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_ at 0x1446c -- 0x1449a
0x1446c:    55                              	push ebp
0x1446d:    89 e5                           	mov ebp, esp
0x1446f:    83 ec 38                        	sub esp, 0x38
0x14472:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14475:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14478:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1447e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14481:    31 c0                           	xor eax, eax
0x14483:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14486:    89 04 24                        	mov dword ptr [esp], eax
0x14489:    e8 1d 44 01 00                  	call 0x288ab <unknown_288ab>
0x1448e:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14491:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14498:    74 05                           	je 0x1449f <function_1449f>
; data inside code section at 0x1449a -- 0x1449b
0x1449a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1449b -- 0x1449c
; data inside code section at 0x1449c -- 0x1449f
0x1449c:    ff ff ff                                           |...             |
; function: function_1449f at 0x1449f -- 0x144a1
0x1449f:    c9                              	leave 
0x144a0:    c3                              	ret 
; section: .text._ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_
; function: _ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_ at 0x144a1 -- 0x144ed
0x144a1:    55                              	push ebp
0x144a2:    89 e5                           	mov ebp, esp
0x144a4:    83 ec 38                        	sub esp, 0x38
0x144a7:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x144aa:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x144ad:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x144b0:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x144b3:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x144b6:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x144b9:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x144bf:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x144c2:    31 c0                           	xor eax, eax
0x144c4:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x144c8:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x144cb:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x144cf:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x144d2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x144d6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x144d9:    89 04 24                        	mov dword ptr [esp], eax
0x144dc:    e8 3b 6a 01 00                  	call 0x2af1c <unknown_2af1c>
0x144e1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x144e4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x144eb:    74 05                           	je 0x144f2 <function_144f2>
; data inside code section at 0x144ed -- 0x144ee
0x144ed:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x144ee -- 0x144ef
; data inside code section at 0x144ef -- 0x144f2
0x144ef:    ff ff ff                                           |...             |
; function: function_144f2 at 0x144f2 -- 0x144f4
0x144f2:    c9                              	leave 
0x144f3:    c3                              	ret 
; section: .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_
; function: _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_ at 0x144f4 -- 0x144fa
0x144f4:    55                              	push ebp
0x144f5:    89 e5                           	mov ebp, esp
0x144f7:    83 ec 38                        	sub esp, 0x38
; function: function_144fa at 0x144fa -- 0x1453c
0x144fa:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x144fd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14500:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14503:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14506:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14509:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1450c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14512:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14515:    31 c0                           	xor eax, eax
0x14517:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1451a:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1451e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14521:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14525:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14528:    89 04 24                        	mov dword ptr [esp], eax
0x1452b:    e8 2f dd 00 00                  	call 0x2225f <unknown_2225f>
0x14530:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14533:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1453a:    74 05                           	je 0x14541 <function_14541>
; data inside code section at 0x1453c -- 0x1453d
0x1453c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1453d -- 0x1453e
; data inside code section at 0x1453e -- 0x14541
0x1453e:    ff ff ff                                           |...             |
; function: function_14541 at 0x14541 -- 0x14543
0x14541:    c9                              	leave 
0x14542:    c3                              	ret 
; section: .text._ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE
; function: _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE at 0x14543 -- 0x14555
0x14543:    55                              	push ebp
0x14544:    89 e5                           	mov ebp, esp
0x14546:    83 ec 38                        	sub esp, 0x38
0x14549:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1454c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1454f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14552:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x14555 -- 0x14556
0x14555:    8b                                                 |.               |
; function: function_14556 at 0x14556 -- 0x14557
0x14556:    45                              	inc ebp
; data inside code section at 0x14557 -- 0x14586
0x14557:    10 89 45 dc 65 a1 14 00  00 00 89 45 f4 31 c0 88   |..E.e......E.1..|
0x14567:    54 24 0c 8b 45 dc 89 44  24 08 8b 45 e0 89 44 24   |T$..E..D$..E..D$|
0x14577:    04 8b 45 e4 89 04 24 e8  a5 6a 01 00 8b 55 f4      |..E...$..j...U. |
; function: function_14586 at 0x14586 -- 0x1458f
0x14586:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1458d:    74 05                           	je 0x14594 <function_14594>
; data inside code section at 0x1458f -- 0x14590
0x1458f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14590 -- 0x14591
; data inside code section at 0x14591 -- 0x14594
0x14591:    ff ff ff                                           |...             |
; function: function_14594 at 0x14594 -- 0x14596
0x14594:    c9                              	leave 
0x14595:    c3                              	ret 
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_ at 0x14596 -- 0x1459f
0x14596:    55                              	push ebp
0x14597:    89 e5                           	mov ebp, esp
0x14599:    83 ec 38                        	sub esp, 0x38
0x1459c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; function: function_1459f at 0x1459f -- 0x145c1
0x1459f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x145a2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x145a5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x145a8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x145ae:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x145b1:    31 c0                           	xor eax, eax
0x145b3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x145b6:    89 04 24                        	mov dword ptr [esp], eax
0x145b9:    e8 0a 3a 00 00                  	call 0x17fc8 <function_17fc8>
0x145be:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x145c1 -- 0x145c4
0x145c1:    c7 00 24                                           |..$             |
; function: function_145c4 at 0x145c4 -- 0x145dc
0x145c4:    b4 01                           	mov ah, 1
0x145c6:    00 8b 45 e4 8b 55               	add byte ptr [ebx + 0x558be445], cl
0x145cc:    e0 89                           	loopne 0x14557
0x145ce:    50                              	push eax
0x145cf:    0c 8b                           	or al, 0x8b
0x145d1:    45                              	inc ebp
0x145d2:    f4                              	hlt 
0x145d3:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x145da:    74 05                           	je 0x145e1 <function_145e1>
; data inside code section at 0x145dc -- 0x145dd
0x145dc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x145dd -- 0x145de
; data inside code section at 0x145de -- 0x145e1
0x145de:    ff ff ff                                           |...             |
; function: function_145e1 at 0x145e1 -- 0x145e3
0x145e1:    c9                              	leave 
0x145e2:    c3                              	ret 
; section: .text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
; function: _ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_ at 0x145e3 -- 0x1460d
0x145e3:    55                              	push ebp
0x145e4:    89 e5                           	mov ebp, esp
0x145e6:    83 ec 38                        	sub esp, 0x38
0x145e9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x145ec:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x145ef:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x145f5:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x145f8:    31 c0                           	xor eax, eax
0x145fa:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x145fe:    74 12                           	je 0x14612
0x14600:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14603:    8b 00                           	mov eax, dword ptr [eax]
0x14605:    83 c0 04                        	add eax, 4
0x14608:    8b 10                           	mov edx, dword ptr [eax]
0x1460a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x1460d -- 0x1460e
0x1460d:    89                                                 |.               |
; function: function_1460e at 0x1460e -- 0x1461e
0x1460e:    04 24                           	add al, 0x24
0x14610:    ff d2                           	call edx
0x14612:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x14615:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1461c:    74 05                           	je 0x14623 <function_14623>
; data inside code section at 0x1461e -- 0x1461f
0x1461e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1461f -- 0x14620
; data inside code section at 0x14620 -- 0x14623
0x14620:    ff ff ff                                           |...             |
; function: function_14623 at 0x14623 -- 0x14625
0x14623:    c9                              	leave 
0x14624:    c3                              	ret 
; section: .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_
; function: _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_ at 0x14625 -- 0x1466d
0x14625:    55                              	push ebp
0x14626:    89 e5                           	mov ebp, esp
0x14628:    83 ec 38                        	sub esp, 0x38
0x1462b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1462e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14631:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14634:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14637:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1463a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1463d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14643:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14646:    31 c0                           	xor eax, eax
0x14648:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1464b:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1464f:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14652:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14656:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14659:    89 04 24                        	mov dword ptr [esp], eax
0x1465c:    e8 dc 47 01 00                  	call 0x28e3d <unknown_28e3d>
0x14661:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14664:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1466b:    74 05                           	je 0x14672 <function_14672>
; data inside code section at 0x1466d -- 0x1466e
0x1466d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1466e -- 0x1466f
; data inside code section at 0x1466f -- 0x14672
0x1466f:    ff ff ff                                           |...             |
; function: function_14672 at 0x14672 -- 0x14674
0x14672:    c9                              	leave 
0x14673:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb0EE7_S_baseES6_
; function: _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb0EE7_S_baseES6_ at 0x14674 -- 0x1467a
0x14674:    55                              	push ebp
0x14675:    89 e5                           	mov ebp, esp
0x14677:    83 ec 28                        	sub esp, 0x28
; data inside code section at 0x1467a -- 0x1467c
0x1467a:    8b 45                                              |.E              |
; function: function_1467c at 0x1467c -- 0x1468c
0x1467c:    08 89 45 e4 8b 45               	or byte ptr [ecx + 0x458be445], cl
0x14682:    0c 89                           	or al, 0x89
0x14684:    45                              	inc ebp
0x14685:    e0 65                           	loopne 0x146ec
0x14687:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
; data inside code section at 0x1468c -- 0x1468e
0x1468c:    89 45                                              |.E              |
; function: function_1468e at 0x1468e -- 0x146a8
0x1468e:    f4                              	hlt 
0x1468f:    31 c0                           	xor eax, eax
0x14691:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14694:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x14697:    89 10                           	mov dword ptr [eax], edx
0x14699:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1469c:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1469f:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x146a6:    74 05                           	je 0x146ad <function_146ad>
; data inside code section at 0x146a8 -- 0x146a9
0x146a8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x146a9 -- 0x146aa
; data inside code section at 0x146aa -- 0x146ad
0x146aa:    ff ff ff                                           |...             |
; function: function_146ad at 0x146ad -- 0x146b1
0x146ad:    c9                              	leave 
0x146ae:    c2 04 00                        	ret 4
; section: .text._ZNSt11__iter_swapILb1EE9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES8_EEvT_T0_
; function: _ZNSt11__iter_swapILb1EE9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES8_EEvT_T0_ at 0x146b1 -- 0x146eb
0x146b1:    55                              	push ebp
0x146b2:    89 e5                           	mov ebp, esp
0x146b4:    53                              	push ebx
0x146b5:    83 ec 34                        	sub esp, 0x34
0x146b8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x146bb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x146be:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x146c1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x146c4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x146ca:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x146cd:    31 c0                           	xor eax, eax
0x146cf:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x146d2:    89 04 24                        	mov dword ptr [esp], eax
0x146d5:    e8 b1 e1 00 00                  	call 0x2288b <unknown_2288b>
0x146da:    89 c3                           	mov ebx, eax
0x146dc:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x146df:    89 04 24                        	mov dword ptr [esp], eax
0x146e2:    e8 a4 e1 00 00                  	call 0x2288b <unknown_2288b>
0x146e7:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
; data inside code section at 0x146eb -- 0x14700
0x146eb:    89 04 24 e8 fd 6a 01 00  8b 45 f4 65 33 05 14 00   |..$..j...E.e3...|
0x146fb:    00 00 74 05 e8                                     |..t..           |
; dynamically linked function: __stack_chk_fail at 0x14700 -- 0x14701
; data inside code section at 0x14701 -- 0x14703
0x14701:    ff ff                                              |..              |
; function: function_14703 at 0x14703 -- 0x1470a
0x14703:    ff 83 c4 34 5b 5d               	inc dword ptr [ebx + 0x5d5b34c4]
0x14709:    c3                              	ret 
; section: .text._ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_
; function: _ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_ at 0x1470a -- 0x14770
0x1470a:    55                              	push ebp
0x1470b:    89 e5                           	mov ebp, esp
0x1470d:    56                              	push esi
0x1470e:    53                              	push ebx
0x1470f:    83 ec 30                        	sub esp, 0x30
0x14712:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14715:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14718:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1471b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1471e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14721:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14724:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1472a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1472d:    31 c0                           	xor eax, eax
0x1472f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14732:    89 04 24                        	mov dword ptr [esp], eax
0x14735:    e8 3c 44 01 00                  	call 0x28b76 <unknown_28b76>
0x1473a:    89 c6                           	mov esi, eax
0x1473c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1473f:    89 04 24                        	mov dword ptr [esp], eax
0x14742:    e8 2f 44 01 00                  	call 0x28b76 <unknown_28b76>
0x14747:    89 c3                           	mov ebx, eax
0x14749:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1474c:    89 04 24                        	mov dword ptr [esp], eax
0x1474f:    e8 22 44 01 00                  	call 0x28b76 <unknown_28b76>
0x14754:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x14758:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x1475c:    89 04 24                        	mov dword ptr [esp], eax
0x1475f:    e8 32 6b 01 00                  	call 0x2b296 <unknown_2b296>
0x14764:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14767:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1476e:    74 05                           	je 0x14775 <function_14775>
; data inside code section at 0x14770 -- 0x14771
0x14770:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14771 -- 0x14772
; data inside code section at 0x14772 -- 0x14775
0x14772:    ff ff ff                                           |...             |
; function: function_14775 at 0x14775 -- 0x1477c
0x14775:    83 c4 30                        	add esp, 0x30
0x14778:    5b                              	pop ebx
0x14779:    5e                              	pop esi
0x1477a:    5d                              	pop ebp
0x1477b:    c3                              	ret 
; section: .text._ZNKSt6vectorIhSaIhEE8max_sizeEv
; function: _ZNKSt6vectorIhSaIhEE8max_sizeEv at 0x1477c -- 0x147b2
0x1477c:    55                              	push ebp
0x1477d:    89 e5                           	mov ebp, esp
0x1477f:    83 ec 38                        	sub esp, 0x38
0x14782:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14785:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14788:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1478e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14791:    31 c0                           	xor eax, eax
0x14793:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14796:    89 04 24                        	mov dword ptr [esp], eax
0x14799:    e8 22 e2 00 00                  	call 0x229c0 <unknown_229c0>
0x1479e:    89 04 24                        	mov dword ptr [esp], eax
0x147a1:    e8 9c 69 01 00                  	call 0x2b142 <unknown_2b142>
0x147a6:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x147a9:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x147b0:    74 05                           	je 0x147b7
; data inside code section at 0x147b2 -- 0x147b3
0x147b2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x147b3 -- 0x147b4
; data inside code section at 0x147b4 -- 0x147b6
0x147b4:    ff ff                                              |..              |
; function: function_147b6 at 0x147b6 -- 0x147b9
0x147b6:    ff c9                           	dec ecx
0x147b8:    c3                              	ret 
; section: .text._ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_
; function: _ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_ at 0x147b9 -- 0x1480e
0x147b9:    55                              	push ebp
0x147ba:    89 e5                           	mov ebp, esp
0x147bc:    53                              	push ebx
0x147bd:    83 ec 34                        	sub esp, 0x34
0x147c0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x147c3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x147c6:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x147c9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x147cc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x147d2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x147d5:    31 c0                           	xor eax, eax
0x147d7:    8d 45 df                        	lea eax, [ebp - 0x21]
0x147da:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x147dd:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x147e1:    89 04 24                        	mov dword ptr [esp], eax
0x147e4:    e8 af 6b 01 00                  	call 0x2b398 <unknown_2b398>
0x147e9:    83 ec 04                        	sub esp, 4
0x147ec:    88 5c 24 08                     	mov byte ptr [esp + 8], bl
0x147f0:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x147f3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x147f7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x147fa:    89 04 24                        	mov dword ptr [esp], eax
0x147fd:    e8 cb 6b 01 00                  	call 0x2b3cd <unknown_2b3cd>
0x14802:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14805:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1480c:    74 05                           	je 0x14813 <function_14813>
; data inside code section at 0x1480e -- 0x1480f
0x1480e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1480f -- 0x14810
; function: function_14810 at 0x14810 -- 0x14811
; data inside code section at 0x14811 -- 0x14813
0x14811:    ff ff                                              |..              |
; function: function_14813 at 0x14813 -- 0x14818
0x14813:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x14816:    c9                              	leave 
0x14817:    c3                              	ret 
; section: .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
; function: _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_ at 0x14818 -- 0x1481e
0x14818:    55                              	push ebp
0x14819:    89 e5                           	mov ebp, esp
0x1481b:    83 ec 38                        	sub esp, 0x38
; function: function_1481e at 0x1481e -- 0x14821
0x1481e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x14821 -- 0x14822
0x14821:    89                                                 |.               |
; function: function_14822 at 0x14822 -- 0x14823
0x14822:    45                              	inc ebp
; function: function_14823 at 0x14823 -- 0x14856
0x14823:    e4 8b                           	in al, 0x8b
0x14825:    45                              	inc ebp
0x14826:    0c 89                           	or al, 0x89
0x14828:    45                              	inc ebp
0x14829:    e0 8b                           	loopne 0x147b6 <function_147b6>
0x1482b:    45                              	inc ebp
0x1482c:    10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0x14832:    14 00                           	adc al, 0
0x14834:    00 00                           	add byte ptr [eax], al
0x14836:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14839:    31 c0                           	xor eax, eax
0x1483b:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x1483e:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x14841:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x14845:    89 04 24                        	mov dword ptr [esp], eax
0x14848:    e8 dc 16 01 00                  	call 0x25f29 <unknown_25f29>
0x1484d:    83 ec 04                        	sub esp, 4
0x14850:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x14853:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
; data inside code section at 0x14856 -- 0x14858
0x14856:    89 54                                              |.T              |
; function: function_14858 at 0x14858 -- 0x1488a
0x14858:    24 04                           	and al, 4
0x1485a:    89 04 24                        	mov dword ptr [esp], eax
0x1485d:    e8 c7 16 01 00                  	call 0x25f29 <unknown_25f29>
0x14862:    83 ec 04                        	sub esp, 4
0x14865:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14868:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1486c:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x1486f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14873:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x14876:    89 04 24                        	mov dword ptr [esp], eax
0x14879:    e8 f7 6b 01 00                  	call 0x2b475 <unknown_2b475>
0x1487e:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14881:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14888:    74 05                           	je 0x1488f <function_1488f>
; data inside code section at 0x1488a -- 0x1488b
0x1488a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1488b -- 0x1488c
; data inside code section at 0x1488c -- 0x1488f
0x1488c:    ff ff ff                                           |...             |
; function: function_1488f at 0x1488f -- 0x14891
0x1488f:    c9                              	leave 
0x14890:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_
; function: _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_ at 0x14891 -- 0x148a6
0x14891:    55                              	push ebp
0x14892:    89 e5                           	mov ebp, esp
0x14894:    83 ec 38                        	sub esp, 0x38
0x14897:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1489a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1489d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x148a3:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; function: function_148a6 at 0x148a6 -- 0x148c1
0x148a6:    31 c0                           	xor eax, eax
0x148a8:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x148ab:    89 04 24                        	mov dword ptr [esp], eax
0x148ae:    e8 fc e5 00 00                  	call 0x22eaf <unknown_22eaf>
0x148b3:    8b 00                           	mov eax, dword ptr [eax]
0x148b5:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x148b8:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x148bf:    74 05                           	je 0x148c6 <function_148c6>
; data inside code section at 0x148c1 -- 0x148c2
0x148c1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x148c2 -- 0x148c3
; data inside code section at 0x148c3 -- 0x148c6
0x148c3:    ff ff ff                                           |...             |
; function: function_148c6 at 0x148c6 -- 0x148c8
0x148c6:    c9                              	leave 
0x148c7:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j
; function: _ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j at 0x148c8 -- 0x148dd
0x148c8:    55                              	push ebp
0x148c9:    89 e5                           	mov ebp, esp
0x148cb:    83 ec 38                        	sub esp, 0x38
0x148ce:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x148d1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x148d4:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x148d7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x148da:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; data inside code section at 0x148dd -- 0x148df
0x148dd:    89 45                                              |.E              |
; function: function_148df at 0x148df -- 0x148f1
0x148df:    dc 65 a1                        	fsub qword ptr [ebp - 0x5f]
0x148e2:    14 00                           	adc al, 0
0x148e4:    00 00                           	add byte ptr [eax], al
0x148e6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x148e9:    31 c0                           	xor eax, eax
0x148eb:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x148ee:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x148f1 -- 0x148f2
0x148f1:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x148f2 -- 0x148f3
; data inside code section at 0x148f3 -- 0x14903
0x148f3:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x14903 -- 0x14904
; data inside code section at 0x14904 -- 0x14906
0x14904:    ff ff                                              |..              |
; function: function_14906 at 0x14906 -- 0x14909
0x14906:    ff c9                           	dec ecx
0x14908:    c3                              	ret 
; section: .text._ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_
; function: _ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_ at 0x14909 -- 0x14958
0x14909:    55                              	push ebp
0x1490a:    89 e5                           	mov ebp, esp
0x1490c:    83 ec 38                        	sub esp, 0x38
0x1490f:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14912:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14915:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14918:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1491b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14921:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14924:    31 c0                           	xor eax, eax
0x14926:    eb 17                           	jmp 0x1493f <_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_+0x36>
0x14928:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1492b:    89 04 24                        	mov dword ptr [esp], eax
0x1492e:    e8 a5 6c 01 00                  	call 0x2b5d8 <unknown_2b5d8>
0x14933:    89 04 24                        	mov dword ptr [esp], eax
0x14936:    e8 ca 6c 01 00                  	call 0x2b605 <unknown_2b605>
0x1493b:    83 45 e4 14                     	add dword ptr [ebp - 0x1c], 0x14
0x1493f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14942:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x14945:    0f 95 c0                        	setne al
0x14948:    84 c0                           	test al, al
0x1494a:    75 dc                           	jne 0x14928 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_+0x1f>
0x1494c:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1494f:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14956:    74 05                           	je 0x1495d <function_1495d>
; data inside code section at 0x14958 -- 0x14959
0x14958:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14959 -- 0x1495a
; data inside code section at 0x1495a -- 0x1495d
0x1495a:    ff ff ff                                           |...             |
; function: function_1495d at 0x1495d -- 0x1495f
0x1495d:    c9                              	leave 
0x1495e:    c3                              	ret 
; section: .text._Z15GetSizeOfVarIntIyEjT_
; function: _Z15GetSizeOfVarIntIyEjT_ at 0x1495f -- 0x149b2
0x1495f:    55                              	push ebp
0x14960:    89 e5                           	mov ebp, esp
0x14962:    83 ec 28                        	sub esp, 0x28
0x14965:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14968:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1496b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1496e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14971:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14977:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1497a:    31 c0                           	xor eax, eax
; data inside code section at 0x1497c -- 0x1497d
0x1497c:    c7                                                 |.               |
0x1497d:    45                              	inc ebp
0x1497e:    f0 00 00                        	lock add byte ptr [eax], al
0x14981:    00 00                           	add byte ptr [eax], al
0x14983:    83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x14987:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x1498b:    77 0c                           	ja 0x14999 <_Z15GetSizeOfVarIntIyEjT_+0x3a>
0x1498d:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x14991:    72 21                           	jb 0x149b4 <function_149b4>
0x14993:    83 7d e0 7f                     	cmp dword ptr [ebp - 0x20], 0x7f
0x14997:    76 1b                           	jbe 0x149b4 <function_149b4>
0x14999:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1499c:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x1499f:    0f ac d0 07                     	shrd eax, edx, 7
0x149a3:    c1 ea 07                        	shr edx, 7
0x149a6:    83 c0 ff                        	add eax, -1
0x149a9:    83 d2 ff                        	adc edx, -1
0x149ac:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x149af:    89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
; function: function_149b2 at 0x149b2 -- 0x149b4
0x149b2:    eb cf                           	jmp 0x14983
; function: function_149b4 at 0x149b4 -- 0x149c4
0x149b4:    90                              	nop 
0x149b5:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x149b8:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x149bb:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x149c2:    74 05                           	je 0x149c9 <function_149c9>
; data inside code section at 0x149c4 -- 0x149c5
0x149c4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x149c5 -- 0x149c6
; data inside code section at 0x149c6 -- 0x149c9
0x149c6:    ff ff ff                                           |...             |
; function: function_149c9 at 0x149c9 -- 0x149cb
0x149c9:    c9                              	leave 
0x149ca:    c3                              	ret 
; section: .text._ZNSaI6CTxOutEC2ERKS0_
; function: _ZNSaI6CTxOutEC1ERKS0_ at 0x149cc -- 0x149f0
0x149cc:    55                              	push ebp
0x149cd:    89 e5                           	mov ebp, esp
0x149cf:    83 ec 38                        	sub esp, 0x38
0x149d2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x149d5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x149d8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x149db:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x149de:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x149e4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x149e7:    31 c0                           	xor eax, eax
0x149e9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x149ec:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; function: function_149f0 at 0x149f0 -- 0x14a07
0x149f0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x149f3:    89 04 24                        	mov dword ptr [esp], eax
0x149f6:    e8 03 6d 01 00                  	call 0x2b6fe <unknown_2b6fe>
0x149fb:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x149fe:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14a05:    74 05                           	je 0x14a0c <function_14a0c>
; data inside code section at 0x14a07 -- 0x14a08
0x14a07:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14a08 -- 0x14a09
; data inside code section at 0x14a09 -- 0x14a0c
0x14a09:    ff ff ff                                           |...             |
; function: function_14a0c at 0x14a0c -- 0x14a0e
0x14a0c:    c9                              	leave 
0x14a0d:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv
; function: _ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv at 0x14a0e -- 0x14a37
0x14a0e:    55                              	push ebp
0x14a0f:    89 e5                           	mov ebp, esp
0x14a11:    83 ec 38                        	sub esp, 0x38
0x14a14:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14a17:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14a1a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14a1d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14a20:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14a23:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14a26:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14a2c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14a2f:    31 c0                           	xor eax, eax
0x14a31:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14a34:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x14a37 -- 0x14a3a
0x14a37:    e8 34 6d                                           |.4m             |
; function: function_14a3a at 0x14a3a -- 0x14a46
0x14a3a:    01 00                           	add dword ptr [eax], eax
0x14a3c:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x14a3f:    0f 92 c0                        	setb al
0x14a42:    84 c0                           	test al, al
0x14a44:    74 05                           	je 0x14a4b <function_14a4b>
; data inside code section at 0x14a46 -- 0x14a47
0x14a46:    e8                                                 |.               |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x14a47 -- 0x14a48
; data inside code section at 0x14a48 -- 0x14a4b
0x14a48:    ff ff ff                                           |...             |
; function: function_14a4b at 0x14a4b -- 0x14a6c
0x14a4b:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x14a4e:    89 d0                           	mov eax, edx
0x14a50:    c1 e0 02                        	shl eax, 2
0x14a53:    01 d0                           	add eax, edx
0x14a55:    c1 e0 02                        	shl eax, 2
0x14a58:    89 04 24                        	mov dword ptr [esp], eax
0x14a5b:    e8 fc ff ff ff                  	call 0x14a5c
0x14a60:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14a63:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14a6a:    74 05                           	je 0x14a71 <function_14a71>
; data inside code section at 0x14a6c -- 0x14a6d
0x14a6c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14a6d -- 0x14a6e
; data inside code section at 0x14a6e -- 0x14a71
0x14a6e:    ff ff ff                                           |...             |
; function: function_14a71 at 0x14a71 -- 0x14a73
0x14a71:    c9                              	leave 
0x14a72:    c3                              	ret 
; section: .text._ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_
; function: _ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_ at 0x14a73 -- 0x14ab2
0x14a73:    55                              	push ebp
0x14a74:    89 e5                           	mov ebp, esp
0x14a76:    83 ec 38                        	sub esp, 0x38
0x14a79:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14a7c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14a7f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14a82:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14a85:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14a88:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14a8b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14a91:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14a94:    31 c0                           	xor eax, eax
0x14a96:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14a99:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x14a9d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14aa0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14aa4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14aa7:    89 04 24                        	mov dword ptr [esp], eax
0x14aaa:    e8 d0 6d 01 00                  	call 0x2b87f <unknown_2b87f>
0x14aaf:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
; data inside code section at 0x14ab2 -- 0x14ab4
0x14ab2:    65 33                                              |e3              |
; function: function_14ab4 at 0x14ab4 -- 0x14abb
0x14ab4:    05 14 00 00 00                  	add eax, 0x14
0x14ab9:    74 05                           	je 0x14ac0 <function_14ac0>
; data inside code section at 0x14abb -- 0x14abc
0x14abb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14abc -- 0x14abd
; data inside code section at 0x14abd -- 0x14ac0
0x14abd:    ff ff ff                                           |...             |
; function: function_14ac0 at 0x14ac0 -- 0x14ac2
0x14ac0:    c9                              	leave 
0x14ac1:    c3                              	ret 
; section: .text._ZSt4fillIPhhEvT_S1_RKT0_
; function: _ZSt4fillIPhhEvT_S1_RKT0_ at 0x14ac2 -- 0x14b1d
0x14ac2:    55                              	push ebp
0x14ac3:    89 e5                           	mov ebp, esp
0x14ac5:    53                              	push ebx
0x14ac6:    83 ec 34                        	sub esp, 0x34
0x14ac9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14acc:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14acf:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14ad2:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14ad5:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14ad8:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14adb:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14ae1:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14ae4:    31 c0                           	xor eax, eax
0x14ae6:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14ae9:    89 04 24                        	mov dword ptr [esp], eax
0x14aec:    e8 3d 44 01 00                  	call 0x28f2e <unknown_28f2e>
0x14af1:    89 c3                           	mov ebx, eax
0x14af3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14af6:    89 04 24                        	mov dword ptr [esp], eax
0x14af9:    e8 30 44 01 00                  	call 0x28f2e <unknown_28f2e>
0x14afe:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x14b01:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14b05:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x14b09:    89 04 24                        	mov dword ptr [esp], eax
0x14b0c:    e8 5f 6e 01 00                  	call 0x2b970 <unknown_2b970>
0x14b11:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x14b14:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14b1b:    74 05                           	je 0x14b22 <function_14b22>
; data inside code section at 0x14b1d -- 0x14b1e
0x14b1d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14b1e -- 0x14b1f
; data inside code section at 0x14b1f -- 0x14b22
0x14b1f:    ff ff ff                                           |...             |
; function: function_14b22 at 0x14b22 -- 0x14b28
0x14b22:    83 c4 34                        	add esp, 0x34
0x14b25:    5b                              	pop ebx
0x14b26:    5d                              	pop ebp
0x14b27:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStreamjEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStreamjEjRT_RKT0_ii19CSerActionSerialize at 0x14b28 -- 0x14b46
0x14b28:    55                              	push ebp
0x14b29:    89 e5                           	mov ebp, esp
0x14b2b:    83 ec 48                        	sub esp, 0x48
0x14b2e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14b31:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14b34:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14b37:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14b3a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14b3d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14b40:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x14b43:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
; function: function_14b46 at 0x14b46 -- 0x14b82
0x14b46:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x14b4a:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x14b4d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14b53:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14b56:    31 c0                           	xor eax, eax
0x14b58:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14b5b:    8b 00                           	mov eax, dword ptr [eax]
0x14b5d:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x14b60:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x14b64:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x14b67:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14b6b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14b6f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14b72:    89 04 24                        	mov dword ptr [esp], eax
0x14b75:    e8 1c 6f 01 00                  	call 0x2ba96 <unknown_2ba96>
0x14b7a:    b8 00 00 00 00                  	mov eax, 0
0x14b7f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x14b82 -- 0x14b84
0x14b82:    65 33                                              |e3              |
; function: function_14b84 at 0x14b84 -- 0x14b8b
0x14b84:    15 14 00 00 00                  	adc eax, 0x14
0x14b89:    74 05                           	je 0x14b90 <function_14b90>
; data inside code section at 0x14b8b -- 0x14b8c
0x14b8b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14b8c -- 0x14b8d
; data inside code section at 0x14b8d -- 0x14b90
0x14b8d:    ff ff ff                                           |...             |
; function: function_14b90 at 0x14b90 -- 0x14b92
0x14b90:    c9                              	leave 
0x14b91:    c3                              	ret 
; section: .text._ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
; function: _ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_ at 0x14b92 -- 0x14bcd
0x14b92:    55                              	push ebp
0x14b93:    89 e5                           	mov ebp, esp
0x14b95:    83 ec 68                        	sub esp, 0x68
0x14b98:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14b9b:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x14b9e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14ba1:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x14ba4:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14ba7:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x14baa:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x14bad:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x14bb0:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x14bb3:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x14bb6:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x14bb9:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x14bbc:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x14bbf:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x14bc2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14bc8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14bcb:    31 c0                           	xor eax, eax
; data inside code section at 0x14bcd -- 0x14bce
0x14bcd:    8d                                                 |.               |
; function: function_14bce at 0x14bce -- 0x14c27
0x14bce:    4d                              	dec ebp
0x14bcf:    ec                              	in al, dx
0x14bd0:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x14bd3:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x14bd6:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14bda:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14bde:    89 0c 24                        	mov dword ptr [esp], ecx
0x14be1:    e8 70 6f 01 00                  	call 0x2bb56 <unknown_2bb56>
0x14be6:    83 ec 04                        	sub esp, 4
0x14be9:    8d 4d e4                        	lea ecx, [ebp - 0x1c]
0x14bec:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x14bef:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x14bf2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14bf6:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14bfa:    89 0c 24                        	mov dword ptr [esp], ecx
0x14bfd:    e8 54 6f 01 00                  	call 0x2bb56 <unknown_2bb56>
0x14c02:    83 ec 04                        	sub esp, 4
0x14c05:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x14c08:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x14c0b:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x14c0e:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x14c12:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x14c16:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x14c19:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x14c1c:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x14c20:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x14c24:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x14c27 -- 0x14c28
0x14c27:    8b                                                 |.               |
; function: function_14c28 at 0x14c28 -- 0x14c4c
0x14c28:    55                              	push ebp
0x14c29:    e8 89 44 24 04                  	call 0x42590b7 <unknown_42590b7>
0x14c2e:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14c32:    89 0c 24                        	mov dword ptr [esp], ecx
0x14c35:    e8 73 6f 01 00                  	call 0x2bbad <unknown_2bbad>
0x14c3a:    83 ec 04                        	sub esp, 4
0x14c3d:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x14c40:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14c43:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14c4a:    74 05                           	je 0x14c51 <function_14c51>
; data inside code section at 0x14c4c -- 0x14c4d
0x14c4c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14c4d -- 0x14c4e
; data inside code section at 0x14c4e -- 0x14c51
0x14c4e:    ff ff ff                                           |...             |
; function: function_14c51 at 0x14c51 -- 0x14c55
0x14c51:    c9                              	leave 
0x14c52:    c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc
; function: _ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc at 0x14c56 -- 0x14ca8
0x14c56:    55                              	push ebp
0x14c57:    89 e5                           	mov ebp, esp
0x14c59:    53                              	push ebx
0x14c5a:    83 ec 34                        	sub esp, 0x34
0x14c5d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14c60:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14c63:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14c66:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14c69:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14c6c:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x14c6f:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14c75:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14c78:    31 c0                           	xor eax, eax
0x14c7a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14c7d:    89 04 24                        	mov dword ptr [esp], eax
0x14c80:    e8 cb 70 01 00                  	call 0x2bd50 <unknown_2bd50>
0x14c85:    89 c3                           	mov ebx, eax
0x14c87:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14c8a:    89 04 24                        	mov dword ptr [esp], eax
0x14c8d:    e8 76 a1 00 00                  	call 0x1ee08 <unknown_1ee08>
0x14c92:    89 da                           	mov edx, ebx
0x14c94:    29 c2                           	sub edx, eax
0x14c96:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14c99:    39 c2                           	cmp edx, eax
0x14c9b:    0f 92 c0                        	setb al
0x14c9e:    84 c0                           	test al, al
0x14ca0:    74 0b                           	je 0x14cad <function_14cad>
0x14ca2:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x14ca5:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x14ca8 -- 0x14ca9
0x14ca8:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x14ca9 -- 0x14caa
; data inside code section at 0x14caa -- 0x14cad
0x14caa:    ff ff ff                                           |...             |
; function: function_14cad at 0x14cad -- 0x14cf7
0x14cad:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14cb0:    89 04 24                        	mov dword ptr [esp], eax
0x14cb3:    e8 50 a1 00 00                  	call 0x1ee08 <unknown_1ee08>
0x14cb8:    89 c3                           	mov ebx, eax
0x14cba:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14cbd:    89 04 24                        	mov dword ptr [esp], eax
0x14cc0:    e8 43 a1 00 00                  	call 0x1ee08 <unknown_1ee08>
0x14cc5:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x14cc8:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x14ccb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14ccf:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x14cd2:    89 04 24                        	mov dword ptr [esp], eax
0x14cd5:    e8 18 40 01 00                  	call 0x28cf2 <unknown_28cf2>
0x14cda:    8b 00                           	mov eax, dword ptr [eax]
0x14cdc:    01 d8                           	add eax, ebx
0x14cde:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x14ce1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14ce4:    89 04 24                        	mov dword ptr [esp], eax
0x14ce7:    e8 1c a1 00 00                  	call 0x1ee08 <unknown_1ee08>
0x14cec:    3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x14cef:    77 10                           	ja 0x14d01
0x14cf1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14cf4:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x14cf7 -- 0x14cfa
0x14cf7:    e8 54 70                                           |.Tp             |
; function: function_14cfa at 0x14cfa -- 0x14d1d
0x14cfa:    01 00                           	add dword ptr [eax], eax
0x14cfc:    3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x14cff:    73 0d                           	jae 0x14d0e <function_14cfa+0x14>
0x14d01:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14d04:    89 04 24                        	mov dword ptr [esp], eax
0x14d07:    e8 44 70 01 00                  	call 0x2bd50 <unknown_2bd50>
0x14d0c:    eb 03                           	jmp 0x14d11 <function_14cfa+0x17>
0x14d0e:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x14d11:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14d14:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14d1b:    74 05                           	je 0x14d22 <function_14d22>
; data inside code section at 0x14d1d -- 0x14d1e
0x14d1d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14d1e -- 0x14d1f
; data inside code section at 0x14d1f -- 0x14d22
0x14d1f:    ff ff ff                                           |...             |
; function: function_14d22 at 0x14d22 -- 0x14d28
0x14d22:    83 c4 34                        	add esp, 0x34
0x14d25:    5b                              	pop ebx
0x14d26:    5d                              	pop ebp
0x14d27:    c3                              	ret 
; section: .text._ZNSt13_Bvector_baseISaIbEE11_M_allocateEj
; function: _ZNSt13_Bvector_baseISaIbEE11_M_allocateEj at 0x14d28 -- 0x14d48
0x14d28:    55                              	push ebp
0x14d29:    89 e5                           	mov ebp, esp
0x14d2b:    83 ec 38                        	sub esp, 0x38
0x14d2e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14d31:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14d34:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14d37:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x14d3a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14d40:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14d43:    31 c0                           	xor eax, eax
0x14d45:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; function: function_14d48 at 0x14d48 -- 0x14d7a
0x14d48:    83 c0 1f                        	add eax, 0x1f
0x14d4b:    89 c2                           	mov edx, eax
0x14d4d:    c1 ea 05                        	shr edx, 5
0x14d50:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14d53:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x14d5b:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x14d5f:    89 04 24                        	mov dword ptr [esp], eax
0x14d62:    e8 19 71 01 00                  	call 0x2be80 <unknown_2be80>
0x14d67:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14d6a:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14d71:    74 05                           	je 0x14d78 <function_14d48+0x30>
0x14d73:    e8 fc ff ff ff                  	call 0x14d74
0x14d78:    c9                              	leave 
0x14d79:    c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
; function: _ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator at 0x14d7a -- 0x14daa
0x14d7a:    55                              	push ebp
0x14d7b:    89 e5                           	mov ebp, esp
0x14d7d:    83 ec 68                        	sub esp, 0x68
0x14d80:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14d83:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x14d86:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14d89:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x14d8c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14d8f:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x14d92:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x14d95:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x14d98:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x14d9b:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x14d9e:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x14da1:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x14da4:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x14da7:    89 45 b8                        	mov dword ptr [ebp - 0x48], eax
; function: function_14daa at 0x14daa -- 0x14de6
0x14daa:    8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x14dad:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x14db0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14db6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14db9:    31 c0                           	xor eax, eax
0x14dbb:    8b 4d b8                        	mov ecx, dword ptr [ebp - 0x48]
0x14dbe:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x14dc1:    8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x14dc4:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x14dc8:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x14dcc:    89 04 24                        	mov dword ptr [esp], eax
0x14dcf:    e8 5c 71 01 00                  	call 0x2bf30 <unknown_2bf30>
0x14dd4:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x14dd7:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x14ddf:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x14de2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; function: function_14de6 at 0x14de6 -- 0x14e11
0x14de6:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x14de9:    89 04 24                        	mov dword ptr [esp], eax
0x14dec:    e8 ed 22 00 00                  	call 0x170de
0x14df1:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x14df4:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x14dfc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14e00:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x14e03:    89 04 24                        	mov dword ptr [esp], eax
0x14e06:    e8 f3 24 00 00                  	call 0x172fe <function_172fe>
0x14e0b:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x14e0e:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
; data inside code section at 0x14e11 -- 0x14e13
0x14e11:    8b 55                                              |.U              |
; function: function_14e13 at 0x14e13 -- 0x14e52
0x14e13:    ec                              	in al, dx
0x14e14:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x14e18:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x14e1c:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x14e1f:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x14e22:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x14e26:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x14e2a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x14e2d:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x14e30:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14e34:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14e38:    89 0c 24                        	mov dword ptr [esp], ecx
0x14e3b:    e8 56 71 01 00                  	call 0x2bf96 <unknown_2bf96>
0x14e40:    83 ec 04                        	sub esp, 4
0x14e43:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x14e46:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14e49:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14e50:    74 05                           	je 0x14e57 <function_14e57>
; data inside code section at 0x14e52 -- 0x14e53
0x14e52:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14e53 -- 0x14e54
; data inside code section at 0x14e54 -- 0x14e57
0x14e54:    ff ff ff                                           |...             |
; function: function_14e57 at 0x14e57 -- 0x14e5b
0x14e57:    c9                              	leave 
0x14e58:    c2 04 00                        	ret 4
; section: .text._ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
; function: _ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_ at 0x14e5b -- 0x14f15
0x14e5b:    55                              	push ebp
0x14e5c:    89 e5                           	mov ebp, esp
0x14e5e:    83 ec 68                        	sub esp, 0x68
0x14e61:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14e64:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x14e67:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14e6a:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x14e6d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14e70:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x14e73:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x14e76:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x14e79:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x14e7c:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x14e7f:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x14e82:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x14e85:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x14e88:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x14e8b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14e91:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14e94:    31 c0                           	xor eax, eax
0x14e96:    8d 4d ec                        	lea ecx, [ebp - 0x14]
0x14e99:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x14e9c:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x14e9f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14ea3:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14ea7:    89 0c 24                        	mov dword ptr [esp], ecx
0x14eaa:    e8 70 6f 01 00                  	call 0x2be1f <unknown_2be1f>
0x14eaf:    83 ec 04                        	sub esp, 4
0x14eb2:    8d 4d e4                        	lea ecx, [ebp - 0x1c]
0x14eb5:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x14eb8:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x14ebb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14ebf:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14ec3:    89 0c 24                        	mov dword ptr [esp], ecx
0x14ec6:    e8 54 6f 01 00                  	call 0x2be1f <unknown_2be1f>
0x14ecb:    83 ec 04                        	sub esp, 4
0x14ece:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x14ed1:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x14ed4:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x14ed7:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x14edb:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x14edf:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x14ee2:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x14ee5:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x14ee9:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x14eed:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14ef0:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x14ef3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14ef7:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x14efb:    89 0c 24                        	mov dword ptr [esp], ecx
0x14efe:    e8 37 72 01 00                  	call 0x2c13a <unknown_2c13a>
0x14f03:    83 ec 04                        	sub esp, 4
0x14f06:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x14f09:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x14f0c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x14f13:    74 05                           	je 0x14f1a <function_14f1a>
; data inside code section at 0x14f15 -- 0x14f16
0x14f15:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14f16 -- 0x14f17
; data inside code section at 0x14f17 -- 0x14f1a
0x14f17:    ff ff ff                                           |...             |
; function: function_14f1a at 0x14f1a -- 0x14f1e
0x14f1a:    c9                              	leave 
0x14f1b:    c2 04 00                        	ret 4
; section: .text._ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
; function: _ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv at 0x14f1e -- 0x14f5b
0x14f1e:    55                              	push ebp
0x14f1f:    89 e5                           	mov ebp, esp
0x14f21:    83 ec 38                        	sub esp, 0x38
0x14f24:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14f27:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x14f2a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14f30:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14f33:    31 c0                           	xor eax, eax
0x14f35:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14f38:    8b 00                           	mov eax, dword ptr [eax]
0x14f3a:    85 c0                           	test eax, eax
0x14f3c:    74 30                           	je 0x14f6e
0x14f3e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14f41:    8b 40 10                        	mov eax, dword ptr [eax + 0x10]
0x14f44:    89 c2                           	mov edx, eax
0x14f46:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14f49:    8b 00                           	mov eax, dword ptr [eax]
0x14f4b:    89 d1                           	mov ecx, edx
0x14f4d:    29 c1                           	sub ecx, eax
0x14f4f:    89 c8                           	mov eax, ecx
0x14f51:    c1 f8 02                        	sar eax, 2
0x14f54:    89 c1                           	mov ecx, eax
0x14f56:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x14f59:    8b 10                           	mov edx, dword ptr [eax]
; data inside code section at 0x14f5b -- 0x14f5c
0x14f5b:    8b                                                 |.               |
; function: function_14f5c at 0x14f5c -- 0x14f7a
0x14f5c:    45                              	inc ebp
0x14f5d:    e4 89                           	in al, 0x89
0x14f5f:    4c                              	dec esp
0x14f60:    24 08                           	and al, 8
0x14f62:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x14f66:    89 04 24                        	mov dword ptr [esp], eax
0x14f69:    e8 6e 73 01 00                  	call 0x2c2dc <unknown_2c2dc>
0x14f6e:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x14f71:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x14f78:    74 05                           	je 0x14f7f <function_14f7f>
; data inside code section at 0x14f7a -- 0x14f7b
0x14f7a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14f7b -- 0x14f7c
; data inside code section at 0x14f7c -- 0x14f7f
0x14f7c:    ff ff ff                                           |...             |
; function: function_14f7f at 0x14f7f -- 0x14f81
0x14f7f:    c9                              	leave 
0x14f80:    c3                              	ret 
; section: .text._ZNK6CCoins9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK6CCoins9SerializeI11CDataStreamEEvRT_ii at 0x14f82 -- 0x14f9e
0x14f82:    55                              	push ebp
0x14f83:    89 e5                           	mov ebp, esp
0x14f85:    53                              	push ebx
0x14f86:    83 ec 54                        	sub esp, 0x54
0x14f89:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x14f8c:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x14f8f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x14f92:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x14f95:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x14f98:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x14f9b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
; function: function_14f9e at 0x14f9e -- 0x14fce
0x14f9e:    89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x14fa1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x14fa7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x14faa:    31 c0                           	xor eax, eax
0x14fac:    c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x14fb3:    c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x14fba:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x14fbd:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x14fc1:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x14fc4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x14fc8:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x14fcb:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x14fce -- 0x14fcf
0x14fce:    e8                                                 |.               |
; dynamically linked function: _ZNK6CCoins12CalcMaskSizeERjS0_ at 0x14fcf -- 0x14fd0
; data inside code section at 0x14fd0 -- 0x14fd2
0x14fd0:    ff ff                                              |..              |
; function: function_14fd2 at 0x14fd2 -- 0x1506b
0x14fd2:    ff 8b 45 c4 83 c0               	dec dword ptr [ebx - 0x3f7c3bbb]
0x14fd8:    04 89                           	add al, 0x89
0x14fda:    04 24                           	add al, 0x24
0x14fdc:    e8 b1 9a 00 00                  	call 0x1ea92 <unknown_1ea92>
0x14fe1:    85 c0                           	test eax, eax
0x14fe3:    74 2c                           	je 0x15011 <function_14fd2+0x3f>
0x14fe5:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x14fe8:    83 c0 04                        	add eax, 4
0x14feb:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x14ff3:    89 04 24                        	mov dword ptr [esp], eax
0x14ff6:    e8 35 9c 00 00                  	call 0x1ec30 <unknown_1ec30>
0x14ffb:    89 04 24                        	mov dword ptr [esp], eax
0x14ffe:    e8 f7 5c 00 00                  	call 0x1acfa <function_1acfa>
0x15003:    83 f0 01                        	xor eax, 1
0x15006:    84 c0                           	test al, al
0x15008:    74 07                           	je 0x15011 <function_14fd2+0x3f>
0x1500a:    b8 01 00 00 00                  	mov eax, 1
0x1500f:    eb 05                           	jmp 0x15016 <function_14fd2+0x44>
0x15011:    b8 00 00 00 00                  	mov eax, 0
0x15016:    88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x15019:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1501c:    83 c0 04                        	add eax, 4
0x1501f:    89 04 24                        	mov dword ptr [esp], eax
0x15022:    e8 6b 9a 00 00                  	call 0x1ea92 <unknown_1ea92>
0x15027:    83 f8 01                        	cmp eax, 1
0x1502a:    76 2c                           	jbe 0x15058 <function_14fd2+0x86>
0x1502c:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1502f:    83 c0 04                        	add eax, 4
0x15032:    c7 44 24 04 01 00 00 00         	mov dword ptr [esp + 4], 1
0x1503a:    89 04 24                        	mov dword ptr [esp], eax
0x1503d:    e8 ee 9b 00 00                  	call 0x1ec30 <unknown_1ec30>
0x15042:    89 04 24                        	mov dword ptr [esp], eax
0x15045:    e8 b0 5c 00 00                  	call 0x1acfa <function_1acfa>
0x1504a:    83 f0 01                        	xor eax, 1
0x1504d:    84 c0                           	test al, al
0x1504f:    74 07                           	je 0x15058 <function_14fd2+0x86>
0x15051:    b8 01 00 00 00                  	mov eax, 1
0x15056:    eb 05                           	jmp 0x1505d <function_14fd2+0x8b>
0x15058:    b8 00 00 00 00                  	mov eax, 0
0x1505d:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x15060:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x15064:    83 f0 01                        	xor eax, 1
0x15067:    84 c0                           	test al, al
0x15069:    74 36                           	je 0x150a1 <function_150a1>
; data inside code section at 0x1506b -- 0x1506c
0x1506b:    0f                                                 |.               |
; function: function_1506c at 0x1506c -- 0x1509c
0x1506c:    b6 45                           	mov dh, 0x45
0x1506e:    f3 83 f0 01                     	xor eax, 1
0x15072:    84 c0                           	test al, al
0x15074:    74 2b                           	je 0x150a1 <function_150a1>
0x15076:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x15079:    85 c0                           	test eax, eax
0x1507b:    75 24                           	jne 0x150a1 <function_150a1>
0x1507d:    c7 44 24 0c e4 42 00 00         	mov dword ptr [esp + 0xc], 0x42e4 ; "void CCoins::Serialize(Stream&, int, int) const [with Stream = CDataStream]"
0x15085:    c7 44 24 08 f2 01 00 00         	mov dword ptr [esp + 8], 0x1f2
0x1508d:    c7 44 24 04 86 3d 00 00         	mov dword ptr [esp + 4], 0x3d86 ; "core.h"
0x15095:    c7 04 24 90 3d 00 00            	mov dword ptr [esp], 0x3d90 ; "fFirst || fSecond || nMaskCode"
; data inside code section at 0x1509c -- 0x1509d
0x1509c:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1509d -- 0x1509e
; data inside code section at 0x1509e -- 0x150a1
0x1509e:    ff ff ff                                           |...             |
; function: function_150a1 at 0x150a1 -- 0x150a8
0x150a1:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x150a4:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
; data inside code section at 0x150a8 -- 0x150aa
0x150a8:    83 f0                                              |..              |
; function: function_150aa at 0x150aa -- 0x150f4
0x150aa:    01 84 c0 74 12 0f b6            	add dword ptr [eax + eax*8 - 0x49f0ed8c], eax
0x150b1:    45                              	inc ebp
0x150b2:    f3 83 f0 01                     	xor eax, 1
0x150b6:    84 c0                           	test al, al
0x150b8:    74 07                           	je 0x150c1 <function_150aa+0x17>
0x150ba:    b8 01 00 00 00                  	mov eax, 1
0x150bf:    eb 05                           	jmp 0x150c6 <function_150aa+0x1c>
0x150c1:    b8 00 00 00 00                  	mov eax, 0
0x150c6:    0f b6 c0                        	movzx eax, al
0x150c9:    89 d1                           	mov ecx, edx
0x150cb:    29 c1                           	sub ecx, eax
0x150cd:    89 c8                           	mov eax, ecx
0x150cf:    8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x150d6:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x150d9:    0f b6 00                        	movzx eax, byte ptr [eax]
0x150dc:    84 c0                           	test al, al
0x150de:    74 07                           	je 0x150e7 <function_150aa+0x3d>
0x150e0:    b8 01 00 00 00                  	mov eax, 1
0x150e5:    eb 05                           	jmp 0x150ec <function_150aa+0x42>
0x150e7:    b8 00 00 00 00                  	mov eax, 0
0x150ec:    01 c2                           	add edx, eax
0x150ee:    80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x150f2:    74 07                           	je 0x150fb
; function: function_150f4 at 0x150f4 -- 0x150fb
0x150f4:    b8 02 00 00 00                  	mov eax, 2
0x150f9:    eb 05                           	jmp 0x15100 <function_15100>
; function: function_150fb at 0x150fb -- 0x150fc
; data inside code section at 0x150fc -- 0x15100
0x150fc:    00 00 00 00                                        |....            |
; function: function_15100 at 0x15100 -- 0x15362
0x15100:    01 c2                           	add edx, eax
0x15102:    80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x15106:    74 07                           	je 0x1510f <function_15100+0xf>
0x15108:    b8 04 00 00 00                  	mov eax, 4
0x1510d:    eb 05                           	jmp 0x15114 <function_15100+0x14>
0x1510f:    b8 00 00 00 00                  	mov eax, 0
0x15114:    01 d0                           	add eax, edx
0x15116:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x15119:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1511c:    83 c0 14                        	add eax, 0x14
0x1511f:    89 04 24                        	mov dword ptr [esp], eax
0x15122:    e8 06 97 00 00                  	call 0x1e82d <unknown_1e82d>
0x15127:    8d 55 d4                        	lea edx, [ebp - 0x2c]
0x1512a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1512e:    89 14 24                        	mov dword ptr [esp], edx
0x15131:    e8 24 97 00 00                  	call 0x1e85a <unknown_1e85a>
0x15136:    83 ec 04                        	sub esp, 4
0x15139:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x1513c:    89 04 24                        	mov dword ptr [esp], eax
0x1513f:    e8 5d 97 00 00                  	call 0x1e8a1 <unknown_1e8a1>
0x15144:    8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x15147:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1514b:    8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x1514e:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15152:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15156:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x15159:    89 04 24                        	mov dword ptr [esp], eax
0x1515c:    e8 20 72 01 00                  	call 0x2c381 <unknown_2c381>
0x15161:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x15164:    89 04 24                        	mov dword ptr [esp], eax
0x15167:    e8 91 92 00 00                  	call 0x1e3fd <unknown_1e3fd>
0x1516c:    8d 55 d8                        	lea edx, [ebp - 0x28]
0x1516f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15173:    89 14 24                        	mov dword ptr [esp], edx
0x15176:    e8 af 92 00 00                  	call 0x1e42a <unknown_1e42a>
0x1517b:    83 ec 04                        	sub esp, 4
0x1517e:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x15181:    89 04 24                        	mov dword ptr [esp], eax
0x15184:    e8 e8 92 00 00                  	call 0x1e471 <unknown_1e471>
0x15189:    8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x1518c:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x15190:    8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x15193:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15197:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1519b:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1519e:    89 04 24                        	mov dword ptr [esp], eax
0x151a1:    e8 37 72 01 00                  	call 0x2c3dd <unknown_2c3dd>
0x151a6:    c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x151ad:    e9 b2 00 00 00                  	jmp 0x15264 <function_15100+0x164>
0x151b2:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x151b6:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x151bd:    eb 4c                           	jmp 0x1520b <function_15100+0x10b>
0x151bf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x151c2:    c1 e0 03                        	shl eax, 3
0x151c5:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x151c8:    8d 50 02                        	lea edx, [eax + 2]
0x151cb:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x151ce:    83 c0 04                        	add eax, 4
0x151d1:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x151d5:    89 04 24                        	mov dword ptr [esp], eax
0x151d8:    e8 53 9a 00 00                  	call 0x1ec30 <unknown_1ec30>
0x151dd:    89 04 24                        	mov dword ptr [esp], eax
0x151e0:    e8 15 5b 00 00                  	call 0x1acfa <function_1acfa>
0x151e5:    83 f0 01                        	xor eax, 1
0x151e8:    84 c0                           	test al, al
0x151ea:    74 1b                           	je 0x15207 <function_15100+0x107>
0x151ec:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x151ef:    ba 01 00 00 00                  	mov edx, 1
0x151f4:    89 d3                           	mov ebx, edx
0x151f6:    89 c1                           	mov ecx, eax
0x151f8:    d3 e3                           	shl ebx, cl
0x151fa:    89 d8                           	mov eax, ebx
0x151fc:    89 c2                           	mov edx, eax
0x151fe:    0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x15202:    09 d0                           	or eax, edx
0x15204:    88 45 f1                        	mov byte ptr [ebp - 0xf], al
0x15207:    83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x1520b:    83 7d e8 07                     	cmp dword ptr [ebp - 0x18], 7
0x1520f:    77 25                           	ja 0x15236 <function_15100+0x136>
0x15211:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15214:    c1 e0 03                        	shl eax, 3
0x15217:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x1521a:    8d 58 02                        	lea ebx, [eax + 2]
0x1521d:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x15220:    83 c0 04                        	add eax, 4
0x15223:    89 04 24                        	mov dword ptr [esp], eax
0x15226:    e8 67 98 00 00                  	call 0x1ea92 <unknown_1ea92>
0x1522b:    39 c3                           	cmp ebx, eax
0x1522d:    73 07                           	jae 0x15236 <function_15100+0x136>
0x1522f:    b8 01 00 00 00                  	mov eax, 1
0x15234:    eb 05                           	jmp 0x1523b <function_15100+0x13b>
0x15236:    b8 00 00 00 00                  	mov eax, 0
0x1523b:    84 c0                           	test al, al
0x1523d:    75 80                           	jne 0x151bf <function_15100+0xbf>
0x1523f:    0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x15243:    8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x15246:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1524a:    8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x1524d:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15251:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15255:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x15258:    89 04 24                        	mov dword ptr [esp], eax
0x1525b:    e8 d9 71 01 00                  	call 0x2c439 <unknown_2c439>
0x15260:    83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x15264:    8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x15267:    39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x1526a:    0f 92 c0                        	setb al
0x1526d:    84 c0                           	test al, al
0x1526f:    0f 85 3d ff ff ff               	jne 0x151b2 <function_15100+0xb2>
0x15275:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x1527c:    eb 74                           	jmp 0x152f2 <function_15100+0x1f2>
0x1527e:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x15281:    8d 50 04                        	lea edx, [eax + 4]
0x15284:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x15287:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1528b:    89 14 24                        	mov dword ptr [esp], edx
0x1528e:    e8 9d 99 00 00                  	call 0x1ec30 <unknown_1ec30>
0x15293:    89 04 24                        	mov dword ptr [esp], eax
0x15296:    e8 5f 5a 00 00                  	call 0x1acfa <function_1acfa>
0x1529b:    83 f0 01                        	xor eax, 1
0x1529e:    84 c0                           	test al, al
0x152a0:    74 4c                           	je 0x152ee <function_15100+0x1ee>
0x152a2:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x152a5:    8d 50 04                        	lea edx, [eax + 4]
0x152a8:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x152ab:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x152af:    89 14 24                        	mov dword ptr [esp], edx
0x152b2:    e8 79 99 00 00                  	call 0x1ec30 <unknown_1ec30>
0x152b7:    89 04 24                        	mov dword ptr [esp], eax
0x152ba:    e8 5e 96 00 00                  	call 0x1e91d <unknown_1e91d>
0x152bf:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x152c3:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x152c6:    89 04 24                        	mov dword ptr [esp], eax
0x152c9:    e8 66 5a 00 00                  	call 0x1ad34 <function_1ad34>
0x152ce:    8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x152d1:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x152d5:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x152d8:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x152dc:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x152df:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x152e3:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x152e6:    89 04 24                        	mov dword ptr [esp], eax
0x152e9:    e8 a1 71 01 00                  	call 0x2c48f <unknown_2c48f>
0x152ee:    83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x152f2:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x152f5:    83 c0 04                        	add eax, 4
0x152f8:    89 04 24                        	mov dword ptr [esp], eax
0x152fb:    e8 92 97 00 00                  	call 0x1ea92 <unknown_1ea92>
0x15300:    3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x15303:    0f 97 c0                        	seta al
0x15306:    84 c0                           	test al, al
0x15308:    0f 85 70 ff ff ff               	jne 0x1527e <function_15100+0x17e>
0x1530e:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x15311:    83 c0 10                        	add eax, 0x10
0x15314:    89 04 24                        	mov dword ptr [esp], eax
0x15317:    e8 11 95 00 00                  	call 0x1e82d <unknown_1e82d>
0x1531c:    8d 55 e0                        	lea edx, [ebp - 0x20]
0x1531f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15323:    89 14 24                        	mov dword ptr [esp], edx
0x15326:    e8 2f 95 00 00                  	call 0x1e85a <unknown_1e85a>
0x1532b:    83 ec 04                        	sub esp, 4
0x1532e:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x15331:    89 04 24                        	mov dword ptr [esp], eax
0x15334:    e8 68 95 00 00                  	call 0x1e8a1 <unknown_1e8a1>
0x15339:    8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x1533c:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x15340:    8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x15343:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15347:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1534b:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1534e:    89 04 24                        	mov dword ptr [esp], eax
0x15351:    e8 2b 70 01 00                  	call 0x2c381 <unknown_2c381>
0x15356:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15359:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15360:    74 05                           	je 0x15367 <function_15367>
; data inside code section at 0x15362 -- 0x15363
0x15362:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15363 -- 0x15364
; data inside code section at 0x15364 -- 0x15367
0x15364:    ff ff ff                                           |...             |
; function: function_15367 at 0x15367 -- 0x1536c
0x15367:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1536a:    c9                              	leave 
0x1536b:    c3                              	ret 
; section: .text._ZNK9base_uintILj256EE9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK9base_uintILj256EE9SerializeI11CDataStreamEEvRT_ii at 0x1536c -- 0x153bb
0x1536c:    55                              	push ebp
0x1536d:    89 e5                           	mov ebp, esp
0x1536f:    83 ec 38                        	sub esp, 0x38
0x15372:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15375:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15378:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1537b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1537e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15381:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15384:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15387:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1538a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15390:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15393:    31 c0                           	xor eax, eax
0x15395:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15398:    c7 44 24 08 20 00 00 00         	mov dword ptr [esp + 8], 0x20
0x153a0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x153a4:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x153a7:    89 04 24                        	mov dword ptr [esp], eax
0x153aa:    e8 2b 4b 00 00                  	call 0x19eda <function_19eda>
0x153af:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x153b2:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x153b9:    74 05                           	je 0x153c0 <function_153c0>
; data inside code section at 0x153bb -- 0x153bc
0x153bb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x153bc -- 0x153bd
; data inside code section at 0x153bd -- 0x153c0
0x153bd:    ff ff ff                                           |...             |
; function: function_153c0 at 0x153c0 -- 0x153c2
0x153c0:    c9                              	leave 
0x153c1:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E at 0x153c2 -- 0x153ff
0x153c2:    55                              	push ebp
0x153c3:    89 e5                           	mov ebp, esp
0x153c5:    83 ec 38                        	sub esp, 0x38
0x153c8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x153cb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x153ce:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x153d4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x153d7:    31 c0                           	xor eax, eax
0x153d9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x153dc:    89 04 24                        	mov dword ptr [esp], eax
0x153df:    e8 47 75 01 00                  	call 0x2c92b <unknown_2c92b>
0x153e4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x153e8:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x153eb:    89 04 24                        	mov dword ptr [esp], eax
0x153ee:    e8 65 54 01 00                  	call 0x2a858 <unknown_2a858>
0x153f3:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x153f6:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x153fd:    74 05                           	je 0x15404 <function_15404>
; data inside code section at 0x153ff -- 0x15400
0x153ff:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15400 -- 0x15401
; data inside code section at 0x15401 -- 0x15404
0x15401:    ff ff ff                                           |...             |
; function: function_15404 at 0x15404 -- 0x15406
0x15404:    c9                              	leave 
0x15405:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base at 0x15406 -- 0x1542f
0x15406:    55                              	push ebp
0x15407:    89 e5                           	mov ebp, esp
0x15409:    83 ec 28                        	sub esp, 0x28
0x1540c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1540f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15412:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15418:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1541b:    31 c0                           	xor eax, eax
0x1541d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15420:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x15423:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15426:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1542d:    74 05                           	je 0x15434 <function_15434>
; data inside code section at 0x1542f -- 0x15430
0x1542f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15430 -- 0x15431
; data inside code section at 0x15431 -- 0x15434
0x15431:    ff ff ff                                           |...             |
; function: function_15434 at 0x15434 -- 0x15436
0x15434:    c9                              	leave 
0x15435:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base at 0x15436 -- 0x1545f
0x15436:    55                              	push ebp
0x15437:    89 e5                           	mov ebp, esp
0x15439:    83 ec 28                        	sub esp, 0x28
0x1543c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1543f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15442:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15448:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1544b:    31 c0                           	xor eax, eax
0x1544d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15450:    8b 40 0c                        	mov eax, dword ptr [eax + 0xc]
0x15453:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15456:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1545d:    74 05                           	je 0x15464 <function_15464>
; data inside code section at 0x1545f -- 0x15460
0x1545f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15460 -- 0x15461
; data inside code section at 0x15461 -- 0x15464
0x15461:    ff ff ff                                           |...             |
; function: function_15464 at 0x15464 -- 0x15466
0x15464:    c9                              	leave 
0x15465:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base at 0x15466 -- 0x1548f
0x15466:    55                              	push ebp
0x15467:    89 e5                           	mov ebp, esp
0x15469:    83 ec 28                        	sub esp, 0x28
0x1546c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1546f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15472:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15478:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1547b:    31 c0                           	xor eax, eax
0x1547d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15480:    83 c0 10                        	add eax, 0x10
0x15483:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15486:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1548d:    74 05                           	je 0x15494 <function_15494>
; data inside code section at 0x1548f -- 0x15490
0x1548f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15490 -- 0x15491
; data inside code section at 0x15491 -- 0x15494
0x15491:    ff ff ff                                           |...             |
; function: function_15494 at 0x15494 -- 0x15496
0x15494:    c9                              	leave 
0x15495:    c3                              	ret 
; section: .text._ZNKSt10_Select1stISt4pairIK7uint256P11CBlockIndexEEclERKS5_
; function: _ZNKSt10_Select1stISt4pairIK7uint256P11CBlockIndexEEclERKS5_ at 0x15496 -- 0x1549f
0x15496:    55                              	push ebp
0x15497:    89 e5                           	mov ebp, esp
0x15499:    83 ec 28                        	sub esp, 0x28
0x1549c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x1549f -- 0x154a0
0x1549f:    89                                                 |.               |
; function: function_154a0 at 0x154a0 -- 0x154c2
0x154a0:    45                              	inc ebp
0x154a1:    e4 8b                           	in al, 0x8b
0x154a3:    45                              	inc ebp
0x154a4:    0c 89                           	or al, 0x89
0x154a6:    45                              	inc ebp
0x154a7:    e0 65                           	loopne 0x1550e <function_1550e>
0x154a9:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x154ae:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x154b1:    31 c0                           	xor eax, eax
0x154b3:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x154b6:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x154b9:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x154c0:    74 05                           	je 0x154c7 <function_154c7>
; data inside code section at 0x154c2 -- 0x154c3
0x154c2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x154c3 -- 0x154c4
; data inside code section at 0x154c4 -- 0x154c7
0x154c4:    ff ff ff                                           |...             |
; function: function_154c7 at 0x154c7 -- 0x154c9
0x154c7:    c9                              	leave 
0x154c8:    c3                              	ret 
; section: .text._Z16GetSerializeSizeI15CDiskBlockIndexEjRKT_li
; function: _Z16GetSerializeSizeI15CDiskBlockIndexEjRKT_li at 0x154c9 -- 0x154de
0x154c9:    55                              	push ebp
0x154ca:    89 e5                           	mov ebp, esp
0x154cc:    83 ec 38                        	sub esp, 0x38
0x154cf:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x154d2:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x154d5:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x154d8:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x154db:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; function: function_154de at 0x154de -- 0x15508
0x154de:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x154e1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x154e7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x154ea:    31 c0                           	xor eax, eax
0x154ec:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x154ef:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x154f3:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x154f6:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x154fa:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x154fd:    89 04 24                        	mov dword ptr [esp], eax
0x15500:    e8 48 6f 00 00                  	call 0x1c44d <unknown_1c44d>
0x15505:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x15508 -- 0x1550e
0x15508:    65 33 15 14 00 00                                  |e3....          |
; function: function_1550e at 0x1550e -- 0x15512
0x1550e:    00 74 05 e8                     	add byte ptr [ebp + eax - 0x18], dh
; dynamically linked function: __stack_chk_fail at 0x15512 -- 0x15513
; data inside code section at 0x15513 -- 0x15515
0x15513:    ff ff                                              |..              |
; function: function_15515 at 0x15515 -- 0x15518
0x15515:    ff c9                           	dec ecx
0x15517:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream15CDiskBlockIndexEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream15CDiskBlockIndexEvRT_RKT0_li at 0x15518 -- 0x1551b
0x15518:    55                              	push ebp
0x15519:    89 e5                           	mov ebp, esp
; data inside code section at 0x1551b -- 0x1551c
0x1551b:    83                                                 |.               |
; function: function_1551c at 0x1551c -- 0x1556d
0x1551c:    ec                              	in al, dx
0x1551d:    38 8b 45 08 89 45               	cmp byte ptr [ebx + 0x45890845], cl
0x15523:    e4 8b                           	in al, 0x8b
0x15525:    45                              	inc ebp
0x15526:    0c 89                           	or al, 0x89
0x15528:    45                              	inc ebp
0x15529:    e0 8b                           	loopne 0x154b6
0x1552b:    45                              	inc ebp
0x1552c:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x15532:    14 89                           	adc al, 0x89
0x15534:    45                              	inc ebp
0x15535:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x15538:    14 00                           	adc al, 0
0x1553a:    00 00                           	add byte ptr [eax], al
0x1553c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1553f:    31 c0                           	xor eax, eax
0x15541:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x15544:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15548:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1554b:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1554f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15552:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15556:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15559:    89 04 24                        	mov dword ptr [esp], eax
0x1555c:    e8 51 75 01 00                  	call 0x2cab2 <unknown_2cab2>
0x15561:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15564:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1556b:    74 05                           	je 0x15572 <function_15572>
; data inside code section at 0x1556d -- 0x1556e
0x1556d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1556e -- 0x1556f
; data inside code section at 0x1556f -- 0x15572
0x1556f:    ff ff ff                                           |...             |
; function: function_15572 at 0x15572 -- 0x15574
0x15572:    c9                              	leave 
0x15573:    c3                              	ret 
; section: .text._ZN7CBigNum11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN7CBigNum11UnserializeI11CDataStreamEEvRT_ii at 0x15574 -- 0x15593
0x15574:    55                              	push ebp
0x15575:    89 e5                           	mov ebp, esp
0x15577:    53                              	push ebx
0x15578:    83 ec 34                        	sub esp, 0x34
0x1557b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1557e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15581:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15584:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15587:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1558a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1558d:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15590:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
; data inside code section at 0x15593 -- 0x15594
0x15593:    65                                                 |e               |
; function: function_15594 at 0x15594 -- 0x155d6
0x15594:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x15599:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1559c:    31 c0                           	xor eax, eax
0x1559e:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x155a1:    89 04 24                        	mov dword ptr [esp], eax
0x155a4:    e8 e3 82 00 00                  	call 0x1d88c <unknown_1d88c>
0x155a9:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x155ac:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x155b0:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x155b3:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x155b7:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x155ba:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x155be:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x155c1:    89 04 24                        	mov dword ptr [esp], eax
0x155c4:    e8 2e 79 01 00                  	call 0x2cef7 <unknown_2cef7>
0x155c9:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x155cc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x155d0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x155d3:    89 04 24                        	mov dword ptr [esp], eax
; function: function_155d6 at 0x155d6 -- 0x155f4
0x155d6:    e8 9f 55 00 00                  	call 0x1ab7a <function_1ab7a>
0x155db:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x155de:    89 04 24                        	mov dword ptr [esp], eax
0x155e1:    e8 dc 82 00 00                  	call 0x1d8c2 <unknown_1d8c2>
0x155e6:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x155e9:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x155f0:    74 1e                           	je 0x15610 <function_15610>
0x155f2:    eb 17                           	jmp 0x1560b <function_1560b>
; data inside code section at 0x155f4 -- 0x155f5
0x155f4:    89                                                 |.               |
; function: function_155f5 at 0x155f5 -- 0x155f6
0x155f5:    c3                              	ret 
; data inside code section at 0x155f6 -- 0x15607
0x155f6:    8d 45 e8 89 04 24 e8 c1  82 00 00 89 d8 89 04 24   |.E...$.........$|
0x15606:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x15607 -- 0x15608
; data inside code section at 0x15608 -- 0x1560b
0x15608:    ff ff ff                                           |...             |
; function: function_1560b at 0x1560b -- 0x1560c
; dynamically linked function: __stack_chk_fail at 0x1560c -- 0x1560d
; data inside code section at 0x1560d -- 0x15610
0x1560d:    ff ff ff                                           |...             |
; function: function_15610 at 0x15610 -- 0x15616
0x15610:    83 c4 34                        	add esp, 0x34
0x15613:    5b                              	pop ebx
0x15614:    5d                              	pop ebp
0x15615:    c3                              	ret 
; section: .text._Z16GetSerializeSizeI7CBigNumEjRKT_li
; function: _Z16GetSerializeSizeI7CBigNumEjRKT_li at 0x15616 -- 0x1565e
0x15616:    55                              	push ebp
0x15617:    89 e5                           	mov ebp, esp
0x15619:    83 ec 38                        	sub esp, 0x38
0x1561c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1561f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15622:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15625:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15628:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1562b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1562e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15634:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15637:    31 c0                           	xor eax, eax
0x15639:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1563c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x15640:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15643:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15647:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1564a:    89 04 24                        	mov dword ptr [esp], eax
0x1564d:    e8 6a 59 00 00                  	call 0x1afbc <function_1afbc>
0x15652:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15655:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1565c:    74 05                           	je 0x15663 <function_15663>
; data inside code section at 0x1565e -- 0x1565f
0x1565e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1565f -- 0x15660
; data inside code section at 0x15660 -- 0x15663
0x15660:    ff ff ff                                           |...             |
; function: function_15663 at 0x15663 -- 0x15665
0x15663:    c9                              	leave 
0x15664:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream7CBigNumEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream7CBigNumEvRT_RKT0_li at 0x15665 -- 0x156ba
0x15665:    55                              	push ebp
0x15666:    89 e5                           	mov ebp, esp
0x15668:    83 ec 38                        	sub esp, 0x38
0x1566b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1566e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15671:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15674:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15677:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1567a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1567d:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15680:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15683:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15689:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1568c:    31 c0                           	xor eax, eax
0x1568e:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x15691:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15695:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15698:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1569c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1569f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x156a3:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x156a6:    89 04 24                        	mov dword ptr [esp], eax
0x156a9:    e8 9d 79 01 00                  	call 0x2d04b <unknown_2d04b>
0x156ae:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x156b1:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x156b8:    74 05                           	je 0x156bf <function_156bf>
; data inside code section at 0x156ba -- 0x156bb
0x156ba:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x156bb -- 0x156bc
; data inside code section at 0x156bc -- 0x156bf
0x156bc:    ff ff ff                                           |...             |
; function: function_156bf at 0x156bf -- 0x156c1
0x156bf:    c9                              	leave 
0x156c0:    c3                              	ret 
; section: .text._Z16GetSerializeSizeI14CBlockFileInfoEjRKT_li
; function: _Z16GetSerializeSizeI14CBlockFileInfoEjRKT_li at 0x156c1 -- 0x15709
0x156c1:    55                              	push ebp
0x156c2:    89 e5                           	mov ebp, esp
0x156c4:    83 ec 38                        	sub esp, 0x38
0x156c7:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x156ca:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x156cd:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x156d0:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x156d3:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x156d6:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x156d9:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x156df:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x156e2:    31 c0                           	xor eax, eax
0x156e4:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x156e7:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x156eb:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x156ee:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x156f2:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x156f5:    89 04 24                        	mov dword ptr [esp], eax
0x156f8:    e8 64 68 00 00                  	call 0x1bf61 <unknown_1bf61>
0x156fd:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15700:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x15707:    74 05                           	je 0x1570e <function_1570e>
; data inside code section at 0x15709 -- 0x1570a
0x15709:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1570a -- 0x1570b
; data inside code section at 0x1570b -- 0x1570e
0x1570b:    ff ff ff                                           |...             |
; function: function_1570e at 0x1570e -- 0x15710
0x1570e:    c9                              	leave 
0x1570f:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream14CBlockFileInfoEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream14CBlockFileInfoEvRT_RKT0_li at 0x15710 -- 0x15765
0x15710:    55                              	push ebp
0x15711:    89 e5                           	mov ebp, esp
0x15713:    83 ec 38                        	sub esp, 0x38
0x15716:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15719:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1571c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1571f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15722:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15725:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15728:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1572b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1572e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15734:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15737:    31 c0                           	xor eax, eax
0x15739:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1573c:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15740:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15743:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x15747:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1574a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1574e:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15751:    89 04 24                        	mov dword ptr [esp], eax
0x15754:    e8 37 7a 01 00                  	call 0x2d190 <unknown_2d190>
0x15759:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1575c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15763:    74 05                           	je 0x1576a <function_1576a>
; data inside code section at 0x15765 -- 0x15766
0x15765:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15766 -- 0x15767
; data inside code section at 0x15767 -- 0x1576a
0x15767:    ff ff ff                                           |...             |
; function: function_1576a at 0x1576a -- 0x1576c
0x1576a:    c9                              	leave 
0x1576b:    c3                              	ret 
; section: .text._ZN14CBlockFileInfo11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN14CBlockFileInfo11UnserializeI11CDataStreamEEvRT_ii at 0x1576c -- 0x157c5
0x1576c:    55                              	push ebp
0x1576d:    89 e5                           	mov ebp, esp
0x1576f:    57                              	push edi
0x15770:    56                              	push esi
0x15771:    53                              	push ebx
0x15772:    83 ec 7c                        	sub esp, 0x7c
0x15775:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15778:    89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x1577b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1577e:    89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x15781:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15784:    89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x15787:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1578a:    89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x1578d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15793:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15796:    31 c0                           	xor eax, eax
0x15798:    c6 45 e1 00                     	mov byte ptr [ebp - 0x1f], 0
0x1579c:    c6 45 e2 00                     	mov byte ptr [ebp - 0x1e], 0
0x157a0:    c6 45 e3 01                     	mov byte ptr [ebp - 0x1d], 1
0x157a4:    c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x157ab:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x157ae:    89 04 24                        	mov dword ptr [esp], eax
0x157b1:    e8 31 94 00 00                  	call 0x1ebe7 <unknown_1ebe7>
0x157b6:    8d 55 c0                        	lea edx, [ebp - 0x40]
0x157b9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x157bd:    89 14 24                        	mov dword ptr [esp], edx
0x157c0:    e8 4f 94 00 00                  	call 0x1ec14 <unknown_1ec14>
; data inside code section at 0x157c5 -- 0x157c6
0x157c5:    83                                                 |.               |
; function: function_157c6 at 0x157c6 -- 0x159f5
0x157c6:    ec                              	in al, dx
0x157c7:    04 8d                           	add al, 0x8d
0x157c9:    45                              	inc ebp
0x157ca:    c0 89 04 24 e8 88 94            	ror byte ptr [ecx - 0x7717dbfc], 0x94
0x157d1:    00 00                           	add byte ptr [eax], al
0x157d3:    89 c2                           	mov edx, eax
0x157d5:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x157d9:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x157dc:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x157e0:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x157e3:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x157e7:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x157eb:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x157ee:    89 04 24                        	mov dword ptr [esp], eax
0x157f1:    e8 a0 62 01 00                  	call 0x2ba96 <unknown_2ba96>
0x157f6:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x157f9:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x157fc:    83 c0 04                        	add eax, 4
0x157ff:    89 04 24                        	mov dword ptr [esp], eax
0x15802:    e8 e0 93 00 00                  	call 0x1ebe7 <unknown_1ebe7>
0x15807:    8d 55 c4                        	lea edx, [ebp - 0x3c]
0x1580a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1580e:    89 14 24                        	mov dword ptr [esp], edx
0x15811:    e8 fe 93 00 00                  	call 0x1ec14 <unknown_1ec14>
0x15816:    83 ec 04                        	sub esp, 4
0x15819:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x1581c:    89 04 24                        	mov dword ptr [esp], eax
0x1581f:    e8 37 94 00 00                  	call 0x1ec5b <unknown_1ec5b>
0x15824:    89 c2                           	mov edx, eax
0x15826:    89 f0                           	mov eax, esi
0x15828:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x1582c:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x1582f:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15833:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x15836:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1583a:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1583e:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x15841:    89 04 24                        	mov dword ptr [esp], eax
0x15844:    e8 4d 62 01 00                  	call 0x2ba96 <unknown_2ba96>
0x15849:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1584c:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1584f:    83 c0 08                        	add eax, 8
0x15852:    89 04 24                        	mov dword ptr [esp], eax
0x15855:    e8 8d 93 00 00                  	call 0x1ebe7 <unknown_1ebe7>
0x1585a:    8d 55 c8                        	lea edx, [ebp - 0x38]
0x1585d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15861:    89 14 24                        	mov dword ptr [esp], edx
0x15864:    e8 ab 93 00 00                  	call 0x1ec14 <unknown_1ec14>
0x15869:    83 ec 04                        	sub esp, 4
0x1586c:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x1586f:    89 04 24                        	mov dword ptr [esp], eax
0x15872:    e8 e4 93 00 00                  	call 0x1ec5b <unknown_1ec5b>
0x15877:    0f b6 55 a4                     	movzx edx, byte ptr [ebp - 0x5c]
0x1587b:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x1587f:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x15882:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x15886:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x15889:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1588d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15891:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x15894:    89 04 24                        	mov dword ptr [esp], eax
0x15897:    e8 fa 61 01 00                  	call 0x2ba96 <unknown_2ba96>
0x1589c:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1589f:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x158a2:    83 c0 0c                        	add eax, 0xc
0x158a5:    89 04 24                        	mov dword ptr [esp], eax
0x158a8:    e8 3a 93 00 00                  	call 0x1ebe7 <unknown_1ebe7>
0x158ad:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x158b0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x158b4:    89 14 24                        	mov dword ptr [esp], edx
0x158b7:    e8 58 93 00 00                  	call 0x1ec14 <unknown_1ec14>
0x158bc:    83 ec 04                        	sub esp, 4
0x158bf:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x158c2:    89 04 24                        	mov dword ptr [esp], eax
0x158c5:    e8 91 93 00 00                  	call 0x1ec5b <unknown_1ec5b>
0x158ca:    0f b6 55 a5                     	movzx edx, byte ptr [ebp - 0x5b]
0x158ce:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x158d2:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x158d5:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x158d9:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x158dc:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x158e0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x158e4:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x158e7:    89 04 24                        	mov dword ptr [esp], eax
0x158ea:    e8 a7 61 01 00                  	call 0x2ba96 <unknown_2ba96>
0x158ef:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x158f2:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x158f5:    83 c0 10                        	add eax, 0x10
0x158f8:    89 04 24                        	mov dword ptr [esp], eax
0x158fb:    e8 e7 92 00 00                  	call 0x1ebe7 <unknown_1ebe7>
0x15900:    8d 55 d0                        	lea edx, [ebp - 0x30]
0x15903:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15907:    89 14 24                        	mov dword ptr [esp], edx
0x1590a:    e8 05 93 00 00                  	call 0x1ec14 <unknown_1ec14>
0x1590f:    83 ec 04                        	sub esp, 4
0x15912:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x15915:    89 04 24                        	mov dword ptr [esp], eax
0x15918:    e8 3e 93 00 00                  	call 0x1ec5b <unknown_1ec5b>
0x1591d:    0f b6 55 a6                     	movzx edx, byte ptr [ebp - 0x5a]
0x15921:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x15925:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x15928:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1592c:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x1592f:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15933:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15937:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x1593a:    89 04 24                        	mov dword ptr [esp], eax
0x1593d:    e8 54 61 01 00                  	call 0x2ba96 <unknown_2ba96>
0x15942:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x15945:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x15948:    83 c0 14                        	add eax, 0x14
0x1594b:    89 04 24                        	mov dword ptr [esp], eax
0x1594e:    e8 ef 94 00 00                  	call 0x1ee42 <unknown_1ee42>
0x15953:    8d 55 d4                        	lea edx, [ebp - 0x2c]
0x15956:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1595a:    89 14 24                        	mov dword ptr [esp], edx
0x1595d:    e8 0d 95 00 00                  	call 0x1ee6f <unknown_1ee6f>
0x15962:    83 ec 04                        	sub esp, 4
0x15965:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x15968:    89 04 24                        	mov dword ptr [esp], eax
0x1596b:    e8 46 95 00 00                  	call 0x1eeb6 <unknown_1eeb6>
0x15970:    0f b6 55 a7                     	movzx edx, byte ptr [ebp - 0x59]
0x15974:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x15978:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x1597b:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1597f:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x15982:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15986:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1598a:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x1598d:    89 04 24                        	mov dword ptr [esp], eax
0x15990:    e8 ed 7a 01 00                  	call 0x2d482 <unknown_2d482>
0x15995:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x15998:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1599b:    83 c0 1c                        	add eax, 0x1c
0x1599e:    89 04 24                        	mov dword ptr [esp], eax
0x159a1:    e8 9c 94 00 00                  	call 0x1ee42 <unknown_1ee42>
0x159a6:    8d 55 d8                        	lea edx, [ebp - 0x28]
0x159a9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x159ad:    89 14 24                        	mov dword ptr [esp], edx
0x159b0:    e8 ba 94 00 00                  	call 0x1ee6f <unknown_1ee6f>
0x159b5:    83 ec 04                        	sub esp, 4
0x159b8:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x159bb:    89 04 24                        	mov dword ptr [esp], eax
0x159be:    e8 f3 94 00 00                  	call 0x1eeb6 <unknown_1eeb6>
0x159c3:    89 fa                           	mov edx, edi
0x159c5:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x159c9:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x159cc:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x159d0:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x159d3:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x159d7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x159db:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x159de:    89 04 24                        	mov dword ptr [esp], eax
0x159e1:    e8 9c 7a 01 00                  	call 0x2d482 <unknown_2d482>
0x159e6:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x159e9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x159ec:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x159f3:    74 05                           	je 0x159fa <function_159fa>
; data inside code section at 0x159f5 -- 0x159f6
0x159f5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x159f6 -- 0x159f7
; data inside code section at 0x159f7 -- 0x159fa
0x159f7:    ff ff ff                                           |...             |
; function: function_159fa at 0x159fa -- 0x15a02
0x159fa:    8d 65 f4                        	lea esp, [ebp - 0xc]
0x159fd:    5b                              	pop ebx
0x159fe:    5e                              	pop esi
0x159ff:    5f                              	pop edi
0x15a00:    5d                              	pop ebp
0x15a01:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream7CVarIntIiEEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream7CVarIntIiEEvRT_RT0_li at 0x15a02 -- 0x15a40
0x15a02:    55                              	push ebp
0x15a03:    89 e5                           	mov ebp, esp
0x15a05:    83 ec 38                        	sub esp, 0x38
0x15a08:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15a0b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15a0e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15a11:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15a14:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15a17:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15a1a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15a1d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15a20:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15a26:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15a29:    31 c0                           	xor eax, eax
0x15a2b:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x15a2e:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15a32:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15a35:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x15a39:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15a3c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; function: function_15a40 at 0x15a40 -- 0x15a57
0x15a40:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15a43:    89 04 24                        	mov dword ptr [esp], eax
0x15a46:    e8 35 7d 01 00                  	call 0x2d780 <unknown_2d780>
0x15a4b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15a4e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15a55:    74 05                           	je 0x15a5c <function_15a5c>
; data inside code section at 0x15a57 -- 0x15a58
0x15a57:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15a58 -- 0x15a59
; data inside code section at 0x15a59 -- 0x15a5c
0x15a59:    ff ff ff                                           |...             |
; function: function_15a5c at 0x15a5c -- 0x15a5e
0x15a5c:    c9                              	leave 
0x15a5d:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream7CVarIntIjEEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream7CVarIntIjEEvRT_RT0_li at 0x15a5e -- 0x15ab3
0x15a5e:    55                              	push ebp
0x15a5f:    89 e5                           	mov ebp, esp
0x15a61:    83 ec 38                        	sub esp, 0x38
0x15a64:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15a67:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15a6a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15a6d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15a70:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15a73:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15a76:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15a79:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15a7c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15a82:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15a85:    31 c0                           	xor eax, eax
0x15a87:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x15a8a:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15a8e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15a91:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x15a95:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15a98:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15a9c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15a9f:    89 04 24                        	mov dword ptr [esp], eax
0x15aa2:    e8 89 7d 01 00                  	call 0x2d830 <unknown_2d830>
0x15aa7:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15aaa:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15ab1:    74 05                           	je 0x15ab8 <function_15ab8>
; data inside code section at 0x15ab3 -- 0x15ab4
0x15ab3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15ab4 -- 0x15ab5
; data inside code section at 0x15ab5 -- 0x15ab8
0x15ab5:    ff ff ff                                           |...             |
; function: function_15ab8 at 0x15ab8 -- 0x15aba
0x15ab8:    c9                              	leave 
0x15ab9:    c3                              	ret 
; section: .text._ZNSaIbEC2Ev
; function: _ZNSaIbEC1Ev at 0x15aba -- 0x15ae8
0x15aba:    55                              	push ebp
0x15abb:    89 e5                           	mov ebp, esp
0x15abd:    83 ec 38                        	sub esp, 0x38
0x15ac0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15ac3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15ac6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15acc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15acf:    31 c0                           	xor eax, eax
0x15ad1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15ad4:    89 04 24                        	mov dword ptr [esp], eax
0x15ad7:    e8 04 7e 01 00                  	call 0x2d8e0 <unknown_2d8e0>
0x15adc:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15adf:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15ae6:    74 05                           	je 0x15aed <function_15aed>
; data inside code section at 0x15ae8 -- 0x15ae9
0x15ae8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15ae9 -- 0x15aea
; data inside code section at 0x15aea -- 0x15aed
0x15aea:    ff ff ff                                           |...             |
; function: function_15aed at 0x15aed -- 0x15aef
0x15aed:    c9                              	leave 
0x15aee:    c3                              	ret 
; section: .text._ZNSaIbED2Ev
; function: _ZNSaIbED1Ev at 0x15af0 -- 0x15b1e
0x15af0:    55                              	push ebp
0x15af1:    89 e5                           	mov ebp, esp
0x15af3:    83 ec 38                        	sub esp, 0x38
0x15af6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15af9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15afc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15b02:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15b05:    31 c0                           	xor eax, eax
0x15b07:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15b0a:    89 04 24                        	mov dword ptr [esp], eax
0x15b0d:    e8 2e 7e 01 00                  	call 0x2d940 <unknown_2d940>
0x15b12:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15b15:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15b1c:    74 05                           	je 0x15b23 <function_15b23>
; data inside code section at 0x15b1e -- 0x15b1f
0x15b1e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15b1f -- 0x15b20
; data inside code section at 0x15b20 -- 0x15b23
0x15b20:    ff ff ff                                           |...             |
; function: function_15b23 at 0x15b23 -- 0x15b25
0x15b23:    c9                              	leave 
0x15b24:    c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEEC2EjRKbRKS0_
; function: _ZNSt6vectorIbSaIbEEC1EjRKbRKS0_ at 0x15b26 -- 0x15bad
0x15b26:    55                              	push ebp
0x15b27:    89 e5                           	mov ebp, esp
0x15b29:    53                              	push ebx
0x15b2a:    83 ec 34                        	sub esp, 0x34
0x15b2d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15b30:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15b33:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15b36:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15b39:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15b3c:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15b3f:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15b42:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15b45:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15b4b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15b4e:    31 c0                           	xor eax, eax
0x15b50:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15b53:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x15b56:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x15b5a:    89 04 24                        	mov dword ptr [esp], eax
0x15b5d:    e8 74 7e 01 00                  	call 0x2d9d6 <unknown_2d9d6>
0x15b62:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15b65:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15b69:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15b6c:    89 04 24                        	mov dword ptr [esp], eax
0x15b6f:    e8 02 7f 01 00                  	call 0x2da76 <unknown_2da76>
0x15b74:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15b77:    0f b6 00                        	movzx eax, byte ptr [eax]
0x15b7a:    84 c0                           	test al, al
0x15b7c:    74 07                           	je 0x15b85 <_ZNSt6vectorIbSaIbEEC1EjRKbRKS0_+0x5f>
0x15b7e:    b8 ff ff ff ff                  	mov eax, 0xffffffff
0x15b83:    eb 05                           	jmp 0x15b8a <_ZNSt6vectorIbSaIbEEC1EjRKbRKS0_+0x64>
0x15b85:    b8 00 00 00 00                  	mov eax, 0
0x15b8a:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x15b8d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15b90:    8b 50 10                        	mov edx, dword ptr [eax + 0x10]
0x15b93:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15b96:    8b 00                           	mov eax, dword ptr [eax]
0x15b98:    8d 4d f0                        	lea ecx, [ebp - 0x10]
0x15b9b:    89 4c 24 08                     	mov dword ptr [esp + 8], ecx
0x15b9f:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x15ba3:    89 04 24                        	mov dword ptr [esp], eax
0x15ba6:    e8 bf 77 00 00                  	call 0x1d36a <unknown_1d36a>
0x15bab:    eb 17                           	jmp 0x15bc4 <function_15bc4>
; data inside code section at 0x15bad -- 0x15bae
0x15bad:    89                                                 |.               |
; function: function_15bae at 0x15bae -- 0x15baf
0x15bae:    c3                              	ret 
; data inside code section at 0x15baf -- 0x15bc0
0x15baf:    8b 45 e4 89 04 24 e8 7c  7e 01 00 89 d8 89 04 24   |.E...$.|~......$|
0x15bbf:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x15bc0 -- 0x15bc1
; data inside code section at 0x15bc1 -- 0x15bc4
0x15bc1:    ff ff ff                                           |...             |
; function: function_15bc4 at 0x15bc4 -- 0x15bd0
0x15bc4:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15bc7:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15bce:    74 05                           	je 0x15bd5 <function_15bd5>
; data inside code section at 0x15bd0 -- 0x15bd1
0x15bd0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15bd1 -- 0x15bd2
; data inside code section at 0x15bd2 -- 0x15bd5
0x15bd2:    ff ff ff                                           |...             |
; function: function_15bd5 at 0x15bd5 -- 0x15bda
0x15bd5:    83 c4 34                        	add esp, 0x34
0x15bd8:    5b                              	pop ebx
0x15bd9:    5d                              	pop ebp
; function: function_15bda at 0x15bda -- 0x15bdb
0x15bda:    c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEED2Ev
; function: _ZNSt6vectorIbSaIbEED1Ev at 0x15bdc -- 0x15c0a
0x15bdc:    55                              	push ebp
0x15bdd:    89 e5                           	mov ebp, esp
0x15bdf:    83 ec 38                        	sub esp, 0x38
0x15be2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15be5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15be8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15bee:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15bf1:    31 c0                           	xor eax, eax
0x15bf3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15bf6:    89 04 24                        	mov dword ptr [esp], eax
0x15bf9:    e8 ee 7e 01 00                  	call 0x2daec <unknown_2daec>
0x15bfe:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15c01:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15c08:    74 05                           	je 0x15c0f <function_15c0f>
; data inside code section at 0x15c0a -- 0x15c0b
0x15c0a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15c0b -- 0x15c0c
; data inside code section at 0x15c0c -- 0x15c0f
0x15c0c:    ff ff ff                                           |...             |
; function: function_15c0f at 0x15c0f -- 0x15c11
0x15c0f:    c9                              	leave 
0x15c10:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStreamEvRT_Rhii
; function: _Z11UnserializeI11CDataStreamEvRT_Rhii at 0x15c11 -- 0x15c45
0x15c11:    55                              	push ebp
0x15c12:    89 e5                           	mov ebp, esp
0x15c14:    83 ec 38                        	sub esp, 0x38
0x15c17:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15c1a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15c1d:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15c20:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15c23:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15c26:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15c29:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15c2c:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15c2f:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15c35:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15c38:    31 c0                           	xor eax, eax
0x15c3a:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x15c42:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; data inside code section at 0x15c45 -- 0x15c46
0x15c45:    89                                                 |.               |
; function: function_15c46 at 0x15c46 -- 0x15c60
0x15c46:    44                              	inc esp
0x15c47:    24 04                           	and al, 4
0x15c49:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15c4c:    89 04 24                        	mov dword ptr [esp], eax
0x15c4f:    e8 c3 49 00 00                  	call 0x1a617 <function_1a617>
0x15c54:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15c57:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15c5e:    74 05                           	je 0x15c65 <function_15c65>
; data inside code section at 0x15c60 -- 0x15c61
0x15c60:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15c61 -- 0x15c62
; data inside code section at 0x15c62 -- 0x15c65
0x15c62:    ff ff ff                                           |...             |
; function: function_15c65 at 0x15c65 -- 0x15c67
0x15c65:    c9                              	leave 
0x15c66:    c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEE9push_backEb
; function: _ZNSt6vectorIbSaIbEE9push_backEb at 0x15c68 -- 0x15c89
0x15c68:    55                              	push ebp
0x15c69:    89 e5                           	mov ebp, esp
0x15c6b:    53                              	push ebx
0x15c6c:    83 ec 44                        	sub esp, 0x44
0x15c6f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15c72:    8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x15c75:    89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x15c78:    88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x15c7b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15c81:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15c84:    31 c0                           	xor eax, eax
0x15c86:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
; data inside code section at 0x15c89 -- 0x15c8a
0x15c89:    8b                                                 |.               |
; function: function_15c8a at 0x15c8a -- 0x15c96
0x15c8a:    50                              	push eax
0x15c8b:    08 8b 45 d4 8b 40               	or byte ptr [ebx + 0x408bd445], cl
0x15c91:    10 39                           	adc byte ptr [ecx], bh
0x15c93:    c2 74 4a                        	ret 0x4a74
; data inside code section at 0x15c96 -- 0x15cc6
0x15c96:    0f b6 5d d0 8b 45 d4 8d  50 08 8d 45 dc c7 44 24   |..]..E..P..E..D$|
0x15ca6:    08 00 00 00 00 89 54 24  04 89 04 24 e8 f9 23 00   |......T$...$..#.|
0x15cb6:    00 83 ec 04 8d 45 e4 8d  55 dc 89 54 24 04 89 04   |.....E..U..T$...|
; function: function_15cc6 at 0x15cc6 -- 0x15ce0
0x15cc6:    24 e8                           	and al, 0xe8
0x15cc8:    50                              	push eax
0x15cc9:    23 00                           	and eax, dword ptr [eax]
0x15ccb:    00 83 ec 04 89 5c               	add byte ptr [ebx + 0x5c8904ec], al
0x15cd1:    24 04                           	and al, 4
0x15cd3:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x15cd6:    89 04 24                        	mov dword ptr [esp], eax
0x15cd9:    e8 d2 1f 00 00                  	call 0x17cb0
0x15cde:    eb 36                           	jmp 0x15d16 <function_15d16>
; data inside code section at 0x15ce0 -- 0x15cf3
0x15ce0:    0f b6 5d d0 8d 45 ec 8b  55 d4 89 54 24 04 89 04   |..]..E..U..T$...|
0x15cf0:    24 e8 58                                           |$.X             |
; function: function_15cf3 at 0x15cf3 -- 0x15d16
0x15cf3:    f1                              	int1 
0x15cf4:    00 00                           	add byte ptr [eax], al
0x15cf6:    83 ec 04                        	sub esp, 4
0x15cf9:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x15cfd:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x15d00:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x15d03:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15d07:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15d0b:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x15d0e:    89 04 24                        	mov dword ptr [esp], eax
0x15d11:    e8 56 7f 01 00                  	call 0x2dc6c <unknown_2dc6c>
; function: function_15d16 at 0x15d16 -- 0x15d22
0x15d16:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15d19:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15d20:    74 05                           	je 0x15d27 <function_15d27>
; data inside code section at 0x15d22 -- 0x15d23
0x15d22:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15d23 -- 0x15d24
; data inside code section at 0x15d24 -- 0x15d27
0x15d24:    ff ff ff                                           |...             |
; function: function_15d27 at 0x15d27 -- 0x15d2c
0x15d27:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x15d2a:    c9                              	leave 
0x15d2b:    c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE6assignEjRKS0_
; function: _ZNSt6vectorI6CTxOutSaIS0_EE6assignEjRKS0_ at 0x15d2c -- 0x15d44
0x15d2c:    55                              	push ebp
0x15d2d:    89 e5                           	mov ebp, esp
0x15d2f:    83 ec 38                        	sub esp, 0x38
0x15d32:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15d35:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15d38:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15d3b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15d3e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15d41:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
; data inside code section at 0x15d44 -- 0x15d75
0x15d44:    65 a1 14 00 00 00 89 45  f4 31 c0 8b 45 dc 89 44   |e......E.1..E..D|
0x15d54:    24 08 8b 45 e0 89 44 24  04 8b 45 e4 89 04 24 e8   |$..E..D$..E...$.|
0x15d64:    86 82 01 00 8b 45 f4 65  33 05 14 00 00 00 74 05   |.....E.e3.....t.|
0x15d74:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15d75 -- 0x15d76
; data inside code section at 0x15d76 -- 0x15d78
0x15d76:    ff ff                                              |..              |
; function: function_15d78 at 0x15d78 -- 0x15d7b
0x15d78:    ff c9                           	dec ecx
0x15d7a:    c3                              	ret 
; section: .text._Z3REFI16CTxOutCompressorERT_RKS1_
; function: _Z3REFI16CTxOutCompressorERT_RKS1_ at 0x15d7b -- 0x15da1
0x15d7b:    55                              	push ebp
0x15d7c:    89 e5                           	mov ebp, esp
0x15d7e:    83 ec 28                        	sub esp, 0x28
0x15d81:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15d84:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15d87:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15d8d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15d90:    31 c0                           	xor eax, eax
0x15d92:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15d95:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15d98:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x15d9f:    74 05                           	je 0x15da6 <function_15da6>
; data inside code section at 0x15da1 -- 0x15da2
0x15da1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15da2 -- 0x15da3
; data inside code section at 0x15da3 -- 0x15da6
0x15da3:    ff ff ff                                           |...             |
; function: function_15da6 at 0x15da6 -- 0x15da8
0x15da6:    c9                              	leave 
0x15da7:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream16CTxOutCompressorEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream16CTxOutCompressorEvRT_RT0_li at 0x15da8 -- 0x15db4
0x15da8:    55                              	push ebp
0x15da9:    89 e5                           	mov ebp, esp
0x15dab:    83 ec 38                        	sub esp, 0x38
0x15dae:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15db1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0x15db4 -- 0x15db6
0x15db4:    8b 45                                              |.E              |
; function: function_15db6 at 0x15db6 -- 0x15dfd
0x15db6:    0c 89                           	or al, 0x89
0x15db8:    45                              	inc ebp
0x15db9:    e0 8b                           	loopne 0x15d46
0x15dbb:    45                              	inc ebp
0x15dbc:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x15dc2:    14 89                           	adc al, 0x89
0x15dc4:    45                              	inc ebp
0x15dc5:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x15dc8:    14 00                           	adc al, 0
0x15dca:    00 00                           	add byte ptr [eax], al
0x15dcc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15dcf:    31 c0                           	xor eax, eax
0x15dd1:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x15dd4:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15dd8:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15ddb:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x15ddf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15de2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15de6:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15de9:    89 04 24                        	mov dword ptr [esp], eax
0x15dec:    e8 ff 83 01 00                  	call 0x2e1f0 <unknown_2e1f0>
0x15df1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15df4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15dfb:    74 05                           	je 0x15e02 <function_15e02>
; data inside code section at 0x15dfd -- 0x15dfe
0x15dfd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15dfe -- 0x15dff
; data inside code section at 0x15dff -- 0x15e02
0x15dff:    ff ff ff                                           |...             |
; function: function_15e02 at 0x15e02 -- 0x15e04
0x15e02:    c9                              	leave 
0x15e03:    c3                              	ret 
; section: .text._Z11WriteVarIntI11CHashWriteriEvRT_T0_
; function: _Z11WriteVarIntI11CHashWriteriEvRT_T0_ at 0x15e04 -- 0x15e16
0x15e04:    55                              	push ebp
0x15e05:    89 e5                           	mov ebp, esp
0x15e07:    83 ec 38                        	sub esp, 0x38
0x15e0a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15e0d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15e10:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15e13:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; function: function_15e16 at 0x15e16 -- 0x15e9f
0x15e16:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15e1c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15e1f:    31 c0                           	xor eax, eax
0x15e21:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x15e28:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15e2b:    89 c2                           	mov edx, eax
0x15e2d:    83 e2 7f                        	and edx, 0x7f
0x15e30:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x15e34:    74 07                           	je 0x15e3d <function_15e16+0x27>
0x15e36:    b8 80 ff ff ff                  	mov eax, 0xffffff80
0x15e3b:    eb 05                           	jmp 0x15e42 <function_15e16+0x2c>
0x15e3d:    b8 00 00 00 00                  	mov eax, 0
0x15e42:    09 d0                           	or eax, edx
0x15e44:    89 c2                           	mov edx, eax
0x15e46:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x15e49:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x15e4c:    88 10                           	mov byte ptr [eax], dl
0x15e4e:    83 7d e0 7f                     	cmp dword ptr [ebp - 0x20], 0x7f
0x15e52:    7e 12                           	jle 0x15e66 <function_15e16+0x50>
0x15e54:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15e57:    c1 f8 07                        	sar eax, 7
0x15e5a:    83 e8 01                        	sub eax, 1
0x15e5d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15e60:    83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x15e64:    eb c2                           	jmp 0x15e28 <function_15e16+0x12>
0x15e66:    90                              	nop 
0x15e67:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x15e6a:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x15e6d:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x15e75:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15e79:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15e7c:    89 04 24                        	mov dword ptr [esp], eax
0x15e7f:    e8 7e 4c 00 00                  	call 0x1ab02
0x15e84:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x15e88:    0f 95 c0                        	setne al
0x15e8b:    83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x15e8f:    84 c0                           	test al, al
0x15e91:    75 d4                           	jne 0x15e67 <function_15e16+0x51>
0x15e93:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15e96:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15e9d:    74 05                           	je 0x15ea4 <function_15ea4>
; data inside code section at 0x15e9f -- 0x15ea0
0x15e9f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15ea0 -- 0x15ea1
; data inside code section at 0x15ea1 -- 0x15ea4
0x15ea1:    ff ff ff                                           |...             |
; function: function_15ea4 at 0x15ea4 -- 0x15ea6
0x15ea4:    c9                              	leave 
0x15ea5:    c3                              	ret 
; section: .text._Z11WriteVarIntI11CHashWriterjEvRT_T0_
; function: _Z11WriteVarIntI11CHashWriterjEvRT_T0_ at 0x15ea6 -- 0x15f07
0x15ea6:    55                              	push ebp
0x15ea7:    89 e5                           	mov ebp, esp
0x15ea9:    83 ec 38                        	sub esp, 0x38
0x15eac:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15eaf:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15eb2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15eb5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15eb8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15ebe:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15ec1:    31 c0                           	xor eax, eax
0x15ec3:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x15eca:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15ecd:    89 c2                           	mov edx, eax
0x15ecf:    83 e2 7f                        	and edx, 0x7f
0x15ed2:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x15ed6:    74 07                           	je 0x15edf <_Z11WriteVarIntI11CHashWriterjEvRT_T0_+0x39>
0x15ed8:    b8 80 ff ff ff                  	mov eax, 0xffffff80
0x15edd:    eb 05                           	jmp 0x15ee4 <_Z11WriteVarIntI11CHashWriterjEvRT_T0_+0x3e>
0x15edf:    b8 00 00 00 00                  	mov eax, 0
0x15ee4:    09 c2                           	or edx, eax
0x15ee6:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x15ee9:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x15eec:    88 10                           	mov byte ptr [eax], dl
0x15eee:    83 7d e0 7f                     	cmp dword ptr [ebp - 0x20], 0x7f
0x15ef2:    76 12                           	jbe 0x15f06 <_Z11WriteVarIntI11CHashWriterjEvRT_T0_+0x60>
0x15ef4:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15ef7:    c1 e8 07                        	shr eax, 7
0x15efa:    83 e8 01                        	sub eax, 1
0x15efd:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15f00:    83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x15f04:    eb c4                           	jmp 0x15eca <_Z11WriteVarIntI11CHashWriterjEvRT_T0_+0x24>
0x15f06:    90                              	nop 
; data inside code section at 0x15f07 -- 0x15f10
0x15f07:    8d 45 ef 03 45 e8 c7 44  24                        |.E..E..D$       |
; function: function_15f10 at 0x15f10 -- 0x15f3f
0x15f10:    08 01                           	or byte ptr [ecx], al
0x15f12:    00 00                           	add byte ptr [eax], al
0x15f14:    00 89 44 24 04 8b               	add byte ptr [ecx - 0x74fbdbbc], cl
0x15f1a:    45                              	inc ebp
0x15f1b:    e4 89                           	in al, 0x89
0x15f1d:    04 24                           	add al, 0x24
0x15f1f:    e8 80 4c 00 00                  	call 0x1aba4 <function_1aba4>
0x15f24:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x15f28:    0f 95 c0                        	setne al
0x15f2b:    83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x15f2f:    84 c0                           	test al, al
0x15f31:    75 d4                           	jne 0x15f07
0x15f33:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x15f36:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x15f3d:    74 05                           	je 0x15f44 <function_15f44>
; data inside code section at 0x15f3f -- 0x15f40
0x15f3f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15f40 -- 0x15f41
; data inside code section at 0x15f41 -- 0x15f44
0x15f41:    ff ff ff                                           |...             |
; function: function_15f44 at 0x15f44 -- 0x15f46
0x15f44:    c9                              	leave 
0x15f45:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CHashWriterxEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CHashWriterxEjRT_RKT0_ii19CSerActionSerialize at 0x15f46 -- 0x15fb0
0x15f46:    55                              	push ebp
0x15f47:    89 e5                           	mov ebp, esp
0x15f49:    83 ec 58                        	sub esp, 0x58
0x15f4c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15f4f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15f52:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15f55:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15f58:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15f5b:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15f5e:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15f61:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15f64:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x15f68:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x15f6b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15f71:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15f74:    31 c0                           	xor eax, eax
0x15f76:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15f79:    8b 50 04                        	mov edx, dword ptr [eax + 4]
0x15f7c:    8b 00                           	mov eax, dword ptr [eax]
0x15f7e:    8b 4d d8                        	mov ecx, dword ptr [ebp - 0x28]
0x15f81:    89 4c 24 10                     	mov dword ptr [esp + 0x10], ecx
0x15f85:    8b 4d dc                        	mov ecx, dword ptr [ebp - 0x24]
0x15f88:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x15f8c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15f90:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x15f94:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15f97:    89 04 24                        	mov dword ptr [esp], eax
0x15f9a:    e8 03 85 01 00                  	call 0x2e4a2 <unknown_2e4a2>
0x15f9f:    b8 00 00 00 00                  	mov eax, 0
0x15fa4:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x15fa7:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x15fae:    74 05                           	je 0x15fb5 <function_15fb5>
; data inside code section at 0x15fb0 -- 0x15fb1
0x15fb0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15fb1 -- 0x15fb2
; data inside code section at 0x15fb2 -- 0x15fb5
0x15fb2:    ff ff ff                                           |...             |
; function: function_15fb5 at 0x15fb5 -- 0x15fb7
0x15fb5:    c9                              	leave 
0x15fb6:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CHashWriter7CScriptEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CHashWriter7CScriptEjRT_RKT0_ii19CSerActionSerialize at 0x15fb7 -- 0x16007
0x15fb7:    55                              	push ebp
0x15fb8:    89 e5                           	mov ebp, esp
0x15fba:    83 ec 48                        	sub esp, 0x48
0x15fbd:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x15fc0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x15fc3:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x15fc6:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x15fc9:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x15fcc:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x15fcf:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x15fd2:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x15fd5:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x15fd9:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x15fdc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x15fe2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x15fe5:    31 c0                           	xor eax, eax
0x15fe7:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x15fea:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x15fee:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x15ff1:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x15ff5:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x15ff8:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x15ffc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x15fff:    89 04 24                        	mov dword ptr [esp], eax
0x16002:    e8 68 85 01 00                  	call 0x2e56f <unknown_2e56f>
; data inside code section at 0x16007 -- 0x16008
0x16007:    b8                                                 |.               |
; function: function_16008 at 0x16008 -- 0x16018
0x16008:    00 00                           	add byte ptr [eax], al
0x1600a:    00 00                           	add byte ptr [eax], al
0x1600c:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1600f:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16016:    74 05                           	je 0x1601d <function_1601d>
; data inside code section at 0x16018 -- 0x16019
0x16018:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16019 -- 0x1601a
; data inside code section at 0x1601a -- 0x1601d
0x1601a:    ff ff ff                                           |...             |
; function: function_1601d at 0x1601d -- 0x1601f
0x1601d:    c9                              	leave 
0x1601e:    c3                              	ret 
; section: .text._ZN10CDiskTxPos11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN10CDiskTxPos11UnserializeI11CDataStreamEEvRT_ii at 0x16020 -- 0x16045
0x16020:    55                              	push ebp
0x16021:    89 e5                           	mov ebp, esp
0x16023:    53                              	push ebx
0x16024:    83 ec 44                        	sub esp, 0x44
0x16027:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1602a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1602d:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16030:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16033:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16036:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16039:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1603c:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1603f:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x16045 -- 0x16046
0x16045:    89                                                 |.               |
; function: function_16046 at 0x16046 -- 0x160df
0x16046:    45                              	inc ebp
0x16047:    f4                              	hlt 
0x16048:    31 c0                           	xor eax, eax
0x1604a:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x1604e:    c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x16052:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x16056:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x1605d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16060:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x16064:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x16067:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1606b:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1606e:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x16072:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16076:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16079:    89 04 24                        	mov dword ptr [esp], eax
0x1607c:    e8 b3 85 01 00                  	call 0x2e634 <unknown_2e634>
0x16081:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x16084:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16087:    83 c0 08                        	add eax, 8
0x1608a:    89 04 24                        	mov dword ptr [esp], eax
0x1608d:    e8 09 94 00 00                  	call 0x1f49b <unknown_1f49b>
0x16092:    8d 55 e8                        	lea edx, [ebp - 0x18]
0x16095:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16099:    89 14 24                        	mov dword ptr [esp], edx
0x1609c:    e8 27 94 00 00                  	call 0x1f4c8 <unknown_1f4c8>
0x160a1:    83 ec 04                        	sub esp, 4
0x160a4:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x160a7:    89 04 24                        	mov dword ptr [esp], eax
0x160aa:    e8 60 94 00 00                  	call 0x1f50f <unknown_1f50f>
0x160af:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x160b3:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x160b6:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x160ba:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x160bd:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x160c1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x160c5:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x160c8:    89 04 24                        	mov dword ptr [esp], eax
0x160cb:    e8 7a 62 01 00                  	call 0x2c34a <unknown_2c34a>
0x160d0:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x160d3:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x160d6:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x160dd:    74 05                           	je 0x160e4 <function_160e4>
; data inside code section at 0x160df -- 0x160e0
0x160df:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x160e0 -- 0x160e1
; data inside code section at 0x160e1 -- 0x160e4
0x160e1:    ff ff ff                                           |...             |
; function: function_160e4 at 0x160e4 -- 0x160e9
0x160e4:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x160e7:    c9                              	leave 
0x160e8:    c3                              	ret 
; section: .text._ZNK10CDiskTxPos9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK10CDiskTxPos9SerializeI11CDataStreamEEvRT_ii at 0x160ea -- 0x16100
0x160ea:    55                              	push ebp
0x160eb:    89 e5                           	mov ebp, esp
0x160ed:    53                              	push ebx
0x160ee:    83 ec 44                        	sub esp, 0x44
0x160f1:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x160f4:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x160f7:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x160fa:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x160fd:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; function: function_16100 at 0x16100 -- 0x16154
0x16100:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16103:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x16106:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x16109:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1610f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16112:    31 c0                           	xor eax, eax
0x16114:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x16118:    c6 45 f2 01                     	mov byte ptr [ebp - 0xe], 1
0x1611c:    c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x16120:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x16127:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1612a:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x1612e:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x16131:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x16135:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x16138:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1613c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16140:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16143:    89 04 24                        	mov dword ptr [esp], eax
0x16146:    e8 1b 86 01 00                  	call 0x2e766 <unknown_2e766>
0x1614b:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1614e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16151:    83 c0 08                        	add eax, 8
; data inside code section at 0x16154 -- 0x16155
0x16154:    89                                                 |.               |
; function: function_16155 at 0x16155 -- 0x161a9
0x16155:    04 24                           	add al, 0x24
0x16157:    e8 09 94 00 00                  	call 0x1f565 <unknown_1f565>
0x1615c:    8d 55 e8                        	lea edx, [ebp - 0x18]
0x1615f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16163:    89 14 24                        	mov dword ptr [esp], edx
0x16166:    e8 27 94 00 00                  	call 0x1f592 <unknown_1f592>
0x1616b:    83 ec 04                        	sub esp, 4
0x1616e:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x16171:    89 04 24                        	mov dword ptr [esp], eax
0x16174:    e8 60 94 00 00                  	call 0x1f5d9 <unknown_1f5d9>
0x16179:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x1617d:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x16180:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x16184:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x16187:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1618b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1618f:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16192:    89 04 24                        	mov dword ptr [esp], eax
0x16195:    e8 34 86 01 00                  	call 0x2e7ce <unknown_2e7ce>
0x1619a:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1619d:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x161a0:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x161a7:    74 05                           	je 0x161ae <function_161ae>
; data inside code section at 0x161a9 -- 0x161aa
0x161a9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x161aa -- 0x161ab
; data inside code section at 0x161ab -- 0x161ae
0x161ab:    ff ff ff                                           |...             |
; function: function_161ae at 0x161ae -- 0x161b3
0x161ae:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x161b1:    c9                              	leave 
0x161b2:    c3                              	ret 
; section: .text._Z16GetSerializeSizeIcEjRKSbIT_St11char_traitsIS0_ESaIS0_EEii
; function: _Z16GetSerializeSizeIcEjRKSbIT_St11char_traitsIS0_ESaIS0_EEii at 0x161b3 -- 0x161b7
0x161b3:    55                              	push ebp
0x161b4:    89 e5                           	mov ebp, esp
0x161b6:    53                              	push ebx
; data inside code section at 0x161b7 -- 0x161de
0x161b7:    83 ec 34 8b 45 08 89 45  e4 8b 45 0c 89 45 e0 8b   |..4.E..E..E..E..|
0x161c7:    45 10 89 45 dc 65 a1 14  00 00 00 89 45 f4 31 c0   |E..E.e......E.1.|
0x161d7:    8b 45 e4 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNKSs4sizeEv at 0x161de -- 0x161df
; data inside code section at 0x161df -- 0x161e3
0x161df:    ff ff ff ba                                        |....            |
; function: function_161e3 at 0x161e3 -- 0x161fb
0x161e3:    00 00                           	add byte ptr [eax], al
0x161e5:    00 00                           	add byte ptr [eax], al
0x161e7:    89 04 24                        	mov dword ptr [esp], eax
0x161ea:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x161ee:    e8 a1 43 00 00                  	call 0x1a594 <function_1a594>
0x161f3:    89 c3                           	mov ebx, eax
0x161f5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x161f8:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x161fb -- 0x161fc
0x161fb:    e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0x161fc -- 0x161fd
; data inside code section at 0x161fd -- 0x1620f
0x161fd:    ff ff ff 01 d8 8b 55 f4  65 33 15 14 00 00 00 74   |......U.e3.....t|
0x1620d:    05 e8                                              |..              |
; dynamically linked function: __stack_chk_fail at 0x1620f -- 0x16210
; data inside code section at 0x16210 -- 0x16212
0x16210:    ff ff                                              |..              |
; function: function_16212 at 0x16212 -- 0x16219
0x16212:    ff 83 c4 34 5b 5d               	inc dword ptr [ebx + 0x5d5b34c4]
0x16218:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamcEvRT_RKSbIT0_St11char_traitsIS3_ESaIS3_EEii
; function: _Z9SerializeI11CDataStreamcEvRT_RKSbIT0_St11char_traitsIS3_ESaIS3_EEii at 0x16219 -- 0x16229
0x16219:    55                              	push ebp
0x1621a:    89 e5                           	mov ebp, esp
0x1621c:    53                              	push ebx
0x1621d:    83 ec 34                        	sub esp, 0x34
0x16220:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16223:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16226:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0x16229 -- 0x1622b
0x16229:    89 45                                              |.E              |
; function: function_1622b at 0x1622b -- 0x16249
0x1622b:    e0 8b                           	loopne 0x161b8
0x1622d:    45                              	inc ebp
0x1622e:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x16234:    14 89                           	adc al, 0x89
0x16236:    45                              	inc ebp
0x16237:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x1623a:    14 00                           	adc al, 0
0x1623c:    00 00                           	add byte ptr [eax], al
0x1623e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16241:    31 c0                           	xor eax, eax
0x16243:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16246:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x16249 -- 0x1624a
0x16249:    e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0x1624a -- 0x1624b
; data inside code section at 0x1624b -- 0x1626d
0x1624b:    ff ff ff ba 00 00 00 00  89 44 24 04 89 54 24 08   |.........D$..T$.|
0x1625b:    8b 45 e4 89 04 24 e8 ff  86 01 00 8b 45 e0 89 04   |.E...$......E...|
0x1626b:    24 e8                                              |$.              |
; dynamically linked function: _ZNKSs5emptyEv at 0x1626d -- 0x1626e
; data inside code section at 0x1626e -- 0x1627f
0x1626e:    ff ff ff 83 f0 01 84 c0  74 33 8b 45 e0 89 04 24   |........t3.E...$|
0x1627e:    e8                                                 |.               |
; dynamically linked function: _ZNKSs4sizeEv at 0x1627f -- 0x16280
; data inside code section at 0x16280 -- 0x16284
0x16280:    ff ff ff 89                                        |....            |
; function: function_16284 at 0x16284 -- 0x16285
0x16284:    c3                              	ret 
; data inside code section at 0x16285 -- 0x16291
0x16285:    c7 44 24 04 00 00 00 00  8b 45 e0 89               |.D$......E..    |
; function: function_16291 at 0x16291 -- 0x16293
0x16291:    04 24                           	add al, 0x24
; data inside code section at 0x16293 -- 0x16294
0x16293:    e8                                                 |.               |
; dynamically linked function: _ZNKSsixEj at 0x16294 -- 0x16295
; data inside code section at 0x16295 -- 0x162b8
0x16295:    ff ff ff 89 5c 24 08 89  44 24 04 8b 45 e4 89 04   |....\$..D$..E...|
0x162a5:    24 e8 dc 4a 00 00 8b 45  f4 65 33 05 14 00 00 00   |$..J...E.e3.....|
0x162b5:    74 05 e8                                           |t..             |
; dynamically linked function: __stack_chk_fail at 0x162b8 -- 0x162b9
; data inside code section at 0x162b9 -- 0x162bb
0x162b9:    ff ff                                              |..              |
; function: function_162bb at 0x162bb -- 0x162c2
0x162bb:    ff 83 c4 34 5b 5d               	inc dword ptr [ebx + 0x5d5b34c4]
0x162c1:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7CVarIntIiEEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStream7CVarIntIiEEjRT_RT0_ii21CSerActionUnserialize at 0x162c2 -- 0x16323
0x162c2:    55                              	push ebp
0x162c3:    89 e5                           	mov ebp, esp
0x162c5:    83 ec 48                        	sub esp, 0x48
0x162c8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x162cb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x162ce:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x162d1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x162d4:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x162d7:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x162da:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x162dd:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x162e0:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x162e4:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x162e7:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x162ed:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x162f0:    31 c0                           	xor eax, eax
0x162f2:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x162f5:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x162f9:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x162fc:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16300:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16303:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16307:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1630a:    89 04 24                        	mov dword ptr [esp], eax
0x1630d:    e8 b2 59 01 00                  	call 0x2bcc4 <unknown_2bcc4>
0x16312:    b8 00 00 00 00                  	mov eax, 0
0x16317:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1631a:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16321:    74 05                           	je 0x16328 <function_16328>
; data inside code section at 0x16323 -- 0x16324
0x16323:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16324 -- 0x16325
; data inside code section at 0x16325 -- 0x16328
0x16325:    ff ff ff                                           |...             |
; function: function_16328 at 0x16328 -- 0x1632a
0x16328:    c9                              	leave 
0x16329:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RT0_ii21CSerActionUnserialize at 0x1632a -- 0x16392
0x1632a:    55                              	push ebp
0x1632b:    89 e5                           	mov ebp, esp
0x1632d:    83 ec 48                        	sub esp, 0x48
0x16330:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16333:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16336:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16339:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1633c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1633f:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16342:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x16345:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x16348:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x1634c:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x1634f:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16355:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16358:    31 c0                           	xor eax, eax
0x1635a:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1635d:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x16361:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16364:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16368:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1636b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1636f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16372:    89 04 24                        	mov dword ptr [esp], eax
0x16375:    e8 0e 5a 01 00                  	call 0x2bd88 <unknown_2bd88>
0x1637a:    b8 00 00 00 00                  	mov eax, 0
0x1637f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16382:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16389:    74 05                           	je 0x16390 <_Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RT0_ii21CSerActionUnserialize+0x66>
0x1638b:    e8 fc ff ff ff                  	call 0x1638c
0x16390:    c9                              	leave 
0x16391:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStreamiEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStreamiEjRT_RT0_ii21CSerActionUnserialize at 0x16392 -- 0x163fa
0x16392:    55                              	push ebp
0x16393:    89 e5                           	mov ebp, esp
0x16395:    83 ec 48                        	sub esp, 0x48
0x16398:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1639b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1639e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x163a1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x163a4:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x163a7:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x163aa:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x163ad:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x163b0:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x163b4:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x163b7:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x163bd:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x163c0:    31 c0                           	xor eax, eax
0x163c2:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x163c5:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x163c9:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x163cc:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x163d0:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x163d3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x163d7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x163da:    89 04 24                        	mov dword ptr [esp], eax
0x163dd:    e8 3c d7 00 00                  	call 0x23b1e <unknown_23b1e>
0x163e2:    b8 00 00 00 00                  	mov eax, 0
0x163e7:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x163ea:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x163f1:    74 05                           	je 0x163f8 <_Z12SerReadWriteI11CDataStreamiEjRT_RT0_ii21CSerActionUnserialize+0x66>
0x163f3:    e8 fc ff ff ff                  	call 0x163f4
0x163f8:    c9                              	leave 
0x163f9:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7uint256EjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStream7uint256EjRT_RT0_ii21CSerActionUnserialize at 0x163fa -- 0x16462
0x163fa:    55                              	push ebp
0x163fb:    89 e5                           	mov ebp, esp
0x163fd:    83 ec 48                        	sub esp, 0x48
0x16400:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16403:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16406:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16409:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1640c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1640f:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16412:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x16415:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x16418:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x1641c:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x1641f:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16425:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16428:    31 c0                           	xor eax, eax
0x1642a:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1642d:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x16431:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16434:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16438:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1643b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1643f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16442:    89 04 24                        	mov dword ptr [esp], eax
0x16445:    e8 94 04 01 00                  	call 0x268de <unknown_268de>
0x1644a:    b8 00 00 00 00                  	mov eax, 0
0x1644f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16452:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16459:    74 05                           	je 0x16460 <_Z12SerReadWriteI11CDataStream7uint256EjRT_RT0_ii21CSerActionUnserialize+0x66>
0x1645b:    e8 fc ff ff ff                  	call 0x1645c
0x16460:    c9                              	leave 
0x16461:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStreamjEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStreamjEjRT_RT0_ii21CSerActionUnserialize at 0x16462 -- 0x164c3
0x16462:    55                              	push ebp
0x16463:    89 e5                           	mov ebp, esp
0x16465:    83 ec 48                        	sub esp, 0x48
0x16468:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1646b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1646e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16471:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16474:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16477:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1647a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1647d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x16480:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x16484:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x16487:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1648d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16490:    31 c0                           	xor eax, eax
0x16492:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x16495:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x16499:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1649c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x164a0:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x164a3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x164a7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x164aa:    89 04 24                        	mov dword ptr [esp], eax
0x164ad:    e8 87 88 01 00                  	call 0x2ed39 <unknown_2ed39>
0x164b2:    b8 00 00 00 00                  	mov eax, 0
0x164b7:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x164ba:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x164c1:    74 05                           	je 0x164c8 <function_164c8>
; data inside code section at 0x164c3 -- 0x164c4
0x164c3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x164c4 -- 0x164c5
; data inside code section at 0x164c5 -- 0x164c8
0x164c5:    ff ff ff                                           |...             |
; function: function_164c8 at 0x164c8 -- 0x164ca
0x164c8:    c9                              	leave 
0x164c9:    c3                              	ret 
; section: .text._ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_
; function: _ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_ at 0x164ca -- 0x164f6
0x164ca:    55                              	push ebp
0x164cb:    89 e5                           	mov ebp, esp
0x164cd:    83 ec 28                        	sub esp, 0x28
0x164d0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x164d3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x164d6:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x164d9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x164dc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x164e2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x164e5:    31 c0                           	xor eax, eax
0x164e7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x164ea:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x164ed:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x164f4:    74 05                           	je 0x164fb <function_164fb>
; data inside code section at 0x164f6 -- 0x164f7
0x164f6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x164f7 -- 0x164f8
; data inside code section at 0x164f8 -- 0x164fb
0x164f8:    ff ff ff                                           |...             |
; function: function_164fb at 0x164fb -- 0x164ff
0x164fb:    c9                              	leave 
0x164fc:    c2 04 00                        	ret 4
; section: .text._ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag
; function: _ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag at 0x164ff -- 0x16541
0x164ff:    55                              	push ebp
0x16500:    89 e5                           	mov ebp, esp
0x16502:    83 ec 38                        	sub esp, 0x38
0x16505:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16508:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1650b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1650e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16511:    0f b6 45 10                     	movzx eax, byte ptr [ebp + 0x10]
0x16515:    88 45 df                        	mov byte ptr [ebp - 0x21], al
0x16518:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1651e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16521:    31 c0                           	xor eax, eax
0x16523:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x16526:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1652a:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x1652d:    89 04 24                        	mov dword ptr [esp], eax
0x16530:    e8 f7 88 01 00                  	call 0x2ee2c <unknown_2ee2c>
0x16535:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16538:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1653f:    74 05                           	je 0x16546 <function_16546>
; data inside code section at 0x16541 -- 0x16542
0x16541:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16542 -- 0x16543
; data inside code section at 0x16543 -- 0x16546
0x16543:    ff ff ff                                           |...             |
; function: function_16546 at 0x16546 -- 0x16548
0x16546:    c9                              	leave 
0x16547:    c3                              	ret 
; section: .text._ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
; function: _ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_ at 0x16548 -- 0x16574
0x16548:    55                              	push ebp
0x16549:    89 e5                           	mov ebp, esp
0x1654b:    83 ec 28                        	sub esp, 0x28
0x1654e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16551:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16554:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16557:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1655a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16560:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16563:    31 c0                           	xor eax, eax
0x16565:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16568:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1656b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16572:    74 05                           	je 0x16579 <function_16579>
; data inside code section at 0x16574 -- 0x16575
0x16574:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16575 -- 0x16576
; data inside code section at 0x16576 -- 0x16579
0x16576:    ff ff ff                                           |...             |
; function: function_16579 at 0x16579 -- 0x1657d
0x16579:    c9                              	leave 
0x1657a:    c2 04 00                        	ret 4
; section: .text._ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
; function: _ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag at 0x1657d -- 0x165b9
0x1657d:    55                              	push ebp
0x1657e:    89 e5                           	mov ebp, esp
0x16580:    83 ec 28                        	sub esp, 0x28
0x16583:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16586:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16589:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1658c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1658f:    0f b6 45 10                     	movzx eax, byte ptr [ebp + 0x10]
0x16593:    88 45 df                        	mov byte ptr [ebp - 0x21], al
0x16596:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1659c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1659f:    31 c0                           	xor eax, eax
0x165a1:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x165a4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x165a7:    89 d1                           	mov ecx, edx
0x165a9:    29 c1                           	sub ecx, eax
0x165ab:    89 c8                           	mov eax, ecx
0x165ad:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x165b0:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x165b7:    74 05                           	je 0x165be <function_165be>
; data inside code section at 0x165b9 -- 0x165ba
0x165b9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x165ba -- 0x165bb
; data inside code section at 0x165bb -- 0x165be
0x165bb:    ff ff ff                                           |...             |
; function: function_165be at 0x165be -- 0x165c0
0x165be:    c9                              	leave 
0x165bf:    c3                              	ret 
; section: .text._ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_
; function: _ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_ at 0x165c0 -- 0x165ec
0x165c0:    55                              	push ebp
0x165c1:    89 e5                           	mov ebp, esp
0x165c3:    83 ec 28                        	sub esp, 0x28
0x165c6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x165c9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x165cc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x165cf:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x165d2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x165d8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x165db:    31 c0                           	xor eax, eax
0x165dd:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x165e0:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x165e3:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x165ea:    74 05                           	je 0x165f1 <function_165f1>
; data inside code section at 0x165ec -- 0x165ed
0x165ec:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x165ed -- 0x165ee
; data inside code section at 0x165ee -- 0x165f1
0x165ee:    ff ff ff                                           |...             |
; function: function_165f1 at 0x165f1 -- 0x165f5
0x165f1:    c9                              	leave 
0x165f2:    c2 04 00                        	ret 4
; section: .text._ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag
; function: _ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag at 0x165f5 -- 0x16631
0x165f5:    55                              	push ebp
0x165f6:    89 e5                           	mov ebp, esp
0x165f8:    83 ec 28                        	sub esp, 0x28
0x165fb:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x165fe:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16601:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16604:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16607:    0f b6 45 10                     	movzx eax, byte ptr [ebp + 0x10]
0x1660b:    88 45 df                        	mov byte ptr [ebp - 0x21], al
0x1660e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16614:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16617:    31 c0                           	xor eax, eax
0x16619:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1661c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1661f:    89 d1                           	mov ecx, edx
0x16621:    29 c1                           	sub ecx, eax
0x16623:    89 c8                           	mov eax, ecx
0x16625:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16628:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1662f:    74 05                           	je 0x16636 <function_16636>
; data inside code section at 0x16631 -- 0x16632
0x16631:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16632 -- 0x16633
; data inside code section at 0x16633 -- 0x16636
0x16633:    ff ff ff                                           |...             |
; function: function_16636 at 0x16636 -- 0x16638
0x16636:    c9                              	leave 
0x16637:    c3                              	ret 
; section: .text._ZSteqIcEbRKSaIT_ES3_
; function: _ZSteqIcEbRKSaIT_ES3_ at 0x16638 -- 0x16666
0x16638:    55                              	push ebp
0x16639:    89 e5                           	mov ebp, esp
0x1663b:    83 ec 28                        	sub esp, 0x28
0x1663e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16641:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16644:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16647:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1664a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16650:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16653:    31 c0                           	xor eax, eax
0x16655:    b8 01 00 00 00                  	mov eax, 1
0x1665a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1665d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16664:    74 05                           	je 0x1666b <function_1666b>
; data inside code section at 0x16666 -- 0x16667
0x16666:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16667 -- 0x16668
; data inside code section at 0x16668 -- 0x1666b
0x16668:    ff ff ff                                           |...             |
; function: function_1666b at 0x1666b -- 0x1666d
0x1666b:    c9                              	leave 
0x1666c:    c3                              	ret 
; section: .text._ZN9__gnu_cxxeqIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESC_
; function: _ZN9__gnu_cxxeqIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESC_ at 0x1666d -- 0x166b6
0x1666d:    55                              	push ebp
0x1666e:    89 e5                           	mov ebp, esp
0x16670:    53                              	push ebx
0x16671:    83 ec 34                        	sub esp, 0x34
0x16674:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16677:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1667a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1667d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16680:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16686:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16689:    31 c0                           	xor eax, eax
0x1668b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1668e:    89 04 24                        	mov dword ptr [esp], eax
0x16691:    e8 bf 3d 01 00                  	call 0x2a455 <unknown_2a455>
0x16696:    8b 18                           	mov ebx, dword ptr [eax]
0x16698:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1669b:    89 04 24                        	mov dword ptr [esp], eax
0x1669e:    e8 b2 3d 01 00                  	call 0x2a455 <unknown_2a455>
0x166a3:    8b 00                           	mov eax, dword ptr [eax]
0x166a5:    39 c3                           	cmp ebx, eax
0x166a7:    0f 94 c0                        	sete al
0x166aa:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x166ad:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x166b4:    74 05                           	je 0x166bb <function_166bb>
; data inside code section at 0x166b6 -- 0x166b7
0x166b6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x166b7 -- 0x166b8
; data inside code section at 0x166b8 -- 0x166bb
0x166b8:    ff ff ff                                           |...             |
; function: function_166bb at 0x166bb -- 0x166c1
0x166bb:    83 c4 34                        	add esp, 0x34
0x166be:    5b                              	pop ebx
0x166bf:    5d                              	pop ebp
0x166c0:    c3                              	ret 
; section: .text._ZN9__gnu_cxx17__is_null_pointerINS_17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEbT_
; function: _ZN9__gnu_cxx17__is_null_pointerINS_17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEbT_ at 0x166c1 -- 0x166c2
0x166c1:    55                              	push ebp
; function: function_166c2 at 0x166c2 -- 0x166e9
0x166c2:    89 e5                           	mov ebp, esp
0x166c4:    83 ec 28                        	sub esp, 0x28
0x166c7:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x166ca:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x166cd:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x166d3:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x166d6:    31 c0                           	xor eax, eax
0x166d8:    b8 00 00 00 00                  	mov eax, 0
0x166dd:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x166e0:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x166e7:    74 05                           	je 0x166ee <function_166ee>
; data inside code section at 0x166e9 -- 0x166ea
0x166e9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x166ea -- 0x166eb
; data inside code section at 0x166eb -- 0x166ee
0x166eb:    ff ff ff                                           |...             |
; function: function_166ee at 0x166ee -- 0x166f0
0x166ee:    c9                              	leave 
0x166ef:    c3                              	ret 
; section: .text._ZNSs13_S_copy_charsIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEvPcT_SA_
; function: _ZNSs13_S_copy_charsIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEvPcT_SA_ at 0x166f0 -- 0x1670e
0x166f0:    55                              	push ebp
0x166f1:    89 e5                           	mov ebp, esp
0x166f3:    83 ec 38                        	sub esp, 0x38
0x166f6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x166f9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x166fc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x166ff:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16702:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16705:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16708:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x1670e -- 0x16710
0x1670e:    89 45                                              |.E              |
; function: function_16710 at 0x16710 -- 0x16760
0x16710:    f4                              	hlt 
0x16711:    31 c0                           	xor eax, eax
0x16713:    eb 29                           	jmp 0x1673e <function_16710+0x2e>
0x16715:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x16718:    89 04 24                        	mov dword ptr [esp], eax
0x1671b:    e8 fc 0d 01 00                  	call 0x2751c <unknown_2751c>
0x16720:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16724:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16727:    89 04 24                        	mov dword ptr [esp], eax
0x1672a:    e8 71 1e 00 00                  	call 0x185a0 <function_185a0>
0x1672f:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x16732:    89 04 24                        	mov dword ptr [esp], eax
0x16735:    e8 a8 0d 01 00                  	call 0x274e2 <unknown_274e2>
0x1673a:    83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x1673e:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x16741:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16745:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x16748:    89 04 24                        	mov dword ptr [esp], eax
0x1674b:    e8 3d 0d 01 00                  	call 0x2748d <unknown_2748d>
0x16750:    84 c0                           	test al, al
0x16752:    75 c1                           	jne 0x16715 <function_16710+0x5>
0x16754:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16757:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1675e:    74 05                           	je 0x16765 <function_16765>
; data inside code section at 0x16760 -- 0x16761
0x16760:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16761 -- 0x16762
; data inside code section at 0x16762 -- 0x16765
0x16762:    ff ff ff                                           |...             |
; function: function_16765 at 0x16765 -- 0x16767
0x16765:    c9                              	leave 
0x16766:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_
; function: _ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_ at 0x16767 -- 0x1678d
0x16767:    55                              	push ebp
0x16768:    89 e5                           	mov ebp, esp
0x1676a:    83 ec 28                        	sub esp, 0x28
0x1676d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16770:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16773:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16779:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1677c:    31 c0                           	xor eax, eax
0x1677e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16781:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16784:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1678b:    74 05                           	je 0x16792 <function_16792>
; data inside code section at 0x1678d -- 0x1678e
0x1678d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1678e -- 0x1678f
; data inside code section at 0x1678f -- 0x16792
0x1678f:    ff ff ff                                           |...             |
; function: function_16792 at 0x16792 -- 0x16794
0x16792:    c9                              	leave 
0x16793:    c3                              	ret 
; section: .text._ZSt22__copy_move_backward_aILb0EPcS0_ET1_T0_S2_S1_
; function: _ZSt22__copy_move_backward_aILb0EPcS0_ET1_T0_S2_S1_ at 0x16794 -- 0x167e0
0x16794:    55                              	push ebp
0x16795:    89 e5                           	mov ebp, esp
0x16797:    83 ec 38                        	sub esp, 0x38
0x1679a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1679d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x167a0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x167a3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x167a6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x167a9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x167ac:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x167b2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x167b5:    31 c0                           	xor eax, eax
0x167b7:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x167bb:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x167be:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x167c2:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x167c5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x167c9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x167cc:    89 04 24                        	mov dword ptr [esp], eax
0x167cf:    e8 97 89 01 00                  	call 0x2f16b <unknown_2f16b>
0x167d4:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x167d7:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x167de:    74 05                           	je 0x167e5 <function_167e5>
; data inside code section at 0x167e0 -- 0x167e1
0x167e0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x167e1 -- 0x167e2
; data inside code section at 0x167e2 -- 0x167e5
0x167e2:    ff ff ff                                           |...             |
; function: function_167e5 at 0x167e5 -- 0x167e7
0x167e5:    c9                              	leave 
0x167e6:    c3                              	ret 
; section: .text._ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_
; function: _ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_ at 0x167e7 -- 0x16815
0x167e7:    55                              	push ebp
0x167e8:    89 e5                           	mov ebp, esp
0x167ea:    83 ec 38                        	sub esp, 0x38
0x167ed:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x167f0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x167f3:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x167f9:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x167fc:    31 c0                           	xor eax, eax
0x167fe:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16801:    89 04 24                        	mov dword ptr [esp], eax
0x16804:    e8 26 8a 01 00                  	call 0x2f22f <unknown_2f22f>
0x16809:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1680c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16813:    74 05                           	je 0x1681a <function_1681a>
; data inside code section at 0x16815 -- 0x16816
0x16815:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16816 -- 0x16817
; data inside code section at 0x16817 -- 0x1681a
0x16817:    ff ff ff                                           |...             |
; function: function_1681a at 0x1681a -- 0x1681c
0x1681a:    c9                              	leave 
0x1681b:    c3                              	ret 
; section: .text._ZSt14__copy_move_a2ILb0EPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET1_T0_SB_SA_
; function: _ZSt14__copy_move_a2ILb0EPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET1_T0_SB_SA_ at 0x1681c -- 0x168a0
0x1681c:    55                              	push ebp
0x1681d:    89 e5                           	mov ebp, esp
0x1681f:    56                              	push esi
0x16820:    53                              	push ebx
0x16821:    83 ec 30                        	sub esp, 0x30
0x16824:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16827:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1682a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1682d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16830:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16833:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16836:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x16839:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1683c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16842:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16845:    31 c0                           	xor eax, eax
0x16847:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1684a:    89 04 24                        	mov dword ptr [esp], eax
0x1684d:    e8 c2 41 01 00                  	call 0x2aa14 <unknown_2aa14>
0x16852:    89 c6                           	mov esi, eax
0x16854:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16857:    89 04 24                        	mov dword ptr [esp], eax
0x1685a:    e8 32 8a 01 00                  	call 0x2f291 <unknown_2f291>
0x1685f:    89 c3                           	mov ebx, eax
0x16861:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16864:    89 04 24                        	mov dword ptr [esp], eax
0x16867:    e8 25 8a 01 00                  	call 0x2f291 <unknown_2f291>
0x1686c:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x16870:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x16874:    89 04 24                        	mov dword ptr [esp], eax
0x16877:    e8 24 89 01 00                  	call 0x2f1a0 <unknown_2f1a0>
0x1687c:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x1687f:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x16882:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16886:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16889:    89 04 24                        	mov dword ptr [esp], eax
0x1688c:    e8 57 d3 00 00                  	call 0x23be8 <unknown_23be8>
0x16891:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16894:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16897:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1689e:    74 05                           	je 0x168a5 <function_168a5>
; data inside code section at 0x168a0 -- 0x168a1
0x168a0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x168a1 -- 0x168a2
; data inside code section at 0x168a2 -- 0x168a5
0x168a2:    ff ff ff                                           |...             |
; function: function_168a5 at 0x168a5 -- 0x168ae
0x168a5:    83 c4 30                        	add esp, 0x30
0x168a8:    5b                              	pop ebx
0x168a9:    5e                              	pop esi
0x168aa:    5d                              	pop ebp
0x168ab:    c2 04 00                        	ret 4
; section: .text._ZSt9__advanceIPKciEvRT_T0_St26random_access_iterator_tag
; function: _ZSt9__advanceIPKciEvRT_T0_St26random_access_iterator_tag at 0x168ae -- 0x168c7
0x168ae:    55                              	push ebp
0x168af:    89 e5                           	mov ebp, esp
0x168b1:    83 ec 28                        	sub esp, 0x28
0x168b4:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x168b7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x168ba:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x168bd:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x168c0:    0f b6 45 10                     	movzx eax, byte ptr [ebp + 0x10]
0x168c4:    88 45 df                        	mov byte ptr [ebp - 0x21], al
; data inside code section at 0x168c7 -- 0x168d1
0x168c7:    65 a1 14 00 00 00 89 45  f4 31                     |e......E.1      |
; function: function_168d1 at 0x168d1 -- 0x168ed
0x168d1:    c0 8b 45 e4 8b 10 8b            	ror byte ptr [ebx + 0x108be445], 0x8b
0x168d8:    45                              	inc ebp
0x168d9:    e0 01                           	loopne 0x168dc
; data inside code section at 0x168db -- 0x168dc
0x168db:    c2                                                 |.               |
0x168dc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x168df:    89 10                           	mov dword ptr [eax], edx
0x168e1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x168e4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x168eb:    74 05                           	je 0x168f2 <function_168f2>
; data inside code section at 0x168ed -- 0x168ee
0x168ed:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x168ee -- 0x168ef
; data inside code section at 0x168ef -- 0x168f2
0x168ef:    ff ff ff                                           |...             |
; function: function_168f2 at 0x168f2 -- 0x168f4
0x168f2:    c9                              	leave 
0x168f3:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_
; function: _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_ at 0x168f4 -- 0x16924
0x168f4:    55                              	push ebp
0x168f5:    89 e5                           	mov ebp, esp
0x168f7:    83 ec 38                        	sub esp, 0x38
0x168fa:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x168fd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16900:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16906:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16909:    31 c0                           	xor eax, eax
0x1690b:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x1690e:    89 04 24                        	mov dword ptr [esp], eax
0x16911:    e8 a4 d6 00 00                  	call 0x23fba <unknown_23fba>
0x16916:    8b 00                           	mov eax, dword ptr [eax]
0x16918:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1691b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16922:    74 05                           	je 0x16929 <function_16929>
; data inside code section at 0x16924 -- 0x16925
0x16924:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16925 -- 0x16926
; data inside code section at 0x16926 -- 0x16929
0x16926:    ff ff ff                                           |...             |
; function: function_16929 at 0x16929 -- 0x1692b
0x16929:    c9                              	leave 
0x1692a:    c3                              	ret 
; section: .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
; function: _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_ at 0x1692b -- 0x16934
0x1692b:    55                              	push ebp
0x1692c:    89 e5                           	mov ebp, esp
0x1692e:    83 ec 38                        	sub esp, 0x38
0x16931:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x16934 -- 0x16936
0x16934:    89 45                                              |.E              |
; function: function_16936 at 0x16936 -- 0x16977
0x16936:    e4 8b                           	in al, 0x8b
0x16938:    45                              	inc ebp
0x16939:    0c 89                           	or al, 0x89
0x1693b:    45                              	inc ebp
0x1693c:    e0 8b                           	loopne 0x168c9
0x1693e:    45                              	inc ebp
0x1693f:    10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0x16945:    14 00                           	adc al, 0
0x16947:    00 00                           	add byte ptr [eax], al
0x16949:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1694c:    31 c0                           	xor eax, eax
0x1694e:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x16951:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16954:    89 d1                           	mov ecx, edx
0x16956:    29 c1                           	sub ecx, eax
0x16958:    89 c8                           	mov eax, ecx
0x1695a:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x1695d:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x16961:    74 19                           	je 0x1697c <function_1697c>
0x16963:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x16966:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1696a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1696d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16971:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16974:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x16977 -- 0x16978
0x16977:    e8                                                 |.               |
; dynamically linked function: memmove at 0x16978 -- 0x16979
; data inside code section at 0x16979 -- 0x1697c
0x16979:    ff ff ff                                           |...             |
; function: function_1697c at 0x1697c -- 0x1698e
0x1697c:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x1697f:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x16982:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16985:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1698c:    74 05                           	je 0x16993 <function_16993>
; data inside code section at 0x1698e -- 0x1698f
0x1698e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1698f -- 0x16990
; data inside code section at 0x16990 -- 0x16993
0x16990:    ff ff ff                                           |...             |
; function: function_16993 at 0x16993 -- 0x16995
0x16993:    c9                              	leave 
0x16994:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_
; function: _ZN9__gnu_cxx13new_allocatorIhEC1ERKS1_ at 0x16996 -- 0x169a8
0x16996:    55                              	push ebp
0x16997:    89 e5                           	mov ebp, esp
0x16999:    83 ec 28                        	sub esp, 0x28
0x1699c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1699f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x169a2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x169a5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x169a8 -- 0x169aa
0x169a8:    65 a1                                              |e.              |
; function: function_169aa at 0x169aa -- 0x169ac
0x169aa:    14 00                           	adc al, 0
; data inside code section at 0x169ac -- 0x169c0
0x169ac:    00 00 89 45 f4 31 c0 8b  45 f4 65 33 05 14 00 00   |...E.1..E.e3....|
0x169bc:    00 74 05 e8                                        |.t..            |
; dynamically linked function: __stack_chk_fail at 0x169c0 -- 0x169c1
; data inside code section at 0x169c1 -- 0x169c3
0x169c1:    ff ff                                              |..              |
; function: function_169c3 at 0x169c3 -- 0x169c6
0x169c3:    ff c9                           	dec ecx
0x169c5:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv
; function: _ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv at 0x169c6 -- 0x169c7
0x169c6:    55                              	push ebp
; data inside code section at 0x169c7 -- 0x169c8
0x169c7:    89                                                 |.               |
; function: function_169c8 at 0x169c8 -- 0x169ee
0x169c8:    e5 83                           	in eax, 0x83
0x169ca:    ec                              	in al, dx
0x169cb:    28 8b 45 08 89 45               	sub byte ptr [ebx + 0x45890845], cl
0x169d1:    e4 65                           	in al, 0x65
0x169d3:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x169d8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x169db:    31 c0                           	xor eax, eax
0x169dd:    b8 ff ff ff ff                  	mov eax, 0xffffffff
0x169e2:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x169e5:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x169ec:    74 05                           	je 0x169f3 <function_169f3>
; data inside code section at 0x169ee -- 0x169ef
0x169ee:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x169ef -- 0x169f0
; data inside code section at 0x169f0 -- 0x169f3
0x169f0:    ff ff ff                                           |...             |
; function: function_169f3 at 0x169f3 -- 0x169f5
0x169f3:    c9                              	leave 
0x169f4:    c3                              	ret 
; section: .text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPhjhEEvT_T0_RKT1_
; function: _ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPhjhEEvT_T0_RKT1_ at 0x169f5 -- 0x16a1f
0x169f5:    55                              	push ebp
0x169f6:    89 e5                           	mov ebp, esp
0x169f8:    83 ec 38                        	sub esp, 0x38
0x169fb:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x169fe:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16a01:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16a04:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16a07:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16a0a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16a0d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16a13:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16a16:    31 c0                           	xor eax, eax
0x16a18:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16a1b:    89 44 24 08                     	mov dword ptr [esp + 8], eax
; data inside code section at 0x16a1f -- 0x16a20
0x16a1f:    8b                                                 |.               |
; function: function_16a20 at 0x16a20 -- 0x16a3d
0x16a20:    45                              	inc ebp
0x16a21:    e0 89                           	loopne 0x169ac
0x16a23:    44                              	inc esp
0x16a24:    24 04                           	and al, 4
0x16a26:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16a29:    89 04 24                        	mov dword ptr [esp], eax
0x16a2c:    e8 6e 8a 01 00                  	call 0x2f49f <unknown_2f49f>
0x16a31:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16a34:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16a3b:    74 05                           	je 0x16a42 <function_16a42>
; data inside code section at 0x16a3d -- 0x16a3e
0x16a3d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16a3e -- 0x16a3f
; data inside code section at 0x16a3f -- 0x16a42
0x16a3f:    ff ff ff                                           |...             |
; function: function_16a42 at 0x16a42 -- 0x16a44
0x16a42:    c9                              	leave 
0x16a43:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb1EE7_S_baseES6_
; function: _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb1EE7_S_baseES6_ at 0x16a44 -- 0x16a74
0x16a44:    55                              	push ebp
0x16a45:    89 e5                           	mov ebp, esp
0x16a47:    83 ec 38                        	sub esp, 0x38
0x16a4a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16a4d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16a50:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16a56:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16a59:    31 c0                           	xor eax, eax
0x16a5b:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x16a5e:    89 04 24                        	mov dword ptr [esp], eax
0x16a61:    e8 e4 e3 00 00                  	call 0x24e4a <unknown_24e4a>
0x16a66:    8b 00                           	mov eax, dword ptr [eax]
0x16a68:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16a6b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16a72:    74 05                           	je 0x16a79 <function_16a79>
; data inside code section at 0x16a74 -- 0x16a75
0x16a74:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16a75 -- 0x16a76
; data inside code section at 0x16a76 -- 0x16a79
0x16a76:    ff ff ff                                           |...             |
; function: function_16a79 at 0x16a79 -- 0x16a7b
0x16a79:    c9                              	leave 
0x16a7a:    c3                              	ret 
; section: .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
; function: _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_ at 0x16a7b -- 0x16ac7
0x16a7b:    55                              	push ebp
0x16a7c:    89 e5                           	mov ebp, esp
0x16a7e:    83 ec 38                        	sub esp, 0x38
0x16a81:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16a84:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16a87:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16a8a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16a8d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16a90:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16a93:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16a99:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16a9c:    31 c0                           	xor eax, eax
0x16a9e:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x16aa1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16aa4:    89 d1                           	mov ecx, edx
0x16aa6:    29 c1                           	sub ecx, eax
0x16aa8:    89 c8                           	mov eax, ecx
0x16aaa:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x16aad:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x16ab1:    74 19                           	je 0x16acc <function_16acc>
0x16ab3:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x16ab6:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16aba:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16abd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16ac1:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16ac4:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x16ac7 -- 0x16ac8
0x16ac7:    e8                                                 |.               |
; dynamically linked function: memmove at 0x16ac8 -- 0x16ac9
; data inside code section at 0x16ac9 -- 0x16acc
0x16ac9:    ff ff ff                                           |...             |
; function: function_16acc at 0x16acc -- 0x16ade
0x16acc:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x16acf:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x16ad2:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16ad5:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16adc:    74 05                           	je 0x16ae3 <function_16ae3>
; data inside code section at 0x16ade -- 0x16adf
0x16ade:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16adf -- 0x16ae0
; function: function_16ae0 at 0x16ae0 -- 0x16ae1
; data inside code section at 0x16ae1 -- 0x16ae3
0x16ae1:    ff ff                                              |..              |
; function: function_16ae3 at 0x16ae3 -- 0x16ae5
0x16ae3:    c9                              	leave 
0x16ae4:    c3                              	ret 
; section: .text._ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type
; function: _ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type at 0x16ae5 -- 0x16b38
0x16ae5:    55                              	push ebp
0x16ae6:    89 e5                           	mov ebp, esp
0x16ae8:    83 ec 38                        	sub esp, 0x38
0x16aeb:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16aee:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16af1:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16af4:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16af7:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16afa:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16afd:    0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0x16b01:    88 45 db                        	mov byte ptr [ebp - 0x25], al
0x16b04:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16b0a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16b0d:    31 c0                           	xor eax, eax
0x16b0f:    88 54 24 0c                     	mov byte ptr [esp + 0xc], dl
0x16b13:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16b16:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16b1a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16b1d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16b21:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16b24:    89 04 24                        	mov dword ptr [esp], eax
0x16b27:    e8 bb 8a 01 00                  	call 0x2f5e7 <unknown_2f5e7>
0x16b2c:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16b2f:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16b36:    74 05                           	je 0x16b3d <function_16b3d>
; data inside code section at 0x16b38 -- 0x16b39
0x16b38:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16b39 -- 0x16b3a
; data inside code section at 0x16b3a -- 0x16b3d
0x16b3a:    ff ff ff                                           |...             |
; function: function_16b3d at 0x16b3d -- 0x16b3f
0x16b3d:    c9                              	leave 
0x16b3e:    c3                              	ret 
; section: .text._ZSt4swapIhEvRT_S1_
; function: _ZSt4swapIhEvRT_S1_ at 0x16b3f -- 0x16b85
0x16b3f:    55                              	push ebp
0x16b40:    89 e5                           	mov ebp, esp
0x16b42:    83 ec 28                        	sub esp, 0x28
0x16b45:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16b48:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16b4b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16b4e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16b51:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16b57:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16b5a:    31 c0                           	xor eax, eax
0x16b5c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16b5f:    0f b6 00                        	movzx eax, byte ptr [eax]
0x16b62:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x16b65:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16b68:    0f b6 10                        	movzx edx, byte ptr [eax]
0x16b6b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16b6e:    88 10                           	mov byte ptr [eax], dl
0x16b70:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16b73:    0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x16b77:    88 10                           	mov byte ptr [eax], dl
0x16b79:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16b7c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16b83:    74 05                           	je 0x16b8a <function_16b8a>
; data inside code section at 0x16b85 -- 0x16b86
0x16b85:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16b86 -- 0x16b87
; data inside code section at 0x16b87 -- 0x16b8a
0x16b87:    ff ff ff                                           |...             |
; function: function_16b8a at 0x16b8a -- 0x16b8c
0x16b8a:    c9                              	leave 
0x16b8b:    c3                              	ret 
; section: .text._ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_
; function: _ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_ at 0x16b8c -- 0x16ba1
0x16b8c:    55                              	push ebp
0x16b8d:    89 e5                           	mov ebp, esp
0x16b8f:    83 ec 38                        	sub esp, 0x38
0x16b92:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16b95:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16b98:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16b9b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16b9e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; data inside code section at 0x16ba1 -- 0x16ba2
0x16ba1:    89                                                 |.               |
; function: function_16ba2 at 0x16ba2 -- 0x16ba6
0x16ba2:    45                              	inc ebp
0x16ba3:    dc 65 a1                        	fsub qword ptr [ebp - 0x5f]
; function: function_16ba6 at 0x16ba6 -- 0x16bd8
0x16ba6:    14 00                           	adc al, 0
0x16ba8:    00 00                           	add byte ptr [eax], al
0x16baa:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16bad:    31 c0                           	xor eax, eax
0x16baf:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x16bb3:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16bb6:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16bba:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16bbd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16bc1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16bc4:    89 04 24                        	mov dword ptr [esp], eax
0x16bc7:    e8 43 8c 01 00                  	call 0x2f80f <unknown_2f80f>
0x16bcc:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16bcf:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16bd6:    74 05                           	je 0x16bdd <function_16bdd>
; data inside code section at 0x16bd8 -- 0x16bd9
0x16bd8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16bd9 -- 0x16bda
; data inside code section at 0x16bda -- 0x16bdc
0x16bda:    ff ff                                              |..              |
; function: function_16bdc at 0x16bdc -- 0x16bdd
; function: function_16bdd at 0x16bdd -- 0x16bdf
0x16bdd:    c9                              	leave 
0x16bde:    c3                              	ret 
; section: .text._ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_
; function: _ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_ at 0x16bdf -- 0x16be8
0x16bdf:    55                              	push ebp
0x16be0:    89 e5                           	mov ebp, esp
0x16be2:    83 ec 28                        	sub esp, 0x28
0x16be5:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; function: function_16be8 at 0x16be8 -- 0x16c0b
0x16be8:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16beb:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16bee:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16bf1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16bf7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16bfa:    31 c0                           	xor eax, eax
0x16bfc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16bff:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16c02:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16c09:    74 05                           	je 0x16c10 <function_16c10>
; data inside code section at 0x16c0b -- 0x16c0c
0x16c0b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16c0c -- 0x16c0d
; data inside code section at 0x16c0d -- 0x16c10
0x16c0d:    ff ff ff                                           |...             |
; function: function_16c10 at 0x16c10 -- 0x16c14
0x16c10:    c9                              	leave 
0x16c11:    c2 04 00                        	ret 4
; section: .text._ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag
; function: _ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag at 0x16c14 -- 0x16c2a
0x16c14:    55                              	push ebp
0x16c15:    89 e5                           	mov ebp, esp
0x16c17:    83 ec 38                        	sub esp, 0x38
0x16c1a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16c1d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16c20:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16c23:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16c26:    0f b6 45 10                     	movzx eax, byte ptr [ebp + 0x10]
; function: function_16c2a at 0x16c2a -- 0x16c56
0x16c2a:    88 45 df                        	mov byte ptr [ebp - 0x21], al
0x16c2d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16c33:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16c36:    31 c0                           	xor eax, eax
0x16c38:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x16c3b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16c3f:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x16c42:    89 04 24                        	mov dword ptr [esp], eax
0x16c45:    e8 ac 92 00 00                  	call 0x1fef6 <unknown_1fef6>
0x16c4a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16c4d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16c54:    74 05                           	je 0x16c5b <function_16c5b>
; data inside code section at 0x16c56 -- 0x16c57
0x16c56:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16c57 -- 0x16c58
; data inside code section at 0x16c58 -- 0x16c5b
0x16c58:    ff ff ff                                           |...             |
; function: function_16c5b at 0x16c5b -- 0x16c5d
0x16c5b:    c9                              	leave 
0x16c5c:    c3                              	ret 
; section: .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_
; function: _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_ at 0x16c5d -- 0x16ccf
0x16c5d:    55                              	push ebp
0x16c5e:    89 e5                           	mov ebp, esp
0x16c60:    56                              	push esi
0x16c61:    53                              	push ebx
0x16c62:    83 ec 30                        	sub esp, 0x30
0x16c65:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16c68:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16c6b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16c6e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16c71:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16c74:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16c77:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16c7d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16c80:    31 c0                           	xor eax, eax
0x16c82:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16c85:    89 04 24                        	mov dword ptr [esp], eax
0x16c88:    e8 3c 44 01 00                  	call 0x2b0c9 <unknown_2b0c9>
0x16c8d:    89 c3                           	mov ebx, eax
0x16c8f:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16c92:    89 04 24                        	mov dword ptr [esp], eax
0x16c95:    e8 1e 1f 01 00                  	call 0x28bb8 <unknown_28bb8>
0x16c9a:    89 c6                           	mov esi, eax
0x16c9c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16c9f:    89 04 24                        	mov dword ptr [esp], eax
0x16ca2:    e8 11 1f 01 00                  	call 0x28bb8 <unknown_28bb8>
0x16ca7:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x16cab:    89 74 24 04                     	mov dword ptr [esp + 4], esi
0x16caf:    89 04 24                        	mov dword ptr [esp], eax
0x16cb2:    e8 62 43 01 00                  	call 0x2b019 <unknown_2b019>
0x16cb7:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16cba:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16cc1:    74 05                           	je 0x16cc8 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_+0x6b>
0x16cc3:    e8 fc ff ff ff                  	call 0x16cc4
0x16cc8:    83 c4 30                        	add esp, 0x30
0x16ccb:    5b                              	pop ebx
0x16ccc:    5e                              	pop esi
0x16ccd:    5d                              	pop ebp
0x16cce:    c3                              	ret 
; section: .text._ZSt11__addressofI6CTxOutEPT_RS1_
; function: _ZSt11__addressofI6CTxOutEPT_RS1_ at 0x16ccf -- 0x16cf5
0x16ccf:    55                              	push ebp
0x16cd0:    89 e5                           	mov ebp, esp
0x16cd2:    83 ec 28                        	sub esp, 0x28
0x16cd5:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16cd8:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16cdb:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16ce1:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16ce4:    31 c0                           	xor eax, eax
0x16ce6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16ce9:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16cec:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16cf3:    74 05                           	je 0x16cfa <function_16cfa>
; data inside code section at 0x16cf5 -- 0x16cf6
0x16cf5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16cf6 -- 0x16cf7
; data inside code section at 0x16cf7 -- 0x16cfa
0x16cf7:    ff ff ff                                           |...             |
; function: function_16cfa at 0x16cfa -- 0x16cfc
0x16cfa:    c9                              	leave 
0x16cfb:    c3                              	ret 
; section: .text._ZSt8_DestroyI6CTxOutEvPT_
; function: _ZSt8_DestroyI6CTxOutEvPT_ at 0x16cfc -- 0x16d2a
0x16cfc:    55                              	push ebp
0x16cfd:    89 e5                           	mov ebp, esp
0x16cff:    83 ec 38                        	sub esp, 0x38
0x16d02:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16d05:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16d08:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16d0e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16d11:    31 c0                           	xor eax, eax
0x16d13:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16d16:    89 04 24                        	mov dword ptr [esp], eax
0x16d19:    e8 d8 5e 00 00                  	call 0x1cbf6 <unknown_1cbf6>
0x16d1e:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16d21:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16d28:    74 05                           	je 0x16d2f <function_16d2f>
; data inside code section at 0x16d2a -- 0x16d2b
0x16d2a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16d2b -- 0x16d2c
; data inside code section at 0x16d2c -- 0x16d2f
0x16d2c:    ff ff ff                                           |...             |
; function: function_16d2f at 0x16d2f -- 0x16d31
0x16d2f:    c9                              	leave 
0x16d30:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorI6CTxOutEC2ERKS2_
; function: _ZN9__gnu_cxx13new_allocatorI6CTxOutEC1ERKS2_ at 0x16d32 -- 0x16d5b
0x16d32:    55                              	push ebp
0x16d33:    89 e5                           	mov ebp, esp
0x16d35:    83 ec 28                        	sub esp, 0x28
0x16d38:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16d3b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16d3e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16d41:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16d44:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16d4a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16d4d:    31 c0                           	xor eax, eax
0x16d4f:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16d52:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16d59:    74 05                           	je 0x16d60 <function_16d60>
; data inside code section at 0x16d5b -- 0x16d5c
0x16d5b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16d5c -- 0x16d5d
; data inside code section at 0x16d5d -- 0x16d60
0x16d5d:    ff ff ff                                           |...             |
; function: function_16d60 at 0x16d60 -- 0x16d62
0x16d60:    c9                              	leave 
0x16d61:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv
; function: _ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv at 0x16d62 -- 0x16d8a
0x16d62:    55                              	push ebp
0x16d63:    89 e5                           	mov ebp, esp
0x16d65:    83 ec 28                        	sub esp, 0x28
0x16d68:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16d6b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16d6e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16d74:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16d77:    31 c0                           	xor eax, eax
0x16d79:    b8 cc cc cc 0c                  	mov eax, 0xccccccc
0x16d7e:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x16d81:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x16d88:    74 05                           	je 0x16d8f <function_16d8f>
; data inside code section at 0x16d8a -- 0x16d8b
0x16d8a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16d8b -- 0x16d8c
; data inside code section at 0x16d8c -- 0x16d8f
0x16d8c:    ff ff ff                                           |...             |
; function: function_16d8f at 0x16d8f -- 0x16d91
0x16d8f:    c9                              	leave 
0x16d90:    c3                              	ret 
; section: .text._ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_
; function: _ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_ at 0x16d91 -- 0x16ddb
0x16d91:    55                              	push ebp
0x16d92:    89 e5                           	mov ebp, esp
0x16d94:    57                              	push edi
0x16d95:    56                              	push esi
0x16d96:    53                              	push ebx
0x16d97:    83 ec 3c                        	sub esp, 0x3c
0x16d9a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16d9d:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x16da0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16da3:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x16da6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16dac:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16daf:    31 c0                           	xor eax, eax
0x16db1:    8b 75 d4                        	mov esi, dword ptr [ebp - 0x2c]
0x16db4:    89 74 24 04                     	mov dword ptr [esp + 4], esi
0x16db8:    c7 04 24 14 00 00 00            	mov dword ptr [esp], 0x14
0x16dbf:    e8 2b 1f 00 00                  	call 0x18cef <function_18cef>
0x16dc4:    89 c3                           	mov ebx, eax
0x16dc6:    85 db                           	test ebx, ebx
0x16dc8:    74 29                           	je 0x16df3 <function_16df3>
0x16dca:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x16dcd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16dd1:    89 1c 24                        	mov dword ptr [esp], ebx
0x16dd4:    e8 ea 5e 00 00                  	call 0x1ccc3 <unknown_1ccc3>
0x16dd9:    eb 18                           	jmp 0x16df3 <function_16df3>
; data inside code section at 0x16ddb -- 0x16def
0x16ddb:    89 c7 89 74 24 04 89 1c  24 e8 39 1f 00 00 89 f8   |...t$...$.9.....|
0x16deb:    89 04 24 e8                                        |..$.            |
; dynamically linked function: _Unwind_Resume at 0x16def -- 0x16df0
; data inside code section at 0x16df0 -- 0x16df3
0x16df0:    ff ff ff                                           |...             |
; function: function_16df3 at 0x16df3 -- 0x16dff
0x16df3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16df6:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16dfd:    74 05                           	je 0x16e04 <function_16e04>
; data inside code section at 0x16dff -- 0x16e00
0x16dff:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16e00 -- 0x16e01
; data inside code section at 0x16e01 -- 0x16e04
0x16e01:    ff ff ff                                           |...             |
; function: function_16e04 at 0x16e04 -- 0x16e0c
0x16e04:    83 c4 3c                        	add esp, 0x3c
0x16e07:    5b                              	pop ebx
0x16e08:    5e                              	pop esi
0x16e09:    5f                              	pop edi
0x16e0a:    5d                              	pop ebp
0x16e0b:    c3                              	ret 
; section: .text._ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_
; function: _ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_ at 0x16e0c -- 0x16e67
0x16e0c:    55                              	push ebp
0x16e0d:    89 e5                           	mov ebp, esp
0x16e0f:    53                              	push ebx
0x16e10:    83 ec 34                        	sub esp, 0x34
0x16e13:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16e16:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16e19:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16e1c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16e1f:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16e22:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16e25:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16e2b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16e2e:    31 c0                           	xor eax, eax
0x16e30:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16e33:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x16e36:    eb 22                           	jmp 0x16e5a <_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_+0x4e>
0x16e38:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x16e3b:    89 04 24                        	mov dword ptr [esp], eax
0x16e3e:    e8 98 6c 01 00                  	call 0x2dadb <unknown_2dadb>
0x16e43:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x16e46:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x16e4a:    89 04 24                        	mov dword ptr [esp], eax
0x16e4d:    e8 4b 6d 01 00                  	call 0x2db9d <unknown_2db9d>
0x16e52:    83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x16e56:    83 45 f0 14                     	add dword ptr [ebp - 0x10], 0x14
0x16e5a:    83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x16e5e:    0f 95 c0                        	setne al
0x16e61:    84 c0                           	test al, al
0x16e63:    75 d3                           	jne 0x16e38 <_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_+0x2c>
0x16e65:    eb 30                           	jmp 0x16e97 <function_16e97>
; data inside code section at 0x16e67 -- 0x16e68
0x16e67:    89                                                 |.               |
; function: function_16e68 at 0x16e68 -- 0x16e69
0x16e68:    c3                              	ret 
; data inside code section at 0x16e69 -- 0x16e6a
0x16e69:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x16e6a -- 0x16e6b
; data inside code section at 0x16e6b -- 0x16e74
0x16e6b:    ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16e74 -- 0x16e75
; data inside code section at 0x16e75 -- 0x16e93
0x16e75:    ff ff ff 89 04 24 e8 fc  ff ff ff 8b 45 f0 89 44   |.....$......E..D|
0x16e85:    24 04 8b 45 e4 89 04 24  e8 b1 1f 01 00 e8         |$..E...$......  |
; dynamically linked function: __cxa_rethrow at 0x16e93 -- 0x16e94
; data inside code section at 0x16e94 -- 0x16e97
0x16e94:    ff ff ff                                           |...             |
; function: function_16e97 at 0x16e97 -- 0x16ea3
0x16e97:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16e9a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16ea1:    74 05                           	je 0x16ea8 <function_16ea8>
; data inside code section at 0x16ea3 -- 0x16ea4
0x16ea3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16ea4 -- 0x16ea5
; data inside code section at 0x16ea5 -- 0x16ea8
0x16ea5:    ff ff ff                                           |...             |
; function: function_16ea8 at 0x16ea8 -- 0x16ea9
; data inside code section at 0x16ea9 -- 0x16eaa
0x16ea9:    c4                                                 |.               |
; function: function_16eaa at 0x16eaa -- 0x16eae
0x16eaa:    34 5b                           	xor al, 0x5b
0x16eac:    5d                              	pop ebp
0x16ead:    c3                              	ret 
; section: .text._ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_
; function: _ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_ at 0x16eae -- 0x16efa
0x16eae:    55                              	push ebp
0x16eaf:    89 e5                           	mov ebp, esp
0x16eb1:    83 ec 38                        	sub esp, 0x38
0x16eb4:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16eb7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16eba:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16ebd:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16ec0:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16ec3:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16ec6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16ecc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16ecf:    31 c0                           	xor eax, eax
0x16ed1:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16ed4:    0f b6 00                        	movzx eax, byte ptr [eax]
0x16ed7:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x16eda:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x16edd:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16ee0:    89 d1                           	mov ecx, edx
0x16ee2:    29 c1                           	sub ecx, eax
0x16ee4:    89 c8                           	mov eax, ecx
0x16ee6:    89 c2                           	mov edx, eax
0x16ee8:    0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x16eec:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x16ef0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16ef4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16ef7:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x16efa -- 0x16efb
0x16efa:    e8                                                 |.               |
; dynamically linked function: memset at 0x16efb -- 0x16efc
; data inside code section at 0x16efc -- 0x16f0c
0x16efc:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x16f0c -- 0x16f0d
; data inside code section at 0x16f0d -- 0x16f0f
0x16f0d:    ff ff                                              |..              |
; function: function_16f0f at 0x16f0f -- 0x16f12
0x16f0f:    ff c9                           	dec ecx
0x16f11:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream9CFlatDataEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream9CFlatDataEvRT_RKT0_li at 0x16f12 -- 0x16f67
0x16f12:    55                              	push ebp
0x16f13:    89 e5                           	mov ebp, esp
0x16f15:    83 ec 38                        	sub esp, 0x38
0x16f18:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16f1b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16f1e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16f21:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16f24:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16f27:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16f2a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x16f2d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x16f30:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16f36:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16f39:    31 c0                           	xor eax, eax
0x16f3b:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x16f3e:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x16f42:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16f45:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x16f49:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16f4c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16f50:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x16f53:    89 04 24                        	mov dword ptr [esp], eax
0x16f56:    e8 ab 8c 01 00                  	call 0x2fc06 <unknown_2fc06>
0x16f5b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16f5e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16f65:    74 05                           	je 0x16f6c <function_16f6c>
; data inside code section at 0x16f67 -- 0x16f68
0x16f67:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16f68 -- 0x16f69
; data inside code section at 0x16f69 -- 0x16f6c
0x16f69:    ff ff ff                                           |...             |
; function: function_16f6c at 0x16f6c -- 0x16f6e
0x16f6c:    c9                              	leave 
0x16f6d:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamEvRT_jii
; function: _Z9SerializeI11CDataStreamEvRT_jii at 0x16f6e -- 0x16fac
0x16f6e:    55                              	push ebp
0x16f6f:    89 e5                           	mov ebp, esp
0x16f71:    83 ec 38                        	sub esp, 0x38
0x16f74:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16f77:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16f7a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16f7d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16f80:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16f83:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16f86:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x16f89:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x16f8c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16f92:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16f95:    31 c0                           	xor eax, eax
0x16f97:    c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0x16f9f:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x16fa2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x16fa6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x16fa9:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x16fac -- 0x16fae
0x16fac:    e8 2b                                              |.+              |
; function: function_16fae at 0x16fae -- 0x16fbd
0x16fae:    4b                              	dec ebx
0x16faf:    00 00                           	add byte ptr [eax], al
0x16fb1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x16fb4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x16fbb:    74 05                           	je 0x16fc2 <function_16fc2>
; data inside code section at 0x16fbd -- 0x16fbe
0x16fbd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16fbe -- 0x16fbf
; data inside code section at 0x16fbf -- 0x16fc2
0x16fbf:    ff ff ff                                           |...             |
; function: function_16fc2 at 0x16fc2 -- 0x16fc4
0x16fc2:    c9                              	leave 
0x16fc3:    c3                              	ret 
; section: .text._ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_
; function: _ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_ at 0x16fc4 -- 0x16ff4
0x16fc4:    55                              	push ebp
0x16fc5:    89 e5                           	mov ebp, esp
0x16fc7:    83 ec 38                        	sub esp, 0x38
0x16fca:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x16fcd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x16fd0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x16fd3:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x16fd6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x16fd9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x16fdc:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x16fe2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x16fe5:    31 c0                           	xor eax, eax
0x16fe7:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x16fea:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x16fed:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x16ff0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0x16ff4 -- 0x16ff6
0x16ff4:    89 54                                              |.T              |
; function: function_16ff6 at 0x16ff6 -- 0x17012
0x16ff6:    24 08                           	and al, 8
0x16ff8:    89 0c 24                        	mov dword ptr [esp], ecx
0x16ffb:    e8 1b 8d 01 00                  	call 0x2fd1b <unknown_2fd1b>
0x17000:    83 ec 04                        	sub esp, 4
0x17003:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17006:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x17009:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x17010:    74 05                           	je 0x17017 <function_17017>
; data inside code section at 0x17012 -- 0x17013
0x17012:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17013 -- 0x17014
; data inside code section at 0x17014 -- 0x17017
0x17014:    ff ff ff                                           |...             |
; function: function_17017 at 0x17017 -- 0x1701b
0x17017:    c9                              	leave 
0x17018:    c2 04 00                        	ret 4
; section: .text._ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
; function: _ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ at 0x1701b -- 0x1708b
0x1701b:    55                              	push ebp
0x1701c:    89 e5                           	mov ebp, esp
0x1701e:    83 ec 68                        	sub esp, 0x68
0x17021:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17024:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x17027:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1702a:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1702d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x17030:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x17033:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x17036:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x17039:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x1703c:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x1703f:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x17042:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x17045:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x17048:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x1704b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17051:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17054:    31 c0                           	xor eax, eax
0x17056:    8d 4d ec                        	lea ecx, [ebp - 0x14]
0x17059:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x1705c:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x1705f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17063:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17067:    89 0c 24                        	mov dword ptr [esp], ecx
0x1706a:    e8 4c 8d 01 00                  	call 0x2fdbb <unknown_2fdbb>
0x1706f:    83 ec 04                        	sub esp, 4
0x17072:    8d 4d e4                        	lea ecx, [ebp - 0x1c]
0x17075:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x17078:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1707b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1707f:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17083:    89 0c 24                        	mov dword ptr [esp], ecx
0x17086:    e8 30 8d 01 00                  	call 0x2fdbb <unknown_2fdbb>
; data inside code section at 0x1708b -- 0x1708c
0x1708b:    83                                                 |.               |
; function: function_1708c at 0x1708c -- 0x17096
0x1708c:    ec                              	in al, dx
0x1708d:    04 8d                           	add al, 0x8d
0x1708f:    4d                              	dec ebp
0x17090:    dc 8b 45 cc 8b 55               	fmul qword ptr [ebx + 0x558bcc45]
; data inside code section at 0x17096 -- 0x17098
0x17096:    d0 89                                              |..              |
; function: function_17098 at 0x17098 -- 0x170f1
0x17098:    44                              	inc esp
0x17099:    24 04                           	and al, 4
0x1709b:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1709f:    89 0c 24                        	mov dword ptr [esp], ecx
0x170a2:    e8 14 8d 01 00                  	call 0x2fdbb <unknown_2fdbb>
0x170a7:    83 ec 04                        	sub esp, 4
0x170aa:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x170ad:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x170b0:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x170b3:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x170b7:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x170bb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x170be:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x170c1:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x170c5:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x170c9:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x170cc:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x170cf:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x170d3:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x170d7:    89 0c 24                        	mov dword ptr [esp], ecx
0x170da:    e8 33 8d 01 00                  	call 0x2fe12 <unknown_2fe12>
0x170df:    83 ec 04                        	sub esp, 4
0x170e2:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x170e5:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x170e8:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x170ef:    74 05                           	je 0x170f6 <function_170f6>
; data inside code section at 0x170f1 -- 0x170f2
0x170f1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x170f2 -- 0x170f3
; data inside code section at 0x170f3 -- 0x170f6
0x170f3:    ff ff ff                                           |...             |
; function: function_170f6 at 0x170f6 -- 0x170fa
0x170f6:    c9                              	leave 
0x170f7:    c2 04 00                        	ret 4
; section: .text._ZNKSt6vectorIbSaIbEE8max_sizeEv
; function: _ZNKSt6vectorIbSaIbEE8max_sizeEv at 0x170fa -- 0x17150
0x170fa:    55                              	push ebp
0x170fb:    89 e5                           	mov ebp, esp
0x170fd:    83 ec 38                        	sub esp, 0x38
0x17100:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17103:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17106:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1710c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1710f:    31 c0                           	xor eax, eax
0x17111:    c7 45 ec e0 ff ff 7f            	mov dword ptr [ebp - 0x14], 0x7fffffe0
0x17118:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1711b:    89 04 24                        	mov dword ptr [esp], eax
0x1711e:    e8 5d 8e 01 00                  	call 0x2ff80 <unknown_2ff80>
0x17123:    89 04 24                        	mov dword ptr [esp], eax
0x17126:    e8 83 8e 01 00                  	call 0x2ffae <unknown_2ffae>
0x1712b:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x1712e:    81 7d f0 ff ff ff 03            	cmp dword ptr [ebp - 0x10], 0x3ffffff
0x17135:    77 08                           	ja 0x1713f <_ZNKSt6vectorIbSaIbEE8max_sizeEv+0x45>
0x17137:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x1713a:    c1 e0 05                        	shl eax, 5
0x1713d:    eb 05                           	jmp 0x17144 <_ZNKSt6vectorIbSaIbEE8max_sizeEv+0x4a>
0x1713f:    b8 e0 ff ff 7f                  	mov eax, 0x7fffffe0
0x17144:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x17147:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1714e:    74 05                           	je 0x17155 <function_17155>
; data inside code section at 0x17150 -- 0x17151
0x17150:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17151 -- 0x17152
; data inside code section at 0x17152 -- 0x17155
0x17152:    ff ff ff                                           |...             |
; function: function_17155 at 0x17155 -- 0x17157
0x17155:    c9                              	leave 
0x17156:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv
; function: _ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv at 0x17158 -- 0x17190
0x17158:    55                              	push ebp
0x17159:    89 e5                           	mov ebp, esp
0x1715b:    83 ec 38                        	sub esp, 0x38
0x1715e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17161:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17164:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x17167:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1716a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1716d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x17170:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17176:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17179:    31 c0                           	xor eax, eax
0x1717b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1717e:    89 04 24                        	mov dword ptr [esp], eax
0x17181:    e8 86 8e 01 00                  	call 0x3000c <unknown_3000c>
0x17186:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x17189:    0f 92 c0                        	setb al
0x1718c:    84 c0                           	test al, al
0x1718e:    74 05                           	je 0x17195 <function_17195>
; data inside code section at 0x17190 -- 0x17191
0x17190:    e8                                                 |.               |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x17191 -- 0x17192
; data inside code section at 0x17192 -- 0x17195
0x17192:    ff ff ff                                           |...             |
; function: function_17195 at 0x17195 -- 0x1719e
0x17195:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17198:    c1 e0 02                        	shl eax, 2
0x1719b:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1719e -- 0x1719f
0x1719e:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1719f -- 0x171a0
; data inside code section at 0x171a0 -- 0x171b0
0x171a0:    ff ff ff 8b 55 f4 65 33  15 14 00 00 00 74 05 e8   |....U.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x171b0 -- 0x171b1
; data inside code section at 0x171b1 -- 0x171b3
0x171b1:    ff ff                                              |..              |
; function: function_171b3 at 0x171b3 -- 0x171b6
0x171b3:    ff c9                           	dec ecx
0x171b5:    c3                              	ret 
; section: .text._ZSt4copyIPmS0_ET0_T_S2_S1_
; function: _ZSt4copyIPmS0_ET0_T_S2_S1_ at 0x171b6 -- 0x171c9
0x171b6:    55                              	push ebp
0x171b7:    89 e5                           	mov ebp, esp
0x171b9:    53                              	push ebx
0x171ba:    83 ec 34                        	sub esp, 0x34
0x171bd:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x171c0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x171c3:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x171c6:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x171c9 -- 0x171ca
0x171c9:    8b                                                 |.               |
; function: function_171ca at 0x171ca -- 0x171f5
0x171ca:    45                              	inc ebp
0x171cb:    10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0x171d1:    14 00                           	adc al, 0
0x171d3:    00 00                           	add byte ptr [eax], al
0x171d5:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x171d8:    31 c0                           	xor eax, eax
0x171da:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x171dd:    89 04 24                        	mov dword ptr [esp], eax
0x171e0:    e8 b4 8e 01 00                  	call 0x30099 <unknown_30099>
0x171e5:    89 c3                           	mov ebx, eax
0x171e7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x171ea:    89 04 24                        	mov dword ptr [esp], eax
0x171ed:    e8 a7 8e 01 00                  	call 0x30099 <unknown_30099>
0x171f2:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
; data inside code section at 0x171f5 -- 0x171f7
0x171f5:    89 54                                              |.T              |
; function: function_171f7 at 0x171f7 -- 0x1720f
0x171f7:    24 08                           	and al, 8
0x171f9:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x171fd:    89 04 24                        	mov dword ptr [esp], eax
0x17200:    e8 c9 8e 01 00                  	call 0x300ce <unknown_300ce>
0x17205:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x17208:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
; data inside code section at 0x1720f -- 0x17210
0x1720f:    74                                                 |t               |
; function: function_17210 at 0x17210 -- 0x17211
; data inside code section at 0x17211 -- 0x17212
0x17211:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17212 -- 0x17213
; data inside code section at 0x17213 -- 0x17215
0x17213:    ff ff                                              |..              |
; function: function_17215 at 0x17215 -- 0x1721c
0x17215:    ff 83 c4 34 5b 5d               	inc dword ptr [ebx + 0x5d5b34c4]
0x1721b:    c3                              	ret 
; section: .text._ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
; function: _ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ at 0x1721c -- 0x17276
0x1721c:    55                              	push ebp
0x1721d:    89 e5                           	mov ebp, esp
0x1721f:    83 ec 68                        	sub esp, 0x68
0x17222:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17225:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x17228:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1722b:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1722e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x17231:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x17234:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x17237:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x1723a:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x1723d:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x17240:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x17243:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x17246:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x17249:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x1724c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17252:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17255:    31 c0                           	xor eax, eax
0x17257:    8d 4d ec                        	lea ecx, [ebp - 0x14]
0x1725a:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1725d:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x17260:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17264:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17268:    89 0c 24                        	mov dword ptr [esp], ecx
0x1726b:    e8 36 8f 01 00                  	call 0x301a6 <unknown_301a6>
0x17270:    83 ec 04                        	sub esp, 4
0x17273:    8d 4d e4                        	lea ecx, [ebp - 0x1c]
; data inside code section at 0x17276 -- 0x17278
0x17276:    8b 45                                              |.E              |
; function: function_17278 at 0x17278 -- 0x172d6
0x17278:    cc                              	int3 
0x17279:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x1727c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17280:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17284:    89 0c 24                        	mov dword ptr [esp], ecx
0x17287:    e8 1a 8f 01 00                  	call 0x301a6 <unknown_301a6>
0x1728c:    83 ec 04                        	sub esp, 4
0x1728f:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x17292:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x17295:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x17298:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x1729c:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x172a0:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x172a3:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x172a6:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x172aa:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x172ae:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x172b1:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x172b4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x172b8:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x172bc:    89 0c 24                        	mov dword ptr [esp], ecx
0x172bf:    e8 39 8f 01 00                  	call 0x301fd <unknown_301fd>
0x172c4:    83 ec 04                        	sub esp, 4
0x172c7:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x172ca:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x172cd:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x172d4:    74 05                           	je 0x172db <function_172db>
; data inside code section at 0x172d6 -- 0x172d7
0x172d6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x172d7 -- 0x172d8
; data inside code section at 0x172d8 -- 0x172db
0x172d8:    ff ff ff                                           |...             |
; function: function_172db at 0x172db -- 0x172df
0x172db:    c9                              	leave 
0x172dc:    c2 04 00                        	ret 4
; section: .text._ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
; function: _ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ at 0x172df -- 0x172fd
0x172df:    55                              	push ebp
0x172e0:    89 e5                           	mov ebp, esp
0x172e2:    83 ec 68                        	sub esp, 0x68
0x172e5:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x172e8:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x172eb:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x172ee:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x172f1:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x172f4:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x172f7:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x172fa:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
; data inside code section at 0x172fd -- 0x172fe
0x172fd:    8b                                                 |.               |
; function: function_172fe at 0x172fe -- 0x173b5
0x172fe:    45                              	inc ebp
0x172ff:    18 89 45 c8 8b 45               	sbb byte ptr [ecx + 0x458bc845], cl
0x17305:    1c 89                           	sbb al, 0x89
0x17307:    45                              	inc ebp
0x17308:    bc 8b 45 20 89                  	mov esp, 0x8920458b
0x1730d:    45                              	inc ebp
0x1730e:    c0 65 a1 14                     	shl byte ptr [ebp - 0x5f], 0x14
0x17312:    00 00                           	add byte ptr [eax], al
0x17314:    00 89 45 f4 31 c0               	add byte ptr [ecx - 0x3fce0bbb], cl
0x1731a:    8d 4d ec                        	lea ecx, [ebp - 0x14]
0x1731d:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x17320:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x17323:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17327:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1732b:    89 0c 24                        	mov dword ptr [esp], ecx
0x1732e:    e8 4c 8d 01 00                  	call 0x3007f <unknown_3007f>
0x17333:    83 ec 04                        	sub esp, 4
0x17336:    8d 4d e4                        	lea ecx, [ebp - 0x1c]
0x17339:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1733c:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1733f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17343:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17347:    89 0c 24                        	mov dword ptr [esp], ecx
0x1734a:    e8 30 8d 01 00                  	call 0x3007f <unknown_3007f>
0x1734f:    83 ec 04                        	sub esp, 4
0x17352:    8d 4d dc                        	lea ecx, [ebp - 0x24]
0x17355:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x17358:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x1735b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1735f:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17363:    89 0c 24                        	mov dword ptr [esp], ecx
0x17366:    e8 14 8d 01 00                  	call 0x3007f <unknown_3007f>
0x1736b:    83 ec 04                        	sub esp, 4
0x1736e:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x17371:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x17374:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x17377:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x1737b:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x1737f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17382:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x17385:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x17389:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x1738d:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x17390:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x17393:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17397:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1739b:    89 0c 24                        	mov dword ptr [esp], ecx
0x1739e:    e8 fc 8f 01 00                  	call 0x3039f <unknown_3039f>
0x173a3:    83 ec 04                        	sub esp, 4
0x173a6:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x173a9:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x173ac:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x173b3:    74 05                           	je 0x173ba <function_173ba>
; data inside code section at 0x173b5 -- 0x173b6
0x173b5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x173b6 -- 0x173b7
; data inside code section at 0x173b7 -- 0x173ba
0x173b7:    ff ff ff                                           |...             |
; function: function_173ba at 0x173ba -- 0x173be
0x173ba:    c9                              	leave 
0x173bb:    c2 04 00                        	ret 4
; section: .text._ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj
; function: _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj at 0x173be -- 0x173e7
0x173be:    55                              	push ebp
0x173bf:    89 e5                           	mov ebp, esp
0x173c1:    83 ec 38                        	sub esp, 0x38
0x173c4:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x173c7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x173ca:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x173cd:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x173d0:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x173d3:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x173d6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x173dc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x173df:    31 c0                           	xor eax, eax
0x173e1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x173e4:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x173e7 -- 0x173e8
0x173e7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x173e8 -- 0x173e9
; data inside code section at 0x173e9 -- 0x173f2
0x173e9:    ff ff ff 8b 45 f4 65 33  05                        |....E.e3.       |
; function: function_173f2 at 0x173f2 -- 0x173f8
0x173f2:    14 00                           	adc al, 0
0x173f4:    00 00                           	add byte ptr [eax], al
0x173f6:    74 05                           	je 0x173fd <function_173fd>
; data inside code section at 0x173f8 -- 0x173f9
0x173f8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x173f9 -- 0x173fa
; data inside code section at 0x173fa -- 0x173fd
0x173fa:    ff ff ff                                           |...             |
; function: function_173fd at 0x173fd -- 0x173ff
0x173fd:    c9                              	leave 
0x173fe:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream7CVarIntIiEEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream7CVarIntIiEEvRT_RKT0_li at 0x173ff -- 0x17408
0x173ff:    55                              	push ebp
0x17400:    89 e5                           	mov ebp, esp
0x17402:    83 ec 38                        	sub esp, 0x38
0x17405:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; function: function_17408 at 0x17408 -- 0x17454
0x17408:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1740b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1740e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x17411:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x17414:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x17417:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1741a:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1741d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17423:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17426:    31 c0                           	xor eax, eax
0x17428:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1742b:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1742f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x17432:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17436:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17439:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1743d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17440:    89 04 24                        	mov dword ptr [esp], eax
0x17443:    e8 07 91 01 00                  	call 0x3054f <unknown_3054f>
0x17448:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1744b:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17452:    74 05                           	je 0x17459 <function_17459>
; data inside code section at 0x17454 -- 0x17455
0x17454:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17455 -- 0x17456
; data inside code section at 0x17456 -- 0x17459
0x17456:    ff ff ff                                           |...             |
; function: function_17459 at 0x17459 -- 0x1745b
0x17459:    c9                              	leave 
0x1745a:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream7CVarIntIjEEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream7CVarIntIjEEvRT_RKT0_li at 0x1745b -- 0x17464
0x1745b:    55                              	push ebp
0x1745c:    89 e5                           	mov ebp, esp
0x1745e:    83 ec 38                        	sub esp, 0x38
0x17461:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x17464 -- 0x17466
0x17464:    89 45                                              |.E              |
; function: function_17466 at 0x17466 -- 0x174b0
0x17466:    e4 8b                           	in al, 0x8b
0x17468:    45                              	inc ebp
0x17469:    0c 89                           	or al, 0x89
0x1746b:    45                              	inc ebp
0x1746c:    e0 8b                           	loopne 0x173f9 <__stack_chk_fail>
0x1746e:    45                              	inc ebp
0x1746f:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x17475:    14 89                           	adc al, 0x89
0x17477:    45                              	inc ebp
0x17478:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x1747b:    14 00                           	adc al, 0
0x1747d:    00 00                           	add byte ptr [eax], al
0x1747f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17482:    31 c0                           	xor eax, eax
0x17484:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x17487:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1748b:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1748e:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17492:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17495:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17499:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1749c:    89 04 24                        	mov dword ptr [esp], eax
0x1749f:    e8 59 91 01 00                  	call 0x305fd <unknown_305fd>
0x174a4:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x174a7:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x174ae:    74 05                           	je 0x174b5 <function_174b5>
; data inside code section at 0x174b0 -- 0x174b1
0x174b0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x174b1 -- 0x174b2
; data inside code section at 0x174b2 -- 0x174b5
0x174b2:    ff ff ff                                           |...             |
; function: function_174b5 at 0x174b5 -- 0x174b7
0x174b5:    c9                              	leave 
0x174b6:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamEvRT_hii
; function: _Z9SerializeI11CDataStreamEvRT_hii at 0x174b7 -- 0x17506
0x174b7:    55                              	push ebp
0x174b8:    89 e5                           	mov ebp, esp
0x174ba:    83 ec 38                        	sub esp, 0x38
0x174bd:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x174c0:    8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x174c3:    89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x174c6:    88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x174c9:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x174cc:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x174cf:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x174d2:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x174d5:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x174db:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x174de:    31 c0                           	xor eax, eax
0x174e0:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x174e8:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x174eb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x174ef:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x174f2:    89 04 24                        	mov dword ptr [esp], eax
0x174f5:    e8 2b 4b 00 00                  	call 0x1c025 <unknown_1c025>
0x174fa:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x174fd:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17504:    74 05                           	je 0x1750b <function_1750b>
; data inside code section at 0x17506 -- 0x17507
0x17506:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17507 -- 0x17508
; data inside code section at 0x17508 -- 0x1750b
0x17508:    ff ff ff                                           |...             |
; function: function_1750b at 0x1750b -- 0x1750d
0x1750b:    c9                              	leave 
0x1750c:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream16CTxOutCompressorEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream16CTxOutCompressorEvRT_RKT0_li at 0x1750d -- 0x17510
0x1750d:    55                              	push ebp
0x1750e:    89 e5                           	mov ebp, esp
; function: function_17510 at 0x17510 -- 0x17562
0x17510:    83 ec 38                        	sub esp, 0x38
0x17513:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17516:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17519:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1751c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1751f:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x17522:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x17525:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x17528:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1752b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17531:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17534:    31 c0                           	xor eax, eax
0x17536:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x17539:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1753d:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x17540:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17544:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17547:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1754b:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1754e:    89 04 24                        	mov dword ptr [esp], eax
0x17551:    e8 ab 91 01 00                  	call 0x30701 <unknown_30701>
0x17556:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17559:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17560:    74 05                           	je 0x17567 <function_17567>
; data inside code section at 0x17562 -- 0x17563
0x17562:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17563 -- 0x17564
; data inside code section at 0x17564 -- 0x17567
0x17564:    ff ff ff                                           |...             |
; function: function_17567 at 0x17567 -- 0x17569
0x17567:    c9                              	leave 
0x17568:    c3                              	ret 
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E at 0x17569 -- 0x17592
0x17569:    55                              	push ebp
0x1756a:    89 e5                           	mov ebp, esp
0x1756c:    83 ec 28                        	sub esp, 0x28
0x1756f:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17572:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17575:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1757b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1757e:    31 c0                           	xor eax, eax
0x17580:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17583:    83 c0 10                        	add eax, 0x10
0x17586:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x17589:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x17590:    74 05                           	je 0x17597 <function_17597>
; data inside code section at 0x17592 -- 0x17593
0x17592:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17593 -- 0x17594
; data inside code section at 0x17594 -- 0x17597
0x17594:    ff ff ff                                           |...             |
; function: function_17597 at 0x17597 -- 0x17599
0x17597:    c9                              	leave 
0x17598:    c3                              	ret 
; section: .text._ZNK15CDiskBlockIndex9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK15CDiskBlockIndex9SerializeI11CDataStreamEEvRT_ii at 0x1759a -- 0x175ec
0x1759a:    55                              	push ebp
0x1759b:    89 e5                           	mov ebp, esp
0x1759d:    57                              	push edi
0x1759e:    56                              	push esi
0x1759f:    53                              	push ebx
0x175a0:    83 ec 7c                        	sub esp, 0x7c
0x175a3:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x175a6:    89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x175a9:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x175ac:    89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x175af:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x175b2:    89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x175b5:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x175b8:    89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x175bb:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x175c1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x175c4:    31 c0                           	xor eax, eax
0x175c6:    c6 45 e1 00                     	mov byte ptr [ebp - 0x1f], 0
0x175ca:    c6 45 e2 01                     	mov byte ptr [ebp - 0x1e], 1
0x175ce:    c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x175d2:    c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x175d9:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x175dc:    83 e0 04                        	and eax, 4
0x175df:    85 c0                           	test eax, eax
0x175e1:    75 50                           	jne 0x17633
0x175e3:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x175e6:    8d 45 a8                        	lea eax, [ebp - 0x58]
0x175e9:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x175ec -- 0x175ed
0x175ec:    e8                                                 |.               |
; function: function_175ed at 0x175ed -- 0x17621
0x175ed:    54                              	push esp
0x175ee:    98                              	cwde 
0x175ef:    00 00                           	add byte ptr [eax], al
0x175f1:    8d 55 c0                        	lea edx, [ebp - 0x40]
0x175f4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x175f8:    89 14 24                        	mov dword ptr [esp], edx
0x175fb:    e8 72 98 00 00                  	call 0x20e72 <unknown_20e72>
0x17600:    83 ec 04                        	sub esp, 4
0x17603:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x17606:    89 04 24                        	mov dword ptr [esp], eax
0x17609:    e8 ab 98 00 00                  	call 0x20eb9 <unknown_20eb9>
0x1760e:    89 c2                           	mov edx, eax
0x17610:    89 f1                           	mov ecx, esi
0x17612:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x17616:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x1761a:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x1761d:    89 44 24 08                     	mov dword ptr [esp + 8], eax
; data inside code section at 0x17621 -- 0x17622
0x17621:    89                                                 |.               |
; function: function_17622 at 0x17622 -- 0x176a1
0x17622:    54                              	push esp
0x17623:    24 04                           	and al, 4
0x17625:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17628:    89 04 24                        	mov dword ptr [esp], eax
0x1762b:    e8 64 92 01 00                  	call 0x30894 <unknown_30894>
0x17630:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17633:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x17636:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17639:    83 c0 08                        	add eax, 8
0x1763c:    89 04 24                        	mov dword ptr [esp], eax
0x1763f:    e8 01 98 00 00                  	call 0x20e45 <unknown_20e45>
0x17644:    8d 55 c4                        	lea edx, [ebp - 0x3c]
0x17647:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1764b:    89 14 24                        	mov dword ptr [esp], edx
0x1764e:    e8 1f 98 00 00                  	call 0x20e72 <unknown_20e72>
0x17653:    83 ec 04                        	sub esp, 4
0x17656:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x17659:    89 04 24                        	mov dword ptr [esp], eax
0x1765c:    e8 58 98 00 00                  	call 0x20eb9 <unknown_20eb9>
0x17661:    89 c2                           	mov edx, eax
0x17663:    89 f8                           	mov eax, edi
0x17665:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x17669:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x1766d:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x17670:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17674:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17678:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x1767b:    89 04 24                        	mov dword ptr [esp], eax
0x1767e:    e8 11 92 01 00                  	call 0x30894 <unknown_30894>
0x17683:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17686:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x17689:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1768c:    83 c0 40                        	add eax, 0x40
0x1768f:    89 04 24                        	mov dword ptr [esp], eax
0x17692:    e8 7e 93 00 00                  	call 0x20a15 <unknown_20a15>
0x17697:    8d 55 c8                        	lea edx, [ebp - 0x38]
0x1769a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1769e:    89 14 24                        	mov dword ptr [esp], edx
; data inside code section at 0x176a1 -- 0x176a4
0x176a1:    e8 9c 93                                           |...             |
; function: function_176a4 at 0x176a4 -- 0x177ec
0x176a4:    00 00                           	add byte ptr [eax], al
0x176a6:    83 ec 04                        	sub esp, 4
0x176a9:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x176ac:    89 04 24                        	mov dword ptr [esp], eax
0x176af:    e8 d5 93 00 00                  	call 0x20a89 <unknown_20a89>
0x176b4:    89 c2                           	mov edx, eax
0x176b6:    0f b6 4d 9d                     	movzx ecx, byte ptr [ebp - 0x63]
0x176ba:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x176be:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x176c2:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x176c5:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x176c9:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x176cd:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x176d0:    89 04 24                        	mov dword ptr [esp], eax
0x176d3:    e8 a6 85 01 00                  	call 0x2fc7e <unknown_2fc7e>
0x176d8:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x176db:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x176de:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x176e1:    83 c0 38                        	add eax, 0x38
0x176e4:    89 04 24                        	mov dword ptr [esp], eax
0x176e7:    e8 29 93 00 00                  	call 0x20a15 <unknown_20a15>
0x176ec:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x176ef:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x176f3:    89 14 24                        	mov dword ptr [esp], edx
0x176f6:    e8 47 93 00 00                  	call 0x20a42 <unknown_20a42>
0x176fb:    83 ec 04                        	sub esp, 4
0x176fe:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x17701:    89 04 24                        	mov dword ptr [esp], eax
0x17704:    e8 80 93 00 00                  	call 0x20a89 <unknown_20a89>
0x17709:    89 c2                           	mov edx, eax
0x1770b:    0f b6 45 9e                     	movzx eax, byte ptr [ebp - 0x62]
0x1770f:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x17713:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x17717:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x1771a:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1771e:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17722:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17725:    89 04 24                        	mov dword ptr [esp], eax
0x17728:    e8 51 85 01 00                  	call 0x2fc7e <unknown_2fc7e>
0x1772d:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17730:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17733:    8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x17736:    83 e0 18                        	and eax, 0x18
0x17739:    85 c0                           	test eax, eax
0x1773b:    74 55                           	je 0x17792 <function_176a4+0xee>
0x1773d:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x17740:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17743:    83 c0 0c                        	add eax, 0xc
0x17746:    89 04 24                        	mov dword ptr [esp], eax
0x17749:    e8 f7 96 00 00                  	call 0x20e45 <unknown_20e45>
0x1774e:    8d 55 d0                        	lea edx, [ebp - 0x30]
0x17751:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17755:    89 14 24                        	mov dword ptr [esp], edx
0x17758:    e8 15 97 00 00                  	call 0x20e72 <unknown_20e72>
0x1775d:    83 ec 04                        	sub esp, 4
0x17760:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x17763:    89 04 24                        	mov dword ptr [esp], eax
0x17766:    e8 4e 97 00 00                  	call 0x20eb9 <unknown_20eb9>
0x1776b:    89 c2                           	mov edx, eax
0x1776d:    0f b6 4d 9f                     	movzx ecx, byte ptr [ebp - 0x61]
0x17771:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x17775:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x17779:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x1777c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17780:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17784:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17787:    89 04 24                        	mov dword ptr [esp], eax
0x1778a:    e8 05 91 01 00                  	call 0x30894 <unknown_30894>
0x1778f:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17792:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17795:    8b 40 40                        	mov eax, dword ptr [eax + 0x40]
0x17798:    83 e0 08                        	and eax, 8
0x1779b:    85 c0                           	test eax, eax
0x1779d:    74 55                           	je 0x177f4
0x1779f:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x177a2:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x177a5:    83 c0 10                        	add eax, 0x10
0x177a8:    89 04 24                        	mov dword ptr [esp], eax
0x177ab:    e8 65 92 00 00                  	call 0x20a15 <unknown_20a15>
0x177b0:    8d 55 d4                        	lea edx, [ebp - 0x2c]
0x177b3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x177b7:    89 14 24                        	mov dword ptr [esp], edx
0x177ba:    e8 83 92 00 00                  	call 0x20a42 <unknown_20a42>
0x177bf:    83 ec 04                        	sub esp, 4
0x177c2:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x177c5:    89 04 24                        	mov dword ptr [esp], eax
0x177c8:    e8 bc 92 00 00                  	call 0x20a89 <unknown_20a89>
0x177cd:    89 c2                           	mov edx, eax
0x177cf:    0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x177d3:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x177d7:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x177db:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x177de:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x177e2:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x177e6:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x177e9:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x177ec -- 0x177f0
0x177ec:    e8 8d 84 01                                        |....            |
; function: function_177f0 at 0x177f0 -- 0x17976
0x177f0:    00 01                           	add byte ptr [ecx], al
0x177f2:    45                              	inc ebp
0x177f3:    dc 8b 45 b4 8b 40               	fmul qword ptr [ebx + 0x408bb445]
0x177f9:    40                              	inc eax
0x177fa:    83 e0 10                        	and eax, 0x10
0x177fd:    85 c0                           	test eax, eax
0x177ff:    74 55                           	je 0x17856 <function_177f0+0x66>
0x17801:    8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x17804:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17807:    83 c0 14                        	add eax, 0x14
0x1780a:    89 04 24                        	mov dword ptr [esp], eax
0x1780d:    e8 03 92 00 00                  	call 0x20a15 <unknown_20a15>
0x17812:    8d 55 d8                        	lea edx, [ebp - 0x28]
0x17815:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17819:    89 14 24                        	mov dword ptr [esp], edx
0x1781c:    e8 21 92 00 00                  	call 0x20a42 <unknown_20a42>
0x17821:    83 ec 04                        	sub esp, 4
0x17824:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x17827:    89 04 24                        	mov dword ptr [esp], eax
0x1782a:    e8 5a 92 00 00                  	call 0x20a89 <unknown_20a89>
0x1782f:    89 c2                           	mov edx, eax
0x17831:    0f b6 4d a1                     	movzx ecx, byte ptr [ebp - 0x5f]
0x17835:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x17839:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x1783d:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x17840:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17844:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17848:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x1784b:    89 04 24                        	mov dword ptr [esp], eax
0x1784e:    e8 2b 84 01 00                  	call 0x2fc7e <unknown_2fc7e>
0x17853:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17856:    8b 4d a8                        	mov ecx, dword ptr [ebp - 0x58]
0x17859:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1785c:    8d 50 44                        	lea edx, [eax + 0x44]
0x1785f:    0f b6 45 a2                     	movzx eax, byte ptr [ebp - 0x5e]
0x17863:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x17867:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x1786b:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x1786e:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17872:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17876:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17879:    89 04 24                        	mov dword ptr [esp], eax
0x1787c:    e8 7b 90 01 00                  	call 0x308fc <unknown_308fc>
0x17881:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17884:    8b 4d a8                        	mov ecx, dword ptr [ebp - 0x58]
0x17887:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x1788a:    8d 50 74                        	lea edx, [eax + 0x74]
0x1788d:    0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x17891:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x17895:    89 4c 24 0c                     	mov dword ptr [esp + 0xc], ecx
0x17899:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x1789c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x178a0:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x178a4:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x178a7:    89 04 24                        	mov dword ptr [esp], eax
0x178aa:    e8 b7 90 01 00                  	call 0x30966 <unknown_30966>
0x178af:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x178b2:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x178b5:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x178b8:    83 c2 48                        	add edx, 0x48
0x178bb:    0f b6 4d a4                     	movzx ecx, byte ptr [ebp - 0x5c]
0x178bf:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x178c3:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x178c7:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x178ca:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x178ce:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x178d2:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x178d5:    89 04 24                        	mov dword ptr [esp], eax
0x178d8:    e8 89 90 01 00                  	call 0x30966 <unknown_30966>
0x178dd:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x178e0:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x178e3:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x178e6:    83 c2 68                        	add edx, 0x68
0x178e9:    0f b6 4d a5                     	movzx ecx, byte ptr [ebp - 0x5b]
0x178ed:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x178f1:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x178f5:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x178f8:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x178fc:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17900:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17903:    89 04 24                        	mov dword ptr [esp], eax
0x17906:    e8 b7 47 01 00                  	call 0x2c0c2 <unknown_2c0c2>
0x1790b:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1790e:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x17911:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x17914:    83 c2 6c                        	add edx, 0x6c
0x17917:    0f b6 4d a6                     	movzx ecx, byte ptr [ebp - 0x5a]
0x1791b:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x1791f:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x17923:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x17926:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1792a:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1792e:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17931:    89 04 24                        	mov dword ptr [esp], eax
0x17934:    e8 89 47 01 00                  	call 0x2c0c2 <unknown_2c0c2>
0x17939:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1793c:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x1793f:    8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x17942:    83 c2 70                        	add edx, 0x70
0x17945:    0f b6 4d a7                     	movzx ecx, byte ptr [ebp - 0x59]
0x17949:    88 4c 24 10                     	mov byte ptr [esp + 0x10], cl
0x1794d:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x17951:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x17954:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17958:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1795c:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x1795f:    89 04 24                        	mov dword ptr [esp], eax
0x17962:    e8 5b 47 01 00                  	call 0x2c0c2 <unknown_2c0c2>
0x17967:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x1796a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1796d:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17974:    74 05                           	je 0x1797b <function_1797b>
; data inside code section at 0x17976 -- 0x17977
0x17976:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17977 -- 0x17978
; data inside code section at 0x17978 -- 0x1797b
0x17978:    ff ff ff                                           |...             |
; function: function_1797b at 0x1797b -- 0x17983
0x1797b:    8d 65 f4                        	lea esp, [ebp - 0xc]
0x1797e:    5b                              	pop ebx
0x1797f:    5e                              	pop esi
0x17980:    5f                              	pop edi
0x17981:    5d                              	pop ebp
0x17982:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_Eii
; function: _Z11UnserializeI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_Eii at 0x17983 -- 0x179df
0x17983:    55                              	push ebp
0x17984:    89 e5                           	mov ebp, esp
0x17986:    83 ec 48                        	sub esp, 0x48
0x17989:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1798c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1798f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x17992:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x17995:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x17998:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1799b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1799e:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x179a1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x179a7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x179aa:    31 c0                           	xor eax, eax
0x179ac:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x179af:    89 44 24 10                     	mov dword ptr [esp + 0x10], eax
0x179b3:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x179b6:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x179ba:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x179bd:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x179c1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x179c4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x179c8:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x179cb:    89 04 24                        	mov dword ptr [esp], eax
0x179ce:    e8 e4 93 01 00                  	call 0x30db7 <unknown_30db7>
0x179d3:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x179d6:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x179dd:    74 05                           	je 0x179e4 <function_179e4>
; data inside code section at 0x179df -- 0x179e0
0x179df:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x179e0 -- 0x179e1
; data inside code section at 0x179e1 -- 0x179e4
0x179e1:    ff ff ff                                           |...             |
; function: function_179e4 at 0x179e4 -- 0x179e6
0x179e4:    c9                              	leave 
0x179e5:    c3                              	ret 
; section: .text._ZNK7CBigNum9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK7CBigNum9SerializeI11CDataStreamEEvRT_ii at 0x179e6 -- 0x179f6
0x179e6:    55                              	push ebp
0x179e7:    89 e5                           	mov ebp, esp
0x179e9:    53                              	push ebx
0x179ea:    83 ec 34                        	sub esp, 0x34
0x179ed:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x179f0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x179f3:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; function: function_179f6 at 0x179f6 -- 0x17a45
0x179f6:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x179f9:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x179fc:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x179ff:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x17a02:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x17a05:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17a0b:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17a0e:    31 c0                           	xor eax, eax
0x17a10:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x17a13:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x17a16:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17a1a:    89 04 24                        	mov dword ptr [esp], eax
0x17a1d:    e8 b0 57 00 00                  	call 0x1d1d2 <unknown_1d1d2>
0x17a22:    83 ec 04                        	sub esp, 4
0x17a25:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x17a28:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x17a2c:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x17a2f:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17a33:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x17a36:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17a3a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17a3d:    89 04 24                        	mov dword ptr [esp], eax
0x17a40:    e8 c9 94 01 00                  	call 0x30f0e <unknown_30f0e>
; function: function_17a45 at 0x17a45 -- 0x17a5e
0x17a45:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x17a48:    89 04 24                        	mov dword ptr [esp], eax
0x17a4b:    e8 e4 82 00 00                  	call 0x1fd34 <unknown_1fd34>
0x17a50:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17a53:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17a5a:    74 1e                           	je 0x17a7a <function_17a7a>
0x17a5c:    eb 17                           	jmp 0x17a75 <function_17a75>
; data inside code section at 0x17a5e -- 0x17a5f
0x17a5e:    89                                                 |.               |
; function: function_17a5f at 0x17a5f -- 0x17a60
0x17a5f:    c3                              	ret 
; data inside code section at 0x17a60 -- 0x17a71
0x17a60:    8d 45 e8 89 04 24 e8 c9  82 00 00 89 d8 89 04 24   |.E...$.........$|
0x17a70:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x17a71 -- 0x17a72
; data inside code section at 0x17a72 -- 0x17a75
0x17a72:    ff ff ff                                           |...             |
; function: function_17a75 at 0x17a75 -- 0x17a76
; dynamically linked function: __stack_chk_fail at 0x17a76 -- 0x17a77
; data inside code section at 0x17a77 -- 0x17a7a
0x17a77:    ff ff ff                                           |...             |
; function: function_17a7a at 0x17a7a -- 0x17a7f
0x17a7a:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x17a7d:    c9                              	leave 
0x17a7e:    c3                              	ret 
; section: .text._ZNK14CBlockFileInfo9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK14CBlockFileInfo9SerializeI11CDataStreamEEvRT_ii at 0x17a80 -- 0x17a95
0x17a80:    55                              	push ebp
0x17a81:    89 e5                           	mov ebp, esp
0x17a83:    57                              	push edi
0x17a84:    56                              	push esi
0x17a85:    53                              	push ebx
0x17a86:    83 ec 7c                        	sub esp, 0x7c
0x17a89:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17a8c:    89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x17a8f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x17a92:    89 45 b0                        	mov dword ptr [ebp - 0x50], eax
; data inside code section at 0x17a95 -- 0x17a96
0x17a95:    8b                                                 |.               |
; function: function_17a96 at 0x17a96 -- 0x17d09
0x17a96:    45                              	inc ebp
0x17a97:    10 89 45 ac 8b 45               	adc byte ptr [ecx + 0x458bac45], cl
0x17a9d:    14 89                           	adc al, 0x89
0x17a9f:    45                              	inc ebp
0x17aa0:    a8 65                           	test al, 0x65
0x17aa2:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x17aa7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17aaa:    31 c0                           	xor eax, eax
0x17aac:    c6 45 e1 00                     	mov byte ptr [ebp - 0x1f], 0
0x17ab0:    c6 45 e2 01                     	mov byte ptr [ebp - 0x1e], 1
0x17ab4:    c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x17ab8:    c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x17abf:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17ac2:    89 04 24                        	mov dword ptr [esp], eax
0x17ac5:    e8 31 94 00 00                  	call 0x20efb <unknown_20efb>
0x17aca:    8d 55 c0                        	lea edx, [ebp - 0x40]
0x17acd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17ad1:    89 14 24                        	mov dword ptr [esp], edx
0x17ad4:    e8 4f 94 00 00                  	call 0x20f28 <unknown_20f28>
0x17ad9:    83 ec 04                        	sub esp, 4
0x17adc:    8d 45 c0                        	lea eax, [ebp - 0x40]
0x17adf:    89 04 24                        	mov dword ptr [esp], eax
0x17ae2:    e8 88 94 00 00                  	call 0x20f6f <unknown_20f6f>
0x17ae7:    89 c2                           	mov edx, eax
0x17ae9:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x17aed:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x17af0:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x17af4:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x17af7:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17afb:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17aff:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17b02:    89 04 24                        	mov dword ptr [esp], eax
0x17b05:    e8 5a 86 01 00                  	call 0x30164 <unknown_30164>
0x17b0a:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17b0d:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17b10:    83 c0 04                        	add eax, 4
0x17b13:    89 04 24                        	mov dword ptr [esp], eax
0x17b16:    e8 e0 93 00 00                  	call 0x20efb <unknown_20efb>
0x17b1b:    8d 55 c4                        	lea edx, [ebp - 0x3c]
0x17b1e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17b22:    89 14 24                        	mov dword ptr [esp], edx
0x17b25:    e8 fe 93 00 00                  	call 0x20f28 <unknown_20f28>
0x17b2a:    83 ec 04                        	sub esp, 4
0x17b2d:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x17b30:    89 04 24                        	mov dword ptr [esp], eax
0x17b33:    e8 37 94 00 00                  	call 0x20f6f <unknown_20f6f>
0x17b38:    89 c2                           	mov edx, eax
0x17b3a:    89 f0                           	mov eax, esi
0x17b3c:    88 44 24 10                     	mov byte ptr [esp + 0x10], al
0x17b40:    8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x17b43:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x17b47:    8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x17b4a:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x17b4e:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17b52:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17b55:    89 04 24                        	mov dword ptr [esp], eax
0x17b58:    e8 07 86 01 00                  	call 0x30164 <unknown_30164>
0x17b5d:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17b60:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17b63:    83 c0 08                        	add eax, 8
0x17b66:    89 04 24                        	mov dword ptr [esp], eax
0x17b69:    e8 8d 93 00 00                  	call 0x20efb <unknown_20efb>
0x17b6e:    8d 55 c8                        	lea edx, [ebp - 0x38]
0x17b71:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17b75:    89 14 24                        	mov dword ptr [esp], edx
0x17b78:    e8 ab 93 00 00                  	call 0x20f28 <unknown_20f28>
0x17b7d:    83 ec 04                        	sub esp, 4
0x17b80:    8d 45 c8                        	lea eax, [ebp - 0x38]
0x17b83:    89 04 24                        	mov dword ptr [esp], eax
0x17b86:    e8 e4 93 00 00                  	call 0x20f6f <unknown_20f6f>
0x17b8b:    0f b6 55 a4                     	movzx edx, byte ptr [ebp - 0x5c]
0x17b8f:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x17b93:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x17b96:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x17b9a:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x17b9d:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17ba1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17ba5:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17ba8:    89 04 24                        	mov dword ptr [esp], eax
0x17bab:    e8 b4 85 01 00                  	call 0x30164 <unknown_30164>
0x17bb0:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17bb3:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17bb6:    83 c0 0c                        	add eax, 0xc
0x17bb9:    89 04 24                        	mov dword ptr [esp], eax
0x17bbc:    e8 3a 93 00 00                  	call 0x20efb <unknown_20efb>
0x17bc1:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x17bc4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17bc8:    89 14 24                        	mov dword ptr [esp], edx
0x17bcb:    e8 58 93 00 00                  	call 0x20f28 <unknown_20f28>
0x17bd0:    83 ec 04                        	sub esp, 4
0x17bd3:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x17bd6:    89 04 24                        	mov dword ptr [esp], eax
0x17bd9:    e8 91 93 00 00                  	call 0x20f6f <unknown_20f6f>
0x17bde:    0f b6 55 a5                     	movzx edx, byte ptr [ebp - 0x5b]
0x17be2:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x17be6:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x17be9:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x17bed:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x17bf0:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17bf4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17bf8:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17bfb:    89 04 24                        	mov dword ptr [esp], eax
0x17bfe:    e8 61 85 01 00                  	call 0x30164 <unknown_30164>
0x17c03:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17c06:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17c09:    83 c0 10                        	add eax, 0x10
0x17c0c:    89 04 24                        	mov dword ptr [esp], eax
0x17c0f:    e8 e7 92 00 00                  	call 0x20efb <unknown_20efb>
0x17c14:    8d 55 d0                        	lea edx, [ebp - 0x30]
0x17c17:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17c1b:    89 14 24                        	mov dword ptr [esp], edx
0x17c1e:    e8 05 93 00 00                  	call 0x20f28 <unknown_20f28>
0x17c23:    83 ec 04                        	sub esp, 4
0x17c26:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x17c29:    89 04 24                        	mov dword ptr [esp], eax
0x17c2c:    e8 3e 93 00 00                  	call 0x20f6f <unknown_20f6f>
0x17c31:    0f b6 55 a6                     	movzx edx, byte ptr [ebp - 0x5a]
0x17c35:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x17c39:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x17c3c:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x17c40:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x17c43:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17c47:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17c4b:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17c4e:    89 04 24                        	mov dword ptr [esp], eax
0x17c51:    e8 0e 85 01 00                  	call 0x30164 <unknown_30164>
0x17c56:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17c59:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17c5c:    83 c0 14                        	add eax, 0x14
0x17c5f:    89 04 24                        	mov dword ptr [esp], eax
0x17c62:    e8 ef 94 00 00                  	call 0x21156 <unknown_21156>
0x17c67:    8d 55 d4                        	lea edx, [ebp - 0x2c]
0x17c6a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17c6e:    89 14 24                        	mov dword ptr [esp], edx
0x17c71:    e8 0d 95 00 00                  	call 0x21183 <unknown_21183>
0x17c76:    83 ec 04                        	sub esp, 4
0x17c79:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x17c7c:    89 04 24                        	mov dword ptr [esp], eax
0x17c7f:    e8 46 95 00 00                  	call 0x211ca <unknown_211ca>
0x17c84:    0f b6 55 a7                     	movzx edx, byte ptr [ebp - 0x59]
0x17c88:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x17c8c:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x17c8f:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x17c93:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x17c96:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17c9a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17c9e:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17ca1:    89 04 24                        	mov dword ptr [esp], eax
0x17ca4:    e8 62 93 01 00                  	call 0x3100b <unknown_3100b>
0x17ca9:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17cac:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x17caf:    83 c0 1c                        	add eax, 0x1c
0x17cb2:    89 04 24                        	mov dword ptr [esp], eax
0x17cb5:    e8 9c 94 00 00                  	call 0x21156 <unknown_21156>
0x17cba:    8d 55 d8                        	lea edx, [ebp - 0x28]
0x17cbd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17cc1:    89 14 24                        	mov dword ptr [esp], edx
0x17cc4:    e8 ba 94 00 00                  	call 0x21183 <unknown_21183>
0x17cc9:    83 ec 04                        	sub esp, 4
0x17ccc:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x17ccf:    89 04 24                        	mov dword ptr [esp], eax
0x17cd2:    e8 f3 94 00 00                  	call 0x211ca <unknown_211ca>
0x17cd7:    89 fa                           	mov edx, edi
0x17cd9:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x17cdd:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x17ce0:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x17ce4:    8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x17ce7:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x17ceb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17cef:    8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x17cf2:    89 04 24                        	mov dword ptr [esp], eax
0x17cf5:    e8 11 93 01 00                  	call 0x3100b <unknown_3100b>
0x17cfa:    01 45 dc                        	add dword ptr [ebp - 0x24], eax
0x17cfd:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17d00:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17d07:    74 05                           	je 0x17d0e <function_17d0e>
; data inside code section at 0x17d09 -- 0x17d0a
0x17d09:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17d0a -- 0x17d0b
; data inside code section at 0x17d0b -- 0x17d0e
0x17d0b:    ff ff ff                                           |...             |
; function: function_17d0e at 0x17d0e -- 0x17d16
0x17d0e:    8d 65 f4                        	lea esp, [ebp - 0xc]
0x17d11:    5b                              	pop ebx
0x17d12:    5e                              	pop esi
0x17d13:    5f                              	pop edi
0x17d14:    5d                              	pop ebp
0x17d15:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7CVarIntIyEEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStream7CVarIntIyEEjRT_RT0_ii21CSerActionUnserialize at 0x17d16 -- 0x17d1c
0x17d16:    55                              	push ebp
0x17d17:    89 e5                           	mov ebp, esp
0x17d19:    83 ec 48                        	sub esp, 0x48
; data inside code section at 0x17d1c -- 0x17d5e
0x17d1c:    8b 45 08 89 45 e4 8b 45  0c 89 45 e0 8b 45 10 89   |.E..E..E..E..E..|
0x17d2c:    45 dc 8b 45 14 89 45 d8  0f b6 45 18 88 45 d7 65   |E..E..E...E..E.e|
0x17d3c:    a1 14 00 00 00 89 45 f4  31 c0 8b 45 d8 89 44 24   |......E.1..E..D$|
0x17d4c:    0c 8b 45 dc 89 44 24 08  8b 45 e0 89 44 24 04 8b   |..E..D$..E..D$..|
0x17d5c:    45 e4                                              |E.              |
; function: function_17d5e at 0x17d5e -- 0x17d77
0x17d5e:    89 04 24                        	mov dword ptr [esp], eax
0x17d61:    e8 a3 95 01 00                  	call 0x31309 <unknown_31309>
0x17d66:    b8 00 00 00 00                  	mov eax, 0
0x17d6b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x17d6e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x17d75:    74 05                           	je 0x17d7c <function_17d7c>
; data inside code section at 0x17d77 -- 0x17d78
0x17d77:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17d78 -- 0x17d79
; data inside code section at 0x17d79 -- 0x17d7c
0x17d79:    ff ff ff                                           |...             |
; function: function_17d7c at 0x17d7c -- 0x17d7e
0x17d7c:    c9                              	leave 
0x17d7d:    c3                              	ret 
; section: .text._ZN7CVarIntIiE11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN7CVarIntIiE11UnserializeI11CDataStreamEEvRT_ii at 0x17d7e -- 0x17d8b
0x17d7e:    55                              	push ebp
0x17d7f:    89 e5                           	mov ebp, esp
0x17d81:    53                              	push ebx
0x17d82:    83 ec 34                        	sub esp, 0x34
0x17d85:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17d88:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0x17d8b -- 0x17d8d
0x17d8b:    8b 45                                              |.E              |
; function: function_17d8d at 0x17d8d -- 0x17dc6
0x17d8d:    0c 89                           	or al, 0x89
0x17d8f:    45                              	inc ebp
0x17d90:    e0 8b                           	loopne 0x17d1d
0x17d92:    45                              	inc ebp
0x17d93:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x17d99:    14 89                           	adc al, 0x89
0x17d9b:    45                              	inc ebp
0x17d9c:    d8 65 a1                        	fsub dword ptr [ebp - 0x5f]
0x17d9f:    14 00                           	adc al, 0
0x17da1:    00 00                           	add byte ptr [eax], al
0x17da3:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17da6:    31 c0                           	xor eax, eax
0x17da8:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17dab:    8b 18                           	mov ebx, dword ptr [eax]
0x17dad:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17db0:    89 04 24                        	mov dword ptr [esp], eax
0x17db3:    e8 15 96 01 00                  	call 0x313cd <unknown_313cd>
0x17db8:    89 03                           	mov dword ptr [ebx], eax
0x17dba:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17dbd:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17dc4:    74 05                           	je 0x17dcb <function_17dcb>
; data inside code section at 0x17dc6 -- 0x17dc7
0x17dc6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17dc7 -- 0x17dc8
; data inside code section at 0x17dc8 -- 0x17dcb
0x17dc8:    ff ff ff                                           |...             |
; function: function_17dcb at 0x17dcb -- 0x17dd1
0x17dcb:    83 c4 34                        	add esp, 0x34
0x17dce:    5b                              	pop ebx
0x17dcf:    5d                              	pop ebp
0x17dd0:    c3                              	ret 
; section: .text._ZN7CVarIntIjE11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN7CVarIntIjE11UnserializeI11CDataStreamEEvRT_ii at 0x17dd2 -- 0x17e1a
0x17dd2:    55                              	push ebp
0x17dd3:    89 e5                           	mov ebp, esp
0x17dd5:    53                              	push ebx
0x17dd6:    83 ec 34                        	sub esp, 0x34
0x17dd9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17ddc:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17ddf:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x17de2:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x17de5:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x17de8:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x17deb:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x17dee:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x17df1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17df7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17dfa:    31 c0                           	xor eax, eax
0x17dfc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17dff:    8b 18                           	mov ebx, dword ptr [eax]
0x17e01:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17e04:    89 04 24                        	mov dword ptr [esp], eax
0x17e07:    e8 88 96 01 00                  	call 0x31494 <unknown_31494>
0x17e0c:    89 03                           	mov dword ptr [ebx], eax
0x17e0e:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17e11:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17e18:    74 05                           	je 0x17e1f <function_17e1f>
; data inside code section at 0x17e1a -- 0x17e1b
0x17e1a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17e1b -- 0x17e1c
; data inside code section at 0x17e1c -- 0x17e1f
0x17e1c:    ff ff ff                                           |...             |
; function: function_17e1f at 0x17e1f -- 0x17e25
0x17e1f:    83 c4 34                        	add esp, 0x34
0x17e22:    5b                              	pop ebx
0x17e23:    5d                              	pop ebp
0x17e24:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIbEC2Ev
; function: _ZN9__gnu_cxx13new_allocatorIbEC1Ev at 0x17e26 -- 0x17e49
0x17e26:    55                              	push ebp
0x17e27:    89 e5                           	mov ebp, esp
0x17e29:    83 ec 28                        	sub esp, 0x28
0x17e2c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17e2f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17e32:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17e38:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17e3b:    31 c0                           	xor eax, eax
0x17e3d:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17e40:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17e47:    74 05                           	je 0x17e4e <function_17e4e>
; data inside code section at 0x17e49 -- 0x17e4a
0x17e49:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17e4a -- 0x17e4b
; data inside code section at 0x17e4b -- 0x17e4e
0x17e4b:    ff ff ff                                           |...             |
; function: function_17e4e at 0x17e4e -- 0x17e50
0x17e4e:    c9                              	leave 
0x17e4f:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorIbED2Ev
; function: _ZN9__gnu_cxx13new_allocatorIbED1Ev at 0x17e50 -- 0x17e7a
0x17e50:    55                              	push ebp
0x17e51:    89 e5                           	mov ebp, esp
0x17e53:    83 ec 28                        	sub esp, 0x28
0x17e56:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17e59:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17e5c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17e62:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17e65:    31 c0                           	xor eax, eax
0x17e67:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17e6a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17e71:    74 05                           	je 0x17e78 <_ZN9__gnu_cxx13new_allocatorIbED1Ev+0x28>
0x17e73:    e8 fc ff ff ff                  	call 0x17e74
0x17e78:    c9                              	leave 
0x17e79:    c3                              	ret 
; section: .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
; function: _ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev at 0x17e7a -- 0x17ea8
0x17e7a:    55                              	push ebp
0x17e7b:    89 e5                           	mov ebp, esp
0x17e7d:    83 ec 38                        	sub esp, 0x38
0x17e80:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17e83:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17e86:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17e8c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17e8f:    31 c0                           	xor eax, eax
0x17e91:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17e94:    89 04 24                        	mov dword ptr [esp], eax
0x17e97:    e8 50 97 01 00                  	call 0x315ec <unknown_315ec>
0x17e9c:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17e9f:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17ea6:    74 05                           	je 0x17ead <function_17ead>
; data inside code section at 0x17ea8 -- 0x17ea9
0x17ea8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17ea9 -- 0x17eaa
; data inside code section at 0x17eaa -- 0x17ead
0x17eaa:    ff ff ff                                           |...             |
; function: function_17ead at 0x17ead -- 0x17eaf
0x17ead:    c9                              	leave 
0x17eae:    c3                              	ret 
; section: .text._ZNSt13_Bvector_baseISaIbEEC2ERKS0_
; function: _ZNSt13_Bvector_baseISaIbEEC1ERKS0_ at 0x17eb0 -- 0x17f08
0x17eb0:    55                              	push ebp
0x17eb1:    89 e5                           	mov ebp, esp
0x17eb3:    83 ec 38                        	sub esp, 0x38
0x17eb6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17eb9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17ebc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x17ebf:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x17ec2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17ec8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17ecb:    31 c0                           	xor eax, eax
0x17ecd:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17ed0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x17ed4:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x17ed7:    89 04 24                        	mov dword ptr [esp], eax
0x17eda:    e8 07 97 01 00                  	call 0x315e6 <unknown_315e6>
0x17edf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17ee2:    8d 55 f3                        	lea edx, [ebp - 0xd]
0x17ee5:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17ee9:    89 04 24                        	mov dword ptr [esp], eax
0x17eec:    e8 67 97 01 00                  	call 0x31658 <unknown_31658>
0x17ef1:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x17ef4:    89 04 24                        	mov dword ptr [esp], eax
0x17ef7:    e8 26 97 01 00                  	call 0x31622 <unknown_31622>
0x17efc:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17eff:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17f06:    74 05                           	je 0x17f0d
; data inside code section at 0x17f08 -- 0x17f09
0x17f08:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17f09 -- 0x17f0a
; data inside code section at 0x17f0a -- 0x17f0c
0x17f0a:    ff ff                                              |..              |
; function: function_17f0c at 0x17f0c -- 0x17f0f
0x17f0c:    ff c9                           	dec ecx
0x17f0e:    c3                              	ret 
; section: .text._ZNSt13_Bvector_baseISaIbEED2Ev
; function: _ZNSt13_Bvector_baseISaIbEED1Ev at 0x17f10 -- 0x17f49
0x17f10:    55                              	push ebp
0x17f11:    89 e5                           	mov ebp, esp
0x17f13:    83 ec 38                        	sub esp, 0x38
0x17f16:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x17f19:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x17f1c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x17f22:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17f25:    31 c0                           	xor eax, eax
0x17f27:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17f2a:    89 04 24                        	mov dword ptr [esp], eax
0x17f2d:    e8 fc 4e 01 00                  	call 0x2ce2e <unknown_2ce2e>
0x17f32:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17f35:    89 04 24                        	mov dword ptr [esp], eax
0x17f38:    e8 4d 7e 01 00                  	call 0x2fd8a <unknown_2fd8a>
0x17f3d:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17f40:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17f47:    74 05                           	je 0x17f4e <function_17f4e>
; data inside code section at 0x17f49 -- 0x17f4a
0x17f49:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17f4a -- 0x17f4b
; data inside code section at 0x17f4b -- 0x17f4e
0x17f4b:    ff ff ff                                           |...             |
; function: function_17f4e at 0x17f4e -- 0x17f50
0x17f4e:    c9                              	leave 
0x17f4f:    c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEE13_M_initializeEj
; function: _ZNSt6vectorIbSaIbEE13_M_initializeEj at 0x17f50 -- 0x17f5a
0x17f50:    55                              	push ebp
0x17f51:    89 e5                           	mov ebp, esp
0x17f53:    53                              	push ebx
0x17f54:    83 ec 34                        	sub esp, 0x34
0x17f57:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x17f5a -- 0x17f5c
0x17f5a:    89 45                                              |.E              |
; function: function_17f5c at 0x17f5c -- 0x17fa9
0x17f5c:    e4 8b                           	in al, 0x8b
0x17f5e:    45                              	inc ebp
0x17f5f:    0c 89                           	or al, 0x89
0x17f61:    45                              	inc ebp
0x17f62:    e0 65                           	loopne 0x17fc9 <function_17fc9>
0x17f64:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x17f69:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x17f6c:    31 c0                           	xor eax, eax
0x17f6e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17f71:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x17f74:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x17f78:    89 04 24                        	mov dword ptr [esp], eax
0x17f7b:    e8 f8 4c 01 00                  	call 0x2cc78 <unknown_2cc78>
0x17f80:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x17f83:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x17f86:    83 c0 1f                        	add eax, 0x1f
0x17f89:    c1 e8 05                        	shr eax, 5
0x17f8c:    c1 e0 02                        	shl eax, 2
0x17f8f:    89 c2                           	mov edx, eax
0x17f91:    03 55 f0                        	add edx, dword ptr [ebp - 0x10]
0x17f94:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x17f97:    89 50 10                        	mov dword ptr [eax + 0x10], edx
0x17f9a:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x17fa2:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x17fa5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; data inside code section at 0x17fa9 -- 0x17fab
0x17fa9:    8d 45                                              |.E              |
; function: function_17fab at 0x17fab -- 0x17fc8
0x17fab:    e8 89 04 24 e8                  	call 0xe8258439 <unknown_e8258439>
0x17fb0:    00 23                           	add byte ptr [ebx], ah
0x17fb2:    00 00                           	add byte ptr [eax], al
0x17fb4:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x17fb7:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x17fba:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x17fbd:    89 01                           	mov dword ptr [ecx], eax
0x17fbf:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x17fc2:    8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x17fc5:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
; function: function_17fc8 at 0x17fc8 -- 0x17fc9
; function: function_17fc9 at 0x17fc9 -- 0x17ff9
0x17fc9:    5d                              	pop ebp
0x17fca:    e4 8d                           	in al, 0x8d
0x17fcc:    45                              	inc ebp
0x17fcd:    d8 89 4c 24 08 89               	fmul dword ptr [ecx - 0x76f7dbb4]
0x17fd3:    54                              	push esp
0x17fd4:    24 04                           	and al, 4
0x17fd6:    89 04 24                        	mov dword ptr [esp], eax
0x17fd9:    e8 8e 24 00 00                  	call 0x1a46c <function_1a46c>
0x17fde:    83 ec 04                        	sub esp, 4
0x17fe1:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x17fe4:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x17fe7:    89 43 08                        	mov dword ptr [ebx + 8], eax
0x17fea:    89 53 0c                        	mov dword ptr [ebx + 0xc], edx
0x17fed:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x17ff0:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x17ff7:    74 05                           	je 0x17ffe <function_17ffe>
; data inside code section at 0x17ff9 -- 0x17ffa
0x17ff9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17ffa -- 0x17ffb
; data inside code section at 0x17ffb -- 0x17ffe
0x17ffb:    ff ff ff                                           |...             |
; function: function_17ffe at 0x17ffe -- 0x18003
0x17ffe:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x18001:    c9                              	leave 
0x18002:    c3                              	ret 
; section: .text._ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
; function: _ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb at 0x18004 -- 0x18093
0x18004:    55                              	push ebp
0x18005:    89 e5                           	mov ebp, esp
0x18007:    53                              	push ebx
0x18008:    81 ec b4 00 00 00               	sub esp, 0xb4
0x1800e:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18011:    8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x18014:    89 55 84                        	mov dword ptr [ebp - 0x7c], edx
0x18017:    8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x1801a:    89 95 7c ff ff ff               	mov dword ptr [ebp - 0x84], edx
0x18020:    8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x18023:    89 55 80                        	mov dword ptr [ebp - 0x80], edx
0x18026:    88 85 78 ff ff ff               	mov byte ptr [ebp - 0x88], al
0x1802c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18032:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18035:    31 c0                           	xor eax, eax
0x18037:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x1803a:    8b 50 08                        	mov edx, dword ptr [eax + 8]
0x1803d:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x18040:    8b 40 10                        	mov eax, dword ptr [eax + 0x10]
0x18043:    39 c2                           	cmp edx, eax
0x18045:    0f 84 9f 00 00 00               	je 0x180ea <function_180ea>
0x1804b:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x1804e:    8d 50 08                        	lea edx, [eax + 8]
0x18051:    8d 45 8c                        	lea eax, [ebp - 0x74]
0x18054:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x1805c:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18060:    89 04 24                        	mov dword ptr [esp], eax
0x18063:    e8 b8 24 00 00                  	call 0x1a520 <function_1a520>
0x18068:    83 ec 04                        	sub esp, 4
0x1806b:    8d 4d 94                        	lea ecx, [ebp - 0x6c]
0x1806e:    8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x18071:    8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x18074:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x18078:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x1807c:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x1807f:    8b 50 0c                        	mov edx, dword ptr [eax + 0xc]
0x18082:    8b 40 08                        	mov eax, dword ptr [eax + 8]
0x18085:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x18089:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x1808d:    8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
; function: function_18093 at 0x18093 -- 0x180ea
0x18093:    8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x18096:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1809a:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1809e:    89 0c 24                        	mov dword ptr [esp], ecx
0x180a1:    e8 f0 4a 01 00                  	call 0x2cb96 <unknown_2cb96>
0x180a6:    83 ec 04                        	sub esp, 4
0x180a9:    0f b6 9d 78 ff ff ff            	movzx ebx, byte ptr [ebp - 0x88]
0x180b0:    8d 45 9c                        	lea eax, [ebp - 0x64]
0x180b3:    8d 95 7c ff ff ff               	lea edx, [ebp - 0x84]
0x180b9:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x180bd:    89 04 24                        	mov dword ptr [esp], eax
0x180c0:    e8 f3 22 00 00                  	call 0x1a3b8 <function_1a3b8>
0x180c5:    83 ec 04                        	sub esp, 4
0x180c8:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x180cc:    8d 45 9c                        	lea eax, [ebp - 0x64]
0x180cf:    89 04 24                        	mov dword ptr [esp], eax
0x180d2:    e8 75 1f 00 00                  	call 0x1a04c <function_1a04c>
0x180d7:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x180da:    83 c0 08                        	add eax, 8
0x180dd:    89 04 24                        	mov dword ptr [esp], eax
0x180e0:    e8 2f 23 00 00                  	call 0x1a414 <function_1a414>
0x180e5:    e9 c2 01 00 00                  	jmp 0x182ac <function_182ac>
; function: function_180ea at 0x180ea -- 0x1811d
0x180ea:    c7 44 24 08 4a 3f 00 00         	mov dword ptr [esp + 8], 0x3f4a ; "vector<bool>::_M_insert_aux"
0x180f2:    c7 44 24 04 01 00 00 00         	mov dword ptr [esp + 4], 1
0x180fa:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x180fd:    89 04 24                        	mov dword ptr [esp], eax
0x18100:    e8 55 4b 01 00                  	call 0x2cc5a <unknown_2cc5a>
0x18105:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x18108:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x1810b:    8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x1810e:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18112:    89 04 24                        	mov dword ptr [esp], eax
0x18115:    e8 12 4c 01 00                  	call 0x2cd2c <unknown_2cd2c>
0x1811a:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
; data inside code section at 0x1811d -- 0x18120
0x1811d:    c7 44 24                                           |.D$             |
; function: function_18120 at 0x18120 -- 0x1813d
0x18120:    08 00                           	or byte ptr [eax], al
0x18122:    00 00                           	add byte ptr [eax], al
0x18124:    00 8b 45 f0 89 44               	add byte ptr [ebx + 0x4489f045], cl
0x1812a:    24 04                           	and al, 4
0x1812c:    8d 45 b4                        	lea eax, [ebp - 0x4c]
0x1812f:    89 04 24                        	mov dword ptr [esp], eax
0x18132:    e8 31 22 00 00                  	call 0x1a368 <function_1a368>
0x18137:    8d 85 7c ff ff ff               	lea eax, [ebp - 0x84]
; data inside code section at 0x1813d -- 0x1813f
0x1813d:    89 44                                              |.D              |
; function: function_1813f at 0x1813f -- 0x182ac
0x1813f:    24 04                           	and al, 4
0x18141:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x18144:    89 04 24                        	mov dword ptr [esp], eax
0x18147:    e8 8c 24 00 00                  	call 0x1a5d8 <function_1a5d8>
0x1814c:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x1814f:    8b 55 84                        	mov edx, dword ptr [ebp - 0x7c]
0x18152:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18156:    89 04 24                        	mov dword ptr [esp], eax
0x18159:    e8 46 f0 00 00                  	call 0x271a4 <unknown_271a4>
0x1815e:    83 ec 04                        	sub esp, 4
0x18161:    8d 45 ac                        	lea eax, [ebp - 0x54]
0x18164:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18168:    8d 45 bc                        	lea eax, [ebp - 0x44]
0x1816b:    89 04 24                        	mov dword ptr [esp], eax
0x1816e:    e8 65 24 00 00                  	call 0x1a5d8 <function_1a5d8>
0x18173:    8d 4d a4                        	lea ecx, [ebp - 0x5c]
0x18176:    8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x18179:    8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x1817c:    89 44 24 18                     	mov dword ptr [esp + 0x18], eax
0x18180:    89 54 24 1c                     	mov dword ptr [esp + 0x1c], edx
0x18184:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x18187:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1818a:    89 44 24 10                     	mov dword ptr [esp + 0x10], eax
0x1818e:    89 54 24 14                     	mov dword ptr [esp + 0x14], edx
0x18192:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x18195:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x18198:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1819c:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x181a0:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x181a3:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x181a7:    89 0c 24                        	mov dword ptr [esp], ecx
0x181aa:    e8 cf 4b 01 00                  	call 0x2cd7e <unknown_2cd7e>
0x181af:    83 ec 04                        	sub esp, 4
0x181b2:    0f b6 9d 78 ff ff ff            	movzx ebx, byte ptr [ebp - 0x88]
0x181b9:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x181bc:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x181c4:    8d 55 a4                        	lea edx, [ebp - 0x5c]
0x181c7:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x181cb:    89 04 24                        	mov dword ptr [esp], eax
0x181ce:    e8 79 22 00 00                  	call 0x1a44c <function_1a44c>
0x181d3:    83 ec 04                        	sub esp, 4
0x181d6:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x181d9:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x181dc:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x181e0:    89 04 24                        	mov dword ptr [esp], eax
0x181e3:    e8 d0 21 00 00                  	call 0x1a3b8 <function_1a3b8>
0x181e8:    83 ec 04                        	sub esp, 4
0x181eb:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x181ef:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x181f2:    89 04 24                        	mov dword ptr [esp], eax
0x181f5:    e8 52 1e 00 00                  	call 0x1a04c <function_1a04c>
0x181fa:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x181fd:    8b 55 84                        	mov edx, dword ptr [ebp - 0x7c]
0x18200:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18204:    89 04 24                        	mov dword ptr [esp], eax
0x18207:    e8 de ef 00 00                  	call 0x271ea <unknown_271ea>
0x1820c:    83 ec 04                        	sub esp, 4
0x1820f:    8b 5d 84                        	mov ebx, dword ptr [ebp - 0x7c]
0x18212:    8d 8d 70 ff ff ff               	lea ecx, [ebp - 0x90]
0x18218:    8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x1821b:    8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x1821e:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x18222:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x18226:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18229:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1822c:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x18230:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x18234:    8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x1823a:    8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x1823d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18241:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18245:    89 0c 24                        	mov dword ptr [esp], ecx
0x18248:    e8 12 4c 01 00                  	call 0x2ce5f <unknown_2ce5f>
0x1824d:    83 ec 04                        	sub esp, 4
0x18250:    8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x18256:    8b 95 74 ff ff ff               	mov edx, dword ptr [ebp - 0x8c]
0x1825c:    89 43 08                        	mov dword ptr [ebx + 8], eax
0x1825f:    89 53 0c                        	mov dword ptr [ebx + 0xc], edx
0x18262:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x18265:    89 04 24                        	mov dword ptr [esp], eax
0x18268:    e8 b5 4c 01 00                  	call 0x2cf22 <unknown_2cf22>
0x1826d:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x18270:    83 c0 1f                        	add eax, 0x1f
0x18273:    c1 e8 05                        	shr eax, 5
0x18276:    c1 e0 02                        	shl eax, 2
0x18279:    89 c2                           	mov edx, eax
0x1827b:    03 55 f0                        	add edx, dword ptr [ebp - 0x10]
0x1827e:    8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x18281:    89 50 10                        	mov dword ptr [eax + 0x10], edx
0x18284:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x1828c:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x1828f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18293:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x18296:    89 04 24                        	mov dword ptr [esp], eax
0x18299:    e8 ca 20 00 00                  	call 0x1a368 <function_1a368>
0x1829e:    8b 4d 84                        	mov ecx, dword ptr [ebp - 0x7c]
0x182a1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x182a4:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x182a7:    89 01                           	mov dword ptr [ecx], eax
0x182a9:    89 51 04                        	mov dword ptr [ecx + 4], edx
; function: function_182ac at 0x182ac -- 0x182b8
0x182ac:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x182af:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x182b6:    74 05                           	je 0x182bd <function_182bd>
; data inside code section at 0x182b8 -- 0x182b9
0x182b8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x182b9 -- 0x182ba
; data inside code section at 0x182ba -- 0x182bd
0x182ba:    ff ff ff                                           |...             |
; function: function_182bd at 0x182bd -- 0x182c2
0x182bd:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x182c0:    c9                              	leave 
0x182c1:    c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE14_M_fill_assignEjRKS0_
; function: _ZNSt6vectorI6CTxOutSaIS0_EE14_M_fill_assignEjRKS0_ at 0x182c2 -- 0x1832a
0x182c2:    55                              	push ebp
0x182c3:    89 e5                           	mov ebp, esp
0x182c5:    53                              	push ebx
0x182c6:    83 ec 44                        	sub esp, 0x44
0x182c9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x182cc:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x182cf:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x182d2:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x182d5:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x182d8:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x182db:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x182e1:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x182e4:    31 c0                           	xor eax, eax
0x182e6:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x182e9:    89 04 24                        	mov dword ptr [esp], eax
0x182ec:    e8 df 97 01 00                  	call 0x31ad0 <unknown_31ad0>
0x182f1:    3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x182f4:    0f 92 c0                        	setb al
0x182f7:    84 c0                           	test al, al
0x182f9:    74 4a                           	je 0x18345 <function_18345>
0x182fb:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x182fe:    89 04 24                        	mov dword ptr [esp], eax
0x18301:    e8 84 e7 00 00                  	call 0x26a8a <unknown_26a8a>
0x18306:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1830a:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x1830d:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x18311:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x18314:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18318:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x1831b:    89 04 24                        	mov dword ptr [esp], eax
0x1831e:    e8 23 9a 00 00                  	call 0x21d46 <unknown_21d46>
0x18323:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x18326:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; function: function_1832a at 0x1832a -- 0x1833b
0x1832a:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x1832d:    89 04 24                        	mov dword ptr [esp], eax
0x18330:    e8 9f 9b 00 00                  	call 0x21ed4 <unknown_21ed4>
0x18335:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x18338:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1833b -- 0x1833e
0x1833b:    e8 1a 95                                           |...             |
; function: function_1833e at 0x1833e -- 0x18345
0x1833e:    00 00                           	add byte ptr [eax], al
0x18340:    e9 ed 00 00 00                  	jmp 0x18432 <function_18432>
; function: function_18345 at 0x18345 -- 0x183d8
0x18345:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x18348:    89 04 24                        	mov dword ptr [esp], eax
0x1834b:    e8 82 9a 00 00                  	call 0x21dd2 <unknown_21dd2>
0x18350:    3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x18353:    0f 92 c0                        	setb al
0x18356:    84 c0                           	test al, al
0x18358:    0f 84 aa 00 00 00               	je 0x18408 <function_18408>
0x1835e:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x18361:    8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x18364:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18368:    89 04 24                        	mov dword ptr [esp], eax
0x1836b:    e8 9c eb 00 00                  	call 0x26f0c <unknown_26f0c>
0x18370:    83 ec 04                        	sub esp, 4
0x18373:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x18376:    8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x18379:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1837d:    89 04 24                        	mov dword ptr [esp], eax
0x18380:    e8 91 97 01 00                  	call 0x31b16 <unknown_31b16>
0x18385:    83 ec 04                        	sub esp, 4
0x18388:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x1838b:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1838f:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x18392:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18396:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x18399:    89 04 24                        	mov dword ptr [esp], eax
0x1839c:    e8 bc 97 01 00                  	call 0x31b5d <unknown_31b5d>
0x183a1:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x183a4:    89 04 24                        	mov dword ptr [esp], eax
0x183a7:    e8 de e6 00 00                  	call 0x26a8a <unknown_26a8a>
0x183ac:    89 c3                           	mov ebx, eax
0x183ae:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x183b1:    89 04 24                        	mov dword ptr [esp], eax
0x183b4:    e8 19 9a 00 00                  	call 0x21dd2 <unknown_21dd2>
0x183b9:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x183bc:    89 d1                           	mov ecx, edx
0x183be:    29 c1                           	sub ecx, eax
0x183c0:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x183c3:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x183c6:    89 5c 24 0c                     	mov dword ptr [esp + 0xc], ebx
0x183ca:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x183cd:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x183d1:    89 4c 24 04                     	mov dword ptr [esp + 4], ecx
0x183d5:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x183d8 -- 0x183da
0x183d8:    e8 18                                              |..              |
; function: function_183da at 0x183da -- 0x183e9
0x183da:    21 01                           	and dword ptr [ecx], eax
0x183dc:    00 8b 45 d4 8b 58               	add byte ptr [ebx + 0x588bd445], cl
0x183e2:    04 8b                           	add al, 0x8b
0x183e4:    45                              	inc ebp
0x183e5:    d4 89                           	aam 0x89
0x183e7:    04 24                           	add al, 0x24
; data inside code section at 0x183e9 -- 0x183ea
0x183e9:    e8                                                 |.               |
; function: function_183ea at 0x183ea -- 0x18408
0x183ea:    e4 99                           	in al, 0x99
0x183ec:    00 00                           	add byte ptr [eax], al
0x183ee:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x183f1:    29 c2                           	sub edx, eax
0x183f3:    89 d0                           	mov eax, edx
0x183f5:    c1 e0 02                        	shl eax, 2
0x183f8:    01 d0                           	add eax, edx
0x183fa:    c1 e0 02                        	shl eax, 2
0x183fd:    8d 14 03                        	lea edx, [ebx + eax]
0x18400:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x18403:    89 50 04                        	mov dword ptr [eax + 4], edx
0x18406:    eb 2a                           	jmp 0x18432 <function_18432>
; function: function_18408 at 0x18408 -- 0x18432
0x18408:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1840b:    8b 00                           	mov eax, dword ptr [eax]
0x1840d:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x18410:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18414:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x18417:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1841b:    89 04 24                        	mov dword ptr [esp], eax
0x1841e:    e8 a0 97 01 00                  	call 0x31bc3 <unknown_31bc3>
0x18423:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18427:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1842a:    89 04 24                        	mov dword ptr [esp], eax
0x1842d:    e8 ce e6 00 00                  	call 0x26b00 <unknown_26b00>
; function: function_18432 at 0x18432 -- 0x1843e
0x18432:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x18435:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1843c:    74 05                           	je 0x18443 <function_18443>
; data inside code section at 0x1843e -- 0x1843f
0x1843e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1843f -- 0x18440
; data inside code section at 0x18440 -- 0x18443
0x18440:    ff ff ff                                           |...             |
; function: function_18443 at 0x18443 -- 0x18448
0x18443:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x18446:    c9                              	leave 
0x18447:    c3                              	ret 
; section: .text._ZN16CTxOutCompressor11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN16CTxOutCompressor11UnserializeI11CDataStreamEEvRT_ii at 0x18448 -- 0x184f2
0x18448:    55                              	push ebp
0x18449:    89 e5                           	mov ebp, esp
0x1844b:    56                              	push esi
0x1844c:    53                              	push ebx
0x1844d:    83 ec 50                        	sub esp, 0x50
0x18450:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18453:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x18456:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18459:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x1845c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1845f:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x18462:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18465:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x18468:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1846e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18471:    31 c0                           	xor eax, eax
0x18473:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x18477:    c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x1847b:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x1847f:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x18486:    c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x1848d:    c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x18494:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x18497:    89 04 24                        	mov dword ptr [esp], eax
0x1849a:    e8 7f 96 00 00                  	call 0x21b1e <unknown_21b1e>
0x1849f:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x184a2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x184a6:    89 14 24                        	mov dword ptr [esp], edx
0x184a9:    e8 9d 96 00 00                  	call 0x21b4b <unknown_21b4b>
0x184ae:    83 ec 04                        	sub esp, 4
0x184b1:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x184b4:    89 04 24                        	mov dword ptr [esp], eax
0x184b7:    e8 d6 96 00 00                  	call 0x21b92 <unknown_21b92>
0x184bc:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x184c0:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x184c3:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x184c7:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x184ca:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x184ce:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x184d2:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x184d5:    89 04 24                        	mov dword ptr [esp], eax
0x184d8:    e8 81 7c 01 00                  	call 0x3015e <unknown_3015e>
0x184dd:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x184e0:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x184e3:    8b 18                           	mov ebx, dword ptr [eax]
0x184e5:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x184e8:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x184eb:    89 04 24                        	mov dword ptr [esp], eax
0x184ee:    89 54 24 04                     	mov dword ptr [esp + 4], edx
; data inside code section at 0x184f2 -- 0x184f3
0x184f2:    e8                                                 |.               |
; dynamically linked function: _ZN16CTxOutCompressor16DecompressAmountEy at 0x184f3 -- 0x184f4
; data inside code section at 0x184f4 -- 0x18551
0x184f4:    ff ff ff 89 03 89 53 04  8b 45 d4 8b 00 83 c0 08   |......S..E......|
0x18504:    89 04 24 e8 0f 97 00 00  89 44 24 04 8d 45 e8 89   |..$......D$..E..|
0x18514:    04 24 e8 7d 5a 00 00 89  f0 88 44 24 10 8b 45 c8   |.$.}Z.....D$..E.|
0x18524:    89 44 24 0c 8b 45 cc 89  44 24 08 8d 45 e8 89 44   |.D$..E..D$..E..D|
0x18534:    24 04 8b 45 d0 89 04 24  e8 5f 98 01 00 01 45 ec   |$..E...$._....E.|
0x18544:    8b 45 f4 65 33 05 14 00  00 00 74 05 e8            |.E.e3.....t..   |
; dynamically linked function: __stack_chk_fail at 0x18551 -- 0x18552
; data inside code section at 0x18552 -- 0x18554
0x18552:    ff ff                                              |..              |
; function: function_18554 at 0x18554 -- 0x1855c
0x18554:    ff 8d 65 f8 5b 5e               	dec dword ptr [ebp + 0x5e5bf865]
0x1855a:    5d                              	pop ebp
0x1855b:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriterEvRT_xii
; function: _Z9SerializeI11CHashWriterEvRT_xii at 0x1855c -- 0x18568
0x1855c:    55                              	push ebp
0x1855d:    89 e5                           	mov ebp, esp
0x1855f:    83 ec 48                        	sub esp, 0x48
0x18562:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18565:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; function: function_18568 at 0x18568 -- 0x185a0
0x18568:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1856b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1856e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18571:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18574:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18577:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1857a:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x1857d:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x18580:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18586:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18589:    31 c0                           	xor eax, eax
0x1858b:    c7 44 24 08 08 00 00 00         	mov dword ptr [esp + 8], 8
0x18593:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x18596:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1859a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1859d:    89 04 24                        	mov dword ptr [esp], eax
; function: function_185a0 at 0x185a0 -- 0x185b1
0x185a0:    e8 b5 4c 00 00                  	call 0x1d25a <unknown_1d25a>
0x185a5:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x185a8:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x185af:    74 05                           	je 0x185b6 <function_185b6>
; data inside code section at 0x185b1 -- 0x185b2
0x185b1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x185b2 -- 0x185b3
; data inside code section at 0x185b3 -- 0x185b6
0x185b3:    ff ff ff                                           |...             |
; function: function_185b6 at 0x185b6 -- 0x185b8
0x185b6:    c9                              	leave 
0x185b7:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriterEvRT_RK7CScriptii
; function: _Z9SerializeI11CHashWriterEvRT_RK7CScriptii at 0x185b8 -- 0x18601
0x185b8:    55                              	push ebp
0x185b9:    89 e5                           	mov ebp, esp
0x185bb:    83 ec 38                        	sub esp, 0x38
0x185be:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x185c1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x185c4:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x185c7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x185ca:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x185cd:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x185d0:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x185d3:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x185d6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x185dc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x185df:    31 c0                           	xor eax, eax
0x185e1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x185e4:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x185e7:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x185eb:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x185ee:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x185f2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x185f6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x185f9:    89 04 24                        	mov dword ptr [esp], eax
0x185fc:    e8 77 99 01 00                  	call 0x31f78 <unknown_31f78>
; data inside code section at 0x18601 -- 0x18602
0x18601:    8b                                                 |.               |
; function: function_18602 at 0x18602 -- 0x1860d
0x18602:    45                              	inc ebp
0x18603:    f4                              	hlt 
0x18604:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1860b:    74 05                           	je 0x18612 <function_18612>
; data inside code section at 0x1860d -- 0x1860e
0x1860d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1860e -- 0x1860f
; data inside code section at 0x1860f -- 0x18612
0x1860f:    ff ff ff                                           |...             |
; function: function_18612 at 0x18612 -- 0x18614
0x18612:    c9                              	leave 
0x18613:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream13CDiskBlockPosEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStream13CDiskBlockPosEjRT_RT0_ii21CSerActionUnserialize at 0x18614 -- 0x1865f
0x18614:    55                              	push ebp
0x18615:    89 e5                           	mov ebp, esp
0x18617:    83 ec 48                        	sub esp, 0x48
0x1861a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1861d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18620:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18623:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18626:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18629:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1862c:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1862f:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x18632:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x18636:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x18639:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1863f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18642:    31 c0                           	xor eax, eax
0x18644:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x18647:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1864b:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1864e:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x18652:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x18655:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18659:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1865c:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1865f -- 0x18662
0x1865f:    e8 d3 99                                           |...             |
; function: function_18662 at 0x18662 -- 0x18675
0x18662:    01 00                           	add dword ptr [eax], eax
0x18664:    b8 00 00 00 00                  	mov eax, 0
0x18669:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1866c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18673:    74 05                           	je 0x1867a <function_1867a>
; data inside code section at 0x18675 -- 0x18676
0x18675:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18676 -- 0x18677
; data inside code section at 0x18677 -- 0x1867a
0x18677:    ff ff ff                                           |...             |
; function: function_1867a at 0x1867a -- 0x1867c
0x1867a:    c9                              	leave 
0x1867b:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream13CDiskBlockPosEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStream13CDiskBlockPosEjRT_RKT0_ii19CSerActionSerialize at 0x1867c -- 0x186dd
0x1867c:    55                              	push ebp
0x1867d:    89 e5                           	mov ebp, esp
0x1867f:    83 ec 48                        	sub esp, 0x48
0x18682:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18685:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18688:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1868b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1868e:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18691:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18694:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18697:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1869a:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x1869e:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x186a1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x186a7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x186aa:    31 c0                           	xor eax, eax
0x186ac:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x186af:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x186b3:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x186b6:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x186ba:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x186bd:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x186c1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x186c4:    89 04 24                        	mov dword ptr [esp], eax
0x186c7:    e8 2f 9a 01 00                  	call 0x320fb <unknown_320fb>
0x186cc:    b8 00 00 00 00                  	mov eax, 0
0x186d1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x186d4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x186db:    74 05                           	je 0x186e2 <function_186e2>
; data inside code section at 0x186dd -- 0x186de
0x186dd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x186de -- 0x186df
; data inside code section at 0x186df -- 0x186e2
0x186df:    ff ff ff                                           |...             |
; function: function_186e2 at 0x186e2 -- 0x186e4
0x186e2:    c9                              	leave 
0x186e3:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RKT0_ii19CSerActionSerialize at 0x186e4 -- 0x18745
0x186e4:    55                              	push ebp
0x186e5:    89 e5                           	mov ebp, esp
0x186e7:    83 ec 48                        	sub esp, 0x48
0x186ea:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x186ed:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x186f0:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x186f3:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x186f6:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x186f9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x186fc:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x186ff:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x18702:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x18706:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x18709:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1870f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18712:    31 c0                           	xor eax, eax
0x18714:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x18717:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1871b:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1871e:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x18722:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x18725:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18729:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1872c:    89 04 24                        	mov dword ptr [esp], eax
0x1872f:    e8 0b 74 01 00                  	call 0x2fb3f <unknown_2fb3f>
0x18734:    b8 00 00 00 00                  	mov eax, 0
0x18739:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1873c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18743:    74 05                           	je 0x1874a <function_1874a>
; data inside code section at 0x18745 -- 0x18746
0x18745:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18746 -- 0x18747
; data inside code section at 0x18747 -- 0x1874a
0x18747:    ff ff ff                                           |...             |
; function: function_1874a at 0x1874a -- 0x1874c
0x1874a:    c9                              	leave 
0x1874b:    c3                              	ret 
; section: .text._Z16WriteCompactSizeI11CDataStreamEvRT_y
; function: _Z16WriteCompactSizeI11CDataStreamEvRT_y at 0x1874c -- 0x18755
0x1874c:    55                              	push ebp
0x1874d:    89 e5                           	mov ebp, esp
0x1874f:    83 ec 38                        	sub esp, 0x38
0x18752:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x18755 -- 0x1877c
0x18755:    89 45 e4 8b 45 0c 89 45  d8 8b 45 10 89 45 dc 65   |.E..E..E..E..E.e|
0x18765:    a1 14 00 00 00 89 45 f4  31 c0 83 7d dc 00 77 34   |......E.1..}..w4|
0x18775:    83 7d dc 00 72 09 81                               |.}..r..         |
; function: function_1877c at 0x1877c -- 0x1879f
0x1877c:    7d d8                           	jge 0x18756
0x1877e:    fc                              	cld 
0x1877f:    00 00                           	add byte ptr [eax], al
0x18781:    00 77 25                        	add byte ptr [edi + 0x25], dh
0x18784:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x18787:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x1878a:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x18792:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x18795:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18799:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1879c:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1879f -- 0x187a0
0x1879f:    e8                                                 |.               |
; function: function_187a0 at 0x187a0 -- 0x187a9
0x187a0:    16                              	push ss
0x187a1:    4b                              	dec ebx
0x187a2:    00 00                           	add byte ptr [eax], al
0x187a4:    e9 1b 01 00 00                  	jmp 0x188c4 <function_188c4>
; data inside code section at 0x187a9 -- 0x187ea
0x187a9:    e8 1c 29 00 00 89 c1 0f  b7 c1 ba 00 00 00 00 b9   |..).............|
0x187b9:    01 00 00 00 3b 55 dc 77  0f 3b 55 dc 72 05 3b 45   |....;U.w.;U.r.;E|
0x187c9:    d8 73 05 b9 00 00 00 00  84 c9 74 44 c6 45 f3 fd   |.s........tD.E..|
0x187d9:    8b 45 d8 66 89 45 e8 c7  44 24 08 01 00 00 00 8d   |.E.f.E..D$......|
0x187e9:    45                                                 |E               |
; function: function_187ea at 0x187ea -- 0x18819
0x187ea:    f3 89 44 24 04                  	mov dword ptr [esp + 4], eax
0x187ef:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x187f2:    89 04 24                        	mov dword ptr [esp], eax
0x187f5:    e8 c0 4a 00 00                  	call 0x1d2ba <unknown_1d2ba>
0x187fa:    c7 44 24 08 02 00 00 00         	mov dword ptr [esp + 8], 2
0x18802:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x18805:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18809:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1880c:    89 04 24                        	mov dword ptr [esp], eax
0x1880f:    e8 a6 4a 00 00                  	call 0x1d2ba <unknown_1d2ba>
0x18814:    e9 ab 00 00 00                  	jmp 0x188c4 <function_188c4>
; data inside code section at 0x18819 -- 0x18854
0x18819:    e8 d5 28 00 00 ba 00 00  00 00 b9 01 00 00 00 3b   |..(............;|
0x18829:    55 dc 77 0f 3b 55 dc 72  05 3b 45 d8 73 05 b9 00   |U.w.;U.r.;E.s...|
0x18839:    00 00 00 84 c9 74 40 c6  45 f3 fe 8b 45 d8 89 45   |.....t@.E...E..E|
0x18849:    e8 c7 44 24 08 01 00 00  00 8d 45                  |..D$......E     |
; function: function_18854 at 0x18854 -- 0x18880
0x18854:    f3 89 44 24 04                  	mov dword ptr [esp + 4], eax
0x18859:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1885c:    89 04 24                        	mov dword ptr [esp], eax
0x1885f:    e8 56 4a 00 00                  	call 0x1d2ba <unknown_1d2ba>
0x18864:    c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0x1886c:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x1886f:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18873:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18876:    89 04 24                        	mov dword ptr [esp], eax
0x18879:    e8 3c 4a 00 00                  	call 0x1d2ba <unknown_1d2ba>
0x1887e:    eb 44                           	jmp 0x188c4 <function_188c4>
; data inside code section at 0x18880 -- 0x188c4
0x18880:    c6 45 f3 ff 8b 45 d8 8b  55 dc 89 45 e8 89 55 ec   |.E...E..U..E..U.|
0x18890:    c7 44 24 08 01 00 00 00  8d 45 f3 89 44 24 04 8b   |.D$......E..D$..|
0x188a0:    45 e4 89 04 24 e8 10 4a  00 00 c7 44 24 08 08 00   |E...$..J...D$...|
0x188b0:    00 00 8d 45 e8 89 44 24  04 8b 45 e4 89 04 24 e8   |...E..D$..E...$.|
0x188c0:    f6 49 00 00                                        |.I..            |
; function: function_188c4 at 0x188c4 -- 0x188d0
0x188c4:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x188c7:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x188ce:    74 05                           	je 0x188d5 <function_188d5>
; data inside code section at 0x188d0 -- 0x188d1
0x188d0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x188d1 -- 0x188d2
; data inside code section at 0x188d2 -- 0x188d5
0x188d2:    ff ff ff                                           |...             |
; function: function_188d5 at 0x188d5 -- 0x188d7
0x188d5:    c9                              	leave 
0x188d6:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStreamEvRT_Rjii
; function: _Z11UnserializeI11CDataStreamEvRT_Rjii at 0x188d7 -- 0x188f2
0x188d7:    55                              	push ebp
0x188d8:    89 e5                           	mov ebp, esp
0x188da:    83 ec 38                        	sub esp, 0x38
0x188dd:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x188e0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x188e3:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x188e6:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x188e9:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x188ec:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x188ef:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
; function: function_188f2 at 0x188f2 -- 0x18926
0x188f2:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x188f5:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x188fb:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x188fe:    31 c0                           	xor eax, eax
0x18900:    c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0x18908:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1890b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1890f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18912:    89 04 24                        	mov dword ptr [esp], eax
0x18915:    e8 c3 49 00 00                  	call 0x1d2dd <unknown_1d2dd>
0x1891a:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1891d:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x18924:    74 05                           	je 0x1892b <function_1892b>
; data inside code section at 0x18926 -- 0x18927
0x18926:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18927 -- 0x18928
; data inside code section at 0x18928 -- 0x1892b
0x18928:    ff ff ff                                           |...             |
; function: function_1892b at 0x1892b -- 0x1892d
0x1892b:    c9                              	leave 
0x1892c:    c3                              	ret 
; section: .text._ZN9__gnu_cxxmiIPKcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
; function: _ZN9__gnu_cxxmiIPKcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ at 0x1892d -- 0x18979
0x1892d:    55                              	push ebp
0x1892e:    89 e5                           	mov ebp, esp
0x18930:    53                              	push ebx
0x18931:    83 ec 34                        	sub esp, 0x34
0x18934:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18937:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1893a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1893d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18940:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18946:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18949:    31 c0                           	xor eax, eax
0x1894b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1894e:    89 04 24                        	mov dword ptr [esp], eax
0x18951:    e8 bf 3d 01 00                  	call 0x2c715 <unknown_2c715>
0x18956:    8b 00                           	mov eax, dword ptr [eax]
0x18958:    89 c3                           	mov ebx, eax
0x1895a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1895d:    89 04 24                        	mov dword ptr [esp], eax
0x18960:    e8 b0 3d 01 00                  	call 0x2c715 <unknown_2c715>
0x18965:    8b 00                           	mov eax, dword ptr [eax]
0x18967:    89 da                           	mov edx, ebx
0x18969:    29 c2                           	sub edx, eax
0x1896b:    89 d0                           	mov eax, edx
0x1896d:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18970:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18977:    74 05                           	je 0x1897e <function_1897e>
; data inside code section at 0x18979 -- 0x1897a
0x18979:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1897a -- 0x1897b
; function: function_1897b at 0x1897b -- 0x1897c
; data inside code section at 0x1897c -- 0x1897e
0x1897c:    ff ff                                              |..              |
; function: function_1897e at 0x1897e -- 0x18984
0x1897e:    83 c4 34                        	add esp, 0x34
0x18981:    5b                              	pop ebx
0x18982:    5d                              	pop ebp
0x18983:    c3                              	ret 
; section: .text._ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_
; function: _ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_ at 0x18984 -- 0x189c4
0x18984:    55                              	push ebp
0x18985:    89 e5                           	mov ebp, esp
0x18987:    83 ec 38                        	sub esp, 0x38
0x1898a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1898d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18990:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18993:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18996:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18999:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1899c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x189a2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x189a5:    31 c0                           	xor eax, eax
0x189a7:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x189ab:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x189ae:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x189b2:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x189b5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x189b9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x189bc:    89 04 24                        	mov dword ptr [esp], eax
0x189bf:    e8 eb 68 01 00                  	call 0x2f2af <unknown_2f2af>
; data inside code section at 0x189c4 -- 0x189c5
0x189c4:    8b                                                 |.               |
; function: function_189c5 at 0x189c5 -- 0x189d0
0x189c5:    55                              	push ebp
0x189c6:    f4                              	hlt 
0x189c7:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x189ce:    74 05                           	je 0x189d5 <function_189d5>
; data inside code section at 0x189d0 -- 0x189d1
0x189d0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x189d1 -- 0x189d2
; data inside code section at 0x189d2 -- 0x189d5
0x189d2:    ff ff ff                                           |...             |
; function: function_189d5 at 0x189d5 -- 0x189d7
0x189d5:    c9                              	leave 
0x189d6:    c3                              	ret 
; section: .text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_
; function: _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_ at 0x189d7 -- 0x18a28
0x189d7:    55                              	push ebp
0x189d8:    89 e5                           	mov ebp, esp
0x189da:    83 ec 38                        	sub esp, 0x38
0x189dd:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x189e0:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x189e3:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x189e6:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x189e9:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x189ec:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x189ef:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x189f5:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x189f8:    31 c0                           	xor eax, eax
0x189fa:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x189fd:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18a00:    89 d1                           	mov ecx, edx
0x18a02:    29 c1                           	sub ecx, eax
0x18a04:    89 c8                           	mov eax, ecx
0x18a06:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x18a09:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x18a0d:    74 1e                           	je 0x18a2d <function_18a2d>
0x18a0f:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x18a12:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x18a15:    f7 d8                           	neg eax
0x18a17:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x18a1a:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18a1e:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x18a21:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18a25:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18a28 -- 0x18a29
0x18a28:    e8                                                 |.               |
; dynamically linked function: memmove at 0x18a29 -- 0x18a2a
; data inside code section at 0x18a2a -- 0x18a2d
0x18a2a:    ff ff ff                                           |...             |
; function: function_18a2d at 0x18a2d -- 0x18a41
0x18a2d:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x18a30:    f7 d8                           	neg eax
0x18a32:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x18a35:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18a38:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18a3f:    74 05                           	je 0x18a46 <function_18a46>
; data inside code section at 0x18a41 -- 0x18a42
0x18a41:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18a42 -- 0x18a43
; data inside code section at 0x18a43 -- 0x18a44
0x18a43:    ff                                                 |.               |
; function: function_18a44 at 0x18a44 -- 0x18a45
; data inside code section at 0x18a45 -- 0x18a46
0x18a45:    ff                                                 |.               |
; function: function_18a46 at 0x18a46 -- 0x18a48
0x18a46:    c9                              	leave 
0x18a47:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_
; function: _ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_ at 0x18a48 -- 0x18a6e
0x18a48:    55                              	push ebp
0x18a49:    89 e5                           	mov ebp, esp
0x18a4b:    83 ec 28                        	sub esp, 0x28
0x18a4e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18a51:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18a54:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18a5a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18a5d:    31 c0                           	xor eax, eax
0x18a5f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18a62:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18a65:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18a6c:    74 05                           	je 0x18a73 <function_18a73>
; data inside code section at 0x18a6e -- 0x18a6f
0x18a6e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18a6f -- 0x18a70
; data inside code section at 0x18a70 -- 0x18a73
0x18a70:    ff ff ff                                           |...             |
; function: function_18a73 at 0x18a73 -- 0x18a75
0x18a73:    c9                              	leave 
0x18a74:    c3                              	ret 
; section: .text._ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_
; function: _ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_ at 0x18a75 -- 0x18aa3
0x18a75:    55                              	push ebp
0x18a76:    89 e5                           	mov ebp, esp
0x18a78:    83 ec 38                        	sub esp, 0x38
0x18a7b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18a7e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18a81:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18a87:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18a8a:    31 c0                           	xor eax, eax
0x18a8c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18a8f:    89 04 24                        	mov dword ptr [esp], eax
0x18a92:    e8 26 8a 01 00                  	call 0x314bd <unknown_314bd>
0x18a97:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18a9a:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18aa1:    74 05                           	je 0x18aa8 <function_18aa8>
; data inside code section at 0x18aa3 -- 0x18aa4
0x18aa3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18aa4 -- 0x18aa5
; data inside code section at 0x18aa5 -- 0x18aa8
0x18aa5:    ff ff ff                                           |...             |
; function: function_18aa8 at 0x18aa8 -- 0x18aaa
0x18aa8:    c9                              	leave 
0x18aa9:    c3                              	ret 
; section: .text._ZSt6fill_nIPhjhET_S1_T0_RKT1_
; function: _ZSt6fill_nIPhjhET_S1_T0_RKT1_ at 0x18aaa -- 0x18ad3
0x18aaa:    55                              	push ebp
0x18aab:    89 e5                           	mov ebp, esp
0x18aad:    83 ec 38                        	sub esp, 0x38
0x18ab0:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18ab3:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18ab6:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18ab9:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18abc:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18abf:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18ac2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18ac8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18acb:    31 c0                           	xor eax, eax
0x18acd:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18ad0:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18ad3 -- 0x18ad5
0x18ad3:    e8 3e                                              |.>              |
; function: function_18ad5 at 0x18ad5 -- 0x18afa
0x18ad5:    44                              	inc esp
0x18ad6:    01 00                           	add dword ptr [eax], eax
0x18ad8:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x18adb:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18adf:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x18ae2:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18ae6:    89 04 24                        	mov dword ptr [esp], eax
0x18ae9:    e8 97 9a 01 00                  	call 0x32585 <unknown_32585>
0x18aee:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18af1:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18af8:    74 05                           	je 0x18aff <function_18aff>
; data inside code section at 0x18afa -- 0x18afb
0x18afa:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18afb -- 0x18afc
; data inside code section at 0x18afc -- 0x18aff
0x18afc:    ff ff ff                                           |...             |
; function: function_18aff at 0x18aff -- 0x18b01
0x18aff:    c9                              	leave 
0x18b00:    c3                              	ret 
; section: .text._ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag
; function: _ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag at 0x18b02 -- 0x18b2c
0x18b02:    55                              	push ebp
0x18b03:    89 e5                           	mov ebp, esp
0x18b05:    56                              	push esi
0x18b06:    53                              	push ebx
0x18b07:    83 ec 30                        	sub esp, 0x30
0x18b0a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18b0d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18b10:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18b13:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18b16:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18b19:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18b1c:    0f b6 45 14                     	movzx eax, byte ptr [ebp + 0x14]
0x18b20:    88 45 db                        	mov byte ptr [ebp - 0x25], al
0x18b23:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18b29:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; function: function_18b2c at 0x18b2c -- 0x18b41
0x18b2c:    31 c0                           	xor eax, eax
0x18b2e:    bb 00 00 00 00                  	mov ebx, 0
0x18b33:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18b36:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x18b39:    75 2d                           	jne 0x18b68 <function_18b68>
0x18b3b:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x18b3e:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18b41 -- 0x18b42
0x18b41:    e8                                                 |.               |
; dynamically linked function: _ZNSaIcEC1Ev at 0x18b42 -- 0x18b43
; data inside code section at 0x18b43 -- 0x18b46
0x18b43:    ff ff ff                                           |...             |
; function: function_18b46 at 0x18b46 -- 0x18b68
0x18b46:    bb 01 00 00 00                  	mov ebx, 1
0x18b4b:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x18b4e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18b52:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18b55:    89 04 24                        	mov dword ptr [esp], eax
0x18b58:    e8 dd 65 01 00                  	call 0x2f13a <unknown_2f13a>
0x18b5d:    84 c0                           	test al, al
0x18b5f:    74 07                           	je 0x18b68 <function_18b68>
0x18b61:    b8 01 00 00 00                  	mov eax, 1
0x18b66:    eb 05                           	jmp 0x18b6d
; function: function_18b68 at 0x18b68 -- 0x18b79
0x18b68:    b8 00 00 00 00                  	mov eax, 0
0x18b6d:    89 c6                           	mov esi, eax
0x18b6f:    84 db                           	test bl, bl
0x18b71:    74 0b                           	je 0x18b7e <function_18b7e>
0x18b73:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x18b76:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18b79 -- 0x18b7a
0x18b79:    e8                                                 |.               |
; dynamically linked function: _ZNSaIcED1Ev at 0x18b7a -- 0x18b7b
; data inside code section at 0x18b7b -- 0x18b7e
0x18b7b:    ff ff ff                                           |...             |
; function: function_18b7e at 0x18b7e -- 0x18b84
0x18b7e:    89 f2                           	mov edx, esi
0x18b80:    84 d2                           	test dl, dl
0x18b82:    74 12                           	je 0x18b96 <function_18b96>
; data inside code section at 0x18b84 -- 0x18b85
0x18b84:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_S_empty_repEv at 0x18b85 -- 0x18b86
; data inside code section at 0x18b86 -- 0x18b8d
0x18b86:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZNSs4_Rep10_M_refdataEv at 0x18b8d -- 0x18b8e
; data inside code section at 0x18b8e -- 0x18b91
0x18b8e:    ff ff ff                                           |...             |
; function: function_18b91 at 0x18b91 -- 0x18b96
0x18b91:    e9 a3 00 00 00                  	jmp 0x18c39 <function_18c39>
; function: function_18b96 at 0x18b96 -- 0x18bc4
0x18b96:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18b99:    89 04 24                        	mov dword ptr [esp], eax
0x18b9c:    e8 98 9a 01 00                  	call 0x32639 <unknown_32639>
0x18ba1:    84 c0                           	test al, al
0x18ba3:    74 0f                           	je 0x18bb4 <function_18b96+0x1e>
0x18ba5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18ba8:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x18bab:    74 07                           	je 0x18bb4 <function_18b96+0x1e>
0x18bad:    b8 01 00 00 00                  	mov eax, 1
0x18bb2:    eb 05                           	jmp 0x18bb9 <function_18b96+0x23>
0x18bb4:    b8 00 00 00 00                  	mov eax, 0
0x18bb9:    84 c0                           	test al, al
0x18bbb:    74 0c                           	je 0x18bc9 <function_18bc9>
0x18bbd:    c7 04 24 20 3f 00 00            	mov dword ptr [esp], 0x3f20 ; "basic_string::_S_construct null not valid"
; data inside code section at 0x18bc4 -- 0x18bc5
0x18bc4:    e8                                                 |.               |
; dynamically linked function: _ZSt19__throw_logic_errorPKc at 0x18bc5 -- 0x18bc6
; data inside code section at 0x18bc6 -- 0x18bc9
0x18bc6:    ff ff ff                                           |...             |
; function: function_18bc9 at 0x18bc9 -- 0x18c01
0x18bc9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x18bcc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18bd0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18bd3:    89 04 24                        	mov dword ptr [esp], eax
0x18bd6:    e8 54 3c 01 00                  	call 0x2c82f <unknown_2c82f>
0x18bdb:    89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x18bde:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18be1:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x18be5:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x18bed:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x18bf0:    89 04 24                        	mov dword ptr [esp], eax
0x18bf3:    e8 fc ff ff ff                  	call 0x18bf4
0x18bf8:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x18bfb:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x18bfe:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18c01 -- 0x18c02
0x18c01:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_refdataEv at 0x18c02 -- 0x18c03
; data inside code section at 0x18c03 -- 0x18c18
0x18c03:    ff ff ff 8b 55 e0 89 54  24 08 8b 55 e4 89 54 24   |....U..T$..U..T$|
0x18c13:    04 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZNSs13_S_copy_charsEPcS_S_ at 0x18c18 -- 0x18c19
; data inside code section at 0x18c19 -- 0x18c26
0x18c19:    ff ff ff 8b 45 e8 89 44  24 04 8b 45 ec            |....E..D$..E.   |
; function: function_18c26 at 0x18c26 -- 0x18c29
0x18c26:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18c29 -- 0x18c2a
0x18c29:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep26_M_set_length_and_sharableEj at 0x18c2a -- 0x18c2b
; data inside code section at 0x18c2b -- 0x18c35
0x18c2b:    ff ff ff 8b 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSs4_Rep10_M_refdataEv at 0x18c35 -- 0x18c36
; data inside code section at 0x18c36 -- 0x18c39
0x18c36:    ff ff ff                                           |...             |
; function: function_18c39 at 0x18c39 -- 0x18c45
0x18c39:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18c3c:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18c43:    74 37                           	je 0x18c7c <function_18c7c>
; data inside code section at 0x18c45 -- 0x18c46
0x18c45:    eb                                                 |.               |
; function: function_18c46 at 0x18c46 -- 0x18c47
; data inside code section at 0x18c47 -- 0x18c48
0x18c47:    89                                                 |.               |
; function: function_18c48 at 0x18c48 -- 0x18c49
0x18c48:    c3                              	ret 
; data inside code section at 0x18c49 -- 0x18c4a
0x18c49:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x18c4a -- 0x18c4b
; data inside code section at 0x18c4b -- 0x18c54
0x18c4b:    ff ff ff 89 d8 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x18c54 -- 0x18c55
; data inside code section at 0x18c55 -- 0x18c5c
0x18c55:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x18c5c -- 0x18c5d
; data inside code section at 0x18c5d -- 0x18c6e
0x18c5d:    ff ff ff 8b 45 dc 89 44  24 04 8b 45 ec 89 04 24   |....E..D$..E...$|
0x18c6d:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x18c6e -- 0x18c6f
; data inside code section at 0x18c6f -- 0x18c71
0x18c6f:    ff ff                                              |..              |
; function: function_18c71 at 0x18c71 -- 0x18c72
; data inside code section at 0x18c72 -- 0x18c73
0x18c72:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x18c73 -- 0x18c74
; data inside code section at 0x18c74 -- 0x18c78
0x18c74:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x18c78 -- 0x18c79
; data inside code section at 0x18c79 -- 0x18c7c
0x18c79:    ff ff ff                                           |...             |
; function: function_18c7c at 0x18c7c -- 0x18c83
0x18c7c:    83 c4 30                        	add esp, 0x30
0x18c7f:    5b                              	pop ebx
0x18c80:    5e                              	pop esi
0x18c81:    5d                              	pop ebp
0x18c82:    c3                              	ret 
; section: .text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_
; function: _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_ at 0x18c83 -- 0x18cd4
0x18c83:    55                              	push ebp
0x18c84:    89 e5                           	mov ebp, esp
0x18c86:    83 ec 38                        	sub esp, 0x38
0x18c89:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18c8c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18c8f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18c92:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18c95:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18c98:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18c9b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18ca1:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18ca4:    31 c0                           	xor eax, eax
0x18ca6:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x18ca9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18cac:    89 d1                           	mov ecx, edx
0x18cae:    29 c1                           	sub ecx, eax
0x18cb0:    89 c8                           	mov eax, ecx
0x18cb2:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x18cb5:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x18cb9:    74 1e                           	je 0x18cd9 <function_18cd9>
0x18cbb:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x18cbe:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x18cc1:    f7 d8                           	neg eax
0x18cc3:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x18cc6:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18cca:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x18ccd:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x18cd1:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18cd4 -- 0x18cd5
0x18cd4:    e8                                                 |.               |
; dynamically linked function: memmove at 0x18cd5 -- 0x18cd6
; data inside code section at 0x18cd6 -- 0x18cd9
0x18cd6:    ff ff ff                                           |...             |
; function: function_18cd9 at 0x18cd9 -- 0x18ceb
0x18cd9:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x18cdc:    f7 d8                           	neg eax
0x18cde:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x18ce1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18ce4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
; function: function_18ceb at 0x18ceb -- 0x18ced
0x18ceb:    74 05                           	je 0x18cf2 <function_18cf2>
; data inside code section at 0x18ced -- 0x18cee
0x18ced:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18cee -- 0x18cef
; function: function_18cef at 0x18cef -- 0x18cf0
; data inside code section at 0x18cf0 -- 0x18cf2
0x18cf0:    ff ff                                              |..              |
; function: function_18cf2 at 0x18cf2 -- 0x18cf4
0x18cf2:    c9                              	leave 
0x18cf3:    c3                              	ret 
; section: .text._ZNK9CFlatData9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK9CFlatData9SerializeI11CDataStreamEEvRT_ii at 0x18cf4 -- 0x18d1d
0x18cf4:    55                              	push ebp
0x18cf5:    89 e5                           	mov ebp, esp
0x18cf7:    83 ec 38                        	sub esp, 0x38
0x18cfa:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18cfd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18d00:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18d03:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18d06:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18d09:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18d0c:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18d0f:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x18d12:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18d18:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18d1b:    31 c0                           	xor eax, eax
; data inside code section at 0x18d1d -- 0x18d1e
0x18d1d:    8b                                                 |.               |
; function: function_18d1e at 0x18d1e -- 0x18d27
0x18d1e:    45                              	inc ebp
0x18d1f:    e4 8b                           	in al, 0x8b
0x18d21:    40                              	inc eax
0x18d22:    04 89                           	add al, 0x89
0x18d24:    c2 8b 45                        	ret 0x458b
; function: function_18d27 at 0x18d27 -- 0x18d2e
0x18d27:    e4 8b                           	in al, 0x8b
0x18d29:    00 29                           	add byte ptr [ecx], ch
0x18d2b:    c2 8b 45                        	ret 0x458b
; data inside code section at 0x18d2e -- 0x18d30
0x18d2e:    e4 8b                                              |..              |
; function: function_18d30 at 0x18d30 -- 0x18d50
0x18d30:    00 89 54 24 08 89               	add byte ptr [ecx - 0x76f7dbac], cl
0x18d36:    44                              	inc esp
0x18d37:    24 04                           	and al, 4
0x18d39:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x18d3c:    89 04 24                        	mov dword ptr [esp], eax
0x18d3f:    e8 1e 4b 00 00                  	call 0x1d862 <unknown_1d862>
0x18d44:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x18d47:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x18d4e:    74 05                           	je 0x18d55 <function_18d55>
; data inside code section at 0x18d50 -- 0x18d51
0x18d50:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18d51 -- 0x18d52
; data inside code section at 0x18d52 -- 0x18d55
0x18d52:    ff ff ff                                           |...             |
; function: function_18d55 at 0x18d55 -- 0x18d57
0x18d55:    c9                              	leave 
0x18d56:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_
; function: _ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_ at 0x18d57 -- 0x18d97
0x18d57:    55                              	push ebp
0x18d58:    89 e5                           	mov ebp, esp
0x18d5a:    83 ec 28                        	sub esp, 0x28
0x18d5d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18d60:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18d63:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18d66:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18d69:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18d6c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18d6f:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18d75:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18d78:    31 c0                           	xor eax, eax
0x18d7a:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x18d7d:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18d80:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x18d83:    89 01                           	mov dword ptr [ecx], eax
0x18d85:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x18d88:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18d8b:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18d8e:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18d95:    74 05                           	je 0x18d9c <function_18d9c>
; data inside code section at 0x18d97 -- 0x18d98
0x18d97:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18d98 -- 0x18d99
; data inside code section at 0x18d99 -- 0x18d9c
0x18d99:    ff ff ff                                           |...             |
; function: function_18d9c at 0x18d9c -- 0x18da0
0x18d9c:    c9                              	leave 
0x18d9d:    c2 04 00                        	ret 4
; section: .text._ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_
; function: _ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ at 0x18da0 -- 0x18dee
0x18da0:    55                              	push ebp
0x18da1:    89 e5                           	mov ebp, esp
0x18da3:    83 ec 38                        	sub esp, 0x38
0x18da6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18da9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18dac:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18daf:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18db2:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18db5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18db8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18dbe:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18dc1:    31 c0                           	xor eax, eax
0x18dc3:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x18dc6:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18dc9:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x18dcc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18dd0:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18dd4:    89 0c 24                        	mov dword ptr [esp], ecx
0x18dd7:    e8 1b 8d 01 00                  	call 0x31af7 <unknown_31af7>
0x18ddc:    83 ec 04                        	sub esp, 4
0x18ddf:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18de2:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18de5:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18dec:    74 05                           	je 0x18df3 <function_18df3>
; data inside code section at 0x18dee -- 0x18def
0x18dee:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18def -- 0x18df0
; data inside code section at 0x18df0 -- 0x18df3
0x18df0:    ff ff ff                                           |...             |
; function: function_18df3 at 0x18df3 -- 0x18df4
0x18df3:    c9                              	leave 
; function: function_18df4 at 0x18df4 -- 0x18df7
0x18df4:    c2 04 00                        	ret 4
; section: .text._ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
; function: _ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ at 0x18df7 -- 0x18e51
0x18df7:    55                              	push ebp
0x18df8:    89 e5                           	mov ebp, esp
0x18dfa:    83 ec 58                        	sub esp, 0x58
0x18dfd:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18e00:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18e03:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18e06:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18e09:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18e0c:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18e0f:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18e12:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x18e15:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x18e18:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x18e1b:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x18e1e:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x18e21:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x18e24:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x18e27:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18e2d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18e30:    31 c0                           	xor eax, eax
0x18e32:    c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x18e36:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x18e39:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x18e3c:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x18e3f:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x18e43:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x18e47:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x18e4a:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x18e4d:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
; data inside code section at 0x18e51 -- 0x18e53
0x18e51:    89 54                                              |.T              |
; function: function_18e53 at 0x18e53 -- 0x18e7d
0x18e53:    24 10                           	and al, 0x10
0x18e55:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18e58:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x18e5b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x18e5f:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18e63:    89 0c 24                        	mov dword ptr [esp], ecx
0x18e66:    e8 7f 9c 01 00                  	call 0x32aea <unknown_32aea>
0x18e6b:    83 ec 04                        	sub esp, 4
0x18e6e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18e71:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18e74:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18e7b:    74 05                           	je 0x18e82 <function_18e82>
; data inside code section at 0x18e7d -- 0x18e7e
0x18e7d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18e7e -- 0x18e7f
; data inside code section at 0x18e7f -- 0x18e80
0x18e7f:    ff                                                 |.               |
; function: function_18e80 at 0x18e80 -- 0x18e81
; data inside code section at 0x18e81 -- 0x18e82
0x18e81:    ff                                                 |.               |
; function: function_18e82 at 0x18e82 -- 0x18e86
0x18e82:    c9                              	leave 
0x18e83:    c2 04 00                        	ret 4
; section: .text._ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
; function: _ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv at 0x18e86 -- 0x18e92
0x18e86:    55                              	push ebp
0x18e87:    89 e5                           	mov ebp, esp
0x18e89:    83 ec 28                        	sub esp, 0x28
0x18e8c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18e8f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0x18e92 -- 0x18e96
0x18e92:    65 a1 14 00                                        |e...            |
; function: function_18e96 at 0x18e96 -- 0x18eac
0x18e96:    00 00                           	add byte ptr [eax], al
0x18e98:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18e9b:    31 c0                           	xor eax, eax
0x18e9d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18ea0:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18ea3:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18eaa:    74 05                           	je 0x18eb1 <function_18eb1>
; data inside code section at 0x18eac -- 0x18ead
0x18eac:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18ead -- 0x18eae
; data inside code section at 0x18eae -- 0x18eb1
0x18eae:    ff ff ff                                           |...             |
; function: function_18eb1 at 0x18eb1 -- 0x18eb3
0x18eb1:    c9                              	leave 
0x18eb2:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
; function: _ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv at 0x18eb4 -- 0x18ed3
0x18eb4:    55                              	push ebp
0x18eb5:    89 e5                           	mov ebp, esp
0x18eb7:    83 ec 28                        	sub esp, 0x28
0x18eba:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18ebd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18ec0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18ec6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18ec9:    31 c0                           	xor eax, eax
0x18ecb:    b8 ff ff ff 3f                  	mov eax, 0x3fffffff
0x18ed0:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x18ed3 -- 0x18edd
0x18ed3:    65 33 15 14 00 00 00 74  05 e8                     |e3.....t..      |
; dynamically linked function: __stack_chk_fail at 0x18edd -- 0x18ede
; data inside code section at 0x18ede -- 0x18ee0
0x18ede:    ff ff                                              |..              |
; function: function_18ee0 at 0x18ee0 -- 0x18ee3
0x18ee0:    ff c9                           	dec ecx
0x18ee2:    c3                              	ret 
; section: .text._ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_
; function: _ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_ at 0x18ee3 -- 0x18efd
0x18ee3:    55                              	push ebp
0x18ee4:    89 e5                           	mov ebp, esp
0x18ee6:    83 ec 38                        	sub esp, 0x38
0x18ee9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18eec:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18eef:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18ef5:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18ef8:    31 c0                           	xor eax, eax
0x18efa:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; function: function_18efd at 0x18efd -- 0x18f11
0x18efd:    89 04 24                        	mov dword ptr [esp], eax
0x18f00:    e8 68 0b 01 00                  	call 0x29a6d <unknown_29a6d>
0x18f05:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18f08:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18f0f:    74 05                           	je 0x18f16 <function_18f16>
; data inside code section at 0x18f11 -- 0x18f12
0x18f11:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18f12 -- 0x18f13
; data inside code section at 0x18f13 -- 0x18f16
0x18f13:    ff ff ff                                           |...             |
; function: function_18f16 at 0x18f16 -- 0x18f18
0x18f16:    c9                              	leave 
0x18f17:    c3                              	ret 
; section: .text._ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
; function: _ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ at 0x18f18 -- 0x18f4a
0x18f18:    55                              	push ebp
0x18f19:    89 e5                           	mov ebp, esp
0x18f1b:    56                              	push esi
0x18f1c:    53                              	push ebx
0x18f1d:    83 ec 30                        	sub esp, 0x30
0x18f20:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18f23:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18f26:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18f29:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18f2c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18f2f:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18f32:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18f38:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18f3b:    31 c0                           	xor eax, eax
0x18f3d:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x18f40:    89 04 24                        	mov dword ptr [esp], eax
0x18f43:    e8 af cf 00 00                  	call 0x25ef7 <unknown_25ef7>
0x18f48:    89 c6                           	mov esi, eax
; data inside code section at 0x18f4a -- 0x18f4c
0x18f4a:    8b 45                                              |.E              |
; function: function_18f4c at 0x18f4c -- 0x18f6d
0x18f4c:    e0 89                           	loopne 0x18ed7
0x18f4e:    04 24                           	add al, 0x24
0x18f50:    e8 a2 cf 00 00                  	call 0x25ef7 <unknown_25ef7>
0x18f55:    89 c3                           	mov ebx, eax
0x18f57:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18f5a:    89 04 24                        	mov dword ptr [esp], eax
0x18f5d:    e8 95 cf 00 00                  	call 0x25ef7 <unknown_25ef7>
0x18f62:    89 74 24 08                     	mov dword ptr [esp + 8], esi
0x18f66:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x18f6a:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x18f6d -- 0x18f6f
0x18f6d:    e8 6c                                              |.l              |
; function: function_18f6f at 0x18f6f -- 0x18f7e
0x18f6f:    9d                              	popfd 
0x18f70:    01 00                           	add dword ptr [eax], eax
0x18f72:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18f75:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18f7c:    74 05                           	je 0x18f83 <function_18f83>
; data inside code section at 0x18f7e -- 0x18f7f
0x18f7e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18f7f -- 0x18f80
; data inside code section at 0x18f80 -- 0x18f83
0x18f80:    ff ff ff                                           |...             |
; function: function_18f83 at 0x18f83 -- 0x18f8a
0x18f83:    83 c4 30                        	add esp, 0x30
0x18f86:    5b                              	pop ebx
0x18f87:    5e                              	pop esi
0x18f88:    5d                              	pop ebp
0x18f89:    c3                              	ret 
; section: .text._ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_
; function: _ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_ at 0x18f8a -- 0x18fad
0x18f8a:    55                              	push ebp
0x18f8b:    89 e5                           	mov ebp, esp
0x18f8d:    83 ec 38                        	sub esp, 0x38
0x18f90:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18f93:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x18f96:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18f99:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x18f9c:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18f9f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x18fa2:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x18fa8:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x18fab:    31 c0                           	xor eax, eax
; data inside code section at 0x18fad -- 0x18fae
0x18fad:    8b                                                 |.               |
; function: function_18fae at 0x18fae -- 0x18fd8
0x18fae:    4d                              	dec ebp
0x18faf:    e4 8b                           	in al, 0x8b
0x18fb1:    45                              	inc ebp
0x18fb2:    dc 8b 55 e0 89 44               	fmul qword ptr [ebx + 0x4489e055]
0x18fb8:    24 04                           	and al, 4
0x18fba:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x18fbe:    89 0c 24                        	mov dword ptr [esp], ecx
0x18fc1:    e8 dd 9d 01 00                  	call 0x32da3 <unknown_32da3>
0x18fc6:    83 ec 04                        	sub esp, 4
0x18fc9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x18fcc:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x18fcf:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x18fd6:    74 05                           	je 0x18fdd <function_18fdd>
; data inside code section at 0x18fd8 -- 0x18fd9
0x18fd8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18fd9 -- 0x18fda
; data inside code section at 0x18fda -- 0x18fdd
0x18fda:    ff ff ff                                           |...             |
; function: function_18fdd at 0x18fdd -- 0x18fe1
0x18fdd:    c9                              	leave 
0x18fde:    c2 04 00                        	ret 4
; section: .text._ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
; function: _ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ at 0x18fe1 -- 0x1901a
0x18fe1:    55                              	push ebp
0x18fe2:    89 e5                           	mov ebp, esp
0x18fe4:    83 ec 68                        	sub esp, 0x68
0x18fe7:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x18fea:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x18fed:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x18ff0:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x18ff3:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x18ff6:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x18ff9:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x18ffc:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x18fff:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x19002:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x19005:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x19008:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x1900b:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x1900e:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x19011:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19017:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; function: function_1901a at 0x1901a -- 0x1909d
0x1901a:    31 c0                           	xor eax, eax
0x1901c:    8d 4d ec                        	lea ecx, [ebp - 0x14]
0x1901f:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x19022:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x19025:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19029:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1902d:    89 0c 24                        	mov dword ptr [esp], ecx
0x19030:    e8 4c 8d 01 00                  	call 0x31d81 <unknown_31d81>
0x19035:    83 ec 04                        	sub esp, 4
0x19038:    8d 4d e4                        	lea ecx, [ebp - 0x1c]
0x1903b:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1903e:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x19041:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19045:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x19049:    89 0c 24                        	mov dword ptr [esp], ecx
0x1904c:    e8 f2 9d 01 00                  	call 0x32e43 <unknown_32e43>
0x19051:    83 ec 04                        	sub esp, 4
0x19054:    8d 4d dc                        	lea ecx, [ebp - 0x24]
0x19057:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x1905a:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x1905d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19061:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x19065:    89 0c 24                        	mov dword ptr [esp], ecx
0x19068:    e8 d6 9d 01 00                  	call 0x32e43 <unknown_32e43>
0x1906d:    83 ec 04                        	sub esp, 4
0x19070:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x19073:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x19076:    8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x19079:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x1907d:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x19081:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19084:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x19087:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1908b:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x1908f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19092:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x19095:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19099:    89 54 24 08                     	mov dword ptr [esp + 8], edx
; data inside code section at 0x1909d -- 0x1909e
0x1909d:    89                                                 |.               |
; function: function_1909e at 0x1909e -- 0x190b7
0x1909e:    0c 24                           	or al, 0x24
0x190a0:    e8 f5 9d 01 00                  	call 0x32e9a <unknown_32e9a>
0x190a5:    83 ec 04                        	sub esp, 4
0x190a8:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x190ab:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x190ae:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x190b5:    74 05                           	je 0x190bc <function_190bc>
; data inside code section at 0x190b7 -- 0x190b8
0x190b7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x190b8 -- 0x190b9
; data inside code section at 0x190b9 -- 0x190bc
0x190b9:    ff ff ff                                           |...             |
; function: function_190bc at 0x190bc -- 0x190c0
0x190bc:    c9                              	leave 
0x190bd:    c2 04 00                        	ret 4
; section: .text._ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
; function: _ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ at 0x190c0 -- 0x19146
0x190c0:    55                              	push ebp
0x190c1:    89 e5                           	mov ebp, esp
0x190c3:    83 ec 58                        	sub esp, 0x58
0x190c6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x190c9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x190cc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x190cf:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x190d2:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x190d5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x190d8:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x190db:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x190de:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x190e1:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x190e4:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x190e7:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x190ea:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x190ed:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x190f0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x190f6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x190f9:    31 c0                           	xor eax, eax
0x190fb:    c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x190ff:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x19102:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x19105:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x19108:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x1910c:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x19110:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x19113:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x19116:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1911a:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x1911e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19121:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x19124:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19128:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1912c:    89 0c 24                        	mov dword ptr [esp], ecx
0x1912f:    e8 d4 9e 01 00                  	call 0x33008 <unknown_33008>
0x19134:    83 ec 04                        	sub esp, 4
0x19137:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1913a:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1913d:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19144:    74 05                           	je 0x1914b <function_1914b>
; data inside code section at 0x19146 -- 0x19147
0x19146:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19147 -- 0x19148
; data inside code section at 0x19148 -- 0x1914b
0x19148:    ff ff ff                                           |...             |
; function: function_1914b at 0x1914b -- 0x1914f
0x1914b:    c9                              	leave 
0x1914c:    c2 04 00                        	ret 4
; section: .text._ZNK7CVarIntIiE9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK7CVarIntIiE9SerializeI11CDataStreamEEvRT_ii at 0x19150 -- 0x191a2
0x19150:    55                              	push ebp
0x19151:    89 e5                           	mov ebp, esp
0x19153:    83 ec 38                        	sub esp, 0x38
0x19156:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19159:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1915c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1915f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19162:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19165:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19168:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1916b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1916e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19174:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19177:    31 c0                           	xor eax, eax
0x19179:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1917c:    8b 00                           	mov eax, dword ptr [eax]
0x1917e:    8b 00                           	mov eax, dword ptr [eax]
0x19180:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19184:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19187:    89 04 24                        	mov dword ptr [esp], eax
0x1918a:    e8 e2 9f 01 00                  	call 0x33171 <unknown_33171>
0x1918f:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19192:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19199:    74 05                           	je 0x191a0 <_ZNK7CVarIntIiE9SerializeI11CDataStreamEEvRT_ii+0x50>
0x1919b:    e8 fc ff ff ff                  	call 0x1919c
0x191a0:    c9                              	leave 
0x191a1:    c3                              	ret 
; section: .text._ZNK7CVarIntIjE9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK7CVarIntIjE9SerializeI11CDataStreamEEvRT_ii at 0x191a2 -- 0x191ed
0x191a2:    55                              	push ebp
0x191a3:    89 e5                           	mov ebp, esp
0x191a5:    83 ec 38                        	sub esp, 0x38
0x191a8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x191ab:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x191ae:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x191b1:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x191b4:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x191b7:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x191ba:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x191bd:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x191c0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x191c6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x191c9:    31 c0                           	xor eax, eax
0x191cb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x191ce:    8b 00                           	mov eax, dword ptr [eax]
0x191d0:    8b 00                           	mov eax, dword ptr [eax]
0x191d2:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x191d6:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x191d9:    89 04 24                        	mov dword ptr [esp], eax
0x191dc:    e8 84 a0 01 00                  	call 0x33265 <unknown_33265>
0x191e1:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x191e4:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x191eb:    74 05                           	je 0x191f2 <function_191f2>
; data inside code section at 0x191ed -- 0x191ee
0x191ed:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x191ee -- 0x191ef
; function: function_191ef at 0x191ef -- 0x191f0
; data inside code section at 0x191f0 -- 0x191f2
0x191f0:    ff ff                                              |..              |
; function: function_191f2 at 0x191f2 -- 0x191f4
0x191f2:    c9                              	leave 
0x191f3:    c3                              	ret 
; section: .text._ZNK16CTxOutCompressor9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK16CTxOutCompressor9SerializeI11CDataStreamEEvRT_ii at 0x191f4 -- 0x19243
0x191f4:    55                              	push ebp
0x191f5:    89 e5                           	mov ebp, esp
0x191f7:    56                              	push esi
0x191f8:    53                              	push ebx
0x191f9:    83 ec 50                        	sub esp, 0x50
0x191fc:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x191ff:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x19202:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19205:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x19208:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1920b:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1920e:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19211:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x19214:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1921a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1921d:    31 c0                           	xor eax, eax
0x1921f:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x19223:    c6 45 f2 01                     	mov byte ptr [ebp - 0xe], 1
0x19227:    c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x1922b:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x19232:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x19235:    8b 00                           	mov eax, dword ptr [eax]
0x19237:    8b 50 04                        	mov edx, dword ptr [eax + 4]
0x1923a:    8b 00                           	mov eax, dword ptr [eax]
0x1923c:    89 04 24                        	mov dword ptr [esp], eax
0x1923f:    89 54 24 04                     	mov dword ptr [esp + 4], edx
; data inside code section at 0x19243 -- 0x19244
0x19243:    e8                                                 |.               |
; dynamically linked function: _ZN16CTxOutCompressor14CompressAmountEy at 0x19244 -- 0x19245
; data inside code section at 0x19245 -- 0x19298
0x19245:    ff ff ff 89 45 d8 89 55  dc 8d 45 d8 89 04 24 e8   |....E..U..E...$.|
0x19255:    71 96 00 00 8d 55 e0 89  44 24 04 89 14 24 e8 8f   |q....U..D$...$..|
0x19265:    96 00 00 83 ec 04 8d 45  e0 89 04 24 e8 c8 96 00   |.......E...$....|
0x19275:    00 89 f2 88 54 24 10 8b  55 c8 89 54 24 0c 8b 55   |....T$..U..T$..U|
0x19285:    cc 89 54 24 08 89 44 24  04 8b 45 d0 89 04 24 e8   |..T$..D$..E...$.|
0x19295:    e6 94 01                                           |...             |
; function: function_19298 at 0x19298 -- 0x1929b
0x19298:    00 01                           	add byte ptr [ecx], al
0x1929a:    45                              	inc ebp
; function: function_1929b at 0x1929b -- 0x192ee
0x1929b:    ec                              	in al, dx
0x1929c:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1929f:    8b 00                           	mov eax, dword ptr [eax]
0x192a1:    83 c0 08                        	add eax, 8
0x192a4:    89 04 24                        	mov dword ptr [esp], eax
0x192a7:    e8 1b 97 00 00                  	call 0x229c7 <unknown_229c7>
0x192ac:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x192b0:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x192b3:    89 04 24                        	mov dword ptr [esp], eax
0x192b6:    e8 89 5a 00 00                  	call 0x1ed44 <unknown_1ed44>
0x192bb:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x192bf:    8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x192c2:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x192c6:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x192c9:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x192cd:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x192d0:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x192d4:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x192d7:    89 04 24                        	mov dword ptr [esp], eax
0x192da:    e8 78 a0 01 00                  	call 0x33357 <unknown_33357>
0x192df:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x192e2:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x192e5:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x192ec:    74 05                           	je 0x192f3 <function_192f3>
; data inside code section at 0x192ee -- 0x192ef
0x192ee:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x192ef -- 0x192f0
; data inside code section at 0x192f0 -- 0x192f3
0x192f0:    ff ff ff                                           |...             |
; function: function_192f3 at 0x192f3 -- 0x192fa
0x192f3:    8d 65 f8                        	lea esp, [ebp - 8]
0x192f6:    5b                              	pop ebx
0x192f7:    5e                              	pop esi
0x192f8:    5d                              	pop ebp
0x192f9:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7CVarIntIiEEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStream7CVarIntIiEEjRT_RKT0_ii19CSerActionSerialize at 0x192fa -- 0x19309
0x192fa:    55                              	push ebp
0x192fb:    89 e5                           	mov ebp, esp
0x192fd:    83 ec 48                        	sub esp, 0x48
0x19300:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19303:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19306:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0x19309 -- 0x1930a
0x19309:    89                                                 |.               |
; function: function_1930a at 0x1930a -- 0x19362
0x1930a:    45                              	inc ebp
0x1930b:    e0 8b                           	loopne 0x19298 <function_19298>
0x1930d:    45                              	inc ebp
0x1930e:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x19314:    14 89                           	adc al, 0x89
0x19316:    45                              	inc ebp
0x19317:    d8 0f                           	fmul dword ptr [edi]
0x19319:    b6 45                           	mov dh, 0x45
0x1931b:    18 88 45 d7 65 a1               	sbb byte ptr [eax - 0x5e9a28bb], cl
0x19321:    14 00                           	adc al, 0
0x19323:    00 00                           	add byte ptr [eax], al
0x19325:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19328:    31 c0                           	xor eax, eax
0x1932a:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1932d:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x19331:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19334:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19338:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1933b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1933f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19342:    89 04 24                        	mov dword ptr [esp], eax
0x19345:    e8 af 73 01 00                  	call 0x306f9 <unknown_306f9>
0x1934a:    b8 00 00 00 00                  	mov eax, 0
0x1934f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19352:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19359:    74 05                           	je 0x19360 <function_1930a+0x56>
0x1935b:    e8 fc ff ff ff                  	call 0x1935c
0x19360:    c9                              	leave 
0x19361:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStreamiEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStreamiEjRT_RKT0_ii19CSerActionSerialize at 0x19362 -- 0x193c5
0x19362:    55                              	push ebp
0x19363:    89 e5                           	mov ebp, esp
0x19365:    83 ec 48                        	sub esp, 0x48
0x19368:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1936b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1936e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19371:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19374:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19377:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1937a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1937d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19380:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x19384:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x19387:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1938d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19390:    31 c0                           	xor eax, eax
0x19392:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19395:    8b 00                           	mov eax, dword ptr [eax]
0x19397:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x1939a:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1939e:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x193a1:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x193a5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x193a9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x193ac:    89 04 24                        	mov dword ptr [esp], eax
0x193af:    e8 90 d7 00 00                  	call 0x26b44 <unknown_26b44>
0x193b4:    b8 00 00 00 00                  	mov eax, 0
0x193b9:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x193bc:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x193c3:    74 05                           	je 0x193ca <function_193ca>
; data inside code section at 0x193c5 -- 0x193c6
0x193c5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x193c6 -- 0x193c7
; data inside code section at 0x193c7 -- 0x193ca
0x193c7:    ff ff ff                                           |...             |
; function: function_193ca at 0x193ca -- 0x193cc
0x193ca:    c9                              	leave 
0x193cb:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7uint256EjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStream7uint256EjRT_RKT0_ii19CSerActionSerialize at 0x193cc -- 0x193de
0x193cc:    55                              	push ebp
0x193cd:    89 e5                           	mov ebp, esp
0x193cf:    83 ec 48                        	sub esp, 0x48
0x193d2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x193d5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x193d8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x193db:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; function: function_193de at 0x193de -- 0x19424
0x193de:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x193e1:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x193e4:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x193e7:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x193ea:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x193ee:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x193f1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x193f7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x193fa:    31 c0                           	xor eax, eax
0x193fc:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x193ff:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x19403:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19406:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1940a:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1940d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19411:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19414:    89 04 24                        	mov dword ptr [esp], eax
0x19417:    e8 d7 29 01 00                  	call 0x2bdf3 <unknown_2bdf3>
0x1941c:    b8 00 00 00 00                  	mov eax, 0
0x19421:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
; data inside code section at 0x19424 -- 0x19426
0x19424:    65 33                                              |e3              |
; function: function_19426 at 0x19426 -- 0x1942d
0x19426:    15 14 00 00 00                  	adc eax, 0x14
0x1942b:    74 05                           	je 0x19432 <function_19432>
; data inside code section at 0x1942d -- 0x1942e
0x1942d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1942e -- 0x1942f
; data inside code section at 0x1942f -- 0x19432
0x1942f:    ff ff ff                                           |...             |
; function: function_19432 at 0x19432 -- 0x19434
0x19432:    c9                              	leave 
0x19433:    c3                              	ret 
; section: .text._Z16Unserialize_implI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE
; function: _Z16Unserialize_implI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE at 0x19434 -- 0x19486
0x19434:    55                              	push ebp
0x19435:    89 e5                           	mov ebp, esp
0x19437:    53                              	push ebx
0x19438:    83 ec 54                        	sub esp, 0x54
0x1943b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1943e:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x19441:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19444:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x19447:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1944a:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1944d:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19450:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x19453:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x19456:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x19459:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1945f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19462:    31 c0                           	xor eax, eax
0x19464:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x19467:    89 04 24                        	mov dword ptr [esp], eax
0x1946a:    e8 69 92 00 00                  	call 0x226d8 <unknown_226d8>
0x1946f:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x19472:    89 04 24                        	mov dword ptr [esp], eax
0x19475:    e8 85 a1 01 00                  	call 0x335ff <unknown_335ff>
0x1947a:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x1947d:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x19484:    eb 7a                           	jmp 0x19500
; data inside code section at 0x19486 -- 0x194e6
0x19486:    c7 45 e4 40 4b 4c 00 8b  45 e8 8b 55 ec 89 d1 29   |.E.@KL..E..U...)|
0x19496:    c1 89 c8 89 45 e0 8d 45  e4 89 44 24 04 8d 45 e0   |....E..E..D$..E.|
0x194a6:    89 04 24 e8 5f 1a 01 00  8b 00 89 45 f0 8b 45 f0   |..$._......E..E.|
0x194b6:    8b 55 e8 01 d0 c7 44 24  08 00 00 00 00 89 44 24   |.U....D$......D$|
0x194c6:    04 8b 45 d0 89 04 24 e8  e4 9e 00 00 8b 5d f0 8b   |..E...$......]..|
0x194d6:    45 e8 89 44 24 04 8b 45  d0 89 04 24 e8 5d 8d 00   |E..D$..E...$.]..|
; function: function_194e6 at 0x194e6 -- 0x1951d
0x194e6:    00 89 5c 24 08 89               	add byte ptr [ecx - 0x76f7dba4], cl
0x194ec:    44                              	inc esp
0x194ed:    24 04                           	and al, 4
0x194ef:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x194f2:    89 04 24                        	mov dword ptr [esp], eax
0x194f5:    e8 40 49 00 00                  	call 0x1de3a <unknown_1de3a>
0x194fa:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x194fd:    01 45 e8                        	add dword ptr [ebp - 0x18], eax
0x19500:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x19503:    3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x19506:    0f 92 c0                        	setb al
0x19509:    84 c0                           	test al, al
0x1950b:    0f 85 75 ff ff ff               	jne 0x19486
0x19511:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19514:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1951b:    74 05                           	je 0x19522 <function_19522>
; data inside code section at 0x1951d -- 0x1951e
0x1951d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1951e -- 0x1951f
; data inside code section at 0x1951f -- 0x19522
0x1951f:    ff ff ff                                           |...             |
; function: function_19522 at 0x19522 -- 0x19528
0x19522:    83 c4 54                        	add esp, 0x54
0x19525:    5b                              	pop ebx
0x19526:    5d                              	pop ebp
0x19527:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_Eii
; function: _Z9SerializeI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_Eii at 0x19528 -- 0x19584
0x19528:    55                              	push ebp
0x19529:    89 e5                           	mov ebp, esp
0x1952b:    83 ec 48                        	sub esp, 0x48
0x1952e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19531:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19534:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19537:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1953a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1953d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19540:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19543:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19546:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1954c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1954f:    31 c0                           	xor eax, eax
0x19551:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x19554:    89 44 24 10                     	mov dword ptr [esp + 0x10], eax
0x19558:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1955b:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1955f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19562:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19566:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19569:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1956d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19570:    89 04 24                        	mov dword ptr [esp], eax
0x19573:    e8 2f a3 01 00                  	call 0x338a7 <unknown_338a7>
0x19578:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1957b:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19582:    74 05                           	je 0x19589 <function_19589>
; data inside code section at 0x19584 -- 0x19585
0x19584:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19585 -- 0x19586
; data inside code section at 0x19586 -- 0x19589
0x19586:    ff ff ff                                           |...             |
; function: function_19589 at 0x19589 -- 0x1958b
0x19589:    c9                              	leave 
0x1958a:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream7CVarIntIyEEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStream7CVarIntIyEEjRT_RKT0_ii19CSerActionSerialize at 0x1958b -- 0x195d0
0x1958b:    55                              	push ebp
0x1958c:    89 e5                           	mov ebp, esp
0x1958e:    83 ec 48                        	sub esp, 0x48
0x19591:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19594:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19597:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1959a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1959d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x195a0:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x195a3:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x195a6:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x195a9:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x195ad:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x195b0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x195b6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x195b9:    31 c0                           	xor eax, eax
0x195bb:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x195be:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x195c2:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x195c5:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x195c9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x195cc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; function: function_195d0 at 0x195d0 -- 0x195ec
0x195d0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x195d3:    89 04 24                        	mov dword ptr [esp], eax
0x195d6:    e8 de a3 01 00                  	call 0x339b9 <unknown_339b9>
0x195db:    b8 00 00 00 00                  	mov eax, 0
0x195e0:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x195e3:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x195ea:    74 05                           	je 0x195f1 <function_195f1>
; data inside code section at 0x195ec -- 0x195ed
0x195ec:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x195ed -- 0x195ee
; data inside code section at 0x195ee -- 0x195f1
0x195ee:    ff ff ff                                           |...             |
; function: function_195f1 at 0x195f1 -- 0x195f3
0x195f1:    c9                              	leave 
0x195f2:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream7CVarIntIyEEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream7CVarIntIyEEvRT_RT0_li at 0x195f3 -- 0x1962a
0x195f3:    55                              	push ebp
0x195f4:    89 e5                           	mov ebp, esp
0x195f6:    83 ec 38                        	sub esp, 0x38
0x195f9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x195fc:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x195ff:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19602:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19605:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19608:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1960b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1960e:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19611:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19617:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1961a:    31 c0                           	xor eax, eax
0x1961c:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1961f:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x19623:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19626:    89 44 24 08                     	mov dword ptr [esp + 8], eax
; function: function_1962a at 0x1962a -- 0x19648
0x1962a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1962d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19631:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19634:    89 04 24                        	mov dword ptr [esp], eax
0x19637:    e8 41 a4 01 00                  	call 0x33a7d <unknown_33a7d>
0x1963c:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1963f:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19646:    74 05                           	je 0x1964d <function_1964d>
; data inside code section at 0x19648 -- 0x19649
0x19648:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19649 -- 0x1964a
; data inside code section at 0x1964a -- 0x1964d
0x1964a:    ff ff ff                                           |...             |
; function: function_1964d at 0x1964d -- 0x1964f
0x1964d:    c9                              	leave 
0x1964e:    c3                              	ret 
; section: .text._Z10ReadVarIntI11CDataStreamiET0_RT_
; function: _Z10ReadVarIntI11CDataStreamiET0_RT_ at 0x1964f -- 0x196bb
0x1964f:    55                              	push ebp
0x19650:    89 e5                           	mov ebp, esp
0x19652:    83 ec 38                        	sub esp, 0x38
0x19655:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19658:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1965b:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19661:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19664:    31 c0                           	xor eax, eax
0x19666:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x1966d:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x19675:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x19678:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1967c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1967f:    89 04 24                        	mov dword ptr [esp], eax
0x19682:    e8 ce 49 00 00                  	call 0x1e055 <unknown_1e055>
0x19687:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x1968a:    89 c2                           	mov edx, eax
0x1968c:    c1 e2 07                        	shl edx, 7
0x1968f:    0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x19693:    0f b6 c0                        	movzx eax, al
0x19696:    83 e0 7f                        	and eax, 0x7f
0x19699:    09 d0                           	or eax, edx
0x1969b:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x1969e:    0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x196a2:    84 c0                           	test al, al
0x196a4:    79 06                           	jns 0x196ac <_Z10ReadVarIntI11CDataStreamiET0_RT_+0x5d>
0x196a6:    83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x196aa:    eb c1                           	jmp 0x1966d <_Z10ReadVarIntI11CDataStreamiET0_RT_+0x1e>
0x196ac:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x196af:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x196b2:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x196b9:    74 05                           	je 0x196c0 <function_196c0>
; data inside code section at 0x196bb -- 0x196bc
0x196bb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x196bc -- 0x196bd
; data inside code section at 0x196bd -- 0x196c0
0x196bd:    ff ff ff                                           |...             |
; function: function_196c0 at 0x196c0 -- 0x196c2
0x196c0:    c9                              	leave 
0x196c1:    c3                              	ret 
; section: .text._Z10ReadVarIntI11CDataStreamjET0_RT_
; function: _Z10ReadVarIntI11CDataStreamjET0_RT_ at 0x196c2 -- 0x1972e
0x196c2:    55                              	push ebp
0x196c3:    89 e5                           	mov ebp, esp
0x196c5:    83 ec 38                        	sub esp, 0x38
0x196c8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x196cb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x196ce:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x196d4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x196d7:    31 c0                           	xor eax, eax
0x196d9:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x196e0:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x196e8:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x196eb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x196ef:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x196f2:    89 04 24                        	mov dword ptr [esp], eax
0x196f5:    e8 ce 49 00 00                  	call 0x1e0c8 <unknown_1e0c8>
0x196fa:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x196fd:    89 c2                           	mov edx, eax
0x196ff:    c1 e2 07                        	shl edx, 7
0x19702:    0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x19706:    0f b6 c0                        	movzx eax, al
0x19709:    83 e0 7f                        	and eax, 0x7f
0x1970c:    09 d0                           	or eax, edx
0x1970e:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x19711:    0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x19715:    84 c0                           	test al, al
0x19717:    79 06                           	jns 0x1971f <_Z10ReadVarIntI11CDataStreamjET0_RT_+0x5d>
0x19719:    83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x1971d:    eb c1                           	jmp 0x196e0 <_Z10ReadVarIntI11CDataStreamjET0_RT_+0x1e>
0x1971f:    8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x19722:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19725:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1972c:    74 05                           	je 0x19733 <function_19733>
; data inside code section at 0x1972e -- 0x1972f
0x1972e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1972f -- 0x19730
; data inside code section at 0x19730 -- 0x19733
0x19730:    ff ff ff                                           |...             |
; function: function_19733 at 0x19733 -- 0x19735
0x19733:    c9                              	leave 
0x19734:    c3                              	ret 
; section: .text._ZNSaImEC2IbEERKSaIT_E
; function: _ZNSaImEC1IbEERKSaIT_E at 0x19736 -- 0x19737
0x19736:    55                              	push ebp
; data inside code section at 0x19737 -- 0x19738
0x19737:    89                                                 |.               |
; function: function_19738 at 0x19738 -- 0x1976a
0x19738:    e5 83                           	in eax, 0x83
0x1973a:    ec                              	in al, dx
0x1973b:    38 8b 45 08 89 45               	cmp byte ptr [ebx + 0x45890845], cl
0x19741:    e4 8b                           	in al, 0x8b
0x19743:    45                              	inc ebp
0x19744:    0c 89                           	or al, 0x89
0x19746:    45                              	inc ebp
0x19747:    e0 65                           	loopne 0x197ae
0x19749:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x1974e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19751:    31 c0                           	xor eax, eax
0x19753:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19756:    89 04 24                        	mov dword ptr [esp], eax
0x19759:    e8 b8 a4 01 00                  	call 0x33c16 <unknown_33c16>
0x1975e:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19761:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19768:    74 05                           	je 0x1976f <function_1976f>
; data inside code section at 0x1976a -- 0x1976b
0x1976a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1976b -- 0x1976c
; data inside code section at 0x1976c -- 0x1976f
0x1976c:    ff ff ff                                           |...             |
; function: function_1976f at 0x1976f -- 0x19771
0x1976f:    c9                              	leave 
0x19770:    c3                              	ret 
; section: .text._ZNSaImED2Ev
; function: _ZNSaImED1Ev at 0x19772 -- 0x197a0
0x19772:    55                              	push ebp
0x19773:    89 e5                           	mov ebp, esp
0x19775:    83 ec 38                        	sub esp, 0x38
0x19778:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1977b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1977e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19784:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19787:    31 c0                           	xor eax, eax
0x19789:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1978c:    89 04 24                        	mov dword ptr [esp], eax
0x1978f:    e8 e8 a4 01 00                  	call 0x33c7c <unknown_33c7c>
0x19794:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19797:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1979e:    74 05                           	je 0x197a5 <function_197a5>
; data inside code section at 0x197a0 -- 0x197a1
0x197a0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x197a1 -- 0x197a2
; data inside code section at 0x197a2 -- 0x197a5
0x197a2:    ff ff ff                                           |...             |
; function: function_197a5 at 0x197a5 -- 0x197a7
0x197a5:    c9                              	leave 
0x197a6:    c3                              	ret 
; section: .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE
; function: _ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1ERKSaImE at 0x197a8 -- 0x197ae
0x197a8:    55                              	push ebp
0x197a9:    89 e5                           	mov ebp, esp
0x197ab:    83 ec 38                        	sub esp, 0x38
; data inside code section at 0x197ae -- 0x19807
0x197ae:    8b 45 08 89 45 e4 8b 45  0c 89 45 e0 65 a1 14 00   |.E..E..E..E.e...|
0x197be:    00 00 89 45 f4 31 c0 8b  45 e0 89 44 24 04 8b 45   |...E.1..E..D$..E|
0x197ce:    e4 89 04 24 e8 05 a5 01  00 8b 45 e4 89 04 24 e8   |...$......E...$.|
0x197de:    e4 22 00 00 8b 45 e4 83  c0 08 89 04 24 e8 d6 22   |."...E......$.."|
0x197ee:    00 00 8b 45 e4 c7 40 10  00 00 00 00 8b 45 f4 65   |...E..@......E.e|
0x197fe:    33 05 14 00 00 00 74 05  e8                        |3.....t..       |
; dynamically linked function: __stack_chk_fail at 0x19807 -- 0x19808
; data inside code section at 0x19808 -- 0x1980a
0x19808:    ff ff                                              |..              |
; function: function_1980a at 0x1980a -- 0x1980d
0x1980a:    ff c9                           	dec ecx
0x1980c:    c3                              	ret 
; section: .text._ZNKSt6vectorI6CTxOutSaIS0_EE8capacityEv
; function: _ZNKSt6vectorI6CTxOutSaIS0_EE8capacityEv at 0x1980e -- 0x1982b
0x1980e:    55                              	push ebp
0x1980f:    89 e5                           	mov ebp, esp
0x19811:    83 ec 28                        	sub esp, 0x28
0x19814:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19817:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1981a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19820:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19823:    31 c0                           	xor eax, eax
0x19825:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19828:    8b 40 08                        	mov eax, dword ptr [eax + 8]
; data inside code section at 0x1982b -- 0x1982c
0x1982b:    89                                                 |.               |
; function: function_1982c at 0x1982c -- 0x1982f
0x1982c:    c2 8b 45                        	ret 0x458b
; data inside code section at 0x1982f -- 0x1984e
0x1982f:    e4 8b 00 89 d1 29 c1 89  c8 c1 f8 02 69 c0 cd cc   |.....)......i...|
0x1983f:    cc cc 8b 55 f4 65 33 15  14 00 00 00 74 05 e8      |...U.e3.....t.. |
; dynamically linked function: __stack_chk_fail at 0x1984e -- 0x1984f
; data inside code section at 0x1984f -- 0x19851
0x1984f:    ff ff                                              |..              |
; function: function_19851 at 0x19851 -- 0x19854
0x19851:    ff c9                           	dec ecx
0x19853:    c3                              	ret 
; section: .text._ZNSt6vectorI6CTxOutSaIS0_EE5beginEv
; function: _ZNSt6vectorI6CTxOutSaIS0_EE5beginEv at 0x19854 -- 0x19892
0x19854:    55                              	push ebp
0x19855:    89 e5                           	mov ebp, esp
0x19857:    83 ec 38                        	sub esp, 0x38
0x1985a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1985d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19860:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19863:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19866:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1986c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1986f:    31 c0                           	xor eax, eax
0x19871:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19874:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19878:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1987b:    89 04 24                        	mov dword ptr [esp], eax
0x1987e:    e8 59 22 01 00                  	call 0x2badc <unknown_2badc>
0x19883:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19886:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19889:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19890:    74 05                           	je 0x19897 <function_19897>
; data inside code section at 0x19892 -- 0x19893
0x19892:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19893 -- 0x19894
; data inside code section at 0x19894 -- 0x19897
0x19894:    ff ff ff                                           |...             |
; function: function_19897 at 0x19897 -- 0x1989b
0x19897:    c9                              	leave 
0x19898:    c2 04 00                        	ret 4
; section: .text._ZSt4fillIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RKT0_
; function: _ZSt4fillIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RKT0_ at 0x1989b -- 0x198f6
0x1989b:    55                              	push ebp
0x1989c:    89 e5                           	mov ebp, esp
0x1989e:    53                              	push ebx
0x1989f:    83 ec 34                        	sub esp, 0x34
0x198a2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x198a5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x198a8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x198ab:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x198ae:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x198b1:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x198b4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x198ba:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x198bd:    31 c0                           	xor eax, eax
0x198bf:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x198c2:    89 04 24                        	mov dword ptr [esp], eax
0x198c5:    e8 47 a5 01 00                  	call 0x33e11 <unknown_33e11>
0x198ca:    89 c3                           	mov ebx, eax
0x198cc:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x198cf:    89 04 24                        	mov dword ptr [esp], eax
0x198d2:    e8 3a a5 01 00                  	call 0x33e11 <unknown_33e11>
0x198d7:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x198da:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x198de:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x198e2:    89 04 24                        	mov dword ptr [esp], eax
0x198e5:    e8 5c a5 01 00                  	call 0x33e46 <unknown_33e46>
0x198ea:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x198ed:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x198f4:    74 05                           	je 0x198fb <function_198fb>
; data inside code section at 0x198f6 -- 0x198f7
0x198f6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x198f7 -- 0x198f8
; function: function_198f8 at 0x198f8 -- 0x198f9
; data inside code section at 0x198f9 -- 0x198fb
0x198f9:    ff ff                                              |..              |
; function: function_198fb at 0x198fb -- 0x19901
0x198fb:    83 c4 34                        	add esp, 0x34
0x198fe:    5b                              	pop ebx
0x198ff:    5d                              	pop ebp
0x19900:    c3                              	ret 
; section: .text._ZSt6fill_nIP6CTxOutjS0_ET_S2_T0_RKT1_
; function: _ZSt6fill_nIP6CTxOutjS0_ET_S2_T0_RKT1_ at 0x19901 -- 0x1990d
0x19901:    55                              	push ebp
0x19902:    89 e5                           	mov ebp, esp
0x19904:    83 ec 38                        	sub esp, 0x38
0x19907:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1990a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
; data inside code section at 0x1990d -- 0x1990e
0x1990d:    8b                                                 |.               |
; function: function_1990e at 0x1990e -- 0x19951
0x1990e:    45                              	inc ebp
0x1990f:    0c 89                           	or al, 0x89
0x19911:    45                              	inc ebp
0x19912:    e0 8b                           	loopne 0x1989f
0x19914:    45                              	inc ebp
0x19915:    10 89 45 dc 65 a1               	adc byte ptr [ecx - 0x5e9a23bb], cl
0x1991b:    14 00                           	adc al, 0
0x1991d:    00 00                           	add byte ptr [eax], al
0x1991f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19922:    31 c0                           	xor eax, eax
0x19924:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19927:    89 04 24                        	mov dword ptr [esp], eax
0x1992a:    e8 79 a6 01 00                  	call 0x33fa8 <unknown_33fa8>
0x1992f:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x19932:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x19936:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x19939:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1993d:    89 04 24                        	mov dword ptr [esp], eax
0x19940:    e8 98 a6 01 00                  	call 0x33fdd <unknown_33fdd>
0x19945:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19948:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1994f:    74 05                           	je 0x19956 <function_19956>
; data inside code section at 0x19951 -- 0x19952
0x19951:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19952 -- 0x19953
; data inside code section at 0x19953 -- 0x19956
0x19953:    ff ff ff                                           |...             |
; function: function_19956 at 0x19956 -- 0x19958
0x19956:    c9                              	leave 
0x19957:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream17CScriptCompressorEjRT_RT0_ii21CSerActionUnserialize
; function: _Z12SerReadWriteI11CDataStream17CScriptCompressorEjRT_RT0_ii21CSerActionUnserialize at 0x19958 -- 0x19967
0x19958:    55                              	push ebp
0x19959:    89 e5                           	mov ebp, esp
0x1995b:    83 ec 48                        	sub esp, 0x48
0x1995e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19961:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19964:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0x19967 -- 0x19968
0x19967:    89                                                 |.               |
; function: function_19968 at 0x19968 -- 0x199b7
0x19968:    45                              	inc ebp
0x19969:    e0 8b                           	loopne 0x198f6
0x1996b:    45                              	inc ebp
0x1996c:    10 89 45 dc 8b 45               	adc byte ptr [ecx + 0x458bdc45], cl
0x19972:    14 89                           	adc al, 0x89
0x19974:    45                              	inc ebp
0x19975:    d8 0f                           	fmul dword ptr [edi]
0x19977:    b6 45                           	mov dh, 0x45
0x19979:    18 88 45 d7 65 a1               	sbb byte ptr [eax - 0x5e9a28bb], cl
0x1997f:    14 00                           	adc al, 0
0x19981:    00 00                           	add byte ptr [eax], al
0x19983:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19986:    31 c0                           	xor eax, eax
0x19988:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1998b:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1998f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19992:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19996:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19999:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1999d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x199a0:    89 04 24                        	mov dword ptr [esp], eax
0x199a3:    e8 f2 a6 01 00                  	call 0x3409a <unknown_3409a>
0x199a8:    b8 00 00 00 00                  	mov eax, 0
0x199ad:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x199b0:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
; data inside code section at 0x199b7 -- 0x199b8
0x199b7:    74                                                 |t               |
; function: function_199b8 at 0x199b8 -- 0x199b9
; data inside code section at 0x199b9 -- 0x199ba
0x199b9:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x199ba -- 0x199bb
; data inside code section at 0x199bb -- 0x199bd
0x199bb:    ff ff                                              |..              |
; function: function_199bd at 0x199bd -- 0x199c0
0x199bd:    ff c9                           	dec ecx
0x199bf:    c3                              	ret 
; section: .text._Z9SerializeI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_Eii
; function: _Z9SerializeI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_Eii at 0x199c0 -- 0x19a1c
0x199c0:    55                              	push ebp
0x199c1:    89 e5                           	mov ebp, esp
0x199c3:    83 ec 48                        	sub esp, 0x48
0x199c6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x199c9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x199cc:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x199cf:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x199d2:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x199d5:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x199d8:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x199db:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x199de:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x199e4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x199e7:    31 c0                           	xor eax, eax
0x199e9:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x199ec:    89 44 24 10                     	mov dword ptr [esp + 0x10], eax
0x199f0:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x199f3:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x199f7:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x199fa:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x199fe:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19a01:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19a05:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19a08:    89 04 24                        	mov dword ptr [esp], eax
0x19a0b:    e8 4e a7 01 00                  	call 0x3415e <unknown_3415e>
0x19a10:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19a13:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19a1a:    74 05                           	je 0x19a21 <function_19a21>
; data inside code section at 0x19a1c -- 0x19a1d
0x19a1c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19a1d -- 0x19a1e
; data inside code section at 0x19a1e -- 0x19a21
0x19a1e:    ff ff ff                                           |...             |
; function: function_19a21 at 0x19a21 -- 0x19a23
0x19a21:    c9                              	leave 
0x19a22:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream13CDiskBlockPosEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream13CDiskBlockPosEvRT_RT0_li at 0x19a23 -- 0x19a78
0x19a23:    55                              	push ebp
0x19a24:    89 e5                           	mov ebp, esp
0x19a26:    83 ec 38                        	sub esp, 0x38
0x19a29:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19a2c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19a2f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19a32:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19a35:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19a38:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19a3b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19a3e:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19a41:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19a47:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19a4a:    31 c0                           	xor eax, eax
0x19a4c:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x19a4f:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x19a53:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19a56:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19a5a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19a5d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19a61:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19a64:    89 04 24                        	mov dword ptr [esp], eax
0x19a67:    e8 05 a8 01 00                  	call 0x34271 <unknown_34271>
0x19a6c:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19a6f:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19a76:    74 05                           	je 0x19a7d <function_19a7d>
; data inside code section at 0x19a78 -- 0x19a79
0x19a78:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19a79 -- 0x19a7a
; data inside code section at 0x19a7a -- 0x19a7d
0x19a7a:    ff ff ff                                           |...             |
; function: function_19a7d at 0x19a7d -- 0x19a7f
0x19a7d:    c9                              	leave 
0x19a7e:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream13CDiskBlockPosEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream13CDiskBlockPosEvRT_RKT0_li at 0x19a7f -- 0x19ad4
0x19a7f:    55                              	push ebp
0x19a80:    89 e5                           	mov ebp, esp
0x19a82:    83 ec 38                        	sub esp, 0x38
0x19a85:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19a88:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19a8b:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19a8e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19a91:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19a94:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19a97:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19a9a:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19a9d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19aa3:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19aa6:    31 c0                           	xor eax, eax
0x19aa8:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x19aab:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x19aaf:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19ab2:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19ab6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19ab9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19abd:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19ac0:    89 04 24                        	mov dword ptr [esp], eax
0x19ac3:    e8 f9 a8 01 00                  	call 0x343c1 <unknown_343c1>
0x19ac8:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19acb:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19ad2:    74 05                           	je 0x19ad9 <function_19ad9>
; data inside code section at 0x19ad4 -- 0x19ad5
0x19ad4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19ad5 -- 0x19ad6
; data inside code section at 0x19ad6 -- 0x19ad9
0x19ad6:    ff ff ff                                           |...             |
; function: function_19ad9 at 0x19ad9 -- 0x19adb
0x19ad9:    c9                              	leave 
0x19ada:    c3                              	ret 
; section: .text._ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT0_E7__valueEPS3_E6__typeES5_T_RKS3_
; function: _ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT0_E7__valueEPS3_E6__typeES5_T_RKS3_ at 0x19adb -- 0x19b30
0x19adb:    55                              	push ebp
0x19adc:    89 e5                           	mov ebp, esp
0x19ade:    83 ec 38                        	sub esp, 0x38
0x19ae1:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19ae4:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19ae7:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19aea:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19aed:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19af0:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19af3:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19af9:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19afc:    31 c0                           	xor eax, eax
0x19afe:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19b01:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x19b04:    01 c2                           	add edx, eax
0x19b06:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19b09:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19b0d:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x19b11:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19b14:    89 04 24                        	mov dword ptr [esp], eax
0x19b17:    e8 6d 6e 01 00                  	call 0x30989 <unknown_30989>
0x19b1c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19b1f:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x19b22:    01 d0                           	add eax, edx
0x19b24:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19b27:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19b2e:    74 05                           	je 0x19b35 <function_19b35>
; data inside code section at 0x19b30 -- 0x19b31
0x19b30:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19b31 -- 0x19b32
; data inside code section at 0x19b32 -- 0x19b35
0x19b32:    ff ff ff                                           |...             |
; function: function_19b35 at 0x19b35 -- 0x19b37
0x19b35:    c9                              	leave 
0x19b36:    c3                              	ret 
; section: .text._ZN9__gnu_cxx17__is_null_pointerIcEEbPT_
; function: _ZN9__gnu_cxx17__is_null_pointerIcEEbPT_ at 0x19b37 -- 0x19b61
0x19b37:    55                              	push ebp
0x19b38:    89 e5                           	mov ebp, esp
0x19b3a:    83 ec 28                        	sub esp, 0x28
0x19b3d:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19b40:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19b43:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19b49:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19b4c:    31 c0                           	xor eax, eax
0x19b4e:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x19b52:    0f 94 c0                        	sete al
0x19b55:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19b58:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19b5f:    74 05                           	je 0x19b66 <function_19b66>
; data inside code section at 0x19b61 -- 0x19b62
0x19b61:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19b62 -- 0x19b63
; data inside code section at 0x19b63 -- 0x19b66
0x19b63:    ff ff ff                                           |...             |
; function: function_19b66 at 0x19b66 -- 0x19b68
0x19b66:    c9                              	leave 
0x19b67:    c3                              	ret 
; section: .text._Z16WriteCompactSizeI11CHashWriterEvRT_y
; function: _Z16WriteCompactSizeI11CHashWriterEvRT_y at 0x19b68 -- 0x19ba6
0x19b68:    55                              	push ebp
0x19b69:    89 e5                           	mov ebp, esp
0x19b6b:    83 ec 38                        	sub esp, 0x38
0x19b6e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19b71:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19b74:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19b77:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19b7a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19b7d:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19b80:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19b86:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19b89:    31 c0                           	xor eax, eax
0x19b8b:    83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x19b8f:    77 34                           	ja 0x19bc5 <function_19bc5>
0x19b91:    83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x19b95:    72 09                           	jb 0x19ba0 <_Z16WriteCompactSizeI11CHashWriterEvRT_y+0x38>
0x19b97:    81 7d d8 fc 00 00 00            	cmp dword ptr [ebp - 0x28], 0xfc
0x19b9e:    77 25                           	ja 0x19bc5 <function_19bc5>
0x19ba0:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x19ba3:    88 45 f3                        	mov byte ptr [ebp - 0xd], al
; function: function_19ba6 at 0x19ba6 -- 0x19bc5
0x19ba6:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x19bae:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x19bb1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19bb5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19bb8:    89 04 24                        	mov dword ptr [esp], eax
0x19bbb:    e8 a6 4c 00 00                  	call 0x1e866 <unknown_1e866>
0x19bc0:    e9 1b 01 00 00                  	jmp 0x19ce0 <function_19ce0>
; function: function_19bc5 at 0x19bc5 -- 0x19bfc
0x19bc5:    e8 1c 29 00 00                  	call 0x1c4e6 <unknown_1c4e6>
0x19bca:    89 c1                           	mov ecx, eax
0x19bcc:    0f b7 c1                        	movzx eax, cx
0x19bcf:    ba 00 00 00 00                  	mov edx, 0
0x19bd4:    b9 01 00 00 00                  	mov ecx, 1
0x19bd9:    3b 55 dc                        	cmp edx, dword ptr [ebp - 0x24]
0x19bdc:    77 0f                           	ja 0x19bed <function_19bc5+0x28>
0x19bde:    3b 55 dc                        	cmp edx, dword ptr [ebp - 0x24]
0x19be1:    72 05                           	jb 0x19be8 <function_19bc5+0x23>
0x19be3:    3b 45 d8                        	cmp eax, dword ptr [ebp - 0x28]
0x19be6:    73 05                           	jae 0x19bed <function_19bc5+0x28>
0x19be8:    b9 00 00 00 00                  	mov ecx, 0
0x19bed:    84 c9                           	test cl, cl
0x19bef:    74 44                           	je 0x19c35 <function_19c35>
0x19bf1:    c6 45 f3 fd                     	mov byte ptr [ebp - 0xd], 0xfd
0x19bf5:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x19bf8:    66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
; function: function_19bfc at 0x19bfc -- 0x19c35
0x19bfc:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x19c04:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x19c07:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19c0b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19c0e:    89 04 24                        	mov dword ptr [esp], eax
0x19c11:    e8 50 4c 00 00                  	call 0x1e866 <unknown_1e866>
0x19c16:    c7 44 24 08 02 00 00 00         	mov dword ptr [esp + 8], 2
0x19c1e:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x19c21:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19c25:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19c28:    89 04 24                        	mov dword ptr [esp], eax
0x19c2b:    e8 36 4c 00 00                  	call 0x1e866 <unknown_1e866>
0x19c30:    e9 ab 00 00 00                  	jmp 0x19ce0 <function_19ce0>
; function: function_19c35 at 0x19c35 -- 0x19c5c
0x19c35:    e8 d5 28 00 00                  	call 0x1c50f <unknown_1c50f>
0x19c3a:    ba 00 00 00 00                  	mov edx, 0
0x19c3f:    b9 01 00 00 00                  	mov ecx, 1
0x19c44:    3b 55 dc                        	cmp edx, dword ptr [ebp - 0x24]
0x19c47:    77 0f                           	ja 0x19c58 <function_19c35+0x23>
0x19c49:    3b 55 dc                        	cmp edx, dword ptr [ebp - 0x24]
0x19c4c:    72 05                           	jb 0x19c53 <function_19c35+0x1e>
0x19c4e:    3b 45 d8                        	cmp eax, dword ptr [ebp - 0x28]
0x19c51:    73 05                           	jae 0x19c58 <function_19c35+0x23>
0x19c53:    b9 00 00 00 00                  	mov ecx, 0
0x19c58:    84 c9                           	test cl, cl
0x19c5a:    74 40                           	je 0x19c9c
; function: function_19c5c at 0x19c5c -- 0x19c9c
0x19c5c:    c6 45 f3 fe                     	mov byte ptr [ebp - 0xd], 0xfe
0x19c60:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x19c63:    89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x19c66:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x19c6e:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x19c71:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19c75:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19c78:    89 04 24                        	mov dword ptr [esp], eax
0x19c7b:    e8 e6 4b 00 00                  	call 0x1e866 <unknown_1e866>
0x19c80:    c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0x19c88:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x19c8b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19c8f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19c92:    89 04 24                        	mov dword ptr [esp], eax
0x19c95:    e8 cc 4b 00 00                  	call 0x1e866 <unknown_1e866>
0x19c9a:    eb 44                           	jmp 0x19ce0 <function_19ce0>
; function: function_19c9c at 0x19c9c -- 0x19c9d
; data inside code section at 0x19c9d -- 0x19cac
0x19c9d:    45 f3 ff 8b 45 d8 8b 55  dc 89 45 e8 89 55 ec      |E...E..U..E..U. |
; function: function_19cac at 0x19cac -- 0x19ce0
0x19cac:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x19cb4:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x19cb7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19cbb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19cbe:    89 04 24                        	mov dword ptr [esp], eax
0x19cc1:    e8 a0 4b 00 00                  	call 0x1e866 <unknown_1e866>
0x19cc6:    c7 44 24 08 08 00 00 00         	mov dword ptr [esp + 8], 8
0x19cce:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x19cd1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19cd5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19cd8:    89 04 24                        	mov dword ptr [esp], eax
0x19cdb:    e8 86 4b 00 00                  	call 0x1e866 <unknown_1e866>
; function: function_19ce0 at 0x19ce0 -- 0x19cec
0x19ce0:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x19ce3:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x19cea:    74 05                           	je 0x19cf1 <function_19cf1>
; data inside code section at 0x19cec -- 0x19ced
0x19cec:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19ced -- 0x19cee
; data inside code section at 0x19cee -- 0x19cf1
0x19cee:    ff ff ff                                           |...             |
; function: function_19cf1 at 0x19cf1 -- 0x19cf3
0x19cf1:    c9                              	leave 
0x19cf2:    c3                              	ret 
; section: .text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
; function: _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_ at 0x19cf3 -- 0x19d14
0x19cf3:    55                              	push ebp
0x19cf4:    89 e5                           	mov ebp, esp
0x19cf6:    83 ec 58                        	sub esp, 0x58
0x19cf9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19cfc:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x19cff:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19d02:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x19d05:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19d08:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x19d0b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19d0e:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x19d11:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
; data inside code section at 0x19d14 -- 0x19d16
0x19d14:    89 45                                              |.E              |
; function: function_19d16 at 0x19d16 -- 0x19dbd
0x19d16:    c8 8b 45 1c                     	enter 0x458b, 0x1c
0x19d1a:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x19d1d:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x19d20:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x19d23:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19d29:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19d2c:    31 c0                           	xor eax, eax
0x19d2e:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x19d31:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19d35:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x19d38:    89 04 24                        	mov dword ptr [esp], eax
0x19d3b:    e8 73 22 00 00                  	call 0x1bfb3 <unknown_1bfb3>
0x19d40:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x19d43:    eb 50                           	jmp 0x19d95 <function_19d16+0x7f>
0x19d45:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x19d48:    89 04 24                        	mov dword ptr [esp], eax
0x19d4b:    e8 41 24 00 00                  	call 0x1c191 <unknown_1c191>
0x19d50:    8d 55 e0                        	lea edx, [ebp - 0x20]
0x19d53:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19d57:    89 14 24                        	mov dword ptr [esp], edx
0x19d5a:    e8 48 23 00 00                  	call 0x1c0a7 <unknown_1c0a7>
0x19d5f:    83 ec 04                        	sub esp, 4
0x19d62:    8d 45 bc                        	lea eax, [ebp - 0x44]
0x19d65:    89 04 24                        	mov dword ptr [esp], eax
0x19d68:    e8 24 24 00 00                  	call 0x1c191 <unknown_1c191>
0x19d6d:    8d 55 e8                        	lea edx, [ebp - 0x18]
0x19d70:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19d74:    89 14 24                        	mov dword ptr [esp], edx
0x19d77:    e8 2b 23 00 00                  	call 0x1c0a7 <unknown_1c0a7>
0x19d7c:    83 ec 04                        	sub esp, 4
0x19d7f:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x19d82:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19d86:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x19d89:    89 04 24                        	mov dword ptr [esp], eax
0x19d8c:    e8 14 20 00 00                  	call 0x1bda5 <unknown_1bda5>
0x19d91:    83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x19d95:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x19d99:    0f 9f c0                        	setg al
0x19d9c:    84 c0                           	test al, al
0x19d9e:    75 a5                           	jne 0x19d45 <function_19d16+0x2f>
0x19da0:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x19da3:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x19da6:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x19da9:    89 01                           	mov dword ptr [ecx], eax
0x19dab:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x19dae:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x19db1:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19db4:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19dbb:    74 05                           	je 0x19dc2 <function_19dc2>
; data inside code section at 0x19dbd -- 0x19dbe
0x19dbd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19dbe -- 0x19dbf
; data inside code section at 0x19dbf -- 0x19dc2
0x19dbf:    ff ff ff                                           |...             |
; function: function_19dc2 at 0x19dc2 -- 0x19dc6
0x19dc2:    c9                              	leave 
0x19dc3:    c2 04 00                        	ret 4
; section: .text._ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
; function: _ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ at 0x19dc6 -- 0x19de9
0x19dc6:    55                              	push ebp
0x19dc7:    89 e5                           	mov ebp, esp
0x19dc9:    83 ec 38                        	sub esp, 0x38
0x19dcc:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19dcf:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19dd2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19dd5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19dd8:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19ddb:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19dde:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19de4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19de7:    31 c0                           	xor eax, eax
; function: function_19de9 at 0x19de9 -- 0x19e12
0x19de9:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x19ded:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19df0:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x19df4:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x19df7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19dfb:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19dfe:    89 04 24                        	mov dword ptr [esp], eax
0x19e01:    e8 f5 a9 01 00                  	call 0x347fb <unknown_347fb>
0x19e06:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19e09:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19e10:    74 05                           	je 0x19e17 <function_19e17>
; data inside code section at 0x19e12 -- 0x19e13
0x19e12:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19e13 -- 0x19e14
; data inside code section at 0x19e14 -- 0x19e17
0x19e14:    ff ff ff                                           |...             |
; function: function_19e17 at 0x19e17 -- 0x19e19
0x19e17:    c9                              	leave 
0x19e18:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_
; function: _ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_ at 0x19e19 -- 0x19e59
0x19e19:    55                              	push ebp
0x19e1a:    89 e5                           	mov ebp, esp
0x19e1c:    83 ec 28                        	sub esp, 0x28
0x19e1f:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19e22:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19e25:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19e28:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19e2b:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19e2e:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19e31:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19e37:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19e3a:    31 c0                           	xor eax, eax
0x19e3c:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x19e3f:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19e42:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x19e45:    89 01                           	mov dword ptr [ecx], eax
0x19e47:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x19e4a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19e4d:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19e50:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19e57:    74 05                           	je 0x19e5e <function_19e5e>
; data inside code section at 0x19e59 -- 0x19e5a
0x19e59:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19e5a -- 0x19e5b
; data inside code section at 0x19e5b -- 0x19e5e
0x19e5b:    ff ff ff                                           |...             |
; function: function_19e5e at 0x19e5e -- 0x19e62
0x19e5e:    c9                              	leave 
0x19e5f:    c2 04 00                        	ret 4
; section: .text._ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_
; function: _ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ at 0x19e62 -- 0x19e99
0x19e62:    55                              	push ebp
0x19e63:    89 e5                           	mov ebp, esp
0x19e65:    83 ec 38                        	sub esp, 0x38
0x19e68:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19e6b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19e6e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19e71:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19e74:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19e77:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19e7a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19e80:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19e83:    31 c0                           	xor eax, eax
0x19e85:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x19e88:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19e8b:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x19e8e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19e92:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x19e96:    89 0c 24                        	mov dword ptr [esp], ecx
; function: function_19e99 at 0x19e99 -- 0x19eb0
0x19e99:    e8 dd 9d 01 00                  	call 0x33c7b <unknown_33c7b>
0x19e9e:    83 ec 04                        	sub esp, 4
0x19ea1:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19ea4:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19ea7:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19eae:    74 05                           	je 0x19eb5 <function_19eb5>
; data inside code section at 0x19eb0 -- 0x19eb1
0x19eb0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19eb1 -- 0x19eb2
; data inside code section at 0x19eb2 -- 0x19eb5
0x19eb2:    ff ff ff                                           |...             |
; function: function_19eb5 at 0x19eb5 -- 0x19eb9
0x19eb5:    c9                              	leave 
0x19eb6:    c2 04 00                        	ret 4
; section: .text._ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
; function: _ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ at 0x19eb9 -- 0x19eda
0x19eb9:    55                              	push ebp
0x19eba:    89 e5                           	mov ebp, esp
0x19ebc:    83 ec 58                        	sub esp, 0x58
0x19ebf:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19ec2:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x19ec5:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19ec8:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x19ecb:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19ece:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x19ed1:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19ed4:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x19ed7:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
; function: function_19eda at 0x19eda -- 0x19f3f
0x19eda:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x19edd:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x19ee0:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x19ee3:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x19ee6:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x19ee9:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19eef:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19ef2:    31 c0                           	xor eax, eax
0x19ef4:    c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x19ef8:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x19efb:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x19efe:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x19f01:    89 44 24 14                     	mov dword ptr [esp + 0x14], eax
0x19f05:    89 54 24 18                     	mov dword ptr [esp + 0x18], edx
0x19f09:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x19f0c:    8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x19f0f:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x19f13:    89 54 24 10                     	mov dword ptr [esp + 0x10], edx
0x19f17:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x19f1a:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x19f1d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19f21:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x19f25:    89 0c 24                        	mov dword ptr [esp], ecx
0x19f28:    e8 34 aa 01 00                  	call 0x34961 <unknown_34961>
0x19f2d:    83 ec 04                        	sub esp, 4
0x19f30:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x19f33:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x19f36:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x19f3d:    74 05                           	je 0x19f44 <function_19f44>
; data inside code section at 0x19f3f -- 0x19f40
0x19f3f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19f40 -- 0x19f41
; data inside code section at 0x19f41 -- 0x19f44
0x19f41:    ff ff ff                                           |...             |
; function: function_19f44 at 0x19f44 -- 0x19f48
0x19f44:    c9                              	leave 
0x19f45:    c2 04 00                        	ret 4
; section: .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
; function: _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_ at 0x19f48 -- 0x19f9a
0x19f48:    55                              	push ebp
0x19f49:    89 e5                           	mov ebp, esp
0x19f4b:    83 ec 58                        	sub esp, 0x58
0x19f4e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x19f51:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x19f54:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x19f57:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x19f5a:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x19f5d:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x19f60:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x19f63:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x19f66:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x19f69:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x19f6c:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x19f6f:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x19f72:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x19f75:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x19f78:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x19f7e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x19f81:    31 c0                           	xor eax, eax
0x19f83:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x19f86:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19f8a:    8d 45 c4                        	lea eax, [ebp - 0x3c]
0x19f8d:    89 04 24                        	mov dword ptr [esp], eax
0x19f90:    e8 73 22 00 00                  	call 0x1c208 <unknown_1c208>
0x19f95:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x19f98:    eb 56                           	jmp 0x19ff0
; data inside code section at 0x19f9a -- 0x19fbc
0x19f9a:    8d 45 e0 8d 55 cc 89 54  24 04 89 04 24 e8 50 23   |.E..U..T$...$.P#|
0x19faa:    00 00 83 ec 04 8d 45 e8  8d 55 bc 89 54 24 04 89   |......E..U..T$..|
0x19fba:    04 24                                              |.$              |
; function: function_19fbc at 0x19fbc -- 0x1a018
0x19fbc:    e8 3b 23 00 00                  	call 0x1c2fc <unknown_1c2fc>
0x19fc1:    83 ec 04                        	sub esp, 4
0x19fc4:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x19fc7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x19fcb:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x19fce:    89 04 24                        	mov dword ptr [esp], eax
0x19fd1:    e8 24 20 00 00                  	call 0x1bffa <unknown_1bffa>
0x19fd6:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x19fd9:    89 04 24                        	mov dword ptr [esp], eax
0x19fdc:    e8 77 23 00 00                  	call 0x1c358 <unknown_1c358>
0x19fe1:    8d 45 bc                        	lea eax, [ebp - 0x44]
0x19fe4:    89 04 24                        	mov dword ptr [esp], eax
0x19fe7:    e8 6c 23 00 00                  	call 0x1c358 <unknown_1c358>
0x19fec:    83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x19ff0:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x19ff4:    0f 9f c0                        	setg al
0x19ff7:    84 c0                           	test al, al
0x19ff9:    75 9f                           	jne 0x19f9a
0x19ffb:    8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x19ffe:    8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x1a001:    8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x1a004:    89 01                           	mov dword ptr [ecx], eax
0x1a006:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x1a009:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a00c:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1a00f:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1a016:    74 05                           	je 0x1a01d <function_1a01d>
; data inside code section at 0x1a018 -- 0x1a019
0x1a018:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a019 -- 0x1a01a
; data inside code section at 0x1a01a -- 0x1a01d
0x1a01a:    ff ff ff                                           |...             |
; function: function_1a01d at 0x1a01d -- 0x1a021
0x1a01d:    c9                              	leave 
0x1a01e:    c2 04 00                        	ret 4
; section: .text._Z11WriteVarIntI11CDataStreamiEvRT_T0_
; function: _Z11WriteVarIntI11CDataStreamiEvRT_T0_ at 0x1a021 -- 0x1a033
0x1a021:    55                              	push ebp
0x1a022:    89 e5                           	mov ebp, esp
0x1a024:    83 ec 38                        	sub esp, 0x38
0x1a027:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a02a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a02d:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a030:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
; data inside code section at 0x1a033 -- 0x1a036
0x1a033:    65 a1 14                                           |e..             |
; function: function_1a036 at 0x1a036 -- 0x1a038
0x1a036:    00 00                           	add byte ptr [eax], al
; data inside code section at 0x1a038 -- 0x1a046
0x1a038:    00 89 45 f4 31 c0 c7 45  e8 00 00 00 00 8b         |..E.1..E......  |
; function: function_1a046 at 0x1a046 -- 0x1a04c
0x1a046:    45                              	inc ebp
0x1a047:    e0 89                           	loopne 0x19fd2
0x1a049:    c2 83 e2                        	ret 0xe283
; function: function_1a04c at 0x1a04c -- 0x1a057
0x1a04c:    7f 83                           	jg 0x19fd1
0x1a04e:    7d e8                           	jge 0x1a038
0x1a050:    00 74 07 b8                     	add byte ptr [edi + eax - 0x48], dh
0x1a054:    80 ff ff                        	cmp bh, 0xff
; data inside code section at 0x1a057 -- 0x1a058
0x1a057:    ff                                                 |.               |
; function: function_1a058 at 0x1a058 -- 0x1a05a
0x1a058:    eb 05                           	jmp 0x1a05f <function_1a05f>
; function: function_1a05a at 0x1a05a -- 0x1a05f
0x1a05a:    b8 00 00 00 00                  	mov eax, 0
; function: function_1a05f at 0x1a05f -- 0x1a0bc
0x1a05f:    09 d0                           	or eax, edx
0x1a061:    89 c2                           	mov edx, eax
0x1a063:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x1a066:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x1a069:    88 10                           	mov byte ptr [eax], dl
0x1a06b:    83 7d e0 7f                     	cmp dword ptr [ebp - 0x20], 0x7f
0x1a06f:    7e 12                           	jle 0x1a083 <function_1a05f+0x24>
0x1a071:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a074:    c1 f8 07                        	sar eax, 7
0x1a077:    83 e8 01                        	sub eax, 1
0x1a07a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a07d:    83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x1a081:    eb c2                           	jmp 0x1a045
0x1a083:    90                              	nop 
0x1a084:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x1a087:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x1a08a:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x1a092:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a096:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a099:    89 04 24                        	mov dword ptr [esp], eax
0x1a09c:    e8 ee 4a 00 00                  	call 0x1eb8f <unknown_1eb8f>
0x1a0a1:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x1a0a5:    0f 95 c0                        	setne al
0x1a0a8:    83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x1a0ac:    84 c0                           	test al, al
0x1a0ae:    75 d4                           	jne 0x1a084 <function_1a05f+0x25>
0x1a0b0:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a0b3:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a0ba:    74 05                           	je 0x1a0c1 <function_1a0c1>
; data inside code section at 0x1a0bc -- 0x1a0bd
0x1a0bc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a0bd -- 0x1a0be
; data inside code section at 0x1a0be -- 0x1a0c1
0x1a0be:    ff ff ff                                           |...             |
; function: function_1a0c1 at 0x1a0c1 -- 0x1a0c3
0x1a0c1:    c9                              	leave 
0x1a0c2:    c3                              	ret 
; section: .text._Z11WriteVarIntI11CDataStreamjEvRT_T0_
; function: _Z11WriteVarIntI11CDataStreamjEvRT_T0_ at 0x1a0c3 -- 0x1a15c
0x1a0c3:    55                              	push ebp
0x1a0c4:    89 e5                           	mov ebp, esp
0x1a0c6:    83 ec 38                        	sub esp, 0x38
0x1a0c9:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a0cc:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a0cf:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a0d2:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a0d5:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a0db:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a0de:    31 c0                           	xor eax, eax
0x1a0e0:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x1a0e7:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a0ea:    89 c2                           	mov edx, eax
0x1a0ec:    83 e2 7f                        	and edx, 0x7f
0x1a0ef:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x1a0f3:    74 07                           	je 0x1a0fc <_Z11WriteVarIntI11CDataStreamjEvRT_T0_+0x39>
0x1a0f5:    b8 80 ff ff ff                  	mov eax, 0xffffff80
0x1a0fa:    eb 05                           	jmp 0x1a101 <_Z11WriteVarIntI11CDataStreamjEvRT_T0_+0x3e>
0x1a0fc:    b8 00 00 00 00                  	mov eax, 0
0x1a101:    09 c2                           	or edx, eax
0x1a103:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x1a106:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x1a109:    88 10                           	mov byte ptr [eax], dl
0x1a10b:    83 7d e0 7f                     	cmp dword ptr [ebp - 0x20], 0x7f
0x1a10f:    76 12                           	jbe 0x1a123 <_Z11WriteVarIntI11CDataStreamjEvRT_T0_+0x60>
0x1a111:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a114:    c1 e8 07                        	shr eax, 7
0x1a117:    83 e8 01                        	sub eax, 1
0x1a11a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a11d:    83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x1a121:    eb c4                           	jmp 0x1a0e7 <_Z11WriteVarIntI11CDataStreamjEvRT_T0_+0x24>
0x1a123:    90                              	nop 
0x1a124:    8d 45 ef                        	lea eax, [ebp - 0x11]
0x1a127:    03 45 e8                        	add eax, dword ptr [ebp - 0x18]
0x1a12a:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x1a132:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a136:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a139:    89 04 24                        	mov dword ptr [esp], eax
0x1a13c:    e8 f0 4a 00 00                  	call 0x1ec31 <unknown_1ec31>
0x1a141:    83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x1a145:    0f 95 c0                        	setne al
0x1a148:    83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x1a14c:    84 c0                           	test al, al
0x1a14e:    75 d4                           	jne 0x1a124 <_Z11WriteVarIntI11CDataStreamjEvRT_T0_+0x61>
0x1a150:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a153:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a15a:    74 05                           	je 0x1a161 <function_1a161>
; data inside code section at 0x1a15c -- 0x1a15d
0x1a15c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a15d -- 0x1a15e
; data inside code section at 0x1a15e -- 0x1a161
0x1a15e:    ff ff ff                                           |...             |
; function: function_1a161 at 0x1a161 -- 0x1a163
0x1a161:    c9                              	leave 
0x1a162:    c3                              	ret 
; section: .text._Z12SerReadWriteI11CDataStream17CScriptCompressorEjRT_RKT0_ii19CSerActionSerialize
; function: _Z12SerReadWriteI11CDataStream17CScriptCompressorEjRT_RKT0_ii19CSerActionSerialize at 0x1a163 -- 0x1a1c4
0x1a163:    55                              	push ebp
0x1a164:    89 e5                           	mov ebp, esp
0x1a166:    83 ec 48                        	sub esp, 0x48
0x1a169:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a16c:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a16f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a172:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a175:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a178:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a17b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a17e:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1a181:    0f b6 45 18                     	movzx eax, byte ptr [ebp + 0x18]
0x1a185:    88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x1a188:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a18e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a191:    31 c0                           	xor eax, eax
0x1a193:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1a196:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1a19a:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1a19d:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1a1a1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a1a4:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a1a8:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a1ab:    89 04 24                        	mov dword ptr [esp], eax
0x1a1ae:    e8 2b ab 01 00                  	call 0x34cde <unknown_34cde>
0x1a1b3:    b8 00 00 00 00                  	mov eax, 0
0x1a1b8:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1a1bb:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1a1c2:    74 05                           	je 0x1a1c9 <function_1a1c9>
; data inside code section at 0x1a1c4 -- 0x1a1c5
0x1a1c4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a1c5 -- 0x1a1c6
; data inside code section at 0x1a1c6 -- 0x1a1c9
0x1a1c6:    ff ff ff                                           |...             |
; function: function_1a1c9 at 0x1a1c9 -- 0x1a1cb
0x1a1c9:    c9                              	leave 
0x1a1ca:    c3                              	ret 
; section: .text._Z15ReadCompactSizeI11CDataStreamEyRT_
; function: _Z15ReadCompactSizeI11CDataStreamEyRT_ at 0x1a1cb -- 0x1a2a5
0x1a1cb:    55                              	push ebp
0x1a1cc:    89 e5                           	mov ebp, esp
0x1a1ce:    56                              	push esi
0x1a1cf:    53                              	push ebx
0x1a1d0:    83 ec 40                        	sub esp, 0x40
0x1a1d3:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a1d6:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1a1d9:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a1df:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a1e2:    31 c0                           	xor eax, eax
0x1a1e4:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x1a1ec:    8d 45 f2                        	lea eax, [ebp - 0xe]
0x1a1ef:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a1f3:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a1f6:    89 04 24                        	mov dword ptr [esp], eax
0x1a1f9:    e8 d3 49 00 00                  	call 0x1ebd1 <unknown_1ebd1>
0x1a1fe:    c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x1a205:    c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x1a20c:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x1a210:    3c fc                           	cmp al, 0xfc
0x1a212:    77 16                           	ja 0x1a22a <_Z15ReadCompactSizeI11CDataStreamEyRT_+0x5f>
0x1a214:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x1a218:    0f b6 c0                        	movzx eax, al
0x1a21b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a21e:    c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x1a225:    e9 8c 00 00 00                  	jmp 0x1a2b6
0x1a22a:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x1a22e:    3c fd                           	cmp al, 0xfd
0x1a230:    75 2d                           	jne 0x1a25f <_Z15ReadCompactSizeI11CDataStreamEyRT_+0x94>
0x1a232:    c7 44 24 08 02 00 00 00         	mov dword ptr [esp + 8], 2
0x1a23a:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x1a23d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a241:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a244:    89 04 24                        	mov dword ptr [esp], eax
0x1a247:    e8 85 49 00 00                  	call 0x1ebd1 <unknown_1ebd1>
0x1a24c:    0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x1a250:    0f b7 c0                        	movzx eax, ax
0x1a253:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a256:    c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x1a25d:    eb 57                           	jmp 0x1a2b6
0x1a25f:    0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x1a263:    3c fe                           	cmp al, 0xfe
0x1a265:    75 29                           	jne 0x1a290 <_Z15ReadCompactSizeI11CDataStreamEyRT_+0xc5>
0x1a267:    c7 44 24 08 04 00 00 00         	mov dword ptr [esp + 8], 4
0x1a26f:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x1a272:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a276:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a279:    89 04 24                        	mov dword ptr [esp], eax
0x1a27c:    e8 50 49 00 00                  	call 0x1ebd1 <unknown_1ebd1>
0x1a281:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1a284:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a287:    c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x1a28e:    eb 26                           	jmp 0x1a2b6
0x1a290:    c7 44 24 08 08 00 00 00         	mov dword ptr [esp + 8], 8
0x1a298:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x1a29b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a29f:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a2a2:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1a2a5 -- 0x1a2a8
0x1a2a5:    e8 27 49                                           |.'I             |
; function: function_1a2a8 at 0x1a2a8 -- 0x1a2d6
0x1a2a8:    00 00                           	add byte ptr [eax], al
0x1a2aa:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1a2ad:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1a2b0:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a2b3:    89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x1a2b6:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x1a2ba:    0f 82 80 00 00 00               	jb 0x1a340 <function_1a340>
0x1a2c0:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x1a2c4:    77 09                           	ja 0x1a2cf <function_1a2a8+0x27>
0x1a2c6:    81 7d e0 00 00 00 02            	cmp dword ptr [ebp - 0x20], 0x2000000
0x1a2cd:    76 71                           	jbe 0x1a340 <function_1a340>
0x1a2cf:    c7 04 24 08 00 00 00            	mov dword ptr [esp], 8
; data inside code section at 0x1a2d6 -- 0x1a2d7
0x1a2d6:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1a2d7 -- 0x1a2d8
; data inside code section at 0x1a2d8 -- 0x1a2dc
0x1a2d8:    ff ff ff 89                                        |....            |
; function: function_1a2dc at 0x1a2dc -- 0x1a2dd
0x1a2dc:    c3                              	ret 
; data inside code section at 0x1a2dd -- 0x1a2e4
0x1a2dd:    8d 45 f3 89 04 24 e8                               |.E...$.         |
; dynamically linked function: _ZNSaIcEC1Ev at 0x1a2e4 -- 0x1a2e5
; data inside code section at 0x1a2e5 -- 0x1a2ec
0x1a2e5:    ff ff ff 8d 45 f3 89                               |....E..         |
; function: function_1a2ec at 0x1a2ec -- 0x1a2fd
0x1a2ec:    44                              	inc esp
0x1a2ed:    24 08                           	and al, 8
0x1a2ef:    c7 44 24 04 68 3f 00 00         	mov dword ptr [esp + 4], 0x3f68 ; "ReadCompactSize() : size too large"
0x1a2f7:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x1a2fa:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1a2fd -- 0x1a2fe
0x1a2fd:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1a2fe -- 0x1a2ff
; data inside code section at 0x1a2ff -- 0x1a30d
0x1a2ff:    ff ff ff 8d 45 ec 89 44  24 04 89 1c 24 e8         |....E..D$...$.  |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x1a30d -- 0x1a30e
; data inside code section at 0x1a30e -- 0x1a318
0x1a30e:    ff ff ff 8d 45 ec 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSsD1Ev at 0x1a318 -- 0x1a319
; data inside code section at 0x1a319 -- 0x1a323
0x1a319:    ff ff ff 8d 45 f3 89 04  24 e8                     |....E...$.      |
; dynamically linked function: _ZNSaIcED1Ev at 0x1a323 -- 0x1a324
; data inside code section at 0x1a324 -- 0x1a328
0x1a324:    ff ff ff b8                                        |....            |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x1a328 -- 0x1a330
; data inside code section at 0x1a330 -- 0x1a334
0x1a330:    c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x1a334 -- 0x1a33b
; data inside code section at 0x1a33b -- 0x1a33c
0x1a33b:    e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x1a33c -- 0x1a33d
; data inside code section at 0x1a33d -- 0x1a340
0x1a33d:    ff ff ff                                           |...             |
; function: function_1a340 at 0x1a340 -- 0x1a354
0x1a340:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a343:    8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x1a346:    8b 4d f4                        	mov ecx, dword ptr [ebp - 0xc]
0x1a349:    65 33 0d 14 00 00 00            	xor ecx, dword ptr gs:[0x14]
0x1a350:    74 26                           	je 0x1a378 <function_1a378>
0x1a352:    eb 1f                           	jmp 0x1a373 <function_1a373>
; data inside code section at 0x1a354 -- 0x1a35d
0x1a354:    89 c6 8d 45 f3 89 04 24  e8                        |...E...$.       |
; dynamically linked function: _ZNSaIcED1Ev at 0x1a35d -- 0x1a35e
; data inside code section at 0x1a35e -- 0x1a365
0x1a35e:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_free_exception at 0x1a365 -- 0x1a366
; data inside code section at 0x1a366 -- 0x1a368
0x1a366:    ff ff                                              |..              |
; function: function_1a368 at 0x1a368 -- 0x1a36e
0x1a368:    ff 89 f0 89 04 24               	dec dword ptr [ecx + 0x240489f0]
; data inside code section at 0x1a36e -- 0x1a36f
0x1a36e:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1a36f -- 0x1a370
; data inside code section at 0x1a370 -- 0x1a373
0x1a370:    ff ff ff                                           |...             |
; function: function_1a373 at 0x1a373 -- 0x1a374
; dynamically linked function: __stack_chk_fail at 0x1a374 -- 0x1a375
; data inside code section at 0x1a375 -- 0x1a378
0x1a375:    ff ff ff                                           |...             |
; function: function_1a378 at 0x1a378 -- 0x1a37f
0x1a378:    83 c4 40                        	add esp, 0x40
0x1a37b:    5b                              	pop ebx
0x1a37c:    5e                              	pop esi
0x1a37d:    5d                              	pop ebp
0x1a37e:    c3                              	ret 
; section: .text._Z14Serialize_implI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE
; function: _Z14Serialize_implI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE at 0x1a37f -- 0x1a3b5
0x1a37f:    55                              	push ebp
0x1a380:    89 e5                           	mov ebp, esp
0x1a382:    53                              	push ebx
0x1a383:    83 ec 44                        	sub esp, 0x44
0x1a386:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a389:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a38c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a38f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a392:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a395:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a398:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a39b:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1a39e:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x1a3a1:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1a3a4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a3aa:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a3ad:    31 c0                           	xor eax, eax
0x1a3af:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a3b2:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1a3b5 -- 0x1a3b8
0x1a3b5:    e8 6f 78                                           |.ox             |
; function: function_1a3b8 at 0x1a3b8 -- 0x1a412
0x1a3b8:    00 00                           	add byte ptr [eax], al
0x1a3ba:    ba 00 00 00 00                  	mov edx, 0
0x1a3bf:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a3c3:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1a3c7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a3ca:    89 04 24                        	mov dword ptr [esp], eax
0x1a3cd:    e8 f9 86 01 00                  	call 0x32acb <unknown_32acb>
0x1a3d2:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a3d5:    89 04 24                        	mov dword ptr [esp], eax
0x1a3d8:    e8 0c 93 00 00                  	call 0x236e9 <unknown_236e9>
0x1a3dd:    83 f0 01                        	xor eax, 1
0x1a3e0:    84 c0                           	test al, al
0x1a3e2:    74 33                           	je 0x1a417 <function_1a417>
0x1a3e4:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a3e7:    89 04 24                        	mov dword ptr [esp], eax
0x1a3ea:    e8 3a 78 00 00                  	call 0x21c29 <unknown_21c29>
0x1a3ef:    89 c3                           	mov ebx, eax
0x1a3f1:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x1a3f9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a3fc:    89 04 24                        	mov dword ptr [esp], eax
0x1a3ff:    e8 63 78 00 00                  	call 0x21c67 <unknown_21c67>
0x1a404:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x1a408:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a40c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a40f:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1a412 -- 0x1a414
0x1a412:    e8 d6                                              |..              |
; function: function_1a414 at 0x1a414 -- 0x1a417
0x1a414:    4a                              	dec edx
0x1a415:    00 00                           	add byte ptr [eax], al
; function: function_1a417 at 0x1a417 -- 0x1a423
0x1a417:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a41a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a421:    74 05                           	je 0x1a428 <function_1a428>
; data inside code section at 0x1a423 -- 0x1a424
0x1a423:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a424 -- 0x1a425
; data inside code section at 0x1a425 -- 0x1a428
0x1a425:    ff ff ff                                           |...             |
; function: function_1a428 at 0x1a428 -- 0x1a42e
0x1a428:    83 c4 44                        	add esp, 0x44
0x1a42b:    5b                              	pop ebx
0x1a42c:    5d                              	pop ebp
0x1a42d:    c3                              	ret 
; section: .text._Z9SerializeI11CDataStream7CVarIntIyEEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream7CVarIntIyEEvRT_RKT0_li at 0x1a42e -- 0x1a44c
0x1a42e:    55                              	push ebp
0x1a42f:    89 e5                           	mov ebp, esp
0x1a431:    83 ec 38                        	sub esp, 0x38
0x1a434:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a437:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a43a:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a43d:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a440:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a443:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a446:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a449:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
; function: function_1a44c at 0x1a44c -- 0x1a46c
0x1a44c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a452:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a455:    31 c0                           	xor eax, eax
0x1a457:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1a45a:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1a45e:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1a461:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1a465:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a468:    89 44 24 04                     	mov dword ptr [esp + 4], eax
; function: function_1a46c at 0x1a46c -- 0x1a483
0x1a46c:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a46f:    89 04 24                        	mov dword ptr [esp], eax
0x1a472:    e8 8f ab 01 00                  	call 0x35006 <unknown_35006>
0x1a477:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a47a:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a481:    74 05                           	je 0x1a488 <function_1a488>
; data inside code section at 0x1a483 -- 0x1a484
0x1a483:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a484 -- 0x1a485
; data inside code section at 0x1a485 -- 0x1a488
0x1a485:    ff ff ff                                           |...             |
; function: function_1a488 at 0x1a488 -- 0x1a48a
0x1a488:    c9                              	leave 
0x1a489:    c3                              	ret 
; section: .text._ZN7CVarIntIyE11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN7CVarIntIyE11UnserializeI11CDataStreamEEvRT_ii at 0x1a48a -- 0x1a4d5
0x1a48a:    55                              	push ebp
0x1a48b:    89 e5                           	mov ebp, esp
0x1a48d:    53                              	push ebx
0x1a48e:    83 ec 34                        	sub esp, 0x34
0x1a491:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a494:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a497:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a49a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a49d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a4a0:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a4a3:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a4a6:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1a4a9:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a4af:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a4b2:    31 c0                           	xor eax, eax
0x1a4b4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a4b7:    8b 18                           	mov ebx, dword ptr [eax]
0x1a4b9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a4bc:    89 04 24                        	mov dword ptr [esp], eax
0x1a4bf:    e8 f7 ab 01 00                  	call 0x350bb <unknown_350bb>
0x1a4c4:    89 03                           	mov dword ptr [ebx], eax
0x1a4c6:    89 53 04                        	mov dword ptr [ebx + 4], edx
0x1a4c9:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a4cc:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a4d3:    74 05                           	je 0x1a4da <function_1a4da>
; data inside code section at 0x1a4d5 -- 0x1a4d6
0x1a4d5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a4d6 -- 0x1a4d7
; data inside code section at 0x1a4d7 -- 0x1a4da
0x1a4d7:    ff ff ff                                           |...             |
; function: function_1a4da at 0x1a4da -- 0x1a4e0
0x1a4da:    83 c4 34                        	add esp, 0x34
0x1a4dd:    5b                              	pop ebx
0x1a4de:    5d                              	pop ebp
0x1a4df:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorImEC2Ev
; function: _ZN9__gnu_cxx13new_allocatorImEC1Ev at 0x1a4e0 -- 0x1a503
0x1a4e0:    55                              	push ebp
0x1a4e1:    89 e5                           	mov ebp, esp
0x1a4e3:    83 ec 28                        	sub esp, 0x28
0x1a4e6:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a4e9:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a4ec:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a4f2:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a4f5:    31 c0                           	xor eax, eax
0x1a4f7:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a4fa:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a501:    74 05                           	je 0x1a508 <function_1a508>
; data inside code section at 0x1a503 -- 0x1a504
0x1a503:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a504 -- 0x1a505
; data inside code section at 0x1a505 -- 0x1a508
0x1a505:    ff ff ff                                           |...             |
; function: function_1a508 at 0x1a508 -- 0x1a50a
0x1a508:    c9                              	leave 
0x1a509:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorImED2Ev
; function: _ZN9__gnu_cxx13new_allocatorImED1Ev at 0x1a50a -- 0x1a51f
0x1a50a:    55                              	push ebp
0x1a50b:    89 e5                           	mov ebp, esp
0x1a50d:    83 ec 28                        	sub esp, 0x28
0x1a510:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a513:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a516:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a51c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0x1a51f -- 0x1a520
0x1a51f:    31                                                 |1               |
; function: function_1a520 at 0x1a520 -- 0x1a52d
0x1a520:    c0 8b 45 f4 65 33 05            	ror byte ptr [ebx + 0x3365f445], 5
0x1a527:    14 00                           	adc al, 0
0x1a529:    00 00                           	add byte ptr [eax], al
0x1a52b:    74 05                           	je 0x1a532 <function_1a532>
; data inside code section at 0x1a52d -- 0x1a52e
0x1a52d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a52e -- 0x1a52f
; data inside code section at 0x1a52f -- 0x1a532
0x1a52f:    ff ff ff                                           |...             |
; function: function_1a532 at 0x1a532 -- 0x1a534
0x1a532:    c9                              	leave 
0x1a533:    c3                              	ret 
; section: .text._ZNSaImEC2ERKS_
; function: _ZNSaImEC1ERKS_ at 0x1a534 -- 0x1a56f
0x1a534:    55                              	push ebp
0x1a535:    89 e5                           	mov ebp, esp
0x1a537:    83 ec 38                        	sub esp, 0x38
0x1a53a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a53d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a540:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a543:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a546:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a54c:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a54f:    31 c0                           	xor eax, eax
0x1a551:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a554:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a558:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a55b:    89 04 24                        	mov dword ptr [esp], eax
0x1a55e:    e8 af ac 01 00                  	call 0x35212 <unknown_35212>
0x1a563:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a566:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a56d:    74 05                           	je 0x1a574 <function_1a574>
; data inside code section at 0x1a56f -- 0x1a570
0x1a56f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a570 -- 0x1a571
; data inside code section at 0x1a571 -- 0x1a574
0x1a571:    ff ff ff                                           |...             |
; function: function_1a574 at 0x1a574 -- 0x1a576
0x1a574:    c9                              	leave 
0x1a575:    c3                              	ret 
; section: .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_
; function: _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_ at 0x1a576 -- 0x1a593
0x1a576:    55                              	push ebp
0x1a577:    89 e5                           	mov ebp, esp
0x1a579:    83 ec 38                        	sub esp, 0x38
0x1a57c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a57f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a582:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a588:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a58b:    31 c0                           	xor eax, eax
0x1a58d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a590:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1a593 -- 0x1a594
0x1a593:    e8                                                 |.               |
; function: function_1a594 at 0x1a594 -- 0x1a5a4
0x1a594:    ec                              	in al, dx
0x1a595:    ac                              	lodsb al, byte ptr [esi]
0x1a596:    01 00                           	add dword ptr [eax], eax
0x1a598:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1a59b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1a5a2:    74 05                           	je 0x1a5a9 <function_1a5a9>
; data inside code section at 0x1a5a4 -- 0x1a5a5
0x1a5a4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a5a5 -- 0x1a5a6
; data inside code section at 0x1a5a6 -- 0x1a5a9
0x1a5a6:    ff ff ff                                           |...             |
; function: function_1a5a9 at 0x1a5a9 -- 0x1a5ab
0x1a5a9:    c9                              	leave 
0x1a5aa:    c3                              	ret 
; section: .text._ZSt8__fill_aIP6CTxOutS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_
; function: _ZSt8__fill_aIP6CTxOutS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_ at 0x1a5ab -- 0x1a5d0
0x1a5ab:    55                              	push ebp
0x1a5ac:    89 e5                           	mov ebp, esp
0x1a5ae:    83 ec 38                        	sub esp, 0x38
0x1a5b1:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a5b4:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a5b7:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a5ba:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a5bd:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a5c0:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a5c3:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a5c9:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a5cc:    31 c0                           	xor eax, eax
0x1a5ce:    eb 16                           	jmp 0x1a5e6
; data inside code section at 0x1a5d0 -- 0x1a5d8
0x1a5d0:    8b 45 dc 89 44 24 04 8b                            |.E..D$..        |
; function: function_1a5d8 at 0x1a5d8 -- 0x1a5ff
0x1a5d8:    45                              	inc ebp
0x1a5d9:    e4 89                           	in al, 0x89
0x1a5db:    04 24                           	add al, 0x24
0x1a5dd:    e8 15 a6 01 00                  	call 0x34bf7 <unknown_34bf7>
0x1a5e2:    83 45 e4 14                     	add dword ptr [ebp - 0x1c], 0x14
0x1a5e6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a5e9:    3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x1a5ec:    0f 95 c0                        	setne al
0x1a5ef:    84 c0                           	test al, al
0x1a5f1:    75 dd                           	jne 0x1a5d0
0x1a5f3:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a5f6:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a5fd:    74 05                           	je 0x1a604 <function_1a604>
; data inside code section at 0x1a5ff -- 0x1a600
0x1a5ff:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a600 -- 0x1a601
; data inside code section at 0x1a601 -- 0x1a604
0x1a601:    ff ff ff                                           |...             |
; function: function_1a604 at 0x1a604 -- 0x1a606
0x1a604:    c9                              	leave 
0x1a605:    c3                              	ret 
; section: .text._ZN7CScriptaSERKS_
; function: _ZN7CScriptaSERKS_ at 0x1a606 -- 0x1a615
0x1a606:    55                              	push ebp
0x1a607:    89 e5                           	mov ebp, esp
0x1a609:    83 ec 38                        	sub esp, 0x38
0x1a60c:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a60f:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a612:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
; data inside code section at 0x1a615 -- 0x1a617
0x1a615:    89 45                                              |.E              |
; function: function_1a617 at 0x1a617 -- 0x1a644
0x1a617:    e0 65                           	loopne 0x1a67e
0x1a619:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x1a61e:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a621:    31 c0                           	xor eax, eax
0x1a623:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1a626:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a629:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1a62d:    89 04 24                        	mov dword ptr [esp], eax
0x1a630:    e8 91 84 00 00                  	call 0x22ac6 <unknown_22ac6>
0x1a635:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a638:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1a63b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1a642:    74 05                           	je 0x1a649 <function_1a649>
; data inside code section at 0x1a644 -- 0x1a645
0x1a644:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a645 -- 0x1a646
; data inside code section at 0x1a646 -- 0x1a649
0x1a646:    ff ff ff                                           |...             |
; function: function_1a649 at 0x1a649 -- 0x1a64b
0x1a649:    c9                              	leave 
0x1a64a:    c3                              	ret 
; section: .text._ZN6CTxOutaSERKS_
; function: _ZN6CTxOutaSERKS_ at 0x1a64c -- 0x1a67c
0x1a64c:    55                              	push ebp
0x1a64d:    89 e5                           	mov ebp, esp
0x1a64f:    83 ec 38                        	sub esp, 0x38
0x1a652:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a655:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a658:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a65b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a65e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a664:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a667:    31 c0                           	xor eax, eax
0x1a669:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a66c:    8b 50 04                        	mov edx, dword ptr [eax + 4]
0x1a66f:    8b 00                           	mov eax, dword ptr [eax]
0x1a671:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x1a674:    89 01                           	mov dword ptr [ecx], eax
0x1a676:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x1a679:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; data inside code section at 0x1a67c -- 0x1a67d
0x1a67c:    8d                                                 |.               |
; function: function_1a67d at 0x1a67d -- 0x1a67e
0x1a67d:    50                              	push eax
; data inside code section at 0x1a67e -- 0x1a6a1
0x1a67e:    08 8b 45 e4 83 c0 08 89  54 24 04 89 04 24 e8 c1   |..E.....T$...$..|
0x1a68e:    a5 01 00 8b 45 e4 8b 55  f4 65 33 15 14 00 00 00   |....E..U.e3.....|
0x1a69e:    74 05 e8                                           |t..             |
; dynamically linked function: __stack_chk_fail at 0x1a6a1 -- 0x1a6a2
; data inside code section at 0x1a6a2 -- 0x1a6a4
0x1a6a2:    ff ff                                              |..              |
; function: function_1a6a4 at 0x1a6a4 -- 0x1a6a7
0x1a6a4:    ff c9                           	dec ecx
0x1a6a6:    c3                              	ret 
; section: .text._ZSt12__niter_baseIP6CTxOutENSt11_Niter_baseIT_E13iterator_typeES3_
; function: _ZSt12__niter_baseIP6CTxOutENSt11_Niter_baseIT_E13iterator_typeES3_ at 0x1a6a7 -- 0x1a6b0
0x1a6a7:    55                              	push ebp
0x1a6a8:    89 e5                           	mov ebp, esp
0x1a6aa:    83 ec 38                        	sub esp, 0x38
0x1a6ad:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x1a6b0 -- 0x1a6b2
0x1a6b0:    89 45                                              |.E              |
; function: function_1a6b2 at 0x1a6b2 -- 0x1a6d5
0x1a6b2:    e4 65                           	in al, 0x65
0x1a6b4:    a1 14 00 00 00                  	mov eax, dword ptr [0x14]
0x1a6b9:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a6bc:    31 c0                           	xor eax, eax
0x1a6be:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a6c1:    89 04 24                        	mov dword ptr [esp], eax
0x1a6c4:    e8 23 ad 01 00                  	call 0x353ec <unknown_353ec>
0x1a6c9:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1a6cc:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1a6d3:    74 05                           	je 0x1a6da <function_1a6da>
; data inside code section at 0x1a6d5 -- 0x1a6d6
0x1a6d5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a6d6 -- 0x1a6d7
; data inside code section at 0x1a6d7 -- 0x1a6da
0x1a6d7:    ff ff ff                                           |...             |
; function: function_1a6da at 0x1a6da -- 0x1a6dc
0x1a6da:    c9                              	leave 
0x1a6db:    c3                              	ret 
; section: .text._ZSt10__fill_n_aIP6CTxOutjS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT1_E7__valueET_E6__typeES7_T0_RKS5_
; function: _ZSt10__fill_n_aIP6CTxOutjS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT1_E7__valueET_E6__typeES7_T0_RKS5_ at 0x1a6dc -- 0x1a6df
0x1a6dc:    55                              	push ebp
0x1a6dd:    89 e5                           	mov ebp, esp
; function: function_1a6df at 0x1a6df -- 0x1a73b
0x1a6df:    83 ec 38                        	sub esp, 0x38
0x1a6e2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a6e5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a6e8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a6eb:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a6ee:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a6f1:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a6f4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a6fa:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a6fd:    31 c0                           	xor eax, eax
0x1a6ff:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a702:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x1a705:    eb 1a                           	jmp 0x1a721 <function_1a6df+0x42>
0x1a707:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1a70a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a70e:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a711:    89 04 24                        	mov dword ptr [esp], eax
0x1a714:    e8 0f a6 01 00                  	call 0x34d28 <unknown_34d28>
0x1a719:    83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x1a71d:    83 45 e4 14                     	add dword ptr [ebp - 0x1c], 0x14
0x1a721:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x1a725:    0f 95 c0                        	setne al
0x1a728:    84 c0                           	test al, al
0x1a72a:    75 db                           	jne 0x1a707 <function_1a6df+0x28>
0x1a72c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a72f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1a732:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1a739:    74 05                           	je 0x1a740 <function_1a740>
; data inside code section at 0x1a73b -- 0x1a73c
0x1a73b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a73c -- 0x1a73d
; data inside code section at 0x1a73d -- 0x1a740
0x1a73d:    ff ff ff                                           |...             |
; function: function_1a740 at 0x1a740 -- 0x1a742
0x1a740:    c9                              	leave 
0x1a741:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream17CScriptCompressorEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream17CScriptCompressorEvRT_RT0_li at 0x1a742 -- 0x1a760
0x1a742:    55                              	push ebp
0x1a743:    89 e5                           	mov ebp, esp
0x1a745:    83 ec 38                        	sub esp, 0x38
0x1a748:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a74b:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a74e:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a751:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a754:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a757:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a75a:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a75d:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
; data inside code section at 0x1a760 -- 0x1a764
0x1a760:    65 a1 14 00                                        |e...            |
; function: function_1a764 at 0x1a764 -- 0x1a797
0x1a764:    00 00                           	add byte ptr [eax], al
0x1a766:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a769:    31 c0                           	xor eax, eax
0x1a76b:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1a76e:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1a772:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1a775:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1a779:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a77c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a780:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a783:    89 04 24                        	mov dword ptr [esp], eax
0x1a786:    e8 29 ad 01 00                  	call 0x354b4 <unknown_354b4>
0x1a78b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a78e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a795:    74 05                           	je 0x1a79c <function_1a79c>
; data inside code section at 0x1a797 -- 0x1a798
0x1a797:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a798 -- 0x1a799
; data inside code section at 0x1a799 -- 0x1a79c
0x1a799:    ff ff ff                                           |...             |
; function: function_1a79c at 0x1a79c -- 0x1a79e
0x1a79c:    c9                              	leave 
0x1a79d:    c3                              	ret 
; section: .text._Z14Serialize_implI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE
; function: _Z14Serialize_implI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE at 0x1a79e -- 0x1a7c3
0x1a79e:    55                              	push ebp
0x1a79f:    89 e5                           	mov ebp, esp
0x1a7a1:    53                              	push ebx
0x1a7a2:    83 ec 44                        	sub esp, 0x44
0x1a7a5:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a7a8:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1a7ab:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a7ae:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1a7b1:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a7b4:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1a7b7:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a7ba:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1a7bd:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x1a7c0:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
; data inside code section at 0x1a7c3 -- 0x1a7c6
0x1a7c3:    65 a1 14                                           |e..             |
; function: function_1a7c6 at 0x1a7c6 -- 0x1a806
0x1a7c6:    00 00                           	add byte ptr [eax], al
0x1a7c8:    00 89 45 f4 31 c0               	add byte ptr [ecx - 0x3fce0bbb], cl
0x1a7ce:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a7d1:    89 04 24                        	mov dword ptr [esp], eax
0x1a7d4:    e8 6f 78 00 00                  	call 0x22048 <unknown_22048>
0x1a7d9:    ba 00 00 00 00                  	mov edx, 0
0x1a7de:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a7e2:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1a7e6:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a7e9:    89 04 24                        	mov dword ptr [esp], eax
0x1a7ec:    e8 15 9b 01 00                  	call 0x34306 <unknown_34306>
0x1a7f1:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a7f4:    89 04 24                        	mov dword ptr [esp], eax
0x1a7f7:    e8 0c 93 00 00                  	call 0x23b08 <unknown_23b08>
0x1a7fc:    83 f0 01                        	xor eax, 1
0x1a7ff:    84 c0                           	test al, al
0x1a801:    74 33                           	je 0x1a836
0x1a803:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
; function: function_1a806 at 0x1a806 -- 0x1a842
0x1a806:    89 04 24                        	mov dword ptr [esp], eax
0x1a809:    e8 3a 78 00 00                  	call 0x22048 <unknown_22048>
0x1a80e:    89 c3                           	mov ebx, eax
0x1a810:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x1a818:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1a81b:    89 04 24                        	mov dword ptr [esp], eax
0x1a81e:    e8 63 78 00 00                  	call 0x22086 <unknown_22086>
0x1a823:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x1a827:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a82b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1a82e:    89 04 24                        	mov dword ptr [esp], eax
0x1a831:    e8 66 4c 00 00                  	call 0x1f49c <unknown_1f49c>
0x1a836:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a839:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a840:    74 05                           	je 0x1a847 <function_1a847>
; data inside code section at 0x1a842 -- 0x1a843
0x1a842:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a843 -- 0x1a844
; data inside code section at 0x1a844 -- 0x1a847
0x1a844:    ff ff ff                                           |...             |
; function: function_1a847 at 0x1a847 -- 0x1a84d
0x1a847:    83 c4 44                        	add esp, 0x44
0x1a84a:    5b                              	pop ebx
0x1a84b:    5d                              	pop ebp
0x1a84c:    c3                              	ret 
; section: .text._ZN13CDiskBlockPos11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN13CDiskBlockPos11UnserializeI11CDataStreamEEvRT_ii at 0x1a84e -- 0x1a8a6
0x1a84e:    55                              	push ebp
0x1a84f:    89 e5                           	mov ebp, esp
0x1a851:    56                              	push esi
0x1a852:    53                              	push ebx
0x1a853:    83 ec 50                        	sub esp, 0x50
0x1a856:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a859:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1a85c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a85f:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x1a862:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a865:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1a868:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a86b:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x1a86e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1a874:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1a877:    31 c0                           	xor eax, eax
0x1a879:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x1a87d:    c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x1a881:    c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x1a885:    c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x1a88c:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a88f:    89 04 24                        	mov dword ptr [esp], eax
0x1a892:    e8 62 98 00 00                  	call 0x240f9 <unknown_240f9>
0x1a897:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x1a89a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a89e:    89 14 24                        	mov dword ptr [esp], edx
0x1a8a1:    e8 80 98 00 00                  	call 0x24126 <unknown_24126>
; data inside code section at 0x1a8a6 -- 0x1a8a8
0x1a8a6:    83 ec                                              |..              |
; function: function_1a8a8 at 0x1a8a8 -- 0x1a935
0x1a8a8:    04 8d                           	add al, 0x8d
0x1a8aa:    45                              	inc ebp
0x1a8ab:    e4 89                           	in al, 0x89
0x1a8ad:    04 24                           	add al, 0x24
0x1a8af:    e8 b9 98 00 00                  	call 0x2416d <unknown_2416d>
0x1a8b4:    89 f2                           	mov edx, esi
0x1a8b6:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x1a8ba:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1a8bd:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1a8c1:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x1a8c4:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1a8c8:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a8cc:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x1a8cf:    89 04 24                        	mov dword ptr [esp], eax
0x1a8d2:    e8 39 62 01 00                  	call 0x30b10 <unknown_30b10>
0x1a8d7:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1a8da:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a8dd:    83 c0 04                        	add eax, 4
0x1a8e0:    89 04 24                        	mov dword ptr [esp], eax
0x1a8e3:    e8 e1 93 00 00                  	call 0x23cc9 <unknown_23cc9>
0x1a8e8:    8d 55 e8                        	lea edx, [ebp - 0x18]
0x1a8eb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a8ef:    89 14 24                        	mov dword ptr [esp], edx
0x1a8f2:    e8 ff 93 00 00                  	call 0x23cf6 <unknown_23cf6>
0x1a8f7:    83 ec 04                        	sub esp, 4
0x1a8fa:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x1a8fd:    89 04 24                        	mov dword ptr [esp], eax
0x1a900:    e8 38 94 00 00                  	call 0x23d3d <unknown_23d3d>
0x1a905:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x1a909:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1a90c:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1a910:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x1a913:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1a917:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a91b:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x1a91e:    89 04 24                        	mov dword ptr [esp], eax
0x1a921:    e8 52 62 01 00                  	call 0x30b78 <unknown_30b78>
0x1a926:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1a929:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1a92c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1a933:    74 05                           	je 0x1a93a <function_1a93a>
; data inside code section at 0x1a935 -- 0x1a936
0x1a935:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a936 -- 0x1a937
; data inside code section at 0x1a937 -- 0x1a93a
0x1a937:    ff ff ff                                           |...             |
; function: function_1a93a at 0x1a93a -- 0x1a941
0x1a93a:    8d 65 f8                        	lea esp, [ebp - 8]
0x1a93d:    5b                              	pop ebx
0x1a93e:    5e                              	pop esi
0x1a93f:    5d                              	pop ebp
0x1a940:    c3                              	ret 
; section: .text._ZNK13CDiskBlockPos9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK13CDiskBlockPos9SerializeI11CDataStreamEEvRT_ii at 0x1a942 -- 0x1a962
0x1a942:    55                              	push ebp
0x1a943:    89 e5                           	mov ebp, esp
0x1a945:    56                              	push esi
0x1a946:    53                              	push ebx
0x1a947:    83 ec 50                        	sub esp, 0x50
0x1a94a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1a94d:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1a950:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1a953:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x1a956:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1a959:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1a95c:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1a95f:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
; data inside code section at 0x1a962 -- 0x1a965
0x1a962:    65 a1 14                                           |e..             |
; function: function_1a965 at 0x1a965 -- 0x1a979
0x1a965:    00 00                           	add byte ptr [eax], al
0x1a967:    00 89 45 f4 31 c0               	add byte ptr [ecx - 0x3fce0bbb], cl
0x1a96d:    c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x1a971:    c6 45 f2 01                     	mov byte ptr [ebp - 0xe], 1
0x1a975:    c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
; data inside code section at 0x1a979 -- 0x1a97c
0x1a979:    c7 45 ec                                           |.E.             |
; function: function_1a97c at 0x1a97c -- 0x1aa29
0x1a97c:    00 00                           	add byte ptr [eax], al
0x1a97e:    00 00                           	add byte ptr [eax], al
0x1a980:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a983:    89 04 24                        	mov dword ptr [esp], eax
0x1a986:    e8 62 98 00 00                  	call 0x241ed <unknown_241ed>
0x1a98b:    8d 55 e4                        	lea edx, [ebp - 0x1c]
0x1a98e:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a992:    89 14 24                        	mov dword ptr [esp], edx
0x1a995:    e8 80 98 00 00                  	call 0x2421a <unknown_2421a>
0x1a99a:    83 ec 04                        	sub esp, 4
0x1a99d:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x1a9a0:    89 04 24                        	mov dword ptr [esp], eax
0x1a9a3:    e8 b9 98 00 00                  	call 0x24261 <unknown_24261>
0x1a9a8:    89 f2                           	mov edx, esi
0x1a9aa:    88 54 24 10                     	mov byte ptr [esp + 0x10], dl
0x1a9ae:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1a9b1:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1a9b5:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x1a9b8:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1a9bc:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a9c0:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x1a9c3:    89 04 24                        	mov dword ptr [esp], eax
0x1a9c6:    e8 71 92 01 00                  	call 0x33c3c <unknown_33c3c>
0x1a9cb:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1a9ce:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1a9d1:    83 c0 04                        	add eax, 4
0x1a9d4:    89 04 24                        	mov dword ptr [esp], eax
0x1a9d7:    e8 e1 93 00 00                  	call 0x23dbd <unknown_23dbd>
0x1a9dc:    8d 55 e8                        	lea edx, [ebp - 0x18]
0x1a9df:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1a9e3:    89 14 24                        	mov dword ptr [esp], edx
0x1a9e6:    e8 ff 93 00 00                  	call 0x23dea <unknown_23dea>
0x1a9eb:    83 ec 04                        	sub esp, 4
0x1a9ee:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x1a9f1:    89 04 24                        	mov dword ptr [esp], eax
0x1a9f4:    e8 38 94 00 00                  	call 0x23e31 <unknown_23e31>
0x1a9f9:    88 5c 24 10                     	mov byte ptr [esp + 0x10], bl
0x1a9fd:    8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x1aa00:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1aa04:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x1aa07:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1aa0b:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1aa0f:    8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x1aa12:    89 04 24                        	mov dword ptr [esp], eax
0x1aa15:    e8 0c 86 01 00                  	call 0x33026 <unknown_33026>
0x1aa1a:    01 45 ec                        	add dword ptr [ebp - 0x14], eax
0x1aa1d:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1aa20:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1aa27:    74 05                           	je 0x1aa2e <function_1aa2e>
; data inside code section at 0x1aa29 -- 0x1aa2a
0x1aa29:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1aa2a -- 0x1aa2b
; data inside code section at 0x1aa2b -- 0x1aa2e
0x1aa2b:    ff ff ff                                           |...             |
; function: function_1aa2e at 0x1aa2e -- 0x1aa35
0x1aa2e:    8d 65 f8                        	lea esp, [ebp - 8]
0x1aa31:    5b                              	pop ebx
0x1aa32:    5e                              	pop esi
0x1aa33:    5d                              	pop ebp
0x1aa34:    c3                              	ret 
; section: .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
; function: _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ at 0x1aa35 -- 0x1aa4a
0x1aa35:    55                              	push ebp
0x1aa36:    89 e5                           	mov ebp, esp
0x1aa38:    83 ec 38                        	sub esp, 0x38
0x1aa3b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1aa3e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1aa41:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1aa44:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1aa47:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; function: function_1aa4a at 0x1aa4a -- 0x1aa6e
0x1aa4a:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1aa4d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1aa53:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1aa56:    31 c0                           	xor eax, eax
0x1aa58:    8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x1aa5b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1aa5e:    89 d1                           	mov ecx, edx
0x1aa60:    29 c1                           	sub ecx, eax
0x1aa62:    89 c8                           	mov eax, ecx
0x1aa64:    c1 f8 02                        	sar eax, 2
0x1aa67:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x1aa6a:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
; function: function_1aa6e at 0x1aa6e -- 0x1aa87
0x1aa6e:    74 1c                           	je 0x1aa8c <function_1aa8c>
0x1aa70:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x1aa73:    c1 e0 02                        	shl eax, 2
0x1aa76:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1aa7a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1aa7d:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1aa81:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1aa84:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1aa87 -- 0x1aa88
0x1aa87:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1aa88 -- 0x1aa89
; data inside code section at 0x1aa89 -- 0x1aa8c
0x1aa89:    ff ff ff                                           |...             |
; function: function_1aa8c at 0x1aa8c -- 0x1aaa1
0x1aa8c:    8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x1aa8f:    c1 e0 02                        	shl eax, 2
0x1aa92:    03 45 dc                        	add eax, dword ptr [ebp - 0x24]
0x1aa95:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1aa98:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1aa9f:    74 05                           	je 0x1aaa6 <function_1aaa6>
; data inside code section at 0x1aaa1 -- 0x1aaa2
0x1aaa1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1aaa2 -- 0x1aaa3
; data inside code section at 0x1aaa3 -- 0x1aaa6
0x1aaa3:    ff ff ff                                           |...             |
; function: function_1aaa6 at 0x1aaa6 -- 0x1aaa8
0x1aaa6:    c9                              	leave 
0x1aaa7:    c3                              	ret 
; section: .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
; function: _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ at 0x1aaa8 -- 0x1aac4
0x1aaa8:    55                              	push ebp
0x1aaa9:    89 e5                           	mov ebp, esp
0x1aaab:    53                              	push ebx
0x1aaac:    83 ec 44                        	sub esp, 0x44
0x1aaaf:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1aab2:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1aab5:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1aab8:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1aabb:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1aabe:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1aac1:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
; function: function_1aac4 at 0x1aac4 -- 0x1ab6f
0x1aac4:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1aac7:    8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x1aaca:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1aacd:    8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x1aad0:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1aad3:    8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x1aad6:    89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x1aad9:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1aadf:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1aae2:    31 c0                           	xor eax, eax
0x1aae4:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x1aae7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1aaeb:    8d 45 d4                        	lea eax, [ebp - 0x2c]
0x1aaee:    89 04 24                        	mov dword ptr [esp], eax
0x1aaf1:    e8 72 22 00 00                  	call 0x1cd68 <unknown_1cd68>
0x1aaf6:    89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x1aaf9:    eb 4c                           	jmp 0x1ab47 <function_1aac4+0x83>
0x1aafb:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x1aafe:    89 04 24                        	mov dword ptr [esp], eax
0x1ab01:    e8 c4 25 00 00                  	call 0x1d0ca <unknown_1d0ca>
0x1ab06:    0f b6 d8                        	movzx ebx, al
0x1ab09:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x1ab0c:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x1ab0f:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1ab13:    89 04 24                        	mov dword ptr [esp], eax
0x1ab16:    e8 41 23 00 00                  	call 0x1ce5c <unknown_1ce5c>
0x1ab1b:    83 ec 04                        	sub esp, 4
0x1ab1e:    89 5c 24 04                     	mov dword ptr [esp + 4], ebx
0x1ab22:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x1ab25:    89 04 24                        	mov dword ptr [esp], eax
0x1ab28:    e8 c3 1f 00 00                  	call 0x1caf0 <unknown_1caf0>
0x1ab2d:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x1ab30:    89 04 24                        	mov dword ptr [esp], eax
0x1ab33:    e8 ee 25 00 00                  	call 0x1d126 <unknown_1d126>
0x1ab38:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x1ab3b:    89 04 24                        	mov dword ptr [esp], eax
0x1ab3e:    e8 75 23 00 00                  	call 0x1ceb8 <unknown_1ceb8>
0x1ab43:    83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x1ab47:    83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x1ab4b:    0f 9f c0                        	setg al
0x1ab4e:    84 c0                           	test al, al
0x1ab50:    75 a9                           	jne 0x1aafb <function_1aac4+0x37>
0x1ab52:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x1ab55:    8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x1ab58:    8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x1ab5b:    89 01                           	mov dword ptr [ecx], eax
0x1ab5d:    89 51 04                        	mov dword ptr [ecx + 4], edx
0x1ab60:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1ab63:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1ab66:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1ab6d:    74 05                           	je 0x1ab74 <function_1ab74>
; data inside code section at 0x1ab6f -- 0x1ab70
0x1ab6f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ab70 -- 0x1ab71
; data inside code section at 0x1ab71 -- 0x1ab74
0x1ab71:    ff ff ff                                           |...             |
; function: function_1ab74 at 0x1ab74 -- 0x1ab7b
0x1ab74:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1ab77:    c9                              	leave 
0x1ab78:    c2 04 00                        	ret 4
; section: .text._Z9SerializeI11CDataStream17CScriptCompressorEvRT_RKT0_li
; function: _Z9SerializeI11CDataStream17CScriptCompressorEvRT_RKT0_li at 0x1ab7b -- 0x1aba4
0x1ab7b:    55                              	push ebp
0x1ab7c:    89 e5                           	mov ebp, esp
0x1ab7e:    83 ec 38                        	sub esp, 0x38
0x1ab81:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ab84:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ab87:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1ab8a:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1ab8d:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1ab90:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1ab93:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1ab96:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1ab99:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ab9f:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1aba2:    31 c0                           	xor eax, eax
; function: function_1aba4 at 0x1aba4 -- 0x1abd0
0x1aba4:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1aba7:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1abab:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1abae:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1abb2:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1abb5:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1abb9:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1abbc:    89 04 24                        	mov dword ptr [esp], eax
0x1abbf:    e8 39 af 01 00                  	call 0x35afd <unknown_35afd>
0x1abc4:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1abc7:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1abce:    74 05                           	je 0x1abd5 <function_1abd5>
; data inside code section at 0x1abd0 -- 0x1abd1
0x1abd0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1abd1 -- 0x1abd2
; data inside code section at 0x1abd2 -- 0x1abd5
0x1abd2:    ff ff ff                                           |...             |
; function: function_1abd5 at 0x1abd5 -- 0x1abd7
0x1abd5:    c9                              	leave 
0x1abd6:    c3                              	ret 
; section: .text._ZNK7CVarIntIyE9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK7CVarIntIyE9SerializeI11CDataStreamEEvRT_ii at 0x1abd8 -- 0x1ac09
0x1abd8:    55                              	push ebp
0x1abd9:    89 e5                           	mov ebp, esp
0x1abdb:    83 ec 38                        	sub esp, 0x38
0x1abde:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1abe1:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1abe4:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1abe7:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1abea:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1abed:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1abf0:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1abf3:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1abf6:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1abfc:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1abff:    31 c0                           	xor eax, eax
0x1ac01:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1ac04:    8b 00                           	mov eax, dword ptr [eax]
0x1ac06:    8b 50 04                        	mov edx, dword ptr [eax + 4]
; data inside code section at 0x1ac09 -- 0x1ac0a
0x1ac09:    8b                                                 |.               |
; function: function_1ac0a at 0x1ac0a -- 0x1ac2a
0x1ac0a:    00 89 44 24 04 89               	add byte ptr [ecx - 0x76fbdbbc], cl
0x1ac10:    54                              	push esp
0x1ac11:    24 08                           	and al, 8
0x1ac13:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1ac16:    89 04 24                        	mov dword ptr [esp], eax
0x1ac19:    e8 be b0 01 00                  	call 0x35cdc <unknown_35cdc>
0x1ac1e:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1ac21:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1ac28:    74 05                           	je 0x1ac2f <function_1ac2f>
; data inside code section at 0x1ac2a -- 0x1ac2b
0x1ac2a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ac2b -- 0x1ac2c
; data inside code section at 0x1ac2c -- 0x1ac2f
0x1ac2c:    ff ff ff                                           |...             |
; function: function_1ac2f at 0x1ac2f -- 0x1ac31
0x1ac2f:    c9                              	leave 
0x1ac30:    c3                              	ret 
; section: .text._Z10ReadVarIntI11CDataStreamyET0_RT_
; function: _Z10ReadVarIntI11CDataStreamyET0_RT_ at 0x1ac31 -- 0x1acd0
0x1ac31:    55                              	push ebp
0x1ac32:    89 e5                           	mov ebp, esp
0x1ac34:    57                              	push edi
0x1ac35:    56                              	push esi
0x1ac36:    53                              	push ebx
0x1ac37:    83 ec 3c                        	sub esp, 0x3c
0x1ac3a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ac3d:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1ac40:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ac46:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ac49:    31 c0                           	xor eax, eax
0x1ac4b:    c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x1ac52:    c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x1ac59:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x1ac61:    8d 45 e3                        	lea eax, [ebp - 0x1d]
0x1ac64:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1ac68:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1ac6b:    89 04 24                        	mov dword ptr [esp], eax
0x1ac6e:    e8 c4 49 00 00                  	call 0x1f637 <unknown_1f637>
0x1ac73:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1ac76:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1ac79:    89 c1                           	mov ecx, eax
0x1ac7b:    89 d3                           	mov ebx, edx
0x1ac7d:    0f a4 cb 07                     	shld ebx, ecx, 7
0x1ac81:    c1 e1 07                        	shl ecx, 7
0x1ac84:    0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x1ac88:    88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x1ac8b:    0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x1ac8f:    ba 00 00 00 00                  	mov edx, 0
0x1ac94:    89 c6                           	mov esi, eax
0x1ac96:    83 e6 7f                        	and esi, 0x7f
0x1ac99:    89 d7                           	mov edi, edx
0x1ac9b:    83 e7 00                        	and edi, 0
0x1ac9e:    89 c8                           	mov eax, ecx
0x1aca0:    09 f0                           	or eax, esi
0x1aca2:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1aca5:    89 d8                           	mov eax, ebx
0x1aca7:    09 f8                           	or eax, edi
0x1aca9:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1acac:    0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x1acb0:    84 c0                           	test al, al
0x1acb2:    79 0a                           	jns 0x1acbe <_Z10ReadVarIntI11CDataStreamyET0_RT_+0x8d>
0x1acb4:    83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x1acb8:    83 55 dc 00                     	adc dword ptr [ebp - 0x24], 0
0x1acbc:    eb 9b                           	jmp 0x1ac59 <_Z10ReadVarIntI11CDataStreamyET0_RT_+0x28>
0x1acbe:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1acc1:    8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x1acc4:    8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x1acc7:    65 33 0d 14 00 00 00            	xor ecx, dword ptr gs:[0x14]
0x1acce:    74 05                           	je 0x1acd5 <function_1acd5>
; data inside code section at 0x1acd0 -- 0x1acd1
0x1acd0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1acd1 -- 0x1acd2
; data inside code section at 0x1acd2 -- 0x1acd5
0x1acd2:    ff ff ff                                           |...             |
; function: function_1acd5 at 0x1acd5 -- 0x1acdd
0x1acd5:    83 c4 3c                        	add esp, 0x3c
0x1acd8:    5b                              	pop ebx
0x1acd9:    5e                              	pop esi
0x1acda:    5f                              	pop edi
0x1acdb:    5d                              	pop ebp
0x1acdc:    c3                              	ret 
; section: .text._ZN9__gnu_cxx13new_allocatorImEC2ERKS1_
; function: _ZN9__gnu_cxx13new_allocatorImEC1ERKS1_ at 0x1acde -- 0x1acf9
0x1acde:    55                              	push ebp
0x1acdf:    89 e5                           	mov ebp, esp
0x1ace1:    83 ec 28                        	sub esp, 0x28
0x1ace4:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ace7:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1acea:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1aced:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1acf0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1acf6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
; data inside code section at 0x1acf9 -- 0x1acfa
0x1acf9:    31                                                 |1               |
; function: function_1acfa at 0x1acfa -- 0x1ad07
0x1acfa:    c0 8b 45 f4 65 33 05            	ror byte ptr [ebx + 0x3365f445], 5
0x1ad01:    14 00                           	adc al, 0
0x1ad03:    00 00                           	add byte ptr [eax], al
0x1ad05:    74 05                           	je 0x1ad0c <function_1ad0c>
; data inside code section at 0x1ad07 -- 0x1ad08
0x1ad07:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ad08 -- 0x1ad09
; data inside code section at 0x1ad09 -- 0x1ad0c
0x1ad09:    ff ff ff                                           |...             |
; function: function_1ad0c at 0x1ad0c -- 0x1ad0e
0x1ad0c:    c9                              	leave 
0x1ad0d:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_
; function: _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_ at 0x1ad0e -- 0x1ad32
0x1ad0e:    55                              	push ebp
0x1ad0f:    89 e5                           	mov ebp, esp
0x1ad11:    83 ec 38                        	sub esp, 0x38
0x1ad14:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ad17:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ad1a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ad20:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1ad23:    31 c0                           	xor eax, eax
0x1ad25:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x1ad28:    89 04 24                        	mov dword ptr [esp], eax
0x1ad2b:    e8 a2 b1 01 00                  	call 0x35ed2 <unknown_35ed2>
0x1ad30:    8b 00                           	mov eax, dword ptr [eax]
; data inside code section at 0x1ad32 -- 0x1ad34
0x1ad32:    8b 55                                              |.U              |
; function: function_1ad34 at 0x1ad34 -- 0x1ad3e
0x1ad34:    f4                              	hlt 
0x1ad35:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1ad3c:    74 05                           	je 0x1ad43 <function_1ad43>
; data inside code section at 0x1ad3e -- 0x1ad3f
0x1ad3e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ad3f -- 0x1ad40
; data inside code section at 0x1ad40 -- 0x1ad43
0x1ad40:    ff ff ff                                           |...             |
; function: function_1ad43 at 0x1ad43 -- 0x1ad45
0x1ad43:    c9                              	leave 
0x1ad44:    c3                              	ret 
; section: .text._ZNSt10_Iter_baseIP6CTxOutLb0EE7_S_baseES1_
; function: _ZNSt10_Iter_baseIP6CTxOutLb0EE7_S_baseES1_ at 0x1ad45 -- 0x1ad6b
0x1ad45:    55                              	push ebp
0x1ad46:    89 e5                           	mov ebp, esp
0x1ad48:    83 ec 28                        	sub esp, 0x28
0x1ad4b:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ad4e:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ad51:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ad57:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1ad5a:    31 c0                           	xor eax, eax
0x1ad5c:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1ad5f:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1ad62:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1ad69:    74 05                           	je 0x1ad70 <function_1ad70>
; data inside code section at 0x1ad6b -- 0x1ad6c
0x1ad6b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ad6c -- 0x1ad6d
; data inside code section at 0x1ad6d -- 0x1ad70
0x1ad6d:    ff ff ff                                           |...             |
; function: function_1ad70 at 0x1ad70 -- 0x1ad72
0x1ad70:    c9                              	leave 
0x1ad71:    c3                              	ret 
; section: .text._ZN17CScriptCompressor11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN17CScriptCompressor11UnserializeI11CDataStreamEEvRT_ii at 0x1ad72 -- 0x1ae02
0x1ad72:    55                              	push ebp
0x1ad73:    89 e5                           	mov ebp, esp
0x1ad75:    53                              	push ebx
0x1ad76:    83 ec 54                        	sub esp, 0x54
0x1ad79:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ad7c:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x1ad7f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1ad82:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x1ad85:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1ad88:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x1ad8b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1ad8e:    89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x1ad91:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ad97:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1ad9a:    31 c0                           	xor eax, eax
0x1ad9c:    c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x1ada3:    8d 45 e8                        	lea eax, [ebp - 0x18]
0x1ada6:    89 04 24                        	mov dword ptr [esp], eax
0x1ada9:    e8 3f 94 00 00                  	call 0x241ed <unknown_241ed>
0x1adae:    8d 55 ec                        	lea edx, [ebp - 0x14]
0x1adb1:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1adb5:    89 14 24                        	mov dword ptr [esp], edx
0x1adb8:    e8 5d 94 00 00                  	call 0x2421a <unknown_2421a>
0x1adbd:    83 ec 04                        	sub esp, 4
0x1adc0:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x1adc3:    89 04 24                        	mov dword ptr [esp], eax
0x1adc6:    e8 96 94 00 00                  	call 0x24261 <unknown_24261>
0x1adcb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1adcf:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1add2:    89 04 24                        	mov dword ptr [esp], eax
0x1add5:    e8 8a b1 01 00                  	call 0x35f64 <unknown_35f64>
0x1adda:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x1addd:    83 f8 05                        	cmp eax, 5
0x1ade0:    0f 87 ce 00 00 00               	ja 0x1aeb4 <function_1aeb4>
0x1ade6:    8d 45 f3                        	lea eax, [ebp - 0xd]
0x1ade9:    89 04 24                        	mov dword ptr [esp], eax
0x1adec:    e8 49 83 00 00                  	call 0x2313a <unknown_2313a>
0x1adf1:    c6 45 f2 00                     	mov byte ptr [ebp - 0xe], 0
0x1adf5:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x1adf8:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1adfc:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1adff:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1ae02 -- 0x1ae03
0x1ae02:    e8                                                 |.               |
; dynamically linked function: _ZNK17CScriptCompressor14GetSpecialSizeEj at 0x1ae03 -- 0x1ae04
; data inside code section at 0x1ae04 -- 0x1ae1e
0x1ae04:    ff ff ff 8d 55 f3 89 54  24 0c 8d 55 f2 89 54 24   |....U..T$..U..T$|
0x1ae14:    08 89 44 24 04 8d 45 cc  89 04                     |..D$..E...      |
; function: function_1ae1e at 0x1ae1e -- 0x1ae9f
0x1ae1e:    24 e8                           	and al, 0xe8
0x1ae20:    82 83 00 00 8d 45 f3            	add byte ptr [ebx + 0x458d0000], 0xf3
0x1ae27:    89 04 24                        	mov dword ptr [esp], eax
0x1ae2a:    e8 41 83 00 00                  	call 0x23170 <unknown_23170>
0x1ae2f:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x1ae32:    89 04 24                        	mov dword ptr [esp], eax
0x1ae35:    e8 e2 77 00 00                  	call 0x2261c <unknown_2261c>
0x1ae3a:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1ae3e:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x1ae41:    89 04 24                        	mov dword ptr [esp], eax
0x1ae44:    e8 39 8d 00 00                  	call 0x23b82 <unknown_23b82>
0x1ae49:    89 c3                           	mov ebx, eax
0x1ae4b:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x1ae53:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x1ae56:    89 04 24                        	mov dword ptr [esp], eax
0x1ae59:    e8 24 8d 00 00                  	call 0x23b82 <unknown_23b82>
0x1ae5e:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x1ae62:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1ae66:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x1ae69:    89 04 24                        	mov dword ptr [esp], eax
0x1ae6c:    e8 95 43 00 00                  	call 0x1f206 <unknown_1f206>
0x1ae71:    8d 45 d8                        	lea eax, [ebp - 0x28]
0x1ae74:    89 04 24                        	mov dword ptr [esp], eax
0x1ae77:    e8 d9 8c 00 00                  	call 0x23b55 <unknown_23b55>
0x1ae7c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1ae80:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1ae83:    89 04 24                        	mov dword ptr [esp], eax
0x1ae86:    e8 33 b1 01 00                  	call 0x35fbe <unknown_35fbe>
0x1ae8b:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x1ae8e:    8d 55 cc                        	lea edx, [ebp - 0x34]
0x1ae91:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1ae95:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1ae99:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1ae9c:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1ae9f -- 0x1aea0
0x1ae9f:    e8                                                 |.               |
; dynamically linked function: _ZN17CScriptCompressor10DecompressEjRKSt6vectorIhSaIhEE at 0x1aea0 -- 0x1aea1
; data inside code section at 0x1aea1 -- 0x1aea4
0x1aea1:    ff ff ff                                           |...             |
; function: function_1aea4 at 0x1aea4 -- 0x1aeb4
0x1aea4:    8d 45 cc                        	lea eax, [ebp - 0x34]
0x1aea7:    89 04 24                        	mov dword ptr [esp], eax
0x1aeaa:    e8 11 82 00 00                  	call 0x230c0 <unknown_230c0>
0x1aeaf:    e9 b7 00 00 00                  	jmp 0x1af6b <function_1af6b>
; function: function_1aeb4 at 0x1aeb4 -- 0x1af3d
0x1aeb4:    8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x1aeb7:    83 e8 06                        	sub eax, 6
0x1aeba:    89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x1aebd:    8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x1aec0:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1aec3:    8b 00                           	mov eax, dword ptr [eax]
0x1aec5:    c7 44 24 08 00 00 00 00         	mov dword ptr [esp + 8], 0
0x1aecd:    89 54 24 04                     	mov dword ptr [esp + 4], edx
0x1aed1:    89 04 24                        	mov dword ptr [esp], eax
0x1aed4:    e8 1b 9e 00 00                  	call 0x24cf4 <unknown_24cf4>
0x1aed9:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1aedc:    8b 00                           	mov eax, dword ptr [eax]
0x1aede:    89 04 24                        	mov dword ptr [esp], eax
0x1aee1:    e8 36 77 00 00                  	call 0x2261c <unknown_2261c>
0x1aee6:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1aee9:    8b 12                           	mov edx, dword ptr [edx]
0x1aeeb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1aeef:    89 14 24                        	mov dword ptr [esp], edx
0x1aef2:    e8 8b 8c 00 00                  	call 0x23b82 <unknown_23b82>
0x1aef7:    89 c3                           	mov ebx, eax
0x1aef9:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1aefc:    8b 00                           	mov eax, dword ptr [eax]
0x1aefe:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x1af06:    89 04 24                        	mov dword ptr [esp], eax
0x1af09:    e8 74 8c 00 00                  	call 0x23b82 <unknown_23b82>
0x1af0e:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x1af12:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1af16:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x1af19:    89 04 24                        	mov dword ptr [esp], eax
0x1af1c:    e8 e5 42 00 00                  	call 0x1f206 <unknown_1f206>
0x1af21:    8d 45 e0                        	lea eax, [ebp - 0x20]
0x1af24:    89 04 24                        	mov dword ptr [esp], eax
0x1af27:    e8 29 8c 00 00                  	call 0x23b55 <unknown_23b55>
0x1af2c:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1af30:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1af33:    89 04 24                        	mov dword ptr [esp], eax
0x1af36:    e8 83 b0 01 00                  	call 0x35fbe <unknown_35fbe>
0x1af3b:    eb 2e                           	jmp 0x1af6b <function_1af6b>
; data inside code section at 0x1af3d -- 0x1af3e
0x1af3d:    89                                                 |.               |
; function: function_1af3e at 0x1af3e -- 0x1af3f
0x1af3e:    c3                              	ret 
; data inside code section at 0x1af3f -- 0x1af50
0x1af3f:    8d 45 f3 89 04 24 e8 26  82 00 00 89 d8 89 04 24   |.E...$.&.......$|
0x1af4f:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1af50 -- 0x1af51
; data inside code section at 0x1af51 -- 0x1af55
0x1af51:    ff ff ff 89                                        |....            |
; function: function_1af55 at 0x1af55 -- 0x1af56
0x1af55:    c3                              	ret 
; data inside code section at 0x1af56 -- 0x1af67
0x1af56:    8d 45 cc 89 04 24 e8 5f  81 00 00 89 d8 89 04 24   |.E...$._.......$|
0x1af66:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1af67 -- 0x1af68
; data inside code section at 0x1af68 -- 0x1af6b
0x1af68:    ff ff ff                                           |...             |
; function: function_1af6b at 0x1af6b -- 0x1af77
0x1af6b:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1af6e:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1af75:    74 05                           	je 0x1af7c <function_1af7c>
; data inside code section at 0x1af77 -- 0x1af78
0x1af77:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1af78 -- 0x1af79
; data inside code section at 0x1af79 -- 0x1af7c
0x1af79:    ff ff ff                                           |...             |
; function: function_1af7c at 0x1af7c -- 0x1af81
0x1af7c:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1af7f:    c9                              	leave 
0x1af80:    c3                              	ret 
; section: .text._ZNK17CScriptCompressor9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK17CScriptCompressor9SerializeI11CDataStreamEEvRT_ii at 0x1af82 -- 0x1afba
0x1af82:    55                              	push ebp
0x1af83:    89 e5                           	mov ebp, esp
0x1af85:    53                              	push ebx
0x1af86:    83 ec 54                        	sub esp, 0x54
0x1af89:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1af8c:    89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x1af8f:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1af92:    89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x1af95:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1af98:    89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x1af9b:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1af9e:    89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x1afa1:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1afa7:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1afaa:    31 c0                           	xor eax, eax
0x1afac:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x1afaf:    89 04 24                        	mov dword ptr [esp], eax
0x1afb2:    e8 e3 82 00 00                  	call 0x2329a <unknown_2329a>
0x1afb7:    8d 45 d0                        	lea eax, [ebp - 0x30]
; data inside code section at 0x1afba -- 0x1afbc
0x1afba:    89 44                                              |.D              |
; function: function_1afbc at 0x1afbc -- 0x1afc4
0x1afbc:    24 04                           	and al, 4
0x1afbe:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1afc1:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1afc4 -- 0x1afc5
0x1afc4:    e8                                                 |.               |
; dynamically linked function: _ZNK17CScriptCompressor8CompressERSt6vectorIhSaIhEE at 0x1afc5 -- 0x1afc6
; data inside code section at 0x1afc6 -- 0x1afc8
0x1afc6:    ff ff                                              |..              |
; function: function_1afc8 at 0x1afc8 -- 0x1b026
0x1afc8:    ff 84 c0 74 59 8d 45            	inc dword ptr [eax + eax*8 + 0x458d5974]
0x1afcf:    d0 89 04 24 e8 54               	ror byte ptr [ecx + 0x54e82404], 1
0x1afd5:    78 00                           	js 0x1afd7 <function_1afc8+0xf>
0x1afd7:    00 89 44 24 04 8d               	add byte ptr [ecx - 0x72fbdbbc], cl
0x1afdd:    45                              	inc ebp
0x1afde:    d0 89 04 24 e8 ab               	ror byte ptr [ecx - 0x5417dbfc], 1
0x1afe4:    8d 00                           	lea eax, [eax]
0x1afe6:    00 89 c3 c7 44 24               	add byte ptr [ecx + 0x2444c7c3], cl
0x1afec:    04 00                           	add al, 0
0x1afee:    00 00                           	add byte ptr [eax], al
0x1aff0:    00 8d 45 d0 89 04               	add byte ptr [ebp + 0x489d045], cl
0x1aff6:    24 e8                           	and al, 0xe8
0x1aff8:    96                              	xchg eax, esi
0x1aff9:    8d 00                           	lea eax, [eax]
0x1affb:    00 89 5c 24 08 89               	add byte ptr [ecx - 0x76f7dba4], cl
0x1b001:    44                              	inc esp
0x1b002:    24 04                           	and al, 4
0x1b004:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x1b007:    89 04 24                        	mov dword ptr [esp], eax
0x1b00a:    e8 07 44 00 00                  	call 0x1f416 <unknown_1f416>
0x1b00f:    8d 45 dc                        	lea eax, [ebp - 0x24]
0x1b012:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b016:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1b019:    89 04 24                        	mov dword ptr [esp], eax
0x1b01c:    e8 07 b2 01 00                  	call 0x36228 <unknown_36228>
0x1b021:    e9 a4 00 00 00                  	jmp 0x1b0ca <function_1b0ca>
; function: function_1b026 at 0x1b026 -- 0x1b0ca
0x1b026:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1b029:    8b 00                           	mov eax, dword ptr [eax]
0x1b02b:    89 04 24                        	mov dword ptr [esp], eax
0x1b02e:    e8 f9 77 00 00                  	call 0x2282c <unknown_2282c>
0x1b033:    83 c0 06                        	add eax, 6
0x1b036:    89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x1b039:    8d 45 ec                        	lea eax, [ebp - 0x14]
0x1b03c:    89 04 24                        	mov dword ptr [esp], eax
0x1b03f:    e8 b9 93 00 00                  	call 0x243fd <unknown_243fd>
0x1b044:    8d 55 f0                        	lea edx, [ebp - 0x10]
0x1b047:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b04b:    89 14 24                        	mov dword ptr [esp], edx
0x1b04e:    e8 d7 93 00 00                  	call 0x2442a <unknown_2442a>
0x1b053:    83 ec 04                        	sub esp, 4
0x1b056:    8d 45 f0                        	lea eax, [ebp - 0x10]
0x1b059:    89 04 24                        	mov dword ptr [esp], eax
0x1b05c:    e8 10 94 00 00                  	call 0x24471 <unknown_24471>
0x1b061:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b065:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1b068:    89 04 24                        	mov dword ptr [esp], eax
0x1b06b:    e8 12 b2 01 00                  	call 0x36282 <unknown_36282>
0x1b070:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1b073:    8b 00                           	mov eax, dword ptr [eax]
0x1b075:    89 04 24                        	mov dword ptr [esp], eax
0x1b078:    e8 af 77 00 00                  	call 0x2282c <unknown_2282c>
0x1b07d:    8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x1b080:    8b 12                           	mov edx, dword ptr [edx]
0x1b082:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b086:    89 14 24                        	mov dword ptr [esp], edx
0x1b089:    e8 04 8d 00 00                  	call 0x23d92 <unknown_23d92>
0x1b08e:    89 c3                           	mov ebx, eax
0x1b090:    8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x1b093:    8b 00                           	mov eax, dword ptr [eax]
0x1b095:    c7 44 24 04 00 00 00 00         	mov dword ptr [esp + 4], 0
0x1b09d:    89 04 24                        	mov dword ptr [esp], eax
0x1b0a0:    e8 ed 8c 00 00                  	call 0x23d92 <unknown_23d92>
0x1b0a5:    89 5c 24 08                     	mov dword ptr [esp + 8], ebx
0x1b0a9:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b0ad:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x1b0b0:    89 04 24                        	mov dword ptr [esp], eax
0x1b0b3:    e8 5e 43 00 00                  	call 0x1f416 <unknown_1f416>
0x1b0b8:    8d 45 e4                        	lea eax, [ebp - 0x1c]
0x1b0bb:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b0bf:    8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x1b0c2:    89 04 24                        	mov dword ptr [esp], eax
0x1b0c5:    e8 5e b1 01 00                  	call 0x36228 <unknown_36228>
; function: function_1b0ca at 0x1b0ca -- 0x1b0e3
0x1b0ca:    8d 45 d0                        	lea eax, [ebp - 0x30]
0x1b0cd:    89 04 24                        	mov dword ptr [esp], eax
0x1b0d0:    e8 fb 81 00 00                  	call 0x232d0 <unknown_232d0>
0x1b0d5:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b0d8:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b0df:    74 1e                           	je 0x1b0ff <function_1b0ff>
0x1b0e1:    eb 17                           	jmp 0x1b0fa <function_1b0fa>
; data inside code section at 0x1b0e3 -- 0x1b0e4
0x1b0e3:    89                                                 |.               |
; function: function_1b0e4 at 0x1b0e4 -- 0x1b0e5
0x1b0e4:    c3                              	ret 
; data inside code section at 0x1b0e5 -- 0x1b0f6
0x1b0e5:    8d 45 d0 89 04 24 e8 e0  81 00 00 89 d8 89 04 24   |.E...$.........$|
0x1b0f5:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1b0f6 -- 0x1b0f7
; data inside code section at 0x1b0f7 -- 0x1b0fa
0x1b0f7:    ff ff ff                                           |...             |
; function: function_1b0fa at 0x1b0fa -- 0x1b0fb
; dynamically linked function: __stack_chk_fail at 0x1b0fb -- 0x1b0fc
; data inside code section at 0x1b0fc -- 0x1b0ff
0x1b0fc:    ff ff ff                                           |...             |
; function: function_1b0ff at 0x1b0ff -- 0x1b104
0x1b0ff:    8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x1b102:    c9                              	leave 
0x1b103:    c3                              	ret 
; section: .text._Z11WriteVarIntI11CDataStreamyEvRT_T0_
; function: _Z11WriteVarIntI11CDataStreamyEvRT_T0_ at 0x1b104 -- 0x1b184
0x1b104:    55                              	push ebp
0x1b105:    89 e5                           	mov ebp, esp
0x1b107:    83 ec 48                        	sub esp, 0x48
0x1b10a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b10d:    89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x1b110:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b113:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x1b116:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1b119:    89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x1b11c:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b122:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b125:    31 c0                           	xor eax, eax
0x1b127:    c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x1b12e:    8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x1b131:    89 c2                           	mov edx, eax
0x1b133:    83 e2 7f                        	and edx, 0x7f
0x1b136:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x1b13a:    74 07                           	je 0x1b143 <_Z11WriteVarIntI11CDataStreamyEvRT_T0_+0x3f>
0x1b13c:    b8 80 ff ff ff                  	mov eax, 0xffffff80
0x1b141:    eb 05                           	jmp 0x1b148 <_Z11WriteVarIntI11CDataStreamyEvRT_T0_+0x44>
0x1b143:    b8 00 00 00 00                  	mov eax, 0
0x1b148:    09 c2                           	or edx, eax
0x1b14a:    8d 45 ea                        	lea eax, [ebp - 0x16]
0x1b14d:    03 45 e4                        	add eax, dword ptr [ebp - 0x1c]
0x1b150:    88 10                           	mov byte ptr [eax], dl
0x1b152:    83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x1b156:    77 0c                           	ja 0x1b164 <_Z11WriteVarIntI11CDataStreamyEvRT_T0_+0x60>
0x1b158:    83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x1b15c:    72 25                           	jb 0x1b183 <_Z11WriteVarIntI11CDataStreamyEvRT_T0_+0x7f>
0x1b15e:    83 7d c8 7f                     	cmp dword ptr [ebp - 0x38], 0x7f
0x1b162:    76 1f                           	jbe 0x1b183 <_Z11WriteVarIntI11CDataStreamyEvRT_T0_+0x7f>
0x1b164:    8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x1b167:    8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x1b16a:    0f ac d0 07                     	shrd eax, edx, 7
0x1b16e:    c1 ea 07                        	shr edx, 7
0x1b171:    83 c0 ff                        	add eax, -1
0x1b174:    83 d2 ff                        	adc edx, -1
0x1b177:    89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x1b17a:    89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x1b17d:    83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x1b181:    eb ab                           	jmp 0x1b12e <_Z11WriteVarIntI11CDataStreamyEvRT_T0_+0x2a>
0x1b183:    90                              	nop 
; function: function_1b184 at 0x1b184 -- 0x1b1bc
0x1b184:    8d 45 ea                        	lea eax, [ebp - 0x16]
0x1b187:    03 45 e4                        	add eax, dword ptr [ebp - 0x1c]
0x1b18a:    c7 44 24 08 01 00 00 00         	mov dword ptr [esp + 8], 1
0x1b192:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b196:    8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x1b199:    89 04 24                        	mov dword ptr [esp], eax
0x1b19c:    e8 d1 4a 00 00                  	call 0x1fc72 <unknown_1fc72>
0x1b1a1:    83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x1b1a5:    0f 95 c0                        	setne al
0x1b1a8:    83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x1b1ac:    84 c0                           	test al, al
0x1b1ae:    75 d4                           	jne 0x1b184 <function_1b184>
0x1b1b0:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b1b3:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b1ba:    74 05                           	je 0x1b1c1 <function_1b1c1>
; data inside code section at 0x1b1bc -- 0x1b1bd
0x1b1bc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b1bd -- 0x1b1be
; data inside code section at 0x1b1be -- 0x1b1c1
0x1b1be:    ff ff ff                                           |...             |
; function: function_1b1c1 at 0x1b1c1 -- 0x1b1c3
0x1b1c1:    c9                              	leave 
0x1b1c2:    c3                              	ret 
; section: .text._ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv
; function: _ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv at 0x1b1c4 -- 0x1b1ea
0x1b1c4:    55                              	push ebp
0x1b1c5:    89 e5                           	mov ebp, esp
0x1b1c7:    83 ec 28                        	sub esp, 0x28
0x1b1ca:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b1cd:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b1d0:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b1d6:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b1d9:    31 c0                           	xor eax, eax
0x1b1db:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b1de:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1b1e1:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1b1e8:    74 05                           	je 0x1b1ef <function_1b1ef>
; data inside code section at 0x1b1ea -- 0x1b1eb
0x1b1ea:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b1eb -- 0x1b1ec
; data inside code section at 0x1b1ec -- 0x1b1ef
0x1b1ec:    ff ff ff                                           |...             |
; function: function_1b1ef at 0x1b1ef -- 0x1b1f1
0x1b1ef:    c9                              	leave 
0x1b1f0:    c3                              	ret 
; section: .text._ZN11CDataStreamrsI7CVarIntIjEEERS_RT_
; function: _ZN11CDataStreamrsI7CVarIntIjEEERS_RT_ at 0x1b1f2 -- 0x1b244
0x1b1f2:    55                              	push ebp
0x1b1f3:    89 e5                           	mov ebp, esp
0x1b1f5:    83 ec 38                        	sub esp, 0x38
0x1b1f8:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b1fb:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b1fe:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b201:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b204:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b20a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b20d:    31 c0                           	xor eax, eax
0x1b20f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b212:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x1b215:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b218:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x1b21b:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1b21f:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1b223:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1b226:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b22a:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b22d:    89 04 24                        	mov dword ptr [esp], eax
0x1b230:    e8 1b 5a 01 00                  	call 0x30c50 <unknown_30c50>
0x1b235:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b238:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1b23b:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1b242:    74 05                           	je 0x1b249 <function_1b249>
; data inside code section at 0x1b244 -- 0x1b245
0x1b244:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b245 -- 0x1b246
; data inside code section at 0x1b246 -- 0x1b249
0x1b246:    ff ff ff                                           |...             |
; function: function_1b249 at 0x1b249 -- 0x1b24b
0x1b249:    c9                              	leave 
0x1b24a:    c3                              	ret 
; section: .text._ZN11CDataStreamrsI9CFlatDataEERS_RT_
; function: _ZN11CDataStreamrsI9CFlatDataEERS_RT_ at 0x1b24c -- 0x1b272
0x1b24c:    55                              	push ebp
0x1b24d:    89 e5                           	mov ebp, esp
0x1b24f:    83 ec 38                        	sub esp, 0x38
0x1b252:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b255:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b258:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b25b:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b25e:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b264:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b267:    31 c0                           	xor eax, eax
0x1b269:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b26c:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x1b26f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x1b272 -- 0x1b274
0x1b272:    8b 40                                              |.@              |
; function: function_1b274 at 0x1b274 -- 0x1b29e
0x1b274:    14 89                           	adc al, 0x89
0x1b276:    54                              	push esp
0x1b277:    24 0c                           	and al, 0xc
0x1b279:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1b27d:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1b280:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b284:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b287:    89 04 24                        	mov dword ptr [esp], eax
0x1b28a:    e8 16 b3 01 00                  	call 0x365a5 <unknown_365a5>
0x1b28f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b292:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1b295:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1b29c:    74 05                           	je 0x1b2a3 <function_1b2a3>
; data inside code section at 0x1b29e -- 0x1b29f
0x1b29e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b29f -- 0x1b2a0
; data inside code section at 0x1b2a0 -- 0x1b2a3
0x1b2a0:    ff ff ff                                           |...             |
; function: function_1b2a3 at 0x1b2a3 -- 0x1b2a5
0x1b2a3:    c9                              	leave 
0x1b2a4:    c3                              	ret 
; section: .text._ZN11CDataStreamlsI9CFlatDataEERS_RKT_
; function: _ZN11CDataStreamlsI9CFlatDataEERS_RKT_ at 0x1b2a6 -- 0x1b2f8
0x1b2a6:    55                              	push ebp
0x1b2a7:    89 e5                           	mov ebp, esp
0x1b2a9:    83 ec 38                        	sub esp, 0x38
0x1b2ac:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b2af:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b2b2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b2b5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b2b8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b2be:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b2c1:    31 c0                           	xor eax, eax
0x1b2c3:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b2c6:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x1b2c9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b2cc:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x1b2cf:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1b2d3:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1b2d7:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1b2da:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b2de:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b2e1:    89 04 24                        	mov dword ptr [esp], eax
0x1b2e4:    e8 cf 6e 01 00                  	call 0x321b8 <unknown_321b8>
0x1b2e9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b2ec:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1b2ef:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1b2f6:    74 05                           	je 0x1b2fd <function_1b2fd>
; data inside code section at 0x1b2f8 -- 0x1b2f9
0x1b2f8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b2f9 -- 0x1b2fa
; data inside code section at 0x1b2fa -- 0x1b2fd
0x1b2fa:    ff ff ff                                           |...             |
; function: function_1b2fd at 0x1b2fd -- 0x1b2ff
0x1b2fd:    c9                              	leave 
0x1b2fe:    c3                              	ret 
; section: .text._ZN11CDataStreamlsI7CVarIntIjEEERS_RKT_
; function: _ZN11CDataStreamlsI7CVarIntIjEEERS_RKT_ at 0x1b300 -- 0x1b352
0x1b300:    55                              	push ebp
0x1b301:    89 e5                           	mov ebp, esp
0x1b303:    83 ec 38                        	sub esp, 0x38
0x1b306:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b309:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b30c:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b30f:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b312:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b318:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b31b:    31 c0                           	xor eax, eax
0x1b31d:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b320:    8b 50 18                        	mov edx, dword ptr [eax + 0x18]
0x1b323:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b326:    8b 40 14                        	mov eax, dword ptr [eax + 0x14]
0x1b329:    89 54 24 0c                     	mov dword ptr [esp + 0xc], edx
0x1b32d:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1b331:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1b334:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b338:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b33b:    89 04 24                        	mov dword ptr [esp], eax
0x1b33e:    e8 18 74 01 00                  	call 0x3275b <unknown_3275b>
0x1b343:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b346:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1b349:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1b350:    74 05                           	je 0x1b357 <function_1b357>
; data inside code section at 0x1b352 -- 0x1b353
0x1b352:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b353 -- 0x1b354
; data inside code section at 0x1b354 -- 0x1b357
0x1b354:    ff ff ff                                           |...             |
; function: function_1b357 at 0x1b357 -- 0x1b359
0x1b357:    c9                              	leave 
0x1b358:    c3                              	ret 
; section: .text._Z11UnserializeI11CDataStream9CFlatDataEvRT_RT0_li
; function: _Z11UnserializeI11CDataStream9CFlatDataEvRT_RT0_li at 0x1b359 -- 0x1b36e
0x1b359:    55                              	push ebp
0x1b35a:    89 e5                           	mov ebp, esp
0x1b35c:    83 ec 38                        	sub esp, 0x38
0x1b35f:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b362:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b365:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b368:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b36b:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
; function: function_1b36e at 0x1b36e -- 0x1b3ae
0x1b36e:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1b371:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1b374:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1b377:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b37d:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b380:    31 c0                           	xor eax, eax
0x1b382:    8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x1b385:    89 44 24 0c                     	mov dword ptr [esp + 0xc], eax
0x1b389:    8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x1b38c:    89 44 24 08                     	mov dword ptr [esp + 8], eax
0x1b390:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b393:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b397:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1b39a:    89 04 24                        	mov dword ptr [esp], eax
0x1b39d:    e8 6d b3 01 00                  	call 0x3670f <unknown_3670f>
0x1b3a2:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b3a5:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b3ac:    74 05                           	je 0x1b3b3 <function_1b3b3>
; data inside code section at 0x1b3ae -- 0x1b3af
0x1b3ae:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b3af -- 0x1b3b0
; data inside code section at 0x1b3b0 -- 0x1b3b3
0x1b3b0:    ff ff ff                                           |...             |
; function: function_1b3b3 at 0x1b3b3 -- 0x1b3b5
0x1b3b3:    c9                              	leave 
0x1b3b4:    c3                              	ret 
; section: .text._ZN9CFlatData11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN9CFlatData11UnserializeI11CDataStreamEEvRT_ii at 0x1b3b6 -- 0x1b401
0x1b3b6:    55                              	push ebp
0x1b3b7:    89 e5                           	mov ebp, esp
0x1b3b9:    83 ec 38                        	sub esp, 0x38
0x1b3bc:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b3bf:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b3c2:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b3c5:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b3c8:    8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x1b3cb:    89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x1b3ce:    8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x1b3d1:    89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x1b3d4:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b3da:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b3dd:    31 c0                           	xor eax, eax
0x1b3df:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b3e2:    8b 40 04                        	mov eax, dword ptr [eax + 4]
0x1b3e5:    89 c2                           	mov edx, eax
0x1b3e7:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b3ea:    8b 00                           	mov eax, dword ptr [eax]
0x1b3ec:    29 c2                           	sub edx, eax
0x1b3ee:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b3f1:    8b 00                           	mov eax, dword ptr [eax]
0x1b3f3:    89 54 24 08                     	mov dword ptr [esp + 8], edx
0x1b3f7:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1b3fb:    8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x1b3fe:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1b401 -- 0x1b404
0x1b401:    e8 b6 49                                           |..I             |
; function: function_1b404 at 0x1b404 -- 0x1b412
0x1b404:    00 00                           	add byte ptr [eax], al
0x1b406:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b409:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b410:    74 05                           	je 0x1b417 <function_1b417>
; data inside code section at 0x1b412 -- 0x1b413
0x1b412:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b413 -- 0x1b414
; data inside code section at 0x1b414 -- 0x1b417
0x1b414:    ff ff ff                                           |...             |
; function: function_1b417 at 0x1b417 -- 0x1b419
0x1b417:    c9                              	leave 
0x1b418:    c3                              	ret 
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0x1b438 -- 0x1b452
0x1b438:    55                              	push ebp
0x1b439:    89 e5                           	mov ebp, esp
0x1b43b:    83 ec 38                        	sub esp, 0x38
0x1b43e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b441:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b444:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b44a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b44d:    31 c0                           	xor eax, eax
0x1b44f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
; data inside code section at 0x1b452 -- 0x1b454
0x1b452:    c7 00                                              |..              |
; function: function_1b454 at 0x1b454 -- 0x1b475
0x1b454:    24 b4                           	and al, 0xb4
0x1b456:    01 00                           	add dword ptr [eax], eax
0x1b458:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b45b:    89 04 24                        	mov dword ptr [esp], eax
0x1b45e:    e8 4f 3a 00 00                  	call 0x1eeb2 <unknown_1eeb2>
0x1b463:    b8 00 00 00 00                  	mov eax, 0
0x1b468:    83 e0 01                        	and eax, 1
0x1b46b:    84 c0                           	test al, al
0x1b46d:    74 0b                           	je 0x1b47a <function_1b47a>
0x1b46f:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b472:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1b475 -- 0x1b476
0x1b475:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1b476 -- 0x1b477
; data inside code section at 0x1b477 -- 0x1b47a
0x1b477:    ff ff ff                                           |...             |
; function: function_1b47a at 0x1b47a -- 0x1b486
0x1b47a:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b47d:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b484:    74 05                           	je 0x1b48b <function_1b48b>
; data inside code section at 0x1b486 -- 0x1b487
0x1b486:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b487 -- 0x1b488
; data inside code section at 0x1b488 -- 0x1b48b
0x1b488:    ff ff ff                                           |...             |
; function: function_1b48b at 0x1b48b -- 0x1b48d
0x1b48b:    c9                              	leave 
0x1b48c:    c3                              	ret 
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0x1b48e -- 0x1b4b6
0x1b48e:    55                              	push ebp
0x1b48f:    89 e5                           	mov ebp, esp
0x1b491:    83 ec 38                        	sub esp, 0x38
0x1b494:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b497:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b49a:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b4a0:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b4a3:    31 c0                           	xor eax, eax
0x1b4a5:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b4a8:    89 04 24                        	mov dword ptr [esp], eax
0x1b4ab:    e8 16 b4 01 00                  	call 0x368c6 <unknown_368c6>
0x1b4b0:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b4b3:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1b4b6 -- 0x1b4b7
0x1b4b6:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1b4b7 -- 0x1b4b8
; data inside code section at 0x1b4b8 -- 0x1b4c8
0x1b4b8:    ff ff ff 8b 45 f4 65 33  05 14 00 00 00 74 05 e8   |....E.e3.....t..|
; dynamically linked function: __stack_chk_fail at 0x1b4c8 -- 0x1b4c9
; data inside code section at 0x1b4c9 -- 0x1b4cb
0x1b4c9:    ff ff                                              |..              |
; function: function_1b4cb at 0x1b4cb -- 0x1b4ce
0x1b4cb:    ff c9                           	dec ecx
0x1b4cd:    c3                              	ret 
; section: .text._ZN12CCoinsViewDBD2Ev
; function: _ZN12CCoinsViewDBD1Ev at 0x1b510 -- 0x1b537
0x1b510:    55                              	push ebp
0x1b511:    89 e5                           	mov ebp, esp
0x1b513:    53                              	push ebx
0x1b514:    83 ec 34                        	sub esp, 0x34
0x1b517:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b51a:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b51d:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b523:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b526:    31 c0                           	xor eax, eax
0x1b528:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b52b:    c7 00 ec b4 01 00               	mov dword ptr [eax], 0x1b4ec
0x1b531:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b534:    83 c0 04                        	add eax, 4
; data inside code section at 0x1b537 -- 0x1b538
0x1b537:    89                                                 |.               |
; function: function_1b538 at 0x1b538 -- 0x1b53a
0x1b538:    04 24                           	add al, 0x24
; data inside code section at 0x1b53a -- 0x1b53b
0x1b53a:    e8                                                 |.               |
; dynamically linked function: _ZN8CLevelDBD1Ev at 0x1b53b -- 0x1b53c
; data inside code section at 0x1b53c -- 0x1b55d
0x1b53c:    ff ff ff 8b 45 e4 89 04  24 e8 2e 74 00 00 b8 00   |....E...$..t....|
0x1b54c:    00 00 00 83 e0 01 84 c0  74 24 8b 45 e4 89 04 24   |........t$.E...$|
0x1b55c:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1b55d -- 0x1b55e
; data inside code section at 0x1b55e -- 0x1b561
0x1b55e:    ff ff ff                                           |...             |
; function: function_1b561 at 0x1b561 -- 0x1b563
0x1b561:    eb 17                           	jmp 0x1b57a <function_1b57a>
; data inside code section at 0x1b563 -- 0x1b564
0x1b563:    89                                                 |.               |
; function: function_1b564 at 0x1b564 -- 0x1b565
0x1b564:    c3                              	ret 
; data inside code section at 0x1b565 -- 0x1b576
0x1b565:    8b 45 e4 89 04 24 e8 08  74 00 00 89 d8 89 04 24   |.E...$..t......$|
0x1b575:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1b576 -- 0x1b577
; data inside code section at 0x1b577 -- 0x1b57a
0x1b577:    ff ff ff                                           |...             |
; function: function_1b57a at 0x1b57a -- 0x1b586
0x1b57a:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b57d:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b584:    74 05                           	je 0x1b58b <function_1b58b>
; data inside code section at 0x1b586 -- 0x1b587
0x1b586:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b587 -- 0x1b588
; data inside code section at 0x1b588 -- 0x1b58b
0x1b588:    ff ff ff                                           |...             |
; function: function_1b58b at 0x1b58b -- 0x1b591
0x1b58b:    83 c4 34                        	add esp, 0x34
0x1b58e:    5b                              	pop ebx
0x1b58f:    5d                              	pop ebp
0x1b590:    c3                              	ret 
; section: .text._ZN12CCoinsViewDBD0Ev
; function: _ZN12CCoinsViewDBD0Ev at 0x1b592 -- 0x1b59b
0x1b592:    55                              	push ebp
0x1b593:    89 e5                           	mov ebp, esp
0x1b595:    83 ec 38                        	sub esp, 0x38
0x1b598:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
; data inside code section at 0x1b59b -- 0x1b59c
0x1b59b:    89                                                 |.               |
; function: function_1b59c at 0x1b59c -- 0x1b59f
0x1b59c:    45                              	inc ebp
0x1b59d:    e4 65                           	in al, 0x65
; data inside code section at 0x1b59f -- 0x1b5a0
0x1b59f:    a1                                                 |.               |
; function: function_1b5a0 at 0x1b5a0 -- 0x1b5ba
0x1b5a0:    14 00                           	adc al, 0
0x1b5a2:    00 00                           	add byte ptr [eax], al
0x1b5a4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b5a7:    31 c0                           	xor eax, eax
0x1b5a9:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b5ac:    89 04 24                        	mov dword ptr [esp], eax
0x1b5af:    e8 ee b4 01 00                  	call 0x36aa2 <unknown_36aa2>
0x1b5b4:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b5b7:    89 04 24                        	mov dword ptr [esp], eax
; data inside code section at 0x1b5ba -- 0x1b5bb
0x1b5ba:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1b5bb -- 0x1b5bc
; data inside code section at 0x1b5bc -- 0x1b5be
0x1b5bc:    ff ff                                              |..              |
; function: function_1b5be at 0x1b5be -- 0x1b5cb
0x1b5be:    ff 8b 45 f4 65 33               	dec dword ptr [ebx + 0x3365f445]
0x1b5c4:    05 14 00 00 00                  	add eax, 0x14
0x1b5c9:    74 05                           	je 0x1b5d0 <function_1b5d0>
; data inside code section at 0x1b5cb -- 0x1b5cc
0x1b5cb:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b5cc -- 0x1b5cd
; data inside code section at 0x1b5cd -- 0x1b5d0
0x1b5cd:    ff ff ff                                           |...             |
; function: function_1b5d0 at 0x1b5d0 -- 0x1b5d2
0x1b5d0:    c9                              	leave 
0x1b5d1:    c3                              	ret 
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0x1b974 -- 0x1b9a5
0x1b974:    55                              	push ebp
0x1b975:    89 e5                           	mov ebp, esp
0x1b977:    83 ec 38                        	sub esp, 0x38
0x1b97a:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b97d:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b980:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b986:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b989:    31 c0                           	xor eax, eax
0x1b98b:    8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x1b98e:    8b 40 0c                        	mov eax, dword ptr [eax + 0xc]
0x1b991:    89 04 24                        	mov dword ptr [esp], eax
0x1b994:    e8 be 45 01 00                  	call 0x2ff57 <unknown_2ff57>
0x1b999:    8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x1b99c:    65 33 05 14 00 00 00            	xor eax, dword ptr gs:[0x14]
0x1b9a3:    74 05                           	je 0x1b9aa <function_1b9aa>
; data inside code section at 0x1b9a5 -- 0x1b9a6
0x1b9a5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b9a6 -- 0x1b9a7
; data inside code section at 0x1b9a7 -- 0x1b9a8
0x1b9a7:    ff                                                 |.               |
; function: function_1b9a8 at 0x1b9a8 -- 0x1b9a9
; data inside code section at 0x1b9a9 -- 0x1b9aa
0x1b9a9:    ff                                                 |.               |
; function: function_1b9aa at 0x1b9aa -- 0x1b9ac
0x1b9aa:    c9                              	leave 
0x1b9ab:    c3                              	ret 
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0x1b9ac -- 0x1b9da
0x1b9ac:    55                              	push ebp
0x1b9ad:    89 e5                           	mov ebp, esp
0x1b9af:    83 ec 28                        	sub esp, 0x28
0x1b9b2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b9b5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b9b8:    8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x1b9bb:    89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x1b9be:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b9c4:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1b9c7:    31 c0                           	xor eax, eax
0x1b9c9:    b8 00 00 00 00                  	mov eax, 0
0x1b9ce:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1b9d1:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1b9d8:    74 05                           	je 0x1b9df <function_1b9df>
; data inside code section at 0x1b9da -- 0x1b9db
0x1b9da:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b9db -- 0x1b9dc
; data inside code section at 0x1b9dc -- 0x1b9df
0x1b9dc:    ff ff ff                                           |...             |
; function: function_1b9df at 0x1b9df -- 0x1b9e1
0x1b9df:    c9                              	leave 
0x1b9e0:    c3                              	ret 
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x1b9e2 -- 0x1b9e9
0x1b9e2:    83 6c 24 04 18                  	sub dword ptr [esp + 4], 0x18
0x1b9e7:    eb 01                           	jmp 0x1b9ea <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0x1b9e9 -- 0x1b9ea
0x1b9e9:    90                                                 |.               |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x1b9ea -- 0x1ba0a
0x1b9ea:    55                              	push ebp
0x1b9eb:    89 e5                           	mov ebp, esp
0x1b9ed:    56                              	push esi
0x1b9ee:    53                              	push ebx
0x1b9ef:    83 ec 30                        	sub esp, 0x30
0x1b9f2:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1b9f5:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1b9f8:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1b9fe:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1ba01:    31 c0                           	xor eax, eax
0x1ba03:    c7 04 24 1c 00 00 00            	mov dword ptr [esp], 0x1c
; data inside code section at 0x1ba0a -- 0x1ba0b
0x1ba0a:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1ba0b -- 0x1ba0c
; function: function_1ba0c at 0x1ba0c -- 0x1ba0d
; data inside code section at 0x1ba0d -- 0x1ba0e
0x1ba0d:    ff                                                 |.               |
; function: function_1ba0e at 0x1ba0e -- 0x1ba3e
0x1ba0e:    ff 89 c3 8b 45 e4               	dec dword ptr [ecx - 0x1bba743d]
0x1ba14:    89 44 24 04                     	mov dword ptr [esp + 4], eax
0x1ba18:    89 1c 24                        	mov dword ptr [esp], ebx
0x1ba1b:    e8 c2 8a 00 00                  	call 0x244e2 <unknown_244e2>
0x1ba20:    89 d8                           	mov eax, ebx
0x1ba22:    85 c0                           	test eax, eax
0x1ba24:    74 05                           	je 0x1ba2b <function_1ba0e+0x1d>
0x1ba26:    83 c0 18                        	add eax, 0x18
0x1ba29:    eb 05                           	jmp 0x1ba30 <function_1ba0e+0x22>
0x1ba2b:    b8 00 00 00 00                  	mov eax, 0
0x1ba30:    8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x1ba33:    65 33 15 14 00 00 00            	xor edx, dword ptr gs:[0x14]
0x1ba3a:    74 1b                           	je 0x1ba57 <function_1ba57>
0x1ba3c:    eb 14                           	jmp 0x1ba52 <function_1ba52>
; data inside code section at 0x1ba3e -- 0x1ba44
0x1ba3e:    89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZdlPv at 0x1ba44 -- 0x1ba45
; data inside code section at 0x1ba45 -- 0x1ba4e
0x1ba45:    ff ff ff 89 f0 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x1ba4e -- 0x1ba4f
; data inside code section at 0x1ba4f -- 0x1ba52
0x1ba4f:    ff ff ff                                           |...             |
; function: function_1ba52 at 0x1ba52 -- 0x1ba53
; dynamically linked function: __stack_chk_fail at 0x1ba53 -- 0x1ba54
; data inside code section at 0x1ba54 -- 0x1ba57
0x1ba54:    ff ff ff                                           |...             |
; function: function_1ba57 at 0x1ba57 -- 0x1ba5e
0x1ba57:    83 c4 30                        	add esp, 0x30
0x1ba5a:    5b                              	pop ebx
0x1ba5b:    5e                              	pop esi
0x1ba5c:    5d                              	pop ebp
0x1ba5d:    c3                              	ret 
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x1ba5e -- 0x1ba65
0x1ba5e:    83 6c 24 04 18                  	sub dword ptr [esp + 4], 0x18
0x1ba63:    eb 01                           	jmp 0x1ba66 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0x1ba65 -- 0x1ba66
0x1ba65:    90                                                 |.               |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x1ba66 -- 0x1ba86
0x1ba66:    55                              	push ebp
0x1ba67:    89 e5                           	mov ebp, esp
0x1ba69:    56                              	push esi
0x1ba6a:    53                              	push ebx
0x1ba6b:    83 ec 30                        	sub esp, 0x30
0x1ba6e:    8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x1ba71:    89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x1ba74:    65 a1 14 00 00 00               	mov eax, dword ptr gs:[0x14]
0x1ba7a:    89 45 f4                        	mov dword ptr [ebp - 0xc], eax
0x1ba7d:    31 c0                           	xor eax, eax
0x1ba7f:    c7 04 24 1c 00 00 00            	mov dword ptr [esp], 0x1c
; data inside code section at 0x1ba86 -- 0x1ba87
0x1ba86:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1ba87 -- 0x1ba88
; data inside code section at 0x1ba88 -- 0x1ba8c
0x1ba88:    ff ff ff 89                                        |....            |
; function: function_1ba8c at 0x1ba8c -- 0x1ba8d
0x1ba8c:    c3                              	ret 
; data inside code section at 0x1ba8d -- 0x1ba96
0x1ba8d:    8b 45 e4 89 44 24 04 89  1c                        |.E..D$...       |
; function: function_1ba96 at 0x1ba96 -- 0x1ba9b
0x1ba96:    24 e8                           	and al, 0xe8
0x1ba98:    c2 8a 00                        	ret 0x8a
; data inside code section at 0x1ba9b -- 0x1bab1
0x1ba9b:    00 b8 64 df 00 00 89 44  24 08 c7 44 24 04 64 b8   |..d....D$..D$.d.|
0x1baab:    01 00 89 1c 24 e8                                  |....$.          |
; dynamically linked function: __cxa_throw at 0x1bab1 -- 0x1bab2
; data inside code section at 0x1bab2 -- 0x1babb
0x1bab2:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x1babb -- 0x1babc
; data inside code section at 0x1babc -- 0x1bac5
0x1babc:    ff ff ff 89 f0 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x1bac5 -- 0x1bac6
; data inside code section at 0x1bac6 -- 0x1bac9
0x1bac6:    ff ff ff                                           |...             |

;;
;; Data Segment
;;

; section: .gcc_except_table
0x2bac:     ff 00 0d 01 08 29 05 47  01 4f 0d 00 00 7f 00 00   |.....).G.O......|
0x2bbc:     00 ff ff 01 19 57 02 da  01 00 69 05 cb 01 00 74   |.....W....i....t|
0x2bcc:     3e da 01 00 b8 01 05 00  00 ec 01 05 00 00 ff ff   |>...............|
0x2bdc:     01 0a 56 05 8d 01 00 9f  01 05 00 00 ff ff 01 0a   |..V.............|
0x2bec:     36 3d 8f 01 00 a1 01 05  00 00 ff ff 01 0b 80 01   |6=..............|
0x2bfc:     05 c3 01 00 be 01 24 00  00 00 00 00 ff 00 11 01   |......$.........|
0x2c0c:     08 2b 05 54 03 6f 0d 00  00 7f 00 00 7d 00 00 00   |.+.T.o......}...|
0x2c1c:     00 00 00 00 ff 00 35 01  27 21 05 fb 01 01 46 45   |......5.'!....FE|
0x2c2c:     df 01 03 9e 01 05 ce 01  05 a9 01 05 df 01 03 b7   |................|
0x2c3c:     01 05 fb 01 01 f4 01 05  fb 01 01 83 02 0d 00 00   |................|
0x2c4c:     7f 00 01 00 00 7d 00 00  00 00 00 00 00 ff ff 01   |.....}..........|
0x2c5c:     11 31 05 00 00 43 14 73  00 5d 05 00 00 85 01 05   |.1...C.s.]......|
0x2c6c:     00 00 ff ff 01 16 54 05  ac 03 00 ef 01 a4 01 c3   |......T.........|
0x2c7c:     03 00 99 03 2a 00 00 d5  03 05 00 00 ff ff 01 1a   |....*...........|
0x2c8c:     2c 19 00 00 74 05 f1 02  00 a1 01 c3 01 88 03 00   |,...t...........|
0x2c9c:     ea 02 1e 00 00 9a 03 05  00 00 ff ff 01 11 31 05   |..............1.|
0x2cac:     00 00 4d 05 6f 00 5a 05  00 00 81 01 05 00 00 ff   |..M.o.Z.........|
0x2cbc:     ff 01 0a 36 3d 8c 01 00  9e 01 05 00 00 ff ff 01   |...6=...........|
0x2ccc:     13 2a 05 00 00 3c 78 d1  01 00 bc 01 05 00 00 e3   |.*...<x.........|
0x2cdc:     01 05 00 00 ff ff 01 0c  21 05 00 00 2c 05 33 00   |........!...,.3.|
0x2cec:     48 05 00 00 ff ff 01 14  2f 05 9f 01 00 53 05 90   |H......./....S..|
0x2cfc:     01 00 5e 05 9f 01 00 b1  01 05 00 00 ff ff 01 14   |..^.............|
0x2d0c:     23 64 00 00 91 01 05 a3  01 00 9c 01 05 00 00 b5   |#d..............|
0x2d1c:     01 05 00 00 ff ff 01 1e  42 05 00 00 50 1c fd 01   |........B...P...|
0x2d2c:     00 75 4f ee 01 00 cd 01  05 fd 01 00 d8 01 05 00   |.uO.............|
0x2d3c:     00 8f 02 05 00 00 ff ff  01 21 5d 05 e3 01 00 69   |.........!]....i|
0x2d4c:     1d d4 01 00 a8 01 05 c5  01 00 b3 01 05 d4 01 00   |................|
0x2d5c:     be 01 05 e3 01 00 f5 01  05 00 00 ff ff 01 12 2a   |...............*|
0x2d6c:     05 00 00 43 22 82 01 00  6d 05 00 00 94 01 05 00   |...C"...m.......|
0x2d7c:     00 ff ff 01 12 24 05 00  00 4b 22 8a 01 00 75 05   |.....$...K"...u.|
0x2d8c:     00 00 9c 01 05 00 00 ff  ff 01 14 2a 20 00 00 57   |...........* ..W|
0x2d9c:     c8 01 bc 02 00 a7 02 05  00 00 ce 02 05 00 00 ff   |................|
0x2dac:     ff 01 36 49 05 00 00 64  05 b4 02 00 70 1d a5 02   |..6I...d....p...|
0x2dbc:     00 a4 01 05 96 02 00 c8  01 05 87 02 00 d3 01 05   |................|
0x2dcc:     96 02 00 de 01 05 a5 02  00 e9 01 05 b4 02 00 f4   |................|
0x2ddc:     01 05 00 00 c6 02 05 00  00 00 00 00 ff 00 4d 01   |..............M.|
0x2dec:     41 34 f7 01 00 00 cb 02  59 a2 0d 01 b7 03 8d 01   |A4......Y.......|
0x2dfc:     f9 0c 03 cd 04 05 e5 0c  03 e5 04 a9 05 d1 0c 03   |................|
0x2e0c:     97 0a 05 e5 0c 03 a5 0a  1d f9 0c 03 cb 0a 05 a2   |................|
0x2e1c:     0d 01 e6 0a 6c 00 00 9d  0d 12 00 00 cc 0d 05 91   |....l...........|
0x2e2c:     0d 00 01 00 00 7d 00 00  00 00 00 00 ff ff 01 14   |.....}..........|
0x2e3c:     27 05 00 00 39 ef 01 c5  02 00 b0 02 05 00 00 d7   |'...9...........|
0x2e4c:     02 05 00 00 ff ff 01 1f  46 05 00 00 60 05 c0 01   |........F...`...|
0x2e5c:     00 84 01 05 b1 01 00 91  01 05 c0 01 00 9c 01 05   |................|
0x2e6c:     00 00 d2 01 05 00 00 ff  ff 01 1d 31 05 00 00 4b   |...........1...K|
0x2e7c:     05 c2 01 00 67 05 b3 01  00 77 05 c2 01 00 82 01   |....g....w......|
0x2e8c:     05 00 00 d4 01 05 00 00  ff 00 65 01 58 28 29 00   |..........e.X().|
0x2e9c:     00 b5 01 45 bb 0c 00 90  02 1a a6 0b 00 b3 02 0f   |...E............|
0x2eac:     bb 0c 00 e2 02 59 84 0c  03 ce 03 8d 01 e3 0b 03   |.....Y..........|
0x2ebc:     fc 04 ad 04 cf 0b 03 b5  09 15 bb 0b 03 d5 09 24   |...............$|
0x2ecc:     cf 0b 03 87 0a 05 e3 0b  03 ad 0a 05 84 0c 03 d1   |................|
0x2edc:     0a 2b bb 0c 00 8a 0b 05  00 00 aa 0c 05 fb 0b 00   |.+..............|
0x2eec:     d0 0c 05 00 00 00 00 01  7d 00 00 00 00 00 00 00   |........}.......|
0x2efc:     ff ff 01 0c 39 05 57 00  44 05 00 00 69 05 00 00   |....9.W.D...i...|
0x2f0c:     ff ff 01 0c 37 05 00 00  54 05 5b 00 6d 05 00 00   |....7...T.[.m...|
0x2f1c:     ff ff 01 0c 39 05 57 00  44 05 00 00 69 05 00 00   |....9.W.D...i...|
0x2f2c:     ff ff 01 0c 3e 05 00 00  57 05 5e 00 70 05 00 00   |....>...W.^.p...|
0x2f3c:     ff ff 01 21 32 05 89 03  00 7d 23 fa 02 00 cd 01   |...!2....}#.....|
0x2f4c:     05 e4 02 00 de 01 05 d6  02 00 ee 01 05 e4 02 00   |................|
0x2f5c:     9b 03 05 00 00 ff ff 01  0f 45 05 00 00 9b 01 05   |.........E......|
0x2f6c:     b6 01 00 c8 01 05 00 00  ff ff 01 0c 37 05 00 00   |............7...|
0x2f7c:     54 05 5b 00 6d 05 00 00  ff ff 01 0c 39 05 57 00   |T.[.m.......9.W.|
0x2f8c:     44 05 00 00 69 05 00 00  ff ff 01 0c 3e 05 00 00   |D...i.......>...|
0x2f9c:     57 05 5e 00 70 05 00 00  ff ff 01 13 34 05 00 00   |W.^.p.......4...|
0x2fac:     46 6b ca 01 00 b7 01 05  00 00 dc 01 05 00 00 ff   |Fk..............|
0x2fbc:     ff 01 1f 3a 05 00 00 4c  74 f2 02 00 cd 01 72 e3   |...:...Lt.....r.|
0x2fcc:     02 00 c5 02 05 f2 02 00  d0 02 05 00 00 84 03 05   |................|
0x2fdc:     00 00 ff ff 01 1f 3a 05  00 00 5b 65 f2 02 00 cd   |......:...[e....|
0x2fec:     01 72 e3 02 00 c5 02 05  f2 02 00 d0 02 05 00 00   |.r..............|
0x2ffc:     84 03 05 00 00 ff ff 01  1d 2b 05 00 00 30 05 b3   |.........+...0..|
0x300c:     01 00 59 05 a4 01 00 6c  05 95 01 00 77 05 a4 01   |..Y....l....w...|
0x301c:     00 c5 01 05 00 00 00 00  ff 00 55 01 45 3e 05 85   |..........U.E>..|
0x302c:     05 01 50 64 f0 04 03 e9  01 02 df 04 03 a6 02 05   |..Pd............|
0x303c:     ce 04 03 b4 02 15 81 04  03 cf 02 10 ce 04 03 e5   |................|
0x304c:     02 42 a7 04 05 b4 03 05  92 04 05 bf 03 05 a7 04   |.B..............|
0x305c:     05 da 03 05 f0 04 03 e5  03 05 85 05 01 8d 05 0d   |................|
0x306c:     00 00 7f 00 00 7d 02 7d  00 00 00 00 b8 b7 01 00   |.....}.}........|
0x307c:     01 00 00 00 ff 00 3d 01  33 35 05 d1 03 01 47 64   |......=.35....Gd|
0x308c:     bc 03 03 e0 01 02 ab 03  03 9a 02 05 9a 03 03 a8   |................|
0x309c:     02 15 89 03 03 c3 02 10  9a 03 03 e9 02 05 bc 03   |................|
0x30ac:     03 f4 02 05 d1 03 01 d9  03 0d 00 00 7f 00 00 7d   |...............}|
0x30bc:     b8 b7 01 00 01 00 00 00  ff 00 55 01 45 3e 05 85   |..........U.E>..|
0x30cc:     05 01 5f 55 f0 04 03 e9  01 02 df 04 03 a6 02 05   |.._U............|
0x30dc:     ce 04 03 b4 02 15 81 04  03 cf 02 10 ce 04 03 e5   |................|
0x30ec:     02 42 a7 04 05 b4 03 05  92 04 05 bf 03 05 a7 04   |.B..............|
0x30fc:     05 da 03 05 f0 04 03 e5  03 05 85 05 01 8d 05 0d   |................|
0x310c:     00 00 7f 00 00 7d 02 7d  00 00 00 00 b8 b7 01 00   |.....}.}........|
0x311c:     01 00 ff ff 01 1d 2b 05  00 00 30 05 b3 01 00 59   |......+...0....Y|
0x312c:     05 a4 01 00 6c 05 95 01  00 77 05 a4 01 00 c5 01   |....l....w......|
0x313c:     05 00 00 ff ff 01 1d 2b  05 00 00 30 05 b3 01 00   |.......+...0....|
0x314c:     59 05 a4 01 00 6c 05 95  01 00 77 05 a4 01 00 c5   |Y....l....w.....|
0x315c:     01 05 00 00 ff 00 21 01  14 31 05 9b 01 01 4a 1f   |......!..1....J.|
0x316c:     86 01 03 71 05 9b 01 01  a3 01 0d 00 00 7f 00 00   |...q............|
0x317c:     7d 00 00 00 b8 b7 01 00  01 00 00 00 ff 00 55 01   |}.............U.|
0x318c:     45 3e 05 85 05 01 5f 55  f0 04 03 e9 01 02 df 04   |E>...._U........|
0x319c:     03 a6 02 05 ce 04 03 b4  02 15 81 04 03 cf 02 10   |................|
0x31ac:     ce 04 03 e5 02 42 a7 04  05 b4 03 05 92 04 05 bf   |.....B..........|
0x31bc:     03 05 a7 04 05 da 03 05  f0 04 03 e5 03 05 85 05   |................|
0x31cc:     01 8d 05 0d 00 00 7f 00  00 7d 02 7d 00 00 00 00   |.........}.}....|
0x31dc:     b8 b7 01 00 01 00 00 00  ff 00 21 01 14 31 05 9b   |..........!..1..|
0x31ec:     01 01 4a 1f 86 01 03 71  05 9b 01 01 a3 01 0d 00   |..J....q........|
0x31fc:     00 7f 00 00 7d 00 00 00  b8 b7 01 00 01 00 00 00   |....}...........|
0x320c:     ff 00 21 01 14 31 05 9b  01 01 4a 1f 86 01 03 71   |..!..1....J....q|
0x321c:     05 9b 01 01 a3 01 0d 00  00 7f 00 00 7d 00 00 00   |............}...|
0x322c:     b8 b7 01 00 01 00 00 00  ff 00 55 01 45 3e 05 85   |..........U.E>..|
0x323c:     05 01 50 64 f0 04 03 e9  01 02 df 04 03 a6 02 05   |..Pd............|
0x324c:     ce 04 03 b4 02 15 81 04  03 cf 02 10 ce 04 03 e5   |................|
0x325c:     02 42 a7 04 05 b4 03 05  92 04 05 bf 03 05 a7 04   |.B..............|
0x326c:     05 da 03 05 f0 04 03 e5  03 05 85 05 01 8d 05 0d   |................|
0x327c:     00 00 7f 00 00 7d 02 7d  00 00 00 00 b8 b7 01 00   |.....}.}........|
0x328c:     01 00 00 00 ff 00 21 01  14 31 05 9b 01 01 4a 1f   |......!..1....J.|
0x329c:     86 01 03 71 05 9b 01 01  a3 01 0d 00 00 7f 00 00   |...q............|
0x32ac:     7d 00 00 00 b8 b7 01 00  01 00 00 00 ff 00 21 01   |}.............!.|
0x32bc:     14 31 05 9b 01 01 4a 1f  86 01 03 71 05 9b 01 01   |.1....J....q....|
0x32cc:     a3 01 0d 00 00 7f 00 00  7d 00 00 00 b8 b7 01 00   |........}.......|
0x32dc:     01 00 00 00 ff 00 1d 01  13 2b 05 8e 01 01 3d 1f   |.........+....=.|
0x32ec:     79 03 64 05 8e 01 01 96  01 0d 00 00 7f 00 00 7d   |y.d............}|
0x32fc:     b8 b7 01 00 01 00 00 00  ff 00 3d 01 33 35 05 d1   |..........=.35..|
0x330c:     03 01 56 55 bc 03 03 e0  01 02 ab 03 03 9a 02 05   |..VU............|
0x331c:     9a 03 03 a8 02 15 89 03  03 c3 02 10 9a 03 03 e9   |................|
0x332c:     02 05 bc 03 03 f4 02 05  d1 03 01 d9 03 0d 00 00   |................|
0x333c:     7f 00 00 7d b8 b7 01 00  01 00 00 00 ff 00 55 01   |...}..........U.|
0x334c:     45 3e 05 85 05 01 5f 55  f0 04 03 e9 01 02 df 04   |E>...._U........|
0x335c:     03 a6 02 05 ce 04 03 b4  02 15 81 04 03 cf 02 10   |................|
0x336c:     ce 04 03 e5 02 42 a7 04  05 b4 03 05 92 04 05 bf   |.....B..........|
0x337c:     03 05 a7 04 05 da 03 05  f0 04 03 e5 03 05 85 05   |................|
0x338c:     01 8d 05 0d 00 00 7f 00  00 7d 02 7d 00 00 00 00   |.........}.}....|
0x339c:     b8 b7 01 00 01 00 00 00  ff 00 55 01 45 3e 05 85   |..........U.E>..|
0x33ac:     05 01 50 64 f0 04 03 e9  01 02 df 04 03 a6 02 05   |..Pd............|
0x33bc:     ce 04 03 b4 02 15 81 04  03 cf 02 10 ce 04 03 e5   |................|
0x33cc:     02 42 a7 04 05 b4 03 05  92 04 05 bf 03 05 a7 04   |.B..............|
0x33dc:     05 da 03 05 f0 04 03 e5  03 05 85 05 01 8d 05 0d   |................|
0x33ec:     00 00 7f 00 00 7d 02 7d  00 00 00 00 b8 b7 01 00   |.....}.}........|
0x33fc:     01 00 ff ff 01 1f 3a 05  00 00 4c 74 f2 02 00 cd   |......:...Lt....|
0x340c:     01 72 e3 02 00 c5 02 05  f2 02 00 d0 02 05 00 00   |.r..............|
0x341c:     84 03 05 00 00 00 00 00  ff 00 21 01 14 31 05 9b   |..........!..1..|
0x342c:     01 01 4a 1f 86 01 03 71  05 9b 01 01 a3 01 0d 00   |..J....q........|
0x343c:     00 7f 00 00 7d 00 00 00  b8 b7 01 00 01 00 00 00   |....}...........|
0x344c:     ff 00 55 01 45 3e 05 85  05 01 50 64 f0 04 03 e9   |..U.E>....Pd....|
0x345c:     01 02 df 04 03 a6 02 05  ce 04 03 b4 02 15 81 04   |................|
0x346c:     03 cf 02 10 ce 04 03 e5  02 42 a7 04 05 b4 03 05   |.........B......|
0x347c:     92 04 05 bf 03 05 a7 04  05 da 03 05 f0 04 03 e5   |................|
0x348c:     03 05 85 05 01 8d 05 0d  00 00 7f 00 00 7d 02 7d   |.............}.}|
0x349c:     00 00 00 00 b8 b7 01 00  01 00 ff ff 01 08 40 05   |..............@.|
0x34ac:     5e 00 70 05 00 00 00 00  ff 00 1d 01 13 37 05 00   |^.p..........7..|
0x34bc:     00 62 05 89 01 01 84 01  05 00 00 a5 01 0a 78 00   |.b............x.|
0x34cc:     01 00 00 00 00 00 00 00  ff ff 01 08 40 05 5e 00   |............@.^.|
0x34dc:     70 05 00 00 ff ff 01 09  43 05 78 00 8a 01 05 00   |p.......C.x.....|
0x34ec:     00 00 00 00 ff 00 1d 01  13 37 05 00 00 62 05 89   |.........7...b..|
0x34fc:     01 01 84 01 05 00 00 a5  01 0a 78 00 01 00 00 00   |..........x.....|
0x350c:     00 00 00 00 ff ff 01 0d  2b 05 00 00 68 05 6f 00   |........+...h.o.|
0x351c:     8f 01 05 00 00 ff ff 01  08 49 05 67 00 79 05 00   |.........I.g.y..|
0x352c:     00 ff ff 01 0a 43 05 83  01 00 95 01 05 00 00 ff   |.....C..........|
0x353c:     ff 01 0b 91 01 05 b2 01  00 c4 01 05 00 00 ff ff   |................|
0x354c:     01 1f 3a 05 00 00 4c 74  f2 02 00 cd 01 72 e3 02   |..:...Lt.....r..|
0x355c:     00 c5 02 05 f2 02 00 d0  02 05 00 00 84 03 05 00   |................|
0x356c:     00 ff ff 01 1f 3a 05 00  00 5b 65 f2 02 00 cd 01   |.....:...[e.....|
0x357c:     72 e3 02 00 c5 02 05 f2  02 00 d0 02 05 00 00 84   |r...............|
0x358c:     03 05 00 00 ff ff 01 1f  3a 05 00 00 4c 74 f2 02   |........:...Lt..|
0x359c:     00 cd 01 72 e3 02 00 c5  02 05 f2 02 00 d0 02 05   |...r............|
0x35ac:     00 00 84 03 05 00 00 ff  ff 01 1f 3a 05 00 00 5b   |...........:...[|
0x35bc:     65 f2 02 00 dc 01 63 e3  02 00 c5 02 05 f2 02 00   |e.....c.........|
0x35cc:     d0 02 05 00 00 84 03 05  00 00 ff ff 01 1f 3a 05   |..............:.|
0x35dc:     00 00 5b 65 f2 02 00 dc  01 63 e3 02 00 c5 02 05   |..[e.....c......|
0x35ec:     f2 02 00 d0 02 05 00 00  84 03 05 00 00 ff ff 01   |................|
0x35fc:     13 34 05 00 00 55 5c ca  01 00 b7 01 05 00 00 dc   |.4...U\.........|
0x360c:     01 05 00 00 ff ff 01 1f  3a 05 00 00 4c 74 f2 02   |........:...Lt..|
0x361c:     00 dc 01 63 e3 02 00 c5  02 05 f2 02 00 d0 02 05   |...c............|
0x362c:     00 00 84 03 05 00 00 00  ff 00 25 01 1b 4b fb 03   |..........%..K..|
0x363c:     00 00 ab 05 05 f2 06 01  bb 06 05 00 00 ed 06 05   |................|
0x364c:     00 00 af 07 0a e1 06 00  01 00 00 00 00 00 00 00   |................|
0x365c:     ff 00 15 01 0c 2e 05 68  01 63 05 00 00 7b 05 57   |.......h.c...{.W|
0x366c:     00 01 00 00 00 00 00 00  ff 00 25 01 1d cd 01 8a   |..........%.....|
0x367c:     03 00 00 88 05 82 01 95  07 01 ae 06 05 00 00 90   |................|
0x368c:     07 05 00 00 cc 07 46 84  07 00 01 00 00 00 00 00   |......F.........|
0x369c:     ff ff 01 28 83 01 50 00  00 8b 02 05 86 07 00 d1   |...(..P.........|
0x36ac:     03 6e ac 07 00 de 04 05  9d 07 00 e9 04 84 02 ac   |.n..............|
0x36bc:     07 00 f3 06 2a 00 00 be  07 05 00 00 ff 00 25 01   |....*.........%.|
0x36cc:     1c 90 01 82 01 00 00 b1  02 05 f2 02 01 c3 02 05   |................|
0x36dc:     00 00 ed 02 05 00 00 8c  03 05 e1 02 00 01 00 00   |................|
0x36ec:     00 00 00 00 ff ff 01 12  30 05 00 00 50 17 80 01   |........0...P...|
0x36fc:     00 6d 05 00 00 92 01 05  00 00 ff ff 01 0e 37 05   |.m............7.|
0x370c:     00 00 49 3c 87 01 00 99  01 05 00 00 ff ff 01 08   |..I<............|
0x371c:     43 05 4a 00 5d 05 00 00  ff 00 15 01 0d 41 05 6c   |C.J.]........A.l|
0x372c:     01 67 05 00 00 81 01 0a  5b 00 01 00 00 00 00 00   |.g......[.......|
0x373c:     ff ff 01 11 37 05 00 00  5a 05 78 00 65 05 00 00   |....7...Z.x.e...|
0x374c:     8a 01 05 00 00 00 00 00  ff 00 25 01 1b 82 01 74   |..........%....t|
0x375c:     00 00 95 02 05 d6 02 01  a7 02 05 00 00 d1 02 05   |................|
0x376c:     00 00 f0 02 05 c5 02 00  01 00 00 00 00 00 00 00   |................|
0x377c:     ff ff 01 10 2e b1 01 00  00 b2 02 05 89 03 00 f0   |................|
0x378c:     02 38 00 00 ff ff 01 1b  63 05 00 00 90 01 22 cb   |.8......c.....".|
0x379c:     03 00 94 02 1e e2 03 00  b8 02 aa 01 00 00 f4 03   |................|
0x37ac:     05 00 00 ff ff 01 14 30  05 00 00 42 86 02 e1 02   |.......0...B....|
0x37bc:     00 ce 02 05 00 00 f3 02  05 00 00 ff ff 01 08 2a   |...............*|
0x37cc:     05 53 00 65 05 00 00 ff  ff 01 0c 20 05 00 00 31   |.S.e....... ...1|
0x37dc:     05 54 00 63 05 00 00 ff  ff 01 08 31 05 4f 00 4a   |.T.c.......1.O.J|
0x37ec:     19 00 00 ??                                        |...?            |
; section: .rodata
0x3d04:     00 00 00                                           |...             |
0x3d07:     73 65 72 69 61 6c 69 7a  65 2e 68 00               |serialize.h.    |   "serialize.h"
0x3d13:     6e 53 69 7a 65 20 3e 3d  20 30 00                  |nSize >= 0.     |   "nSize >= 0"
0x3d1e:     00 00                                              |..              |
0x3d20:     43 44 61 74 61 53 74 72  65 61 6d 3a 3a 72 65 61   |CDataStream::rea|   "CDataStream::read() : end of data"
0x3d30:     64 28 29 20 3a 20 65 6e  64 20 6f 66 20 64 61 74   |d() : end of dat|
0x3d40:     61 00                                              |a.              |
0x3d42:     00 00                                              |..              |
0x3d44:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/filesystem/v3/path_traits.hpp"
0x3d54:     73 74 2f 66 69 6c 65 73  79 73 74 65 6d 2f 76 33   |st/filesystem/v3|
0x3d64:     2f 70 61 74 68 5f 74 72  61 69 74 73 2e 68 70 70   |/path_traits.hpp|
0x3d74:     00                                                 |.               |
0x3d75:     66 72 6f 6d 00                                     |from.           |   "from"
0x3d7a:     66 72 6f 6d 5f 65 6e 64  00                        |from_end.       |   "from_end"
0x3d83:     3a 20 00                                           |: .             |
0x3d86:     63 6f 72 65 2e 68 00                               |core.h.         |   "core.h"
0x3d8d:     00 00 00                                           |...             |
0x3d90:     66 46 69 72 73 74 20 7c  7c 20 66 53 65 63 6f 6e   |fFirst || fSecon|   "fFirst || fSecond || nMaskCode"
0x3da0:     64 20 7c 7c 20 6e 4d 61  73 6b 43 6f 64 65 00      |d || nMaskCode. |
0x3daf:     00 43 42 6c 6f 63 6b 49  6e 64 65 78 28 70 70 72   |.CBlockIndex(ppr|
0x3dbf:     65 76 3d 25 70 2c 20 70  6e 65 78 74 3d 25 70 2c   |ev=%p, pnext=%p,|
0x3dcf:     20 6e 48 65 69 67 68 74  3d 25 64 2c 20 6d 65 72   | nHeight=%d, mer|
0x3ddf:     6b 6c 65 3d 25 73 2c 20  68 61 73 68 42 6c 6f 63   |kle=%s, hashBloc|
0x3def:     6b 3d 25 73 29 00                                  |k=%s).          |
0x3df5:     63 68 61 69 6e 73 74 61  74 65 00                  |chainstate.     |   "chainstate"
0x3e00:     43 6f 6d 6d 69 74 74 69  6e 67 20 25 75 20 63 68   |Committing %u ch|   "Committing %u changed transactions to coin database...\n"
0x3e10:     61 6e 67 65 64 20 74 72  61 6e 73 61 63 74 69 6f   |anged transactio|
0x3e20:     6e 73 20 74 6f 20 63 6f  69 6e 20 64 61 74 61 62   |ns to coin datab|
0x3e30:     61 73 65 2e 2e 2e 0a 00                            |ase.....        |
0x3e38:     69 6e 64 65 78 00                                  |index.          |   "index"
0x3e3e:     62 6c 6f 63 6b 73 00                               |blocks.         |   "blocks"
0x3e45:     25 73 28 29 20 3a 20 64  65 73 65 72 69 61 6c 69   |%s() : deseriali|
0x3e55:     7a 65 20 65 72 72 6f 72  00 00 00 4c 6f 61 64 42   |ze error...LoadB|
0x3e65:     6c 6f 63 6b 49 6e 64 65  78 28 29 20 3a 20 43 68   |lockIndex() : Ch|
0x3e75:     65 63 6b 49 6e 64 65 78  20 66 61 69 6c 65 64 3a   |eckIndex failed:|
0x3e85:     20 25 73 00                                        | %s.            |
0x3e89:     76 65 63 74 6f 72 3a 3a  72 65 73 65 72 76 65 00   |vector::reserve.|   "vector::reserve"
0x3e99:     00 00 00                                           |...             |
0x3e9c:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x3eac:     73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x3ebc:     61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x3ecc:     72 2e 68 70 70 00                                  |r.hpp.          |
0x3ed2:     4c 65 76 65 6c 44 42 20  72 65 61 64 20 66 61 69   |LevelDB read fai|   "LevelDB read failure: %s\n"
0x3ee2:     6c 75 72 65 3a 20 25 73  0a 00                     |lure: %s..      |
0x3eec:     25 30 32 78 00                                     |%02x.           |
0x3ef1:     76 65 63 74 6f 72 3a 3a  5f 4d 5f 72 61 6e 67 65   |vector::_M_range|   "vector::_M_range_insert"
0x3f01:     5f 69 6e 73 65 72 74 00                            |_insert.        |
0x3f09:     76 65 63 74 6f 72 3a 3a  5f 4d 5f 66 69 6c 6c 5f   |vector::_M_fill_|   "vector::_M_fill_insert"
0x3f19:     69 6e 73 65 72 74 00                               |insert.         |
0x3f20:     62 61 73 69 63 5f 73 74  72 69 6e 67 3a 3a 5f 53   |basic_string::_S|   "basic_string::_S_construct null not valid"
0x3f30:     5f 63 6f 6e 73 74 72 75  63 74 20 6e 75 6c 6c 20   |_construct null |
0x3f40:     6e 6f 74 20 76 61 6c 69  64 00                     |not valid.      |
0x3f4a:     76 65 63 74 6f 72 3c 62  6f 6f 6c 3e 3a 3a 5f 4d   |vector<bool>::_M|   "vector<bool>::_M_insert_aux"
0x3f5a:     5f 69 6e 73 65 72 74 5f  61 75 78 00               |_insert_aux.    |
0x3f66:     00 00                                              |..              |
0x3f68:     52 65 61 64 43 6f 6d 70  61 63 74 53 69 7a 65 28   |ReadCompactSize(|   "ReadCompactSize() : size too large"
0x3f78:     29 20 3a 20 73 69 7a 65  20 74 6f 6f 20 6c 61 72   |) : size too lar|
0x3f88:     67 65 00                                           |ge.             |
0x3f8b:     00 60 90 0f 00 80 38 01  00 d1 00 00 00 aa 7a 00   |.`....8.......z.|
0x3f9b:     00 00 7d 00 00 90 7e 00  00 60 ea 00 00 62 ea 00   |..}...~..`...b..|
0x3fab:     00 00 00 00 02 20 00 00  00 08 00 00 00 00 00 00   |..... ..........|
0x3fbb:     00 00 e1 f5 05 00 00 00  00 40 42 0f 00 00 00 00   |.........@B.....|
0x3fcb:     00 08 02 00 00 3f 00 02  00 a0 8c 00 00 32 00 00   |.....?.......2..|
0x3fdb:     00 50 c3 00 00 80 84 1e  00 40 42 0f 00 40 0d 03   |.P.......@B..@..|
0x3feb:     00 40 9c 00 00 20 4e 00  00 00 00 00 08 00 00 00   |.@... N.........|
0x3ffb:     01 00 00 10 00 ff ff ff  7f 00 40 7a 10 f3 5a 00   |..........@z..Z.|
0x400b:     00 64 00 00 00 00 65 cd  1d 10 00 00 00 78 69 00   |.d....e......xi.|
0x401b:     00 01 00 00 00 00 00 00  00 00 00 20 03 00 00 00   |........... ....|
0x402b:     00 b0 2a 02 00 00 00 00  00 01 00 00 00 11 00 00   |..*.............|
0x403b:     00 ff ff ff ff 04 00 00  00 00 00 00 00 00 00 00   |................|
0x404b:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x405b:     00 00 00 00 00 00 00 00  00                        |.........       |
0x4064:     62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x4074:     5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x4084:     70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x4094:     74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x40a4:     69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x40b4:     34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x40c4:     74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x40d4:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x40e4:     73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x40f4:     69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x4104:     65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x410d:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x411d:     00 00 00 00 00 00 00 62  6f 6f 6c 20 43 42 6c 6f   |.......bool CBlo|
0x412d:     63 6b 54 72 65 65 44 42  3a 3a 4c 6f 61 64 42 6c   |ckTreeDB::LoadBl|
0x413d:     6f 63 6b 49 6e 64 65 78  47 75 74 73 28 29 00 00   |ockIndexGuts()..|
0x414d:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x415d:     00 00 00 00 00 00 00                               |.......         |
0x4164:     43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::write(const char*, int)"
0x4174:     74 61 53 74 72 65 61 6d  3a 3a 77 72 69 74 65 28   |taStream::write(|
0x4184:     63 6f 6e 73 74 20 63 68  61 72 2a 2c 20 69 6e 74   |const char*, int|
0x4194:     29 00                                              |).              |
0x4196:     00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x41a4:     43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::read(char*, int)"
0x41b4:     74 61 53 74 72 65 61 6d  3a 3a 72 65 61 64 28 63   |taStream::read(c|
0x41c4:     68 61 72 2a 2c 20 69 6e  74 29 00                  |har*, int).     |
0x41cf:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x41df:     00 00 00 00 00 76 69 72  74 75 61 6c 20 62 6f 6f   |.....virtual boo|
0x41ef:     6c 20 43 43 6f 69 6e 73  56 69 65 77 44 42 3a 3a   |l CCoinsViewDB::|
0x41ff:     47 65 74 53 74 61 74 73  28 43 43 6f 69 6e 73 53   |GetStats(CCoinsS|
0x420f:     74 61 74 73 26 29 00 00  00 00 00 00 00 00 00 00   |tats&)..........|
0x421f:     00 00 00 00 00                                     |.....           |
0x4224:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 66 69 6c 65   |void boost::file|   "void boost::filesystem3::path_traits::convert(const char*, const char*, std::string&, const codecvt_type&)"
0x4234:     73 79 73 74 65 6d 33 3a  3a 70 61 74 68 5f 74 72   |system3::path_tr|
0x4244:     61 69 74 73 3a 3a 63 6f  6e 76 65 72 74 28 63 6f   |aits::convert(co|
0x4254:     6e 73 74 20 63 68 61 72  2a 2c 20 63 6f 6e 73 74   |nst char*, const|
0x4264:     20 63 68 61 72 2a 2c 20  73 74 64 3a 3a 73 74 72   | char*, std::str|
0x4274:     69 6e 67 26 2c 20 63 6f  6e 73 74 20 63 6f 64 65   |ing&, const code|
0x4284:     63 76 74 5f 74 79 70 65  26 29 00                  |cvt_type&).     |
0x428f:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x429f:     00 00 00 00 00                                     |.....           |
0x42a4:     75 6e 73 69 67 6e 65 64  20 69 6e 74 20 43 43 6f   |unsigned int CCo|   "unsigned int CCoins::GetSerializeSize(int, int) const"
0x42b4:     69 6e 73 3a 3a 47 65 74  53 65 72 69 61 6c 69 7a   |ins::GetSerializ|
0x42c4:     65 53 69 7a 65 28 69 6e  74 2c 20 69 6e 74 29 20   |eSize(int, int) |
0x42d4:     63 6f 6e 73 74 00                                  |const.          |
0x42da:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x42e4:     76 6f 69 64 20 43 43 6f  69 6e 73 3a 3a 53 65 72   |void CCoins::Ser|   "void CCoins::Serialize(Stream&, int, int) const [with Stream = CDataStream]"
0x42f4:     69 61 6c 69 7a 65 28 53  74 72 65 61 6d 26 2c 20   |ialize(Stream&, |
0x4304:     69 6e 74 2c 20 69 6e 74  29 20 63 6f 6e 73 74 20   |int, int) const |
0x4314:     5b 77 69 74 68 20 53 74  72 65 61 6d 20 3d 20 43   |[with Stream = C|
0x4324:     44 61 74 61 53 74 72 65  61 6d 5d 00               |DataStream].    |
0x4330:     55                                                 |U               |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x1b41c:    00 00 00 00 80 b7 01 00  38 b4 01 00 8e b4 01 00   |........8.......|
0x1b42c:    74 b9 01 00 04 3b 00 00  ac b9 01 00 55            |t....;......U   |
; section: .rodata._ZTV12CCoinsViewDB
0x1b4e4:    00 00 00 00 8c b7 01 00  74 02 00 00 16 03 00 00   |........t.......|
0x1b4f4:    ba 03 00 00 50 04 00 00  12 05 00 00 be 05 00 00   |....P...........|
0x1b504:    26 0c 00 00 10 b5 01 00  92 b5 01 00 55            |&...........U   |
; section: .rodata._ZTVN5boost6system12system_errorE
0x1b5d4:    00 00 00 00 c4 b7 01 00  de 52 00 00 72 53 00 00   |.........R..rS..|
0x1b5e4:    b2 53 00 00 ??                                     |.S..?           |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x1b604:    00 00 00 00 f0 b7 01 00  c8 4e 00 00 1e 4f 00 00   |.........N...O..|
0x1b614:    00 00 00 00 00 00 00 00  04 51 00 00 58 51 00 00   |.........Q..XQ..|
0x1b624:    c4 51 00 00 ??                                     |.Q..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x1b644:    00 00 00 00 64 b8 01 00  64 df 00 00 ea df 00 00   |....d...d.......|
0x1b654:    ea b9 01 00 66 ba 01 00  ec ff ff ff 64 b8 01 00   |....f.......d...|
0x1b664:    59 df 00 00 e3 df 00 00  00 00 00 00 e8 ff ff ff   |Y...............|
0x1b674:    64 b8 01 00 e2 b9 01 00  5e ba 01 00 4f df 00 00   |d.......^...O...|
0x1b684:    dc df 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x1b6a4:    00 00 00 00 c4 b8 01 00  90 89 00 00 06 8a 00 00   |................|
0x1b6b4:    ec ff ff ff c4 b8 01 00  86 89 00 00 fe 89 00 00   |................|
0x1b6c4:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x1b6cc:    00 00 00 00 08 b9 01 00  7a 3a 00 00 c4 3a 00 00   |........z:...:..|
0x1b6dc:    00 00 00 00 04 3b 00 00  00 00 00 00 ??            |.....;......?   |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x1b6ec:    00 00 00 00 4c b9 01 00  00 00 00 00 00 00 00 00   |....L...........|
0x1b6fc:    30 38 00 00 7a 38 00 00  00                        |08..z8...       |
; section: .rodata._ZTVN5boost9exceptionE
0x1b704:    00 00 00 00 68 b9 01 00  00 00 00 00 00 00 00 00   |....h...........|
0x1b714:    ??                                                 |?               |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x1b724:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x1b734:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x1b744:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x1b754:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x1b764:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x1b774:    6c 6f 63 5f 45 45 45 45  45 00 ??                  |loc_EEEEE.?     |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x1b780:    08 00 00 00 24 b7 01 00  08 b9 01 00 08            |....$........   |
; section: .rodata._ZTI12CCoinsViewDB
0x1b78c:    08 00 00 00 98 b7 01 00  00 00 00 00 31            |............1   |
; section: .rodata._ZTS12CCoinsViewDB
0x1b798:    31 32 43 43 6f 69 6e 73  56 69 65 77 44 42 00 31   |12CCoinsViewDB.1|
; section: .rodata._ZTS13leveldb_error
0x1b7a7:    31 33 6c 65 76 65 6c 64  62 5f 65 72 72 6f 72 00   |13leveldb_error.|
0x1b7b7:    ??                                                 |?               |
; section: .rodata._ZTI13leveldb_error
0x1b7b8:    08 00 00 00 a7 b7 01 00  00 00 00 00 08            |.............   |
; section: .rodata._ZTIN5boost6system12system_errorE
0x1b7c4:    08 00 00 00 d0 b7 01 00  00 00 00 00 4e            |............N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x1b7d0:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x1b7e0:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x1b7f0:    08 00 00 00 04 b8 01 00  08 bb 01 00 ??            |............?   |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x1b804:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x1b814:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x1b824:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x1b824:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x1b834:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x1b844:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x1b854:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x1b864:    08 00 00 00 24 b8 01 00  00 00 00 00 02 00 00 00   |....$...........|
0x1b874:    c4 b8 01 00 02 00 00 00  4c b9 01 00 02 18 00 00   |........L.......|
0x1b884:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x1b884:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x1b894:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x1b8a4:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x1b8c4:    08 00 00 00 84 b8 01 00  00 00 00 00 02 00 00 00   |................|
0x1b8d4:    68 b9 01 00 02 00 00 00  00 00 00 00 02 14 00 00   |h...............|
0x1b8e4:    4e                                                 |N               |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x1b8e4:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|
0x1b8f4:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x1b904:    00 ??                                              |.?              |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x1b908:    08 00 00 00 e4 b8 01 00  ??                        |........?       |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x1b924:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x1b934:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x1b944:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x1b94c:    08 00 00 00 24 b9 01 00  4e                        |....$...N       |
; section: .rodata._ZTSN5boost9exceptionE
0x1b954:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x1b964:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTIN5boost9exceptionE
0x1b968:    08 00 00 00 54 b9 01 00  00                        |....T....       |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x1bae4:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x1baf4:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x1bb04:    6c 65 45 00 08                                     |leE..           |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x1bb08:    08 00 00 00 e4 ba 01 00  78                        |........x       |
; section: .ctors
0x1bb10:    78 1e 00 00 00                                     |x....           |
; section: .eh_frame
0x1ea158:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x1ea168:   1b 0c 04 04 88 01 00 00  1c 00 00 00 1c 00 00 00   |................|
0x1ea178:   90 1e 00 00 3b 00 00 00  00 41 0e 08 85 02 42 0d   |....;....A....B.|
0x1ea188:   05 77 c5 0c 04 04 00 00  1c 00 00 00 3c 00 00 00   |.w..........<...|
0x1ea198:   ac 1e 00 00 33 00 00 00  00 41 0e 08 85 02 42 0d   |....3....A....B.|
0x1ea1a8:   05 6f c5 0c 04 04 00 00  1c 00 00 00 5c 00 00 00   |.o..........\...|
0x1ea1b8:   c0 1e 00 00 3e 00 00 00  00 41 0e 08 85 02 42 0d   |....>....A....B.|
0x1ea1c8:   05 7a c5 0c 04 04 00 00  1c 00 00 00 7c 00 00 00   |.z..........|...|
0x1ea1d8:   de 1e 00 00 33 00 00 00  00 41 0e 08 85 02 42 0d   |....3....A....B.|
0x1ea1e8:   05 6f c5 0c 04 04 00 00  1c 00 00 00 9c 00 00 00   |.o..............|
0x1ea1f8:   f1 1e 00 00 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x1ea208:   05 6c c5 0c 04 04 00 00  1c 00 00 00 bc 00 00 00   |.l..............|
0x1ea218:   02 1f 00 00 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x1ea228:   05 02 43 c5 0c 04 04 00  1c 00 00 00 dc 00 00 00   |..C.............|
0x1ea238:   2a 1f 00 00 3e 00 00 00  00 41 0e 08 85 02 42 0d   |*...>....A....B.|
0x1ea248:   05 7a c5 0c 04 04 00 00  1c 00 00 00 fc 00 00 00   |.z..............|
0x1ea258:   48 1f 00 00 69 00 00 00  00 41 0e 08 85 02 42 0d   |H...i....A....B.|
0x1ea268:   05 02 65 c5 0c 04 04 00  1c 00 00 00 1c 01 00 00   |..e.............|
0x1ea278:   92 1f 00 00 4d 00 00 00  00 41 0e 08 85 02 42 0d   |....M....A....B.|
0x1ea288:   05 02 49 c5 0c 04 04 00  1c 00 00 00 3c 01 00 00   |..I.........<...|
0x1ea298:   c0 1f 00 00 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x1ea2a8:   05 66 c5 0c 04 04 00 00  1c 00 00 00 5c 01 00 00   |.f..........\...|
0x1ea2b8:   ca 1f 00 00 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x1ea2c8:   05 02 4e c5 0c 04 04 00  1c 00 00 00 7c 01 00 00   |..N.........|...|
0x1ea2d8:   fc 1f 00 00 5a 00 00 00  00 41 0e 08 85 02 42 0d   |....Z....A....B.|
0x1ea2e8:   05 02 56 c5 0c 04 04 00  1c 00 00 00 9c 01 00 00   |..V.............|
0x1ea2f8:   36 20 00 00 59 00 00 00  00 41 0e 08 85 02 42 0d   |6 ..Y....A....B.|
0x1ea308:   05 02 55 c5 0c 04 04 00  1c 00 00 00 bc 01 00 00   |..U.............|
0x1ea318:   70 20 00 00 90 00 00 00  00 41 0e 08 85 02 42 0d   |p .......A....B.|
0x1ea328:   05 02 8c c5 0c 04 04 00  1c 00 00 00 dc 01 00 00   |................|
0x1ea338:   e0 20 00 00 5e 00 00 00  00 41 0e 08 85 02 42 0d   |. ..^....A....B.|
0x1ea348:   05 02 5a c5 0c 04 04 00  1c 00 00 00 fc 01 00 00   |..Z.............|
0x1ea358:   1e 21 00 00 45 00 00 00  00 41 0e 08 85 02 42 0d   |.!..E....A....B.|
0x1ea368:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 02 00 00   |..A.............|
0x1ea378:   44 21 00 00 4f 00 00 00  00 41 0e 08 85 02 42 0d   |D!..O....A....B.|
0x1ea388:   05 02 4b c5 0c 04 04 00  1c 00 00 00 3c 02 00 00   |..K.........<...|
0x1ea398:   74 21 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |t!..\....A....B.|
0x1ea3a8:   05 02 56 c5 0c 04 04 00  1c 00 00 00 5c 02 00 00   |..V.........\...|
0x1ea3b8:   b0 21 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.!..8....A....B.|
0x1ea3c8:   05 74 c5 0c 04 04 00 00  1c 00 00 00 7c 02 00 00   |.t..........|...|
0x1ea3d8:   c8 21 00 00 56 00 00 00  00 41 0e 08 85 02 42 0d   |.!..V....A....B.|
0x1ea3e8:   05 02 50 c5 0c 04 04 00  1c 00 00 00 9c 02 00 00   |..P.............|
0x1ea3f8:   fe 21 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.!..8....A....B.|
0x1ea408:   05 74 c5 0c 04 04 00 00  1c 00 00 00 bc 02 00 00   |.t..............|
0x1ea418:   16 22 00 00 45 00 00 00  00 41 0e 08 85 02 42 0d   |."..E....A....B.|
0x1ea428:   05 02 41 c5 0c 04 04 00  1c 00 00 00 dc 02 00 00   |..A.............|
0x1ea438:   3c 22 00 00 68 00 00 00  00 41 0e 08 85 02 42 0d   |<"..h....A....B.|
0x1ea448:   05 02 62 c5 0c 04 04 00  1c 00 00 00 fc 02 00 00   |..b.............|
0x1ea458:   84 22 00 00 4f 00 00 00  00 41 0e 08 85 02 42 0d   |."..O....A....B.|
0x1ea468:   05 02 4b c5 0c 04 04 00  1c 00 00 00 1c 03 00 00   |..K.............|
0x1ea478:   b4 22 00 00 4e 00 00 00  00 41 0e 08 85 02 42 0d   |."..N....A....B.|
0x1ea488:   05 02 4a c5 0c 04 04 00  1c 00 00 00 3c 03 00 00   |..J.........<...|
0x1ea498:   e2 22 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |."..\....A....B.|
0x1ea4a8:   05 02 58 c5 0c 04 04 00  1c 00 00 00 5c 03 00 00   |..X.........\...|
0x1ea4b8:   1e 23 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.#..8....A....B.|
0x1ea4c8:   05 74 c5 0c 04 04 00 00  1c 00 00 00 7c 03 00 00   |.t..........|...|
0x1ea4d8:   36 23 00 00 2a 00 00 00  00 41 0e 08 85 02 42 0d   |6#..*....A....B.|
0x1ea4e8:   05 66 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.f..............|
0x1ea4f8:   40 23 00 00 5a 00 00 00  00 41 0e 08 85 02 42 0d   |@#..Z....A....B.|
0x1ea508:   05 02 56 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |..V.............|
0x1ea518:   7a 23 00 00 80 00 00 00  00 41 0e 08 85 02 42 0d   |z#.......A....B.|
0x1ea528:   05 02 7c c5 0c 04 04 00  1c 00 00 00 dc 03 00 00   |..|.............|
0x1ea538:   da 23 00 00 78 00 00 00  00 41 0e 08 85 02 42 0d   |.#..x....A....B.|
0x1ea548:   05 02 74 c5 0c 04 04 00  1c 00 00 00 fc 03 00 00   |..t.............|
0x1ea558:   32 24 00 00 a6 00 00 00  00 41 0e 08 85 02 42 0d   |2$.......A....B.|
0x1ea568:   05 02 a2 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |................|
0x1ea578:   b8 24 00 00 a6 00 00 00  00 41 0e 08 85 02 42 0d   |.$.......A....B.|
0x1ea588:   05 02 a2 c5 0c 04 04 00  1c 00 00 00 3c 04 00 00   |............<...|
0x1ea598:   3e 25 00 00 29 00 00 00  00 41 0e 08 85 02 42 0d   |>%..)....A....B.|
0x1ea5a8:   05 65 c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.e..........\...|
0x1ea5b8:   47 25 00 00 29 00 00 00  00 41 0e 08 85 02 42 0d   |G%..)....A....B.|
0x1ea5c8:   05 65 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.e..........|...|
0x1ea5d8:   50 25 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |P%..8....A....B.|
0x1ea5e8:   05 74 c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.t..............|
0x1ea5f8:   68 25 00 00 2a 00 00 00  00 41 0e 08 85 02 42 0d   |h%..*....A....B.|
0x1ea608:   05 66 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.f..............|
0x1ea618:   72 25 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |r%..8....A....B.|
0x1ea628:   05 74 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.t..............|
0x1ea638:   8a 25 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.%..8....A....B.|
0x1ea648:   05 74 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.t..............|
0x1ea658:   a2 25 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.%..8....A....B.|
0x1ea668:   05 74 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.t..............|
0x1ea678:   ba 25 00 00 5f 00 00 00  00 41 0e 08 85 02 42 0d   |.%.._....A....B.|
0x1ea688:   05 02 5b c5 0c 04 04 00  1c 00 00 00 00 00 00 00   |..[.............|
0x1ea698:   01 7a 50 4c 52 00 01 7c  08 07 00 00 00 00 00 00   |.zPLR..|........|
0x1ea6a8:   1b 0c 04 04 88 01 00 00  20 00 00 00 24 00 00 00   |........ ...$...|
0x1ea6b8:   da 25 00 00 6f 00 00 00  04 ac 2b 00 00 41 0e 08   |.%..o.....+..A..|
0x1ea6c8:   85 02 42 0d 05 02 6b c5  0c 04 04 00 1c 00 00 00   |..B...k.........|
0x1ea6d8:   80 05 00 00 6c 32 00 00  40 00 00 00 00 41 0e 08   |....l2..@....A..|
0x1ea6e8:   85 02 42 0d 05 7c c5 0c  04 04 00 00 1c 00 00 00   |..B..|..........|
0x1ea6f8:   a0 05 00 00 8c 32 00 00  4a 00 00 00 00 41 0e 08   |.....2..J....A..|
0x1ea708:   85 02 42 0d 05 02 46 c5  0c 04 04 00 1c 00 00 00   |..B...F.........|
0x1ea718:   c0 05 00 00 b6 32 00 00  40 00 00 00 00 41 0e 08   |.....2..@....A..|
0x1ea728:   85 02 42 0d 05 7c c5 0c  04 04 00 00 24 00 00 00   |..B..|......$...|
0x1ea738:   a8 00 00 00 d6 32 00 00  fb 00 00 00 04 bd 2b 00   |.....2........+.|
0x1ea748:   00 41 0e 08 85 02 42 0d  05 61 83 03 02 d6 c5 0c   |.A....B..a......|
0x1ea758:   04 04 c3 00 20 00 00 00  08 06 00 00 a9 33 00 00   |.... ........3..|
0x1ea768:   4a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 83 03   |J....A....B..f..|
0x1ea778:   5f c3 41 0c 04 04 c5 00  1c 00 00 00 2c 06 00 00   |_.A.........,...|
0x1ea788:   cf 33 00 00 33 00 00 00  00 41 0e 08 85 02 42 0d   |.3..3....A....B.|
0x1ea798:   05 6f c5 0c 04 04 00 00  1c 00 00 00 4c 06 00 00   |.o..........L...|
0x1ea7a8:   e2 33 00 00 47 00 00 00  00 41 0e 08 85 02 42 0d   |.3..G....A....B.|
0x1ea7b8:   05 02 43 c5 0c 04 04 00  1c 00 00 00 6c 06 00 00   |..C.........l...|
0x1ea7c8:   0a 34 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |.4..J....A....B.|
0x1ea7d8:   05 02 46 c5 0c 04 04 00  1c 00 00 00 8c 06 00 00   |..F.............|
0x1ea7e8:   34 34 00 00 40 00 00 00  00 41 0e 08 85 02 42 0d   |44..@....A....B.|
0x1ea7f8:   05 7c c5 0c 04 04 00 00  1c 00 00 00 ac 06 00 00   |.|..............|
0x1ea808:   54 34 00 00 42 00 00 00  00 41 0e 08 85 02 42 0d   |T4..B....A....B.|
0x1ea818:   05 7e c5 0c 04 04 00 00  1c 00 00 00 cc 06 00 00   |.~..............|
0x1ea828:   76 34 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |v4..8....A....B.|
0x1ea838:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x1ea848:   8e 34 00 00 67 00 00 00  00 41 0e 08 85 02 42 0d   |.4..g....A....B.|
0x1ea858:   05 02 63 c5 0c 04 04 00  1c 00 00 00 0c 07 00 00   |..c.............|
0x1ea868:   d6 34 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |.4..\....A....B.|
0x1ea878:   05 02 58 c5 0c 04 04 00  1c 00 00 00 2c 07 00 00   |..X.........,...|
0x1ea888:   12 35 00 00 40 00 00 00  00 41 0e 08 85 02 42 0d   |.5..@....A....B.|
0x1ea898:   05 7c c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.|..........L...|
0x1ea8a8:   32 35 00 00 50 00 00 00  00 41 0e 08 85 02 42 0d   |25..P....A....B.|
0x1ea8b8:   05 02 4c c5 0c 04 04 00  1c 00 00 00 6c 07 00 00   |..L.........l...|
0x1ea8c8:   62 35 00 00 24 00 00 00  00 41 0e 08 85 02 42 0d   |b5..$....A....B.|
0x1ea8d8:   05 60 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.`..............|
0x1ea8e8:   a0 3b 00 00 3b 00 00 00  00 41 0e 08 85 02 42 0d   |.;..;....A....B.|
0x1ea8f8:   05 77 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.w..............|
0x1ea908:   bb 3b 00 00 3b 00 00 00  00 41 0e 08 85 02 42 0d   |.;..;....A....B.|
0x1ea918:   05 77 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.w..............|
0x1ea928:   d6 3b 00 00 3b 00 00 00  00 41 0e 08 85 02 42 0d   |.;..;....A....B.|
0x1ea938:   05 77 c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.w..............|
0x1ea948:   f1 3b 00 00 b2 00 00 00  00 41 0e 08 85 02 42 0d   |.;.......A....B.|
0x1ea958:   05 02 ae c5 0c 04 04 00  1c 00 00 00 0c 08 00 00   |................|
0x1ea968:   84 3c 00 00 47 00 00 00  00 41 0e 08 85 02 42 0d   |.<..G....A....B.|
0x1ea978:   05 02 43 c5 0c 04 04 00  1c 00 00 00 2c 08 00 00   |..C.........,...|
0x1ea988:   ac 3c 00 00 5a 00 00 00  00 41 0e 08 85 02 42 0d   |.<..Z....A....B.|
0x1ea998:   05 02 56 c5 0c 04 04 00  24 00 00 00 14 03 00 00   |..V.....$.......|
0x1ea9a8:   e6 3c 00 00 af 00 00 00  04 da 2b 00 00 41 0e 08   |.<........+..A..|
0x1ea9b8:   85 02 42 0d 05 73 83 03  02 77 c3 41 0c 04 04 c5   |..B..s...w.A....|
0x1ea9c8:   1c 00 00 00 74 08 00 00  6e 3d 00 00 78 00 00 00   |....t...n=..x...|
0x1ea9d8:   00 41 0e 08 85 02 42 0d  05 02 74 c5 0c 04 04 00   |.A....B...t.....|
0x1ea9e8:   1c 00 00 00 94 08 00 00  c6 3d 00 00 35 00 00 00   |.........=..5...|
0x1ea9f8:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1eaa08:   24 00 00 00 7c 03 00 00  dc 3d 00 00 b2 00 00 00   |$...|....=......|
0x1eaa18:   04 e8 2b 00 00 41 0e 08  85 02 42 0d 05 61 83 03   |..+..A....B..a..|
0x1eaa28:   02 8b c5 0c 04 04 c3 00  1c 00 00 00 dc 08 00 00   |................|
0x1eaa38:   66 3e 00 00 6f 00 00 00  00 41 0e 08 85 02 42 0d   |f>..o....A....B.|
0x1eaa48:   05 02 69 c5 0c 04 04 00  1c 00 00 00 fc 08 00 00   |..i.............|
0x1eaa58:   b6 3e 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |.>..J....A....B.|
0x1eaa68:   05 02 44 c5 0c 04 04 00  1c 00 00 00 1c 09 00 00   |..D.............|
0x1eaa78:   e0 3e 00 00 3d 00 00 00  00 41 0e 08 85 02 42 0d   |.>..=....A....B.|
0x1eaa88:   05 79 c5 0c 04 04 00 00  1c 00 00 00 3c 09 00 00   |.y..........<...|
0x1eaa98:   fe 3e 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |.>..J....A....B.|
0x1eaaa8:   05 02 46 c5 0c 04 04 00  1c 00 00 00 5c 09 00 00   |..F.........\...|
0x1eaab8:   28 3f 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |(?..J....A....B.|
0x1eaac8:   05 02 46 c5 0c 04 04 00  2c 00 00 00 44 04 00 00   |..F.....,...D...|
0x1eaad8:   52 3f 00 00 fa 00 00 00  04 f6 2b 00 00 41 0e 08   |R?........+..A..|
0x1eaae8:   85 02 42 0d 05 02 50 83  04 86 03 02 a4 c3 41 c6   |..B...P.......A.|
0x1eaaf8:   41 0c 04 04 c5 00 00 00  1c 00 00 00 ac 09 00 00   |A...............|
0x1eab08:   1c 40 00 00 39 00 00 00  00 41 0e 08 85 02 42 0d   |.@..9....A....B.|
0x1eab18:   05 75 c5 0c 04 04 00 00  24 00 00 00 cc 09 00 00   |.u......$.......|
0x1eab28:   36 40 00 00 68 01 00 00  00 41 0e 08 85 02 42 0d   |6@..h....A....B.|
0x1eab38:   05 67 83 03 03 3c 01 c3  41 0c 04 04 c5 00 00 00   |.g...<..A.......|
0x1eab48:   20 00 00 00 f4 09 00 00  76 41 00 00 a1 00 00 00   | .......vA......|
0x1eab58:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 76 c5 0c   |.A....B..g...v..|
0x1eab68:   04 04 c3 00 1c 00 00 00  18 0a 00 00 f4 41 00 00   |.............A..|
0x1eab78:   2f 00 00 00 00 41 0e 08  85 02 42 0d 05 6b c5 0c   |/....A....B..k..|
0x1eab88:   04 04 00 00 1c 00 00 00  38 0a 00 00 03 42 00 00   |........8....B..|
0x1eab98:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1eaba8:   04 04 00 00 1c 00 00 00  58 0a 00 00 18 42 00 00   |........X....B..|
0x1eabb8:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1eabc8:   04 04 00 00 1c 00 00 00  78 0a 00 00 2e 42 00 00   |........x....B..|
0x1eabd8:   53 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4f c5   |S....A....B...O.|
0x1eabe8:   0c 04 04 00 1c 00 00 00  98 0a 00 00 62 42 00 00   |............bB..|
0x1eabf8:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1eac08:   0c 04 04 00 1c 00 00 00  b8 0a 00 00 94 42 00 00   |.............B..|
0x1eac18:   77 00 00 00 00 41 0e 08  85 02 42 0d 05 02 71 c5   |w....A....B...q.|
0x1eac28:   0c 04 04 00 1c 00 00 00  d8 0a 00 00 ec 42 00 00   |.............B..|
0x1eac38:   75 00 00 00 00 41 0e 08  85 02 42 0d 05 02 71 c5   |u....A....B...q.|
0x1eac48:   0c 04 04 00 1c 00 00 00  f8 0a 00 00 42 43 00 00   |............BC..|
0x1eac58:   38 00 00 00 00 41 0e 08  85 02 42 0d 05 74 c5 0c   |8....A....B..t..|
0x1eac68:   04 04 00 00 1c 00 00 00  18 0b 00 00 5a 43 00 00   |............ZC..|
0x1eac78:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1eac88:   0c 04 04 00 1c 00 00 00  38 0b 00 00 8c 43 00 00   |........8....C..|
0x1eac98:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1eaca8:   0c 04 04 00 1c 00 00 00  58 0b 00 00 c2 43 00 00   |........X....C..|
0x1eacb8:   40 00 00 00 00 41 0e 08  85 02 42 0d 05 7c c5 0c   |@....A....B..|..|
0x1eacc8:   04 04 00 00 1c 00 00 00  78 0b 00 00 e2 43 00 00   |........x....C..|
0x1eacd8:   39 00 00 00 00 41 0e 08  85 02 42 0d 05 75 c5 0c   |9....A....B..u..|
0x1eace8:   04 04 00 00 1c 00 00 00  98 0b 00 00 fc 43 00 00   |.............C..|
0x1eacf8:   47 00 00 00 00 41 0e 08  85 02 42 0d 05 02 43 c5   |G....A....B...C.|
0x1ead08:   0c 04 04 00 1c 00 00 00  b8 0b 00 00 23 44 00 00   |............#D..|
0x1ead18:   5a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 56 c5   |Z....A....B...V.|
0x1ead28:   0c 04 04 00 1c 00 00 00  d8 0b 00 00 5e 44 00 00   |............^D..|
0x1ead38:   2f 00 00 00 00 41 0e 08  85 02 42 0d 05 6b c5 0c   |/....A....B..k..|
0x1ead48:   04 04 00 00 1c 00 00 00  f8 0b 00 00 6e 44 00 00   |............nD..|
0x1ead58:   30 00 00 00 00 41 0e 08  85 02 42 0d 05 6c c5 0c   |0....A....B..l..|
0x1ead68:   04 04 00 00 20 00 00 00  18 0c 00 00 7e 44 00 00   |.... .......~D..|
0x1ead78:   6a 00 00 00 00 41 0e 08  85 02 42 0d 05 68 83 03   |j....A....B..h..|
0x1ead88:   7c c5 0c 04 04 c3 00 00  1c 00 00 00 3c 0c 00 00   ||...........<...|
0x1ead98:   c4 44 00 00 54 00 00 00  00 41 0e 08 85 02 42 0d   |.D..T....A....B.|
0x1eada8:   05 02 4e c5 0c 04 04 00  1c 00 00 00 5c 0c 00 00   |..N.........\...|
0x1eadb8:   f8 44 00 00 6b 00 00 00  00 41 0e 08 85 02 42 0d   |.D..k....A....B.|
0x1eadc8:   05 02 67 c5 0c 04 04 00  1c 00 00 00 7c 0c 00 00   |..g.........|...|
0x1eadd8:   44 45 00 00 70 00 00 00  00 41 0e 08 85 02 42 0d   |DE..p....A....B.|
0x1eade8:   05 02 6c c5 0c 04 04 00  1c 00 00 00 9c 0c 00 00   |..l.............|
0x1eadf8:   94 45 00 00 a9 00 00 00  00 41 0e 08 85 02 42 0d   |.E.......A....B.|
0x1eae08:   05 02 a5 c5 0c 04 04 00  28 00 00 00 84 07 00 00   |........(.......|
0x1eae18:   1e 46 00 00 94 00 00 00  04 08 2c 00 00 41 0e 08   |.F........,..A..|
0x1eae28:   85 02 42 0d 05 68 83 04  86 03 02 66 c3 41 c6 41   |..B..h.....f.A.A|
0x1eae38:   0c 04 04 c5 1c 00 00 00  e8 0c 00 00 86 46 00 00   |.............F..|
0x1eae48:   40 00 00 00 00 41 0e 08  85 02 42 0d 05 7c c5 0c   |@....A....B..|..|
0x1eae58:   04 04 00 00 24 00 00 00  d0 07 00 00 a6 46 00 00   |....$........F..|
0x1eae68:   1a 01 00 00 04 20 2c 00  00 41 0e 08 85 02 42 0d   |..... ,..A....B.|
0x1eae78:   05 5e 83 03 02 f8 c5 0c  04 04 c3 00 1c 00 00 00   |.^..............|
0x1eae88:   30 0d 00 00 98 47 00 00  35 00 00 00 00 41 0e 08   |0....G..5....A..|
0x1eae98:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1eaea8:   50 0d 00 00 ae 47 00 00  42 00 00 00 00 41 0e 08   |P....G..B....A..|
0x1eaeb8:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1eaec8:   70 0d 00 00 d0 47 00 00  2b 00 00 00 00 41 0e 08   |p....G..+....A..|
0x1eaed8:   85 02 42 0d 05 67 c5 0c  04 04 00 00 24 00 00 00   |..B..g......$...|
0x1eaee8:   58 08 00 00 db 47 00 00  97 00 00 00 04 59 2c 00   |X....G.......Y,.|
0x1eaef8:   00 41 0e 08 85 02 42 0d  05 6e 83 03 02 62 c3 41   |.A....B..n...b.A|
0x1eaf08:   0c 04 04 c5 2c 00 00 00  80 08 00 00 4a 48 00 00   |....,.......JH..|
0x1eaf18:   e6 01 00 00 04 6e 2c 00  00 41 0e 08 85 02 42 0d   |.....n,..A....B.|
0x1eaf28:   05 62 83 04 86 03 03 be  01 c3 41 c6 41 0c 04 04   |.b........A.A...|
0x1eaf38:   c5 00 00 00 24 00 00 00  b0 08 00 00 00 4a 00 00   |....$........J..|
0x1eaf48:   ba 01 00 00 04 88 2c 00  00 41 0e 08 85 02 42 0d   |......,..A....B.|
0x1eaf58:   05 69 83 03 03 8b 01 c5  0c 04 04 c3 24 00 00 00   |.i..........$...|
0x1eaf68:   d8 08 00 00 92 4b 00 00  90 00 00 00 04 a6 2c 00   |.....K........,.|
0x1eaf78:   00 41 0e 08 85 02 42 0d  05 6e 83 03 02 5e c5 0c   |.A....B..n...^..|
0x1eaf88:   04 04 c3 00 1c 00 00 00  38 0e 00 00 fa 4b 00 00   |........8....K..|
0x1eaf98:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1eafa8:   04 04 00 00 24 00 00 00  20 09 00 00 10 4c 00 00   |....$... ....L..|
0x1eafb8:   ad 00 00 00 04 bb 2c 00  00 41 0e 08 85 02 42 0d   |......,..A....B.|
0x1eafc8:   05 61 83 03 02 88 c5 0c  04 04 c3 00 1c 00 00 00   |.a..............|
0x1eafd8:   80 0e 00 00 96 4c 00 00  35 00 00 00 00 41 0e 08   |.....L..5....A..|
0x1eafe8:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1eaff8:   a0 0e 00 00 ac 4c 00 00  38 00 00 00 00 41 0e 08   |.....L..8....A..|
0x1eb008:   85 02 42 0d 05 74 c5 0c  04 04 00 00 24 00 00 00   |..B..t......$...|
0x1eb018:   88 09 00 00 c4 4c 00 00  f2 00 00 00 04 c9 2c 00   |.....L........,.|
0x1eb028:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 c7 c5 0c   |.A....B..g......|
0x1eb038:   04 04 c3 00 1c 00 00 00  e8 0e 00 00 8e 4d 00 00   |.............M..|
0x1eb048:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1eb058:   0c 04 04 00 24 00 00 00  d0 09 00 00 c0 4d 00 00   |....$........M..|
0x1eb068:   64 00 00 00 04 e0 2c 00  00 41 0e 08 85 02 42 0d   |d.....,..A....B.|
0x1eb078:   05 5e 83 03 02 41 c3 41  0c 04 04 c5 1c 00 00 00   |.^...A.A........|
0x1eb088:   30 0f 00 00 fc 4d 00 00  48 00 00 00 00 41 0e 08   |0....M..H....A..|
0x1eb098:   85 02 42 0d 05 02 44 c5  0c 04 04 00 1c 00 00 00   |..B...D.........|
0x1eb0a8:   50 0f 00 00 24 4e 00 00  3a 00 00 00 00 41 0e 08   |P...$N..:....A..|
0x1eb0b8:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1eb0c8:   70 0f 00 00 3e 4e 00 00  38 00 00 00 00 41 0e 08   |p...>N..8....A..|
0x1eb0d8:   85 02 42 0d 05 74 c5 0c  04 04 00 00 28 00 00 00   |..B..t......(...|
0x1eb0e8:   90 0f 00 00 56 4e 00 00  0f 01 00 00 00 41 0e 08   |....VN.......A..|
0x1eb0f8:   85 02 42 0d 05 02 52 83  04 86 03 02 b7 c3 41 c6   |..B...R.......A.|
0x1eb108:   41 0c 04 04 c5 00 00 00  1c 00 00 00 bc 0f 00 00   |A...............|
0x1eb118:   3a 4f 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |:O..8....A....B.|
0x1eb128:   05 74 c5 0c 04 04 00 00  1c 00 00 00 dc 0f 00 00   |.t..............|
0x1eb138:   52 4f 00 00 58 00 00 00  00 41 0e 08 85 02 42 0d   |RO..X....A....B.|
0x1eb148:   05 02 54 c5 0c 04 04 00  24 00 00 00 c4 0a 00 00   |..T.....$.......|
0x1eb158:   8a 4f 00 00 c1 00 00 00  04 f0 2c 00 00 41 0e 08   |.O........,..A..|
0x1eb168:   85 02 42 0d 05 61 83 03  02 9b c3 41 0c 04 04 c5   |..B..a.....A....|
0x1eb178:   24 00 00 00 ec 0a 00 00  24 50 00 00 d1 00 00 00   |$.......$P......|
0x1eb188:   04 08 2d 00 00 41 0e 08  85 02 42 0d 05 57 83 03   |..-..A....B..W..|
0x1eb198:   02 b5 c3 41 0c 04 04 c5  1c 00 00 00 4c 10 00 00   |...A........L...|
0x1eb1a8:   ce 50 00 00 11 03 00 00  00 41 0e 08 85 02 42 0d   |.P.......A....B.|
0x1eb1b8:   05 03 0d 03 c5 0c 04 04  1c 00 00 00 6c 10 00 00   |............l...|
0x1eb1c8:   c0 53 00 00 91 01 00 00  00 41 0e 08 85 02 42 0d   |.S.......A....B.|
0x1eb1d8:   05 03 8d 01 c5 0c 04 04  1c 00 00 00 8c 10 00 00   |................|
0x1eb1e8:   32 55 00 00 51 00 00 00  00 41 0e 08 85 02 42 0d   |2U..Q....A....B.|
0x1eb1f8:   05 02 4d c5 0c 04 04 00  1c 00 00 00 ac 10 00 00   |..M.............|
0x1eb208:   64 55 00 00 8d 00 00 00  00 41 0e 08 85 02 42 0d   |dU.......A....B.|
0x1eb218:   05 02 89 c5 0c 04 04 00  1c 00 00 00 cc 10 00 00   |................|
0x1eb228:   d2 55 00 00 30 00 00 00  00 41 0e 08 85 02 42 0d   |.U..0....A....B.|
0x1eb238:   05 6c c5 0c 04 04 00 00  28 00 00 00 ec 10 00 00   |.l......(.......|
0x1eb248:   e2 55 00 00 fc 00 00 00  00 41 0e 08 85 02 42 0d   |.U.......A....B.|
0x1eb258:   05 02 47 83 04 86 03 02  af c3 41 c6 41 0c 04 04   |..G.......A.A...|
0x1eb268:   c5 00 00 00 20 00 00 00  18 11 00 00 b2 56 00 00   |.... ........V..|
0x1eb278:   d2 00 00 00 00 41 0e 08  85 02 42 0d 05 02 5f 83   |.....A....B..._.|
0x1eb288:   03 02 6f c5 0c 04 04 c3  2c 00 00 00 3c 11 00 00   |..o.....,...<...|
0x1eb298:   60 57 00 00 9f 02 00 00  00 41 0e 08 85 02 42 0d   |`W.......A....B.|
0x1eb2a8:   05 02 48 83 05 86 04 87  03 03 50 02 c3 41 c6 41   |..H.......P..A.A|
0x1eb2b8:   c7 41 0c 04 04 c5 00 00  1c 00 00 00 6c 11 00 00   |.A..........l...|
0x1eb2c8:   d0 59 00 00 03 01 00 00  00 41 0e 08 85 02 42 0d   |.Y.......A....B.|
0x1eb2d8:   05 02 ff c5 0c 04 04 00  1c 00 00 00 8c 11 00 00   |................|
0x1eb2e8:   b4 5a 00 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.Z..8....A....B.|
0x1eb2f8:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ac 11 00 00   |.t..............|
0x1eb308:   cc 5a 00 00 6b 00 00 00  00 41 0e 08 85 02 42 0d   |.Z..k....A....B.|
0x1eb318:   05 02 65 c5 0c 04 04 00  20 00 00 00 cc 11 00 00   |..e..... .......|
0x1eb328:   18 5b 00 00 6a 00 00 00  00 41 0e 08 85 02 42 0d   |.[..j....A....B.|
0x1eb338:   05 5e 83 03 02 47 c3 41  0c 04 04 c5 20 00 00 00   |.^...G.A.... ...|
0x1eb348:   f0 11 00 00 5e 5b 00 00  ab 00 00 00 00 41 0e 08   |....^[.......A..|
0x1eb358:   85 02 42 0d 05 5b 83 03  02 8c c5 0c 04 04 c3 00   |..B..[..........|
0x1eb368:   2c 00 00 00 dc 0c 00 00  e6 5b 00 00 23 01 00 00   |,........[..#...|
0x1eb378:   04 20 2d 00 00 41 0e 08  85 02 42 0d 05 6a 83 05   |. -..A....B..j..|
0x1eb388:   86 04 87 03 02 f0 c3 41  c6 41 c7 41 0c 04 04 c5   |.......A.A.A....|
0x1eb398:   1c 00 00 00 44 12 00 00  da 5c 00 00 61 00 00 00   |....D....\..a...|
0x1eb3a8:   00 41 0e 08 85 02 42 0d  05 02 5d c5 0c 04 04 00   |.A....B...].....|
0x1eb3b8:   2c 00 00 00 64 12 00 00  1c 5d 00 00 f2 03 00 00   |,...d....]......|
0x1eb3c8:   00 41 0e 08 85 02 42 0d  05 02 4c 83 05 86 04 87   |.A....B...L.....|
0x1eb3d8:   03 03 9f 03 c3 41 c6 41  c7 41 0c 04 04 c5 00 00   |.....A.A.A......|
0x1eb3e8:   1c 00 00 00 94 12 00 00  de 60 00 00 f1 00 00 00   |.........`......|
0x1eb3f8:   00 41 0e 08 85 02 42 0d  05 02 eb c5 0c 04 04 00   |.A....B.........|
0x1eb408:   1c 00 00 00 b4 12 00 00  b0 61 00 00 4a 00 00 00   |.........a..J...|
0x1eb418:   00 41 0e 08 85 02 42 0d  05 02 46 c5 0c 04 04 00   |.A....B...F.....|
0x1eb428:   1c 00 00 00 d4 12 00 00  da 61 00 00 40 00 00 00   |.........a..@...|
0x1eb438:   00 41 0e 08 85 02 42 0d  05 7c c5 0c 04 04 00 00   |.A....B..|......|
0x1eb448:   1c 00 00 00 f4 12 00 00  fa 61 00 00 47 00 00 00   |.........a..G...|
0x1eb458:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x1eb468:   1c 00 00 00 14 13 00 00  22 62 00 00 55 00 00 00   |........"b..U...|
0x1eb478:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1eb488:   1c 00 00 00 34 13 00 00  58 62 00 00 2f 00 00 00   |....4...Xb../...|
0x1eb498:   00 41 0e 08 85 02 42 0d  05 6b c5 0c 04 04 00 00   |.A....B..k......|
0x1eb4a8:   1c 00 00 00 54 13 00 00  68 62 00 00 30 00 00 00   |....T...hb..0...|
0x1eb4b8:   00 41 0e 08 85 02 42 0d  05 6c c5 0c 04 04 00 00   |.A....B..l......|
0x1eb4c8:   1c 00 00 00 74 13 00 00  78 62 00 00 40 00 00 00   |....t...xb..@...|
0x1eb4d8:   00 41 0e 08 85 02 42 0d  05 7c c5 0c 04 04 00 00   |.A....B..|......|
0x1eb4e8:   1c 00 00 00 94 13 00 00  98 62 00 00 34 00 00 00   |.........b..4...|
0x1eb4f8:   00 41 0e 08 85 02 42 0d  05 70 c5 0c 04 04 00 00   |.A....B..p......|
0x1eb508:   1c 00 00 00 b4 13 00 00  ac 62 00 00 3b 00 00 00   |.........b..;...|
0x1eb518:   00 41 0e 08 85 02 42 0d  05 77 c5 0c 04 04 00 00   |.A....B..w......|
0x1eb528:   1c 00 00 00 d4 13 00 00  c8 62 00 00 48 00 00 00   |.........b..H...|
0x1eb538:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1eb548:   1c 00 00 00 f4 13 00 00  f0 62 00 00 35 00 00 00   |.........b..5...|
0x1eb558:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1eb568:   1c 00 00 00 14 14 00 00  06 63 00 00 35 00 00 00   |.........c..5...|
0x1eb578:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1eb588:   1c 00 00 00 34 14 00 00  1c 63 00 00 4c 00 00 00   |....4....c..L...|
0x1eb598:   00 41 0e 08 85 02 42 0d  05 02 48 c5 0c 04 04 00   |.A....B...H.....|
0x1eb5a8:   1c 00 00 00 54 14 00 00  a8 eb ff ff 15 01 00 00   |....T...........|
0x1eb5b8:   00 41 0e 08 85 02 42 0d  05 03 11 01 c5 0c 04 04   |.A....B.........|
0x1eb5c8:   1c 00 00 00 74 14 00 00  9d ec ff ff 4d 00 00 00   |....t.......M...|
0x1eb5d8:   00 41 0e 08 85 02 42 0d  05 02 49 c5 0c 04 04 00   |.A....B...I.....|
0x1eb5e8:   1c 00 00 00 94 14 00 00  08 63 00 00 33 00 00 00   |.........c..3...|
0x1eb5f8:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1eb608:   28 00 00 00 7c 0f 00 00  aa ec ff ff 12 01 00 00   |(...|...........|
0x1eb618:   04 42 2d 00 00 41 0e 08  85 02 42 0d 05 6e 83 04   |.B-..A....B..n..|
0x1eb628:   86 03 02 de c3 41 c6 41  0c 04 04 c5 1c 00 00 00   |.....A.A........|
0x1eb638:   e0 14 00 00 90 ed ff ff  a2 00 00 00 00 41 0e 08   |.............A..|
0x1eb648:   85 02 42 0d 05 02 9e c5  0c 04 04 00 24 00 00 00   |..B.........$...|
0x1eb658:   c8 0f 00 00 12 ee ff ff  a4 00 00 00 04 67 2d 00   |.............g-.|
0x1eb668:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 78 c3 41   |.A....B..g...x.A|
0x1eb678:   0c 04 04 c5 1c 00 00 00  28 15 00 00 8e ee ff ff   |........(.......|
0x1eb688:   95 00 00 00 00 41 0e 08  85 02 42 0d 05 02 91 c5   |.....A....B.....|
0x1eb698:   0c 04 04 00 1c 00 00 00  48 15 00 00 04 ef ff ff   |........H.......|
0x1eb6a8:   c1 00 00 00 00 41 0e 08  85 02 42 0d 05 02 bd c5   |.....A....B.....|
0x1eb6b8:   0c 04 04 00 24 00 00 00  30 10 00 00 a6 ef ff ff   |....$...0.......|
0x1eb6c8:   ab 00 00 00 04 7d 2d 00  00 41 0e 08 85 02 42 0d   |.....}-..A....B.|
0x1eb6d8:   05 61 83 03 02 86 c5 0c  04 04 c3 00 24 00 00 00   |.a..........$...|
0x1eb6e8:   58 10 00 00 2a f0 ff ff  5d 01 00 00 04 93 2d 00   |X...*...].....-.|
0x1eb6f8:   00 41 0e 08 85 02 42 0d  05 67 83 03 03 32 01 c5   |.A....B..g...2..|
0x1eb708:   0c 04 04 c3 2c 00 00 00  80 10 00 00 60 f1 ff ff   |....,.......`...|
0x1eb718:   57 01 00 00 04 ab 2d 00  00 41 0e 08 85 02 42 0d   |W.....-..A....B.|
0x1eb728:   05 6c 83 04 86 03 03 25  01 c3 41 c6 41 0c 04 04   |.l.....%..A.A...|
0x1eb738:   c5 00 00 00 1c 00 00 00  e8 15 00 00 88 f2 ff ff   |................|
0x1eb748:   b7 00 00 00 00 41 0e 08  85 02 42 0d 05 02 b3 c5   |.....A....B.....|
0x1eb758:   0c 04 04 00 1c 00 00 00  08 16 00 00 20 f3 ff ff   |............ ...|
0x1eb768:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 02 49 c5   |M....A....B...I.|
0x1eb778:   0c 04 04 00 1c 00 00 00  28 16 00 00 4e f3 ff ff   |........(...N...|
0x1eb788:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1eb798:   0c 04 04 00 1c 00 00 00  48 16 00 00 84 f3 ff ff   |........H.......|
0x1eb7a8:   74 00 00 00 00 41 0e 08  85 02 42 0d 05 02 70 c5   |t....A....B...p.|
0x1eb7b8:   0c 04 04 00 1c 00 00 00  68 16 00 00 d8 f3 ff ff   |........h.......|
0x1eb7c8:   6c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 68 c5   |l....A....B...h.|
0x1eb7d8:   0c 04 04 00 1c 00 00 00  88 16 00 00 24 f4 ff ff   |............$...|
0x1eb7e8:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1eb7f8:   0c 04 04 00 1c 00 00 00  a8 16 00 00 5a f4 ff ff   |............Z...|
0x1eb808:   7f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 7b c5   |.....A....B...{.|
0x1eb818:   0c 04 04 00 1c 00 00 00  c8 16 00 00 ba f4 ff ff   |................|
0x1eb828:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1eb838:   0c 04 04 00 1c 00 00 00  e8 16 00 00 ec f4 ff ff   |................|
0x1eb848:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 02 49 c5   |M....A....B...I.|
0x1eb858:   0c 04 04 00 1c 00 00 00  08 17 00 00 c8 60 00 00   |.............`..|
0x1eb868:   38 00 00 00 00 41 0e 08  85 02 42 0d 05 74 c5 0c   |8....A....B..t..|
0x1eb878:   04 04 00 00 2c 00 00 00  f0 11 00 00 fa f4 ff ff   |....,...........|
0x1eb888:   e9 06 00 00 04 e8 2d 00  00 41 0e 08 85 02 42 0d   |......-..A....B.|
0x1eb898:   05 71 83 04 86 03 03 b2  06 c3 41 c6 41 0c 04 04   |.q........A.A...|
0x1eb8a8:   c5 00 00 00 1c 00 00 00  58 17 00 00 b4 fb ff ff   |........X.......|
0x1eb8b8:   9f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 9b c5   |.....A....B.....|
0x1eb8c8:   0c 04 04 00 24 00 00 00  40 12 00 00 34 fc ff ff   |....$...@...4...|
0x1eb8d8:   66 01 00 00 04 38 2e 00  00 41 0e 08 85 02 42 0d   |f....8...A....B.|
0x1eb8e8:   05 64 83 03 03 3e 01 c5  0c 04 04 c3 1c 00 00 00   |.d...>..........|
0x1eb8f8:   a0 17 00 00 68 60 00 00  38 00 00 00 00 41 0e 08   |....h`..8....A..|
0x1eb908:   85 02 42 0d 05 74 c5 0c  04 04 00 00 24 00 00 00   |..B..t......$...|
0x1eb918:   88 12 00 00 52 fd ff ff  e1 00 00 00 04 50 2e 00   |....R........P..|
0x1eb928:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 b6 c5 0c   |.A....B..g......|
0x1eb938:   04 04 c3 00 24 00 00 00  b0 12 00 00 0c fe ff ff   |....$...........|
0x1eb948:   e3 00 00 00 04 73 2e 00  00 41 0e 08 85 02 42 0d   |.....s...A....B.|
0x1eb958:   05 6e 83 03 02 b1 c5 0c  04 04 c3 00 2c 00 00 00   |.n..........,...|
0x1eb968:   d8 12 00 00 c8 fe ff ff  61 06 00 00 04 94 2e 00   |........a.......|
0x1eb978:   00 41 0e 08 85 02 42 0d  05 65 83 04 86 03 03 36   |.A....B..e.....6|
0x1eb988:   06 c3 41 c6 41 0c 04 04  c5 00 00 00 20 00 00 00   |..A.A....... ...|
0x1eb998:   40 18 00 00 00 60 00 00  66 00 00 00 00 41 0e 08   |@....`..f....A..|
0x1eb9a8:   85 02 42 0d 05 67 83 03  7a c3 41 0c 04 04 c5 00   |..B..g..z.A.....|
0x1eb9b8:   1c 00 00 00 64 18 00 00  42 60 00 00 3d 00 00 00   |....d...B`..=...|
0x1eb9c8:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x1eb9d8:   1c 00 00 00 84 18 00 00  60 60 00 00 38 00 00 00   |........``..8...|
0x1eb9e8:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1eb9f8:   1c 00 00 00 a4 18 00 00  78 60 00 00 88 00 00 00   |........x`......|
0x1eba08:   00 41 0e 08 85 02 42 0d  05 02 84 c5 0c 04 04 00   |.A....B.........|
0x1eba18:   1c 00 00 00 c4 18 00 00  e0 60 00 00 6a 00 00 00   |.........`..j...|
0x1eba28:   00 41 0e 08 85 02 42 0d  05 02 66 c5 0c 04 04 00   |.A....B...f.....|
0x1eba38:   1c 00 00 00 e4 18 00 00  2a 61 00 00 33 00 00 00   |........*a..3...|
0x1eba48:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1eba58:   1c 00 00 00 04 19 00 00  3e 61 00 00 35 00 00 00   |........>a..5...|
0x1eba68:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1eba78:   1c 00 00 00 24 19 00 00  54 61 00 00 2f 00 00 00   |....$...Ta../...|
0x1eba88:   00 41 0e 08 85 02 42 0d  05 6b c5 0c 04 04 00 00   |.A....B..k......|
0x1eba98:   1c 00 00 00 44 19 00 00  64 61 00 00 47 00 00 00   |....D...da..G...|
0x1ebaa8:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x1ebab8:   1c 00 00 00 64 19 00 00  8c 61 00 00 39 00 00 00   |....d....a..9...|
0x1ebac8:   00 41 0e 08 85 02 42 0d  05 75 c5 0c 04 04 00 00   |.A....B..u......|
0x1ebad8:   1c 00 00 00 84 19 00 00  a5 61 00 00 56 00 00 00   |.........a..V...|
0x1ebae8:   00 41 0e 08 85 02 42 0d  05 02 52 c5 0c 04 04 00   |.A....B...R.....|
0x1ebaf8:   1c 00 00 00 a4 19 00 00  dc 61 00 00 35 00 00 00   |.........a..5...|
0x1ebb08:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1ebb18:   24 00 00 00 8c 14 00 00  f2 61 00 00 79 00 00 00   |$........a..y...|
0x1ebb28:   04 fc 2e 00 00 41 0e 08  85 02 42 0d 05 5b 83 03   |.....A....B..[..|
0x1ebb38:   02 59 c3 41 0c 04 04 c5  1c 00 00 00 ec 19 00 00   |.Y.A............|
0x1ebb48:   44 62 00 00 35 00 00 00  00 41 0e 08 85 02 42 0d   |Db..5....A....B.|
0x1ebb58:   05 71 c5 0c 04 04 00 00  1c 00 00 00 0c 1a 00 00   |.q..............|
0x1ebb68:   5a 62 00 00 35 00 00 00  00 41 0e 08 85 02 42 0d   |Zb..5....A....B.|
0x1ebb78:   05 71 c5 0c 04 04 00 00  24 00 00 00 f4 14 00 00   |.q......$.......|
0x1ebb88:   70 62 00 00 89 00 00 00  04 0c 2f 00 00 41 0e 08   |pb......../..A..|
0x1ebb98:   85 02 42 0d 05 74 83 03  02 50 c3 41 0c 04 04 c5   |..B..t...P.A....|
0x1ebba8:   1c 00 00 00 54 1a 00 00  d2 62 00 00 4f 00 00 00   |....T....b..O...|
0x1ebbb8:   00 41 0e 08 85 02 42 0d  05 02 49 c5 0c 04 04 00   |.A....B...I.....|
0x1ebbc8:   1c 00 00 00 74 1a 00 00  02 63 00 00 50 00 00 00   |....t....c..P...|
0x1ebbd8:   00 41 0e 08 85 02 42 0d  05 02 4a c5 0c 04 04 00   |.A....B...J.....|
0x1ebbe8:   1c 00 00 00 94 1a 00 00  32 63 00 00 4f 00 00 00   |........2c..O...|
0x1ebbf8:   00 41 0e 08 85 02 42 0d  05 02 49 c5 0c 04 04 00   |.A....B...I.....|
0x1ebc08:   1c 00 00 00 b4 1a 00 00  62 63 00 00 50 00 00 00   |........bc..P...|
0x1ebc18:   00 41 0e 08 85 02 42 0d  05 02 4a c5 0c 04 04 00   |.A....B...J.....|
0x1ebc28:   1c 00 00 00 d4 1a 00 00  92 63 00 00 4a 00 00 00   |.........c..J...|
0x1ebc38:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1ebc48:   1c 00 00 00 f4 1a 00 00  bc 63 00 00 6d 00 00 00   |.........c..m...|
0x1ebc58:   00 41 0e 08 85 02 42 0d  05 02 69 c5 0c 04 04 00   |.A....B...i.....|
0x1ebc68:   1c 00 00 00 14 1b 00 00  0a 64 00 00 5c 00 00 00   |.........d..\...|
0x1ebc78:   00 41 0e 08 85 02 42 0d  05 02 56 c5 0c 04 04 00   |.A....B...V.....|
0x1ebc88:   1c 00 00 00 34 1b 00 00  46 64 00 00 3d 00 00 00   |....4...Fd..=...|
0x1ebc98:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x1ebca8:   1c 00 00 00 54 1b 00 00  64 64 00 00 19 01 00 00   |....T...dd......|
0x1ebcb8:   00 41 0e 08 85 02 42 0d  05 03 15 01 c5 0c 04 04   |.A....B.........|
0x1ebcc8:   1c 00 00 00 74 1b 00 00  5e 65 00 00 38 00 00 00   |....t...^e..8...|
0x1ebcd8:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1ebce8:   1c 00 00 00 94 1b 00 00  76 65 00 00 3e 00 00 00   |........ve..>...|
0x1ebcf8:   00 41 0e 08 85 02 42 0d  05 7a c5 0c 04 04 00 00   |.A....B..z......|
0x1ebd08:   1c 00 00 00 b4 1b 00 00  94 65 00 00 60 00 00 00   |.........e..`...|
0x1ebd18:   00 41 0e 08 85 02 42 0d  05 02 5c c5 0c 04 04 00   |.A....B...\.....|
0x1ebd28:   20 00 00 00 d4 1b 00 00  d4 65 00 00 57 00 00 00   | ........e..W...|
0x1ebd38:   00 41 0e 08 85 02 42 0d  05 61 83 03 71 c3 41 0c   |.A....B..a..q.A.|
0x1ebd48:   04 04 c5 00 1c 00 00 00  f8 1b 00 00 08 66 00 00   |.............f..|
0x1ebd58:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ebd68:   0c 04 04 00 1c 00 00 00  18 1c 00 00 42 66 00 00   |............Bf..|
0x1ebd78:   5b 00 00 00 00 41 0e 08  85 02 42 0d 05 02 57 c5   |[....A....B...W.|
0x1ebd88:   0c 04 04 00 1c 00 00 00  38 1c 00 00 7d 66 00 00   |........8...}f..|
0x1ebd98:   5e 00 00 00 00 41 0e 08  85 02 42 0d 05 02 5a c5   |^....A....B...Z.|
0x1ebda8:   0c 04 04 00 1c 00 00 00  58 1c 00 00 bc 66 00 00   |........X....f..|
0x1ebdb8:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ebdc8:   04 04 00 00 24 00 00 00  40 17 00 00 d2 66 00 00   |....$...@....f..|
0x1ebdd8:   79 00 00 00 04 1c 2f 00  00 41 0e 08 85 02 42 0d   |y...../..A....B.|
0x1ebde8:   05 5b 83 03 02 59 c3 41  0c 04 04 c5 1c 00 00 00   |.[...Y.A........|
0x1ebdf8:   a0 1c 00 00 24 67 00 00  35 00 00 00 00 41 0e 08   |....$g..5....A..|
0x1ebe08:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1ebe18:   c0 1c 00 00 3a 67 00 00  35 00 00 00 00 41 0e 08   |....:g..5....A..|
0x1ebe28:   85 02 42 0d 05 71 c5 0c  04 04 00 00 24 00 00 00   |..B..q......$...|
0x1ebe38:   a8 17 00 00 50 67 00 00  8c 00 00 00 04 2c 2f 00   |....Pg.......,/.|
0x1ebe48:   00 41 0e 08 85 02 42 0d  05 7b 83 03 02 4c c3 41   |.A....B..{...L.A|
0x1ebe58:   0c 04 04 c5 2c 00 00 00  08 1d 00 00 b4 67 00 00   |....,........g..|
0x1ebe68:   61 02 00 00 00 41 0e 08  85 02 42 0d 05 69 83 05   |a....A....B..i..|
0x1ebe78:   86 04 87 03 03 31 02 c3  41 c6 41 c7 41 0c 04 04   |.....1..A.A.A...|
0x1ebe88:   c5 00 00 00 1c 00 00 00  38 1d 00 00 e6 69 00 00   |........8....i..|
0x1ebe98:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebea8:   04 04 00 00 1c 00 00 00  58 1d 00 00 f0 69 00 00   |........X....i..|
0x1ebeb8:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebec8:   04 04 00 00 1c 00 00 00  78 1d 00 00 fa 69 00 00   |........x....i..|
0x1ebed8:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebee8:   04 04 00 00 1c 00 00 00  98 1d 00 00 04 6a 00 00   |.............j..|
0x1ebef8:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebf08:   04 04 00 00 1c 00 00 00  b8 1d 00 00 0e 6a 00 00   |.............j..|
0x1ebf18:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebf28:   04 04 00 00 1c 00 00 00  d8 1d 00 00 18 6a 00 00   |.............j..|
0x1ebf38:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebf48:   04 04 00 00 1c 00 00 00  f8 1d 00 00 22 6a 00 00   |............"j..|
0x1ebf58:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebf68:   04 04 00 00 1c 00 00 00  18 1e 00 00 2c 6a 00 00   |............,j..|
0x1ebf78:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebf88:   04 04 00 00 1c 00 00 00  38 1e 00 00 36 6a 00 00   |........8...6j..|
0x1ebf98:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1ebfa8:   04 04 00 00 1c 00 00 00  58 1e 00 00 40 6a 00 00   |........X...@j..|
0x1ebfb8:   4e 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4a c5   |N....A....B...J.|
0x1ebfc8:   0c 04 04 00 1c 00 00 00  78 1e 00 00 6e 6a 00 00   |........x...nj..|
0x1ebfd8:   45 00 00 00 00 41 0e 08  85 02 42 0d 05 02 41 c5   |E....A....B...A.|
0x1ebfe8:   0c 04 04 00 1c 00 00 00  98 1e 00 00 94 6a 00 00   |.............j..|
0x1ebff8:   56 00 00 00 00 41 0e 08  85 02 42 0d 05 02 52 c5   |V....A....B...R.|
0x1ec008:   0c 04 04 00 10 00 00 00  b8 1e 00 00 ca 6a 00 00   |.............j..|
0x1ec018:   0a 00 00 00 00 00 00 00  1c 00 00 00 cc 1e 00 00   |................|
0x1ec028:   c0 6a 00 00 6d 00 00 00  00 41 0e 08 85 02 42 0d   |.j..m....A....B.|
0x1ec038:   05 02 69 c5 0c 04 04 00  10 00 00 00 ec 1e 00 00   |..i.............|
0x1ec048:   0e 6b 00 00 07 00 00 00  00 00 00 00 1c 00 00 00   |.k..............|
0x1ec058:   00 1f 00 00 02 6b 00 00  40 00 00 00 00 41 0e 08   |.....k..@....A..|
0x1ec068:   85 02 42 0d 05 7c c5 0c  04 04 00 00 1c 00 00 00   |..B..|..........|
0x1ec078:   20 1f 00 00 22 6b 00 00  4b 00 00 00 00 41 0e 08   | ..."k..K....A..|
0x1ec088:   85 02 42 0d 05 02 47 c5  0c 04 04 00 1c 00 00 00   |..B...G.........|
0x1ec098:   40 1f 00 00 4e 6b 00 00  6d 00 00 00 00 41 0e 08   |@...Nk..m....A..|
0x1ec0a8:   85 02 42 0d 05 02 69 c5  0c 04 04 00 1c 00 00 00   |..B...i.........|
0x1ec0b8:   60 1f 00 00 9c 6b 00 00  77 00 00 00 00 41 0e 08   |`....k..w....A..|
0x1ec0c8:   85 02 42 0d 05 02 73 c5  0c 04 04 00 30 00 00 00   |..B...s.....0...|
0x1ec0d8:   48 1a 00 00 f8 6b 00 00  af 01 00 00 04 3c 2f 00   |H....k.......</.|
0x1ec0e8:   00 41 0e 08 85 02 42 0d  05 5d 83 05 86 04 87 03   |.A....B..]......|
0x1ec0f8:   03 89 01 c3 41 c6 41 c7  41 0c 04 04 c5 00 00 00   |....A.A.A.......|
0x1ec108:   1c 00 00 00 b4 1f 00 00  74 6d 00 00 2f 00 00 00   |........tm../...|
0x1ec118:   00 41 0e 08 85 02 42 0d  05 6b c5 0c 04 04 00 00   |.A....B..k......|
0x1ec128:   1c 00 00 00 d4 1f 00 00  84 6d 00 00 87 00 00 00   |.........m......|
0x1ec138:   00 41 0e 08 85 02 42 0d  05 02 83 c5 0c 04 04 00   |.A....B.........|
0x1ec148:   1c 00 00 00 f4 1f 00 00  eb 6d 00 00 2d 00 00 00   |.........m..-...|
0x1ec158:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1ec168:   1c 00 00 00 14 20 00 00  f8 6d 00 00 38 00 00 00   |..... ...m..8...|
0x1ec178:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1ec188:   1c 00 00 00 34 20 00 00  10 6e 00 00 47 00 00 00   |....4 ...n..G...|
0x1ec198:   00 41 0e 08 85 02 42 0d  05 02 41 c5 0c 04 04 00   |.A....B...A.....|
0x1ec1a8:   1c 00 00 00 54 20 00 00  38 6e 00 00 5c 00 00 00   |....T ..8n..\...|
0x1ec1b8:   00 41 0e 08 85 02 42 0d  05 02 56 c5 0c 04 04 00   |.A....B...V.....|
0x1ec1c8:   20 00 00 00 74 20 00 00  74 6e 00 00 99 00 00 00   | ...t ..tn......|
0x1ec1d8:   00 41 0e 08 85 02 42 0d  05 69 83 03 02 69 c3 41   |.A....B..i...i.A|
0x1ec1e8:   0c 04 04 c5 28 00 00 00  60 1b 00 00 ea 6e 00 00   |....(...`....n..|
0x1ec1f8:   d9 00 00 00 04 61 2f 00  00 41 0e 08 85 02 42 0d   |.....a/..A....B.|
0x1ec208:   05 62 83 04 86 03 02 b1  c3 41 c6 41 0c 04 04 c5   |.b.......A.A....|
0x1ec218:   20 00 00 00 c4 20 00 00  98 6f 00 00 0f 01 00 00   | .... ...o......|
0x1ec228:   00 41 0e 08 85 02 42 0d  05 74 83 03 02 d5 c5 0c   |.A....B..t......|
0x1ec238:   04 04 c3 00 1c 00 00 00  e8 20 00 00 84 70 00 00   |......... ...p..|
0x1ec248:   4a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 44 c5   |J....A....B...D.|
0x1ec258:   0c 04 04 00 20 00 00 00  08 21 00 00 ae 70 00 00   |.... ....!...p..|
0x1ec268:   5f 00 00 00 00 41 0e 08  85 02 42 0d 05 68 83 03   |_....A....B..h..|
0x1ec278:   73 c5 0c 04 04 c3 00 00  24 00 00 00 f4 1b 00 00   |s.......$.......|
0x1ec288:   ea 70 00 00 89 00 00 00  04 74 2f 00 00 41 0e 08   |.p.......t/..A..|
0x1ec298:   85 02 42 0d 05 74 83 03  02 50 c3 41 0c 04 04 c5   |..B..t...P.A....|
0x1ec2a8:   1c 00 00 00 54 21 00 00  4c 71 00 00 3e 00 00 00   |....T!..Lq..>...|
0x1ec2b8:   00 41 0e 08 85 02 42 0d  05 7a c5 0c 04 04 00 00   |.A....B..z......|
0x1ec2c8:   20 00 00 00 74 21 00 00  6a 71 00 00 57 00 00 00   | ...t!..jq..W...|
0x1ec2d8:   00 41 0e 08 85 02 42 0d  05 61 83 03 71 c3 41 0c   |.A....B..a..q.A.|
0x1ec2e8:   04 04 c5 00 1c 00 00 00  98 21 00 00 9e 71 00 00   |.........!...q..|
0x1ec2f8:   2f 00 00 00 00 41 0e 08  85 02 42 0d 05 6b c5 0c   |/....A....B..k..|
0x1ec308:   04 04 00 00 1c 00 00 00  b8 21 00 00 ae 71 00 00   |.........!...q..|
0x1ec318:   66 00 00 00 00 41 0e 08  85 02 42 0d 05 02 62 c5   |f....A....B...b.|
0x1ec328:   0c 04 04 00 20 00 00 00  d8 21 00 00 f4 71 00 00   |.... ....!...q..|
0x1ec338:   57 00 00 00 00 41 0e 08  85 02 42 0d 05 61 83 03   |W....A....B..a..|
0x1ec348:   71 c3 41 0c 04 04 c5 00  20 00 00 00 fc 21 00 00   |q.A..... ....!..|
0x1ec358:   27 72 00 00 54 00 00 00  00 41 0e 08 85 02 42 0d   |'r..T....A....B.|
0x1ec368:   05 61 83 03 6e c3 41 0c  04 04 c5 00 1c 00 00 00   |.a..n.A.........|
0x1ec378:   20 22 00 00 57 72 00 00  2d 00 00 00 00 41 0e 08   | "..Wr..-....A..|
0x1ec388:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ec398:   40 22 00 00 64 72 00 00  47 00 00 00 00 41 0e 08   |@"..dr..G....A..|
0x1ec3a8:   85 02 42 0d 05 02 41 c5  0c 04 04 00 1c 00 00 00   |..B...A.........|
0x1ec3b8:   60 22 00 00 8b 72 00 00  2d 00 00 00 00 41 0e 08   |`"...r..-....A..|
0x1ec3c8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ec3d8:   80 22 00 00 98 72 00 00  45 00 00 00 00 41 0e 08   |."...r..E....A..|
0x1ec3e8:   85 02 42 0d 05 02 41 c5  0c 04 04 00 1c 00 00 00   |..B...A.........|
0x1ec3f8:   a0 22 00 00 be 72 00 00  35 00 00 00 00 41 0e 08   |."...r..5....A..|
0x1ec408:   85 02 42 0d 05 71 c5 0c  04 04 00 00 24 00 00 00   |..B..q......$...|
0x1ec418:   88 1d 00 00 d4 72 00 00  79 00 00 00 04 84 2f 00   |.....r..y...../.|
0x1ec428:   00 41 0e 08 85 02 42 0d  05 5b 83 03 02 59 c3 41   |.A....B..[...Y.A|
0x1ec438:   0c 04 04 c5 1c 00 00 00  e8 22 00 00 25 73 00 00   |........."..%s..|
0x1ec448:   5e 00 00 00 00 41 0e 08  85 02 42 0d 05 02 5a c5   |^....A....B...Z.|
0x1ec458:   0c 04 04 00 1c 00 00 00  08 23 00 00 64 73 00 00   |.........#..ds..|
0x1ec468:   66 00 00 00 00 41 0e 08  85 02 42 0d 05 02 62 c5   |f....A....B...b.|
0x1ec478:   0c 04 04 00 1c 00 00 00  28 23 00 00 aa 73 00 00   |........(#...s..|
0x1ec488:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ec498:   04 04 00 00 1c 00 00 00  48 23 00 00 b7 73 00 00   |........H#...s..|
0x1ec4a8:   47 00 00 00 00 41 0e 08  85 02 42 0d 05 02 41 c5   |G....A....B...A.|
0x1ec4b8:   0c 04 04 00 1c 00 00 00  68 23 00 00 de 73 00 00   |........h#...s..|
0x1ec4c8:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ec4d8:   04 04 00 00 1c 00 00 00  88 23 00 00 eb 73 00 00   |.........#...s..|
0x1ec4e8:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1ec4f8:   0c 04 04 00 1c 00 00 00  a8 23 00 00 27 74 00 00   |.........#..'t..|
0x1ec508:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ec518:   04 04 00 00 1c 00 00 00  c8 23 00 00 34 74 00 00   |.........#..4t..|
0x1ec528:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1ec538:   0c 04 04 00 1c 00 00 00  e8 23 00 00 70 74 00 00   |.........#..pt..|
0x1ec548:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ec558:   0c 04 04 00 1c 00 00 00  08 24 00 00 9f 74 00 00   |.........$...t..|
0x1ec568:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ec578:   04 04 00 00 1c 00 00 00  28 24 00 00 ac 74 00 00   |........($...t..|
0x1ec588:   47 00 00 00 00 41 0e 08  85 02 42 0d 05 02 41 c5   |G....A....B...A.|
0x1ec598:   0c 04 04 00 1c 00 00 00  48 24 00 00 d3 74 00 00   |........H$...t..|
0x1ec5a8:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ec5b8:   04 04 00 00 1c 00 00 00  68 24 00 00 e0 74 00 00   |........h$...t..|
0x1ec5c8:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ec5d8:   0c 04 04 00 1c 00 00 00  88 24 00 00 0f 75 00 00   |.........$...u..|
0x1ec5e8:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ec5f8:   04 04 00 00 1c 00 00 00  a8 24 00 00 1c 75 00 00   |.........$...u..|
0x1ec608:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ec618:   0c 04 04 00 1c 00 00 00  c8 24 00 00 4c 75 00 00   |.........$..Lu..|
0x1ec628:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ec638:   04 04 00 00 1c 00 00 00  e8 24 00 00 62 75 00 00   |.........$..bu..|
0x1ec648:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ec658:   04 04 00 00 24 00 00 00  d0 1f 00 00 78 75 00 00   |....$.......xu..|
0x1ec668:   8c 00 00 00 04 94 2f 00  00 41 0e 08 85 02 42 0d   |....../..A....B.|
0x1ec678:   05 7b 83 03 02 4c c3 41  0c 04 04 c5 1c 00 00 00   |.{...L.A........|
0x1ec688:   30 25 00 00 dc 75 00 00  46 00 00 00 00 41 0e 08   |0%...u..F....A..|
0x1ec698:   85 02 42 0d 05 02 42 c5  0c 04 04 00 1c 00 00 00   |..B...B.........|
0x1ec6a8:   50 25 00 00 02 76 00 00  6d 00 00 00 00 41 0e 08   |P%...v..m....A..|
0x1ec6b8:   85 02 42 0d 05 02 69 c5  0c 04 04 00 1c 00 00 00   |..B...i.........|
0x1ec6c8:   70 25 00 00 50 76 00 00  4e 00 00 00 00 41 0e 08   |p%..Pv..N....A..|
0x1ec6d8:   85 02 42 0d 05 02 4a c5  0c 04 04 00 20 00 00 00   |..B...J..... ...|
0x1ec6e8:   90 25 00 00 7e 76 00 00  9b 00 00 00 00 41 0e 08   |.%..~v.......A..|
0x1ec6f8:   85 02 42 0d 05 68 83 03  02 6e c3 41 0c 04 04 c5   |..B..h...n.A....|
0x1ec708:   1c 00 00 00 b4 25 00 00  f6 76 00 00 44 00 00 00   |.....%...v..D...|
0x1ec718:   00 41 0e 08 85 02 42 0d  05 02 40 c5 0c 04 04 00   |.A....B...@.....|
0x1ec728:   1c 00 00 00 d4 25 00 00  1a 77 00 00 5b 00 00 00   |.....%...w..[...|
0x1ec738:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1ec748:   1c 00 00 00 f4 25 00 00  55 77 00 00 7a 00 00 00   |.....%..Uw..z...|
0x1ec758:   00 41 0e 08 85 02 42 0d  05 02 74 c5 0c 04 04 00   |.A....B...t.....|
0x1ec768:   1c 00 00 00 14 26 00 00  af 77 00 00 7a 00 00 00   |.....&...w..z...|
0x1ec778:   00 41 0e 08 85 02 42 0d  05 02 74 c5 0c 04 04 00   |.A....B...t.....|
0x1ec788:   20 00 00 00 34 26 00 00  09 78 00 00 5f 00 00 00   | ...4&...x.._...|
0x1ec798:   00 41 0e 08 85 02 42 0d  05 67 83 03 73 c3 41 0c   |.A....B..g..s.A.|
0x1ec7a8:   04 04 c5 00 1c 00 00 00  58 26 00 00 44 78 00 00   |........X&..Dx..|
0x1ec7b8:   43 00 00 00 00 41 0e 08  85 02 42 0d 05 7f c5 0c   |C....A....B.....|
0x1ec7c8:   04 04 00 00 1c 00 00 00  78 26 00 00 67 78 00 00   |........x&..gx..|
0x1ec7d8:   43 00 00 00 00 41 0e 08  85 02 42 0d 05 7f c5 0c   |C....A....B.....|
0x1ec7e8:   04 04 00 00 1c 00 00 00  98 26 00 00 8a 78 00 00   |.........&...x..|
0x1ec7f8:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1ec808:   0c 04 04 00 20 00 00 00  b8 26 00 00 c6 78 00 00   |.... ....&...x..|
0x1ec818:   c1 00 00 00 00 41 0e 08  85 02 42 0d 05 67 83 03   |.....A....B..g..|
0x1ec828:   02 96 c5 0c 04 04 c3 00  1c 00 00 00 dc 26 00 00   |.............&..|
0x1ec838:   63 79 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |cy..\....A....B.|
0x1ec848:   05 02 58 c5 0c 04 04 00  1c 00 00 00 fc 26 00 00   |..X..........&..|
0x1ec858:   9f 79 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |.y..\....A....B.|
0x1ec868:   05 02 58 c5 0c 04 04 00  1c 00 00 00 1c 27 00 00   |..X..........'..|
0x1ec878:   db 79 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |.y..\....A....B.|
0x1ec888:   05 02 58 c5 0c 04 04 00  1c 00 00 00 3c 27 00 00   |..X.........<'..|
0x1ec898:   18 7a 00 00 59 00 00 00  00 41 0e 08 85 02 42 0d   |.z..Y....A....B.|
0x1ec8a8:   05 02 55 c5 0c 04 04 00  1c 00 00 00 5c 27 00 00   |..U.........\'..|
0x1ec8b8:   52 7a 00 00 66 00 00 00  00 41 0e 08 85 02 42 0d   |Rz..f....A....B.|
0x1ec8c8:   05 02 62 c5 0c 04 04 00  1c 00 00 00 7c 27 00 00   |..b.........|'..|
0x1ec8d8:   98 7a 00 00 7b 00 00 00  00 41 0e 08 85 02 42 0d   |.z..{....A....B.|
0x1ec8e8:   05 02 75 c5 0c 04 04 00  1c 00 00 00 9c 27 00 00   |..u..........'..|
0x1ec8f8:   f4 7a 00 00 40 00 00 00  00 41 0e 08 85 02 42 0d   |.z..@....A....B.|
0x1ec908:   05 7c c5 0c 04 04 00 00  1c 00 00 00 bc 27 00 00   |.|...........'..|
0x1ec918:   14 7b 00 00 3d 00 00 00  00 41 0e 08 85 02 42 0d   |.{..=....A....B.|
0x1ec928:   05 79 c5 0c 04 04 00 00  1c 00 00 00 dc 27 00 00   |.y...........'..|
0x1ec938:   32 7b 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |2{..J....A....B.|
0x1ec948:   05 02 44 c5 0c 04 04 00  1c 00 00 00 fc 27 00 00   |..D..........'..|
0x1ec958:   5c 7b 00 00 7e 00 00 00  00 41 0e 08 85 02 42 0d   |\{..~....A....B.|
0x1ec968:   05 02 78 c5 0c 04 04 00  24 00 00 00 e4 22 00 00   |..x.....$...."..|
0x1ec978:   ba 7b 00 00 ec 00 00 00  04 a4 2f 00 00 41 0e 08   |.{......../..A..|
0x1ec988:   85 02 42 0d 05 71 83 03  02 b6 c3 41 0c 04 04 c5   |..B..q.....A....|
0x1ec998:   28 00 00 00 0c 23 00 00  7e 7c 00 00 94 01 00 00   |(....#..~|......|
0x1ec9a8:   04 bb 2f 00 00 41 0e 08  85 02 42 0d 05 77 83 03   |../..A....B..w..|
0x1ec9b8:   03 58 01 c3 41 0c 04 04  c5 00 00 00 28 00 00 00   |.X..A.......(...|
0x1ec9c8:   38 23 00 00 e6 7d 00 00  94 01 00 00 04 de 2f 00   |8#...}......../.|
0x1ec9d8:   00 41 0e 08 85 02 42 0d  05 77 83 03 03 58 01 c3   |.A....B..w...X..|
0x1ec9e8:   41 0c 04 04 c5 00 00 00  28 00 00 00 64 23 00 00   |A.......(...d#..|
0x1ec9f8:   4e 7f 00 00 d6 00 00 00  04 01 30 00 00 41 0e 08   |N.........0..A..|
0x1eca08:   85 02 42 0d 05 68 83 04  86 03 02 a8 c3 41 c6 41   |..B..h.......A.A|
0x1eca18:   0c 04 04 c5 2c 00 00 00  90 23 00 00 f8 7f 00 00   |....,....#......|
0x1eca28:   a6 02 00 00 04 24 30 00  00 41 0e 08 85 02 42 0d   |.....$0..A....B.|
0x1eca38:   05 7b 83 04 86 03 03 65  02 c3 41 c6 41 0c 04 04   |.{.....e..A.A...|
0x1eca48:   c5 00 00 00 2c 00 00 00  c0 23 00 00 6e 82 00 00   |....,....#..n...|
0x1eca58:   f2 01 00 00 04 80 30 00  00 41 0e 08 85 02 42 0d   |......0..A....B.|
0x1eca68:   05 72 83 04 86 03 03 ba  01 c3 41 c6 41 0c 04 04   |.r........A.A...|
0x1eca78:   c5 00 00 00 2c 00 00 00  f0 23 00 00 30 84 00 00   |....,....#..0...|
0x1eca88:   a6 02 00 00 04 c4 30 00  00 41 0e 08 85 02 42 0d   |......0..A....B.|
0x1eca98:   05 7b 83 04 86 03 03 65  02 c3 41 c6 41 0c 04 04   |.{.....e..A.A...|
0x1ecaa8:   c5 00 00 00 1c 00 00 00  58 29 00 00 a6 86 00 00   |........X)......|
0x1ecab8:   57 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |W....A....B...Q.|
0x1ecac8:   0c 04 04 00 1c 00 00 00  78 29 00 00 de 86 00 00   |........x)......|
0x1ecad8:   4a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 44 c5   |J....A....B...D.|
0x1ecae8:   0c 04 04 00 1c 00 00 00  98 29 00 00 08 87 00 00   |.........)......|
0x1ecaf8:   3f 00 00 00 00 41 0e 08  85 02 42 0d 05 7b c5 0c   |?....A....B..{..|
0x1ecb08:   04 04 00 00 1c 00 00 00  b8 29 00 00 28 87 00 00   |.........)..(...|
0x1ecb18:   3a 00 00 00 00 41 0e 08  85 02 42 0d 05 76 c5 0c   |:....A....B..v..|
0x1ecb28:   04 04 00 00 1c 00 00 00  d8 29 00 00 42 87 00 00   |.........)..B...|
0x1ecb38:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ecb48:   04 04 00 00 1c 00 00 00  f8 29 00 00 58 87 00 00   |.........)..X...|
0x1ecb58:   4a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 44 c5   |J....A....B...D.|
0x1ecb68:   0c 04 04 00 1c 00 00 00  18 2a 00 00 82 87 00 00   |.........*......|
0x1ecb78:   4a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 44 c5   |J....A....B...D.|
0x1ecb88:   0c 04 04 00 1c 00 00 00  38 2a 00 00 ac 87 00 00   |........8*......|
0x1ecb98:   3f 00 00 00 00 41 0e 08  85 02 42 0d 05 7b c5 0c   |?....A....B..{..|
0x1ecba8:   04 04 00 00 1c 00 00 00  58 2a 00 00 cc 87 00 00   |........X*......|
0x1ecbb8:   57 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |W....A....B...Q.|
0x1ecbc8:   0c 04 04 00 1c 00 00 00  78 2a 00 00 04 88 00 00   |........x*......|
0x1ecbd8:   3a 00 00 00 00 41 0e 08  85 02 42 0d 05 76 c5 0c   |:....A....B..v..|
0x1ecbe8:   04 04 00 00 28 00 00 00  60 25 00 00 1e 88 00 00   |....(...`%......|
0x1ecbf8:   d6 00 00 00 04 1e 31 00  00 41 0e 08 85 02 42 0d   |......1..A....B.|
0x1ecc08:   05 68 83 04 86 03 02 a8  c3 41 c6 41 0c 04 04 c5   |.h.......A.A....|
0x1ecc18:   28 00 00 00 8c 25 00 00  c8 88 00 00 d6 00 00 00   |(....%..........|
0x1ecc28:   04 3f 31 00 00 41 0e 08  85 02 42 0d 05 68 83 04   |.?1..A....B..h..|
0x1ecc38:   86 03 02 a8 c3 41 c6 41  0c 04 04 c5 28 00 00 00   |.....A.A....(...|
0x1ecc48:   b8 25 00 00 72 89 00 00  bc 00 00 00 04 60 31 00   |.%..r........`1.|
0x1ecc58:   00 41 0e 08 85 02 42 0d  05 6e 83 04 86 03 02 88   |.A....B..n......|
0x1ecc68:   c3 41 c6 41 0c 04 04 c5  2c 00 00 00 e4 25 00 00   |.A.A....,....%..|
0x1ecc78:   02 8a 00 00 a6 02 00 00  04 88 31 00 00 41 0e 08   |..........1..A..|
0x1ecc88:   85 02 42 0d 05 7b 83 04  86 03 03 65 02 c3 41 c6   |..B..{.....e..A.|
0x1ecc98:   41 0c 04 04 c5 00 00 00  28 00 00 00 14 26 00 00   |A.......(....&..|
0x1ecca8:   78 8c 00 00 bc 00 00 00  04 e4 31 00 00 41 0e 08   |x.........1..A..|
0x1eccb8:   85 02 42 0d 05 6e 83 04  86 03 02 88 c3 41 c6 41   |..B..n.......A.A|
0x1eccc8:   0c 04 04 c5 1c 00 00 00  78 2b 00 00 08 8d 00 00   |........x+......|
0x1eccd8:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |T....A....B...N.|
0x1ecce8:   0c 04 04 00 28 00 00 00  60 26 00 00 3c 8d 00 00   |....(...`&..<...|
0x1eccf8:   bc 00 00 00 04 0c 32 00  00 41 0e 08 85 02 42 0d   |......2..A....B.|
0x1ecd08:   05 6e 83 04 86 03 02 88  c3 41 c6 41 0c 04 04 c5   |.n.......A.A....|
0x1ecd18:   2c 00 00 00 8c 26 00 00  cc 8d 00 00 a6 02 00 00   |,....&..........|
0x1ecd28:   04 34 32 00 00 41 0e 08  85 02 42 0d 05 7b 83 04   |.42..A....B..{..|
0x1ecd38:   86 03 03 65 02 c3 41 c6  41 0c 04 04 c5 00 00 00   |...e..A.A.......|
0x1ecd48:   28 00 00 00 bc 26 00 00  42 90 00 00 bc 00 00 00   |(....&..B.......|
0x1ecd58:   04 90 32 00 00 41 0e 08  85 02 42 0d 05 6e 83 04   |..2..A....B..n..|
0x1ecd68:   86 03 02 88 c3 41 c6 41  0c 04 04 c5 28 00 00 00   |.....A.A....(...|
0x1ecd78:   e8 26 00 00 d2 90 00 00  bc 00 00 00 04 b8 32 00   |.&............2.|
0x1ecd88:   00 41 0e 08 85 02 42 0d  05 6e 83 04 86 03 02 88   |.A....B..n......|
0x1ecd98:   c3 41 c6 41 0c 04 04 c5  28 00 00 00 14 27 00 00   |.A.A....(....'..|
0x1ecda8:   62 91 00 00 af 00 00 00  04 e0 32 00 00 41 0e 08   |b.........2..A..|
0x1ecdb8:   85 02 42 0d 05 68 83 04  86 03 02 81 c3 41 c6 41   |..B..h.......A.A|
0x1ecdc8:   0c 04 04 c5 2c 00 00 00  40 27 00 00 e6 91 00 00   |....,...@'......|
0x1ecdd8:   f2 01 00 00 04 04 33 00  00 41 0e 08 85 02 42 0d   |......3..A....B.|
0x1ecde8:   05 72 83 04 86 03 03 ba  01 c3 41 c6 41 0c 04 04   |.r........A.A...|
0x1ecdf8:   c5 00 00 00 2c 00 00 00  70 27 00 00 a8 93 00 00   |....,...p'......|
0x1ece08:   a6 02 00 00 04 48 33 00  00 41 0e 08 85 02 42 0d   |.....H3..A....B.|
0x1ece18:   05 7b 83 04 86 03 03 65  02 c3 41 c6 41 0c 04 04   |.{.....e..A.A...|
0x1ece28:   c5 00 00 00 1c 00 00 00  d8 2c 00 00 1e 96 00 00   |.........,......|
0x1ece38:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ece48:   0c 04 04 00 1c 00 00 00  f8 2c 00 00 58 96 00 00   |.........,..X...|
0x1ece58:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ece68:   0c 04 04 00 1c 00 00 00  18 2d 00 00 92 96 00 00   |.........-......|
0x1ece78:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ece88:   0c 04 04 00 1c 00 00 00  38 2d 00 00 cc 96 00 00   |........8-......|
0x1ece98:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ecea8:   0c 04 04 00 1c 00 00 00  58 2d 00 00 06 97 00 00   |........X-......|
0x1eceb8:   5f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 5b c5   |_....A....B...[.|
0x1ecec8:   0c 04 04 00 1c 00 00 00  78 2d 00 00 46 97 00 00   |........x-..F...|
0x1eced8:   44 00 00 00 00 41 0e 08  85 02 42 0d 05 02 40 c5   |D....A....B...@.|
0x1ecee8:   0c 04 04 00 1c 00 00 00  98 2d 00 00 6a 97 00 00   |.........-..j...|
0x1ecef8:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ecf08:   0c 04 04 00 1c 00 00 00  b8 2d 00 00 a4 97 00 00   |.........-......|
0x1ecf18:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ecf28:   0c 04 04 00 2c 00 00 00  a0 28 00 00 de 97 00 00   |....,....(......|
0x1ecf38:   a6 02 00 00 04 a4 33 00  00 41 0e 08 85 02 42 0d   |......3..A....B.|
0x1ecf48:   05 7b 83 04 86 03 03 65  02 c3 41 c6 41 0c 04 04   |.{.....e..A.A...|
0x1ecf58:   c5 00 00 00 1c 00 00 00  08 2e 00 00 54 9a 00 00   |............T...|
0x1ecf68:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 49 c5   |O....A....B...I.|
0x1ecf78:   0c 04 04 00 1c 00 00 00  28 2e 00 00 84 9a 00 00   |........(.......|
0x1ecf88:   50 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4a c5   |P....A....B...J.|
0x1ecf98:   0c 04 04 00 20 00 00 00  48 2e 00 00 b4 9a 00 00   |.... ...H.......|
0x1ecfa8:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 61 83 03   |T....A....B..a..|
0x1ecfb8:   6e c3 41 0c 04 04 c5 00  1c 00 00 00 6c 2e 00 00   |n.A.........l...|
0x1ecfc8:   e4 9a 00 00 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x1ecfd8:   05 02 57 c5 0c 04 04 00  1c 00 00 00 8c 2e 00 00   |..W.............|
0x1ecfe8:   22 9b 00 00 2f 00 00 00  00 41 0e 08 85 02 42 0d   |".../....A....B.|
0x1ecff8:   05 6b c5 0c 04 04 00 00  28 00 00 00 74 29 00 00   |.k......(...t)..|
0x1ed008:   32 9b 00 00 94 01 00 00  04 fe 33 00 00 41 0e 08   |2.........3..A..|
0x1ed018:   85 02 42 0d 05 77 83 03  03 58 01 c3 41 0c 04 04   |..B..w...X..A...|
0x1ed028:   c5 00 00 00 1c 00 00 00  d8 2e 00 00 9a 9c 00 00   |................|
0x1ed038:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |T....A....B...N.|
0x1ed048:   0c 04 04 00 28 00 00 00  c0 29 00 00 ce 9c 00 00   |....(....)......|
0x1ed058:   bc 00 00 00 04 24 34 00  00 41 0e 08 85 02 42 0d   |.....$4..A....B.|
0x1ed068:   05 6e 83 04 86 03 02 88  c3 41 c6 41 0c 04 04 c5   |.n.......A.A....|
0x1ed078:   2c 00 00 00 ec 29 00 00  5e 9d 00 00 a6 02 00 00   |,....)..^.......|
0x1ed088:   04 4c 34 00 00 41 0e 08  85 02 42 0d 05 7b 83 04   |.L4..A....B..{..|
0x1ed098:   86 03 03 65 02 c3 41 c6  41 0c 04 04 c5 00 00 00   |...e..A.A.......|
0x1ed0a8:   1c 00 00 00 54 2f 00 00  d4 9f 00 00 59 00 00 00   |....T/......Y...|
0x1ed0b8:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1ed0c8:   1c 00 00 00 74 2f 00 00  0e a0 00 00 59 00 00 00   |....t/......Y...|
0x1ed0d8:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1ed0e8:   1c 00 00 00 94 2f 00 00  47 a0 00 00 35 00 00 00   |...../..G...5...|
0x1ed0f8:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1ed108:   1c 00 00 00 b4 2f 00 00  5c a0 00 00 59 00 00 00   |...../..\...Y...|
0x1ed118:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1ed128:   1c 00 00 00 d4 2f 00 00  96 a0 00 00 66 00 00 00   |...../......f...|
0x1ed138:   00 41 0e 08 85 02 42 0d  05 02 62 c5 0c 04 04 00   |.A....B...b.....|
0x1ed148:   20 00 00 00 f4 2f 00 00  dc a0 00 00 6c 00 00 00   | ..../......l...|
0x1ed158:   00 41 0e 08 85 02 42 0d  05 6d 83 03 7a c3 41 0c   |.A....B..m..z.A.|
0x1ed168:   04 04 c5 00 1c 00 00 00  18 30 00 00 24 a1 00 00   |.........0..$...|
0x1ed178:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ed188:   04 04 00 00 1c 00 00 00  38 30 00 00 3a a1 00 00   |........80..:...|
0x1ed198:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ed1a8:   04 04 00 00 24 00 00 00  20 2b 00 00 50 a1 00 00   |....$... +..P...|
0x1ed1b8:   80 00 00 00 04 a6 34 00  00 41 0e 08 85 02 42 0d   |......4..A....B.|
0x1ed1c8:   05 7d 83 03 7e c3 41 0c  04 04 c5 00 1c 00 00 00   |.}..~.A.........|
0x1ed1d8:   80 30 00 00 a8 a1 00 00  2d 00 00 00 00 41 0e 08   |.0......-....A..|
0x1ed1e8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ed1f8:   a0 30 00 00 b5 a1 00 00  63 00 00 00 00 41 0e 08   |.0......c....A..|
0x1ed208:   85 02 42 0d 05 02 5f c5  0c 04 04 00 1c 00 00 00   |..B..._.........|
0x1ed218:   c0 30 00 00 f8 a1 00 00  42 00 00 00 00 41 0e 08   |.0......B....A..|
0x1ed228:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ed238:   e0 30 00 00 1a a2 00 00  5a 00 00 00 00 41 0e 08   |.0......Z....A..|
0x1ed248:   85 02 42 0d 05 02 56 c5  0c 04 04 00 1c 00 00 00   |..B...V.........|
0x1ed258:   00 31 00 00 54 a2 00 00  3a 00 00 00 00 41 0e 08   |.1..T...:....A..|
0x1ed268:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ed278:   20 31 00 00 6e a2 00 00  3a 00 00 00 00 41 0e 08   | 1..n...:....A..|
0x1ed288:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ed298:   40 31 00 00 88 a2 00 00  3a 00 00 00 00 41 0e 08   |@1......:....A..|
0x1ed2a8:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ed2b8:   60 31 00 00 a2 a2 00 00  2d 00 00 00 00 41 0e 08   |`1......-....A..|
0x1ed2c8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ed2d8:   80 31 00 00 af a2 00 00  53 00 00 00 00 41 0e 08   |.1......S....A..|
0x1ed2e8:   85 02 42 0d 05 02 4f c5  0c 04 04 00 1c 00 00 00   |..B...O.........|
0x1ed2f8:   a0 31 00 00 e2 a2 00 00  5d 00 00 00 00 41 0e 08   |.1......]....A..|
0x1ed308:   85 02 42 0d 05 02 59 c5  0c 04 04 00 1c 00 00 00   |..B...Y.........|
0x1ed318:   c0 31 00 00 20 a3 00 00  3d 00 00 00 00 41 0e 08   |.1.. ...=....A..|
0x1ed328:   85 02 42 0d 05 79 c5 0c  04 04 00 00 1c 00 00 00   |..B..y..........|
0x1ed338:   e0 31 00 00 3e a3 00 00  3d 00 00 00 00 41 0e 08   |.1..>...=....A..|
0x1ed348:   85 02 42 0d 05 79 c5 0c  04 04 00 00 24 00 00 00   |..B..y......$...|
0x1ed358:   c8 2c 00 00 5c a3 00 00  ba 00 00 00 04 b4 34 00   |.,..\.........4.|
0x1ed368:   00 41 0e 08 85 02 42 0d  05 74 83 03 02 81 c3 41   |.A....B..t.....A|
0x1ed378:   0c 04 04 c5 1c 00 00 00  28 32 00 00 ee a3 00 00   |........(2......|
0x1ed388:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1ed398:   0c 04 04 00 1c 00 00 00  48 32 00 00 24 a4 00 00   |........H2..$...|
0x1ed3a8:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1ed3b8:   0c 04 04 00 1c 00 00 00  68 32 00 00 5a a4 00 00   |........h2..Z...|
0x1ed3c8:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1ed3d8:   04 04 00 00 1c 00 00 00  88 32 00 00 68 a4 00 00   |.........2..h...|
0x1ed3e8:   67 00 00 00 00 41 0e 08  85 02 42 0d 05 02 63 c5   |g....A....B...c.|
0x1ed3f8:   0c 04 04 00 1c 00 00 00  a8 32 00 00 b0 a4 00 00   |.........2......|
0x1ed408:   30 00 00 00 00 41 0e 08  85 02 42 0d 05 6c c5 0c   |0....A....B..l..|
0x1ed418:   04 04 00 00 1c 00 00 00  c8 32 00 00 c0 a4 00 00   |.........2......|
0x1ed428:   56 00 00 00 00 41 0e 08  85 02 42 0d 05 02 52 c5   |V....A....B...R.|
0x1ed438:   0c 04 04 00 1c 00 00 00  e8 32 00 00 f6 a4 00 00   |.........2......|
0x1ed448:   56 00 00 00 00 41 0e 08  85 02 42 0d 05 02 52 c5   |V....A....B...R.|
0x1ed458:   0c 04 04 00 20 00 00 00  08 33 00 00 2c a5 00 00   |.... ....3..,...|
0x1ed468:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 61 83 03   |T....A....B..a..|
0x1ed478:   6e c3 41 0c 04 04 c5 00  1c 00 00 00 2c 33 00 00   |n.A.........,3..|
0x1ed488:   5c a5 00 00 35 00 00 00  00 41 0e 08 85 02 42 0d   |\...5....A....B.|
0x1ed498:   05 71 c5 0c 04 04 00 00  1c 00 00 00 4c 33 00 00   |.q..........L3..|
0x1ed4a8:   72 a5 00 00 35 00 00 00  00 41 0e 08 85 02 42 0d   |r...5....A....B.|
0x1ed4b8:   05 71 c5 0c 04 04 00 00  24 00 00 00 34 2e 00 00   |.q......$...4...|
0x1ed4c8:   88 a5 00 00 80 00 00 00  04 d4 34 00 00 41 0e 08   |..........4..A..|
0x1ed4d8:   85 02 42 0d 05 7d 83 03  7e c3 41 0c 04 04 c5 00   |..B..}..~.A.....|
0x1ed4e8:   1c 00 00 00 94 33 00 00  e0 a5 00 00 2d 00 00 00   |.....3......-...|
0x1ed4f8:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1ed508:   1c 00 00 00 b4 33 00 00  ed a5 00 00 48 00 00 00   |.....3......H...|
0x1ed518:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1ed528:   1c 00 00 00 d4 33 00 00  16 a6 00 00 2a 00 00 00   |.....3......*...|
0x1ed538:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x1ed548:   1c 00 00 00 f4 33 00 00  20 a6 00 00 2a 00 00 00   |.....3.. ...*...|
0x1ed558:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x1ed568:   24 00 00 00 dc 2e 00 00  2a a6 00 00 9a 00 00 00   |$.......*.......|
0x1ed578:   04 e0 34 00 00 41 0e 08  85 02 42 0d 05 6e 83 03   |..4..A....B..n..|
0x1ed588:   02 67 c3 41 0c 04 04 c5  1c 00 00 00 3c 34 00 00   |.g.A........<4..|
0x1ed598:   9c a6 00 00 6c 00 00 00  00 41 0e 08 85 02 42 0d   |....l....A....B.|
0x1ed5a8:   05 02 68 c5 0c 04 04 00  1c 00 00 00 5c 34 00 00   |..h.........\4..|
0x1ed5b8:   e8 a6 00 00 3d 00 00 00  00 41 0e 08 85 02 42 0d   |....=....A....B.|
0x1ed5c8:   05 79 c5 0c 04 04 00 00  24 00 00 00 44 2f 00 00   |.y......$...D/..|
0x1ed5d8:   06 a7 00 00 ba 00 00 00  04 f0 34 00 00 41 0e 08   |..........4..A..|
0x1ed5e8:   85 02 42 0d 05 74 83 03  02 81 c3 41 0c 04 04 c5   |..B..t.....A....|
0x1ed5f8:   1c 00 00 00 a4 34 00 00  98 a7 00 00 55 00 00 00   |.....4......U...|
0x1ed608:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1ed618:   1c 00 00 00 c4 34 00 00  cd a7 00 00 8e 00 00 00   |.....4..........|
0x1ed628:   00 41 0e 08 85 02 42 0d  05 02 88 c5 0c 04 04 00   |.A....B.........|
0x1ed638:   1c 00 00 00 e4 34 00 00  3b a8 00 00 48 00 00 00   |.....4..;...H...|
0x1ed648:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1ed658:   20 00 00 00 04 35 00 00  63 a8 00 00 66 00 00 00   | ....5..c...f...|
0x1ed668:   00 41 0e 08 85 02 42 0d  05 67 83 03 7a c3 41 0c   |.A....B..g..z.A.|
0x1ed678:   04 04 c5 00 1c 00 00 00  28 35 00 00 a5 a8 00 00   |........(5......|
0x1ed688:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1ed698:   0c 04 04 00 1c 00 00 00  48 35 00 00 da a8 00 00   |........H5......|
0x1ed6a8:   49 00 00 00 00 41 0e 08  85 02 42 0d 05 02 45 c5   |I....A....B...E.|
0x1ed6b8:   0c 04 04 00 1c 00 00 00  68 35 00 00 04 a9 00 00   |........h5......|
0x1ed6c8:   33 00 00 00 00 41 0e 08  85 02 42 0d 05 6f c5 0c   |3....A....B..o..|
0x1ed6d8:   04 04 00 00 24 00 00 00  50 30 00 00 18 a9 00 00   |....$...P0......|
0x1ed6e8:   ab 00 00 00 04 10 35 00  00 41 0e 08 85 02 42 0d   |......5..A....B.|
0x1ed6f8:   05 68 83 03 02 7e c3 41  0c 04 04 c5 10 00 00 00   |.h...~.A........|
0x1ed708:   b0 35 00 00 9b a9 00 00  0a 00 00 00 00 00 00 00   |.5..............|
0x1ed718:   10 00 00 00 c4 35 00 00  91 a9 00 00 0a 00 00 00   |.....5..........|
0x1ed728:   00 00 00 00 1c 00 00 00  d8 35 00 00 88 a9 00 00   |.........5......|
0x1ed738:   77 00 00 00 00 41 0e 08  85 02 42 0d 05 02 73 c5   |w....A....B...s.|
0x1ed748:   0c 04 04 00 10 00 00 00  f8 35 00 00 e0 a9 00 00   |.........5......|
0x1ed758:   07 00 00 00 00 00 00 00  10 00 00 00 0c 36 00 00   |.............6..|
0x1ed768:   d3 a9 00 00 07 00 00 00  00 00 00 00 1c 00 00 00   |................|
0x1ed778:   20 36 00 00 c6 a9 00 00  40 00 00 00 00 41 0e 08   | 6......@....A..|
0x1ed788:   85 02 42 0d 05 7c c5 0c  04 04 00 00 1c 00 00 00   |..B..|..........|
0x1ed798:   40 36 00 00 e6 a9 00 00  42 00 00 00 00 41 0e 08   |@6......B....A..|
0x1ed7a8:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ed7b8:   60 36 00 00 08 aa 00 00  42 00 00 00 00 41 0e 08   |`6......B....A..|
0x1ed7c8:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ed7d8:   80 36 00 00 2a aa 00 00  42 00 00 00 00 41 0e 08   |.6..*...B....A..|
0x1ed7e8:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ed7f8:   a0 36 00 00 4c aa 00 00  76 00 00 00 00 41 0e 08   |.6..L...v....A..|
0x1ed808:   85 02 42 0d 05 02 72 c5  0c 04 04 00 1c 00 00 00   |..B...r.........|
0x1ed818:   c0 36 00 00 a2 aa 00 00  3a 00 00 00 00 41 0e 08   |.6......:....A..|
0x1ed828:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ed838:   e0 36 00 00 bc aa 00 00  3a 00 00 00 00 41 0e 08   |.6......:....A..|
0x1ed848:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ed858:   00 37 00 00 d6 aa 00 00  2f 00 00 00 00 41 0e 08   |.7....../....A..|
0x1ed868:   85 02 42 0d 05 6b c5 0c  04 04 00 00 1c 00 00 00   |..B..k..........|
0x1ed878:   20 37 00 00 e6 aa 00 00  3a 00 00 00 00 41 0e 08   | 7......:....A..|
0x1ed888:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ed898:   40 37 00 00 00 ab 00 00  2d 00 00 00 00 41 0e 08   |@7......-....A..|
0x1ed8a8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ed8b8:   60 37 00 00 0d ab 00 00  55 00 00 00 00 41 0e 08   |`7......U....A..|
0x1ed8c8:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x1ed8d8:   80 37 00 00 42 ab 00 00  54 00 00 00 00 41 0e 08   |.7..B...T....A..|
0x1ed8e8:   85 02 42 0d 05 61 83 03  6e c3 41 0c 04 04 c5 00   |..B..a..n.A.....|
0x1ed8f8:   1c 00 00 00 a4 37 00 00  72 ab 00 00 8e 00 00 00   |.....7..r.......|
0x1ed908:   00 41 0e 08 85 02 42 0d  05 02 88 c5 0c 04 04 00   |.A....B.........|
0x1ed918:   1c 00 00 00 c4 37 00 00  e0 ab 00 00 5d 00 00 00   |.....7......]...|
0x1ed928:   00 41 0e 08 85 02 42 0d  05 02 59 c5 0c 04 04 00   |.A....B...Y.....|
0x1ed938:   1c 00 00 00 e4 37 00 00  1e ac 00 00 2d 00 00 00   |.....7......-...|
0x1ed948:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1ed958:   1c 00 00 00 04 38 00 00  2b ac 00 00 35 00 00 00   |.....8..+...5...|
0x1ed968:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1ed978:   1c 00 00 00 24 38 00 00  40 ac 00 00 9b 00 00 00   |....$8..@.......|
0x1ed988:   00 41 0e 08 85 02 42 0d  05 02 97 c5 0c 04 04 00   |.A....B.........|
0x1ed998:   1c 00 00 00 44 38 00 00  bc ac 00 00 2a 00 00 00   |....D8......*...|
0x1ed9a8:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x1ed9b8:   1c 00 00 00 64 38 00 00  c6 ac 00 00 42 00 00 00   |....d8......B...|
0x1ed9c8:   00 41 0e 08 85 02 42 0d  05 7e c5 0c 04 04 00 00   |.A....B..~......|
0x1ed9d8:   1c 00 00 00 84 38 00 00  e8 ac 00 00 5a 00 00 00   |.....8......Z...|
0x1ed9e8:   00 41 0e 08 85 02 42 0d  05 02 56 c5 0c 04 04 00   |.A....B...V.....|
0x1ed9f8:   20 00 00 00 a4 38 00 00  22 ad 00 00 54 00 00 00   | ....8.."...T...|
0x1eda08:   00 41 0e 08 85 02 42 0d  05 61 83 03 6e c3 41 0c   |.A....B..a..n.A.|
0x1eda18:   04 04 c5 00 1c 00 00 00  c8 38 00 00 52 ad 00 00   |.........8..R...|
0x1eda28:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1eda38:   04 04 00 00 1c 00 00 00  e8 38 00 00 60 ad 00 00   |.........8..`...|
0x1eda48:   38 00 00 00 00 41 0e 08  85 02 42 0d 05 74 c5 0c   |8....A....B..t..|
0x1eda58:   04 04 00 00 1c 00 00 00  08 39 00 00 78 ad 00 00   |.........9..x...|
0x1eda68:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 02 49 c5   |M....A....B...I.|
0x1eda78:   0c 04 04 00 1c 00 00 00  28 39 00 00 a6 ad 00 00   |........(9......|
0x1eda88:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1eda98:   04 04 00 00 1c 00 00 00  48 39 00 00 bc ad 00 00   |........H9......|
0x1edaa8:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1edab8:   04 04 00 00 24 00 00 00  30 34 00 00 d2 ad 00 00   |....$...04......|
0x1edac8:   89 00 00 00 04 21 35 00  00 41 0e 08 85 02 42 0d   |.....!5..A....B.|
0x1edad8:   05 02 46 83 03 7e c3 41  0c 04 04 c5 1c 00 00 00   |..F..~.A........|
0x1edae8:   90 39 00 00 34 ae 00 00  2d 00 00 00 00 41 0e 08   |.9..4...-....A..|
0x1edaf8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1edb08:   b0 39 00 00 41 ae 00 00  48 00 00 00 00 41 0e 08   |.9..A...H....A..|
0x1edb18:   85 02 42 0d 05 02 44 c5  0c 04 04 00 1c 00 00 00   |..B...D.........|
0x1edb28:   d0 39 00 00 6a ae 00 00  5d 00 00 00 00 41 0e 08   |.9..j...]....A..|
0x1edb38:   85 02 42 0d 05 02 59 c5  0c 04 04 00 1c 00 00 00   |..B...Y.........|
0x1edb48:   f0 39 00 00 a8 ae 00 00  50 00 00 00 00 41 0e 08   |.9......P....A..|
0x1edb58:   85 02 42 0d 05 02 4a c5  0c 04 04 00 1c 00 00 00   |..B...J.........|
0x1edb68:   10 3a 00 00 d8 ae 00 00  4f 00 00 00 00 41 0e 08   |.:......O....A..|
0x1edb78:   85 02 42 0d 05 02 49 c5  0c 04 04 00 20 00 00 00   |..B...I..... ...|
0x1edb88:   30 3a 00 00 07 af 00 00  54 00 00 00 00 41 0e 08   |0:......T....A..|
0x1edb98:   85 02 42 0d 05 61 83 03  6e c3 41 0c 04 04 c5 00   |..B..a..n.A.....|
0x1edba8:   1c 00 00 00 54 3a 00 00  38 af 00 00 38 00 00 00   |....T:..8...8...|
0x1edbb8:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1edbc8:   1c 00 00 00 74 3a 00 00  50 af 00 00 4f 00 00 00   |....t:..P...O...|
0x1edbd8:   00 41 0e 08 85 02 42 0d  05 02 4b c5 0c 04 04 00   |.A....B...K.....|
0x1edbe8:   1c 00 00 00 94 3a 00 00  7f af 00 00 4f 00 00 00   |.....:......O...|
0x1edbf8:   00 41 0e 08 85 02 42 0d  05 02 4b c5 0c 04 04 00   |.A....B...K.....|
0x1edc08:   1c 00 00 00 b4 3a 00 00  ae af 00 00 38 00 00 00   |.....:......8...|
0x1edc18:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1edc28:   1c 00 00 00 d4 3a 00 00  c6 af 00 00 45 00 00 00   |.....:......E...|
0x1edc38:   00 41 0e 08 85 02 42 0d  05 02 41 c5 0c 04 04 00   |.A....B...A.....|
0x1edc48:   24 00 00 00 bc 35 00 00  ec af 00 00 a5 00 00 00   |$....5..........|
0x1edc58:   04 2d 35 00 00 41 0e 08  85 02 42 0d 05 6e 83 03   |.-5..A....B..n..|
0x1edc68:   02 72 c3 41 0c 04 04 c5  1c 00 00 00 1c 3b 00 00   |.r.A.........;..|
0x1edc78:   6a b0 00 00 2a 00 00 00  00 41 0e 08 85 02 42 0d   |j...*....A....B.|
0x1edc88:   05 66 c5 0c 04 04 00 00  1c 00 00 00 3c 3b 00 00   |.f..........<;..|
0x1edc98:   74 b0 00 00 2a 00 00 00  00 41 0e 08 85 02 42 0d   |t...*....A....B.|
0x1edca8:   05 66 c5 0c 04 04 00 00  1c 00 00 00 5c 3b 00 00   |.f..........\;..|
0x1edcb8:   7e b0 00 00 6c 00 00 00  00 41 0e 08 85 02 42 0d   |~...l....A....B.|
0x1edcc8:   05 02 68 c5 0c 04 04 00  1c 00 00 00 7c 3b 00 00   |..h.........|;..|
0x1edcd8:   ca b0 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |....J....A....B.|
0x1edce8:   05 02 44 c5 0c 04 04 00  1c 00 00 00 9c 3b 00 00   |..D..........;..|
0x1edcf8:   f4 b0 00 00 6a 00 00 00  00 41 0e 08 85 02 42 0d   |....j....A....B.|
0x1edd08:   05 02 64 c5 0c 04 04 00  1c 00 00 00 bc 3b 00 00   |..d..........;..|
0x1edd18:   3e b1 00 00 2f 00 00 00  00 41 0e 08 85 02 42 0d   |>.../....A....B.|
0x1edd28:   05 6b c5 0c 04 04 00 00  1c 00 00 00 dc 3b 00 00   |.k...........;..|
0x1edd38:   4e b1 00 00 3b 00 00 00  00 41 0e 08 85 02 42 0d   |N...;....A....B.|
0x1edd48:   05 77 c5 0c 04 04 00 00  1c 00 00 00 fc 3b 00 00   |.w...........;..|
0x1edd58:   69 b1 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |i...J....A....B.|
0x1edd68:   05 02 46 c5 0c 04 04 00  1c 00 00 00 1c 3c 00 00   |..F..........<..|
0x1edd78:   93 b1 00 00 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x1edd88:   05 6c c5 0c 04 04 00 00  1c 00 00 00 3c 3c 00 00   |.l..........<<..|
0x1edd98:   a3 b1 00 00 57 00 00 00  00 41 0e 08 85 02 42 0d   |....W....A....B.|
0x1edda8:   05 02 53 c5 0c 04 04 00  1c 00 00 00 5c 3c 00 00   |..S.........\<..|
0x1eddb8:   da b1 00 00 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x1eddc8:   05 02 41 c5 0c 04 04 00  1c 00 00 00 7c 3c 00 00   |..A.........|<..|
0x1eddd8:   ff b1 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |....-....A....B.|
0x1edde8:   05 69 c5 0c 04 04 00 00  1c 00 00 00 9c 3c 00 00   |.i...........<..|
0x1eddf8:   0c b2 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |....-....A....B.|
0x1ede08:   05 69 c5 0c 04 04 00 00  1c 00 00 00 bc 3c 00 00   |.i...........<..|
0x1ede18:   19 b2 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |....J....A....B.|
0x1ede28:   05 02 44 c5 0c 04 04 00  1c 00 00 00 dc 3c 00 00   |..D..........<..|
0x1ede38:   44 b2 00 00 45 00 00 00  00 41 0e 08 85 02 42 0d   |D...E....A....B.|
0x1ede48:   05 02 41 c5 0c 04 04 00  1c 00 00 00 fc 3c 00 00   |..A..........<..|
0x1ede58:   69 b2 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |i...J....A....B.|
0x1ede68:   05 02 44 c5 0c 04 04 00  1c 00 00 00 1c 3d 00 00   |..D..........=..|
0x1ede78:   93 b2 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |....-....A....B.|
0x1ede88:   05 69 c5 0c 04 04 00 00  1c 00 00 00 3c 3d 00 00   |.i..........<=..|
0x1ede98:   a0 b2 00 00 3a 00 00 00  00 41 0e 08 85 02 42 0d   |....:....A....B.|
0x1edea8:   05 76 c5 0c 04 04 00 00  1c 00 00 00 5c 3d 00 00   |.v..........\=..|
0x1edeb8:   ba b2 00 00 2f 00 00 00  00 41 0e 08 85 02 42 0d   |..../....A....B.|
0x1edec8:   05 6b c5 0c 04 04 00 00  1c 00 00 00 7c 3d 00 00   |.k..........|=..|
0x1eded8:   c9 b2 00 00 4f 00 00 00  00 41 0e 08 85 02 42 0d   |....O....A....B.|
0x1edee8:   05 02 4b c5 0c 04 04 00  1c 00 00 00 9c 3d 00 00   |..K..........=..|
0x1edef8:   f8 b2 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |....\....A....B.|
0x1edf08:   05 02 58 c5 0c 04 04 00  1c 00 00 00 bc 3d 00 00   |..X..........=..|
0x1edf18:   34 b3 00 00 4f 00 00 00  00 41 0e 08 85 02 42 0d   |4...O....A....B.|
0x1edf28:   05 02 4b c5 0c 04 04 00  1c 00 00 00 dc 3d 00 00   |..K..........=..|
0x1edf38:   63 b3 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |c...\....A....B.|
0x1edf48:   05 02 58 c5 0c 04 04 00  1c 00 00 00 fc 3d 00 00   |..X..........=..|
0x1edf58:   a0 b3 00 00 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x1edf68:   05 7f c5 0c 04 04 00 00  1c 00 00 00 1c 3e 00 00   |.............>..|
0x1edf78:   c6 b3 00 00 46 00 00 00  00 41 0e 08 85 02 42 0d   |....F....A....B.|
0x1edf88:   05 02 40 c5 0c 04 04 00  1c 00 00 00 3c 3e 00 00   |..@.........<>..|
0x1edf98:   ec b3 00 00 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x1edfa8:   05 02 41 c5 0c 04 04 00  1c 00 00 00 5c 3e 00 00   |..A.........\>..|
0x1edfb8:   14 b4 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |....J....A....B.|
0x1edfc8:   05 02 44 c5 0c 04 04 00  24 00 00 00 44 39 00 00   |..D.....$...D9..|
0x1edfd8:   3e b4 00 00 d6 00 00 00  04 3b 35 00 00 41 0e 08   |>........;5..A..|
0x1edfe8:   85 02 42 0d 05 64 83 03  02 ab c3 41 0c 04 04 c5   |..B..d.....A....|
0x1edff8:   1c 00 00 00 a4 3e 00 00  ec b4 00 00 48 00 00 00   |.....>......H...|
0x1ee008:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1ee018:   1c 00 00 00 c4 3e 00 00  14 b5 00 00 76 00 00 00   |.....>......v...|
0x1ee028:   00 41 0e 08 85 02 42 0d  05 02 72 c5 0c 04 04 00   |.A....B...r.....|
0x1ee038:   1c 00 00 00 e4 3e 00 00  6a b5 00 00 4f 00 00 00   |.....>..j...O...|
0x1ee048:   00 41 0e 08 85 02 42 0d  05 02 4b c5 0c 04 04 00   |.A....B...K.....|
0x1ee058:   1c 00 00 00 04 3f 00 00  9a b5 00 00 4f 00 00 00   |.....?......O...|
0x1ee068:   00 41 0e 08 85 02 42 0d  05 02 4b c5 0c 04 04 00   |.A....B...K.....|
0x1ee078:   1c 00 00 00 24 3f 00 00  ca b5 00 00 59 00 00 00   |....$?......Y...|
0x1ee088:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1ee098:   1c 00 00 00 44 3f 00 00  04 b6 00 00 55 00 00 00   |....D?......U...|
0x1ee0a8:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1ee0b8:   1c 00 00 00 64 3f 00 00  3a b6 00 00 5f 00 00 00   |....d?..:..._...|
0x1ee0c8:   00 41 0e 08 85 02 42 0d  05 02 5b c5 0c 04 04 00   |.A....B...[.....|
0x1ee0d8:   1c 00 00 00 84 3f 00 00  7a b6 00 00 4f 00 00 00   |.....?..z...O...|
0x1ee0e8:   00 41 0e 08 85 02 42 0d  05 02 4b c5 0c 04 04 00   |.A....B...K.....|
0x1ee0f8:   1c 00 00 00 a4 3f 00 00  aa b6 00 00 59 00 00 00   |.....?......Y...|
0x1ee108:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1ee118:   20 00 00 00 c4 3f 00 00  e3 b6 00 00 b7 00 00 00   | ....?..........|
0x1ee128:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 8c c5 0c   |.A....B..g......|
0x1ee138:   04 04 c3 00 20 00 00 00  e8 3f 00 00 76 b7 00 00   |.... ....?..v...|
0x1ee148:   ec 00 00 00 00 41 0e 08  85 02 42 0d 05 67 83 03   |.....A....B..g..|
0x1ee158:   02 bf c5 0c 04 04 c3 00  1c 00 00 00 0c 40 00 00   |.............@..|
0x1ee168:   3e b8 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |>...J....A....B.|
0x1ee178:   05 02 44 c5 0c 04 04 00  1c 00 00 00 2c 40 00 00   |..D.........,@..|
0x1ee188:   68 b8 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |h...-....A....B.|
0x1ee198:   05 69 c5 0c 04 04 00 00  1c 00 00 00 4c 40 00 00   |.i..........L@..|
0x1ee1a8:   76 b8 00 00 30 00 00 00  00 41 0e 08 85 02 42 0d   |v...0....A....B.|
0x1ee1b8:   05 6c c5 0c 04 04 00 00  1c 00 00 00 6c 40 00 00   |.l..........l@..|
0x1ee1c8:   86 b8 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |....J....A....B.|
0x1ee1d8:   05 02 44 c5 0c 04 04 00  1c 00 00 00 8c 40 00 00   |..D..........@..|
0x1ee1e8:   b0 b8 00 00 4a 00 00 00  00 41 0e 08 85 02 42 0d   |....J....A....B.|
0x1ee1f8:   05 02 44 c5 0c 04 04 00  1c 00 00 00 ac 40 00 00   |..D..........@..|
0x1ee208:   da b8 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |....-....A....B.|
0x1ee218:   05 69 c5 0c 04 04 00 00  28 00 00 00 94 3b 00 00   |.i......(....;..|
0x1ee228:   e8 b8 00 00 94 01 00 00  04 4a 35 00 00 41 0e 08   |.........J5..A..|
0x1ee238:   85 02 42 0d 05 77 83 03  03 58 01 c3 41 0c 04 04   |..B..w...X..A...|
0x1ee248:   c5 00 00 00 1c 00 00 00  f8 40 00 00 50 ba 00 00   |.........@..P...|
0x1ee258:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ee268:   0c 04 04 00 28 00 00 00  e0 3b 00 00 8a ba 00 00   |....(....;......|
0x1ee278:   94 01 00 00 04 6d 35 00  00 41 0e 08 85 02 42 0d   |.....m5..A....B.|
0x1ee288:   05 77 83 03 03 58 01 c3  41 0c 04 04 c5 00 00 00   |.w...X..A.......|
0x1ee298:   1c 00 00 00 44 41 00 00  f2 bb 00 00 4c 00 00 00   |....DA......L...|
0x1ee2a8:   00 41 0e 08 85 02 42 0d  05 02 48 c5 0c 04 04 00   |.A....B...H.....|
0x1ee2b8:   28 00 00 00 2c 3c 00 00  1e bc 00 00 94 01 00 00   |(...,<..........|
0x1ee2c8:   04 90 35 00 00 41 0e 08  85 02 42 0d 05 77 83 03   |..5..A....B..w..|
0x1ee2d8:   03 58 01 c3 41 0c 04 04  c5 00 00 00 1c 00 00 00   |.X..A...........|
0x1ee2e8:   90 41 00 00 86 bd 00 00  4f 00 00 00 00 41 0e 08   |.A......O....A..|
0x1ee2f8:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1ee308:   b0 41 00 00 b6 bd 00 00  59 00 00 00 00 41 0e 08   |.A......Y....A..|
0x1ee318:   85 02 42 0d 05 02 55 c5  0c 04 04 00 1c 00 00 00   |..B...U.........|
0x1ee328:   d0 41 00 00 f0 bd 00 00  59 00 00 00 00 41 0e 08   |.A......Y....A..|
0x1ee338:   85 02 42 0d 05 02 55 c5  0c 04 04 00 28 00 00 00   |..B...U.....(...|
0x1ee348:   b8 3c 00 00 2a be 00 00  94 01 00 00 04 b3 35 00   |.<..*.........5.|
0x1ee358:   00 41 0e 08 85 02 42 0d  05 77 83 03 03 58 01 c3   |.A....B..w...X..|
0x1ee368:   41 0c 04 04 c5 00 00 00  28 00 00 00 e4 3c 00 00   |A.......(....<..|
0x1ee378:   92 bf 00 00 94 01 00 00  04 d6 35 00 00 41 0e 08   |..........5..A..|
0x1ee388:   85 02 42 0d 05 77 83 03  03 58 01 c3 41 0c 04 04   |..B..w...X..A...|
0x1ee398:   c5 00 00 00 24 00 00 00  10 3d 00 00 fa c0 00 00   |....$....=......|
0x1ee3a8:   ec 00 00 00 04 f9 35 00  00 41 0e 08 85 02 42 0d   |......5..A....B.|
0x1ee3b8:   05 71 83 03 02 b6 c3 41  0c 04 04 c5 1c 00 00 00   |.q.....A........|
0x1ee3c8:   70 42 00 00 be c1 00 00  56 00 00 00 00 41 0e 08   |pB......V....A..|
0x1ee3d8:   85 02 42 0d 05 02 52 c5  0c 04 04 00 1c 00 00 00   |..B...R.........|
0x1ee3e8:   90 42 00 00 f4 c1 00 00  5c 00 00 00 00 41 0e 08   |.B......\....A..|
0x1ee3f8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1ee408:   b0 42 00 00 30 c2 00 00  5c 00 00 00 00 41 0e 08   |.B..0...\....A..|
0x1ee418:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1ee428:   d0 42 00 00 6c c2 00 00  5c 00 00 00 00 41 0e 08   |.B..l...\....A..|
0x1ee438:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1ee448:   f0 42 00 00 a8 c2 00 00  56 00 00 00 00 41 0e 08   |.B......V....A..|
0x1ee458:   85 02 42 0d 05 02 52 c5  0c 04 04 00 1c 00 00 00   |..B...R.........|
0x1ee468:   10 43 00 00 de c2 00 00  5c 00 00 00 00 41 0e 08   |.C......\....A..|
0x1ee478:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1ee488:   30 43 00 00 1a c3 00 00  5c 00 00 00 00 41 0e 08   |0C......\....A..|
0x1ee498:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1ee4a8:   50 43 00 00 56 c3 00 00  59 00 00 00 00 41 0e 08   |PC..V...Y....A..|
0x1ee4b8:   85 02 42 0d 05 02 55 c5  0c 04 04 00 1c 00 00 00   |..B...U.........|
0x1ee4c8:   70 43 00 00 90 c3 00 00  3a 00 00 00 00 41 0e 08   |pC......:....A..|
0x1ee4d8:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ee4e8:   90 43 00 00 aa c3 00 00  2d 00 00 00 00 41 0e 08   |.C......-....A..|
0x1ee4f8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ee508:   b0 43 00 00 b8 c3 00 00  4f 00 00 00 00 41 0e 08   |.C......O....A..|
0x1ee518:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1ee528:   d0 43 00 00 e8 c3 00 00  59 00 00 00 00 41 0e 08   |.C......Y....A..|
0x1ee538:   85 02 42 0d 05 02 55 c5  0c 04 04 00 1c 00 00 00   |..B...U.........|
0x1ee548:   f0 43 00 00 22 c4 00 00  56 00 00 00 00 41 0e 08   |.C.."...V....A..|
0x1ee558:   85 02 42 0d 05 02 52 c5  0c 04 04 00 28 00 00 00   |..B...R.....(...|
0x1ee568:   d8 3e 00 00 58 c4 00 00  94 01 00 00 04 10 36 00   |.>..X.........6.|
0x1ee578:   00 41 0e 08 85 02 42 0d  05 77 83 03 03 58 01 c3   |.A....B..w...X..|
0x1ee588:   41 0c 04 04 c5 00 00 00  1c 00 00 00 3c 44 00 00   |A...........<D..|
0x1ee598:   c0 c5 00 00 4f 00 00 00  00 41 0e 08 85 02 42 0d   |....O....A....B.|
0x1ee5a8:   05 02 4b c5 0c 04 04 00  1c 00 00 00 5c 44 00 00   |..K.........\D..|
0x1ee5b8:   f0 c5 00 00 59 00 00 00  00 41 0e 08 85 02 42 0d   |....Y....A....B.|
0x1ee5c8:   05 02 55 c5 0c 04 04 00  1c 00 00 00 7c 44 00 00   |..U.........|D..|
0x1ee5d8:   29 c6 00 00 85 00 00 00  00 41 0e 08 85 02 42 0d   |)........A....B.|
0x1ee5e8:   05 02 81 c5 0c 04 04 00  1c 00 00 00 9c 44 00 00   |.............D..|
0x1ee5f8:   8e c6 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |....\....A....B.|
0x1ee608:   05 02 58 c5 0c 04 04 00  1c 00 00 00 bc 44 00 00   |..X..........D..|
0x1ee618:   ca c6 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |....-....A....B.|
0x1ee628:   05 69 c5 0c 04 04 00 00  1c 00 00 00 dc 44 00 00   |.i...........D..|
0x1ee638:   d8 c6 00 00 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x1ee648:   05 02 4e c5 0c 04 04 00  1c 00 00 00 fc 44 00 00   |..N..........D..|
0x1ee658:   0a c7 00 00 2d 00 00 00  00 41 0e 08 85 02 42 0d   |....-....A....B.|
0x1ee668:   05 69 c5 0c 04 04 00 00  1c 00 00 00 1c 45 00 00   |.i...........E..|
0x1ee678:   18 c7 00 00 5f 00 00 00  00 41 0e 08 85 02 42 0d   |...._....A....B.|
0x1ee688:   05 02 5b c5 0c 04 04 00  1c 00 00 00 3c 45 00 00   |..[.........<E..|
0x1ee698:   58 c7 00 00 ad 00 00 00  00 41 0e 08 85 02 42 0d   |X........A....B.|
0x1ee6a8:   05 02 a9 c5 0c 04 04 00  1c 00 00 00 5c 45 00 00   |............\E..|
0x1ee6b8:   e6 c7 00 00 57 00 00 00  00 41 0e 08 85 02 42 0d   |....W....A....B.|
0x1ee6c8:   05 02 53 c5 0c 04 04 00  20 00 00 00 7c 45 00 00   |..S..... ...|E..|
0x1ee6d8:   1d c8 00 00 54 00 00 00  00 41 0e 08 85 02 42 0d   |....T....A....B.|
0x1ee6e8:   05 61 83 03 6e c3 41 0c  04 04 c5 00 1c 00 00 00   |.a..n.A.........|
0x1ee6f8:   a0 45 00 00 4e c8 00 00  3a 00 00 00 00 41 0e 08   |.E..N...:....A..|
0x1ee708:   85 02 42 0d 05 76 c5 0c  04 04 00 00 1c 00 00 00   |..B..v..........|
0x1ee718:   c0 45 00 00 68 c8 00 00  2f 00 00 00 00 41 0e 08   |.E..h.../....A..|
0x1ee728:   85 02 42 0d 05 6b c5 0c  04 04 00 00 1c 00 00 00   |..B..k..........|
0x1ee738:   e0 45 00 00 77 c8 00 00  5a 00 00 00 00 41 0e 08   |.E..w...Z....A..|
0x1ee748:   85 02 42 0d 05 02 56 c5  0c 04 04 00 1c 00 00 00   |..B...V.........|
0x1ee758:   00 46 00 00 b2 c8 00 00  2f 00 00 00 00 41 0e 08   |.F....../....A..|
0x1ee768:   85 02 42 0d 05 6b c5 0c  04 04 00 00 1c 00 00 00   |..B..k..........|
0x1ee778:   20 46 00 00 c1 c8 00 00  7d 00 00 00 00 41 0e 08   | F......}....A..|
0x1ee788:   85 02 42 0d 05 02 79 c5  0c 04 04 00 1c 00 00 00   |..B...y.........|
0x1ee798:   40 46 00 00 1e c9 00 00  67 00 00 00 00 41 0e 08   |@F......g....A..|
0x1ee7a8:   85 02 42 0d 05 02 63 c5  0c 04 04 00 20 00 00 00   |..B...c..... ...|
0x1ee7b8:   60 46 00 00 65 c9 00 00  66 00 00 00 00 41 0e 08   |`F..e...f....A..|
0x1ee7c8:   85 02 42 0d 05 67 83 03  7a c3 41 0c 04 04 c5 00   |..B..g..z.A.....|
0x1ee7d8:   20 00 00 00 84 46 00 00  a8 c9 00 00 d2 00 00 00   | ....F..........|
0x1ee7e8:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 a6 c3 41   |.A....B..g.....A|
0x1ee7f8:   0c 04 04 c5 1c 00 00 00  a8 46 00 00 56 ca 00 00   |.........F..V...|
0x1ee808:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1ee818:   0c 04 04 00 2c 00 00 00  90 41 00 00 92 ca 00 00   |....,....A......|
0x1ee828:   d1 03 00 00 04 34 36 00  00 41 0e 08 85 02 42 0d   |.....46..A....B.|
0x1ee838:   05 7b 83 04 86 03 03 90  03 c3 41 c6 41 0c 04 04   |.{........A.A...|
0x1ee848:   c5 00 00 00 1c 00 00 00  f8 46 00 00 34 ce 00 00   |.........F..4...|
0x1ee858:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1ee868:   0c 04 04 00 1c 00 00 00  18 47 00 00 66 ce 00 00   |.........G..f...|
0x1ee878:   42 00 00 00 00 41 0e 08  85 02 42 0d 05 7e c5 0c   |B....A....B..~..|
0x1ee888:   04 04 00 00 1c 00 00 00  38 47 00 00 88 ce 00 00   |........8G......|
0x1ee898:   5f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 5b c5   |_....A....B...[.|
0x1ee8a8:   0c 04 04 00 1c 00 00 00  58 47 00 00 c8 ce 00 00   |........XG......|
0x1ee8b8:   57 00 00 00 00 41 0e 08  85 02 42 0d 05 02 53 c5   |W....A....B...S.|
0x1ee8c8:   0c 04 04 00 1c 00 00 00  78 47 00 00 ff ce 00 00   |........xG......|
0x1ee8d8:   55 00 00 00 00 41 0e 08  85 02 42 0d 05 02 51 c5   |U....A....B...Q.|
0x1ee8e8:   0c 04 04 00 1c 00 00 00  98 47 00 00 34 cf 00 00   |.........G..4...|
0x1ee8f8:   41 00 00 00 00 41 0e 08  85 02 42 0d 05 7d c5 0c   |A....A....B..}..|
0x1ee908:   04 04 00 00 1c 00 00 00  b8 47 00 00 55 cf 00 00   |.........G..U...|
0x1ee918:   4a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 44 c5   |J....A....B...D.|
0x1ee928:   0c 04 04 00 24 00 00 00  d8 47 00 00 7f cf 00 00   |....$....G......|
0x1ee938:   92 00 00 00 00 41 0e 08  85 02 42 0d 05 6e 83 04   |.....A....B..n..|
0x1ee948:   86 03 02 5c c3 41 c6 41  0c 04 04 c5 1c 00 00 00   |...\.A.A........|
0x1ee958:   00 48 00 00 e9 cf 00 00  42 00 00 00 00 41 0e 08   |.H......B....A..|
0x1ee968:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ee978:   20 48 00 00 0b d0 00 00  35 00 00 00 00 41 0e 08   | H......5....A..|
0x1ee988:   85 02 42 0d 05 71 c5 0c  04 04 00 00 24 00 00 00   |..B..q......$...|
0x1ee998:   40 48 00 00 20 d0 00 00  72 00 00 00 00 41 0e 08   |@H.. ...r....A..|
0x1ee9a8:   85 02 42 0d 05 68 83 04  86 03 02 44 c3 41 c6 41   |..B..h.....D.A.A|
0x1ee9b8:   0c 04 04 c5 1c 00 00 00  68 48 00 00 6a d0 00 00   |........hH..j...|
0x1ee9c8:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ee9d8:   0c 04 04 00 1c 00 00 00  88 48 00 00 9a d0 00 00   |.........H......|
0x1ee9e8:   6d 00 00 00 00 41 0e 08  85 02 42 0d 05 02 69 c5   |m....A....B...i.|
0x1ee9f8:   0c 04 04 00 1c 00 00 00  a8 48 00 00 e7 d0 00 00   |.........H......|
0x1eea08:   3e 00 00 00 00 41 0e 08  85 02 42 0d 05 7a c5 0c   |>....A....B..z..|
0x1eea18:   04 04 00 00 1c 00 00 00  c8 48 00 00 05 d1 00 00   |.........H......|
0x1eea28:   3e 00 00 00 00 41 0e 08  85 02 42 0d 05 7a c5 0c   |>....A....B..z..|
0x1eea38:   04 04 00 00 1c 00 00 00  e8 48 00 00 23 d1 00 00   |.........H..#...|
0x1eea48:   3e 00 00 00 00 41 0e 08  85 02 42 0d 05 7a c5 0c   |>....A....B..z..|
0x1eea58:   04 04 00 00 24 00 00 00  d0 43 00 00 42 d1 00 00   |....$....C..B...|
0x1eea68:   8b 00 00 00 04 5c 36 00  00 41 0e 08 85 02 42 0d   |.....\6..A....B.|
0x1eea78:   05 6b 83 03 02 5b c3 41  0c 04 04 c5 1c 00 00 00   |.k...[.A........|
0x1eea88:   30 49 00 00 a5 d1 00 00  46 00 00 00 00 41 0e 08   |0I......F....A..|
0x1eea98:   85 02 42 0d 05 02 42 c5  0c 04 04 00 1c 00 00 00   |..B...B.........|
0x1eeaa8:   50 49 00 00 cb d1 00 00  4f 00 00 00 00 41 0e 08   |PI......O....A..|
0x1eeab8:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1eeac8:   70 49 00 00 fa d1 00 00  4a 00 00 00 00 41 0e 08   |pI......J....A..|
0x1eead8:   85 02 42 0d 05 02 44 c5  0c 04 04 00 24 00 00 00   |..B...D.....$...|
0x1eeae8:   90 49 00 00 24 d2 00 00  92 00 00 00 00 41 0e 08   |.I..$........A..|
0x1eeaf8:   85 02 42 0d 05 6e 83 04  86 03 02 5c c3 41 c6 41   |..B..n.....\.A.A|
0x1eeb08:   0c 04 04 c5 1c 00 00 00  b8 49 00 00 8e d2 00 00   |.........I......|
0x1eeb18:   3a 00 00 00 00 41 0e 08  85 02 42 0d 05 76 c5 0c   |:....A....B..v..|
0x1eeb28:   04 04 00 00 20 00 00 00  d8 49 00 00 a8 d2 00 00   |.... ....I......|
0x1eeb38:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 61 83 03   |T....A....B..a..|
0x1eeb48:   6e c3 41 0c 04 04 c5 00  1c 00 00 00 fc 49 00 00   |n.A..........I..|
0x1eeb58:   d8 d2 00 00 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x1eeb68:   05 7e c5 0c 04 04 00 00  20 00 00 00 1c 4a 00 00   |.~...... ....J..|
0x1eeb78:   fa d2 00 00 66 00 00 00  00 41 0e 08 85 02 42 0d   |....f....A....B.|
0x1eeb88:   05 67 83 03 7a c3 41 0c  04 04 c5 00 20 00 00 00   |.g..z.A..... ...|
0x1eeb98:   40 4a 00 00 3c d3 00 00  d2 00 00 00 00 41 0e 08   |@J..<........A..|
0x1eeba8:   85 02 42 0d 05 67 83 03  02 a6 c3 41 0c 04 04 c5   |..B..g.....A....|
0x1eebb8:   1c 00 00 00 64 4a 00 00  ea d3 00 00 5c 00 00 00   |....dJ......\...|
0x1eebc8:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1eebd8:   1c 00 00 00 84 4a 00 00  26 d4 00 00 ad 00 00 00   |.....J..&.......|
0x1eebe8:   00 41 0e 08 85 02 42 0d  05 02 a9 c5 0c 04 04 00   |.A....B.........|
0x1eebf8:   1c 00 00 00 a4 4a 00 00  b3 d4 00 00 35 00 00 00   |.....J......5...|
0x1eec08:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1eec18:   1c 00 00 00 c4 4a 00 00  c8 d4 00 00 52 00 00 00   |.....J......R...|
0x1eec28:   00 41 0e 08 85 02 42 0d  05 02 4e c5 0c 04 04 00   |.A....B...N.....|
0x1eec38:   1c 00 00 00 e4 4a 00 00  fa d4 00 00 55 00 00 00   |.....J......U...|
0x1eec48:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1eec58:   1c 00 00 00 04 4b 00 00  2f d5 00 00 42 00 00 00   |.....K../...B...|
0x1eec68:   00 41 0e 08 85 02 42 0d  05 7e c5 0c 04 04 00 00   |.A....B..~......|
0x1eec78:   1c 00 00 00 24 4b 00 00  52 d5 00 00 3a 00 00 00   |....$K..R...:...|
0x1eec88:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x1eec98:   1c 00 00 00 44 4b 00 00  6c d5 00 00 2d 00 00 00   |....DK..l...-...|
0x1eeca8:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1eecb8:   1c 00 00 00 64 4b 00 00  7a d5 00 00 4c 00 00 00   |....dK..z...L...|
0x1eecc8:   00 41 0e 08 85 02 42 0d  05 02 48 c5 0c 04 04 00   |.A....B...H.....|
0x1eecd8:   1c 00 00 00 84 4b 00 00  a6 d5 00 00 4d 00 00 00   |.....K......M...|
0x1eece8:   00 41 0e 08 85 02 42 0d  05 02 49 c5 0c 04 04 00   |.A....B...I.....|
0x1eecf8:   1c 00 00 00 a4 4b 00 00  d4 d5 00 00 5f 00 00 00   |.....K......_...|
0x1eed08:   00 41 0e 08 85 02 42 0d  05 02 5b c5 0c 04 04 00   |.A....B...[.....|
0x1eed18:   1c 00 00 00 c4 4b 00 00  14 d6 00 00 57 00 00 00   |.....K......W...|
0x1eed28:   00 41 0e 08 85 02 42 0d  05 02 53 c5 0c 04 04 00   |.A....B...S.....|
0x1eed38:   1c 00 00 00 e4 4b 00 00  4b d6 00 00 55 00 00 00   |.....K..K...U...|
0x1eed48:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1eed58:   1c 00 00 00 04 4c 00 00  80 d6 00 00 3a 00 00 00   |.....L......:...|
0x1eed68:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x1eed78:   1c 00 00 00 24 4c 00 00  9a d6 00 00 38 00 00 00   |....$L......8...|
0x1eed88:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1eed98:   1c 00 00 00 44 4c 00 00  b2 d6 00 00 2f 00 00 00   |....DL....../...|
0x1eeda8:   00 41 0e 08 85 02 42 0d  05 6b c5 0c 04 04 00 00   |.A....B..k......|
0x1eedb8:   1c 00 00 00 64 4c 00 00  c1 d6 00 00 33 00 00 00   |....dL......3...|
0x1eedc8:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1eedd8:   1c 00 00 00 84 4c 00 00  d4 d6 00 00 4a 00 00 00   |.....L......J...|
0x1eede8:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1eedf8:   1c 00 00 00 a4 4c 00 00  fe d6 00 00 4a 00 00 00   |.....L......J...|
0x1eee08:   00 41 0e 08 85 02 42 0d  05 02 44 c5 0c 04 04 00   |.A....B...D.....|
0x1eee18:   1c 00 00 00 c4 4c 00 00  28 d7 00 00 3b 00 00 00   |.....L..(...;...|
0x1eee28:   00 41 0e 08 85 02 42 0d  05 77 c5 0c 04 04 00 00   |.A....B..w......|
0x1eee38:   2c 00 00 00 ac 47 00 00  44 d7 00 00 2a 04 00 00   |,....G..D...*...|
0x1eee48:   04 74 36 00 00 41 0e 08  85 02 42 0d 05 72 83 04   |.t6..A....B..r..|
0x1eee58:   86 03 03 f2 03 c3 41 c6  41 0c 04 04 c5 00 00 00   |......A.A.......|
0x1eee68:   1c 00 00 00 14 4d 00 00  3e db 00 00 56 00 00 00   |.....M..>...V...|
0x1eee78:   00 41 0e 08 85 02 42 0d  05 02 52 c5 0c 04 04 00   |.A....B...R.....|
0x1eee88:   20 00 00 00 34 4d 00 00  74 db 00 00 7a 00 00 00   | ...4M..t...z...|
0x1eee98:   00 41 0e 08 85 02 42 0d  05 7b 83 03 7a c3 41 0c   |.A....B..{..z.A.|
0x1eeea8:   04 04 c5 00 1c 00 00 00  58 4d 00 00 ca db 00 00   |........XM......|
0x1eeeb8:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1eeec8:   0c 04 04 00 1c 00 00 00  78 4d 00 00 f9 db 00 00   |........xM......|
0x1eeed8:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1eeee8:   0c 04 04 00 1c 00 00 00  98 4d 00 00 35 dc 00 00   |.........M..5...|
0x1eeef8:   56 00 00 00 00 41 0e 08  85 02 42 0d 05 02 52 c5   |V....A....B...R.|
0x1eef08:   0c 04 04 00 1c 00 00 00  b8 4d 00 00 6b dc 00 00   |.........M..k...|
0x1eef18:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1eef28:   0c 04 04 00 1c 00 00 00  d8 4d 00 00 a8 dc 00 00   |.........M......|
0x1eef38:   30 00 00 00 00 41 0e 08  85 02 42 0d 05 6c c5 0c   |0....A....B..l..|
0x1eef48:   04 04 00 00 1c 00 00 00  f8 4d 00 00 b8 dc 00 00   |.........M......|
0x1eef58:   30 00 00 00 00 41 0e 08  85 02 42 0d 05 6c c5 0c   |0....A....B..l..|
0x1eef68:   04 04 00 00 1c 00 00 00  18 4e 00 00 c8 dc 00 00   |.........N......|
0x1eef78:   b4 00 00 00 00 41 0e 08  85 02 42 0d 05 02 ae c5   |.....A....B.....|
0x1eef88:   0c 04 04 00 1c 00 00 00  38 4e 00 00 5c dd 00 00   |........8N..\...|
0x1eef98:   44 00 00 00 00 41 0e 08  85 02 42 0d 05 02 40 c5   |D....A....B...@.|
0x1eefa8:   0c 04 04 00 1c 00 00 00  58 4e 00 00 80 dd 00 00   |........XN......|
0x1eefb8:   38 00 00 00 00 41 0e 08  85 02 42 0d 05 74 c5 0c   |8....A....B..t..|
0x1eefc8:   04 04 00 00 1c 00 00 00  78 4e 00 00 98 dd 00 00   |........xN......|
0x1eefd8:   38 00 00 00 00 41 0e 08  85 02 42 0d 05 74 c5 0c   |8....A....B..t..|
0x1eefe8:   04 04 00 00 1c 00 00 00  98 4e 00 00 b0 dd 00 00   |.........N......|
0x1eeff8:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ef008:   0c 04 04 00 1c 00 00 00  b8 4e 00 00 e0 dd 00 00   |.........N......|
0x1ef018:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ef028:   0c 04 04 00 1c 00 00 00  d8 4e 00 00 19 de 00 00   |.........N......|
0x1ef038:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1ef048:   0c 04 04 00 1c 00 00 00  f8 4e 00 00 56 de 00 00   |.........N..V...|
0x1ef058:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ef068:   0c 04 04 00 1c 00 00 00  18 4f 00 00 86 de 00 00   |.........O......|
0x1ef078:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ef088:   0c 04 04 00 1c 00 00 00  38 4f 00 00 c0 de 00 00   |........8O......|
0x1ef098:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1ef0a8:   0c 04 04 00 1c 00 00 00  58 4f 00 00 f0 de 00 00   |........XO......|
0x1ef0b8:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1ef0c8:   0c 04 04 00 20 00 00 00  78 4f 00 00 29 df 00 00   |.... ...xO..)...|
0x1ef0d8:   7a 00 00 00 00 41 0e 08  85 02 42 0d 05 7b 83 03   |z....A....B..{..|
0x1ef0e8:   7a c3 41 0c 04 04 c5 00  1c 00 00 00 9c 4f 00 00   |z.A..........O..|
0x1ef0f8:   7f df 00 00 85 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x1ef108:   05 02 81 c5 0c 04 04 00  1c 00 00 00 bc 4f 00 00   |.............O..|
0x1ef118:   e4 df 00 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |....\....A....B.|
0x1ef128:   05 02 58 c5 0c 04 04 00  1c 00 00 00 dc 4f 00 00   |..X..........O..|
0x1ef138:   20 e0 00 00 51 00 00 00  00 41 0e 08 85 02 42 0d   | ...Q....A....B.|
0x1ef148:   05 02 4d c5 0c 04 04 00  28 00 00 00 c4 4a 00 00   |..M.....(....J..|
0x1ef158:   52 e0 00 00 cd 03 00 00  04 9c 36 00 00 41 0e 08   |R.........6..A..|
0x1ef168:   85 02 42 0d 05 02 40 83  03 03 89 03 c5 0c 04 04   |..B...@.........|
0x1ef178:   c3 00 00 00 1c 00 00 00  28 50 00 00 f4 e3 00 00   |........(P......|
0x1ef188:   56 00 00 00 00 41 0e 08  85 02 42 0d 05 02 52 c5   |V....A....B...R.|
0x1ef198:   0c 04 04 00 1c 00 00 00  48 50 00 00 2a e4 00 00   |........HP..*...|
0x1ef1a8:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1ef1b8:   0c 04 04 00 1c 00 00 00  68 50 00 00 5c e4 00 00   |........hP..\...|
0x1ef1c8:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1ef1d8:   0c 04 04 00 24 00 00 00  88 50 00 00 8e e4 00 00   |....$....P......|
0x1ef1e8:   a5 00 00 00 00 41 0e 08  85 02 42 0d 05 02 59 83   |.....A....B...Y.|
0x1ef1f8:   03 02 47 c3 41 0c 04 04  c5 00 00 00 1c 00 00 00   |..G.A...........|
0x1ef208:   b0 50 00 00 0b e5 00 00  5c 00 00 00 00 41 0e 08   |.P......\....A..|
0x1ef218:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1ef228:   d0 50 00 00 47 e5 00 00  4f 00 00 00 00 41 0e 08   |.P..G...O....A..|
0x1ef238:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1ef248:   f0 50 00 00 76 e5 00 00  5c 00 00 00 00 41 0e 08   |.P..v...\....A..|
0x1ef258:   85 02 42 0d 05 02 58 c5  0c 04 04 00 20 00 00 00   |..B...X..... ...|
0x1ef268:   10 51 00 00 b2 e5 00 00  7a 00 00 00 00 41 0e 08   |.Q......z....A..|
0x1ef278:   85 02 42 0d 05 7b 83 03  7a c3 41 0c 04 04 c5 00   |..B..{..z.A.....|
0x1ef288:   1c 00 00 00 34 51 00 00  08 e6 00 00 85 00 00 00   |....4Q..........|
0x1ef298:   00 41 0e 08 85 02 42 0d  05 02 81 c5 0c 04 04 00   |.A....B.........|
0x1ef2a8:   2c 00 00 00 54 51 00 00  6e e6 00 00 e9 03 00 00   |,...TQ..n.......|
0x1ef2b8:   00 41 0e 08 85 02 42 0d  05 02 46 83 05 86 04 87   |.A....B...F.....|
0x1ef2c8:   03 03 9c 03 c3 41 c6 41  c7 41 0c 04 04 c5 00 00   |.....A.A.A......|
0x1ef2d8:   1c 00 00 00 84 51 00 00  28 ea 00 00 42 00 00 00   |.....Q..(...B...|
0x1ef2e8:   00 41 0e 08 85 02 42 0d  05 7e c5 0c 04 04 00 00   |.A....B..~......|
0x1ef2f8:   20 00 00 00 a4 51 00 00  4a ea 00 00 5f 00 00 00   | ....Q..J..._...|
0x1ef308:   00 41 0e 08 85 02 42 0d  05 68 83 03 73 c5 0c 04   |.A....B..h..s...|
0x1ef318:   04 c3 00 00 20 00 00 00  c8 51 00 00 85 ea 00 00   |.... ....Q......|
0x1ef328:   5f 00 00 00 00 41 0e 08  85 02 42 0d 05 68 83 03   |_....A....B..h..|
0x1ef338:   73 c5 0c 04 04 c3 00 00  1c 00 00 00 ec 51 00 00   |s............Q..|
0x1ef348:   c0 ea 00 00 7d 00 00 00  00 41 0e 08 85 02 42 0d   |....}....A....B.|
0x1ef358:   05 02 79 c5 0c 04 04 00  20 00 00 00 0c 52 00 00   |..y..... ....R..|
0x1ef368:   1d eb 00 00 5f 00 00 00  00 41 0e 08 85 02 42 0d   |...._....A....B.|
0x1ef378:   05 68 83 03 73 c5 0c 04  04 c3 00 00 1c 00 00 00   |.h..s...........|
0x1ef388:   30 52 00 00 58 eb 00 00  5b 00 00 00 00 41 0e 08   |0R..X...[....A..|
0x1ef398:   85 02 42 0d 05 02 57 c5  0c 04 04 00 1c 00 00 00   |..B...W.........|
0x1ef3a8:   50 52 00 00 94 eb 00 00  2d 00 00 00 00 41 0e 08   |PR......-....A..|
0x1ef3b8:   85 02 42 0d 05 69 c5 0c  04 04 00 00 2c 00 00 00   |..B..i......,...|
0x1ef3c8:   38 4d 00 00 a2 eb 00 00  9d 01 00 00 04 c8 36 00   |8M............6.|
0x1ef3d8:   00 41 0e 08 85 02 42 0d  05 6e 83 04 86 03 03 69   |.A....B..n.....i|
0x1ef3e8:   01 c3 41 c6 41 0c 04 04  c5 00 00 00 1c 00 00 00   |..A.A...........|
0x1ef3f8:   a0 52 00 00 10 ed 00 00  41 00 00 00 00 41 0e 08   |.R......A....A..|
0x1ef408:   85 02 42 0d 05 7d c5 0c  04 04 00 00 1c 00 00 00   |..B..}..........|
0x1ef418:   c0 52 00 00 31 ed 00 00  35 00 00 00 00 41 0e 08   |.R..1...5....A..|
0x1ef428:   85 02 42 0d 05 71 c5 0c  04 04 00 00 24 00 00 00   |..B..q......$...|
0x1ef438:   e0 52 00 00 46 ed 00 00  72 00 00 00 00 41 0e 08   |.R..F...r....A..|
0x1ef448:   85 02 42 0d 05 68 83 04  86 03 02 44 c3 41 c6 41   |..B..h.....D.A.A|
0x1ef458:   0c 04 04 c5 1c 00 00 00  08 53 00 00 90 ed 00 00   |.........S......|
0x1ef468:   46 00 00 00 00 41 0e 08  85 02 42 0d 05 02 42 c5   |F....A....B...B.|
0x1ef478:   0c 04 04 00 1c 00 00 00  28 53 00 00 b6 ed 00 00   |........(S......|
0x1ef488:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1ef498:   04 04 00 00 20 00 00 00  48 53 00 00 cb ed 00 00   |.... ...HS......|
0x1ef4a8:   7c 00 00 00 00 41 0e 08  85 02 42 0d 05 6d 83 03   ||....A....B..m..|
0x1ef4b8:   02 49 c5 0c 04 04 c3 00  20 00 00 00 6c 53 00 00   |.I...... ...lS..|
0x1ef4c8:   23 ee 00 00 65 00 00 00  00 41 0e 08 85 02 42 0d   |#...e....A....B.|
0x1ef4d8:   05 6e 83 03 73 c5 0c 04  04 c3 00 00 1c 00 00 00   |.n..s...........|
0x1ef4e8:   90 53 00 00 64 ee 00 00  35 00 00 00 00 41 0e 08   |.S..d...5....A..|
0x1ef4f8:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1ef508:   b0 53 00 00 79 ee 00 00  30 00 00 00 00 41 0e 08   |.S..y...0....A..|
0x1ef518:   85 02 42 0d 05 6c c5 0c  04 04 00 00 1c 00 00 00   |..B..l..........|
0x1ef528:   d0 53 00 00 8a ee 00 00  42 00 00 00 00 41 0e 08   |.S......B....A..|
0x1ef538:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ef548:   f0 53 00 00 ac ee 00 00  5b 00 00 00 00 41 0e 08   |.S......[....A..|
0x1ef558:   85 02 42 0d 05 02 57 c5  0c 04 04 00 1c 00 00 00   |..B...W.........|
0x1ef568:   10 54 00 00 e7 ee 00 00  4f 00 00 00 00 41 0e 08   |.T......O....A..|
0x1ef578:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1ef588:   30 54 00 00 16 ef 00 00  3d 00 00 00 00 41 0e 08   |0T......=....A..|
0x1ef598:   85 02 42 0d 05 77 c5 0c  04 04 00 00 1c 00 00 00   |..B..w..........|
0x1ef5a8:   50 54 00 00 33 ef 00 00  35 00 00 00 00 41 0e 08   |PT..3...5....A..|
0x1ef5b8:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1ef5c8:   70 54 00 00 48 ef 00 00  53 00 00 00 00 41 0e 08   |pT..H...S....A..|
0x1ef5d8:   85 02 42 0d 05 02 4f c5  0c 04 04 00 1c 00 00 00   |..B...O.........|
0x1ef5e8:   90 54 00 00 7b ef 00 00  30 00 00 00 00 41 0e 08   |.T..{...0....A..|
0x1ef5f8:   85 02 42 0d 05 6c c5 0c  04 04 00 00 1c 00 00 00   |..B..l..........|
0x1ef608:   b0 54 00 00 8b ef 00 00  2d 00 00 00 00 41 0e 08   |.T......-....A..|
0x1ef618:   85 02 42 0d 05 69 c5 0c  04 04 00 00 1c 00 00 00   |..B..i..........|
0x1ef628:   d0 54 00 00 98 ef 00 00  35 00 00 00 00 41 0e 08   |.T......5....A..|
0x1ef638:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1ef648:   f0 54 00 00 ad ef 00 00  53 00 00 00 00 41 0e 08   |.T......S....A..|
0x1ef658:   85 02 42 0d 05 02 4f c5  0c 04 04 00 1c 00 00 00   |..B...O.........|
0x1ef668:   10 55 00 00 e0 ef 00 00  4f 00 00 00 00 41 0e 08   |.U......O....A..|
0x1ef678:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1ef688:   30 55 00 00 0f f0 00 00  53 00 00 00 00 41 0e 08   |0U......S....A..|
0x1ef698:   85 02 42 0d 05 02 4f c5  0c 04 04 00 1c 00 00 00   |..B...O.........|
0x1ef6a8:   50 55 00 00 42 f0 00 00  4d 00 00 00 00 41 0e 08   |PU..B...M....A..|
0x1ef6b8:   85 02 42 0d 05 02 49 c5  0c 04 04 00 1c 00 00 00   |..B...I.........|
0x1ef6c8:   70 55 00 00 6f f0 00 00  42 00 00 00 00 41 0e 08   |pU..o...B....A..|
0x1ef6d8:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ef6e8:   90 55 00 00 91 f0 00 00  4f 00 00 00 00 41 0e 08   |.U......O....A..|
0x1ef6f8:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1ef708:   b0 55 00 00 c0 f0 00 00  3d 00 00 00 00 41 0e 08   |.U......=....A..|
0x1ef718:   85 02 42 0d 05 77 c5 0c  04 04 00 00 20 00 00 00   |..B..w...... ...|
0x1ef728:   d0 55 00 00 dd f0 00 00  59 00 00 00 00 41 0e 08   |.U......Y....A..|
0x1ef738:   85 02 42 0d 05 61 83 03  73 c3 41 0c 04 04 c5 00   |..B..a..s.A.....|
0x1ef748:   24 00 00 00 f4 55 00 00  12 f1 00 00 72 00 00 00   |$....U......r...|
0x1ef758:   00 41 0e 08 85 02 42 0d  05 68 83 04 86 03 02 44   |.A....B..h.....D|
0x1ef768:   c3 41 c6 41 0c 04 04 c5  1c 00 00 00 1c 56 00 00   |.A.A.........V..|
0x1ef778:   5c f1 00 00 3d 00 00 00  00 41 0e 08 85 02 42 0d   |\...=....A....B.|
0x1ef788:   05 79 c5 0c 04 04 00 00  20 00 00 00 3c 56 00 00   |.y...... ...<V..|
0x1ef798:   79 f1 00 00 5f 00 00 00  00 41 0e 08 85 02 42 0d   |y..._....A....B.|
0x1ef7a8:   05 68 83 03 73 c5 0c 04  04 c3 00 00 1c 00 00 00   |.h..s...........|
0x1ef7b8:   60 56 00 00 b4 f1 00 00  79 00 00 00 00 41 0e 08   |`V......y....A..|
0x1ef7c8:   85 02 42 0d 05 02 75 c5  0c 04 04 00 1c 00 00 00   |..B...u.........|
0x1ef7d8:   80 56 00 00 0d f2 00 00  37 00 00 00 00 41 0e 08   |.V......7....A..|
0x1ef7e8:   85 02 42 0d 05 73 c5 0c  04 04 00 00 1c 00 00 00   |..B..s..........|
0x1ef7f8:   a0 56 00 00 24 f2 00 00  41 00 00 00 00 41 0e 08   |.V..$...A....A..|
0x1ef808:   85 02 42 0d 05 7d c5 0c  04 04 00 00 1c 00 00 00   |..B..}..........|
0x1ef818:   c0 56 00 00 45 f2 00 00  56 00 00 00 00 41 0e 08   |.V..E...V....A..|
0x1ef828:   85 02 42 0d 05 02 52 c5  0c 04 04 00 1c 00 00 00   |..B...R.........|
0x1ef838:   e0 56 00 00 7b f2 00 00  6c 00 00 00 00 41 0e 08   |.V..{...l....A..|
0x1ef848:   85 02 42 0d 05 02 68 c5  0c 04 04 00 1c 00 00 00   |..B...h.........|
0x1ef858:   00 57 00 00 c8 f2 00 00  42 00 00 00 00 41 0e 08   |.W......B....A..|
0x1ef868:   85 02 42 0d 05 7e c5 0c  04 04 00 00 1c 00 00 00   |..B..~..........|
0x1ef878:   20 57 00 00 ea f2 00 00  65 00 00 00 00 41 0e 08   | W......e....A..|
0x1ef888:   85 02 42 0d 05 02 61 c5  0c 04 04 00 1c 00 00 00   |..B...a.........|
0x1ef898:   40 57 00 00 2f f3 00 00  4f 00 00 00 00 41 0e 08   |@W../...O....A..|
0x1ef8a8:   85 02 42 0d 05 02 4b c5  0c 04 04 00 20 00 00 00   |..B...K..... ...|
0x1ef8b8:   60 57 00 00 5e f3 00 00  66 00 00 00 00 41 0e 08   |`W..^...f....A..|
0x1ef8c8:   85 02 42 0d 05 67 83 03  7a c3 41 0c 04 04 c5 00   |..B..g..z.A.....|
0x1ef8d8:   1c 00 00 00 84 57 00 00  a0 f3 00 00 6a 00 00 00   |.....W......j...|
0x1ef8e8:   00 41 0e 08 85 02 42 0d  05 02 66 c5 0c 04 04 00   |.A....B...f.....|
0x1ef8f8:   1c 00 00 00 a4 57 00 00  ea f3 00 00 c3 00 00 00   |.....W..........|
0x1ef908:   00 41 0e 08 85 02 42 0d  05 02 bd c5 0c 04 04 00   |.A....B.........|
0x1ef918:   20 00 00 00 c4 57 00 00  8e f4 00 00 d2 00 00 00   | ....W..........|
0x1ef928:   00 41 0e 08 85 02 42 0d  05 67 83 03 02 a6 c3 41   |.A....B..g.....A|
0x1ef938:   0c 04 04 c5 1c 00 00 00  e8 57 00 00 3c f5 00 00   |.........W..<...|
0x1ef948:   52 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4e c5   |R....A....B...N.|
0x1ef958:   0c 04 04 00 1c 00 00 00  08 58 00 00 6e f5 00 00   |.........X..n...|
0x1ef968:   e1 00 00 00 00 41 0e 08  85 02 42 0d 05 02 db c5   |.....A....B.....|
0x1ef978:   0c 04 04 00 1c 00 00 00  28 58 00 00 2f f6 00 00   |........(X../...|
0x1ef988:   c3 00 00 00 00 41 0e 08  85 02 42 0d 05 02 bd c5   |.....A....B.....|
0x1ef998:   0c 04 04 00 1c 00 00 00  48 58 00 00 d2 f6 00 00   |........HX......|
0x1ef9a8:   63 00 00 00 00 41 0e 08  85 02 42 0d 05 02 5f c5   |c....A....B..._.|
0x1ef9b8:   0c 04 04 00 24 00 00 00  68 58 00 00 16 f7 00 00   |....$...hX......|
0x1ef9c8:   ea 03 00 00 00 41 0e 08  85 02 42 0d 05 02 49 83   |.....A....B...I.|
0x1ef9d8:   03 03 9d 03 c5 0c 04 04  c3 00 00 00 1c 00 00 00   |................|
0x1ef9e8:   90 58 00 00 d8 fa 00 00  56 00 00 00 00 41 0e 08   |.X......V....A..|
0x1ef9f8:   85 02 42 0d 05 02 52 c5  0c 04 04 00 1c 00 00 00   |..B...R.........|
0x1efa08:   b0 58 00 00 0e fb 00 00  44 00 00 00 00 41 0e 08   |.X......D....A..|
0x1efa18:   85 02 42 0d 05 02 40 c5  0c 04 04 00 1c 00 00 00   |..B...@.........|
0x1efa28:   d0 58 00 00 32 fb 00 00  30 00 00 00 00 41 0e 08   |.X..2...0....A..|
0x1efa38:   85 02 42 0d 05 6c c5 0c  04 04 00 00 1c 00 00 00   |..B..l..........|
0x1efa48:   f0 58 00 00 42 fb 00 00  30 00 00 00 00 41 0e 08   |.X..B...0....A..|
0x1efa58:   85 02 42 0d 05 6c c5 0c  04 04 00 00 1c 00 00 00   |..B..l..........|
0x1efa68:   10 59 00 00 52 fb 00 00  30 00 00 00 00 41 0e 08   |.Y..R...0....A..|
0x1efa78:   85 02 42 0d 05 6c c5 0c  04 04 00 00 1c 00 00 00   |..B..l..........|
0x1efa88:   30 59 00 00 62 fb 00 00  33 00 00 00 00 41 0e 08   |0Y..b...3....A..|
0x1efa98:   85 02 42 0d 05 6f c5 0c  04 04 00 00 1c 00 00 00   |..B..o..........|
0x1efaa8:   50 59 00 00 75 fb 00 00  4f 00 00 00 00 41 0e 08   |PY..u...O....A..|
0x1efab8:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1efac8:   70 59 00 00 a4 fb 00 00  5c 00 00 00 00 41 0e 08   |pY......\....A..|
0x1efad8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 24 00 00 00   |..B...X.....$...|
0x1efae8:   58 54 00 00 e0 fb 00 00  a2 00 00 00 04 f0 36 00   |XT............6.|
0x1efaf8:   00 41 0e 08 85 02 42 0d  05 6d 83 03 02 70 c3 41   |.A....B..m...p.A|
0x1efb08:   0c 04 04 c5 1c 00 00 00  b8 59 00 00 5a fc 00 00   |.........Y..Z...|
0x1efb18:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1efb28:   0c 04 04 00 1c 00 00 00  d8 59 00 00 89 fc 00 00   |.........Y......|
0x1efb38:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1efb48:   0c 04 04 00 1c 00 00 00  f8 59 00 00 c5 fc 00 00   |.........Y......|
0x1efb58:   4f 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4b c5   |O....A....B...K.|
0x1efb68:   0c 04 04 00 1c 00 00 00  18 5a 00 00 f4 fc 00 00   |.........Z......|
0x1efb78:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1efb88:   0c 04 04 00 2c 00 00 00  38 5a 00 00 30 fd 00 00   |....,...8Z..0...|
0x1efb98:   96 02 00 00 00 41 0e 08  85 02 42 0d 05 02 42 83   |.....A....B...B.|
0x1efba8:   05 86 04 87 03 03 4d 02  c3 41 c6 41 c7 41 0c 04   |......M..A.A.A..|
0x1efbb8:   04 c5 00 00 1c 00 00 00  68 5a 00 00 96 ff 00 00   |........hZ......|
0x1efbc8:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1efbd8:   0c 04 04 00 1c 00 00 00  88 5a 00 00 d2 ff 00 00   |.........Z......|
0x1efbe8:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1efbf8:   0c 04 04 00 1c 00 00 00  a8 5a 00 00 0e 00 01 00   |.........Z......|
0x1efc08:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1efc18:   04 04 00 00 1c 00 00 00  c8 5a 00 00 24 00 01 00   |.........Z..$...|
0x1efc28:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1efc38:   04 04 00 00 24 00 00 00  b0 55 00 00 3a 00 01 00   |....$....U..:...|
0x1efc48:   b5 00 00 00 04 06 37 00  00 41 0e 08 85 02 42 0d   |......7..A....B.|
0x1efc58:   05 74 83 03 02 7c c3 41  0c 04 04 c5 1c 00 00 00   |.t...|.A........|
0x1efc68:   10 5b 00 00 c8 00 01 00  35 00 00 00 00 41 0e 08   |.[......5....A..|
0x1efc78:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x1efc88:   30 5b 00 00 dd 00 01 00  56 00 00 00 00 41 0e 08   |0[......V....A..|
0x1efc98:   85 02 42 0d 05 02 52 c5  0c 04 04 00 20 00 00 00   |..B...R..... ...|
0x1efca8:   50 5b 00 00 14 01 01 00  c4 00 00 00 00 41 0e 08   |P[...........A..|
0x1efcb8:   85 02 42 0d 05 6b 83 03  02 95 c5 0c 04 04 c3 00   |..B..k..........|
0x1efcc8:   1c 00 00 00 74 5b 00 00  b4 01 01 00 4f 00 00 00   |....t[......O...|
0x1efcd8:   00 41 0e 08 85 02 42 0d  05 02 4b c5 0c 04 04 00   |.A....B...K.....|
0x1efce8:   1c 00 00 00 94 5b 00 00  e3 01 01 00 2d 00 00 00   |.....[......-...|
0x1efcf8:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1efd08:   1c 00 00 00 b4 5b 00 00  f0 01 01 00 5c 00 00 00   |.....[......\...|
0x1efd18:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1efd28:   1c 00 00 00 d4 5b 00 00  2c 02 01 00 a2 00 00 00   |.....[..,.......|
0x1efd38:   00 41 0e 08 85 02 42 0d  05 02 9e c5 0c 04 04 00   |.A....B.........|
0x1efd48:   1c 00 00 00 f4 5b 00 00  ae 02 01 00 a0 00 00 00   |.....[..........|
0x1efd58:   00 41 0e 08 85 02 42 0d  05 02 9c c5 0c 04 04 00   |.A....B.........|
0x1efd68:   1c 00 00 00 14 5c 00 00  2e 03 01 00 71 00 00 00   |.....\......q...|
0x1efd78:   00 41 0e 08 85 02 42 0d  05 02 6d c5 0c 04 04 00   |.A....B...m.....|
0x1efd88:   1c 00 00 00 34 5c 00 00  7f 03 01 00 68 00 00 00   |....4\......h...|
0x1efd98:   00 41 0e 08 85 02 42 0d  05 02 64 c5 0c 04 04 00   |.A....B...d.....|
0x1efda8:   20 00 00 00 54 5c 00 00  c8 03 01 00 c9 00 00 00   | ...T\..........|
0x1efdb8:   00 41 0e 08 85 02 42 0d  05 02 59 83 03 02 6c c5   |.A....B...Y...l.|
0x1efdc8:   0c 04 04 c3 20 00 00 00  78 5c 00 00 6e 04 01 00   |.... ...x\..n...|
0x1efdd8:   c9 00 00 00 00 41 0e 08  85 02 42 0d 05 02 59 83   |.....A....B...Y.|
0x1efde8:   03 02 6c c5 0c 04 04 c3  20 00 00 00 9c 5c 00 00   |..l..... ....\..|
0x1efdf8:   13 05 01 00 66 00 00 00  00 41 0e 08 85 02 42 0d   |....f....A....B.|
0x1efe08:   05 67 83 03 7a c3 41 0c  04 04 c5 00 20 00 00 00   |.g..z.A..... ...|
0x1efe18:   c0 5c 00 00 55 05 01 00  a9 00 00 00 00 41 0e 08   |.\..U........A..|
0x1efe28:   85 02 42 0d 05 6d 83 03  02 77 c3 41 0c 04 04 c5   |..B..m...w.A....|
0x1efe38:   1c 00 00 00 e4 5c 00 00  da 05 01 00 68 00 00 00   |.....\......h...|
0x1efe48:   00 41 0e 08 85 02 42 0d  05 02 64 c5 0c 04 04 00   |.A....B...d.....|
0x1efe58:   1c 00 00 00 04 5d 00 00  22 06 01 00 68 00 00 00   |.....].."...h...|
0x1efe68:   00 41 0e 08 85 02 42 0d  05 02 64 c5 0c 04 04 00   |.A....B...d.....|
0x1efe78:   1c 00 00 00 24 5d 00 00  6a 06 01 00 68 00 00 00   |....$]..j...h...|
0x1efe88:   00 41 0e 08 85 02 42 0d  05 02 64 c5 0c 04 04 00   |.A....B...d.....|
0x1efe98:   1c 00 00 00 44 5d 00 00  b2 06 01 00 68 00 00 00   |....D]......h...|
0x1efea8:   00 41 0e 08 85 02 42 0d  05 02 64 c5 0c 04 04 00   |.A....B...d.....|
0x1efeb8:   1c 00 00 00 64 5d 00 00  fa 06 01 00 68 00 00 00   |....d]......h...|
0x1efec8:   00 41 0e 08 85 02 42 0d  05 02 64 c5 0c 04 04 00   |.A....B...d.....|
0x1efed8:   1c 00 00 00 84 5d 00 00  42 07 01 00 35 00 00 00   |.....]..B...5...|
0x1efee8:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1efef8:   1c 00 00 00 a4 5d 00 00  57 07 01 00 49 00 00 00   |.....]..W...I...|
0x1eff08:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x1eff18:   1c 00 00 00 c4 5d 00 00  80 07 01 00 35 00 00 00   |.....]......5...|
0x1eff28:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1eff38:   1c 00 00 00 e4 5d 00 00  95 07 01 00 43 00 00 00   |.....]......C...|
0x1eff48:   00 41 0e 08 85 02 42 0d  05 7f c5 0c 04 04 00 00   |.A....B.........|
0x1eff58:   1c 00 00 00 04 5e 00 00  b8 07 01 00 35 00 00 00   |.....^......5...|
0x1eff68:   00 41 0e 08 85 02 42 0d  05 6f c5 0c 04 04 00 00   |.A....B..o......|
0x1eff78:   1c 00 00 00 24 5e 00 00  cd 07 01 00 43 00 00 00   |....$^......C...|
0x1eff88:   00 41 0e 08 85 02 42 0d  05 7f c5 0c 04 04 00 00   |.A....B.........|
0x1eff98:   1c 00 00 00 44 5e 00 00  f0 07 01 00 35 00 00 00   |....D^......5...|
0x1effa8:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1effb8:   20 00 00 00 64 5e 00 00  05 08 01 00 54 00 00 00   | ...d^......T...|
0x1effc8:   00 41 0e 08 85 02 42 0d  05 61 83 03 6e c3 41 0c   |.A....B..a..n.A.|
0x1effd8:   04 04 c5 00 1c 00 00 00  88 5e 00 00 35 08 01 00   |.........^..5...|
0x1effe8:   2f 00 00 00 00 41 0e 08  85 02 42 0d 05 6b c5 0c   |/....A....B..k..|
0x1efff8:   04 04 00 00 1c 00 00 00  a8 5e 00 00 44 08 01 00   |.........^..D...|
0x1f0008:   77 00 00 00 00 41 0e 08  85 02 42 0d 05 02 73 c5   |w....A....B...s.|
0x1f0018:   0c 04 04 00 1c 00 00 00  c8 5e 00 00 9b 08 01 00   |.........^......|
0x1f0028:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1f0038:   04 04 00 00 1c 00 00 00  e8 5e 00 00 a8 08 01 00   |.........^......|
0x1f0048:   53 00 00 00 00 41 0e 08  85 02 42 0d 05 02 4f c5   |S....A....B...O.|
0x1f0058:   0c 04 04 00 1c 00 00 00  08 5f 00 00 db 08 01 00   |........._......|
0x1f0068:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1f0078:   04 04 00 00 24 00 00 00  28 5f 00 00 f0 08 01 00   |....$...(_......|
0x1f0088:   92 00 00 00 00 41 0e 08  85 02 42 0d 05 6e 83 04   |.....A....B..n..|
0x1f0098:   86 03 02 5c c3 41 c6 41  0c 04 04 c5 1c 00 00 00   |...\.A.A........|
0x1f00a8:   50 5f 00 00 5a 09 01 00  46 00 00 00 00 41 0e 08   |P_..Z...F....A..|
0x1f00b8:   85 02 42 0d 05 02 42 c5  0c 04 04 00 1c 00 00 00   |..B...B.........|
0x1f00c8:   70 5f 00 00 80 09 01 00  37 00 00 00 00 41 0e 08   |p_......7....A..|
0x1f00d8:   85 02 42 0d 05 73 c5 0c  04 04 00 00 1c 00 00 00   |..B..s..........|
0x1f00e8:   90 5f 00 00 97 09 01 00  6a 00 00 00 00 41 0e 08   |._......j....A..|
0x1f00f8:   85 02 42 0d 05 02 66 c5  0c 04 04 00 1c 00 00 00   |..B...f.........|
0x1f0108:   b0 5f 00 00 e2 09 01 00  30 00 00 00 00 41 0e 08   |._......0....A..|
0x1f0118:   85 02 42 0d 05 6c c5 0c  04 04 00 00 1c 00 00 00   |..B..l..........|
0x1f0128:   d0 5f 00 00 f2 09 01 00  2f 00 00 00 00 41 0e 08   |._....../....A..|
0x1f0138:   85 02 42 0d 05 6b c5 0c  04 04 00 00 1c 00 00 00   |..B..k..........|
0x1f0148:   f0 5f 00 00 01 0a 01 00  4f 00 00 00 00 41 0e 08   |._......O....A..|
0x1f0158:   85 02 42 0d 05 02 4b c5  0c 04 04 00 1c 00 00 00   |..B...K.........|
0x1f0168:   10 60 00 00 30 0a 01 00  37 00 00 00 00 41 0e 08   |.`..0...7....A..|
0x1f0178:   85 02 42 0d 05 73 c5 0c  04 04 00 00 1c 00 00 00   |..B..s..........|
0x1f0188:   30 60 00 00 47 0a 01 00  6a 00 00 00 00 41 0e 08   |0`..G...j....A..|
0x1f0198:   85 02 42 0d 05 02 66 c5  0c 04 04 00 1c 00 00 00   |..B...f.........|
0x1f01a8:   50 60 00 00 91 0a 01 00  5a 00 00 00 00 41 0e 08   |P`......Z....A..|
0x1f01b8:   85 02 42 0d 05 02 56 c5  0c 04 04 00 1c 00 00 00   |..B...V.........|
0x1f01c8:   70 60 00 00 cb 0a 01 00  4d 00 00 00 00 41 0e 08   |p`......M....A..|
0x1f01d8:   85 02 42 0d 05 02 49 c5  0c 04 04 00 1c 00 00 00   |..B...I.........|
0x1f01e8:   90 60 00 00 f8 0a 01 00  53 00 00 00 00 41 0e 08   |.`......S....A..|
0x1f01f8:   85 02 42 0d 05 02 4f c5  0c 04 04 00 1c 00 00 00   |..B...O.........|
0x1f0208:   b0 60 00 00 2b 0b 01 00  35 00 00 00 00 41 0e 08   |.`..+...5....A..|
0x1f0218:   85 02 42 0d 05 6f c5 0c  04 04 00 00 1c 00 00 00   |..B..o..........|
0x1f0228:   d0 60 00 00 40 0b 01 00  49 00 00 00 00 41 0e 08   |.`..@...I....A..|
0x1f0238:   85 02 42 0d 05 02 45 c5  0c 04 04 00 24 00 00 00   |..B...E.....$...|
0x1f0248:   f0 60 00 00 69 0b 01 00  72 00 00 00 00 41 0e 08   |.`..i...r....A..|
0x1f0258:   85 02 42 0d 05 68 83 04  86 03 02 44 c3 41 c6 41   |..B..h.....D.A.A|
0x1f0268:   0c 04 04 c5 1c 00 00 00  18 61 00 00 b3 0b 01 00   |.........a......|
0x1f0278:   2d 00 00 00 00 41 0e 08  85 02 42 0d 05 69 c5 0c   |-....A....B..i..|
0x1f0288:   04 04 00 00 1c 00 00 00  38 61 00 00 c0 0b 01 00   |........8a......|
0x1f0298:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1f02a8:   04 04 00 00 1c 00 00 00  58 61 00 00 d6 0b 01 00   |........Xa......|
0x1f02b8:   30 00 00 00 00 41 0e 08  85 02 42 0d 05 6c c5 0c   |0....A....B..l..|
0x1f02c8:   04 04 00 00 1c 00 00 00  78 61 00 00 e6 0b 01 00   |........xa......|
0x1f02d8:   2f 00 00 00 00 41 0e 08  85 02 42 0d 05 6b c5 0c   |/....A....B..k..|
0x1f02e8:   04 04 00 00 2c 00 00 00  60 5c 00 00 f5 0b 01 00   |....,...`\......|
0x1f02f8:   7b 00 00 00 04 18 37 00  00 41 0e 08 85 02 42 0d   |{.....7..A....B.|
0x1f0308:   05 60 83 05 86 04 87 03  02 54 c3 41 c6 41 c7 41   |.`.......T.A.A.A|
0x1f0318:   0c 04 04 c5 24 00 00 00  90 5c 00 00 40 0c 01 00   |....$....\..@...|
0x1f0328:   a2 00 00 00 04 24 37 00  00 41 0e 08 85 02 42 0d   |.....$7..A....B.|
0x1f0338:   05 69 83 03 02 74 c3 41  0c 04 04 c5 1c 00 00 00   |.i...t.A........|
0x1f0348:   f0 61 00 00 ba 0c 01 00  64 00 00 00 00 41 0e 08   |.a......d....A..|
0x1f0358:   85 02 42 0d 05 02 60 c5  0c 04 04 00 1c 00 00 00   |..B...`.........|
0x1f0368:   10 62 00 00 fe 0c 01 00  5c 00 00 00 00 41 0e 08   |.b......\....A..|
0x1f0378:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1f0388:   30 62 00 00 3a 0d 01 00  56 00 00 00 00 41 0e 08   |0b..:...V....A..|
0x1f0398:   85 02 42 0d 05 02 52 c5  0c 04 04 00 1c 00 00 00   |..B...R.........|
0x1f03a8:   50 62 00 00 70 0d 01 00  57 00 00 00 00 41 0e 08   |Pb..p...W....A..|
0x1f03b8:   85 02 42 0d 05 02 51 c5  0c 04 04 00 1c 00 00 00   |..B...Q.........|
0x1f03c8:   70 62 00 00 a7 0d 01 00  df 00 00 00 00 41 0e 08   |pb...........A..|
0x1f03d8:   85 02 42 0d 05 02 d9 c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x1f03e8:   90 62 00 00 66 0e 01 00  5d 00 00 00 00 41 0e 08   |.b..f...]....A..|
0x1f03f8:   85 02 42 0d 05 02 59 c5  0c 04 04 00 1c 00 00 00   |..B...Y.........|
0x1f0408:   b0 62 00 00 a4 0e 01 00  5e 00 00 00 00 41 0e 08   |.b......^....A..|
0x1f0418:   85 02 42 0d 05 02 5a c5  0c 04 04 00 20 00 00 00   |..B...Z..... ...|
0x1f0428:   d0 62 00 00 e2 0e 01 00  66 00 00 00 00 41 0e 08   |.b......f....A..|
0x1f0438:   85 02 42 0d 05 67 83 03  7a c3 41 0c 04 04 c5 00   |..B..g..z.A.....|
0x1f0448:   1c 00 00 00 f4 62 00 00  24 0f 01 00 c3 00 00 00   |.....b..$.......|
0x1f0458:   00 41 0e 08 85 02 42 0d  05 02 bd c5 0c 04 04 00   |.A....B.........|
0x1f0468:   1c 00 00 00 14 63 00 00  c7 0f 01 00 df 00 00 00   |.....c..........|
0x1f0478:   00 41 0e 08 85 02 42 0d  05 02 d9 c5 0c 04 04 00   |.A....B.........|
0x1f0488:   1c 00 00 00 34 63 00 00  86 10 01 00 41 00 00 00   |....4c......A...|
0x1f0498:   00 41 0e 08 85 02 42 0d  05 7d c5 0c 04 04 00 00   |.A....B..}......|
0x1f04a8:   1c 00 00 00 54 63 00 00  a7 10 01 00 5c 00 00 00   |....Tc......\...|
0x1f04b8:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1f04c8:   1c 00 00 00 74 63 00 00  e3 10 01 00 5c 00 00 00   |....tc......\...|
0x1f04d8:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1f04e8:   1c 00 00 00 94 63 00 00  1f 11 01 00 56 00 00 00   |.....c......V...|
0x1f04f8:   00 41 0e 08 85 02 42 0d  05 02 52 c5 0c 04 04 00   |.A....B...R.....|
0x1f0508:   1c 00 00 00 b4 63 00 00  55 11 01 00 5c 00 00 00   |.....c..U...\...|
0x1f0518:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1f0528:   1c 00 00 00 d4 63 00 00  91 11 01 00 30 00 00 00   |.....c......0...|
0x1f0538:   00 41 0e 08 85 02 42 0d  05 6c c5 0c 04 04 00 00   |.A....B..l......|
0x1f0548:   2c 00 00 00 f4 63 00 00  a2 11 01 00 e9 03 00 00   |,....c..........|
0x1f0558:   00 41 0e 08 85 02 42 0d  05 02 46 83 05 86 04 87   |.A....B...F.....|
0x1f0568:   03 03 9c 03 c3 41 c6 41  c7 41 0c 04 04 c5 00 00   |.....A.A.A......|
0x1f0578:   1c 00 00 00 24 64 00 00  5b 15 01 00 63 00 00 00   |....$d..[...c...|
0x1f0588:   00 41 0e 08 85 02 42 0d  05 02 5f c5 0c 04 04 00   |.A....B..._.....|
0x1f0598:   24 00 00 00 0c 5f 00 00  9e 15 01 00 99 00 00 00   |$...._..........|
0x1f05a8:   04 3c 37 00 00 41 0e 08  85 02 42 0d 05 74 83 03   |.<7..A....B..t..|
0x1f05b8:   02 61 c5 0c 04 04 c3 00  2c 00 00 00 6c 64 00 00   |.a......,...ld..|
0x1f05c8:   10 16 01 00 96 02 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x1f05d8:   05 02 42 83 05 86 04 87  03 03 4d 02 c3 41 c6 41   |..B.......M..A.A|
0x1f05e8:   c7 41 0c 04 04 c5 00 00  1c 00 00 00 9c 64 00 00   |.A...........d..|
0x1f05f8:   76 18 01 00 68 00 00 00  00 41 0e 08 85 02 42 0d   |v...h....A....B.|
0x1f0608:   05 02 64 c5 0c 04 04 00  20 00 00 00 bc 64 00 00   |..d..... ....d..|
0x1f0618:   be 18 01 00 53 00 00 00  00 41 0e 08 85 02 42 0d   |....S....A....B.|
0x1f0628:   05 6c 83 03 62 c3 41 0c  04 04 c5 00 20 00 00 00   |.l..b.A..... ...|
0x1f0638:   e0 64 00 00 ee 18 01 00  53 00 00 00 00 41 0e 08   |.d......S....A..|
0x1f0648:   85 02 42 0d 05 6c 83 03  62 c3 41 0c 04 04 c5 00   |..B..l..b.A.....|
0x1f0658:   1c 00 00 00 04 65 00 00  1e 19 01 00 2a 00 00 00   |.....e......*...|
0x1f0668:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x1f0678:   1c 00 00 00 24 65 00 00  28 19 01 00 2a 00 00 00   |....$e..(...*...|
0x1f0688:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x1f0698:   1c 00 00 00 44 65 00 00  32 19 01 00 35 00 00 00   |....De..2...5...|
0x1f06a8:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1f06b8:   1c 00 00 00 64 65 00 00  48 19 01 00 5f 00 00 00   |....de..H..._...|
0x1f06c8:   00 41 0e 08 85 02 42 0d  05 02 5b c5 0c 04 04 00   |.A....B...[.....|
0x1f06d8:   1c 00 00 00 84 65 00 00  88 19 01 00 40 00 00 00   |.....e......@...|
0x1f06e8:   00 41 0e 08 85 02 42 0d  05 7c c5 0c 04 04 00 00   |.A....B..|......|
0x1f06f8:   20 00 00 00 a4 65 00 00  a8 19 01 00 b3 00 00 00   | ....e..........|
0x1f0708:   00 41 0e 08 85 02 42 0d  05 68 83 03 02 87 c5 0c   |.A....B..h......|
0x1f0718:   04 04 c3 00 24 00 00 00  c8 65 00 00 38 1a 01 00   |....$....e..8...|
0x1f0728:   be 02 00 00 00 41 0e 08  85 02 42 0d 05 02 44 83   |.....A....B...D.|
0x1f0738:   03 03 76 02 c5 0c 04 04  c3 00 00 00 20 00 00 00   |..v......... ...|
0x1f0748:   f0 65 00 00 ce 1c 01 00  86 01 00 00 00 41 0e 08   |.e...........A..|
0x1f0758:   85 02 42 0d 05 67 83 03  03 5b 01 c5 0c 04 04 c3   |..B..g...[......|
0x1f0768:   28 00 00 00 14 66 00 00  30 1e 01 00 14 01 00 00   |(....f..0.......|
0x1f0778:   00 41 0e 08 85 02 42 0d  05 02 4f 83 04 86 03 02   |.A....B...O.....|
0x1f0788:   bf c3 41 c6 41 0c 04 04  c5 00 00 00 1c 00 00 00   |..A.A...........|
0x1f0798:   40 66 00 00 18 1f 01 00  5c 00 00 00 00 41 0e 08   |@f......\....A..|
0x1f07a8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1f07b8:   60 66 00 00 54 1f 01 00  5c 00 00 00 00 41 0e 08   |`f..T...\....A..|
0x1f07c8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1f07d8:   80 66 00 00 90 1f 01 00  68 00 00 00 00 41 0e 08   |.f......h....A..|
0x1f07e8:   85 02 42 0d 05 02 64 c5  0c 04 04 00 1c 00 00 00   |..B...d.........|
0x1f07f8:   a0 66 00 00 d8 1f 01 00  68 00 00 00 00 41 0e 08   |.f......h....A..|
0x1f0808:   85 02 42 0d 05 02 64 c5  0c 04 04 00 1c 00 00 00   |..B...d.........|
0x1f0818:   c0 66 00 00 20 20 01 00  68 00 00 00 00 41 0e 08   |.f..  ..h....A..|
0x1f0828:   85 02 42 0d 05 02 64 c5  0c 04 04 00 1c 00 00 00   |..B...d.........|
0x1f0838:   e0 66 00 00 68 20 01 00  8b 01 00 00 00 41 0e 08   |.f..h .......A..|
0x1f0848:   85 02 42 0d 05 03 87 01  c5 0c 04 04 1c 00 00 00   |..B.............|
0x1f0858:   00 67 00 00 d3 21 01 00  56 00 00 00 00 41 0e 08   |.g...!..V....A..|
0x1f0868:   85 02 42 0d 05 02 52 c5  0c 04 04 00 20 00 00 00   |..B...R..... ...|
0x1f0878:   20 67 00 00 09 22 01 00  57 00 00 00 00 41 0e 08   | g..."..W....A..|
0x1f0888:   85 02 42 0d 05 61 83 03  71 c3 41 0c 04 04 c5 00   |..B..a..q.A.....|
0x1f0898:   1c 00 00 00 44 67 00 00  3c 22 01 00 53 00 00 00   |....Dg..<"..S...|
0x1f08a8:   00 41 0e 08 85 02 42 0d  05 02 4f c5 0c 04 04 00   |.A....B...O.....|
0x1f08b8:   1c 00 00 00 64 67 00 00  6f 22 01 00 71 00 00 00   |....dg..o"..q...|
0x1f08c8:   00 41 0e 08 85 02 42 0d  05 02 6d c5 0c 04 04 00   |.A....B...m.....|
0x1f08d8:   1c 00 00 00 84 67 00 00  c0 22 01 00 2d 00 00 00   |.....g..."..-...|
0x1f08e8:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1f08f8:   1c 00 00 00 a4 67 00 00  cd 22 01 00 35 00 00 00   |.....g..."..5...|
0x1f0908:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1f0918:   1c 00 00 00 c4 67 00 00  e2 22 01 00 57 00 00 00   |.....g..."..W...|
0x1f0928:   00 41 0e 08 85 02 42 0d  05 02 53 c5 0c 04 04 00   |.A....B...S.....|
0x1f0938:   2c 00 00 00 ac 62 00 00  1a 23 01 00 81 01 00 00   |,....b...#......|
0x1f0948:   04 54 37 00 00 41 0e 08  85 02 42 0d 05 6e 83 04   |.T7..A....B..n..|
0x1f0958:   86 03 03 4d 01 c3 41 c6  41 0c 04 04 c5 00 00 00   |...M..A.A.......|
0x1f0968:   1c 00 00 00 14 68 00 00  6b 24 01 00 71 00 00 00   |.....h..k$..q...|
0x1f0978:   00 41 0e 08 85 02 42 0d  05 02 6d c5 0c 04 04 00   |.A....B...m.....|
0x1f0988:   1c 00 00 00 34 68 00 00  bc 24 01 00 63 00 00 00   |....4h...$..c...|
0x1f0998:   00 41 0e 08 85 02 42 0d  05 02 5f c5 0c 04 04 00   |.A....B..._.....|
0x1f09a8:   1c 00 00 00 54 68 00 00  ff 24 01 00 49 00 00 00   |....Th...$..I...|
0x1f09b8:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x1f09c8:   1c 00 00 00 74 68 00 00  28 25 01 00 57 00 00 00   |....th..(%..W...|
0x1f09d8:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1f09e8:   1c 00 00 00 94 68 00 00  5f 25 01 00 8f 00 00 00   |.....h.._%......|
0x1f09f8:   00 41 0e 08 85 02 42 0d  05 02 89 c5 0c 04 04 00   |.A....B.........|
0x1f0a08:   1c 00 00 00 b4 68 00 00  ce 25 01 00 2d 00 00 00   |.....h...%..-...|
0x1f0a18:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1f0a28:   1c 00 00 00 d4 68 00 00  dc 25 01 00 2f 00 00 00   |.....h...%../...|
0x1f0a38:   00 41 0e 08 85 02 42 0d  05 6b c5 0c 04 04 00 00   |.A....B..k......|
0x1f0a48:   1c 00 00 00 f4 68 00 00  eb 25 01 00 35 00 00 00   |.....h...%..5...|
0x1f0a58:   00 41 0e 08 85 02 42 0d  05 71 c5 0c 04 04 00 00   |.A....B..q......|
0x1f0a68:   24 00 00 00 14 69 00 00  00 26 01 00 72 00 00 00   |$....i...&..r...|
0x1f0a78:   00 41 0e 08 85 02 42 0d  05 68 83 04 86 03 02 44   |.A....B..h.....D|
0x1f0a88:   c3 41 c6 41 0c 04 04 c5  1c 00 00 00 3c 69 00 00   |.A.A........<i..|
0x1f0a98:   4a 26 01 00 57 00 00 00  00 41 0e 08 85 02 42 0d   |J&..W....A....B.|
0x1f0aa8:   05 02 51 c5 0c 04 04 00  1c 00 00 00 5c 69 00 00   |..Q.........\i..|
0x1f0ab8:   81 26 01 00 df 00 00 00  00 41 0e 08 85 02 42 0d   |.&.......A....B.|
0x1f0ac8:   05 02 d9 c5 0c 04 04 00  1c 00 00 00 7c 69 00 00   |............|i..|
0x1f0ad8:   40 27 01 00 8f 00 00 00  00 41 0e 08 85 02 42 0d   |@'.......A....B.|
0x1f0ae8:   05 02 89 c5 0c 04 04 00  1c 00 00 00 9c 69 00 00   |.............i..|
0x1f0af8:   b0 27 01 00 52 00 00 00  00 41 0e 08 85 02 42 0d   |.'..R....A....B.|
0x1f0b08:   05 02 4e c5 0c 04 04 00  1c 00 00 00 bc 69 00 00   |..N..........i..|
0x1f0b18:   e2 27 01 00 52 00 00 00  00 41 0e 08 85 02 42 0d   |.'..R....A....B.|
0x1f0b28:   05 02 4e c5 0c 04 04 00  28 00 00 00 dc 69 00 00   |..N.....(....i..|
0x1f0b38:   14 28 01 00 06 01 00 00  00 41 0e 08 85 02 42 0d   |.(.......A....B.|
0x1f0b48:   05 02 4c 83 04 86 03 02  b4 c3 41 c6 41 0c 04 04   |..L.......A.A...|
0x1f0b58:   c5 00 00 00 1c 00 00 00  08 6a 00 00 ee 28 01 00   |.........j...(..|
0x1f0b68:   68 00 00 00 00 41 0e 08  85 02 42 0d 05 02 64 c5   |h....A....B...d.|
0x1f0b78:   0c 04 04 00 1c 00 00 00  28 6a 00 00 36 29 01 00   |........(j..6)..|
0x1f0b88:   6a 00 00 00 00 41 0e 08  85 02 42 0d 05 02 66 c5   |j....A....B...f.|
0x1f0b98:   0c 04 04 00 1c 00 00 00  48 6a 00 00 80 29 01 00   |........Hj...)..|
0x1f0ba8:   68 00 00 00 00 41 0e 08  85 02 42 0d 05 02 64 c5   |h....A....B...d.|
0x1f0bb8:   0c 04 04 00 20 00 00 00  68 6a 00 00 c8 29 01 00   |.... ...hj...)..|
0x1f0bc8:   f4 00 00 00 00 41 0e 08  85 02 42 0d 05 73 83 03   |.....A....B..s..|
0x1f0bd8:   02 bc c3 41 0c 04 04 c5  1c 00 00 00 8c 6a 00 00   |...A.........j..|
0x1f0be8:   98 2a 01 00 63 00 00 00  00 41 0e 08 85 02 42 0d   |.*..c....A....B.|
0x1f0bf8:   05 02 5f c5 0c 04 04 00  1c 00 00 00 ac 6a 00 00   |.._..........j..|
0x1f0c08:   db 2a 01 00 68 00 00 00  00 41 0e 08 85 02 42 0d   |.*..h....A....B.|
0x1f0c18:   05 02 64 c5 0c 04 04 00  1c 00 00 00 cc 6a 00 00   |..d..........j..|
0x1f0c28:   23 2b 01 00 5c 00 00 00  00 41 0e 08 85 02 42 0d   |#+..\....A....B.|
0x1f0c38:   05 02 58 c5 0c 04 04 00  1c 00 00 00 ec 6a 00 00   |..X..........j..|
0x1f0c48:   5f 2b 01 00 73 00 00 00  00 41 0e 08 85 02 42 0d   |_+..s....A....B.|
0x1f0c58:   05 02 6f c5 0c 04 04 00  1c 00 00 00 0c 6b 00 00   |..o..........k..|
0x1f0c68:   b2 2b 01 00 73 00 00 00  00 41 0e 08 85 02 42 0d   |.+..s....A....B.|
0x1f0c78:   05 02 6f c5 0c 04 04 00  1c 00 00 00 2c 6b 00 00   |..o.........,k..|
0x1f0c88:   06 2c 01 00 3b 00 00 00  00 41 0e 08 85 02 42 0d   |.,..;....A....B.|
0x1f0c98:   05 77 c5 0c 04 04 00 00  1c 00 00 00 4c 6b 00 00   |.w..........Lk..|
0x1f0ca8:   22 2c 01 00 35 00 00 00  00 41 0e 08 85 02 42 0d   |",..5....A....B.|
0x1f0cb8:   05 71 c5 0c 04 04 00 00  1c 00 00 00 6c 6b 00 00   |.q..........lk..|
0x1f0cc8:   38 2c 01 00 65 00 00 00  00 41 0e 08 85 02 42 0d   |8,..e....A....B.|
0x1f0cd8:   05 02 61 c5 0c 04 04 00  1c 00 00 00 8c 6b 00 00   |..a..........k..|
0x1f0ce8:   7e 2c 01 00 46 00 00 00  00 41 0e 08 85 02 42 0d   |~,..F....A....B.|
0x1f0cf8:   05 02 42 c5 0c 04 04 00  1c 00 00 00 ac 6b 00 00   |..B..........k..|
0x1f0d08:   a4 2c 01 00 47 00 00 00  00 41 0e 08 85 02 42 0d   |.,..G....A....B.|
0x1f0d18:   05 02 41 c5 0c 04 04 00  20 00 00 00 cc 6b 00 00   |..A..... ....k..|
0x1f0d28:   cb 2c 01 00 66 00 00 00  00 41 0e 08 85 02 42 0d   |.,..f....A....B.|
0x1f0d38:   05 67 83 03 7a c3 41 0c  04 04 c5 00 1c 00 00 00   |.g..z.A.........|
0x1f0d48:   f0 6b 00 00 0d 2d 01 00  57 00 00 00 00 41 0e 08   |.k...-..W....A..|
0x1f0d58:   85 02 42 0d 05 02 53 c5  0c 04 04 00 1c 00 00 00   |..B...S.........|
0x1f0d68:   10 6c 00 00 44 2d 01 00  68 00 00 00 00 41 0e 08   |.l..D-..h....A..|
0x1f0d78:   85 02 42 0d 05 02 64 c5  0c 04 04 00 1c 00 00 00   |..B...d.........|
0x1f0d88:   30 6c 00 00 8c 2d 01 00  63 00 00 00 00 41 0e 08   |0l...-..c....A..|
0x1f0d98:   85 02 42 0d 05 02 5f c5  0c 04 04 00 1c 00 00 00   |..B..._.........|
0x1f0da8:   50 6c 00 00 cf 2d 01 00  5c 00 00 00 00 41 0e 08   |Pl...-..\....A..|
0x1f0db8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1f0dc8:   70 6c 00 00 0b 2e 01 00  5c 00 00 00 00 41 0e 08   |pl......\....A..|
0x1f0dd8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1f0de8:   90 6c 00 00 47 2e 01 00  5c 00 00 00 00 41 0e 08   |.l..G...\....A..|
0x1f0df8:   85 02 42 0d 05 02 58 c5  0c 04 04 00 1c 00 00 00   |..B...X.........|
0x1f0e08:   b0 6c 00 00 83 2e 01 00  31 00 00 00 00 41 0e 08   |.l......1....A..|
0x1f0e18:   85 02 42 0d 05 6d c5 0c  04 04 00 00 1c 00 00 00   |..B..m..........|
0x1f0e28:   d0 6c 00 00 94 2e 01 00  8b 01 00 00 00 41 0e 08   |.l...........A..|
0x1f0e38:   85 02 42 0d 05 03 87 01  c5 0c 04 04 1c 00 00 00   |..B.............|
0x1f0e48:   f0 6c 00 00 ff 2f 01 00  d3 00 00 00 00 41 0e 08   |.l.../.......A..|
0x1f0e58:   85 02 42 0d 05 02 cd c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x1f0e68:   10 6d 00 00 b2 30 01 00  53 00 00 00 00 41 0e 08   |.m...0..S....A..|
0x1f0e78:   85 02 42 0d 05 02 4f c5  0c 04 04 00 1c 00 00 00   |..B...O.........|
0x1f0e88:   30 6d 00 00 e5 30 01 00  49 00 00 00 00 41 0e 08   |0m...0..I....A..|
0x1f0e98:   85 02 42 0d 05 02 43 c5  0c 04 04 00 1c 00 00 00   |..B...C.........|
0x1f0ea8:   50 6d 00 00 0e 31 01 00  57 00 00 00 00 41 0e 08   |Pm...1..W....A..|
0x1f0eb8:   85 02 42 0d 05 02 51 c5  0c 04 04 00 1c 00 00 00   |..B...Q.........|
0x1f0ec8:   70 6d 00 00 45 31 01 00  8f 00 00 00 00 41 0e 08   |pm..E1.......A..|
0x1f0ed8:   85 02 42 0d 05 02 89 c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x1f0ee8:   90 6d 00 00 b4 31 01 00  d9 00 00 00 00 41 0e 08   |.m...1.......A..|
0x1f0ef8:   85 02 42 0d 05 02 d3 c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x1f0f08:   b0 6d 00 00 6d 32 01 00  a2 00 00 00 00 41 0e 08   |.m..m2.......A..|
0x1f0f18:   85 02 42 0d 05 02 9e c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x1f0f28:   d0 6d 00 00 ef 32 01 00  a0 00 00 00 00 41 0e 08   |.m...2.......A..|
0x1f0f38:   85 02 42 0d 05 02 9c c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x1f0f48:   f0 6d 00 00 6f 33 01 00  68 00 00 00 00 41 0e 08   |.m..o3..h....A..|
0x1f0f58:   85 02 42 0d 05 02 64 c5  0c 04 04 00 2c 00 00 00   |..B...d.....,...|
0x1f0f68:   d8 68 00 00 b7 33 01 00  b4 01 00 00 04 7c 37 00   |.h...3.......|7.|
0x1f0f78:   00 41 0e 08 85 02 42 0d  05 6b 83 04 86 03 03 83   |.A....B..k......|
0x1f0f88:   01 c3 41 c6 41 0c 04 04  c5 00 00 00 20 00 00 00   |..A.A....... ...|
0x1f0f98:   40 6e 00 00 3b 35 01 00  af 00 00 00 00 41 0e 08   |@n..;5.......A..|
0x1f0fa8:   85 02 42 0d 05 73 83 03  02 77 c3 41 0c 04 04 c5   |..B..s...w.A....|
0x1f0fb8:   1c 00 00 00 64 6e 00 00  c6 35 01 00 5c 00 00 00   |....dn...5..\...|
0x1f0fc8:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1f0fd8:   20 00 00 00 84 6e 00 00  02 36 01 00 56 00 00 00   | ....n...6..V...|
0x1f0fe8:   00 41 0e 08 85 02 42 0d  05 6c 83 03 65 c3 41 0c   |.A....B..l..e.A.|
0x1f0ff8:   04 04 c5 00 1c 00 00 00  a8 6e 00 00 34 36 01 00   |.........n..46..|
0x1f1008:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1f1018:   04 04 00 00 1c 00 00 00  c8 6e 00 00 3e 36 01 00   |.........n..>6..|
0x1f1028:   2a 00 00 00 00 41 0e 08  85 02 42 0d 05 66 c5 0c   |*....A....B..f..|
0x1f1038:   04 04 00 00 1c 00 00 00  e8 6e 00 00 48 36 01 00   |.........n..H6..|
0x1f1048:   42 00 00 00 00 41 0e 08  85 02 42 0d 05 7e c5 0c   |B....A....B..~..|
0x1f1058:   04 04 00 00 1c 00 00 00  08 6f 00 00 6a 36 01 00   |.........o..j6..|
0x1f1068:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1f1078:   04 04 00 00 1c 00 00 00  28 6f 00 00 7f 36 01 00   |........(o...6..|
0x1f1088:   5b 00 00 00 00 41 0e 08  85 02 42 0d 05 02 57 c5   |[....A....B...W.|
0x1f1098:   0c 04 04 00 1c 00 00 00  48 6f 00 00 ba 36 01 00   |........Ho...6..|
0x1f10a8:   45 00 00 00 00 41 0e 08  85 02 42 0d 05 02 41 c5   |E....A....B...A.|
0x1f10b8:   0c 04 04 00 1c 00 00 00  68 6f 00 00 e0 36 01 00   |........ho...6..|
0x1f10c8:   5b 00 00 00 00 41 0e 08  85 02 42 0d 05 02 57 c5   |[....A....B...W.|
0x1f10d8:   0c 04 04 00 1c 00 00 00  88 6f 00 00 1b 37 01 00   |.........o...7..|
0x1f10e8:   35 00 00 00 00 41 0e 08  85 02 42 0d 05 71 c5 0c   |5....A....B..q..|
0x1f10f8:   04 04 00 00 1c 00 00 00  a8 6f 00 00 30 37 01 00   |.........o..07..|
0x1f1108:   66 00 00 00 00 41 0e 08  85 02 42 0d 05 02 62 c5   |f....A....B...b.|
0x1f1118:   0c 04 04 00 1c 00 00 00  c8 6f 00 00 76 37 01 00   |.........o..v7..|
0x1f1128:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1f1138:   0c 04 04 00 20 00 00 00  e8 6f 00 00 b2 37 01 00   |.... ....o...7..|
0x1f1148:   af 00 00 00 00 41 0e 08  85 02 42 0d 05 73 83 03   |.....A....B..s..|
0x1f1158:   02 77 c3 41 0c 04 04 c5  28 00 00 00 0c 70 00 00   |.w.A....(....p..|
0x1f1168:   3e 38 01 00 f3 00 00 00  00 41 0e 08 85 02 42 0d   |>8.......A....B.|
0x1f1178:   05 02 41 83 04 86 03 02  ac c3 41 c6 41 0c 04 04   |..A.......A.A...|
0x1f1188:   c5 00 00 00 28 00 00 00  38 70 00 00 06 39 01 00   |....(...8p...9..|
0x1f1198:   f3 00 00 00 00 41 0e 08  85 02 42 0d 05 02 41 83   |.....A....B...A.|
0x1f11a8:   04 86 03 02 ac c3 41 c6  41 0c 04 04 c5 00 00 00   |......A.A.......|
0x1f11b8:   1c 00 00 00 64 70 00 00  cd 39 01 00 73 00 00 00   |....dp...9..s...|
0x1f11c8:   00 41 0e 08 85 02 42 0d  05 02 6f c5 0c 04 04 00   |.A....B...o.....|
0x1f11d8:   20 00 00 00 84 70 00 00  20 3a 01 00 d3 00 00 00   | ....p.. :......|
0x1f11e8:   00 41 0e 08 85 02 42 0d  05 02 46 83 03 02 87 c5   |.A....B...F.....|
0x1f11f8:   0c 04 04 c3 1c 00 00 00  a8 70 00 00 cf 3a 01 00   |.........p...:..|
0x1f1208:   5c 00 00 00 00 41 0e 08  85 02 42 0d 05 02 58 c5   |\....A....B...X.|
0x1f1218:   0c 04 04 00 1c 00 00 00  c8 70 00 00 0c 3b 01 00   |.........p...;..|
0x1f1228:   59 00 00 00 00 41 0e 08  85 02 42 0d 05 02 55 c5   |Y....A....B...U.|
0x1f1238:   0c 04 04 00 28 00 00 00  e8 70 00 00 45 3b 01 00   |....(....p..E;..|
0x1f1248:   ac 00 00 00 00 41 0e 08  85 02 42 0d 05 7a 83 05   |.....A....B..z..|
0x1f1258:   86 04 87 03 02 6b c3 41  c6 41 c7 41 0c 04 04 c5   |.....k.A.A.A....|
0x1f1268:   1c 00 00 00 14 71 00 00  c6 3b 01 00 30 00 00 00   |.....q...;..0...|
0x1f1278:   00 41 0e 08 85 02 42 0d  05 6c c5 0c 04 04 00 00   |.A....B..l......|
0x1f1288:   1c 00 00 00 34 71 00 00  d6 3b 01 00 37 00 00 00   |....4q...;..7...|
0x1f1298:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x1f12a8:   1c 00 00 00 54 71 00 00  ed 3b 01 00 2d 00 00 00   |....Tq...;..-...|
0x1f12b8:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1f12c8:   24 00 00 00 3c 6c 00 00  fa 3b 01 00 0f 02 00 00   |$...<l...;......|
0x1f12d8:   04 90 37 00 00 41 0e 08  85 02 42 0d 05 74 83 03   |..7..A....B..t..|
0x1f12e8:   03 d7 01 c5 0c 04 04 c3  24 00 00 00 64 6c 00 00   |........$...dl..|
0x1f12f8:   e2 3d 01 00 82 01 00 00  04 af 37 00 00 41 0e 08   |.=........7..A..|
0x1f1308:   85 02 42 0d 05 6d 83 03  03 51 01 c5 0c 04 04 c3   |..B..m...Q......|
0x1f1318:   1c 00 00 00 c4 71 00 00  3c 3f 01 00 bf 00 00 00   |.....q..<?......|
0x1f1328:   00 41 0e 08 85 02 42 0d  05 02 bb c5 0c 04 04 00   |.A....B.........|
0x1f1338:   1c 00 00 00 e4 71 00 00  dc 3f 01 00 2d 00 00 00   |.....q...?..-...|
0x1f1348:   00 41 0e 08 85 02 42 0d  05 69 c5 0c 04 04 00 00   |.A....B..i......|
0x1f1358:   1c 00 00 00 04 72 00 00  ea 3f 01 00 59 00 00 00   |.....r...?..Y...|
0x1f1368:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1f1378:   1c 00 00 00 24 72 00 00  24 40 01 00 59 00 00 00   |....$r..$@..Y...|
0x1f1388:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1f1398:   1c 00 00 00 44 72 00 00  5e 40 01 00 59 00 00 00   |....Dr..^@..Y...|
0x1f13a8:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1f13b8:   1c 00 00 00 64 72 00 00  98 40 01 00 59 00 00 00   |....dr...@..Y...|
0x1f13c8:   00 41 0e 08 85 02 42 0d  05 02 55 c5 0c 04 04 00   |.A....B...U.....|
0x1f13d8:   1c 00 00 00 84 72 00 00  d1 40 01 00 5c 00 00 00   |.....r...@..\...|
0x1f13e8:   00 41 0e 08 85 02 42 0d  05 02 58 c5 0c 04 04 00   |.A....B...X.....|
0x1f13f8:   1c 00 00 00 a4 72 00 00  0e 41 01 00 63 00 00 00   |.....r...A..c...|
0x1f1408:   00 41 0e 08 85 02 42 0d  05 02 5f c5 0c 04 04 00   |.A....B..._.....|
0x1f1418:   1c 00 00 00 c4 72 00 00  70 41 01 00 55 00 00 00   |.....r..pA..U...|
0x1f1428:   00 41 0e 08 85 02 42 0d  05 02 51 c5 0c 04 04 00   |.A....B...Q.....|
0x1f1438:   1c 00 00 00 e4 72 00 00  a6 41 01 00 40 00 00 00   |.....r...A..@...|
0x1f1448:   00 41 0e 08 85 02 42 0d  05 7c c5 0c 04 04 00 00   |.A....B..|......|
0x1f1458:   24 00 00 00 cc 6d 00 00  08 42 01 00 81 00 00 00   |$....m...B......|
0x1f1468:   04 c7 37 00 00 41 0e 08  85 02 42 0d 05 67 83 03   |..7..A....B..g..|
0x1f1478:   02 55 c3 41 0c 04 04 c5  1c 00 00 00 2c 73 00 00   |.U.A........,s..|
0x1f1488:   62 42 01 00 40 00 00 00  00 41 0e 08 85 02 42 0d   |bB..@....A....B.|
0x1f1498:   05 7c c5 0c 04 04 00 00  1c 00 00 00 4c 73 00 00   |.|..........Ls..|
0x1f14a8:   ed a9 ff ff 3b 01 00 00  00 41 0e 08 85 02 42 0d   |....;....A....B.|
0x1f14b8:   05 03 37 01 c5 0c 04 04  1c 00 00 00 6c 73 00 00   |..7.........ls..|
0x1f14c8:   04 46 01 00 38 00 00 00  00 41 0e 08 85 02 42 0d   |.F..8....A....B.|
0x1f14d8:   05 74 c5 0c 04 04 00 00  1c 00 00 00 8c 73 00 00   |.t...........s..|
0x1f14e8:   1c 46 01 00 35 00 00 00  00 41 0e 08 85 02 42 0d   |.F..5....A....B.|
0x1f14f8:   05 71 c5 0c 04 04 00 00  10 00 00 00 ac 73 00 00   |.q...........s..|
0x1f1508:   32 46 01 00 07 00 00 00  00 00 00 00 28 00 00 00   |2F..........(...|
0x1f1518:   88 6e 00 00 26 46 01 00  74 00 00 00 04 d3 37 00   |.n..&F..t.....7.|
0x1f1528:   00 41 0e 08 85 02 42 0d  05 5d 83 04 86 03 02 51   |.A....B..].....Q|
0x1f1538:   c3 41 c6 41 0c 04 04 c5  10 00 00 00 ec 73 00 00   |.A.A.........s..|
0x1f1548:   6e 46 01 00 07 00 00 00  00 00 00 00 20 00 00 00   |nF.......... ...|
0x1f1558:   c8 6e 00 00 62 46 01 00  63 00 00 00 04 e3 37 00   |.n..bF..c.....7.|
0x1f1568:   00 41 0e 08 85 02 42 0d  05 5d 83 04 86 03 00 00   |.A....B..]......|
0x1f1578:   1c 00 00 00 24 74 00 00  50 aa ff ff 38 00 00 00   |....$t..P...8...|
0x1f1588:   00 41 0e 08 85 02 42 0d  05 74 c5 0c 04 04 00 00   |.A....B..t......|
0x1f1598:   ??                                                 |?               |

source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_277f0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_27808_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_27820_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_30e28_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_30e68_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_30ee8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_30f28_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_30fa8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_30fc8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_31008_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_31088_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_310a8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_310e8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_31168_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_31188_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_311c8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_31248_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_31268_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_312a8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_31338_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_31368_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_313a8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_31448_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_31490_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_31508_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_31548_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_31588_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_315c0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_315d8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_315f0_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_31620_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_31678_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_316a8_type = type { i32 (i32*)*, i32 (i32*)* }
%vtable_316e8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%has_fallback_type__1 = type { i32 }
%has_fallback_type_ = type { i32 }
%has_fallback_type_.0 = type { i32 }
%has_fallback_type__1.1 = type { i32 }
%CAddress = type { i64, i32, i64 }
%CNetAddr = type { [16 x i8] }
%CAddress.2 = type { i64, i32, i64 }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@fs = internal unnamed_addr global i16 0
@eax = internal unnamed_addr global i32 0, align 8
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external local_unnamed_addr global i32
@global_var_a248.2403 = constant i32 1852833913
@global_var_58.2405 = constant i32 -953670540
@global_var_3c.2406 = constant i32 0
@global_var_a027.2408 = constant [8 x i8] c"net.cpp\00"
@global_var_a02f.2409 = constant [10 x i8] c"cs_vNodes\00"
@global_var_a120.2410 = constant i32 1667592704
@global_var_a174.2411 = constant [3 x i8] c"rg\00"
@global_var_a178.2412 = constant [13 x i8] c"4.208.43.192\00"
@global_var_a2f8.2413 = constant [6 x i8] c"sseed\00"
@global_var_a046.2420 = constant [16 x i8] c"cs_mapLocalHost\00"
@global_var_a2a0.2421 = constant [7 x i8] c"ersion\00"
@global_var_fc.2422 = constant i32 -998046091
@global_var_a310.2423 = constant [4 x i8] c"ed\0A\00"
@global_var_a30c.2424 = constant [8 x i8] c"sabled\0A\00"
@global_var_a30d.2425 = local_unnamed_addr constant [7 x i8] c"abled\0A\00"
@global_var_a05e.2428 = constant [13 x i8] c"cs_setBanned\00"
@global_var_9e80.2429 = constant [15 x i8] c"resource_error\00"
@global_var_9edc.2430 = local_unnamed_addr constant [11 x i8] c"ex_lock(m)\00"
@global_var_9ed8.2431 = constant [15 x i8] c"_mutex_lock(m)\00"
@global_var_38.2432 = constant i32 666668288
@global_var_40.2433 = constant i32 -1993544573
@global_var_840f.2437 = constant [4 x i8] c"D$\08\00"
@global_var_184.2439 = constant i32 182
@global_var_298.2440 = constant i32 -998045579
@global_var_290.2441 = constant i32 355689740
@global_var_a0b1.2446 = constant [12 x i8] c"cs_vRecvMsg\00"
@global_var_a314.2447 = local_unnamed_addr constant [8 x i8] c"dnsseed\00"
@global_var_f4.2449 = constant i32 87254300
@global_var_dc.2450 = constant i32 0
@global_var_9ed4.2451 = constant [19 x i8] c"read_mutex_lock(m)\00"
@global_var_9ee0.2452 = local_unnamed_addr constant [7 x i8] c"ock(m)\00"
@global_var_9ee4.2453 = local_unnamed_addr constant [3 x i8] c"m)\00"
@global_var_9ee8.2454 = local_unnamed_addr constant [24 x i8] c"pthread_mutex_unlock(m)\00"
@global_var_a.2461 = constant i32 472142985
@global_var_a157.2465 = constant [13 x i8] c"91.198.22.70\00"
@global_var_a14e.2466 = constant [9 x i8] c"Address:\00"
@global_var_d8dc.2467 = constant [128 x i8] c"GET / HTTP/1.1\0D\0AHost: checkip.dyndns.org\0D\0AUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_a330.2471 = local_unnamed_addr constant [5 x i8] c"ncon\00"
@global_var_a1a2.2472 = constant [13 x i8] c"cs_vOneShots\00"
@global_var_9fe0.2473 = constant [15 x i8] c"oost::function\00"
@global_var_a278.2475 = local_unnamed_addr constant [8 x i8] c"gestest\00"
@global_var_a260.2476 = constant i32 1601397504
@global_var_a2f4.2478 = constant i32 1852058880
@global_var_c000.2479 = constant i32 83988736
@global_var_da9c.2483 = constant [42 x i8] c"UPnP: GetExternalIPAddress() returned %d\0A\00"
@global_var_a23e.2486 = constant [12 x i8] c"cs_mapRelay\00"
@global_var_a080.2487 = constant i32 1702232180
@global_var_a0e8.2488 = local_unnamed_addr constant [3 x i8] c" 0\00"
@global_var_a108.2489 = constant [9 x i8] c"ad stop\0A\00"
@global_var_a0f0.2490 = constant [17 x i8] c"->nSendSize == 0\00"
@global_var_a114.2491 = constant [13 x i8] c"cket closed\0A\00"
@global_var_a0f8.2492 = local_unnamed_addr constant [9 x i8] c"ize == 0\00"
@global_var_a100.2493 = local_unnamed_addr constant i32 544417024
@global_var_a0fc.2494 = local_unnamed_addr constant [5 x i8] c"== 0\00"
@global_var_a104.2495 = local_unnamed_addr constant [13 x i8] c"thread stop\0A\00"
@global_var_a10c.2496 = local_unnamed_addr constant [5 x i8] c"top\0A\00"
@global_var_a110.2497 = local_unnamed_addr constant i32 1869807616
@global_var_a118.2498 = local_unnamed_addr constant [9 x i8] c" closed\0A\00"
@global_var_a11c.2499 = local_unnamed_addr constant [5 x i8] c"sed\0A\00"
@global_var_a124.2500 = constant [14 x i8] c"v failed: %d\0A\00"
@global_var_a24a.2501 = constant [17 x i8] c"pnode->cs_filter\00"
@global_var_a25b.2503 = constant [6 x i8] c"net.h\00"
@global_var_a261.2504 = constant [13 x i8] c"cs_inventory\00"
@global_var_a0ec.2505 = local_unnamed_addr constant [21 x i8] c"node->nSendSize == 0\00"
@global_var_a0f4.2506 = local_unnamed_addr constant [13 x i8] c"endSize == 0\00"
@global_var_a0e0.2507 = constant [11 x i8] c"ffset == 0\00"
@global_var_188.2509 = constant i32 666668288
@global_var_18c.2510 = constant i32 0
@global_var_190.2511 = constant i32 1697442947
@global_var_194.2512 = constant i32 5281
@global_var_198.2513 = constant i32 608471296
@global_var_1a0.2514 = constant [4 x i8] c"D$\0C\00"
@global_var_a338.2515 = local_unnamed_addr constant [5 x i8] c"hand\00"
@global_var_a2fe.2517 = constant [22 x i8] c"DNS seeding disabled\0A\00"
@global_var_9e30.2518 = local_unnamed_addr global i32 125
@global_var_60.2520 = constant i32 71550720
@global_var_9e3c.2522 = local_unnamed_addr global i32 0
@global_var_1d4.2529 = constant i32 5281
@global_var_a274.2532 = local_unnamed_addr constant [12 x i8] c"essagestest\00"
@global_var_200.2533 = constant i32 -1912602625
@global_var_a26c.2534 = local_unnamed_addr constant i32 1680670841
@global_var_a270.2535 = local_unnamed_addr constant [16 x i8] c"ropmessagestest\00"
@global_var_a268.2536 = local_unnamed_addr constant [6 x i8] c"ntory\00"
@global_var_a334.2541 = local_unnamed_addr constant i32 1735617792
@global_var_a230.2542 = local_unnamed_addr constant [14 x i8] c"s (%d -> %d)\0A\00"
@global_var_a220.2543 = local_unnamed_addr constant i32 1766654053
@global_var_a35d.2544 = constant [15 x i8] c"cs_vAddedNodes\00"
@global_var_9f00.2545 = constant [27 x i8] c"!pthread_mutex_destroy(&m)\00"
@global_var_1d4c0.2547 = constant i32 1137115136
@global_var_a378.2550 = constant [24 x i8] c"setservAddNodeAddresses\00"
@global_var_a320.2551 = constant i32 1701707888
@global_var_a318.2552 = constant [4 x i8] c"eed\00"
@global_var_a452.2555 = constant [16 x i8] c"pnode->cs_vSend\00"
@global_var_a462.2556 = constant [19 x i8] c"pnode->cs_vRecvMsg\00"
@global_var_a475.2557 = constant [20 x i8] c"pnode->cs_inventory\00"
@global_var_5c.2559 = constant i32 3
@global_var_a375.2562 = constant [27 x i8] c"cs_setservAddNodeAddresses\00"
@global_var_9f60.2563 = constant [14 x i8] c"estroy(&cond)\00"
@global_var_9fb8.2565 = constant [22 x i8] c"his->is_initialized()\00"
@global_var_d5d0.2572 = constant [44 x i8] c"/usr/include/boost/smart_ptr/shared_ptr.hpp\00"
@global_var_9f6e.2573 = constant [8 x i8] c"px != 0\00"
@global_var_9e60.2574 = constant [18 x i8] c"boost::lock_error\00"
@global_var_9e72.2575 = constant [29 x i8] c"boost::thread_resource_error\00"
@global_var_30e50.2576 = constant i32 0
@global_var_31428.2577 = constant i32 42400
@global_var_277c8.2578 = constant i32 42544
@global_var_110.2580 = constant i32 1697442947
@global_var_10c.2581 = constant i32 0
@global_var_108.2582 = constant i32 649367039
@global_var_31700.2641 = constant i32 64384
@global_var_31714.2642 = constant i32 60960
@global_var_30e18.2643 = constant i32 0
@global_var_30e84.2644 = constant i32 66592
@global_var_30e94.2646 = constant i32 61120
@global_var_312c4.2647 = constant i32 66096
@global_var_312d4.2649 = constant i32 61312
@global_var_30f44.2650 = constant i32 64256
@global_var_30f54.2652 = constant i32 61792
@global_var_313c4.2653 = constant i32 65104
@global_var_313d4.2655 = constant i32 62000
@global_var_31104.2656 = constant i32 65840
@global_var_31114.2658 = constant i32 62224
@global_var_31024.2659 = constant i32 65488
@global_var_31034.2661 = constant i32 62448
@global_var_311e4.2662 = constant i32 64752
@global_var_311f4.2664 = constant i32 62672
@global_var_316b8.2666 = constant i32 63008
@global_var_3127c.2668 = constant i32 63104
@global_var_30e3c.2670 = constant i32 63216
@global_var_30efc.2672 = constant i32 63328
@global_var_30fdc.2674 = constant i32 63424
@global_var_3137c.2676 = constant i32 63536
@global_var_3119c.2678 = constant i32 63648
@global_var_310bc.2680 = constant i32 63760
@global_var_30d60.2686 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_d740.2687 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_31da0.2689 = constant i32 8
@global_var_33080.2690 = constant [90 x i8] c"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE\00"
@global_var_31da4.2691 = local_unnamed_addr constant [90 x i8]* @global_var_33080.2690
@global_var_31da5.2692 = constant i32 469762864
@global_var_7c.2696 = constant i32 0
@global_var_80.2697 = constant i32 -400280439
@global_var_2b883.2699 = constant [14 x i8] c"on_variable()\00"
@global_var_1dc83.2700 = constant i32 2
@global_var_a31c.2702 = local_unnamed_addr constant [6 x i8] c"-upnp\00"
@global_var_7f.2703 = constant i32 607422720
@global_var_e0.2706 = constant i32 -1014824053
@global_var_148.2707 = constant i32 666668288
@global_var_140.2708 = constant i32 -1912602625
@global_var_144.2709 = constant i32 182
@global_var_10f20.2712 = constant i32 1699540099
@global_var_28bc0.2715 = constant [107 x i8] c"T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]\00"
@global_var_61.2716 = constant i32 279495
@global_var_dbec.2717 = constant [44 x i8] c"/usr/include/boost/smart_ptr/scoped_ptr.hpp\00"
@global_var_2f4.2719 = constant i32 1977125120
@global_var_2f0.2720 = constant i32 5141
@global_var_2ec.2721 = constant i32 862264356
@global_var_1c8.2722 = constant i32 666668288
@global_var_2c8bb.2723 = constant [748 x i8] c"ype::iterator&, unsigned int) const [with R = bool, T1 = CNode*, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >]\00"
@global_var_dd74.2726 = constant [51 x i8] c"/usr/include/boost/signals2/detail/slot_groups.hpp\00"
@global_var_2eaa0.2728 = constant [845 x i8] c"boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >]\00"
@global_var_2f9c0.2732 = constant [637 x i8] c"boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>&]\00"
@global_var_ddc8.2737 = constant [55 x i8] c"/usr/include/boost/signals2/detail/signal_template.hpp\00"
@global_var_a390.2738 = constant [23 x i8] c"_shared_state.unique()\00"
@global_var_30680.2743 = constant [917 x i8] c"boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >]\00"
@global_var_2b2a0.2748 = constant [809 x i8] c"boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >]\00"
@global_var_2c560.2749 = constant [541 x i8] c"boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>&]\00"
@global_var_78.2756 = constant i32 -1791718078
@global_var_4f.2762 = constant i32 472138889
@global_var_a790.2764 = constant i32 1696394371
@global_var_150.2766 = constant i32 1697442947
@global_var_14c.2767 = constant i32 0
@global_var_1c9.2770 = constant i32 2604173
@global_var_2bea0.2771 = constant [474 x i8] c"void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = bool, T1 = CNode*, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*)>, Mutex = boost::signals2::mutex]\00"
@global_var_a328.2775 = local_unnamed_addr constant [5 x i8] c"dcon\00"
@global_var_a204.2776 = local_unnamed_addr constant [11 x i8] c"GDs found\0A\00"
@global_var_a210.2777 = local_unnamed_addr constant [9 x i8] c"banscore\00"
@global_var_a200.2778 = constant [15 x i8] c"nP IGDs found\0A\00"
@global_var_a208.2779 = local_unnamed_addr constant [7 x i8] c"found\0A\00"
@global_var_a20c.2780 = local_unnamed_addr constant [3 x i8] c"d\0A\00"
@global_var_a224.2783 = constant [26 x i8] c"sbehaving: %s (%d -> %d)\0A\00"
@global_var_a228.2784 = local_unnamed_addr constant [22 x i8] c"aving: %s (%d -> %d)\0A\00"
@global_var_a22c.2785 = local_unnamed_addr constant [18 x i8] c"g: %s (%d -> %d)\0A\00"
@global_var_a234.2786 = constant [10 x i8] c"d -> %d)\0A\00"
@global_var_a238.2787 = local_unnamed_addr constant [6 x i8] c" %d)\0A\00"
@global_var_a23c.2788 = local_unnamed_addr constant i32 1935867914
@global_var_a1d8.2789 = local_unnamed_addr constant [9 x i8] c"ss = %s\0A\00"
@global_var_a1d4.2790 = constant [13 x i8] c"ddress = %s\0A\00"
@global_var_a1e0.2791 = local_unnamed_addr constant i32 1918980096
@global_var_a0e4.2792 = local_unnamed_addr constant [7 x i8] c"t == 0\00"
@global_var_a048.2793 = local_unnamed_addr constant [14 x i8] c"_mapLocalHost\00"
@global_var_a054.2794 = local_unnamed_addr constant i32 774897780
@global_var_a044.2795 = constant i32 1935868019
@global_var_a04c.2796 = local_unnamed_addr constant [10 x i8] c"LocalHost\00"
@global_var_a050.2797 = local_unnamed_addr constant [6 x i8] c"lHost\00"
@global_var_a05c.2798 = constant i32 1935867952
@global_var_a060.2799 = local_unnamed_addr constant [11 x i8] c"_setBanned\00"
@global_var_a06c.2800 = local_unnamed_addr constant [22 x i8] c"ector::_M_fill_insert\00"
@global_var_a064.2801 = local_unnamed_addr constant [7 x i8] c"Banned\00"
@global_var_a068.2802 = local_unnamed_addr constant [3 x i8] c"ed\00"
@global_var_315b8.2803 = constant i32 0
@global_var_a214.2804 = constant [5 x i8] c"core\00"
@global_var_a1fc.2805 = constant [19 x i8] c"d UPnP IGDs found\0A\00"
@global_var_a180.2806 = constant [5 x i8] c".192\00"
@1 = external global i32
@global_var_1.2399 = constant i1 false
@global_var_65.2404 = constant i8 0
@global_var_a32c.2407 = external constant i8*
@global_var_9.2418 = external constant i8*
@global_var_1f.2426 = constant i64 85986600220
@2 = internal constant [7 x i8] c"\83\EC,e\A1\14\00"
@global_var_1d0.2438 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @2, i32 0, i32 0)
@global_var_1c0.2442 = constant i16* inttoptr (i32 -1912602625 to i16*)
@3 = internal constant [6 x i8] c"\EC,e\A1\14\00"
@global_var_1d1.2443 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0)
@4 = internal constant [2 x i8] c"\14\00"
@global_var_f8.2448 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0)
@5 = internal constant [3 x i8] c"\15\14\00"
@global_var_5.2484 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0)
@global_var_1cc.2485 = external constant i8*
@global_var_1ce.2508 = external constant i8*
@global_var_9e40 = local_unnamed_addr global i8 1
@global_var_64.2519 = constant i8 0
@global_var_1d8.2528 = external constant i8*
@global_var_1cf.2530 = external constant i8*
@global_var_5400.2531 = constant i8 -57
@global_var_6.2538 = constant i16* inttoptr (i32 20 to i16*)
@global_var_2.2539 = constant i64 86260802860
@6 = internal constant [6 x i8] c"\EC,e\A1\14\00"
@global_var_e483.2558 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i32 0, i32 0)
@7 = internal constant [2 x i8] c"t\00"
@global_var_a324.2561 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0)
@global_var_1e.2596 = constant i16* inttoptr (i32 862264356 to i16*)
@8 = internal constant [2 x i8] c"&\00"
@global_var_ec83.2682 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0)
@9 = internal constant [5 x i8] c"\18\8D\B4&\00"
@global_var_d8.2683 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0)
@10 = internal constant [3 x i8] c"\B4&\00"
@global_var_da.2684 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @10, i32 0, i32 0)
@11 = internal constant [4 x i8] c"$\08\01\00"
@global_var_1d483.2701 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @11, i32 0, i32 0)
@global_var_76c.2710 = constant i16 1088
@global_var_4e.2713 = constant i16* inttoptr (i32 608471296 to i16*)
@global_var_a218.2782 = external local_unnamed_addr constant i8*
@global_var_277f0.2584 = constant %vtable_277f0_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32*)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_27808.2585 = constant %vtable_27808_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32*)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_27820.2540 = constant %vtable_27820_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32*)* @_ZN5boost10lock_errorD0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv }
@global_var_30e28.2669 = constant %vtable_30e28_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv }
@global_var_30e68.2645 = constant %vtable_30e68_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_30ee8.2671 = constant %vtable_30ee8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_30f28.2651 = constant %vtable_30f28_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev, i32 ()* @instance_of_cnetcleanup, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv }
@global_var_30fa8.2586 = constant %vtable_30fa8_type { i32 (i32*)* @_ZN5boost9gregorian16bad_day_of_monthD1Ev, i32 (i32*)* @_ZN5boost9gregorian16bad_day_of_monthD0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_30fc8.2673 = constant %vtable_30fc8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_31008.2660 = constant %vtable_31008_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev, i32 ()* @instance_of_cnetcleanup, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv }
@global_var_31088.2588 = constant %vtable_31088_type { i32 (i32*)* @_ZN5boost9gregorian9bad_monthD1Ev, i32 (i32*)* @_ZN5boost9gregorian9bad_monthD0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_310a8.2679 = constant %vtable_310a8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_310e8.2657 = constant %vtable_310e8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev, i32 ()* @instance_of_cnetcleanup, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2393, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv }
@global_var_31168.2587 = constant %vtable_31168_type { i32 (i32*)* @_ZN5boost9gregorian8bad_yearD1Ev, i32 (i32*)* @_ZN5boost9gregorian8bad_yearD0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_31188.2677 = constant %vtable_31188_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_311c8.2663 = constant %vtable_311c8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev, i32 ()* @instance_of_cnetcleanup, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv }
@global_var_31248.2524 = constant %vtable_31248_type { i32 (i32*)* @_ZN5boost21thread_resource_errorD1Ev, i32 (i32*)* @_ZN5boost21thread_resource_errorD0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_31268.2667 = constant %vtable_31268_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_312a8.2648 = constant %vtable_312a8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv }
@global_var_31338.2583 = constant %vtable_31338_type { i32 (i32*)* @_ZN5boost17bad_function_callD1Ev, i32 (i32*)* @_ZN5boost17bad_function_callD0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_31368.2675 = constant %vtable_31368_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_313a8.2654 = constant %vtable_313a8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, i32 ()* @instance_of_cnetcleanup, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv }
@global_var_31448.2747 = constant %vtable_31448_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_31490.2590 = constant %vtable_31490_type { i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEE3runEv }
@global_var_31508.2729 = constant %vtable_31508_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_31548.2742 = constant %vtable_31548_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_31588.2589 = constant %vtable_31588_type { i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEE3runEv }
@global_var_315c0.2731 = constant %vtable_315c0_type { i32 (i32*)* @_ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv }
@global_var_315d8.2705 = constant %vtable_315d8_type { i32 (i32*)* @_ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv }
@global_var_315f0.2579 = constant %vtable_315f0_type { i32 (i32*)* @_ZN5boost8signals211signal_baseD1Ev, i32 (i32*)* @_ZN5boost8signals211signal_baseD0Ev, i32 ()* @instance_of_cnetcleanup }
@global_var_31620.2704 = constant %vtable_31620_type { i32 (i32*)* @_ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv }
@global_var_31678.2730 = constant %vtable_31678_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE11get_deleterERKSt9type_info }
@global_var_316a8.2665 = constant %vtable_316a8_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_316e8.2640 = constant %vtable_316e8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }

define i32 @instance_of_cnetcleanup() {
dec_label_pc_0:
  %v17_0 = load i32, i32* @eax, align 8
  ret i32 %v17_0
}

define i32 @function_8() {
dec_label_pc_8:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_10:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_20:
  ret void
}

define void @"~pthread_mutex_scoped_lock"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_34:
  ret void
}

define void @_Vector_base(i32 %this, i32 %__n, i32 %__a) local_unnamed_addr {
dec_label_pc_40:
  ret void
}

define i32 @function_88() local_unnamed_addr {
dec_label_pc_88:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define void @_ZN5boost5mutex6unlockEv(i32 %this) local_unnamed_addr {
dec_label_pc_9c:
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_9c = add i32 %tmp91, 23
  %v2_9c = inttoptr i32 %v1_9c to i8*
  %v3_9c = load i8, i8* %v2_9c, align 1
  %v4_9c = load i32, i32* %edx.global-to-local, align 4
  %v5_9c = udiv i32 %v4_9c, 256
  %v6_9c = trunc i32 %v5_9c to i8
  %v7_9c = or i8 %v6_9c, %v3_9c
  store i8 %v7_9c, i8* %v2_9c, align 1
  ret void
}

define i32 @function_a8() local_unnamed_addr {
dec_label_pc_a8:
  store i32 0, i32* @eax, align 8
  %v0_b4 = call i32 @function_88()
  ret i32 %v0_b4
}

define void @_ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_destroy_nodesEPPS3_S7_(i32 %this, i32 %__nstart, i32 %__nfinish) local_unnamed_addr {
dec_label_pc_c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_c0 = load i32, i32* %esi.global-to-local, align 4
  %v0_c1 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_c1, i32* %esi.global-to-local, align 4
  %v0_c3 = load i32, i32* %ebx.global-to-local, align 4
  %v0_c4 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_c4, i32* %ebx.global-to-local, align 4
  %v0_c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %tmp103 = icmp ugt i32 %v0_c1, %v0_c4
  br i1 %tmp103, label %dec_label_pc_d9, label %bb

bb:                                               ; preds = %dec_label_pc_c0
  %v6_d7 = call i32 @function_f1(i32 %v0_c9, i32 %v0_c3, i32 %v0_c0)
  store i32 %v6_d7, i32* %eax.global-to-local, align 8
  %v0_e2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_d9

dec_label_pc_d9:                                  ; preds = %dec_label_pc_c0, %bb
  %v0_e2 = phi i32 [ %v0_e2.pre, %bb ], [ %v0_c4, %dec_label_pc_c0 ]
  %v1_e2 = add i32 %v0_e2, 4
  store i32 %v1_e2, i32* %ebx.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d9, { 1, 0 }
}

define i32 @function_f1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f5 = xor i32 %v1_f5, %arg1
  %v3_f5 = icmp eq i32 %v2_f5, 0
  store i32 %v2_f5, i32* %eax.global-to-local, align 8
  %v1_fc = icmp eq i1 %v3_f5, false
  br i1 %v1_fc, label %bb, label %dec_label_pc_fe

bb:                                               ; preds = %dec_label_pc_f1
  call void @_ZN5boost18condition_variable10notify_oneEv(i32 ptrtoint (i32* @1 to i32))
  %v0_103.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_fe

dec_label_pc_fe:                                  ; preds = %bb, %dec_label_pc_f1
  %v0_103 = phi i32 [ %v0_103.pre, %bb ], [ %v2_f5, %dec_label_pc_f1 ]
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v0_103
}

define void @_ZN5boost18condition_variable10notify_oneEv(i32 %this) local_unnamed_addr {
dec_label_pc_104:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type__1 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_110:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::copy_into, const void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type_ %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_150:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type_.0 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_190:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_1a0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a1 = load i32, i32* %eax.global-to-local, align 8
  %v11_1a1 = and i32 %v0_1a1, -244
  store i32 %v11_1a1, i32* %eax.global-to-local, align 8
  %v0_1a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a3 = add i32 %v0_1a3, 1153892354
  %v2_1a3 = inttoptr i32 %v1_1a3 to i8*
  %v3_1a3 = load i8, i8* %v2_1a3, align 1
  %v4_1a3 = load i32, i32* %edx.global-to-local, align 4
  %v5_1a3 = udiv i32 %v4_1a3, 256
  %v6_1a3 = trunc i32 %v5_1a3 to i8
  %v7_1a3 = add i8 %v6_1a3, %v3_1a3
  store i8 %v7_1a3, i8* %v2_1a3, align 1
  %v0_1a9 = load i32, i32* %eax.global-to-local, align 8
  %v1_1a9 = trunc i32 %v0_1a9 to i8
  %v2_1a9 = and i8 %v1_1a9, 8
  %v8_1a9 = zext i8 %v2_1a9 to i32
  %v10_1a9 = and i32 %v0_1a9, -256
  %v11_1a9 = or i32 %v8_1a9, %v10_1a9
  store i32 %v11_1a9, i32* %eax.global-to-local, align 8
  %v0_1ab = load i32, i32* %edx.global-to-local, align 4
  %v1_1ab = and i32 %v0_1ab, -65281
  store i32 %v1_1ab, i32* %edx.global-to-local, align 4
  %v1_1ad = inttoptr i32 %v11_1a9 to i8*
  %v2_1ad = load i8, i8* %v1_1ad, align 8
  %v5_1ad = add i8 %v2_1ad, %v2_1a9
  store i8 %v5_1ad, i8* %v1_1ad, align 8
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type__1.1 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1d0:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_1d4:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_208:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_208 = add i32 %tmp91, 10172
  %v2_208 = inttoptr i32 %v1_208 to i8*
  %v3_208 = load i8, i8* %v2_208, align 1
  %v4_208 = load i32, i32* %ecx.global-to-local, align 4
  %v5_208 = trunc i32 %v4_208 to i8
  %v6_208 = add i8 %v5_208, %v3_208
  store i8 %v6_208, i8* %v2_208, align 1
  %v2_20e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_20e = load i32, i32* %eax.global-to-local, align 8
  %v4_20e = trunc i32 %v3_20e to i8
  %v5_20e = add i8 %v4_20e, %v2_20e
  %v21_20e = inttoptr i32 %v3_20e to i8*
  store i8 %v5_20e, i8* %v21_20e, align 1
  ret void
}

define void @"__uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> >"(i32 %__first, i32 %__last, i32 %__result, i32 %__alloc) local_unnamed_addr {
dec_label_pc_210:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_214 = load i32, i32* %eax.global-to-local, align 8
  %v0_219 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_219, i32* %eax.global-to-local, align 8
  store i32 %v0_214, i32* %esi.global-to-local, align 4
  %v2_236 = inttoptr i32 %v0_219 to i32*
  store i32 %v0_219, i32* %v2_236, align 4
  %v0_238 = load i32, i32* %esi.global-to-local, align 4
  %v1_238 = add i32 %v0_238, 4
  %v2_238 = inttoptr i32 %v1_238 to i32*
  %v3_238 = load i32, i32* %v2_238, align 4
  store i32 %v3_238, i32* %ecx.global-to-local, align 4
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_23c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_23c = sub i32 %tmp93, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_23c, i32* %edi.global-to-local, align 4
  %v0_23d = load i32, i32* %eax.global-to-local, align 8
  %v1_23d = trunc i32 %v0_23d to i8
  %v2_23d = add i32 %v0_23d, 139
  %v6_23d = icmp ugt i8 %v1_23d, 116
  store i1 %v6_23d, i1* %cf.global-to-local, align 1
  %v16_23d = urem i32 %v2_23d, 256
  %v18_23d = and i32 %v0_23d, -256
  %v19_23d = or i32 %v16_23d, %v18_23d
  store i32 %v19_23d, i32* %eax.global-to-local, align 8
  %v0_23f = load i32, i32* %esi.global-to-local, align 4
  %v1_23f = sub i32 %v0_23f, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_23f, i32* %esi.global-to-local, align 4
  %v0_240 = load i32, i32* %ecx.global-to-local, align 4
  %v1_240 = add i32 %v0_240, 1317734479
  %v2_240 = inttoptr i32 %v1_240 to i8*
  %v3_240 = load i8, i8* %v2_240, align 1
  %v5_240 = trunc i32 %v0_240 to i8
  %v6_240 = or i8 %v3_240, %v5_240
  store i8 %v6_240, i8* %v2_240, align 1
  %v0_246 = load i32, i32* %eax.global-to-local, align 8
  %v0_248 = load i32, i32* %edi.global-to-local, align 4
  %v1_248 = sub i32 %v0_248, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_248, i32* %edi.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_249 = or i32 %v0_246, 139
  store i32 %v11_249, i32* %eax.global-to-local, align 8
  %v0_24b = load i32, i32* %esi.global-to-local, align 4
  %v1_24b = sub i32 %v0_24b, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_24b, i32* %esi.global-to-local, align 4
  %v0_24c = load i32, i32* %ecx.global-to-local, align 4
  %v1_24c = add i32 %v0_24c, 1317736527
  %v2_24c = inttoptr i32 %v1_24c to i8*
  %v3_24c = load i8, i8* %v2_24c, align 1
  %v5_24c = trunc i32 %v0_24c to i8
  %v8_24c = add i8 %v3_24c, %v5_24c
  %v28_24c = icmp ult i8 %v8_24c, %v3_24c
  store i1 %v28_24c, i1* %cf.global-to-local, align 1
  store i8 %v8_24c, i8* %v2_24c, align 1
  %v0_252 = load i32, i32* %eax.global-to-local, align 8
  %v1_252 = trunc i32 %v0_252 to i8
  %v2_252 = load i1, i1* %cf.global-to-local, align 1
  %v3_252 = zext i1 %v2_252 to i8
  %v4_252 = add i8 %v1_252, -119
  %v5_252 = add i8 %v4_252, %v3_252
  %v22_252 = icmp ule i8 %v5_252, %v1_252
  %v23_252 = icmp ugt i8 %v1_252, 118
  %v24_252 = select i1 %v2_252, i1 %v22_252, i1 %v23_252
  %v0_254 = load i32, i32* %edi.global-to-local, align 4
  %v1_254 = sub i32 %v0_254, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_254, i32* %edi.global-to-local, align 4
  %v3_255 = zext i1 %v24_252 to i8
  %v4_255 = add i8 %v5_252, -117
  %v5_255 = add i8 %v4_255, %v3_255
  %v22_255 = icmp ule i8 %v5_255, %v5_252
  %v23_255 = icmp ugt i8 %v5_252, 116
  %v24_255 = select i1 %v24_252, i1 %v22_255, i1 %v23_255
  store i1 %v24_255, i1* %cf.global-to-local, align 1
  %v25_255 = zext i8 %v5_255 to i32
  %v27_255 = and i32 %v0_252, -256
  %v28_255 = or i32 %v25_255, %v27_255
  store i32 %v28_255, i32* %eax.global-to-local, align 8
  %v0_257 = load i32, i32* %esi.global-to-local, align 4
  %v1_257 = sub i32 %v0_257, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_257, i32* %esi.global-to-local, align 4
  %v0_258 = load i32, i32* %ecx.global-to-local, align 4
  %v1_258 = add i32 %v0_258, 1317738575
  %v2_258 = inttoptr i32 %v1_258 to i8*
  %v3_258 = load i8, i8* %v2_258, align 1
  %v5_258 = trunc i32 %v0_258 to i8
  %v7_258 = zext i1 %v24_255 to i8
  %v8_258 = sub i8 %v3_258, %v5_258
  %v9_258 = add i8 %v8_258, %v7_258
  %v19_258 = sub i8 %v8_258, %v7_258
  %v20_258 = icmp ult i8 %v3_258, %v19_258
  %v21_258 = icmp ne i8 %v5_258, -1
  %v22_258 = or i1 %v21_258, %v20_258
  %v23_258 = icmp ult i8 %v3_258, %v5_258
  %v24_258 = select i1 %v24_255, i1 %v22_258, i1 %v23_258
  store i1 %v24_258, i1* %cf.global-to-local, align 1
  store i8 %v9_258, i8* %v2_258, align 1
  %v0_25e = load i32, i32* %eax.global-to-local, align 8
  %v1_25e = trunc i32 %v0_25e to i8
  %v2_25e = load i1, i1* %cf.global-to-local, align 1
  %v3_25e = zext i1 %v2_25e to i8
  %v4_25e = add i8 %v1_25e, 119
  %v5_25e = add i8 %v4_25e, %v3_25e
  %v17_25e = icmp ult i8 %v1_25e, -119
  %v18_25e = or i1 %v2_25e, %v17_25e
  %v0_260 = load i32, i32* %edi.global-to-local, align 4
  %v1_260 = sub i32 %v0_260, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_260, i32* %edi.global-to-local, align 4
  %v3_261 = zext i1 %v18_25e to i8
  %v4_261 = add i8 %v5_25e, 117
  %v5_261 = add i8 %v4_261, %v3_261
  %v17_261 = icmp ult i8 %v5_25e, -117
  %v18_261 = or i1 %v18_25e, %v17_261
  store i1 %v18_261, i1* %cf.global-to-local, align 1
  %v31_261 = zext i8 %v5_261 to i32
  %v33_261 = and i32 %v0_25e, -256
  %v34_261 = or i32 %v31_261, %v33_261
  store i32 %v34_261, i32* %eax.global-to-local, align 8
  %v0_263 = load i32, i32* %edx.global-to-local, align 4
  %v1_263 = trunc i32 %v0_263 to i16
  %v2_263 = load i32, i32* %esi.global-to-local, align 4
  %v3_263 = inttoptr i32 %v2_263 to i8*
  %v4_263 = load i8, i8* %v3_263, align 1
  call void @__asm_outsb(i16 %v1_263, i8 %v4_263)
  %v0_264 = load i32, i32* %ecx.global-to-local, align 4
  %v1_264 = add i32 %v0_264, 1854611567
  %v2_264 = inttoptr i32 %v1_264 to i8*
  %v3_264 = load i8, i8* %v2_264, align 1
  %v5_264 = trunc i32 %v0_264 to i8
  %v6_264 = and i8 %v3_264, %v5_264
  store i8 %v6_264, i8* %v2_264, align 1
  %v0_26a = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_26a = and i32 %v0_26a, -119
  store i32 %v11_26a, i32* %eax.global-to-local, align 8
  %v0_26c = load i32, i32* %edx.global-to-local, align 4
  %v1_26c = trunc i32 %v0_26c to i16
  %v2_26c = load i32, i32* %esi.global-to-local, align 4
  %v3_26c = inttoptr i32 %v2_26c to i32*
  %v4_26c = load i32, i32* %v3_26c, align 4
  call void @__asm_outsd(i16 %v1_26c, i32 %v4_26c)
  ret void

; uselistorder directives
  uselistorder i1 %v18_25e, { 1, 0 }
  uselistorder i8 %v5_25e, { 1, 0 }
  uselistorder i8 %v1_25e, { 1, 0 }
  uselistorder i8 %v8_258, { 1, 0 }
  uselistorder i8 %v7_258, { 1, 0 }
  uselistorder i8 %v5_258, { 1, 0, 2 }
  uselistorder i1 %v24_255, { 1, 0, 2 }
  uselistorder i8 %v5_255, { 1, 0 }
  uselistorder i1 %v24_252, { 1, 0 }
  uselistorder i32 %v0_23d, { 1, 0, 2 }
}

define void @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_270:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_270 = load i32, i32* %ebx.global-to-local, align 4
  %v1_270 = add i32 %v0_270, -700897081
  %v2_270 = inttoptr i32 %v1_270 to i8*
  %v3_270 = load i8, i8* %v2_270, align 1
  %v4_270 = load i32, i32* %eax.global-to-local, align 8
  %v5_270 = trunc i32 %v4_270 to i8
  %v6_270 = sub i8 %v3_270, %v5_270
  store i8 %v6_270, i8* %v2_270, align 1
  %v0_278 = load i32, i32* %ebx.global-to-local, align 4
  %v1_278 = add i32 %v0_278, 40
  store i32 %v1_278, i32* %ebx.global-to-local, align 4
  %v0_27b = load i32, i32* %esi.global-to-local, align 4
  %v2_27b = sub i32 %v0_27b, %v1_278
  %v2_27d = udiv i32 %v2_27b, 8
  %v3_280 = mul i32 %v2_27d, 214748365
  store i32 %v3_280, i32* %esi.global-to-local, align 4
  %v0_289 = load i32, i32* %eax.global-to-local, align 8
  %v2_289 = mul nuw i32 %v2_27d, 8
  %v3_289 = add i32 %v0_289, 40
  %v4_289 = add i32 %v3_289, %v2_289
  store i32 %v4_289, i32* %eax.global-to-local, align 8
  %v1_291 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_291 = icmp eq i32 %v1_291, %this
  %v1_298 = icmp eq i1 %v3_291, false
  br i1 %v1_298, label %dec_label_pc_2a2, label %dec_label_pc_29a

dec_label_pc_29a:                                 ; preds = %dec_label_pc_270
  ret void

dec_label_pc_2a2:                                 ; preds = %dec_label_pc_270
  ret void

; uselistorder directives
  uselistorder i32 %v2_27d, { 1, 0 }
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSB_EEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_2a4:
  ret void
}

define void @"__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, std::basic_string<char>*, std::basic_string<char> >"(i32 %__first, i32 %__last, i32 %__result, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b0:
  %edx.global-to-local = alloca i32, align 4
  %v0_2b1 = load i32, i32* @ecx, align 4
  %v0_2b4 = load i32, i32* %edx.global-to-local, align 4
  %v0_2bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_2c8 = load i32, i32* @eax, align 8
  %v12_2c8 = icmp eq i32 %v0_2c8, %v0_2b4
  br i1 %v12_2c8, label %bb, label %dec_label_pc_2cc

bb:                                               ; preds = %dec_label_pc_2b0
  %v2_2ca = call i32 @function_301(i32 %v0_2bb)
  %v0_2ce.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_2cc

dec_label_pc_2cc:                                 ; preds = %bb, %dec_label_pc_2b0
  %v0_2ce = phi i32 [ %v0_2ce.pre, %bb ], [ %v0_2b1, %dec_label_pc_2b0 ]
  %v0_2cc = phi i32 [ %v2_2ca, %bb ], [ %v0_2c8, %dec_label_pc_2b0 ]
  store i32 %v0_2cc, i32* @esi, align 4
  store i32 %v0_2ce, i32* @ebx, align 4
  %v1_2d0 = icmp eq i32 %v0_2ce, 0
  br i1 %v1_2d0, label %bb106, label %dec_label_pc_2d4

bb106:                                            ; preds = %dec_label_pc_2cc
  %v1_2d2 = call i32 @function_2e0()
  br label %dec_label_pc_2d4

dec_label_pc_2d4:                                 ; preds = %bb106, %dec_label_pc_2cc
  ret void

; uselistorder directives
  uselistorder i32 %v0_2ce, { 1, 0 }
  uselistorder i32 %v0_2c8, { 1, 0 }
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSB_bEEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_2d8:
  ret void
}

define i32 @function_2e0() local_unnamed_addr {
dec_label_pc_2e0:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v0_2e3 = load i32, i32* @ebx, align 4
  %v1_2e3 = add i32 %v0_2e3, 4
  %v1_2ee = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ee = icmp eq i32 %v1_2ee, %tmp10
  store i32 %v1_2e3, i32* @eax, align 8
  %v1_2f7 = icmp eq i1 %v3_2ee, false
  br i1 %v1_2f7, label %bb, label %dec_label_pc_2f9

bb:                                               ; preds = %dec_label_pc_2e0
  %v2_2f7 = call i32 @function_305()
  br label %dec_label_pc_2f9

dec_label_pc_2f9:                                 ; preds = %bb, %dec_label_pc_2e0
  %v0_300 = phi i32 [ %v2_2f7, %bb ], [ %v1_2e3, %dec_label_pc_2e0 ]
  ret i32 %v0_300
}

define i32 @function_301(i32 %arg1) local_unnamed_addr {
dec_label_pc_301:
  %v0_303 = load i32, i32* @eax, align 8
  ret i32 %v0_303
}

define i32 @function_305() local_unnamed_addr {
dec_label_pc_305:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define void @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_30c:
  %eax.global-to-local = alloca i32, align 4
  %v0_30c = load i32, i32* %eax.global-to-local, align 8
  %v11_30c = and i32 %v0_30c, -24
  store i32 %v11_30c, i32* %eax.global-to-local, align 8
  ret void
}

define i32 @function_313() local_unnamed_addr {
dec_label_pc_313:
  %eax.global-to-local = alloca i32, align 4
  %v0_313 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_313
}

define i32 @function_322() local_unnamed_addr {
dec_label_pc_322:
  %eax.global-to-local = alloca i32, align 4
  %v0_322 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_322
}

define i32 @function_32b() local_unnamed_addr {
dec_label_pc_32b:
  %eax.global-to-local = alloca i32, align 4
  %v0_32b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32b
}

define void @"__uninitialized_move_a<CInv*, CInv*, std::allocator<CInv> >"(i32 %__first, i32 %__last, i32 %__result, i32 %__alloc) local_unnamed_addr {
dec_label_pc_340:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_344 = load i32, i32* %eax.global-to-local, align 8
  %v0_349 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_349, i32* %eax.global-to-local, align 8
  store i32 %v0_344, i32* %esi.global-to-local, align 4
  %v2_366 = inttoptr i32 %v0_349 to i32*
  store i32 %v0_349, i32* %v2_366, align 4
  %v0_368 = load i32, i32* %esi.global-to-local, align 4
  %v1_368 = add i32 %v0_368, 4
  %v2_368 = inttoptr i32 %v1_368 to i32*
  %v3_368 = load i32, i32* %v2_368, align 4
  store i32 %v3_368, i32* %ecx.global-to-local, align 4
  %v2_36b = add i32 %v0_349, 4
  %v3_36b = inttoptr i32 %v2_36b to i32*
  store i32 %v3_368, i32* %v3_36b, align 4
  %v0_36e = load i32, i32* %esi.global-to-local, align 4
  %v1_36e = add i32 %v0_36e, 8
  %v2_36e = inttoptr i32 %v1_36e to i32*
  %v3_36e = load i32, i32* %v2_36e, align 4
  store i32 %v3_36e, i32* %ecx.global-to-local, align 4
  %v2_371 = add i32 %v0_349, 8
  %v3_371 = inttoptr i32 %v2_371 to i32*
  store i32 %v3_36e, i32* %v3_371, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_349, { 1, 2, 0, 3, 4 }
}

define void @_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_374:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_374 = add i32 %tmp92, 12
  %v2_374 = inttoptr i32 %v1_374 to i32*
  %v3_374 = load i32, i32* %v2_374, align 4
  %v2_377 = add i32 %tmp93, 12
  %v3_377 = inttoptr i32 %v2_377 to i32*
  store i32 %v3_374, i32* %v3_377, align 4
  %v0_37a = load i32, i32* %esi.global-to-local, align 4
  %v1_37a = add i32 %v0_37a, 16
  %v2_37a = inttoptr i32 %v1_37a to i32*
  %v3_37a = load i32, i32* %v2_37a, align 4
  %v1_37d = load i32, i32* %edi.global-to-local, align 4
  %v2_37d = add i32 %v1_37d, 16
  %v3_37d = inttoptr i32 %v2_37d to i32*
  store i32 %v3_37a, i32* %v3_37d, align 4
  %v0_380 = load i32, i32* %esi.global-to-local, align 4
  %v1_380 = add i32 %v0_380, 20
  %v2_380 = inttoptr i32 %v1_380 to i32*
  %v3_380 = load i32, i32* %v2_380, align 4
  %v1_383 = load i32, i32* %edi.global-to-local, align 4
  %v2_383 = add i32 %v1_383, 20
  %v3_383 = inttoptr i32 %v2_383 to i32*
  store i32 %v3_380, i32* %v3_383, align 4
  %v0_386 = load i32, i32* %esi.global-to-local, align 4
  %v1_386 = add i32 %v0_386, 24
  %v2_386 = inttoptr i32 %v1_386 to i32*
  %v3_386 = load i32, i32* %v2_386, align 4
  %v1_389 = load i32, i32* %edi.global-to-local, align 4
  %v2_389 = add i32 %v1_389, 24
  %v3_389 = inttoptr i32 %v2_389 to i32*
  store i32 %v3_386, i32* %v3_389, align 4
  %v0_38c = load i32, i32* %esi.global-to-local, align 4
  %v1_38c = add i32 %v0_38c, 28
  %v2_38c = inttoptr i32 %v1_38c to i32*
  %v3_38c = load i32, i32* %v2_38c, align 4
  %v1_38f = load i32, i32* %edi.global-to-local, align 4
  %v2_38f = add i32 %v1_38f, 28
  %v3_38f = inttoptr i32 %v2_38f to i32*
  store i32 %v3_38c, i32* %v3_38f, align 4
  %v0_392 = load i32, i32* %esi.global-to-local, align 4
  %v1_392 = add i32 %v0_392, 32
  %v2_392 = inttoptr i32 %v1_392 to i32*
  %v3_392 = load i32, i32* %v2_392, align 4
  %v1_395 = load i32, i32* %edi.global-to-local, align 4
  %v2_395 = add i32 %v1_395, 32
  %v3_395 = inttoptr i32 %v2_395 to i32*
  store i32 %v3_392, i32* %v3_395, align 4
  ret void
}

define i32 @function_3a3() local_unnamed_addr {
dec_label_pc_3a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a3
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_3a8:
  %ecx.global-to-local = alloca i32, align 4
  %v0_3a9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a9 = udiv i32 %v0_3a9, 256
  %v2_3a9 = trunc i32 %v1_3a9 to i8
  %v4_3a9 = add i32 %v0_3a9, -10
  %v5_3a9 = inttoptr i32 %v4_3a9 to i8*
  %v6_3a9 = load i8, i8* %v5_3a9, align 1
  %v7_3a9 = add i8 %v2_3a9, %v6_3a9
  %v22_3a9 = zext i8 %v7_3a9 to i32
  %v24_3a9 = mul nuw nsw i32 %v22_3a9, 256
  %v25_3a9 = and i32 %v0_3a9, -65281
  %v26_3a9 = or i32 %v24_3a9, %v25_3a9
  store i32 %v26_3a9, i32* %ecx.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_3a9, { 1, 2, 0 }
}

define i32 @function_3b3() local_unnamed_addr {
dec_label_pc_3b3:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3b3 = load i32, i32* %eax.global-to-local, align 8
  %v1_3b3 = load i32, i32* %edx.global-to-local, align 4
  %v2_3b3 = mul i32 %v1_3b3, 4
  %v3_3b3 = add i32 %v0_3b3, 36
  %v4_3b3 = add i32 %v3_3b3, %v2_3b3
  store i32 %v4_3b3, i32* %eax.global-to-local, align 8
  ret i32 %v4_3b3
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_3dc:
  %eax.global-to-local = alloca i32, align 4
  %v2_3dc = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3dc = load i32, i32* %eax.global-to-local, align 8
  %v4_3dc = trunc i32 %v3_3dc to i8
  %v5_3dc = add i8 %v4_3dc, %v2_3dc
  %v21_3dc = inttoptr i32 %v3_3dc to i8*
  store i8 %v5_3dc, i8* %v21_3dc, align 1
  %v2_3de = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3de = load i32, i32* %eax.global-to-local, align 8
  %v4_3de = trunc i32 %v3_3de to i8
  %v5_3de = add i8 %v4_3de, %v2_3de
  %v21_3de = inttoptr i32 %v3_3de to i8*
  store i8 %v5_3de, i8* %v21_3de, align 1
  ret void
}

define void @_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_(i32 %this, i32 %key1, i32 %key2) local_unnamed_addr {
dec_label_pc_3e0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3e0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_3e1 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_3e1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v3_3f4 = load i32, i32* %edx.global-to-local, align 4
  %v4_3f4 = sub i32 %v0_3e1, %v3_3f4
  %v14_3f4 = icmp eq i32 %v4_3f4, 0
  br i1 %v14_3f4, label %dec_label_pc_410, label %dec_label_pc_3f8

dec_label_pc_3f8:                                 ; preds = %dec_label_pc_3e0
  %v15_3f4 = icmp slt i32 %v4_3f4, 0
  %v11_3f4 = xor i32 %v4_3f4, %v0_3e1
  %v10_3f4 = xor i32 %v3_3f4, %v0_3e1
  %v12_3f4 = and i32 %v11_3f4, %v10_3f4
  %v13_3f4 = icmp slt i32 %v12_3f4, 0
  %v2_3f8 = icmp ne i1 %v15_3f4, %v13_3f4
  %v3_3f8 = zext i1 %v2_3f8 to i32
  store i32 %v3_3f8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3fb

dec_label_pc_3fb:                                 ; preds = %dec_label_pc_423, %dec_label_pc_410, %dec_label_pc_3f8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 false, label %dec_label_pc_433, label %dec_label_pc_408

dec_label_pc_408:                                 ; preds = %dec_label_pc_3fb
  store i32 %v0_3e0, i32* %ebx.global-to-local, align 4
  ret void

dec_label_pc_410:                                 ; preds = %dec_label_pc_3e0
  store i32 0, i32* %eax.global-to-local, align 8
  %v10_412 = icmp eq i32 %v0_3e1, 1
  %v1_415 = icmp eq i1 %v10_412, false
  br i1 %v1_415, label %dec_label_pc_3fb, label %dec_label_pc_417

dec_label_pc_417:                                 ; preds = %dec_label_pc_410
  %v1_417 = add i32 %v3_3f4, 4
  %v2_417 = inttoptr i32 %v1_417 to i8*
  %v3_417 = load i8, i8* %v2_417, align 1
  %v10_417 = icmp eq i8 %v3_417, 0
  br i1 %v10_417, label %dec_label_pc_433, label %dec_label_pc_41d

dec_label_pc_41d:                                 ; preds = %dec_label_pc_417
  %v1_41d = add i32 %v0_3e1, 4
  %v2_41d = inttoptr i32 %v1_41d to i8*
  %v3_41d = load i8, i8* %v2_41d, align 1
  %v10_41d = icmp eq i8 %v3_41d, 0
  br i1 %v10_41d, label %dec_label_pc_433, label %dec_label_pc_423

dec_label_pc_423:                                 ; preds = %dec_label_pc_41d
  %v1_423 = add i32 %v3_3f4, 8
  %v2_423 = inttoptr i32 %v1_423 to i32*
  %v3_423 = load i32, i32* %v2_423, align 4
  store i32 %v3_423, i32* %eax.global-to-local, align 8
  %v1_426 = add i32 %v0_3e1, 8
  %v2_426 = inttoptr i32 %v1_426 to i32*
  %v3_426 = load i32, i32* %v2_426, align 4
  %v5_426 = sub i32 %v3_426, %v3_423
  %v11_426 = xor i32 %v3_426, %v3_423
  %v12_426 = xor i32 %v5_426, %v3_426
  %v13_426 = and i32 %v12_426, %v11_426
  %v14_426 = icmp slt i32 %v13_426, 0
  %v16_426 = icmp slt i32 %v5_426, 0
  %v2_429 = icmp ne i1 %v16_426, %v14_426
  %v3_429 = zext i1 %v2_429 to i32
  %v5_429 = and i32 %v3_423, -256
  %v6_429 = or i32 %v3_429, %v5_429
  store i32 %v6_429, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3fb

dec_label_pc_433:                                 ; preds = %dec_label_pc_3fb, %dec_label_pc_41d, %dec_label_pc_417
  ret void

; uselistorder directives
  uselistorder i32 %v5_426, { 1, 0 }
  uselistorder i32 %v3_423, { 1, 0, 2, 3 }
  uselistorder i32 %v3_3f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_3e1, { 3, 4, 0, 2, 1, 5, 6 }
  uselistorder label %dec_label_pc_433, { 1, 2, 0 }
}

define i32 @_Z14GetNodeSignalsv() local_unnamed_addr {
dec_label_pc_460:
  ret i32 ptrtoint (i32* @global_var_a248.2403 to i32)
}

define void @_ZN11CDataStream5writeEPKci(i32 %this, i8* %pch, i32 %nSize) local_unnamed_addr {
dec_label_pc_478:
  %edx.global-to-local = alloca i32, align 4
  %v0_478 = load i32, i32* %edx.global-to-local, align 4
  %v1_478 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_478 = xor i32 %v1_478, %v0_478
  %v3_478 = icmp eq i32 %v2_478, 0
  store i32 %v2_478, i32* %edx.global-to-local, align 4
  %v1_47f = icmp eq i1 %v3_478, false
  br i1 %v1_47f, label %dec_label_pc_485, label %dec_label_pc_481

dec_label_pc_481:                                 ; preds = %dec_label_pc_478
  ret void

dec_label_pc_485:                                 ; preds = %dec_label_pc_478
  ret void
}

define i16 @_Z13GetListenPortv() local_unnamed_addr {
dec_label_pc_490:
  %v0_4a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4a3 = trunc i32 %v0_4a3 to i16
  ret i16 %v2_4a3
}

define void @auto_buffer(i32 %this) local_unnamed_addr {
dec_label_pc_4ac:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_4ac = load i32, i32* %eax.global-to-local, align 8
  %v1_4ac = trunc i32 %v0_4ac to i8
  %v2_4ac = load i1, i1* %cf.global-to-local, align 1
  %v3_4ac = zext i1 %v2_4ac to i32
  %v4_4ac = add i32 %v0_4ac, 207
  %v5_4ac = add i32 %v4_4ac, %v3_4ac
  %v17_4ac = icmp ult i8 %v1_4ac, 49
  %v18_4ac = or i1 %v2_4ac, %v17_4ac
  store i1 %v18_4ac, i1* %cf.global-to-local, align 1
  %v31_4ac = and i32 %v5_4ac, 255
  %v33_4ac = and i32 %v0_4ac, -256
  %v34_4ac = or i32 %v31_4ac, %v33_4ac
  store i32 %v34_4ac, i32* %eax.global-to-local, align 8
  ret void

; uselistorder directives
  uselistorder i1 %v2_4ac, { 1, 0 }
  uselistorder i32 %v0_4ac, { 1, 0, 2 }
}

define i32 @function_4ed(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4ed:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_4ed = load i32, i32* %ecx.global-to-local, align 4
  %v1_4ed = add i32 %v0_4ed, 609520624
  %v2_4ed = inttoptr i32 %v1_4ed to i32*
  %v3_4ed = load i32, i32* %v2_4ed, align 4
  %v4_4ed = add i32 %v3_4ed, -1
  store i32 %v4_4ed, i32* %v2_4ed, align 4
  %v0_4f3 = load i32, i32* %eax.global-to-local, align 8
  %v2_4f3 = load i1, i1* %cf.global-to-local, align 1
  %v3_4f3 = zext i1 %v2_4f3 to i32
  %v4_4f3 = add i32 %v0_4f3, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_65.2404 to i8) to i32))
  %v5_4f3 = add i32 %v4_4f3, %v3_4f3
  %v31_4f3 = urem i32 %v5_4f3, 256
  %v33_4f3 = and i32 %v0_4f3, -256
  %v34_4f3 = or i32 %v31_4f3, %v33_4f3
  store i32 %v34_4f3, i32* %eax.global-to-local, align 8
  %v0_4f5 = load i32, i32* %edx.global-to-local, align 4
  %v1_4f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4f5 = xor i32 %v1_4f5, %v0_4f5
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_4f5 = icmp eq i32 %v2_4f5, 0
  store i32 %v2_4f5, i32* %edx.global-to-local, align 4
  %v1_4fb = icmp eq i1 %v3_4f5, false
  br i1 %v1_4fb, label %dec_label_pc_50d, label %dec_label_pc_4fd

dec_label_pc_4fd:                                 ; preds = %dec_label_pc_4ed
  %v0_509 = load i32, i32* @esp, align 4
  %v5_509 = icmp ugt i32 %v0_509, -45
  store i1 %v5_509, i1* %cf.global-to-local, align 1
  ret i32 %v34_4f3

dec_label_pc_50d:                                 ; preds = %dec_label_pc_4ed
  ret i32 %v34_4f3

; uselistorder directives
  uselistorder i32 %v0_4f3, { 1, 0 }
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv(i32 %this) local_unnamed_addr {
dec_label_pc_514:
  ret void
}

define void @_ZN5CNode7CleanupEv(i32 %this) local_unnamed_addr {
dec_label_pc_530:
  ret void
}

define void @"~auto_buffer"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_548:
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v2_548 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_548 = load i32, i32* %eax.global-to-local, align 8
  %v4_548 = trunc i32 %v3_548 to i8
  %v5_548 = add i8 %v4_548, %v2_548
  %v15_548 = icmp eq i8 %v5_548, 0
  store i1 %v15_548, i1* %zf.global-to-local, align 1
  %v21_548 = inttoptr i32 %v3_548 to i8*
  store i8 %v5_548, i8* %v21_548, align 1
  %v0_54a = load i1, i1* %zf.global-to-local, align 1
  %v1_54a = icmp eq i1 %v0_54a, false
  br i1 %v1_54a, label %dec_label_pc_550, label %dec_label_pc_54c

dec_label_pc_54c:                                 ; preds = %dec_label_pc_548
  %v0_54c = load i32, i32* @esp, align 4
  %v10_54c = icmp eq i32 %v0_54c, -28
  store i1 %v10_54c, i1* %zf.global-to-local, align 1
  ret void

dec_label_pc_550:                                 ; preds = %dec_label_pc_548
  ret void
}

define void @_ZN5CNode9copyStatsER10CNodeStats(i32 %this, i32 %stats) local_unnamed_addr {
dec_label_pc_560:
  ret void
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_(i32 %this, i32 %x) local_unnamed_addr {
dec_label_pc_57c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_57c = load i32, i32* %ebx.global-to-local, align 4
  %v0_57d = load i32, i32* %eax.global-to-local, align 8
  %v2_57d = add i32 %v0_57d, 137
  %v16_57d = and i32 %v2_57d, 255
  %v18_57d = and i32 %v0_57d, -256
  %v19_57d = or i32 %v16_57d, %v18_57d
  store i32 %v19_57d, i32* %eax.global-to-local, align 8
  %v1_580 = add i32 %v0_57c, 356
  %v2_580 = inttoptr i32 %v1_580 to i32*
  %v3_580 = load i32, i32* %v2_580, align 4
  store i32 %v3_580, i32* %eax.global-to-local, align 8
  %v0_586 = load i32, i32* %edx.global-to-local, align 4
  %v1_586 = load i32, i32* %esi.global-to-local, align 4
  %v2_586 = add i32 %v1_586, 4
  %v3_586 = inttoptr i32 %v2_586 to i32*
  store i32 %v0_586, i32* %v3_586, align 4
  %v0_589 = load i32, i32* %ebx.global-to-local, align 4
  %v1_589 = add i32 %v0_589, 360
  %v2_589 = inttoptr i32 %v1_589 to i32*
  %v3_589 = load i32, i32* %v2_589, align 4
  store i32 %v3_589, i32* %edx.global-to-local, align 4
  %v0_58f = load i32, i32* %eax.global-to-local, align 8
  %v1_58f = load i32, i32* %esi.global-to-local, align 4
  %v2_58f = add i32 %v1_58f, 8
  %v3_58f = inttoptr i32 %v2_58f to i32*
  store i32 %v0_58f, i32* %v3_58f, align 4
  %v0_592 = load i32, i32* %ebx.global-to-local, align 4
  %v1_592 = add i32 %v0_592, 364
  %v2_592 = inttoptr i32 %v1_592 to i32*
  %v3_592 = load i32, i32* %v2_592, align 4
  store i32 %v3_592, i32* %eax.global-to-local, align 8
  %v0_598 = load i32, i32* %edx.global-to-local, align 4
  %v1_598 = load i32, i32* %esi.global-to-local, align 4
  %v2_598 = add i32 %v1_598, 12
  %v3_598 = inttoptr i32 %v2_598 to i32*
  store i32 %v0_598, i32* %v3_598, align 4
  %v0_59b = load i32, i32* %ebx.global-to-local, align 4
  %v1_59b = add i32 %v0_59b, 368
  %v2_59b = inttoptr i32 %v1_59b to i32*
  %v3_59b = load i32, i32* %v2_59b, align 4
  store i32 %v3_59b, i32* %edx.global-to-local, align 4
  %v0_5a1 = load i32, i32* %eax.global-to-local, align 8
  %v1_5a1 = load i32, i32* %esi.global-to-local, align 4
  %v2_5a1 = add i32 %v1_5a1, 16
  %v3_5a1 = inttoptr i32 %v2_5a1 to i32*
  store i32 %v0_5a1, i32* %v3_5a1, align 4
  %v0_5a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5a4 = add i32 %v0_5a4, 380
  %v2_5a4 = inttoptr i32 %v1_5a4 to i32*
  %v3_5a4 = load i32, i32* %v2_5a4, align 4
  store i32 %v3_5a4, i32* %eax.global-to-local, align 8
  %v0_5aa = load i32, i32* %edx.global-to-local, align 4
  %v1_5aa = load i32, i32* %esi.global-to-local, align 4
  %v2_5aa = add i32 %v1_5aa, 20
  %v3_5aa = inttoptr i32 %v2_5aa to i32*
  store i32 %v0_5aa, i32* %v3_5aa, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_57d, { 1, 0 }
}

define void @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE(i16 %arg0, i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5af:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v2_5af = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v14_5af = load i32, i32* %ecx.global-to-local, align 4
  %v15_5af = inttoptr i32 %v14_5af to i8*
  store i8 %v2_5af, i8* %v15_5af, align 1
  %v0_5b2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5b2 = add i32 %v0_5b2, -2087905210
  %v2_5b2 = inttoptr i32 %v1_5b2 to i8*
  %v3_5b2 = load i8, i8* %v2_5b2, align 1
  %v5_5b2 = trunc i32 %v0_5b2 to i8
  %v6_5b2 = add i8 %v3_5b2, %v5_5b2
  store i8 %v6_5b2, i8* %v2_5b2, align 1
  %v2_5b8 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_5b8 = zext i8 %v2_5b8 to i32
  %v4_5b8 = load i32, i32* %eax.global-to-local, align 8
  %v5_5b8 = and i32 %v4_5b8, -256
  %v6_5b8 = or i32 %v5_5b8, %v3_5b8
  store i32 %v6_5b8, i32* %eax.global-to-local, align 8
  %v7_5b8 = load i32, i32* %esi.global-to-local, align 4
  %v8_5b8 = load i1, i1* %df.global-to-local, align 1
  %v9_5b8 = select i1 %v8_5b8, i32 -1, i32 ptrtoint (i1* @global_var_1.2399 to i32)
  %v10_5b8 = add i32 %v9_5b8, %v7_5b8
  store i32 %v10_5b8, i32* %esi.global-to-local, align 4
  %v1_5b9 = inttoptr i32 %v6_5b8 to i32*
  %v2_5b9 = load i32, i32* %v1_5b9, align 4
  %v4_5b9 = add i32 %v2_5b9, %v6_5b8
  store i32 %v4_5b9, i32* %v1_5b9, align 4
  %v0_5bb = load i32, i32* %ecx.global-to-local, align 4
  %v1_5bb = add i32 %v0_5bb, 1149836374
  %v2_5bb = inttoptr i32 %v1_5bb to i8*
  %v3_5bb = load i8, i8* %v2_5bb, align 1
  %v5_5bb = trunc i32 %v0_5bb to i8
  %v6_5bb = add i8 %v3_5bb, %v5_5bb
  store i8 %v6_5bb, i8* %v2_5bb, align 1
  %v0_5c3 = load i32, i32* %esi.global-to-local, align 4
  %v1_5c3 = add i32 %v0_5c3, 32
  store i32 %v1_5c3, i32* %eax.global-to-local, align 8
  ret void
}

define void @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE(i16 %arg0, i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_637:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_637 = load i32, i32* %eax.global-to-local, align 8
  %v1_637 = trunc i32 %v0_637 to i8
  %v2_637 = load i1, i1* %cf.global-to-local, align 1
  %v3_637 = zext i1 %v2_637 to i8
  %v4_637 = add i8 %v3_637, %v1_637
  %v13_637 = icmp eq i8 %v4_637, 0
  store i1 %v13_637, i1* %zf.global-to-local, align 1
  %v19_637 = icmp ule i8 %v4_637, %v1_637
  %v21_637 = icmp eq i1 %v2_637, %v19_637
  store i1 %v21_637, i1* %cf.global-to-local, align 1
  %v22_637 = zext i8 %v4_637 to i32
  %v24_637 = and i32 %v0_637, -256
  %v25_637 = or i32 %v22_637, %v24_637
  store i32 %v25_637, i32* %eax.global-to-local, align 8
  %v1_639 = inttoptr i32 %v25_637 to i8*
  %v2_639 = load i8, i8* %v1_639, align 1
  %v5_639 = add i8 %v2_639, %v4_637
  %v10_639 = icmp ult i8 %v5_639, %v2_639
  store i1 %v10_639, i1* %cf.global-to-local, align 1
  %v15_639 = icmp eq i8 %v5_639, 0
  store i1 %v15_639, i1* %zf.global-to-local, align 1
  store i8 %v5_639, i8* %v1_639, align 1
  %v0_63b = load i1, i1* %zf.global-to-local, align 1
  %v1_63b = icmp eq i1 %v0_63b, false
  br i1 %v1_63b, label %dec_label_pc_643, label %dec_label_pc_63d

dec_label_pc_63d:                                 ; preds = %dec_label_pc_637
  %v0_63d = load i32, i32* @esp, align 4
  %v5_63d = icmp ugt i32 %v0_63d, -37
  store i1 %v5_63d, i1* %cf.global-to-local, align 1
  %v10_63d = icmp eq i32 %v0_63d, -36
  store i1 %v10_63d, i1* %zf.global-to-local, align 1
  ret void

dec_label_pc_643:                                 ; preds = %dec_label_pc_637
  ret void

; uselistorder directives
  uselistorder i8 %v2_639, { 1, 0 }
  uselistorder i8 %v4_637, { 0, 2, 1, 3 }
  uselistorder i8 %v1_637, { 1, 0 }
}

define void @_ZN11CNetMessage8readDataEPKcj(i32 %this, i8* %pch, i32 %nBytes) local_unnamed_addr {
dec_label_pc_650:
  ret void
}

define i32 @function_691(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_691:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_691 = load i32, i32* %ecx.global-to-local, align 4
  %v1_691 = add i32 %v0_691, 1483932144
  %v2_691 = inttoptr i32 %v1_691 to i32*
  %v3_691 = load i32, i32* %v2_691, align 4
  %v4_691 = add i32 %v3_691, -1
  store i32 %v4_691, i32* %v2_691, align 4
  %v1_69b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_69b = icmp eq i32 %v1_69b, %arg1
  %v1_6a2 = icmp eq i1 %v3_69b, false
  br i1 %v1_6a2, label %dec_label_pc_6aa, label %dec_label_pc_6a4

dec_label_pc_6a4:                                 ; preds = %dec_label_pc_691
  %v0_6a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6a9

dec_label_pc_6aa:                                 ; preds = %dec_label_pc_691
  %v1_6a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_6a9
}

define void @MapPort(i1 %fUseUPnP) local_unnamed_addr {
dec_label_pc_6b0:
  ret void
}

define void @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE(i16 %arg0, i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6bf:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_6bf = load i8*, i8** @global_var_a32c.2407, align 4
  %v1_6bf = ptrtoint i8* %v0_6bf to i32
  store i32 %v1_6bf, i32* @eax, align 8
  %v4_6c4 = trunc i16 %arg0 to i8
  %v11_6c4 = icmp eq i8 %v4_6c4, 0
  br i1 %v11_6c4, label %bb, label %dec_label_pc_6db

bb:                                               ; preds = %dec_label_pc_6bf
  %v0_6d1 = load i32, i32* %edi.global-to-local, align 4
  %v0_6cd = load i32, i32* %esi.global-to-local, align 4
  %v0_6c9 = load i32, i32* %ebx.global-to-local, align 4
  %v4_6d5 = call i32 @function_800(i32 %v0_6c9, i32 %v0_6cd, i32 %v0_6d1)
  store i32 %v4_6d5, i32* @eax, align 8
  br label %dec_label_pc_6db

dec_label_pc_6db:                                 ; preds = %bb, %dec_label_pc_6bf
  %v0_6db = phi i32 [ %v4_6d5, %bb ], [ %v1_6bf, %dec_label_pc_6bf ]
  %v1_6db = icmp eq i32 %v0_6db, 0
  br i1 %v1_6db, label %bb106, label %dec_label_pc_6df

bb106:                                            ; preds = %dec_label_pc_6db
  %v1_6dd = call i32 @function_70e()
  br label %dec_label_pc_6df

dec_label_pc_6df:                                 ; preds = %bb106, %dec_label_pc_6db
  ret void
}

define i32 @function_6e6() local_unnamed_addr {
dec_label_pc_6e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_6e6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6e6
}

define i32 @function_70e() local_unnamed_addr {
dec_label_pc_70e:
  %v2_70e = load i32, i32* @eax, align 8
  ret i32 %v2_70e
}

define i32 @function_729() local_unnamed_addr {
dec_label_pc_729:
  %eax.global-to-local = alloca i32, align 4
  %v0_729 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_729
}

define i32 @function_7c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_7c6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_7e3() local_unnamed_addr {
dec_label_pc_7e3:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_7e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7e7 = xor i32 %v1_7e7, %tmp5
  %v3_7e7 = icmp eq i32 %v2_7e7, 0
  store i32 %v2_7e7, i32* @eax, align 8
  %v1_7ee = icmp eq i1 %v3_7e7, false
  br i1 %v1_7ee, label %bb, label %dec_label_pc_7f0

bb:                                               ; preds = %dec_label_pc_7e3
  %v2_7ee = call i32 @function_84d()
  br label %dec_label_pc_7f0

dec_label_pc_7f0:                                 ; preds = %bb, %dec_label_pc_7e3
  %v0_7ff = phi i32 [ %v2_7ee, %bb ], [ %v2_7e7, %dec_label_pc_7e3 ]
  ret i32 %v0_7ff
}

define i32 @function_800(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_800:
  %v0_800 = load i32, i32* @eax, align 8
  %v1_800 = icmp eq i32 %v0_800, 0
  br i1 %v1_800, label %bb, label %dec_label_pc_804

bb:                                               ; preds = %dec_label_pc_800
  %v1_802 = call i32 @function_7e3()
  br label %dec_label_pc_804

dec_label_pc_804:                                 ; preds = %bb, %dec_label_pc_800
  %v3_804 = phi i32 [ %v1_802, %bb ], [ %v0_800, %dec_label_pc_800 ]
  ret i32 %v3_804
}

define i32 @function_80b() local_unnamed_addr {
dec_label_pc_80b:
  %eax.global-to-local = alloca i32, align 4
  %v0_80b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80b
}

define i32 @function_832() local_unnamed_addr {
dec_label_pc_832:
  %eax.global-to-local = alloca i32, align 4
  %v0_834 = load i32, i32* %eax.global-to-local, align 8
  %v1_834 = add i32 %v0_834, ptrtoint (i8** @global_var_a32c.2407 to i32)
  %v12_834 = trunc i32 %v1_834 to i8
  store i32 %v1_834, i32* %eax.global-to-local, align 8
  %v1_839 = inttoptr i32 %v1_834 to i8*
  %v2_839 = load i8, i8* %v1_839, align 1
  %v5_839 = add i8 %v2_839, %v12_834
  store i8 %v5_839, i8* %v1_839, align 1
  %v0_83b = load i32, i32* %eax.global-to-local, align 8
  %v1_83b = inttoptr i32 %v0_83b to i8*
  %v2_83b = load i8, i8* %v1_83b, align 1
  %v4_83b = trunc i32 %v0_83b to i8
  %v5_83b = add i8 %v2_83b, %v4_83b
  store i8 %v5_83b, i8* %v1_83b, align 1
  %v0_83d = call i32 @function_7e3()
  store i32 %v0_83d, i32* %eax.global-to-local, align 8
  ret i32 %v0_83d

; uselistorder directives
  uselistorder i32 ()* @function_7e3, { 1, 0 }
  uselistorder i8** @global_var_a32c.2407, { 1, 0 }
}

define i32 @function_840() local_unnamed_addr {
dec_label_pc_840:
  %v2_840 = load i32, i32* @eax, align 8
  %v1_848 = call i32 @function_7c6(i32 %v2_840)
  ret i32 %v1_848
}

define i32 @function_84d() local_unnamed_addr {
dec_label_pc_84d:
  %v1_84d = load i32, i32* @eax, align 8
  ret i32 %v1_84d
}

define i32 @function_856() local_unnamed_addr {
dec_label_pc_856:
  %eax.global-to-local = alloca i32, align 4
  %v0_856 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_856
}

define i32 @function_857() local_unnamed_addr {
dec_label_pc_857:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_862() local_unnamed_addr {
dec_label_pc_862:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_871() local_unnamed_addr {
dec_label_pc_871:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_871 = load i32, i32* %ecx.global-to-local, align 4
  %v1_871 = add i32 %v0_871, 71798211
  %v2_871 = inttoptr i32 %v1_871 to i32*
  %v3_871 = load i32, i32* %v2_871, align 4
  %v4_871 = add i32 %v3_871, -1
  store i32 %v4_871, i32* %v2_871, align 4
  %v0_877 = load i32, i32* %eax.global-to-local, align 8
  %v1_87a = inttoptr i32 %v0_877 to i32*
  %v2_87a = call i32 @_ZN5boost6detail12shared_countD1Ev(i32* %v1_87a)
  store i32 %v2_87a, i32* @eax, align 8
  %v0_87f = call i32 @function_862()
  store i32 %v0_87f, i32* %eax.global-to-local, align 8
  ret i32 %v0_87f
}

define i32 @function_88d() local_unnamed_addr {
dec_label_pc_88d:
  %v0_88d = call i32 @function_862()
  ret i32 %v0_88d
}

define i32 @function_88f() local_unnamed_addr {
dec_label_pc_88f:
  %v0_891 = call i32 @function_862()
  ret i32 %v0_891
}

define i32 @function_89a() local_unnamed_addr {
dec_label_pc_89a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %v0_89a = load i32, i32* %ebx.global-to-local, align 4
  %v1_89a = add i32 %v0_89a, 605849859
  %v2_89a = inttoptr i32 %v1_89a to i32*
  %v3_89a = load i32, i32* %v2_89a, align 4
  %v4_89a = add i32 %v3_89a, -1
  store i32 %v4_89a, i32* %v2_89a, align 4
  %v0_8a8 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_8a8, i32* @ebx, align 4
  %v2_8aa = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_8aa, i32* %eax.global-to-local, align 8
  %v2_8b1 = call i32 @_ZN5boost6detail12shared_countD1Ev(i32* nonnull %stack_var_24)
  store i32 %v2_8b1, i32* @eax, align 8
  %v0_8b6 = call i32 @function_857()
  store i32 %v0_8b6, i32* %eax.global-to-local, align 8
  ret i32 %v0_8b6
}

define i32 @function_8b9() local_unnamed_addr {
dec_label_pc_8b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_8b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8b9
}

define i32 @function_8c0() local_unnamed_addr {
dec_label_pc_8c0:
  %v0_8c0 = call i32 @function_862()
  ret i32 %v0_8c0

; uselistorder directives
  uselistorder i32 ()* @function_862, { 3, 2, 1, 0 }
}

define i32 @_Z8FindNodeRK8CService(i32 %addr) local_unnamed_addr {
dec_label_pc_8d0:
  %stack_var_-50 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %v7_927 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-60, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v2_942 = ptrtoint i8** %stack_var_-50 to i32
  store i32 %v2_942, i32* @edx, align 4
  ret i32 %addr
}

define i32 @function_98b() local_unnamed_addr {
dec_label_pc_98b:
  %eax.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_98b = add i32 %tmp91, ptrtoint (i8** @global_var_9.2418 to i32)
  %v2_98b = inttoptr i32 %v1_98b to i8*
  %v3_98b = load i8, i8* %v2_98b, align 1
  %v4_98b = load i1, i1* %of.global-to-local, align 1
  %v5_98b = mul i8 %v3_98b, 8
  store i8 %v5_98b, i8* %v2_98b, align 1
  store i1 %v4_98b, i1* %of.global-to-local, align 1
  %v0_98f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_98f
}

define i32 @function_995() local_unnamed_addr {
dec_label_pc_995:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_997 = load i32, i32* @ebp, align 4
  %v1_99a = inttoptr i32 %v0_997 to i32*
  %v2_99a = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_99a)
  %v1_9a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_9a5 = icmp eq i32 %v1_9a5, %tmp5
  %v1_9ac = icmp eq i1 %v3_9a5, false
  br i1 %v1_9ac, label %dec_label_pc_9c2, label %dec_label_pc_9ae

dec_label_pc_9ae:                                 ; preds = %dec_label_pc_995
  ret i32 0

dec_label_pc_9c2:                                 ; preds = %dec_label_pc_995
  ret i32 0
}

define i32 @function_9c8() local_unnamed_addr {
dec_label_pc_9c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_9c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9c8
}

define i32 @_Z8FindNodeSs(i32 %addrName) local_unnamed_addr {
dec_label_pc_9e0:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_9e7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_9eb = load i32, i32* %esi.global-to-local, align 4
  %v0_9ef = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_9f5 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %addrName, i32* %ebp.global-to-local, align 4
  %v7_a34 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 26482, i32* %ebx.global-to-local, align 4
  store i32 808594996, i32* %esi.global-to-local, align 4
  %v1_a49 = inttoptr i32 %addrName to i32*
  %v2_a49 = load i32, i32* %v1_a49, align 4
  store i32 %v2_a49, i32* %ebp.global-to-local, align 4
  %v1_a4c = add i32 %v2_a49, -12
  %v2_a4c = inttoptr i32 %v1_a4c to i32*
  %v3_a4c = load i32, i32* %v2_a4c, align 4
  br label %dec_label_pc_a58

dec_label_pc_a58:                                 ; preds = %dec_label_pc_a69, %dec_label_pc_9e0
  %v0_a69 = phi i32 [ %v1_a69, %dec_label_pc_a69 ], [ 26482, %dec_label_pc_9e0 ]
  %v1_a58 = inttoptr i32 %v0_a69 to i32*
  %v2_a58 = load i32, i32* %v1_a58, align 4
  store i32 %v2_a58, i32* %edi.global-to-local, align 4
  %v1_a5e = add i32 %v2_a58, 428
  %v2_a5e = inttoptr i32 %v1_a5e to i32*
  %v3_a5e = load i32, i32* %v2_a5e, align 4
  %v1_a64 = add i32 %v3_a5e, -12
  %v2_a64 = inttoptr i32 %v1_a64 to i32*
  %v3_a64 = load i32, i32* %v2_a64, align 4
  %v15_a64 = icmp eq i32 %v3_a64, %v3_a4c
  br i1 %v15_a64, label %dec_label_pc_aa8, label %dec_label_pc_a69

dec_label_pc_a69:                                 ; preds = %dec_label_pc_a58
  %v1_a69 = add i32 %v0_a69, 4
  store i32 %v1_a69, i32* @ebx, align 4
  %v12_a6c = icmp eq i32 %v0_a69, 808594992
  %v1_a6e = icmp eq i1 %v12_a6c, false
  br i1 %v1_a6e, label %dec_label_pc_a58, label %dec_label_pc_a70

dec_label_pc_a70:                                 ; preds = %dec_label_pc_a69
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_a79 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_-40)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_a8d

bb:                                               ; preds = %dec_label_pc_a70
  br label %dec_label_pc_a8d

dec_label_pc_a8d:                                 ; preds = %bb, %dec_label_pc_a70
  store i32 %v0_9e7, i32* %ebx.global-to-local, align 4
  store i32 %v0_9eb, i32* %esi.global-to-local, align 4
  store i32 %v0_9ef, i32* %edi.global-to-local, align 4
  store i32 %v0_9f5, i32* %ebp.global-to-local, align 4
  ret i32 0

dec_label_pc_aa8:                                 ; preds = %dec_label_pc_a58
  ret i32 %v3_a5e

; uselistorder directives
  uselistorder i32 %v1_a69, { 1, 0 }
}

define i32 @function_abb() local_unnamed_addr {
dec_label_pc_abb:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_abb = add i32 %tmp91, -2085456704
  %v2_abb = inttoptr i32 %v1_abb to i32*
  %v3_abb = load i32, i32* %v2_abb, align 4
  %v4_abb = add i32 %v3_abb, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_abb, i32* %v2_abb, align 4
  %v0_ac1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_ac1
}

define i32 @function_ac2() local_unnamed_addr {
dec_label_pc_ac2:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_ac2 = load i32, i32* %eax.global-to-local, align 8
  %v2_ac2 = add i32 %v0_ac2, 57
  %v16_ac2 = and i32 %v2_ac2, 255
  %v18_ac2 = and i32 %v0_ac2, -256
  %v19_ac2 = or i32 %v16_ac2, %v18_ac2
  store i32 %v19_ac2, i32* %eax.global-to-local, align 8
  %v1_ac4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_ac4 = add i32 %v1_ac4, -111
  %v3_ac4 = inttoptr i32 %v2_ac4 to i16*
  %v4_ac4 = load i16, i16* %v3_ac4, align 2
  %v5_ac4 = sitofp i16 %v4_ac4 to x86_fp80
  %v6_ac4 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_ac4 = fdiv x86_fp80 %v6_ac4, %v5_ac4
  store x86_fp80 %v7_ac4, x86_fp80* %st0.global-to-local, align 4
  ret i32 %v19_ac2

; uselistorder directives
  uselistorder i32 %v0_ac2, { 1, 0 }
}

define i32 @function_ac9() local_unnamed_addr {
dec_label_pc_ac9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_acd() local_unnamed_addr {
dec_label_pc_acd:
  %eax.global-to-local = alloca i32, align 4
  %v0_acd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_acd
}

define i32 @_Z8FindNodeRK8CNetAddr(i32 %ip) local_unnamed_addr {
dec_label_pc_ad0:
  %stack_var_-56 = alloca i32, align 4
  %v7_b27 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-56, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  ret i32 %ip
}

define i32 @function_b7f() local_unnamed_addr {
dec_label_pc_b7f:
  %eax.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_b7f = add i32 %tmp91, ptrtoint (i8** @global_var_9.2418 to i32)
  %v2_b7f = inttoptr i32 %v1_b7f to i8*
  %v3_b7f = load i8, i8* %v2_b7f, align 1
  %v4_b7f = load i1, i1* %of.global-to-local, align 1
  %v5_b7f = mul i8 %v3_b7f, 8
  store i8 %v5_b7f, i8* %v2_b7f, align 1
  store i1 %v4_b7f, i1* %of.global-to-local, align 1
  %v0_b83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b83

; uselistorder directives
  uselistorder i32 ptrtoint (i8** @global_var_9.2418 to i32), { 1, 0 }
}

define i32 @function_b89() local_unnamed_addr {
dec_label_pc_b89:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_b8b = load i32, i32* @ebp, align 4
  %v1_b8e = inttoptr i32 %v0_b8b to i32*
  %v2_b8e = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_b8e)
  %v1_b99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b99 = icmp eq i32 %v1_b99, %tmp5
  %v1_ba0 = icmp eq i1 %v3_b99, false
  br i1 %v1_ba0, label %dec_label_pc_bb6, label %dec_label_pc_ba2

dec_label_pc_ba2:                                 ; preds = %dec_label_pc_b89
  ret i32 0

dec_label_pc_bb6:                                 ; preds = %dec_label_pc_b89
  store i32 0, i32* @ebx, align 4
  %v0_bbd = load i32, i32* @ebp, align 4
  %v1_bc0 = inttoptr i32 %v0_bbd to i32*
  %v2_bc0 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_bc0)
  ret i32 %v2_bc0
}

define void @_Z25AddressCurrentlyConnectedRK8CService(i32 %addr) local_unnamed_addr {
dec_label_pc_bd0:
  ret void
}

define i32 @function_c45(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c45:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_c45 = load i32, i32* %ecx.global-to-local, align 4
  %v1_c45 = add i32 %v0_c45, -1830280164
  %v2_c45 = inttoptr i32 %v1_c45 to i32*
  %v3_c45 = load i32, i32* %v2_c45, align 4
  %v4_c45 = sub i32 %v3_c45, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_c45, i32* %v2_c45, align 4
  %v0_c4b = load i32, i32* %eax.global-to-local, align 8
  %v1_c4b = trunc i32 %v0_c4b to i8
  %v2_c4b = load i1, i1* %cf.global-to-local, align 1
  %v3_c4b = zext i1 %v2_c4b to i32
  %v4_c4b = sub i32 %v0_c4b, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_c4b = add i32 %v4_c4b, %v3_c4b
  %v17_c4b = icmp eq i8 %v1_c4b, 0
  %v18_c4b = or i1 %v2_c4b, %v17_c4b
  store i1 %v18_c4b, i1* %cf.global-to-local, align 1
  %v31_c4b = and i32 %v5_c4b, 255
  %v33_c4b = and i32 %v0_c4b, -256
  %v34_c4b = or i32 %v31_c4b, %v33_c4b
  store i32 %v34_c4b, i32* %eax.global-to-local, align 8
  %v0_c4d = load i32, i32* %ebx.global-to-local, align 4
  %v1_c4d = add i32 %v0_c4d, 1698440260
  %v2_c4d = inttoptr i32 %v1_c4d to i8*
  %v3_c4d = load i8, i8* %v2_c4d, align 1
  %v4_c4d = load i32, i32* %ecx.global-to-local, align 4
  %v5_c4d = trunc i32 %v4_c4d to i8
  %v6_c4d = add i8 %v5_c4d, %v3_c4d
  store i8 %v6_c4d, i8* %v2_c4d, align 1
  %v0_c53 = load i32, i32* %eax.global-to-local, align 8
  %v1_c53 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c53 = xor i32 %v1_c53, %v0_c53
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_c53 = icmp eq i32 %v2_c53, 0
  store i32 %v2_c53, i32* %eax.global-to-local, align 8
  %v1_c59 = icmp eq i1 %v3_c53, false
  br i1 %v1_c59, label %dec_label_pc_c61, label %dec_label_pc_c5b

dec_label_pc_c5b:                                 ; preds = %dec_label_pc_c45
  %v0_c5b = load i32, i32* @esp, align 4
  %v5_c5b = icmp ugt i32 %v0_c5b, -69
  store i1 %v5_c5b, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_c53

dec_label_pc_c61:                                 ; preds = %dec_label_pc_c45
  ret i32 %v2_c53

; uselistorder directives
  uselistorder i32 %v2_c53, { 1, 0, 2, 3 }
  uselistorder i1 %v2_c4b, { 1, 0 }
  uselistorder i32 %v0_c4b, { 1, 0, 2 }
}

define i1 @_Z11IsReachableRK8CNetAddr(i32 %addr) local_unnamed_addr {
dec_label_pc_c80:
  %stack_var_-24 = alloca i32, align 4
  %v8_cc4 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-24, i32 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %tmp113 = urem i32 %v8_cc4, 2
  %v4_cc9 = icmp ne i32 %tmp113, 0
  ret i1 %v4_cc9
}

define i32 @function_cd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_cd0 = load i32, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_cd9 = load i32, i32* %edx.global-to-local, align 4
  %v3_cd9 = add i32 %v2_cd0, 15
  %v4_cd9 = add i32 %v3_cd9, %v0_cd9
  %v5_cd9 = inttoptr i32 %v4_cd9 to i8*
  %v6_cd9 = load i8, i8* %v5_cd9, align 1
  %v8_cd9 = udiv i32 %v0_cd9, 256
  %v9_cd9 = trunc i32 %v8_cd9 to i8
  %v10_cd9 = add i8 %v9_cd9, %v6_cd9
  %v15_cd9 = icmp ult i8 %v10_cd9, %v6_cd9
  store i1 %v15_cd9, i1* %cf.global-to-local, align 1
  store i8 %v10_cd9, i8* %v5_cd9, align 1
  %v0_cdd = load i32, i32* %edx.global-to-local, align 4
  %v1_cdd = and i32 %v0_cdd, -65281
  %v2_cdd = or i32 %v1_cdd, 45056
  store i32 %v2_cdd, i32* %edx.global-to-local, align 4
  %v0_cdf = load i32, i32* %ebx.global-to-local, align 4
  %v1_cdf = add i32 %v0_cdf, -159186944
  %v2_cdf = inttoptr i32 %v1_cdf to i8*
  %v3_cdf = load i8, i8* %v2_cdf, align 1
  %v4_cdf = load i32, i32* %eax.global-to-local, align 8
  %v5_cdf = udiv i32 %v4_cdf, 256
  %v6_cdf = trunc i32 %v5_cdf to i8
  %v7_cdf = load i1, i1* %cf.global-to-local, align 1
  %v8_cdf = zext i1 %v7_cdf to i8
  %v9_cdf = add i8 %v6_cdf, %v3_cdf
  %v10_cdf = add i8 %v9_cdf, %v8_cdf
  store i8 %v10_cdf, i8* %v2_cdf, align 1
  %v0_ce5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_ce5 = add i32 %v0_ce5, -219667428
  %v2_ce5 = inttoptr i32 %v1_ce5 to i32*
  %v3_ce5 = load i32, i32* %v2_ce5, align 4
  %v5_ce5 = add i32 %v3_ce5, %v0_ce5
  %v10_ce5 = icmp ult i32 %v5_ce5, %v3_ce5
  store i32 %v5_ce5, i32* %v2_ce5, align 4
  %v0_ceb = load i32, i32* %eax.global-to-local, align 8
  %v3_ceb = load i32, i32* %ecx.global-to-local, align 4
  %v5_ceb = zext i1 %v10_ce5 to i32
  %v6_ceb = sub i32 %v0_ceb, %v3_ceb
  %v7_ceb = add i32 %v6_ceb, %v5_ceb
  %v17_ceb = sub i32 %v6_ceb, %v5_ceb
  %v18_ceb = icmp ult i32 %v0_ceb, %v17_ceb
  %v19_ceb = icmp ne i32 %v3_ceb, -1
  %v20_ceb = or i1 %v19_ceb, %v18_ceb
  %v21_ceb = icmp ult i32 %v0_ceb, %v3_ceb
  %v22_ceb = select i1 %v10_ce5, i1 %v20_ceb, i1 %v21_ceb
  store i1 %v22_ceb, i1* %cf.global-to-local, align 1
  store i32 %v7_ceb, i32* %eax.global-to-local, align 8
  %v1_ced = add i32 %v3_ceb, 609520624
  %v2_ced = inttoptr i32 %v1_ced to i8*
  %v3_ced = load i8, i8* %v2_ced, align 1
  %v5_ced = trunc i32 %v3_ceb to i8
  %v6_ced = add i8 %v3_ced, %v5_ced
  store i8 %v6_ced, i8* %v2_ced, align 1
  %v0_cf3 = load i32, i32* %eax.global-to-local, align 8
  %v2_cf3 = sub i32 %v0_cf3, zext (i8 ptrtoint (i8* @global_var_65.2404 to i8) to i32)
  %v16_cf3 = urem i32 %v2_cf3, 256
  %v18_cf3 = and i32 %v0_cf3, -256
  %v19_cf3 = or i32 %v16_cf3, %v18_cf3
  store i32 %v19_cf3, i32* %eax.global-to-local, align 8
  %v0_cf5 = load i32, i32* %edx.global-to-local, align 4
  %v1_cf5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_cf5 = xor i32 %v1_cf5, %v0_cf5
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_cf5 = icmp eq i32 %v2_cf5, 0
  store i32 %v2_cf5, i32* %edx.global-to-local, align 4
  %v1_cfb = icmp eq i1 %v3_cf5, false
  br i1 %v1_cfb, label %dec_label_pc_d03, label %dec_label_pc_cfd

dec_label_pc_cfd:                                 ; preds = %dec_label_pc_cd0
  %v0_cfd = load i32, i32* @esp, align 4
  %v5_cfd = icmp ugt i32 %v0_cfd, -53
  store i1 %v5_cfd, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v19_cf3

dec_label_pc_d03:                                 ; preds = %dec_label_pc_cd0
  ret i32 %v19_cf3

; uselistorder directives
  uselistorder i32 %v0_cf3, { 1, 0 }
  uselistorder i32 %v6_ceb, { 1, 0 }
  uselistorder i32 %v5_ceb, { 1, 0 }
  uselistorder i32 %v3_ceb, { 1, 0, 3, 2, 4 }
  uselistorder i1 %v10_ce5, { 1, 0 }
  uselistorder i32 %v3_ce5, { 1, 0 }
  uselistorder i8 %v6_cd9, { 1, 0 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_65.2404 to i8) to i32), { 1, 0 }
}

define i1 @_Z9IsLimited7Network(i32 %net) local_unnamed_addr {
dec_label_pc_d20:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_d23 = load i32, i32* @esi, align 4
  store i32 %net, i32* %esi.global-to-local, align 4
  %v8_d6a = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-24, i32 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v0_d6f = load i32, i32* @esi, align 4
  %v1_d6f = add i32 %v0_d6f, ptrtoint ([4 x i8]* @global_var_a310.2423 to i32)
  %v2_d6f = inttoptr i32 %v1_d6f to i8*
  %v3_d6f = load i8, i8* %v2_d6f, align 1
  %v4_d6f = zext i8 %v3_d6f to i32
  store i32 %v4_d6f, i32* %esi.global-to-local, align 4
  %v2_d79 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_-24)
  br i1 false, label %dec_label_pc_d99, label %dec_label_pc_d8d

dec_label_pc_d8d:                                 ; preds = %dec_label_pc_d20
  %v0_d89 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_d23, i32* %esi.global-to-local, align 4
  %tmp19 = urem i32 %v0_d89, 2
  %v1_d98 = icmp ne i32 %tmp19, 0
  ret i1 %v1_d98

dec_label_pc_d99:                                 ; preds = %dec_label_pc_d20
  ret i1 undef
}

define i32 @function_d9d() local_unnamed_addr {
dec_label_pc_d9d:
  %eax.global-to-local = alloca i32, align 4
  %v0_d9d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d9d
}

define i1 @_Z9IsLimitedRK8CNetAddr(i32 %addr) local_unnamed_addr {
dec_label_pc_da0:
  %tmp4 = urem i32 %addr, 2
  %tmp5 = icmp ne i32 %tmp4, 0
  ret i1 %tmp5
}

define i32 @function_dba() local_unnamed_addr {
dec_label_pc_dba:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_dba = load i32, i32* @ebx, align 4
  %v1_dba = add i32 %v0_dba, 1696343124
  %v2_dba = inttoptr i32 %v1_dba to i32*
  %v3_dba = load i32, i32* %v2_dba, align 4
  %v4_dba = add i32 %v3_dba, -1
  store i32 %v4_dba, i32* %v2_dba, align 4
  %v0_dc0 = load i32, i32* %edx.global-to-local, align 4
  %v1_dc0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_dc0 = xor i32 %v1_dc0, %v0_dc0
  %v3_dc0 = icmp eq i32 %v2_dc0, 0
  store i32 %v2_dc0, i32* %edx.global-to-local, align 4
  %v1_dc6 = icmp eq i1 %v3_dc0, false
  %v5_dcf = load i32, i32* %eax.global-to-local, align 8
  br i1 %v1_dc6, label %dec_label_pc_dd4, label %dec_label_pc_dc8

dec_label_pc_dc8:                                 ; preds = %dec_label_pc_dba
  %v1_dcf = call i1 @_Z9IsLimited7Network(i32 %v5_dcf)
  %v3_dcf = sext i1 %v1_dcf to i32
  store i32 %v3_dcf, i32* %eax.global-to-local, align 8
  ret i32 %v3_dcf

dec_label_pc_dd4:                                 ; preds = %dec_label_pc_dba
  ret i32 %v5_dcf

; uselistorder directives
  uselistorder i32 %v5_dcf, { 1, 0 }
}

define void @_Z10SetLimited7Networkb(i32 %net, i1 %fLimited) local_unnamed_addr {
dec_label_pc_de0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_de3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %net, i32* %ebx.global-to-local, align 4
  %v0_df7 = load i32, i32* %esi.global-to-local, align 4
  %v4_dfb = sext i1 %fLimited to i32
  store i32 %v4_dfb, i32* %esi.global-to-local, align 4
  %v0_dff = load i32, i32* %edi.global-to-local, align 4
  %v1_e03 = icmp eq i32 %net, 0
  br i1 %v1_e03, label %dec_label_pc_e4b, label %dec_label_pc_e07

dec_label_pc_e07:                                 ; preds = %dec_label_pc_de0
  %v2_e07 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_e07, i32* %edi.global-to-local, align 4
  %v8_e36 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-24, i32 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v0_e3b = load i32, i32* @esi, align 4
  %v1_e3d = trunc i32 %v0_e3b to i8
  %v3_e3d = add i32 %net, ptrtoint ([4 x i8]* @global_var_a310.2423 to i32)
  %v4_e3d = inttoptr i32 %v3_e3d to i8*
  store i8 %v1_e3d, i8* %v4_e3d, align 1
  %v2_e46 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_-24)
  br label %dec_label_pc_e4b

dec_label_pc_e4b:                                 ; preds = %dec_label_pc_e07, %dec_label_pc_de0
  br i1 false, label %dec_label_pc_e68, label %dec_label_pc_e58

dec_label_pc_e58:                                 ; preds = %dec_label_pc_e4b
  store i32 %v0_de3, i32* %ebx.global-to-local, align 4
  store i32 %v0_df7, i32* %esi.global-to-local, align 4
  store i32 %v0_dff, i32* %edi.global-to-local, align 4
  ret void

dec_label_pc_e68:                                 ; preds = %dec_label_pc_e4b
  ret void
}

define void @_Z12SetReachable7Networkb(i32 %net, i1 %fFlag) local_unnamed_addr {
dec_label_pc_e70:
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-40 = alloca i32, align 4
  %v0_e73 = load i32, i32* @esi, align 4
  %v0_e7b = load i32, i32* @edi, align 4
  %v4_e7f = sext i1 %fFlag to i32
  store i32 %v4_e7f, i32* @edi, align 4
  %v0_e83 = load i32, i32* @ebx, align 4
  %v0_e8b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_e97 = load i32, i32* @ebp, align 4
  %v8_ec6 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-40, i32 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v0_ecb = load i32, i32* @edi, align 4
  store i32 %v0_ecb, i32* %eax.global-to-local, align 8
  %v0_ecd = load i32, i32* @esi, align 4
  %v10_ecd = icmp eq i32 %v0_ecd, 2
  store i1 %v10_ecd, i1* %zf.global-to-local, align 1
  %v1_ed0 = trunc i32 %v0_ecb to i8
  %v3_ed0 = add i32 %v0_ecd, ptrtoint ([8 x i8]* @global_var_a30c.2424 to i32)
  %v4_ed0 = inttoptr i32 %v3_ed0 to i8*
  store i8 %v1_ed0, i8* %v4_ed0, align 1
  %v0_ed6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_ed6, label %dec_label_pc_f08, label %dec_label_pc_ed8

dec_label_pc_ed8:                                 ; preds = %dec_label_pc_f0c, %dec_label_pc_f08, %dec_label_pc_e70
  %v2_edb = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_-40)
  store i32 %v0_e8b, i32* %eax.global-to-local, align 8
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  br i1 false, label %dec_label_pc_f15, label %dec_label_pc_eed

dec_label_pc_eed:                                 ; preds = %dec_label_pc_ed8
  store i32 %v0_e83, i32* @ebx, align 4
  store i32 %v0_e73, i32* @esi, align 4
  store i32 %v0_e7b, i32* @edi, align 4
  store i32 %v0_e97, i32* @ebp, align 4
  %v0_efd = load i32, i32* @esp, align 4
  %v10_efd = icmp eq i32 %v0_efd, -76
  store i1 %v10_efd, i1* %zf.global-to-local, align 1
  ret void

dec_label_pc_f08:                                 ; preds = %dec_label_pc_e70
  %v0_f08 = load i32, i32* %eax.global-to-local, align 8
  %v4_f08 = trunc i32 %v0_f08 to i8
  %v5_f08 = icmp eq i8 %v4_f08, 0
  store i1 %v5_f08, i1* %zf.global-to-local, align 1
  br i1 %v5_f08, label %dec_label_pc_ed8, label %dec_label_pc_f0c

dec_label_pc_f0c:                                 ; preds = %dec_label_pc_f08
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_a30d.2425, i32 0, i32 0), align 1
  br label %dec_label_pc_ed8

dec_label_pc_f15:                                 ; preds = %dec_label_pc_ed8
  ret void

; uselistorder directives
  uselistorder i32 %v0_ecd, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4 }
}

define i1 @_Z8GetLocalR8CServicePK8CNetAddr(i32 %addr, i32 %paddrPeer) local_unnamed_addr {
dec_label_pc_f20:
  %tmp101 = urem i32 %paddrPeer, 2
  %tmp102 = icmp ne i32 %tmp101, 0
  ret i1 %tmp102
}

define i32 @function_fbd() local_unnamed_addr {
dec_label_pc_fbd:
  %eax.global-to-local = alloca i32, align 4
  %v0_fbd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_fbd
}

define i32 @function_fc0() local_unnamed_addr {
dec_label_pc_fc0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1042(i32 %arg1) local_unnamed_addr {
dec_label_pc_1042:
  %of.global-to-local = alloca i1, align 1
  %stack_var_48 = alloca i32, align 4
  %v0_1042 = load i32, i32* @eax, align 8
  %tmp100 = sub i32 41719, %v0_1042
  %v8_1042 = and i32 %tmp100, %v0_1042
  %v9_1042 = icmp slt i32 %v8_1042, 0
  store i1 %v9_1042, i1* %of.global-to-local, align 1
  %v10_1042 = icmp eq i32 %v0_1042, 41720
  store i32 %v0_1042, i32* @ebx, align 4
  %v1_1049 = icmp eq i1 %v10_1042, false
  br i1 %v1_1049, label %bb, label %dec_label_pc_104f

bb:                                               ; preds = %dec_label_pc_1042
  %v2_1049 = call i32 @function_fc0()
  %v1_1055.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_104f

dec_label_pc_104f:                                ; preds = %bb, %dec_label_pc_1042
  %v1_1055 = phi i1 [ %v1_1055.pre, %bb ], [ %v9_1042, %dec_label_pc_1042 ]
  store i1 %v1_1055, i1* %of.global-to-local, align 1
  %v2_105f = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_48)
  ret i32 %v2_105f

; uselistorder directives
  uselistorder i32 %v0_1042, { 2, 0, 1, 3 }
}

define i32 @function_1069() local_unnamed_addr {
dec_label_pc_1069:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_106f() local_unnamed_addr {
dec_label_pc_106f:
  %eax.global-to-local = alloca i32, align 4
  %v0_106f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_106f
}

define %CAddress @_Z15GetLocalAddressPK8CNetAddr(i32 %paddrPeer) local_unnamed_addr {
dec_label_pc_1090:
  %tmp3 = call i64 @__decompiler_undefined_function_5()
  %v7_1110 = insertvalue %CAddress undef, i64 %tmp3, 0
  ret %CAddress %v7_1110
}

define i32 @function_11c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_11c8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11c8 = add i32 %v0_11c8, 1418402883
  %v2_11c8 = inttoptr i32 %v1_11c8 to i32*
  %v3_11c8 = load i32, i32* %v2_11c8, align 4
  %v4_11c8 = add i32 %v3_11c8, -1
  store i32 %v4_11c8, i32* %v2_11c8, align 4
  %v0_11ce = load i32, i32* %eax.global-to-local, align 8
  %v11_11ce = and i32 %v0_11ce, -148
  store i32 %v11_11ce, i32* %eax.global-to-local, align 8
  %v0_11d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_11d0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11d0 = xor i32 %v1_11d0, %v0_11d0
  %v3_11d0 = icmp eq i32 %v2_11d0, 0
  store i32 %v2_11d0, i32* %edx.global-to-local, align 4
  %v0_11d7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_11d7, i32* %eax.global-to-local, align 8
  %v1_11d9 = icmp eq i1 %v3_11d0, false
  br i1 %v1_11d9, label %dec_label_pc_11e4, label %dec_label_pc_11db

dec_label_pc_11db:                                ; preds = %dec_label_pc_11c8
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_11d7

dec_label_pc_11e4:                                ; preds = %dec_label_pc_11c8
  ret i32 %v0_11d7

; uselistorder directives
  uselistorder i32 %v0_11d7, { 1, 0, 2 }
}

define i1 @_Z7IsLocalRK8CService(i32 %addr) local_unnamed_addr {
dec_label_pc_11f0:
  %stack_var_-40 = alloca i32, align 4
  %v2_11f7 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_11f7, i32* @ebp, align 4
  %v8_1236 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-40, i32 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  br label %dec_label_pc_1259.outer

dec_label_pc_1250:                                ; preds = %dec_label_pc_1259
  %v1_1252 = add i32 %v0_1259, 8
  %v2_1252 = inttoptr i32 %v1_1252 to i32*
  %v3_1252 = load i32, i32* %v2_1252, align 4
  store i32 %v3_1252, i32* @ebx, align 4
  %v1_1255 = icmp eq i32 %v3_1252, 0
  br i1 %v1_1255, label %dec_label_pc_1273, label %dec_label_pc_1259.outer

dec_label_pc_1259.outer:                          ; preds = %dec_label_pc_1250, %dec_label_pc_11f0
  %v0_127310.ph = phi i32 [ %v0_1259, %dec_label_pc_1250 ], [ ptrtoint ([6 x i8]* @global_var_a2f8.2413 to i32), %dec_label_pc_11f0 ]
  %v0_1259.ph = phi i32 [ %v3_1252, %dec_label_pc_1250 ], [ 1313079396, %dec_label_pc_11f0 ]
  br label %dec_label_pc_1259

dec_label_pc_1259:                                ; preds = %dec_label_pc_1259.outer, %dec_label_pc_126c
  %v0_1259 = phi i32 [ %v3_126c, %dec_label_pc_126c ], [ %v0_1259.ph, %dec_label_pc_1259.outer ]
  %v1_1259 = add i32 %v0_1259, 16
  %v4_1268 = trunc i32 %v1_1259 to i8
  %v5_1268 = icmp eq i8 %v4_1268, 0
  br i1 %v5_1268, label %dec_label_pc_1250, label %dec_label_pc_126c

dec_label_pc_126c:                                ; preds = %dec_label_pc_1259
  %v1_126c = add i32 %v0_1259, 12
  %v2_126c = inttoptr i32 %v1_126c to i32*
  %v3_126c = load i32, i32* %v2_126c, align 4
  store i32 %v3_126c, i32* @ebx, align 4
  %v1_126f = icmp eq i32 %v3_126c, 0
  %v1_1271 = icmp eq i1 %v1_126f, false
  br i1 %v1_1271, label %dec_label_pc_1259, label %dec_label_pc_1273

dec_label_pc_1273:                                ; preds = %dec_label_pc_1250, %dec_label_pc_126c
  %v0_1273 = phi i32 [ %v0_127310.ph, %dec_label_pc_126c ], [ %v0_1259, %dec_label_pc_1250 ]
  %v10_1273 = icmp eq i32 %v0_1273, 41720
  br i1 %v10_1273, label %bb, label %dec_label_pc_127b

bb:                                               ; preds = %dec_label_pc_1273
  %v1_1279 = call i32 @function_12b0()
  %v0_127b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_127b

dec_label_pc_127b:                                ; preds = %bb, %dec_label_pc_1273
  %v3_1282 = phi i32 [ %v1_1279, %bb ], [ %v1_1259, %dec_label_pc_1273 ]
  %v0_127b = phi i32 [ %v0_127b.pre, %bb ], [ %v0_1273, %dec_label_pc_1273 ]
  %v1_127b = add i32 %v0_127b, 16
  store i32 %v1_127b, i32* @edi, align 4
  %tmp32 = urem i32 %v3_1282, 2
  %v4_1282 = icmp ne i32 %tmp32, 0
  ret i1 %v4_1282

; uselistorder directives
  uselistorder i32 %v0_1273, { 1, 0 }
  uselistorder i32 %v3_126c, { 1, 2, 0 }
  uselistorder i32 %v0_1259, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1273, { 1, 0 }
  uselistorder label %dec_label_pc_1259, { 1, 0 }
}

define i32 @function_128b() local_unnamed_addr {
dec_label_pc_128b:
  %eax.global-to-local = alloca i32, align 4
  %v0_128e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_128e
}

define i32 @function_128f() local_unnamed_addr {
dec_label_pc_128f:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v0_128f = load i32, i32* @ebp, align 4
  %v1_1292 = inttoptr i32 %v0_128f to i32*
  %v2_1292 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_1292)
  %v0_1297 = load i32, i32* @ebx, align 4
  store i32 %v0_1297, i32* @eax, align 8
  %v1_129d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_129d = icmp eq i32 %v1_129d, %tmp10
  %v1_12a4 = icmp eq i1 %v3_129d, false
  br i1 %v1_12a4, label %bb, label %dec_label_pc_12a6

bb:                                               ; preds = %dec_label_pc_128f
  %v2_12a4 = call i32 @function_12b4()
  br label %dec_label_pc_12a6

dec_label_pc_12a6:                                ; preds = %bb, %dec_label_pc_128f
  %v0_12ad = phi i32 [ %v2_12a4, %bb ], [ %v0_1297, %dec_label_pc_128f ]
  ret i32 %v0_12ad
}

define i32 @function_12b0() local_unnamed_addr {
dec_label_pc_12b0:
  store i32 0, i32* @ebx, align 4
  %v0_12b2 = call i32 @function_128f()
  ret i32 %v0_12b2
}

define i32 @function_12b4() local_unnamed_addr {
dec_label_pc_12b4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12ba() local_unnamed_addr {
dec_label_pc_12ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_12ba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12ba
}

define void @_ZN5CNode8IsBannedE8CNetAddr(%CNetAddr %ip) local_unnamed_addr {
dec_label_pc_12d0:
  %stack_var_-40 = alloca i32, align 4
  %v2_12db = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_12db, i32* @ebp, align 4
  %v8_1332 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-40, i32 ptrtoint ([15 x i8]* @global_var_9e80.2429 to i32), i32 ptrtoint ([13 x i8]* @global_var_a05e.2428 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  br label %dec_label_pc_1359.outer

dec_label_pc_1350:                                ; preds = %dec_label_pc_1359
  %v1_1352 = add i32 %v0_1359, 8
  %v2_1352 = inttoptr i32 %v1_1352 to i32*
  %v3_1352 = load i32, i32* %v2_1352, align 4
  %v1_1355 = icmp eq i32 %v3_1352, 0
  br i1 %v1_1355, label %dec_label_pc_1373, label %dec_label_pc_1359.outer

dec_label_pc_1359.outer:                          ; preds = %dec_label_pc_1350, %dec_label_pc_12d0
  %v0_137310.ph = phi i32 [ %v0_1359, %dec_label_pc_1350 ], [ ptrtoint ([15 x i8]* @global_var_9ed8.2431 to i32), %dec_label_pc_12d0 ]
  %v0_1359.ph = phi i32 [ %v3_1352, %dec_label_pc_1350 ], [ 1818196069, %dec_label_pc_12d0 ]
  br label %dec_label_pc_1359

dec_label_pc_1359:                                ; preds = %dec_label_pc_1359.outer, %dec_label_pc_136c
  %v0_1359 = phi i32 [ %v3_136c, %dec_label_pc_136c ], [ %v0_1359.ph, %dec_label_pc_1359.outer ]
  %v1_1359 = add i32 %v0_1359, 16
  %v4_1368 = trunc i32 %v1_1359 to i8
  %v5_1368 = icmp eq i8 %v4_1368, 0
  br i1 %v5_1368, label %dec_label_pc_1350, label %dec_label_pc_136c

dec_label_pc_136c:                                ; preds = %dec_label_pc_1359
  %v1_136c = add i32 %v0_1359, 12
  %v2_136c = inttoptr i32 %v1_136c to i32*
  %v3_136c = load i32, i32* %v2_136c, align 4
  %v1_136f = icmp eq i32 %v3_136c, 0
  %v1_1371 = icmp eq i1 %v1_136f, false
  br i1 %v1_1371, label %dec_label_pc_1359, label %dec_label_pc_1373

dec_label_pc_1373:                                ; preds = %dec_label_pc_1350, %dec_label_pc_136c
  %v0_1373 = phi i32 [ %v0_137310.ph, %dec_label_pc_136c ], [ %v0_1359, %dec_label_pc_1350 ]
  %v10_1373 = icmp eq i32 %v0_1373, 40664
  br i1 %v10_1373, label %bb, label %dec_label_pc_137b

bb:                                               ; preds = %dec_label_pc_1373
  %v1_1379 = call i32 @function_138e()
  br label %dec_label_pc_137b

dec_label_pc_137b:                                ; preds = %bb, %dec_label_pc_1373
  ret void

; uselistorder directives
  uselistorder i32 %v3_136c, { 1, 0 }
  uselistorder i32 %v0_1359, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1373, { 1, 0 }
  uselistorder label %dec_label_pc_1359, { 1, 0 }
}

define i32 @function_138e() local_unnamed_addr {
dec_label_pc_138e:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @ebx, align 4
  %v0_1390 = load i32, i32* @ebp, align 4
  %v1_1393 = inttoptr i32 %v0_1390 to i32*
  %v2_1393 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_1393)
  %v0_1398 = load i32, i32* @ebx, align 4
  store i32 %v0_1398, i32* @eax, align 8
  %v1_139e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_139e = icmp eq i32 %v1_139e, %tmp10
  %v1_13a5 = icmp eq i1 %v3_139e, false
  br i1 %v1_13a5, label %bb, label %dec_label_pc_13a7

bb:                                               ; preds = %dec_label_pc_138e
  %v2_13a5 = call i32 @function_13cc()
  br label %dec_label_pc_13a7

dec_label_pc_13a7:                                ; preds = %bb, %dec_label_pc_138e
  %v0_13ae = phi i32 [ %v2_13a5, %bb ], [ %v0_1398, %dec_label_pc_138e ]
  ret i32 %v0_13ae
}

define i32 @function_13bb() local_unnamed_addr {
dec_label_pc_13bb:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_13bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_13bb = load i32, i32* %edx.global-to-local, align 4
  %v8_13bd = icmp sgt i32 %v0_13bb, %v1_13bb
  br i1 %v8_13bd, label %dec_label_pc_13bb.dec_label_pc_13c5_crit_edge, label %dec_label_pc_13bf

dec_label_pc_13bb.dec_label_pc_13c5_crit_edge:    ; preds = %dec_label_pc_13bb
  %v0_13ca.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13c5

dec_label_pc_13bf:                                ; preds = %dec_label_pc_13bb
  %v5_13bf = icmp slt i32 %v0_13bb, %v1_13bb
  br i1 %v5_13bf, label %bb, label %dec_label_pc_13bf.dec_label_pc_13c1_crit_edge

dec_label_pc_13bf.dec_label_pc_13c1_crit_edge:    ; preds = %dec_label_pc_13bf
  %v1_13c1.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13c1

bb:                                               ; preds = %dec_label_pc_13bf
  %v6_13bf = call i32 @function_138e()
  store i32 %v6_13bf, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13c1

dec_label_pc_13c1:                                ; preds = %dec_label_pc_13bf.dec_label_pc_13c1_crit_edge, %bb
  %v1_13c1 = phi i32 [ %v1_13c1.pre, %dec_label_pc_13bf.dec_label_pc_13c1_crit_edge ], [ %v6_13bf, %bb ]
  %v0_13c1 = load i32, i32* @esi, align 4
  %tmp103 = icmp ugt i32 %v0_13c1, %v1_13c1
  br i1 %tmp103, label %dec_label_pc_13c5, label %bb102

bb102:                                            ; preds = %dec_label_pc_13c1
  %v3_13c3 = call i32 @function_138e()
  store i32 %v3_13c3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13c5

dec_label_pc_13c5:                                ; preds = %dec_label_pc_13c1, %dec_label_pc_13bb.dec_label_pc_13c5_crit_edge, %bb102
  %v0_13ca = phi i32 [ %v0_13ca.pre, %dec_label_pc_13bb.dec_label_pc_13c5_crit_edge ], [ %v3_13c3, %bb102 ], [ %v1_13c1, %dec_label_pc_13c1 ]
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %ebx.global-to-local, align 4
  ret i32 %v0_13ca

; uselistorder directives
  uselistorder i32 %v1_13c1, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_138e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13c5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c1, { 1, 0 }
}

define i32 @function_13cc() local_unnamed_addr {
dec_label_pc_13cc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13d2() local_unnamed_addr {
dec_label_pc_13d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_13d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13d2
}

define void @_ZN11CNetMessage10readHeaderEPKcj(i32 %this, i8* %pch, i32 %nBytes) local_unnamed_addr {
dec_label_pc_13f0:
  store i32 %this, i32* @ebx, align 4
  %v1_140b = add i32 %this, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_140b = inttoptr i32 %v1_140b to i32*
  %v3_140b = load i32, i32* %v2_140b, align 4
  %v2_1410 = sub i32 24, %v3_140b
  %tmp15 = icmp uge i32 %v2_1410, %nBytes
  %v3_1414 = icmp ne i1 %tmp15, true
  %v6_1414 = select i1 %v3_1414, i32 %v2_1410, i32 %nBytes
  store i32 %v6_1414, i32* @esi, align 4
  %v4_141c = ptrtoint i8* %pch to i32
  store i32 %v4_141c, i32* @edx, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v2_1410, { 1, 0 }
  uselistorder i32 %nBytes, { 1, 0 }
}

define i32 @function_1432(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1432:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1432 = load i32, i32* @ebx, align 4
  %v1_1432 = add i32 %v0_1432, -268355517
  %v2_1432 = inttoptr i32 %v1_1432 to i32*
  %v3_1432 = load i32, i32* %v2_1432, align 4
  %v4_1432 = sub i32 %v3_1432, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1432, i32* %v2_1432, align 4
  %v0_1438 = load i32, i32* %eax.global-to-local, align 8
  %v1_143b = load i32, i32* @ebx, align 4
  %v2_143b = add i32 %v1_143b, ptrtoint (i32* @global_var_38.2432 to i32)
  %v3_143b = inttoptr i32 %v2_143b to i32*
  store i32 %v0_1438, i32* %v3_143b, align 4
  %tmp118 = icmp ult i32 %v0_1438, 24
  br i1 %tmp118, label %dec_label_pc_1440, label %dec_label_pc_1460

dec_label_pc_1440:                                ; preds = %dec_label_pc_1432
  %v0_1440 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1440, i32* @eax, align 8
  %v1_1446 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1446 = icmp eq i32 %v1_1446, %arg1
  %v1_144d = icmp eq i1 %v3_1446, false
  br i1 %v1_144d, label %bb, label %dec_label_pc_1453

bb:                                               ; preds = %dec_label_pc_1440
  %v2_144d = call i32 @function_171a()
  store i32 %v2_144d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1453

dec_label_pc_1453:                                ; preds = %bb, %dec_label_pc_1440
  %v0_145a = phi i32 [ %v2_144d, %bb ], [ %v0_1440, %dec_label_pc_1440 ]
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v0_145a

dec_label_pc_1460:                                ; preds = %dec_label_pc_1432
  %v0_1460 = load i32, i32* @ebx, align 4
  %v1_1463 = add i32 %v0_1460, 32
  store i32 %v1_1463, i32* @edi, align 4
  store i32 4, i32* @eax, align 8
  %v1_147a = add i32 %v0_1460, 16
  %v2_147a = inttoptr i32 %v1_147a to i32*
  %v3_147a = load i32, i32* %v2_147a, align 4
  store i32 %v3_147a, i32* @edx, align 4
  %v1_147d = add i32 %v0_1460, 8
  %v2_147d = inttoptr i32 %v1_147d to i32*
  %v3_147d = load i32, i32* %v2_147d, align 4
  %v2_1482 = add i32 %v3_147a, 4
  %v1_1488 = add i32 %v0_1460, 4
  %v2_1488 = inttoptr i32 %v1_1488 to i32*
  %v3_1488 = load i32, i32* %v2_1488, align 4
  store i32 %v3_1488, i32* @ecx, align 4
  %v2_148b = sub i32 %v3_147d, %v3_1488
  %v10_148d = icmp ult i32 %v2_1482, %v2_148b
  %v15_148d = icmp eq i32 %v2_1482, %v2_148b
  br i1 %v10_148d, label %bb115, label %dec_label_pc_1497

bb115:                                            ; preds = %dec_label_pc_1460
  %v2_1491 = call i32 @function_1668(i32 %v2_1482)
  store i32 %v2_1491, i32* @eax, align 8
  %v0_1497.pre = load i1, i1* @cf, align 1
  %v1_1497.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_1497

dec_label_pc_1497:                                ; preds = %bb115, %dec_label_pc_1460
  %v1_1497 = phi i1 [ %v1_1497.pre, %bb115 ], [ %v15_148d, %dec_label_pc_1460 ]
  %v0_1497 = phi i1 [ %v0_1497.pre, %bb115 ], [ false, %dec_label_pc_1460 ]
  %v2_1497 = or i1 %v1_1497, %v0_1497
  br i1 %v2_1497, label %bb116, label %dec_label_pc_1499

bb116:                                            ; preds = %dec_label_pc_1497
  %v3_1497 = call i32 @function_14d2()
  store i32 %v3_1497, i32* @eax, align 8
  br label %dec_label_pc_1499

dec_label_pc_1499:                                ; preds = %bb116, %dec_label_pc_1497
  %v0_1499 = load i32, i32* @ebx, align 4
  %v1_1499 = add i32 %v0_1499, 20
  %v2_1499 = inttoptr i32 %v1_1499 to i16*
  %v3_1499 = load i16, i16* %v2_1499, align 2
  %v4_1499 = zext i16 %v3_1499 to i32
  %v1_149d = add i32 %v0_1499, 22
  %v2_149d = inttoptr i32 %v1_149d to i16*
  %v3_149d = load i16, i16* %v2_149d, align 2
  %v4_149d = zext i16 %v3_149d to i32
  %v1_14a1 = or i32 %v4_1499, 4
  %v4_14a41 = and i32 %v4_149d, %v1_14a1
  %v5_14a4 = icmp eq i32 %v4_14a41, 0
  %v1_14a7 = trunc i32 %v1_14a1 to i16
  store i16 %v1_14a7, i16* %v2_1499, align 2
  %v1_14ab = icmp eq i1 %v5_14a4, false
  br i1 %v1_14ab, label %bb117, label %dec_label_pc_1499.dec_label_pc_14b1_crit_edge

dec_label_pc_1499.dec_label_pc_14b1_crit_edge:    ; preds = %dec_label_pc_1499
  %v3_14bd.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_14b1

bb117:                                            ; preds = %dec_label_pc_1499
  %v2_14ab = call i32 @function_1743()
  store i32 %v2_14ab, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14b1

dec_label_pc_14b1:                                ; preds = %dec_label_pc_1499.dec_label_pc_14b1_crit_edge, %bb117
  %v3_14bd = phi i32 [ %v3_14bd.pre, %dec_label_pc_1499.dec_label_pc_14b1_crit_edge ], [ %v2_14ab, %bb117 ]
  ret i32 %v3_14bd

; uselistorder directives
  uselistorder i32 %v1_14a1, { 1, 0 }
  uselistorder i32 %v2_1482, { 1, 0, 2 }
  uselistorder i32 %v0_1460, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14b1, { 1, 0 }
}

define i32 @function_14d2() local_unnamed_addr {
dec_label_pc_14d2:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_14d2 = load i32, i32* @edx, align 4
  %v1_14d2 = load i32, i32* @ecx, align 4
  %v0_14dc = load i32, i32* @edi, align 4
  %v0_14e4 = load i32, i32* @ebx, align 4
  %v1_14e4 = add i32 %v0_14e4, 4
  %v2_14e4 = inttoptr i32 %v1_14e4 to i32*
  %v3_14e4 = load i32, i32* %v2_14e4, align 4
  store i32 %v3_14e4, i32* @eax, align 8
  %v1_14e7 = add i32 %v0_14e4, 16
  %v2_14e7 = inttoptr i32 %v1_14e7 to i32*
  store i32 0, i32* %v2_14e7, align 4
  %v0_14ee = load i32, i32* @eax, align 8
  %v1_14ee = load i32, i32* @ebx, align 4
  %v2_14ee = add i32 %v1_14ee, 8
  %v3_14ee = inttoptr i32 %v2_14ee to i32*
  store i32 %v0_14ee, i32* %v3_14ee, align 4
  %v0_14f1 = load i32, i32* @ebx, align 4
  %v1_14f1 = add i32 %v0_14f1, 48
  %v5_14f8 = sub i32 %v1_14f1, %tmp6
  %v16_14f8 = icmp slt i32 %v5_14f8, 0
  br i1 %v16_14f8, label %bb, label %dec_label_pc_1506

bb:                                               ; preds = %dec_label_pc_14d2
  %v2_14d2 = add i32 %v1_14d2, %v0_14d2
  %v3_1500 = call i32 @function_171f(i32 %v0_14dc, i32 %v2_14d2)
  %v0_150a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1506

dec_label_pc_1506:                                ; preds = %bb, %dec_label_pc_14d2
  %v0_1510 = phi i32 [ %v0_150a.pre, %bb ], [ %v0_14f1, %dec_label_pc_14d2 ]
  store i32 %v5_14f8, i32* @eax, align 8
  %v1_150a = add i32 %v0_1510, 16
  %v2_150a = inttoptr i32 %v1_150a to i32*
  %v3_150a = load i32, i32* %v2_150a, align 4
  store i32 %v3_150a, i32* @edx, align 4
  %v1_150d = add i32 %v0_1510, 4
  %v2_150d = inttoptr i32 %v1_150d to i32*
  %v3_150d = load i32, i32* %v2_150d, align 4
  store i32 %v3_150d, i32* @ecx, align 4
  %v1_1510 = add i32 %v0_1510, 8
  %v2_1510 = inttoptr i32 %v1_1510 to i32*
  %v3_1510 = load i32, i32* %v2_1510, align 4
  %v2_1515 = add i32 %v3_150a, %v5_14f8
  %v2_1517 = sub i32 %v3_1510, %v3_150d
  %v7_1519 = icmp ult i32 %v2_1515, %v2_1517
  %v12_1519 = icmp eq i32 %v2_1515, %v2_1517
  br i1 %v7_1519, label %bb11, label %dec_label_pc_1521

bb11:                                             ; preds = %dec_label_pc_1506
  %v1_151b = call i32 @function_1690()
  store i32 %v1_151b, i32* @eax, align 8
  %v0_1521.pre = load i1, i1* @cf, align 1
  %v1_1521.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_1521

dec_label_pc_1521:                                ; preds = %bb11, %dec_label_pc_1506
  %v1_1521 = phi i1 [ %v1_1521.pre, %bb11 ], [ %v12_1519, %dec_label_pc_1506 ]
  %v0_1521 = phi i1 [ %v0_1521.pre, %bb11 ], [ false, %dec_label_pc_1506 ]
  %v2_1521 = or i1 %v1_1521, %v0_1521
  br i1 %v2_1521, label %bb12, label %dec_label_pc_1523

bb12:                                             ; preds = %dec_label_pc_1521
  %v3_1521 = call i32 @function_1560()
  store i32 %v3_1521, i32* @eax, align 8
  br label %dec_label_pc_1523

dec_label_pc_1523:                                ; preds = %bb12, %dec_label_pc_1521
  %v0_1523 = load i32, i32* @ebx, align 4
  %v1_1523 = add i32 %v0_1523, 20
  %v2_1523 = inttoptr i32 %v1_1523 to i16*
  %v3_1523 = load i16, i16* %v2_1523, align 2
  %v4_1523 = zext i16 %v3_1523 to i32
  %v1_1527 = add i32 %v0_1523, 22
  %v2_1527 = inttoptr i32 %v1_1527 to i16*
  %v3_1527 = load i16, i16* %v2_1527, align 2
  %v4_1527 = zext i16 %v3_1527 to i32
  %v1_152b = or i32 %v4_1523, 4
  %v4_152e1 = and i32 %v4_1527, %v1_152b
  %v5_152e = icmp eq i32 %v4_152e1, 0
  %v1_1531 = trunc i32 %v1_152b to i16
  store i16 %v1_1531, i16* %v2_1523, align 2
  %v1_1535 = icmp eq i1 %v5_152e, false
  br i1 %v1_1535, label %bb13, label %dec_label_pc_1523.dec_label_pc_153b_crit_edge

dec_label_pc_1523.dec_label_pc_153b_crit_edge:    ; preds = %dec_label_pc_1523
  %v3_154b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_153b

bb13:                                             ; preds = %dec_label_pc_1523
  %v2_1535 = call i32 @function_1800()
  br label %dec_label_pc_153b

dec_label_pc_153b:                                ; preds = %dec_label_pc_1523.dec_label_pc_153b_crit_edge, %bb13
  %v3_154b = phi i32 [ %v3_154b.pre, %dec_label_pc_1523.dec_label_pc_153b_crit_edge ], [ %v2_1535, %bb13 ]
  ret i32 %v3_154b

; uselistorder directives
  uselistorder i32 %v1_152b, { 1, 0 }
  uselistorder i32 %v0_1510, { 0, 2, 1 }
  uselistorder label %dec_label_pc_153b, { 1, 0 }
}

define i32 @function_1560() local_unnamed_addr {
dec_label_pc_1560:
  %v3_156e = load i32, i32* @eax, align 8
  ret i32 %v3_156e
}

define i32 @function_1583() local_unnamed_addr {
dec_label_pc_1583:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15b2() local_unnamed_addr {
dec_label_pc_15b2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15d8() local_unnamed_addr {
dec_label_pc_15d8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1603() local_unnamed_addr {
dec_label_pc_1603:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1614() local_unnamed_addr {
dec_label_pc_1614:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1614 = load i32, i32* @ebx, align 4
  %v1_1614 = add i32 %v0_1614, 1137116227
  %v2_1614 = inttoptr i32 %v1_1614 to i32*
  %v3_1614 = load i32, i32* %v2_1614, align 4
  %v4_1614 = add i32 %v3_1614, -1
  store i32 %v4_1614, i32* %v2_1614, align 4
  %v2_161a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_161a = load i32, i32* %eax.global-to-local, align 8
  %v4_161a = trunc i32 %v3_161a to i8
  %v5_161a = load i1, i1* %cf.global-to-local, align 1
  %v6_161a = zext i1 %v5_161a to i8
  %v7_161a = add i8 %v4_161a, %v2_161a
  %v8_161a = add i8 %v7_161a, %v6_161a
  %v30_161a = inttoptr i32 %v3_161a to i8*
  store i8 %v8_161a, i8* %v30_161a, align 1
  %v2_161c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_161c = load i32, i32* %eax.global-to-local, align 8
  %v4_161c = trunc i32 %v3_161c to i8
  %v5_161c = add i8 %v4_161c, %v2_161c
  %v10_161c = icmp ult i8 %v5_161c, %v2_161c
  store i1 %v10_161c, i1* %cf.global-to-local, align 1
  %v21_161c = inttoptr i32 %v3_161c to i8*
  store i8 %v5_161c, i8* %v21_161c, align 1
  %v0_161e = load i32, i32* %ecx.global-to-local, align 4
  %v1_161e = add i32 %v0_161e, 1401620547
  %v2_161e = inttoptr i32 %v1_161e to i8*
  %v3_161e = load i8, i8* %v2_161e, align 1
  %v5_161e = trunc i32 %v0_161e to i8
  %v6_161e = add i8 %v3_161e, %v5_161e
  %v11_161e = icmp ult i8 %v6_161e, %v3_161e
  store i1 %v11_161e, i1* %cf.global-to-local, align 1
  store i8 %v6_161e, i8* %v2_161e, align 1
  %v0_1624 = load i32, i32* %eax.global-to-local, align 8
  %v1_1624 = add i32 %v0_1624, -1
  %v2_1624 = inttoptr i32 %v1_1624 to i8*
  %v3_1624 = load i8, i8* %v2_1624, align 1
  %v4_1624 = load i32, i32* @ebx, align 4
  %v5_1624 = udiv i32 %v4_1624, 256
  %v6_1624 = trunc i32 %v5_1624 to i8
  %v7_1624 = xor i8 %v6_1624, %v3_1624
  store i8 %v7_1624, i8* %v2_1624, align 1
  %v0_162a = load i32, i32* %edx.global-to-local, align 4
  %v0_1636 = load i32, i32* @ebx, align 4
  %v1_1636 = add i32 %v0_1636, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_1636 = inttoptr i32 %v1_1636 to i32*
  %v3_1636 = load i32, i32* %v2_1636, align 4
  store i32 %v3_1636, i32* @ecx, align 4
  %v1_1639 = add i32 %v0_1636, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_1639 = inttoptr i32 %v1_1639 to i32*
  %v3_1639 = load i32, i32* %v2_1639, align 4
  store i32 %v3_1639, i32* %eax.global-to-local, align 8
  %v2_163c = add i32 %v0_1636, 72
  %v3_163c = inttoptr i32 %v2_163c to i32*
  %v4_163c = load i32, i32* %v3_163c, align 4
  %v5_163c = add i32 %v4_163c, %v0_162a
  store i32 %v5_163c, i32* @edx, align 4
  %v1_163f = inttoptr i32 %v0_1636 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v1_163f, align 1
  %v0_1642 = load i32, i32* @ecx, align 4
  %v1_1644 = load i32, i32* %eax.global-to-local, align 8
  %v2_1644 = sub i32 %v0_1642, %v1_1644
  store i32 %v2_1644, i32* @edi, align 4
  %v0_1646 = load i32, i32* @edx, align 4
  %v7_1646 = icmp ult i32 %v0_1646, %v2_1644
  store i1 %v7_1646, i1* %cf.global-to-local, align 1
  %tmp99 = icmp ugt i32 %v0_1646, %v2_1644
  br i1 %tmp99, label %bb, label %dec_label_pc_1653

bb:                                               ; preds = %dec_label_pc_1614
  %v6_164d = call i32 @function_16f8(i32 0)
  store i32 %v6_164d, i32* %eax.global-to-local, align 8
  %v0_1659.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1653

dec_label_pc_1653:                                ; preds = %dec_label_pc_1614, %bb
  %v1_1659 = phi i32 [ %v1_1644, %dec_label_pc_1614 ], [ %v6_164d, %bb ]
  %v0_1659 = phi i32 [ %v0_1646, %dec_label_pc_1614 ], [ %v0_1659.pre, %bb ]
  %v2_1659 = add i32 %v0_1659, %v1_1659
  %v7_1659 = icmp ult i32 %v2_1659, %v0_1659
  store i1 %v7_1659, i1* %cf.global-to-local, align 1
  store i32 %v2_1659, i32* %edx.global-to-local, align 4
  %v1_165b = load i32, i32* @ebx, align 4
  %v2_165b = add i32 %v1_165b, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_165b = inttoptr i32 %v2_165b to i32*
  store i32 %v2_1659, i32* %v3_165b, align 4
  %v0_165e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_165e

; uselistorder directives
  uselistorder i32 %v0_1659, { 1, 0 }
  uselistorder i32 %v0_1646, { 1, 0, 2 }
  uselistorder i8 %v2_161c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_1653, { 1, 0 }
}

define i32 @function_1668(i32 %arg1) local_unnamed_addr {
dec_label_pc_1668:
  %v0_166c = load i32, i32* @edx, align 4
  %v1_166c = load i32, i32* @ecx, align 4
  %v2_166c = add i32 %v1_166c, %v0_166c
  %v7_166c = icmp ult i32 %v2_166c, %v0_166c
  store i1 %v7_166c, i1* @cf, align 1
  %v12_166c = icmp eq i32 %v2_166c, 0
  store i1 %v12_166c, i1* @zf, align 1
  store i32 %v2_166c, i32* @edx, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v0_166c, { 1, 0 }
}

define i32 @function_167e(i32 %arg1) local_unnamed_addr {
dec_label_pc_167e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v1_1682 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1682 = add i32 %v1_1682, 16
  %v3_1682 = inttoptr i32 %v2_1682 to i32*
  store i32 %arg1, i32* %v3_1682, align 4
  %v0_1685 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1685
}

define i32 @function_1690() local_unnamed_addr {
dec_label_pc_1690:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1690 = load i32, i32* @edx, align 4
  %v1_1690 = load i32, i32* @ecx, align 4
  %v2_1690 = add i32 %v1_1690, %v0_1690
  %v7_1690 = icmp ult i32 %v2_1690, %v0_1690
  store i1 %v7_1690, i1* @cf, align 1
  %v12_1690 = icmp eq i32 %v2_1690, 0
  store i1 %v12_1690, i1* @zf, align 1
  ret i32 %tmp4

; uselistorder directives
  uselistorder i32 %v0_1690, { 1, 0 }
}

define i32 @function_16a9() local_unnamed_addr {
dec_label_pc_16a9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16a9 = add i32 %v0_16a9, 1200424019
  %v2_16a9 = inttoptr i32 %v1_16a9 to i32*
  %v3_16a9 = load i32, i32* %v2_16a9, align 4
  %v4_16a9 = add i32 %v3_16a9, -1
  store i32 %v4_16a9, i32* %v2_16a9, align 4
  %v0_16af = load i32, i32* %eax.global-to-local, align 8
  %v1_16af = trunc i32 %v0_16af to i8
  %v2_16af = add i8 %v1_16af, -117
  %v13_16af = call i8 @llvm.ctpop.i8(i8 %v2_16af)
  %v14_16af = urem i8 %v13_16af, 2
  %v15_16af = icmp eq i8 %v14_16af, 0
  %v16_16af = zext i8 %v2_16af to i32
  %v18_16af = and i32 %v0_16af, -256
  %v19_16af = or i32 %v16_16af, %v18_16af
  store i32 %v19_16af, i32* %eax.global-to-local, align 8
  %v1_16b4 = icmp eq i1 %v15_16af, false
  br i1 %v1_16b4, label %dec_label_pc_16c6, label %dec_label_pc_16b6

dec_label_pc_16b6:                                ; preds = %dec_label_pc_16a9
  %v0_16b6 = load i32, i32* %edx.global-to-local, align 4
  %v0_16b8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_16b8 = sub i32 %v0_16b8, %v0_16b6
  store i32 %v2_16b8, i32* %ebp.global-to-local, align 4
  %v7_16ba = icmp ult i32 %v19_16af, %v2_16b8
  store i1 %v7_16ba, i1* @cf, align 1
  %v12_16ba = icmp eq i32 %v19_16af, %v2_16b8
  store i1 %v12_16ba, i1* @zf, align 1
  %v1_16bc = icmp eq i1 %v7_16ba, false
  br i1 %v1_16bc, label %bb, label %dec_label_pc_16c2

bb:                                               ; preds = %dec_label_pc_16b6
  %v2_16bc = call i32 @function_18c1()
  store i32 %v2_16bc, i32* %eax.global-to-local, align 8
  %v0_16c2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_16c2

dec_label_pc_16c2:                                ; preds = %bb, %dec_label_pc_16b6
  %v6_16c2 = phi i32 [ %v2_16bc, %bb ], [ %v19_16af, %dec_label_pc_16b6 ]
  %v0_16c2 = phi i32 [ %v0_16c2.pre, %bb ], [ %v0_16b6, %dec_label_pc_16b6 ]
  %v1_16c2 = load i32, i32* %edi.global-to-local, align 4
  %v2_16c2 = mul i32 %v1_16c2, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_16c2 = add i32 %v2_16c2, %v0_16c2
  %v4_16c2 = inttoptr i32 %v3_16c2 to i32*
  %v5_16c2 = load i32, i32* %v4_16c2, align 4
  store i32 %v5_16c2, i32* %edx.global-to-local, align 4
  ret i32 %v6_16c2

dec_label_pc_16c6:                                ; preds = %dec_label_pc_16a9
  ret i32 %v19_16af

; uselistorder directives
  uselistorder i32 %v19_16af, { 1, 2, 0, 3, 4 }
}

define i32 @function_16c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c7:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16c7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16c7 = add i32 %v0_16c7, 1401491523
  %v2_16c7 = inttoptr i32 %v1_16c7 to i8*
  %v3_16c7 = load i8, i8* %v2_16c7, align 1
  %v5_16c7 = trunc i32 %v0_16c7 to i8
  %v6_16c7 = or i8 %v3_16c7, %v5_16c7
  store i8 %v6_16c7, i8* %v2_16c7, align 1
  %v0_16cd = load i32, i32* %ebp.global-to-local, align 4
  %v1_16cd = add i32 %v0_16cd, 2089366611
  %v2_16cd = inttoptr i32 %v1_16cd to i8*
  %v3_16cd = load i8, i8* %v2_16cd, align 1
  %v4_16cd = load i32, i32* %ecx.global-to-local, align 4
  %v5_16cd = trunc i32 %v4_16cd to i8
  %v6_16cd = xor i8 %v5_16cd, %v3_16cd
  store i8 %v6_16cd, i8* %v2_16cd, align 1
  %v0_16d3 = load i32, i32* %eax.global-to-local, align 8
  %v11_16d3 = and i32 %v0_16d3, -232
  store i32 %v11_16d3, i32* @eax, align 8
  %v0_16d5 = load i32, i32* %ecx.global-to-local, align 4
  %v0_16d7 = load i32, i32* %ebp.global-to-local, align 4
  %v10_16d7 = icmp ult i32 %v0_16d7, %arg1
  store i1 %v10_16d7, i1* @cf, align 1
  %tmp99 = icmp ugt i32 %v0_16d7, %arg1
  br i1 %tmp99, label %dec_label_pc_16e1, label %bb

bb:                                               ; preds = %dec_label_pc_16c7
  %v3_16db = call i32 @function_18d3()
  store i32 %v3_16db, i32* %eax.global-to-local, align 8
  %v0_16e1.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_16e1

dec_label_pc_16e1:                                ; preds = %dec_label_pc_16c7, %bb
  %v1_16e1 = phi i32 [ %v3_16db, %bb ], [ %v11_16d3, %dec_label_pc_16c7 ]
  %v0_16e1 = phi i32 [ %v0_16e1.pre, %bb ], [ %v0_16d5, %dec_label_pc_16c7 ]
  %v3_16e1 = add i32 %v0_16e1, %v1_16e1
  %v4_16e1 = inttoptr i32 %v3_16e1 to i32*
  %v5_16e1 = load i32, i32* %v4_16e1, align 4
  store i32 %v5_16e1, i32* %eax.global-to-local, align 8
  %v1_16e4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_16e4 = add i32 %v1_16e4, 52
  %v3_16e4 = inttoptr i32 %v2_16e4 to i32*
  store i32 %v5_16e1, i32* %v3_16e4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_16eb = load i32, i32* %ebx.global-to-local, align 4
  %v2_16eb = add i32 %v1_16eb, 16
  %v3_16eb = inttoptr i32 %v2_16eb to i32*
  store i32 %arg1, i32* %v3_16eb, align 4
  %v0_16ee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16ee

; uselistorder directives
  uselistorder i32 %v11_16d3, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16e1, { 1, 0 }
}

define i32 @function_16f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f8:
  %stack_var_59 = alloca i32, align 4
  %v0_16fc = load i32, i32* @edx, align 4
  %v1_16fc = load i32, i32* @edi, align 4
  %v2_16fc = sub i32 %v0_16fc, %v1_16fc
  %v0_16fe = load i32, i32* @ebx, align 4
  %v1_16fe = add i32 %v0_16fe, ptrtoint (i32* @global_var_3c.2406 to i32)
  store i32 %v1_16fe, i32* @ebx, align 4
  %v0_1709 = load i32, i32* @ecx, align 4
  %v4_1710 = bitcast i32* %stack_var_59 to i8*
  %v5_1710 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc(i32 %v1_16fe, i32 %v0_1709, i32 %v2_16fc, i8* %v4_1710)
  ret i32 %v5_1710
}

define i32 @function_171a() local_unnamed_addr {
dec_label_pc_171a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_171f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_171f:
  %v3_1737 = load i32, i32* @eax, align 8
  ret i32 %v3_1737
}

define i32 @function_1743() local_unnamed_addr {
dec_label_pc_1743:
  %v3_174a = load i32, i32* @eax, align 8
  ret i32 %v3_174a
}

define i32 @function_1799() local_unnamed_addr {
dec_label_pc_1799:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_179a() local_unnamed_addr {
dec_label_pc_179a:
  %v0_179a = call i32 @function_24048901()
  ret i32 %v0_179a
}

define i32 @function_1800() local_unnamed_addr {
dec_label_pc_1800:
  %stack_var_40 = alloca i32, align 4
  %v2_1807 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_1807, i32* @ebx, align 4
  %v3_1807 = load i32, i32* @eax, align 8
  ret i32 %v3_1807
}

define i32 @function_18ac() local_unnamed_addr {
dec_label_pc_18ac:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18ad() local_unnamed_addr {
dec_label_pc_18ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_18ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18ad
}

define i32 @function_18b8() local_unnamed_addr {
dec_label_pc_18b8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18b8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_18b8, i32* @eax, align 8
  %v0_18bc = call i32 @function_1799()
  ret i32 %v0_18bc
}

define i32 @function_18c1() local_unnamed_addr {
dec_label_pc_18c1:
  store i32 4, i32* @eax, align 8
  %v0_18c6 = load i1, i1* @cf, align 1
  %v1_18c6 = load i1, i1* @zf, align 1
  %v2_18c6 = or i1 %v0_18c6, %v1_18c6
  br i1 %v2_18c6, label %bb, label %dec_label_pc_18cc

bb:                                               ; preds = %dec_label_pc_18c1
  %v3_18c6 = call i32 @function_15b2()
  store i32 %v3_18c6, i32* @eax, align 8
  br label %dec_label_pc_18cc

dec_label_pc_18cc:                                ; preds = %bb, %dec_label_pc_18c1
  %v0_18cc = call i32 @function_1583()
  ret i32 %v0_18cc
}

define i32 @function_18d1() local_unnamed_addr {
dec_label_pc_18d1:
  %v0_18d1 = call i32 @function_18ac()
  ret i32 %v0_18d1
}

define i32 @function_18d3() local_unnamed_addr {
dec_label_pc_18d3:
  store i32 4, i32* @ecx, align 4
  %v0_18d8 = load i1, i1* @cf, align 1
  %v1_18d8 = icmp eq i1 %v0_18d8, false
  br i1 %v1_18d8, label %bb, label %dec_label_pc_18de

bb:                                               ; preds = %dec_label_pc_18d3
  %v2_18d8 = call i32 @function_1603()
  store i32 %v2_18d8, i32* @eax, align 8
  br label %dec_label_pc_18de

dec_label_pc_18de:                                ; preds = %bb, %dec_label_pc_18d3
  %v0_18e0 = call i32 @function_15d8()
  ret i32 %v0_18e0
}

define i32 @function_18f5() local_unnamed_addr {
dec_label_pc_18f5:
  ret i32 -1
}

define i32 @function_1900() local_unnamed_addr {
dec_label_pc_1900:
  %v0_1900 = call i32 @function_18ac()
  ret i32 %v0_1900
}

define i32 @function_1902() local_unnamed_addr {
dec_label_pc_1902:
  %v0_1902 = call i32 @function_18ac()
  ret i32 %v0_1902

; uselistorder directives
  uselistorder i32 ()* @function_18ac, { 2, 1, 0 }
}

define void @AdvertizeLocal() local_unnamed_addr {
dec_label_pc_1910:
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1911 = load i32, i32* @edi, align 4
  %v2_1930 = ptrtoint i32* %stack_var_-108 to i32
  %v7_195c = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-116, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  br label %dec_label_pc_1978

dec_label_pc_1978:                                ; preds = %dec_label_pc_1984, %dec_label_pc_1910
  %v0_1988 = phi i32 [ %v1_1988, %dec_label_pc_1984 ], [ 26482, %dec_label_pc_1910 ]
  %v1_1978 = inttoptr i32 %v0_1988 to i32*
  %v2_1978 = load i32, i32* %v1_1978, align 4
  %v1_197b = add i32 %v2_1978, ptrtoint (i8** @global_var_1d0.2438 to i32)
  %v2_197b = inttoptr i32 %v1_197b to i8*
  %v3_197b = load i8, i8* %v2_197b, align 1
  %v10_197b = icmp eq i8 %v3_197b, 0
  %v1_1982 = icmp eq i1 %v10_197b, false
  br i1 %v1_1982, label %dec_label_pc_19c0, label %dec_label_pc_1984

dec_label_pc_1984:                                ; preds = %dec_label_pc_1978
  %v1_1988 = add i32 %v0_1988, 4
  %v16_198b = icmp eq i32 %v0_1988, 808594992
  %v1_198f = icmp eq i1 %v16_198b, false
  br i1 %v1_198f, label %dec_label_pc_1978, label %dec_label_pc_1991

dec_label_pc_1991:                                ; preds = %dec_label_pc_1984
  %v2_1998 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_-116)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_19b1

bb:                                               ; preds = %dec_label_pc_1991
  br label %dec_label_pc_19b1

dec_label_pc_19b1:                                ; preds = %bb, %dec_label_pc_1991
  store i32 %v0_1911, i32* @edi, align 4
  ret void

dec_label_pc_19c0:                                ; preds = %dec_label_pc_1978
  %v2_19cd = call %CAddress @_Z15GetLocalAddressPK8CNetAddr(i32 %v2_1930)
  ret void
}

define i32 @function_1a6b() local_unnamed_addr {
dec_label_pc_1a6b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a6b = load i32, i32* %eax.global-to-local, align 8
  %v2_1a6b = mul i32 %v0_1a6b, 8
  %v3_1a6b = add i32 %v0_1a6b, 13272079
  %v4_1a6b = add i32 %v3_1a6b, %v2_1a6b
  %v5_1a6b = inttoptr i32 %v4_1a6b to i32*
  %v6_1a6b = load i32, i32* %v5_1a6b, align 4
  %v7_1a6b = add i32 %v6_1a6b, 1
  store i32 %v7_1a6b, i32* %v5_1a6b, align 4
  %v2_1a72 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1a72 = load i32, i32* %eax.global-to-local, align 8
  %v4_1a72 = trunc i32 %v3_1a72 to i8
  %v5_1a72 = add i8 %v4_1a72, %v2_1a72
  %v21_1a72 = inttoptr i32 %v3_1a72 to i8*
  store i8 %v5_1a72, i8* %v21_1a72, align 1
  %v0_1a74 = load i32, i32* @esi, align 4
  %v1_1a74 = add i32 %v0_1a74, 668
  %v2_1a74 = inttoptr i32 %v1_1a74 to i32*
  %v3_1a74 = load i32, i32* %v2_1a74, align 4
  store i32 %v3_1a74, i32* @ebx, align 4
  %v1_1a7a = icmp eq i32 %v3_1a74, 0
  br i1 %v1_1a7a, label %bb, label %dec_label_pc_1a7e

bb:                                               ; preds = %dec_label_pc_1a6b
  %v1_1a7c = call i32 @function_1ad2()
  store i32 %v1_1a7c, i32* %eax.global-to-local, align 8
  %v0_1a7e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1a7e

dec_label_pc_1a7e:                                ; preds = %bb, %dec_label_pc_1a6b
  %v0_1a7e = phi i32 [ %v0_1a7e.pre, %bb ], [ %v0_1a74, %dec_label_pc_1a6b ]
  %v1_1a7e = add i32 %v0_1a7e, ptrtoint (i32* @global_var_298.2440 to i32)
  store i32 %v1_1a7e, i32* %eax.global-to-local, align 8
  %v2_1a8c = call i32 @function_1a9b(i32 %v1_1a7e, i32 %v1_1a7e)
  store i32 %v2_1a8c, i32* %eax.global-to-local, align 8
  ret i32 %v2_1a8c

; uselistorder directives
  uselistorder i32 %v0_1a6b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
}

define i32 @function_1a90() local_unnamed_addr {
dec_label_pc_1a90:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1a94 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a94 = add i32 %v0_1a94, 8
  %v2_1a94 = inttoptr i32 %v1_1a94 to i32*
  %v3_1a94 = load i32, i32* %v2_1a94, align 4
  store i32 %v3_1a94, i32* %ebx.global-to-local, align 4
  %v0_1a99 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a99
}

define i32 @function_1a9b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a9b:
  %v0_1a9b = load i32, i32* @ebx, align 4
  %v1_1a9b = add i32 %v0_1a9b, 16
  ret i32 %v1_1a9b
}

define i32 @function_1ab5() local_unnamed_addr {
dec_label_pc_1ab5:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_1ad2() local_unnamed_addr {
dec_label_pc_1ad2:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v0_1ad2 = load i32, i32* @esi, align 4
  %v1_1ad2 = add i32 %v0_1ad2, 652
  %v2_1ad2 = inttoptr i32 %v1_1ad2 to i32*
  %v3_1ad2 = load i32, i32* %v2_1ad2, align 4
  store i32 %v3_1ad2, i32* %eax.global-to-local, align 8
  %v2_1ad8 = add i32 %v0_1ad2, ptrtoint (i32* @global_var_290.2441 to i32)
  %v3_1ad8 = inttoptr i32 %v2_1ad8 to i32*
  %v4_1ad8 = load i32, i32* %v3_1ad8, align 4
  %v15_1ad8 = icmp eq i32 %v3_1ad2, %v4_1ad8
  br i1 %v15_1ad8, label %dec_label_pc_1b77, label %dec_label_pc_1ae4

dec_label_pc_1ae4:                                ; preds = %dec_label_pc_1ad2
  %v1_1ae6 = icmp eq i32 %v3_1ad2, 0
  br i1 %v1_1ae6, label %dec_label_pc_1b35, label %dec_label_pc_1aea

dec_label_pc_1aea:                                ; preds = %dec_label_pc_1ae4
  %v2_1aee = inttoptr i32 %v3_1ad2 to i32*
  %v2_1af4 = add i32 %v3_1ad2, 4
  %v3_1af4 = inttoptr i32 %v2_1af4 to i32*
  %v2_1afb = add i32 %v3_1ad2, 8
  %v3_1afb = inttoptr i32 %v2_1afb to i32*
  %v2_1b02 = add i32 %v3_1ad2, 12
  %v3_1b02 = inttoptr i32 %v2_1b02 to i32*
  %v2_1b09 = add i32 %v3_1ad2, 16
  %v3_1b09 = inttoptr i32 %v2_1b09 to i32*
  %v2_1b10 = add i32 %v3_1ad2, 20
  %v3_1b10 = inttoptr i32 %v2_1b10 to i32*
  %v2_1b17 = add i32 %v3_1ad2, 24
  %v3_1b17 = inttoptr i32 %v2_1b17 to i32*
  %v2_1b1e = add i32 %v3_1ad2, 28
  %v3_1b1e = inttoptr i32 %v2_1b1e to i32*
  %v2_1b25 = add i32 %v3_1ad2, 32
  %v3_1b25 = inttoptr i32 %v2_1b25 to i32*
  %v2_1b2c = add i32 %v3_1ad2, 36
  %v3_1b2c = inttoptr i32 %v2_1b2c to i32*
  %v0_1b2f = load i32, i32* @esi, align 4
  %v1_1b2f = add i32 %v0_1b2f, 652
  %v2_1b2f = inttoptr i32 %v1_1b2f to i32*
  %v3_1b2f = load i32, i32* %v2_1b2f, align 4
  %phitmp = add i32 %v3_1b2f, 40
  br label %dec_label_pc_1b35

dec_label_pc_1b35:                                ; preds = %dec_label_pc_1aea, %dec_label_pc_1ae4
  %v1_1b38 = phi i32 [ %v0_1b2f, %dec_label_pc_1aea ], [ %v0_1ad2, %dec_label_pc_1ae4 ]
  %v0_1b35 = phi i32 [ %phitmp, %dec_label_pc_1aea ], [ 40, %dec_label_pc_1ae4 ]
  %v2_1b38 = add i32 %v1_1b38, 652
  %v3_1b38 = inttoptr i32 %v2_1b38 to i32*
  store i32 %v0_1b35, i32* %v3_1b38, align 4
  br label %dec_label_pc_1b3e

dec_label_pc_1b3e:                                ; preds = %dec_label_pc_1b77, %dec_label_pc_1b35
  %v1_1b42 = load i32, i32* @esi, align 4
  %v2_1b42 = add i32 %v1_1b42, 432
  %v3_1b42 = inttoptr i32 %v2_1b42 to i32*
  %v1_1b4c = load i32, i32* @esi, align 4
  %v2_1b4c = add i32 %v1_1b4c, 436
  %v3_1b4c = inttoptr i32 %v2_1b4c to i32*
  %v1_1b56 = load i32, i32* @esi, align 4
  %v2_1b56 = add i32 %v1_1b56, 440
  %v3_1b56 = inttoptr i32 %v2_1b56 to i32*
  %v1_1b60 = load i32, i32* @esi, align 4
  %v2_1b60 = add i32 %v1_1b60, 444
  %v3_1b60 = inttoptr i32 %v2_1b60 to i32*
  %v4_1b66 = urem i32 %tmp11, 65536
  store i32 %v4_1b66, i32* %eax.global-to-local, align 8
  %v1_1b6b = trunc i32 %tmp11 to i16
  %v2_1b6b = load i32, i32* @esi, align 4
  %v3_1b6b = add i32 %v2_1b6b, ptrtoint (i16** @global_var_1c0.2442 to i32)
  %v4_1b6b = inttoptr i32 %v3_1b6b to i16*
  store i16 %v1_1b6b, i16* %v4_1b6b, align 2
  %v0_1b72 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b72

dec_label_pc_1b77:                                ; preds = %dec_label_pc_1ad2
  %v1_1b7b = add i32 %v0_1ad2, 648
  store i32 %v1_1b7b, i32* %eax.global-to-local, align 8
  %v0_1b81 = load i32, i32* @edi, align 4
  %v3_1b88 = inttoptr i32 %v1_1b7b to i32*
  %v4_1b88 = call i32 @_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* %v3_1b88, i32 %v3_1ad2, i32 %v0_1b81)
  store i32 %v4_1b88, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b3e

; uselistorder directives
  uselistorder i32 %v3_1ad2, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13 }
  uselistorder i32 %tmp11, { 1, 0 }
}

define i32 @function_1b8f() local_unnamed_addr {
dec_label_pc_1b8f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b95() local_unnamed_addr {
dec_label_pc_1b95:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b95
}

define void @_ZN5CNode21CloseSocketDisconnectEv(i32 %this) local_unnamed_addr {
dec_label_pc_1bb0:
  %zf.global-to-local = alloca i1, align 1
  store i32 %this, i32* @ebx, align 4
  %v0_1bbe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1bd2 = add i32 %this, 8
  %v2_1bd2 = inttoptr i32 %v1_1bd2 to i32*
  %v3_1bd2 = load i32, i32* %v2_1bd2, align 4
  %v13_1bd2 = icmp eq i32 %v3_1bd2, -1
  store i1 %v13_1bd2, i1* %zf.global-to-local, align 1
  %v1_1bda = add i32 %this, ptrtoint (i8** @global_var_1d1.2443 to i32)
  %v2_1bda = inttoptr i32 %v1_1bda to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1bda, align 1
  %v0_1be1 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1be1, label %bb, label %dec_label_pc_1be3

bb:                                               ; preds = %dec_label_pc_1bb0
  %v2_1be1 = trunc i32 %v0_1bbe to i8
  %v3_1be1 = call i32 @function_1c0c(i8 %v2_1be1)
  br label %dec_label_pc_1be3

dec_label_pc_1be3:                                ; preds = %bb, %dec_label_pc_1bb0
  ret void
}

define i32 @function_1c05(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c05:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c0c(i8 %arg1) local_unnamed_addr {
dec_label_pc_1c0c:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_68 = alloca i32, align 4
  %stack_var_52 = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_84 = alloca i32, align 4
  %v0_1c0c = load i32, i32* @ebx, align 4
  %v1_1c0c = add i32 %v0_1c0c, 260
  %v7_1c3d = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_84, i32 %v1_1c0c, i32 ptrtoint ([12 x i8]* @global_var_a0b1.2446 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v7_1c3d, i32* @eax, align 8
  %v10_1c42 = icmp eq i8 %arg1, 0
  %v1_1c47 = icmp eq i1 %v10_1c42, false
  %v0_1c88 = load i32, i32* @ebx, align 4
  br i1 %v1_1c47, label %dec_label_pc_1c88, label %dec_label_pc_1c49

dec_label_pc_1c49:                                ; preds = %dec_label_pc_1c0c
  %v12_1c49 = icmp eq i32 %v0_1c88, 1936944740
  br i1 %v12_1c49, label %bb, label %dec_label_pc_1c55

bb:                                               ; preds = %dec_label_pc_1c49
  %v1_1c4f = call i32 @function_1d6d()
  br label %dec_label_pc_1c55

dec_label_pc_1c55:                                ; preds = %bb, %dec_label_pc_1c49
  %v2_1c58 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_84)
  %v1_1c61 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c61 = xor i32 %v1_1c61, %tmp20
  %v3_1c61 = icmp eq i32 %v2_1c61, 0
  store i32 %v2_1c61, i32* @eax, align 8
  %v1_1c68 = icmp eq i1 %v3_1c61, false
  br i1 %v1_1c68, label %bb33, label %dec_label_pc_1c6e

bb33:                                             ; preds = %dec_label_pc_1c55
  %v2_1c68 = call i32 @function_1d94()
  br label %dec_label_pc_1c6e

dec_label_pc_1c6e:                                ; preds = %bb33, %dec_label_pc_1c55
  %v0_1c81 = phi i32 [ %v2_1c68, %bb33 ], [ %v2_1c61, %dec_label_pc_1c55 ]
  ret i32 %v0_1c81

dec_label_pc_1c88:                                ; preds = %dec_label_pc_1c0c
  %v1_1c8e = add i32 %v0_1c88, 228
  %v2_1c8e = inttoptr i32 %v1_1c8e to i32*
  %v3_1c8e = load i32, i32* %v2_1c8e, align 4
  %v1_1c9a = add i32 %v0_1c88, ptrtoint (i8** @global_var_f8.2448 to i32)
  %v2_1c9a = inttoptr i32 %v1_1c9a to i32*
  %v3_1c9a = load i32, i32* %v2_1c9a, align 4
  store i32 %v3_1c9a, i32* %edx.global-to-local, align 4
  store i32 %v3_1c8e, i32* %stack_var_52, align 4
  %v1_1cbc = add i32 %v0_1c88, ptrtoint (i32* @global_var_f4.2449 to i32)
  %v2_1cbc = inttoptr i32 %v1_1cbc to i32*
  %v3_1cbc = load i32, i32* %v2_1cbc, align 4
  store i32 %v3_1cbc, i32* %stack_var_68, align 4
  %v2_1cf0 = ptrtoint i32* %stack_var_52 to i32
  %v1_1cf8 = add i32 %v0_1c88, ptrtoint (i32* @global_var_dc.2450 to i32)
  %v3_1d01 = ptrtoint i32* %stack_var_68 to i32
  %v4_1d01 = call i32 @_ZNSt5dequeI11CNetMessageSaIS0_EE19_M_destroy_data_auxESt15_Deque_iteratorIS0_RS0_PS0_ES6_(i32 %v1_1cf8, i32 %v2_1cf0, i32 %v3_1d01)
  %v0_1d06 = load i32, i32* @ebx, align 4
  %v1_1d06 = add i32 %v0_1d06, 256
  %v2_1d06 = inttoptr i32 %v1_1d06 to i32*
  %v3_1d06 = load i32, i32* %v2_1d06, align 4
  %v1_1d0c = add i32 %v3_1d06, 4
  store i32 %v1_1d0c, i32* %edx.global-to-local, align 4
  %v0_1d0f = load i32, i32* @edi, align 4
  %v1_1d0f = add i32 %v0_1d0f, 4
  %tmp37 = icmp ugt i32 %v1_1d0c, %v1_1d0f
  br i1 %tmp37, label %dec_label_pc_1d16, label %bb35

bb35:                                             ; preds = %dec_label_pc_1c88
  %v3_1d14 = call i32 @function_1d41()
  %v0_1d1a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1d16

dec_label_pc_1d16:                                ; preds = %dec_label_pc_1c88, %bb35
  %v0_1d20 = phi i32 [ %v3_1d14, %bb35 ], [ %v1_1d0f, %dec_label_pc_1c88 ]
  %v0_1d1a = phi i32 [ %v0_1d1a.pre, %bb35 ], [ %v1_1d0c, %dec_label_pc_1c88 ]
  store i32 %v0_1d1a, i32* @edi, align 4
  %v1_1d28 = inttoptr i32 %v0_1d20 to i32*
  %v2_1d28 = load i32, i32* %v1_1d28, align 4
  %v1_1d2a = add i32 %v0_1d20, 4
  store i32 %v1_1d2a, i32* @ebx, align 4
  ret i32 %v2_1d28

; uselistorder directives
  uselistorder i32 %v0_1d20, { 1, 0 }
  uselistorder i32 %v1_1d0f, { 1, 0 }
  uselistorder i32 %v1_1d0c, { 1, 0, 2 }
  uselistorder i32 %v0_1c88, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1d16, { 1, 0 }
}

define i32 @function_1d41() local_unnamed_addr {
dec_label_pc_1d41:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d45 = load i32, i32* @ebx, align 4
  %v0_1d4b = load i32, i32* @ebp, align 4
  %v2_1d4b = add i32 %v0_1d45, ptrtoint (i32* @global_var_f4.2449 to i32)
  %v3_1d4b = inttoptr i32 %v2_1d4b to i32*
  store i32 %v0_1d4b, i32* %v3_1d4b, align 4
  %v0_1d51 = load i32, i32* @edi, align 4
  %v1_1d51 = load i32, i32* @ebx, align 4
  %v2_1d51 = add i32 %v1_1d51, 256
  %v3_1d51 = inttoptr i32 %v2_1d51 to i32*
  store i32 %v0_1d51, i32* %v3_1d51, align 4
  %v0_1d57 = load i32, i32* %eax.global-to-local, align 8
  %v1_1d57 = load i32, i32* @ebx, align 4
  %v2_1d57 = add i32 %v1_1d57, ptrtoint (i8** @global_var_f8.2448 to i32)
  %v3_1d57 = inttoptr i32 %v2_1d57 to i32*
  store i32 %v0_1d57, i32* %v3_1d57, align 4
  %v1_1d61 = load i32, i32* @ebx, align 4
  %v2_1d61 = add i32 %v1_1d61, ptrtoint (i32* @global_var_fc.2422 to i32)
  %v3_1d61 = inttoptr i32 %v2_1d61 to i32*
  %v0_1d67 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d67
}

define i32 @function_1d6d() local_unnamed_addr {
dec_label_pc_1d6d:
  store i32 0, i32* bitcast ([8 x i8]* @global_var_a314.2447 to i32*), align 4
  %v0_1d77 = load i32, i32* @eax, align 8
  ret i32 %v0_1d77
}

define i32 @function_1d80() local_unnamed_addr {
dec_label_pc_1d80:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d80 = load i32, i32* @eax, align 8
  %v0_1d88 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d88 = add i32 %v0_1d88, 8
  %v2_1d88 = inttoptr i32 %v1_1d88 to i32*
  store i32 -1, i32* %v2_1d88, align 4
  %v1_1d8f = call i32 @function_1c05(i32 %v0_1d80)
  ret i32 %v1_1d8f
}

define i32 @function_1d94() local_unnamed_addr {
dec_label_pc_1d94:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d9a() local_unnamed_addr {
dec_label_pc_1d9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d9a
}

define void @_ZN5CNode11ClearBannedEv() local_unnamed_addr {
dec_label_pc_1db0:
  %v4_1dcf = call i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 ptrtoint ([19 x i8]* @global_var_9ed4.2451 to i32), i32 1818196069)
  store i32 ptrtoint ([15 x i8]* @global_var_9ed8.2431 to i32), i32* bitcast ([7 x i8]* @global_var_9ee0.2452 to i32*), align 4
  store i32 0, i32* bitcast ([11 x i8]* @global_var_9edc.2430 to i32*), align 4
  store i32 ptrtoint ([15 x i8]* @global_var_9ed8.2431 to i32), i32* bitcast ([3 x i8]* @global_var_9ee4.2453 to i32*), align 4
  store i32 0, i32* bitcast ([24 x i8]* @global_var_9ee8.2454 to i32*), align 16
  br i1 false, label %dec_label_pc_1e0d, label %dec_label_pc_1e09

dec_label_pc_1e09:                                ; preds = %dec_label_pc_1db0
  ret void

dec_label_pc_1e0d:                                ; preds = %dec_label_pc_1db0
  ret void

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_9ed8.2431 to i32), { 1, 2, 0 }
  uselistorder i32 1818196069, { 1, 0 }
}

define void @_Z14SocketSendDataP5CNode(i32 %pnode) local_unnamed_addr {
dec_label_pc_1e20:
  store i32 %pnode, i32* @ebx, align 4
  %v1_1e3a = add i32 %pnode, 68
  %v2_1e3a = inttoptr i32 %v1_1e3a to i32*
  %v3_1e3a = load i32, i32* %v2_1e3a, align 4
  %v1_1e3d = add i32 %pnode, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_1e3d = inttoptr i32 %v1_1e3d to i32*
  %v3_1e3d = load i32, i32* %v2_1e3d, align 4
  store i32 %v3_1e3d, i32* @esi, align 4
  %v1_1e40 = add i32 %pnode, 72
  %v2_1e40 = inttoptr i32 %v1_1e40 to i32*
  %v3_1e40 = load i32, i32* %v2_1e40, align 4
  store i32 %v3_1e40, i32* @ebp, align 4
  %v1_1e43 = add i32 %pnode, 44
  %v2_1e43 = inttoptr i32 %v1_1e43 to i32*
  %v3_1e43 = load i32, i32* %v2_1e43, align 4
  store i32 %v3_1e43, i32* @edx, align 4
  %v1_1e4a = add i32 %pnode, 76
  %v2_1e4a = inttoptr i32 %v1_1e4a to i32*
  %v3_1e4a = load i32, i32* %v2_1e4a, align 4
  store i32 %v3_1e4a, i32* @eax, align 8
  %v1_1e58 = add i32 %pnode, 80
  %v2_1e58 = inttoptr i32 %v1_1e58 to i32*
  %v3_1e58 = load i32, i32* %v2_1e58, align 4
  %v15_1e58 = icmp eq i32 %v3_1e58, %v3_1e3d
  br i1 %v15_1e58, label %bb, label %dec_label_pc_1e61

bb:                                               ; preds = %dec_label_pc_1e20
  %v3_1e5b = call i32 @function_1f08(i32 %v3_1e4a, i32 %v3_1e3a)
  %v0_1e61.pre = load i32, i32* @esi, align 4
  %v1_1e68.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1e61

dec_label_pc_1e61:                                ; preds = %bb, %dec_label_pc_1e20
  %v1_1e68 = phi i32 [ %v1_1e68.pre, %bb ], [ %v3_1e43, %dec_label_pc_1e20 ]
  %v0_1e61 = phi i32 [ %v0_1e61.pre, %bb ], [ %v3_1e3d, %dec_label_pc_1e20 ]
  %v1_1e61 = inttoptr i32 %v0_1e61 to i32*
  %v2_1e61 = load i32, i32* %v1_1e61, align 4
  %v1_1e63 = add i32 %v0_1e61, 4
  %v2_1e63 = inttoptr i32 %v1_1e63 to i32*
  %v3_1e63 = load i32, i32* %v2_1e63, align 4
  %v2_1e66 = sub i32 %v3_1e63, %v2_1e61
  store i32 %v2_1e66, i32* @eax, align 8
  %tmp114 = icmp ugt i32 %v2_1e66, %v1_1e68
  br i1 %tmp114, label %dec_label_pc_1e70, label %bb113

bb113:                                            ; preds = %dec_label_pc_1e61
  %v3_1e6a = call i32 @function_1ff4()
  br label %dec_label_pc_1e70

dec_label_pc_1e70:                                ; preds = %dec_label_pc_1e61, %bb113
  ret void

; uselistorder directives
  uselistorder i32 %v0_1e61, { 1, 0 }
  uselistorder i32 %v3_1e3d, { 1, 0, 2 }
  uselistorder i32 %pnode, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder label %dec_label_pc_1e70, { 1, 0 }
}

define i32 @function_1f08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f08:
  %v0_1f08 = load i32, i32* @edx, align 4
  %v1_1f08 = icmp eq i32 %v0_1f08, 0
  %v1_1f0a = icmp eq i1 %v1_1f08, false
  br i1 %v1_1f0a, label %bb, label %dec_label_pc_1f10

bb:                                               ; preds = %dec_label_pc_1f08
  %v2_1f0a = call i32 @function_201d()
  br label %dec_label_pc_1f10

dec_label_pc_1f10:                                ; preds = %bb, %dec_label_pc_1f08
  %v0_1f10 = load i32, i32* @ebx, align 4
  %v1_1f10 = add i32 %v0_1f10, 40
  %v2_1f10 = inttoptr i32 %v1_1f10 to i32*
  %v3_1f10 = load i32, i32* %v2_1f10, align 4
  %v1_1f13 = icmp eq i32 %v3_1f10, 0
  br i1 %v1_1f13, label %bb11, label %dec_label_pc_1f17

bb11:                                             ; preds = %dec_label_pc_1f10
  %v1_1f15 = call i32 @function_1f7d()
  br label %dec_label_pc_1f17

dec_label_pc_1f17:                                ; preds = %bb11, %dec_label_pc_1f10
  %v3_1f2f = phi i32 [ %v1_1f15, %bb11 ], [ %v3_1f10, %dec_label_pc_1f10 ]
  ret i32 %v3_1f2f
}

define i32 @function_1f7d() local_unnamed_addr {
dec_label_pc_1f7d:
  %stack_var_32 = alloca i32, align 4
  %stack_var_60 = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_76 = alloca i32, align 4
  %v2_1f81 = ptrtoint i32* %stack_var_76 to i32
  %v0_1f85 = load i32, i32* @esi, align 4
  store i32 %v0_1f85, i32* %stack_var_76, align 4
  %v0_1f99 = load i32, i32* @ebx, align 4
  %v1_1f99 = add i32 %v0_1f99, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_1f99 = inttoptr i32 %v1_1f99 to i32*
  %v3_1f99 = load i32, i32* %v2_1f99, align 4
  store i32 %v3_1f99, i32* %stack_var_60, align 4
  %v1_1fb1 = add i32 %v0_1f99, ptrtoint (i32* @global_var_38.2432 to i32)
  store i32 %v1_1fb1, i32* @ebx, align 4
  %v2_1fb8 = ptrtoint i32* %stack_var_60 to i32
  %v5_1fcf = call i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_(i32* nonnull %stack_var_32, i32 %v1_1fb1, i32 %v2_1fb8, i32 %v2_1f81)
  %v1_1fdb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fdb = xor i32 %v1_1fdb, %tmp18
  %v3_1fdb = icmp eq i32 %v2_1fdb, 0
  store i32 %v2_1fdb, i32* @eax, align 8
  %v1_1fe2 = icmp eq i1 %v3_1fdb, false
  br i1 %v1_1fe2, label %bb, label %dec_label_pc_1fe4

bb:                                               ; preds = %dec_label_pc_1f7d
  %v2_1fe2 = call i32 @function_2018()
  br label %dec_label_pc_1fe4

dec_label_pc_1fe4:                                ; preds = %bb, %dec_label_pc_1f7d
  %v0_1feb = phi i32 [ %v2_1fe2, %bb ], [ %v2_1fdb, %dec_label_pc_1f7d ]
  ret i32 %v0_1feb
}

define i32 @function_1fec() local_unnamed_addr {
dec_label_pc_1fec:
  %v0_1fec = load i32, i32* @ebx, align 4
  %v1_1fec = add i32 %v0_1fec, 44
  %v2_1fec = inttoptr i32 %v1_1fec to i32*
  %v3_1fec = load i32, i32* %v2_1fec, align 4
  store i32 %v3_1fec, i32* @edx, align 4
  %v2_1fef = call i32 @function_1f08(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 %v2_1fef

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1f08, { 1, 0 }
}

define i32 @function_1ff4() local_unnamed_addr {
dec_label_pc_1ff4:
  %v0_2013 = load i32, i32* @eax, align 8
  ret i32 %v0_2013
}

define i32 @function_2018() local_unnamed_addr {
dec_label_pc_2018:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_201d() local_unnamed_addr {
dec_label_pc_201d:
  %v3_2035 = load i32, i32* @eax, align 8
  ret i32 %v3_2035
}

define i32 @function_2041() local_unnamed_addr {
dec_label_pc_2041:
  %v2_2041 = call i1 @_Z8RecvLinejRSs(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v4_2041 = sext i1 %v2_2041 to i32
  ret i32 %v4_2041
}

define i1 @_Z8RecvLinejRSs(i32 %hSocket, i32 %strLine) local_unnamed_addr {
dec_label_pc_2050:
  store i32 %strLine, i32* @esi, align 4
  ret i1 false
}

define i32 @function_2088() local_unnamed_addr {
dec_label_pc_2088:
  %ebx.global-to-local = alloca i32, align 4
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %v0_2098 = load i32, i32* @edi, align 4
  %v0_20a4 = load i32, i32* @eax, align 8
  store i32 %v0_20a4, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp slt i32 %v0_20a4, 1
  br i1 %tmp17, label %bb, label %dec_label_pc_20aa

bb:                                               ; preds = %dec_label_pc_2088
  %tmp18 = urem i32 %v0_2098, 2
  %v4_2098 = icmp ne i32 %tmp18, 0
  %v6_20a8 = sext i1 %v4_2098 to i32
  %v10_20a8 = call i32 @function_2120(i32 %v6_20a8, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), i32 0)
  store i32 %v10_20a8, i32* @eax, align 8
  br label %dec_label_pc_20aa

dec_label_pc_20aa:                                ; preds = %bb, %dec_label_pc_2088
  %v4_20aa = zext i8 %tmp8 to i32
  store i32 %v4_20aa, i32* %ebx.global-to-local, align 4
  %v11_20af = icmp eq i8 %tmp8, 10
  br i1 %v11_20af, label %bb20, label %dec_label_pc_20b4

bb20:                                             ; preds = %dec_label_pc_20aa
  %v1_20b2 = call i32 @function_2088()
  %v0_20b4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_20b4

dec_label_pc_20b4:                                ; preds = %bb20, %dec_label_pc_20aa
  %v0_20e5 = phi i32 [ %v0_20b4.pre, %bb20 ], [ %v4_20aa, %dec_label_pc_20aa ]
  %v1_20b4 = trunc i32 %v0_20e5 to i8
  %v2_20b9 = load i32, i32* @esi, align 4
  %v1_20bb = add i32 %v2_20b9, -12
  %v2_20bb = inttoptr i32 %v1_20bb to i32*
  %v3_20bb = load i32, i32* %v2_20bb, align 4
  %v1_20be = add i32 %v3_20bb, ptrtoint (i1* @global_var_1.2399 to i32)
  %v2_20c1 = add i32 %v2_20b9, -8
  %v3_20c1 = inttoptr i32 %v2_20c1 to i32*
  %v4_20c1 = load i32, i32* %v3_20c1, align 4
  %tmp22 = icmp ugt i32 %v1_20be, %v4_20c1
  br i1 %tmp22, label %dec_label_pc_20cc, label %dec_label_pc_20c6

dec_label_pc_20c6:                                ; preds = %dec_label_pc_20b4
  %v1_20c6 = add i32 %v2_20b9, -4
  %v2_20c6 = inttoptr i32 %v1_20c6 to i32*
  %v3_20c6 = load i32, i32* %v2_20c6, align 4
  %v7_20ca = icmp sgt i32 %v3_20c6, 0
  br i1 %v7_20ca, label %dec_label_pc_20cc, label %dec_label_pc_20e5

dec_label_pc_20cc:                                ; preds = %dec_label_pc_20b4, %dec_label_pc_20c6
  %v3_20e2 = load i32, i32* %v2_20bb, align 4
  br label %dec_label_pc_20e5

dec_label_pc_20e5:                                ; preds = %dec_label_pc_20c6, %dec_label_pc_20cc
  %v3_20e5 = phi i32 [ %v3_20bb, %dec_label_pc_20c6 ], [ %v3_20e2, %dec_label_pc_20cc ]
  %v4_20e5 = mul i32 %v3_20e5, ptrtoint (i1* @global_var_1.2399 to i32)
  %v5_20e5 = add i32 %v4_20e5, %v2_20b9
  %v6_20e5 = inttoptr i32 %v5_20e5 to i8*
  store i8 %v1_20b4, i8* %v6_20e5, align 1
  %v2_20e8 = load i32, i32* @esi, align 4
  ret i32 %v2_20e8

; uselistorder directives
  uselistorder label %dec_label_pc_20e5, { 1, 0 }
  uselistorder label %dec_label_pc_20cc, { 1, 0 }
}

define i32 @function_2120(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2120:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2170() local_unnamed_addr {
dec_label_pc_2170:
  %ebx.global-to-local = alloca i32, align 4
  %v10_2172 = load i32, i32* %ebx.global-to-local, align 4
  %v11_2172 = and i32 %v10_2172, -256
  store i32 %v11_2172, i32* %ebx.global-to-local, align 4
  %v3_2187 = call i32 @_Z10MilliSleepx(i64 sext (i32 ptrtoint (i32* @global_var_a.2461 to i32) to i64), i32 0)
  store i32 %v3_2187, i32* @eax, align 8
  %v0_218c = call i32 @function_2088()
  ret i32 %v0_218c

; uselistorder directives
  uselistorder i32 ()* @function_2088, { 1, 0 }
}

define i32 @function_219d() local_unnamed_addr {
dec_label_pc_219d:
  ret i32 0
}

define i32 @function_21a4() local_unnamed_addr {
dec_label_pc_21a4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_21a4 = load i32, i32* %eax.global-to-local, align 8
  %v1_21a4 = add i32 %v0_21a4, -4
  %v2_21a4 = inttoptr i32 %v1_21a4 to i32*
  store i32 0, i32* %v2_21a4, align 4
  %v0_21ab = load i32, i32* %ecx.global-to-local, align 4
  %v1_21ab = load i32, i32* %eax.global-to-local, align 8
  %v2_21ab = add i32 %v1_21ab, -12
  %v3_21ab = inttoptr i32 %v2_21ab to i32*
  store i32 %v0_21ab, i32* %v3_21ab, align 4
  %v0_21ae = load i32, i32* %eax.global-to-local, align 8
  %v1_21ae = load i32, i32* %ecx.global-to-local, align 4
  %v2_21ae = mul i32 %v1_21ae, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_21ae = add i32 %v2_21ae, %v0_21ae
  %v4_21ae = inttoptr i32 %v3_21ae to i8*
  store i8 0, i8* %v4_21ae, align 1
  %v2_21b2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_21b2, i32* %eax.global-to-local, align 8
  ret i32 %v2_21b2

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2 }
}

define i32 @function_21b9() local_unnamed_addr {
dec_label_pc_21b9:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_21bd() local_unnamed_addr {
dec_label_pc_21bd:
  %eax.global-to-local = alloca i32, align 4
  %v0_21bd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21bd
}

define i1 @_Z16GetMyExternalIP2RK8CServicePKcS3_R8CNetAddr(i32 %addrConnect, i8* %pszGet, i8* %pszKeyword, %CNetAddr %ipRet) local_unnamed_addr {
dec_label_pc_21c0:
  ret i1 false
}

define i32 @function_2231(i32 %arg1) local_unnamed_addr {
dec_label_pc_2231:
  %v1_2235 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2235 = icmp eq i32 %v1_2235, %arg1
  %v0_223c = load i32, i32* @edi, align 4
  store i32 %v0_223c, i32* @eax, align 8
  %v1_223e = icmp eq i1 %v3_2235, false
  br i1 %v1_223e, label %bb, label %dec_label_pc_2244

bb:                                               ; preds = %dec_label_pc_2231
  %v2_223e = call i32 @function_2577()
  br label %dec_label_pc_2244

dec_label_pc_2244:                                ; preds = %bb, %dec_label_pc_2231
  %v0_224b = phi i32 [ %v2_223e, %bb ], [ %v0_223c, %dec_label_pc_2231 ]
  ret i32 %v0_224b
}

define i32 @function_2250(i32 %arg1) local_unnamed_addr {
dec_label_pc_2250:
  %stack_var_36 = alloca i32, align 4
  %v2_2253 = ptrtoint i32* %stack_var_36 to i32
  store i32 12, i32* %stack_var_36, align 4
  br label %dec_label_pc_2280

dec_label_pc_2280:                                ; preds = %dec_label_pc_2298, %dec_label_pc_2250
  %v2_228b = call i1 @_Z8RecvLinejRSs(i32 %arg1, i32 %v2_2253)
  %v5_2290 = icmp eq i1 %v2_228b, false
  br i1 %v5_2290, label %bb, label %dec_label_pc_2298

bb:                                               ; preds = %dec_label_pc_2280
  %v1_2292 = call i32 @function_2525()
  br label %dec_label_pc_2298

dec_label_pc_2298:                                ; preds = %bb, %dec_label_pc_2280
  %v3_2298 = load i32, i32* %stack_var_36, align 4
  %v1_229c = add i32 %v3_2298, -12
  %v2_229c = inttoptr i32 %v1_229c to i32*
  %v3_229c = load i32, i32* %v2_229c, align 4
  %v1_229f = icmp eq i32 %v3_229c, 0
  %v1_22a1 = icmp eq i1 %v1_229f, false
  br i1 %v1_22a1, label %dec_label_pc_2280, label %dec_label_pc_22a3

dec_label_pc_22a3:                                ; preds = %dec_label_pc_2298
  br label %dec_label_pc_22a8

dec_label_pc_22a8:                                ; preds = %dec_label_pc_22c8, %dec_label_pc_22a3
  %v2_22b3 = call i1 @_Z8RecvLinejRSs(i32 %arg1, i32 %v2_2253)
  %v4_22b3 = sext i1 %v2_22b3 to i32
  %v5_22b8 = icmp eq i1 %v2_22b3, false
  br i1 %v5_22b8, label %bb107, label %dec_label_pc_22c0

bb107:                                            ; preds = %dec_label_pc_22a8
  %v1_22ba = call i32 @function_2541()
  br label %dec_label_pc_22c0

dec_label_pc_22c0:                                ; preds = %bb107, %dec_label_pc_22a8
  %v0_22e84 = phi i32 [ %v1_22ba, %bb107 ], [ %v4_22b3, %dec_label_pc_22a8 ]
  %v0_22c0 = load i32, i32* @ebx, align 4
  %v1_22c0 = icmp eq i32 %v0_22c0, 0
  br i1 %v1_22c0, label %bb108, label %dec_label_pc_22c8

bb108:                                            ; preds = %dec_label_pc_22c0
  %v1_22c2 = call i32 @function_2356()
  br label %dec_label_pc_22c8

dec_label_pc_22c8:                                ; preds = %bb108, %dec_label_pc_22c0
  %v3_22ed = phi i32 [ %v1_22c2, %bb108 ], [ %v0_22e84, %dec_label_pc_22c0 ]
  %v10_22e8 = icmp eq i32 %v3_22ed, -1
  br i1 %v10_22e8, label %dec_label_pc_22a8, label %dec_label_pc_22ed

dec_label_pc_22ed:                                ; preds = %dec_label_pc_22c8
  ret i32 %v3_22ed

; uselistorder directives
  uselistorder i32 %v3_22ed, { 1, 0 }
  uselistorder i1 (i32, i32)* @_Z8RecvLinejRSs, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2356() local_unnamed_addr {
dec_label_pc_2356:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v10_235a = icmp eq i32 %tmp7, -1
  %v1_235d = icmp eq i1 %v10_235a, false
  br i1 %v1_235d, label %bb, label %dec_label_pc_2363

bb:                                               ; preds = %dec_label_pc_2356
  %v2_235d = call i32 @function_2510()
  br label %dec_label_pc_2363

dec_label_pc_2363:                                ; preds = %bb, %dec_label_pc_2356
  %v3_237b = phi i32 [ %v2_235d, %bb ], [ %tmp7, %dec_label_pc_2356 ]
  ret i32 %v3_237b

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_2428() local_unnamed_addr {
dec_label_pc_2428:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2498(i32 %arg1) local_unnamed_addr {
dec_label_pc_2498:
  %v0_2498 = load i32, i32* @esi, align 4
  %v1_24a0 = call i32 @function_2231(i32 %v0_2498)
  ret i32 %v1_24a0
}

define i32 @function_24ea() local_unnamed_addr {
dec_label_pc_24ea:
  %v0_24ea = call i32 @function_2428()
  ret i32 %v0_24ea
}

define i32 @function_2507() local_unnamed_addr {
dec_label_pc_2507:
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* @edi, align 4
  %v1_250c = call i32 @function_2498(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_250c
}

define i32 @function_2510() local_unnamed_addr {
dec_label_pc_2510:
  %v0_2520 = load i32, i32* @eax, align 8
  ret i32 %v0_2520
}

define i32 @function_2525() local_unnamed_addr {
dec_label_pc_2525:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v10_2529 = icmp eq i32 %tmp4, -1
  %v1_252c = icmp eq i1 %v10_2529, false
  br i1 %v1_252c, label %bb, label %dec_label_pc_252e

bb:                                               ; preds = %dec_label_pc_2525
  %v2_252c = call i32 @function_2565()
  br label %dec_label_pc_252e

dec_label_pc_252e:                                ; preds = %bb, %dec_label_pc_2525
  %v3_252e = phi i32 [ %v2_252c, %bb ], [ %tmp4, %dec_label_pc_2525 ]
  ret i32 %v3_252e

; uselistorder directives
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_253a() local_unnamed_addr {
dec_label_pc_253a:
  %eax.global-to-local = alloca i32, align 4
  %v0_253a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_253a, i32* @edi, align 4
  %v1_253c = call i32 @function_2498(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_253c, i32* %eax.global-to-local, align 8
  ret i32 %v1_253c
}

define i32 @function_2541() local_unnamed_addr {
dec_label_pc_2541:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @edi, align 4
  %v10_2547 = icmp eq i32 %tmp2, -1
  br i1 %v10_2547, label %bb, label %dec_label_pc_2550

bb:                                               ; preds = %dec_label_pc_2541
  %v2_254a = call i32 @function_2498(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_2550

dec_label_pc_2550:                                ; preds = %bb, %dec_label_pc_2541
  %v0_2550 = phi i32 [ %v2_254a, %bb ], [ %tmp2, %dec_label_pc_2541 ]
  %v1_2560 = call i32 @function_2498(i32 %v0_2550)
  ret i32 %v1_2560

; uselistorder directives
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder i32 (i32)* @function_2498, { 1, 0, 3, 2 }
}

define i32 @function_2565() local_unnamed_addr {
dec_label_pc_2565:
  %v3_2565 = load i32, i32* @eax, align 8
  ret i32 %v3_2565
}

define i32 @function_256d() local_unnamed_addr {
dec_label_pc_256d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2575 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2575
}

define i32 @function_2577() local_unnamed_addr {
dec_label_pc_2577:
  %v0_257c = load i32, i32* @eax, align 8
  ret i32 %v0_257c
}

define i32 @function_2590() local_unnamed_addr {
dec_label_pc_2590:
  %eax.global-to-local = alloca i32, align 4
  %v0_2598 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2598
}

define i32 @function_25a6() local_unnamed_addr {
dec_label_pc_25a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_25a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25a6
}

define i32 @function_25b6() local_unnamed_addr {
dec_label_pc_25b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_25b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25b6
}

define i32 @function_25b9() local_unnamed_addr {
dec_label_pc_25b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_25b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25b9
}

define i32 @function_25c2() local_unnamed_addr {
dec_label_pc_25c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_25c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25c2
}

define i1 @_Z15GetMyExternalIPR8CNetAddr(%CNetAddr %ipRet) local_unnamed_addr {
dec_label_pc_25e0:
  %tmp = extractvalue %CNetAddr %ipRet, 0
  %tmp4 = extractvalue [16 x i8] %tmp, 0
  %tmp5 = sext i8 %tmp4 to i32
  %stack_var_-104 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_25e9 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_25e9, i32* @edi, align 4
  store i32 %tmp5, i32* @ebp, align 4
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* @ebx, align 4
  br i1 icmp eq (i32 sub (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 1), i32 0), label %bb, label %dec_label_pc_2626

bb:                                               ; preds = %dec_label_pc_25e0
  %v4_2620 = call i32 @function_26c8(i32 %v2_25e9, i32 80, i32 0)
  %phitmp = urem i32 %v4_2620, 2
  %phitmp3 = icmp ne i32 %phitmp, 0
  br label %dec_label_pc_2626

dec_label_pc_2626:                                ; preds = %bb, %dec_label_pc_25e0
  %v4_262d = phi i1 [ %phitmp3, %bb ], [ false, %dec_label_pc_25e0 ]
  ret i1 %v4_262d
}

define i32 @function_2674(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2674:
  %v0_2674 = load i32, i32* @ebp, align 4
  %v4_2674 = trunc i32 %v0_2674 to i8
  %v0_2678 = load i32, i32* @edx, align 4
  %v4_2678 = inttoptr i32 %v0_2678 to i8*
  %v0_267c = load i32, i32* @ecx, align 4
  %v4_267c = inttoptr i32 %v0_267c to i8*
  %v0_2680 = load i32, i32* @edi, align 4
  %v10_2683 = insertvalue [16 x i8] undef, i8 %v4_2674, 0
  %v11_2683 = insertvalue %CNetAddr undef, [16 x i8] %v10_2683, 0
  %v12_2683 = call i1 @_Z16GetMyExternalIP2RK8CServicePKcS3_R8CNetAddr(i32 %v0_2680, i8* %v4_267c, i8* %v4_2678, %CNetAddr %v11_2683)
  %v5_2688 = icmp eq i1 %v12_2683, false
  %v1_268a = icmp eq i1 %v5_2688, false
  br i1 %v1_268a, label %bb, label %dec_label_pc_2690

bb:                                               ; preds = %dec_label_pc_2674
  %v2_268a = call i32 @function_27b0()
  br label %dec_label_pc_2690

dec_label_pc_2690:                                ; preds = %bb, %dec_label_pc_2674
  store i32 0, i32* @eax, align 8
  %v1_26ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26ae = xor i32 %v1_26ae, %arg1
  %v3_26ae = icmp eq i32 %v2_26ae, 0
  store i32 %v2_26ae, i32* @edx, align 4
  %v1_26b5 = icmp eq i1 %v3_26ae, false
  br i1 %v1_26b5, label %bb18, label %dec_label_pc_26bb

bb18:                                             ; preds = %dec_label_pc_2690
  %v2_26b5 = call i32 @function_27ba()
  br label %dec_label_pc_26bb

dec_label_pc_26bb:                                ; preds = %bb18, %dec_label_pc_2690
  %v0_26c2 = phi i32 [ %v2_26b5, %bb18 ], [ 0, %dec_label_pc_2690 ]
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v0_26c2
}

define i32 @function_26c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26c8:
  %stack_var_72 = alloca i32, align 4
  %stack_var_54 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_54, align 4
  %v0_26e0 = load i32, i32* @esi, align 4
  %v10_26e0 = icmp eq i32 %v0_26e0, 1
  store i32 ptrtoint ([9 x i8]* @global_var_a14e.2466 to i32), i32* @edx, align 4
  store i32 ptrtoint ([128 x i8]* @global_var_d8dc.2467 to i32), i32* @ecx, align 4
  %v1_2713 = icmp eq i1 %v10_26e0, false
  br i1 %v1_2713, label %bb, label %dec_label_pc_2719

bb:                                               ; preds = %dec_label_pc_26c8
  %v2_26c8 = ptrtoint i32* %stack_var_54 to i32
  %v5_2713 = call i32 @function_2674(i32 %v2_26c8, i32 ptrtoint ([13 x i8]* @global_var_a157.2465 to i32))
  br label %dec_label_pc_2719

dec_label_pc_2719:                                ; preds = %bb, %dec_label_pc_26c8
  %v2_2731 = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_2731

; uselistorder directives
  uselistorder i32* %stack_var_54, { 1, 0 }
}

define i32 @function_2750(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i16 %arg5) local_unnamed_addr {
dec_label_pc_2750:
  %eax.global-to-local = alloca i32, align 4
  %v0_2750 = load i32, i32* @ebx, align 4
  %v1_2750 = add i32 %v0_2750, -1961352108
  %v2_2750 = inttoptr i32 %v1_2750 to i32*
  %v3_2750 = load i32, i32* %v2_2750, align 4
  %v4_2750 = sub i32 %v3_2750, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_2750, i32* %v2_2750, align 4
  %v0_2757 = load i32, i32* %eax.global-to-local, align 8
  %v1_2757 = trunc i32 %v0_2757 to i8
  %v2_2757 = and i8 %v1_2757, 28
  %v3_2757 = icmp eq i8 %v2_2757, 0
  %v8_2757 = zext i8 %v2_2757 to i32
  %v10_2757 = and i32 %v0_2757, -256
  %v11_2757 = or i32 %v8_2757, %v10_2757
  store i32 %v11_2757, i32* %eax.global-to-local, align 8
  br i1 %v3_2757, label %bb, label %dec_label_pc_2761

bb:                                               ; preds = %dec_label_pc_2750
  %v3_275b = call i32 @function_2674(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  store i32 %v3_275b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2761

dec_label_pc_2761:                                ; preds = %bb, %dec_label_pc_2750
  %v4_2781 = zext i16 %arg5 to i32
  store i32 %v4_2781, i32* %eax.global-to-local, align 8
  %v5_278b = call i32 @function_2674(i32 %arg1, i32 %arg2)
  store i32 %v5_278b, i32* %eax.global-to-local, align 8
  ret i32 %v5_278b

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32)* @function_2674, { 2, 1, 0 }
}

define i32 @function_2790() local_unnamed_addr {
dec_label_pc_2790:
  %eax.global-to-local = alloca i32, align 4
  %v0_27a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27a8
}

define i32 @function_27b0() local_unnamed_addr {
dec_label_pc_27b0:
  ret i32 ptrtoint (i1* @global_var_1.2399 to i32)
}

define i32 @function_27ba() local_unnamed_addr {
dec_label_pc_27ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define void @_Z13DumpAddressesv() local_unnamed_addr {
dec_label_pc_27c0:
  %v0_27c3 = load i32, i32* @ebx, align 4
  %v0_27cb = load i32, i32* @esi, align 4
  %v0_27cf = load i32, i32* @edi, align 4
  %v0_27d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v4_27df = call i32 @_Z13GetTimeMillisv(i32 %v0_27d3, i32 %v0_27c3, i32 %v0_27cb, i32 %v0_27cf)
  ret void
}

define i32 @function_2836(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2836:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2836 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2836 = add i32 %v0_2836, 1696343108
  %v2_2836 = inttoptr i32 %v1_2836 to i32*
  %v3_2836 = load i32, i32* %v2_2836, align 4
  %v4_2836 = add i32 %v3_2836, -1
  store i32 %v4_2836, i32* %v2_2836, align 4
  %v0_283c = load i32, i32* %eax.global-to-local, align 8
  %v1_283c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_283c = xor i32 %v1_283c, %v0_283c
  %v3_283c = icmp eq i32 %v2_283c, 0
  store i32 %v2_283c, i32* %eax.global-to-local, align 8
  %v1_2842 = icmp eq i1 %v3_283c, false
  br i1 %v1_2842, label %dec_label_pc_2854, label %dec_label_pc_2844

dec_label_pc_2844:                                ; preds = %dec_label_pc_2836
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_283c

dec_label_pc_2854:                                ; preds = %dec_label_pc_2836
  ret i32 %v2_283c

; uselistorder directives
  uselistorder i32 %v2_283c, { 1, 0, 2, 3 }
}

define i1 @_Z8StopNodev() local_unnamed_addr {
dec_label_pc_2870:
  ret i1 false
}

define i32 @function_288d() local_unnamed_addr {
dec_label_pc_288d:
  %eax.global-to-local = alloca i32, align 4
  %v0_288f = load i32, i32* %eax.global-to-local, align 8
  %v1_288f = trunc i32 %v0_288f to i8
  %v2_288f = add i8 %v1_288f, 36
  %v16_288f = zext i8 %v2_288f to i32
  %v18_288f = and i32 %v0_288f, -256
  %v19_288f = or i32 %v16_288f, %v18_288f
  store i32 %v19_288f, i32* %eax.global-to-local, align 8
  %v1_2891 = inttoptr i32 %v19_288f to i8*
  %v2_2891 = load i8, i8* %v1_2891, align 1
  %v5_2891 = add i8 %v2_2891, %v2_288f
  store i8 %v5_2891, i8* %v1_2891, align 1
  %v0_2893 = load i32, i32* %eax.global-to-local, align 8
  %v1_2893 = inttoptr i32 %v0_2893 to i8*
  %v2_2893 = load i8, i8* %v1_2893, align 1
  %v4_2893 = trunc i32 %v0_2893 to i8
  %v5_2893 = add i8 %v2_2893, %v4_2893
  store i8 %v5_2893, i8* %v1_2893, align 1
  call void @MapPort(i1 ptrtoint (i32* @1 to i1))
  store i32 ptrtoint (i32* @1 to i32), i32* @eax, align 8
  store i32 1852793710, i32* @ebx, align 4
  %v0_28a9 = call i32 @function_28b6()
  store i32 %v0_28a9, i32* %eax.global-to-local, align 8
  ret i32 %v0_28a9
}

define i32 @function_28b0() local_unnamed_addr {
dec_label_pc_28b0:
  %eax.global-to-local = alloca i32, align 4
  %v1_28b0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_28b0
}

define i32 @function_28b6() local_unnamed_addr {
dec_label_pc_28b6:
  %v3_28b9 = load i32, i32* @eax, align 8
  ret i32 %v3_28b9
}

define i32 @function_2909() local_unnamed_addr {
dec_label_pc_2909:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v3_2918 = call i32 @_Z10MilliSleepx(i64 50, i32 0)
  call void @_Z13DumpAddressesv()
  %v1_292b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_292b = icmp eq i32 %v1_292b, %tmp8
  %v1_2932 = icmp eq i1 %v3_292b, false
  br i1 %v1_2932, label %bb, label %dec_label_pc_2934

bb:                                               ; preds = %dec_label_pc_2909
  %v2_2932 = call i32 @function_2977()
  br label %dec_label_pc_2934

dec_label_pc_2934:                                ; preds = %bb, %dec_label_pc_2909
  %v0_293a = phi i32 [ %v2_2932, %bb ], [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_2909 ]
  ret i32 %v0_293a
}

define i32 @function_2977() local_unnamed_addr {
dec_label_pc_2977:
  %v0_2980 = call i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26()
  ret i32 %v0_2980
}

define void @_Z10AddOneShotSs(i32 %strDest) local_unnamed_addr {
dec_label_pc_29ef:
  %stack_var_-24 = alloca i32, align 4
  %v9_29d4 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-24, i32 ptrtoint ([15 x i8]* @global_var_9fe0.2473 to i32), i32 ptrtoint ([13 x i8]* @global_var_a1a2.2472 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  ret void
}

define i32 @function_29fa() local_unnamed_addr {
dec_label_pc_29fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_29fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29fa
}

define i32 @function_2a00() local_unnamed_addr {
dec_label_pc_2a00:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_2a00 = load i32, i32* @eax, align 8
  %v1_2a00 = add i32 %v0_2a00, 4
  store i32 %v1_2a00, i32* bitcast ([8 x i8]* @global_var_a278.2475 to i32*), align 4
  %v0_2a08 = load i32, i32* @ebx, align 4
  %v1_2a0b = inttoptr i32 %v0_2a08 to i32*
  %v2_2a0b = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_2a0b)
  %v1_2a14 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a14 = xor i32 %v1_2a14, %tmp6
  %v3_2a14 = icmp eq i32 %v2_2a14, 0
  store i32 %v2_2a14, i32* @eax, align 8
  %v1_2a1b = icmp eq i1 %v3_2a14, false
  br i1 %v1_2a1b, label %bb, label %dec_label_pc_2a1d

bb:                                               ; preds = %dec_label_pc_2a00
  %v2_2a1b = call i32 @function_2a42()
  br label %dec_label_pc_2a1d

dec_label_pc_2a1d:                                ; preds = %bb, %dec_label_pc_2a00
  %v0_2a22 = phi i32 [ %v2_2a1b, %bb ], [ %v2_2a14, %dec_label_pc_2a00 ]
  ret i32 %v0_2a22
}

define i32 @function_2a28() local_unnamed_addr {
dec_label_pc_2a28:
  store i32 0, i32* @eax, align 8
  %v0_2a2a = call i32 @function_2a00()
  ret i32 %v0_2a2a
}

define i32 @function_2a30() local_unnamed_addr {
dec_label_pc_2a30:
  %v0_2a30 = load i32, i32* @esi, align 4
  %v3_2a3b = call i32 @_ZNSt5dequeISsSaISsEE16_M_push_back_auxERKSs(i32* nonnull @global_var_a260.2476, i32 %v0_2a30)
  ret i32 %v3_2a3b
}

define i32 @function_2a42() local_unnamed_addr {
dec_label_pc_2a42:
  %v0_2a49 = load i32, i32* @ebx, align 4
  %v1_2a4c = inttoptr i32 %v0_2a49 to i32*
  %v2_2a4c = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_2a4c)
  ret i32 %v2_2a4c
}

define void @_Z20ThreadDNSAddressSeedv() local_unnamed_addr {
dec_label_pc_2a60:
  ret void
}

define i32 @function_2a86() local_unnamed_addr {
dec_label_pc_2a86:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a86 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a86
}

define i32 @function_2ad4() local_unnamed_addr {
dec_label_pc_2ad4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ae3() local_unnamed_addr {
dec_label_pc_2ae3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2af2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2af2:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2af2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2af2 = add i32 %v0_2af2, 11281556
  %v2_2af2 = inttoptr i32 %v1_2af2 to i32*
  %v3_2af2 = load i32, i32* %v2_2af2, align 4
  %v4_2af2 = add i32 %v3_2af2, -1
  store i32 %v4_2af2, i32* %v2_2af2, align 4
  %v2_2af8 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2af8 = load i32, i32* @eax, align 8
  %v4_2af8 = trunc i32 %v3_2af8 to i8
  %v5_2af8 = add i8 %v4_2af8, %v2_2af8
  %v21_2af8 = inttoptr i32 %v3_2af8 to i8*
  store i8 %v5_2af8, i8* %v21_2af8, align 1
  %v0_2afa = load i32, i32* %edx.global-to-local, align 4
  %v1_2afa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2afa = xor i32 %v1_2afa, %v0_2afa
  %v3_2afa = icmp eq i32 %v2_2afa, 0
  store i32 %v2_2afa, i32* %edx.global-to-local, align 4
  %v1_2b01 = icmp eq i1 %v3_2afa, false
  br i1 %v1_2b01, label %bb, label %dec_label_pc_2af2.dec_label_pc_2b07_crit_edge

dec_label_pc_2af2.dec_label_pc_2b07_crit_edge:    ; preds = %dec_label_pc_2af2
  %v0_2b11.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2b07

bb:                                               ; preds = %dec_label_pc_2af2
  %v2_2b01 = call i32 @function_2e52()
  br label %dec_label_pc_2b07

dec_label_pc_2b07:                                ; preds = %dec_label_pc_2af2.dec_label_pc_2b07_crit_edge, %bb
  %v0_2b11 = phi i32 [ %v0_2b11.pre, %dec_label_pc_2af2.dec_label_pc_2b07_crit_edge ], [ %v2_2b01, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2b11

; uselistorder directives
  uselistorder label %dec_label_pc_2b07, { 1, 0 }
}

define i32 @function_2b82() local_unnamed_addr {
dec_label_pc_2b82:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b88 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b88
}

define i32 @function_2c8c() local_unnamed_addr {
dec_label_pc_2c8c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c90() local_unnamed_addr {
dec_label_pc_2c90:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c90 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c90
}

define i32 @function_2d2f() local_unnamed_addr {
dec_label_pc_2d2f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d2f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d2f
}

define i32 @function_2d45() local_unnamed_addr {
dec_label_pc_2d45:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d69() local_unnamed_addr {
dec_label_pc_2d69:
  %v0_2d69 = call i32 @function_2ad4()
  ret i32 %v0_2d69
}

define i32 @function_2d70() local_unnamed_addr {
dec_label_pc_2d70:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_68 = alloca i32, align 4
  %v0_2d70 = load i32, i32* %eax.global-to-local, align 8
  %v2_2d74 = ptrtoint i32* %stack_var_68 to i32
  store i32 %v2_2d74, i32* %eax.global-to-local, align 8
  %v0_2d78 = load i32, i32* @ebp, align 4
  %v4_2d7f = call i32 @_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* nonnull %stack_var_68, i32 %v0_2d70, i32 %v0_2d78)
  store i32 %v4_2d7f, i32* @eax, align 8
  %v0_2d84 = call i32 @function_2c8c()
  store i32 %v0_2d84, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d84
}

define i32 @function_2ddf() local_unnamed_addr {
dec_label_pc_2ddf:
  %v0_2ddf = call i32 @function_2d45()
  ret i32 %v0_2ddf
}

define i32 @function_2de4() local_unnamed_addr {
dec_label_pc_2de4:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_2de7 = inttoptr i32 %tmp91 to i32*
  %v2_2de7 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_2de7)
  store i32 %v2_2de7, i32* @eax, align 8
  %v0_2df0 = call i32 @function_2d45()
  ret i32 %v0_2df0

; uselistorder directives
  uselistorder i32 ()* @function_2d45, { 1, 0 }
}

define i32 @function_2df6() local_unnamed_addr {
dec_label_pc_2df6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2df6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2df6
}

define i32 @function_2dff() local_unnamed_addr {
dec_label_pc_2dff:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e33() local_unnamed_addr {
dec_label_pc_2e33:
  %v0_2e33 = call i32 @function_2dff()
  ret i32 %v0_2e33
}

define i32 @function_2e35() local_unnamed_addr {
dec_label_pc_2e35:
  %v0_2e37 = call i32 @function_2dff()
  ret i32 %v0_2e37

; uselistorder directives
  uselistorder i32 ()* @function_2dff, { 1, 0 }
}

define i32 @function_2e4b() local_unnamed_addr {
dec_label_pc_2e4b:
  %v0_2e4d = call i32 @function_2ae3()
  ret i32 %v0_2e4d
}

define i32 @function_2e52() local_unnamed_addr {
dec_label_pc_2e52:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i1 @_Z8AddLocalRK8CServicei(i32 %addr, i32 %nScore) local_unnamed_addr {
dec_label_pc_2e60:
  ret i1 false
}

define i32 @function_2eb2() local_unnamed_addr {
dec_label_pc_2eb2:
  %eax.global-to-local = alloca i32, align 4
  %v0_2eb2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eb2
}

define i32 @function_2ecc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2ecc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v0_2ecc = load i32, i32* %ebx.global-to-local, align 4
  %v1_2ecc = add i32 %v0_2ecc, 1149961452
  %v2_2ecc = inttoptr i32 %v1_2ecc to i32*
  %v3_2ecc = load i32, i32* %v2_2ecc, align 4
  %v4_2ecc = add i32 %v3_2ecc, 1
  store i32 %v4_2ecc, i32* %v2_2ecc, align 4
  %v0_2ed2 = load i32, i32* %eax.global-to-local, align 8
  %v11_2ed2 = and i32 %v0_2ed2, or (i32 zext (i8 ptrtoint (i32* @global_var_38.2432 to i8) to i32), i32 -256)
  store i32 %v11_2ed2, i32* %eax.global-to-local, align 8
  %v9_2f1f = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_48, i32 sext (i1 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i1) to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v9_2f1f, i32* %eax.global-to-local, align 8
  %v0_2f24 = load i32, i32* @ebx, align 4
  %tmp124 = urem i32 %v0_2f24, 2
  %v4_2f24 = icmp ne i32 %tmp124, 0
  %v3_2f2f = sext i1 %v4_2f24 to i32
  %v4_2f2f = call i32 @_ZNKSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEE5countERS5_(i32 ptrtoint (i32* @global_var_a2f4.2478 to i32), i32 %v3_2f2f)
  store i32 %v4_2f2f, i32* %eax.global-to-local, align 8
  %v0_2f38 = load i32, i32* @ebx, align 4
  %tmp125 = urem i32 %v0_2f38, 2
  %v4_2f38 = icmp ne i32 %tmp125, 0
  %v3_2f43 = sext i1 %v4_2f38 to i32
  %v4_2f43 = call i32 @_ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_(i32 ptrtoint (i32* @global_var_a2f4.2478 to i32), i32 %v3_2f43)
  store i32 %v4_2f43, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_2f50 = icmp eq i32 %v4_2f2f, 0
  %v0_2fb2.pre = load i32, i32* @esi, align 4
  %.pre = inttoptr i32 %v4_2f43 to i32*
  br i1 %v1_2f50, label %dec_label_pc_2fb2, label %dec_label_pc_2f54

dec_label_pc_2f54:                                ; preds = %dec_label_pc_2ecc
  %v3_2f54 = load i32, i32* %.pre, align 4
  %v5_2f56 = icmp slt i32 %v0_2fb2.pre, %v3_2f54
  br i1 %v5_2f56, label %dec_label_pc_2f58, label %dec_label_pc_2fb0

dec_label_pc_2f58:                                ; preds = %dec_label_pc_2f54
  call void @_Z12SetReachable7Networkb(i32 0, i1 ptrtoint (i1* @global_var_1.2399 to i1))
  store i32 ptrtoint (i32* @1 to i32), i32* %eax.global-to-local, align 8
  %v3_2f73 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_48)
  store i32 %v3_2f73, i32* %eax.global-to-local, align 8
  call void @AdvertizeLocal()
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* @eax, align 8
  %v1_2f8e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2f8e = icmp eq i32 %v1_2f8e, %arg1
  %v1_2f95 = icmp eq i1 %v3_2f8e, false
  br i1 %v1_2f95, label %bb, label %dec_label_pc_2f97

bb:                                               ; preds = %dec_label_pc_2f58
  %v2_2f95 = call i32 @function_2fc6()
  store i32 %v2_2f95, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2f97

dec_label_pc_2f97:                                ; preds = %bb, %dec_label_pc_2f58
  %v0_2faa = phi i32 [ %v2_2f95, %bb ], [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_2f58 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2faa

dec_label_pc_2fb0:                                ; preds = %dec_label_pc_2f54
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2fb2

dec_label_pc_2fb2:                                ; preds = %dec_label_pc_2ecc, %dec_label_pc_2fb0
  %v1_2fb2 = phi i32 [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_2fb0 ], [ 0, %dec_label_pc_2ecc ]
  %v2_2fb2 = add i32 %v1_2fb2, %v0_2fb2.pre
  store i32 %v2_2fb2, i32* %.pre, align 4
  %v4_2fb6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_2fb6

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_2fb2, { 1, 0 }
}

define i32 @function_2fbd() local_unnamed_addr {
dec_label_pc_2fbd:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_2fbd = sub i32 %tmp93, ptrtoint (i1* @global_var_1.2399 to i32)
  %v18_2fbd = inttoptr i32 %tmp93 to i32*
  store i32 %v3_2fbd, i32* %v18_2fbd, align 4
  %v0_2fbf = load i32, i32* %ebx.global-to-local, align 4
  %v1_2fbf = and i32 %v0_2fbf, -65281
  %v2_2fbf = or i32 %v1_2fbf, ptrtoint (i32* @global_var_c000.2479 to i32)
  store i32 %v2_2fbf, i32* %ebx.global-to-local, align 4
  %v0_2fc1 = load i32, i32* %eax.global-to-local, align 8
  %v1_2fc1 = load i32, i32* %edi.global-to-local, align 4
  %v2_2fc1 = add i32 %v1_2fc1, 4
  %v3_2fc1 = inttoptr i32 %v2_2fc1 to i32*
  store i32 %v0_2fc1, i32* %v3_2fc1, align 4
  %v0_2fc4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fc4

; uselistorder directives
  uselistorder i32 %tmp93, { 1, 0 }
}

define i32 @function_2fc6() local_unnamed_addr {
dec_label_pc_2fc6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fcc() local_unnamed_addr {
dec_label_pc_2fcc:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fcc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fcc
}

define i32 @function_2fde() local_unnamed_addr {
dec_label_pc_2fde:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fde = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fde
}

define i1 @_Z8AddLocalRK8CNetAddri(%CNetAddr %addr, i32 %nScore) local_unnamed_addr {
dec_label_pc_2ff0:
  %v1_300f = call i16 @_Z13GetListenPortv()
  %tmp13 = urem i16 %v1_300f, 2
  %v5_3022 = icmp ne i16 %tmp13, 0
  ret i1 %v5_3022
}

define i32 @function_302a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_302a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_302a = load i32, i32* %ecx.global-to-local, align 4
  %v1_302a = add i32 %v0_302a, -1996217252
  %v2_302a = inttoptr i32 %v1_302a to i32*
  %v3_302a = load i32, i32* %v2_302a, align 4
  %v4_302a = sub i32 %v3_302a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_302a, i32* %v2_302a, align 4
  %v0_3030 = load i32, i32* %eax.global-to-local, align 8
  %v11_3030 = xor i32 %v0_3030, 36
  store i32 %v11_3030, i32* %eax.global-to-local, align 8
  %v2_3032 = call i1 @_Z8AddLocalRK8CServicei(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v4_3032 = sext i1 %v2_3032 to i32
  store i32 %v4_3032, i32* %eax.global-to-local, align 8
  %v1_303b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_303b = icmp eq i32 %v1_303b, %arg1
  %v1_3042 = icmp eq i1 %v3_303b, false
  br i1 %v1_3042, label %dec_label_pc_3050, label %dec_label_pc_3044

dec_label_pc_3044:                                ; preds = %dec_label_pc_302a
  ret i32 %v4_3032

dec_label_pc_3050:                                ; preds = %dec_label_pc_302a
  ret i32 %v4_3032
}

define void @_Z13ThreadMapPortv() local_unnamed_addr {
dec_label_pc_3060:
  %v1_3079 = call i16 @_Z13GetListenPortv()
  ret void

; uselistorder directives
  uselistorder i16 ()* @_Z13GetListenPortv, { 1, 0 }
}

define i32 @function_3117() local_unnamed_addr {
dec_label_pc_3117:
  %eax.global-to-local = alloca i32, align 4
  %v0_3117 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3117
}

define i32 @function_3148() local_unnamed_addr {
dec_label_pc_3148:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_3148 = add i32 %tmp92, -746254400
  %v2_3148 = inttoptr i32 %v1_3148 to i32*
  %v3_3148 = load i32, i32* %v2_3148, align 4
  %v4_3148 = add i32 %v3_3148, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_3148, i32* %v2_3148, align 4
  %v2_314e = load i32, i32* %eax.global-to-local, align 8
  %v4_314e = mul i32 %v2_314e, 2
  %v21_314e = inttoptr i32 %v2_314e to i32*
  store i32 %v4_314e, i32* %v21_314e, align 4
  %v0_3150 = load i32, i32* %eax.global-to-local, align 8
  %v1_3150 = add i32 %v0_3150, 204743868
  %v2_3150 = inttoptr i32 %v1_3150 to i8*
  %v3_3150 = load i8, i8* %v2_3150, align 1
  %v5_3150 = trunc i32 %v0_3150 to i8
  %v6_3150 = add i8 %v3_3150, %v5_3150
  store i8 %v6_3150, i8* %v2_3150, align 1
  %v2_3156 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3156 = load i32, i32* %eax.global-to-local, align 8
  %v4_3156 = trunc i32 %v3_3156 to i8
  %v5_3156 = add i8 %v4_3156, %v2_3156
  %v21_3156 = inttoptr i32 %v3_3156 to i8*
  store i8 %v5_3156, i8* %v21_3156, align 1
  %v2_3158 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_3158 = load i32, i32* %ecx.global-to-local, align 4
  %v4_3158 = trunc i32 %v3_3158 to i8
  %v5_3158 = add i8 %v4_3158, %v2_3158
  %v20_3158 = load i32, i32* %edi.global-to-local, align 4
  %v21_3158 = inttoptr i32 %v20_3158 to i8*
  store i8 %v5_3158, i8* %v21_3158, align 1
  %v2_315c = load i32, i32* %eax.global-to-local, align 8
  %v4_315c = mul i32 %v2_315c, 2
  %v21_315c = inttoptr i32 %v2_315c to i32*
  store i32 %v4_315c, i32* %v21_315c, align 4
  %v0_315e = load i32, i32* %ecx.global-to-local, align 4
  %v1_315e = add i32 %v0_315e, -956029860
  %v2_315e = inttoptr i32 %v1_315e to i8*
  %v3_315e = load i8, i8* %v2_315e, align 1
  %v5_315e = trunc i32 %v0_315e to i8
  %v6_315e = add i8 %v3_315e, %v5_315e
  store i8 %v6_315e, i8* %v2_315e, align 1
  %v0_3164 = load i32, i32* %eax.global-to-local, align 8
  %v2_3164 = add i32 %v0_3164, 36
  %v16_3164 = and i32 %v2_3164, 255
  %v18_3164 = and i32 %v0_3164, -256
  %v19_3164 = or i32 %v16_3164, %v18_3164
  store i32 %v19_3164, i32* %eax.global-to-local, align 8
  ret i32 %v19_3164

; uselistorder directives
  uselistorder i32 %v0_3164, { 1, 0 }
  uselistorder i32 %v2_315c, { 1, 0 }
  uselistorder i32 %v2_314e, { 1, 0 }
}

define i32 @function_319a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_319a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31fe() local_unnamed_addr {
dec_label_pc_31fe:
  %v0_31fe = call i32 @function_3240()
  ret i32 %v0_31fe
}

define i32 @function_322c() local_unnamed_addr {
dec_label_pc_322c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3240() local_unnamed_addr {
dec_label_pc_3240:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp7
}

define i32 @function_3283() local_unnamed_addr {
dec_label_pc_3283:
  %eax.global-to-local = alloca i32, align 4
  %v0_3283 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3283
}

define i32 @function_3296() local_unnamed_addr {
dec_label_pc_3296:
  %v0_3296 = call i32 @function_322c()
  ret i32 %v0_3296
}

define i32 @function_32bf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_32bf:
  %ebp.global-to-local = alloca i32, align 4
  %v0_32bf = load i32, i32* %ebp.global-to-local, align 4
  %v1_32bf = add i32 %v0_32bf, -1991236540
  %v2_32bf = inttoptr i32 %v1_32bf to i32*
  %v3_32bf = load i32, i32* %v2_32bf, align 4
  %v4_32bf = sub i32 %v3_32bf, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_32bf, i32* %v2_32bf, align 4
  %v1_32d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32d3 = xor i32 %v1_32d3, %arg1
  %v3_32d3 = icmp eq i32 %v2_32d3, 0
  store i32 %v2_32d3, i32* @eax, align 8
  %v1_32da = icmp eq i1 %v3_32d3, false
  br i1 %v1_32da, label %bb, label %dec_label_pc_32dc

bb:                                               ; preds = %dec_label_pc_32bf
  %v2_32da = call i32 @function_334a()
  br label %dec_label_pc_32dc

dec_label_pc_32dc:                                ; preds = %bb, %dec_label_pc_32bf
  %v0_32e6 = phi i32 [ %v2_32da, %bb ], [ %v2_32d3, %dec_label_pc_32bf ]
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_32e6
}

define i32 @function_32e8() local_unnamed_addr {
dec_label_pc_32e8:
  %eax.global-to-local = alloca i32, align 4
  %v0_32e8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32e8
}

define i32 @function_32e9() local_unnamed_addr {
dec_label_pc_32e9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32fc() local_unnamed_addr {
dec_label_pc_32fc:
  %ebx.global-to-local = alloca i32, align 4
  %v0_32fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_32fc = add i32 %v0_32fc, -1014431238
  %v2_32fc = inttoptr i32 %v1_32fc to i32*
  %v3_32fc = load i32, i32* %v2_32fc, align 4
  %v4_32fc = add i32 %v3_32fc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_32fc, i32* %v2_32fc, align 4
  %v0_330c = call i32 @function_32e9()
  ret i32 %v0_330c
}

define i32 @function_3304() local_unnamed_addr {
dec_label_pc_3304:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3322() local_unnamed_addr {
dec_label_pc_3322:
  %v0_3322 = call i32 @function_32e9()
  ret i32 %v0_3322

; uselistorder directives
  uselistorder i32 ()* @function_32e9, { 1, 0 }
}

define i32 @function_3324() local_unnamed_addr {
dec_label_pc_3324:
  %v0_3324 = load i32, i32* @eax, align 8
  %v3_3334 = call i32 @function_319a(i32 ptrtoint ([42 x i8]* @global_var_da9c.2483 to i32), i32 %v0_3324)
  ret i32 %v3_3334
}

define i32 @function_3345() local_unnamed_addr {
dec_label_pc_3345:
  %v2_3345 = call i32 @function_319a(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 %v2_3345

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_319a, { 1, 0 }
}

define i32 @function_334a() local_unnamed_addr {
dec_label_pc_334a:
  %v3_334f = load i32, i32* @eax, align 8
  ret i32 %v3_334f
}

define i32 @function_33ad() local_unnamed_addr {
dec_label_pc_33ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_33ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33ad
}

define i32 @function_33b3() local_unnamed_addr {
dec_label_pc_33b3:
  %v0_33b3 = call i32 @function_3304()
  ret i32 %v0_33b3
}

define void @_Z21ThreadGetMyExternalIPv() local_unnamed_addr {
dec_label_pc_33c0:
  ret void
}

define i32 @function_33e3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33e3:
  %ebx.global-to-local = alloca i32, align 4
  %v0_33e3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_33e3 = trunc i32 %v0_33e3 to i8
  %v3_33e6 = insertvalue [16 x i8] undef, i8 %v3_33e3, 0
  %v4_33e6 = insertvalue %CNetAddr undef, [16 x i8] %v3_33e6, 0
  %v5_33e6 = call i1 @_Z15GetMyExternalIPR8CNetAddr(%CNetAddr %v4_33e6)
  %v5_33eb = icmp eq i1 %v5_33e6, false
  %v1_33ed = icmp eq i1 %v5_33eb, false
  br i1 %v1_33ed, label %dec_label_pc_3408, label %dec_label_pc_33ef

dec_label_pc_33ef:                                ; preds = %dec_label_pc_33e3
  %v1_33f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33f3 = xor i32 %v1_33f3, %arg1
  %v3_33f3 = icmp eq i32 %v2_33f3, 0
  store i32 %v2_33f3, i32* @eax, align 8
  %v1_33fa = icmp eq i1 %v3_33f3, false
  br i1 %v1_33fa, label %bb, label %dec_label_pc_33fc

bb:                                               ; preds = %dec_label_pc_33ef
  %v2_33fa = call i32 @function_3449()
  br label %dec_label_pc_33fc

dec_label_pc_33fc:                                ; preds = %bb, %dec_label_pc_33ef
  %v0_3407 = phi i32 [ %v2_33fa, %bb ], [ %v2_33f3, %dec_label_pc_33ef ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_3407

dec_label_pc_3408:                                ; preds = %dec_label_pc_33e3
  %v7_33e6 = sext i1 %v5_33e6 to i32
  ret i32 %v7_33e6

; uselistorder directives
  uselistorder i1 %v5_33e6, { 1, 0 }
}

define i32 @function_3436() local_unnamed_addr {
dec_label_pc_3436:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_3436 = load i32, i32* %edi.global-to-local, align 4
  %v1_3436 = add i32 %v0_3436, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_3436, i32* %edi.global-to-local, align 4
  %v0_3439 = load i32, i32* %eax.global-to-local, align 8
  %v1_3439 = trunc i32 %v0_3439 to i8
  %v2_3439 = and i8 %v1_3439, 4
  %v8_3439 = zext i8 %v2_3439 to i32
  store i32 %v8_3439, i32* %eax.global-to-local, align 8
  %v1_343d = inttoptr i32 %v8_3439 to i8*
  %v2_343d = load i8, i8* %v1_343d, align 4
  %v5_343d = add i8 %v2_343d, %v2_3439
  store i8 %v5_343d, i8* %v1_343d, align 4
  %v0_343f = load i32, i32* %ebx.global-to-local, align 4
  %v3_343f = trunc i32 %v0_343f to i8
  %v3_3442 = insertvalue [16 x i8] undef, i8 %v3_343f, 0
  %v4_3442 = insertvalue %CNetAddr undef, [16 x i8] %v3_3442, 0
  %v6_3442 = call i1 @_Z8AddLocalRK8CNetAddri(%CNetAddr %v4_3442, i32 ptrtoint (i32* @1 to i32))
  %v8_3442 = sext i1 %v6_3442 to i32
  store i32 %v8_3442, i32* %eax.global-to-local, align 8
  ret i32 %v8_3442

; uselistorder directives
  uselistorder i32 %v8_3439, { 1, 0 }
}

define i32 @function_3449() local_unnamed_addr {
dec_label_pc_3449:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_344f() local_unnamed_addr {
dec_label_pc_344f:
  %eax.global-to-local = alloca i32, align 4
  %v0_344f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_344f
}

define i1 @_Z9SeenLocalRK8CService(i32 %addr) local_unnamed_addr {
dec_label_pc_3460:
  %stack_var_-64 = alloca i32, align 4
  %v2_3467 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_3467, i32* @ebp, align 4
  %v8_34a9 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-64, i32 ptrtoint ([7 x i8]* @global_var_a2a0.2421 to i32), i32 ptrtoint ([16 x i8]* @global_var_a046.2420 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 ptrtoint ([6 x i8]* @global_var_a2f8.2413 to i32), i32* @edi, align 4
  br label %dec_label_pc_34d1.outer

dec_label_pc_34c8:                                ; preds = %dec_label_pc_34d1
  store i32 %v0_34d1, i32* @edi, align 4
  %v1_34ca = add i32 %v0_34d1, 8
  %v2_34ca = inttoptr i32 %v1_34ca to i32*
  %v3_34ca = load i32, i32* %v2_34ca, align 4
  store i32 %v3_34ca, i32* @ebx, align 4
  %v1_34cd = icmp eq i32 %v3_34ca, 0
  br i1 %v1_34cd, label %dec_label_pc_34eb, label %dec_label_pc_34d1.outer

dec_label_pc_34d1.outer:                          ; preds = %dec_label_pc_34c8, %dec_label_pc_3460
  %v0_34eb10.ph = phi i32 [ %v0_34d1, %dec_label_pc_34c8 ], [ ptrtoint ([6 x i8]* @global_var_a2f8.2413 to i32), %dec_label_pc_3460 ]
  %v0_34d1.ph = phi i32 [ %v3_34ca, %dec_label_pc_34c8 ], [ 1313079396, %dec_label_pc_3460 ]
  br label %dec_label_pc_34d1

dec_label_pc_34d1:                                ; preds = %dec_label_pc_34d1.outer, %dec_label_pc_34e4
  %v0_34d1 = phi i32 [ %v3_34e4, %dec_label_pc_34e4 ], [ %v0_34d1.ph, %dec_label_pc_34d1.outer ]
  %v1_34d1 = add i32 %v0_34d1, 16
  %v4_34e0 = trunc i32 %v1_34d1 to i8
  %v5_34e0 = icmp eq i8 %v4_34e0, 0
  br i1 %v5_34e0, label %dec_label_pc_34c8, label %dec_label_pc_34e4

dec_label_pc_34e4:                                ; preds = %dec_label_pc_34d1
  %v1_34e4 = add i32 %v0_34d1, 12
  %v2_34e4 = inttoptr i32 %v1_34e4 to i32*
  %v3_34e4 = load i32, i32* %v2_34e4, align 4
  store i32 %v3_34e4, i32* @ebx, align 4
  %v1_34e7 = icmp eq i32 %v3_34e4, 0
  %v1_34e9 = icmp eq i1 %v1_34e7, false
  br i1 %v1_34e9, label %dec_label_pc_34d1, label %dec_label_pc_34eb

dec_label_pc_34eb:                                ; preds = %dec_label_pc_34c8, %dec_label_pc_34e4
  %v0_34eb = phi i32 [ %v0_34eb10.ph, %dec_label_pc_34e4 ], [ %v0_34d1, %dec_label_pc_34c8 ]
  %v10_34eb = icmp eq i32 %v0_34eb, 41720
  br i1 %v10_34eb, label %bb, label %dec_label_pc_34f7

bb:                                               ; preds = %dec_label_pc_34eb
  %v1_34f1 = call i32 @function_35c8()
  br label %dec_label_pc_34f7

dec_label_pc_34f7:                                ; preds = %bb, %dec_label_pc_34eb
  %v3_34fe = phi i32 [ %v1_34f1, %bb ], [ %v1_34d1, %dec_label_pc_34eb ]
  %tmp128 = urem i32 %v3_34fe, 2
  %v4_34fe = icmp ne i32 %tmp128, 0
  ret i1 %v4_34fe

; uselistorder directives
  uselistorder i32 %v3_34e4, { 1, 2, 0 }
  uselistorder i32 %v0_34d1, { 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_34eb, { 1, 0 }
  uselistorder label %dec_label_pc_34d1, { 1, 0 }
}

define i32 @function_3505() local_unnamed_addr {
dec_label_pc_3505:
  %eax.global-to-local = alloca i32, align 4
  %v0_3505 = load i32, i32* %eax.global-to-local, align 8
  %v2_3505 = mul i32 %v0_3505, 8
  %v3_3505 = add i32 %v0_3505, 12223759
  %v4_3505 = add i32 %v3_3505, %v2_3505
  %v5_3505 = inttoptr i32 %v4_3505 to i32*
  %v6_3505 = load i32, i32* %v5_3505, align 4
  %v7_3505 = add i32 %v6_3505, 1
  store i32 %v7_3505, i32* %v5_3505, align 4
  %v2_350c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_350c = load i32, i32* %eax.global-to-local, align 8
  %v4_350c = trunc i32 %v3_350c to i8
  %v5_350c = add i8 %v4_350c, %v2_350c
  %v21_350c = inttoptr i32 %v3_350c to i8*
  store i8 %v5_350c, i8* %v21_350c, align 1
  store i32 ptrtoint ([6 x i8]* @global_var_a2f8.2413 to i32), i32* @edi, align 4
  br label %dec_label_pc_3529.outer

dec_label_pc_3520:                                ; preds = %dec_label_pc_3529
  store i32 %v0_3529, i32* @edi, align 4
  %v1_3522 = add i32 %v0_3529, 8
  %v2_3522 = inttoptr i32 %v1_3522 to i32*
  %v3_3522 = load i32, i32* %v2_3522, align 4
  %v1_3525 = icmp eq i32 %v3_3522, 0
  br i1 %v1_3525, label %dec_label_pc_3543, label %dec_label_pc_3529.outer

dec_label_pc_3529.outer:                          ; preds = %dec_label_pc_3520, %dec_label_pc_3505
  %v0_35437.ph = phi i32 [ %v0_3529, %dec_label_pc_3520 ], [ ptrtoint ([6 x i8]* @global_var_a2f8.2413 to i32), %dec_label_pc_3505 ]
  %v0_3529.ph = phi i32 [ %v3_3522, %dec_label_pc_3520 ], [ 1313079396, %dec_label_pc_3505 ]
  br label %dec_label_pc_3529

dec_label_pc_3529:                                ; preds = %dec_label_pc_3529.outer, %dec_label_pc_353c
  %v0_3529 = phi i32 [ %v3_353c, %dec_label_pc_353c ], [ %v0_3529.ph, %dec_label_pc_3529.outer ]
  %v1_3529 = add i32 %v0_3529, 16
  store i32 %v1_3529, i32* %eax.global-to-local, align 8
  %v4_3538 = trunc i32 %v1_3529 to i8
  %v5_3538 = icmp eq i8 %v4_3538, 0
  br i1 %v5_3538, label %dec_label_pc_3520, label %dec_label_pc_353c

dec_label_pc_353c:                                ; preds = %dec_label_pc_3529
  %v1_353c = add i32 %v0_3529, 12
  %v2_353c = inttoptr i32 %v1_353c to i32*
  %v3_353c = load i32, i32* %v2_353c, align 4
  %v1_353f = icmp eq i32 %v3_353c, 0
  %v1_3541 = icmp eq i1 %v1_353f, false
  br i1 %v1_3541, label %dec_label_pc_3529, label %dec_label_pc_3543

dec_label_pc_3543:                                ; preds = %dec_label_pc_3520, %dec_label_pc_353c
  %v0_3543 = phi i32 [ %v0_35437.ph, %dec_label_pc_353c ], [ %v0_3529, %dec_label_pc_3520 ]
  %v10_3543 = icmp eq i32 %v0_3543, 41720
  br i1 %v10_3543, label %bb, label %dec_label_pc_354b

bb:                                               ; preds = %dec_label_pc_3543
  %v1_3549 = call i32 @function_355e()
  store i32 %v1_3549, i32* %eax.global-to-local, align 8
  %v0_354b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_354b

dec_label_pc_354b:                                ; preds = %bb, %dec_label_pc_3543
  %v0_354b = phi i32 [ %v0_354b.pre, %bb ], [ %v0_3543, %dec_label_pc_3543 ]
  %v1_354b = add i32 %v0_354b, 16
  store i32 %v1_354b, i32* %eax.global-to-local, align 8
  ret i32 %v1_354b

; uselistorder directives
  uselistorder i32 %v0_3543, { 1, 0 }
  uselistorder i32 %v3_353c, { 1, 0 }
  uselistorder i32 %v0_3529, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_3505, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_a2f8.2413 to i32), { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_3543, { 1, 0 }
  uselistorder label %dec_label_pc_3529, { 1, 0 }
}

define i32 @function_355e() local_unnamed_addr {
dec_label_pc_355e:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_44 = alloca i32, align 4
  %stack_var_68 = alloca i32, align 4
  %v2_355e = load i32, i32* @esi, align 4
  %v2_3560 = ptrtoint i32* %stack_var_68 to i32
  store i32 %v2_355e, i32* %stack_var_68, align 4
  %v0_358d = load i32, i32* @edi, align 4
  %v2_359d = ptrtoint i32* %stack_var_44 to i32
  %v4_35a4 = call i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_(i32 %v2_359d, i32 ptrtoint (i32* @global_var_a2f4.2478 to i32), i32 %v0_358d, i32 %v2_3560)
  %v1_35b0 = add i32 %tmp, 32
  %v2_35b0 = inttoptr i32 %v1_35b0 to i32*
  %v3_35b0 = load i32, i32* %v2_35b0, align 4
  %v4_35b0 = add i32 %v3_35b0, 1
  store i32 %v4_35b0, i32* %v2_35b0, align 4
  %v0_35b4 = load i32, i32* @ebp, align 4
  %v1_35b7 = inttoptr i32 %v0_35b4 to i32*
  %v2_35b7 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_35b7)
  call void @AdvertizeLocal()
  ret i32 ptrtoint (i1* @global_var_1.2399 to i32)

; uselistorder directives
  uselistorder void ()* @AdvertizeLocal, { 1, 0 }
}

define i32 @function_35c8() local_unnamed_addr {
dec_label_pc_35c8:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_35c8 = load i32, i32* @ebp, align 4
  %v1_35cb = inttoptr i32 %v0_35c8 to i32*
  %v2_35cb = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_35cb)
  %v1_35d6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35d6 = icmp eq i32 %v1_35d6, %tmp5
  %v1_35dd = icmp eq i1 %v3_35d6, false
  br i1 %v1_35dd, label %dec_label_pc_35e7, label %dec_label_pc_35df

dec_label_pc_35df:                                ; preds = %dec_label_pc_35c8
  ret i32 0

dec_label_pc_35e7:                                ; preds = %dec_label_pc_35c8
  store i32 0, i32* @ebx, align 4
  %v0_35ee = load i32, i32* @ebp, align 4
  %v1_35f1 = inttoptr i32 %v0_35ee to i32*
  %v2_35f1 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_35f1)
  ret i32 %v2_35f1
}

define i32 @function_35fd() local_unnamed_addr {
dec_label_pc_35fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_35fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35fd
}

define void @_ZN5CNode11MisbehavingEi(i32 %this, i32 %howmuch) local_unnamed_addr {
dec_label_pc_3600:
  ret void
}

define i32 @function_36a7() local_unnamed_addr {
dec_label_pc_36a7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36e9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36e9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_36e9 = load i32, i32* %ecx.global-to-local, align 4
  %v0_36f2 = load i32, i32* %eax.global-to-local, align 8
  %v4_36f2 = add i32 %v0_36f2, 20
  %v14_36f2 = icmp eq i32 %v4_36f2, 0
  store i32 %v4_36f2, i32* @eax, align 8
  %v1_36f7 = icmp eq i1 %v14_36f2, false
  br i1 %v1_36f7, label %bb, label %dec_label_pc_36fd

bb:                                               ; preds = %dec_label_pc_36e9
  %v3_36f7 = call i32 @function_388f(i32 %v2_36e9)
  store i32 %v3_36f7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_36fd

dec_label_pc_36fd:                                ; preds = %bb, %dec_label_pc_36e9
  %v0_3710 = phi i32 [ %v3_36f7, %bb ], [ %v4_36f2, %dec_label_pc_36e9 ]
  ret i32 %v0_3710
}

define i32 @function_371e() local_unnamed_addr {
dec_label_pc_371e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3772() local_unnamed_addr {
dec_label_pc_3772:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3772 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3772 = add i32 %v0_3772, 145539
  %v2_3772 = inttoptr i32 %v1_3772 to i32*
  %v3_3772 = load i32, i32* %v2_3772, align 4
  %v4_3772 = add i32 %v3_3772, -1
  store i32 %v4_3772, i32* %v2_3772, align 4
  %v0_3778 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3778 = add i32 %v0_3778, -1996217236
  %v2_3778 = inttoptr i32 %v1_3778 to i8*
  %v3_3778 = load i8, i8* %v2_3778, align 1
  %v5_3778 = trunc i32 %v0_3778 to i8
  %v6_3778 = add i8 %v3_3778, %v5_3778
  store i8 %v6_3778, i8* %v2_3778, align 1
  %v0_377e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_377e
}

define i32 @function_37c9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37c9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_65 = alloca i32, align 4
  %v0_37c9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_37c9 = add i32 %v0_37c9, -952097724
  %v2_37c9 = inttoptr i32 %v1_37c9 to i32*
  %v3_37c9 = load i32, i32* %v2_37c9, align 4
  %v4_37c9 = sub i32 %v3_37c9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_37c9, i32* %v2_37c9, align 4
  %v0_37d0 = load i32, i32* %eax.global-to-local, align 8
  %v1_37d0 = trunc i32 %v0_37d0 to i8
  %v2_37d0 = and i8 %v1_37d0, 20
  %v8_37d0 = zext i8 %v2_37d0 to i32
  %v10_37d0 = and i32 %v0_37d0, -256
  %v11_37d0 = or i32 %v8_37d0, %v10_37d0
  store i32 %v11_37d0, i32* %eax.global-to-local, align 8
  %v1_37d2 = inttoptr i32 %v11_37d0 to i8*
  %v2_37d2 = load i8, i8* %v1_37d2, align 4
  %v5_37d2 = add i8 %v2_37d2, %v2_37d0
  store i8 %v5_37d2, i8* %v1_37d2, align 4
  %v0_37d4 = load i32, i32* %eax.global-to-local, align 8
  %v1_37d4 = inttoptr i32 %v0_37d4 to i8*
  %v2_37d4 = load i8, i8* %v1_37d4, align 1
  %v4_37d4 = trunc i32 %v0_37d4 to i8
  %v5_37d4 = add i8 %v2_37d4, %v4_37d4
  store i8 %v5_37d4, i8* %v1_37d4, align 1
  %v0_37f6 = load i32, i32* %eax.global-to-local, align 8
  %tmp118 = inttoptr i32 %v0_37f6 to i32*
  %v9_37f9 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %tmp118, i32 ptrtoint ([15 x i8]* @global_var_9e80.2429 to i32), i32 ptrtoint ([13 x i8]* @global_var_a05e.2428 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v9_37f9, i32* %eax.global-to-local, align 8
  %v2_3809 = call i32 @_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_(i32 ptrtoint ([19 x i8]* @global_var_9ed4.2451 to i32))
  store i32 %v2_3809, i32* %eax.global-to-local, align 8
  %v0_380e = load i32, i32* @esi, align 4
  %v5_380e = add i32 %v0_380e, %arg1
  %v10_380e = icmp ult i32 %v5_380e, %v0_380e
  %v0_3812 = load i32, i32* @edi, align 4
  %v6_3812 = zext i1 %v10_380e to i32
  %v7_3812 = add i32 %v0_3812, %arg2
  %v8_3812 = add i32 %v7_3812, %v6_3812
  %v2_3816 = add i32 %v2_3809, 4
  %v3_3816 = inttoptr i32 %v2_3816 to i32*
  %v4_3816 = load i32, i32* %v3_3816, align 4
  %v5_3819 = icmp slt i32 %v8_3812, %v4_3816
  br i1 %v5_3819, label %dec_label_pc_3836, label %dec_label_pc_381b

dec_label_pc_381b:                                ; preds = %dec_label_pc_37c9
  %v8_381b = icmp sgt i32 %v8_3812, %v4_3816
  br i1 %v8_381b, label %dec_label_pc_3821, label %dec_label_pc_381d

dec_label_pc_381d:                                ; preds = %dec_label_pc_381b
  %v2_381d = inttoptr i32 %v2_3809 to i32*
  %v3_381d = load i32, i32* %v2_381d, align 4
  %tmp120 = icmp ugt i32 %v5_380e, %v3_381d
  br i1 %tmp120, label %dec_label_pc_3821, label %dec_label_pc_3836

dec_label_pc_3821:                                ; preds = %dec_label_pc_381d, %dec_label_pc_381b
  %v2_382c = call i32 @_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_(i32 ptrtoint ([19 x i8]* @global_var_9ed4.2451 to i32))
  store i32 %v2_382c, i32* %eax.global-to-local, align 8
  %v0_3831 = load i32, i32* @esi, align 4
  %v2_3831 = inttoptr i32 %v2_382c to i32*
  store i32 %v0_3831, i32* %v2_3831, align 4
  %v0_3833 = load i32, i32* @edi, align 4
  %v1_3833 = load i32, i32* %eax.global-to-local, align 8
  %v2_3833 = add i32 %v1_3833, 4
  %v3_3833 = inttoptr i32 %v2_3833 to i32*
  store i32 %v0_3833, i32* %v3_3833, align 4
  br label %dec_label_pc_3836

dec_label_pc_3836:                                ; preds = %dec_label_pc_381d, %dec_label_pc_3821, %dec_label_pc_37c9
  %v3_383d = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_65)
  store i32 %v3_383d, i32* %eax.global-to-local, align 8
  %v0_3842 = load i32, i32* @ebx, align 4
  call void @_ZN5CNode21CloseSocketDisconnectEv(i32 %v0_3842)
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %eax.global-to-local, align 8
  ret i32 ptrtoint (i1* @global_var_1.2399 to i32)

; uselistorder directives
  uselistorder i32 %v0_380e, { 1, 0 }
  uselistorder i32 (i32)* @_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_, { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_a05e.2428 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_9e80.2429 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_3836, { 1, 0, 2 }
}

define i32 @function_3876() local_unnamed_addr {
dec_label_pc_3876:
  ret i32 0
}

define i32 @function_3880(i32 %arg1) local_unnamed_addr {
dec_label_pc_3880:
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v10_3880 = icmp ult i32 %tmp93, %arg1
  br i1 %v10_3880, label %bb, label %dec_label_pc_388a

bb:                                               ; preds = %dec_label_pc_3880
  %v1_3884 = call i32 @function_36a7()
  store i32 %v1_3884, i32* @eax, align 8
  br label %dec_label_pc_388a

dec_label_pc_388a:                                ; preds = %bb, %dec_label_pc_3880
  %v0_388a = call i32 @function_371e()
  ret i32 %v0_388a
}

define i32 @function_388f(i32 %arg1) local_unnamed_addr {
dec_label_pc_388f:
  %v0_388f = load i32, i32* @eax, align 8
  ret i32 %v0_388f
}

define i32 @function_3896() local_unnamed_addr {
dec_label_pc_3896:
  %eax.global-to-local = alloca i32, align 4
  %v0_3896 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3896
}

define i32 @function_38a8() local_unnamed_addr {
dec_label_pc_38a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_38a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38a8
}

define i32 @function_38be() local_unnamed_addr {
dec_label_pc_38be:
  %eax.global-to-local = alloca i32, align 4
  %v0_38be = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38be
}

define i32 @function_38d4() local_unnamed_addr {
dec_label_pc_38d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_38d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38d4
}

define void @_ZN5CNode15ReceiveMsgBytesEPKcj(i32 %this, i8* %pch, i32 %nBytes) local_unnamed_addr {
dec_label_pc_3900:
  %v0_3911 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %this, i32* @esi, align 4
  %v1_3932 = icmp eq i32 %nBytes, 0
  br i1 %v1_3932, label %bb, label %dec_label_pc_393e

bb:                                               ; preds = %dec_label_pc_3900
  %v2_3938 = call i32 @function_3c8f(i32 %v0_3911)
  %v0_3948.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_393e

dec_label_pc_393e:                                ; preds = %bb, %dec_label_pc_3900
  %v0_395e = phi i32 [ %v0_3948.pre, %bb ], [ %this, %dec_label_pc_3900 ]
  %v1_3948 = add i32 %v0_395e, ptrtoint (i32* @global_var_f4.2449 to i32)
  %v2_3948 = inttoptr i32 %v1_3948 to i32*
  %v3_3948 = load i32, i32* %v2_3948, align 4
  store i32 %v3_3948, i32* @eax, align 8
  %v2_394e = add i32 %v0_395e, 228
  %v3_394e = inttoptr i32 %v2_394e to i32*
  %v4_394e = load i32, i32* %v3_394e, align 4
  %v15_394e = icmp eq i32 %v3_3948, %v4_394e
  br i1 %v15_394e, label %dec_label_pc_3982, label %dec_label_pc_3956

dec_label_pc_3956:                                ; preds = %dec_label_pc_393e
  %v1_3956 = add i32 %v0_395e, ptrtoint (i8** @global_var_f8.2448 to i32)
  %v2_3956 = inttoptr i32 %v1_3956 to i32*
  %v3_3956 = load i32, i32* %v2_3956, align 4
  store i32 %v3_3956, i32* @edx, align 4
  store i32 %v3_3948, i32* @ecx, align 4
  %v1_395e = add i32 %v0_395e, 256
  %v2_395e = inttoptr i32 %v1_395e to i32*
  %v3_395e = load i32, i32* %v2_395e, align 4
  store i32 %v3_395e, i32* @ebx, align 4
  %v12_3964 = icmp eq i32 %v3_3948, %v3_3956
  br i1 %v12_3964, label %bb129, label %dec_label_pc_396c

bb129:                                            ; preds = %dec_label_pc_3956
  %v1_3966 = call i32 @function_3cd8()
  store i32 %v1_3966, i32* @eax, align 8
  %v0_396c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_396c

dec_label_pc_396c:                                ; preds = %bb129, %dec_label_pc_3956
  %v0_396c = phi i32 [ %v0_396c.pre, %bb129 ], [ %v3_3948, %dec_label_pc_3956 ]
  %v1_396c = add i32 %v0_396c, -92
  %v2_396c = inttoptr i32 %v1_396c to i8*
  %v3_396c = load i8, i8* %v2_396c, align 1
  %v10_396c = icmp eq i8 %v3_396c, 0
  br i1 %v10_396c, label %bb130, label %dec_label_pc_3976

bb130:                                            ; preds = %dec_label_pc_396c
  %v1_3970 = call i32 @function_3c58()
  store i32 %v1_3970, i32* @eax, align 8
  %v0_3976.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_3976

dec_label_pc_3976:                                ; preds = %bb130, %dec_label_pc_396c
  %v0_3976 = phi i32 [ %v0_3976.pre, %bb130 ], [ %v0_396c, %dec_label_pc_396c ]
  %v1_3976 = add i32 %v0_3976, -4
  %v2_3976 = inttoptr i32 %v1_3976 to i32*
  %v3_3976 = load i32, i32* %v2_3976, align 4
  %v1_3979 = add i32 %v0_3976, -44
  %v2_3979 = inttoptr i32 %v1_3979 to i32*
  %v3_3979 = load i32, i32* %v2_3979, align 4
  %v15_3979 = icmp eq i32 %v3_3979, %v3_3976
  %v1_397c = icmp eq i1 %v15_3979, false
  br i1 %v1_397c, label %bb131, label %dec_label_pc_3982

bb131:                                            ; preds = %dec_label_pc_3976
  %v2_397c = call i32 @function_3c58()
  br label %dec_label_pc_3982

dec_label_pc_3982:                                ; preds = %bb131, %dec_label_pc_3976, %dec_label_pc_393e
  ret void

; uselistorder directives
  uselistorder i32 %v0_3976, { 1, 0 }
  uselistorder i32 %v3_3948, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_395e, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_3c58, { 1, 0 }
}

define i32 @function_39e0(i16 %arg1) local_unnamed_addr {
dec_label_pc_39e0:
  %eax.global-to-local = alloca i32, align 4
  %v6_39e0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_39e0
}

define i32 @function_3a34() local_unnamed_addr {
dec_label_pc_3a34:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a51() local_unnamed_addr {
dec_label_pc_3a51:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a51 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a51
}

define i32 @function_3a9d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a9d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3aca() local_unnamed_addr {
dec_label_pc_3aca:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_3aca = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_3aca = mul i8 %v2_3aca, 8
  %v4_3aca = lshr i8 %v2_3aca, ptrtoint (i8** @global_var_5.2484 to i8)
  %v5_3aca = or i8 %v4_3aca, %v3_3aca
  %v6_3aca = load i32, i32* %ecx.global-to-local, align 4
  %v7_3aca = inttoptr i32 %v6_3aca to i8*
  store i8 %v5_3aca, i8* %v7_3aca, align 1
  %v0_3acd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3acd

; uselistorder directives
  uselistorder i8 %v2_3aca, { 1, 0 }
}

define i32 @function_3b69(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b69:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b9a() local_unnamed_addr {
dec_label_pc_3b9a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_3b9a = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_3b9a = mul i8 %v2_3b9a, 8
  %v4_3b9a = lshr i8 %v2_3b9a, ptrtoint (i8** @global_var_5.2484 to i8)
  %v5_3b9a = or i8 %v4_3b9a, %v3_3b9a
  %v6_3b9a = load i32, i32* %ecx.global-to-local, align 4
  %v7_3b9a = inttoptr i32 %v6_3b9a to i8*
  store i8 %v5_3b9a, i8* %v7_3b9a, align 1
  %v0_3b9d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b9d

; uselistorder directives
  uselistorder i8 %v2_3b9a, { 1, 0 }
}

define i32 @function_3bf6() local_unnamed_addr {
dec_label_pc_3bf6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3bff() local_unnamed_addr {
dec_label_pc_3bff:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c58() local_unnamed_addr {
dec_label_pc_3c58:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v0_3c58 = load i32, i32* @eax, align 8
  %v1_3c58 = load i32, i32* @edx, align 4
  %v12_3c58 = icmp eq i32 %v0_3c58, %v1_3c58
  br i1 %v12_3c58, label %bb, label %dec_label_pc_3c5c

bb:                                               ; preds = %dec_label_pc_3c58
  %v1_3c5a = call i32 @function_3cc8()
  br label %dec_label_pc_3c5c

dec_label_pc_3c5c:                                ; preds = %bb, %dec_label_pc_3c58
  %v0_3c60 = phi i32 [ %v1_3c5a, %bb ], [ %v0_3c58, %dec_label_pc_3c58 ]
  %v1_3c60 = add i32 %v0_3c60, -92
  %v2_3c63 = inttoptr i32 %v1_3c60 to i8*
  %v3_3c63 = load i8, i8* %v2_3c63, align 1
  %v10_3c63 = icmp eq i8 %v3_3c63, 0
  %v4_3c6a = inttoptr i32 %tmp8 to i8*
  %v1_3c76 = icmp eq i1 %v10_3c63, false
  br i1 %v1_3c76, label %bb9, label %dec_label_pc_3c78

bb9:                                              ; preds = %dec_label_pc_3c5c
  %v3_3c76 = call i32 @function_3cb8(i32 %v1_3c60)
  br label %dec_label_pc_3c78

dec_label_pc_3c78:                                ; preds = %bb9, %dec_label_pc_3c5c
  call void @_ZN11CNetMessage10readHeaderEPKcj(i32 %tmp4, i8* %v4_3c6a, i32 ptrtoint (i32* @1 to i32))
  br i1 icmp slt (i32* @1, i32* null), label %bb10, label %dec_label_pc_3c81

bb10:                                             ; preds = %dec_label_pc_3c78
  %v1_3c7f = call i32 @function_3cc1()
  br label %dec_label_pc_3c81

dec_label_pc_3c81:                                ; preds = %bb10, %dec_label_pc_3c78
  %v0_3c89 = phi i32 [ %v1_3c7f, %bb10 ], [ ptrtoint (i32* @1 to i32), %dec_label_pc_3c78 ]
  ret i32 %v0_3c89

; uselistorder directives
  uselistorder i32 %v0_3c58, { 1, 0 }
}

define i32 @function_3c8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c8f:
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* @eax, align 8
  %v1_3c9b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3c9b = icmp eq i32 %v1_3c9b, %arg1
  %v1_3ca2 = icmp eq i1 %v3_3c9b, false
  br i1 %v1_3ca2, label %bb, label %dec_label_pc_3ca8

bb:                                               ; preds = %dec_label_pc_3c8f
  %v2_3ca2 = call i32 @function_3dbc()
  br label %dec_label_pc_3ca8

dec_label_pc_3ca8:                                ; preds = %bb, %dec_label_pc_3c8f
  %v0_3cb2 = phi i32 [ %v2_3ca2, %bb ], [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_3c8f ]
  ret i32 %v0_3cb2
}

define i32 @function_3cb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cb8:
  call void @_ZN11CNetMessage8readDataEPKcj(i32 ptrtoint (i32* @1 to i32), i8* bitcast (i32* @1 to i8*), i32 ptrtoint (i32* @1 to i32))
  ret i32 ptrtoint (i32* @1 to i32)
}

define i32 @function_3cc1() local_unnamed_addr {
dec_label_pc_3cc1:
  ret i32 0
}

define i32 @function_3cc8() local_unnamed_addr {
dec_label_pc_3cc8:
  %v0_3cc8 = load i32, i32* @ebx, align 4
  %v1_3cc8 = add i32 %v0_3cc8, -4
  %v2_3cc8 = inttoptr i32 %v1_3cc8 to i32*
  %v3_3cc8 = load i32, i32* %v2_3cc8, align 4
  %v1_3ccb = add i32 %v3_3cc8, ptrtoint (i8** @global_var_1cc.2485 to i32)
  ret i32 %v1_3ccb
}

define i32 @function_3cd8() local_unnamed_addr {
dec_label_pc_3cd8:
  %v0_3cd8 = load i32, i32* @ebx, align 4
  %v1_3cd8 = add i32 %v0_3cd8, -4
  %v2_3cd8 = inttoptr i32 %v1_3cd8 to i32*
  %v3_3cd8 = load i32, i32* %v2_3cd8, align 4
  %v1_3cdb = add i32 %v3_3cd8, ptrtoint (i8** @global_var_1cc.2485 to i32)
  store i32 %v1_3cdb, i32* @ecx, align 4
  %v0_3ce1 = load i32, i32* @eax, align 8
  ret i32 %v0_3ce1
}

define i32 @function_3ce8() local_unnamed_addr {
dec_label_pc_3ce8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_52 = alloca i32, align 4
  %stack_var_47 = alloca i32, align 4
  %v0_3ce8 = load i32, i32* %eax.global-to-local, align 8
  %v1_3ce8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3ce8 = sub i32 %v0_3ce8, %v1_3ce8
  store i32 %v2_3ce8, i32* %eax.global-to-local, align 8
  %v2_3cee = ptrtoint i32* %stack_var_52 to i32
  store i32 %v2_3cee, i32* @ebx, align 4
  %v0_3cfa = load i32, i32* %ecx.global-to-local, align 4
  %v4_3d01 = bitcast i32* %stack_var_47 to i8*
  %v5_3d01 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc(i32 %v2_3cee, i32 %v0_3cfa, i32 %v2_3ce8, i8* %v4_3d01)
  store i32 %v5_3d01, i32* @eax, align 8
  %v0_3d06 = call i32 @function_3a34()
  store i32 %v0_3d06, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d06

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_3d10() local_unnamed_addr {
dec_label_pc_3d10:
  store i32 0, i32* @eax, align 8
  %v0_3d19 = call i32 @function_3bf6()
  ret i32 %v0_3d19
}

define i32 @function_3d20() local_unnamed_addr {
dec_label_pc_3d20:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3d20 = load i32, i32* %esi.global-to-local, align 4
  %v1_3d20 = add i32 %v0_3d20, ptrtoint (i32* @global_var_dc.2450 to i32)
  %v0_3d26 = load i32, i32* %edi.global-to-local, align 4
  %v2_3d2d = inttoptr i32 %v1_3d20 to i32*
  %v3_3d2d = call i32 @_ZNSt5dequeI11CNetMessageSaIS0_EE16_M_push_back_auxERKS0_(i32* %v2_3d2d, i32 %v0_3d26)
  store i32 %v3_3d2d, i32* @eax, align 8
  %v0_3d39 = call i32 @function_3bff()
  ret i32 %v0_3d39
}

define i32 @function_3d40() local_unnamed_addr {
dec_label_pc_3d40:
  %v1_3d48 = call i32 @function_3b69(i32 0)
  ret i32 %v1_3d48
}

define i32 @function_3d50() local_unnamed_addr {
dec_label_pc_3d50:
  %v1_3d58 = call i32 @function_3a9d(i32 0)
  ret i32 %v1_3d58
}

define i32 @function_3d5e() local_unnamed_addr {
dec_label_pc_3d5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d5e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d5e
}

define i32 @function_3d74() local_unnamed_addr {
dec_label_pc_3d74:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d74 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d74
}

define i32 @function_3d82() local_unnamed_addr {
dec_label_pc_3d82:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3d92() local_unnamed_addr {
dec_label_pc_3d92:
  %v0_3d94 = call i32 @function_3d82()
  ret i32 %v0_3d94
}

define i32 @function_3d9c() local_unnamed_addr {
dec_label_pc_3d9c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3dab() local_unnamed_addr {
dec_label_pc_3dab:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3dab = load i32, i32* %ecx.global-to-local, align 4
  %v1_3dab = add i32 %v0_3dab, 608472518
  %v2_3dab = inttoptr i32 %v1_3dab to i32*
  %v3_3dab = load i32, i32* %v2_3dab, align 4
  %v4_3dab = add i32 %v3_3dab, -1
  store i32 %v4_3dab, i32* %v2_3dab, align 4
  %v0_3db1 = load i32, i32* %edx.global-to-local, align 4
  %v1_3db1 = trunc i32 %v0_3db1 to i16
  %v2_3db1 = call i8 @__asm_insb(i16 %v1_3db1)
  %v3_3db1 = load i32, i32* %edi.global-to-local, align 4
  %v4_3db1 = inttoptr i32 %v3_3db1 to i8*
  store i8 %v2_3db1, i8* %v4_3db1, align 1
  %v0_3db2 = load i32, i32* %eax.global-to-local, align 8
  %v1_3db5 = inttoptr i32 %v0_3db2 to i32*
  %v2_3db5 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* %v1_3db5)
  store i32 %v2_3db5, i32* @eax, align 8
  %v0_3dba = call i32 @function_3d9c()
  store i32 %v0_3dba, i32* %eax.global-to-local, align 8
  ret i32 %v0_3dba

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_3dbc() local_unnamed_addr {
dec_label_pc_3dbc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3dc1() local_unnamed_addr {
dec_label_pc_3dc1:
  call void @_Z16RelayTransactionRK12CTransactionRK7uint256RK11CDataStream(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 ptrtoint (i32* @1 to i32)
}

define void @_Z16RelayTransactionRK12CTransactionRK7uint256RK11CDataStream(i32 %tx, i32 %hash, i32 %ss) local_unnamed_addr {
dec_label_pc_3dd0:
  ret void
}

define i32 @function_3e24() local_unnamed_addr {
dec_label_pc_3e24:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3e24 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3e24 = add i32 %v0_3e24, -1989139388
  %v2_3e24 = inttoptr i32 %v1_3e24 to i32*
  %v3_3e24 = load i32, i32* %v2_3e24, align 4
  %v4_3e24 = sub i32 %v3_3e24, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_3e24, i32* %v2_3e24, align 4
  %v0_3e2a = load i32, i32* %eax.global-to-local, align 8
  %v2_3e2a = add i32 %v0_3e2a, 36
  %v16_3e2a = and i32 %v2_3e2a, 255
  %v18_3e2a = and i32 %v0_3e2a, -256
  %v19_3e2a = or i32 %v16_3e2a, %v18_3e2a
  store i32 %v19_3e2a, i32* %eax.global-to-local, align 8
  %v7_3e54 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull @global_var_a080.2487, i32 ptrtoint ([12 x i8]* @global_var_a23e.2486 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32), i32 1811)
  store i32 12320, i32* @eax, align 8
  %v0_3e5e = call i32 @function_3ec3()
  store i32 %v0_3e5e, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e5e

; uselistorder directives
  uselistorder i32 %v0_3e2a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_3e60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e60:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %stack_var_72 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_72, align 4
  %v0_3e60 = load i1, i1* %sf.global-to-local, align 1
  %v1_3e60 = load i1, i1* %of.global-to-local, align 1
  %v2_3e60 = icmp eq i1 %v0_3e60, %v1_3e60
  br i1 %v2_3e60, label %dec_label_pc_3e62, label %dec_label_pc_3ebb

dec_label_pc_3e62:                                ; preds = %dec_label_pc_3e60
  %v0_3e62 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3e62 = load i32, i32* %eax.global-to-local, align 8
  %v2_3e62 = sub i32 %v0_3e62, %v1_3e62
  %v7_3e62 = icmp ult i32 %v0_3e62, %v1_3e62
  %v8_3e62 = xor i32 %v1_3e62, %v0_3e62
  %v9_3e62 = xor i32 %v2_3e62, %v0_3e62
  %v10_3e62 = and i32 %v9_3e62, %v8_3e62
  %v11_3e62 = icmp slt i32 %v10_3e62, 0
  store i1 %v11_3e62, i1* %of.global-to-local, align 1
  %v13_3e62 = icmp slt i32 %v2_3e62, 0
  store i1 %v13_3e62, i1* %sf.global-to-local, align 1
  %v1_3e64 = icmp eq i1 %v7_3e62, false
  br i1 %v1_3e64, label %bb, label %dec_label_pc_3ebb

bb:                                               ; preds = %dec_label_pc_3e62
  %v2_3e64 = call i32 @function_3ed9()
  store i32 %v2_3e64, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3ebb

dec_label_pc_3ebb:                                ; preds = %dec_label_pc_3e62, %bb, %dec_label_pc_3e60
  %v2_3e6b = ptrtoint i32* %stack_var_72 to i32
  store i1 false, i1* %of.global-to-local, align 1
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 ptrtoint ([17 x i8]* @global_var_a0f0.2490 to i32), i32* %eax.global-to-local, align 8
  %v5_3e81 = call i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11equal_rangeERS2_(i32 %v2_3e6b, i32 ptrtoint ([9 x i8]* @global_var_a108.2489 to i32), i32 ptrtoint ([17 x i8]* @global_var_a0f0.2490 to i32))
  %v0_3e86 = load i32, i32* @esp, align 4
  %v1_3e86 = add i32 %v0_3e86, -4
  %tmp109 = sub i32 3, %v0_3e86
  %v8_3e86 = and i32 %tmp109, %v0_3e86
  %v9_3e86 = icmp slt i32 %v8_3e86, 0
  store i1 %v9_3e86, i1* %of.global-to-local, align 1
  %v11_3e86 = icmp slt i32 %v1_3e86, 0
  store i1 %v11_3e86, i1* %sf.global-to-local, align 1
  %v3_3e89 = load i32, i32* %stack_var_72, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v5_3ea0 = call i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS4_ESC_(i32 ptrtoint ([9 x i8]* @global_var_a108.2489 to i32), i32 %arg1, i32 %v3_3e89)
  store i1 false, i1* %of.global-to-local, align 1
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_a114.2491 to i32), i32* %eax.global-to-local, align 8
  store i32 ptrtoint ([13 x i8]* @global_var_a114.2491 to i32), i32* bitcast ([3 x i8]* @global_var_a0e8.2488 to i32*), align 4
  ret i32 ptrtoint ([13 x i8]* @global_var_a114.2491 to i32)

; uselistorder directives
  uselistorder i32 %v2_3e62, { 1, 0 }
  uselistorder i32* %stack_var_72, { 1, 2, 0 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i1* %of.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_3ebb, { 1, 0, 2 }
}

define i32 @function_3ec3() local_unnamed_addr {
dec_label_pc_3ec3:
  %v1_3ec3 = load i32, i32* @eax, align 8
  %v12_3ec3 = icmp eq i32 %v1_3ec3, 543521385
  br i1 %v12_3ec3, label %bb, label %dec_label_pc_3ecb

bb:                                               ; preds = %dec_label_pc_3ec3
  %v1_3ec9 = call i32 @function_3ed9()
  br label %dec_label_pc_3ecb

dec_label_pc_3ecb:                                ; preds = %bb, %dec_label_pc_3ec3
  %v2_3ecb = phi i32 [ %v1_3ec9, %bb ], [ %v1_3ec3, %dec_label_pc_3ec3 ]
  ret i32 %v2_3ecb

; uselistorder directives
  uselistorder i32 %v1_3ec3, { 1, 0 }
}

define i32 @function_3ed9() local_unnamed_addr {
dec_label_pc_3ed9:
  %v0_3ed9 = load i32, i32* @ebx, align 4
  %v1_3ed9 = add i32 %v0_3ed9, 4
  %v2_3ed9 = inttoptr i32 %v1_3ed9 to i32*
  %v3_3ed9 = load i32, i32* %v2_3ed9, align 4
  store i32 %v3_3ed9, i32* @eax, align 8
  store i32 %v0_3ed9, i32* @edx, align 4
  %v12_3ef0 = icmp eq i32 %v3_3ed9, %v0_3ed9
  br i1 %v12_3ef0, label %bb, label %dec_label_pc_3f00

bb:                                               ; preds = %dec_label_pc_3ed9
  %v4_3efa = call i32 @function_4813(i32 0, i32 0, i32 0)
  br label %dec_label_pc_3f00

dec_label_pc_3f00:                                ; preds = %bb, %dec_label_pc_3ed9
  %v3_3f00 = phi i32 [ %v4_3efa, %bb ], [ %v3_3ed9, %dec_label_pc_3ed9 ]
  ret i32 %v3_3f00

; uselistorder directives
  uselistorder i32 %v3_3ed9, { 1, 0, 2 }
}

define i32 @function_3f0f() local_unnamed_addr {
dec_label_pc_3f0f:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v1_3f0f = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  %v0_3f13 = load i32, i32* @eax, align 8
  %v1_3f13 = load i32, i32* @edx, align 4
  %v12_3f13 = icmp eq i32 %v0_3f13, %v1_3f13
  store i32 %v1_3f0f, i32* @edi, align 4
  br i1 %v12_3f13, label %dec_label_pc_3f51, label %dec_label_pc_3f25

dec_label_pc_3f25:                                ; preds = %dec_label_pc_3f0f
  store i32 %v1_3f13, i32* %edi.global-to-local, align 4
  store i32 %v1_3f0f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_3f2d

dec_label_pc_3f2d:                                ; preds = %dec_label_pc_3f37, %dec_label_pc_3f25
  %v1_3f3d7 = phi i32 [ %v1_3f3d, %dec_label_pc_3f37 ], [ %v0_3f13, %dec_label_pc_3f25 ]
  %v0_3f31 = phi i32 [ %v1_3f37, %dec_label_pc_3f37 ], [ %v1_3f13, %dec_label_pc_3f25 ]
  %v2_3f34 = phi i32 [ %v1_3f3a, %dec_label_pc_3f37 ], [ %v1_3f0f, %dec_label_pc_3f25 ]
  %v1_3f2d = icmp eq i32 %v2_3f34, 0
  br i1 %v1_3f2d, label %dec_label_pc_3f37, label %dec_label_pc_3f31

dec_label_pc_3f31:                                ; preds = %dec_label_pc_3f2d
  %v1_3f31 = inttoptr i32 %v0_3f31 to i8*
  %v2_3f31 = load i8, i8* %v1_3f31, align 1
  %v3_3f34 = inttoptr i32 %v2_3f34 to i8*
  store i8 %v2_3f31, i8* %v3_3f34, align 1
  %v0_3f37.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_3f3a.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_3f3d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3f37

dec_label_pc_3f37:                                ; preds = %dec_label_pc_3f31, %dec_label_pc_3f2d
  %v1_3f3d = phi i32 [ %v1_3f3d.pre, %dec_label_pc_3f31 ], [ %v1_3f3d7, %dec_label_pc_3f2d ]
  %v0_3f3a = phi i32 [ %v0_3f3a.pre, %dec_label_pc_3f31 ], [ 0, %dec_label_pc_3f2d ]
  %v0_3f37 = phi i32 [ %v0_3f37.pre, %dec_label_pc_3f31 ], [ %v0_3f31, %dec_label_pc_3f2d ]
  %v1_3f37 = add i32 %v0_3f37, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_3f37, i32* %edi.global-to-local, align 4
  %v1_3f3a = add i32 %v0_3f3a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_3f3a, i32* %ebp.global-to-local, align 4
  %v12_3f3d = icmp eq i32 %v1_3f37, %v1_3f3d
  %v1_3f3f = icmp eq i1 %v12_3f3d, false
  br i1 %v1_3f3f, label %dec_label_pc_3f2d, label %dec_label_pc_3f41

dec_label_pc_3f41:                                ; preds = %dec_label_pc_3f37
  %v2_3f45 = sub i32 %v1_3f37, %v1_3f13
  %v1_3f47 = load i32, i32* @ecx, align 4
  %v2_3f47 = add i32 %v1_3f47, %v2_3f45
  store i32 %v2_3f47, i32* @edi, align 4
  store i32 %v1_3f0f, i32* @ecx, align 4
  %v2_3f4f = sub i32 %v2_3f47, %v1_3f0f
  store i32 %v2_3f4f, i32* %ebp.global-to-local, align 4
  %phitmp = icmp eq i32 %v2_3f4f, 0
  br label %dec_label_pc_3f51

dec_label_pc_3f51:                                ; preds = %dec_label_pc_3f41, %dec_label_pc_3f0f
  %v0_3f5d = phi i32 [ %v2_3f47, %dec_label_pc_3f41 ], [ %v1_3f0f, %dec_label_pc_3f0f ]
  %v0_3f54 = phi i1 [ %phitmp, %dec_label_pc_3f41 ], [ true, %dec_label_pc_3f0f ]
  %v0_3f51 = load i32, i32* @ebx, align 4
  br i1 %v0_3f54, label %bb, label %dec_label_pc_4093

bb:                                               ; preds = %dec_label_pc_3f51
  %v1_3f93 = add i32 %v0_3f51, 24
  %v2_3f93 = inttoptr i32 %v1_3f93 to i32*
  %v3_3f93 = load i32, i32* %v2_3f93, align 4
  %v1_3f8c = add i32 %v0_3f51, 20
  %v2_3f8c = inttoptr i32 %v1_3f8c to i32*
  %v3_3f8c = load i32, i32* %v2_3f8c, align 4
  %v1_3f83 = add i32 %v0_3f51, 18
  %v2_3f83 = inttoptr i32 %v1_3f83 to i16*
  %v3_3f83 = load i16, i16* %v2_3f83, align 2
  %v1_3f65 = add i32 %v0_3f51, 16
  %v2_3f65 = inttoptr i32 %v1_3f65 to i16*
  %v3_3f65 = load i16, i16* %v2_3f65, align 2
  %v1_3f51 = add i32 %v0_3f51, 12
  %v2_3f51 = inttoptr i32 %v1_3f51 to i32*
  %v3_3f51 = load i32, i32* %v2_3f51, align 4
  %tmp53 = urem i32 %v0_3f5d, 2
  %v4_3f5d = icmp ne i32 %tmp53, 0
  %v2_408d = sext i1 %v4_3f5d to i32
  %v8_408d = sext i16 %v3_3f65 to i32
  %v9_408d = sext i16 %v3_3f83 to i32
  %v10_408d = call i32 @function_4872(i32 %v2_408d, i32 %v3_3f51, i32 %v8_408d, i32 %v9_408d, i32 %v3_3f8c, i32 %v3_3f93)
  br label %dec_label_pc_4093

dec_label_pc_4093:                                ; preds = %bb, %dec_label_pc_3f51
  %v4_4093 = phi i32 [ %v10_408d, %bb ], [ %tmp24, %dec_label_pc_3f51 ]
  ret i32 %v4_4093

; uselistorder directives
  uselistorder i32 %v0_3f51, { 4, 3, 0, 2, 1 }
  uselistorder i32 %v1_3f3a, { 1, 0 }
  uselistorder i32 %v1_3f37, { 1, 0, 3, 2 }
  uselistorder i32 %v1_3f13, { 3, 1, 2, 0 }
  uselistorder i32 %v0_3f13, { 1, 0 }
  uselistorder i32 %v1_3f0f, { 0, 4, 5, 1, 2, 3 }
}

define i32 @function_409a() local_unnamed_addr {
dec_label_pc_409a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_409a = load i32, i32* %ebx.global-to-local, align 4
  %v1_409a = add i32 %v0_409a, -1990712196
  %v2_409a = inttoptr i32 %v1_409a to i32*
  %v3_409a = load i32, i32* %v2_409a, align 4
  %v4_409a = sub i32 %v3_409a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_409a, i32* %v2_409a, align 4
  %v0_40a0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_40a0
}

define i32 @function_40a5() local_unnamed_addr {
dec_label_pc_40a5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i16 @__decompiler_undefined_function_2()
  %tmp39 = call i16 @__decompiler_undefined_function_2()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %v1_40a5 = load i32, i32* @edx, align 4
  store i32 0, i32* @ebx, align 4
  %v0_40a9 = load i32, i32* @edi, align 4
  %v1_40a9 = load i32, i32* @ecx, align 4
  %v12_40a9 = icmp eq i32 %v0_40a9, %v1_40a9
  store i32 %v1_40a5, i32* @ebp, align 4
  br i1 %v12_40a9, label %dec_label_pc_40ec, label %dec_label_pc_40c4

dec_label_pc_40c4:                                ; preds = %dec_label_pc_40a5
  store i32 %v1_40a9, i32* %eax.global-to-local, align 8
  store i32 %v1_40a5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_40c8

dec_label_pc_40c8:                                ; preds = %dec_label_pc_40d1, %dec_label_pc_40c4
  %v1_40d77 = phi i32 [ %v1_40d7, %dec_label_pc_40d1 ], [ %v0_40a9, %dec_label_pc_40c4 ]
  %v0_40cc = phi i32 [ %v1_40d1, %dec_label_pc_40d1 ], [ %v1_40a9, %dec_label_pc_40c4 ]
  %v2_40cf = phi i32 [ %v1_40d4, %dec_label_pc_40d1 ], [ %v1_40a5, %dec_label_pc_40c4 ]
  %v1_40c8 = icmp eq i32 %v2_40cf, 0
  br i1 %v1_40c8, label %dec_label_pc_40d1, label %dec_label_pc_40cc

dec_label_pc_40cc:                                ; preds = %dec_label_pc_40c8
  %v1_40cc = inttoptr i32 %v0_40cc to i8*
  %v2_40cc = load i8, i8* %v1_40cc, align 1
  %v3_40cf = inttoptr i32 %v2_40cf to i8*
  store i8 %v2_40cc, i8* %v3_40cf, align 1
  %v0_40d1.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_40d4.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_40d7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_40d1

dec_label_pc_40d1:                                ; preds = %dec_label_pc_40cc, %dec_label_pc_40c8
  %v1_40d7 = phi i32 [ %v1_40d7.pre, %dec_label_pc_40cc ], [ %v1_40d77, %dec_label_pc_40c8 ]
  %v0_40d4 = phi i32 [ %v0_40d4.pre, %dec_label_pc_40cc ], [ 0, %dec_label_pc_40c8 ]
  %v0_40d1 = phi i32 [ %v0_40d1.pre, %dec_label_pc_40cc ], [ %v0_40cc, %dec_label_pc_40c8 ]
  %v1_40d1 = add i32 %v0_40d1, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_40d1, i32* %eax.global-to-local, align 8
  %v1_40d4 = add i32 %v0_40d4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_40d4, i32* %ebx.global-to-local, align 4
  %v12_40d7 = icmp eq i32 %v1_40d1, %v1_40d7
  %v1_40d9 = icmp eq i1 %v12_40d7, false
  br i1 %v1_40d9, label %dec_label_pc_40c8, label %dec_label_pc_40db

dec_label_pc_40db:                                ; preds = %dec_label_pc_40d1
  %v0_40db = load i32, i32* @ebp, align 4
  store i32 %v1_40a5, i32* @ebp, align 4
  %v1_40e4 = load i32, i32* @ecx, align 4
  %v2_40e4 = sub i32 %v1_40d1, %v1_40e4
  store i32 %v2_40e4, i32* %eax.global-to-local, align 8
  %v2_40e6 = add i32 %v2_40e4, %v0_40db
  store i32 %v2_40e6, i32* @edx, align 4
  %v2_40ea = sub i32 %v2_40e6, %v1_40a5
  store i32 %v2_40ea, i32* @ebx, align 4
  %phitmp = icmp eq i32 %v2_40ea, 0
  br label %dec_label_pc_40ec

dec_label_pc_40ec:                                ; preds = %dec_label_pc_40db, %dec_label_pc_40a5
  %v0_40f2 = phi i32 [ %v2_40e6, %dec_label_pc_40db ], [ %v1_40a5, %dec_label_pc_40a5 ]
  %v0_40f0 = phi i1 [ %phitmp, %dec_label_pc_40db ], [ true, %dec_label_pc_40a5 ]
  br i1 %v0_40f0, label %bb, label %dec_label_pc_41d5

bb:                                               ; preds = %dec_label_pc_40ec
  %tmp48 = urem i32 %v0_40f2, 2
  %v4_40f2 = icmp ne i32 %tmp48, 0
  %v2_41cf = sext i1 %v4_40f2 to i32
  %v20_41cf = sext i16 %tmp39 to i32
  %v21_41cf = sext i16 %tmp36 to i32
  %v22_41cf = call i32 @function_486b(i32 %v2_41cf, i32 %tmp43, i32 %v20_41cf, i32 %v21_41cf, i32 %tmp34, i32 %tmp32, i32 %tmp30, i32 %tmp28, i32 %tmp26, i32 %tmp24, i32 %tmp22, i32 %tmp20, i32 %tmp18, i32 %tmp16, i32 %tmp14, i32 0, i32 0, i32 0)
  store i32 %v22_41cf, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_41d5

dec_label_pc_41d5:                                ; preds = %bb, %dec_label_pc_40ec
  %v4_41d5 = phi i32 [ %v22_41cf, %bb ], [ %tmp14, %dec_label_pc_40ec ]
  ret i32 %v4_41d5

; uselistorder directives
  uselistorder i32 %v1_40d4, { 1, 0 }
  uselistorder i32 %v1_40d1, { 1, 0, 3, 2 }
  uselistorder i32 %v1_40a9, { 1, 2, 0 }
  uselistorder i32 %v0_40a9, { 1, 0 }
  uselistorder i32 %v1_40a5, { 0, 1, 5, 2, 3, 4 }
  uselistorder i1 true, { 0, 1, 4, 2, 3 }
}

define i32 @function_41eb() local_unnamed_addr {
dec_label_pc_41eb:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_200 = alloca i32, align 4
  %v0_41eb = load i32, i32* @ebx, align 4
  %v1_41eb = load i32, i32* @eax, align 8
  %v2_41eb = add i32 %v1_41eb, %v0_41eb
  store i32 %v2_41eb, i32* %ebx.global-to-local, align 4
  %v0_41ed = load i32, i32* @edx, align 4
  %v1_41ed = load i32, i32* @ebp, align 4
  %v12_41ed = icmp eq i32 %v0_41ed, %v1_41ed
  br i1 %v12_41ed, label %dec_label_pc_4225, label %dec_label_pc_4206

dec_label_pc_4206:                                ; preds = %dec_label_pc_41eb
  store i32 %v1_41ed, i32* %ecx.global-to-local, align 4
  store i32 %v1_41eb, i32* %ebx.global-to-local, align 4
  store i32 %v1_41eb, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_420c

dec_label_pc_420c:                                ; preds = %dec_label_pc_4215, %dec_label_pc_4206
  %v1_421b8 = phi i32 [ %v1_421b, %dec_label_pc_4215 ], [ %v0_41ed, %dec_label_pc_4206 ]
  %v0_4210 = phi i32 [ %v1_4215, %dec_label_pc_4215 ], [ %v1_41ed, %dec_label_pc_4206 ]
  %v2_4213 = phi i32 [ %v1_4218, %dec_label_pc_4215 ], [ %v1_41eb, %dec_label_pc_4206 ]
  %v1_420c = icmp eq i32 %v2_4213, 0
  br i1 %v1_420c, label %dec_label_pc_4215, label %dec_label_pc_4210

dec_label_pc_4210:                                ; preds = %dec_label_pc_420c
  %v1_4210 = inttoptr i32 %v0_4210 to i8*
  %v2_4210 = load i8, i8* %v1_4210, align 1
  %v3_4213 = inttoptr i32 %v2_4213 to i8*
  store i8 %v2_4210, i8* %v3_4213, align 1
  %v0_4215.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_4218.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_421b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_4215

dec_label_pc_4215:                                ; preds = %dec_label_pc_4210, %dec_label_pc_420c
  %v1_421b = phi i32 [ %v1_421b.pre, %dec_label_pc_4210 ], [ %v1_421b8, %dec_label_pc_420c ]
  %v0_4218 = phi i32 [ %v0_4218.pre, %dec_label_pc_4210 ], [ 0, %dec_label_pc_420c ]
  %v0_4215 = phi i32 [ %v0_4215.pre, %dec_label_pc_4210 ], [ %v0_4210, %dec_label_pc_420c ]
  %v1_4215 = add i32 %v0_4215, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_4215, i32* %ecx.global-to-local, align 4
  %v1_4218 = add i32 %v0_4218, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_4218, i32* %ebx.global-to-local, align 4
  %v12_421b = icmp eq i32 %v1_4215, %v1_421b
  %v1_421d = icmp eq i1 %v12_421b, false
  br i1 %v1_421d, label %dec_label_pc_420c, label %dec_label_pc_421f

dec_label_pc_421f:                                ; preds = %dec_label_pc_4215
  %v0_421f = load i32, i32* %edi.global-to-local, align 4
  %v1_4221 = load i32, i32* @ebp, align 4
  %v2_4221 = sub i32 %v1_4215, %v1_4221
  store i32 %v2_4221, i32* %ecx.global-to-local, align 4
  %v2_4223 = add i32 %v2_4221, %v0_421f
  br label %dec_label_pc_4225

dec_label_pc_4225:                                ; preds = %dec_label_pc_421f, %dec_label_pc_41eb
  %v0_4225 = phi i32 [ %v2_4223, %dec_label_pc_421f ], [ %v1_41eb, %dec_label_pc_41eb ]
  %tmp35 = urem i32 %v0_4225, 2
  %v4_4225 = icmp ne i32 %tmp35, 0
  %v2_4233 = ptrtoint i32* %stack_var_200 to i32
  %v5_4290 = call i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_(i32 0, i32 ptrtoint ([9 x i8]* @global_var_a108.2489 to i32), i32 %v2_4233)
  %v4_429f = sext i1 %v4_4225 to i32
  %v1_42a6 = icmp eq i32 %tmp12, 0
  br i1 %v1_42a6, label %bb, label %dec_label_pc_42aa

bb:                                               ; preds = %dec_label_pc_4225
  %v1_42a8 = call i32 @function_42c0()
  br label %dec_label_pc_42aa

dec_label_pc_42aa:                                ; preds = %bb, %dec_label_pc_4225
  %v0_42aa = phi i32 [ %v1_42a8, %bb ], [ %v4_429f, %dec_label_pc_4225 ]
  %v2_42aa = sub i32 %v0_42aa, %tmp12
  ret i32 %v2_42aa

; uselistorder directives
  uselistorder i32 %v1_4218, { 1, 0 }
  uselistorder i32 %v1_4215, { 1, 0, 3, 2 }
  uselistorder i32 %v1_41ed, { 1, 2, 0 }
  uselistorder i32 %v0_41ed, { 1, 0 }
  uselistorder i32 %v1_41eb, { 1, 2, 4, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_a108.2489 to i32), { 1, 2, 0 }
}

define i32 @function_42c0() local_unnamed_addr {
dec_label_pc_42c0:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_42ce = icmp eq i32 %tmp5, 0
  br i1 %v1_42ce, label %bb, label %dec_label_pc_42d2

bb:                                               ; preds = %dec_label_pc_42c0
  %v1_42d0 = call i32 @function_42e8()
  br label %dec_label_pc_42d2

dec_label_pc_42d2:                                ; preds = %bb, %dec_label_pc_42c0
  %v0_42d2 = phi i32 [ %v1_42d0, %bb ], [ %tmp4, %dec_label_pc_42c0 ]
  %v2_42d2 = sub i32 %v0_42d2, %tmp5
  ret i32 %v2_42d2
}

define i32 @function_42e8() local_unnamed_addr {
dec_label_pc_42e8:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_42f0 = icmp eq i32 %tmp5, 0
  br i1 %v1_42f0, label %bb, label %dec_label_pc_42f4

bb:                                               ; preds = %dec_label_pc_42e8
  %v1_42f2 = call i32 @function_430a()
  br label %dec_label_pc_42f4

dec_label_pc_42f4:                                ; preds = %bb, %dec_label_pc_42e8
  %v0_42f4 = phi i32 [ %v1_42f2, %bb ], [ %tmp4, %dec_label_pc_42e8 ]
  %v2_42f4 = sub i32 %v0_42f4, %tmp5
  ret i32 %v2_42f4
}

define i32 @function_430a() local_unnamed_addr {
dec_label_pc_430a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_430e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %arg15, i32 %arg16) local_unnamed_addr {
dec_label_pc_4493:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_120 = alloca i32, align 4
  %stack_var_112 = alloca i32, align 4
  %v0_430e = load i32, i32* %ebx.global-to-local, align 4
  %v1_430e = add i32 %v0_430e, 20456604
  %v2_430e = inttoptr i32 %v1_430e to i32*
  %v3_430e = load i32, i32* %v2_430e, align 4
  %v4_430e = add i32 %v3_430e, -1
  store i32 %v4_430e, i32* %v2_430e, align 4
  %v2_4314 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_4314 = load i32, i32* %eax.global-to-local, align 8
  %v4_4314 = trunc i32 %v3_4314 to i8
  %v5_4314 = add i8 %v4_4314, %v2_4314
  %v21_4314 = inttoptr i32 %v3_4314 to i8*
  store i8 %v5_4314, i8* %v21_4314, align 1
  %v0_4316 = load i32, i32* %eax.global-to-local, align 8
  %v1_4316 = add i32 %v0_4316, 900
  %v5_4316 = icmp ugt i32 %v0_4316, -901
  %v0_431b = load i32, i32* %edx.global-to-local, align 4
  %v2_431b = zext i1 %v5_4316 to i32
  %v3_431b = add i32 %v2_431b, %v0_431b
  store i32 %arg6, i32* @ebp, align 4
  store i32 %arg11, i32* @ebx, align 4
  store i32 543521385, i32* %eax.global-to-local, align 8
  store i32 %v1_4316, i32* inttoptr (i32 543521385 to i32*), align 4
  store i32 %v3_431b, i32* bitcast ([5 x i8]* @global_var_a0fc.2494 to i32*), align 4
  store i32 %arg3, i32* @global_var_a100.2493, align 4
  store i32 %arg4, i32* bitcast ([13 x i8]* @global_var_a104.2495 to i32*), align 4
  store i32 %arg5, i32* bitcast ([9 x i8]* @global_var_a108.2489 to i32*), align 4
  store i32 %arg6, i32* bitcast ([5 x i8]* @global_var_a10c.2496 to i32*), align 4
  store i32 %arg7, i32* @global_var_a110.2497, align 4
  store i32 %arg8, i32* bitcast ([13 x i8]* @global_var_a114.2491 to i32*), align 4
  store i32 %arg9, i32* bitcast ([9 x i8]* @global_var_a118.2498 to i32*), align 4
  store i32 %arg10, i32* bitcast ([5 x i8]* @global_var_a11c.2499 to i32*), align 4
  store i32 %arg11, i32* %edx.global-to-local, align 4
  store i32 %arg11, i32* @global_var_a120.2410, align 4
  store i32 ptrtoint ([14 x i8]* @global_var_a124.2500 to i32), i32* bitcast ([9 x i8]* @global_var_a0f8.2492 to i32*), align 4
  %v2_449b = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_449b, i32* %eax.global-to-local, align 8
  %v2_44a2 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_112)
  store i32 %v2_44a2, i32* %eax.global-to-local, align 8
  %v2_44a7 = ptrtoint i32* %stack_var_120 to i32
  store i32 %v2_44a7, i32* %edx.global-to-local, align 4
  %v7_44d6 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_120, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 808594996, i32* %ebx.global-to-local, align 4
  store i32 26482, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_44f8

dec_label_pc_44f8:                                ; preds = %dec_label_pc_4507, %dec_label_pc_4493
  %stack_var_56.0.in = phi i32 [ 26482, %dec_label_pc_4493 ], [ %v5_4508, %dec_label_pc_4507 ]
  store i32 %stack_var_56.0.in, i32* %ebx.global-to-local, align 4
  %v1_44fc = inttoptr i32 %stack_var_56.0.in to i32*
  %v2_44fc = load i32, i32* %v1_44fc, align 4
  store i32 %v2_44fc, i32* @edi, align 4
  %v1_44fe = add i32 %v2_44fc, 466
  %v2_44fe = inttoptr i32 %v1_44fe to i8*
  %v3_44fe = load i8, i8* %v2_44fe, align 1
  %v10_44fe = icmp eq i8 %v3_44fe, 0
  %v1_4505 = icmp eq i1 %v10_44fe, false
  br i1 %v1_4505, label %dec_label_pc_4542, label %dec_label_pc_4507

dec_label_pc_4507:                                ; preds = %dec_label_pc_44f8
  %v5_4508 = add i32 %stack_var_56.0.in, 4
  store i32 %v5_4508, i32* @ebx, align 4
  %v16_4511 = icmp eq i32 %stack_var_56.0.in, 808594992
  %v1_4515 = icmp eq i1 %v16_4511, false
  br i1 %v1_4515, label %dec_label_pc_44f8, label %dec_label_pc_4517

dec_label_pc_4517:                                ; preds = %dec_label_pc_4507
  store i32 %v2_44a7, i32* %edx.global-to-local, align 4
  %v2_451e = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_120)
  store i32 %v2_451e, i32* @eax, align 8
  store i32 %arg12, i32* %ebx.global-to-local, align 4
  %v1_452a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_452a = xor i32 %v1_452a, %arg12
  %v3_452a = icmp eq i32 %v2_452a, 0
  store i32 %v2_452a, i32* %ebx.global-to-local, align 4
  %v1_4531 = icmp eq i1 %v3_452a, false
  br i1 %v1_4531, label %bb, label %dec_label_pc_4537

bb:                                               ; preds = %dec_label_pc_4517
  %v2_4531 = call i32 @function_48ca()
  store i32 %v2_4531, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_4537

dec_label_pc_4537:                                ; preds = %bb, %dec_label_pc_4517
  %v0_4541 = phi i32 [ %v2_4531, %bb ], [ %v2_451e, %dec_label_pc_4517 ]
  store i32 %arg13, i32* %ebx.global-to-local, align 4
  ret i32 %v0_4541

dec_label_pc_4542:                                ; preds = %dec_label_pc_44f8
  %v1_4542 = add i32 %v2_44fc, 476
  store i32 %v2_449b, i32* %eax.global-to-local, align 8
  %v7_4573 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_112, i32 %v1_4542, i32 ptrtoint ([17 x i8]* @global_var_a24a.2501 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v7_4573, i32* %eax.global-to-local, align 8
  %v0_4578 = load i32, i32* @edi, align 4
  %v1_4578 = add i32 %v0_4578, 560
  %v2_4578 = inttoptr i32 %v1_4578 to i32*
  %v3_4578 = load i32, i32* %v2_4578, align 4
  store i32 %v3_4578, i32* %eax.global-to-local, align 8
  %v1_457e = icmp eq i32 %v3_4578, 0
  br i1 %v1_457e, label %bb157, label %dec_label_pc_4586

bb157:                                            ; preds = %dec_label_pc_4542
  %v1_4580 = call i32 @function_46d8()
  store i32 %v1_4580, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_4586

dec_label_pc_4586:                                ; preds = %bb157, %dec_label_pc_4542
  %v4_4595 = phi i32 [ %v1_4580, %bb157 ], [ %v3_4578, %dec_label_pc_4542 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v4_4595

; uselistorder directives
  uselistorder i32 %v5_4508, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 6, 1, 7, 8, 9, 10, 2, 3 }
  uselistorder [13 x i8]* @global_var_a114.2491, { 1, 0 }
  uselistorder [9 x i8]* @global_var_a108.2489, { 1, 0 }
  uselistorder i32 543521385, { 1, 2, 0 }
  uselistorder i32 %arg11, { 1, 0, 2 }
}

define i32 @function_45a2() local_unnamed_addr {
dec_label_pc_45a2:
  %stack_var_112 = alloca i32, align 4
  %v2_45a9 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_112)
  ret i32 %v2_45a9
}

define i32 @function_45b8() local_unnamed_addr {
dec_label_pc_45b8:
  %stack_var_128 = alloca i32, align 4
  %v0_45b8 = load i32, i32* @edi, align 4
  %v1_45b8 = add i32 %v0_45b8, 792
  %v7_45ec = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_128, i32 %v1_45b8, i32 ptrtoint ([13 x i8]* @global_var_a261.2504 to i32), i32 ptrtoint ([6 x i8]* @global_var_a25b.2503 to i32))
  %v0_45f1 = load i32, i32* @edi, align 4
  %v1_45f1 = add i32 %v0_45f1, 720
  %v2_45f1 = inttoptr i32 %v1_45f1 to i32*
  %v3_45f1 = load i32, i32* %v2_45f1, align 4
  store i32 %v3_45f1, i32* @ebx, align 4
  %v1_45f7 = icmp eq i32 %v3_45f1, 0
  br i1 %v1_45f7, label %bb, label %dec_label_pc_45fb

bb:                                               ; preds = %dec_label_pc_45b8
  %v1_45f9 = call i32 @function_464c()
  %v0_45fb.pre = load i32, i32* @edi, align 4
  %v0_4619.pre.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_45fb

dec_label_pc_45fb:                                ; preds = %bb, %dec_label_pc_45b8
  %v0_4619.pre = phi i32 [ %v0_4619.pre.pre, %bb ], [ %v3_45f1, %dec_label_pc_45b8 ]
  %v0_45fb = phi i32 [ %v0_45fb.pre, %bb ], [ %v0_45f1, %dec_label_pc_45b8 ]
  %v1_45fb = add i32 %v0_45fb, 716
  store i32 %v1_45fb, i32* @ebp, align 4
  br label %dec_label_pc_4619.outer

dec_label_pc_4610:                                ; preds = %dec_label_pc_4619
  store i32 %v0_4619, i32* @ebp, align 4
  %v1_4612 = add i32 %v0_4619, 8
  %v2_4612 = inttoptr i32 %v1_4612 to i32*
  %v3_4612 = load i32, i32* %v2_4612, align 4
  store i32 %v3_4612, i32* @ebx, align 4
  %v1_4615 = icmp eq i32 %v3_4612, 0
  br i1 %v1_4615, label %dec_label_pc_4633, label %dec_label_pc_4619.outer

dec_label_pc_4619.outer:                          ; preds = %dec_label_pc_4610, %dec_label_pc_45fb
  %v4_463310.ph = phi i32 [ %v0_4619, %dec_label_pc_4610 ], [ %v1_45fb, %dec_label_pc_45fb ]
  %v0_4619.ph = phi i32 [ %v3_4612, %dec_label_pc_4610 ], [ %v0_4619.pre, %dec_label_pc_45fb ]
  br label %dec_label_pc_4619

dec_label_pc_4619:                                ; preds = %dec_label_pc_4619.outer, %dec_label_pc_462c
  %v0_4619 = phi i32 [ %v3_462c, %dec_label_pc_462c ], [ %v0_4619.ph, %dec_label_pc_4619.outer ]
  %v1_4619 = add i32 %v0_4619, 16
  %v4_4628 = trunc i32 %v1_4619 to i8
  %v5_4628 = icmp eq i8 %v4_4628, 0
  br i1 %v5_4628, label %dec_label_pc_4610, label %dec_label_pc_462c

dec_label_pc_462c:                                ; preds = %dec_label_pc_4619
  %v1_462c = add i32 %v0_4619, 12
  %v2_462c = inttoptr i32 %v1_462c to i32*
  %v3_462c = load i32, i32* %v2_462c, align 4
  store i32 %v3_462c, i32* @ebx, align 4
  %v1_462f = icmp eq i32 %v3_462c, 0
  %v1_4631 = icmp eq i1 %v1_462f, false
  br i1 %v1_4631, label %dec_label_pc_4619, label %dec_label_pc_4633

dec_label_pc_4633:                                ; preds = %dec_label_pc_4610, %dec_label_pc_462c
  %v4_4633 = phi i32 [ %v4_463310.ph, %dec_label_pc_462c ], [ %v0_4619, %dec_label_pc_4610 ]
  %v15_4633 = icmp eq i32 %v1_45fb, %v4_4633
  br i1 %v15_4633, label %bb121, label %dec_label_pc_4639

bb121:                                            ; preds = %dec_label_pc_4633
  %v1_4637 = call i32 @function_464c()
  br label %dec_label_pc_4639

dec_label_pc_4639:                                ; preds = %bb121, %dec_label_pc_4633
  %v3_4640 = phi i32 [ %v1_4637, %bb121 ], [ %v1_4619, %dec_label_pc_4633 ]
  ret i32 %v3_4640

; uselistorder directives
  uselistorder i32 %v3_462c, { 1, 2, 0 }
  uselistorder i32 %v0_4619, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_464c, { 1, 0 }
  uselistorder label %dec_label_pc_4633, { 1, 0 }
  uselistorder label %dec_label_pc_4619, { 1, 0 }
}

define i32 @function_464c() local_unnamed_addr {
dec_label_pc_464c:
  %stack_var_128 = alloca i32, align 4
  %v0_464c = load i32, i32* @edi, align 4
  %v1_464c = add i32 %v0_464c, 784
  %v2_464c = inttoptr i32 %v1_464c to i32*
  %v3_464c = load i32, i32* %v2_464c, align 4
  store i32 %v3_464c, i32* @eax, align 8
  %v2_4652 = add i32 %v0_464c, 788
  %v3_4652 = inttoptr i32 %v2_4652 to i32*
  %v4_4652 = load i32, i32* %v3_4652, align 4
  %v15_4652 = icmp eq i32 %v3_464c, %v4_4652
  br i1 %v15_4652, label %bb, label %dec_label_pc_465e

bb:                                               ; preds = %dec_label_pc_464c
  %v1_4658 = call i32 @function_47f8()
  store i32 %v1_4658, i32* @eax, align 8
  br label %dec_label_pc_465e

dec_label_pc_465e:                                ; preds = %bb, %dec_label_pc_464c
  %v1_4669 = phi i32 [ %v1_4658, %bb ], [ %v3_464c, %dec_label_pc_464c ]
  %v1_465e = icmp eq i32 %v1_4669, 0
  br i1 %v1_465e, label %dec_label_pc_46bb, label %dec_label_pc_4662

dec_label_pc_4662:                                ; preds = %dec_label_pc_465e
  %v2_4669 = inttoptr i32 %v1_4669 to i32*
  %v1_4672 = load i32, i32* @eax, align 8
  %v2_4672 = add i32 %v1_4672, 4
  %v3_4672 = inttoptr i32 %v2_4672 to i32*
  %v1_467c = load i32, i32* @eax, align 8
  %v2_467c = add i32 %v1_467c, 8
  %v3_467c = inttoptr i32 %v2_467c to i32*
  %v1_4686 = load i32, i32* @eax, align 8
  %v2_4686 = add i32 %v1_4686, 12
  %v3_4686 = inttoptr i32 %v2_4686 to i32*
  %v1_4690 = load i32, i32* @eax, align 8
  %v2_4690 = add i32 %v1_4690, 16
  %v3_4690 = inttoptr i32 %v2_4690 to i32*
  %v1_469a = load i32, i32* @eax, align 8
  %v2_469a = add i32 %v1_469a, 20
  %v3_469a = inttoptr i32 %v2_469a to i32*
  %v1_46a4 = load i32, i32* @eax, align 8
  %v2_46a4 = add i32 %v1_46a4, 24
  %v3_46a4 = inttoptr i32 %v2_46a4 to i32*
  %v1_46ae = load i32, i32* @eax, align 8
  %v2_46ae = add i32 %v1_46ae, 28
  %v3_46ae = inttoptr i32 %v2_46ae to i32*
  %v1_46b8 = load i32, i32* @eax, align 8
  %v2_46b8 = add i32 %v1_46b8, 32
  %v3_46b8 = inttoptr i32 %v2_46b8 to i32*
  %v0_46bb.pre = load i32, i32* @eax, align 8
  %phitmp = add i32 %v0_46bb.pre, 36
  br label %dec_label_pc_46bb

dec_label_pc_46bb:                                ; preds = %dec_label_pc_4662, %dec_label_pc_465e
  %v0_46bb = phi i32 [ %phitmp, %dec_label_pc_4662 ], [ 36, %dec_label_pc_465e ]
  %v1_46be = load i32, i32* @edi, align 4
  %v2_46be = add i32 %v1_46be, 784
  %v3_46be = inttoptr i32 %v2_46be to i32*
  store i32 %v0_46bb, i32* %v3_46be, align 4
  %v2_46c4 = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_46c4, i32* @ebx, align 4
  %v2_46ce = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_128)
  %v0_46d3 = call i32 @function_45a2()
  ret i32 %v0_46d3

; uselistorder directives
  uselistorder i32 %v3_464c, { 1, 0, 2 }
}

define i32 @function_46d8() local_unnamed_addr {
dec_label_pc_46d8:
  %stack_var_128 = alloca i32, align 4
  %v0_46d8 = load i32, i32* @edi, align 4
  %v1_46d8 = add i32 %v0_46d8, 792
  %v7_470c = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_128, i32 %v1_46d8, i32 ptrtoint ([13 x i8]* @global_var_a261.2504 to i32), i32 ptrtoint ([6 x i8]* @global_var_a25b.2503 to i32))
  %v0_4711 = load i32, i32* @edi, align 4
  %v1_4711 = add i32 %v0_4711, 720
  %v2_4711 = inttoptr i32 %v1_4711 to i32*
  %v3_4711 = load i32, i32* %v2_4711, align 4
  store i32 %v3_4711, i32* @ebx, align 4
  %v1_4717 = icmp eq i32 %v3_4711, 0
  br i1 %v1_4717, label %bb, label %dec_label_pc_471b

bb:                                               ; preds = %dec_label_pc_46d8
  %v1_4719 = call i32 @function_476c()
  %v0_471b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_471b

dec_label_pc_471b:                                ; preds = %bb, %dec_label_pc_46d8
  %v0_471b = phi i32 [ %v0_471b.pre, %bb ], [ %v0_4711, %dec_label_pc_46d8 ]
  %v1_471b = add i32 %v0_471b, 716
  %v1_4727 = call i32 @function_4739(i32 %v1_471b)
  ret i32 %v1_4727

; uselistorder directives
  uselistorder i32 716, { 1, 0 }
}

define i32 @function_4730() local_unnamed_addr {
dec_label_pc_4730:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4730 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4732 = add i32 %v0_4730, 8
  %v2_4732 = inttoptr i32 %v1_4732 to i32*
  %v3_4732 = load i32, i32* %v2_4732, align 4
  store i32 %v3_4732, i32* %ebx.global-to-local, align 4
  %v0_4737 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4737

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_4739(i32 %arg1) local_unnamed_addr {
dec_label_pc_4739:
  %v0_4739 = load i32, i32* @ebx, align 4
  %v1_4739 = add i32 %v0_4739, 16
  ret i32 %v1_4739
}

define i32 @function_4753() local_unnamed_addr {
dec_label_pc_4753:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_476c() local_unnamed_addr {
dec_label_pc_476c:
  %stack_var_128 = alloca i32, align 4
  %v0_476c = load i32, i32* @edi, align 4
  %v1_476c = add i32 %v0_476c, 784
  %v2_476c = inttoptr i32 %v1_476c to i32*
  %v3_476c = load i32, i32* %v2_476c, align 4
  store i32 %v3_476c, i32* @eax, align 8
  %v2_4772 = add i32 %v0_476c, 788
  %v3_4772 = inttoptr i32 %v2_4772 to i32*
  %v4_4772 = load i32, i32* %v3_4772, align 4
  %v15_4772 = icmp eq i32 %v3_476c, %v4_4772
  br i1 %v15_4772, label %bb, label %dec_label_pc_477e

bb:                                               ; preds = %dec_label_pc_476c
  %v1_4778 = call i32 @function_481a()
  store i32 %v1_4778, i32* @eax, align 8
  br label %dec_label_pc_477e

dec_label_pc_477e:                                ; preds = %bb, %dec_label_pc_476c
  %v1_4789 = phi i32 [ %v1_4778, %bb ], [ %v3_476c, %dec_label_pc_476c ]
  %v1_477e = icmp eq i32 %v1_4789, 0
  br i1 %v1_477e, label %dec_label_pc_47db, label %dec_label_pc_4782

dec_label_pc_4782:                                ; preds = %dec_label_pc_477e
  %v2_4789 = inttoptr i32 %v1_4789 to i32*
  %v1_4792 = load i32, i32* @eax, align 8
  %v2_4792 = add i32 %v1_4792, 4
  %v3_4792 = inttoptr i32 %v2_4792 to i32*
  %v1_479c = load i32, i32* @eax, align 8
  %v2_479c = add i32 %v1_479c, 8
  %v3_479c = inttoptr i32 %v2_479c to i32*
  %v1_47a6 = load i32, i32* @eax, align 8
  %v2_47a6 = add i32 %v1_47a6, 12
  %v3_47a6 = inttoptr i32 %v2_47a6 to i32*
  %v1_47b0 = load i32, i32* @eax, align 8
  %v2_47b0 = add i32 %v1_47b0, 16
  %v3_47b0 = inttoptr i32 %v2_47b0 to i32*
  %v1_47ba = load i32, i32* @eax, align 8
  %v2_47ba = add i32 %v1_47ba, 20
  %v3_47ba = inttoptr i32 %v2_47ba to i32*
  %v1_47c4 = load i32, i32* @eax, align 8
  %v2_47c4 = add i32 %v1_47c4, 24
  %v3_47c4 = inttoptr i32 %v2_47c4 to i32*
  %v1_47ce = load i32, i32* @eax, align 8
  %v2_47ce = add i32 %v1_47ce, 28
  %v3_47ce = inttoptr i32 %v2_47ce to i32*
  %v1_47d8 = load i32, i32* @eax, align 8
  %v2_47d8 = add i32 %v1_47d8, 32
  %v3_47d8 = inttoptr i32 %v2_47d8 to i32*
  %v0_47db.pre = load i32, i32* @eax, align 8
  %phitmp = add i32 %v0_47db.pre, 36
  br label %dec_label_pc_47db

dec_label_pc_47db:                                ; preds = %dec_label_pc_4782, %dec_label_pc_477e
  %v0_47db = phi i32 [ %phitmp, %dec_label_pc_4782 ], [ 36, %dec_label_pc_477e ]
  %v1_47de = load i32, i32* @edi, align 4
  %v2_47de = add i32 %v1_47de, 784
  %v3_47de = inttoptr i32 %v2_47de to i32*
  store i32 %v0_47db, i32* %v3_47de, align 4
  %v2_47ee = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_128)
  %v0_47f3 = call i32 @function_45a2()
  ret i32 %v0_47f3

; uselistorder directives
  uselistorder i32 %v3_476c, { 1, 0, 2 }
  uselistorder i32 788, { 1, 0 }
  uselistorder i32 784, { 2, 3, 0, 1 }
}

define i32 @function_47f8() local_unnamed_addr {
dec_label_pc_47f8:
  %v0_47f8 = load i32, i32* @edi, align 4
  %v1_47f8 = add i32 %v0_47f8, 780
  store i32 %v1_47f8, i32* @edi, align 4
  %v0_47fe = load i32, i32* @esi, align 4
  %v0_4802 = load i32, i32* @eax, align 8
  %v3_4809 = inttoptr i32 %v1_47f8 to i32*
  %v4_4809 = call i32 @_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* %v3_4809, i32 %v0_4802, i32 %v0_47fe)
  ret i32 %v4_4809
}

define i32 @function_4813(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4813:
  store i32 0, i32* @ecx, align 4
  %v0_4815 = call i32 @function_3f0f()
  ret i32 %v0_4815
}

define i32 @function_481a() local_unnamed_addr {
dec_label_pc_481a:
  %v0_481a = load i32, i32* @edi, align 4
  %v1_481a = add i32 %v0_481a, 780
  store i32 %v1_481a, i32* @edi, align 4
  %v0_4820 = load i32, i32* @esi, align 4
  %v0_4824 = load i32, i32* @eax, align 8
  %v3_482b = inttoptr i32 %v1_481a to i32*
  %v4_482b = call i32 @_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* %v3_482b, i32 %v0_4824, i32 %v0_4820)
  ret i32 %v4_482b

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_, { 1, 0 }
  uselistorder i32 780, { 1, 0 }
}

define i32 @function_4832() local_unnamed_addr {
dec_label_pc_4832:
  ret i32 1701080942
}

define i32 @function_483e() local_unnamed_addr {
dec_label_pc_483e:
  %eax.global-to-local = alloca i32, align 4
  %v0_483e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_483e
}

define i32 @function_4844() local_unnamed_addr {
dec_label_pc_4844:
  %eax.global-to-local = alloca i32, align 4
  %v0_4844 = load i32, i32* %eax.global-to-local, align 8
  %v1_4844 = add i32 %v0_4844, 4
  store i32 %v1_4844, i32* bitcast ([13 x i8]* @global_var_a0f4.2506 to i32*), align 4
  %v2_484d = inttoptr i32 %v1_4844 to i32*
  %v3_484d = load i32, i32* %v2_484d, align 4
  store i32 %v3_484d, i32* @eax, align 8
  %v1_4850 = add i32 %v3_484d, 484
  store i32 %v3_484d, i32* bitcast ([21 x i8]* @global_var_a0ec.2505 to i32*), align 16
  store i32 %v1_4850, i32* bitcast ([17 x i8]* @global_var_a0f0.2490 to i32*), align 16
  store i32 %v3_484d, i32* bitcast ([3 x i8]* @global_var_a0e8.2488 to i32*), align 4
  %v0_4866 = call i32 @function_3ec3()
  store i32 %v0_4866, i32* %eax.global-to-local, align 8
  ret i32 %v0_4866

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 ()* @function_3ec3, { 1, 0 }
}

define i32 @function_486b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %arg15, i32 %arg16, i32 %arg17, i32 %arg18) local_unnamed_addr {
dec_label_pc_486b:
  store i32 0, i32* @eax, align 8
  %v0_486d = call i32 @function_41eb()
  ret i32 %v0_486d
}

define i32 @function_4872(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_4872:
  store i32 0, i32* @edx, align 4
  %v0_4874 = call i32 @function_40a5()
  ret i32 %v0_4874
}

define i32 @function_487a() local_unnamed_addr {
dec_label_pc_487a:
  %eax.global-to-local = alloca i32, align 4
  %v0_487a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_487a
}

define i32 @function_487b() local_unnamed_addr {
dec_label_pc_487b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_488f() local_unnamed_addr {
dec_label_pc_488f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4890() local_unnamed_addr {
dec_label_pc_4890:
  %eax.global-to-local = alloca i32, align 4
  %v0_4890 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4890
}

define i32 @function_48a0() local_unnamed_addr {
dec_label_pc_48a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_48ac() local_unnamed_addr {
dec_label_pc_48ac:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_48c0() local_unnamed_addr {
dec_label_pc_48c0:
  %v0_48c0 = call i32 @function_488f()
  ret i32 %v0_48c0
}

define i32 @function_48c2() local_unnamed_addr {
dec_label_pc_48c2:
  %v0_48c4 = call i32 @function_48a0()
  ret i32 %v0_48c4
}

define i32 @function_48c6() local_unnamed_addr {
dec_label_pc_48c6:
  %v0_48c8 = call i32 @function_48ac()
  ret i32 %v0_48c8
}

define i32 @function_48ca() local_unnamed_addr {
dec_label_pc_48ca:
  %v1_48ca = load i32, i32* @eax, align 8
  ret i32 %v1_48ca
}

define i32 @function_48d5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_48d5:
  %stack_var_264 = alloca i32, align 4
  %v2_48d5 = ptrtoint i32* %stack_var_264 to i32
  %v4_48e7 = call i32 @_ZNSt5dequeISt4pairIx4CInvESaIS2_EE16_M_push_back_auxERKS2_(i32* bitcast ([11 x i8]* @global_var_a0e0.2507 to i32*), i32 %v2_48d5)
  ret i32 %v4_48e7
}

define i32 @function_48f1() local_unnamed_addr {
dec_label_pc_48f1:
  %stack_var_84 = alloca i32, align 4
  %stack_var_172 = alloca i32, align 4
  %stack_var_236 = alloca i32, align 4
  %v2_48fd = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* nonnull %stack_var_236)
  %v2_490c = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* nonnull %stack_var_172)
  %v2_4918 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* nonnull %stack_var_84)
  store i32 %v2_4918, i32* @eax, align 8
  %v0_491d = call i32 @function_487b()
  ret i32 %v0_491d
}

define i32 @function_4922() local_unnamed_addr {
dec_label_pc_4922:
  %eax.global-to-local = alloca i32, align 4
  %v0_4922 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4922
}

define i32 @function_4926() local_unnamed_addr {
dec_label_pc_4926:
  %eax.global-to-local = alloca i32, align 4
  %v0_4926 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4926
}

define void @_Z16RelayTransactionRK12CTransactionRK7uint256(i32 %tx, i32 %hash) local_unnamed_addr {
dec_label_pc_4930:
  ret void
}

define i32 @function_4a38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_4a38:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4a38 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4a38 = add i32 %v0_4a38, 1698440260
  %v2_4a38 = inttoptr i32 %v1_4a38 to i32*
  %v3_4a38 = load i32, i32* %v2_4a38, align 4
  %v4_4a38 = add i32 %v3_4a38, -1
  store i32 %v4_4a38, i32* %v2_4a38, align 4
  %v0_4a3e = load i32, i32* %eax.global-to-local, align 8
  %v1_4a3e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4a3e = xor i32 %v1_4a3e, %v0_4a3e
  %v3_4a3e = icmp eq i32 %v2_4a3e, 0
  store i32 %v2_4a3e, i32* %eax.global-to-local, align 8
  %v1_4a44 = icmp eq i1 %v3_4a3e, false
  br i1 %v1_4a44, label %dec_label_pc_4a5a, label %dec_label_pc_4a46

dec_label_pc_4a46:                                ; preds = %dec_label_pc_4a38
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_4a3e

dec_label_pc_4a5a:                                ; preds = %dec_label_pc_4a38
  %v0_4a61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4a64 = inttoptr i32 %v0_4a61 to i32*
  %v2_4a64 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* %v1_4a64)
  store i32 %v2_4a64, i32* %eax.global-to-local, align 8
  ret i32 %v2_4a64

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
}

define void @_ZN5CNode11PushVersionEv(i32 %this) local_unnamed_addr {
dec_label_pc_4a80:
  %v0_4a91 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  %v1_4aa0 = add i32 %this, ptrtoint (i8** @global_var_1ce.2508 to i32)
  %v2_4aa0 = inttoptr i32 %v1_4aa0 to i8*
  %v3_4aa0 = load i8, i8* %v2_4aa0, align 1
  %v10_4aa0 = icmp eq i8 %v3_4aa0, 0
  br i1 %v10_4aa0, label %bb, label %dec_label_pc_4aad

bb:                                               ; preds = %dec_label_pc_4a80
  %v2_4aa7 = call i32 @function_50e8(i32 %v0_4a91)
  br label %dec_label_pc_4aad

dec_label_pc_4aad:                                ; preds = %bb, %dec_label_pc_4a80
  ret void
}

define i32 @function_4adb(i16 %arg1) local_unnamed_addr {
dec_label_pc_4adb:
  %eax.global-to-local = alloca i32, align 4
  %v6_4adb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_4adb
}

define i32 @function_4b02(i16 %arg1) local_unnamed_addr {
dec_label_pc_4b02:
  %eax.global-to-local = alloca i32, align 4
  %v6_4b02 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_4b02
}

define i32 @function_4b58(i32 %arg1) local_unnamed_addr {
dec_label_pc_4b58:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4c8c() local_unnamed_addr {
dec_label_pc_4c8c:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_4c8c = load i32, i32* %ecx.global-to-local, align 4
  %v1_4c8c = add i32 %v0_4c8c, 112834
  %v2_4c8c = inttoptr i32 %v1_4c8c to i32*
  %v3_4c8c = load i32, i32* %v2_4c8c, align 4
  %v4_4c8c = add i32 %v3_4c8c, -1
  store i32 %v4_4c8c, i32* %v2_4c8c, align 4
  %v2_4c92 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_4c92 = load i32, i32* @eax, align 8
  %v4_4c92 = trunc i32 %v3_4c92 to i8
  %v5_4c92 = add i8 %v4_4c92, %v2_4c92
  %v21_4c92 = inttoptr i32 %v3_4c92 to i8*
  store i8 %v5_4c92, i8* %v21_4c92, align 1
  %v0_4c94 = load i32, i32* %edx.global-to-local, align 4
  %v1_4c94 = load i32, i32* @ebx, align 4
  %v2_4c94 = add i32 %v1_4c94, 172
  %v3_4c94 = inttoptr i32 %v2_4c94 to i32*
  %v4_4c94 = load i32, i32* %v3_4c94, align 4
  %v15_4c94 = icmp eq i32 %v0_4c94, %v4_4c94
  br i1 %v15_4c94, label %bb, label %dec_label_pc_4ca0

bb:                                               ; preds = %dec_label_pc_4c8c
  %v1_4c9a = call i32 @function_5295()
  store i32 %v1_4c9a, i32* @eax, align 8
  br label %dec_label_pc_4ca0

dec_label_pc_4ca0:                                ; preds = %bb, %dec_label_pc_4c8c
  %v0_4ca0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_4ca0 = add i32 %v0_4ca0, 24
  store i32 %v1_4ca0, i32* %edx.global-to-local, align 4
  %v0_4ca3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v1_4ca0, i32* %esi.global-to-local, align 4
  %v0_4ca9 = load i32, i32* %edi.global-to-local, align 4
  %v2_4cad = call i32 @function_4ccb(i32 %v0_4ca3, i32 %v0_4ca9)
  ret i32 %v2_4cad
}

define i32 @function_4cb0() local_unnamed_addr {
dec_label_pc_4cb0:
  %v3_4cb4 = load i32, i32* @eax, align 8
  ret i32 %v3_4cb4
}

define i32 @function_4ccb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4ccb:
  %v0_4ccb = load i32, i32* @eax, align 8
  %v4_4ccb = trunc i32 %v0_4ccb to i8
  %v5_4ccb = icmp eq i8 %v4_4ccb, 0
  %v1_4ccd = icmp eq i1 %v5_4ccb, false
  br i1 %v1_4ccd, label %bb, label %dec_label_pc_4ccf

bb:                                               ; preds = %dec_label_pc_4ccb
  %v2_4ccd = call i32 @function_4cb0()
  store i32 %v2_4ccd, i32* @eax, align 8
  br label %dec_label_pc_4ccf

dec_label_pc_4ccf:                                ; preds = %bb, %dec_label_pc_4ccb
  %v0_4ccf = load i32, i32* @ebx, align 4
  %v1_4ccf = add i32 %v0_4ccf, 176
  %v2_4ccf = inttoptr i32 %v1_4ccf to i32*
  %v3_4ccf = load i32, i32* %v2_4ccf, align 4
  %v4_4ccf = add i32 %v3_4ccf, 1
  store i32 %v4_4ccf, i32* %v2_4ccf, align 4
  %v0_4cda = load i32, i32* @ebx, align 4
  %v1_4cda = add i32 %v0_4cda, 168
  %v2_4cda = inttoptr i32 %v1_4cda to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_4cda, align 1
  %v4_4ce1 = load i32, i32* @eax, align 8
  ret i32 %v4_4ce1
}

define i32 @function_50a5() local_unnamed_addr {
dec_label_pc_50a5:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_50a5 = load i32, i32* %eax.global-to-local, align 8
  %v1_50a5 = load i1, i1* %cf.global-to-local, align 1
  %v2_50a5 = zext i1 %v1_50a5 to i32
  %v3_50a5 = add i32 %v0_50a5, 478777446
  %v4_50a5 = add i32 %v3_50a5, %v2_50a5
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_50aa = and i32 %v4_50a5, -125
  store i32 %v11_50aa, i32* %eax.global-to-local, align 8
  ret i32 %v11_50aa

; uselistorder directives
  uselistorder i32 %v11_50aa, { 1, 0 }
}

define i32 @function_50c6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_50c6:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_50c6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_50c6 = add i32 %v0_50c6, 14427284
  %v2_50c6 = inttoptr i32 %v1_50c6 to i32*
  %v3_50c6 = load i32, i32* %v2_50c6, align 4
  %v4_50c6 = add i32 %v3_50c6, -1
  store i32 %v4_50c6, i32* %v2_50c6, align 4
  %v2_50cc = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_50cc = load i32, i32* @eax, align 8
  %v4_50cc = trunc i32 %v3_50cc to i8
  %v5_50cc = add i8 %v4_50cc, %v2_50cc
  %v21_50cc = inttoptr i32 %v3_50cc to i8*
  store i8 %v5_50cc, i8* %v21_50cc, align 1
  %v0_50ce = load i32, i32* %edx.global-to-local, align 4
  %v1_50ce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_50ce = xor i32 %v1_50ce, %v0_50ce
  %v3_50ce = icmp eq i32 %v2_50ce, 0
  store i32 %v2_50ce, i32* %edx.global-to-local, align 4
  %v1_50d5 = icmp eq i1 %v3_50ce, false
  br i1 %v1_50d5, label %bb, label %dec_label_pc_50c6.dec_label_pc_50db_crit_edge

dec_label_pc_50c6.dec_label_pc_50db_crit_edge:    ; preds = %dec_label_pc_50c6
  %v0_50e5.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_50db

bb:                                               ; preds = %dec_label_pc_50c6
  %v2_50d5 = call i32 @function_534c()
  br label %dec_label_pc_50db

dec_label_pc_50db:                                ; preds = %dec_label_pc_50c6.dec_label_pc_50db_crit_edge, %bb
  %v0_50e5 = phi i32 [ %v0_50e5.pre, %dec_label_pc_50c6.dec_label_pc_50db_crit_edge ], [ %v2_50d5, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_50e5

; uselistorder directives
  uselistorder label %dec_label_pc_50db, { 1, 0 }
}

define i32 @function_50e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_50e8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_50ec() local_unnamed_addr {
dec_label_pc_50ec:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_50ec = load i32, i32* %ecx.global-to-local, align 4
  %v1_50ec = add i32 %v0_50ec, -371750458
  %v2_50ec = inttoptr i32 %v1_50ec to i32*
  %v3_50ec = load i32, i32* %v2_50ec, align 4
  %v4_50ec = sub i32 %v3_50ec, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_50ec, i32* %v2_50ec, align 4
  %v0_50f5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_50f5
}

define i32 @function_50f8() local_unnamed_addr {
dec_label_pc_50f8:
  %eax.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_50f8 = load i1, i1* %sf.global-to-local, align 1
  %v1_50f8 = load i1, i1* %of.global-to-local, align 1
  %v2_50f8 = icmp eq i1 %v0_50f8, %v1_50f8
  br i1 %v2_50f8, label %dec_label_pc_50f8.dec_label_pc_50fe_crit_edge, label %bb

dec_label_pc_50f8.dec_label_pc_50fe_crit_edge:    ; preds = %dec_label_pc_50f8
  %v1_5101.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_50fe

bb:                                               ; preds = %dec_label_pc_50f8
  %v3_50f8 = call i32 @function_5384()
  store i32 %v3_50f8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_50fe

dec_label_pc_50fe:                                ; preds = %dec_label_pc_50f8.dec_label_pc_50fe_crit_edge, %bb
  %v0_510c = phi i32 [ %v1_5101.pre, %dec_label_pc_50f8.dec_label_pc_50fe_crit_edge ], [ %v3_50f8, %bb ]
  %v0_50fe = load i32, i32* @ebx, align 4
  %v1_50fe = add i32 %v0_50fe, 16
  %v2_50fe = inttoptr i32 %v1_50fe to i32*
  %v3_50fe = load i32, i32* %v2_50fe, align 4
  %v0_5101 = load i32, i32* @edx, align 4
  %v2_5101 = add i32 %v0_5101, %v0_510c
  %v8_5101 = xor i32 %v2_5101, %v0_5101
  %v9_5101 = xor i32 %v2_5101, %v0_510c
  %v10_5101 = and i32 %v8_5101, %v9_5101
  %v11_5101 = icmp slt i32 %v10_5101, 0
  store i1 %v11_5101, i1* %of.global-to-local, align 1
  %v13_5101 = icmp slt i32 %v2_5101, 0
  store i1 %v13_5101, i1* %sf.global-to-local, align 1
  %v5_5117 = inttoptr i32 %v3_50fe to i32*
  %v6_5117 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %v5_5117, i32 %v0_510c, i32 %v2_5101, i32 0)
  store i32 %v6_5117, i32* %eax.global-to-local, align 8
  ret i32 %v6_5117

; uselistorder directives
  uselistorder i32 %v2_5101, { 2, 3, 0, 1 }
  uselistorder i32 %v0_510c, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_50fe, { 1, 0 }
}

define i32 @function_5128(i32 %arg1) local_unnamed_addr {
dec_label_pc_5128:
  %stack_var_88 = alloca i32, align 4
  %stack_var_92 = alloca i32, align 4
  %v2_5137 = ptrtoint i32* %stack_var_92 to i32
  store i32 %arg1, i32* %stack_var_88, align 4
  %v0_513f = load i32, i32* @ebx, align 4
  %v1_513f = add i32 %v0_513f, 16
  %v2_513f = inttoptr i32 %v1_513f to i32*
  %v3_513f = load i32, i32* %v2_513f, align 4
  %v2_5146 = ptrtoint i32* %stack_var_88 to i32
  %v5_515a = inttoptr i32 %v3_513f to i32*
  %v6_515a = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %v5_515a, i32 %v2_5146, i32 %v2_5137, i32 0)
  ret i32 %v6_515a
}

define i32 @function_5130() local_unnamed_addr {
dec_label_pc_5130:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5168(i32 %arg1) local_unnamed_addr {
dec_label_pc_5168:
  %stack_var_88 = alloca i32, align 4
  %stack_var_92 = alloca i32, align 4
  %v2_5174 = ptrtoint i32* %stack_var_92 to i32
  store i32 %arg1, i32* %stack_var_88, align 4
  %v0_517c = load i32, i32* @ebx, align 4
  %v1_517c = add i32 %v0_517c, 16
  %v2_517c = inttoptr i32 %v1_517c to i32*
  %v3_517c = load i32, i32* %v2_517c, align 4
  %v2_5183 = ptrtoint i32* %stack_var_88 to i32
  %v5_5197 = inttoptr i32 %v3_517c to i32*
  %v6_5197 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %v5_5197, i32 %v2_5183, i32 %v2_5174, i32 0)
  ret i32 %v6_5197
}

define i32 @function_5170() local_unnamed_addr {
dec_label_pc_5170:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_51a1() local_unnamed_addr {
dec_label_pc_51a1:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %v0_51a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_51a1 = add i32 %v0_51a1, ptrtoint (i32* @global_var_184.2439 to i32)
  %v2_51a1 = inttoptr i32 %v1_51a1 to i32*
  %v3_51a1 = load i32, i32* %v2_51a1, align 4
  %v2_51a7 = ptrtoint i32* %stack_var_96 to i32
  store i32 %v3_51a1, i32* %stack_var_96, align 4
  %v1_5206 = add i32 %v0_51a1, 424
  %v2_5206 = inttoptr i32 %v1_5206 to i32*
  %v3_5206 = load i32, i32* %v2_5206, align 4
  store i32 %v3_5206, i32* @eax, align 8
  %v1_5213 = call i32 @function_4b58(i32 %v2_51a7)
  ret i32 %v1_5213
}

define i32 @function_522c() local_unnamed_addr {
dec_label_pc_522c:
  %eax.global-to-local = alloca i32, align 4
  %v0_522c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_522c
}

define i32 @function_5238() local_unnamed_addr {
dec_label_pc_5238:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_92 = alloca i32, align 4
  %stack_var_88 = alloca i32, align 4
  %v0_5238 = load i32, i32* @ebx, align 4
  %v1_5238 = add i32 %v0_5238, 16
  %v2_5238 = inttoptr i32 %v1_5238 to i32*
  %v3_5238 = load i32, i32* %v2_5238, align 4
  %v0_523b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_523b, i32* %stack_var_88, align 4
  %v4_5243 = ptrtoint i32* %stack_var_92 to i32
  %v2_5247 = ptrtoint i32* %stack_var_88 to i32
  store i32 %v2_5247, i32* %edx.global-to-local, align 4
  %v5_525b = inttoptr i32 %v3_5238 to i32*
  %v6_525b = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %v5_525b, i32 %v2_5247, i32 %v4_5243, i32 0)
  store i32 %v6_525b, i32* @eax, align 8
  %v0_5260 = call i32 @function_5130()
  ret i32 %v0_5260
}

define i32 @function_5268() local_unnamed_addr {
dec_label_pc_5268:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_92 = alloca i32, align 4
  %stack_var_88 = alloca i32, align 4
  %v0_5268 = load i32, i32* @ebx, align 4
  %v1_5268 = add i32 %v0_5268, 16
  %v2_5268 = inttoptr i32 %v1_5268 to i32*
  %v3_5268 = load i32, i32* %v2_5268, align 4
  %v0_526b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_526b, i32* %stack_var_88, align 4
  %v4_5273 = ptrtoint i32* %stack_var_92 to i32
  %v2_5277 = ptrtoint i32* %stack_var_88 to i32
  store i32 %v2_5277, i32* %edx.global-to-local, align 4
  %v5_528b = inttoptr i32 %v3_5268 to i32*
  %v6_528b = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %v5_528b, i32 %v2_5277, i32 %v4_5273, i32 0)
  store i32 %v6_528b, i32* @eax, align 8
  %v0_5290 = call i32 @function_5170()
  ret i32 %v0_5290
}

define i32 @function_5295() local_unnamed_addr {
dec_label_pc_5295:
  %v0_5295 = load i32, i32* @ebx, align 4
  %v1_5295 = add i32 %v0_5295, 176
  %v2_5295 = inttoptr i32 %v1_5295 to i32*
  %v3_5295 = load i32, i32* %v2_5295, align 4
  %v4_5295 = add i32 %v3_5295, 1
  store i32 %v4_5295, i32* %v2_5295, align 4
  %v3_529c = load i32, i32* @eax, align 8
  ret i32 %v3_529c
}

define i32 @function_52e9() local_unnamed_addr {
dec_label_pc_52e9:
  %eax.global-to-local = alloca i32, align 4
  %v0_52e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_52e9
}

define i32 @function_52ec() local_unnamed_addr {
dec_label_pc_52ec:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5326() local_unnamed_addr {
dec_label_pc_5326:
  %eax.global-to-local = alloca i32, align 4
  %v0_5326 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5326
}

define i32 @function_5338() local_unnamed_addr {
dec_label_pc_5338:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_534c() local_unnamed_addr {
dec_label_pc_534c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5351() local_unnamed_addr {
dec_label_pc_5351:
  %v0_5351 = call i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25()
  store i32 %v0_5351, i32* @eax, align 8
  %v0_5358 = call i32 @function_5338()
  ret i32 %v0_5358
}

define i32 @function_535b() local_unnamed_addr {
dec_label_pc_535b:
  %eax.global-to-local = alloca i32, align 4
  %v0_535b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_535b
}

define i32 @function_5368() local_unnamed_addr {
dec_label_pc_5368:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5370() local_unnamed_addr {
dec_label_pc_5370:
  %stack_var_80 = alloca i32, align 4
  %v2_5370 = ptrtoint i32* %stack_var_80 to i32
  store i32 %v2_5370, i32* @edx, align 4
  %v0_537f = load i32, i32* @eax, align 8
  ret i32 %v0_537f
}

define i32 @function_5384() local_unnamed_addr {
dec_label_pc_5384:
  %v0_5384 = call i32 @_ZN11CDataStream5writeEPKci.part.1144()
  store i32 %v0_5384, i32* @eax, align 8
  store i32 %v0_5384, i32* @ebx, align 4
  %v0_538b = call i32 @function_5370()
  ret i32 %v0_538b
}

define i32 @function_5390() local_unnamed_addr {
dec_label_pc_5390:
  %v0_5390 = call i32 @function_52ec()
  ret i32 %v0_5390
}

define i32 @function_5395() local_unnamed_addr {
dec_label_pc_5395:
  %v0_5397 = call i32 @function_5368()
  ret i32 %v0_5397
}

define void @_Z9StartNodeRN5boost12thread_groupE(i32 %threadGroup) local_unnamed_addr {
dec_label_pc_53a0:
  %v0_53e1 = load i8, i8* inttoptr (i32 40512 to i8*), align 64
  %v7_53e1 = icmp eq i8 %v0_53e1, 0
  %v1_53e8 = icmp eq i1 %v7_53e1, false
  br i1 %v1_53e8, label %bb, label %dec_label_pc_53ee

bb:                                               ; preds = %dec_label_pc_53a0
  %v2_53e8 = call i32 @function_5718()
  br label %dec_label_pc_53ee

dec_label_pc_53ee:                                ; preds = %bb, %dec_label_pc_53a0
  ret void
}

define i32 @function_5470(i32 %arg1) local_unnamed_addr {
dec_label_pc_5470:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_55e6() local_unnamed_addr {
dec_label_pc_55e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_55e6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_55e6
}

define i32 @function_5697(i32 %arg1) local_unnamed_addr {
dec_label_pc_5697:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_56d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_56d4:
  %ecx.global-to-local = alloca i32, align 4
  %v0_56d4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_56d4 = add i32 %v0_56d4, 65545260
  %v2_56d4 = inttoptr i32 %v1_56d4 to i32*
  %v3_56d4 = load i32, i32* %v2_56d4, align 4
  %v4_56d4 = add i32 %v3_56d4, -1
  store i32 %v4_56d4, i32* %v2_56d4, align 4
  %v0_56da = load i32, i32* @eax, align 8
  %v1_56da = inttoptr i32 %v0_56da to i8*
  store i8 0, i8* %v1_56da, align 1
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_56e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_56e4 = xor i32 %v1_56e4, %arg1
  %v3_56e4 = icmp eq i32 %v2_56e4, 0
  store i32 %v2_56e4, i32* %ecx.global-to-local, align 4
  %v1_56eb = icmp eq i1 %v3_56e4, false
  br i1 %v1_56eb, label %bb, label %dec_label_pc_56d4.dec_label_pc_56f1_crit_edge

dec_label_pc_56d4.dec_label_pc_56f1_crit_edge:    ; preds = %dec_label_pc_56d4
  %v0_56fb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_56f1

bb:                                               ; preds = %dec_label_pc_56d4
  %v2_56eb = call i32 @function_5dc7()
  br label %dec_label_pc_56f1

dec_label_pc_56f1:                                ; preds = %dec_label_pc_56d4.dec_label_pc_56f1_crit_edge, %bb
  %v0_56fb = phi i32 [ %v0_56fb.pre, %dec_label_pc_56d4.dec_label_pc_56f1_crit_edge ], [ %v2_56eb, %bb ]
  ret i32 %v0_56fb

; uselistorder directives
  uselistorder label %dec_label_pc_56f1, { 1, 0 }
}

define i32 @function_5700() local_unnamed_addr {
dec_label_pc_5700:
  %v2_570c = call i32 @function_5470(i32 ptrtoint ([22 x i8]* @global_var_a2fe.2517 to i32))
  ret i32 %v2_570c
}

define i32 @function_5718() local_unnamed_addr {
dec_label_pc_5718:
  %stack_var_208 = alloca i32, align 4
  %v2_5718 = ptrtoint i32* %stack_var_208 to i32
  ret i32 %v2_5718
}

define i32 @function_5798() local_unnamed_addr {
dec_label_pc_5798:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_57a5() local_unnamed_addr {
dec_label_pc_57a5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_57ce() local_unnamed_addr {
dec_label_pc_57ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_57ce = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_57ce
}

define i32 @function_5882(i32 %arg1) local_unnamed_addr {
dec_label_pc_5882:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_58a3() local_unnamed_addr {
dec_label_pc_58a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_58ab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_58ab
}

define i32 @function_58b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_58b0:
  ret i32 8
}

define i32 @function_58d6() local_unnamed_addr {
dec_label_pc_58d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_58d6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_58d6
}

define i32 @function_5915() local_unnamed_addr {
dec_label_pc_5915:
  %eax.global-to-local = alloca i32, align 4
  %v0_5915 = load i32, i32* %eax.global-to-local, align 8
  %v1_5915 = icmp eq i32 %v0_5915, 0
  %v1_5917 = icmp eq i1 %v1_5915, false
  br i1 %v1_5917, label %bb, label %dec_label_pc_591d

bb:                                               ; preds = %dec_label_pc_5915
  %v2_5917 = call i32 @function_5cf4()
  store i32 %v2_5917, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_591d

dec_label_pc_591d:                                ; preds = %bb, %dec_label_pc_5915
  %v0_591d = load i32, i32* @esi, align 4
  %v1_591d = load i32, i32* @ebx, align 4
  %v2_591d = add i32 %v1_591d, ptrtoint (i32* @global_var_60.2520 to i32)
  %v3_591d = inttoptr i32 %v2_591d to i32*
  store i32 %v0_591d, i32* %v3_591d, align 4
  %v0_5920 = load i32, i32* @ebx, align 4
  store i32 %v0_5920, i32* bitcast ([5 x i8]* @global_var_a330.2471 to i32*), align 4
  %v0_5926 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5926

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @function_5930() local_unnamed_addr {
dec_label_pc_5930:
  %stack_var_266 = alloca i32, align 4
  %v2_5930 = ptrtoint i32* %stack_var_266 to i32
  ret i32 %v2_5930
}

define i32 @function_5a7b() local_unnamed_addr {
dec_label_pc_5a7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_5a7b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5a7b
}

define i32 @function_5ae3() local_unnamed_addr {
dec_label_pc_5ae3:
  %v0_5ae3 = call i32 @function_5798()
  ret i32 %v0_5ae3
}

define i32 @function_5b01() local_unnamed_addr {
dec_label_pc_5b01:
  %eax.global-to-local = alloca i32, align 4
  %v0_5b01 = load i32, i32* %eax.global-to-local, align 8
  %v11_5b01 = and i32 %v0_5b01, -24
  store i32 %v11_5b01, i32* @eax, align 8
  %v0_5b03 = call i32 @function_85005adc()
  store i32 %v0_5b03, i32* %eax.global-to-local, align 8
  ret i32 %v0_5b03
}

define i32 @function_5b52() local_unnamed_addr {
dec_label_pc_5b52:
  %v0_5b52 = call i32 @function_5798()
  ret i32 %v0_5b52

; uselistorder directives
  uselistorder i32 ()* @function_5798, { 1, 0 }
}

define i32 @function_5b57() local_unnamed_addr {
dec_label_pc_5b57:
  %v2_5b57 = load i32, i32* @eax, align 8
  %v1_5b60 = call i32 @function_5697(i32 %v2_5b57)
  ret i32 %v1_5b60
}

define i32 @function_5bbb() local_unnamed_addr {
dec_label_pc_5bbb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5bc7() local_unnamed_addr {
dec_label_pc_5bc7:
  %v3_5bc7 = load i32, i32* @eax, align 8
  ret i32 %v3_5bc7
}

define i32 @function_5bd8() local_unnamed_addr {
dec_label_pc_5bd8:
  %v2_5bd8 = load i32, i32* @eax, align 8
  %v1_5be0 = call i32 @function_5882(i32 %v2_5bd8)
  ret i32 %v1_5be0
}

define i32 @function_5be5() local_unnamed_addr {
dec_label_pc_5be5:
  store i32 0, i32* @eax, align 8
  %v0_5be7 = call i32 @function_57a5()
  ret i32 %v0_5be7
}

define i32 @function_5bed() local_unnamed_addr {
dec_label_pc_5bed:
  %eax.global-to-local = alloca i32, align 4
  %v0_5bed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5bed
}

define i32 @function_5c08() local_unnamed_addr {
dec_label_pc_5c08:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5c10() local_unnamed_addr {
dec_label_pc_5c10:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5c21() local_unnamed_addr {
dec_label_pc_5c21:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c21 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c21
}

define i32 @function_5c31() local_unnamed_addr {
dec_label_pc_5c31:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5c31 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5c31 = add i32 %v0_5c31, -1983386685
  %v2_5c31 = inttoptr i32 %v1_5c31 to i32*
  %v3_5c31 = load i32, i32* %v2_5c31, align 4
  %v4_5c31 = sub i32 %v3_5c31, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_5c31, i32* %v2_5c31, align 4
  %v0_5c37 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c37
}

define i32 @function_5c38() local_unnamed_addr {
dec_label_pc_5c38:
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_5c38 = add i32 %tmp93, 4
  %v1_5c3e = inttoptr i32 %v1_5c38 to i32*
  %v2_5c3e = call i32 @_ZN5boost6detail12shared_countD1Ev(i32* %v1_5c3e)
  store i32 %v2_5c3e, i32* @eax, align 8
  %v0_5c43 = call i32 @function_5c08()
  ret i32 %v0_5c43
}

define i32 @function_5c46() local_unnamed_addr {
dec_label_pc_5c46:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c46 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c46
}

define i32 @function_5c50() local_unnamed_addr {
dec_label_pc_5c50:
  %v0_5c50 = call i32 @function_5c08()
  ret i32 %v0_5c50
}

define i32 @function_5c53() local_unnamed_addr {
dec_label_pc_5c53:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c53 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c53
}

define i32 @function_5c7b() local_unnamed_addr {
dec_label_pc_5c7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c7b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c7b
}

define i32 @function_5ca9() local_unnamed_addr {
dec_label_pc_5ca9:
  %eax.global-to-local = alloca i32, align 4
  %v0_5ca9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5ca9
}

define i32 @function_5cc0() local_unnamed_addr {
dec_label_pc_5cc0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5cc0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5cc0 = add i32 %v0_5cc0, -1986073661
  %v2_5cc0 = inttoptr i32 %v1_5cc0 to i32*
  %v3_5cc0 = load i32, i32* %v2_5cc0, align 4
  %v4_5cc0 = sub i32 %v3_5cc0, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_5cc0, i32* %v2_5cc0, align 4
  %v0_5cc6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5cc6
}

define i32 @function_5ce0() local_unnamed_addr {
dec_label_pc_5ce0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5cf0() local_unnamed_addr {
dec_label_pc_5cf0:
  %v0_5cf2 = call i32 @function_5ce0()
  ret i32 %v0_5cf2
}

define i32 @function_5cf4() local_unnamed_addr {
dec_label_pc_5cf4:
  %stack_var_152 = alloca i32, align 4
  %stack_var_160 = alloca i32, align 4
  %v2_5cf4 = ptrtoint i32* %stack_var_160 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_160, align 4
  %v1_5d14 = call i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %v2_5cf4)
  %v2_5d19 = ptrtoint i32* %stack_var_152 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_152, align 4
  %v1_5d39 = call i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %v2_5d19)
  store i32 %v1_5d39, i32* @esi, align 4
  %v2_5d45 = call i32 @_ZN5boost21thread_resource_errorD1Ev(i32* nonnull %stack_var_152)
  %v0_5d4a = load i32, i32* @ebx, align 4
  %v1_5d4d = call i32 @_ZN5boost18condition_variableD1Ev(i32 %v0_5d4a)
  store i32 %v1_5d4d, i32* @eax, align 8
  %v0_5d52 = call i32 @function_5bc7()
  ret i32 %v0_5d52

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_, { 1, 0 }
}

define i32 @function_5d57() local_unnamed_addr {
dec_label_pc_5d57:
  %v0_5d57 = call i32 @function_5bbb()
  ret i32 %v0_5d57
}

define i32 @function_5d6e() local_unnamed_addr {
dec_label_pc_5d6e:
  %v0_5d70 = call i32 @function_5c10()
  ret i32 %v0_5d70
}

define i32 @function_5d75() local_unnamed_addr {
dec_label_pc_5d75:
  %v0_5d77 = call i32 @function_5c08()
  ret i32 %v0_5d77
}

define i32 @function_5d88() local_unnamed_addr {
dec_label_pc_5d88:
  %v0_5d88 = call i32 @function_5c08()
  ret i32 %v0_5d88
}

define i32 @function_5da2() local_unnamed_addr {
dec_label_pc_5da2:
  %v0_5da2 = call i32 @function_5cf0()
  ret i32 %v0_5da2
}

define i32 @function_5da8() local_unnamed_addr {
dec_label_pc_5da8:
  %eax.global-to-local = alloca i32, align 4
  %v0_5da8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5da8
}

define i32 @function_5dad() local_unnamed_addr {
dec_label_pc_5dad:
  %eax.global-to-local = alloca i32, align 4
  %v0_5dad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5dad
}

define i32 @function_5db0() local_unnamed_addr {
dec_label_pc_5db0:
  %v0_5db0 = call i32 @function_5c08()
  ret i32 %v0_5db0

; uselistorder directives
  uselistorder i32 ()* @function_5c08, { 4, 3, 2, 1, 0 }
}

define i32 @function_5dc7() local_unnamed_addr {
dec_label_pc_5dc7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_Z11ConnectNode8CAddressPKc(%CAddress.2 %addrConnect, i8* %pszDest) local_unnamed_addr {
dec_label_pc_5dd0:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %v1_5e5d = icmp eq i32 %tmp28, 0
  br i1 %v1_5e5d, label %bb, label %dec_label_pc_5e65

bb:                                               ; preds = %dec_label_pc_5dd0
  %tmp35 = extractvalue %CAddress.2 %addrConnect, 0
  %tmp36 = trunc i64 %tmp35 to i32
  %v3_5e5f = ptrtoint i8* %pszDest to i32
  %v12_5e5f = trunc i32 %tmp18 to i16
  %v13_5e5f = call i32 @function_6198(i32 %tmp36, i32 %v3_5e5f, i32 %tmp22, i32 %tmp20, i16 %v12_5e5f, i32 %tmp16, i32 %tmp14, i32 %tmp12, i32 %tmp10, i32 %tmp8)
  br label %dec_label_pc_5e65

dec_label_pc_5e65:                                ; preds = %bb, %dec_label_pc_5dd0
  ret i32 %tmp28
}

define i32 @function_5f5c() local_unnamed_addr {
dec_label_pc_5f5c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5f84() local_unnamed_addr {
dec_label_pc_5f84:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6049() local_unnamed_addr {
dec_label_pc_6049:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6049 = load i32, i32* %eax.global-to-local, align 8
  %v1_6049 = trunc i32 %v0_6049 to i8
  %v2_6049 = load i1, i1* %cf.global-to-local, align 1
  %v3_6049 = zext i1 %v2_6049 to i8
  %v4_6049 = add i8 %v3_6049, %v1_6049
  %v19_6049 = icmp ule i8 %v4_6049, %v1_6049
  %v21_6049 = icmp eq i1 %v2_6049, %v19_6049
  store i1 %v21_6049, i1* %cf.global-to-local, align 1
  %v22_6049 = zext i8 %v4_6049 to i32
  %v24_6049 = and i32 %v0_6049, -256
  %v25_6049 = or i32 %v22_6049, %v24_6049
  store i32 %v25_6049, i32* %eax.global-to-local, align 8
  %v1_604b = inttoptr i32 %v25_6049 to i8*
  %v2_604b = load i8, i8* %v1_604b, align 1
  %v5_604b = add i8 %v2_604b, %v4_6049
  store i8 %v5_604b, i8* %v1_604b, align 1
  %v0_604d = load i32, i32* %ebx.global-to-local, align 4
  %v3_604d = load i32, i32* %eax.global-to-local, align 8
  %v5_604d7 = mul i32 %v3_604d, 256
  %v1_604d8 = add i32 %v5_604d7, %v0_604d
  %v22_604d = and i32 %v1_604d8, 65280
  %v23_604d = and i32 %v0_604d, -65281
  %v24_604d = or i32 %v22_604d, %v23_604d
  store i32 %v24_604d, i32* %ebx.global-to-local, align 4
  %v11_6050 = and i32 %v3_604d, -240
  store i32 %v11_6050, i32* %eax.global-to-local, align 8
  %v1_6053 = inttoptr i32 %v11_6050 to i32*
  %v2_6053 = load i32, i32* %v1_6053, align 16
  %v4_6053 = add i32 %v2_6053, %v11_6050
  store i32 %v4_6053, i32* %v1_6053, align 16
  %v0_6055 = load i32, i32* %ebx.global-to-local, align 4
  %v3_6055 = load i32, i32* %eax.global-to-local, align 8
  %v4_6055 = trunc i32 %v3_6055 to i8
  %v5_60559 = mul i32 %v3_6055, 256
  %v1_605510 = add i32 %v5_60559, %v0_6055
  %v22_6055 = and i32 %v1_605510, 65280
  %v23_6055 = and i32 %v0_6055, -65281
  %v24_6055 = or i32 %v22_6055, %v23_6055
  store i32 %v24_6055, i32* %ebx.global-to-local, align 4
  %v2_6058 = and i8 %v4_6055, 12
  store i1 false, i1* %cf.global-to-local, align 1
  %v8_6058 = zext i8 %v2_6058 to i32
  %v10_6058 = and i32 %v3_6055, -256
  %v11_6058 = or i32 %v8_6058, %v10_6058
  store i32 %v11_6058, i32* %eax.global-to-local, align 8
  %v5_605a = icmp ugt i8 %v2_6058, 9
  br i1 %v5_605a, label %bb, label %bb110

bb:                                               ; preds = %dec_label_pc_6049
  %v11_605a = add nuw nsw i8 %v2_6058, 6
  %v12_605a = zext i8 %v11_605a to i32
  %v15_605a = or i32 %v12_605a, %v10_6058
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_6049, %bb
  %storemerge5 = phi i32 [ %v15_605a, %bb ], [ %v11_6058, %dec_label_pc_6049 ]
  store i32 %storemerge5, i32* %eax.global-to-local, align 8
  %v0_605b = load i8, i8* inttoptr (i32 1153892352 to i8*), align 65536
  %v2_6060 = and i8 %v0_605b, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v8_6060 = zext i8 %v2_6060 to i32
  %v27_6062 = and i32 %storemerge5, -256
  %v28_6062 = or i32 %v8_6060, %v27_6062
  store i32 %v28_6062, i32* %eax.global-to-local, align 8
  %v0_6063 = load i8, i8* inttoptr (i32 1153892352 to i8*), align 65536
  %v2_6068 = and i8 %v0_6063, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v8_6068 = zext i8 %v2_6068 to i32
  %v11_6068 = or i32 %v8_6068, %v27_6062
  store i32 %v11_6068, i32* %eax.global-to-local, align 8
  %v0_606a = load i32, i32* %ecx.global-to-local, align 4
  %v1_606a = add i32 %v0_606a, 881393664
  %v2_606a = inttoptr i32 %v1_606a to i8*
  %v3_606a = load i8, i8* %v2_606a, align 1
  %v5_606a = udiv i32 %v27_6062, 256
  %v6_606a = trunc i32 %v5_606a to i8
  %v7_606a = and i8 %v3_606a, %v6_606a
  store i8 %v7_606a, i8* %v2_606a, align 1
  %v0_6070 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_6070 = and i32 %v0_6070, -24
  store i32 %v11_6070, i32* @eax, align 8
  %v0_6072 = call i32 @function_a10000cb()
  store i32 %v0_6072, i32* %eax.global-to-local, align 8
  ret i32 %v0_6072

; uselistorder directives
  uselistorder i32 %v3_6055, { 1, 0, 2 }
  uselistorder i32 %v0_6055, { 1, 0 }
  uselistorder i32 %v11_6050, { 0, 2, 1 }
  uselistorder i32 %v3_604d, { 1, 0 }
  uselistorder i32 %v0_604d, { 1, 0 }
  uselistorder i8 %v4_6049, { 0, 2, 1 }
  uselistorder i8 %v1_6049, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
}

define i32 @function_609d() local_unnamed_addr {
dec_label_pc_609d:
  %eax.global-to-local = alloca i32, align 4
  %v0_609d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_609d
}

define i32 @function_60a5() local_unnamed_addr {
dec_label_pc_60a5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_60cc() local_unnamed_addr {
dec_label_pc_60cc:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_60d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_60d3 = xor i32 %v1_60d3, %tmp8
  %v3_60d3 = icmp eq i32 %v2_60d3, 0
  store i32 %v2_60d3, i32* @edx, align 4
  %v1_60da = icmp eq i1 %v3_60d3, false
  br i1 %v1_60da, label %bb, label %dec_label_pc_60cc.dec_label_pc_60e0_crit_edge

dec_label_pc_60cc.dec_label_pc_60e0_crit_edge:    ; preds = %dec_label_pc_60cc
  %v0_60e9.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_60e0

bb:                                               ; preds = %dec_label_pc_60cc
  %v2_60da = call i32 @function_6280()
  br label %dec_label_pc_60e0

dec_label_pc_60e0:                                ; preds = %dec_label_pc_60cc.dec_label_pc_60e0_crit_edge, %bb
  %v0_60e9 = phi i32 [ %v2_60da, %bb ], [ %v0_60e9.pre, %dec_label_pc_60cc.dec_label_pc_60e0_crit_edge ]
  ret i32 %v0_60e9

; uselistorder directives
  uselistorder label %dec_label_pc_60e0, { 1, 0 }
}

define i32 @function_6130() local_unnamed_addr {
dec_label_pc_6130:
  store i32 0, i32* @eax, align 8
  %v0_6132 = call i32 @function_60cc()
  ret i32 %v0_6132
}

define i32 @function_6147() local_unnamed_addr {
dec_label_pc_6147:
  %v0_6147 = call i32 @function_5f5c()
  ret i32 %v0_6147
}

define i32 @function_6167(i16 %arg1) local_unnamed_addr {
dec_label_pc_6167:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6167 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6167 = add i32 %v0_6167, -2071264020
  %v2_6167 = inttoptr i32 %v1_6167 to i32*
  %v3_6167 = load i32, i32* %v2_6167, align 4
  %v4_6167 = add i32 %v3_6167, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_6167, i32* %v2_6167, align 4
  %v0_616d = load i32, i32* %eax.global-to-local, align 8
  %v1_616d = trunc i32 %v0_616d to i8
  %v2_616d = and i8 %v1_616d, -100
  %v8_616d = zext i8 %v2_616d to i32
  %v10_616d = and i32 %v0_616d, -256
  %v11_616d = or i32 %v8_616d, %v10_616d
  store i32 %v11_616d, i32* %eax.global-to-local, align 8
  %v1_616f = inttoptr i32 %v11_616d to i8*
  %v2_616f = load i8, i8* %v1_616f, align 4
  %v5_616f = add i8 %v2_616f, %v2_616d
  store i8 %v5_616f, i8* %v1_616f, align 4
  %v0_6171 = load i32, i32* %ecx.global-to-local, align 4
  %v3_6171 = udiv i32 %v0_6171, 256
  %v5_6171 = add i32 %v3_6171, %v0_6171
  %v20_6171 = and i32 %v5_6171, 255
  %v22_6171 = and i32 %v0_6171, -256
  %v23_6171 = or i32 %v20_6171, %v22_6171
  store i32 %v23_6171, i32* %ecx.global-to-local, align 4
  %v6_6173 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_6173

; uselistorder directives
  uselistorder i32 %v0_6171, { 2, 0, 1 }
}

define i32 @function_618f() local_unnamed_addr {
dec_label_pc_618f:
  %v0_618f = call i32 @function_5f84()
  ret i32 %v0_618f
}

define i32 @function_6198(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i16 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_6198:
  %stack_var_170 = alloca i32, align 4
  %stack_var_88 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_88, align 4
  %v2_6198 = ptrtoint i32* %stack_var_88 to i32
  %v1_619f = call i1 @_Z7IsLocalRK8CService(i32 %v2_6198)
  %v5_61a4 = icmp eq i1 %v1_619f, false
  %v1_61a6 = icmp eq i1 %v5_61a4, false
  br i1 %v1_61a6, label %bb, label %dec_label_pc_61a8

bb:                                               ; preds = %dec_label_pc_6198
  %v2_61a6 = call i32 @function_6130()
  br label %dec_label_pc_61a8

dec_label_pc_61a8:                                ; preds = %bb, %dec_label_pc_6198
  %v3_61a8 = load i32, i32* %stack_var_88, align 4
  store i32 %v3_61a8, i32* %stack_var_170, align 4
  %v2_61e1 = ptrtoint i32* %stack_var_170 to i32
  %v1_61eb = call i32 @_Z8FindNodeRK8CService(i32 %v2_61e1)
  store i32 %v1_61eb, i32* @eax, align 8
  %v1_61f0 = icmp eq i32 %v1_61eb, 0
  br i1 %v1_61f0, label %dec_label_pc_6200, label %dec_label_pc_61f4

dec_label_pc_61f4:                                ; preds = %dec_label_pc_61a8
  %v1_61f4 = add i32 %v1_61eb, 564
  %v2_61f4 = inttoptr i32 %v1_61f4 to i32*
  %v3_61f4 = load i32, i32* %v2_61f4, align 4
  %v4_61f4 = add i32 %v3_61f4, 1
  store i32 %v4_61f4, i32* %v2_61f4, align 4
  %v0_61fb = call i32 @function_60cc()
  ret i32 %v0_61fb

dec_label_pc_6200:                                ; preds = %dec_label_pc_61a8
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_88, { 1, 2, 0 }
}

define i32 @function_6227(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6227:
  %ebx.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %v0_6227 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6227 = add i32 %v0_6227, 1149961452
  %v2_6227 = inttoptr i32 %v1_6227 to i32*
  %v3_6227 = load i32, i32* %v2_6227, align 4
  %v4_6227 = add i32 %v3_6227, 1
  store i32 %v4_6227, i32* %v2_6227, align 4
  %v7_624b = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v8_624b = sub i3 %v7_624b, ptrtoint (i1* @global_var_1.2399 to i3)
  store i3 %v8_624b, i3* %fpu_stat_TOP.global-to-local, align 1
  ret i32 %arg2
}

define i32 @function_6260() local_unnamed_addr {
dec_label_pc_6260:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_160 = alloca i32, align 4
  %v2_6260 = ptrtoint i32* %stack_var_160 to i32
  %v0_626b = load i32, i32* %eax.global-to-local, align 8
  %v4_6276 = inttoptr i32 %v0_626b to i32*
  %v5_6276 = call i32 @_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32 ptrtoint ([3 x i8]* @global_var_a174.2411 to i32), i32* %v4_6276, i32 %v2_6260)
  store i32 %v5_6276, i32* @eax, align 8
  %v0_627b = call i32 @function_60a5()
  store i32 %v0_627b, i32* %eax.global-to-local, align 8
  ret i32 %v0_627b
}

define i32 @function_6280() local_unnamed_addr {
dec_label_pc_6280:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_628f() local_unnamed_addr {
dec_label_pc_628f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_629f() local_unnamed_addr {
dec_label_pc_629f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_62a0() local_unnamed_addr {
dec_label_pc_62a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_62a0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_62a0
}

define i32 @function_62a9() local_unnamed_addr {
dec_label_pc_62a9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_62b1() local_unnamed_addr {
dec_label_pc_62b1:
  %v0_62b1 = call i32 @function_629f()
  ret i32 %v0_62b1
}

define i32 @function_62b3() local_unnamed_addr {
dec_label_pc_62b3:
  %v0_62b5 = call i32 @function_628f()
  ret i32 %v0_62b5
}

define i32 @function_62b8() local_unnamed_addr {
dec_label_pc_62b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_62b8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_62b8
}

define i32 @function_62d1() local_unnamed_addr {
dec_label_pc_62d1:
  %v0_62d1 = call i32 @function_62a9()
  ret i32 %v0_62d1
}

define i32 @function_62d4() local_unnamed_addr {
dec_label_pc_62d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_62d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_62d4
}

define i32 @function_62ea() local_unnamed_addr {
dec_label_pc_62ea:
  %v0_62ea = call i32 @function_62a9()
  ret i32 %v0_62ea

; uselistorder directives
  uselistorder i32 ()* @function_62a9, { 1, 0 }
}

define i1 @_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb(%CAddress %addrConnect, i32 %grantOutbound, i8* %strDest, i1 %fOneShot) local_unnamed_addr {
dec_label_pc_62f0:
  ret i1 %fOneShot
}

define i32 @function_6377(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_6377:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %zf.global-to-local = alloca i1, align 1
  %v2_6377 = load i32, i32* %ecx.global-to-local, align 4
  %v0_6379 = load i32, i32* %eax.global-to-local, align 8
  %v1_6379 = add i32 %v0_6379, 4072572
  %v2_6379 = inttoptr i32 %v1_6379 to i8*
  %v3_6379 = load i8, i8* %v2_6379, align 1
  %v5_6379 = trunc i32 %v2_6377 to i8
  %v6_6379 = urem i8 %v5_6379, 32
  %v7_6379 = icmp eq i8 %v6_6379, 0
  br i1 %v7_6379, label %bb104, label %bb

bb:                                               ; preds = %dec_label_pc_6377
  %v8_6379 = shl i8 %v3_6379, %v6_6379
  %v9_6379 = sub nsw i8 8, %v6_6379
  %v10_6379 = lshr i8 %v3_6379, %v9_6379
  %v11_6379 = or i8 %v10_6379, %v8_6379
  store i8 %v11_6379, i8* %v2_6379, align 1
  %v15_6379 = urem i8 %v11_6379, 2
  %v17_6379 = load i1, i1* %of.global-to-local, align 1
  %v18_6379 = lshr i8 %v11_6379, 7
  %v19_6379 = icmp ne i8 %v18_6379, %v15_6379
  %v20_6379 = icmp eq i8 %v6_6379, 1
  %v21_6379 = select i1 %v20_6379, i1 %v19_6379, i1 %v17_6379
  store i1 %v21_6379, i1* %of.global-to-local, align 1
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_6377, %bb
  %v0_637f = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_637f, label %bb105, label %dec_label_pc_6385

bb105:                                            ; preds = %bb104
  %v1_637f = call i32 @function_6498()
  store i32 %v1_637f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6385

dec_label_pc_6385:                                ; preds = %bb105, %bb104
  %v0_6385 = load i32, i32* @edx, align 4
  store i32 %v0_6385, i32* @eax, align 8
  %v1_638b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %of.global-to-local, align 1
  %v3_638b = icmp eq i32 %v1_638b, %arg1
  store i1 %v3_638b, i1* %zf.global-to-local, align 1
  %v1_6392 = icmp eq i1 %v3_638b, false
  br i1 %v1_6392, label %bb106, label %dec_label_pc_6398

bb106:                                            ; preds = %dec_label_pc_6385
  %v2_6392 = call i32 @function_6567()
  store i32 %v2_6392, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6398

dec_label_pc_6398:                                ; preds = %bb106, %dec_label_pc_6385
  %v0_63ba = phi i32 [ %v2_6392, %bb106 ], [ %v0_6385, %dec_label_pc_6385 ]
  %v0_63b4 = load i32, i32* @esp, align 4
  %v1_63b4 = add i32 %v0_63b4, 156
  %tmp107 = xor i32 %v0_63b4, -2147483648
  %v8_63b4 = and i32 %v1_63b4, %tmp107
  %v9_63b4 = icmp slt i32 %v8_63b4, 0
  store i1 %v9_63b4, i1* %of.global-to-local, align 1
  %v10_63b4 = icmp eq i32 %v1_63b4, 0
  store i1 %v10_63b4, i1* %zf.global-to-local, align 1
  ret i32 %v0_63ba

; uselistorder directives
  uselistorder i32 %v1_63b4, { 1, 0 }
  uselistorder i1 %v3_638b, { 1, 0 }
  uselistorder i8 %v11_6379, { 1, 0, 2 }
  uselistorder i8 %v6_6379, { 3, 2, 1, 0 }
  uselistorder label %bb104, { 1, 0 }
}

define i32 @function_6498() local_unnamed_addr {
dec_label_pc_6498:
  %v2_649c = load i32, i32* @ebx, align 4
  %v3_649e = sext i32 %v2_649c to i64
  %v1_64a1 = add i32 %v2_649c, 4
  %v2_64a1 = inttoptr i32 %v1_64a1 to i32*
  %v3_64a1 = load i32, i32* %v2_64a1, align 4
  %v4_64a4 = inttoptr i32 %v3_64a1 to i8*
  %v14_64e0 = insertvalue %CAddress.2 undef, i64 %v3_649e, 0
  %v16_64e0 = call i32 @_Z11ConnectNode8CAddressPKc(%CAddress.2 %v14_64e0, i8* %v4_64a4)
  ret i32 %v16_64e0
}

define i32 @function_64ec(i8 %arg1) local_unnamed_addr {
dec_label_pc_64ec:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_64ee = load i32, i32* @ebx, align 4
  %v0_64f6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_64f6 = icmp eq i32 %v0_64f6, 0
  br i1 %v1_64f6, label %dec_label_pc_6521, label %dec_label_pc_64fa

dec_label_pc_64fa:                                ; preds = %dec_label_pc_64ec
  %v1_64fa = add i32 %v0_64ee, ptrtoint (i8** @global_var_1d8.2528 to i32)
  %v2_64fa = inttoptr i32 %v1_64fa to i8*
  %v3_64fa = load i8, i8* %v2_64fa, align 1
  %v10_64fa = icmp eq i8 %v3_64fa, 0
  %v1_6501 = icmp eq i1 %v10_64fa, false
  br i1 %v1_6501, label %dec_label_pc_6548, label %dec_label_pc_6503

dec_label_pc_6503:                                ; preds = %dec_label_pc_6548, %dec_label_pc_64fa
  %v1_6506 = phi i32 [ %v1_6506.pre, %dec_label_pc_6548 ], [ %v0_64ee, %dec_label_pc_64fa ]
  %v2_6503 = phi i32 [ %v2_6503.pre, %dec_label_pc_6548 ], [ %v0_64f6, %dec_label_pc_64fa ]
  store i32 %v2_6503, i32* %eax.global-to-local, align 8
  %v2_6506 = add i32 %v1_6506, ptrtoint (i32* @global_var_1d4.2529 to i32)
  %v3_6506 = inttoptr i32 %v2_6506 to i32*
  store i32 %v2_6503, i32* %v3_6506, align 4
  %v0_650c = load i32, i32* %ebp.global-to-local, align 4
  %v1_650c = add i32 %v0_650c, 4
  %v2_650c = inttoptr i32 %v1_650c to i8*
  %v3_650c = load i8, i8* %v2_650c, align 1
  %v4_650c = zext i8 %v3_650c to i32
  store i32 %v4_650c, i32* %eax.global-to-local, align 8
  %v1_6510 = inttoptr i32 %v0_650c to i32*
  store i32 0, i32* %v1_6510, align 4
  %v0_6517 = load i32, i32* %eax.global-to-local, align 8
  %v1_6517 = trunc i32 %v0_6517 to i8
  %v2_6517 = load i32, i32* @ebx, align 4
  %v3_6517 = add i32 %v2_6517, ptrtoint (i8** @global_var_1d8.2528 to i32)
  %v4_6517 = inttoptr i32 %v3_6517 to i8*
  store i8 %v1_6517, i8* %v4_6517, align 1
  %v0_651d = load i32, i32* %ebp.global-to-local, align 4
  %v1_651d = add i32 %v0_651d, 4
  %v2_651d = inttoptr i32 %v1_651d to i8*
  store i8 0, i8* %v2_651d, align 1
  %v0_652b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_6521

dec_label_pc_6521:                                ; preds = %dec_label_pc_6503, %dec_label_pc_64ec
  %v0_652b = phi i32 [ %v0_652b.pre, %dec_label_pc_6503 ], [ %v0_64ee, %dec_label_pc_64ec ]
  %v1_652b = add i32 %v0_652b, ptrtoint (i8** @global_var_1cf.2530 to i32)
  %v2_652b = inttoptr i32 %v1_652b to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_652b, align 1
  %v0_6538 = load i32, i32* @ebx, align 4
  %v1_6538 = add i32 %v0_6538, ptrtoint (i8** @global_var_1cc.2485 to i32)
  %v2_6538 = inttoptr i32 %v1_6538 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_6538, align 1
  %v0_653f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_653f

dec_label_pc_6548:                                ; preds = %dec_label_pc_64fa
  %v1_6548 = add i32 %v0_64ee, ptrtoint (i32* @global_var_1d4.2529 to i32)
  %v2_6548 = inttoptr i32 %v1_6548 to i32*
  %v3_6548 = load i32, i32* %v2_6548, align 4
  store i32 %v3_6548, i32* %eax.global-to-local, align 8
  %v1_6551 = call i32 @_ZN10CSemaphore4postEv(i32 %v3_6548)
  store i32 %v1_6551, i32* %eax.global-to-local, align 8
  %v0_6556 = load i32, i32* @ebx, align 4
  %v1_6556 = add i32 %v0_6556, ptrtoint (i8** @global_var_1d8.2528 to i32)
  %v2_6556 = inttoptr i32 %v1_6556 to i8*
  store i8 0, i8* %v2_6556, align 1
  %v2_6503.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_6506.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_6503

; uselistorder directives
  uselistorder i32 %v2_6503, { 1, 0 }
  uselistorder i32 %v0_64ee, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 5, 2, 3, 4 }
}

define i32 @function_6560() local_unnamed_addr {
dec_label_pc_6560:
  %eax.global-to-local = alloca i32, align 4
  %v0_6562 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6562
}

define i32 @function_6567() local_unnamed_addr {
dec_label_pc_6567:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_657c() local_unnamed_addr {
dec_label_pc_657c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6590() local_unnamed_addr {
dec_label_pc_6590:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6598() local_unnamed_addr {
dec_label_pc_6598:
  %v0_6598 = call i32 @function_657c()
  ret i32 %v0_6598
}

define i32 @function_659a() local_unnamed_addr {
dec_label_pc_659a:
  %v0_659a = call i32 @function_6590()
  ret i32 %v0_659a
}

define i32 @function_65a0() local_unnamed_addr {
dec_label_pc_65a0:
  %v0_65a0 = call i32 @function_6590()
  ret i32 %v0_65a0
}

define i32 @function_65a2() local_unnamed_addr {
dec_label_pc_65a2:
  %v0_65a2 = call i32 @function_6590()
  ret i32 %v0_65a2
}

define i32 @function_65a4() local_unnamed_addr {
dec_label_pc_65a4:
  %v0_65a4 = call i32 @function_6590()
  ret i32 %v0_65a4

; uselistorder directives
  uselistorder i32 ()* @function_6590, { 3, 2, 1, 0 }
}

define i32 @function_65a7() local_unnamed_addr {
dec_label_pc_65a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_65a7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_65a7
}

define void @ProcessOneShot() local_unnamed_addr {
dec_label_pc_65c0:
  ret void
}

define i32 @function_6656() local_unnamed_addr {
dec_label_pc_6656:
  %v1_665b = call i32 @function_89d03904(i32 -2097151838)
  ret i32 %v1_665b
}

define i32 @function_6674() local_unnamed_addr {
dec_label_pc_6674:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_667c() local_unnamed_addr {
dec_label_pc_667c:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_667c = load i32, i32* @esp, align 4
  %v8_667c = add i32 %v0_667c, -32
  %v23_667c = inttoptr i32 %v8_667c to i32*
  %v24_667c = load i32, i32* %edi.global-to-local, align 4
  store i32 %v24_667c, i32* %v23_667c, align 4
  %v0_667d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_667d
}

define i32 @function_66c9(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_66c9:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_60 = alloca i64, align 8
  store i64 %arg1, i64* %stack_var_60, align 8
  %tmp116 = inttoptr i32 %arg3 to i8*
  %tmp119 = urem i32 %arg2, 2
  %tmp120 = icmp ne i32 %tmp119, 0
  %v2_66c9 = load i32, i32* %edi.global-to-local, align 4
  %v3_66c9 = sub i32 %v2_66c9, ptrtoint (i1* @global_var_1.2399 to i32)
  %v18_66c9 = inttoptr i32 %v2_66c9 to i32*
  store i32 %v3_66c9, i32* %v18_66c9, align 4
  %v0_66cb = load i32, i32* %edx.global-to-local, align 4
  %v1_66cb = and i32 %v0_66cb, -65281
  %v2_66cb = or i32 %v1_66cb, ptrtoint (i8* @global_var_5400.2531 to i32)
  store i32 %v2_66cb, i32* %edx.global-to-local, align 4
  %v0_66cd = load i32, i32* %eax.global-to-local, align 8
  %v11_66cd = and i32 %v0_66cd, -212
  store i32 %v11_66cd, i32* %eax.global-to-local, align 8
  %v1_66cf = icmp eq i32 %v11_66cd, 0
  %v1_66d1 = icmp eq i1 %v1_66cf, false
  br i1 %v1_66d1, label %bb, label %dec_label_pc_66d7

bb:                                               ; preds = %dec_label_pc_66c9
  %v2_66d1 = call i32 @function_682a()
  store i32 %v2_66d1, i32* %eax.global-to-local, align 8
  %v0_66d7.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_66d7

dec_label_pc_66d7:                                ; preds = %bb, %dec_label_pc_66c9
  %v4_67309 = phi i32 [ %v2_66d1, %bb ], [ %v11_66cd, %dec_label_pc_66c9 ]
  %v0_66d7 = phi i32 [ %v0_66d7.pre, %bb ], [ %v2_66cb, %dec_label_pc_66c9 ]
  %v4_66d7 = trunc i32 %v0_66d7 to i8
  %v5_66d7 = icmp eq i8 %v4_66d7, 0
  br i1 %v5_66d7, label %dec_label_pc_6728, label %dec_label_pc_66e0

dec_label_pc_66e0:                                ; preds = %dec_label_pc_66d7, %dec_label_pc_6728
  %stack_var_64.0 = phi i1 [ %tmp120, %dec_label_pc_6728 ], [ ptrtoint (i1* @global_var_1.2399 to i1), %dec_label_pc_66d7 ]
  store i32 %arg3, i32* %eax.global-to-local, align 8
  %v2_66e4 = ptrtoint i64* %stack_var_60 to i32
  store i32 %v2_66e4, i32* %edi.global-to-local, align 4
  %v0_66f4 = load i32, i32* @esi, align 4
  %v3_66f4 = sext i32 %v0_66f4 to i64
  %v8_66fb = insertvalue %CAddress undef, i64 %v3_66f4, 0
  %v11_66fb = call i1 @_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb(%CAddress %v8_66fb, i32 %v2_66e4, i8* %tmp116, i1 ptrtoint (i1* @global_var_1.2399 to i1))
  %v13_66fb = sext i1 %v11_66fb to i32
  store i32 %v13_66fb, i32* @eax, align 8
  %v5_6700 = icmp eq i1 %v11_66fb, false
  br i1 %v5_6700, label %bb121, label %dec_label_pc_6708

bb121:                                            ; preds = %dec_label_pc_66e0
  %v1_6702 = call i32 @function_67b0()
  store i32 %v1_6702, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6708

dec_label_pc_6708:                                ; preds = %bb121, %dec_label_pc_66e0
  %tmp122 = zext i1 %stack_var_64.0 to i32
  store i32 %tmp122, i32* %eax.global-to-local, align 8
  %v5_670d = icmp eq i1 %stack_var_64.0, false
  br i1 %v5_670d, label %dec_label_pc_6730, label %dec_label_pc_6711

dec_label_pc_6711:                                ; preds = %dec_label_pc_6708
  %v3_6711 = load i64, i64* %stack_var_60, align 8
  %v4_6711 = trunc i64 %v3_6711 to i32
  store i32 %v4_6711, i32* %eax.global-to-local, align 8
  %v2_6718 = call i32 @_ZN10CSemaphore4postEv(i32 %v4_6711)
  store i32 %v2_6718, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6730

dec_label_pc_6728:                                ; preds = %dec_label_pc_66d7
  %v11_6728 = icmp eq i1 %tmp120, false
  %v1_672d = icmp eq i1 %v11_6728, false
  br i1 %v1_672d, label %dec_label_pc_66e0, label %dec_label_pc_6730

dec_label_pc_6730:                                ; preds = %dec_label_pc_6728, %dec_label_pc_6711, %dec_label_pc_6708
  %v4_6730 = phi i32 [ %v4_67309, %dec_label_pc_6728 ], [ %v2_6718, %dec_label_pc_6711 ], [ %tmp122, %dec_label_pc_6708 ]
  ret i32 %v4_6730

; uselistorder directives
  uselistorder i1 %stack_var_64.0, { 1, 0 }
  uselistorder i32 %v11_66cd, { 2, 1, 0 }
  uselistorder i1 %tmp120, { 1, 0 }
  uselistorder i64* %stack_var_60, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 5, 1, 6, 7 }
  uselistorder i32 (i32)* @_ZN10CSemaphore4postEv, { 1, 0 }
  uselistorder label %dec_label_pc_66e0, { 1, 0 }
}

define i32 @function_6737(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6737:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_6737 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6737 = add i32 %v0_6737, 1702634564
  %v2_6737 = inttoptr i32 %v1_6737 to i32*
  %v3_6737 = load i32, i32* %v2_6737, align 4
  %v4_6737 = add i32 %v3_6737, -1
  store i32 %v4_6737, i32* %v2_6737, align 4
  %v0_673d = load i32, i32* %eax.global-to-local, align 8
  %v1_673d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_673d = xor i32 %v1_673d, %v0_673d
  %v3_673d = icmp eq i32 %v2_673d, 0
  store i32 %v2_673d, i32* @eax, align 8
  %v1_6743 = icmp eq i1 %v3_673d, false
  br i1 %v1_6743, label %bb, label %dec_label_pc_6749

bb:                                               ; preds = %dec_label_pc_6737
  %v2_6743 = call i32 @function_67f1()
  store i32 %v2_6743, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6749

dec_label_pc_6749:                                ; preds = %bb, %dec_label_pc_6737
  %v0_676b = phi i32 [ %v2_6743, %bb ], [ %v2_673d, %dec_label_pc_6737 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_676b
}

define i32 @function_6774() local_unnamed_addr {
dec_label_pc_6774:
  %eax.global-to-local = alloca i32, align 4
  %v0_6774 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6774
}

define i32 @function_6781() local_unnamed_addr {
dec_label_pc_6781:
  %eax.global-to-local = alloca i32, align 4
  %v0_6781 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6781
}

define i32 @function_6787() local_unnamed_addr {
dec_label_pc_6787:
  %eax.global-to-local = alloca i32, align 4
  %v0_6787 = load i32, i32* %eax.global-to-local, align 8
  %v1_6787 = add i32 %v0_6787, 4
  store i32 %v1_6787, i32* bitcast ([12 x i8]* @global_var_a274.2532 to i32*), align 4
  %v2_6790 = inttoptr i32 %v1_6787 to i32*
  %v3_6790 = load i32, i32* %v2_6790, align 4
  store i32 %v3_6790, i32* @eax, align 8
  %v1_6793 = add i32 %v3_6790, ptrtoint (i32* @global_var_200.2533 to i32)
  store i32 %v3_6790, i32* @global_var_a26c.2534, align 4
  store i32 %v1_6793, i32* bitcast ([16 x i8]* @global_var_a270.2535 to i32*), align 4
  store i32 %v3_6790, i32* bitcast ([6 x i8]* @global_var_a268.2536 to i32*), align 4
  %v0_67a9 = call i32 @function_6674()
  store i32 %v0_67a9, i32* %eax.global-to-local, align 8
  ret i32 %v0_67a9
}

define i32 @function_67b0() local_unnamed_addr {
dec_label_pc_67b0:
  %v4_67b8 = load i32, i32* @eax, align 8
  ret i32 %v4_67b8
}

define i32 @function_67d0() local_unnamed_addr {
dec_label_pc_67d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_67d0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_67d0
}

define i32 @function_67d8() local_unnamed_addr {
dec_label_pc_67d8:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %v0_67d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_67db = inttoptr i32 %v0_67d8 to i32*
  %v2_67db = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_67db)
  %v2_67e0 = ptrtoint i32* %stack_var_76 to i32
  ret i32 %v2_67e0
}

define i32 @function_67ec() local_unnamed_addr {
dec_label_pc_67ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_67ec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_67ec
}

define i32 @function_67f1() local_unnamed_addr {
dec_label_pc_67f1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_681a() local_unnamed_addr {
dec_label_pc_681a:
  %v3_681a = load i32, i32* @eax, align 8
  ret i32 %v3_681a
}

define i32 @function_682a() local_unnamed_addr {
dec_label_pc_682a:
  %v0_682a = call i32 @_ZN5boost5mutex6unlockEv.part.28()
  store i32 %v0_682a, i32* @eax, align 8
  store i32 %v0_682a, i32* @esi, align 4
  %v0_6831 = call i32 @function_681a()
  ret i32 %v0_6831
}

define i32 @function_6833() local_unnamed_addr {
dec_label_pc_6833:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_683a = inttoptr i32 %tmp92 to i32*
  %v2_683a = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_683a)
  store i32 %v2_683a, i32* @eax, align 8
  %v0_683f = call i32 @function_681a()
  ret i32 %v0_683f

; uselistorder directives
  uselistorder i32 ()* @function_681a, { 1, 0 }
}

define i32 @function_684c() local_unnamed_addr {
dec_label_pc_684c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_684c = load i32, i32* %ecx.global-to-local, align 4
  %v1_684c = add i32 %v0_684c, -68672452
  %v2_684c = inttoptr i32 %v1_684c to i32*
  %v3_684c = load i32, i32* %v2_684c, align 4
  %v4_684c = sub i32 %v3_684c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_684c, i32* %v2_684c, align 4
  %v0_6852 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6852 = and i32 %v0_6852, -256
  %v2_6854 = load i32, i32* %ecx.global-to-local, align 4
  %v3_6854 = udiv i32 %v2_6854, 256
  %v20_6854 = urem i32 %v3_6854, 256
  %v23_6854 = or i32 %v20_6854, %v1_6852
  store i32 %v23_6854, i32* %ebx.global-to-local, align 4
  %v0_6856 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6856
}

define i32 @function_6857() local_unnamed_addr {
dec_label_pc_6857:
  %eax.global-to-local = alloca i32, align 4
  %v0_6857 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6857
}

define void @_Z21ThreadOpenConnectionsv() local_unnamed_addr {
dec_label_pc_6860:
  ret void
}

define i32 @function_68d2() local_unnamed_addr {
dec_label_pc_68d2:
  %eax.global-to-local = alloca i32, align 4
  %v4_68d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_68d2
}

define i32 @function_68d4() local_unnamed_addr {
dec_label_pc_68d4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_68d4 = load i32, i32* %edx.global-to-local, align 4
  %v1_68d4 = trunc i32 %v0_68d4 to i16
  %v2_68d4 = call i8 @__asm_insb(i16 %v1_68d4)
  %v3_68d4 = load i32, i32* @edi, align 4
  %v4_68d4 = inttoptr i32 %v3_68d4 to i8*
  store i8 %v2_68d4, i8* %v4_68d4, align 1
  %v0_68d5 = load i32, i32* %eax.global-to-local, align 8
  %v11_68d5 = and i32 %v0_68d5, -204
  %v1_68d7 = icmp eq i32 %v11_68d5, 0
  %v2_68d9 = load i32, i32* %ebp.global-to-local, align 4
  %v3_68d9 = select i1 %v1_68d7, i32 %v2_68d9, i32 %v11_68d5
  store i32 %v3_68d9, i32* %eax.global-to-local, align 8
  %v2_68dc = icmp slt i32 %v3_68d9, 0
  br i1 %v2_68dc, label %bb, label %dec_label_pc_68e0

bb:                                               ; preds = %dec_label_pc_68d4
  %v1_68de = call i32 @function_68f3()
  store i32 %v1_68de, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_68e0

dec_label_pc_68e0:                                ; preds = %bb, %dec_label_pc_68d4
  %v0_68e0 = load i32, i32* @ebx, align 4
  %v1_68e0 = add i32 %v0_68e0, 8
  %v2_68e0 = inttoptr i32 %v1_68e0 to i32*
  %v3_68e0 = load i32, i32* %v2_68e0, align 4
  store i32 %v3_68e0, i32* %eax.global-to-local, align 8
  ret i32 %v3_68e0

; uselistorder directives
  uselistorder i32 %v11_68d5, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
}

define i32 @function_68eb() local_unnamed_addr {
dec_label_pc_68eb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_68f3() local_unnamed_addr {
dec_label_pc_68f3:
  %v0_68f3 = load i32, i32* @ebx, align 4
  %v1_68f3 = add i32 %v0_68f3, 12
  %v2_68f3 = inttoptr i32 %v1_68f3 to i32*
  %v3_68f3 = load i32, i32* %v2_68f3, align 4
  %v0_68f6 = load i32, i32* @edi, align 4
  store i32 %v0_68f6, i32* @ebx, align 4
  ret i32 %v3_68f3
}

define i32 @function_68fa() local_unnamed_addr {
dec_label_pc_68fa:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_693e() local_unnamed_addr {
dec_label_pc_693e:
  %v3_693e = load i32, i32* @eax, align 8
  ret i32 %v3_693e
}

define i32 @function_6960(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6960:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_69a9() local_unnamed_addr {
dec_label_pc_69a9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_69ad = load i32, i32* %ebx.global-to-local, align 4
  %v1_69ad = add i32 %v0_69ad, 8
  %v2_69ad = inttoptr i32 %v1_69ad to i32*
  %v3_69ad = load i32, i32* %v2_69ad, align 4
  store i32 %v3_69ad, i32* %ebx.global-to-local, align 4
  %v0_69b2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_69b2
}

define i32 @function_69b4() local_unnamed_addr {
dec_label_pc_69b4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_69b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_69b4 = add i32 %v0_69b4, 16
  %v2_69b4 = inttoptr i32 %v1_69b4 to i32*
  %v3_69b4 = load i32, i32* %v2_69b4, align 4
  ret i32 %v3_69b4
}

define i32 @function_69e3() local_unnamed_addr {
dec_label_pc_69e3:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_6a1d() local_unnamed_addr {
dec_label_pc_6a1d:
  %eax.global-to-local = alloca i32, align 4
  %v4_6a50 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_6a50
}

define i32 @function_6a5d() local_unnamed_addr {
dec_label_pc_6a5d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6ac4() local_unnamed_addr {
dec_label_pc_6ac4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6ac5() local_unnamed_addr {
dec_label_pc_6ac5:
  %v0_6ac5 = call i32 @function_6b02()
  ret i32 %v0_6ac5
}

define i32 @function_6ad2() local_unnamed_addr {
dec_label_pc_6ad2:
  %v0_6ad2 = call i32 @function_6a5d()
  ret i32 %v0_6ad2
}

define i32 @function_6af4() local_unnamed_addr {
dec_label_pc_6af4:
  %eax.global-to-local = alloca i32, align 4
  %v0_6af4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6af4
}

define i32 @function_6b02() local_unnamed_addr {
dec_label_pc_6b02:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_6b02 = load i32, i32* @eax, align 8
  %v11_6b02 = xor i32 %v0_6b02, 141
  store i32 %v11_6b02, i32* %eax.global-to-local, align 8
  %v0_6b04 = load i16, i16* @fs, align 2
  %v2_6b04 = load i32, i32* @edi, align 4
  %v3_6b04 = mul i32 %v2_6b04, 4
  %v4_6b04 = add i32 %v3_6b04, %v11_6b02
  %v5_6b04 = inttoptr i32 %v4_6b04 to i16*
  store i16 %v0_6b04, i16* %v5_6b04, align 2
  %v0_6b07 = load i32, i32* %eax.global-to-local, align 8
  %v1_6b07 = inttoptr i32 %v0_6b07 to i8*
  %v2_6b07 = load i8, i8* %v1_6b07, align 1
  %v4_6b07 = trunc i32 %v0_6b07 to i8
  %v5_6b07 = add i8 %v2_6b07, %v4_6b07
  store i8 %v5_6b07, i8* %v1_6b07, align 1
  %v0_6b09 = load i32, i32* @ebp, align 4
  %v1_6b09 = add i32 %v0_6b09, 10232980
  %v2_6b09 = inttoptr i32 %v1_6b09 to i8*
  %v3_6b09 = load i8, i8* %v2_6b09, align 1
  %v4_6b09 = load i32, i32* @ecx, align 4
  %v5_6b09 = trunc i32 %v4_6b09 to i8
  %v6_6b09 = add i8 %v5_6b09, %v3_6b09
  store i8 %v6_6b09, i8* %v2_6b09, align 1
  %v0_6b0f = load i32, i32* %eax.global-to-local, align 8
  %v1_6b0f = inttoptr i32 %v0_6b0f to i8*
  %v2_6b0f = load i8, i8* %v1_6b0f, align 1
  %v4_6b0f = trunc i32 %v0_6b0f to i8
  %v5_6b0f = add i8 %v2_6b0f, %v4_6b0f
  store i8 %v5_6b0f, i8* %v1_6b0f, align 1
  %v0_6b18 = load i32, i32* @ecx, align 4
  %v0_6b1c = load i32, i32* %eax.global-to-local, align 8
  %v0_6b28 = load i32, i32* @edx, align 4
  %v4_6b2b = inttoptr i32 %v0_6b18 to i32*
  %v5_6b2b = call i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_(i32 %v0_6b28, i32 0, i32 %v0_6b1c, i32* %v4_6b2b)
  store i32 %v5_6b2b, i32* %eax.global-to-local, align 8
  %v12_6b48 = icmp eq i32 %tmp5, %tmp4
  br i1 %v12_6b48, label %bb, label %dec_label_pc_6b50

bb:                                               ; preds = %dec_label_pc_6b02
  %v2_6b4e = call i32 @function_6b5f(i32 %tmp3)
  store i32 %v2_6b4e, i32* %eax.global-to-local, align 8
  %v0_6b50.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_6b50

dec_label_pc_6b50:                                ; preds = %bb, %dec_label_pc_6b02
  %v16_6b53 = phi i32 [ %v2_6b4e, %bb ], [ %v5_6b2b, %dec_label_pc_6b02 ]
  %v0_6b50 = phi i32 [ %v0_6b50.pre, %bb ], [ %tmp4, %dec_label_pc_6b02 ]
  %v1_6b53 = add i32 %v0_6b50, 4
  store i32 %v1_6b53, i32* %ebx.global-to-local, align 4
  ret i32 %v16_6b53

; uselistorder directives
  uselistorder i32 %v11_6b02, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_6b5f(i32 %arg1) local_unnamed_addr {
dec_label_pc_6b5f:
  store i32 %arg1, i32* @eax, align 8
  %v1_6b66 = icmp eq i32 %arg1, 0
  br i1 %v1_6b66, label %bb, label %dec_label_pc_6b6a

bb:                                               ; preds = %dec_label_pc_6b5f
  %v1_6b68 = call i32 @function_6b72()
  br label %dec_label_pc_6b6a

dec_label_pc_6b6a:                                ; preds = %bb, %dec_label_pc_6b5f
  %v3_6b6a = phi i32 [ %v1_6b68, %bb ], [ %arg1, %dec_label_pc_6b5f ]
  ret i32 %v3_6b6a
}

define i32 @function_6b72() local_unnamed_addr {
dec_label_pc_6b72:
  %v4_6b79 = load i32, i32* @eax, align 8
  ret i32 %v4_6b79
}

define i32 @function_6b95() local_unnamed_addr {
dec_label_pc_6b95:
  %eax.global-to-local = alloca i32, align 4
  %v0_6b95 = load i32, i32* %eax.global-to-local, align 8
  %v11_6b95 = and i32 %v0_6b95, -125
  store i32 %v11_6b95, i32* %eax.global-to-local, align 8
  ret i32 %v11_6b95

; uselistorder directives
  uselistorder i32 %v11_6b95, { 1, 0 }
}

define i32 @function_6be8() local_unnamed_addr {
dec_label_pc_6be8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6c5e() local_unnamed_addr {
dec_label_pc_6c5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_6c5e = load i32, i32* %eax.global-to-local, align 8
  %v11_6c5e = and i32 %v0_6c5e, -125
  store i32 %v11_6c5e, i32* %eax.global-to-local, align 8
  ret i32 %v11_6c5e

; uselistorder directives
  uselistorder i32 %v11_6c5e, { 1, 0 }
}

define i32 @function_6c67(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_6c67:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = urem i32 %arg1, 2
  %tmp102 = icmp ne i32 %tmp101, 0
  %v4_6c67 = load i32, i32* %ebx.global-to-local, align 4
  %v15_6c67 = icmp eq i32 %v4_6c67, %arg3
  %v1_6c6b = icmp eq i1 %v15_6c67, false
  br i1 %v1_6c6b, label %bb, label %dec_label_pc_6c71

bb:                                               ; preds = %dec_label_pc_6c67
  %v2_6c6b = call i32 @function_6be8()
  br label %dec_label_pc_6c71

dec_label_pc_6c71:                                ; preds = %bb, %dec_label_pc_6c67
  %v3_6c80 = call i32 @_Z10MilliSleepx(i64 500, i32 0)
  store i32 %v3_6c80, i32* @eax, align 8
  %v4_6c85 = sext i1 %tmp102 to i32
  %v5_6c85 = add i32 %v4_6c85, ptrtoint (i1* @global_var_1.2399 to i32)
  %v9_6c85 = icmp ult i32 %v5_6c85, %v4_6c85
  %tmp106 = urem i32 %v5_6c85, 2
  %v23_6c85 = icmp ne i32 %tmp106, 0
  %v5_6c8a = zext i1 %v9_6c85 to i32
  %v6_6c8a = add i32 %v5_6c8a, %arg2
  %v1_6c8f = sext i1 %v23_6c85 to i32
  %v3_6c8f = call i32 @function_6960(i32 %v1_6c8f, i32 %v6_6c8a)
  ret i32 %v3_6c8f
}

define i32 @function_6c94() local_unnamed_addr {
dec_label_pc_6c94:
  %v0_6c98 = call i32 @function_6ac4()
  ret i32 %v0_6c98
}

define i32 @function_6c9e() local_unnamed_addr {
dec_label_pc_6c9e:
  %eax.global-to-local = alloca i32, align 4
  %v0_6c9e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6c9e
}

define i32 @function_6c9f() local_unnamed_addr {
dec_label_pc_6c9f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6cae() local_unnamed_addr {
dec_label_pc_6cae:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6cd3() local_unnamed_addr {
dec_label_pc_6cd3:
  %eax.global-to-local = alloca i32, align 4
  %v0_6cd3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6cd3
}

define i32 @function_6ce3() local_unnamed_addr {
dec_label_pc_6ce3:
  %ecx.global-to-local = alloca i32, align 4
  %v0_6ce3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_6ce3 = add i32 %v0_6ce3, 616336835
  %v2_6ce3 = inttoptr i32 %v1_6ce3 to i32*
  %v3_6ce3 = load i32, i32* %v2_6ce3, align 4
  %v4_6ce3 = add i32 %v3_6ce3, -1
  store i32 %v4_6ce3, i32* %v2_6ce3, align 4
  %v0_6ce9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_6ce9 = sub i32 %v0_6ce9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_6ce9, i32* %ecx.global-to-local, align 4
  %v2_6ceb = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_6ceb = load i32, i32* @eax, align 8
  %v4_6ceb = trunc i32 %v3_6ceb to i8
  %v5_6ceb = add i8 %v4_6ceb, %v2_6ceb
  %v21_6ceb = inttoptr i32 %v3_6ceb to i8*
  store i8 %v5_6ceb, i8* %v21_6ceb, align 1
  %v0_6ced = call i32 @function_6cae()
  ret i32 %v0_6ced
}

define i32 @function_6cef() local_unnamed_addr {
dec_label_pc_6cef:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_188 = alloca i32, align 4
  %v0_6cef = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_6cef, i32* @ebx, align 4
  %v2_6cf1 = ptrtoint i32* %stack_var_188 to i32
  store i32 %v2_6cf1, i32* %eax.global-to-local, align 8
  %v2_6cfb = call i32 @_ZNSt6vectorISsSaISsEED1Ev(i32* nonnull %stack_var_188)
  store i32 %v2_6cfb, i32* @eax, align 8
  %v0_6d00 = call i32 @function_6c9f()
  store i32 %v0_6d00, i32* %eax.global-to-local, align 8
  ret i32 %v0_6d00
}

define i32 @function_6d0a() local_unnamed_addr {
dec_label_pc_6d0a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6d1d() local_unnamed_addr {
dec_label_pc_6d1d:
  %v0_6d1d = call i32 @function_6d0a()
  ret i32 %v0_6d1d
}

define i32 @function_6d1f() local_unnamed_addr {
dec_label_pc_6d1f:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_6d39() local_unnamed_addr {
dec_label_pc_6d39:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6d80() local_unnamed_addr {
dec_label_pc_6d80:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_250 = alloca i32, align 4
  %v0_6d80 = load i32, i32* %ebp.global-to-local, align 4
  %v1_6d80 = add i32 %v0_6d80, -477818944
  %v2_6d80 = inttoptr i32 %v1_6d80 to i32*
  %v3_6d80 = load i32, i32* %v2_6d80, align 4
  %v4_6d80 = add i32 %v3_6d80, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_6d80, i32* %v2_6d80, align 4
  %v2_6d87 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_6d87 = load i32, i32* %eax.global-to-local, align 8
  %v4_6d87 = trunc i32 %v3_6d87 to i8
  %v5_6d87 = add i8 %v4_6d87, %v2_6d87
  %v21_6d87 = inttoptr i32 %v3_6d87 to i8*
  store i8 %v5_6d87, i8* %v21_6d87, align 1
  %v2_6d98 = ptrtoint i32* %stack_var_250 to i32
  %v0_6dab108 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6dab109 = add i32 %v0_6dab108, ptrtoint (i32* @global_var_60.2520 to i32)
  %v2_6dab110 = inttoptr i32 %v1_6dab109 to i32*
  %v3_6dab111 = load i32, i32* %v2_6dab110, align 4
  store i32 %v3_6dab111, i32* %eax.global-to-local, align 8
  %tmp107114 = icmp slt i32 %v3_6dab111, 1
  br i1 %tmp107114, label %dec_label_pc_6d98, label %dec_label_pc_6db2

dec_label_pc_6d98:                                ; preds = %dec_label_pc_6d80, %dec_label_pc_6d98
  %v0_6dab115 = phi i32 [ %v0_6dab, %dec_label_pc_6d98 ], [ %v0_6dab108, %dec_label_pc_6d80 ]
  store i32 %v2_6d98, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_6dab115, 65536
  %v2_6da6 = sdiv i32 %sext, 65536
  %v3_6da6 = call i32 @_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE(i32 %v2_6da6, i32 %v2_6d98)
  store i32 %v3_6da6, i32* %eax.global-to-local, align 8
  %v0_6dab = load i32, i32* @ebx, align 4
  %v1_6dab = add i32 %v0_6dab, ptrtoint (i32* @global_var_60.2520 to i32)
  %v2_6dab = inttoptr i32 %v1_6dab to i32*
  %v3_6dab = load i32, i32* %v2_6dab, align 4
  store i32 %v3_6dab, i32* %eax.global-to-local, align 8
  %tmp107 = icmp slt i32 %v3_6dab, 1
  br i1 %tmp107, label %dec_label_pc_6d98, label %dec_label_pc_6db2

dec_label_pc_6db2:                                ; preds = %dec_label_pc_6d98, %dec_label_pc_6d80
  %v2_6dab.lcssa = phi i32* [ %v2_6dab110, %dec_label_pc_6d80 ], [ %v2_6dab, %dec_label_pc_6d98 ]
  %v3_6dab.lcssa = phi i32 [ %v3_6dab111, %dec_label_pc_6d80 ], [ %v3_6dab, %dec_label_pc_6d98 ]
  %v1_6db2 = sub i32 %v3_6dab.lcssa, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_6db2, i32* %eax.global-to-local, align 8
  store i32 %v1_6db2, i32* %v2_6dab.lcssa, align 4
  br i1 ptrtoint (i1* @global_var_1.2399 to i1), label %bb, label %dec_label_pc_6db2.dec_label_pc_6dc6_crit_edge

dec_label_pc_6db2.dec_label_pc_6dc6_crit_edge:    ; preds = %dec_label_pc_6db2
  %v4_6dc6.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6dc6

bb:                                               ; preds = %dec_label_pc_6db2
  %v2_6dc0 = call i32 @function_741f()
  store i32 %v2_6dc0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_6dc6

dec_label_pc_6dc6:                                ; preds = %dec_label_pc_6db2.dec_label_pc_6dc6_crit_edge, %bb
  %v4_6dc6 = phi i32 [ %v4_6dc6.pre, %dec_label_pc_6db2.dec_label_pc_6dc6_crit_edge ], [ %v2_6dc0, %bb ]
  ret i32 %v4_6dc6

; uselistorder directives
  uselistorder i32 %v0_6dab, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder label %dec_label_pc_6dc6, { 1, 0 }
  uselistorder label %dec_label_pc_6d98, { 1, 0 }
}

define i32 @function_6dd2() local_unnamed_addr {
dec_label_pc_6dd2:
  %eax.global-to-local = alloca i32, align 4
  %v0_6dd2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6dd2
}

define i32 @function_6de9() local_unnamed_addr {
dec_label_pc_6de9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6ebc() local_unnamed_addr {
dec_label_pc_6ebc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6ebd() local_unnamed_addr {
dec_label_pc_6ebd:
  %eax.global-to-local = alloca i32, align 4
  %v0_6ebd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6ebd
}

define i32 @function_6ec2() local_unnamed_addr {
dec_label_pc_6ec2:
  %v0_6ec2 = call i32 @function_8d242c89()
  ret i32 %v0_6ec2
}

define i32 @function_6f07() local_unnamed_addr {
dec_label_pc_6f07:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6feb() local_unnamed_addr {
dec_label_pc_6feb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6feb = load i32, i32* %eax.global-to-local, align 8
  %v4_6fee = mul i32 %v0_6feb, 2
  %v21_6fee = inttoptr i32 %v0_6feb to i32*
  store i32 %v4_6fee, i32* %v21_6fee, align 4
  %v0_6ff0 = load i32, i32* %eax.global-to-local, align 8
  %v2_6ff0 = load i32, i32* %ecx.global-to-local, align 4
  %v3_6ff0 = udiv i32 %v2_6ff0, 256
  %v5_6ff0 = add i32 %v3_6ff0, %v0_6ff0
  %v20_6ff0 = and i32 %v5_6ff0, 255
  %v22_6ff0 = and i32 %v0_6ff0, -256
  %v23_6ff0 = or i32 %v20_6ff0, %v22_6ff0
  store i32 %v23_6ff0, i32* @eax, align 8
  %v0_6ff2 = call i32 @function_8d0000b8()
  store i32 %v0_6ff2, i32* %eax.global-to-local, align 8
  ret i32 %v0_6ff2

; uselistorder directives
  uselistorder i32 %v0_6ff0, { 1, 0 }
  uselistorder i32 %v0_6feb, { 1, 0 }
}

define i32 @function_700d(i32 %arg1) local_unnamed_addr {
dec_label_pc_700d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_70c0() local_unnamed_addr {
dec_label_pc_70c0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_70c0 = add i32 %tmp91, 1149571008
  %v2_70c0 = inttoptr i32 %v1_70c0 to i32*
  %v3_70c0 = load i32, i32* %v2_70c0, align 4
  %v4_70c0 = add i32 %v3_70c0, 1
  store i32 %v4_70c0, i32* %v2_70c0, align 4
  %v0_70c6 = load i32, i32* %eax.global-to-local, align 8
  %v4_70c6 = mul i32 %v0_70c6, 2
  %v16_70c6 = trunc i32 %v4_70c6 to i8
  store i32 %v4_70c6, i32* @eax, align 8
  %v0_70c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_70c8 = udiv i32 %v0_70c8, 256
  %v5_70c8 = add i32 %v1_70c8, %v4_70c6
  %v20_70c8 = and i32 %v5_70c8, 255
  %v22_70c8 = mul nuw nsw i32 %v20_70c8, 256
  %v23_70c8 = and i32 %v0_70c8, -65281
  %v24_70c8 = or i32 %v22_70c8, %v23_70c8
  store i32 %v24_70c8, i32* %edx.global-to-local, align 4
  %v1_70cd = inttoptr i32 %v4_70c6 to i8*
  %v2_70cd = load i8, i8* %v1_70cd, align 2
  %v5_70cd = add i8 %v2_70cd, %v16_70c6
  store i8 %v5_70cd, i8* %v1_70cd, align 2
  %v0_70cf = load i32, i32* @eax, align 8
  %v1_70cf = inttoptr i32 %v0_70cf to i8*
  %v2_70cf = load i8, i8* %v1_70cf, align 1
  %v4_70cf = trunc i32 %v0_70cf to i8
  %v5_70cf = add i8 %v2_70cf, %v4_70cf
  store i8 %v5_70cf, i8* %v1_70cf, align 1
  %v0_70d1 = call i32 @function_6d39()
  store i32 %v0_70d1, i32* %eax.global-to-local, align 8
  ret i32 %v0_70d1

; uselistorder directives
  uselistorder i32 %v0_70c8, { 1, 0 }
  uselistorder i32 %v4_70c6, { 3, 0, 1, 2 }
}

define i32 @function_711f() local_unnamed_addr {
dec_label_pc_711f:
  %v0_711f = call i32 @function_693e()
  ret i32 %v0_711f
}

define i32 @function_7125() local_unnamed_addr {
dec_label_pc_7125:
  %eax.global-to-local = alloca i32, align 4
  %v0_7125 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7125
}

define i32 @function_7147() local_unnamed_addr {
dec_label_pc_7147:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_714f() local_unnamed_addr {
dec_label_pc_714f:
  %v0_714f = call i32 @function_68eb()
  ret i32 %v0_714f
}

define i32 @function_7154() local_unnamed_addr {
dec_label_pc_7154:
  %v0_7156 = call i32 @function_7147()
  ret i32 %v0_7156
}

define i32 @function_7197() local_unnamed_addr {
dec_label_pc_7197:
  %ebx.global-to-local = alloca i32, align 4
  %v0_7197 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7197 = add i32 %v0_7197, 20456516
  %v2_7197 = inttoptr i32 %v1_7197 to i32*
  %v3_7197 = load i32, i32* %v2_7197, align 4
  %v4_7197 = add i32 %v3_7197, 1
  store i32 %v4_7197, i32* %v2_7197, align 4
  %v0_719d = call i32 @function_6ebc()
  ret i32 %v0_719d
}

define i32 @function_71c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_71c2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_164 = alloca i32, align 4
  %v0_71c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_71c2 = add i32 %v0_71c2, 1418396908
  %v2_71c2 = inttoptr i32 %v1_71c2 to i32*
  %v3_71c2 = load i32, i32* %v2_71c2, align 4
  %v4_71c2 = add i32 %v3_71c2, 1
  store i32 %v4_71c2, i32* %v2_71c2, align 4
  %v0_71c8 = load i32, i32* %eax.global-to-local, align 8
  %v11_71c8 = and i32 %v0_71c8, or (i32 zext (i8 ptrtoint (i32* @global_var_40.2433 to i8) to i32), i32 -256)
  store i32 %v11_71c8, i32* %eax.global-to-local, align 8
  %v0_71ca = load i32, i32* %edx.global-to-local, align 4
  %v1_71ca = add i32 %v0_71ca, 8
  %v2_71ca = inttoptr i32 %v1_71ca to i32*
  %v3_71ca = load i32, i32* %v2_71ca, align 4
  store i32 %v3_71ca, i32* @ebx, align 4
  %v1_71cd = icmp eq i32 %v3_71ca, 0
  br i1 %v1_71cd, label %bb, label %dec_label_pc_71d5

bb:                                               ; preds = %dec_label_pc_71c2
  %v1_71cf = call i32 @function_72a5()
  store i32 %v1_71cf, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_71d5

dec_label_pc_71d5:                                ; preds = %bb, %dec_label_pc_71c2
  %v2_71ef = sub i32 %arg2, %arg1
  store i32 %v2_71ef, i32* %edx.global-to-local, align 4
  %v2_71f1 = ptrtoint i32* %stack_var_164 to i32
  store i32 %v2_71ef, i32* @esi, align 4
  %v1_71fe = call i32 @function_720b(i32 %v2_71f1)
  store i32 %v1_71fe, i32* %eax.global-to-local, align 8
  ret i32 %v1_71fe

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
}

define i32 @function_7200() local_unnamed_addr {
dec_label_pc_7200:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7204 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7204 = add i32 %v0_7204, 8
  %v2_7204 = inttoptr i32 %v1_7204 to i32*
  %v3_7204 = load i32, i32* %v2_7204, align 4
  store i32 %v3_7204, i32* %ebx.global-to-local, align 4
  %v0_7209 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7209
}

define i32 @function_720b(i32 %arg1) local_unnamed_addr {
dec_label_pc_720b:
  %v0_720b = load i32, i32* @ebx, align 4
  %v1_720b = add i32 %v0_720b, 16
  %v2_720b = inttoptr i32 %v1_720b to i32*
  %v3_720b = load i32, i32* %v2_720b, align 4
  %v0_720e = load i32, i32* @esi, align 4
  %v1_7210 = add i32 %v0_720b, 20
  %v2_7210 = inttoptr i32 %v1_7210 to i32*
  %v3_7210 = load i32, i32* %v2_7210, align 4
  %v2_721a = sub i32 %v3_7210, %v3_720b
  %tmp4 = icmp ule i32 %v2_721a, %v0_720e
  %v5_721e = select i1 %tmp4, i32 %v2_721a, i32 %v0_720e
  ret i32 %v5_721e

; uselistorder directives
  uselistorder i32 %v2_721a, { 1, 0 }
  uselistorder i32 %v0_720e, { 1, 0 }
}

define i32 @function_7231() local_unnamed_addr {
dec_label_pc_7231:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_7231 = load i32, i32* %eax.global-to-local, align 8
  %v1_7231 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v1_7231, i32* %eax.global-to-local, align 8
  store i32 %v0_7231, i32* %edx.global-to-local, align 4
  ret i32 %v1_7231
}

define i32 @function_7236() local_unnamed_addr {
dec_label_pc_7236:
  %v0_7236 = call i32 @function_89c0f75a()
  ret i32 %v0_7236
}

define i32 @function_724a() local_unnamed_addr {
dec_label_pc_724a:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_726d(i16 %arg1) local_unnamed_addr {
dec_label_pc_726d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_726d = load i32, i32* %ecx.global-to-local, align 4
  %v1_726d = add i32 %v0_726d, 688137292
  %v2_726d = inttoptr i32 %v1_726d to i8*
  %v3_726d = load i8, i8* %v2_726d, align 1
  %v5_726d = trunc i32 %v0_726d to i8
  %v6_726d = sub i8 %v3_726d, %v5_726d
  store i8 %v6_726d, i8* %v2_726d, align 1
  %v6_7273 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_7273
}

define i32 @function_7279() local_unnamed_addr {
dec_label_pc_7279:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_7279 = load i32, i32* %ecx.global-to-local, align 4
  %v5_7279 = urem i32 %v3_7279, 32
  %v6_7279 = icmp eq i32 %v5_7279, 0
  br i1 %v6_7279, label %bb96, label %bb

bb:                                               ; preds = %dec_label_pc_7279
  %v7_7279 = lshr i32 %tmp93, %v5_7279
  %v8_7279 = sub nsw i32 32, %v5_7279
  %v9_7279 = shl i32 %tmp93, %v8_7279
  %v10_7279 = or i32 %v9_7279, %v7_7279
  %v12_7279 = inttoptr i32 %tmp93 to i32*
  store i32 %v10_7279, i32* %v12_7279, align 4
  %tmp98 = icmp slt i32 %v10_7279, 0
  %v13_7279 = zext i1 %tmp98 to i32
  %v15_7279 = load i1, i1* %of.global-to-local, align 1
  %v16_7279 = udiv i32 %v10_7279, 1073741824
  %v17_7279 = urem i32 %v16_7279, 2
  %v18_7279 = icmp ne i32 %v13_7279, %v17_7279
  %v19_7279 = icmp eq i32 %v5_7279, 1
  %v20_7279 = select i1 %v19_7279, i1 %v18_7279, i1 %v15_7279
  store i1 %v20_7279, i1* %of.global-to-local, align 1
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_7279, %bb
  %v0_727b = load i32, i32* %esi.global-to-local, align 4
  %v1_727b = add i32 %v0_727b, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp97 = xor i32 %v0_727b, -2147483648
  %v7_727b = and i32 %v1_727b, %tmp97
  %v8_727b = icmp slt i32 %v7_727b, 0
  store i1 %v8_727b, i1* %of.global-to-local, align 1
  store i32 %v1_727b, i32* %esi.global-to-local, align 4
  %v0_727c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_727c

; uselistorder directives
  uselistorder i32 %v1_727b, { 1, 0 }
  uselistorder i32 %v5_7279, { 3, 2, 1, 0 }
  uselistorder i32 %tmp93, { 2, 1, 0 }
  uselistorder label %bb96, { 1, 0 }
}

define i32 @function_7288() local_unnamed_addr {
dec_label_pc_7288:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %v0_7288 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7288 = add i32 %v0_7288, -2060966828
  %v2_7288 = inttoptr i32 %v1_7288 to i32*
  %v3_7288 = load i32, i32* %v2_7288, align 4
  %v4_7288 = sub i32 %v3_7288, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp97 = xor i32 %v4_7288, -2147483648
  %v10_7288 = and i32 %tmp97, %v3_7288
  %v11_7288 = icmp slt i32 %v10_7288, 0
  store i1 %v11_7288, i1* %of.global-to-local, align 1
  store i32 %v4_7288, i32* %v2_7288, align 4
  %v2_728e = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_728e = lshr i8 %v2_728e, ptrtoint (i8** @global_var_5.2484 to i8)
  %v4_728e = mul i8 %v2_728e, 8
  %v5_728e = or i8 %v3_728e, %v4_728e
  %v6_728e = load i32, i32* %edi.global-to-local, align 4
  %v7_728e = inttoptr i32 %v6_728e to i8*
  store i8 %v5_728e, i8* %v7_728e, align 1
  %v0_7291 = load i1, i1* %of.global-to-local, align 1
  br i1 %v0_7291, label %dec_label_pc_7294, label %dec_label_pc_7293

dec_label_pc_7293:                                ; preds = %dec_label_pc_7288
  %v1_7291 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_7291

dec_label_pc_7294:                                ; preds = %dec_label_pc_7288
  %v2_7294 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_7294 = load i32, i32* %ebx.global-to-local, align 4
  %v4_7294 = udiv i32 %v3_7294, 256
  %v5_7294 = trunc i32 %v4_7294 to i8
  %v6_7294 = add i8 %v5_7294, %v2_7294
  %v12_7294 = xor i8 %v6_7294, %v2_7294
  %v13_7294 = xor i8 %v6_7294, %v5_7294
  %v14_7294 = and i8 %v12_7294, %v13_7294
  %v15_7294 = icmp slt i8 %v14_7294, 0
  store i1 %v15_7294, i1* %of.global-to-local, align 1
  %v21_7294 = load i32, i32* %ecx.global-to-local, align 4
  %v22_7294 = inttoptr i32 %v21_7294 to i8*
  store i8 %v6_7294, i8* %v22_7294, align 1
  %v2_7296 = load i32, i32* %edi.global-to-local, align 4
  %v3_7296 = load i32, i32* %ecx.global-to-local, align 4
  %v5_7296 = urem i32 %v3_7296, 32
  %v6_7296 = icmp eq i32 %v5_7296, 0
  br i1 %v6_7296, label %bb98, label %bb

bb:                                               ; preds = %dec_label_pc_7294
  %v7_7296 = lshr i32 %v2_7296, %v5_7296
  %v8_7296 = sub nsw i32 32, %v5_7296
  %v9_7296 = shl i32 %v2_7296, %v8_7296
  %v10_7296 = or i32 %v9_7296, %v7_7296
  %v12_7296 = inttoptr i32 %v2_7296 to i32*
  store i32 %v10_7296, i32* %v12_7296, align 4
  %tmp100 = icmp slt i32 %v10_7296, 0
  %v13_7296 = zext i1 %tmp100 to i32
  %v15_7296 = load i1, i1* %of.global-to-local, align 1
  %v16_7296 = udiv i32 %v10_7296, 1073741824
  %v17_7296 = urem i32 %v16_7296, 2
  %v18_7296 = icmp ne i32 %v13_7296, %v17_7296
  %v19_7296 = icmp eq i32 %v5_7296, 1
  %v20_7296 = select i1 %v19_7296, i1 %v18_7296, i1 %v15_7296
  store i1 %v20_7296, i1* %of.global-to-local, align 1
  %v1_7298.pre = load i32, i32* %edi.global-to-local, align 4
  br label %bb98

bb98:                                             ; preds = %dec_label_pc_7294, %bb
  %v1_7298 = phi i32 [ %v2_7296, %dec_label_pc_7294 ], [ %v1_7298.pre, %bb ]
  %v0_7298 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v1_7298, i32* %eax.global-to-local, align 8
  store i32 %v0_7298, i32* %edi.global-to-local, align 4
  %tmp99 = trunc i32 %v0_7298 to i8
  %v4_72a1 = trunc i32 %v1_7298 to i8
  %v5_72a1 = add i8 %tmp99, %v4_72a1
  %v11_72a1 = xor i8 %v5_72a1, %tmp99
  %v12_72a1 = xor i8 %v5_72a1, %v4_72a1
  %v13_72a1 = and i8 %v11_72a1, %v12_72a1
  %v14_72a1 = icmp slt i8 %v13_72a1, 0
  store i1 %v14_72a1, i1* %of.global-to-local, align 1
  %v21_72a1 = inttoptr i32 %v1_7298 to i8*
  store i8 %v5_72a1, i8* %v21_72a1, align 1
  %v0_72a3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_72a3

; uselistorder directives
  uselistorder i8 %v5_72a1, { 2, 0, 1 }
  uselistorder i32 %v1_7298, { 0, 2, 1 }
  uselistorder i32 %v5_7296, { 3, 2, 1, 0 }
  uselistorder i8 %v6_7294, { 2, 0, 1 }
  uselistorder i32 %v4_7288, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %bb98, { 1, 0 }
}

define i32 @function_72a5() local_unnamed_addr {
dec_label_pc_72a5:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_340 = alloca i32, align 4
  %v2_72a5 = ptrtoint i32* %stack_var_340 to i32
  %v1_72af = call i1 @_Z7IsLocalRK8CService(i32 %v2_72a5)
  %v5_72b4 = icmp eq i1 %v1_72af, false
  %v1_72b6 = icmp eq i1 %v5_72b4, false
  %v2_72b6 = zext i1 %v1_72b6 to i32
  %v3_72b6 = load i32, i32* @ebx, align 4
  %v4_72b6 = and i32 %v3_72b6, -256
  %v5_72b6 = or i32 %v2_72b6, %v4_72b6
  store i32 %v5_72b6, i32* @ebx, align 4
  %v1_72c0 = icmp eq i32 %tmp, 0
  br i1 %v1_72c0, label %bb, label %dec_label_pc_72c4

bb:                                               ; preds = %dec_label_pc_72a5
  %v1_72c2 = call i32 @function_72cc()
  br label %dec_label_pc_72c4

dec_label_pc_72c4:                                ; preds = %bb, %dec_label_pc_72a5
  %v3_72c4 = phi i32 [ %v1_72c2, %bb ], [ %tmp, %dec_label_pc_72a5 ]
  ret i32 %v3_72c4

; uselistorder directives
  uselistorder i1 (i32)* @_Z7IsLocalRK8CService, { 1, 0 }
}

define i32 @function_72cc() local_unnamed_addr {
dec_label_pc_72cc:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_236 = alloca i32, align 4
  %stack_var_340 = alloca i32, align 4
  %v0_72cc = load i32, i32* @ebx, align 4
  %v4_72cc = trunc i32 %v0_72cc to i8
  %v5_72cc = icmp eq i8 %v4_72cc, 0
  %v1_72ce = icmp eq i1 %v5_72cc, false
  br i1 %v1_72ce, label %bb, label %dec_label_pc_72d4

bb:                                               ; preds = %dec_label_pc_72cc
  %v3_72ce = call i32 @function_700d(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_72d4

dec_label_pc_72d4:                                ; preds = %bb, %dec_label_pc_72cc
  %v2_72e4 = ptrtoint i32* %stack_var_340 to i32
  %v2_72ee = ptrtoint i32* %stack_var_236 to i32
  %v1_72f5 = call i1 @_Z9IsLimitedRK8CNetAddr(i32 %v2_72e4)
  %v3_72f5 = sext i1 %v1_72f5 to i32
  store i32 %v3_72f5, i32* @eax, align 8
  %v5_72fa = icmp eq i1 %v1_72f5, false
  %v1_72fc = icmp eq i1 %v5_72fa, false
  br i1 %v1_72fc, label %bb26, label %dec_label_pc_7302

bb26:                                             ; preds = %dec_label_pc_72d4
  %v2_72fc = call i32 @function_6f07()
  br label %dec_label_pc_7302

dec_label_pc_7302:                                ; preds = %bb26, %dec_label_pc_72d4
  %v0_7309 = load i32, i32* @esi, align 4
  %v0_730b = load i32, i32* @edi, align 4
  %v5_730d = sub i32 %v0_7309, %tmp13
  %v10_730d = icmp ult i32 %v0_7309, %tmp13
  store i32 %v5_730d, i32* @eax, align 8
  %v6_7314 = zext i1 %v10_730d to i32
  %v7_7314 = sub i32 %v0_730b, %tmp12
  %v8_7314 = add i32 %v6_7314, %v7_7314
  %v32_7314 = icmp slt i32 %v8_7314, 0
  %v2_731e = icmp eq i1 %v32_7314, false
  br i1 %v2_731e, label %dec_label_pc_7324, label %bb27

bb27:                                             ; preds = %dec_label_pc_7302
  %v3_731e = call i32 @function_6f07()
  store i32 %v3_731e, i32* @eax, align 8
  br label %dec_label_pc_7324

dec_label_pc_7324:                                ; preds = %dec_label_pc_7302, %bb27
  %v3_733010 = phi i32 [ %v5_730d, %dec_label_pc_7302 ], [ %v3_731e, %bb27 ]
  %v7_7324 = icmp sgt i32 %v8_7314, 0
  br i1 %v7_7324, label %dec_label_pc_7326, label %bb28

bb28:                                             ; preds = %dec_label_pc_7324
  %v8_7324 = call i32 @function_7378()
  br label %dec_label_pc_7326

dec_label_pc_7326:                                ; preds = %dec_label_pc_7324, %bb28
  %v3_7330 = phi i32 [ %v3_733010, %dec_label_pc_7324 ], [ %v8_7324, %bb28 ]
  store i32 %v2_72ee, i32* @ebx, align 4
  ret i32 %v3_7330

; uselistorder directives
  uselistorder i32 %v0_7309, { 1, 0 }
  uselistorder label %dec_label_pc_7326, { 1, 0 }
  uselistorder label %dec_label_pc_7324, { 1, 0 }
}

define i32 @function_733b() local_unnamed_addr {
dec_label_pc_733b:
  %eax.global-to-local = alloca i32, align 4
  %v0_733b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_733b
}

define i32 @function_734c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_734c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp107 = inttoptr i32 %arg2 to i8*
  %v0_734c = load i32, i32* %ecx.global-to-local, align 4
  %v1_734c = add i32 %v0_734c, 1152847810
  %v2_734c = inttoptr i32 %v1_734c to i32*
  %v3_734c = load i32, i32* %v2_734c, align 4
  %v4_734c = add i32 %v3_734c, -1
  store i32 %v4_734c, i32* %v2_734c, align 4
  %v0_7352 = load i32, i32* %eax.global-to-local, align 8
  %v11_7352 = and i32 %v0_7352, -188
  store i32 %v11_7352, i32* @eax, align 8
  %v1_7354 = load i32, i32* %edx.global-to-local, align 4
  %v2_7354 = add i32 %v1_7354, 52
  %v3_7354 = inttoptr i32 %v2_7354 to i32*
  %v4_7354 = load i32, i32* %v3_7354, align 4
  %v15_7354 = icmp eq i32 %v11_7352, %v4_7354
  br i1 %v15_7354, label %dec_label_pc_7364, label %dec_label_pc_7359

dec_label_pc_7359:                                ; preds = %dec_label_pc_734c
  %v7_735e = icmp sgt i32 %arg3, 49
  br i1 %v7_735e, label %dec_label_pc_7364, label %bb

bb:                                               ; preds = %dec_label_pc_7359
  %v8_735e = call i32 @function_6f07()
  store i32 %v8_735e, i32* @eax, align 8
  br label %dec_label_pc_7364

dec_label_pc_7364:                                ; preds = %dec_label_pc_7359, %bb, %dec_label_pc_734c
  store i32 ptrtoint (i32* @global_var_a.2461 to i32), i32* %ecx.global-to-local, align 4
  call void @__asm_rep_movsd_memcpy(i8* %tmp107, i8* %arg1, i32 ptrtoint (i32* @global_var_a.2461 to i32))
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_7373 = call i32 @function_700d(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_7373, i32* %eax.global-to-local, align 8
  ret i32 %v1_7373

; uselistorder directives
  uselistorder i32 (i32)* @function_700d, { 1, 0 }
  uselistorder label %dec_label_pc_7364, { 1, 0, 2 }
}

define i32 @function_7378() local_unnamed_addr {
dec_label_pc_7378:
  %v0_7378 = load i32, i32* @eax, align 8
  %tmp = icmp ult i32 %v0_7378, 600
  br i1 %tmp, label %bb, label %dec_label_pc_7383

bb:                                               ; preds = %dec_label_pc_7378
  %v3_737d = call i32 @function_6f07()
  br label %dec_label_pc_7383

dec_label_pc_7383:                                ; preds = %bb, %dec_label_pc_7378
  %v0_7383 = phi i32 [ %v3_737d, %bb ], [ %v0_7378, %dec_label_pc_7378 ]
  ret i32 %v0_7383

; uselistorder directives
  uselistorder i32 %v0_7378, { 1, 0 }
  uselistorder i32 ()* @function_6f07, { 2, 3, 1, 0 }
}

define i32 @function_73a1() local_unnamed_addr {
dec_label_pc_73a1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_73b8() local_unnamed_addr {
dec_label_pc_73b8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_73dd() local_unnamed_addr {
dec_label_pc_73dd:
  %stack_var_236 = alloca i32, align 4
  %v0_73dd = load i32, i32* @ebp, align 4
  %v2_73e0 = ptrtoint i32* %stack_var_236 to i32
  store i32 %v2_73e0, i32* @ebx, align 4
  %v1_73e7 = inttoptr i32 %v0_73dd to i32*
  %v2_73e7 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_73e7)
  store i32 %v2_73e7, i32* @eax, align 8
  %v0_73ec = call i32 @function_73a1()
  ret i32 %v0_73ec
}

define i32 @function_73ee() local_unnamed_addr {
dec_label_pc_73ee:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_236 = alloca i32, align 4
  %v0_73f0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_73f3 = ptrtoint i32* %stack_var_236 to i32
  store i32 %v2_73f3, i32* @ebx, align 4
  %v1_73fa = inttoptr i32 %v0_73f0 to i32*
  %v2_73fa = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_73fa)
  store i32 %v2_73fa, i32* @eax, align 8
  %v0_73ff = call i32 @function_73a1()
  ret i32 %v0_73ff

; uselistorder directives
  uselistorder i32 ()* @function_73a1, { 1, 0 }
}

define i32 @function_7401() local_unnamed_addr {
dec_label_pc_7401:
  %v0_7403 = call i32 @function_73dd()
  ret i32 %v0_7403
}

define i32 @function_7405() local_unnamed_addr {
dec_label_pc_7405:
  %eax.global-to-local = alloca i32, align 4
  %v0_7405 = load i32, i32* %eax.global-to-local, align 8
  %v2_7405 = lshr i32 %v0_7405, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_7405, i32* %eax.global-to-local, align 8
  ret i32 %v2_7405
}

define i32 @function_741f() local_unnamed_addr {
dec_label_pc_741f:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_742e() local_unnamed_addr {
dec_label_pc_742e:
  %stack_var_268 = alloca i32, align 4
  %v0_7436 = call i32 @_ZN5boost5mutex6unlockEv.part.28()
  %v2_743b = ptrtoint i32* %stack_var_268 to i32
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %stack_var_268, align 4
  %v1_7457 = call i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %v2_743b)
  ret i32 %v1_7457

; uselistorder directives
  uselistorder i32 ()* @_ZN5boost5mutex6unlockEv.part.28, { 1, 0 }
}

define i32 @function_748d() local_unnamed_addr {
dec_label_pc_748d:
  %v0_748f = call i32 @function_693e()
  ret i32 %v0_748f
}

define i32 @function_7499() local_unnamed_addr {
dec_label_pc_7499:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_74ac() local_unnamed_addr {
dec_label_pc_74ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_74ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_74ac
}

define i32 @function_74c9() local_unnamed_addr {
dec_label_pc_74c9:
  %v0_74c9 = call i32 @function_6c9f()
  ret i32 %v0_74c9

; uselistorder directives
  uselistorder i32 ()* @function_6c9f, { 1, 0 }
}

define i32 @function_74d4() local_unnamed_addr {
dec_label_pc_74d4:
  %eax.global-to-local = alloca i32, align 4
  %v4_74d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_74d4
}

define i32 @function_74e8() local_unnamed_addr {
dec_label_pc_74e8:
  %v0_74e8 = call i32 @function_800074ed()
  ret i32 %v0_74e8
}

define i32 @function_750f() local_unnamed_addr {
dec_label_pc_750f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v2_750f = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_750f = load i32, i32* %eax.global-to-local, align 8
  %v4_750f = trunc i32 %v3_750f to i8
  %v5_750f = or i8 %v4_750f, %v2_750f
  %v12_750f = inttoptr i32 %v3_750f to i8*
  store i8 %v5_750f, i8* %v12_750f, align 1
  %v2_7511 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_7511 = load i32, i32* %eax.global-to-local, align 8
  %v4_7511 = trunc i32 %v3_7511 to i8
  %v5_7511 = add i8 %v4_7511, %v2_7511
  %v21_7511 = inttoptr i32 %v3_7511 to i8*
  store i8 %v5_7511, i8* %v21_7511, align 1
  %v0_7513 = load i32, i32* %ebx.global-to-local, align 4
  %v3_7513 = load i32, i32* %eax.global-to-local, align 8
  %v5_75131 = mul i32 %v3_7513, 256
  %v1_75132 = add i32 %v5_75131, %v0_7513
  %v22_7513 = and i32 %v1_75132, 65280
  %v23_7513 = and i32 %v0_7513, -65281
  %v24_7513 = or i32 %v22_7513, %v23_7513
  store i32 %v24_7513, i32* %ebx.global-to-local, align 4
  %v11_7516 = and i32 %v3_7513, -252
  store i32 %v11_7516, i32* %eax.global-to-local, align 8
  ret i32 %v11_7516

; uselistorder directives
  uselistorder i32 %v11_7516, { 1, 0 }
  uselistorder i32 %v0_7513, { 1, 0 }
}

define i32 @function_7577() local_unnamed_addr {
dec_label_pc_7577:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_75a1() local_unnamed_addr {
dec_label_pc_75a1:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_380 = alloca i32, align 4
  %stack_var_292 = alloca i32, align 4
  %v2_75a1 = load i32, i32* %edi.global-to-local, align 4
  %v3_75a1 = sub i32 %v2_75a1, ptrtoint (i1* @global_var_1.2399 to i32)
  %v18_75a1 = inttoptr i32 %v2_75a1 to i32*
  store i32 %v3_75a1, i32* %v18_75a1, align 4
  %v0_75a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_75a3 = and i32 %v0_75a3, -65281
  %v2_75a3 = or i32 %v1_75a3, ptrtoint (i32* @global_var_c000.2479 to i32)
  store i32 %v2_75a3, i32* %edx.global-to-local, align 4
  %v0_75a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_75a5 = add i32 %v0_75a5, 40
  store i32 %v1_75a5, i32* @ebx, align 4
  %v0_75a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_75a8 = load i32, i32* @eax, align 8
  %v2_75a8 = add i32 %v1_75a8, %v0_75a8
  %v12_75a8 = icmp eq i32 %v2_75a8, 0
  store i32 %v2_75a8, i32* %esi.global-to-local, align 4
  %v1_75aa = load i32, i32* %edi.global-to-local, align 4
  %v2_75aa = add i32 %v1_75aa, 4
  %v3_75aa = inttoptr i32 %v2_75aa to i32*
  %v4_75aa = load i32, i32* %v3_75aa, align 4
  %v15_75aa = icmp eq i32 %v1_75a5, %v4_75aa
  %v1_75ad = icmp eq i1 %v15_75aa, false
  br i1 %v1_75ad, label %bb, label %dec_label_pc_75af

bb:                                               ; preds = %dec_label_pc_75a1
  %v2_75ad = call i32 @function_7577()
  br label %dec_label_pc_75af

dec_label_pc_75af:                                ; preds = %bb, %dec_label_pc_75a1
  %v0_75af = load i32, i32* %ebp.global-to-local, align 4
  %v1_75b2 = inttoptr i32 %v0_75af to i32*
  %v2_75b2 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_75b2)
  store i32 %v2_75b2, i32* @eax, align 8
  %v1_75b9 = icmp eq i1 %v12_75a8, false
  br i1 %v1_75b9, label %dec_label_pc_7612, label %dec_label_pc_75bb

dec_label_pc_75bb:                                ; preds = %dec_label_pc_75af
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* bitcast (i32* @global_var_a334.2541 to i8*), align 4
  %v0_75c2 = call i32 @function_6de9()
  ret i32 %v0_75c2

dec_label_pc_7612:                                ; preds = %dec_label_pc_75af
  %v2_7612 = ptrtoint i32* %stack_var_292 to i32
  store i32 %v2_7612, i32* %ebx.global-to-local, align 4
  store i32 623386739, i32* %edi.global-to-local, align 4
  %v2_761f = ptrtoint i32* %stack_var_380 to i32
  store i32 %v2_761f, i32* %edx.global-to-local, align 4
  store i32 1766654053, i32* %ebp.global-to-local, align 4
  ret i32 %v2_75b2
}

define i32 @function_7664() local_unnamed_addr {
dec_label_pc_7664:
  %eax.global-to-local = alloca i32, align 4
  %v0_7664 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7664
}

define i32 @function_767a() local_unnamed_addr {
dec_label_pc_767a:
  %v0_767a = call i32 @function_73b8()
  ret i32 %v0_767a
}

define void @_Z26ThreadOpenAddedConnectionsv() local_unnamed_addr {
dec_label_pc_7680:
  %stack_var_-220 = alloca i32, align 4
  %v8_76cf = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-220, i32 ptrtoint ([27 x i8]* @global_var_9f00.2545 to i32), i32 ptrtoint ([15 x i8]* @global_var_a35d.2544 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  ret void
}

define i32 @function_773b() local_unnamed_addr {
dec_label_pc_773b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_7795() local_unnamed_addr {
dec_label_pc_7795:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7795 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7795 = add i32 %v0_7795, 10441757
  %v2_7795 = inttoptr i32 %v1_7795 to i8*
  %v3_7795 = load i8, i8* %v2_7795, align 1
  %v4_7795 = load i32, i32* %ecx.global-to-local, align 4
  %v5_7795 = trunc i32 %v4_7795 to i8
  %v6_7795 = add i8 %v5_7795, %v3_7795
  store i8 %v6_7795, i8* %v2_7795, align 1
  %v0_779b = load i32, i32* %ecx.global-to-local, align 4
  %v1_779b = add i32 %v0_779b, 959456324
  %v2_779b = inttoptr i32 %v1_779b to i8*
  %v3_779b = load i8, i8* %v2_779b, align 1
  %v5_779b = trunc i32 %v0_779b to i8
  %v6_779b = add i8 %v3_779b, %v5_779b
  store i8 %v6_779b, i8* %v2_779b, align 1
  %v0_77a1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_77a1
}

define i32 @function_77c2() local_unnamed_addr {
dec_label_pc_77c2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_77c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_77c2 = add i32 %v0_77c2, -2093734828
  %v2_77c2 = inttoptr i32 %v1_77c2 to i32*
  %v3_77c2 = load i32, i32* %v2_77c2, align 4
  %v4_77c2 = sub i32 %v3_77c2, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_77c2, i32* %v2_77c2, align 4
  %v0_77c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_77c8
}

define i32 @function_77ea() local_unnamed_addr {
dec_label_pc_77ea:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_77f0() local_unnamed_addr {
dec_label_pc_77f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_77f0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_77f0
}

define i32 @function_782b(i32 %arg1) local_unnamed_addr {
dec_label_pc_782b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_184 = alloca i32, align 4
  %stack_var_112 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_112, align 4
  %v0_782b = load i32, i32* %ebp.global-to-local, align 4
  %v1_782b = add i32 %v0_782b, 495259584
  %v2_782b = inttoptr i32 %v1_782b to i32*
  %v3_782b = load i32, i32* %v2_782b, align 4
  %v4_782b = add i32 %v3_782b, 1
  store i32 %v4_782b, i32* %v2_782b, align 4
  %v2_7831 = load i32, i32* %eax.global-to-local, align 8
  %v4_7831 = mul i32 %v2_7831, 2
  %v21_7831 = inttoptr i32 %v2_7831 to i32*
  store i32 %v4_7831, i32* %v21_7831, align 4
  %v0_7833 = load i32, i32* %edx.global-to-local, align 4
  %v3_7833 = load i32, i32* %eax.global-to-local, align 8
  %v4_7833 = trunc i32 %v3_7833 to i8
  %v5_78335 = mul i32 %v3_7833, 256
  %v1_78336 = add i32 %v5_78335, %v0_7833
  %v22_7833 = and i32 %v1_78336, 65280
  %v23_7833 = and i32 %v0_7833, -65281
  %v24_7833 = or i32 %v22_7833, %v23_7833
  store i32 %v24_7833, i32* %edx.global-to-local, align 4
  %v5_7838 = mul i8 %v4_7833, 2
  %v21_7838 = inttoptr i32 %v3_7833 to i8*
  store i8 %v5_7838, i8* %v21_7838, align 1
  %v2_783a = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_783a = load i32, i32* %eax.global-to-local, align 8
  %v4_783a = trunc i32 %v3_783a to i8
  %v5_783a = add i8 %v4_783a, %v2_783a
  %v20_783a = load i32, i32* %ecx.global-to-local, align 4
  %v21_783a = inttoptr i32 %v20_783a to i8*
  store i8 %v5_783a, i8* %v21_783a, align 1
  %v0_784c117 = load i32, i32* %ebx.global-to-local, align 4
  %v1_784c118 = add i32 %v0_784c117, ptrtoint (i32* @global_var_60.2520 to i32)
  %v2_784c119 = inttoptr i32 %v1_784c118 to i32*
  %v3_784c120 = load i32, i32* %v2_784c119, align 4
  store i32 %v3_784c120, i32* %eax.global-to-local, align 8
  %tmp115123 = icmp slt i32 %v3_784c120, 1
  br i1 %tmp115123, label %dec_label_pc_7840, label %dec_label_pc_7853

dec_label_pc_7840:                                ; preds = %dec_label_pc_782b, %dec_label_pc_7840
  %v0_784c124 = phi i32 [ %v0_784c, %dec_label_pc_7840 ], [ %v0_784c117, %dec_label_pc_782b ]
  %v0_7840 = load i32, i32* %esi.global-to-local, align 4
  %v3_7847 = call i32 @_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE(i32 %v0_784c124, i32 %v0_7840)
  store i32 %v3_7847, i32* %eax.global-to-local, align 8
  %v0_784c = load i32, i32* @ebx, align 4
  %v1_784c = add i32 %v0_784c, ptrtoint (i32* @global_var_60.2520 to i32)
  %v2_784c = inttoptr i32 %v1_784c to i32*
  %v3_784c = load i32, i32* %v2_784c, align 4
  store i32 %v3_784c, i32* %eax.global-to-local, align 8
  %tmp115 = icmp slt i32 %v3_784c, 1
  br i1 %tmp115, label %dec_label_pc_7840, label %dec_label_pc_7853

dec_label_pc_7853:                                ; preds = %dec_label_pc_7840, %dec_label_pc_782b
  %v2_784c.lcssa = phi i32* [ %v2_784c119, %dec_label_pc_782b ], [ %v2_784c, %dec_label_pc_7840 ]
  %v3_784c.lcssa = phi i32 [ %v3_784c120, %dec_label_pc_782b ], [ %v3_784c, %dec_label_pc_7840 ]
  %v1_7853 = sub i32 %v3_784c.lcssa, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_7853, i32* %eax.global-to-local, align 8
  %v0_7856 = load i32, i32* %esi.global-to-local, align 4
  %v1_7856 = add i32 %v0_7856, 4
  %v2_7856 = inttoptr i32 %v1_7856 to i8*
  %v3_7856 = load i8, i8* %v2_7856, align 1
  %v10_7856 = icmp eq i8 %v3_7856, 0
  store i32 %v1_7853, i32* %v2_784c.lcssa, align 4
  %v1_785d = icmp eq i1 %v10_7856, false
  br i1 %v1_785d, label %bb, label %dec_label_pc_7863

bb:                                               ; preds = %dec_label_pc_7853
  %v2_785d = call i32 @function_7915()
  store i32 %v2_785d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_7863

dec_label_pc_7863:                                ; preds = %bb, %dec_label_pc_7853
  %v0_786b = load i32, i32* @edi, align 4
  %v1_786b = add i32 %v0_786b, 8
  %v2_786b = inttoptr i32 %v1_786b to i32*
  %v3_786b = load i32, i32* %v2_786b, align 4
  store i32 %v3_786b, i32* %eax.global-to-local, align 8
  %v2_786e = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_786e, i32* %ebx.global-to-local, align 4
  %v2_7872 = ptrtoint i32* %stack_var_184 to i32
  store i32 %v2_7872, i32* %edx.global-to-local, align 4
  %v4_7882 = inttoptr i32 %v3_786b to i8*
  %v4_7886 = sext i32 %v2_7872 to i64
  %v8_7889 = insertvalue %CAddress undef, i64 %v4_7886, 0
  %v11_7889 = call i1 @_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb(%CAddress %v8_7889, i32 %v2_786e, i8* %v4_7882, i1 false)
  %v13_7889 = sext i1 %v11_7889 to i32
  store i32 %v13_7889, i32* %eax.global-to-local, align 8
  %v4_789d = call i32 @_Z10MilliSleepx(i64 500, i32 0)
  store i32 %v4_789d, i32* @eax, align 8
  br i1 ptrtoint (i1* @global_var_1.2399 to i1), label %dec_label_pc_78b0, label %dec_label_pc_78a9

dec_label_pc_78a9:                                ; preds = %dec_label_pc_7863
  %v0_78ab = call i32 @function_77ea()
  store i32 %v0_78ab, i32* %eax.global-to-local, align 8
  ret i32 %v0_78ab

dec_label_pc_78b0:                                ; preds = %dec_label_pc_7863
  %v3_78b0 = load i32, i32* %stack_var_112, align 4
  store i32 %v3_78b0, i32* %ebx.global-to-local, align 4
  %v1_78b4 = add i32 %v3_78b0, 72
  store i32 %v1_78b4, i32* %edx.global-to-local, align 4
  ret i32 %v4_789d

; uselistorder directives
  uselistorder i32 %v0_784c, { 1, 0 }
  uselistorder i32 %v3_7833, { 1, 0, 2 }
  uselistorder i32 %v0_7833, { 1, 0 }
  uselistorder i32 %v2_7831, { 1, 0 }
  uselistorder i32* %stack_var_112, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 5, 6, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_7840, { 1, 0 }
}

define i32 @function_790a() local_unnamed_addr {
dec_label_pc_790a:
  %eax.global-to-local = alloca i32, align 4
  %v0_790a = load i32, i32* %eax.global-to-local, align 8
  %v1_790a = icmp eq i32 %v0_790a, 0
  %v1_790c = icmp eq i1 %v1_790a, false
  br i1 %v1_790c, label %bb, label %dec_label_pc_790e

bb:                                               ; preds = %dec_label_pc_790a
  %v2_790c = call i32 @function_7972()
  store i32 %v2_790c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_790e

dec_label_pc_790e:                                ; preds = %bb, %dec_label_pc_790a
  %v0_7913 = phi i32 [ %v2_790c, %bb ], [ %v0_790a, %dec_label_pc_790a ]
  ret i32 %v0_7913
}

define i32 @function_7915() local_unnamed_addr {
dec_label_pc_7915:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_792c() local_unnamed_addr {
dec_label_pc_792c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_793d() local_unnamed_addr {
dec_label_pc_793d:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_7944 = inttoptr i32 %tmp1 to i32*
  %v2_7944 = call i32 @_ZNSt10_List_baseISsSaISsEED1Ev(i32* %v1_7944)
  ret i32 %v2_7944
}

define i32 @function_7972() local_unnamed_addr {
dec_label_pc_7972:
  %v0_7972 = call i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26()
  store i32 %v0_7972, i32* @esi, align 4
  %v0_7979 = load i32, i32* @ebx, align 4
  store i32 %v0_7972, i32* @ebx, align 4
  %v1_797e = inttoptr i32 %v0_7979 to i32*
  %v2_797e = call i32 @_ZN5boost10lock_errorD1Ev(i32* %v1_797e)
  %v0_7983 = call i32 @function_793d()
  ret i32 %v0_7983

; uselistorder directives
  uselistorder i32 ()* @_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26, { 1, 0 }
}

define i32 @function_7985(i32 %arg1) local_unnamed_addr {
dec_label_pc_7985:
  %stack_var_144 = alloca i32, align 4
  %v0_7985 = call i32 @_ZN5boost18condition_variable10notify_oneEv.part.32()
  %v0_7990 = call i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25()
  %v2_7995 = ptrtoint i32* %stack_var_144 to i32
  store i32 %v2_7995, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %stack_var_144, align 4
  %v1_79b1 = call i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %v2_7995)
  %v3_79c5 = call i32 @_Z10MilliSleepx(i64 sext (i32 ptrtoint (i32* @global_var_1d4c0.2547 to i32) to i64), i32 0)
  %v1_79d1 = inttoptr i32 %arg1 to i32*
  %v2_79d1 = call i32 @_ZNSt10_List_baseISsSaISsEED1Ev(i32* %v1_79d1)
  store i32 %v2_79d1, i32* @eax, align 8
  %v0_79d6 = call i32 @function_773b()
  ret i32 %v0_79d6

; uselistorder directives
  uselistorder i32 ()* @_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25, { 1, 0 }
}

define i32 @function_79f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_79f3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_7a18() local_unnamed_addr {
dec_label_pc_7a18:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_7a18 = load i32, i32* %edi.global-to-local, align 4
  %v1_7a18 = add i32 %v0_7a18, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_7a18, i32* %edi.global-to-local, align 4
  %v0_7a1b = load i32, i32* %eax.global-to-local, align 8
  %v1_7a1b = trunc i32 %v0_7a1b to i8
  %v2_7a1b = and i8 %v1_7a1b, 20
  %v8_7a1b = zext i8 %v2_7a1b to i32
  %v10_7a1b = and i32 %v0_7a1b, -256
  %v11_7a1b = or i32 %v8_7a1b, %v10_7a1b
  store i32 %v11_7a1b, i32* %eax.global-to-local, align 8
  %v1_7a1d = inttoptr i32 %v11_7a1b to i8*
  %v2_7a1d = load i8, i8* %v1_7a1d, align 4
  %v5_7a1d = add i8 %v2_7a1d, %v2_7a1b
  store i8 %v5_7a1d, i8* %v1_7a1d, align 4
  %v0_7a1f = load i32, i32* %eax.global-to-local, align 8
  %v1_7a1f = inttoptr i32 %v0_7a1f to i8*
  %v2_7a1f = load i8, i8* %v1_7a1f, align 1
  %v4_7a1f = trunc i32 %v0_7a1f to i8
  %v5_7a1f = add i8 %v2_7a1f, %v4_7a1f
  store i8 %v5_7a1f, i8* %v1_7a1f, align 1
  %v8_7a44 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* bitcast ([27 x i8]* @global_var_9f00.2545 to i32*), i32 ptrtoint ([15 x i8]* @global_var_a35d.2544 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32), i32 1377)
  store i32 %v8_7a44, i32* @eax, align 8
  store i32 1868783460, i32* @edi, align 4
  store i32 1634038376, i32* @ebx, align 4
  %v0_7a55 = call i32 @function_7a8a()
  store i32 %v0_7a55, i32* %eax.global-to-local, align 8
  ret i32 %v0_7a55

; uselistorder directives
  uselistorder [27 x i8]* @global_var_9f00.2545, { 1, 0 }
}

define i32 @function_7a58() local_unnamed_addr {
dec_label_pc_7a58:
  %v2_7a58 = load i32, i32* @eax, align 8
  ret i32 %v2_7a58
}

define i32 @function_7a76() local_unnamed_addr {
dec_label_pc_7a76:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7a76 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7a76 = add i32 %v0_7a76, -2093734828
  %v2_7a76 = inttoptr i32 %v1_7a76 to i32*
  %v3_7a76 = load i32, i32* %v2_7a76, align 4
  %v4_7a76 = sub i32 %v3_7a76, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_7a76, i32* %v2_7a76, align 4
  %v0_7a7c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7a7c
}

define i32 @function_7a8a() local_unnamed_addr {
dec_label_pc_7a8a:
  %stack_var_266 = alloca i32, align 4
  %stack_var_120 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_7a8a = load i32, i32* @edi, align 4
  %v1_7a8a = load i32, i32* @ebx, align 4
  %v12_7a8a = icmp eq i32 %v0_7a8a, %v1_7a8a
  %v1_7a8c = icmp eq i1 %v12_7a8a, false
  br i1 %v1_7a8c, label %bb, label %dec_label_pc_7a8e

bb:                                               ; preds = %dec_label_pc_7a8a
  %v2_7a8c = call i32 @function_7a58()
  br label %dec_label_pc_7a8e

dec_label_pc_7a8e:                                ; preds = %bb, %dec_label_pc_7a8a
  %v0_7a8e = load i32, i32* @ebp, align 4
  %v1_7a95 = inttoptr i32 %v0_7a8e to i32*
  %v2_7a95 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_7a95)
  %v2_7a9e = ptrtoint i32* %stack_var_120 to i32
  store i32 %v2_7a9e, i32* %stack_var_120, align 4
  %v1_7aae = inttoptr i32 %tmp4 to i32*
  %v2_7aae = load i32, i32* %v1_7aae, align 4
  %v12_7ab0 = icmp eq i32 %v2_7aae, %tmp4
  br i1 %v12_7ab0, label %bb7, label %dec_label_pc_7abc

bb7:                                              ; preds = %dec_label_pc_7a8e
  %v2_7ab6 = call i32 @function_7ca4(i32 %v2_7aae)
  br label %dec_label_pc_7abc

dec_label_pc_7abc:                                ; preds = %bb7, %dec_label_pc_7a8e
  %v2_7abc = ptrtoint i32* %stack_var_266 to i32
  ret i32 %v2_7abc

; uselistorder directives
  uselistorder i32 %v2_7aae, { 1, 0 }
}

define x86_fp80 @function_7b52() local_unnamed_addr {
dec_label_pc_7b52:
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v3_7b52 = load i32, i32* %ecx.global-to-local, align 4
  %v4_7b52 = sitofp i32 %v3_7b52 to x86_fp80
  %v5_7b52 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_7b52 = fsub x86_fp80 %v5_7b52, %v4_7b52
  store x86_fp80 %v6_7b52, x86_fp80* %st0.global-to-local, align 4
  ret x86_fp80 %v6_7b52
}

define i32 @function_7b5a() local_unnamed_addr {
dec_label_pc_7b5a:
  %eax.global-to-local = alloca i32, align 4
  %v0_7b5a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7b5a
}

define i32 @function_7b99(i32 %arg1) local_unnamed_addr {
dec_label_pc_7b99:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_7bdb() local_unnamed_addr {
dec_label_pc_7bdb:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_7bdb = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v3_7bdb = load i1, i1* %cf.global-to-local, align 1
  %v5_7bdb = mul i8 %v2_7bdb, 8
  %v6_7bdb = zext i8 %v5_7bdb to i16
  %v7_7bdb = zext i8 %v2_7bdb to i16
  %v8_7bdb = lshr i16 %v7_7bdb, ptrtoint (i16** @global_var_6.2538 to i16)
  %v9_7bdb = select i1 %v3_7bdb, i16 4, i16 0
  %v11_7bdb = or i16 %v8_7bdb, %v6_7bdb
  %v12_7bdb = or i16 %v11_7bdb, %v9_7bdb
  %v13_7bdb = trunc i16 %v12_7bdb to i8
  %v14_7bdb = load i32, i32* %edx.global-to-local, align 4
  %v15_7bdb = inttoptr i32 %v14_7bdb to i8*
  store i8 %v13_7bdb, i8* %v15_7bdb, align 1
  %v17_7bdb = and i8 %v2_7bdb, 32
  %v18_7bdb = icmp ne i8 %v17_7bdb, 0
  store i1 %v18_7bdb, i1* %cf.global-to-local, align 1
  %v0_7bde = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7bde

; uselistorder directives
  uselistorder i8 %v2_7bdb, { 1, 2, 0 }
  uselistorder i8 32, { 1, 0 }
}

define i32 @function_7be7() local_unnamed_addr {
dec_label_pc_7be7:
  %eax.global-to-local = alloca i32, align 4
  %v0_7be7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7be7
}

define i32 @function_7c6d() local_unnamed_addr {
dec_label_pc_7c6d:
  %eax.global-to-local = alloca i32, align 4
  %v0_7c6d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7c6d
}

define i32 @function_7ca4(i32 %arg1) local_unnamed_addr {
dec_label_pc_7ca4:
  %stack_var_128 = alloca i8*, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v7_7ccf = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull @global_var_a120.2410, i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32), i32 1399)
  %v15_7ced = icmp eq i32 %tmp14, %arg1
  %v1_7cf3 = icmp eq i1 %v15_7ced, false
  br label %dec_label_pc_7ce9

dec_label_pc_7ce9:                                ; preds = %dec_label_pc_7ca4, %dec_label_pc_7cf9
  %v4_7cfe32 = phi i32 [ 26482, %dec_label_pc_7ca4 ], [ %v5_7cf9, %dec_label_pc_7cf9 ]
  %storemerge31 = phi i8* [ inttoptr (i32 26482 to i8*), %dec_label_pc_7ca4 ], [ %v23_7cf9, %dec_label_pc_7cf9 ]
  %v1_7cf1 = bitcast i8* %storemerge31 to i32*
  %v2_7cf1 = load i32, i32* %v1_7cf1, align 4
  store i32 %v2_7cf1, i32* @eax, align 8
  br i1 %v1_7cf3, label %bb, label %dec_label_pc_7cf9

bb:                                               ; preds = %dec_label_pc_7ce9
  %v2_7cf3 = call i32 @function_7eb2()
  br label %dec_label_pc_7cf9

dec_label_pc_7cf9:                                ; preds = %bb, %dec_label_pc_7ce9
  %v5_7cf9 = add i32 %v4_7cfe32, 4
  %v23_7cf9 = inttoptr i32 %v5_7cf9 to i8*
  %v16_7d02 = icmp eq i32 %v4_7cfe32, 808594992
  %v1_7d06 = icmp eq i1 %v16_7d02, false
  br i1 %v1_7d06, label %dec_label_pc_7ce9, label %dec_label_pc_7d08

dec_label_pc_7d08:                                ; preds = %dec_label_pc_7cf9
  %v0_7d08 = load i32, i32* @ebp, align 4
  %v2_7d0b = ptrtoint i8** %stack_var_128 to i32
  store i32 %v2_7d0b, i32* @esi, align 4
  %tmp29 = inttoptr i32 %v0_7d08 to i32*
  %v3_7d12 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %tmp29)
  br i1 %v15_7ced, label %bb30, label %dec_label_pc_7d25

bb30:                                             ; preds = %dec_label_pc_7d08
  %v1_7d1f = call i32 @function_803a()
  br label %dec_label_pc_7d25

dec_label_pc_7d25:                                ; preds = %bb30, %dec_label_pc_7d08
  ret i32 ptrtoint ([24 x i8]* @global_var_a378.2550 to i32)

; uselistorder directives
  uselistorder i32 %v5_7cf9, { 1, 0 }
  uselistorder label %dec_label_pc_7ce9, { 1, 0 }
}

define i32 @function_7d4d(i64 %arg1) local_unnamed_addr {
dec_label_pc_7d4d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_224 = alloca i32, align 4
  %stack_var_112 = alloca i32, align 4
  %v0_7d4d = load i32, i32* %ebp.global-to-local, align 4
  %v1_7d4d = add i32 %v0_7d4d, -2038100032
  %v2_7d4d = inttoptr i32 %v1_7d4d to i32*
  %v3_7d4d = load i32, i32* %v2_7d4d, align 4
  %v4_7d4d = add i32 %v3_7d4d, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_7d4d, i32* %v2_7d4d, align 4
  %v0_7d53 = load i32, i32* %eax.global-to-local, align 8
  %v1_7d53 = trunc i32 %v0_7d53 to i8
  %v5_7d53 = mul i8 %v1_7d53, 2
  %v20_7d53 = zext i8 %v5_7d53 to i32
  %v22_7d53 = and i32 %v0_7d53, -256
  %v23_7d53 = or i32 %v20_7d53, %v22_7d53
  store i32 %v23_7d53, i32* %eax.global-to-local, align 8
  %v0_7d55 = load i32, i32* %edx.global-to-local, align 4
  %v1_7d55 = udiv i32 %v0_7d55, 256
  %v2_7d55 = trunc i32 %v1_7d55 to i8
  %v5_7d55 = add i8 %v2_7d55, %v5_7d53
  %v20_7d55 = zext i8 %v5_7d55 to i32
  %v22_7d55 = mul nuw nsw i32 %v20_7d55, 256
  %v23_7d55 = and i32 %v0_7d55, -65281
  %v24_7d55 = or i32 %v22_7d55, %v23_7d55
  store i32 %v24_7d55, i32* %edx.global-to-local, align 4
  %v1_7d5a = inttoptr i32 %v23_7d53 to i8*
  %v2_7d5a = load i8, i8* %v1_7d5a, align 2
  %v5_7d5a = add i8 %v2_7d5a, %v5_7d53
  store i8 %v5_7d5a, i8* %v1_7d5a, align 2
  %v2_7d5c = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_7d5c = load i32, i32* %eax.global-to-local, align 8
  %v4_7d5c = trunc i32 %v3_7d5c to i8
  %v5_7d5c = add i8 %v4_7d5c, %v2_7d5c
  %v20_7d5c = load i32, i32* %ecx.global-to-local, align 4
  %v21_7d5c = inttoptr i32 %v20_7d5c to i8*
  store i8 %v5_7d5c, i8* %v21_7d5c, align 1
  %v0_7d6c118 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7d6c119 = add i32 %v0_7d6c118, ptrtoint (i32* @global_var_60.2520 to i32)
  %v2_7d6c120 = inttoptr i32 %v1_7d6c119 to i32*
  %v3_7d6c121 = load i32, i32* %v2_7d6c120, align 4
  store i32 %v3_7d6c121, i32* %eax.global-to-local, align 8
  %tmp116124 = icmp slt i32 %v3_7d6c121, 1
  br i1 %tmp116124, label %dec_label_pc_7d60, label %dec_label_pc_7d73

dec_label_pc_7d60:                                ; preds = %dec_label_pc_7d4d, %dec_label_pc_7d60
  %v0_7d6c125 = phi i32 [ %v0_7d6c, %dec_label_pc_7d60 ], [ %v0_7d6c118, %dec_label_pc_7d4d ]
  %v0_7d60 = load i32, i32* %esi.global-to-local, align 4
  %v2_7d67 = call i32 @_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE(i32 %v0_7d6c125, i32 %v0_7d60)
  store i32 %v2_7d67, i32* %eax.global-to-local, align 8
  %v0_7d6c = load i32, i32* @ebx, align 4
  %v1_7d6c = add i32 %v0_7d6c, ptrtoint (i32* @global_var_60.2520 to i32)
  %v2_7d6c = inttoptr i32 %v1_7d6c to i32*
  %v3_7d6c = load i32, i32* %v2_7d6c, align 4
  store i32 %v3_7d6c, i32* %eax.global-to-local, align 8
  %tmp116 = icmp slt i32 %v3_7d6c, 1
  br i1 %tmp116, label %dec_label_pc_7d60, label %dec_label_pc_7d73

dec_label_pc_7d73:                                ; preds = %dec_label_pc_7d60, %dec_label_pc_7d4d
  %v2_7d6c.lcssa = phi i32* [ %v2_7d6c120, %dec_label_pc_7d4d ], [ %v2_7d6c, %dec_label_pc_7d60 ]
  %v3_7d6c.lcssa = phi i32 [ %v3_7d6c121, %dec_label_pc_7d4d ], [ %v3_7d6c, %dec_label_pc_7d60 ]
  %v1_7d73 = sub i32 %v3_7d6c.lcssa, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_7d73, i32* %eax.global-to-local, align 8
  %v0_7d76 = load i32, i32* %esi.global-to-local, align 4
  %v1_7d76 = add i32 %v0_7d76, 4
  %v2_7d76 = inttoptr i32 %v1_7d76 to i8*
  %v3_7d76 = load i8, i8* %v2_7d76, align 1
  %v10_7d76 = icmp eq i8 %v3_7d76, 0
  store i32 %v1_7d73, i32* %v2_7d6c.lcssa, align 4
  %v1_7d7d = icmp eq i1 %v10_7d76, false
  br i1 %v1_7d7d, label %bb, label %dec_label_pc_7d83

bb:                                               ; preds = %dec_label_pc_7d73
  %v2_7d7d = call i32 @function_7f8e()
  store i32 %v2_7d7d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_7d83

dec_label_pc_7d83:                                ; preds = %bb, %dec_label_pc_7d73
  %v0_7d83 = load i32, i32* @edi, align 4
  %v1_7d83 = add i32 %v0_7d83, 8
  %v2_7d83 = inttoptr i32 %v1_7d83 to i32*
  %v3_7d83 = load i32, i32* %v2_7d83, align 4
  store i32 %v3_7d83, i32* %ebx.global-to-local, align 4
  %v4_7d8e = trunc i64 %arg1 to i32
  store i32 %v4_7d8e, i32* %eax.global-to-local, align 8
  %v1_7d9a = add i32 %v0_7d83, 12
  %v2_7d9a = inttoptr i32 %v1_7d9a to i32*
  %v3_7d9a = load i32, i32* %v2_7d9a, align 4
  %v2_7da2 = sub i32 %v3_7d9a, %v3_7d83
  %v2_7da4 = sdiv i32 %v2_7da2, 2
  %v3_7da6 = mul i32 %v2_7da4, 954437177
  %v4_7dac = sext i32 %v3_7da6 to i64
  %v6_7db2 = and i64 %arg1, 4294967295
  %v14_7db2 = urem i64 %v6_7db2, %v4_7dac
  %v15_7db2 = trunc i64 %v14_7db2 to i32
  store i32 %v15_7db2, i32* %edx.global-to-local, align 4
  %v2_7db9 = mul i32 %v15_7db2, 18
  %v3_7db9 = add i32 %v2_7db9, %v3_7d83
  store i32 %v3_7db9, i32* %eax.global-to-local, align 8
  %v1_7dbc = inttoptr i32 %v3_7db9 to i32*
  %v2_7dbc = load i32, i32* %v1_7dbc, align 4
  store i32 %v2_7dbc, i32* %edx.global-to-local, align 4
  %v2_7dbe = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_7dbe, i32* %ebx.global-to-local, align 4
  %v1_7dc6 = add i32 %v3_7db9, 4
  %v2_7dc6 = inttoptr i32 %v1_7dc6 to i32*
  %v3_7dc6 = load i32, i32* %v2_7dc6, align 4
  store i32 %v3_7dc6, i32* %edx.global-to-local, align 4
  %v1_7dcd = add i32 %v3_7db9, 8
  %v2_7dcd = inttoptr i32 %v1_7dcd to i32*
  %v3_7dcd = load i32, i32* %v2_7dcd, align 4
  store i32 %v3_7dcd, i32* %edx.global-to-local, align 4
  %v1_7dd4 = add i32 %v3_7db9, 12
  %v2_7dd4 = inttoptr i32 %v1_7dd4 to i32*
  %v3_7dd4 = load i32, i32* %v2_7dd4, align 4
  store i32 %v3_7dd4, i32* %edx.global-to-local, align 4
  %v2_7de4 = ptrtoint i32* %stack_var_224 to i32
  store i32 %v2_7de4, i32* %eax.global-to-local, align 8
  ret i32 %v2_7de4

; uselistorder directives
  uselistorder i32 %v3_7db9, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_7d6c, { 1, 0 }
  uselistorder i32 %v0_7d55, { 1, 0 }
  uselistorder i8 %v5_7d53, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 5, 6, 1, 10, 7, 8, 9 }
  uselistorder i32 (i32, i32)* @_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE, { 2, 1, 0 }
  uselistorder label %dec_label_pc_7d60, { 1, 0 }
}

define i32 @function_7df2(i64 %arg1) local_unnamed_addr {
dec_label_pc_7df2:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i64, align 8
  store i64 %arg1, i64* %stack_var_0, align 8
  %v0_7df2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7df2 = add i32 %v0_7df2, -1922030500
  %v2_7df2 = inttoptr i32 %v1_7df2 to i32*
  %v3_7df2 = load i32, i32* %v2_7df2, align 4
  %v4_7df2 = sub i32 %v3_7df2, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_7df2, i32* %v2_7df2, align 4
  %v0_7df8 = load i32, i32* %eax.global-to-local, align 8
  %v2_7df8 = ptrtoint i64* %stack_var_0 to i32
  %v1_7df9 = trunc i32 %v2_7df8 to i8
  %v2_7dfb = load i64, i64* %stack_var_0, align 8
  %tmp102 = trunc i64 %v2_7dfb to i8
  %v0_7dfd = load i32, i32* %ebx.global-to-local, align 4
  %v5_7dfd3 = mul i32 %v2_7df8, 256
  %v1_7dfd4 = add i32 %v0_7dfd, %v5_7dfd3
  %v22_7dfd = and i32 %v1_7dfd4, 65280
  %v23_7dfd = and i32 %v0_7dfd, -65281
  %v24_7dfd = or i32 %v22_7dfd, %v23_7dfd
  store i32 %v24_7dfd, i32* %ebx.global-to-local, align 4
  store i32 %v2_7df8, i32* %eax.global-to-local, align 8
  %factor = mul i8 %v1_7df9, 2
  %v7_7e02 = add i8 %tmp102, %factor
  %v7_7e04 = add i8 %v7_7e02, %v1_7df9
  %tmp103 = zext i8 %v7_7e04 to i64
  store i64 %tmp103, i64* %stack_var_0, align 8
  %v1_7e06 = add i32 %v0_7df8, add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 8)
  %v2_7e06 = inttoptr i32 %v1_7e06 to i32*
  store i32 0, i32* %v2_7e06, align 4
  %v0_7e0e = load i32, i32* %ebx.global-to-local, align 4
  %v1_7e0e = load i32, i32* @esp, align 4
  %v2_7e0e = add i32 %v1_7e0e, 4
  %v3_7e0e = inttoptr i32 %v2_7e0e to i32*
  store i32 %v0_7e0e, i32* %v3_7e0e, align 4
  %v0_7e12 = load i32, i32* %edx.global-to-local, align 4
  %v1_7e12 = load i32, i32* @esp, align 4
  %v2_7e12 = inttoptr i32 %v1_7e12 to i32*
  store i32 %v0_7e12, i32* %v2_7e12, align 4
  %v0_7e15 = load i64, i64* %stack_var_0, align 8
  %v3_7e15 = insertvalue %CAddress undef, i64 %v0_7e15, 0
  %v7_7e15 = call i1 @_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb(%CAddress %v3_7e15, i32 ptrtoint (i32* @1 to i32), i8* bitcast (i32* @1 to i8*), i1 ptrtoint (i32* @1 to i1))
  %v9_7e15 = sext i1 %v7_7e15 to i32
  store i32 %v9_7e15, i32* %eax.global-to-local, align 8
  %v0_7e1a = load i32, i32* @esp, align 4
  %v1_7e1a = inttoptr i32 %v0_7e1a to i32*
  store i32 500, i32* %v1_7e1a, align 4
  %v0_7e21 = load i32, i32* @esp, align 4
  %v1_7e21 = add i32 %v0_7e21, 4
  %v2_7e21 = inttoptr i32 %v1_7e21 to i32*
  store i32 0, i32* %v2_7e21, align 4
  %v0_7e29 = load i64, i64* %stack_var_0, align 8
  %v4_7e29 = call i32 @_Z10MilliSleepx(i64 %v0_7e29, i32 ptrtoint (i32* @1 to i32))
  store i32 %v4_7e29, i32* @eax, align 8
  %v0_7e2e = load i32, i32* @esp, align 4
  %v1_7e2e = add i32 %v0_7e2e, 116
  %v2_7e2e = inttoptr i32 %v1_7e2e to i8*
  %v3_7e2e = load i8, i8* %v2_7e2e, align 1
  %v10_7e2e = icmp eq i8 %v3_7e2e, 0
  %v1_7e33 = icmp eq i1 %v10_7e2e, false
  br i1 %v1_7e33, label %bb, label %dec_label_pc_7e39

bb:                                               ; preds = %dec_label_pc_7df2
  %v2_7e33 = call i32 @function_7f22()
  store i32 %v2_7e33, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_7e39

dec_label_pc_7e39:                                ; preds = %bb, %dec_label_pc_7df2
  %v0_7e3b = phi i32 [ %v2_7e33, %bb ], [ %v4_7e29, %dec_label_pc_7df2 ]
  ret i32 %v0_7e3b

; uselistorder directives
  uselistorder i32 %v0_7dfd, { 1, 0 }
  uselistorder i32 %v2_7df8, { 1, 0, 2 }
  uselistorder i64* %stack_var_0, { 3, 4, 2, 1, 0, 5 }
  uselistorder i1 (%CAddress, i32, i8*, i1)* @_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb, { 2, 1, 0 }
  uselistorder %CAddress undef, { 2, 1, 0, 3 }
}

define i32 @function_7e40() local_unnamed_addr {
dec_label_pc_7e40:
  %v0_7e40 = load i32, i32* @eax, align 8
  store i32 %v0_7e40, i32* @ebx, align 4
  %v0_7e42 = load i32, i32* @ebp, align 4
  %v1_7e45 = inttoptr i32 %v0_7e42 to i32*
  %v2_7e45 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_7e45)
  %v0_7e4a = call i32 @function_793d()
  ret i32 %v0_7e4a
}

define i32 @function_7e50() local_unnamed_addr {
dec_label_pc_7e50:
  %v1_7e60 = call i32 @function_7b99(i32 0)
  ret i32 %v1_7e60
}

define i32 @function_7e7b() local_unnamed_addr {
dec_label_pc_7e7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_7e7b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7e7b
}

define i32 @function_7e84() local_unnamed_addr {
dec_label_pc_7e84:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_7e93() local_unnamed_addr {
dec_label_pc_7e93:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_7e93 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7e93 = add i32 %v0_7e93, -1988615084
  %v2_7e93 = inttoptr i32 %v1_7e93 to i32*
  %v3_7e93 = load i32, i32* %v2_7e93, align 4
  %v4_7e93 = sub i32 %v3_7e93, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_7e93, i32* %v2_7e93, align 4
  %v0_7e99 = load i32, i32* %eax.global-to-local, align 8
  %v1_7e99 = trunc i32 %v0_7e99 to i8
  %v2_7e99 = load i1, i1* %cf.global-to-local, align 1
  %v3_7e99 = zext i1 %v2_7e99 to i8
  %v4_7e99 = add i8 %v1_7e99, 36
  %v5_7e99 = add i8 %v4_7e99, %v3_7e99
  %v22_7e99 = icmp ule i8 %v5_7e99, %v1_7e99
  %v23_7e99 = icmp ugt i8 %v1_7e99, -37
  %v24_7e99 = select i1 %v2_7e99, i1 %v22_7e99, i1 %v23_7e99
  store i1 %v24_7e99, i1* %cf.global-to-local, align 1
  %v25_7e99 = zext i8 %v5_7e99 to i32
  %v27_7e99 = and i32 %v0_7e99, -256
  %v28_7e99 = or i32 %v25_7e99, %v27_7e99
  store i32 %v28_7e99, i32* %eax.global-to-local, align 8
  %v2_7e9b = call i32 @_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev(i32* nonnull @1)
  store i32 %v2_7e9b, i32* %eax.global-to-local, align 8
  %v0_7ea0 = call i32 @function_793d()
  store i32 %v0_7ea0, i32* %eax.global-to-local, align 8
  ret i32 %v0_7ea0

; uselistorder directives
  uselistorder i8 %v5_7e99, { 1, 0 }
}

define i32 @function_7ea6() local_unnamed_addr {
dec_label_pc_7ea6:
  %eax.global-to-local = alloca i32, align 4
  %v0_7ea6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7ea6
}

define i32 @function_7eb0() local_unnamed_addr {
dec_label_pc_7eb0:
  %v0_7eb0 = call i32 @function_7e84()
  ret i32 %v0_7eb0
}

define i32 @function_7eb2() local_unnamed_addr {
dec_label_pc_7eb2:
  %v0_7eb2 = load i32, i32* @eax, align 8
  %v0_7eb8 = load i32, i32* @edi, align 4
  %v1_7eb8 = add i32 %v0_7eb8, 12
  %v2_7eb8 = inttoptr i32 %v1_7eb8 to i32*
  %v3_7eb8 = load i32, i32* %v2_7eb8, align 4
  %v1_7ebb = add i32 %v0_7eb8, 8
  %v2_7ebb = inttoptr i32 %v1_7ebb to i32*
  %v3_7ebb = load i32, i32* %v2_7ebb, align 4
  store i32 %v3_7ebb, i32* @ebx, align 4
  %v12_7ec2 = icmp eq i32 %v3_7ebb, %v3_7eb8
  br i1 %v12_7ec2, label %bb, label %dec_label_pc_7ec6

bb:                                               ; preds = %dec_label_pc_7eb2
  %v2_7ec4 = call i32 @function_7ee1(i32 %v3_7eb8)
  br label %dec_label_pc_7ec6

dec_label_pc_7ec6:                                ; preds = %bb, %dec_label_pc_7eb2
  %v3_7ecc = phi i32 [ %v2_7ec4, %bb ], [ %v0_7eb2, %dec_label_pc_7eb2 ]
  ret i32 %v3_7ecc

; uselistorder directives
  uselistorder i32 %v3_7eb8, { 1, 0 }
}

define i32 @function_7ed5() local_unnamed_addr {
dec_label_pc_7ed5:
  %eax.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_7ed5 = add i32 %tmp91, 24
  %v2_7ed5 = inttoptr i32 %v1_7ed5 to i8*
  %v3_7ed5 = load i8, i8* %v2_7ed5, align 1
  %v4_7ed5 = load i1, i1* %of.global-to-local, align 1
  %v5_7ed5 = mul i8 %v3_7ed5, 8
  store i8 %v5_7ed5, i8* %v2_7ed5, align 1
  store i1 %v4_7ed5, i1* %of.global-to-local, align 1
  %v0_7ed9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7ed9
}

define i32 @function_7ee1(i32 %arg1) local_unnamed_addr {
dec_label_pc_7ee1:
  %v0_7eed = load i32, i32* @eax, align 8
  ret i32 %v0_7eed
}

define i32 @function_7f10(i32 %arg1) local_unnamed_addr {
dec_label_pc_7f10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7f10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7f10 = add i32 %v0_7f10, 1066075259
  %v2_7f10 = inttoptr i32 %v1_7f10 to i32*
  %v3_7f10 = load i32, i32* %v2_7f10, align 4
  %v4_7f10 = add i32 %v3_7f10, -1
  store i32 %v4_7f10, i32* %v2_7f10, align 4
  %v0_7f20 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_7f20
}

define i32 @function_7f22() local_unnamed_addr {
dec_label_pc_7f22:
  %v4_7f2c = load i32, i32* @eax, align 8
  ret i32 %v4_7f2c
}

define i32 @function_7f7c() local_unnamed_addr {
dec_label_pc_7f7c:
  %eax.global-to-local = alloca i32, align 4
  %v0_7f7c = load i32, i32* %eax.global-to-local, align 8
  %v1_7f7c = icmp eq i32 %v0_7f7c, 0
  %v1_7f7e = icmp eq i1 %v1_7f7c, false
  br i1 %v1_7f7e, label %bb, label %dec_label_pc_7f84

bb:                                               ; preds = %dec_label_pc_7f7c
  %v2_7f7e = call i32 @function_7972()
  store i32 %v2_7f7e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_7f84

dec_label_pc_7f84:                                ; preds = %bb, %dec_label_pc_7f7c
  %v0_7f89 = phi i32 [ %v2_7f7e, %bb ], [ %v0_7f7c, %dec_label_pc_7f7c ]
  ret i32 %v0_7f89

; uselistorder directives
  uselistorder i32 ()* @function_7972, { 1, 0 }
}

define i32 @function_7f8e() local_unnamed_addr {
dec_label_pc_7f8e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_7f9d() local_unnamed_addr {
dec_label_pc_7f9d:
  %v0_7fa5 = call i32 @function_792c()
  ret i32 %v0_7fa5
}

define i32 @function_7faa() local_unnamed_addr {
dec_label_pc_7faa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7faa = load i32, i32* %eax.global-to-local, align 8
  %v0_7fac = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_7faa, i32* @ebx, align 4
  %v1_7fb1 = inttoptr i32 %v0_7fac to i32*
  %v2_7fb1 = call i32 @_ZN15CSemaphoreGrantD1Ev(i32* %v1_7fb1)
  store i32 %v2_7fb1, i32* %eax.global-to-local, align 8
  ret i32 %v2_7fb1
}

define i32 @function_7fbb() local_unnamed_addr {
dec_label_pc_7fbb:
  %stack_var_152 = alloca i32, align 4
  %stack_var_160 = alloca i32, align 4
  %v2_7fbb = ptrtoint i32* %stack_var_160 to i32
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %stack_var_160, align 4
  %v1_7fd7 = call i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %v2_7fbb)
  %v2_7fdc = ptrtoint i32* %stack_var_152 to i32
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %stack_var_152, align 4
  %v1_7ff8 = call i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %v2_7fdc)
  store i32 %v1_7ff8, i32* @eax, align 8
  %v0_7ffd = call i32 @function_7e40()
  ret i32 %v0_7ffd

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_, { 3, 2, 1, 0 }
}

define i32 @function_8007() local_unnamed_addr {
dec_label_pc_8007:
  %v0_8007 = load i32, i32* @eax, align 8
  store i32 %v0_8007, i32* @ebx, align 4
  %v0_8009 = call i32 @function_793d()
  ret i32 %v0_8009
}

define i32 @function_800e() local_unnamed_addr {
dec_label_pc_800e:
  %v0_8010 = call i32 @function_7e84()
  ret i32 %v0_8010

; uselistorder directives
  uselistorder i32 ()* @function_7e84, { 1, 0 }
}

define i32 @function_8015() local_unnamed_addr {
dec_label_pc_8015:
  %eax.global-to-local = alloca i32, align 4
  %v0_8015 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8015
}

define i32 @function_801c() local_unnamed_addr {
dec_label_pc_801c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_801c = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_801c, i32* @ebx, align 4
  %v0_801e = load i32, i32* %ebp.global-to-local, align 4
  %v1_8021 = inttoptr i32 %v0_801e to i32*
  %v2_8021 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_8021)
  store i32 %v2_8021, i32* %eax.global-to-local, align 8
  ret i32 %v2_8021
}

define i32 @function_802b() local_unnamed_addr {
dec_label_pc_802b:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_8030 = inttoptr i32 %tmp92 to i32*
  %v2_8030 = call i32 @_ZN5boost11unique_lockINS_5mutexEED1Ev(i32* %v1_8030)
  ret i32 %v2_8030
}

define i32 @function_803a() local_unnamed_addr {
dec_label_pc_803a:
  %tmp = call i1 @__decompiler_undefined_function_4()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_120 = alloca i32, align 4
  %v3_8049 = call i32 @_Z10MilliSleepx(i64 sext (i32 ptrtoint (i32* @global_var_1d4c0.2547 to i32) to i64), i32 0)
  %v2_8055 = call i32 @_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev(i32* nonnull %stack_var_120)
  %v1_8061 = inttoptr i32 %tmp4 to i32*
  %v2_8061 = call i32 @_ZNSt10_List_baseISsSaISsEED1Ev(i32* %v1_8061)
  store i32 %v2_8061, i32* @eax, align 8
  %v4_8066 = sext i1 %tmp to i32
  %v5_8066 = add i32 %v4_8066, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp8 = urem i32 %v5_8066, 2
  %v23_8066 = icmp ne i32 %tmp8, 0
  %v1_806b = sext i1 %v23_8066 to i32
  %v2_806b = call i32 @function_79f3(i32 %v1_806b)
  ret i32 %v2_806b
}

define i32 @function_8070() local_unnamed_addr {
dec_label_pc_8070:
  %v0_8072 = load i32, i32* @ebx, align 4
  %v1_8077 = inttoptr i32 %v0_8072 to i32*
  %v2_8077 = call i32 @_ZN5boost10lock_errorD1Ev(i32* %v1_8077)
  ret i32 %v2_8077
}

define i32 @function_8082() local_unnamed_addr {
dec_label_pc_8082:
  %eax.global-to-local = alloca i32, align 4
  %v0_8082 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8082
}

define i32 @function_8083() local_unnamed_addr {
dec_label_pc_8083:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_80b4() local_unnamed_addr {
dec_label_pc_80b4:
  %v0_80b4 = call i32 @function_8083()
  ret i32 %v0_80b4
}

define i32 @function_80cc() local_unnamed_addr {
dec_label_pc_80cc:
  %eax.global-to-local = alloca i32, align 4
  %v0_80cc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80cc
}

define i32 @function_80d2() local_unnamed_addr {
dec_label_pc_80d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_80d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80d2
}

define i32 @function_80d8() local_unnamed_addr {
dec_label_pc_80d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_80d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80d8
}

define i32 @function_80dd() local_unnamed_addr {
dec_label_pc_80dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_80dd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80dd
}

define i32 @function_80e0() local_unnamed_addr {
dec_label_pc_80e0:
  %eax.global-to-local = alloca i32, align 4
  %v0_80e0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80e0
}

define i32 @function_80e5() local_unnamed_addr {
dec_label_pc_80e5:
  %eax.global-to-local = alloca i32, align 4
  %v0_80e5 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_80e5, i32* @ebx, align 4
  %v0_80e7 = load i32, i32* @esi, align 4
  %v1_80ea = inttoptr i32 %v0_80e7 to i32*
  %v2_80ea = call i32 @_ZN5boost11unique_lockINS_5mutexEED1Ev(i32* %v1_80ea)
  store i32 %v2_80ea, i32* %eax.global-to-local, align 8
  %v0_80f0 = call i32 @function_793d()
  store i32 %v0_80f0, i32* %eax.global-to-local, align 8
  ret i32 %v0_80f0

; uselistorder directives
  uselistorder i32 ()* @function_793d, { 4, 3, 2, 1, 0 }
}

define i32 @function_80f5() local_unnamed_addr {
dec_label_pc_80f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_80f5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_80f5
}

define i32 @function_8100() local_unnamed_addr {
dec_label_pc_8100:
  %v0_8100 = call i32 @function_8007()
  ret i32 %v0_8100
}

define i32 @function_8110() local_unnamed_addr {
dec_label_pc_8110:
  %v0_8110 = call i32 @function_8070()
  ret i32 %v0_8110
}

define i1 @_Z14BindListenPortRK8CServiceRSs(i32 %addrBind, i32 %strError) local_unnamed_addr {
dec_label_pc_8120:
  ret i1 false
}

define i32 @function_81e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_81e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_81e5() local_unnamed_addr {
dec_label_pc_81e5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_81f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81f8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_81f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_81f8 = add i32 %v0_81f8, 15475860
  %v2_81f8 = inttoptr i32 %v1_81f8 to i32*
  %v3_81f8 = load i32, i32* %v2_81f8, align 4
  %v4_81f8 = add i32 %v3_81f8, -1
  store i32 %v4_81f8, i32* %v2_81f8, align 4
  %v2_81fe = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_81fe = load i32, i32* %eax.global-to-local, align 8
  %v4_81fe = trunc i32 %v3_81fe to i8
  %v5_81fe = add i8 %v4_81fe, %v2_81fe
  %v21_81fe = inttoptr i32 %v3_81fe to i8*
  store i8 %v5_81fe, i8* %v21_81fe, align 1
  %v0_8200 = load i32, i32* %edx.global-to-local, align 4
  %v1_8200 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8200 = xor i32 %v1_8200, %v0_8200
  %v3_8200 = icmp eq i32 %v2_8200, 0
  store i32 %v2_8200, i32* %edx.global-to-local, align 4
  %v0_8207 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8207, i32* @eax, align 8
  %v1_8209 = icmp eq i1 %v3_8200, false
  br i1 %v1_8209, label %bb, label %dec_label_pc_820f

bb:                                               ; preds = %dec_label_pc_81f8
  %v2_8209 = call i32 @function_85a8()
  store i32 %v2_8209, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_820f

dec_label_pc_820f:                                ; preds = %bb, %dec_label_pc_81f8
  %v0_8219 = phi i32 [ %v2_8209, %bb ], [ %v0_8207, %dec_label_pc_81f8 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8219
}

define i32 @function_82a7() local_unnamed_addr {
dec_label_pc_82a7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8337() local_unnamed_addr {
dec_label_pc_8337:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8344() local_unnamed_addr {
dec_label_pc_8344:
  %esi.global-to-local = alloca i32, align 4
  %v0_8361 = load i32, i32* %esi.global-to-local, align 4
  %v3_8364 = call i1 @_Z8AddLocalRK8CServicei(i32 %v0_8361, i32 ptrtoint (i64* @global_var_2.2539 to i32))
  %v5_8364 = sext i1 %v3_8364 to i32
  ret i32 %v5_8364

; uselistorder directives
  uselistorder i1 (i32, i32)* @_Z8AddLocalRK8CServicei, { 1, 0 }
}

define i32 @function_83a6() local_unnamed_addr {
dec_label_pc_83a6:
  %v0_83a6 = load i32, i32* @esi, align 4
  %v1_83a9 = call i32 @function_81e0(i32 %v0_83a6)
  ret i32 %v1_83a9
}

define i32 @function_8455() local_unnamed_addr {
dec_label_pc_8455:
  %v0_8455 = call i32 @function_81e5()
  ret i32 %v0_8455
}

define i32 @function_8488() local_unnamed_addr {
dec_label_pc_8488:
  %v0_8488 = call i32 @function_82a7()
  ret i32 %v0_8488
}

define i32 @function_84c6() local_unnamed_addr {
dec_label_pc_84c6:
  %v0_84c6 = call i32 @function_83a6()
  ret i32 %v0_84c6
}

define i32 @function_84f9(i16 %arg1) local_unnamed_addr {
dec_label_pc_84f9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_84f9 = load i32, i32* %eax.global-to-local, align 8
  %v2_84f9 = load i32, i32* %ecx.global-to-local, align 4
  %v3_84f9 = udiv i32 %v2_84f9, 256
  %v5_84f9 = sub i32 %v0_84f9, %v3_84f9
  %v20_84f9 = and i32 %v5_84f9, 255
  %v22_84f9 = and i32 %v0_84f9, -256
  %v23_84f9 = or i32 %v20_84f9, %v22_84f9
  store i32 %v23_84f9, i32* %eax.global-to-local, align 8
  ret i32 %v23_84f9

; uselistorder directives
  uselistorder i32 %v0_84f9, { 1, 0 }
}

define i32 @function_8549() local_unnamed_addr {
dec_label_pc_8549:
  %v0_8549 = call i32 @function_81e5()
  ret i32 %v0_8549

; uselistorder directives
  uselistorder i32 ()* @function_81e5, { 1, 0 }
}

define i32 @function_8586() local_unnamed_addr {
dec_label_pc_8586:
  %v0_8586 = call i32 @function_83a6()
  ret i32 %v0_8586

; uselistorder directives
  uselistorder i32 ()* @function_83a6, { 1, 0 }
}

define i32 @function_858b() local_unnamed_addr {
dec_label_pc_858b:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_64 = alloca i32, align 4
  %v2_858b = ptrtoint i32* %stack_var_64 to i32
  %v0_8593 = load i32, i32* %eax.global-to-local, align 8
  %v3_859e = inttoptr i32 %v0_8593 to i32*
  %v4_859e = call i32 @_ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(i32 ptrtoint (i32* @global_var_a320.2551 to i32), i32* %v3_859e, i32 %v2_858b)
  store i32 %v4_859e, i32* @eax, align 8
  %v0_85a3 = call i32 @function_8337()
  store i32 %v0_85a3, i32* %eax.global-to-local, align 8
  ret i32 %v0_85a3
}

define i32 @function_85a8() local_unnamed_addr {
dec_label_pc_85a8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_85ae() local_unnamed_addr {
dec_label_pc_85ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_85ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_85ae
}

define i32 @function_85d2() local_unnamed_addr {
dec_label_pc_85d2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_85d2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_85d2 = add i32 %v0_85d2, -1981748285
  %v2_85d2 = inttoptr i32 %v1_85d2 to i32*
  %v3_85d2 = load i32, i32* %v2_85d2, align 4
  %v4_85d2 = sub i32 %v3_85d2, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_85d2, i32* %v2_85d2, align 4
  %v0_85d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_85d8
}

define i32 @function_85d9() local_unnamed_addr {
dec_label_pc_85d9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_85e9() local_unnamed_addr {
dec_label_pc_85e9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_85ea() local_unnamed_addr {
dec_label_pc_85ea:
  %eax.global-to-local = alloca i32, align 4
  %v0_85ea = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_85ea
}

define i32 @function_85fa() local_unnamed_addr {
dec_label_pc_85fa:
  %ecx.global-to-local = alloca i32, align 4
  %v0_85fa = load i32, i32* %ecx.global-to-local, align 4
  %v1_85fa = add i32 %v0_85fa, -1866404925
  %v2_85fa = inttoptr i32 %v1_85fa to i32*
  %v3_85fa = load i32, i32* %v2_85fa, align 4
  %v4_85fa = sub i32 %v3_85fa, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_85fa, i32* %v2_85fa, align 4
  %v0_8600 = call i32 @function_85e9()
  ret i32 %v0_8600
}

define i32 @function_8603() local_unnamed_addr {
dec_label_pc_8603:
  %eax.global-to-local = alloca i32, align 4
  %v0_8603 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8603
}

define i32 @function_860c() local_unnamed_addr {
dec_label_pc_860c:
  %v0_860c = call i32 @function_85d9()
  ret i32 %v0_860c
}

define i32 @function_8610() local_unnamed_addr {
dec_label_pc_8610:
  %eax.global-to-local = alloca i32, align 4
  %v0_8610 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8610
}

define i32 @function_8613() local_unnamed_addr {
dec_label_pc_8613:
  %eax.global-to-local = alloca i32, align 4
  %v0_8613 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8613
}

define i32 @function_8614() local_unnamed_addr {
dec_label_pc_8614:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_862b() local_unnamed_addr {
dec_label_pc_862b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_862b = load i32, i32* %ecx.global-to-local, align 4
  %v1_862b = add i32 %v0_862b, -1980961853
  %v2_862b = inttoptr i32 %v1_862b to i32*
  %v3_862b = load i32, i32* %v2_862b, align 4
  %v4_862b = sub i32 %v3_862b, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_862b, i32* %v2_862b, align 4
  %v0_8631 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8631
}

define i32 @function_863a() local_unnamed_addr {
dec_label_pc_863a:
  %v0_863a = call i32 @function_8614()
  ret i32 %v0_863a
}

define i32 @function_863c() local_unnamed_addr {
dec_label_pc_863c:
  %v0_863c = call i32 @function_85e9()
  ret i32 %v0_863c

; uselistorder directives
  uselistorder i32 ()* @function_85e9, { 1, 0 }
}

define void @_Z19ThreadSocketHandlerv() local_unnamed_addr {
dec_label_pc_8640:
  %of.global-to-local = alloca i1, align 1
  %stack_var_-66220 = alloca i32, align 4
  store i1 false, i1* %of.global-to-local, align 1
  %v8_869e = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-66220, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 808594996, i32* @ebx, align 4
  store i32 26482, i32* @edx, align 4
  store i32 ashr (i32 808568514, i32 ptrtoint (i64* @global_var_2.2539 to i32)), i32* @eax, align 8
  store i1 false, i1* %of.global-to-local, align 1
  br i1 icmp eq (i32 ashr (i32 808568514, i32 ptrtoint (i64* @global_var_2.2539 to i32)), i32 0), label %bb, label %dec_label_pc_86be

bb:                                               ; preds = %dec_label_pc_8640
  %v1_86b8 = call i32 @function_8ada()
  store i32 %v1_86b8, i32* @eax, align 8
  br label %dec_label_pc_86be

dec_label_pc_86be:                                ; preds = %bb, %dec_label_pc_8640
  %v0_86be = phi i32 [ %v1_86b8, %bb ], [ ashr (i32 808568514, i32 ptrtoint (i64* @global_var_2.2539 to i32)), %dec_label_pc_8640 ]
  %tmp120 = sub i32 1073741822, %v0_86be
  %v8_86be = and i32 %tmp120, %v0_86be
  %v9_86be = icmp slt i32 %v8_86be, 0
  store i1 %v9_86be, i1* %of.global-to-local, align 1
  %tmp123 = icmp ult i32 %v0_86be, 1073741824
  br i1 %tmp123, label %dec_label_pc_86c9, label %bb121

bb121:                                            ; preds = %dec_label_pc_86be
  %v4_86c3 = call i32 @function_8cb5()
  %v1_86c9.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_86c9

dec_label_pc_86c9:                                ; preds = %dec_label_pc_86be, %bb121
  %v1_86c9 = phi i1 [ %v9_86be, %dec_label_pc_86be ], [ %v1_86c9.pre, %bb121 ]
  store i1 %v1_86c9, i1* %of.global-to-local, align 1
  ret void

; uselistorder directives
  uselistorder label %dec_label_pc_86c9, { 1, 0 }
}

define i32 @function_86e2() local_unnamed_addr {
dec_label_pc_86e2:
  %v0_86e2 = load i32, i32* @ebx, align 4
  %v1_86e2 = load i32, i32* @edx, align 4
  %v2_86e2 = sub i32 %v0_86e2, %v1_86e2
  %v2_86e4 = ashr i32 %v2_86e2, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_86e4 = icmp eq i32 %v2_86e4, 0
  store i32 %v2_86e4, i32* @ebx, align 4
  br i1 %v3_86e4, label %bb, label %dec_label_pc_86eb

bb:                                               ; preds = %dec_label_pc_86e2
  %v1_86e9 = call i32 @function_8702()
  br label %dec_label_pc_86eb

dec_label_pc_86eb:                                ; preds = %bb, %dec_label_pc_86e2
  %v2_86eb = mul i32 %v2_86e4, 4
  ret i32 %v2_86eb
}

define i32 @function_8702() local_unnamed_addr {
dec_label_pc_8702:
  %edx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %stack_var_124 = alloca i32, align 4
  %stack_var_200 = alloca i32, align 4
  %v0_8702 = load i32, i32* @esi, align 4
  %v1_8702 = load i32, i32* @ebx, align 4
  %v2_8702 = mul i32 %v1_8702, 4
  %v3_8702 = add i32 %v2_8702, %v0_8702
  %v2_8705 = sub i32 0, %v2_8702
  %v8_8705 = xor i32 %v3_8702, %v0_8702
  %v9_8705 = xor i32 %v0_8702, %v2_8705
  %v10_8705 = and i32 %v8_8705, %v9_8705
  %v11_8705 = icmp slt i32 %v10_8705, 0
  store i1 %v11_8705, i1* %of.global-to-local, align 1
  %v12_8705 = icmp eq i32 %v2_8702, 0
  br i1 %v12_8705, label %bb, label %dec_label_pc_8711

bb:                                               ; preds = %dec_label_pc_8702
  %v2_870b = call i32 @function_88a3(i32 %v3_8702)
  %v0_8711.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8711

dec_label_pc_8711:                                ; preds = %bb, %dec_label_pc_8702
  %v0_8711 = phi i32 [ %v0_8711.pre, %bb ], [ %v0_8702, %dec_label_pc_8702 ]
  store i32 %v0_8711, i32* @ebx, align 4
  store i32 %v0_8711, i32* @eax, align 8
  %v1_8715 = add i32 %v0_8711, ptrtoint (i8** @global_var_1d1.2443 to i32)
  %v2_8715 = inttoptr i32 %v1_8715 to i8*
  %v3_8715 = load i8, i8* %v2_8715, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v10_8715 = icmp eq i8 %v3_8715, 0
  store i32 %v0_8711, i32* %stack_var_200, align 4
  br i1 %v10_8715, label %bb36, label %dec_label_pc_8729

bb36:                                             ; preds = %dec_label_pc_8711
  %v2_8723 = call i32 @function_8938(i32 %v0_8711)
  br label %dec_label_pc_8729

dec_label_pc_8729:                                ; preds = %bb36, %dec_label_pc_8711
  %v2_8729 = ptrtoint i32* %stack_var_200 to i32
  store i32 808594996, i32* @ebp, align 4
  %v2_873f = ptrtoint i32* %stack_var_124 to i32
  store i32 %v2_873f, i32* %edx.global-to-local, align 4
  %v8_8753 = call i32 @_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag(i32* nonnull %stack_var_124, i32 26482, i32 %v2_8729, i32 0)
  store i32 %v8_8753, i32* @eax, align 8
  store i32 %v8_8753, i32* %stack_var_-4, align 4
  %v0_875d = load i32, i32* @ebp, align 4
  %v2_875d = sub i32 %v0_875d, %tmp23
  %v8_875d = xor i32 %v0_875d, %tmp23
  %v9_875d = xor i32 %v2_875d, %v0_875d
  %v10_875d = and i32 %v9_875d, %v8_875d
  %v11_875d = icmp slt i32 %v10_875d, 0
  store i1 %v11_875d, i1* %of.global-to-local, align 1
  %v12_875d = icmp eq i32 %v2_875d, 0
  br i1 %v12_875d, label %bb37, label %dec_label_pc_8761

bb37:                                             ; preds = %dec_label_pc_8729
  %v2_875f = call i32 @function_87bd(i32 %v8_8753)
  %v0_8761.pre = load i32, i32* @edi, align 4
  %v0_8764.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8761

dec_label_pc_8761:                                ; preds = %bb37, %dec_label_pc_8729
  %v0_8764 = phi i32 [ %v0_8764.pre, %bb37 ], [ %v0_875d, %dec_label_pc_8729 ]
  %v0_8761 = phi i32 [ %v0_8761.pre, %bb37 ], [ %tmp23, %dec_label_pc_8729 ]
  %v1_8761 = add i32 %v0_8761, 4
  store i32 %v1_8761, i32* @eax, align 8
  %v2_8764 = sub i32 %v0_8764, %v1_8761
  %v8_8764 = xor i32 %v1_8761, %v0_8764
  %v9_8764 = xor i32 %v2_8764, %v0_8764
  %v10_8764 = and i32 %v9_8764, %v8_8764
  %v11_8764 = icmp slt i32 %v10_8764, 0
  store i1 %v11_8764, i1* %of.global-to-local, align 1
  %v12_8764 = icmp eq i32 %v2_8764, 0
  br i1 %v12_8764, label %dec_label_pc_877f, label %dec_label_pc_8768

dec_label_pc_8768:                                ; preds = %dec_label_pc_8761, %dec_label_pc_8778
  %v0_877b11 = phi i32 [ %v0_877b, %dec_label_pc_8778 ], [ %v0_8764, %dec_label_pc_8761 ]
  %v1_8773 = phi i32 [ %v1_87739, %dec_label_pc_8778 ], [ %v0_8761, %dec_label_pc_8761 ]
  %v0_8768 = phi i32 [ %v1_8778, %dec_label_pc_8778 ], [ %v1_8761, %dec_label_pc_8761 ]
  %v1_8768 = inttoptr i32 %v0_8768 to i32*
  %v2_8768 = load i32, i32* %v1_8768, align 4
  store i32 %v2_8768, i32* %edx.global-to-local, align 4
  %v15_876a = icmp eq i32 %v2_8768, %tmp22
  br i1 %v15_876a, label %dec_label_pc_8778, label %dec_label_pc_8773

dec_label_pc_8773:                                ; preds = %dec_label_pc_8768
  %v2_8773 = inttoptr i32 %v1_8773 to i32*
  store i32 %v2_8768, i32* %v2_8773, align 4
  %v0_8775 = load i32, i32* @edi, align 4
  %v1_8775 = add i32 %v0_8775, 4
  store i32 %v1_8775, i32* @edi, align 4
  %v0_8778.pre = load i32, i32* @eax, align 8
  %v0_877b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8778

dec_label_pc_8778:                                ; preds = %dec_label_pc_8773, %dec_label_pc_8768
  %v0_877b = phi i32 [ %v0_877b.pre, %dec_label_pc_8773 ], [ %v0_877b11, %dec_label_pc_8768 ]
  %v0_8778 = phi i32 [ %v0_8778.pre, %dec_label_pc_8773 ], [ %v0_8768, %dec_label_pc_8768 ]
  %v1_87739 = phi i32 [ %v1_8775, %dec_label_pc_8773 ], [ %v1_8773, %dec_label_pc_8768 ]
  %v1_8778 = add i32 %v0_8778, 4
  store i32 %v1_8778, i32* @eax, align 8
  %v2_877b = sub i32 %v0_877b, %v1_8778
  %v12_877b = icmp eq i32 %v2_877b, 0
  %v1_877d = icmp eq i1 %v12_877b, false
  br i1 %v1_877d, label %dec_label_pc_8768, label %dec_label_pc_877f.loopexit

dec_label_pc_877f.loopexit:                       ; preds = %dec_label_pc_8778
  %v9_877b = xor i32 %v2_877b, %v0_877b
  %v8_877b = xor i32 %v1_8778, %v0_877b
  %v10_877b = and i32 %v9_877b, %v8_877b
  %v11_877b = icmp slt i32 %v10_877b, 0
  store i1 %v11_877b, i1* %of.global-to-local, align 1
  br label %dec_label_pc_877f

dec_label_pc_877f:                                ; preds = %dec_label_pc_877f.loopexit, %dec_label_pc_8761
  %v1_877f = phi i32 [ %v1_87739, %dec_label_pc_877f.loopexit ], [ %v0_8761, %dec_label_pc_8761 ]
  %v0_877f = phi i32 [ %v0_877b, %dec_label_pc_877f.loopexit ], [ %v0_8764, %dec_label_pc_8761 ]
  %v2_877f = sub i32 %v0_877f, %v1_877f
  %v8_877f = xor i32 %v0_877f, %v1_877f
  %v9_877f = xor i32 %v2_877f, %v0_877f
  %v10_877f = and i32 %v9_877f, %v8_877f
  %v11_877f = icmp slt i32 %v10_877f, 0
  store i1 %v11_877f, i1* %of.global-to-local, align 1
  %v12_877f = icmp eq i32 %v2_877f, 0
  br i1 %v12_877f, label %bb38, label %dec_label_pc_8783

bb38:                                             ; preds = %dec_label_pc_877f
  %v1_8781 = load i32, i32* %stack_var_-4, align 4
  %v2_8781 = call i32 @function_87bd(i32 %v1_8781)
  %v0_878b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8783

dec_label_pc_8783:                                ; preds = %bb38, %dec_label_pc_877f
  %v0_878b = phi i32 [ %v0_878b.pre, %bb38 ], [ %v0_877f, %dec_label_pc_877f ]
  store i32 808594996, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 8
  %tmp39 = sub i32 808594995, %v0_878b
  %v10_878b = and i32 %tmp39, %v0_878b
  %v11_878b = icmp slt i32 %v10_878b, 0
  store i1 %v11_878b, i1* %of.global-to-local, align 1
  %v12_878b = icmp eq i32 %v0_878b, 808594996
  br i1 %v12_878b, label %bb40, label %dec_label_pc_878f

bb40:                                             ; preds = %dec_label_pc_8783
  %v1_878d = call i32 @function_87b5()
  store i32 %v1_878d, i32* @eax, align 8
  %v0_878f.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_878f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_878f

dec_label_pc_878f:                                ; preds = %bb40, %dec_label_pc_8783
  %v3_87a320 = phi i32 [ %v1_878d, %bb40 ], [ 0, %dec_label_pc_8783 ]
  %v1_878f = phi i32 [ %v1_878f.pre, %bb40 ], [ %v0_878b, %dec_label_pc_8783 ]
  %v0_878f = phi i32 [ %v0_878f.pre, %bb40 ], [ 808594996, %dec_label_pc_8783 ]
  %v2_878f = sub i32 %v0_878f, %v1_878f
  %v2_8791 = ashr i32 %v2_878f, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_8791 = icmp eq i32 %v2_8791, 0
  store i32 %v2_8791, i32* %edx.global-to-local, align 4
  store i1 false, i1* %of.global-to-local, align 1
  br i1 %v3_8791, label %bb41, label %dec_label_pc_8798

bb41:                                             ; preds = %dec_label_pc_878f
  %v1_8796 = call i32 @function_87b5()
  %v2_8798.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_8798

dec_label_pc_8798:                                ; preds = %bb41, %dec_label_pc_878f
  %v3_87a3 = phi i32 [ %v1_8796, %bb41 ], [ %v3_87a320, %dec_label_pc_878f ]
  %v2_8798 = phi i1 [ %v2_8798.pre, %bb41 ], [ false, %dec_label_pc_878f ]
  %v3_8798 = shl i32 %v2_8791, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v3_8798, i32* %edx.global-to-local, align 4
  store i1 %v2_8798, i1* %of.global-to-local, align 1
  ret i32 %v3_87a3

; uselistorder directives
  uselistorder i32 %v0_878b, { 3, 0, 1, 2 }
  uselistorder i32 %v2_877f, { 1, 0 }
  uselistorder i32 %v0_877f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8778, { 0, 2, 3, 1 }
  uselistorder i32 %v0_877b, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v1_8773, { 1, 0 }
  uselistorder i32 %v2_8764, { 1, 0 }
  uselistorder i32 %v0_8761, { 1, 0, 2 }
  uselistorder i32 %v0_8764, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_875d, { 1, 0 }
  uselistorder i32 %v0_875d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8711, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_8702, { 1, 0 }
  uselistorder i32 %v2_8702, { 1, 2, 0 }
  uselistorder i32 %v0_8702, { 3, 0, 1, 2 }
  uselistorder i32 %tmp23, { 1, 0, 2 }
  uselistorder i32 ()* @function_87b5, { 1, 0 }
  uselistorder i32 (i32)* @function_87bd, { 1, 0 }
  uselistorder label %dec_label_pc_8768, { 1, 0 }
}

define i32 @function_87aa() local_unnamed_addr {
dec_label_pc_87aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_87aa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_87aa
}

define i32 @function_87b5() local_unnamed_addr {
dec_label_pc_87b5:
  %v0_87b5 = load i32, i32* @edi, align 4
  %v1_87b5 = load i32, i32* @eax, align 8
  %v2_87b5 = mul i32 %v1_87b5, 4
  %v3_87b5 = add i32 %v2_87b5, %v0_87b5
  store i32 %v3_87b5, i32* bitcast ([13 x i8]* @global_var_a178.2412 to i32*), align 4
  ret i32 %v3_87b5
}

define i32 @function_87bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_87bd:
  store i32 %arg1, i32* @edi, align 4
  %v1_87c4 = add i32 %arg1, ptrtoint (i8** @global_var_1d8.2528 to i32)
  %v2_87c4 = inttoptr i32 %v1_87c4 to i8*
  %v3_87c4 = load i8, i8* %v2_87c4, align 1
  %v10_87c4 = icmp eq i8 %v3_87c4, 0
  br i1 %v10_87c4, label %bb, label %dec_label_pc_87bd.dec_label_pc_87cd_crit_edge

dec_label_pc_87bd.dec_label_pc_87cd_crit_edge:    ; preds = %dec_label_pc_87bd
  %v4_87d9.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_87cd

bb:                                               ; preds = %dec_label_pc_87bd
  %v1_87cb = call i32 @function_8843()
  %v0_87cd.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_87cd

dec_label_pc_87cd:                                ; preds = %dec_label_pc_87bd.dec_label_pc_87cd_crit_edge, %bb
  %v4_87d9 = phi i32 [ %v1_87cb, %bb ], [ %v4_87d9.pre, %dec_label_pc_87bd.dec_label_pc_87cd_crit_edge ]
  %v0_87cd = phi i32 [ %v0_87cd.pre, %bb ], [ %arg1, %dec_label_pc_87bd.dec_label_pc_87cd_crit_edge ]
  %v1_87cd = add i32 %v0_87cd, ptrtoint (i32* @global_var_1d4.2529 to i32)
  %v2_87cd = inttoptr i32 %v1_87cd to i32*
  %v3_87cd = load i32, i32* %v2_87cd, align 4
  store i32 %v3_87cd, i32* @ebp, align 4
  ret i32 %v4_87d9

; uselistorder directives
  uselistorder label %dec_label_pc_87cd, { 1, 0 }
}

define i32 @function_8843() local_unnamed_addr {
dec_label_pc_8843:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8843 = load i32, i32* @edi, align 4
  call void @_ZN5CNode21CloseSocketDisconnectEv(i32 %v0_8843)
  %v1_8852 = add i32 %tmp, ptrtoint (i8** @global_var_1cf.2530 to i32)
  %v2_8852 = inttoptr i32 %v1_8852 to i8*
  %v3_8852 = load i8, i8* %v2_8852, align 1
  %v10_8852 = icmp eq i8 %v3_8852, 0
  %v1_8859 = icmp eq i1 %v10_8852, false
  br i1 %v1_8859, label %dec_label_pc_8864, label %dec_label_pc_885b

dec_label_pc_885b:                                ; preds = %dec_label_pc_8843
  %v1_885b = add i32 %tmp, ptrtoint (i8** @global_var_1ce.2508 to i32)
  %v2_885b = inttoptr i32 %v1_885b to i8*
  %v3_885b = load i8, i8* %v2_885b, align 1
  %v10_885b = icmp eq i8 %v3_885b, 0
  br i1 %v10_885b, label %dec_label_pc_886b, label %dec_label_pc_8864

dec_label_pc_8864:                                ; preds = %dec_label_pc_885b, %dec_label_pc_8843
  %v1_8864 = add i32 %tmp, 564
  %v2_8864 = inttoptr i32 %v1_8864 to i32*
  %v3_8864 = load i32, i32* %v2_8864, align 4
  %v4_8864 = add i32 %v3_8864, -1
  store i32 %v4_8864, i32* %v2_8864, align 4
  %v2_886b.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_886b

dec_label_pc_886b:                                ; preds = %dec_label_pc_8864, %dec_label_pc_885b
  %v2_886b = phi i32 [ %v2_886b.pre, %dec_label_pc_8864 ], [ %tmp, %dec_label_pc_885b ]
  ret i32 %v2_886b

; uselistorder directives
  uselistorder i32 ptrtoint (i8** @global_var_1cf.2530 to i32), { 1, 0 }
}

define i32 @function_8896() local_unnamed_addr {
dec_label_pc_8896:
  %v0_8896 = load i32, i32* @ebx, align 4
  %v1_8896 = add i32 %v0_8896, 4
  store i32 %v1_8896, i32* @ebx, align 4
  %v0_889d = load i32, i32* @eax, align 8
  ret i32 %v0_889d
}

define i32 @function_88a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_88a3:
  %stack_var_152 = alloca i32, align 4
  %v2_88a9 = ptrtoint i32* %stack_var_152 to i32
  store i32 %v2_88a9, i32* @edi, align 4
  %v2_88c8 = load i32, i32* @eax, align 8
  ret i32 %v2_88c8
}

define i32 @function_88f5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_88f5:
  %zf.global-to-local = alloca i1, align 1
  %stack_var_160 = alloca i32, align 4
  %v2_88f5 = load i32, i32* @edi, align 4
  %v2_88f7 = ptrtoint i32* %stack_var_160 to i32
  store i32 %v2_88f7, i32* @ebx, align 4
  br label %dec_label_pc_8902

dec_label_pc_8902:                                ; preds = %dec_label_pc_8925, %dec_label_pc_88f5
  %v4_8902 = phi i32 [ %v4_8902.pre, %dec_label_pc_8925 ], [ %v2_88f5, %dec_label_pc_88f5 ]
  %storemerge = phi i32 [ %v2_8929, %dec_label_pc_8925 ], [ %v2_88f5, %dec_label_pc_88f5 ]
  %v15_8902 = icmp eq i32 %storemerge, %v4_8902
  store i1 %v15_8902, i1* %zf.global-to-local, align 1
  br i1 %v15_8902, label %bb, label %dec_label_pc_890c

bb:                                               ; preds = %dec_label_pc_8902
  %v1_8906 = call i32 @function_8ae1()
  store i32 %v1_8906, i32* @eax, align 8
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %bb, %dec_label_pc_8902
  %v1_8910 = add i32 %storemerge, 8
  %v2_8910 = inttoptr i32 %v1_8910 to i32*
  %v3_8910 = load i32, i32* %v2_8910, align 4
  store i32 %v3_8910, i32* @ebp, align 4
  %v1_891a = add i32 %v3_8910, 564
  %v2_891a = inttoptr i32 %v1_891a to i32*
  %v3_891a = load i32, i32* %v2_891a, align 4
  %v10_891a = icmp eq i32 %v3_891a, 0
  store i1 %v10_891a, i1* %zf.global-to-local, align 1
  %v11_891a = icmp slt i32 %v3_891a, 0
  %v2_8921 = icmp eq i1 %v11_891a, false
  br i1 %v2_8921, label %dec_label_pc_8923, label %bb5

bb5:                                              ; preds = %dec_label_pc_890c
  %v3_8921 = call i32 @function_8978()
  store i32 %v3_8921, i32* @eax, align 8
  %v0_8923.pre = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8923.pre, label %bb6, label %dec_label_pc_8925

dec_label_pc_8923:                                ; preds = %dec_label_pc_890c
  br i1 %v10_891a, label %bb6, label %dec_label_pc_8925

bb6:                                              ; preds = %bb5, %dec_label_pc_8923
  %v1_8923 = call i32 @function_899c()
  store i32 %v1_8923, i32* @eax, align 8
  br label %dec_label_pc_8925

dec_label_pc_8925:                                ; preds = %bb5, %bb6, %dec_label_pc_8923
  %v1_8929 = inttoptr i32 %storemerge to i32*
  %v2_8929 = load i32, i32* %v1_8929, align 4
  %v4_8902.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8902

; uselistorder directives
  uselistorder i32 %v3_891a, { 1, 0 }
  uselistorder i1 %v15_8902, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_88f5, { 1, 0 }
  uselistorder label %dec_label_pc_8925, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_8938(i32 %arg1) local_unnamed_addr {
dec_label_pc_8938:
  %zf.global-to-local = alloca i1, align 1
  %v0_8938 = load i32, i32* @eax, align 8
  %v1_8938 = add i32 %v0_8938, 564
  %v2_8938 = inttoptr i32 %v1_8938 to i32*
  %v3_8938 = load i32, i32* %v2_8938, align 4
  %v10_8938 = icmp eq i32 %v3_8938, 0
  store i1 %v10_8938, i1* %zf.global-to-local, align 1
  %v11_8938 = icmp slt i32 %v3_8938, 0
  %v2_893f = icmp eq i1 %v11_8938, false
  br i1 %v2_893f, label %dec_label_pc_8941, label %bb

bb:                                               ; preds = %dec_label_pc_8938
  %v3_893f = call i32 @function_8978()
  store i32 %v3_893f, i32* @eax, align 8
  %v0_8941.pre = load i1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8941

dec_label_pc_8941:                                ; preds = %dec_label_pc_8938, %bb
  %v0_89473 = phi i32 [ %v0_8938, %dec_label_pc_8938 ], [ %v3_893f, %bb ]
  %v0_8941 = phi i1 [ %v10_8938, %dec_label_pc_8938 ], [ %v0_8941.pre, %bb ]
  %v1_8941 = icmp eq i1 %v0_8941, false
  br i1 %v1_8941, label %bb7, label %dec_label_pc_8947

bb7:                                              ; preds = %dec_label_pc_8941
  %v2_8941 = call i32 @function_8896()
  store i32 %v2_8941, i32* @eax, align 8
  br label %dec_label_pc_8947

dec_label_pc_8947:                                ; preds = %bb7, %dec_label_pc_8941
  %v0_8947 = phi i32 [ %v2_8941, %bb7 ], [ %v0_89473, %dec_label_pc_8941 ]
  %v1_8947 = add i32 %v0_8947, 228
  %v2_8947 = inttoptr i32 %v1_8947 to i32*
  %v3_8947 = load i32, i32* %v2_8947, align 4
  store i32 %v3_8947, i32* @edi, align 4
  %v1_894d = add i32 %v0_8947, ptrtoint (i32* @global_var_f4.2449 to i32)
  %v2_894d = inttoptr i32 %v1_894d to i32*
  %v3_894d = load i32, i32* %v2_894d, align 4
  %v15_894d = icmp eq i32 %v3_894d, %v3_8947
  store i1 %v15_894d, i1* %zf.global-to-local, align 1
  %v1_8953 = icmp eq i1 %v15_894d, false
  br i1 %v1_8953, label %bb8, label %dec_label_pc_8959

bb8:                                              ; preds = %dec_label_pc_8947
  %v2_8953 = call i32 @function_8896()
  store i32 %v2_8953, i32* @eax, align 8
  br label %dec_label_pc_8959

dec_label_pc_8959:                                ; preds = %bb8, %dec_label_pc_8947
  %v0_8959 = phi i32 [ %v2_8953, %bb8 ], [ %v0_8947, %dec_label_pc_8947 ]
  %v1_8959 = add i32 %v0_8959, 40
  %v2_8959 = inttoptr i32 %v1_8959 to i32*
  %v3_8959 = load i32, i32* %v2_8959, align 4
  %v1_895c = icmp eq i32 %v3_8959, 0
  store i1 %v1_895c, i1* %zf.global-to-local, align 1
  %v1_895e = icmp eq i1 %v1_895c, false
  br i1 %v1_895e, label %bb9, label %dec_label_pc_8964

bb9:                                              ; preds = %dec_label_pc_8959
  %v2_895e = call i32 @function_8896()
  store i32 %v2_895e, i32* @eax, align 8
  br label %dec_label_pc_8964

dec_label_pc_8964:                                ; preds = %bb9, %dec_label_pc_8959
  %v1_896a = phi i32 [ %v2_895e, %bb9 ], [ %v0_8959, %dec_label_pc_8959 ]
  %v1_8964 = add i32 %v1_896a, 16
  %v2_8964 = inttoptr i32 %v1_8964 to i32*
  %v3_8964 = load i32, i32* %v2_8964, align 4
  %v2_8967 = add i32 %v1_896a, 12
  %v3_8967 = inttoptr i32 %v2_8967 to i32*
  %v4_8967 = load i32, i32* %v3_8967, align 4
  %v5_8967 = sub i32 %v3_8964, %v4_8967
  %v2_896a = add i32 %v1_896a, 24
  %v3_896a = inttoptr i32 %v2_896a to i32*
  %v4_896a = load i32, i32* %v3_896a, align 4
  %v15_896a = icmp eq i32 %v5_8967, %v4_896a
  store i1 %v15_896a, i1* %zf.global-to-local, align 1
  %v1_896d = icmp eq i1 %v15_896a, false
  br i1 %v1_896d, label %bb10, label %dec_label_pc_8973

bb10:                                             ; preds = %dec_label_pc_8964
  %v2_896d = call i32 @function_8896()
  br label %dec_label_pc_8973

dec_label_pc_8973:                                ; preds = %bb10, %dec_label_pc_8964
  %v0_8973 = phi i32 [ %v2_896d, %bb10 ], [ %v1_896a, %dec_label_pc_8964 ]
  ret i32 %v0_8973

; uselistorder directives
  uselistorder i1 %v15_896a, { 1, 0 }
  uselistorder i32 %v1_896a, { 0, 1, 3, 2 }
  uselistorder i1 %v15_894d, { 1, 0 }
  uselistorder i32 %v0_8947, { 0, 2, 1 }
  uselistorder i32 %v3_8938, { 1, 0 }
  uselistorder i32 ()* @function_8896, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_8978, { 1, 0 }
  uselistorder label %dec_label_pc_8941, { 1, 0 }
}

define i32 @function_8978() local_unnamed_addr {
dec_label_pc_8978:
  %v3_8990 = load i32, i32* @eax, align 8
  ret i32 %v3_8990
}

define i32 @function_899c() local_unnamed_addr {
dec_label_pc_899c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_176 = alloca i32, align 4
  %tmp12 = call i8 @__decompiler_undefined_function_3()
  %stack_var_168 = alloca i32, align 4
  %v0_899c = load i32, i32* @ebp, align 4
  %v1_899c = add i32 %v0_899c, ptrtoint (i32* @global_var_60.2520 to i32)
  %v0_89c3 = load i32, i32* @ebx, align 4
  %v6_89c6 = inttoptr i32 %v0_89c3 to i32*
  %v7_89c6 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %v6_89c6, i32 %v1_899c, i32 ptrtoint ([16 x i8]* @global_var_a452.2555 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v0_89cb = load i32, i32* @ebx, align 4
  %v1_89cb = add i32 %v0_89cb, 4
  %v2_89cb = inttoptr i32 %v1_89cb to i8*
  %v3_89cb = load i8, i8* %v2_89cb, align 1
  %v10_89cb = icmp eq i8 %v3_89cb, 0
  br i1 %v10_89cb, label %dec_label_pc_8acd, label %dec_label_pc_89d5

dec_label_pc_89d5:                                ; preds = %dec_label_pc_899c
  %v0_89d5 = load i32, i32* @ebp, align 4
  %v1_89d5 = add i32 %v0_89d5, 260
  %v7_8a09 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_168, i32 %v1_89d5, i32 ptrtoint ([19 x i8]* @global_var_a462.2556 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v10_8a0e = icmp eq i8 %tmp12, 0
  br i1 %v10_8a0e, label %dec_label_pc_8abe, label %dec_label_pc_8a1c

dec_label_pc_8a1c:                                ; preds = %dec_label_pc_89d5
  %v7_8a54 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_176, i32 ptrtoint ([20 x i8]* @global_var_a475.2557 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32), i32 790)
  %v2_8a68 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_176)
  %v2_8a77 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  %v0_8a7c = load i32, i32* @ebx, align 4
  %v1_8a7f = inttoptr i32 %v0_8a7c to i32*
  %v2_8a7f = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_8a7f)
  store i32 %v2_8a7f, i32* @eax, align 8
  store i32 6579557, i32* @ebp, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_a318.2552 to i32), i32* @edx, align 4
  %v0_8a99 = load i32, i32* @esi, align 4
  store i32 %v0_8a99, i32* @ecx, align 4
  br label %dec_label_pc_8a9b

dec_label_pc_8a9b:                                ; preds = %dec_label_pc_8aba, %dec_label_pc_8a1c
  %v0_8a9b = phi i32 [ %v0_8aba, %dec_label_pc_8aba ], [ 6579557, %dec_label_pc_8a1c ]
  %v10_8a9b = icmp eq i32 %v0_8a9b, 41752
  br i1 %v10_8a9b, label %bb, label %dec_label_pc_8aa7

bb:                                               ; preds = %dec_label_pc_8a9b
  %v1_8aa1 = call i32 @function_8bed()
  %v0_8aae.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8aa7

dec_label_pc_8aa7:                                ; preds = %bb, %dec_label_pc_8a9b
  %v0_8ab1 = phi i32 [ %v0_8aae.pre, %bb ], [ %v0_8a9b, %dec_label_pc_8a9b ]
  %v1_8aae = add i32 %v0_8ab1, 8
  %v2_8aae = inttoptr i32 %v1_8aae to i32*
  %v3_8aae = load i32, i32* %v2_8aae, align 4
  %v15_8aae = icmp eq i32 %v3_8aae, %tmp
  %v1_8ab1 = inttoptr i32 %v0_8ab1 to i32*
  %v2_8ab1 = load i32, i32* %v1_8ab1, align 4
  store i32 %v2_8ab1, i32* @esi, align 4
  br i1 %v15_8aae, label %bb25, label %dec_label_pc_8aba

bb25:                                             ; preds = %dec_label_pc_8aa7
  %v1_8ab4 = call i32 @function_8bbd()
  store i32 %v1_8ab4, i32* @eax, align 8
  %v0_8aba.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8aba

dec_label_pc_8aba:                                ; preds = %bb25, %dec_label_pc_8aa7
  %v0_8aba = phi i32 [ %v0_8aba.pre, %bb25 ], [ %v2_8ab1, %dec_label_pc_8aa7 ]
  store i32 %v0_8aba, i32* @ebp, align 4
  br label %dec_label_pc_8a9b

dec_label_pc_8abe:                                ; preds = %dec_label_pc_89d5
  %v2_8ac8 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  %v0_8acd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8acd

dec_label_pc_8acd:                                ; preds = %dec_label_pc_8abe, %dec_label_pc_899c
  %v0_8acd = phi i32 [ %v0_8acd.pre, %dec_label_pc_8abe ], [ %v0_89cb, %dec_label_pc_899c ]
  %v1_8ad0 = inttoptr i32 %v0_8acd to i32*
  %v2_8ad0 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_8ad0)
  ret i32 %v2_8ad0

; uselistorder directives
  uselistorder i32 %v0_8a9b, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_60.2520 to i32), { 3, 4, 0, 5, 1, 6, 2, 7 }
}

define i32 @function_8ada() local_unnamed_addr {
dec_label_pc_8ada:
  store i32 0, i32* @esi, align 4
  %v0_8adc = call i32 @function_86e2()
  ret i32 %v0_8adc
}

define i32 @function_8ae1() local_unnamed_addr {
dec_label_pc_8ae1:
  %stack_var_144 = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_8ae8 = inttoptr i32 %tmp3 to i32*
  %v2_8ae8 = call i32 @_ZNSt4listIP5CNodeSaIS1_EED1Ev(i32* %v1_8ae8)
  %v2_8afe = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_144)
  store i32 ashr (i32 808568514, i32 ptrtoint (i64* @global_var_2.2539 to i32)), i32* @ebx, align 4
  ret i32 %v2_8afe

; uselistorder directives
  uselistorder i32 ashr (i32 808568514, i32 ptrtoint (i64* @global_var_2.2539 to i32)), { 1, 0, 2, 3 }
}

define i32 @function_8ba3() local_unnamed_addr {
dec_label_pc_8ba3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_8baa = urem i32 %tmp93, 32
  %v5_8baa = icmp eq i32 %v3_8baa, 0
  br i1 %v5_8baa, label %bb97, label %bb

bb:                                               ; preds = %dec_label_pc_8ba3
  %v4_8baa = load i1, i1* %of.global-to-local, align 1
  %v6_8baa = shl i32 ptrtoint (i1* @global_var_1.2399 to i32), %v3_8baa
  %v13_8baa = add nsw i32 %v3_8baa, -1
  %v14_8baa = shl i32 ptrtoint (i1* @global_var_1.2399 to i32), %v13_8baa
  %tmp99 = icmp slt i32 %v14_8baa, 0
  %tmp100 = icmp slt i32 %v6_8baa, 0
  %v18_8baa = icmp ne i1 %tmp100, %tmp99
  %v19_8baa = icmp eq i32 %v3_8baa, 1
  %v20_8baa = select i1 %v19_8baa, i1 %v18_8baa, i1 %v4_8baa
  store i1 %v20_8baa, i1* %of.global-to-local, align 1
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_8ba3, %bb
  %v7_8bac = phi i32 [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_8ba3 ], [ %v6_8baa, %bb ]
  %v0_8bac = load i32, i32* @esp, align 4
  %v1_8bac = load i32, i32* %eax.global-to-local, align 8
  %v2_8bac = mul i32 %v1_8bac, 4
  %v3_8bac = add i32 %v0_8bac, 228
  %v4_8bac = add i32 %v3_8bac, %v2_8bac
  %v5_8bac = inttoptr i32 %v4_8bac to i32*
  %v6_8bac = load i32, i32* %v5_8bac, align 4
  %v8_8bac = or i32 %v6_8bac, %v7_8bac
  store i32 %v8_8bac, i32* %v5_8bac, align 4
  %v0_8bb3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8bb3 = load i32, i32* %esi.global-to-local, align 4
  %v7_8bb3 = icmp ult i32 %v0_8bb3, %v1_8bb3
  %v3_8bb5 = select i1 %v7_8bb3, i32 %v1_8bb3, i32 %v0_8bb3
  store i32 %v3_8bb5, i32* %ebp.global-to-local, align 4
  %v0_8bb8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8bb8 = add i32 %v0_8bb8, 4
  %tmp98 = xor i32 %v0_8bb8, -2147483648
  %v8_8bb8 = and i32 %v1_8bb8, %tmp98
  %v9_8bb8 = icmp slt i32 %v8_8bb8, 0
  store i1 %v9_8bb8, i1* %of.global-to-local, align 1
  store i32 %v1_8bb8, i32* %ebx.global-to-local, align 4
  %v0_8bbb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8bbb

; uselistorder directives
  uselistorder i32 %v1_8bb8, { 1, 0 }
  uselistorder i32 %v6_8baa, { 1, 0 }
  uselistorder i32 %v3_8baa, { 2, 3, 1, 0 }
  uselistorder label %bb97, { 1, 0 }
}

define i32 @function_8bbd() local_unnamed_addr {
dec_label_pc_8bbd:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_8bbd = load i32, i32* @ebp, align 4
  %v1_8bbd = add i32 %v0_8bbd, 8
  store i32 %v1_8bbd, i32* @eax, align 8
  %v15_8bc0 = icmp eq i32 %tmp4, %v1_8bbd
  br i1 %v15_8bc0, label %bb, label %dec_label_pc_8bc6

bb:                                               ; preds = %dec_label_pc_8bbd
  %v1_8bc4 = call i32 @function_8c33()
  br label %dec_label_pc_8bc6

dec_label_pc_8bc6:                                ; preds = %bb, %dec_label_pc_8bbd
  %v3_8bce = phi i32 [ %v1_8bc4, %bb ], [ %v1_8bbd, %dec_label_pc_8bbd ]
  ret i32 %v3_8bce

; uselistorder directives
  uselistorder i32 %v1_8bbd, { 1, 0, 2 }
}

define i32 @function_8bdf() local_unnamed_addr {
dec_label_pc_8bdf:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_8bdf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8bdf = add i32 %v0_8bdf, -1957682092
  %v2_8bdf = inttoptr i32 %v1_8bdf to i32*
  %v3_8bdf = load i32, i32* %v2_8bdf, align 4
  %v4_8bdf = sub i32 %v3_8bdf, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_8bdf, i32* %v2_8bdf, align 4
  %v0_8be6 = load i32, i32* %eax.global-to-local, align 8
  %v11_8be6 = and i32 %v0_8be6, -172
  store i32 %v11_8be6, i32* %eax.global-to-local, align 8
  ret i32 %v11_8be6

; uselistorder directives
  uselistorder i32 %v11_8be6, { 1, 0 }
}

define i32 @function_8bed() local_unnamed_addr {
dec_label_pc_8bed:
  %v0_8bed = load i32, i32* @edx, align 4
  %v10_8bed = icmp eq i32 %v0_8bed, 41752
  br i1 %v10_8bed, label %bb, label %dec_label_pc_8bed.dec_label_pc_8bf7_crit_edge

dec_label_pc_8bed.dec_label_pc_8bf7_crit_edge:    ; preds = %dec_label_pc_8bed
  %v4_8bfa.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_8bf7

bb:                                               ; preds = %dec_label_pc_8bed
  %v1_8bf5 = call i32 @function_8c0f()
  br label %dec_label_pc_8bf7

dec_label_pc_8bf7:                                ; preds = %dec_label_pc_8bed.dec_label_pc_8bf7_crit_edge, %bb
  %v4_8bfa = phi i32 [ %v4_8bfa.pre, %dec_label_pc_8bed.dec_label_pc_8bf7_crit_edge ], [ %v1_8bf5, %bb ]
  ret i32 %v4_8bfa

; uselistorder directives
  uselistorder label %dec_label_pc_8bf7, { 1, 0 }
}

define i32 @function_8c0f() local_unnamed_addr {
dec_label_pc_8c0f:
  %v0_8c21 = call i32 @_ZN5CNodeD1Ev()
  ret i32 %v0_8c21
}

define i32 @function_8c2e() local_unnamed_addr {
dec_label_pc_8c2e:
  %eax.global-to-local = alloca i32, align 4
  %v0_8c2e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8c2e
}

define i32 @function_8c33() local_unnamed_addr {
dec_label_pc_8c33:
  %v0_8c33 = load i32, i32* @ebp, align 4
  store i32 %v0_8c33, i32* @edx, align 4
  %v0_8c37 = load i32, i32* @eax, align 8
  ret i32 %v0_8c37
}

define i32 @function_8c4f() local_unnamed_addr {
dec_label_pc_8c4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_8c4f = load i32, i32* %eax.global-to-local, align 8
  %v11_8c4f = and i32 %v0_8c4f, -119
  store i32 %v11_8c4f, i32* %eax.global-to-local, align 8
  ret i32 %v11_8c4f

; uselistorder directives
  uselistorder i32 %v11_8c4f, { 1, 0 }
}

define i32 @function_8c57() local_unnamed_addr {
dec_label_pc_8c57:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8c5f() local_unnamed_addr {
dec_label_pc_8c5f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8c66() local_unnamed_addr {
dec_label_pc_8c66:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8c7c() local_unnamed_addr {
dec_label_pc_8c7c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8c7c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8c7c = add i32 %v0_8c7c, -1983059003
  %v2_8c7c = inttoptr i32 %v1_8c7c to i32*
  %v3_8c7c = load i32, i32* %v2_8c7c, align 4
  %v4_8c7c = sub i32 %v3_8c7c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_8c7c, i32* %v2_8c7c, align 4
  %v0_8c82 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8c82
}

define i32 @function_8c83() local_unnamed_addr {
dec_label_pc_8c83:
  %v0_8c83 = call i32 @function_8c57()
  ret i32 %v0_8c83
}

define i32 @function_8c8d() local_unnamed_addr {
dec_label_pc_8c8d:
  %eax.global-to-local = alloca i32, align 4
  %v0_8c8d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8c8d
}

define i32 @function_8c8e() local_unnamed_addr {
dec_label_pc_8c8e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8c9c() local_unnamed_addr {
dec_label_pc_8c9c:
  %v0_8c9e = call i32 @function_8c8e()
  ret i32 %v0_8c9e
}

define i32 @function_8ca9() local_unnamed_addr {
dec_label_pc_8ca9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8ca9 = load i32, i32* %eax.global-to-local, align 8
  %v2_8ca9 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8ca9 = udiv i32 %v2_8ca9, 256
  %v5_8ca9 = add i32 %v3_8ca9, %v0_8ca9
  %v20_8ca9 = and i32 %v5_8ca9, 255
  %v22_8ca9 = and i32 %v0_8ca9, -256
  %v23_8ca9 = or i32 %v20_8ca9, %v22_8ca9
  store i32 %v23_8ca9, i32* %eax.global-to-local, align 8
  ret i32 %v23_8ca9

; uselistorder directives
  uselistorder i32 %v0_8ca9, { 1, 0 }
}

define i32 @function_8cb5() local_unnamed_addr {
dec_label_pc_8cb5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8cb9() local_unnamed_addr {
dec_label_pc_8cb9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8cb9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8cb9 = add i32 %v0_8cb9, -1985877053
  %v2_8cb9 = inttoptr i32 %v1_8cb9 to i32*
  %v3_8cb9 = load i32, i32* %v2_8cb9, align 4
  %v4_8cb9 = sub i32 %v3_8cb9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_8cb9, i32* %v2_8cb9, align 4
  %v0_8cbf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8cbf
}

define i32 @function_8cc0() local_unnamed_addr {
dec_label_pc_8cc0:
  %v0_8cc0 = call i32 @function_8c66()
  ret i32 %v0_8cc0
}

define i32 @function_8d06() local_unnamed_addr {
dec_label_pc_8d06:
  %ecx.global-to-local = alloca i32, align 4
  %v0_8d06 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8d06 = add i32 %v0_8d06, 605850055
  %v2_8d06 = inttoptr i32 %v1_8d06 to i32*
  %v3_8d06 = load i32, i32* %v2_8d06, align 4
  %v4_8d06 = add i32 %v3_8d06, -1
  store i32 %v4_8d06, i32* %v2_8d06, align 4
  %v2_8d0e = call i32 @_ZN5boost10lock_errorD1Ev(i32* nonnull @1)
  store i32 %v2_8d0e, i32* @eax, align 8
  %v0_8d13 = call i32 @function_8c5f()
  ret i32 %v0_8d13
}

define i32 @function_8d18() local_unnamed_addr {
dec_label_pc_8d18:
  %stack_var_176 = alloca i32, align 4
  %v7_8d55 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_176, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v5_8d6e = call i32 @function_8daf(i32* inttoptr (i32 26482 to i32*), i32 808594996)
  ret i32 %v5_8d6e
}

define i32 @function_8da0() local_unnamed_addr {
dec_label_pc_8da0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8daa() local_unnamed_addr {
dec_label_pc_8daa:
  %v22_8daa = load i32, i32* @eax, align 8
  ret i32 %v22_8daa
}

define i32 @function_8daf(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8daf:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v15_8db3 = icmp eq i32 %tmp5, %arg2
  br i1 %v15_8db3, label %bb, label %dec_label_pc_8dbd

bb:                                               ; preds = %dec_label_pc_8daf
  %v1_8db7 = call i32 @function_8f7c()
  br label %dec_label_pc_8dbd

dec_label_pc_8dbd:                                ; preds = %bb, %dec_label_pc_8daf
  %v0_8dbd = phi i32 [ %v1_8db7, %bb ], [ %tmp5, %dec_label_pc_8daf ]
  %v1_8dbd = inttoptr i32 %v0_8dbd to i32*
  %v2_8dbd = load i32, i32* %v1_8dbd, align 4
  %v1_8dbf = add i32 %v2_8dbd, 8
  %v2_8dbf = inttoptr i32 %v1_8dbf to i32*
  %v3_8dbf = load i32, i32* %v2_8dbf, align 4
  store i32 %v3_8dbf, i32* @eax, align 8
  %v10_8dc2 = icmp eq i32 %v3_8dbf, -1
  br i1 %v10_8dc2, label %bb6, label %dec_label_pc_8dc7

bb6:                                              ; preds = %dec_label_pc_8dbd
  %v1_8dc5 = call i32 @function_8daa()
  br label %dec_label_pc_8dc7

dec_label_pc_8dc7:                                ; preds = %bb6, %dec_label_pc_8dbd
  %v3_8dc7 = phi i32 [ %v1_8dc5, %bb6 ], [ %v3_8dbf, %dec_label_pc_8dbd ]
  ret i32 %v3_8dc7

; uselistorder directives
  uselistorder i32 %v3_8dbf, { 1, 0, 2 }
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_8e54() local_unnamed_addr {
dec_label_pc_8e54:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8e54 = load i32, i32* %eax.global-to-local, align 8
  %v1_8e54 = add i32 %v0_8e54, 1946158206
  %v2_8e54 = inttoptr i32 %v1_8e54 to i8*
  %v3_8e54 = load i8, i8* %v2_8e54, align 1
  %v5_8e54 = trunc i32 %v0_8e54 to i8
  %v6_8e54 = add i8 %v3_8e54, %v5_8e54
  store i8 %v6_8e54, i8* %v2_8e54, align 1
  %v0_8e5a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8e5a = add i32 %v0_8e5a, 62611
  %v2_8e5a = inttoptr i32 %v1_8e5a to i32*
  %v3_8e5a = load i32, i32* %v2_8e5a, align 4
  %v4_8e5a = load i32, i32* %ecx.global-to-local, align 4
  %v5_8e5a = xor i32 %v4_8e5a, %v3_8e5a
  store i32 %v5_8e5a, i32* %v2_8e5a, align 4
  %v0_8e60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8e60 = add i32 %v0_8e60, ptrtoint (i8** @global_var_e483.2558 to i32)
  %v2_8e60 = inttoptr i32 %v1_8e60 to i8*
  %v3_8e60 = load i8, i8* %v2_8e60, align 1
  %v4_8e60 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8e60 = trunc i32 %v4_8e60 to i8
  %v6_8e60 = add i8 %v5_8e60, %v3_8e60
  store i8 %v6_8e60, i8* %v2_8e60, align 1
  %v2_8e66 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_8e66 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8e66 = udiv i32 %v3_8e66, 256
  %v5_8e66 = trunc i32 %v4_8e66 to i8
  %v6_8e66 = add i8 %v5_8e66, %v2_8e66
  %v21_8e66 = load i32, i32* %ecx.global-to-local, align 4
  %v22_8e66 = inttoptr i32 %v21_8e66 to i8*
  store i8 %v6_8e66, i8* %v22_8e66, align 1
  %v0_8e68 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8e68
}

define i32 @function_8e70(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e70:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8e7a(i8 %arg1) local_unnamed_addr {
dec_label_pc_8e7a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i8, align 1
  store i8 %arg1, i8* %stack_var_0, align 1
  %v0_8e7a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8e7a = add i32 %v0_8e7a, 28969035
  %v2_8e7a = inttoptr i32 %v1_8e7a to i32*
  %v3_8e7a = load i32, i32* %v2_8e7a, align 4
  %v4_8e7a = add i32 %v3_8e7a, -1
  store i32 %v4_8e7a, i32* %v2_8e7a, align 4
  %v2_8e80 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_8e80 = load i32, i32* %eax.global-to-local, align 8
  %v4_8e80 = trunc i32 %v3_8e80 to i8
  %v5_8e80 = add i8 %v4_8e80, %v2_8e80
  %v21_8e80 = inttoptr i32 %v3_8e80 to i8*
  store i8 %v5_8e80, i8* %v21_8e80, align 1
  %v0_8e82 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8e82 = load i32, i32* %edx.global-to-local, align 4
  %v4_8e82 = add i32 %v2_8e82, %v0_8e82
  %v19_8e82 = and i32 %v4_8e82, 255
  %v21_8e82 = and i32 %v0_8e82, -256
  %v22_8e82 = or i32 %v19_8e82, %v21_8e82
  store i32 %v22_8e82, i32* @ebx, align 4
  %v0_8e84 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8e84 = sub i32 %v0_8e84, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_8e84, i32* %ecx.global-to-local, align 4
  %v2_8e84 = icmp eq i32 %v1_8e84, 0
  br i1 %v2_8e84, label %dec_label_pc_8e86, label %dec_label_pc_8e8f

dec_label_pc_8e86:                                ; preds = %dec_label_pc_8e7a
  %v2_8e86 = ptrtoint i8* %stack_var_0 to i32
  store i32 %v2_8e86, i32* %eax.global-to-local, align 8
  ret i32 %v2_8e86

dec_label_pc_8e8f:                                ; preds = %dec_label_pc_8e7a
  %v0_8e8f = load i8, i8* %stack_var_0, align 1
  %v1_8e8f = sext i8 %v0_8e8f to i32
  %v2_8e8f = inttoptr i32 %v1_8e8f to i32*
  %v3_8e8f = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v2_8e8f)
  store i32 %v3_8e8f, i32* @eax, align 8
  %v0_8e94 = call i32 @function_8da0()
  store i32 %v0_8e94, i32* %eax.global-to-local, align 8
  ret i32 %v0_8e94

; uselistorder directives
  uselistorder i32 %v0_8e82, { 1, 0 }
  uselistorder i8* %stack_var_0, { 1, 0, 2 }
}

define i32 @function_8e99() local_unnamed_addr {
dec_label_pc_8e99:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_220 = alloca i32, align 4
  %stack_var_227 = alloca i32, align 4
  %v0_8e99 = load i32, i32* @eax, align 8
  %v1_8e99 = add i32 %v0_8e99, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_8e99 = inttoptr i32 %v1_8e99 to i32*
  %v3_8e99 = load i32, i32* %v2_8e99, align 4
  %v1_8e9c = add i32 %v0_8e99, 48
  %v2_8e9c = inttoptr i32 %v1_8e9c to i32*
  %v3_8e9c = load i32, i32* %v2_8e9c, align 4
  %v15_8e9c = icmp eq i32 %v3_8e9c, %v3_8e99
  %v1_8e9f = icmp eq i1 %v15_8e9c, false
  br i1 %v1_8e9f, label %bb, label %dec_label_pc_8ea1

bb:                                               ; preds = %dec_label_pc_8e99
  %v3_8e9f = call i32 @function_8e70(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_8ea1

dec_label_pc_8ea1:                                ; preds = %bb, %dec_label_pc_8e99
  %v1_8ed93 = phi i32 [ %v3_8e9f, %bb ], [ %v0_8e99, %dec_label_pc_8e99 ]
  %v0_8ea1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8ea1 = add i32 %v0_8ea1, 236
  %v2_8ea1 = inttoptr i32 %v1_8ea1 to i32*
  %v3_8ea1 = load i32, i32* %v2_8ea1, align 4
  %v0_8eb3 = load i32, i32* %edi.global-to-local, align 4
  %v1_8ebb = add i32 %v0_8ea1, 240
  %v2_8ebb = inttoptr i32 %v1_8ebb to i32*
  %v3_8ebb = load i32, i32* %v2_8ebb, align 4
  %v0_8ec1 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8ec1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8ed4

dec_label_pc_8ed0:                                ; preds = %dec_label_pc_8eed, %dec_label_pc_8ed4
  %v1_8ed0 = phi i32 [ %v1_8ee4, %dec_label_pc_8ed4 ], [ %v3_8ef1, %dec_label_pc_8eed ]
  %v1_8ee95 = phi i32 [ %v1_8ee9, %dec_label_pc_8ed4 ], [ %v1_8efb, %dec_label_pc_8eed ]
  %stack_var_96.0 = phi i32 [ %stack_var_96.1, %dec_label_pc_8ed4 ], [ %v1_8ef1, %dec_label_pc_8eed ]
  %v12_8ed0 = icmp eq i32 %v0_8ec1, %v1_8ed0
  br i1 %v12_8ed0, label %dec_label_pc_8f03, label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8ed0, %dec_label_pc_8ea1
  %v1_8ee9 = phi i32 [ %v3_8ea1, %dec_label_pc_8ea1 ], [ %v1_8ee95, %dec_label_pc_8ed0 ]
  %v1_8edc = phi i32 [ 0, %dec_label_pc_8ea1 ], [ %v2_8ee7, %dec_label_pc_8ed0 ]
  %v0_8ee4 = phi i32 [ %v1_8ed93, %dec_label_pc_8ea1 ], [ %v1_8ed0, %dec_label_pc_8ed0 ]
  %stack_var_96.1 = phi i32 [ %v3_8ebb, %dec_label_pc_8ea1 ], [ %stack_var_96.0, %dec_label_pc_8ed0 ]
  store i32 24, i32* %edi.global-to-local, align 4
  %v2_8ed9 = add i32 %v0_8ee4, 72
  %v3_8ed9 = inttoptr i32 %v2_8ed9 to i32*
  %v4_8ed9 = load i32, i32* %v3_8ed9, align 4
  %v5_8ed9 = sub i32 24, %v4_8ed9
  %v2_8edc = add i32 %v5_8ed9, %v1_8edc
  store i32 %v2_8edc, i32* %edi.global-to-local, align 4
  %v1_8ede = add i32 %v0_8ee4, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_8ede = inttoptr i32 %v1_8ede to i32*
  %v3_8ede = load i32, i32* %v2_8ede, align 4
  store i32 %v3_8ede, i32* %edx.global-to-local, align 4
  %v2_8ee1 = add i32 %v0_8ee4, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_8ee1 = inttoptr i32 %v2_8ee1 to i32*
  %v4_8ee1 = load i32, i32* %v3_8ee1, align 4
  %v5_8ee1 = sub i32 %v3_8ede, %v4_8ee1
  %v1_8ee4 = add i32 %v0_8ee4, ptrtoint (i32* @global_var_5c.2559 to i32)
  %v2_8ee7 = add i32 %v5_8ee1, %v2_8edc
  store i32 %v2_8ee7, i32* %edx.global-to-local, align 4
  %v12_8ee9 = icmp eq i32 %v1_8ee4, %v1_8ee9
  %v1_8eeb = icmp eq i1 %v12_8ee9, false
  br i1 %v1_8eeb, label %dec_label_pc_8ed0, label %dec_label_pc_8eed

dec_label_pc_8eed:                                ; preds = %dec_label_pc_8ed4
  store i32 %stack_var_96.1, i32* %edi.global-to-local, align 4
  %v1_8ef1 = add i32 %stack_var_96.1, 4
  %v2_8ef1 = inttoptr i32 %v1_8ef1 to i32*
  %v3_8ef1 = load i32, i32* %v2_8ef1, align 4
  store i32 %v1_8ef1, i32* %edi.global-to-local, align 4
  %v1_8efb = add i32 %v3_8ef1, ptrtoint (i8** @global_var_1cc.2485 to i32)
  br label %dec_label_pc_8ed0

dec_label_pc_8f03:                                ; preds = %dec_label_pc_8ed0
  %v2_8f07 = ptrtoint i32* %stack_var_227 to i32
  store i32 %v0_8ea1, i32* %ebx.global-to-local, align 4
  %v2_8f12 = ptrtoint i32* %stack_var_220 to i32
  store i32 %v2_8f12, i32* %edx.global-to-local, align 4
  store i32 %v0_8eb3, i32* %edi.global-to-local, align 4
  ret i32 %v2_8f07

; uselistorder directives
  uselistorder i32 %v3_8ef1, { 1, 0 }
  uselistorder i32 %v1_8ef1, { 1, 2, 0 }
  uselistorder i32 %v2_8ee7, { 1, 0 }
  uselistorder i32 %v1_8ee4, { 1, 0 }
  uselistorder i32 %stack_var_96.1, { 1, 0, 2 }
  uselistorder i32 %v0_8ee4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8ed0, { 1, 0 }
  uselistorder i32 %v0_8ea1, { 1, 0, 2 }
}

define i32 @function_8f4f() local_unnamed_addr {
dec_label_pc_8f4f:
  %eax.global-to-local = alloca i32, align 4
  %v4_8f4f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_8f4f
}

define i32 @function_8f68() local_unnamed_addr {
dec_label_pc_8f68:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_8f68 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8f68 = add i32 %v0_8f68, 962602068
  %v2_8f68 = inttoptr i32 %v1_8f68 to i32*
  %v3_8f68 = load i32, i32* %v2_8f68, align 4
  %v4_8f68 = add i32 %v3_8f68, -1
  store i32 %v4_8f68, i32* %v2_8f68, align 4
  %v0_8f6f = load i32, i32* %eax.global-to-local, align 8
  %v1_8f6f = trunc i32 %v0_8f6f to i8
  %v2_8f6f = and i8 %v1_8f6f, ptrtoint (i32* @global_var_5c.2559 to i8)
  %v3_8f6f = icmp eq i8 %v2_8f6f, 0
  %v8_8f6f = zext i8 %v2_8f6f to i32
  %v10_8f6f = and i32 %v0_8f6f, -256
  %v11_8f6f = or i32 %v8_8f6f, %v10_8f6f
  store i32 %v11_8f6f, i32* @eax, align 8
  br i1 %v3_8f6f, label %bb, label %dec_label_pc_8f77

bb:                                               ; preds = %dec_label_pc_8f68
  %v4_8f6e = ptrtoint i32* %stack_var_0 to i32
  %v4_8f71 = call i32 @function_8e70(i32 %v4_8f6e)
  store i32 %v4_8f71, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_8f77

dec_label_pc_8f77:                                ; preds = %bb, %dec_label_pc_8f68
  %v0_8f77 = phi i32 [ %v4_8f71, %bb ], [ %v11_8f6f, %dec_label_pc_8f68 ]
  ret i32 %v0_8f77

; uselistorder directives
  uselistorder i32 (i32)* @function_8e70, { 1, 0 }
}

define i32 @function_8f7c() local_unnamed_addr {
dec_label_pc_8f7c:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_8f83 = inttoptr i32 %tmp10 to i32*
  %v2_8f83 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_8f83)
  %v0_8f88 = load i32, i32* @edi, align 4
  %v0_8f8c = load i32, i32* @ebp, align 4
  %v1_8f8c = add i32 %v0_8f8c, ptrtoint (i1* @global_var_1.2399 to i32)
  %v4_8f8f = trunc i32 %v0_8f88 to i8
  %v5_8f8f = icmp eq i8 %v4_8f8f, 0
  %v1_8f91 = icmp eq i1 %v5_8f8f, false
  %v4_8f91 = select i1 %v1_8f91, i32 %v1_8f8c, i32 0
  ret i32 %v4_8f91
}

define i32 @function_8fc9() local_unnamed_addr {
dec_label_pc_8fc9:
  %eax.global-to-local = alloca i32, align 4
  %v0_8fc9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8fc9
}

define i32 @function_8fce() local_unnamed_addr {
dec_label_pc_8fce:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_8fce = load i32, i32* %ebx.global-to-local, align 4
  %v1_8fce = add i32 %v0_8fce, -2079391293
  %v2_8fce = inttoptr i32 %v1_8fce to i32*
  %v3_8fce = load i32, i32* %v2_8fce, align 4
  %v4_8fce = add i32 %v3_8fce, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_8fce, i32* %v2_8fce, align 4
  %v2_8fd6 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_8fd6 = load i32, i32* %eax.global-to-local, align 8
  %v4_8fd6 = trunc i32 %v3_8fd6 to i8
  %v5_8fd6 = add i8 %v4_8fd6, %v2_8fd6
  %v21_8fd6 = inttoptr i32 %v3_8fd6 to i8*
  store i8 %v5_8fd6, i8* %v21_8fd6, align 1
  store i32 ptrtoint ([2 x i8]* @7 to i32), i32* %eax.global-to-local, align 8
  br label %dec_label_pc_8ff2

dec_label_pc_8fed:                                ; preds = %dec_label_pc_9000
  %v4_8fed = add i32 %storemerge, 4
  br label %dec_label_pc_8ff2

dec_label_pc_8ff2:                                ; preds = %dec_label_pc_8fed, %dec_label_pc_8fce
  %storemerge = phi i32 [ %v4_8fed, %dec_label_pc_8fed ], [ 1701707888, %dec_label_pc_8fce ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v16_8ff6 = icmp eq i32 %storemerge, ptrtoint ([2 x i8]* @7 to i32)
  br i1 %v16_8ff6, label %bb, label %dec_label_pc_9000

bb:                                               ; preds = %dec_label_pc_8ff2
  %v1_8ffa = call i32 @function_9241()
  store i32 %v1_8ffa, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_9000

dec_label_pc_9000:                                ; preds = %bb, %dec_label_pc_8ff2
  %v3_9007 = phi i32 [ %v1_8ffa, %bb ], [ %storemerge, %dec_label_pc_8ff2 ]
  %v1_9000 = inttoptr i32 %v3_9007 to i32*
  %v2_9000 = load i32, i32* %v1_9000, align 4
  store i32 %v2_9000, i32* %ebx.global-to-local, align 4
  %v10_9002 = icmp eq i32 %v2_9000, -1
  br i1 %v10_9002, label %dec_label_pc_8fed, label %dec_label_pc_9007

dec_label_pc_9007:                                ; preds = %dec_label_pc_9000
  ret i32 %v3_9007

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0, 3, 2 }
}

define i32 @function_9073(i32 %arg1) local_unnamed_addr {
dec_label_pc_9073:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_168 = alloca i32, align 4
  %v0_9073 = load i32, i32* %eax.global-to-local, align 8
  %v2_9073 = mul i32 %v0_9073, 8
  %v3_9073 = add i32 %v0_9073, 58819599
  %v4_9073 = add i32 %v3_9073, %v2_9073
  %v5_9073 = inttoptr i32 %v4_9073 to i32*
  %v6_9073 = load i32, i32* %v5_9073, align 4
  %v7_9073 = add i32 %v6_9073, 1
  store i32 %v7_9073, i32* %v5_9073, align 4
  %v2_907a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_907a = load i32, i32* %eax.global-to-local, align 8
  %v4_907a = trunc i32 %v3_907a to i8
  %v5_907a = add i8 %v4_907a, %v2_907a
  %v21_907a = inttoptr i32 %v3_907a to i8*
  store i8 %v5_907a, i8* %v21_907a, align 1
  %v2_907c = ptrtoint i32* %stack_var_168 to i32
  %v7_90b0 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_168, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 26482, i32* %eax.global-to-local, align 8
  %v0_90d1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %dec_label_pc_90c8, %dec_label_pc_9073
  %v0_90d1 = phi i32 [ %v4_90d1, %dec_label_pc_90c8 ], [ %v0_90d1.pre, %dec_label_pc_9073 ]
  %v0_90d4 = phi i32 [ %v1_90d4, %dec_label_pc_90c8 ], [ 26482, %dec_label_pc_9073 ]
  %v1_90c8 = inttoptr i32 %v0_90d4 to i32*
  %v2_90c8 = load i32, i32* %v1_90c8, align 4
  %v1_90ca = add i32 %v2_90c8, ptrtoint (i8** @global_var_1ce.2508 to i32)
  %v2_90ca = inttoptr i32 %v1_90ca to i8*
  %v3_90ca = load i8, i8* %v2_90ca, align 1
  %v8_90ca = icmp eq i8 %v3_90ca, 0
  %v2_90d1 = zext i1 %v8_90ca to i32
  %v3_90d1 = add i32 %v0_90d1, 1
  %v4_90d1 = add i32 %v3_90d1, %v2_90d1
  store i32 %v4_90d1, i32* @ebx, align 4
  %v1_90d4 = add i32 %v0_90d4, 4
  store i32 %v1_90d4, i32* %eax.global-to-local, align 8
  %v12_90d7 = icmp eq i32 %v0_90d4, 808594992
  %v1_90d9 = icmp eq i1 %v12_90d7, false
  br i1 %v1_90d9, label %dec_label_pc_90c8, label %dec_label_pc_90db

dec_label_pc_90db:                                ; preds = %dec_label_pc_90c8
  %v2_90e5 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  store i32 %v2_90e5, i32* @eax, align 8
  %v13_90ea = icmp eq i32 %arg1, -1
  br i1 %v13_90ea, label %bb, label %dec_label_pc_90f5

bb:                                               ; preds = %dec_label_pc_90db
  %v1_90ef = call i32 @function_921c()
  store i32 %v1_90ef, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_90f5

dec_label_pc_90f5:                                ; preds = %bb, %dec_label_pc_90db
  %v0_90f5 = load i32, i32* @global_var_9e30.2518, align 4
  %v1_90fa = add i32 %v0_90f5, -8
  store i32 %v1_90fa, i32* %eax.global-to-local, align 8
  %v1_90fd = load i32, i32* @ebx, align 4
  %v8_90ff = icmp sgt i32 %v1_90fa, %v1_90fd
  br i1 %v8_90ff, label %bb115, label %dec_label_pc_9105

bb115:                                            ; preds = %dec_label_pc_90f5
  %v9_90ff = call i32 @function_91ae()
  store i32 %v9_90ff, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_9105

dec_label_pc_9105:                                ; preds = %bb115, %dec_label_pc_90f5
  store i32 %v2_907c, i32* %eax.global-to-local, align 8
  %v7_9137 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_168, i32 ptrtoint ([14 x i8]* @global_var_9f60.2563 to i32), i32 ptrtoint ([27 x i8]* @global_var_a375.2562 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v7_9137, i32* %eax.global-to-local, align 8
  store i32 1601399102, i32* @ebx, align 4
  %v0_914b = call i32 @function_9159()
  store i32 %v0_914b, i32* %eax.global-to-local, align 8
  ret i32 %v0_914b

; uselistorder directives
  uselistorder i32 %v1_90d4, { 1, 0 }
  uselistorder i32 %v4_90d1, { 1, 0 }
  uselistorder i32 %v0_9073, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 5, 1, 6, 7, 8, 9 }
}

define i32 @function_9150() local_unnamed_addr {
dec_label_pc_9150:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_9150 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9152 = add i32 %v0_9150, 8
  %v2_9152 = inttoptr i32 %v1_9152 to i32*
  %v3_9152 = load i32, i32* %v2_9152, align 4
  store i32 %v3_9152, i32* %ebx.global-to-local, align 4
  %v0_9157 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9157
}

define i32 @function_9159() local_unnamed_addr {
dec_label_pc_9159:
  %v0_9159 = load i32, i32* @ebx, align 4
  %v1_9159 = add i32 %v0_9159, 16
  ret i32 %v1_9159
}

define i32 @function_9173() local_unnamed_addr {
dec_label_pc_9173:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_918e() local_unnamed_addr {
dec_label_pc_918e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_9199() local_unnamed_addr {
dec_label_pc_9199:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_9199 = add i32 %tmp91, 11019412
  %v2_9199 = inttoptr i32 %v1_9199 to i32*
  %v3_9199 = load i32, i32* %v2_9199, align 4
  %v4_9199 = add i32 %v3_9199, -1
  store i32 %v4_9199, i32* %v2_9199, align 4
  %v2_919f = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_919f = load i32, i32* %eax.global-to-local, align 8
  %v4_919f = trunc i32 %v3_919f to i8
  %v5_919f = add i8 %v4_919f, %v2_919f
  %v21_919f = inttoptr i32 %v3_919f to i8*
  store i8 %v5_919f, i8* %v21_919f, align 1
  %v0_91a1 = load i32, i32* %edx.global-to-local, align 4
  %v1_91a4 = inttoptr i32 %v0_91a1 to i32*
  %v2_91a4 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_91a4)
  store i32 %v2_91a4, i32* %eax.global-to-local, align 8
  ret i32 %v2_91a4
}

define i32 @function_91ae() local_unnamed_addr {
dec_label_pc_91ae:
  %stack_var_0 = alloca i32, align 4
  %stack_var_780 = alloca i32, align 4
  %tmp15 = bitcast i32* %stack_var_780 to i8*
  %v0_91ba = load i32, i32* @ebp, align 4
  %v1_91ba = inttoptr i32 %v0_91ba to i8*
  call void @__asm_rep_movsd_memcpy(i8* %tmp15, i8* %v1_91ba, i32 4)
  %tmp16 = bitcast i32* %stack_var_0 to i8*
  call void @__asm_rep_movsd_memcpy(i8* %tmp16, i8* %tmp15, i32 4)
  call void @_ZN5CNode8IsBannedE8CNetAddr(%CNetAddr { [16 x i8] [i8 ptrtoint (i32* @1 to i8), i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef] })
  store i32 ptrtoint (i32* @1 to i32), i32* @eax, align 8
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %bb, label %dec_label_pc_91d8

bb:                                               ; preds = %dec_label_pc_91ae
  %v1_91d2 = call i32 @function_92d4()
  br label %dec_label_pc_91d8

dec_label_pc_91d8:                                ; preds = %bb, %dec_label_pc_91ae
  %v4_91e3 = phi i32 [ %v1_91d2, %bb ], [ ptrtoint (i32* @1 to i32), %dec_label_pc_91ae ]
  ret i32 %v4_91e3

; uselistorder directives
  uselistorder i8* %tmp15, { 1, 0 }
}

define i32 @function_9217() local_unnamed_addr {
dec_label_pc_9217:
  %eax.global-to-local = alloca i32, align 4
  %v0_9217 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9217
}

define i32 @function_921c() local_unnamed_addr {
dec_label_pc_921c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_923c() local_unnamed_addr {
dec_label_pc_923c:
  %eax.global-to-local = alloca i32, align 4
  %v0_923c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_923c
}

define i32 @function_9241() local_unnamed_addr {
dec_label_pc_9241:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_132 = alloca i32, align 4
  %stack_var_168 = alloca i32, align 4
  store i32 0, i32* %stack_var_132, align 4
  %v7_9294 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_168, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v7_9294, i32* %eax.global-to-local, align 8
  %v3_92ab = call i32 @_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_(i32* nonnull %stack_var_132, i32 ptrtoint ([3 x i8]* @global_var_a174.2411 to i32))
  store i32 0, i32* @ecx, align 4
  %v3_92b7 = load i32, i32* %stack_var_132, align 4
  store i32 %v3_92b7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_92be

dec_label_pc_92be:                                ; preds = %dec_label_pc_92c6, %dec_label_pc_9241
  %v1_92be = phi i32 [ %v1_92be.pre, %dec_label_pc_92c6 ], [ %v3_92b7, %dec_label_pc_9241 ]
  %v0_92be = phi i32 [ %v0_92be.pre, %dec_label_pc_92c6 ], [ 0, %dec_label_pc_9241 ]
  %v12_92be = icmp eq i32 %v0_92be, %v1_92be
  br i1 %v12_92be, label %bb, label %dec_label_pc_92c6

bb:                                               ; preds = %dec_label_pc_92be
  %v1_92c0 = call i32 @function_940e()
  store i32 %v1_92c0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_92c6

dec_label_pc_92c6:                                ; preds = %bb, %dec_label_pc_92be
  %v0_92c6 = phi i32 [ %v1_92c0, %bb ], [ %v1_92be, %dec_label_pc_92be ]
  %v1_92c6 = inttoptr i32 %v0_92c6 to i32*
  %v2_92c6 = load i32, i32* %v1_92c6, align 4
  %v1_92c8 = add i32 %v0_92c6, 4
  store i32 %v1_92c8, i32* %eax.global-to-local, align 8
  %v1_92cb = add i32 %v2_92c6, 564
  %v2_92cb = inttoptr i32 %v1_92cb to i32*
  %v3_92cb = load i32, i32* %v2_92cb, align 4
  %v4_92cb = add i32 %v3_92cb, 1
  store i32 %v4_92cb, i32* %v2_92cb, align 4
  %v0_92be.pre = load i32, i32* @ecx, align 4
  %v1_92be.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_92be

; uselistorder directives
  uselistorder i32 %v0_92c6, { 1, 0 }
  uselistorder i32 %v1_92be, { 1, 0 }
  uselistorder i32* %stack_var_132, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
}

define i32 @function_92d4() local_unnamed_addr {
dec_label_pc_92d4:
  %v4_92df = load i32, i32* @eax, align 8
  ret i32 %v4_92df
}

define i32 @function_9378(i32 %arg1) local_unnamed_addr {
dec_label_pc_93e1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_168 = alloca i32, align 4
  %v0_9378 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9378 = add i32 %v0_9378, 13116548
  %v2_9378 = inttoptr i32 %v1_9378 to i32*
  %v3_9378 = load i32, i32* %v2_9378, align 4
  %v4_9378 = add i32 %v3_9378, -1
  store i32 %v4_9378, i32* %v2_9378, align 4
  %v2_937e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_937e = load i32, i32* %eax.global-to-local, align 8
  %v4_937e = trunc i32 %v3_937e to i8
  %v5_937e = add i8 %v4_937e, %v2_937e
  %v21_937e = inttoptr i32 %v3_937e to i8*
  store i8 %v5_937e, i8* %v21_937e, align 1
  %v0_9387 = load i32, i32* %eax.global-to-local, align 8
  %v1_9387 = add i32 %v0_9387, 564
  %v2_9387 = inttoptr i32 %v1_9387 to i32*
  %v3_9387 = load i32, i32* %v2_9387, align 4
  %v4_9387 = add i32 %v3_9387, 1
  store i32 %v4_9387, i32* %v2_9387, align 4
  %v7_93b9 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_168, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %arg1, i32* inttoptr (i32 808594996 to i32*), align 4
  store i32 808595000, i32* %eax.global-to-local, align 8
  store i32 808595000, i32* bitcast ([13 x i8]* @global_var_a178.2412 to i32*), align 4
  %v2_93f3 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  store i32 %v2_93f3, i32* %eax.global-to-local, align 8
  ret i32 %v2_93f3

; uselistorder directives
  uselistorder i32 808595000, { 1, 0 }
  uselistorder i32 808594996, { 1, 3, 2, 0, 4, 5, 6, 7, 8 }
}

define i32 @function_9409() local_unnamed_addr {
dec_label_pc_9409:
  %eax.global-to-local = alloca i32, align 4
  %v0_9409 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9409
}

define i32 @function_940e() local_unnamed_addr {
dec_label_pc_940e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_168 = alloca i32, align 4
  %v2_940e = ptrtoint i32* %stack_var_168 to i32
  store i32 %v2_940e, i32* @ecx, align 4
  %v2_941f = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  store i32 %v2_941f, i32* @eax, align 8
  %v2_943a = inttoptr i32 %tmp1 to i32*
  %v3_943a = call i32 @function_95a8(i32* %v2_943a, i32 %tmp3)
  ret i32 %v3_943a
}

define i32 @function_9440() local_unnamed_addr {
dec_label_pc_9440:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_94eb() local_unnamed_addr {
dec_label_pc_94eb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_94fd() local_unnamed_addr {
dec_label_pc_94fd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_952e() local_unnamed_addr {
dec_label_pc_952e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9532() local_unnamed_addr {
dec_label_pc_9532:
  %eax.global-to-local = alloca i32, align 4
  %v4_9532 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_9532
}

define i32 @function_954a() local_unnamed_addr {
dec_label_pc_954a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9576() local_unnamed_addr {
dec_label_pc_9576:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_957e() local_unnamed_addr {
dec_label_pc_957e:
  %eax.global-to-local = alloca i32, align 4
  %v0_957e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_957e
}

define i32 @function_959c() local_unnamed_addr {
dec_label_pc_959c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_95a3() local_unnamed_addr {
dec_label_pc_95a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_95a8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_95a8:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* @edi, align 4
  %v15_95ac = icmp eq i32 %tmp4, %arg2
  br i1 %v15_95ac, label %bb, label %dec_label_pc_95a8.dec_label_pc_95b6_crit_edge

dec_label_pc_95a8.dec_label_pc_95b6_crit_edge:    ; preds = %dec_label_pc_95a8
  %v3_95b6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_95b6

bb:                                               ; preds = %dec_label_pc_95a8
  %v1_95b0 = call i32 @function_9796()
  %v0_95b6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_95b6

dec_label_pc_95b6:                                ; preds = %dec_label_pc_95a8.dec_label_pc_95b6_crit_edge, %bb
  %v3_95b6 = phi i32 [ %v1_95b0, %bb ], [ %v3_95b6.pre, %dec_label_pc_95a8.dec_label_pc_95b6_crit_edge ]
  %v0_95b6 = phi i32 [ %v0_95b6.pre, %bb ], [ %tmp4, %dec_label_pc_95a8.dec_label_pc_95b6_crit_edge ]
  %v1_95b6 = inttoptr i32 %v0_95b6 to i32*
  %v2_95b6 = load i32, i32* %v1_95b6, align 4
  store i32 %v2_95b6, i32* @ebx, align 4
  ret i32 %v3_95b6

; uselistorder directives
  uselistorder i32 %tmp4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_95b6, { 1, 0 }
}

define i32 @function_95e8() local_unnamed_addr {
dec_label_pc_95e8:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_95e8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_95e8 = add i32 %v0_95e8, -2071263157
  %v2_95e8 = inttoptr i32 %v1_95e8 to i32*
  %v3_95e8 = load i32, i32* %v2_95e8, align 4
  %v4_95e8 = sub i32 %v3_95e8, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_95e8, i32* %v2_95e8, align 4
  %v0_95ee = load i32, i32* @eax, align 8
  %v4_95f0 = mul i32 %v0_95ee, 2
  %v21_95f0 = inttoptr i32 %v0_95ee to i32*
  store i32 %v4_95f0, i32* %v21_95f0, align 4
  %v0_95f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_95f2 = load i32, i32* %edx.global-to-local, align 4
  %v4_95f2 = add i32 %v2_95f2, %v0_95f2
  %v19_95f2 = urem i32 %v4_95f2, 256
  %v21_95f2 = and i32 %v0_95f2, -256
  %v22_95f2 = or i32 %v19_95f2, %v21_95f2
  store i32 %v22_95f2, i32* %ebx.global-to-local, align 4
  %v0_95f5 = load i32, i32* @eax, align 8
  %v2_95f5 = urem i32 %v0_95f5, 2
  %v3_95f5 = icmp eq i32 %v2_95f5, 0
  br i1 %v3_95f5, label %bb, label %dec_label_pc_95fd

bb:                                               ; preds = %dec_label_pc_95e8
  %v1_95f7 = call i32 @function_94fd()
  store i32 %v1_95f7, i32* @eax, align 8
  br label %dec_label_pc_95fd

dec_label_pc_95fd:                                ; preds = %bb, %dec_label_pc_95e8
  %v0_95fd = call i32 @function_9440()
  ret i32 %v0_95fd

; uselistorder directives
  uselistorder i32 %v0_95f2, { 1, 0 }
  uselistorder i32 %v0_95ee, { 1, 0 }
}

define i32 @function_9667() local_unnamed_addr {
dec_label_pc_9667:
  %eax.global-to-local = alloca i32, align 4
  %v0_9667 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9667
}

define i32 @function_9670() local_unnamed_addr {
dec_label_pc_9670:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_9670 = load i32, i32* @eax, align 8
  %v1_9670 = load i32, i32* %ebx.global-to-local, align 4
  %v2_9670 = add i32 %v1_9670, 372
  %v3_9670 = inttoptr i32 %v2_9670 to i32*
  store i32 %v0_9670, i32* %v3_9670, align 4
  %v0_9676 = load i32, i32* %edx.global-to-local, align 4
  %v1_9676 = load i32, i32* %ebx.global-to-local, align 4
  %v2_9676 = add i32 %v1_9676, 376
  %v3_9676 = inttoptr i32 %v2_9676 to i32*
  store i32 %v0_9676, i32* %v3_9676, align 4
  %v0_967c = call i32 @function_952e()
  ret i32 %v0_967c
}

define i32 @function_9681() local_unnamed_addr {
dec_label_pc_9681:
  %v0_9681 = load i32, i32* @eax, align 8
  %tmp97 = icmp ult i32 %v0_9681, 61
  br i1 %tmp97, label %bb, label %dec_label_pc_968a

bb:                                               ; preds = %dec_label_pc_9681
  %v3_9684 = call i32 @function_95a3()
  store i32 %v3_9684, i32* @eax, align 8
  br label %dec_label_pc_968a

dec_label_pc_968a:                                ; preds = %bb, %dec_label_pc_9681
  %v0_968a = call i32 @function_954a()
  ret i32 %v0_968a
}

define i32 @function_968f() local_unnamed_addr {
dec_label_pc_968f:
  %v0_969b = call i32 @function_9576()
  ret i32 %v0_969b
}

define i32 @function_96a4() local_unnamed_addr {
dec_label_pc_96a4:
  %eax.global-to-local = alloca i32, align 4
  %v4_96a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_96a4
}

define i32 @function_96c4() local_unnamed_addr {
dec_label_pc_96c4:
  %eax.global-to-local = alloca i32, align 4
  %v4_96c4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_96c4
}

define i32 @function_96dc() local_unnamed_addr {
dec_label_pc_96dc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_96e8() local_unnamed_addr {
dec_label_pc_96e8:
  %v0_96e8 = call i32 @function_959c()
  ret i32 %v0_96e8
}

define i32 @function_9717(i16 %arg1) local_unnamed_addr {
dec_label_pc_9717:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_9717 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9717 = add i32 %v0_9717, -2079390472
  %v2_9717 = inttoptr i32 %v1_9717 to i32*
  %v3_9717 = load i32, i32* %v2_9717, align 4
  %v4_9717 = add i32 %v3_9717, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_9717, i32* %v2_9717, align 4
  %v6_971d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_971d
}

define i32 @function_9729(i16 %arg1) local_unnamed_addr {
dec_label_pc_9729:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_9729 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9729 = add i32 %v0_9729, -956029884
  %v2_9729 = inttoptr i32 %v1_9729 to i8*
  %v3_9729 = load i8, i8* %v2_9729, align 1
  %v5_9729 = trunc i32 %v0_9729 to i8
  %v6_9729 = load i1, i1* %cf.global-to-local, align 1
  %v7_9729 = zext i1 %v6_9729 to i8
  %v8_9729 = add i8 %v3_9729, %v5_9729
  %v9_9729 = add i8 %v8_9729, %v7_9729
  store i8 %v9_9729, i8* %v2_9729, align 1
  %v0_972f = load i32, i32* %eax.global-to-local, align 8
  %v1_972f = trunc i32 %v0_972f to i8
  %v2_972f = add i32 %v0_972f, 36
  %v6_972f = icmp ugt i8 %v1_972f, -37
  store i1 %v6_972f, i1* %cf.global-to-local, align 1
  %v16_972f = and i32 %v2_972f, 255
  %v18_972f = and i32 %v0_972f, -256
  %v19_972f = or i32 %v16_972f, %v18_972f
  store i32 %v19_972f, i32* %eax.global-to-local, align 8
  ret i32 %v19_972f

; uselistorder directives
  uselistorder i32 %v0_972f, { 1, 0, 2 }
}

define i32 @function_973a() local_unnamed_addr {
dec_label_pc_973a:
  %v0_973a = load i32, i32* @ebx, align 4
  call void @_ZN5CNode21CloseSocketDisconnectEv(i32 %v0_973a)
  store i32 ptrtoint (i32* @1 to i32), i32* @eax, align 8
  %v0_9742 = call i32 @function_94eb()
  ret i32 %v0_9742
}

define i32 @function_9752() local_unnamed_addr {
dec_label_pc_9752:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9756() local_unnamed_addr {
dec_label_pc_9756:
  %eax.global-to-local = alloca i32, align 4
  %v4_9756 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_9756
}

define i32 @function_976e() local_unnamed_addr {
dec_label_pc_976e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_977a() local_unnamed_addr {
dec_label_pc_977a:
  %v0_977a = call i32 @function_959c()
  ret i32 %v0_977a

; uselistorder directives
  uselistorder i32 ()* @function_959c, { 1, 0 }
}

define i32 @function_9794() local_unnamed_addr {
dec_label_pc_9794:
  %v0_9794 = call i32 @function_973a()
  ret i32 %v0_9794
}

define i32 @function_9796() local_unnamed_addr {
dec_label_pc_9796:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_168 = alloca i32, align 4
  %v2_9796 = ptrtoint i32* %stack_var_168 to i32
  store i32 %v2_9796, i32* %eax.global-to-local, align 8
  %v7_97c8 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_168, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v12_97db16 = icmp eq i32 %tmp5, %tmp
  br i1 %v12_97db16, label %dec_label_pc_980d, label %dec_label_pc_97df

dec_label_pc_97df:                                ; preds = %dec_label_pc_9796, %dec_label_pc_97df
  %v0_97df17 = phi i32 [ %v1_97db.pre, %dec_label_pc_97df ], [ %tmp, %dec_label_pc_9796 ]
  %v1_97df = inttoptr i32 %v0_97df17 to i32*
  %v2_97df = load i32, i32* %v1_97df, align 4
  %v1_97e1 = add i32 %v0_97df17, 4
  store i32 %v1_97e1, i32* %eax.global-to-local, align 8
  %v1_97e4 = add i32 %v2_97df, 564
  %v2_97e4 = inttoptr i32 %v1_97e4 to i32*
  %v3_97e4 = load i32, i32* %v2_97e4, align 4
  %v4_97e4 = add i32 %v3_97e4, -1
  store i32 %v4_97e4, i32* %v2_97e4, align 4
  %v0_97db.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_97db.pre = load i32, i32* %eax.global-to-local, align 8
  %v12_97db = icmp eq i32 %v0_97db.pre, %v1_97db.pre
  br i1 %v12_97db, label %dec_label_pc_980d, label %dec_label_pc_97df

dec_label_pc_980d:                                ; preds = %dec_label_pc_97df, %dec_label_pc_9796
  %v2_9817 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  store i32 %v2_9817, i32* %eax.global-to-local, align 8
  %v3_982b = call i32 @_Z10MilliSleepx(i64 sext (i32 ptrtoint (i32* @global_var_a.2461 to i32) to i64), i32 0)
  %v0_9837 = call i32 @instance_of_cnetcleanup()
  store i32 %v0_9837, i32* %eax.global-to-local, align 8
  ret i32 %v0_9837

; uselistorder directives
  uselistorder i32 %v1_97db.pre, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_a.2461 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_97df, { 1, 0 }
}

define i32 @function_9841() local_unnamed_addr {
dec_label_pc_9841:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9843() local_unnamed_addr {
dec_label_pc_9843:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9854() local_unnamed_addr {
dec_label_pc_9854:
  %eax.global-to-local = alloca i32, align 4
  %v0_9854 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9854
}

define i32 @function_9864() local_unnamed_addr {
dec_label_pc_9864:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9877() local_unnamed_addr {
dec_label_pc_9877:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_9877 = load i32, i32* %ebp.global-to-local, align 4
  %v1_9877 = add i32 %v0_9877, 11019452
  %v2_9877 = inttoptr i32 %v1_9877 to i32*
  %v3_9877 = load i32, i32* %v2_9877, align 4
  %v4_9877 = add i32 %v3_9877, -1
  store i32 %v4_9877, i32* %v2_9877, align 4
  %v2_987d = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_987d = load i32, i32* %eax.global-to-local, align 8
  %v4_987d = trunc i32 %v3_987d to i8
  %v5_987d = add i8 %v4_987d, %v2_987d
  %v21_987d = inttoptr i32 %v3_987d to i8*
  store i8 %v5_987d, i8* %v21_987d, align 1
  %v0_987f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_987f, i32* @ebx, align 4
  %v0_9881 = load i32, i32* %edi.global-to-local, align 4
  %v1_9884 = inttoptr i32 %v0_9881 to i32*
  %v2_9884 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_9884)
  store i32 %v2_9884, i32* @eax, align 8
  %v0_9889 = call i32 @function_9864()
  store i32 %v0_9889, i32* %eax.global-to-local, align 8
  ret i32 %v0_9889
}

define i32 @function_988b() local_unnamed_addr {
dec_label_pc_988b:
  %stack_var_200 = alloca i32, align 4
  %v2_988b = ptrtoint i32* %stack_var_200 to i32
  %v0_9896 = load i32, i32* @eax, align 8
  %v4_98a1 = inttoptr i32 %v0_9896 to i32*
  %v5_98a1 = call i32 @_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32 ptrtoint ([3 x i8]* @global_var_a174.2411 to i32), i32* %v4_98a1, i32 %v2_988b)
  ret i32 %v5_98a1
}

define i32 @function_98ac() local_unnamed_addr {
dec_label_pc_98ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_98ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_98ac
}

define i32 @function_98c5() local_unnamed_addr {
dec_label_pc_98c5:
  %eax.global-to-local = alloca i32, align 4
  %v0_98c5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_98c5
}

define i32 @function_98dd() local_unnamed_addr {
dec_label_pc_98dd:
  %v0_98dd = call i32 @function_9841()
  ret i32 %v0_98dd
}

define i32 @function_98e2(i64 %arg1) local_unnamed_addr {
dec_label_pc_98e2:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_484 = alloca i32, align 4
  %stack_var_356 = alloca i32, align 4
  %v0_98e2 = load i32, i32* %edi.global-to-local, align 4
  %v4_98e4 = trunc i32 %v0_98e2 to i8
  %v5_98e4 = icmp eq i8 %v4_98e4, 0
  %v1_98e6 = icmp eq i1 %v5_98e4, false
  br i1 %v1_98e6, label %bb, label %dec_label_pc_98ec

bb:                                               ; preds = %dec_label_pc_98e2
  %v2_98e6 = call i32 @function_99aa()
  br label %dec_label_pc_98ec

dec_label_pc_98ec:                                ; preds = %bb, %dec_label_pc_98e2
  %v2_98f5 = ptrtoint i32* %stack_var_356 to i32
  %tmp111 = bitcast i32* %stack_var_356 to i8*
  store i32 %v2_98f5, i32* %edi.global-to-local, align 4
  call void @__asm_rep_stosd_memset(i8* %tmp111, i32 0, i32 32)
  %v2_9901 = ptrtoint i32* %stack_var_484 to i32
  %tmp112 = bitcast i32* %stack_var_484 to i8*
  store i32 %v2_9901, i32* %edi.global-to-local, align 4
  call void @__asm_rep_stosd_memset(i8* %tmp112, i32 0, i32 32)
  %v4_990b = trunc i64 %arg1 to i32
  %v2_9919 = ashr i32 %v4_990b, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_991c = and i64 %arg1, 4294967295
  %v4_991c = zext i32 %v2_9919 to i64
  %v5_991c = mul nuw i64 %v4_991c, 4294967296
  %v6_991c = or i64 %v5_991c, %v2_991c
  %v8_991c = sdiv i64 %v6_991c, 1000
  %v9_991c = trunc i64 %v8_991c to i32
  %v2_9920 = ashr i32 %v9_991c, 31
  store i32 %v2_9920, i32* %edi.global-to-local, align 4
  %v3_992a = call i32 @_Z10MilliSleepx(i64 %v8_991c, i32 %v2_9920)
  ret i32 %v3_992a
}

define i32 @function_9942() local_unnamed_addr {
dec_label_pc_9942:
  %v0_9942 = call i32 @function_9843()
  ret i32 %v0_9942
}

define i32 @function_9948() local_unnamed_addr {
dec_label_pc_9948:
  %eax.global-to-local = alloca i32, align 4
  %v0_9948 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9948
}

define i32 @function_9949() local_unnamed_addr {
dec_label_pc_9949:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9951() local_unnamed_addr {
dec_label_pc_9951:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9964() local_unnamed_addr {
dec_label_pc_9964:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_9964 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9964 = add i32 %v0_9964, -1981223997
  %v2_9964 = inttoptr i32 %v1_9964 to i32*
  %v3_9964 = load i32, i32* %v2_9964, align 4
  %v4_9964 = sub i32 %v3_9964, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_9964, i32* %v2_9964, align 4
  %v0_996a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_996a
}

define i32 @function_996b() local_unnamed_addr {
dec_label_pc_996b:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_996e = inttoptr i32 %tmp92 to i32*
  %v2_996e = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_996e)
  store i32 %v2_996e, i32* @eax, align 8
  %v0_9973 = call i32 @function_9951()
  ret i32 %v0_9973
}

define i32 @function_997d() local_unnamed_addr {
dec_label_pc_997d:
  %eax.global-to-local = alloca i32, align 4
  %v0_997d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_997d
}

define i32 @function_9986() local_unnamed_addr {
dec_label_pc_9986:
  %v0_9986 = call i32 @function_9949()
  ret i32 %v0_9986
}

define i32 @function_9988() local_unnamed_addr {
dec_label_pc_9988:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_168 = alloca i32, align 4
  %v0_998f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_998f, i32* @ebx, align 4
  %v2_9994 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull %stack_var_168)
  store i32 %v2_9994, i32* @eax, align 8
  %v0_9999 = call i32 @function_9864()
  store i32 %v0_9999, i32* %eax.global-to-local, align 8
  ret i32 %v0_9999
}

define i32 @function_999e() local_unnamed_addr {
dec_label_pc_999e:
  %v0_99a0 = call i32 @function_9864()
  ret i32 %v0_99a0

; uselistorder directives
  uselistorder i32 ()* @function_9864, { 2, 1, 0 }
}

define i32 @function_99a5() local_unnamed_addr {
dec_label_pc_99a5:
  %v0_99a5 = call i32 @function_9841()
  ret i32 %v0_99a5

; uselistorder directives
  uselistorder i32 ()* @function_9841, { 1, 0 }
}

define i32 @function_99aa() local_unnamed_addr {
dec_label_pc_99aa:
  %v1_99aa = load i32, i32* @eax, align 8
  ret i32 %v1_99aa
}

define i32 @function_99d5() local_unnamed_addr {
dec_label_pc_99d5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_99d5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_99d5 = add i32 %v0_99d5, -2081256999
  %v2_99d5 = inttoptr i32 %v1_99d5 to i32*
  %v3_99d5 = load i32, i32* %v2_99d5, align 4
  %v4_99d5 = sub i32 %v3_99d5, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_99d5, i32* %v2_99d5, align 4
  %v0_99db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_99db
}

define i32 @function_99dc(i8 %arg1) local_unnamed_addr {
dec_label_pc_99dc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i8, align 1
  store i8 %arg1, i8* %stack_var_0, align 1
  %v0_99dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_99dc = load i32, i32* %edx.global-to-local, align 4
  %v2_99dc = add i32 %v1_99dc, %v0_99dc
  store i32 %v2_99dc, i32* %ebx.global-to-local, align 4
  %v0_99de = load i32, i32* %ecx.global-to-local, align 4
  %v1_99de = sub i32 %v0_99de, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_99de, i32* %ecx.global-to-local, align 4
  %v2_99de = icmp eq i32 %v1_99de, 0
  br i1 %v2_99de, label %dec_label_pc_99e0, label %dec_label_pc_99e9

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99dc
  %v2_99e0 = ptrtoint i8* %stack_var_0 to i32
  store i32 %v2_99e0, i32* %eax.global-to-local, align 8
  %v6_99e3 = trunc i32 %v2_99e0 to i8
  %v7_99e3 = add i8 %v6_99e3, %arg1
  store i8 %v7_99e3, i8* %stack_var_0, align 1
  call void @llvm.trap()
  unreachable

dec_label_pc_99e9:                                ; preds = %dec_label_pc_99dc
  %v0_99eb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_99eb

; uselistorder directives
  uselistorder i8* %stack_var_0, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define void @_Z20ThreadMessageHandlerv() local_unnamed_addr {
dec_label_pc_99f0:
  ret void
}

define i32 @function_9a27() local_unnamed_addr {
dec_label_pc_9a27:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_68 = alloca i32, align 4
  store i32 0, i32* %stack_var_68, align 4
  %v0_9a67 = load i32, i32* @ebx, align 4
  %v6_9a6a = inttoptr i32 %v0_9a67 to i32*
  %v7_9a6a = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %v6_9a6a, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %v7_9a6a, i32* %eax.global-to-local, align 8
  %v2_9a6f = ptrtoint i32* %stack_var_68 to i32
  store i32 %v2_9a6f, i32* %edx.global-to-local, align 4
  %v3_9a7e = call i32 @_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_(i32* nonnull %stack_var_68, i32 ptrtoint ([3 x i8]* @global_var_a174.2411 to i32))
  %v3_9a83 = load i32, i32* %stack_var_68, align 4
  store i32 %v3_9a83, i32* %eax.global-to-local, align 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v12_9a8b = icmp eq i32 %v3_9a83, 0
  br i1 %v12_9a8b, label %bb, label %dec_label_pc_9a93

bb:                                               ; preds = %dec_label_pc_9a27
  %v1_9a8d = call i32 @function_9d1a()
  store i32 %v1_9a8d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_9a93

dec_label_pc_9a93:                                ; preds = %bb, %dec_label_pc_9a27
  %v0_9aa04 = phi i32 [ %v1_9a8d, %bb ], [ %v3_9a83, %dec_label_pc_9a27 ]
  store i32 1936944740, i32* @edi, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9aa0, %dec_label_pc_9a93
  %v0_9aa0 = phi i32 [ %v1_9ab3, %dec_label_pc_9aa0 ], [ %v0_9aa04, %dec_label_pc_9a93 ]
  %v1_9aa0 = inttoptr i32 %v0_9aa0 to i32*
  %v2_9aa0 = load i32, i32* %v1_9aa0, align 4
  store i32 %v2_9aa0, i32* %edx.global-to-local, align 4
  %v1_9aa2 = add i32 %v2_9aa0, 564
  %v2_9aa2 = inttoptr i32 %v1_9aa2 to i32*
  %v3_9aa2 = load i32, i32* %v2_9aa2, align 4
  %v4_9aa2 = add i32 %v3_9aa2, 1
  store i32 %v4_9aa2, i32* %v2_9aa2, align 4
  %v0_9aa9 = load i32, i32* %edx.global-to-local, align 4
  %v1_9aa9 = load i32, i32* @edi, align 4
  %v12_9aa9 = icmp eq i32 %v0_9aa9, %v1_9aa9
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %edx.global-to-local, align 4
  %v1_9ab0 = load i32, i32* %esi.global-to-local, align 4
  %v3_9ab0 = select i1 %v12_9aa9, i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 %v1_9ab0
  store i32 %v3_9ab0, i32* %esi.global-to-local, align 4
  %v0_9ab3 = load i32, i32* %eax.global-to-local, align 8
  %v1_9ab3 = add i32 %v0_9ab3, 4
  store i32 %v1_9ab3, i32* %eax.global-to-local, align 8
  %v0_9ab6 = load i32, i32* %ecx.global-to-local, align 4
  %v12_9ab6 = icmp eq i32 %v0_9ab6, %v1_9ab3
  %v1_9ab8 = icmp eq i1 %v12_9ab6, false
  br i1 %v1_9ab8, label %dec_label_pc_9aa0, label %dec_label_pc_9aba

dec_label_pc_9aba:                                ; preds = %dec_label_pc_9aa0
  %v0_9aba = load i32, i32* @ebx, align 4
  %v1_9abd = inttoptr i32 %v0_9aba to i32*
  %v2_9abd = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_9abd)
  %v0_9ac2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_9ac2, i32* %eax.global-to-local, align 8
  ret i32 %v0_9ac2

; uselistorder directives
  uselistorder i32 %v1_9ab3, { 0, 2, 1 }
  uselistorder i32* %stack_var_68, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 1936944740, { 1, 0 }
  uselistorder i32 (i32*, i32)* @_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_, { 1, 0 }
}

define i32 @function_9acc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9acc:
  store i32 %arg1, i32* @edx, align 4
  %v12_9ad4 = icmp eq i32 %arg2, %arg1
  br i1 %v12_9ad4, label %bb, label %dec_label_pc_9adc

bb:                                               ; preds = %dec_label_pc_9acc
  %v1_9ad6 = call i32 @function_9d0d()
  %v1_9adc.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_9adc

dec_label_pc_9adc:                                ; preds = %bb, %dec_label_pc_9acc
  %v1_9adc = phi i32 [ %v1_9adc.pre, %bb ], [ %arg1, %dec_label_pc_9acc ]
  %v0_9adc = phi i32 [ %v1_9ad6, %bb ], [ %arg2, %dec_label_pc_9acc ]
  %v2_9adc = sub i32 %v0_9adc, %v1_9adc
  %v2_9ade = ashr i32 %v2_9adc, ptrtoint (i64* @global_var_2.2539 to i32)
  ret i32 %v2_9ade

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_9afc(i32 %arg1) local_unnamed_addr {
dec_label_pc_9afc:
  %stack_var_88 = alloca i8, align 1
  store i32 %arg1, i32* @edi, align 4
  %v0_9b00 = load i32, i32* @edx, align 4
  %v12_9b00 = icmp eq i32 %v0_9b00, %arg1
  br i1 %v12_9b00, label %bb, label %dec_label_pc_9b0c

bb:                                               ; preds = %dec_label_pc_9afc
  %v2_9b06 = inttoptr i32 %arg1 to i32*
  %v3_9b06 = call i32 @function_9c40(i32* %v2_9b06)
  %v0_9b0c.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_9b0c

dec_label_pc_9b0c:                                ; preds = %bb, %dec_label_pc_9afc
  %v0_9b0c = phi i32 [ %v0_9b0c.pre, %bb ], [ %v0_9b00, %dec_label_pc_9afc ]
  %v2_9b10 = ptrtoint i8* %stack_var_88 to i32
  store i32 %v2_9b10, i32* @edi, align 4
  %v1_9b3425 = inttoptr i32 %v0_9b0c to i32*
  %v2_9b3426 = load i32, i32* %v1_9b3425, align 4
  %v1_9b3627 = add i32 %v2_9b3426, ptrtoint (i8** @global_var_1d1.2443 to i32)
  %v2_9b3628 = inttoptr i32 %v1_9b3627 to i8*
  %v3_9b3629 = load i8, i8* %v2_9b3628, align 1
  %v10_9b3630 = icmp eq i8 %v3_9b3629, 0
  %v1_9b3d32 = icmp eq i1 %v10_9b3630, false
  br i1 %v1_9b3d32, label %dec_label_pc_9b16, label %dec_label_pc_9b3f

dec_label_pc_9b16:                                ; preds = %dec_label_pc_9b0c, %dec_label_pc_9b30.backedge
  %stack_var_48.033 = phi i32 [ %v4_9b16, %dec_label_pc_9b30.backedge ], [ %v0_9b0c, %dec_label_pc_9b0c ]
  %v4_9b16 = add i32 %stack_var_48.033, 4
  %v15_9b1f = icmp eq i32 %v4_9b16, %arg1
  %v2_9b23 = inttoptr i32 %v4_9b16 to i32*
  br i1 %v15_9b1f, label %bb23, label %dec_label_pc_9b30.backedge

bb23:                                             ; preds = %dec_label_pc_9b16
  %v3_9b23 = call i32 @function_9c40(i32* %v2_9b23)
  br label %dec_label_pc_9b30.backedge

dec_label_pc_9b30.backedge:                       ; preds = %dec_label_pc_9b16, %bb23
  %v2_9b34 = load i32, i32* %v2_9b23, align 4
  %v1_9b36 = add i32 %v2_9b34, ptrtoint (i8** @global_var_1d1.2443 to i32)
  %v2_9b36 = inttoptr i32 %v1_9b36 to i8*
  %v3_9b36 = load i8, i8* %v2_9b36, align 1
  %v10_9b36 = icmp eq i8 %v3_9b36, 0
  %v1_9b3d = icmp eq i1 %v10_9b36, false
  br i1 %v1_9b3d, label %dec_label_pc_9b16, label %dec_label_pc_9b3f

dec_label_pc_9b3f:                                ; preds = %dec_label_pc_9b30.backedge, %dec_label_pc_9b0c
  %v2_9b34.lcssa = phi i32 [ %v2_9b3426, %dec_label_pc_9b0c ], [ %v2_9b34, %dec_label_pc_9b30.backedge ]
  %v1_9b3f = add i32 %v2_9b34.lcssa, 260
  %v0_9b69 = load i32, i32* @ebx, align 4
  %v7_9b6c = inttoptr i32 %v0_9b69 to i32*
  %v8_9b6c = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %v7_9b6c, i32 %v1_9b3f, i32 ptrtoint ([19 x i8]* @global_var_a462.2556 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  %v0_9b71 = load i32, i32* @ebx, align 4
  %v1_9b71 = add i32 %v0_9b71, 4
  %v2_9b71 = inttoptr i32 %v1_9b71 to i8*
  %v3_9b71 = load i8, i8* %v2_9b71, align 1
  %v10_9b71 = icmp eq i8 %v3_9b71, 0
  br i1 %v10_9b71, label %dec_label_pc_9ba5, label %dec_label_pc_9b77

dec_label_pc_9b77:                                ; preds = %dec_label_pc_9b3f
  %v0_9b84 = load i32, i32* @esi, align 4
  %v5_9b8f = call i32 @_ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %v2_9b10, i32 761619567, i32 %v0_9b84)
  %v2_9b97 = load i8, i8* %stack_var_88, align 1
  %v11_9b97 = icmp eq i8 %v2_9b97, 0
  br i1 %v11_9b97, label %bb24, label %dec_label_pc_9ba5

bb24:                                             ; preds = %dec_label_pc_9b77
  %v1_9b9a = call i32 @function_9cb8()
  br label %dec_label_pc_9ba5

dec_label_pc_9ba5:                                ; preds = %dec_label_pc_9b77, %bb24, %dec_label_pc_9b3f
  %v0_9ba5 = load i32, i32* @ebx, align 4
  %v1_9ba8 = inttoptr i32 %v0_9ba5 to i32*
  %v2_9ba8 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_9ba8)
  ret i32 %v2_9ba8

; uselistorder directives
  uselistorder i32 %v4_9b16, { 2, 0, 1 }
  uselistorder i32 %v0_9b00, { 1, 0 }
  uselistorder i8* %stack_var_88, { 1, 0 }
  uselistorder i32 260, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1d1.2443 to i32), { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_9ba5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9b30.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_9b16, { 1, 0 }
}

define i32 @function_9bfb() local_unnamed_addr {
dec_label_pc_9bfb:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_0 = alloca i32, align 4
  %v0_9bfb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_9bfb, label %dec_label_pc_9c21, label %dec_label_pc_9bfd

dec_label_pc_9bfd:                                ; preds = %dec_label_pc_9bfb
  %v0_9bfd = load i32, i32* %ecx.global-to-local, align 4
  %v1_9bfd = add i32 %v0_9bfd, 251929668
  %v2_9bfd = inttoptr i32 %v1_9bfd to i8*
  %v3_9bfd = load i8, i8* %v2_9bfd, align 1
  %v5_9bfd = trunc i32 %v0_9bfd to i8
  %v6_9bfd = or i8 %v3_9bfd, %v5_9bfd
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_9bfd = icmp eq i8 %v6_9bfd, 0
  store i1 %v7_9bfd, i1* %zf.global-to-local, align 1
  store i8 %v6_9bfd, i8* %v2_9bfd, align 1
  %v2_9c03 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_9c03, i32* %eax.global-to-local, align 8
  ret i32 %v2_9c03

dec_label_pc_9c21:                                ; preds = %dec_label_pc_9bfb
  %v0_9c21 = load i32, i32* %eax.global-to-local, align 8
  %v1_9c21 = trunc i32 %v0_9c21 to i8
  %v2_9c21 = load i1, i1* %cf.global-to-local, align 1
  %v3_9c21 = zext i1 %v2_9c21 to i8
  %v4_9c21 = add i8 %v1_9c21, -36
  %v5_9c21 = add i8 %v4_9c21, %v3_9c21
  %v17_9c21 = icmp ult i8 %v1_9c21, 36
  %v18_9c21 = or i1 %v2_9c21, %v17_9c21
  store i1 %v18_9c21, i1* %cf.global-to-local, align 1
  %v26_9c21 = icmp eq i8 %v5_9c21, 0
  store i1 %v26_9c21, i1* %zf.global-to-local, align 1
  %v31_9c21 = zext i8 %v5_9c21 to i32
  %v33_9c21 = and i32 %v0_9c21, -256
  %v34_9c21 = or i32 %v31_9c21, %v33_9c21
  store i32 %v34_9c21, i32* %eax.global-to-local, align 8
  %v2_9c23 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull @1)
  store i32 %v2_9c23, i32* %eax.global-to-local, align 8
  ret i32 %v2_9c23

; uselistorder directives
  uselistorder i8 %v1_9c21, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2 }
  uselistorder i1* %cf.global-to-local, { 0, 2, 1 }
}

define i32 @function_9c40(i32* %arg1) local_unnamed_addr {
dec_label_pc_9c40:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v0_9c68 = load i32, i32* @ebx, align 4
  %v6_9c6b = inttoptr i32 %v0_9c68 to i32*
  %v7_9c6b = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %v6_9c6b, i32 ptrtoint (i32* @global_var_a120.2410 to i32), i32 ptrtoint ([10 x i8]* @global_var_a02f.2409 to i32), i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32))
  store i32 %tmp3, i32* %eax.global-to-local, align 8
  %v12_9c78 = icmp eq i32 %tmp3, %tmp
  br i1 %v12_9c78, label %dec_label_pc_9c8c, label %dec_label_pc_9c7c

dec_label_pc_9c7c:                                ; preds = %dec_label_pc_9c40, %dec_label_pc_9c7c
  %v0_9c7c = phi i32 [ %v1_9c88, %dec_label_pc_9c7c ], [ %tmp3, %dec_label_pc_9c40 ]
  %v1_9c7c = inttoptr i32 %v0_9c7c to i32*
  %v2_9c7c = load i32, i32* %v1_9c7c, align 4
  %v1_9c7e = add i32 %v0_9c7c, 4
  store i32 %v1_9c7e, i32* %eax.global-to-local, align 8
  %v1_9c81 = add i32 %v2_9c7c, 564
  %v2_9c81 = inttoptr i32 %v1_9c81 to i32*
  %v3_9c81 = load i32, i32* %v2_9c81, align 4
  %v4_9c81 = add i32 %v3_9c81, -1
  store i32 %v4_9c81, i32* %v2_9c81, align 4
  %v0_9c88 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9c88 = load i32, i32* %eax.global-to-local, align 8
  %v12_9c88 = icmp eq i32 %v0_9c88, %v1_9c88
  %v1_9c8a = icmp eq i1 %v12_9c88, false
  br i1 %v1_9c8a, label %dec_label_pc_9c7c, label %dec_label_pc_9c8c.loopexit

dec_label_pc_9c8c.loopexit:                       ; preds = %dec_label_pc_9c7c
  br label %dec_label_pc_9c8c

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c8c.loopexit, %dec_label_pc_9c40
  %v0_9c8c = load i32, i32* @ebx, align 4
  %v1_9c8f = inttoptr i32 %v0_9c8c to i32*
  %v2_9c8f = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_9c8f)
  store i32 %v2_9c8f, i32* %eax.global-to-local, align 8
  %v3_9ca3 = call i32 @_Z10MilliSleepx(i64 20, i32 0)
  store i32 %tmp3, i32* %eax.global-to-local, align 8
  %v0_9cb1 = call i32 @function_9a27()
  store i32 %v0_9cb1, i32* %eax.global-to-local, align 8
  ret i32 %v0_9cb1

; uselistorder directives
  uselistorder i32 %v0_9c7c, { 1, 0 }
  uselistorder i32 %tmp3, { 3, 1, 0, 2 }
  uselistorder i32 (i64, i32)* @_Z10MilliSleepx, { 9, 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 564, { 8, 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32*, i32, i32, i32)* @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib, { 33, 34, 32, 3, 0, 4, 1, 2, 35, 14, 15, 16, 17, 5, 6, 18, 8, 7, 9, 10, 11, 12, 19, 13, 20, 31, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_a027.2408 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_9c7c, { 1, 0 }
}

define i32 @function_9cb8() local_unnamed_addr {
dec_label_pc_9cb8:
  %v0_9cb8 = load i32, i32* @esi, align 4
  call void @_ZN5CNode21CloseSocketDisconnectEv(i32 %v0_9cb8)
  ret i32 ptrtoint (i32* @1 to i32)

; uselistorder directives
  uselistorder void (i32)* @_ZN5CNode21CloseSocketDisconnectEv, { 0, 3, 1, 2 }
}

define i32 @function_9cc5() local_unnamed_addr {
dec_label_pc_9cc5:
  %v3_9cdd = load i32, i32* @eax, align 8
  ret i32 %v3_9cdd
}

define i32 @function_9d0d() local_unnamed_addr {
dec_label_pc_9d0d:
  %v1_9d15 = call i32 @function_9afc(i32 0)
  ret i32 %v1_9d15
}

define i32 @function_9d1a() local_unnamed_addr {
dec_label_pc_9d1a:
  %v0_9d1a = load i32, i32* @ebx, align 4
  %v1_9d1d = inttoptr i32 %v0_9d1a to i32*
  %v2_9d1d = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %v1_9d1d)
  ret i32 %v2_9d1d
}

define i32 @function_9d22() local_unnamed_addr {
dec_label_pc_9d22:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_9d2b(i16 %arg1) local_unnamed_addr {
dec_label_pc_9d2b:
  %eax.global-to-local = alloca i32, align 4
  %v6_9d2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_9d2b
}

define i32 @function_9df9() local_unnamed_addr {
dec_label_pc_9df9:
  %eax.global-to-local = alloca i32, align 4
  %v0_9df9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9df9
}

define i32 @function_9dfa() local_unnamed_addr {
dec_label_pc_9dfa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_9e0a() local_unnamed_addr {
dec_label_pc_9e0a:
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_9e0a = load i32, i32* %ecx.global-to-local, align 4
  %v1_9e0a = add i32 %v0_9e0a, 605850054
  %v2_9e0a = inttoptr i32 %v1_9e0a to i32*
  %v3_9e0a = load i32, i32* %v2_9e0a, align 4
  %v4_9e0a = add i32 %v3_9e0a, -1
  store i32 %v4_9e0a, i32* %v2_9e0a, align 4
  %v0_9e10 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_9e10, i32* @ebx, align 4
  %v2_9e12 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* nonnull @1)
  store i32 %v2_9e12, i32* @eax, align 8
  %v0_9e17 = call i32 @function_9dfa()
  ret i32 %v0_9e17

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev, { 0, 50, 52, 1, 53, 51, 2, 3, 4, 8, 9, 5, 6, 7, 54, 10, 29, 30, 31, 32, 33, 34, 11, 12, 13, 14, 15, 16, 17, 18, 55, 21, 19, 20, 22, 23, 24, 35, 36, 25, 26, 27, 37, 38, 49, 39, 40, 41, 28, 42, 43, 44, 45, 46, 47, 48 }
}

define i32 @function_9e19() local_unnamed_addr {
dec_label_pc_9e19:
  %eax.global-to-local = alloca i32, align 4
  %v0_9e19 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9e19
}

define i32 @function_9e20() local_unnamed_addr {
dec_label_pc_9e20:
  %eax.global-to-local = alloca i32, align 4
  %v0_9e20 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9e20
}

define i32 @function_9e22(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9e22:
  ret i32 %arg2
}

define i32 @_ZNK5boost10lock_error4whatEv() {
dec_label_pc_a510:
  br i1 false, label %dec_label_pc_a535, label %dec_label_pc_a531

dec_label_pc_a531:                                ; preds = %dec_label_pc_a510
  ret i32 ptrtoint ([18 x i8]* @global_var_9e60.2574 to i32)

dec_label_pc_a535:                                ; preds = %dec_label_pc_a510
  ret i32 ptrtoint ([18 x i8]* @global_var_9e60.2574 to i32)
}

define i32 @_ZNK5boost21thread_resource_error4whatEv() {
dec_label_pc_a540:
  br i1 false, label %dec_label_pc_a565, label %dec_label_pc_a561

dec_label_pc_a561:                                ; preds = %dec_label_pc_a540
  ret i32 ptrtoint ([29 x i8]* @global_var_9e72.2575 to i32)

dec_label_pc_a565:                                ; preds = %dec_label_pc_a540
  ret i32 ptrtoint ([29 x i8]* @global_var_9e72.2575 to i32)
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_a570:
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a59a, label %dec_label_pc_a596

dec_label_pc_a596:                                ; preds = %dec_label_pc_a570
  ret i32 0

dec_label_pc_a59a:                                ; preds = %dec_label_pc_a570
  ret i32 0
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_a5a0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a5ca, label %dec_label_pc_a5c6

dec_label_pc_a5c6:                                ; preds = %dec_label_pc_a5a0
  ret i32 0

dec_label_pc_a5ca:                                ; preds = %dec_label_pc_a5a0
  ret i32 0
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_a5d0:
  %v1_a5e4 = icmp eq i32* %arg1, null
  br i1 %v1_a5e4, label %dec_label_pc_a608, label %dec_label_pc_a5e8

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a5d0
  br i1 false, label %dec_label_pc_a619, label %dec_label_pc_a5f5

dec_label_pc_a5f5:                                ; preds = %dec_label_pc_a5e8
  %v2_a5f5 = load i32, i32* %arg1, align 4
  %v1_a5fb = add i32 %v2_a5f5, 4
  %v2_a5fb = inttoptr i32 %v1_a5fb to i32*
  %v3_a5fb = load i32, i32* %v2_a5fb, align 4
  ret i32 %v3_a5fb

dec_label_pc_a608:                                ; preds = %dec_label_pc_a5d0
  br i1 false, label %dec_label_pc_a619, label %dec_label_pc_a615

dec_label_pc_a615:                                ; preds = %dec_label_pc_a608
  ret i32 0

dec_label_pc_a619:                                ; preds = %dec_label_pc_a608, %dec_label_pc_a5e8
  ret i32 undef
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_a630:
  store i32 ptrtoint (i32* @global_var_277c8.2578 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a65a, label %dec_label_pc_a656

dec_label_pc_a656:                                ; preds = %dec_label_pc_a630
  ret i32 0

dec_label_pc_a65a:                                ; preds = %dec_label_pc_a630
  ret i32 0
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a660:
  %eax.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* %eax.global-to-local, align 8
  store i32 %arg3, i32* %arg1, align 4
  %v2_a67e = add i32 %tmp101, 4
  %v3_a67e = inttoptr i32 %v2_a67e to i32*
  store i32 %arg2, i32* %v3_a67e, align 4
  br i1 false, label %dec_label_pc_a694, label %dec_label_pc_a68e

dec_label_pc_a68e:                                ; preds = %dec_label_pc_a660
  %v0_a691 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_a691

dec_label_pc_a694:                                ; preds = %dec_label_pc_a660
  ret i32 undef
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a6a0:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %v1_a6db = add i32 %arg3, 4
  %v2_a6db = inttoptr i32 %v1_a6db to i32*
  %v3_a6db = load i32, i32* %v2_a6db, align 4
  %v15_a6db = icmp eq i32 %v3_a6db, %tmp106
  br i1 %v15_a6db, label %dec_label_pc_a6f8, label %dec_label_pc_a6e4

dec_label_pc_a6e4:                                ; preds = %dec_label_pc_a6f8, %dec_label_pc_a6a0
  %v0_a6fd = phi i32 [ %v1_a6fa, %dec_label_pc_a6f8 ], [ 0, %dec_label_pc_a6a0 ]
  %v1_a6e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a6e8 = icmp eq i32 %v1_a6e8, %tmp98
  %v1_a6ef = icmp eq i1 %v3_a6e8, false
  br i1 %v1_a6ef, label %dec_label_pc_a6ff, label %dec_label_pc_a6f1

dec_label_pc_a6f1:                                ; preds = %dec_label_pc_a6e4
  ret i32 %v0_a6fd

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a6a0
  %v1_a6f8 = inttoptr i32 %arg3 to i32*
  %v2_a6f8 = load i32, i32* %v1_a6f8, align 4
  %v14_a6f8 = icmp eq i32 %v2_a6f8, %tmp99
  %v1_a6fa = zext i1 %v14_a6f8 to i32
  br label %dec_label_pc_a6e4

dec_label_pc_a6ff:                                ; preds = %dec_label_pc_a6e4
  ret i32 %v0_a6fd
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a710:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v0_a710 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_a72c = add i32 %tmp102, 4
  %v2_a72c = inttoptr i32 %v1_a72c to i32*
  %v3_a72c = load i32, i32* %v2_a72c, align 4
  %v15_a72c = icmp eq i32 %v3_a72c, %arg1
  br i1 %v15_a72c, label %dec_label_pc_a748, label %dec_label_pc_a731

dec_label_pc_a731:                                ; preds = %dec_label_pc_a748, %dec_label_pc_a710
  %v0_a74d = phi i32 [ %v1_a74a, %dec_label_pc_a748 ], [ 0, %dec_label_pc_a710 ]
  br i1 false, label %dec_label_pc_a74f, label %dec_label_pc_a73e

dec_label_pc_a73e:                                ; preds = %dec_label_pc_a731
  store i32 %v0_a710, i32* %ebx.global-to-local, align 4
  ret i32 %v0_a74d

dec_label_pc_a748:                                ; preds = %dec_label_pc_a710
  %v2_a748 = load i32, i32* %arg2, align 4
  %v14_a748 = icmp eq i32 %v2_a748, %arg3
  %v1_a74a = zext i1 %v14_a748 to i32
  br label %dec_label_pc_a731

dec_label_pc_a74f:                                ; preds = %dec_label_pc_a731
  ret i32 %v0_a74d

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @_ZN5boost8signals211signal_baseD1Ev(i32* %arg1) {
dec_label_pc_a760:
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a78a, label %dec_label_pc_a786

dec_label_pc_a786:                                ; preds = %dec_label_pc_a760
  ret i32 0

dec_label_pc_a78a:                                ; preds = %dec_label_pc_a760
  ret i32 0
}

define i32 @_ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_a790:
  %v2_a7a3 = load i8, i8* %arg1, align 1
  %v3_a7a3 = zext i8 %v2_a7a3 to i32
  br i1 false, label %dec_label_pc_a7b7, label %dec_label_pc_a7b3

dec_label_pc_a7b3:                                ; preds = %dec_label_pc_a790
  ret i32 %v3_a7a3

dec_label_pc_a7b7:                                ; preds = %dec_label_pc_a790
  ret i32 %v3_a7a3
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_a7c0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a7ea, label %dec_label_pc_a7e6

dec_label_pc_a7e6:                                ; preds = %dec_label_pc_a7c0
  ret i32 0

dec_label_pc_a7ea:                                ; preds = %dec_label_pc_a7c0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_a7f0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a81a, label %dec_label_pc_a816

dec_label_pc_a816:                                ; preds = %dec_label_pc_a7f0
  ret i32 0

dec_label_pc_a81a:                                ; preds = %dec_label_pc_a7f0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_a820:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a84a, label %dec_label_pc_a846

dec_label_pc_a846:                                ; preds = %dec_label_pc_a820
  ret i32 0

dec_label_pc_a84a:                                ; preds = %dec_label_pc_a820
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_a850:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a87a, label %dec_label_pc_a876

dec_label_pc_a876:                                ; preds = %dec_label_pc_a850
  ret i32 0

dec_label_pc_a87a:                                ; preds = %dec_label_pc_a850
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_a880:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a8aa, label %dec_label_pc_a8a6

dec_label_pc_a8a6:                                ; preds = %dec_label_pc_a880
  ret i32 0

dec_label_pc_a8aa:                                ; preds = %dec_label_pc_a880
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED1Ev(i32* %arg1) {
dec_label_pc_a8b0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a8da, label %dec_label_pc_a8d6

dec_label_pc_a8d6:                                ; preds = %dec_label_pc_a8b0
  ret i32 0

dec_label_pc_a8da:                                ; preds = %dec_label_pc_a8b0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_a8e0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a90a, label %dec_label_pc_a906

dec_label_pc_a906:                                ; preds = %dec_label_pc_a8e0
  ret i32 0

dec_label_pc_a90a:                                ; preds = %dec_label_pc_a8e0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_a910:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a93a, label %dec_label_pc_a936

dec_label_pc_a936:                                ; preds = %dec_label_pc_a910
  ret i32 0

dec_label_pc_a93a:                                ; preds = %dec_label_pc_a910
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_a940:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a96a, label %dec_label_pc_a966

dec_label_pc_a966:                                ; preds = %dec_label_pc_a940
  ret i32 0

dec_label_pc_a96a:                                ; preds = %dec_label_pc_a940
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_a970:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a99a, label %dec_label_pc_a996

dec_label_pc_a996:                                ; preds = %dec_label_pc_a970
  ret i32 0

dec_label_pc_a99a:                                ; preds = %dec_label_pc_a970
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_a9a0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a9ca, label %dec_label_pc_a9c6

dec_label_pc_a9c6:                                ; preds = %dec_label_pc_a9a0
  ret i32 0

dec_label_pc_a9ca:                                ; preds = %dec_label_pc_a9a0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_a9d0:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a9fa, label %dec_label_pc_a9f6

dec_label_pc_a9f6:                                ; preds = %dec_label_pc_a9d0
  ret i32 0

dec_label_pc_a9fa:                                ; preds = %dec_label_pc_a9d0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_aa00:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_aa2a, label %dec_label_pc_aa26

dec_label_pc_aa26:                                ; preds = %dec_label_pc_aa00
  ret i32 0

dec_label_pc_aa2a:                                ; preds = %dec_label_pc_aa00
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_aa30:
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_aa5a, label %dec_label_pc_aa56

dec_label_pc_aa56:                                ; preds = %dec_label_pc_aa30
  ret i32 0

dec_label_pc_aa5a:                                ; preds = %dec_label_pc_aa30
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_aa60:
  br i1 false, label %dec_label_pc_aa80, label %dec_label_pc_aa7c

dec_label_pc_aa7c:                                ; preds = %dec_label_pc_aa60
  ret i32 0

dec_label_pc_aa80:                                ; preds = %dec_label_pc_aa60
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_aa90:
  br i1 false, label %dec_label_pc_aab0, label %dec_label_pc_aaac

dec_label_pc_aaac:                                ; preds = %dec_label_pc_aa90
  ret i32 0

dec_label_pc_aab0:                                ; preds = %dec_label_pc_aa90
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_aac0:
  br i1 false, label %dec_label_pc_aae0, label %dec_label_pc_aadc

dec_label_pc_aadc:                                ; preds = %dec_label_pc_aac0
  ret i32 0

dec_label_pc_aae0:                                ; preds = %dec_label_pc_aac0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_aaf0:
  br i1 false, label %dec_label_pc_ab10, label %dec_label_pc_ab0c

dec_label_pc_ab0c:                                ; preds = %dec_label_pc_aaf0
  ret i32 0

dec_label_pc_ab10:                                ; preds = %dec_label_pc_aaf0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ab20:
  br i1 false, label %dec_label_pc_ab40, label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab20
  ret i32 0

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab20
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE11get_deleterERKSt9type_info() {
dec_label_pc_ab50:
  br i1 false, label %dec_label_pc_ab70, label %dec_label_pc_ab6c

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_ab50
  ret i32 0

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab50
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ab80:
  br i1 false, label %dec_label_pc_aba0, label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab80
  ret i32 0

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab80
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_abb0:
  %v1_abc3 = add i32 %arg1, 12
  %v2_abc3 = inttoptr i32 %v1_abc3 to i32*
  %v3_abc3 = load i32, i32* %v2_abc3, align 4
  %v1_abc6 = icmp eq i32 %v3_abc3, 0
  br i1 %v1_abc6, label %dec_label_pc_abe8, label %dec_label_pc_abca

dec_label_pc_abca:                                ; preds = %dec_label_pc_abb0
  br i1 false, label %dec_label_pc_abf9, label %dec_label_pc_abd7

dec_label_pc_abd7:                                ; preds = %dec_label_pc_abca
  %v1_abd7 = inttoptr i32 %v3_abc3 to i32*
  %v2_abd7 = load i32, i32* %v1_abd7, align 4
  %v1_abdd = add i32 %v2_abd7, 4
  %v2_abdd = inttoptr i32 %v1_abdd to i32*
  %v3_abdd = load i32, i32* %v2_abdd, align 4
  ret i32 %v3_abdd

dec_label_pc_abe8:                                ; preds = %dec_label_pc_abb0
  br i1 false, label %dec_label_pc_abf9, label %dec_label_pc_abf5

dec_label_pc_abf5:                                ; preds = %dec_label_pc_abe8
  ret i32 0

dec_label_pc_abf9:                                ; preds = %dec_label_pc_abe8, %dec_label_pc_abca
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ac10:
  br i1 false, label %dec_label_pc_ac30, label %dec_label_pc_ac2c

dec_label_pc_ac2c:                                ; preds = %dec_label_pc_ac10
  ret i32 0

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac10
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_ac40:
  br i1 false, label %dec_label_pc_ac60, label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_ac40
  ret i32 0

dec_label_pc_ac60:                                ; preds = %dec_label_pc_ac40
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_ac70:
  br i1 false, label %dec_label_pc_ac90, label %dec_label_pc_ac8c

dec_label_pc_ac8c:                                ; preds = %dec_label_pc_ac70
  ret i32 0

dec_label_pc_ac90:                                ; preds = %dec_label_pc_ac70
  ret i32 0
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEE3runEv(i32 %arg1) {
dec_label_pc_aca0:
  br i1 false, label %dec_label_pc_acf1, label %dec_label_pc_aced

dec_label_pc_aced:                                ; preds = %dec_label_pc_aca0
  ret i32 0

dec_label_pc_acf1:                                ; preds = %dec_label_pc_aca0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_ad00:
  %v1_ad13 = add i32 %arg1, 12
  %v2_ad13 = inttoptr i32 %v1_ad13 to i32*
  %v3_ad13 = load i32, i32* %v2_ad13, align 4
  %v1_ad16 = icmp eq i32 %v3_ad13, 0
  br i1 %v1_ad16, label %dec_label_pc_ad38, label %dec_label_pc_ad1a

dec_label_pc_ad1a:                                ; preds = %dec_label_pc_ad00
  br i1 false, label %dec_label_pc_ad49, label %dec_label_pc_ad27

dec_label_pc_ad27:                                ; preds = %dec_label_pc_ad1a
  %v1_ad27 = inttoptr i32 %v3_ad13 to i32*
  %v2_ad27 = load i32, i32* %v1_ad27, align 4
  %v1_ad2d = add i32 %v2_ad27, 4
  %v2_ad2d = inttoptr i32 %v1_ad2d to i32*
  %v3_ad2d = load i32, i32* %v2_ad2d, align 4
  ret i32 %v3_ad2d

dec_label_pc_ad38:                                ; preds = %dec_label_pc_ad00
  br i1 false, label %dec_label_pc_ad49, label %dec_label_pc_ad45

dec_label_pc_ad45:                                ; preds = %dec_label_pc_ad38
  ret i32 0

dec_label_pc_ad49:                                ; preds = %dec_label_pc_ad38, %dec_label_pc_ad1a
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ad60:
  br i1 false, label %dec_label_pc_ad80, label %dec_label_pc_ad7c

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_ad60
  ret i32 0

dec_label_pc_ad80:                                ; preds = %dec_label_pc_ad60
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ad90:
  br i1 false, label %dec_label_pc_adb0, label %dec_label_pc_adac

dec_label_pc_adac:                                ; preds = %dec_label_pc_ad90
  ret i32 0

dec_label_pc_adb0:                                ; preds = %dec_label_pc_ad90
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_adc0:
  br i1 false, label %dec_label_pc_ade0, label %dec_label_pc_addc

dec_label_pc_addc:                                ; preds = %dec_label_pc_adc0
  ret i32 0

dec_label_pc_ade0:                                ; preds = %dec_label_pc_adc0
  ret i32 0
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEE3runEv(i32 %arg1) {
dec_label_pc_adf0:
  br i1 false, label %dec_label_pc_ae2e, label %dec_label_pc_ae2a

dec_label_pc_ae2a:                                ; preds = %dec_label_pc_adf0
  ret i32 0

dec_label_pc_ae2e:                                ; preds = %dec_label_pc_adf0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_ae40:
  %v1_ae53 = add i32 %arg1, 12
  %v2_ae53 = inttoptr i32 %v1_ae53 to i32*
  %v3_ae53 = load i32, i32* %v2_ae53, align 4
  %v1_ae56 = icmp eq i32 %v3_ae53, 0
  br i1 %v1_ae56, label %dec_label_pc_ae78, label %dec_label_pc_ae5a

dec_label_pc_ae5a:                                ; preds = %dec_label_pc_ae40
  br i1 false, label %dec_label_pc_ae89, label %dec_label_pc_ae67

dec_label_pc_ae67:                                ; preds = %dec_label_pc_ae5a
  %v1_ae67 = inttoptr i32 %v3_ae53 to i32*
  %v2_ae67 = load i32, i32* %v1_ae67, align 4
  %v1_ae6d = add i32 %v2_ae67, 4
  %v2_ae6d = inttoptr i32 %v1_ae6d to i32*
  %v3_ae6d = load i32, i32* %v2_ae6d, align 4
  ret i32 %v3_ae6d

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae40
  br i1 false, label %dec_label_pc_ae89, label %dec_label_pc_ae85

dec_label_pc_ae85:                                ; preds = %dec_label_pc_ae78
  ret i32 0

dec_label_pc_ae89:                                ; preds = %dec_label_pc_ae78, %dec_label_pc_ae5a
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info() {
dec_label_pc_aea0:
  br i1 false, label %dec_label_pc_aec0, label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aea0
  ret i32 0

dec_label_pc_aec0:                                ; preds = %dec_label_pc_aea0
  ret i32 0
}

define i32 @_ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_aed0:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 8
  %v1_aee8 = add i32 %arg2, 4
  %v2_aee8 = inttoptr i32 %v1_aee8 to i32*
  %v3_aee8 = load i32, i32* %v2_aee8, align 4
  %v1_aeeb = add i32 %arg2, 8
  %v2_aeeb = inttoptr i32 %v1_aeeb to i32*
  %v3_aeeb = load i32, i32* %v2_aeeb, align 4
  store i32 %v3_aee8, i32* %arg1, align 4
  %v1_aef0 = icmp eq i32 %v3_aeeb, 0
  %v1_aef2 = load i32, i32* %eax.global-to-local, align 8
  %v2_aef2 = add i32 %v1_aef2, 4
  %v3_aef2 = inttoptr i32 %v2_aef2 to i32*
  store i32 %v3_aeeb, i32* %v3_aef2, align 4
  br i1 %v1_aef0, label %dec_label_pc_aefb, label %dec_label_pc_aef7

dec_label_pc_aef7:                                ; preds = %dec_label_pc_aed0
  %v1_aef7 = add i32 %v3_aeeb, 4
  %v2_aef7 = inttoptr i32 %v1_aef7 to i32*
  %v3_aef7 = load i32, i32* %v2_aef7, align 4
  %v4_aef7 = add i32 %v3_aef7, 1
  store i32 %v4_aef7, i32* %v2_aef7, align 4
  br label %dec_label_pc_aefb

dec_label_pc_aefb:                                ; preds = %dec_label_pc_aef7, %dec_label_pc_aed0
  br i1 false, label %dec_label_pc_af0e, label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aefb
  %v0_af0b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_af0b

dec_label_pc_af0e:                                ; preds = %dec_label_pc_aefb
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_af20:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 8
  %v1_af38 = add i32 %arg2, 4
  %v2_af38 = inttoptr i32 %v1_af38 to i32*
  %v3_af38 = load i32, i32* %v2_af38, align 4
  %v1_af3b = add i32 %arg2, 8
  %v2_af3b = inttoptr i32 %v1_af3b to i32*
  %v3_af3b = load i32, i32* %v2_af3b, align 4
  store i32 %v3_af38, i32* %arg1, align 4
  %v1_af40 = icmp eq i32 %v3_af3b, 0
  %v1_af42 = load i32, i32* %eax.global-to-local, align 8
  %v2_af42 = add i32 %v1_af42, 4
  %v3_af42 = inttoptr i32 %v2_af42 to i32*
  store i32 %v3_af3b, i32* %v3_af42, align 4
  br i1 %v1_af40, label %dec_label_pc_af4b, label %dec_label_pc_af47

dec_label_pc_af47:                                ; preds = %dec_label_pc_af20
  %v1_af47 = add i32 %v3_af3b, 4
  %v2_af47 = inttoptr i32 %v1_af47 to i32*
  %v3_af47 = load i32, i32* %v2_af47, align 4
  %v4_af47 = add i32 %v3_af47, 1
  store i32 %v4_af47, i32* %v2_af47, align 4
  br label %dec_label_pc_af4b

dec_label_pc_af4b:                                ; preds = %dec_label_pc_af47, %dec_label_pc_af20
  br i1 false, label %dec_label_pc_af5e, label %dec_label_pc_af58

dec_label_pc_af58:                                ; preds = %dec_label_pc_af4b
  %v0_af5b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_af5b

dec_label_pc_af5e:                                ; preds = %dec_label_pc_af4b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32* %arg1) {
dec_label_pc_af70:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_af70.dec_label_pc_af97_crit_edge

dec_label_pc_af70.dec_label_pc_af97_crit_edge:    ; preds = %dec_label_pc_af70
  %v17_af9b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_af97

bb:                                               ; preds = %dec_label_pc_af70
  br label %dec_label_pc_af97

dec_label_pc_af97:                                ; preds = %dec_label_pc_af70.dec_label_pc_af97_crit_edge, %bb
  %v17_af9b = phi i32 [ %v17_af9b.pre, %dec_label_pc_af70.dec_label_pc_af97_crit_edge ], [ undef, %bb ]
  ret i32 %v17_af9b

; uselistorder directives
  uselistorder label %dec_label_pc_af97, { 1, 0 }
}

define i32 @function_afa3(i32 %arg1) local_unnamed_addr {
dec_label_pc_afa3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_afb0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_afb0.dec_label_pc_afd7_crit_edge

dec_label_pc_afb0.dec_label_pc_afd7_crit_edge:    ; preds = %dec_label_pc_afb0
  %v17_afdb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_afd7

bb:                                               ; preds = %dec_label_pc_afb0
  br label %dec_label_pc_afd7

dec_label_pc_afd7:                                ; preds = %dec_label_pc_afb0.dec_label_pc_afd7_crit_edge, %bb
  %v17_afdb = phi i32 [ %v17_afdb.pre, %dec_label_pc_afb0.dec_label_pc_afd7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_afdb

; uselistorder directives
  uselistorder label %dec_label_pc_afd7, { 1, 0 }
}

define i32 @function_afe3(i32 %arg1) local_unnamed_addr {
dec_label_pc_afe3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_aff0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_aff0.dec_label_pc_b017_crit_edge

dec_label_pc_aff0.dec_label_pc_b017_crit_edge:    ; preds = %dec_label_pc_aff0
  %v17_b01b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b017

bb:                                               ; preds = %dec_label_pc_aff0
  br label %dec_label_pc_b017

dec_label_pc_b017:                                ; preds = %dec_label_pc_aff0.dec_label_pc_b017_crit_edge, %bb
  %v17_b01b = phi i32 [ %v17_b01b.pre, %dec_label_pc_aff0.dec_label_pc_b017_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b01b

; uselistorder directives
  uselistorder label %dec_label_pc_b017, { 1, 0 }
}

define i32 @function_b023(i32 %arg1) local_unnamed_addr {
dec_label_pc_b023:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_b030:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b030.dec_label_pc_b057_crit_edge

dec_label_pc_b030.dec_label_pc_b057_crit_edge:    ; preds = %dec_label_pc_b030
  %v17_b05b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b057

bb:                                               ; preds = %dec_label_pc_b030
  br label %dec_label_pc_b057

dec_label_pc_b057:                                ; preds = %dec_label_pc_b030.dec_label_pc_b057_crit_edge, %bb
  %v17_b05b = phi i32 [ %v17_b05b.pre, %dec_label_pc_b030.dec_label_pc_b057_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b05b

; uselistorder directives
  uselistorder label %dec_label_pc_b057, { 1, 0 }
}

define i32 @function_b063(i32 %arg1) local_unnamed_addr {
dec_label_pc_b063:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_b070:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b070.dec_label_pc_b097_crit_edge

dec_label_pc_b070.dec_label_pc_b097_crit_edge:    ; preds = %dec_label_pc_b070
  %v17_b09b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b097

bb:                                               ; preds = %dec_label_pc_b070
  br label %dec_label_pc_b097

dec_label_pc_b097:                                ; preds = %dec_label_pc_b070.dec_label_pc_b097_crit_edge, %bb
  %v17_b09b = phi i32 [ %v17_b09b.pre, %dec_label_pc_b070.dec_label_pc_b097_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b09b

; uselistorder directives
  uselistorder label %dec_label_pc_b097, { 1, 0 }
}

define i32 @function_b0a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b0a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_b0b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b0b0.dec_label_pc_b0d7_crit_edge

dec_label_pc_b0b0.dec_label_pc_b0d7_crit_edge:    ; preds = %dec_label_pc_b0b0
  %v17_b0db.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b0d7

bb:                                               ; preds = %dec_label_pc_b0b0
  br label %dec_label_pc_b0d7

dec_label_pc_b0d7:                                ; preds = %dec_label_pc_b0b0.dec_label_pc_b0d7_crit_edge, %bb
  %v17_b0db = phi i32 [ %v17_b0db.pre, %dec_label_pc_b0b0.dec_label_pc_b0d7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b0db

; uselistorder directives
  uselistorder label %dec_label_pc_b0d7, { 1, 0 }
}

define i32 @function_b0e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b0e3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_b0f0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b0f0.dec_label_pc_b117_crit_edge

dec_label_pc_b0f0.dec_label_pc_b117_crit_edge:    ; preds = %dec_label_pc_b0f0
  %v17_b11b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b117

bb:                                               ; preds = %dec_label_pc_b0f0
  br label %dec_label_pc_b117

dec_label_pc_b117:                                ; preds = %dec_label_pc_b0f0.dec_label_pc_b117_crit_edge, %bb
  %v17_b11b = phi i32 [ %v17_b11b.pre, %dec_label_pc_b0f0.dec_label_pc_b117_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b11b

; uselistorder directives
  uselistorder label %dec_label_pc_b117, { 1, 0 }
}

define i32 @function_b123(i32 %arg1) local_unnamed_addr {
dec_label_pc_b123:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_b130:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b130.dec_label_pc_b157_crit_edge

dec_label_pc_b130.dec_label_pc_b157_crit_edge:    ; preds = %dec_label_pc_b130
  %v17_b15b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b157

bb:                                               ; preds = %dec_label_pc_b130
  br label %dec_label_pc_b157

dec_label_pc_b157:                                ; preds = %dec_label_pc_b130.dec_label_pc_b157_crit_edge, %bb
  %v17_b15b = phi i32 [ %v17_b15b.pre, %dec_label_pc_b130.dec_label_pc_b157_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b15b

; uselistorder directives
  uselistorder label %dec_label_pc_b157, { 1, 0 }
}

define i32 @function_b163(i32 %arg1) local_unnamed_addr {
dec_label_pc_b163:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED0Ev(i32* %arg1) {
dec_label_pc_b170:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b170.dec_label_pc_b197_crit_edge

dec_label_pc_b170.dec_label_pc_b197_crit_edge:    ; preds = %dec_label_pc_b170
  %v17_b19b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b197

bb:                                               ; preds = %dec_label_pc_b170
  br label %dec_label_pc_b197

dec_label_pc_b197:                                ; preds = %dec_label_pc_b170.dec_label_pc_b197_crit_edge, %bb
  %v17_b19b = phi i32 [ %v17_b19b.pre, %dec_label_pc_b170.dec_label_pc_b197_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b19b

; uselistorder directives
  uselistorder label %dec_label_pc_b197, { 1, 0 }
}

define i32 @function_b1a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b1a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_b1b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b1b0.dec_label_pc_b1d7_crit_edge

dec_label_pc_b1b0.dec_label_pc_b1d7_crit_edge:    ; preds = %dec_label_pc_b1b0
  %v17_b1db.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b1d7

bb:                                               ; preds = %dec_label_pc_b1b0
  br label %dec_label_pc_b1d7

dec_label_pc_b1d7:                                ; preds = %dec_label_pc_b1b0.dec_label_pc_b1d7_crit_edge, %bb
  %v17_b1db = phi i32 [ %v17_b1db.pre, %dec_label_pc_b1b0.dec_label_pc_b1d7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b1db

; uselistorder directives
  uselistorder label %dec_label_pc_b1d7, { 1, 0 }
}

define i32 @function_b1e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b1e3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_b1f0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b1f0.dec_label_pc_b217_crit_edge

dec_label_pc_b1f0.dec_label_pc_b217_crit_edge:    ; preds = %dec_label_pc_b1f0
  %v17_b21b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b217

bb:                                               ; preds = %dec_label_pc_b1f0
  br label %dec_label_pc_b217

dec_label_pc_b217:                                ; preds = %dec_label_pc_b1f0.dec_label_pc_b217_crit_edge, %bb
  %v17_b21b = phi i32 [ %v17_b21b.pre, %dec_label_pc_b1f0.dec_label_pc_b217_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b21b

; uselistorder directives
  uselistorder label %dec_label_pc_b217, { 1, 0 }
}

define i32 @function_b223(i32 %arg1) local_unnamed_addr {
dec_label_pc_b223:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_b230:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b230.dec_label_pc_b257_crit_edge

dec_label_pc_b230.dec_label_pc_b257_crit_edge:    ; preds = %dec_label_pc_b230
  %v17_b25b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b257

bb:                                               ; preds = %dec_label_pc_b230
  br label %dec_label_pc_b257

dec_label_pc_b257:                                ; preds = %dec_label_pc_b230.dec_label_pc_b257_crit_edge, %bb
  %v17_b25b = phi i32 [ %v17_b25b.pre, %dec_label_pc_b230.dec_label_pc_b257_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b25b

; uselistorder directives
  uselistorder label %dec_label_pc_b257, { 1, 0 }
}

define i32 @function_b263(i32 %arg1) local_unnamed_addr {
dec_label_pc_b263:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_b270:
  %eax.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 %tmp98, i32* %eax.global-to-local, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_b2a3, label %dec_label_pc_b297

dec_label_pc_b297:                                ; preds = %dec_label_pc_b270
  br label %dec_label_pc_b2a3

dec_label_pc_b2a3:                                ; preds = %dec_label_pc_b297, %dec_label_pc_b270
  %v0_b29e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b29e
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_b2b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b2b0.dec_label_pc_b2d7_crit_edge

dec_label_pc_b2b0.dec_label_pc_b2d7_crit_edge:    ; preds = %dec_label_pc_b2b0
  %v17_b2db.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b2d7

bb:                                               ; preds = %dec_label_pc_b2b0
  br label %dec_label_pc_b2d7

dec_label_pc_b2d7:                                ; preds = %dec_label_pc_b2b0.dec_label_pc_b2d7_crit_edge, %bb
  %v17_b2db = phi i32 [ %v17_b2db.pre, %dec_label_pc_b2b0.dec_label_pc_b2d7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b2db

; uselistorder directives
  uselistorder label %dec_label_pc_b2d7, { 1, 0 }
}

define i32 @function_b2e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b2e3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b2f0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_31428.2577 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b2f0.dec_label_pc_b317_crit_edge

dec_label_pc_b2f0.dec_label_pc_b317_crit_edge:    ; preds = %dec_label_pc_b2f0
  %v17_b31b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b317

bb:                                               ; preds = %dec_label_pc_b2f0
  br label %dec_label_pc_b317

dec_label_pc_b317:                                ; preds = %dec_label_pc_b2f0.dec_label_pc_b317_crit_edge, %bb
  %v17_b31b = phi i32 [ %v17_b31b.pre, %dec_label_pc_b2f0.dec_label_pc_b317_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b31b

; uselistorder directives
  uselistorder label %dec_label_pc_b317, { 1, 0 }
}

define i32 @function_b323(i32 %arg1) local_unnamed_addr {
dec_label_pc_b323:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b330:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b330.dec_label_pc_b357_crit_edge

dec_label_pc_b330.dec_label_pc_b357_crit_edge:    ; preds = %dec_label_pc_b330
  %v17_b35b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b357

bb:                                               ; preds = %dec_label_pc_b330
  br label %dec_label_pc_b357

dec_label_pc_b357:                                ; preds = %dec_label_pc_b330.dec_label_pc_b357_crit_edge, %bb
  %v17_b35b = phi i32 [ %v17_b35b.pre, %dec_label_pc_b330.dec_label_pc_b357_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b35b

; uselistorder directives
  uselistorder label %dec_label_pc_b357, { 1, 0 }
}

define i32 @function_b363(i32 %arg1) local_unnamed_addr {
dec_label_pc_b363:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b370:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (i32* @global_var_277c8.2578 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b370.dec_label_pc_b397_crit_edge

dec_label_pc_b370.dec_label_pc_b397_crit_edge:    ; preds = %dec_label_pc_b370
  %v17_b39b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b397

bb:                                               ; preds = %dec_label_pc_b370
  br label %dec_label_pc_b397

dec_label_pc_b397:                                ; preds = %dec_label_pc_b370.dec_label_pc_b397_crit_edge, %bb
  %v17_b39b = phi i32 [ %v17_b39b.pre, %dec_label_pc_b370.dec_label_pc_b397_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b39b

; uselistorder directives
  uselistorder label %dec_label_pc_b397, { 1, 0 }
}

define i32 @function_b3a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b3a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost8signals211signal_baseD0Ev(i32* %arg1) {
dec_label_pc_b3b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b3b0.dec_label_pc_b3d7_crit_edge

dec_label_pc_b3b0.dec_label_pc_b3d7_crit_edge:    ; preds = %dec_label_pc_b3b0
  %v17_b3db.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b3d7

bb:                                               ; preds = %dec_label_pc_b3b0
  br label %dec_label_pc_b3d7

dec_label_pc_b3d7:                                ; preds = %dec_label_pc_b3b0.dec_label_pc_b3d7_crit_edge, %bb
  %v17_b3db = phi i32 [ %v17_b3db.pre, %dec_label_pc_b3b0.dec_label_pc_b3d7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b3db

; uselistorder directives
  uselistorder label %dec_label_pc_b3d7, { 1, 0 }
}

define i32 @function_b3e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b3e3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt4listIP5CNodeSaIS1_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b3f0:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v0_b3f0 = load i32, i32* @esi, align 4
  %v0_b3f1 = load i32, i32* @ebx, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_b405 = load i32, i32* %arg1, align 4
  %v12_b407 = icmp eq i32 %v2_b405, %tmp2
  %v1_b409 = icmp eq i1 %v12_b407, false
  br i1 %v1_b409, label %dec_label_pc_b412, label %dec_label_pc_b40b

dec_label_pc_b40b:                                ; preds = %dec_label_pc_b3f0
  %v0_b3f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b40b = call i32 @function_b420(i32 %v0_b3f9, i32 %v0_b3f1, i32 %v0_b3f0)
  ret i32 %v3_b40b

dec_label_pc_b412:                                ; preds = %dec_label_pc_b3f0
  %v1_b412 = inttoptr i32 %v2_b405 to i32*
  %v2_b412 = load i32, i32* %v1_b412, align 4
  store i32 %v2_b412, i32* @ebx, align 4
  ret i32 %v2_b405

; uselistorder directives
  uselistorder i32 %v2_b405, { 2, 1, 0 }
}

define i32 @function_b420(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b420:
  %v1_b424 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b424 = xor i32 %v1_b424, %arg1
  %v3_b424 = icmp eq i32 %v2_b424, 0
  %v1_b42b = icmp eq i1 %v3_b424, false
  br i1 %v1_b42b, label %dec_label_pc_b433, label %dec_label_pc_b42d

dec_label_pc_b42d:                                ; preds = %dec_label_pc_b420
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  ret i32 %v2_b424

dec_label_pc_b433:                                ; preds = %dec_label_pc_b420
  ret i32 %v2_b424

; uselistorder directives
  uselistorder i32 %v2_b424, { 1, 0, 2 }
}

define i32 @_ZNSt6vectorIjSaIjEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b440:
  %v0_b443 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b453 = load i32, i32* %arg1, align 4
  store i32 %v2_b453, i32* @eax, align 8
  %v1_b455 = icmp eq i32 %v2_b453, 0
  br i1 %v1_b455, label %bb, label %dec_label_pc_b459

bb:                                               ; preds = %dec_label_pc_b440
  %v2_b457 = call i32 @function_b478(i32 %v0_b443)
  store i32 %v2_b457, i32* @eax, align 8
  br label %dec_label_pc_b459

dec_label_pc_b459:                                ; preds = %bb, %dec_label_pc_b440
  %v17_b46a2 = phi i32 [ %v2_b457, %bb ], [ %v2_b453, %dec_label_pc_b440 ]
  br i1 false, label %bb103, label %dec_label_pc_b466

bb103:                                            ; preds = %dec_label_pc_b459
  br label %dec_label_pc_b466

dec_label_pc_b466:                                ; preds = %bb103, %dec_label_pc_b459
  ret i32 %v17_b46a2
}

define i32 @function_b478(i32 %arg1) local_unnamed_addr {
dec_label_pc_b478:
  %v1_b47c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b47c = xor i32 %v1_b47c, %arg1
  %v3_b47c = icmp eq i32 %v2_b47c, 0
  store i32 %v2_b47c, i32* @eax, align 8
  %v1_b483 = icmp eq i1 %v3_b47c, false
  br i1 %v1_b483, label %bb, label %dec_label_pc_b485

bb:                                               ; preds = %dec_label_pc_b478
  %v2_b483 = call i32 @function_b489()
  br label %dec_label_pc_b485

dec_label_pc_b485:                                ; preds = %bb, %dec_label_pc_b478
  %v0_b488 = phi i32 [ %v2_b483, %bb ], [ %v2_b47c, %dec_label_pc_b478 ]
  ret i32 %v0_b488
}

define i32 @function_b489() local_unnamed_addr {
dec_label_pc_b489:
  %v1_b489 = load i32, i32* @eax, align 8
  ret i32 %v1_b489
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b4a0:
  store i32 %arg1, i32* @eax, align 8
  %tmp110 = icmp ult i32 %arg2, 11
  br i1 %tmp110, label %dec_label_pc_b4bb, label %dec_label_pc_b4d0

dec_label_pc_b4bb:                                ; preds = %dec_label_pc_b4a0
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_b4c8

bb:                                               ; preds = %dec_label_pc_b4bb
  br label %dec_label_pc_b4c8

dec_label_pc_b4c8:                                ; preds = %bb, %dec_label_pc_b4bb
  ret i32 0

dec_label_pc_b4d0:                                ; preds = %dec_label_pc_b4a0
  br i1 false, label %bb108, label %dec_label_pc_b4e2

bb108:                                            ; preds = %dec_label_pc_b4d0
  br label %dec_label_pc_b4e2

dec_label_pc_b4e2:                                ; preds = %bb108, %dec_label_pc_b4d0
  ret i32 %arg1
}

define i32 @function_b4ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_b4ee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE7disposeEv(i32 %arg1) {
dec_label_pc_b500:
  store i32 %arg1, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_b521

bb:                                               ; preds = %dec_label_pc_b500
  br label %dec_label_pc_b521

dec_label_pc_b521:                                ; preds = %bb, %dec_label_pc_b500
  %v1_b521 = add i32 %arg1, 12
  %v2_b521 = inttoptr i32 %v1_b521 to i32*
  %v3_b521 = load i32, i32* %v2_b521, align 4
  ret i32 %v3_b521
}

define i32 @function_b530(i32 %arg1) local_unnamed_addr {
dec_label_pc_b530:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISt4pairIx4CInvESaIS2_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b540:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_b540 = load i32, i32* %edi.global-to-local, align 4
  %v0_b541 = load i32, i32* %esi.global-to-local, align 4
  %v0_b542 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %edi.global-to-local, align 4
  %v0_b54a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b556 = load i32, i32* %arg1, align 4
  store i32 %v2_b556, i32* @eax, align 8
  %v1_b558 = icmp eq i32 %v2_b556, 0
  br i1 %v1_b558, label %bb, label %dec_label_pc_b55c

bb:                                               ; preds = %dec_label_pc_b540
  %v5_b55a = call i32 @function_b5a0(i32 %v0_b54a, i32 %v0_b542, i32 %v0_b541, i32 %v0_b540)
  store i32 %v5_b55a, i32* @eax, align 8
  %v0_b55c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_b55c

dec_label_pc_b55c:                                ; preds = %bb, %dec_label_pc_b540
  %v0_b55c = phi i32 [ %v0_b55c.pre, %bb ], [ %tmp101, %dec_label_pc_b540 ]
  %v1_b55c = add i32 %v0_b55c, 36
  %v2_b55c = inttoptr i32 %v1_b55c to i32*
  %v3_b55c = load i32, i32* %v2_b55c, align 4
  store i32 %v3_b55c, i32* %esi.global-to-local, align 4
  %v1_b55f = add i32 %v0_b55c, 20
  %v2_b55f = inttoptr i32 %v1_b55f to i32*
  %v3_b55f = load i32, i32* %v2_b55f, align 4
  store i32 %v3_b55f, i32* %ebx.global-to-local, align 4
  %v1_b562 = add i32 %v3_b55c, 4
  store i32 %v1_b562, i32* %esi.global-to-local, align 4
  %tmp108 = icmp ugt i32 %v1_b562, %v3_b55f
  br i1 %tmp108, label %dec_label_pc_b569, label %bb106

bb106:                                            ; preds = %dec_label_pc_b55c
  %v3_b567 = call i32 @function_b583()
  %v0_b570.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_b569

dec_label_pc_b569:                                ; preds = %dec_label_pc_b55c, %bb106
  %v0_b570 = phi i32 [ %v0_b570.pre, %bb106 ], [ %v3_b55f, %dec_label_pc_b55c ]
  %v1_b570 = inttoptr i32 %v0_b570 to i32*
  %v2_b570 = load i32, i32* %v1_b570, align 4
  %v1_b572 = add i32 %v0_b570, 4
  store i32 %v1_b572, i32* %ebx.global-to-local, align 4
  ret i32 %v2_b570

; uselistorder directives
  uselistorder i32 %v0_b570, { 1, 0 }
  uselistorder i32 %v3_b55f, { 1, 0, 2 }
  uselistorder i32 %v0_b55c, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b569, { 1, 0 }
}

define i32 @function_b583() local_unnamed_addr {
dec_label_pc_b583:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_b587 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b587 = icmp eq i32 %v1_b587, %tmp9
  %v1_b58e = icmp eq i1 %v3_b587, false
  br i1 %v1_b58e, label %bb, label %dec_label_pc_b583.dec_label_pc_b590_crit_edge

dec_label_pc_b583.dec_label_pc_b590_crit_edge:    ; preds = %dec_label_pc_b583
  %v5_b599.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b590

bb:                                               ; preds = %dec_label_pc_b583
  %v2_b58e = call i32 @function_b5b4()
  br label %dec_label_pc_b590

dec_label_pc_b590:                                ; preds = %dec_label_pc_b583.dec_label_pc_b590_crit_edge, %bb
  %v5_b599 = phi i32 [ %v2_b58e, %bb ], [ %v5_b599.pre, %dec_label_pc_b583.dec_label_pc_b590_crit_edge ]
  ret i32 %v5_b599

; uselistorder directives
  uselistorder label %dec_label_pc_b590, { 1, 0 }
}

define i32 @function_b5a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b5a0:
  %v1_b5a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b5a4 = xor i32 %v1_b5a4, %arg1
  %v3_b5a4 = icmp eq i32 %v2_b5a4, 0
  store i32 %v2_b5a4, i32* @eax, align 8
  %v1_b5ab = icmp eq i1 %v3_b5a4, false
  br i1 %v1_b5ab, label %bb, label %dec_label_pc_b5ad

bb:                                               ; preds = %dec_label_pc_b5a0
  %v2_b5ab = call i32 @function_b5b4()
  br label %dec_label_pc_b5ad

dec_label_pc_b5ad:                                ; preds = %bb, %dec_label_pc_b5a0
  %v0_b5b3 = phi i32 [ %v2_b5ab, %bb ], [ %v2_b5a4, %dec_label_pc_b5a0 ]
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v0_b5b3

; uselistorder directives
  uselistorder i32 ()* @function_b5b4, { 1, 0 }
}

define i32 @function_b5b4() local_unnamed_addr {
dec_label_pc_b5b4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost17bad_function_callD1Ev(i32* %arg1) {
dec_label_pc_b5c0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b5c0.dec_label_pc_b5e7_crit_edge

dec_label_pc_b5c0.dec_label_pc_b5e7_crit_edge:    ; preds = %dec_label_pc_b5c0
  %v17_b5eb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b5e7

bb:                                               ; preds = %dec_label_pc_b5c0
  br label %dec_label_pc_b5e7

dec_label_pc_b5e7:                                ; preds = %dec_label_pc_b5c0.dec_label_pc_b5e7_crit_edge, %bb
  %v17_b5eb = phi i32 [ %v17_b5eb.pre, %dec_label_pc_b5c0.dec_label_pc_b5e7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b5eb

; uselistorder directives
  uselistorder label %dec_label_pc_b5e7, { 1, 0 }
}

define i32 @function_b5f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_b5f3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_b600:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_277f0_type* @global_var_277f0.2584 to i32), i32* %arg1, align 4
  %v1_b61a = add i32 %tmp98, 16
  ret i32 %v1_b61a
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_b650:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_b650.dec_label_pc_b677_crit_edge

dec_label_pc_b650.dec_label_pc_b677_crit_edge:    ; preds = %dec_label_pc_b650
  %v17_b67b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_b677

bb:                                               ; preds = %dec_label_pc_b650
  br label %dec_label_pc_b677

dec_label_pc_b677:                                ; preds = %dec_label_pc_b650.dec_label_pc_b677_crit_edge, %bb
  %v17_b67b = phi i32 [ %v17_b67b.pre, %dec_label_pc_b650.dec_label_pc_b677_crit_edge ], [ undef, %bb ]
  ret i32 %v17_b67b

; uselistorder directives
  uselistorder label %dec_label_pc_b677, { 1, 0 }
}

define i32 @function_b683(i32 %arg1) local_unnamed_addr {
dec_label_pc_b683:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_b690:
  %v4_b690 = add i32 %arg1, -24
  %v1_b695 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_b690)
  ret i32 %v1_b695
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_b6a0:
  ret i32 0
}

define i32 @function_b6c2() local_unnamed_addr {
dec_label_pc_b6c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_b6c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b6c2
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthD1Ev(i32* %arg1) {
dec_label_pc_d220:
  %eax.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 %tmp98, i32* %eax.global-to-local, align 8
  store i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_d253, label %dec_label_pc_d247

dec_label_pc_d247:                                ; preds = %dec_label_pc_d220
  br label %dec_label_pc_d253

dec_label_pc_d253:                                ; preds = %dec_label_pc_d247, %dec_label_pc_d220
  %v0_d24e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d24e
}

define i32 @_ZN5boost9gregorian8bad_yearD1Ev(i32* %arg1) {
dec_label_pc_d260:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d260.dec_label_pc_d287_crit_edge

dec_label_pc_d260.dec_label_pc_d287_crit_edge:    ; preds = %dec_label_pc_d260
  %v17_d28b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_d287

bb:                                               ; preds = %dec_label_pc_d260
  br label %dec_label_pc_d287

dec_label_pc_d287:                                ; preds = %dec_label_pc_d260.dec_label_pc_d287_crit_edge, %bb
  %v17_d28b = phi i32 [ %v17_d28b.pre, %dec_label_pc_d260.dec_label_pc_d287_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d28b

; uselistorder directives
  uselistorder label %dec_label_pc_d287, { 1, 0 }
}

define i32 @function_d293(i32 %arg1) local_unnamed_addr {
dec_label_pc_d293:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost9gregorian9bad_monthD1Ev(i32* %arg1) {
dec_label_pc_d2a0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d2a0.dec_label_pc_d2c7_crit_edge

dec_label_pc_d2a0.dec_label_pc_d2c7_crit_edge:    ; preds = %dec_label_pc_d2a0
  %v17_d2cb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_d2c7

bb:                                               ; preds = %dec_label_pc_d2a0
  br label %dec_label_pc_d2c7

dec_label_pc_d2c7:                                ; preds = %dec_label_pc_d2a0.dec_label_pc_d2c7_crit_edge, %bb
  %v17_d2cb = phi i32 [ %v17_d2cb.pre, %dec_label_pc_d2a0.dec_label_pc_d2c7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d2cb

; uselistorder directives
  uselistorder label %dec_label_pc_d2c7, { 1, 0 }
}

define i32 @function_d2d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_d2d3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_d2e0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31588_type* @global_var_31588.2589 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d2e0.dec_label_pc_d307_crit_edge

dec_label_pc_d2e0.dec_label_pc_d307_crit_edge:    ; preds = %dec_label_pc_d2e0
  %v17_d30b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_d307

bb:                                               ; preds = %dec_label_pc_d2e0
  br label %dec_label_pc_d307

dec_label_pc_d307:                                ; preds = %dec_label_pc_d2e0.dec_label_pc_d307_crit_edge, %bb
  %v17_d30b = phi i32 [ %v17_d30b.pre, %dec_label_pc_d2e0.dec_label_pc_d307_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d30b

; uselistorder directives
  uselistorder label %dec_label_pc_d307, { 1, 0 }
}

define i32 @function_d313(i32 %arg1) local_unnamed_addr {
dec_label_pc_d313:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED1Ev(i32* %arg1) {
dec_label_pc_d320:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31490_type* @global_var_31490.2590 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d320.dec_label_pc_d347_crit_edge

dec_label_pc_d320.dec_label_pc_d347_crit_edge:    ; preds = %dec_label_pc_d320
  %v17_d34b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_d347

bb:                                               ; preds = %dec_label_pc_d320
  br label %dec_label_pc_d347

dec_label_pc_d347:                                ; preds = %dec_label_pc_d320.dec_label_pc_d347_crit_edge, %bb
  %v17_d34b = phi i32 [ %v17_d34b.pre, %dec_label_pc_d320.dec_label_pc_d347_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d34b

; uselistorder directives
  uselistorder label %dec_label_pc_d347, { 1, 0 }
}

define i32 @function_d353(i32 %arg1) local_unnamed_addr {
dec_label_pc_d353:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_Z11TraceThreadIPFvvEEvPKcT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d360:
  ret i32 0
}

define i32 @function_d3d4() local_unnamed_addr {
dec_label_pc_d3d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_d3db(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d3db:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_d3db = load i32, i32* %ebx.global-to-local, align 4
  %v1_d3db = add i32 %v0_d3db, 1696343108
  %v2_d3db = inttoptr i32 %v1_d3db to i32*
  %v3_d3db = load i32, i32* %v2_d3db, align 4
  %v4_d3db = add i32 %v3_d3db, -1
  store i32 %v4_d3db, i32* %v2_d3db, align 4
  %v0_d3e1 = load i32, i32* %eax.global-to-local, align 8
  %v1_d3e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d3e1 = xor i32 %v1_d3e1, %v0_d3e1
  %v3_d3e1 = icmp eq i32 %v2_d3e1, 0
  store i32 %v2_d3e1, i32* @eax, align 8
  %v1_d3e7 = icmp eq i1 %v3_d3e1, false
  br i1 %v1_d3e7, label %dec_label_pc_d3f9, label %dec_label_pc_d3e9

dec_label_pc_d3e9:                                ; preds = %dec_label_pc_d3db
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_d3e1

dec_label_pc_d3f9:                                ; preds = %dec_label_pc_d3db
  %v0_d3fe = load i32, i32* %edx.global-to-local, align 4
  %v10_d3fe = icmp eq i32 %v0_d3fe, 1
  br i1 %v10_d3fe, label %bb, label %dec_label_pc_d403

bb:                                               ; preds = %dec_label_pc_d3f9
  %v1_d401 = call i32 @function_d460()
  store i32 %v1_d401, i32* @eax, align 8
  %v0_d403.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_d403

dec_label_pc_d403:                                ; preds = %bb, %dec_label_pc_d3f9
  %v3_d4083 = phi i32 [ %v1_d401, %bb ], [ %v2_d3e1, %dec_label_pc_d3f9 ]
  %v0_d403 = phi i32 [ %v0_d403.pre, %bb ], [ %v0_d3fe, %dec_label_pc_d3f9 ]
  %v10_d403 = icmp eq i32 %v0_d403, 2
  br i1 %v10_d403, label %bb107, label %dec_label_pc_d408

bb107:                                            ; preds = %dec_label_pc_d403
  %v1_d406 = call i32 @function_d442()
  store i32 %v1_d406, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %bb107, %dec_label_pc_d403
  %v3_d408 = phi i32 [ %v1_d406, %bb107 ], [ %v3_d4083, %dec_label_pc_d403 ]
  ret i32 %v3_d408

; uselistorder directives
  uselistorder i32 %v0_d3fe, { 1, 0 }
}

define i32 @function_d425() local_unnamed_addr {
dec_label_pc_d425:
  %v0_d425 = call i32 @function_d3d4()
  ret i32 %v0_d425
}

define i32 @function_d428() local_unnamed_addr {
dec_label_pc_d428:
  %eax.global-to-local = alloca i32, align 4
  %v0_d428 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d428
}

define i32 @function_d429() local_unnamed_addr {
dec_label_pc_d429:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_d43a() local_unnamed_addr {
dec_label_pc_d43a:
  %eax.global-to-local = alloca i32, align 4
  %v0_d43a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d43a
}

define i32 @function_d440() local_unnamed_addr {
dec_label_pc_d440:
  %v0_d440 = call i32 @function_d429()
  ret i32 %v0_d440
}

define i32 @function_d442() local_unnamed_addr {
dec_label_pc_d442:
  %v3_d442 = load i32, i32* @eax, align 8
  ret i32 %v3_d442
}

define i32 @function_d456() local_unnamed_addr {
dec_label_pc_d456:
  %v0_d45b = call i32 @function_d3d4()
  ret i32 %v0_d45b

; uselistorder directives
  uselistorder i32 ()* @function_d3d4, { 1, 0 }
}

define i32 @function_d460() local_unnamed_addr {
dec_label_pc_d460:
  %v3_d460 = load i32, i32* @eax, align 8
  ret i32 %v3_d460
}

define i32 @function_d47d() local_unnamed_addr {
dec_label_pc_d47d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_d47e() local_unnamed_addr {
dec_label_pc_d47e:
  %eax.global-to-local = alloca i32, align 4
  %v0_d47e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d47e
}

define i32 @function_d484() local_unnamed_addr {
dec_label_pc_d484:
  %v0_d484 = call i32 @function_d429()
  ret i32 %v0_d484

; uselistorder directives
  uselistorder i32 ()* @function_d429, { 1, 0 }
}

define i32 @function_d486() local_unnamed_addr {
dec_label_pc_d486:
  %v0_d486 = call i32 @function_d47d()
  ret i32 %v0_d486
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25() local_unnamed_addr {
dec_label_pc_e072:
  ret i32 0
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26() local_unnamed_addr {
dec_label_pc_e0a6:
  ret i32 0
}

define i32 @_ZN5boost5mutexD2Ev.part.27() local_unnamed_addr {
dec_label_pc_e0da:
  ret i32 0
}

define i32 @_ZN5boost5mutex6unlockEv.part.28() local_unnamed_addr {
dec_label_pc_e10e:
  ret i32 0
}

define i32 @_ZN5boost18condition_variableD2Ev.part.29() local_unnamed_addr {
dec_label_pc_e142:
  ret i32 0
}

define i32 @_ZN5boost18condition_variable10notify_oneEv.part.32() local_unnamed_addr {
dec_label_pc_e176:
  ret i32 0
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED2Ev.part.33() local_unnamed_addr {
dec_label_pc_e1aa:
  ret i32 0
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv.part.106() local_unnamed_addr {
dec_label_pc_e1de:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.414.part.415() local_unnamed_addr {
dec_label_pc_e212:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEptEv.isra.455.part.456() local_unnamed_addr {
dec_label_pc_e246:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.522.part.523() local_unnamed_addr {
dec_label_pc_e27a:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEptEv.isra.525.part.526() local_unnamed_addr {
dec_label_pc_e2ae:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.682() local_unnamed_addr {
dec_label_pc_e2e2:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSB_EEEEENS1_5mutexEEEEptEv.isra.715.part.716() local_unnamed_addr {
dec_label_pc_e316:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSB_bEEEEENS1_5mutexEEEEptEv.isra.717.part.718() local_unnamed_addr {
dec_label_pc_e34a:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.745() local_unnamed_addr {
dec_label_pc_e37e:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.793() local_unnamed_addr {
dec_label_pc_e3b2:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.797() local_unnamed_addr {
dec_label_pc_e3e6:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv.isra.981.part.982() local_unnamed_addr {
dec_label_pc_e41a:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEptEv.isra.1050.part.1051() local_unnamed_addr {
dec_label_pc_e44e:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED2Ev.part.1104() local_unnamed_addr {
dec_label_pc_e482:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED2Ev.part.1109() local_unnamed_addr {
dec_label_pc_e4b6:
  ret i32 0
}

define i32 @_ZN11CDataStream5writeEPKci.part.1144() local_unnamed_addr {
dec_label_pc_e4ea:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EEC2Ev.part.1391() local_unnamed_addr {
dec_label_pc_e51e:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE.isra.1555.part.1556() local_unnamed_addr {
dec_label_pc_e552:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv.part.1557() local_unnamed_addr {
dec_label_pc_e586:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED2Ev.part.1559() local_unnamed_addr {
dec_label_pc_e5ba:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_.part.1603() local_unnamed_addr {
dec_label_pc_e5ee:
  ret i32 0
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE.isra.542() local_unnamed_addr {
dec_label_pc_e621:
  %stack_var_-17 = alloca i32, align 4
  %v2_e635 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_e635
}

define i32 @function_e697(i16 %arg1) local_unnamed_addr {
dec_label_pc_e697:
  %eax.global-to-local = alloca i32, align 4
  %v0_e697 = load i32, i32* %eax.global-to-local, align 8
  %v11_e697 = and i32 %v0_e697, -24
  store i32 %v11_e697, i32* %eax.global-to-local, align 8
  ret i32 %v11_e697

; uselistorder directives
  uselistorder i32 %v11_e697, { 1, 0 }
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE.isra.1123() local_unnamed_addr {
dec_label_pc_e6a9:
  %stack_var_-17 = alloca i32, align 4
  %v2_e6bd = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_e6bd
}

define i32 @function_e71f(i16 %arg1) local_unnamed_addr {
dec_label_pc_e71f:
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp93
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE.isra.1124() local_unnamed_addr {
dec_label_pc_e731:
  %stack_var_-17 = alloca i32, align 4
  %v2_e745 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_e745
}

define i32 @function_e7a7(i16 %arg1) local_unnamed_addr {
dec_label_pc_e7a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_e7a7 = load i32, i32* %eax.global-to-local, align 8
  %v11_e7a7 = and i32 %v0_e7a7, -24
  store i32 %v11_e7a7, i32* %eax.global-to-local, align 8
  ret i32 %v11_e7a7

; uselistorder directives
  uselistorder i32 %v11_e7a7, { 1, 0 }
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e7c0:
  ret i32 0
}

define i32 @function_e7db() local_unnamed_addr {
dec_label_pc_e7db:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_e7db = add i32 %tmp91, -2094959168
  %v2_e7db = inttoptr i32 %v1_e7db to i32*
  %v3_e7db = load i32, i32* %v2_e7db, align 4
  %v4_e7db = add i32 %v3_e7db, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_e7db, i32* %v2_e7db, align 4
  %v0_e7e1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e7e1
}

define i32 @function_e7ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_e7ea:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_e7ea = load i32, i32* %ebp.global-to-local, align 4
  %v1_e7ea = add i32 %v0_e7ea, -1961069120
  %v2_e7ea = inttoptr i32 %v1_e7ea to i32*
  %v3_e7ea = load i32, i32* %v2_e7ea, align 4
  %v4_e7ea = add i32 %v3_e7ea, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_e7ea, i32* %v2_e7ea, align 4
  %v0_e7f1 = load i32, i32* %eax.global-to-local, align 8
  %v11_e7f1 = and i32 %v0_e7f1, -228
  store i32 %v11_e7f1, i32* %eax.global-to-local, align 8
  %v1_e7f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e7f3 = xor i32 %v1_e7f3, %v11_e7f1
  %v3_e7f3 = icmp eq i32 %v2_e7f3, 0
  store i32 %v2_e7f3, i32* %eax.global-to-local, align 8
  %v1_e7fa = icmp eq i1 %v3_e7f3, false
  br i1 %v1_e7fa, label %dec_label_pc_e806, label %dec_label_pc_e7fc

dec_label_pc_e7fc:                                ; preds = %dec_label_pc_e7ea
  ret i32 %v2_e7f3

dec_label_pc_e806:                                ; preds = %dec_label_pc_e7ea
  ret i32 %v2_e7f3

; uselistorder directives
  uselistorder i32 %v2_e7f3, { 1, 0, 2, 3 }
}

define i32 @function_e801() local_unnamed_addr {
dec_label_pc_e801:
  %v0_e801 = call i32 @function_1c96a()
  ret i32 %v0_e801
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e830:
  store i32 ptrtoint (%vtable_31490_type* @global_var_31490.2590 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_31490_type* @global_var_31490.2590 to i32), { 1, 0 }
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e880:
  store i32 ptrtoint (%vtable_31588_type* @global_var_31588.2589 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_31588_type* @global_var_31588.2589 to i32), { 1, 0 }
}

define i32 @_ZN5boost9gregorian8bad_yearD0Ev(i32* %arg1) {
dec_label_pc_e8d0:
  store i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost9gregorian9bad_monthD0Ev(i32* %arg1) {
dec_label_pc_e920:
  store i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthD0Ev(i32* %arg1) {
dec_label_pc_e970:
  store i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost21thread_resource_errorD1Ev(i32* %arg1) {
dec_label_pc_e9c0:
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* @eax, align 8
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e9c0.dec_label_pc_e9e7_crit_edge

dec_label_pc_e9c0.dec_label_pc_e9e7_crit_edge:    ; preds = %dec_label_pc_e9c0
  %v17_e9eb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_e9e7

bb:                                               ; preds = %dec_label_pc_e9c0
  br label %dec_label_pc_e9e7

dec_label_pc_e9e7:                                ; preds = %dec_label_pc_e9c0.dec_label_pc_e9e7_crit_edge, %bb
  %v17_e9eb = phi i32 [ %v17_e9eb.pre, %dec_label_pc_e9c0.dec_label_pc_e9e7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e9eb

; uselistorder directives
  uselistorder label %dec_label_pc_e9e7, { 1, 0 }
}

define i32 @function_e9f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_e9f3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost17bad_function_callD0Ev(i32* %arg1) {
dec_label_pc_ea00:
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_ea50:
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* @eax, align 8
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_ea50.dec_label_pc_ea77_crit_edge

dec_label_pc_ea50.dec_label_pc_ea77_crit_edge:    ; preds = %dec_label_pc_ea50
  %v17_ea7b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_ea77

bb:                                               ; preds = %dec_label_pc_ea50
  br label %dec_label_pc_ea77

dec_label_pc_ea77:                                ; preds = %dec_label_pc_ea50.dec_label_pc_ea77_crit_edge, %bb
  %v17_ea7b = phi i32 [ %v17_ea7b.pre, %dec_label_pc_ea50.dec_label_pc_ea77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_ea7b

; uselistorder directives
  uselistorder label %dec_label_pc_ea77, { 1, 0 }
}

define i32 @function_ea83(i32 %arg1) local_unnamed_addr {
dec_label_pc_ea83:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32* %arg1) {
dec_label_pc_ea90:
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZNSt6vectorIP5CNodeSaIS1_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_eae0:
  %v0_eae3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_eaf3 = load i32, i32* %arg1, align 4
  store i32 %v2_eaf3, i32* @eax, align 8
  %v1_eaf5 = icmp eq i32 %v2_eaf3, 0
  br i1 %v1_eaf5, label %bb, label %dec_label_pc_eaf9

bb:                                               ; preds = %dec_label_pc_eae0
  %v2_eaf7 = call i32 @function_eb18(i32 %v0_eae3)
  store i32 %v2_eaf7, i32* @eax, align 8
  br label %dec_label_pc_eaf9

dec_label_pc_eaf9:                                ; preds = %bb, %dec_label_pc_eae0
  %v17_eb0a2 = phi i32 [ %v2_eaf7, %bb ], [ %v2_eaf3, %dec_label_pc_eae0 ]
  br i1 false, label %bb103, label %dec_label_pc_eb06

bb103:                                            ; preds = %dec_label_pc_eaf9
  br label %dec_label_pc_eb06

dec_label_pc_eb06:                                ; preds = %bb103, %dec_label_pc_eaf9
  ret i32 %v17_eb0a2
}

define i32 @function_eb18(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb18:
  %v1_eb1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_eb1c = xor i32 %v1_eb1c, %arg1
  %v3_eb1c = icmp eq i32 %v2_eb1c, 0
  store i32 %v2_eb1c, i32* @eax, align 8
  %v1_eb23 = icmp eq i1 %v3_eb1c, false
  br i1 %v1_eb23, label %bb, label %dec_label_pc_eb25

bb:                                               ; preds = %dec_label_pc_eb18
  %v2_eb23 = call i32 @function_eb29()
  br label %dec_label_pc_eb25

dec_label_pc_eb25:                                ; preds = %bb, %dec_label_pc_eb18
  %v0_eb28 = phi i32 [ %v2_eb23, %bb ], [ %v2_eb1c, %dec_label_pc_eb18 ]
  ret i32 %v0_eb28
}

define i32 @function_eb29() local_unnamed_addr {
dec_label_pc_eb29:
  %v1_eb29 = load i32, i32* @eax, align 8
  ret i32 %v1_eb29
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32* %arg1) {
dec_label_pc_eb40:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_277f0_type* @global_var_277f0.2584 to i32), i32* %arg1, align 4
  %v1_eb5a = add i32 %tmp98, 16
  ret i32 %v1_eb5a

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_277f0_type* @global_var_277f0.2584 to i32), { 1, 0 }
}

define i32 @_ZN5boost21thread_resource_errorD0Ev(i32* %arg1) {
dec_label_pc_eb90:
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost10lock_errorD0Ev(i32* %arg1) {
dec_label_pc_ebe0:
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZNSt6vectorISsSaISsEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_ec30:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v0_ec30 = load i32, i32* @edi, align 4
  %v0_ec31 = load i32, i32* @esi, align 4
  %v0_ec32 = load i32, i32* @ebx, align 4
  %v0_ec3a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_ec46 = add i32 %tmp4, 4
  %v2_ec46 = inttoptr i32 %v1_ec46 to i32*
  %v3_ec46 = load i32, i32* %v2_ec46, align 4
  %v2_ec49 = load i32, i32* %arg1, align 4
  store i32 %v2_ec49, i32* @ebx, align 4
  %v12_ec4b = icmp eq i32 %v3_ec46, %v2_ec49
  br i1 %v12_ec4b, label %bb, label %dec_label_pc_ec4f

bb:                                               ; preds = %dec_label_pc_ec30
  %v5_ec4d = call i32 @function_ec61(i32 %v0_ec3a, i32 %v0_ec32, i32 %v0_ec31, i32 %v0_ec30)
  br label %dec_label_pc_ec4f

dec_label_pc_ec4f:                                ; preds = %bb, %dec_label_pc_ec30
  %v16_ec53 = phi i32 [ %v5_ec4d, %bb ], [ 0, %dec_label_pc_ec30 ]
  ret i32 %v16_ec53
}

define i32 @function_ec61(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ec61:
  %v0_ec61 = load i32, i32* @ebx, align 4
  %v1_ec61 = icmp eq i32 %v0_ec61, 0
  br i1 %v1_ec61, label %bb, label %dec_label_pc_ec65

bb:                                               ; preds = %dec_label_pc_ec61
  %v1_ec63 = call i32 @function_ec88()
  br label %dec_label_pc_ec65

dec_label_pc_ec65:                                ; preds = %bb, %dec_label_pc_ec61
  %v1_ec69 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ec69 = xor i32 %v1_ec69, %arg1
  %v3_ec69 = icmp eq i32 %v2_ec69, 0
  store i32 %v2_ec69, i32* @eax, align 8
  %v1_ec70 = icmp eq i1 %v3_ec69, false
  br i1 %v1_ec70, label %bb7, label %dec_label_pc_ec72

bb7:                                              ; preds = %dec_label_pc_ec65
  %v2_ec70 = call i32 @function_ec9c()
  br label %dec_label_pc_ec72

dec_label_pc_ec72:                                ; preds = %bb7, %dec_label_pc_ec65
  %v5_ec7b = phi i32 [ %v2_ec70, %bb7 ], [ %v2_ec69, %dec_label_pc_ec65 ]
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v5_ec7b
}

define i32 @function_ec88() local_unnamed_addr {
dec_label_pc_ec88:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_ec8c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ec8c = xor i32 %v1_ec8c, %tmp8
  %v3_ec8c = icmp eq i32 %v2_ec8c, 0
  store i32 %v2_ec8c, i32* @eax, align 8
  %v1_ec93 = icmp eq i1 %v3_ec8c, false
  br i1 %v1_ec93, label %bb, label %dec_label_pc_ec95

bb:                                               ; preds = %dec_label_pc_ec88
  %v2_ec93 = call i32 @function_ec9c()
  br label %dec_label_pc_ec95

dec_label_pc_ec95:                                ; preds = %bb, %dec_label_pc_ec88
  %v0_ec9b = phi i32 [ %v2_ec93, %bb ], [ %v2_ec8c, %dec_label_pc_ec88 ]
  ret i32 %v0_ec9b

; uselistorder directives
  uselistorder i32 ()* @function_ec9c, { 1, 0 }
}

define i32 @function_ec9c() local_unnamed_addr {
dec_label_pc_ec9c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISsSaISsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ecb0:
  %v1_eccc = add i32 %arg1, 24
  %v2_eccc = inttoptr i32 %v1_eccc to i32*
  %v3_eccc = load i32, i32* %v2_eccc, align 4
  %v1_ecdb = add i32 %arg1, 28
  %v2_ecdb = inttoptr i32 %v1_ecdb to i32*
  %v3_ecdb = load i32, i32* %v2_ecdb, align 4
  %v1_ecde = add i32 %arg1, 36
  %v2_ecde = inttoptr i32 %v1_ecde to i32*
  %v3_ecde = load i32, i32* %v2_ecde, align 4
  %v1_eced = add i32 %arg1, 8
  %v2_eced = inttoptr i32 %v1_eced to i32*
  %v3_eced = load i32, i32* %v2_eced, align 4
  store i32 %v3_eced, i32* @ebp, align 4
  %v1_ecf0 = add i32 %arg1, 16
  %v2_ecf0 = inttoptr i32 %v1_ecf0 to i32*
  %v3_ecf0 = load i32, i32* %v2_ecf0, align 4
  %v1_ecf3 = add i32 %arg1, 20
  %v2_ecf3 = inttoptr i32 %v1_ecf3 to i32*
  %v3_ecf3 = load i32, i32* %v2_ecf3, align 4
  %v1_ecfc = add i32 %v3_ecf3, 4
  store i32 %v1_ecfc, i32* @edi, align 4
  %tmp113 = icmp ugt i32 %v3_ecde, %v1_ecfc
  br i1 %tmp113, label %dec_label_pc_ed09, label %bb

bb:                                               ; preds = %dec_label_pc_ecb0
  %v9_ed07 = call i32 @function_ed3a(i32 %arg1, i32 %v3_ecde, i32 %v3_ecf3, i32 %v3_eccc, i32 %v3_ecf0, i32 %v3_ecdb)
  br label %dec_label_pc_ed09

dec_label_pc_ed09:                                ; preds = %dec_label_pc_ecb0, %bb
  %v16_ed23 = phi i32 [ %v9_ed07, %bb ], [ %v3_ecf0, %dec_label_pc_ecb0 ]
  ret i32 %v16_ed23

; uselistorder directives
  uselistorder i32 %v3_ecde, { 1, 0 }
  uselistorder i32 %arg1, { 6, 0, 4, 5, 3, 2, 1 }
  uselistorder label %dec_label_pc_ed09, { 1, 0 }
}

define i32 @function_ed3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_ed3a:
  store i32 %arg2, i32* @eax, align 8
  %v15_ed3e = icmp eq i32 %arg1, %arg2
  br i1 %v15_ed3e, label %bb, label %dec_label_pc_ed48

bb:                                               ; preds = %dec_label_pc_ed3a
  %v1_ed42 = call i32 @function_edd4()
  store i32 %v1_ed42, i32* @eax, align 8
  br label %dec_label_pc_ed48

dec_label_pc_ed48:                                ; preds = %bb, %dec_label_pc_ed3a
  %v16_ed5b3 = phi i32 [ %v1_ed42, %bb ], [ %arg2, %dec_label_pc_ed3a ]
  %v0_ed48 = load i32, i32* @ebp, align 4
  %v15_ed48 = icmp eq i32 %v0_ed48, %arg3
  br i1 %v15_ed48, label %bb7, label %dec_label_pc_ed4e

bb7:                                              ; preds = %dec_label_pc_ed48
  %v1_ed4c = call i32 @function_ed67()
  br label %dec_label_pc_ed4e

dec_label_pc_ed4e:                                ; preds = %bb7, %dec_label_pc_ed48
  %v16_ed5b = phi i32 [ %v1_ed4c, %bb7 ], [ %v16_ed5b3, %dec_label_pc_ed48 ]
  ret i32 %v16_ed5b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_ed64() local_unnamed_addr {
dec_label_pc_ed64:
  %eax.global-to-local = alloca i32, align 4
  %v0_ed64 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_ed64
}

define i32 @function_ed67() local_unnamed_addr {
dec_label_pc_ed67:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v15_ed6b = icmp eq i32 %tmp3, %tmp4
  br i1 %v15_ed6b, label %bb, label %dec_label_pc_ed67.dec_label_pc_ed71_crit_edge

dec_label_pc_ed67.dec_label_pc_ed71_crit_edge:    ; preds = %dec_label_pc_ed67
  %v16_ed7b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_ed71

bb:                                               ; preds = %dec_label_pc_ed67
  %v1_ed6f = call i32 @function_ed87()
  br label %dec_label_pc_ed71

dec_label_pc_ed71:                                ; preds = %dec_label_pc_ed67.dec_label_pc_ed71_crit_edge, %bb
  %v16_ed7b = phi i32 [ %v1_ed6f, %bb ], [ %v16_ed7b.pre, %dec_label_pc_ed67.dec_label_pc_ed71_crit_edge ]
  ret i32 %v16_ed7b

; uselistorder directives
  uselistorder label %dec_label_pc_ed71, { 1, 0 }
}

define i32 @function_ed87() local_unnamed_addr {
dec_label_pc_ed87:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_ed8b = inttoptr i32 %tmp4 to i32*
  %v2_ed8b = load i32, i32* %v1_ed8b, align 4
  store i32 %v2_ed8b, i32* @eax, align 8
  %v1_ed8d = icmp eq i32 %v2_ed8b, 0
  br i1 %v1_ed8d, label %bb, label %dec_label_pc_ed91

bb:                                               ; preds = %dec_label_pc_ed87
  %v1_ed8f = call i32 @function_edf9()
  store i32 %v1_ed8f, i32* @eax, align 8
  %v0_ed91.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_ed91

dec_label_pc_ed91:                                ; preds = %bb, %dec_label_pc_ed87
  %v0_ed91 = phi i32 [ %v0_ed91.pre, %bb ], [ %tmp4, %dec_label_pc_ed87 ]
  %v1_ed91 = add i32 %v0_ed91, 36
  %v2_ed91 = inttoptr i32 %v1_ed91 to i32*
  %v3_ed91 = load i32, i32* %v2_ed91, align 4
  %v1_ed94 = add i32 %v0_ed91, 20
  %v2_ed94 = inttoptr i32 %v1_ed94 to i32*
  %v3_ed94 = load i32, i32* %v2_ed94, align 4
  %v1_ed97 = add i32 %v3_ed91, 4
  %tmp7 = icmp ugt i32 %v1_ed97, %v3_ed94
  br i1 %tmp7, label %dec_label_pc_ed9e, label %bb5

bb5:                                              ; preds = %dec_label_pc_ed91
  %v3_ed9c = call i32 @function_edb7()
  %v0_eda0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_ed9e

dec_label_pc_ed9e:                                ; preds = %dec_label_pc_ed91, %bb5
  %v0_eda0 = phi i32 [ %v0_eda0.pre, %bb5 ], [ %v3_ed94, %dec_label_pc_ed91 ]
  %v1_eda0 = inttoptr i32 %v0_eda0 to i32*
  %v2_eda0 = load i32, i32* %v1_eda0, align 4
  ret i32 %v2_eda0

; uselistorder directives
  uselistorder i32 %v3_ed94, { 1, 0 }
  uselistorder i32 %v0_ed91, { 1, 0 }
  uselistorder label %dec_label_pc_ed9e, { 1, 0 }
}

define i32 @function_edb7() local_unnamed_addr {
dec_label_pc_edb7:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_edbb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_edbb = xor i32 %v1_edbb, %tmp11
  %v3_edbb = icmp eq i32 %v2_edbb, 0
  store i32 %v2_edbb, i32* @edx, align 4
  %v1_edc2 = icmp eq i1 %v3_edbb, false
  br i1 %v1_edc2, label %bb, label %dec_label_pc_edb7.dec_label_pc_edc4_crit_edge

dec_label_pc_edb7.dec_label_pc_edc4_crit_edge:    ; preds = %dec_label_pc_edb7
  %v5_edce.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_edc4

bb:                                               ; preds = %dec_label_pc_edb7
  %v2_edc2 = call i32 @function_ee0e()
  br label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_edb7.dec_label_pc_edc4_crit_edge, %bb
  %v5_edce = phi i32 [ %v2_edc2, %bb ], [ %v5_edce.pre, %dec_label_pc_edb7.dec_label_pc_edc4_crit_edge ]
  ret i32 %v5_edce

; uselistorder directives
  uselistorder label %dec_label_pc_edc4, { 1, 0 }
}

define i32 @function_edd4() local_unnamed_addr {
dec_label_pc_edd4:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v4_edd4 = load i32, i32* @ebp, align 4
  %v15_edd4 = icmp eq i32 %tmp3, %v4_edd4
  br i1 %v15_edd4, label %bb, label %dec_label_pc_edd4.dec_label_pc_edde_crit_edge

dec_label_pc_edd4.dec_label_pc_edde_crit_edge:    ; preds = %dec_label_pc_edd4
  %v16_ede3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_edde

bb:                                               ; preds = %dec_label_pc_edd4
  %v1_eddc = call i32 @function_ed87()
  %v0_ede3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_edde

dec_label_pc_edde:                                ; preds = %dec_label_pc_edd4.dec_label_pc_edde_crit_edge, %bb
  %v16_ede3 = phi i32 [ %v1_eddc, %bb ], [ %v16_ede3.pre, %dec_label_pc_edd4.dec_label_pc_edde_crit_edge ]
  %v0_ede3 = phi i32 [ %v0_ede3.pre, %bb ], [ %v4_edd4, %dec_label_pc_edd4.dec_label_pc_edde_crit_edge ]
  %v1_ede3 = add i32 %v0_ede3, 4
  store i32 %v1_ede3, i32* @ebp, align 4
  ret i32 %v16_ede3

; uselistorder directives
  uselistorder i32 %v4_edd4, { 1, 0 }
  uselistorder i32 ()* @function_ed87, { 1, 0 }
  uselistorder label %dec_label_pc_edde, { 1, 0 }
}

define i32 @function_edec() local_unnamed_addr {
dec_label_pc_edec:
  %v0_edec = call i32 @function_ee63()
  ret i32 %v0_edec
}

define i32 @function_edf9() local_unnamed_addr {
dec_label_pc_edf9:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_edfd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_edfd = xor i32 %v1_edfd, %tmp10
  %v3_edfd = icmp eq i32 %v2_edfd, 0
  store i32 %v2_edfd, i32* @eax, align 8
  %v1_ee04 = icmp eq i1 %v3_edfd, false
  br i1 %v1_ee04, label %bb, label %dec_label_pc_ee06

bb:                                               ; preds = %dec_label_pc_edf9
  %v2_ee04 = call i32 @function_ee0e()
  br label %dec_label_pc_ee06

dec_label_pc_ee06:                                ; preds = %bb, %dec_label_pc_edf9
  %v0_ee0d = phi i32 [ %v2_ee04, %bb ], [ %v2_edfd, %dec_label_pc_edf9 ]
  ret i32 %v0_ee0d

; uselistorder directives
  uselistorder i32 ()* @function_ee0e, { 1, 0 }
}

define i32 @function_ee0e() local_unnamed_addr {
dec_label_pc_ee0e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee20:
  %v4_ee20 = add i32 %arg1, -24
  %v1_ee25 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v4_ee20)
  ret i32 %v1_ee25
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_ee30:
  ret i32 0
}

define i32 @function_ee52() local_unnamed_addr {
dec_label_pc_ee52:
  %eax.global-to-local = alloca i32, align 4
  %v0_ee52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_ee52
}

define i32 @function_ee63() local_unnamed_addr {
dec_label_pc_ee63:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_ee6b = load i32, i32* @esi, align 4
  %v1_ee6b = add i32 %v0_ee6b, 8
  %v2_ee6b = inttoptr i32 %v1_ee6b to i32*
  %v3_ee6b = load i32, i32* %v2_ee6b, align 4
  store i32 %v3_ee6b, i32* %eax.global-to-local, align 8
  %v1_ee72 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ee72 = icmp eq i32 %v1_ee72, %tmp3
  %v0_ee79 = load i32, i32* @ebx, align 4
  %v1_ee79 = inttoptr i32 %v0_ee79 to i32*
  store i32 ptrtoint (%vtable_316e8_type* @global_var_316e8.2640 to i32), i32* %v1_ee79, align 4
  %v0_ee7f = load i32, i32* %eax.global-to-local, align 8
  %v1_ee7f = load i32, i32* @ebx, align 4
  %v2_ee7f = add i32 %v1_ee7f, 8
  %v3_ee7f = inttoptr i32 %v2_ee7f to i32*
  store i32 %v0_ee7f, i32* %v3_ee7f, align 4
  %v0_ee82 = load i32, i32* @esi, align 4
  %v1_ee82 = add i32 %v0_ee82, 12
  %v2_ee82 = inttoptr i32 %v1_ee82 to i32*
  %v3_ee82 = load i32, i32* %v2_ee82, align 4
  store i32 %v3_ee82, i32* %eax.global-to-local, align 8
  %v1_ee85 = load i32, i32* @ebx, align 4
  %v2_ee85 = add i32 %v1_ee85, 12
  %v3_ee85 = inttoptr i32 %v2_ee85 to i32*
  store i32 %v3_ee82, i32* %v3_ee85, align 4
  %v0_ee88 = load i32, i32* @esi, align 4
  %v1_ee88 = add i32 %v0_ee88, 16
  %v2_ee88 = inttoptr i32 %v1_ee88 to i32*
  %v3_ee88 = load i32, i32* %v2_ee88, align 4
  store i32 %v3_ee88, i32* %eax.global-to-local, align 8
  %v0_ee8b = load i32, i32* @ebx, align 4
  %v1_ee8b = add i32 %v0_ee8b, 20
  %v2_ee8b = inttoptr i32 %v1_ee8b to i32*
  store i32 ptrtoint (i32* @global_var_31700.2641 to i32), i32* %v2_ee8b, align 4
  %v0_ee92 = load i32, i32* @ebx, align 4
  %v1_ee92 = add i32 %v0_ee92, 24
  %v2_ee92 = inttoptr i32 %v1_ee92 to i32*
  store i32 ptrtoint (i32* @global_var_31714.2642 to i32), i32* %v2_ee92, align 4
  %v0_ee99 = load i32, i32* %eax.global-to-local, align 8
  %v1_ee99 = load i32, i32* @ebx, align 4
  %v2_ee99 = add i32 %v1_ee99, 16
  %v3_ee99 = inttoptr i32 %v2_ee99 to i32*
  store i32 %v0_ee99, i32* %v3_ee99, align 4
  %v0_ee9c = load i32, i32* @ebx, align 4
  %v1_ee9c = add i32 %v0_ee9c, 24
  store i32 %v1_ee9c, i32* %eax.global-to-local, align 8
  %v1_ee9f = icmp eq i1 %v3_ee72, false
  br i1 %v1_ee9f, label %dec_label_pc_eea7, label %dec_label_pc_eea1

dec_label_pc_eea1:                                ; preds = %dec_label_pc_ee63
  ret i32 %v1_ee9c

dec_label_pc_eea7:                                ; preds = %dec_label_pc_ee63
  ret i32 %v1_ee9c

; uselistorder directives
  uselistorder i32 %v1_ee9c, { 1, 0, 2 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_eec0:
  %v4_eec0 = add i32 %arg1, -28
  %v1_eec5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %v4_eec0)
  ret i32 %v1_eec5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_eed0:
  ret i32 0
}

define i32 @function_eef0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eef0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_eef0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_eef0 = add i32 %v0_eef0, 71732163
  %v2_eef0 = inttoptr i32 %v1_eef0 to i32*
  %v3_eef0 = load i32, i32* %v2_eef0, align 4
  %v4_eef0 = add i32 %v3_eef0, -1
  store i32 %v4_eef0, i32* %v2_eef0, align 4
  %v0_eef6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_eef6 = inttoptr i32 %v0_eef6 to i32*
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %v1_eef6, align 4
  %v0_eefc = load i32, i32* %ebx.global-to-local, align 4
  %v1_eefc = add i32 %v0_eefc, 8
  %v2_eefc = inttoptr i32 %v1_eefc to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_eefc, align 4
  %v0_ef03 = load i32, i32* %eax.global-to-local, align 8
  %v1_ef03 = load i32, i32* %ebx.global-to-local, align 4
  %v2_ef03 = add i32 %v1_ef03, 4
  %v3_ef03 = inttoptr i32 %v2_ef03 to i32*
  store i32 %v0_ef03, i32* %v3_ef03, align 4
  %v0_ef06 = load i32, i32* %esi.global-to-local, align 4
  %v1_ef06 = add i32 %v0_ef06, 12
  %v2_ef06 = inttoptr i32 %v1_ef06 to i32*
  %v3_ef06 = load i32, i32* %v2_ef06, align 4
  store i32 %v3_ef06, i32* %eax.global-to-local, align 8
  %v1_ef09 = icmp eq i32 %v3_ef06, 0
  %v1_ef0b = load i32, i32* %ebx.global-to-local, align 4
  %v2_ef0b = add i32 %v1_ef0b, 12
  %v3_ef0b = inttoptr i32 %v2_ef0b to i32*
  store i32 %v3_ef06, i32* %v3_ef0b, align 4
  br i1 %v1_ef09, label %dec_label_pc_ef18, label %dec_label_pc_ef10

dec_label_pc_ef10:                                ; preds = %dec_label_pc_eef0
  br label %dec_label_pc_ef18

dec_label_pc_ef18:                                ; preds = %dec_label_pc_ef10, %dec_label_pc_eef0
  %v0_ef18 = load i32, i32* %esi.global-to-local, align 4
  %v1_ef18 = add i32 %v0_ef18, 16
  %v2_ef18 = inttoptr i32 %v1_ef18 to i32*
  %v3_ef18 = load i32, i32* %v2_ef18, align 4
  store i32 %v3_ef18, i32* %eax.global-to-local, align 8
  %v1_ef1f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ef1f = icmp eq i32 %v1_ef1f, %arg1
  %v0_ef26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ef26 = add i32 %v0_ef26, 8
  %v2_ef26 = inttoptr i32 %v1_ef26 to i32*
  store i32 ptrtoint (i32* @global_var_30e84.2644 to i32), i32* %v2_ef26, align 4
  %v0_ef2d = load i32, i32* %eax.global-to-local, align 8
  %v1_ef2d = load i32, i32* %ebx.global-to-local, align 4
  %v2_ef2d = add i32 %v1_ef2d, 16
  %v3_ef2d = inttoptr i32 %v2_ef2d to i32*
  store i32 %v0_ef2d, i32* %v3_ef2d, align 4
  %v0_ef30 = load i32, i32* %esi.global-to-local, align 4
  %v1_ef30 = add i32 %v0_ef30, 20
  %v2_ef30 = inttoptr i32 %v1_ef30 to i32*
  %v3_ef30 = load i32, i32* %v2_ef30, align 4
  store i32 %v3_ef30, i32* %eax.global-to-local, align 8
  %v1_ef33 = load i32, i32* %ebx.global-to-local, align 4
  %v2_ef33 = add i32 %v1_ef33, 20
  %v3_ef33 = inttoptr i32 %v2_ef33 to i32*
  store i32 %v3_ef30, i32* %v3_ef33, align 4
  %v0_ef36 = load i32, i32* %esi.global-to-local, align 4
  %v1_ef36 = add i32 %v0_ef36, 24
  %v2_ef36 = inttoptr i32 %v1_ef36 to i32*
  %v3_ef36 = load i32, i32* %v2_ef36, align 4
  store i32 %v3_ef36, i32* %eax.global-to-local, align 8
  %v0_ef39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ef39 = inttoptr i32 %v0_ef39 to i32*
  store i32 ptrtoint (%vtable_30e68_type* @global_var_30e68.2645 to i32), i32* %v1_ef39, align 4
  %v0_ef3f = load i32, i32* %ebx.global-to-local, align 4
  %v1_ef3f = add i32 %v0_ef3f, 28
  %v2_ef3f = inttoptr i32 %v1_ef3f to i32*
  store i32 ptrtoint (i32* @global_var_30e94.2646 to i32), i32* %v2_ef3f, align 4
  %v0_ef46 = load i32, i32* %eax.global-to-local, align 8
  %v1_ef46 = load i32, i32* %ebx.global-to-local, align 4
  %v2_ef46 = add i32 %v1_ef46, 24
  %v3_ef46 = inttoptr i32 %v2_ef46 to i32*
  store i32 %v0_ef46, i32* %v3_ef46, align 4
  %v0_ef49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ef49 = add i32 %v0_ef49, 28
  store i32 %v1_ef49, i32* %eax.global-to-local, align 8
  %v1_ef4c = icmp eq i1 %v3_ef1f, false
  br i1 %v1_ef4c, label %dec_label_pc_ef54, label %dec_label_pc_ef4e

dec_label_pc_ef4e:                                ; preds = %dec_label_pc_ef18
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_ef49

dec_label_pc_ef54:                                ; preds = %dec_label_pc_ef18
  ret i32 %v1_ef49

; uselistorder directives
  uselistorder i32 %v1_ef49, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @function_ef5d() local_unnamed_addr {
dec_label_pc_ef5d:
  %v0_ef60 = call i32 @function_1c89ef65()
  ret i32 %v0_ef60
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef80:
  %v4_ef80 = add i32 %arg1, -28
  %v1_ef85 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %v4_ef80)
  ret i32 %v1_ef85
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_ef90:
  ret i32 0
}

define i32 @function_efb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_efb0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_efb0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_efb0 = add i32 %v0_efb0, 71732163
  %v2_efb0 = inttoptr i32 %v1_efb0 to i32*
  %v3_efb0 = load i32, i32* %v2_efb0, align 4
  %v4_efb0 = add i32 %v3_efb0, -1
  store i32 %v4_efb0, i32* %v2_efb0, align 4
  %v0_efb6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_efb6 = inttoptr i32 %v0_efb6 to i32*
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %v1_efb6, align 4
  %v0_efbc = load i32, i32* %ebx.global-to-local, align 4
  %v1_efbc = add i32 %v0_efbc, 8
  %v2_efbc = inttoptr i32 %v1_efbc to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_efbc, align 4
  %v0_efc3 = load i32, i32* %eax.global-to-local, align 8
  %v1_efc3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_efc3 = add i32 %v1_efc3, 4
  %v3_efc3 = inttoptr i32 %v2_efc3 to i32*
  store i32 %v0_efc3, i32* %v3_efc3, align 4
  %v0_efc6 = load i32, i32* %esi.global-to-local, align 4
  %v1_efc6 = add i32 %v0_efc6, 12
  %v2_efc6 = inttoptr i32 %v1_efc6 to i32*
  %v3_efc6 = load i32, i32* %v2_efc6, align 4
  store i32 %v3_efc6, i32* %eax.global-to-local, align 8
  %v1_efc9 = icmp eq i32 %v3_efc6, 0
  %v1_efcb = load i32, i32* %ebx.global-to-local, align 4
  %v2_efcb = add i32 %v1_efcb, 12
  %v3_efcb = inttoptr i32 %v2_efcb to i32*
  store i32 %v3_efc6, i32* %v3_efcb, align 4
  br i1 %v1_efc9, label %dec_label_pc_efd8, label %dec_label_pc_efd0

dec_label_pc_efd0:                                ; preds = %dec_label_pc_efb0
  br label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efd0, %dec_label_pc_efb0
  %v0_efd8 = load i32, i32* %esi.global-to-local, align 4
  %v1_efd8 = add i32 %v0_efd8, 16
  %v2_efd8 = inttoptr i32 %v1_efd8 to i32*
  %v3_efd8 = load i32, i32* %v2_efd8, align 4
  store i32 %v3_efd8, i32* %eax.global-to-local, align 8
  %v1_efdf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_efdf = icmp eq i32 %v1_efdf, %arg1
  %v0_efe6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_efe6 = add i32 %v0_efe6, 8
  %v2_efe6 = inttoptr i32 %v1_efe6 to i32*
  store i32 ptrtoint (i32* @global_var_312c4.2647 to i32), i32* %v2_efe6, align 4
  %v0_efed = load i32, i32* %eax.global-to-local, align 8
  %v1_efed = load i32, i32* %ebx.global-to-local, align 4
  %v2_efed = add i32 %v1_efed, 16
  %v3_efed = inttoptr i32 %v2_efed to i32*
  store i32 %v0_efed, i32* %v3_efed, align 4
  %v0_eff0 = load i32, i32* %esi.global-to-local, align 4
  %v1_eff0 = add i32 %v0_eff0, 20
  %v2_eff0 = inttoptr i32 %v1_eff0 to i32*
  %v3_eff0 = load i32, i32* %v2_eff0, align 4
  store i32 %v3_eff0, i32* %eax.global-to-local, align 8
  %v1_eff3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_eff3 = add i32 %v1_eff3, 20
  %v3_eff3 = inttoptr i32 %v2_eff3 to i32*
  store i32 %v3_eff0, i32* %v3_eff3, align 4
  %v0_eff6 = load i32, i32* %esi.global-to-local, align 4
  %v1_eff6 = add i32 %v0_eff6, 24
  %v2_eff6 = inttoptr i32 %v1_eff6 to i32*
  %v3_eff6 = load i32, i32* %v2_eff6, align 4
  store i32 %v3_eff6, i32* %eax.global-to-local, align 8
  %v0_eff9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_eff9 = inttoptr i32 %v0_eff9 to i32*
  store i32 ptrtoint (%vtable_312a8_type* @global_var_312a8.2648 to i32), i32* %v1_eff9, align 4
  %v0_efff = load i32, i32* %ebx.global-to-local, align 4
  %v1_efff = add i32 %v0_efff, 28
  %v2_efff = inttoptr i32 %v1_efff to i32*
  store i32 ptrtoint (i32* @global_var_312d4.2649 to i32), i32* %v2_efff, align 4
  %v0_f006 = load i32, i32* %eax.global-to-local, align 8
  %v1_f006 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f006 = add i32 %v1_f006, 24
  %v3_f006 = inttoptr i32 %v2_f006 to i32*
  store i32 %v0_f006, i32* %v3_f006, align 4
  %v0_f009 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f009 = add i32 %v0_f009, 28
  store i32 %v1_f009, i32* %eax.global-to-local, align 8
  %v1_f00c = icmp eq i1 %v3_efdf, false
  br i1 %v1_f00c, label %dec_label_pc_f014, label %dec_label_pc_f00e

dec_label_pc_f00e:                                ; preds = %dec_label_pc_efd8
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_f009

dec_label_pc_f014:                                ; preds = %dec_label_pc_efd8
  ret i32 %v1_f009

; uselistorder directives
  uselistorder i32 %v1_f009, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @function_f020() local_unnamed_addr {
dec_label_pc_f020:
  %v0_f020 = call i32 @function_1c89f025()
  ret i32 %v0_f020
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_f040:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f043 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v0_f04b = load i32, i32* %ebx.global-to-local, align 4
  %v0_f05b = load i32, i32* %edi.global-to-local, align 4
  %v1_f05f = add i32 %arg1, 16
  %v2_f05f = inttoptr i32 %v1_f05f to i32*
  %v3_f05f = load i32, i32* %v2_f05f, align 4
  store i32 %v3_f05f, i32* %ebx.global-to-local, align 4
  %v1_f062 = add i32 %v3_f05f, -12
  %v2_f062 = inttoptr i32 %v1_f062 to i32*
  %v3_f062 = load i32, i32* %v2_f062, align 4
  %v1_f065 = icmp eq i32 %v3_f062, 0
  br i1 %v1_f065, label %dec_label_pc_f090, label %dec_label_pc_f069

dec_label_pc_f069:                                ; preds = %dec_label_pc_f040
  store i32 %v3_f05f, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_f07c

bb:                                               ; preds = %dec_label_pc_f069
  br label %dec_label_pc_f07c

dec_label_pc_f07c:                                ; preds = %bb, %dec_label_pc_f069
  store i32 %v0_f04b, i32* %ebx.global-to-local, align 4
  store i32 %v0_f043, i32* %esi.global-to-local, align 4
  store i32 %v0_f05b, i32* %edi.global-to-local, align 4
  ret i32 %v3_f05f

dec_label_pc_f090:                                ; preds = %dec_label_pc_f040
  store i32 %v1_f05f, i32* %edi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_f09d() local_unnamed_addr {
dec_label_pc_f09d:
  %eax.global-to-local = alloca i32, align 4
  %v0_f09d = load i32, i32* %eax.global-to-local, align 8
  %v11_f09d = and i32 %v0_f09d, -119
  store i32 %v11_f09d, i32* %eax.global-to-local, align 8
  ret i32 %v11_f09d

; uselistorder directives
  uselistorder i32 %v11_f09d, { 1, 0 }
}

define i32 @function_f0bf() local_unnamed_addr {
dec_label_pc_f0bf:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f0f0() local_unnamed_addr {
dec_label_pc_f0f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_f0f3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f0f3
}

define i32 @function_f110() local_unnamed_addr {
dec_label_pc_f110:
  %v0_f110 = call i32 @function_f0bf()
  ret i32 %v0_f110
}

define i32 @function_f112(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f112:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f123() local_unnamed_addr {
dec_label_pc_f123:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f134() local_unnamed_addr {
dec_label_pc_f134:
  %eax.global-to-local = alloca i32, align 4
  %v0_f134 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f134
}

define i32 @function_f13a() local_unnamed_addr {
dec_label_pc_f13a:
  %eax.global-to-local = alloca i32, align 4
  %v0_f13a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f13a
}

define i32 @function_f140() local_unnamed_addr {
dec_label_pc_f140:
  %v0_f140 = call i32 @function_f123()
  ret i32 %v0_f140
}

define i32 @function_f143() local_unnamed_addr {
dec_label_pc_f143:
  %eax.global-to-local = alloca i32, align 4
  %v0_f143 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f143
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f160:
  %v4_f160 = add i32 %arg1, -28
  %v1_f165 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %v4_f160)
  ret i32 %v1_f165
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %arg1) {
dec_label_pc_f170:
  ret i32 0
}

define i32 @function_f1aa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1aa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f1aa = load i32, i32* %ebx.global-to-local, align 4
  %v1_f1aa = add i32 %v0_f1aa, 1137118278
  %v2_f1aa = inttoptr i32 %v1_f1aa to i32*
  %v3_f1aa = load i32, i32* %v2_f1aa, align 4
  %v4_f1aa = add i32 %v3_f1aa, -1
  store i32 %v4_f1aa, i32* %v2_f1aa, align 4
  %v2_f1b0 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_f1b0 = load i32, i32* %ebx.global-to-local, align 4
  %v4_f1b0 = trunc i32 %v3_f1b0 to i8
  %v5_f1b0 = or i8 %v4_f1b0, %v2_f1b0
  %v11_f1b0 = load i32, i32* %eax.global-to-local, align 8
  %v12_f1b0 = inttoptr i32 %v11_f1b0 to i8*
  store i8 %v5_f1b0, i8* %v12_f1b0, align 1
  %v0_f1b3 = load i32, i32* %eax.global-to-local, align 8
  %v4_f1b3 = mul i32 %v0_f1b3, 2
  %v14_f1b3 = icmp eq i32 %v4_f1b3, 0
  store i32 %v4_f1b3, i32* %eax.global-to-local, align 8
  %v1_f1b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f1b7 = add i32 %v1_f1b7, 12
  %v3_f1b7 = inttoptr i32 %v2_f1b7 to i32*
  store i32 %v4_f1b3, i32* %v3_f1b7, align 4
  br i1 %v14_f1b3, label %dec_label_pc_f1c4, label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f1aa
  br label %dec_label_pc_f1c4

dec_label_pc_f1c4:                                ; preds = %dec_label_pc_f1bc, %dec_label_pc_f1aa
  %v0_f1c4 = load i32, i32* %esi.global-to-local, align 4
  %v1_f1c4 = add i32 %v0_f1c4, 16
  %v2_f1c4 = inttoptr i32 %v1_f1c4 to i32*
  %v3_f1c4 = load i32, i32* %v2_f1c4, align 4
  store i32 %v3_f1c4, i32* %eax.global-to-local, align 8
  %v1_f1cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f1cb = icmp eq i32 %v1_f1cb, %arg1
  %v0_f1d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f1d2 = add i32 %v0_f1d2, 8
  %v2_f1d2 = inttoptr i32 %v1_f1d2 to i32*
  store i32 ptrtoint (i32* @global_var_30f44.2650 to i32), i32* %v2_f1d2, align 4
  %v0_f1d9 = load i32, i32* %eax.global-to-local, align 8
  %v1_f1d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f1d9 = add i32 %v1_f1d9, 16
  %v3_f1d9 = inttoptr i32 %v2_f1d9 to i32*
  store i32 %v0_f1d9, i32* %v3_f1d9, align 4
  %v0_f1dc = load i32, i32* %esi.global-to-local, align 4
  %v1_f1dc = add i32 %v0_f1dc, 20
  %v2_f1dc = inttoptr i32 %v1_f1dc to i32*
  %v3_f1dc = load i32, i32* %v2_f1dc, align 4
  store i32 %v3_f1dc, i32* %eax.global-to-local, align 8
  %v1_f1df = load i32, i32* %ebx.global-to-local, align 4
  %v2_f1df = add i32 %v1_f1df, 20
  %v3_f1df = inttoptr i32 %v2_f1df to i32*
  store i32 %v3_f1dc, i32* %v3_f1df, align 4
  %v0_f1e2 = load i32, i32* %esi.global-to-local, align 4
  %v1_f1e2 = add i32 %v0_f1e2, 24
  %v2_f1e2 = inttoptr i32 %v1_f1e2 to i32*
  %v3_f1e2 = load i32, i32* %v2_f1e2, align 4
  store i32 %v3_f1e2, i32* %eax.global-to-local, align 8
  %v0_f1e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f1e5 = inttoptr i32 %v0_f1e5 to i32*
  store i32 ptrtoint (%vtable_30f28_type* @global_var_30f28.2651 to i32), i32* %v1_f1e5, align 4
  %v0_f1eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_f1eb = add i32 %v0_f1eb, 28
  %v2_f1eb = inttoptr i32 %v1_f1eb to i32*
  store i32 ptrtoint (i32* @global_var_30f54.2652 to i32), i32* %v2_f1eb, align 4
  %v0_f1f2 = load i32, i32* %eax.global-to-local, align 8
  %v1_f1f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f1f2 = add i32 %v1_f1f2, 24
  %v3_f1f2 = inttoptr i32 %v2_f1f2 to i32*
  store i32 %v0_f1f2, i32* %v3_f1f2, align 4
  %v0_f1f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f1f5 = add i32 %v0_f1f5, 28
  store i32 %v1_f1f5, i32* %eax.global-to-local, align 8
  %v1_f1f8 = icmp eq i1 %v3_f1cb, false
  br i1 %v1_f1f8, label %dec_label_pc_f200, label %dec_label_pc_f1fa

dec_label_pc_f1fa:                                ; preds = %dec_label_pc_f1c4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_f1f5

dec_label_pc_f200:                                ; preds = %dec_label_pc_f1c4
  ret i32 %v1_f1f5

; uselistorder directives
  uselistorder i32 %v1_f1f5, { 1, 0, 2 }
  uselistorder i32 %v4_f1b3, { 2, 0, 1 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv, { 1, 0 }
}

define i32 @function_f20f() local_unnamed_addr {
dec_label_pc_f20f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f229() local_unnamed_addr {
dec_label_pc_f229:
  %v0_f229 = call i32 @function_f20f()
  ret i32 %v0_f229
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f230:
  %v4_f230 = add i32 %arg1, -28
  %v1_f235 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %v4_f230)
  ret i32 %v1_f235
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) {
dec_label_pc_f240:
  ret i32 0
}

define i32 @function_f27a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f27a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f27a = load i32, i32* %ebx.global-to-local, align 4
  %v1_f27a = add i32 %v0_f27a, 63376454
  %v2_f27a = inttoptr i32 %v1_f27a to i32*
  %v3_f27a = load i32, i32* %v2_f27a, align 4
  %v4_f27a = add i32 %v3_f27a, -1
  store i32 %v4_f27a, i32* %v2_f27a, align 4
  %v0_f282 = load i32, i32* %eax.global-to-local, align 8
  %v4_f282 = mul i32 %v0_f282, 2
  %v14_f282 = icmp eq i32 %v4_f282, 0
  store i32 %v4_f282, i32* %eax.global-to-local, align 8
  %v0_f284 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f284 = add i32 %v0_f284, 8
  %v2_f284 = inttoptr i32 %v1_f284 to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_f284, align 4
  %v1_f28d = load i32, i32* %ebx.global-to-local, align 4
  %v2_f28d = add i32 %v1_f28d, 12
  %v3_f28d = inttoptr i32 %v2_f28d to i32*
  store i32 %v4_f282, i32* %v3_f28d, align 4
  br i1 %v14_f282, label %dec_label_pc_f29a, label %dec_label_pc_f292

dec_label_pc_f292:                                ; preds = %dec_label_pc_f27a
  br label %dec_label_pc_f29a

dec_label_pc_f29a:                                ; preds = %dec_label_pc_f292, %dec_label_pc_f27a
  %v0_f29a = load i32, i32* %esi.global-to-local, align 4
  %v1_f29a = add i32 %v0_f29a, 16
  %v2_f29a = inttoptr i32 %v1_f29a to i32*
  %v3_f29a = load i32, i32* %v2_f29a, align 4
  store i32 %v3_f29a, i32* %eax.global-to-local, align 8
  %v1_f2a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f2a1 = icmp eq i32 %v1_f2a1, %arg1
  %v0_f2a8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f2a8 = add i32 %v0_f2a8, 8
  %v2_f2a8 = inttoptr i32 %v1_f2a8 to i32*
  store i32 ptrtoint (i32* @global_var_313c4.2653 to i32), i32* %v2_f2a8, align 4
  %v0_f2af = load i32, i32* %eax.global-to-local, align 8
  %v1_f2af = load i32, i32* %ebx.global-to-local, align 4
  %v2_f2af = add i32 %v1_f2af, 16
  %v3_f2af = inttoptr i32 %v2_f2af to i32*
  store i32 %v0_f2af, i32* %v3_f2af, align 4
  %v0_f2b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_f2b2 = add i32 %v0_f2b2, 20
  %v2_f2b2 = inttoptr i32 %v1_f2b2 to i32*
  %v3_f2b2 = load i32, i32* %v2_f2b2, align 4
  store i32 %v3_f2b2, i32* %eax.global-to-local, align 8
  %v1_f2b5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f2b5 = add i32 %v1_f2b5, 20
  %v3_f2b5 = inttoptr i32 %v2_f2b5 to i32*
  store i32 %v3_f2b2, i32* %v3_f2b5, align 4
  %v0_f2b8 = load i32, i32* %esi.global-to-local, align 4
  %v1_f2b8 = add i32 %v0_f2b8, 24
  %v2_f2b8 = inttoptr i32 %v1_f2b8 to i32*
  %v3_f2b8 = load i32, i32* %v2_f2b8, align 4
  store i32 %v3_f2b8, i32* %eax.global-to-local, align 8
  %v0_f2bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_f2bb = inttoptr i32 %v0_f2bb to i32*
  store i32 ptrtoint (%vtable_313a8_type* @global_var_313a8.2654 to i32), i32* %v1_f2bb, align 4
  %v0_f2c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f2c1 = add i32 %v0_f2c1, 28
  %v2_f2c1 = inttoptr i32 %v1_f2c1 to i32*
  store i32 ptrtoint (i32* @global_var_313d4.2655 to i32), i32* %v2_f2c1, align 4
  %v0_f2c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_f2c8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f2c8 = add i32 %v1_f2c8, 24
  %v3_f2c8 = inttoptr i32 %v2_f2c8 to i32*
  store i32 %v0_f2c8, i32* %v3_f2c8, align 4
  %v0_f2cb = load i32, i32* %ebx.global-to-local, align 4
  %v1_f2cb = add i32 %v0_f2cb, 28
  store i32 %v1_f2cb, i32* %eax.global-to-local, align 8
  %v1_f2ce = icmp eq i1 %v3_f2a1, false
  br i1 %v1_f2ce, label %dec_label_pc_f2d6, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f29a
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_f2cb

dec_label_pc_f2d6:                                ; preds = %dec_label_pc_f29a
  ret i32 %v1_f2cb

; uselistorder directives
  uselistorder i32 %v1_f2cb, { 1, 0, 2 }
  uselistorder i32 %v4_f282, { 2, 0, 1 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, { 1, 0 }
}

define i32 @function_f2e5() local_unnamed_addr {
dec_label_pc_f2e5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f2ff() local_unnamed_addr {
dec_label_pc_f2ff:
  %v0_f2ff = call i32 @function_f2e5()
  ret i32 %v0_f2ff
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f310:
  %v4_f310 = add i32 %arg1, -28
  %v1_f315 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2393(i32 %v4_f310)
  ret i32 %v1_f315
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2393(i32 %arg1) {
dec_label_pc_f320:
  ret i32 0
}

define i32 @function_f35a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f35a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f35a = load i32, i32* %ebx.global-to-local, align 4
  %v1_f35a = add i32 %v0_f35a, 63376454
  %v2_f35a = inttoptr i32 %v1_f35a to i32*
  %v3_f35a = load i32, i32* %v2_f35a, align 4
  %v4_f35a = add i32 %v3_f35a, -1
  store i32 %v4_f35a, i32* %v2_f35a, align 4
  %v0_f360 = load i32, i32* %edx.global-to-local, align 4
  %v1_f360 = trunc i32 %v0_f360 to i8
  %v2_f360 = load i32, i32* %eax.global-to-local, align 8
  %v3_f360 = inttoptr i32 %v2_f360 to i8*
  store i8 %v1_f360, i8* %v3_f360, align 1
  %v0_f362 = load i32, i32* %eax.global-to-local, align 8
  %v4_f362 = mul i32 %v0_f362, 2
  %v14_f362 = icmp eq i32 %v4_f362, 0
  store i32 %v4_f362, i32* %eax.global-to-local, align 8
  %v0_f364 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f364 = add i32 %v0_f364, 8
  %v2_f364 = inttoptr i32 %v1_f364 to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_f364, align 4
  %v1_f36d = load i32, i32* %ebx.global-to-local, align 4
  %v2_f36d = add i32 %v1_f36d, 12
  %v3_f36d = inttoptr i32 %v2_f36d to i32*
  store i32 %v4_f362, i32* %v3_f36d, align 4
  br i1 %v14_f362, label %dec_label_pc_f37a, label %dec_label_pc_f372

dec_label_pc_f372:                                ; preds = %dec_label_pc_f35a
  %v1_f372 = inttoptr i32 %v4_f362 to i32*
  %v2_f372 = load i32, i32* %v1_f372, align 4
  store i32 %v2_f372, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_f37a

dec_label_pc_f37a:                                ; preds = %dec_label_pc_f372, %dec_label_pc_f35a
  %v0_f37a = load i32, i32* %esi.global-to-local, align 4
  %v1_f37a = add i32 %v0_f37a, 16
  %v2_f37a = inttoptr i32 %v1_f37a to i32*
  %v3_f37a = load i32, i32* %v2_f37a, align 4
  store i32 %v3_f37a, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_f381 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f381 = xor i32 %v1_f381, %arg1
  %v3_f381 = icmp eq i32 %v2_f381, 0
  store i32 %v2_f381, i32* %edx.global-to-local, align 4
  %v0_f388 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f388 = add i32 %v0_f388, 8
  %v2_f388 = inttoptr i32 %v1_f388 to i32*
  store i32 ptrtoint (i32* @global_var_31104.2656 to i32), i32* %v2_f388, align 4
  %v0_f38f = load i32, i32* %eax.global-to-local, align 8
  %v1_f38f = load i32, i32* %ebx.global-to-local, align 4
  %v2_f38f = add i32 %v1_f38f, 16
  %v3_f38f = inttoptr i32 %v2_f38f to i32*
  store i32 %v0_f38f, i32* %v3_f38f, align 4
  %v0_f392 = load i32, i32* %esi.global-to-local, align 4
  %v1_f392 = add i32 %v0_f392, 20
  %v2_f392 = inttoptr i32 %v1_f392 to i32*
  %v3_f392 = load i32, i32* %v2_f392, align 4
  store i32 %v3_f392, i32* %eax.global-to-local, align 8
  %v1_f395 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f395 = add i32 %v1_f395, 20
  %v3_f395 = inttoptr i32 %v2_f395 to i32*
  store i32 %v3_f392, i32* %v3_f395, align 4
  %v0_f398 = load i32, i32* %esi.global-to-local, align 4
  %v1_f398 = add i32 %v0_f398, 24
  %v2_f398 = inttoptr i32 %v1_f398 to i32*
  %v3_f398 = load i32, i32* %v2_f398, align 4
  store i32 %v3_f398, i32* %eax.global-to-local, align 8
  %v0_f39b = load i32, i32* %ebx.global-to-local, align 4
  %v1_f39b = inttoptr i32 %v0_f39b to i32*
  store i32 ptrtoint (%vtable_310e8_type* @global_var_310e8.2657 to i32), i32* %v1_f39b, align 4
  %v0_f3a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f3a1 = add i32 %v0_f3a1, 28
  %v2_f3a1 = inttoptr i32 %v1_f3a1 to i32*
  store i32 ptrtoint (i32* @global_var_31114.2658 to i32), i32* %v2_f3a1, align 4
  %v0_f3a8 = load i32, i32* %eax.global-to-local, align 8
  %v1_f3a8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f3a8 = add i32 %v1_f3a8, 24
  %v3_f3a8 = inttoptr i32 %v2_f3a8 to i32*
  store i32 %v0_f3a8, i32* %v3_f3a8, align 4
  %v0_f3ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_f3ab = add i32 %v0_f3ab, 28
  store i32 %v1_f3ab, i32* %eax.global-to-local, align 8
  %v1_f3ae = icmp eq i1 %v3_f381, false
  br i1 %v1_f3ae, label %dec_label_pc_f3b6, label %dec_label_pc_f3b0

dec_label_pc_f3b0:                                ; preds = %dec_label_pc_f37a
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_f3ab

dec_label_pc_f3b6:                                ; preds = %dec_label_pc_f37a
  ret i32 %v1_f3ab

; uselistorder directives
  uselistorder i32 %v1_f3ab, { 1, 0, 2 }
  uselistorder i32 %v4_f362, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2393, { 1, 0 }
}

define i32 @function_f3bf() local_unnamed_addr {
dec_label_pc_f3bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_f3bf = load i32, i32* %eax.global-to-local, align 8
  %v11_f3bf = and i32 %v0_f3bf, -24
  store i32 %v11_f3bf, i32* %eax.global-to-local, align 8
  ret i32 %v11_f3bf

; uselistorder directives
  uselistorder i32 %v11_f3bf, { 1, 0 }
}

define i32 @function_f3c5() local_unnamed_addr {
dec_label_pc_f3c5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f3df() local_unnamed_addr {
dec_label_pc_f3df:
  %v0_f3df = call i32 @function_f3c5()
  ret i32 %v0_f3df
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3f0:
  %v4_f3f0 = add i32 %arg1, -28
  %v1_f3f5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %v4_f3f0)
  ret i32 %v1_f3f5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %arg1) {
dec_label_pc_f400:
  ret i32 0
}

define i32 @function_f43a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f43a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f43a = load i32, i32* %ebx.global-to-local, align 4
  %v1_f43a = add i32 %v0_f43a, 63376454
  %v2_f43a = inttoptr i32 %v1_f43a to i32*
  %v3_f43a = load i32, i32* %v2_f43a, align 4
  %v4_f43a = add i32 %v3_f43a, -1
  store i32 %v4_f43a, i32* %v2_f43a, align 4
  %v0_f440 = load i32, i32* %eax.global-to-local, align 8
  %v4_f442 = mul i32 %v0_f440, 2
  %v14_f442 = icmp eq i32 %v4_f442, 0
  store i32 %v4_f442, i32* %eax.global-to-local, align 8
  %v0_f444 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f444 = add i32 %v0_f444, 8
  %v2_f444 = inttoptr i32 %v1_f444 to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_f444, align 4
  %v1_f44d = load i32, i32* %ebx.global-to-local, align 4
  %v2_f44d = add i32 %v1_f44d, 12
  %v3_f44d = inttoptr i32 %v2_f44d to i32*
  store i32 %v4_f442, i32* %v3_f44d, align 4
  br i1 %v14_f442, label %dec_label_pc_f45a, label %dec_label_pc_f452

dec_label_pc_f452:                                ; preds = %dec_label_pc_f43a
  br label %dec_label_pc_f45a

dec_label_pc_f45a:                                ; preds = %dec_label_pc_f452, %dec_label_pc_f43a
  %v0_f45a = load i32, i32* %esi.global-to-local, align 4
  %v1_f45a = add i32 %v0_f45a, 16
  %v2_f45a = inttoptr i32 %v1_f45a to i32*
  %v3_f45a = load i32, i32* %v2_f45a, align 4
  store i32 %v3_f45a, i32* %eax.global-to-local, align 8
  %v1_f461 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f461 = icmp eq i32 %v1_f461, %arg1
  %v0_f468 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f468 = add i32 %v0_f468, 8
  %v2_f468 = inttoptr i32 %v1_f468 to i32*
  store i32 ptrtoint (i32* @global_var_31024.2659 to i32), i32* %v2_f468, align 4
  %v0_f46f = load i32, i32* %eax.global-to-local, align 8
  %v1_f46f = load i32, i32* %ebx.global-to-local, align 4
  %v2_f46f = add i32 %v1_f46f, 16
  %v3_f46f = inttoptr i32 %v2_f46f to i32*
  store i32 %v0_f46f, i32* %v3_f46f, align 4
  %v0_f472 = load i32, i32* %esi.global-to-local, align 4
  %v1_f472 = add i32 %v0_f472, 20
  %v2_f472 = inttoptr i32 %v1_f472 to i32*
  %v3_f472 = load i32, i32* %v2_f472, align 4
  store i32 %v3_f472, i32* %eax.global-to-local, align 8
  %v1_f475 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f475 = add i32 %v1_f475, 20
  %v3_f475 = inttoptr i32 %v2_f475 to i32*
  store i32 %v3_f472, i32* %v3_f475, align 4
  %v0_f478 = load i32, i32* %esi.global-to-local, align 4
  %v1_f478 = add i32 %v0_f478, 24
  %v2_f478 = inttoptr i32 %v1_f478 to i32*
  %v3_f478 = load i32, i32* %v2_f478, align 4
  store i32 %v3_f478, i32* %eax.global-to-local, align 8
  %v0_f47b = load i32, i32* %ebx.global-to-local, align 4
  %v1_f47b = inttoptr i32 %v0_f47b to i32*
  store i32 ptrtoint (%vtable_31008_type* @global_var_31008.2660 to i32), i32* %v1_f47b, align 4
  %v0_f481 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f481 = add i32 %v0_f481, 28
  %v2_f481 = inttoptr i32 %v1_f481 to i32*
  store i32 ptrtoint (i32* @global_var_31034.2661 to i32), i32* %v2_f481, align 4
  %v0_f488 = load i32, i32* %eax.global-to-local, align 8
  %v1_f488 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f488 = add i32 %v1_f488, 24
  %v3_f488 = inttoptr i32 %v2_f488 to i32*
  store i32 %v0_f488, i32* %v3_f488, align 4
  %v0_f48b = load i32, i32* %ebx.global-to-local, align 4
  %v1_f48b = add i32 %v0_f48b, 28
  store i32 %v1_f48b, i32* %eax.global-to-local, align 8
  %v1_f48e = icmp eq i1 %v3_f461, false
  br i1 %v1_f48e, label %dec_label_pc_f496, label %dec_label_pc_f490

dec_label_pc_f490:                                ; preds = %dec_label_pc_f45a
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_f48b

dec_label_pc_f496:                                ; preds = %dec_label_pc_f45a
  ret i32 %v1_f48b

; uselistorder directives
  uselistorder i32 %v1_f48b, { 1, 0, 2 }
  uselistorder i32 %v4_f442, { 2, 0, 1 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv, { 1, 0 }
}

define i32 @function_f4a5() local_unnamed_addr {
dec_label_pc_f4a5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f4bf() local_unnamed_addr {
dec_label_pc_f4bf:
  %v0_f4bf = call i32 @function_f4a5()
  ret i32 %v0_f4bf
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4d0:
  %v4_f4d0 = add i32 %arg1, -28
  %v1_f4d5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %v4_f4d0)
  ret i32 %v1_f4d5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %arg1) {
dec_label_pc_f4e0:
  ret i32 0
}

define i32 @function_f51a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f51a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f51a = load i32, i32* %ebx.global-to-local, align 4
  %v1_f51a = add i32 %v0_f51a, 63376454
  %v2_f51a = inttoptr i32 %v1_f51a to i32*
  %v3_f51a = load i32, i32* %v2_f51a, align 4
  %v4_f51a = add i32 %v3_f51a, -1
  store i32 %v4_f51a, i32* %v2_f51a, align 4
  %v0_f525 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f525 = add i32 %v0_f525, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_f525 = trunc i32 %v1_f525 to i8
  store i32 %v1_f525, i32* %ebx.global-to-local, align 4
  %v2_f526 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v5_f526 = or i8 %v2_f526, %v11_f525
  %v11_f526 = load i32, i32* %eax.global-to-local, align 8
  %v12_f526 = inttoptr i32 %v11_f526 to i8*
  store i8 %v5_f526, i8* %v12_f526, align 1
  %v0_f529 = load i32, i32* %eax.global-to-local, align 8
  %v4_f529 = mul i32 %v0_f529, 2
  %v14_f529 = icmp eq i32 %v4_f529, 0
  store i32 %v4_f529, i32* %eax.global-to-local, align 8
  %v1_f52d = load i32, i32* %ebx.global-to-local, align 4
  %v2_f52d = add i32 %v1_f52d, 12
  %v3_f52d = inttoptr i32 %v2_f52d to i32*
  store i32 %v4_f529, i32* %v3_f52d, align 4
  br i1 %v14_f529, label %dec_label_pc_f53a, label %dec_label_pc_f532

dec_label_pc_f532:                                ; preds = %dec_label_pc_f51a
  br label %dec_label_pc_f53a

dec_label_pc_f53a:                                ; preds = %dec_label_pc_f532, %dec_label_pc_f51a
  %v0_f53a = load i32, i32* %esi.global-to-local, align 4
  %v1_f53a = add i32 %v0_f53a, 16
  %v2_f53a = inttoptr i32 %v1_f53a to i32*
  %v3_f53a = load i32, i32* %v2_f53a, align 4
  store i32 %v3_f53a, i32* %eax.global-to-local, align 8
  %v1_f541 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f541 = icmp eq i32 %v1_f541, %arg1
  %v0_f548 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f548 = add i32 %v0_f548, 8
  %v2_f548 = inttoptr i32 %v1_f548 to i32*
  store i32 ptrtoint (i32* @global_var_311e4.2662 to i32), i32* %v2_f548, align 4
  %v0_f54f = load i32, i32* %eax.global-to-local, align 8
  %v1_f54f = load i32, i32* %ebx.global-to-local, align 4
  %v2_f54f = add i32 %v1_f54f, 16
  %v3_f54f = inttoptr i32 %v2_f54f to i32*
  store i32 %v0_f54f, i32* %v3_f54f, align 4
  %v0_f552 = load i32, i32* %esi.global-to-local, align 4
  %v1_f552 = add i32 %v0_f552, 20
  %v2_f552 = inttoptr i32 %v1_f552 to i32*
  %v3_f552 = load i32, i32* %v2_f552, align 4
  store i32 %v3_f552, i32* %eax.global-to-local, align 8
  %v1_f555 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f555 = add i32 %v1_f555, 20
  %v3_f555 = inttoptr i32 %v2_f555 to i32*
  store i32 %v3_f552, i32* %v3_f555, align 4
  %v0_f558 = load i32, i32* %esi.global-to-local, align 4
  %v1_f558 = add i32 %v0_f558, 24
  %v2_f558 = inttoptr i32 %v1_f558 to i32*
  %v3_f558 = load i32, i32* %v2_f558, align 4
  store i32 %v3_f558, i32* %eax.global-to-local, align 8
  %v0_f55b = load i32, i32* %ebx.global-to-local, align 4
  %v1_f55b = inttoptr i32 %v0_f55b to i32*
  store i32 ptrtoint (%vtable_311c8_type* @global_var_311c8.2663 to i32), i32* %v1_f55b, align 4
  %v0_f561 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f561 = add i32 %v0_f561, 28
  %v2_f561 = inttoptr i32 %v1_f561 to i32*
  store i32 ptrtoint (i32* @global_var_311f4.2664 to i32), i32* %v2_f561, align 4
  %v0_f568 = load i32, i32* %eax.global-to-local, align 8
  %v1_f568 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f568 = add i32 %v1_f568, 24
  %v3_f568 = inttoptr i32 %v2_f568 to i32*
  store i32 %v0_f568, i32* %v3_f568, align 4
  %v0_f56b = load i32, i32* %ebx.global-to-local, align 4
  %v1_f56b = add i32 %v0_f56b, 28
  store i32 %v1_f56b, i32* %eax.global-to-local, align 8
  %v1_f56e = icmp eq i1 %v3_f541, false
  br i1 %v1_f56e, label %dec_label_pc_f576, label %dec_label_pc_f570

dec_label_pc_f570:                                ; preds = %dec_label_pc_f53a
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_f56b

dec_label_pc_f576:                                ; preds = %dec_label_pc_f53a
  ret i32 %v1_f56b

; uselistorder directives
  uselistorder i32 %v1_f56b, { 1, 0, 2 }
  uselistorder i32 %v4_f529, { 2, 0, 1 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv, { 1, 0 }
}

define i32 @function_f585() local_unnamed_addr {
dec_label_pc_f585:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f59f() local_unnamed_addr {
dec_label_pc_f59f:
  %v0_f59f = call i32 @function_f585()
  ret i32 %v0_f59f
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_f5b0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_f5b0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v1_f5c4 = add i32 %tmp101, 4
  %v2_f5c4 = inttoptr i32 %v1_f5c4 to i32*
  %v3_f5c4 = load i32, i32* %v2_f5c4, align 4
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %arg1, align 4
  %v1_f5cd = icmp eq i32 %v3_f5c4, 0
  br i1 %v1_f5cd, label %dec_label_pc_f5dd, label %dec_label_pc_f5d1

dec_label_pc_f5d1:                                ; preds = %dec_label_pc_f5b0
  %v3_f5cd = trunc i32 %v3_f5c4 to i8
  %v5_f5d9 = icmp eq i8 %v3_f5cd, 0
  %v1_f5db = icmp eq i1 %v5_f5d9, false
  br i1 %v1_f5db, label %dec_label_pc_f5f8, label %dec_label_pc_f5dd

dec_label_pc_f5dd:                                ; preds = %dec_label_pc_f5f8, %dec_label_pc_f5d1, %dec_label_pc_f5b0
  br i1 false, label %dec_label_pc_f601, label %dec_label_pc_f5ea

dec_label_pc_f5ea:                                ; preds = %dec_label_pc_f5dd
  store i32 %v0_f5b0, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5d1
  %v0_f5f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f5f8 = add i32 %v0_f5f8, 4
  %v2_f5f8 = inttoptr i32 %v1_f5f8 to i32*
  store i32 0, i32* %v2_f5f8, align 4
  br label %dec_label_pc_f5dd

dec_label_pc_f601:                                ; preds = %dec_label_pc_f5dd
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
}

define i32 @function_f607() local_unnamed_addr {
dec_label_pc_f607:
  %eax.global-to-local = alloca i32, align 4
  %v0_f607 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f607
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f620:
  %v4_f620 = add i32 %arg1, -20
  %v1_f625 = call i32 @function_1ec50(i32 %v4_f620)
  ret i32 %v1_f625
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_f630:
  %eax.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_316a8_type* @global_var_316a8.2665 to i32), i32* %arg1, align 4
  %v1_f64a = add i32 %tmp98, 20
  store i32 %v1_f64a, i32* %eax.global-to-local, align 8
  %v2_f64d = inttoptr i32 %v1_f64a to i32*
  store i32 ptrtoint (i32* @global_var_316b8.2666 to i32), i32* %v2_f64d, align 4
  %v0_f654 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f654
}

define i32 @function_f65b(i32 %arg1) local_unnamed_addr {
dec_label_pc_f65b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f65b = load i32, i32* %ebx.global-to-local, align 4
  %v1_f65b = add i32 %v0_f65b, 1696343108
  %v2_f65b = inttoptr i32 %v1_f65b to i32*
  %v3_f65b = load i32, i32* %v2_f65b, align 4
  %v4_f65b = add i32 %v3_f65b, -1
  store i32 %v4_f65b, i32* %v2_f65b, align 4
  %v0_f661 = load i32, i32* %eax.global-to-local, align 8
  %v1_f661 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f661 = xor i32 %v1_f661, %v0_f661
  %v3_f661 = icmp eq i32 %v2_f661, 0
  store i32 %v2_f661, i32* %eax.global-to-local, align 8
  %v1_f667 = icmp eq i1 %v3_f661, false
  br i1 %v1_f667, label %dec_label_pc_f676, label %dec_label_pc_f669

dec_label_pc_f669:                                ; preds = %dec_label_pc_f65b
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_f661

dec_label_pc_f676:                                ; preds = %dec_label_pc_f65b
  ret i32 %v2_f661

; uselistorder directives
  uselistorder i32 %v2_f661, { 1, 0, 2, 3 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f680:
  %v4_f680 = add i32 %arg1, -8
  %v1_f685 = call i32 @function_1ed10(i32 %v4_f680)
  ret i32 %v1_f685
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32* %arg1) {
dec_label_pc_f690:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f690 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_31268_type* @global_var_31268.2667 to i32), i32* %arg1, align 4
  %v0_f6aa = load i32, i32* @ebx, align 4
  %v1_f6aa = add i32 %v0_f6aa, 8
  store i32 %v1_f6aa, i32* @eax, align 8
  %v2_f6ad = inttoptr i32 %v1_f6aa to i32*
  store i32 ptrtoint (i32* @global_var_3127c.2668 to i32), i32* %v2_f6ad, align 4
  %v0_f6b4 = load i32, i32* @eax, align 8
  %v1_f6b7 = call i32 @function_1ec40(i32 %v0_f6b4)
  store i32 0, i32* @eax, align 8
  %v0_f6c7 = load i32, i32* @ebx, align 4
  %v1_f6c7 = inttoptr i32 %v0_f6c7 to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_f6c7, align 4
  br i1 false, label %bb, label %dec_label_pc_f690.dec_label_pc_f6cf_crit_edge

dec_label_pc_f690.dec_label_pc_f6cf_crit_edge:    ; preds = %dec_label_pc_f690
  %v5_f6d6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_f6cf

bb:                                               ; preds = %dec_label_pc_f690
  br label %dec_label_pc_f6cf

dec_label_pc_f6cf:                                ; preds = %dec_label_pc_f690.dec_label_pc_f6cf_crit_edge, %bb
  %v5_f6d6 = phi i32 [ %v5_f6d6.pre, %dec_label_pc_f690.dec_label_pc_f6cf_crit_edge ], [ undef, %bb ]
  store i32 %v0_f690, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f6d6

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_f6cf, { 1, 0 }
}

define i32 @function_f6dc() local_unnamed_addr {
dec_label_pc_f6dc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_f6f5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f6f5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_f700:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f700 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_30e28_type* @global_var_30e28.2669 to i32), i32* %arg1, align 4
  %v1_f71a = add i32 %tmp100, 8
  store i32 %v1_f71a, i32* @eax, align 8
  %v2_f71d = inttoptr i32 %v1_f71a to i32*
  store i32 ptrtoint (i32* @global_var_30e3c.2670 to i32), i32* %v2_f71d, align 4
  %v0_f724 = load i32, i32* @eax, align 8
  %v1_f727 = call i32 @function_1ecb0(i32 %v0_f724)
  store i32 0, i32* @eax, align 8
  %v0_f737 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f737 = inttoptr i32 %v0_f737 to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_f737, align 4
  br i1 false, label %bb, label %dec_label_pc_f700.dec_label_pc_f73f_crit_edge

dec_label_pc_f700.dec_label_pc_f73f_crit_edge:    ; preds = %dec_label_pc_f700
  %v5_f746.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_f73f

bb:                                               ; preds = %dec_label_pc_f700
  br label %dec_label_pc_f73f

dec_label_pc_f73f:                                ; preds = %dec_label_pc_f700.dec_label_pc_f73f_crit_edge, %bb
  %v5_f746 = phi i32 [ %v5_f746.pre, %dec_label_pc_f700.dec_label_pc_f73f_crit_edge ], [ undef, %bb ]
  store i32 %v0_f700, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f746

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_f73f, { 1, 0 }
}

define i32 @function_f74c() local_unnamed_addr {
dec_label_pc_f74c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f760:
  %eax.global-to-local = alloca i32, align 4
  %v0_f765 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f765
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev(i32* %arg1) {
dec_label_pc_f770:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f770 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_30ee8_type* @global_var_30ee8.2671 to i32), i32* %arg1, align 4
  %v1_f78a = add i32 %tmp100, 8
  %v2_f78d = inttoptr i32 %v1_f78a to i32*
  store i32 ptrtoint (i32* @global_var_30efc.2672 to i32), i32* %v2_f78d, align 4
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_f7a9

bb:                                               ; preds = %dec_label_pc_f770
  br label %dec_label_pc_f7a9

dec_label_pc_f7a9:                                ; preds = %bb, %dec_label_pc_f770
  store i32 %v0_f770, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_f7b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_f7b6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f7c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_f7c5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f7c5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev(i32* %arg1) {
dec_label_pc_f7d0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f7d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_30fc8_type* @global_var_30fc8.2673 to i32), i32* %arg1, align 4
  %v1_f7ea = add i32 %tmp100, 8
  store i32 %v1_f7ea, i32* @eax, align 8
  %v2_f7ed = inttoptr i32 %v1_f7ea to i32*
  store i32 ptrtoint (i32* @global_var_30fdc.2674 to i32), i32* %v2_f7ed, align 4
  %v0_f7f4 = load i32, i32* @eax, align 8
  %v1_f7f7 = call i32 @function_1ed80(i32 %v0_f7f4)
  store i32 0, i32* @eax, align 8
  %v0_f807 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f807 = inttoptr i32 %v0_f807 to i32*
  store i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), i32* %v1_f807, align 4
  br i1 false, label %bb, label %dec_label_pc_f7d0.dec_label_pc_f80f_crit_edge

dec_label_pc_f7d0.dec_label_pc_f80f_crit_edge:    ; preds = %dec_label_pc_f7d0
  %v5_f816.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_f80f

bb:                                               ; preds = %dec_label_pc_f7d0
  br label %dec_label_pc_f80f

dec_label_pc_f80f:                                ; preds = %dec_label_pc_f7d0.dec_label_pc_f80f_crit_edge, %bb
  %v5_f816 = phi i32 [ %v5_f816.pre, %dec_label_pc_f7d0.dec_label_pc_f80f_crit_edge ], [ undef, %bb ]
  store i32 %v0_f7d0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f816

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_f80f, { 1, 0 }
}

define i32 @function_f81c() local_unnamed_addr {
dec_label_pc_f81c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f830:
  %v4_f830 = add i32 %arg1, -8
  %v1_f835 = call i32 @function_1f070(i32 %v4_f830)
  ret i32 %v1_f835
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32* %arg1) {
dec_label_pc_f840:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f840 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_31368_type* @global_var_31368.2675 to i32), i32* %arg1, align 4
  %v1_f85a = add i32 %tmp100, 8
  %v2_f85d = inttoptr i32 %v1_f85a to i32*
  store i32 ptrtoint (i32* @global_var_3137c.2676 to i32), i32* %v2_f85d, align 4
  store i32 0, i32* @eax, align 8
  %v0_f877 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f877 = inttoptr i32 %v0_f877 to i32*
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %v1_f877, align 4
  br i1 false, label %bb, label %dec_label_pc_f840.dec_label_pc_f87f_crit_edge

dec_label_pc_f840.dec_label_pc_f87f_crit_edge:    ; preds = %dec_label_pc_f840
  %v5_f886.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_f87f

bb:                                               ; preds = %dec_label_pc_f840
  br label %dec_label_pc_f87f

dec_label_pc_f87f:                                ; preds = %dec_label_pc_f840.dec_label_pc_f87f_crit_edge, %bb
  %v5_f886 = phi i32 [ %v5_f886.pre, %dec_label_pc_f840.dec_label_pc_f87f_crit_edge ], [ undef, %bb ]
  store i32 %v0_f840, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f886

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_f87f, { 1, 0 }
}

define i32 @function_f88c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f88c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_f8a5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f8a5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev(i32* %arg1) {
dec_label_pc_f8b0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f8b0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_31188_type* @global_var_31188.2677 to i32), i32* %arg1, align 4
  %v0_f8ca = load i32, i32* @ebx, align 4
  %v1_f8ca = add i32 %v0_f8ca, 8
  store i32 %v1_f8ca, i32* @eax, align 8
  %v2_f8cd = inttoptr i32 %v1_f8ca to i32*
  store i32 ptrtoint (i32* @global_var_3119c.2678 to i32), i32* %v2_f8cd, align 4
  %v0_f8d4 = load i32, i32* @eax, align 8
  %v1_f8d7 = call i32 @function_1ee60(i32 %v0_f8d4)
  store i32 0, i32* @eax, align 8
  %v0_f8e7 = load i32, i32* @ebx, align 4
  %v1_f8e7 = inttoptr i32 %v0_f8e7 to i32*
  store i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), i32* %v1_f8e7, align 4
  br i1 false, label %bb, label %dec_label_pc_f8b0.dec_label_pc_f8ef_crit_edge

dec_label_pc_f8b0.dec_label_pc_f8ef_crit_edge:    ; preds = %dec_label_pc_f8b0
  %v5_f8f6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_f8ef

bb:                                               ; preds = %dec_label_pc_f8b0
  br label %dec_label_pc_f8ef

dec_label_pc_f8ef:                                ; preds = %dec_label_pc_f8b0.dec_label_pc_f8ef_crit_edge, %bb
  %v5_f8f6 = phi i32 [ %v5_f8f6.pre, %dec_label_pc_f8b0.dec_label_pc_f8ef_crit_edge ], [ undef, %bb ]
  store i32 %v0_f8b0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f8f6

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_f8ef, { 1, 0 }
}

define i32 @function_f8fc() local_unnamed_addr {
dec_label_pc_f8fc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f910:
  %v4_f910 = add i32 %arg1, -8
  %v1_f915 = call i32 @function_1f230(i32 %v4_f910)
  ret i32 %v1_f915
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev(i32* %arg1) {
dec_label_pc_f920:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_f920 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_310a8_type* @global_var_310a8.2679 to i32), i32* %arg1, align 4
  %v1_f93a = add i32 %tmp100, 8
  %v2_f93d = inttoptr i32 %v1_f93a to i32*
  store i32 ptrtoint (i32* @global_var_310bc.2680 to i32), i32* %v2_f93d, align 4
  store i32 0, i32* @eax, align 8
  %v0_f957 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f957 = inttoptr i32 %v0_f957 to i32*
  store i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), i32* %v1_f957, align 4
  br i1 false, label %bb, label %dec_label_pc_f920.dec_label_pc_f95f_crit_edge

dec_label_pc_f920.dec_label_pc_f95f_crit_edge:    ; preds = %dec_label_pc_f920
  %v5_f966.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_f95f

bb:                                               ; preds = %dec_label_pc_f920
  br label %dec_label_pc_f95f

dec_label_pc_f95f:                                ; preds = %dec_label_pc_f920.dec_label_pc_f95f_crit_edge, %bb
  %v5_f966 = phi i32 [ %v5_f966.pre, %dec_label_pc_f920.dec_label_pc_f95f_crit_edge ], [ undef, %bb ]
  store i32 %v0_f920, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f966

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_f95f, { 1, 0 }
}

define i32 @function_f96c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f96c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f980:
  %v4_f980 = add i32 %arg1, -24
  %v1_f985 = inttoptr i32 %v4_f980 to i32*
  %v2_f985 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %v1_f985)
  ret i32 %v2_f985
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f990:
  %v4_f990 = add i32 %arg1, -20
  %v1_f995 = inttoptr i32 %v4_f990 to i32*
  %v2_f995 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %v1_f995)
  ret i32 %v2_f995
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %arg1) {
dec_label_pc_f9a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_f9b4 = add i32 %tmp2, 24
  %v2_f9b4 = inttoptr i32 %v1_f9b4 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_f9b4, align 4
  %v0_f9bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_f9bb = add i32 %v0_f9bb, 20
  store i32 %v1_f9bb, i32* %eax.global-to-local, align 8
  %v1_f9be = inttoptr i32 %v0_f9bb to i32*
  store i32 ptrtoint (%vtable_316a8_type* @global_var_316a8.2665 to i32), i32* %v1_f9be, align 4
  %v0_f9c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f9c4 = add i32 %v0_f9c4, 20
  %v2_f9c4 = inttoptr i32 %v1_f9c4 to i32*
  store i32 ptrtoint (i32* @global_var_316b8.2666 to i32), i32* %v2_f9c4, align 4
  %v0_f9cb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f9cb
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa00:
  %v4_fa00 = add i32 %arg1, -28
  %v1_fa05 = inttoptr i32 %v4_fa00 to i32*
  %v2_fa05 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32* %v1_fa05)
  ret i32 %v2_fa05
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa10:
  %v4_fa10 = add i32 %arg1, -8
  %v1_fa15 = inttoptr i32 %v4_fa10 to i32*
  %v2_fa15 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32* %v1_fa15)
  ret i32 %v2_fa15

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32* %arg1) {
dec_label_pc_fa20:
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* @ebx, align 4
  %v1_fa34 = add i32 %tmp2, 28
  %v2_fa34 = inttoptr i32 %v1_fa34 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fa34, align 4
  %v0_fa3b = load i32, i32* @ebx, align 4
  %v1_fa3b = add i32 %v0_fa3b, 8
  store i32 %v1_fa3b, i32* @eax, align 8
  %v1_fa3e = inttoptr i32 %v0_fa3b to i32*
  store i32 ptrtoint (%vtable_30ee8_type* @global_var_30ee8.2671 to i32), i32* %v1_fa3e, align 4
  %v0_fa44 = load i32, i32* @ebx, align 4
  %v1_fa44 = add i32 %v0_fa44, 8
  %v2_fa44 = inttoptr i32 %v1_fa44 to i32*
  store i32 ptrtoint (i32* @global_var_30efc.2672 to i32), i32* %v2_fa44, align 4
  %v0_fa4b = load i32, i32* @eax, align 8
  %v1_fa4e = call i32 @function_1efb0(i32 %v0_fa4b)
  ret i32 %v1_fa4e
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa80:
  %v4_fa80 = add i32 %arg1, -8
  %v1_fa85 = inttoptr i32 %v4_fa80 to i32*
  %v2_fa85 = call i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32* %v1_fa85)
  ret i32 %v2_fa85
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32* %arg1) {
dec_label_pc_fa90:
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_30ee8_type* @global_var_30ee8.2671 to i32), i32* %arg1, align 4
  %v0_faaa = load i32, i32* @ebx, align 4
  %v1_faaa = add i32 %v0_faaa, 8
  store i32 %v1_faaa, i32* @eax, align 8
  %v2_faad = inttoptr i32 %v1_faaa to i32*
  store i32 ptrtoint (i32* @global_var_30efc.2672 to i32), i32* %v2_faad, align 4
  %v0_fab4 = load i32, i32* @eax, align 8
  %v1_fab7 = call i32 @function_1f030(i32 %v0_fab4)
  ret i32 %v1_fab7
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_faf0:
  %v4_faf0 = add i32 %arg1, -28
  %v1_faf5 = call i32 @function_1f600(i32 %v4_faf0)
  ret i32 %v1_faf5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb00:
  %v4_fb00 = add i32 %arg1, -8
  %v1_fb05 = call i32 @function_1f600(i32 %v4_fb00)
  ret i32 %v1_fb05

; uselistorder directives
  uselistorder i32 (i32)* @function_1f600, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32* %arg1) {
dec_label_pc_fb10:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_fb10 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* @ebx, align 4
  %v1_fb24 = add i32 %tmp100, 28
  %v2_fb24 = inttoptr i32 %v1_fb24 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fb24, align 4
  %v0_fb2b = load i32, i32* @ebx, align 4
  %v1_fb2b = add i32 %v0_fb2b, 8
  store i32 %v1_fb2b, i32* @eax, align 8
  %v1_fb2e = inttoptr i32 %v0_fb2b to i32*
  store i32 ptrtoint (%vtable_30ee8_type* @global_var_30ee8.2671 to i32), i32* %v1_fb2e, align 4
  %v0_fb34 = load i32, i32* @ebx, align 4
  %v1_fb34 = add i32 %v0_fb34, 8
  %v2_fb34 = inttoptr i32 %v1_fb34 to i32*
  store i32 ptrtoint (i32* @global_var_30efc.2672 to i32), i32* %v2_fb34, align 4
  %v0_fb3b = load i32, i32* @eax, align 8
  %v1_fb3e = call i32 @function_1f0c0(i32 %v0_fb3b)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_fb50

bb:                                               ; preds = %dec_label_pc_fb10
  br label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %bb, %dec_label_pc_fb10
  store i32 %v0_fb10, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_fb5d() local_unnamed_addr {
dec_label_pc_fb5d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb70:
  %v4_fb70 = add i32 %arg1, -24
  %v1_fb75 = call i32 @function_1f700(i32 %v4_fb70)
  ret i32 %v1_fb75
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb80:
  %v4_fb80 = add i32 %arg1, -20
  %v1_fb85 = call i32 @function_1f700(i32 %v4_fb80)
  ret i32 %v1_fb85
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_fb90:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 %tmp98, i32* %ebx.global-to-local, align 4
  %v1_fba4 = add i32 %tmp98, 24
  %v2_fba4 = inttoptr i32 %v1_fba4 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fba4, align 4
  %v0_fbab = load i32, i32* %ebx.global-to-local, align 4
  %v1_fbab = add i32 %v0_fbab, 20
  store i32 %v1_fbab, i32* %eax.global-to-local, align 8
  %v1_fbae = inttoptr i32 %v0_fbab to i32*
  store i32 ptrtoint (%vtable_316a8_type* @global_var_316a8.2665 to i32), i32* %v1_fbae, align 4
  %v0_fbb4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_fbb4 = add i32 %v0_fbb4, 20
  %v2_fbb4 = inttoptr i32 %v1_fbb4 to i32*
  store i32 ptrtoint (i32* @global_var_316b8.2666 to i32), i32* %v2_fbb4, align 4
  %v0_fbbb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_fbbb
}

define i32 @function_fbc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbc2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_fbc2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_fbc2 = add i32 %v0_fbc2, 1696343108
  %v2_fbc2 = inttoptr i32 %v1_fbc2 to i32*
  %v3_fbc2 = load i32, i32* %v2_fbc2, align 4
  %v4_fbc2 = add i32 %v3_fbc2, -1
  store i32 %v4_fbc2, i32* %v2_fbc2, align 4
  %v0_fbc8 = load i32, i32* %eax.global-to-local, align 8
  %v1_fbc8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fbc8 = xor i32 %v1_fbc8, %v0_fbc8
  %v3_fbc8 = icmp eq i32 %v2_fbc8, 0
  store i32 %v2_fbc8, i32* %eax.global-to-local, align 8
  %v1_fbce = icmp eq i1 %v3_fbc8, false
  br i1 %v1_fbce, label %dec_label_pc_fbdd, label %dec_label_pc_fbd0

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fbc2
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_fbc8

dec_label_pc_fbdd:                                ; preds = %dec_label_pc_fbc2
  ret i32 %v2_fbc8

; uselistorder directives
  uselistorder i32 %v2_fbc8, { 1, 0, 2, 3 }
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbf0:
  %v4_fbf0 = add i32 %arg1, -20
  %v1_fbf5 = inttoptr i32 %v4_fbf0 to i32*
  %v2_fbf5 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32* %v1_fbf5)
  ret i32 %v2_fbf5
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32* %arg1) {
dec_label_pc_fc00:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_316a8_type* @global_var_316a8.2665 to i32), i32* %arg1, align 4
  %v1_fc1a = add i32 %tmp2, 20
  store i32 %v1_fc1a, i32* %eax.global-to-local, align 8
  %v2_fc1d = inttoptr i32 %v1_fc1a to i32*
  store i32 ptrtoint (i32* @global_var_316b8.2666 to i32), i32* %v2_fc1d, align 4
  %v0_fc24 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_fc24
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc60:
  %v4_fc60 = add i32 %arg1, -28
  %v1_fc65 = inttoptr i32 %v4_fc60 to i32*
  %v2_fc65 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32* %v1_fc65)
  ret i32 %v2_fc65
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc70:
  %v4_fc70 = add i32 %arg1, -8
  %v1_fc75 = inttoptr i32 %v4_fc70 to i32*
  %v2_fc75 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32* %v1_fc75)
  ret i32 %v2_fc75

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32* %arg1) {
dec_label_pc_fc80:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_fc94 = add i32 %tmp2, 28
  %v2_fc94 = inttoptr i32 %v1_fc94 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fc94, align 4
  %v0_fc9b = load i32, i32* %ebx.global-to-local, align 4
  %v1_fc9b = add i32 %v0_fc9b, 8
  store i32 %v1_fc9b, i32* @eax, align 8
  %v1_fc9e = inttoptr i32 %v0_fc9b to i32*
  store i32 ptrtoint (%vtable_31188_type* @global_var_31188.2677 to i32), i32* %v1_fc9e, align 4
  %v0_fca4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_fca4 = add i32 %v0_fca4, 8
  %v2_fca4 = inttoptr i32 %v1_fca4 to i32*
  store i32 ptrtoint (i32* @global_var_3119c.2678 to i32), i32* %v2_fca4, align 4
  %v0_fcab = load i32, i32* @eax, align 8
  %v1_fcae = call i32 @function_1f210(i32 %v0_fcab)
  store i32 %v1_fcae, i32* %eax.global-to-local, align 8
  %v0_fcb3 = load i32, i32* @ebx, align 4
  %v1_fcb3 = inttoptr i32 %v0_fcb3 to i32*
  store i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), i32* %v1_fcb3, align 4
  %v3_fcb9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_fcb9
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fce0:
  %v4_fce0 = add i32 %arg1, -28
  %v1_fce5 = call i32 @function_1f9e0(i32 %v4_fce0)
  ret i32 %v1_fce5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcf0:
  %v4_fcf0 = add i32 %arg1, -8
  %v1_fcf5 = call i32 @function_1f9e0(i32 %v4_fcf0)
  ret i32 %v1_fcf5
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32* %arg1) {
dec_label_pc_fd00:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_fd00 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  %v1_fd14 = add i32 %tmp100, 28
  %v2_fd14 = inttoptr i32 %v1_fd14 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fd14, align 4
  %v0_fd1b = load i32, i32* %ebx.global-to-local, align 4
  %v1_fd1b = add i32 %v0_fd1b, 8
  store i32 %v1_fd1b, i32* @eax, align 8
  %v1_fd1e = inttoptr i32 %v0_fd1b to i32*
  store i32 ptrtoint (%vtable_31188_type* @global_var_31188.2677 to i32), i32* %v1_fd1e, align 4
  %v0_fd24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_fd24 = add i32 %v0_fd24, 8
  %v2_fd24 = inttoptr i32 %v1_fd24 to i32*
  store i32 ptrtoint (i32* @global_var_3119c.2678 to i32), i32* %v2_fd24, align 4
  %v0_fd2b = load i32, i32* @eax, align 8
  %v1_fd2e = call i32 @function_1f2b0(i32 %v0_fd2b)
  store i32 0, i32* @eax, align 8
  %v0_fd3e = load i32, i32* %ebx.global-to-local, align 4
  %v1_fd3e = inttoptr i32 %v0_fd3e to i32*
  store i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), i32* %v1_fd3e, align 4
  br i1 false, label %bb, label %dec_label_pc_fd00.dec_label_pc_fd46_crit_edge

dec_label_pc_fd00.dec_label_pc_fd46_crit_edge:    ; preds = %dec_label_pc_fd00
  %v5_fd4d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_fd46

bb:                                               ; preds = %dec_label_pc_fd00
  br label %dec_label_pc_fd46

dec_label_pc_fd46:                                ; preds = %dec_label_pc_fd00.dec_label_pc_fd46_crit_edge, %bb
  %v5_fd4d = phi i32 [ %v5_fd4d.pre, %dec_label_pc_fd00.dec_label_pc_fd46_crit_edge ], [ undef, %bb ]
  store i32 %v0_fd00, i32* %ebx.global-to-local, align 4
  ret i32 %v5_fd4d

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_fd46, { 1, 0 }
}

define i32 @function_fd53() local_unnamed_addr {
dec_label_pc_fd53:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd60:
  %v4_fd60 = add i32 %arg1, -8
  %v1_fd65 = inttoptr i32 %v4_fd60 to i32*
  %v2_fd65 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32* %v1_fd65)
  ret i32 %v2_fd65
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32* %arg1) {
dec_label_pc_fd70:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_31188_type* @global_var_31188.2677 to i32), i32* %arg1, align 4
  %v1_fd8a = add i32 %tmp2, 8
  store i32 %v1_fd8a, i32* @eax, align 8
  %v2_fd8d = inttoptr i32 %v1_fd8a to i32*
  store i32 ptrtoint (i32* @global_var_3119c.2678 to i32), i32* %v2_fd8d, align 4
  %v0_fd94 = load i32, i32* @eax, align 8
  %v1_fd97 = call i32 @function_1f310(i32 %v0_fd94)
  store i32 %v1_fd97, i32* %eax.global-to-local, align 8
  %v0_fd9c = load i32, i32* %ebx.global-to-local, align 4
  %v1_fd9c = inttoptr i32 %v0_fd9c to i32*
  store i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), i32* %v1_fd9c, align 4
  %v3_fda2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_fda2

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_31168_type* @global_var_31168.2587 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_fda9(i32 %arg1) local_unnamed_addr {
dec_label_pc_fda9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_fda9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_fda9 = add i32 %v0_fda9, 1696343108
  %v2_fda9 = inttoptr i32 %v1_fda9 to i32*
  %v3_fda9 = load i32, i32* %v2_fda9, align 4
  %v4_fda9 = add i32 %v3_fda9, -1
  store i32 %v4_fda9, i32* %v2_fda9, align 4
  %v0_fdaf = load i32, i32* %eax.global-to-local, align 8
  %v1_fdaf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fdaf = xor i32 %v1_fdaf, %v0_fdaf
  %v3_fdaf = icmp eq i32 %v2_fdaf, 0
  store i32 %v2_fdaf, i32* %eax.global-to-local, align 8
  %v1_fdb5 = icmp eq i1 %v3_fdaf, false
  br i1 %v1_fdb5, label %dec_label_pc_fdc4, label %dec_label_pc_fdb7

dec_label_pc_fdb7:                                ; preds = %dec_label_pc_fda9
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_fdc4

dec_label_pc_fdc4:                                ; preds = %dec_label_pc_fdb7, %dec_label_pc_fda9
  ret i32 %v2_fdaf
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fdd0:
  %v4_fdd0 = add i32 %arg1, -8
  %v1_fdd5 = inttoptr i32 %v4_fdd0 to i32*
  %v2_fdd5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32* %v1_fdd5)
  ret i32 %v2_fdd5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32* %arg1) {
dec_label_pc_fde0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_31368_type* @global_var_31368.2675 to i32), i32* %arg1, align 4
  %v1_fdfa = add i32 %tmp2, 8
  store i32 %v1_fdfa, i32* @eax, align 8
  %v2_fdfd = inttoptr i32 %v1_fdfa to i32*
  store i32 ptrtoint (i32* @global_var_3137c.2676 to i32), i32* %v2_fdfd, align 4
  %v0_fe04 = load i32, i32* @eax, align 8
  %v1_fe07 = call i32 @function_1f380(i32 %v0_fe04)
  store i32 %v1_fe07, i32* %eax.global-to-local, align 8
  %v0_fe0c = load i32, i32* %ebx.global-to-local, align 4
  %v1_fe0c = inttoptr i32 %v0_fe0c to i32*
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %v1_fe0c, align 4
  %v3_fe12 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_fe12
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe40:
  %v4_fe40 = add i32 %arg1, -28
  %v1_fe45 = call i32 @function_1fca0(i32 %v4_fe40)
  ret i32 %v1_fe45
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe50:
  %v4_fe50 = add i32 %arg1, -8
  %v1_fe55 = call i32 @function_1fca0(i32 %v4_fe50)
  ret i32 %v1_fe55

; uselistorder directives
  uselistorder i32 (i32)* @function_1fca0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32* %arg1) {
dec_label_pc_fe60:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_fe60 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  %v1_fe74 = add i32 %tmp100, 28
  %v2_fe74 = inttoptr i32 %v1_fe74 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fe74, align 4
  %v0_fe7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_fe7b = add i32 %v0_fe7b, 8
  store i32 %v1_fe7b, i32* @eax, align 8
  %v1_fe7e = inttoptr i32 %v0_fe7b to i32*
  store i32 ptrtoint (%vtable_31368_type* @global_var_31368.2675 to i32), i32* %v1_fe7e, align 4
  %v0_fe84 = load i32, i32* %ebx.global-to-local, align 4
  %v1_fe84 = add i32 %v0_fe84, 8
  %v2_fe84 = inttoptr i32 %v1_fe84 to i32*
  store i32 ptrtoint (i32* @global_var_3137c.2676 to i32), i32* %v2_fe84, align 4
  %v0_fe8b = load i32, i32* @eax, align 8
  %v1_fe8e = call i32 @function_1f410(i32 %v0_fe8b)
  store i32 0, i32* @eax, align 8
  %v0_fe9e = load i32, i32* %ebx.global-to-local, align 4
  %v1_fe9e = inttoptr i32 %v0_fe9e to i32*
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %v1_fe9e, align 4
  br i1 false, label %bb, label %dec_label_pc_fe60.dec_label_pc_fea6_crit_edge

dec_label_pc_fe60.dec_label_pc_fea6_crit_edge:    ; preds = %dec_label_pc_fe60
  %v5_fead.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_fea6

bb:                                               ; preds = %dec_label_pc_fe60
  br label %dec_label_pc_fea6

dec_label_pc_fea6:                                ; preds = %dec_label_pc_fe60.dec_label_pc_fea6_crit_edge, %bb
  %v5_fead = phi i32 [ %v5_fead.pre, %dec_label_pc_fe60.dec_label_pc_fea6_crit_edge ], [ undef, %bb ]
  store i32 %v0_fe60, i32* %ebx.global-to-local, align 4
  ret i32 %v5_fead

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_fea6, { 1, 0 }
}

define i32 @function_feb3() local_unnamed_addr {
dec_label_pc_feb3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fec0:
  %v4_fec0 = add i32 %arg1, -28
  %v1_fec5 = inttoptr i32 %v4_fec0 to i32*
  %v2_fec5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %v1_fec5)
  ret i32 %v2_fec5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fed0:
  %v4_fed0 = add i32 %arg1, -8
  %v1_fed5 = inttoptr i32 %v4_fed0 to i32*
  %v2_fed5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %v1_fed5)
  ret i32 %v2_fed5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %arg1) {
dec_label_pc_fee0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_fef4 = add i32 %tmp2, 28
  %v2_fef4 = inttoptr i32 %v1_fef4 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fef4, align 4
  %v0_fefb = load i32, i32* %ebx.global-to-local, align 4
  %v1_fefb = add i32 %v0_fefb, 8
  store i32 %v1_fefb, i32* %eax.global-to-local, align 8
  %v1_fefe = inttoptr i32 %v0_fefb to i32*
  store i32 ptrtoint (%vtable_31368_type* @global_var_31368.2675 to i32), i32* %v1_fefe, align 4
  %v0_ff04 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ff04 = add i32 %v0_ff04, 8
  %v2_ff04 = inttoptr i32 %v1_ff04 to i32*
  store i32 ptrtoint (i32* @global_var_3137c.2676 to i32), i32* %v2_ff04, align 4
  %v0_ff0b = load i32, i32* %eax.global-to-local, align 8
  %v1_ff0e = call i32 @function_1f470(i32 %v0_ff0b)
  store i32 %v1_ff0e, i32* %eax.global-to-local, align 8
  %v0_ff13 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ff13 = inttoptr i32 %v0_ff13 to i32*
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %v1_ff13, align 4
  %v3_ff19 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_ff19
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff40:
  %v4_ff40 = add i32 %arg1, -28
  %v1_ff45 = inttoptr i32 %v4_ff40 to i32*
  %v2_ff45 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32* %v1_ff45)
  ret i32 %v2_ff45
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff50:
  %v4_ff50 = add i32 %arg1, -8
  %v1_ff55 = inttoptr i32 %v4_ff50 to i32*
  %v2_ff55 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32* %v1_ff55)
  ret i32 %v2_ff55

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32* %arg1) {
dec_label_pc_ff60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_ff74 = add i32 %tmp2, 28
  %v2_ff74 = inttoptr i32 %v1_ff74 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_ff74, align 4
  %v0_ff7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_ff7b = add i32 %v0_ff7b, 8
  store i32 %v1_ff7b, i32* %eax.global-to-local, align 8
  %v1_ff7e = inttoptr i32 %v0_ff7b to i32*
  store i32 ptrtoint (%vtable_30fc8_type* @global_var_30fc8.2673 to i32), i32* %v1_ff7e, align 4
  %v0_ff84 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ff84 = add i32 %v0_ff84, 8
  %v2_ff84 = inttoptr i32 %v1_ff84 to i32*
  store i32 ptrtoint (i32* @global_var_30fdc.2674 to i32), i32* %v2_ff84, align 4
  %v0_ff8b = load i32, i32* %eax.global-to-local, align 8
  %v1_ff8e = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %v0_ff8b)
  store i32 %v1_ff8e, i32* %eax.global-to-local, align 8
  %v0_ff93 = load i32, i32* @ebx, align 4
  %v1_ff93 = inttoptr i32 %v0_ff93 to i32*
  store i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), i32* %v1_ff93, align 4
  %v3_ff99 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_ff99
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffc0:
  %v4_ffc0 = add i32 %arg1, -28
  %v1_ffc5 = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %v4_ffc0)
  ret i32 %v1_ffc5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffd0:
  %v4_ffd0 = add i32 %arg1, -8
  %v1_ffd5 = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %v4_ffd0)
  ret i32 %v1_ffd5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32* %arg1) {
dec_label_pc_ffe0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_ffe0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* @ebx, align 4
  %v1_fff4 = add i32 %tmp100, 28
  %v2_fff4 = inttoptr i32 %v1_fff4 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_fff4, align 4
  %v0_fffb = load i32, i32* @ebx, align 4
  %v1_fffb = add i32 %v0_fffb, 8
  store i32 %v1_fffb, i32* @eax, align 8
  %v1_fffe = inttoptr i32 %v0_fffb to i32*
  store i32 ptrtoint (%vtable_30fc8_type* @global_var_30fc8.2673 to i32), i32* %v1_fffe, align 4
  %v0_10004 = load i32, i32* @ebx, align 4
  %v1_10004 = add i32 %v0_10004, 8
  %v2_10004 = inttoptr i32 %v1_10004 to i32*
  store i32 ptrtoint (i32* @global_var_30fdc.2674 to i32), i32* %v2_10004, align 4
  %v0_1000b = load i32, i32* @eax, align 8
  %v1_1000e = call i32 @function_1f590(i32 %v0_1000b)
  store i32 0, i32* @eax, align 8
  %v0_1001e = load i32, i32* @ebx, align 4
  %v1_1001e = inttoptr i32 %v0_1001e to i32*
  store i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), i32* %v1_1001e, align 4
  br i1 false, label %bb, label %dec_label_pc_ffe0.dec_label_pc_10026_crit_edge

dec_label_pc_ffe0.dec_label_pc_10026_crit_edge:   ; preds = %dec_label_pc_ffe0
  %v5_1002d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_10026

bb:                                               ; preds = %dec_label_pc_ffe0
  br label %dec_label_pc_10026

dec_label_pc_10026:                               ; preds = %dec_label_pc_ffe0.dec_label_pc_10026_crit_edge, %bb
  %v5_1002d = phi i32 [ %v5_1002d.pre, %dec_label_pc_ffe0.dec_label_pc_10026_crit_edge ], [ undef, %bb ]
  store i32 %v0_ffe0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1002d

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_10026, { 1, 0 }
}

define i32 @function_10033() local_unnamed_addr {
dec_label_pc_10033:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10040:
  %v4_10040 = add i32 %arg1, -8
  %v1_10045 = inttoptr i32 %v4_10040 to i32*
  %v2_10045 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32* %v1_10045)
  ret i32 %v2_10045
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32* %arg1) {
dec_label_pc_10050:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_30fc8_type* @global_var_30fc8.2673 to i32), i32* %arg1, align 4
  %v0_1006a = load i32, i32* @ebx, align 4
  %v1_1006a = add i32 %v0_1006a, 8
  store i32 %v1_1006a, i32* @eax, align 8
  %v2_1006d = inttoptr i32 %v1_1006a to i32*
  store i32 ptrtoint (i32* @global_var_30fdc.2674 to i32), i32* %v2_1006d, align 4
  %v0_10074 = load i32, i32* @eax, align 8
  %v1_10077 = call i32 @function_1f5f0(i32 %v0_10074)
  store i32 %v1_10077, i32* %eax.global-to-local, align 8
  %v0_1007c = load i32, i32* @ebx, align 4
  %v1_1007c = inttoptr i32 %v0_1007c to i32*
  store i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), i32* %v1_1007c, align 4
  %v3_10082 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_10082

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_30fa8_type* @global_var_30fa8.2586 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_100b0:
  %v4_100b0 = add i32 %arg1, -8
  %v1_100b5 = inttoptr i32 %v4_100b0 to i32*
  %v2_100b5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32* %v1_100b5)
  ret i32 %v2_100b5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32* %arg1) {
dec_label_pc_100c0:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_310a8_type* @global_var_310a8.2679 to i32), i32* %arg1, align 4
  %v1_100da = add i32 %tmp2, 8
  store i32 %v1_100da, i32* @eax, align 8
  %v2_100dd = inttoptr i32 %v1_100da to i32*
  store i32 ptrtoint (i32* @global_var_310bc.2680 to i32), i32* %v2_100dd, align 4
  %v0_100e4 = load i32, i32* @eax, align 8
  %v1_100e7 = call i32 @function_1f660(i32 %v0_100e4)
  store i32 %v1_100e7, i32* %eax.global-to-local, align 8
  %v0_100ec = load i32, i32* @ebx, align 4
  %v1_100ec = inttoptr i32 %v0_100ec to i32*
  store i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), i32* %v1_100ec, align 4
  %v3_100f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_100f2
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10120:
  %eax.global-to-local = alloca i32, align 4
  %v0_10125 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10125
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10130:
  %eax.global-to-local = alloca i32, align 4
  %v0_10135 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10135
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32* %arg1) {
dec_label_pc_10140:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_10140 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  %v1_10154 = add i32 %tmp100, 28
  %v2_10154 = inttoptr i32 %v1_10154 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_10154, align 4
  %v0_1015b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1015b = add i32 %v0_1015b, 8
  store i32 %v1_1015b, i32* @eax, align 8
  %v1_1015e = inttoptr i32 %v0_1015b to i32*
  store i32 ptrtoint (%vtable_310a8_type* @global_var_310a8.2679 to i32), i32* %v1_1015e, align 4
  %v0_10164 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10164 = add i32 %v0_10164, 8
  %v2_10164 = inttoptr i32 %v1_10164 to i32*
  store i32 ptrtoint (i32* @global_var_310bc.2680 to i32), i32* %v2_10164, align 4
  %v0_1016b = load i32, i32* @eax, align 8
  %v1_1016e = call i32 @function_1f6f0(i32 %v0_1016b)
  store i32 0, i32* @eax, align 8
  %v0_1017e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1017e = inttoptr i32 %v0_1017e to i32*
  store i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), i32* %v1_1017e, align 4
  br i1 false, label %bb, label %dec_label_pc_10140.dec_label_pc_10186_crit_edge

dec_label_pc_10140.dec_label_pc_10186_crit_edge:  ; preds = %dec_label_pc_10140
  %v5_1018d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_10186

bb:                                               ; preds = %dec_label_pc_10140
  br label %dec_label_pc_10186

dec_label_pc_10186:                               ; preds = %dec_label_pc_10140.dec_label_pc_10186_crit_edge, %bb
  %v5_1018d = phi i32 [ %v5_1018d.pre, %dec_label_pc_10140.dec_label_pc_10186_crit_edge ], [ undef, %bb ]
  store i32 %v0_10140, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1018d

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_10186, { 1, 0 }
}

define i32 @function_10193() local_unnamed_addr {
dec_label_pc_10193:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_101a0:
  %v4_101a0 = add i32 %arg1, -28
  %v1_101a5 = inttoptr i32 %v4_101a0 to i32*
  %v2_101a5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32* %v1_101a5)
  ret i32 %v2_101a5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_101b0:
  %v4_101b0 = add i32 %arg1, -8
  %v1_101b5 = inttoptr i32 %v4_101b0 to i32*
  %v2_101b5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32* %v1_101b5)
  ret i32 %v2_101b5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32* %arg1) {
dec_label_pc_101c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_101d4 = add i32 %tmp2, 28
  %v2_101d4 = inttoptr i32 %v1_101d4 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_101d4, align 4
  %v0_101db = load i32, i32* %ebx.global-to-local, align 4
  %v1_101db = add i32 %v0_101db, 8
  store i32 %v1_101db, i32* %eax.global-to-local, align 8
  %v1_101de = inttoptr i32 %v0_101db to i32*
  store i32 ptrtoint (%vtable_310a8_type* @global_var_310a8.2679 to i32), i32* %v1_101de, align 4
  %v0_101e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_101e4 = add i32 %v0_101e4, 8
  %v2_101e4 = inttoptr i32 %v1_101e4 to i32*
  store i32 ptrtoint (i32* @global_var_310bc.2680 to i32), i32* %v2_101e4, align 4
  %v0_101f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_101f3 = inttoptr i32 %v0_101f3 to i32*
  store i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), i32* %v1_101f3, align 4
  %v3_101f9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_101f9

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_31088_type* @global_var_31088.2588 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10220:
  %v4_10220 = add i32 %arg1, -28
  %v1_10225 = call i32 @function_20460(i32 %v4_10220)
  ret i32 %v1_10225
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10230:
  %v4_10230 = add i32 %arg1, -8
  %v1_10235 = call i32 @function_20460(i32 %v4_10230)
  ret i32 %v1_10235

; uselistorder directives
  uselistorder i32 (i32)* @function_20460, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_10240:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_10240 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  %v0_10248 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10254 = add i32 %tmp100, 28
  %v2_10254 = inttoptr i32 %v1_10254 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_10254, align 4
  %v0_1025b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1025b = add i32 %v0_1025b, 8
  store i32 %v1_1025b, i32* %eax.global-to-local, align 8
  %v1_1025e = inttoptr i32 %v0_1025b to i32*
  store i32 ptrtoint (%vtable_31268_type* @global_var_31268.2667 to i32), i32* %v1_1025e, align 4
  %v0_10264 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10264 = add i32 %v0_10264, 8
  %v2_10264 = inttoptr i32 %v1_10264 to i32*
  store i32 ptrtoint (i32* @global_var_3127c.2668 to i32), i32* %v2_10264, align 4
  %v0_1026b = load i32, i32* %eax.global-to-local, align 8
  %v1_1026e = call i32 @_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEC1ERKS6_RKS8_(i32 %v0_1026b)
  store i32 %v0_10248, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  %v0_1027e = load i32, i32* @ebx, align 4
  %v1_1027e = inttoptr i32 %v0_1027e to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_1027e, align 4
  br i1 false, label %bb, label %dec_label_pc_10240.dec_label_pc_10286_crit_edge

dec_label_pc_10240.dec_label_pc_10286_crit_edge:  ; preds = %dec_label_pc_10240
  %v5_1028d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_10286

bb:                                               ; preds = %dec_label_pc_10240
  br label %dec_label_pc_10286

dec_label_pc_10286:                               ; preds = %dec_label_pc_10240.dec_label_pc_10286_crit_edge, %bb
  %v5_1028d = phi i32 [ %v5_1028d.pre, %dec_label_pc_10240.dec_label_pc_10286_crit_edge ], [ undef, %bb ]
  store i32 %v0_10240, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1028d

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10286, { 1, 0 }
}

define i32 @function_10293() local_unnamed_addr {
dec_label_pc_10293:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_102a0:
  %v4_102a0 = add i32 %arg1, -8
  %v1_102a5 = inttoptr i32 %v4_102a0 to i32*
  %v2_102a5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32* %v1_102a5)
  ret i32 %v2_102a5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32* %arg1) {
dec_label_pc_102b0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_31268_type* @global_var_31268.2667 to i32), i32* %arg1, align 4
  %v1_102ca = add i32 %tmp2, 8
  store i32 %v1_102ca, i32* @eax, align 8
  %v2_102cd = inttoptr i32 %v1_102ca to i32*
  store i32 ptrtoint (i32* @global_var_3127c.2668 to i32), i32* %v2_102cd, align 4
  %v0_102d4 = load i32, i32* @eax, align 8
  %v1_102d7 = call i32 @function_1f850(i32 %v0_102d4)
  store i32 %v1_102d7, i32* %eax.global-to-local, align 8
  %v0_102dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_102dc = inttoptr i32 %v0_102dc to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_102dc, align 4
  %v3_102e2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_102e2
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10310:
  %v4_10310 = add i32 %arg1, -28
  %v1_10315 = inttoptr i32 %v4_10310 to i32*
  %v2_10315 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %v1_10315)
  ret i32 %v2_10315
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10320:
  %v4_10320 = add i32 %arg1, -8
  %v1_10325 = inttoptr i32 %v4_10320 to i32*
  %v2_10325 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %v1_10325)
  ret i32 %v2_10325

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_10330:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_10344 = add i32 %tmp2, 28
  %v2_10344 = inttoptr i32 %v1_10344 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_10344, align 4
  %v0_1034b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1034b = add i32 %v0_1034b, 8
  store i32 %v1_1034b, i32* @eax, align 8
  %v1_1034e = inttoptr i32 %v0_1034b to i32*
  store i32 ptrtoint (%vtable_31268_type* @global_var_31268.2667 to i32), i32* %v1_1034e, align 4
  %v0_10354 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10354 = add i32 %v0_10354, 8
  %v2_10354 = inttoptr i32 %v1_10354 to i32*
  store i32 ptrtoint (i32* @global_var_3127c.2668 to i32), i32* %v2_10354, align 4
  %v0_1035b = load i32, i32* @eax, align 8
  %v1_1035e = call i32 @function_1f8c0(i32 %v0_1035b)
  store i32 %v1_1035e, i32* %eax.global-to-local, align 8
  %v0_10363 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10363 = inttoptr i32 %v0_10363 to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_10363, align 4
  %v3_10369 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_10369
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10390:
  %v4_10390 = add i32 %arg1, -28
  %v1_10395 = inttoptr i32 %v4_10390 to i32*
  %v2_10395 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %v1_10395)
  ret i32 %v2_10395
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_103a0:
  %v4_103a0 = add i32 %arg1, -8
  %v1_103a5 = inttoptr i32 %v4_103a0 to i32*
  %v2_103a5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %v1_103a5)
  ret i32 %v2_103a5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_103b0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_103c4 = add i32 %tmp2, 28
  %v2_103c4 = inttoptr i32 %v1_103c4 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_103c4, align 4
  %v0_103cb = load i32, i32* %ebx.global-to-local, align 4
  %v1_103cb = add i32 %v0_103cb, 8
  store i32 %v1_103cb, i32* @eax, align 8
  %v1_103ce = inttoptr i32 %v0_103cb to i32*
  store i32 ptrtoint (%vtable_30e28_type* @global_var_30e28.2669 to i32), i32* %v1_103ce, align 4
  %v0_103d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_103d4 = add i32 %v0_103d4, 8
  %v2_103d4 = inttoptr i32 %v1_103d4 to i32*
  store i32 ptrtoint (i32* @global_var_30e3c.2670 to i32), i32* %v2_103d4, align 4
  %v0_103db = load i32, i32* @eax, align 8
  %v1_103de = call i32 @function_1f940(i32 %v0_103db)
  store i32 %v1_103de, i32* %eax.global-to-local, align 8
  %v0_103e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_103e3 = inttoptr i32 %v0_103e3 to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_103e3, align 4
  %v3_103e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_103e9
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10410:
  %v4_10410 = add i32 %arg1, -28
  %v1_10415 = call i32 @__cxa_begin_catch.2394(i32 %v4_10410)
  ret i32 %v1_10415
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10420:
  %v4_10420 = add i32 %arg1, -8
  %v1_10425 = call i32 @__cxa_begin_catch.2394(i32 %v4_10420)
  ret i32 %v1_10425

; uselistorder directives
  uselistorder i32 (i32)* @__cxa_begin_catch.2394, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_10430:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_10430 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  %v1_10444 = add i32 %tmp100, 28
  %v2_10444 = inttoptr i32 %v1_10444 to i32*
  store i32 ptrtoint (i32* @global_var_30e50.2576 to i32), i32* %v2_10444, align 4
  %v0_1044b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1044b = add i32 %v0_1044b, 8
  store i32 %v1_1044b, i32* @eax, align 8
  %v1_1044e = inttoptr i32 %v0_1044b to i32*
  store i32 ptrtoint (%vtable_30e28_type* @global_var_30e28.2669 to i32), i32* %v1_1044e, align 4
  %v0_10454 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10454 = add i32 %v0_10454, 8
  %v2_10454 = inttoptr i32 %v1_10454 to i32*
  store i32 ptrtoint (i32* @global_var_30e3c.2670 to i32), i32* %v2_10454, align 4
  %v0_1045b = load i32, i32* @eax, align 8
  %v1_1045e = call i32 @function_1f9e0(i32 %v0_1045b)
  store i32 0, i32* @eax, align 8
  %v0_1046e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1046e = inttoptr i32 %v0_1046e to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_1046e, align 4
  br i1 false, label %bb, label %dec_label_pc_10430.dec_label_pc_10476_crit_edge

dec_label_pc_10430.dec_label_pc_10476_crit_edge:  ; preds = %dec_label_pc_10430
  %v5_1047d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_10476

bb:                                               ; preds = %dec_label_pc_10430
  br label %dec_label_pc_10476

dec_label_pc_10476:                               ; preds = %dec_label_pc_10430.dec_label_pc_10476_crit_edge, %bb
  %v5_1047d = phi i32 [ %v5_1047d.pre, %dec_label_pc_10430.dec_label_pc_10476_crit_edge ], [ undef, %bb ]
  store i32 %v0_10430, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1047d

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @function_1f9e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10476, { 1, 0 }
}

define i32 @function_10483() local_unnamed_addr {
dec_label_pc_10483:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10490:
  %v4_10490 = add i32 %arg1, -8
  %v1_10495 = inttoptr i32 %v4_10490 to i32*
  %v2_10495 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32* %v1_10495)
  ret i32 %v2_10495
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32* %arg1) {
dec_label_pc_104a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_30e28_type* @global_var_30e28.2669 to i32), i32* %arg1, align 4
  %v1_104ba = add i32 %tmp2, 8
  store i32 %v1_104ba, i32* @eax, align 8
  %v2_104bd = inttoptr i32 %v1_104ba to i32*
  store i32 ptrtoint (i32* @global_var_30e3c.2670 to i32), i32* %v2_104bd, align 4
  %v0_104c4 = load i32, i32* @eax, align 8
  %v1_104c7 = call i32 @function_1fa40(i32 %v0_104c4)
  store i32 %v1_104c7, i32* %eax.global-to-local, align 8
  %v0_104cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_104cc = inttoptr i32 %v0_104cc to i32*
  store i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), i32* %v1_104cc, align 4
  %v3_104d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_104d2

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_27808_type* @global_var_27808.2585 to i32), { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10500:
  %ebx.global-to-local = alloca i32, align 4
  %v0_10500 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 0, i32* @eax, align 8
  %v1_10517 = call i32 @function_1fab0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_10529

bb:                                               ; preds = %dec_label_pc_10500
  br label %dec_label_pc_10529

dec_label_pc_10529:                               ; preds = %bb, %dec_label_pc_10500
  store i32 %v0_10500, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_10536() local_unnamed_addr {
dec_label_pc_10536:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10540:
  %esi.global-to-local = alloca i32, align 4
  %v0_10557 = load i32, i32* @esi, align 4
  %v2_1055b = load i32, i32* %arg1, align 4
  %v1_1055d = icmp eq i32 %v2_1055b, 0
  br i1 %v1_1055d, label %dec_label_pc_10572, label %dec_label_pc_10561

dec_label_pc_10561:                               ; preds = %dec_label_pc_10540
  store i32 -1, i32* %esi.global-to-local, align 4
  %v1_10568 = add i32 %v2_1055b, 4
  %v2_10568 = inttoptr i32 %v1_10568 to i32*
  %v3_10568 = load i32, i32* %v2_10568, align 4
  %v5_10568 = add i32 %v3_10568, -1
  %v15_10568 = icmp eq i32 %v5_10568, 0
  store i32 %v5_10568, i32* %v2_10568, align 4
  br i1 %v15_10568, label %dec_label_pc_10590, label %dec_label_pc_10572

dec_label_pc_10572:                               ; preds = %dec_label_pc_10590, %dec_label_pc_10561, %dec_label_pc_10540
  br i1 false, label %dec_label_pc_105c5, label %dec_label_pc_1057f

dec_label_pc_1057f:                               ; preds = %dec_label_pc_10572
  store i32 %v0_10557, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_10590:                               ; preds = %dec_label_pc_10561
  %v1_10590 = inttoptr i32 %v2_1055b to i32*
  %v1_10598 = add i32 %v2_1055b, 8
  %v2_10598 = inttoptr i32 %v1_10598 to i32*
  %v3_10598 = load i32, i32* %v2_10598, align 4
  %v4_10598 = load i32, i32* %esi.global-to-local, align 4
  %v5_10598 = add i32 %v4_10598, %v3_10598
  store i32 %v5_10598, i32* %v2_10598, align 4
  store i32 %v3_10598, i32* %esi.global-to-local, align 4
  %v10_1059d = icmp eq i32 %v3_10598, 1
  %v1_105a0 = icmp eq i1 %v10_1059d, false
  br i1 %v1_105a0, label %dec_label_pc_10572, label %dec_label_pc_105a2

dec_label_pc_105a2:                               ; preds = %dec_label_pc_10590
  br i1 false, label %dec_label_pc_105c5, label %dec_label_pc_105af

dec_label_pc_105af:                               ; preds = %dec_label_pc_105a2
  %v2_105af = load i32, i32* %v1_10590, align 4
  store i32 %v0_10557, i32* %esi.global-to-local, align 4
  %v1_105bd = add i32 %v2_105af, 12
  %v2_105bd = inttoptr i32 %v1_105bd to i32*
  %v3_105bd = load i32, i32* %v2_105bd, align 4
  ret i32 %v3_105bd

dec_label_pc_105c5:                               ; preds = %dec_label_pc_105a2, %dec_label_pc_10572
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10598, { 0, 2, 1 }
  uselistorder i32 %v2_1055b, { 1, 0, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4 }
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_105d0:
  br i1 false, label %dec_label_pc_10600, label %dec_label_pc_105f1

dec_label_pc_105f1:                               ; preds = %dec_label_pc_105d0
  %v1_105f1 = add i32 %arg1, 4
  ret i32 %v1_105f1

dec_label_pc_10600:                               ; preds = %dec_label_pc_105d0
  ret i32 %arg1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_10610:
  %v1_10624 = add i32 %arg1, 12
  %v2_10624 = inttoptr i32 %v1_10624 to i32*
  %v3_10624 = load i32, i32* %v2_10624, align 4
  %v1_10627 = icmp eq i32 %v3_10624, 0
  br i1 %v1_10627, label %bb, label %dec_label_pc_1062b

bb:                                               ; preds = %dec_label_pc_10610
  %v0_10614 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10629 = call i32 @function_10660(i32 %v0_10614)
  br label %dec_label_pc_1062b

dec_label_pc_1062b:                               ; preds = %bb, %dec_label_pc_10610
  %v1_1062b = add i32 %v3_10624, 12
  ret i32 %v1_1062b
}

define i32 @function_10660(i32 %arg1) local_unnamed_addr {
dec_label_pc_10660:
  %v1_10664 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10664 = xor i32 %v1_10664, %arg1
  %v3_10664 = icmp eq i32 %v2_10664, 0
  %v1_1066b = icmp eq i1 %v3_10664, false
  br i1 %v1_1066b, label %dec_label_pc_10672, label %dec_label_pc_1066d

dec_label_pc_1066d:                               ; preds = %dec_label_pc_10660
  ret i32 %v2_10664

dec_label_pc_10672:                               ; preds = %dec_label_pc_10660
  ret i32 %v2_10664

; uselistorder directives
  uselistorder i32 %v2_10664, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_10680:
  %v1_10694 = add i32 %arg1, 12
  %v2_10694 = inttoptr i32 %v1_10694 to i32*
  %v3_10694 = load i32, i32* %v2_10694, align 4
  %v1_10697 = icmp eq i32 %v3_10694, 0
  br i1 %v1_10697, label %bb, label %dec_label_pc_1069b

bb:                                               ; preds = %dec_label_pc_10680
  %v0_10684 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10699 = call i32 @function_106d0(i32 %v0_10684)
  br label %dec_label_pc_1069b

dec_label_pc_1069b:                               ; preds = %bb, %dec_label_pc_10680
  %v1_1069b = add i32 %v3_10694, 12
  ret i32 %v1_1069b
}

define i32 @function_106d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_106d0:
  %v1_106d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_106d4 = xor i32 %v1_106d4, %arg1
  %v3_106d4 = icmp eq i32 %v2_106d4, 0
  %v1_106db = icmp eq i1 %v3_106d4, false
  br i1 %v1_106db, label %dec_label_pc_106e2, label %dec_label_pc_106dd

dec_label_pc_106dd:                               ; preds = %dec_label_pc_106d0
  ret i32 %v2_106d4

dec_label_pc_106e2:                               ; preds = %dec_label_pc_106d0
  ret i32 %v2_106d4

; uselistorder directives
  uselistorder i32 %v2_106d4, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_106f0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_106f0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_106f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10704 = add i32 %arg1, 12
  %v2_10704 = inttoptr i32 %v1_10704 to i32*
  %v3_10704 = load i32, i32* %v2_10704, align 4
  store i32 %v3_10704, i32* %ebx.global-to-local, align 4
  %v1_10707 = icmp eq i32 %v3_10704, 0
  br i1 %v1_10707, label %bb, label %dec_label_pc_1070b

bb:                                               ; preds = %dec_label_pc_106f0
  %v2_10709 = call i32 @function_10740(i32 %v0_106f4)
  br label %dec_label_pc_1070b

dec_label_pc_1070b:                               ; preds = %bb, %dec_label_pc_106f0
  %v1_1070b = add i32 %v3_10704, 12
  store i32 %v1_1070b, i32* @eax, align 8
  %v1_10711 = call i32 @function_20c30(i32 %v1_1070b)
  %v1_10716 = add i32 %v3_10704, 4
  store i32 %v1_10716, i32* @eax, align 8
  %v1_1071c = call i32 @function_20c30(i32 %v1_10716)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb103, label %dec_label_pc_1072e

bb103:                                            ; preds = %dec_label_pc_1070b
  br label %dec_label_pc_1072e

dec_label_pc_1072e:                               ; preds = %bb103, %dec_label_pc_1070b
  store i32 %v0_106f0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10704, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_20c30, { 1, 0 }
}

define i32 @function_10740(i32 %arg1) local_unnamed_addr {
dec_label_pc_10740:
  %v1_10744 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10744 = xor i32 %v1_10744, %arg1
  %v3_10744 = icmp eq i32 %v2_10744, 0
  store i32 %v2_10744, i32* @eax, align 8
  %v1_1074b = icmp eq i1 %v3_10744, false
  br i1 %v1_1074b, label %bb, label %dec_label_pc_1074d

bb:                                               ; preds = %dec_label_pc_10740
  %v2_1074b = call i32 @function_10752()
  br label %dec_label_pc_1074d

dec_label_pc_1074d:                               ; preds = %bb, %dec_label_pc_10740
  %v0_10751 = phi i32 [ %v2_1074b, %bb ], [ %v2_10744, %dec_label_pc_10740 ]
  ret i32 %v0_10751
}

define i32 @function_10752() local_unnamed_addr {
dec_label_pc_10752:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10758() local_unnamed_addr {
dec_label_pc_10758:
  %eax.global-to-local = alloca i32, align 4
  %v0_10758 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10758
}

define i32 @function_10760(i16 %arg1) local_unnamed_addr {
dec_label_pc_10760:
  %eax.global-to-local = alloca i32, align 4
  %v0_10760 = load i32, i32* %eax.global-to-local, align 8
  %v11_10760 = and i32 %v0_10760, -24
  store i32 %v11_10760, i32* %eax.global-to-local, align 8
  ret i32 %v11_10760

; uselistorder directives
  uselistorder i32 %v11_10760, { 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_10780:
  %ebx.global-to-local = alloca i32, align 4
  %v0_10780 = load i32, i32* %ebx.global-to-local, align 4
  %v0_10784 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10794 = add i32 %arg1, 12
  %v2_10794 = inttoptr i32 %v1_10794 to i32*
  %v3_10794 = load i32, i32* %v2_10794, align 4
  store i32 %v3_10794, i32* %ebx.global-to-local, align 4
  %v1_10797 = icmp eq i32 %v3_10794, 0
  br i1 %v1_10797, label %bb, label %dec_label_pc_1079b

bb:                                               ; preds = %dec_label_pc_10780
  %v2_10799 = call i32 @function_107d0(i32 %v0_10784)
  br label %dec_label_pc_1079b

dec_label_pc_1079b:                               ; preds = %bb, %dec_label_pc_10780
  %v1_1079b = add i32 %v3_10794, 12
  %v1_107a1 = call i32 @function_20cc0(i32 %v1_1079b)
  %v1_107a6 = add i32 %v3_10794, 4
  %v1_107ac = call i32 @function_20cc0(i32 %v1_107a6)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb103, label %dec_label_pc_107be

bb103:                                            ; preds = %dec_label_pc_1079b
  br label %dec_label_pc_107be

dec_label_pc_107be:                               ; preds = %bb103, %dec_label_pc_1079b
  store i32 %v0_10780, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10794, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_20cc0, { 1, 0 }
}

define i32 @function_107d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_107d0:
  %v1_107d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_107d4 = xor i32 %v1_107d4, %arg1
  %v3_107d4 = icmp eq i32 %v2_107d4, 0
  store i32 %v2_107d4, i32* @eax, align 8
  %v1_107db = icmp eq i1 %v3_107d4, false
  br i1 %v1_107db, label %bb, label %dec_label_pc_107dd

bb:                                               ; preds = %dec_label_pc_107d0
  %v2_107db = call i32 @function_107e2()
  br label %dec_label_pc_107dd

dec_label_pc_107dd:                               ; preds = %bb, %dec_label_pc_107d0
  %v0_107e1 = phi i32 [ %v2_107db, %bb ], [ %v2_107d4, %dec_label_pc_107d0 ]
  ret i32 %v0_107e1
}

define i32 @function_107e2() local_unnamed_addr {
dec_label_pc_107e2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_107e8() local_unnamed_addr {
dec_label_pc_107e8:
  %eax.global-to-local = alloca i32, align 4
  %v0_107e8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_107e8
}

define i32 @function_107f0(i16 %arg1) local_unnamed_addr {
dec_label_pc_107f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_107f0 = load i32, i32* %eax.global-to-local, align 8
  %v11_107f0 = and i32 %v0_107f0, -24
  store i32 %v11_107f0, i32* %eax.global-to-local, align 8
  ret i32 %v11_107f0

; uselistorder directives
  uselistorder i32 %v11_107f0, { 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_10810:
  %ebx.global-to-local = alloca i32, align 4
  %v0_10810 = load i32, i32* %ebx.global-to-local, align 4
  %v0_10814 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10824 = add i32 %arg1, 12
  %v2_10824 = inttoptr i32 %v1_10824 to i32*
  %v3_10824 = load i32, i32* %v2_10824, align 4
  store i32 %v3_10824, i32* @ebx, align 4
  store i1 false, i1* @cf, align 1
  %v1_10827 = icmp eq i32 %v3_10824, 0
  br i1 %v1_10827, label %bb, label %dec_label_pc_1082b

bb:                                               ; preds = %dec_label_pc_10810
  %v2_10829 = call i32 @function_10860(i32 %v0_10814)
  br label %dec_label_pc_1082b

dec_label_pc_1082b:                               ; preds = %bb, %dec_label_pc_10810
  %v1_1082b = add i32 %v3_10824, 12
  store i32 %v1_1082b, i32* @eax, align 8
  %v1_10831 = call i32 @function_20d50(i32 %v1_1082b)
  %v1_10836 = add i32 %v3_10824, 4
  store i32 %v1_10836, i32* @eax, align 8
  %v1_1083c = call i32 @function_20d50(i32 %v1_10836)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb103, label %dec_label_pc_1084e

bb103:                                            ; preds = %dec_label_pc_1082b
  br label %dec_label_pc_1084e

dec_label_pc_1084e:                               ; preds = %bb103, %dec_label_pc_1082b
  store i32 %v0_10810, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10824, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_20d50, { 1, 0 }
}

define i32 @function_10860(i32 %arg1) local_unnamed_addr {
dec_label_pc_10860:
  %v1_10864 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10864 = xor i32 %v1_10864, %arg1
  %v3_10864 = icmp eq i32 %v2_10864, 0
  store i32 %v2_10864, i32* @eax, align 8
  %v1_1086b = icmp eq i1 %v3_10864, false
  br i1 %v1_1086b, label %bb, label %dec_label_pc_1086d

bb:                                               ; preds = %dec_label_pc_10860
  %v2_1086b = call i32 @function_10872()
  br label %dec_label_pc_1086d

dec_label_pc_1086d:                               ; preds = %bb, %dec_label_pc_10860
  %v0_10871 = phi i32 [ %v2_1086b, %bb ], [ %v2_10864, %dec_label_pc_10860 ]
  %v0_1086d = load i32, i32* @esp, align 4
  %v5_1086d = icmp ugt i32 %v0_1086d, -57
  store i1 %v5_1086d, i1* @cf, align 1
  ret i32 %v0_10871
}

define i32 @function_10872() local_unnamed_addr {
dec_label_pc_10872:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10878() local_unnamed_addr {
dec_label_pc_10878:
  %eax.global-to-local = alloca i32, align 4
  %v0_10878 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10878
}

define i32 @function_10880(i16 %arg1) local_unnamed_addr {
dec_label_pc_10880:
  %eax.global-to-local = alloca i32, align 4
  %v0_10880 = load i32, i32* %eax.global-to-local, align 8
  %v11_10880 = and i32 %v0_10880, -24
  store i32 %v11_10880, i32* %eax.global-to-local, align 8
  ret i32 %v11_10880

; uselistorder directives
  uselistorder i32 %v11_10880, { 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_108a0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_108a0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_108a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_108b4 = add i32 %arg1, 12
  %v2_108b4 = inttoptr i32 %v1_108b4 to i32*
  %v3_108b4 = load i32, i32* %v2_108b4, align 4
  store i32 %v3_108b4, i32* @ebx, align 4
  %v1_108b7 = icmp eq i32 %v3_108b4, 0
  br i1 %v1_108b7, label %bb, label %dec_label_pc_108bb

bb:                                               ; preds = %dec_label_pc_108a0
  %v2_108b9 = call i32 @function_108f0(i32 %v0_108a4)
  br label %dec_label_pc_108bb

dec_label_pc_108bb:                               ; preds = %bb, %dec_label_pc_108a0
  %v1_108bb = add i32 %v3_108b4, 12
  store i32 %v1_108bb, i32* @eax, align 8
  %v1_108c1 = call i32 @function_20de0(i32 %v1_108bb)
  %v1_108c6 = add i32 %v3_108b4, 4
  store i32 %v1_108c6, i32* @eax, align 8
  %v1_108cc = call i32 @function_20de0(i32 %v1_108c6)
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb103, label %dec_label_pc_108de

bb103:                                            ; preds = %dec_label_pc_108bb
  br label %dec_label_pc_108de

dec_label_pc_108de:                               ; preds = %bb103, %dec_label_pc_108bb
  store i32 %v0_108a0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_108b4, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_20de0, { 1, 0 }
}

define i32 @function_108f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_108f0:
  %v1_108f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_108f4 = xor i32 %v1_108f4, %arg1
  %v3_108f4 = icmp eq i32 %v2_108f4, 0
  store i32 %v2_108f4, i32* @eax, align 8
  %v1_108fb = icmp eq i1 %v3_108f4, false
  br i1 %v1_108fb, label %bb, label %dec_label_pc_108fd

bb:                                               ; preds = %dec_label_pc_108f0
  %v2_108fb = call i32 @function_10902()
  br label %dec_label_pc_108fd

dec_label_pc_108fd:                               ; preds = %bb, %dec_label_pc_108f0
  %v0_10901 = phi i32 [ %v2_108fb, %bb ], [ %v2_108f4, %dec_label_pc_108f0 ]
  ret i32 %v0_10901
}

define i32 @function_10902() local_unnamed_addr {
dec_label_pc_10902:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10908() local_unnamed_addr {
dec_label_pc_10908:
  %eax.global-to-local = alloca i32, align 4
  %v0_10908 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10908
}

define i32 @function_10910(i16 %arg1) local_unnamed_addr {
dec_label_pc_10910:
  %eax.global-to-local = alloca i32, align 4
  %v0_10910 = load i32, i32* %eax.global-to-local, align 8
  %v11_10910 = and i32 %v0_10910, -24
  store i32 %v11_10910, i32* %eax.global-to-local, align 8
  ret i32 %v11_10910

; uselistorder directives
  uselistorder i32 %v11_10910, { 1, 0 }
}

define i32 @_ZN5boost5mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10930:
  ret i32 %arg1
}

define i32 @function_1094a() local_unnamed_addr {
dec_label_pc_1094a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1094a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1094a = add i32 %v0_1094a, -1961724480
  %v2_1094a = inttoptr i32 %v1_1094a to i32*
  %v3_1094a = load i32, i32* %v2_1094a, align 4
  %v4_1094a = add i32 %v3_1094a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1094a, i32* %v2_1094a, align 4
  %v0_10951 = load i32, i32* %eax.global-to-local, align 8
  %v11_10951 = and i32 %v0_10951, -228
  store i32 %v11_10951, i32* %eax.global-to-local, align 8
  %v1_10953 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10953 = xor i32 %v1_10953, %v11_10951
  %v3_10953 = icmp eq i32 %v2_10953, 0
  store i32 %v2_10953, i32* @eax, align 8
  %v1_1095a = icmp eq i1 %v3_10953, false
  br i1 %v1_1095a, label %bb, label %dec_label_pc_1095c

bb:                                               ; preds = %dec_label_pc_1094a
  %v2_1095a = call i32 @function_10985()
  store i32 %v2_1095a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %bb, %dec_label_pc_1094a
  %v0_10960 = phi i32 [ %v2_1095a, %bb ], [ %v2_10953, %dec_label_pc_1094a ]
  ret i32 %v0_10960
}

define i32 @function_10985() local_unnamed_addr {
dec_label_pc_10985:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost18condition_variableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10990:
  store i32 %arg1, i32* @ebx, align 4
  ret i32 0
}

define i32 @function_109ab() local_unnamed_addr {
dec_label_pc_109ab:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_109ab = add i32 %tmp91, -2094959168
  %v2_109ab = inttoptr i32 %v1_109ab to i32*
  %v3_109ab = load i32, i32* %v2_109ab, align 4
  %v4_109ab = add i32 %v3_109ab, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_109ab, i32* %v2_109ab, align 4
  %v0_109b1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_109b1
}

define i32 @function_109ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_109ba:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_109ba = load i32, i32* %ebp.global-to-local, align 4
  %v1_109ba = add i32 %v0_109ba, -1961069120
  %v2_109ba = inttoptr i32 %v1_109ba to i32*
  %v3_109ba = load i32, i32* %v2_109ba, align 4
  %v4_109ba = add i32 %v3_109ba, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_109ba, i32* %v2_109ba, align 4
  %v0_109c1 = load i32, i32* %eax.global-to-local, align 8
  %v11_109c1 = and i32 %v0_109c1, -228
  store i32 %v11_109c1, i32* %eax.global-to-local, align 8
  %v1_109c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_109c3 = xor i32 %v1_109c3, %v11_109c1
  %v3_109c3 = icmp eq i32 %v2_109c3, 0
  store i32 %v2_109c3, i32* %eax.global-to-local, align 8
  %v1_109ca = icmp eq i1 %v3_109c3, false
  br i1 %v1_109ca, label %dec_label_pc_109d6, label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109ba
  ret i32 %v2_109c3

dec_label_pc_109d6:                               ; preds = %dec_label_pc_109ba
  ret i32 %v2_109c3

; uselistorder directives
  uselistorder i32 %v2_109c3, { 1, 0, 2, 3 }
}

define i32 @function_109d1() local_unnamed_addr {
dec_label_pc_109d1:
  %v0_109d1 = call i32 @function_1ead2()
  ret i32 %v0_109d1
}

define i32 @_ZN5boost17bad_function_callC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a00:
  %stack_var_-17 = alloca i32, align 4
  %v2_10a1f = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_10a1f
}

define i32 @function_10a4a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10a4a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_10a4a = load i32, i32* %ebx.global-to-local, align 4
  %v1_10a4a = add i32 %v0_10a4a, 1696343108
  %v2_10a4a = inttoptr i32 %v1_10a4a to i32*
  %v3_10a4a = load i32, i32* %v2_10a4a, align 4
  %v4_10a4a = add i32 %v3_10a4a, -1
  store i32 %v4_10a4a, i32* %v2_10a4a, align 4
  %v0_10a50 = load i32, i32* %eax.global-to-local, align 8
  %v1_10a50 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10a50 = xor i32 %v1_10a50, %v0_10a50
  %v3_10a50 = icmp eq i32 %v2_10a50, 0
  store i32 %v2_10a50, i32* %eax.global-to-local, align 8
  %v0_10a56 = load i32, i32* %esi.global-to-local, align 4
  %v1_10a56 = inttoptr i32 %v0_10a56 to i32*
  store i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), i32* %v1_10a56, align 4
  %v1_10a5c = icmp eq i1 %v3_10a50, false
  br i1 %v1_10a5c, label %dec_label_pc_10a6a, label %dec_label_pc_10a5e

dec_label_pc_10a5e:                               ; preds = %dec_label_pc_10a4a
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v0_10a69 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10a69

dec_label_pc_10a6a:                               ; preds = %dec_label_pc_10a4a
  %v1_10a69 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_10a69

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_31338_type* @global_var_31338.2583 to i32), { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5CNode12AbortMessageEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a90:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_10aa5 = add i32 %arg1, 12
  %v2_10aa5 = inttoptr i32 %v1_10aa5 to i32*
  %v3_10aa5 = load i32, i32* %v2_10aa5, align 4
  store i32 %v3_10aa5, i32* %eax.global-to-local, align 8
  %v1_10aab = add i32 %arg1, 24
  %v2_10aab = inttoptr i32 %v1_10aab to i32*
  store i32 0, i32* %v2_10aab, align 4
  %v0_10ab2 = load i32, i32* %eax.global-to-local, align 8
  %v1_10ab2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_10ab2 = add i32 %v1_10ab2, 16
  %v3_10ab2 = inttoptr i32 %v2_10ab2 to i32*
  store i32 %v0_10ab2, i32* %v3_10ab2, align 4
  %v3_10ab5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_10ab5
}

define i32 @function_10abc() local_unnamed_addr {
dec_label_pc_10abc:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_10abc = add i32 %tmp91, -1954646592
  %v2_10abc = inttoptr i32 %v1_10abc to i32*
  %v3_10abc = load i32, i32* %v2_10abc, align 4
  %v4_10abc = add i32 %v3_10abc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_10abc, i32* %v2_10abc, align 4
  %v0_10ac2 = load i32, i32* %eax.global-to-local, align 8
  %v1_10ac2 = add i32 %v0_10ac2, -2097152000
  %v2_10ac2 = inttoptr i32 %v1_10ac2 to i32*
  %v3_10ac2 = load i32, i32* %v2_10ac2, align 4
  %v4_10ac2 = xor i32 %v3_10ac2, -24
  store i32 %v4_10ac2, i32* %v2_10ac2, align 4
  %v0_10ac9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10ac9 = add i32 %v0_10ac9, -1333556800
  %v2_10ac9 = inttoptr i32 %v1_10ac9 to i32*
  %v3_10ac9 = load i32, i32* %v2_10ac9, align 4
  %v4_10ac9 = load i32, i32* %eax.global-to-local, align 8
  %v5_10ac9 = add i32 %v4_10ac9, %v3_10ac9
  store i32 %v5_10ac9, i32* %v2_10ac9, align 4
  %v2_10acf = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_10acf = load i32, i32* %eax.global-to-local, align 8
  %v4_10acf = trunc i32 %v3_10acf to i8
  %v5_10acf = add i8 %v4_10acf, %v2_10acf
  %v21_10acf = inttoptr i32 %v3_10acf to i8*
  store i8 %v5_10acf, i8* %v21_10acf, align 1
  %v0_10ad1 = load i32, i32* @esp, align 4
  %v1_10ad1 = load i32, i32* %edi.global-to-local, align 4
  %v2_10ad1 = mul i32 %v1_10ad1, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_10ad1 = add i32 %v0_10ad1, -125
  %v4_10ad1 = add i32 %v3_10ad1, %v2_10ad1
  %v5_10ad1 = inttoptr i32 %v4_10ad1 to i8*
  %v6_10ad1 = load i8, i8* %v5_10ad1, align 1
  %v7_10ad1 = load i32, i32* %edx.global-to-local, align 4
  %v8_10ad1 = udiv i32 %v7_10ad1, 256
  %v9_10ad1 = trunc i32 %v8_10ad1 to i8
  %v10_10ad1 = add i8 %v9_10ad1, %v6_10ad1
  store i8 %v10_10ad1, i8* %v5_10ad1, align 1
  %v0_10ad5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10ad5
}

define i32 @function_10b10() local_unnamed_addr {
dec_label_pc_10b10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10b10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10b10 = add i32 %v0_10b10, 168
  %v2_10b10 = inttoptr i32 %v1_10b10 to i8*
  store i8 0, i8* %v2_10b10, align 1
  %v0_10b17 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10b17
}

define i32 @function_10b44() local_unnamed_addr {
dec_label_pc_10b44:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10b60:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_10b60 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v2_10b74 = load i32, i32* %arg1, align 4
  %v1_10b76 = icmp eq i32 %v2_10b74, 0
  br i1 %v1_10b76, label %dec_label_pc_10b86, label %dec_label_pc_10b7a

dec_label_pc_10b7a:                               ; preds = %dec_label_pc_10b60
  %v3_10b76 = trunc i32 %v2_10b74 to i8
  %v5_10b82 = icmp eq i8 %v3_10b76, 0
  %v1_10b84 = icmp eq i1 %v5_10b82, false
  br i1 %v1_10b84, label %dec_label_pc_10b98, label %dec_label_pc_10b86

dec_label_pc_10b86:                               ; preds = %dec_label_pc_10b98, %dec_label_pc_10b7a, %dec_label_pc_10b60
  br i1 false, label %dec_label_pc_10ba0, label %dec_label_pc_10b93

dec_label_pc_10b93:                               ; preds = %dec_label_pc_10b86
  store i32 %v0_10b60, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b7a
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_10b86

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b86
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10bb0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_10bd3 = add i32 %arg2, 4
  %v2_10bd3 = inttoptr i32 %v1_10bd3 to i32*
  %v3_10bd3 = load i32, i32* %v2_10bd3, align 4
  %v1_10be2 = icmp eq i32 %v3_10bd3, 0
  br i1 %v1_10be2, label %dec_label_pc_10c39, label %dec_label_pc_10bea

dec_label_pc_10bea:                               ; preds = %dec_label_pc_10bb0
  store i32 0, i32* %edi.global-to-local, align 4
  %v1_10c05 = icmp eq i32 %tmp105, 0
  br i1 %v1_10c05, label %dec_label_pc_10c11, label %dec_label_pc_10c09

dec_label_pc_10c09:                               ; preds = %dec_label_pc_10bea
  br label %dec_label_pc_10c11

dec_label_pc_10c11:                               ; preds = %dec_label_pc_10c09, %dec_label_pc_10bea
  br label %dec_label_pc_10c39

dec_label_pc_10c39:                               ; preds = %dec_label_pc_10bb0, %dec_label_pc_10c11
  store i32 0, i32* %edi.global-to-local, align 4
  %v1_10c39 = add i32 %arg2, 12
  %v2_10c39 = inttoptr i32 %v1_10c39 to i32*
  %v3_10c39 = load i32, i32* %v2_10c39, align 4
  %v2_10c3c = add i32 %arg1, 12
  %v3_10c3c = inttoptr i32 %v2_10c3c to i32*
  store i32 %v3_10c39, i32* %v3_10c3c, align 4
  %v0_10c3f = load i32, i32* %ebx.global-to-local, align 4
  %v1_10c3f = add i32 %v0_10c3f, 16
  %v2_10c3f = inttoptr i32 %v1_10c3f to i32*
  %v3_10c3f = load i32, i32* %v2_10c3f, align 4
  %v1_10c42 = load i32, i32* %esi.global-to-local, align 4
  %v2_10c42 = add i32 %v1_10c42, 16
  %v3_10c42 = inttoptr i32 %v2_10c42 to i32*
  store i32 %v3_10c3f, i32* %v3_10c42, align 4
  %v0_10c45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10c45 = add i32 %v0_10c45, 8
  %v2_10c45 = inttoptr i32 %v1_10c45 to i32*
  %v3_10c45 = load i32, i32* %v2_10c45, align 4
  %v1_10c48 = load i32, i32* %esi.global-to-local, align 4
  %v2_10c48 = add i32 %v1_10c48, 8
  %v3_10c48 = inttoptr i32 %v2_10c48 to i32*
  store i32 %v3_10c45, i32* %v3_10c48, align 4
  %v0_10c4b = load i32, i32* %esi.global-to-local, align 4
  %v1_10c4b = add i32 %v0_10c4b, 4
  %v2_10c4b = inttoptr i32 %v1_10c4b to i32*
  %v3_10c4b = load i32, i32* %v2_10c4b, align 4
  %v1_10c4e = icmp eq i32 %v3_10c4b, 0
  br i1 %v1_10c4e, label %dec_label_pc_10c5a, label %dec_label_pc_10c52

dec_label_pc_10c52:                               ; preds = %dec_label_pc_10c39
  %v1_10c54 = load i32, i32* @esp, align 4
  %v2_10c54 = inttoptr i32 %v1_10c54 to i32*
  store i32 %v3_10c4b, i32* %v2_10c54, align 4
  %v1_10c5c.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_10c5a

dec_label_pc_10c5a:                               ; preds = %dec_label_pc_10c52, %dec_label_pc_10c39
  %v1_10c5c = phi i32 [ %v1_10c5c.pre, %dec_label_pc_10c52 ], [ %v0_10c4b, %dec_label_pc_10c39 ]
  %v0_10c5a = load i32, i32* %edi.global-to-local, align 4
  %v1_10c5a = icmp eq i32 %v0_10c5a, 0
  %v2_10c5c = add i32 %v1_10c5c, 4
  %v3_10c5c = inttoptr i32 %v2_10c5c to i32*
  store i32 %v0_10c5a, i32* %v3_10c5c, align 4
  br i1 %v1_10c5a, label %dec_label_pc_10c69, label %dec_label_pc_10c61

dec_label_pc_10c61:                               ; preds = %dec_label_pc_10c5a
  %v0_10c61 = load i32, i32* %edi.global-to-local, align 4
  %v1_10c63 = load i32, i32* @esp, align 4
  %v2_10c63 = inttoptr i32 %v1_10c63 to i32*
  store i32 %v0_10c61, i32* %v2_10c63, align 4
  br label %dec_label_pc_10c69

dec_label_pc_10c69:                               ; preds = %dec_label_pc_10c61, %dec_label_pc_10c5a
  %v0_10c69 = load i32, i32* @esp, align 4
  %v1_10c69 = add i32 %v0_10c69, 20
  %v2_10c69 = inttoptr i32 %v1_10c69 to i32*
  %v3_10c69 = load i32, i32* %v2_10c69, align 4
  %v1_10c6d = icmp eq i32 %v3_10c69, 0
  br i1 %v1_10c6d, label %dec_label_pc_10c79, label %dec_label_pc_10c71

dec_label_pc_10c71:                               ; preds = %dec_label_pc_10c69
  %v2_10c73 = inttoptr i32 %v0_10c69 to i32*
  store i32 %v3_10c69, i32* %v2_10c73, align 4
  %v0_10c79.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_10c79

dec_label_pc_10c79:                               ; preds = %dec_label_pc_10c71, %dec_label_pc_10c69
  %v0_10c96 = phi i32 [ %v0_10c79.pre, %dec_label_pc_10c71 ], [ %v0_10c69, %dec_label_pc_10c69 ]
  %v1_10c79 = add i32 %v0_10c96, 28
  %v2_10c79 = inttoptr i32 %v1_10c79 to i32*
  %v3_10c79 = load i32, i32* %v2_10c79, align 4
  %v1_10c7d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10c7d = xor i32 %v1_10c7d, %v3_10c79
  %v3_10c7d = icmp eq i32 %v2_10c7d, 0
  %v1_10c84 = icmp eq i1 %v3_10c7d, false
  br i1 %v1_10c84, label %dec_label_pc_10cb4, label %dec_label_pc_10c86

dec_label_pc_10c86:                               ; preds = %dec_label_pc_10c79
  %v1_10c86 = add i32 %v0_10c96, 44
  %v2_10c86 = inttoptr i32 %v1_10c86 to i32*
  %v3_10c86 = load i32, i32* %v2_10c86, align 4
  store i32 %v3_10c86, i32* %ebx.global-to-local, align 4
  %v1_10c8a = add i32 %v0_10c96, 48
  %v2_10c8a = inttoptr i32 %v1_10c8a to i32*
  %v3_10c8a = load i32, i32* %v2_10c8a, align 4
  store i32 %v3_10c8a, i32* %esi.global-to-local, align 4
  %v1_10c8e = add i32 %v0_10c96, 52
  %v2_10c8e = inttoptr i32 %v1_10c8e to i32*
  %v3_10c8e = load i32, i32* %v2_10c8e, align 4
  store i32 %v3_10c8e, i32* %edi.global-to-local, align 4
  ret i32 %v2_10c7d

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10c79
  ret i32 %v2_10c7d

; uselistorder directives
  uselistorder i32 %v2_10c7d, { 1, 0, 2 }
  uselistorder i32 %v0_10c96, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_10c39, { 1, 0 }
}

define i32 @function_10cba() local_unnamed_addr {
dec_label_pc_10cba:
  %eax.global-to-local = alloca i32, align 4
  %v0_10cba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10cba
}

define i32 @function_10cc3() local_unnamed_addr {
dec_label_pc_10cc3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10cd7() local_unnamed_addr {
dec_label_pc_10cd7:
  %v0_10cd9 = call i32 @function_10cc3()
  ret i32 %v0_10cd9
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ce0:
  %v1_10cf9 = add i32 %arg2, 4
  ret i32 %v1_10cf9
}

define i32 @function_10d10(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_10d10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10d10 = add i32 %v0_10d10, 1137118278
  %v2_10d10 = inttoptr i32 %v1_10d10 to i32*
  %v3_10d10 = load i32, i32* %v2_10d10, align 4
  %v4_10d10 = add i32 %v3_10d10, -1
  store i32 %v4_10d10, i32* %v2_10d10, align 4
  %v2_10d16 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_10d16 = load i32, i32* %ebx.global-to-local, align 4
  %v4_10d16 = trunc i32 %v3_10d16 to i8
  %v5_10d16 = or i8 %v4_10d16, %v2_10d16
  %v11_10d16 = load i32, i32* %eax.global-to-local, align 8
  %v12_10d16 = inttoptr i32 %v11_10d16 to i8*
  store i8 %v5_10d16, i8* %v12_10d16, align 1
  %v0_10d19 = load i32, i32* %eax.global-to-local, align 8
  %v4_10d19 = mul i32 %v0_10d19, 2
  %v14_10d19 = icmp eq i32 %v4_10d19, 0
  store i32 %v4_10d19, i32* %eax.global-to-local, align 8
  %v1_10d1d = load i32, i32* %ebx.global-to-local, align 4
  %v2_10d1d = add i32 %v1_10d1d, 12
  %v3_10d1d = inttoptr i32 %v2_10d1d to i32*
  store i32 %v4_10d19, i32* %v3_10d1d, align 4
  br i1 %v14_10d19, label %dec_label_pc_10d2a, label %dec_label_pc_10d22

dec_label_pc_10d22:                               ; preds = %dec_label_pc_10d10
  br label %dec_label_pc_10d2a

dec_label_pc_10d2a:                               ; preds = %dec_label_pc_10d22, %dec_label_pc_10d10
  %v0_10d2a = load i32, i32* %esi.global-to-local, align 4
  %v1_10d2a = add i32 %v0_10d2a, 16
  %v2_10d2a = inttoptr i32 %v1_10d2a to i32*
  %v3_10d2a = load i32, i32* %v2_10d2a, align 4
  store i32 %v3_10d2a, i32* %eax.global-to-local, align 8
  %v0_10d2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_10d2d = add i32 %v0_10d2d, 8
  %v2_10d2d = inttoptr i32 %v1_10d2d to i32*
  store i32 ptrtoint (i32* @global_var_30efc.2672 to i32), i32* %v2_10d2d, align 4
  %v0_10d34 = load i32, i32* %eax.global-to-local, align 8
  %v1_10d34 = load i32, i32* %ebx.global-to-local, align 4
  %v2_10d34 = add i32 %v1_10d34, 16
  %v3_10d34 = inttoptr i32 %v2_10d34 to i32*
  store i32 %v0_10d34, i32* %v3_10d34, align 4
  %v0_10d37 = load i32, i32* %esi.global-to-local, align 4
  %v1_10d37 = add i32 %v0_10d37, 20
  %v2_10d37 = inttoptr i32 %v1_10d37 to i32*
  %v3_10d37 = load i32, i32* %v2_10d37, align 4
  store i32 %v3_10d37, i32* %eax.global-to-local, align 8
  %v1_10d3a = load i32, i32* %ebx.global-to-local, align 4
  %v2_10d3a = add i32 %v1_10d3a, 20
  %v3_10d3a = inttoptr i32 %v2_10d3a to i32*
  store i32 %v3_10d37, i32* %v3_10d3a, align 4
  %v0_10d3d = load i32, i32* %esi.global-to-local, align 4
  %v1_10d3d = add i32 %v0_10d3d, 24
  %v2_10d3d = inttoptr i32 %v1_10d3d to i32*
  %v3_10d3d = load i32, i32* %v2_10d3d, align 4
  store i32 %v3_10d3d, i32* %eax.global-to-local, align 8
  %v0_10d40 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10d40 = inttoptr i32 %v0_10d40 to i32*
  store i32 ptrtoint (%vtable_30ee8_type* @global_var_30ee8.2671 to i32), i32* %v1_10d40, align 4
  %v0_10d46 = load i32, i32* %eax.global-to-local, align 8
  %v1_10d46 = load i32, i32* %ebx.global-to-local, align 4
  %v2_10d46 = add i32 %v1_10d46, 24
  %v3_10d46 = inttoptr i32 %v2_10d46 to i32*
  store i32 %v0_10d46, i32* %v3_10d46, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_10d4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10d4d = xor i32 %v1_10d4d, %arg1
  %v3_10d4d = icmp eq i32 %v2_10d4d, 0
  store i32 %v2_10d4d, i32* %eax.global-to-local, align 8
  %v1_10d54 = icmp eq i1 %v3_10d4d, false
  br i1 %v1_10d54, label %dec_label_pc_10d5c, label %dec_label_pc_10d56

dec_label_pc_10d56:                               ; preds = %dec_label_pc_10d2a
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v2_10d4d

dec_label_pc_10d5c:                               ; preds = %dec_label_pc_10d2a
  ret i32 %v2_10d4d

; uselistorder directives
  uselistorder i32 %v2_10d4d, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10d19, { 2, 0, 1 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_30ee8_type* @global_var_30ee8.2671 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d90:
  %v4_10d90 = add i32 %arg1, -28
  %v1_10d95 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %v4_10d90)
  ret i32 %v1_10d95

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %arg1) {
dec_label_pc_10da0:
  ret i32 0
}

define i32 @function_10dc0() local_unnamed_addr {
dec_label_pc_10dc0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10dc0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10dc0 = add i32 %v0_10dc0, -1996217228
  %v2_10dc0 = inttoptr i32 %v1_10dc0 to i32*
  %v3_10dc0 = load i32, i32* %v2_10dc0, align 4
  %v4_10dc0 = sub i32 %v3_10dc0, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_10dc0, i32* %v2_10dc0, align 4
  %v0_10dc6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10dc6
}

define i32 @_ZN5boost15throw_exceptionISt13runtime_errorEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e10:
  ret i32 0
}

define i32 @function_10eb7() local_unnamed_addr {
dec_label_pc_10eb7:
  %eax.global-to-local = alloca i32, align 4
  %v0_10eb7 = load i32, i32* %eax.global-to-local, align 8
  %v11_10eb7 = and i32 %v0_10eb7, -24
  store i32 %v11_10eb7, i32* %eax.global-to-local, align 8
  ret i32 %v11_10eb7

; uselistorder directives
  uselistorder i32 %v11_10eb7, { 1, 0 }
}

define i32 @function_10ee3(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ee3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10ef2() local_unnamed_addr {
dec_label_pc_10ef2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_10ef4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10ef4 = add i32 %v0_10ef4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_10ef4, i32* %ebx.global-to-local, align 4
  %v0_10ef5 = load i32, i32* %eax.global-to-local, align 8
  %v2_10ef5 = load i1, i1* %cf.global-to-local, align 1
  %v3_10ef5 = zext i1 %v2_10ef5 to i32
  %v4_10ef5 = add i32 %v0_10ef5, 176
  %v5_10ef5 = add i32 %v4_10ef5, %v3_10ef5
  %v30_10ef5 = urem i32 %v5_10ef5, 256
  %v32_10ef5 = and i32 %v0_10ef5, -256
  %v33_10ef5 = or i32 %v30_10ef5, %v32_10ef5
  store i32 %v33_10ef5, i32* %eax.global-to-local, align 8
  %v2_10ef8 = inttoptr i32 %v33_10ef5 to i32*
  %v3_10ef8 = load i32, i32* %v2_10ef8, align 4
  %v4_10ef8 = add i32 %v33_10ef5, %v3_10ef8
  %v9_10ef8 = icmp ult i32 %v4_10ef8, %v33_10ef5
  store i1 %v9_10ef8, i1* %cf.global-to-local, align 1
  %v0_10f0a = load i32, i32* %esi.global-to-local, align 4
  %tmp100 = urem i32 %v0_10f0a, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  store i32 %v4_10ef8, i32* @eax, align 8
  store i32 %v4_10ef8, i32* %esi.global-to-local, align 4
  %tmp102 = zext i1 %tmp101 to i32
  %v3_10f1c = call i32 @function_10ee3(i32 %tmp102)
  store i32 %v3_10f1c, i32* %eax.global-to-local, align 8
  ret i32 %v3_10f1c

; uselistorder directives
  uselistorder i32 %v33_10ef5, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10ef5, { 1, 0 }
}

define i32 @function_10f1e() local_unnamed_addr {
dec_label_pc_10f1e:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f1e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f1e
}

define i32 @_ZN5boost9date_time6c_time6gmtimeEPKlP2tm(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f20:
  ret i32 %arg1
}

define i32 @function_10f4a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f4a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_10f4a = load i32, i32* %ebp.global-to-local, align 4
  %v1_10f4a = add i32 %v0_10f4a, -1960938304
  %v2_10f4a = inttoptr i32 %v1_10f4a to i32*
  %v3_10f4a = load i32, i32* %v2_10f4a, align 4
  %v4_10f4a = add i32 %v3_10f4a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_10f4a, i32* %v2_10f4a, align 4
  %v0_10f51 = load i32, i32* %eax.global-to-local, align 8
  %v11_10f51 = and i32 %v0_10f51, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.2406 to i8) to i32), i32 -256)
  store i32 %v11_10f51, i32* %eax.global-to-local, align 8
  %v0_10f53 = load i32, i32* %edx.global-to-local, align 4
  %v1_10f53 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10f53 = xor i32 %v1_10f53, %v0_10f53
  %v3_10f53 = icmp eq i32 %v2_10f53, 0
  store i32 %v2_10f53, i32* %edx.global-to-local, align 4
  %v1_10f5a = icmp eq i1 %v3_10f53, false
  br i1 %v1_10f5a, label %dec_label_pc_10f68, label %dec_label_pc_10f5c

dec_label_pc_10f5c:                               ; preds = %dec_label_pc_10f4a
  ret i32 %v11_10f51

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f4a
  ret i32 %v11_10f51

; uselistorder directives
  uselistorder i32 %v11_10f51, { 2, 1, 0 }
}

define i32 @function_10fac() local_unnamed_addr {
dec_label_pc_10fac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10fac = load i32, i32* %ebx.global-to-local, align 4
  %v1_10fac = add i32 %v0_10fac, -1994644412
  %v2_10fac = inttoptr i32 %v1_10fac to i32*
  %v3_10fac = load i32, i32* %v2_10fac, align 4
  %v4_10fac = sub i32 %v3_10fac, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_10fac, i32* %v2_10fac, align 4
  %v0_10fb2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10fb2
}

define i32 @function_10fb3() local_unnamed_addr {
dec_label_pc_10fb3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10fc3() local_unnamed_addr {
dec_label_pc_10fc3:
  %v0_10fc5 = call i32 @function_10fb3()
  ret i32 %v0_10fc5
}

define i32 @_ZNSt11logic_errorC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10fd0:
  %v1_10fe8 = add i32 %arg2, 4
  ret i32 %v1_10fe8
}

define i32 @function_10fff(i32 %arg1) local_unnamed_addr {
dec_label_pc_10fff:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10fff = load i32, i32* %ebx.global-to-local, align 4
  %v1_10fff = add i32 %v0_10fff, 1697391684
  %v2_10fff = inttoptr i32 %v1_10fff to i32*
  %v3_10fff = load i32, i32* %v2_10fff, align 4
  %v4_10fff = add i32 %v3_10fff, -1
  store i32 %v4_10fff, i32* %v2_10fff, align 4
  %v0_11005 = load i32, i32* %eax.global-to-local, align 8
  %v1_11005 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11005 = xor i32 %v1_11005, %v0_11005
  %v3_11005 = icmp eq i32 %v2_11005, 0
  store i32 %v2_11005, i32* %eax.global-to-local, align 8
  %v1_1100b = icmp eq i1 %v3_11005, false
  br i1 %v1_1100b, label %dec_label_pc_11012, label %dec_label_pc_1100d

dec_label_pc_1100d:                               ; preds = %dec_label_pc_10fff
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_11005

dec_label_pc_11012:                               ; preds = %dec_label_pc_10fff
  ret i32 %v2_11005

; uselistorder directives
  uselistorder i32 %v2_11005, { 1, 0, 2, 3 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11030:
  %v1_11049 = add i32 %arg2, 4
  ret i32 %v1_11049
}

define i32 @function_11060(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11060:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_11060 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11060 = add i32 %v0_11060, 63376454
  %v2_11060 = inttoptr i32 %v1_11060 to i32*
  %v3_11060 = load i32, i32* %v2_11060, align 4
  %v4_11060 = add i32 %v3_11060, -1
  store i32 %v4_11060, i32* %v2_11060, align 4
  %v0_11066 = load i32, i32* %eax.global-to-local, align 8
  %v4_11068 = mul i32 %v0_11066, 2
  %v14_11068 = icmp eq i32 %v4_11068, 0
  store i32 %v4_11068, i32* %eax.global-to-local, align 8
  %v0_1106a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1106a = add i32 %v0_1106a, 8
  %v2_1106a = inttoptr i32 %v1_1106a to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_1106a, align 4
  %v1_11073 = load i32, i32* %ebx.global-to-local, align 4
  %v2_11073 = add i32 %v1_11073, 12
  %v3_11073 = inttoptr i32 %v2_11073 to i32*
  store i32 %v4_11068, i32* %v3_11073, align 4
  br i1 %v14_11068, label %dec_label_pc_11080, label %dec_label_pc_11078

dec_label_pc_11078:                               ; preds = %dec_label_pc_11060
  br label %dec_label_pc_11080

dec_label_pc_11080:                               ; preds = %dec_label_pc_11078, %dec_label_pc_11060
  %v0_11080 = load i32, i32* %esi.global-to-local, align 4
  %v1_11080 = add i32 %v0_11080, 16
  %v2_11080 = inttoptr i32 %v1_11080 to i32*
  %v3_11080 = load i32, i32* %v2_11080, align 4
  store i32 %v3_11080, i32* %eax.global-to-local, align 8
  %v0_11083 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11083 = add i32 %v0_11083, 8
  %v2_11083 = inttoptr i32 %v1_11083 to i32*
  store i32 ptrtoint (i32* @global_var_30fdc.2674 to i32), i32* %v2_11083, align 4
  %v0_1108a = load i32, i32* %eax.global-to-local, align 8
  %v1_1108a = load i32, i32* %ebx.global-to-local, align 4
  %v2_1108a = add i32 %v1_1108a, 16
  %v3_1108a = inttoptr i32 %v2_1108a to i32*
  store i32 %v0_1108a, i32* %v3_1108a, align 4
  %v0_1108d = load i32, i32* %esi.global-to-local, align 4
  %v1_1108d = add i32 %v0_1108d, 20
  %v2_1108d = inttoptr i32 %v1_1108d to i32*
  %v3_1108d = load i32, i32* %v2_1108d, align 4
  store i32 %v3_1108d, i32* %eax.global-to-local, align 8
  %v1_11090 = load i32, i32* %ebx.global-to-local, align 4
  %v2_11090 = add i32 %v1_11090, 20
  %v3_11090 = inttoptr i32 %v2_11090 to i32*
  store i32 %v3_1108d, i32* %v3_11090, align 4
  %v0_11093 = load i32, i32* %esi.global-to-local, align 4
  %v1_11093 = add i32 %v0_11093, 24
  %v2_11093 = inttoptr i32 %v1_11093 to i32*
  %v3_11093 = load i32, i32* %v2_11093, align 4
  store i32 %v3_11093, i32* %eax.global-to-local, align 8
  %v0_11096 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11096 = inttoptr i32 %v0_11096 to i32*
  store i32 ptrtoint (%vtable_30fc8_type* @global_var_30fc8.2673 to i32), i32* %v1_11096, align 4
  %v0_1109c = load i32, i32* %eax.global-to-local, align 8
  %v1_1109c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1109c = add i32 %v1_1109c, 24
  %v3_1109c = inttoptr i32 %v2_1109c to i32*
  store i32 %v0_1109c, i32* %v3_1109c, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_110a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_110a3 = xor i32 %v1_110a3, %arg1
  %v3_110a3 = icmp eq i32 %v2_110a3, 0
  store i32 %v2_110a3, i32* %eax.global-to-local, align 8
  %v1_110aa = icmp eq i1 %v3_110a3, false
  br i1 %v1_110aa, label %dec_label_pc_110b2, label %dec_label_pc_110ac

dec_label_pc_110ac:                               ; preds = %dec_label_pc_11080
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v2_110a3

dec_label_pc_110b2:                               ; preds = %dec_label_pc_11080
  ret i32 %v2_110a3

; uselistorder directives
  uselistorder i32 %v2_110a3, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11068, { 2, 0, 1 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_30fc8_type* @global_var_30fc8.2673 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_110e0:
  %v4_110e0 = add i32 %arg1, -28
  %v1_110e5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %v4_110e0)
  ret i32 %v1_110e5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_110f0:
  ret i32 0
}

define i32 @function_11110() local_unnamed_addr {
dec_label_pc_11110:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11110 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11110 = add i32 %v0_11110, -1996217228
  %v2_11110 = inttoptr i32 %v1_11110 to i32*
  %v3_11110 = load i32, i32* %v2_11110, align 4
  %v4_11110 = sub i32 %v3_11110, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11110, i32* %v2_11110, align 4
  %v0_11116 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11116
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian16bad_day_of_monthEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11160:
  ret i32 0
}

define i32 @function_1118b() local_unnamed_addr {
dec_label_pc_1118b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1118b = load i32, i32* %eax.global-to-local, align 8
  %v11_1118b = and i32 %v0_1118b, -119
  store i32 %v11_1118b, i32* %eax.global-to-local, align 8
  ret i32 %v11_1118b

; uselistorder directives
  uselistorder i32 %v11_1118b, { 1, 0 }
}

define i32 @function_11218() local_unnamed_addr {
dec_label_pc_11218:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11227() local_unnamed_addr {
dec_label_pc_11227:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11229 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11229 = add i32 %v0_11229, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_11229, i32* %ebx.global-to-local, align 4
  %v0_1122a = load i32, i32* %eax.global-to-local, align 8
  %v2_1122a = load i1, i1* %cf.global-to-local, align 1
  %v3_1122a = zext i1 %v2_1122a to i32
  %v4_1122a = add i32 %v0_1122a, 176
  %v5_1122a = add i32 %v4_1122a, %v3_1122a
  %v30_1122a = urem i32 %v5_1122a, 256
  %v32_1122a = and i32 %v0_1122a, -256
  %v33_1122a = or i32 %v30_1122a, %v32_1122a
  store i32 %v33_1122a, i32* %eax.global-to-local, align 8
  %v2_1122d = inttoptr i32 %v33_1122a to i32*
  %v3_1122d = load i32, i32* %v2_1122d, align 4
  %v4_1122d = add i32 %v33_1122a, %v3_1122d
  %v9_1122d = icmp ult i32 %v4_1122d, %v33_1122a
  store i1 %v9_1122d, i1* %cf.global-to-local, align 1
  store i32 %v4_1122d, i32* @eax, align 8
  %tmp100 = urem i32 %v1_11229, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  %tmp102 = zext i1 %tmp101 to i32
  %v3_11236 = call i32 @function_20930(i32 %tmp102)
  store i32 %v4_1122d, i32* @eax, align 8
  %v0_1123f = load i32, i32* @esi, align 4
  %tmp103 = urem i32 %v0_1123f, 2
  %tmp104 = icmp ne i32 %tmp103, 0
  %tmp105 = zext i1 %tmp104 to i32
  %v3_11246 = call i32 @function_20930(i32 %tmp105)
  store i32 %v4_1122d, i32* @eax, align 8
  %v0_11251 = call i32 @function_11218()
  store i32 %v0_11251, i32* %eax.global-to-local, align 8
  ret i32 %v0_11251

; uselistorder directives
  uselistorder i32 %v4_1122d, { 1, 0, 2, 3 }
  uselistorder i32 %v33_1122a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1122a, { 1, 0 }
  uselistorder i32 (i32)* @function_20930, { 1, 0 }
}

define i32 @function_11253() local_unnamed_addr {
dec_label_pc_11253:
  %eax.global-to-local = alloca i32, align 4
  %v0_11253 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11253
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11260:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_11260 = load i32, i32* %esi.global-to-local, align 4
  %v0_11261 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_11279 = add i32 %arg2, 4
  %v2_11279 = inttoptr i32 %v1_11279 to i32*
  %v3_11279 = load i32, i32* %v2_11279, align 4
  store i32 %v3_11279, i32* %eax.global-to-local, align 8
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %arg1, align 4
  %v0_11282 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11282 = add i32 %v0_11282, 8
  %v2_11282 = inttoptr i32 %v1_11282 to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_11282, align 4
  %v0_11289 = load i32, i32* %eax.global-to-local, align 8
  %v1_11289 = load i32, i32* %ebx.global-to-local, align 4
  %v2_11289 = add i32 %v1_11289, 4
  %v3_11289 = inttoptr i32 %v2_11289 to i32*
  store i32 %v0_11289, i32* %v3_11289, align 4
  %v0_1128c = load i32, i32* %esi.global-to-local, align 4
  %v1_1128c = add i32 %v0_1128c, 12
  %v2_1128c = inttoptr i32 %v1_1128c to i32*
  %v3_1128c = load i32, i32* %v2_1128c, align 4
  store i32 %v3_1128c, i32* %eax.global-to-local, align 8
  %v1_1128f = icmp eq i32 %v3_1128c, 0
  %v1_11291 = load i32, i32* %ebx.global-to-local, align 4
  %v2_11291 = add i32 %v1_11291, 12
  %v3_11291 = inttoptr i32 %v2_11291 to i32*
  store i32 %v3_1128c, i32* %v3_11291, align 4
  br i1 %v1_1128f, label %dec_label_pc_1129e, label %dec_label_pc_11296

dec_label_pc_11296:                               ; preds = %dec_label_pc_11260
  br label %dec_label_pc_1129e

dec_label_pc_1129e:                               ; preds = %dec_label_pc_11296, %dec_label_pc_11260
  %v0_1129e = load i32, i32* %esi.global-to-local, align 4
  %v1_1129e = add i32 %v0_1129e, 16
  %v2_1129e = inttoptr i32 %v1_1129e to i32*
  %v3_1129e = load i32, i32* %v2_1129e, align 4
  store i32 %v3_1129e, i32* %eax.global-to-local, align 8
  %v0_112a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_112a1 = add i32 %v0_112a1, 8
  %v2_112a1 = inttoptr i32 %v1_112a1 to i32*
  store i32 ptrtoint (i32* @global_var_3127c.2668 to i32), i32* %v2_112a1, align 4
  %v0_112a8 = load i32, i32* %eax.global-to-local, align 8
  %v1_112a8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_112a8 = add i32 %v1_112a8, 16
  %v3_112a8 = inttoptr i32 %v2_112a8 to i32*
  store i32 %v0_112a8, i32* %v3_112a8, align 4
  %v0_112ab = load i32, i32* %esi.global-to-local, align 4
  %v1_112ab = add i32 %v0_112ab, 20
  %v2_112ab = inttoptr i32 %v1_112ab to i32*
  %v3_112ab = load i32, i32* %v2_112ab, align 4
  store i32 %v3_112ab, i32* %eax.global-to-local, align 8
  %v1_112ae = load i32, i32* %ebx.global-to-local, align 4
  %v2_112ae = add i32 %v1_112ae, 20
  %v3_112ae = inttoptr i32 %v2_112ae to i32*
  store i32 %v3_112ab, i32* %v3_112ae, align 4
  %v0_112b1 = load i32, i32* %esi.global-to-local, align 4
  %v1_112b1 = add i32 %v0_112b1, 24
  %v2_112b1 = inttoptr i32 %v1_112b1 to i32*
  %v3_112b1 = load i32, i32* %v2_112b1, align 4
  store i32 %v3_112b1, i32* %eax.global-to-local, align 8
  %v0_112b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_112b4 = inttoptr i32 %v0_112b4 to i32*
  store i32 ptrtoint (%vtable_31268_type* @global_var_31268.2667 to i32), i32* %v1_112b4, align 4
  %v0_112ba = load i32, i32* %eax.global-to-local, align 8
  %v1_112ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_112ba = add i32 %v1_112ba, 24
  %v3_112ba = inttoptr i32 %v2_112ba to i32*
  store i32 %v0_112ba, i32* %v3_112ba, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  br i1 false, label %dec_label_pc_112d0, label %dec_label_pc_112ca

dec_label_pc_112ca:                               ; preds = %dec_label_pc_1129e
  store i32 %v0_11261, i32* %ebx.global-to-local, align 4
  store i32 %v0_11260, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_112d0:                               ; preds = %dec_label_pc_1129e
  ret i32 0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 6, 1, 2, 4, 3, 5, 0 }
  uselistorder i32* %ebx.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_31268_type* @global_var_31268.2667 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @function_112d9() local_unnamed_addr {
dec_label_pc_112d9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_112d9 = load i32, i32* %eax.global-to-local, align 8
  %v11_112d9 = and i32 %v0_112d9, -24
  store i32 %v11_112d9, i32* @eax, align 8
  %v0_112db = load i32, i32* %ecx.global-to-local, align 4
  %v1_112db = add i32 %v0_112db, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_112db, i32* %ecx.global-to-local, align 4
  %v0_112dc = call i32 @function_348a12e1()
  store i32 %v0_112dc, i32* %eax.global-to-local, align 8
  ret i32 %v0_112dc
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_112f0:
  %v4_112f0 = add i32 %arg1, -28
  %v1_112f5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %v4_112f0)
  ret i32 %v1_112f5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_11300:
  ret i32 0
}

define i32 @function_11320() local_unnamed_addr {
dec_label_pc_11320:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11320 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11320 = add i32 %v0_11320, -1996217228
  %v2_11320 = inttoptr i32 %v1_11320 to i32*
  %v3_11320 = load i32, i32* %v2_11320, align 4
  %v4_11320 = sub i32 %v3_11320, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11320, i32* %v2_11320, align 4
  %v0_11326 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11326
}

define i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11370:
  ret i32 0
}

define i32 @function_113b0() local_unnamed_addr {
dec_label_pc_113b0:
  %eax.global-to-local = alloca i32, align 4
  %v0_113b3 = load i32, i32* %eax.global-to-local, align 8
  %v11_113b3 = and i32 %v0_113b3, -224
  store i32 %v11_113b3, i32* %eax.global-to-local, align 8
  ret i32 %v11_113b3

; uselistorder directives
  uselistorder i32 %v11_113b3, { 1, 0 }
}

define i32 @function_11421() local_unnamed_addr {
dec_label_pc_11421:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11440() local_unnamed_addr {
dec_label_pc_11440:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11442 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11442 = add i32 %v0_11442, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_11442, i32* %ebx.global-to-local, align 4
  %v0_11443 = load i32, i32* %eax.global-to-local, align 8
  %v2_11443 = load i1, i1* %cf.global-to-local, align 1
  %v3_11443 = zext i1 %v2_11443 to i32
  %v4_11443 = add i32 %v0_11443, 176
  %v5_11443 = add i32 %v4_11443, %v3_11443
  %v30_11443 = urem i32 %v5_11443, 256
  %v32_11443 = and i32 %v0_11443, -256
  %v33_11443 = or i32 %v30_11443, %v32_11443
  store i32 %v33_11443, i32* %eax.global-to-local, align 8
  %v2_11446 = inttoptr i32 %v33_11443 to i32*
  %v3_11446 = load i32, i32* %v2_11446, align 4
  %v4_11446 = add i32 %v33_11443, %v3_11446
  %v9_11446 = icmp ult i32 %v4_11446, %v33_11443
  store i1 %v9_11446, i1* %cf.global-to-local, align 1
  store i32 %v4_11446, i32* @eax, align 8
  %tmp100 = urem i32 %v1_11442, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  %tmp102 = zext i1 %tmp101 to i32
  %v3_1144f = call i32 @function_20a00(i32 %tmp102)
  store i32 %v4_11446, i32* @eax, align 8
  %v0_11458 = call i32 @function_11421()
  store i32 %v0_11458, i32* %eax.global-to-local, align 8
  ret i32 %v0_11458

; uselistorder directives
  uselistorder i32 %v33_11443, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11443, { 1, 0 }
}

define i32 @_ZN5boost15recursive_mutexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11460:
  ret i32 0
}

define i32 @function_1149e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1149e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1149e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1149e = add i32 %v0_1149e, -1960479296
  %v2_1149e = inttoptr i32 %v1_1149e to i32*
  %v3_1149e = load i32, i32* %v2_1149e, align 4
  %v4_1149e = add i32 %v3_1149e, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1149e, i32* %v2_1149e, align 4
  %v0_114a5 = load i32, i32* %eax.global-to-local, align 8
  %v11_114a5 = and i32 %v0_114a5, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.2406 to i8) to i32), i32 -256)
  store i32 %v11_114a5, i32* %eax.global-to-local, align 8
  %v1_114a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_114a7 = xor i32 %v1_114a7, %v11_114a5
  %v3_114a7 = icmp eq i32 %v2_114a7, 0
  store i1 %v3_114a7, i1* %zf.global-to-local, align 1
  store i32 %v2_114a7, i32* @eax, align 8
  %v0_114ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_114ae = add i32 %v0_114ae, 72
  %v2_114ae = inttoptr i32 %v1_114ae to i8*
  store i8 0, i8* %v2_114ae, align 1
  %v0_114b2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_114b2 = add i32 %v0_114b2, 80
  %v2_114b2 = inttoptr i32 %v1_114b2 to i32*
  store i32 0, i32* %v2_114b2, align 4
  %v0_114b9 = load i1, i1* %zf.global-to-local, align 1
  %v1_114b9 = icmp eq i1 %v0_114b9, false
  br i1 %v1_114b9, label %bb, label %dec_label_pc_1149e.dec_label_pc_114bf_crit_edge

dec_label_pc_1149e.dec_label_pc_114bf_crit_edge:  ; preds = %dec_label_pc_1149e
  %v0_114c3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_114bf

bb:                                               ; preds = %dec_label_pc_1149e
  %v2_114b9 = call i32 @function_1154a()
  store i32 %v2_114b9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_114bf

dec_label_pc_114bf:                               ; preds = %dec_label_pc_1149e.dec_label_pc_114bf_crit_edge, %bb
  %v0_114c3 = phi i32 [ %v0_114c3.pre, %dec_label_pc_1149e.dec_label_pc_114bf_crit_edge ], [ %v2_114b9, %bb ]
  %v0_114bf = load i32, i32* @esp, align 4
  %v10_114bf = icmp eq i32 %v0_114bf, -72
  store i1 %v10_114bf, i1* %zf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_114c3

; uselistorder directives
  uselistorder label %dec_label_pc_114bf, { 1, 0 }
}

define i32 @function_11514() local_unnamed_addr {
dec_label_pc_11514:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1151d() local_unnamed_addr {
dec_label_pc_1151d:
  %v0_1151d = call i32 @function_448c1522()
  ret i32 %v0_1151d
}

define i32 @function_1152b() local_unnamed_addr {
dec_label_pc_1152b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1152b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1152b = add i32 %v0_1152b, -953408420
  %v2_1152b = inttoptr i32 %v1_1152b to i32*
  %v3_1152b = load i32, i32* %v2_1152b, align 4
  %v4_1152b = sub i32 %v3_1152b, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1152b, i32* %v2_1152b, align 4
  %v0_11532 = load i32, i32* %eax.global-to-local, align 8
  %v1_11532 = trunc i32 %v0_11532 to i8
  %v2_11532 = and i8 %v1_11532, 48
  %v8_11532 = zext i8 %v2_11532 to i32
  %v10_11532 = and i32 %v0_11532, -256
  %v11_11532 = or i32 %v8_11532, %v10_11532
  store i32 %v11_11532, i32* %eax.global-to-local, align 8
  %v1_11534 = inttoptr i32 %v11_11532 to i8*
  %v2_11534 = load i8, i8* %v1_11534, align 16
  %v5_11534 = add i8 %v2_11534, %v2_11532
  store i8 %v5_11534, i8* %v1_11534, align 16
  %v0_11536 = load i32, i32* %eax.global-to-local, align 8
  %v1_11536 = inttoptr i32 %v0_11536 to i8*
  %v2_11536 = load i8, i8* %v1_11536, align 1
  %v4_11536 = trunc i32 %v0_11536 to i8
  %v5_11536 = add i8 %v2_11536, %v4_11536
  store i8 %v5_11536, i8* %v1_11536, align 1
  %v0_11540 = load i32, i32* @ebx, align 4
  %v1_11543 = call i32 @function_227d0(i32 %v0_11540)
  store i32 %v1_11543, i32* @eax, align 8
  %v0_11548 = call i32 @function_11514()
  store i32 %v0_11548, i32* %eax.global-to-local, align 8
  ret i32 %v0_11548
}

define i32 @function_1154a() local_unnamed_addr {
dec_label_pc_1154a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail16thread_data_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11550:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1156d = add i32 %arg1, 4
  %v2_1156d = inttoptr i32 %v1_1156d to i32*
  store i32 0, i32* %v2_1156d, align 4
  %v0_11574 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11574 = add i32 %v0_11574, 8
  %v2_11574 = inttoptr i32 %v1_11574 to i32*
  store i32 0, i32* %v2_11574, align 4
  %v3_11574 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_11574

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1163b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1163b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1163b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1163b = add i32 %v0_1163b, -1937436736
  %v2_1163b = inttoptr i32 %v1_1163b to i32*
  %v3_1163b = load i32, i32* %v2_1163b, align 4
  %v4_1163b = add i32 %v3_1163b, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1163b, i32* %v2_1163b, align 4
  %v2_11641 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_11641 = load i32, i32* %eax.global-to-local, align 8
  %v4_11641 = trunc i32 %v3_11641 to i8
  %v5_11641 = add i8 %v4_11641, %v2_11641
  %v15_11641 = icmp eq i8 %v5_11641, 0
  store i1 %v15_11641, i1* %zf.global-to-local, align 1
  %v21_11641 = inttoptr i32 %v3_11641 to i8*
  store i8 %v5_11641, i8* %v21_11641, align 1
  %v0_11643 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11643 = add i32 %v0_11643, ptrtoint (i8** @global_var_e483.2558 to i32)
  %v2_11643 = inttoptr i32 %v1_11643 to i8*
  %v3_11643 = load i8, i8* %v2_11643, align 1
  %v4_11643 = load i32, i32* %ecx.global-to-local, align 4
  %v5_11643 = trunc i32 %v4_11643 to i8
  %v6_11643 = add i8 %v5_11643, %v3_11643
  %v16_11643 = icmp eq i8 %v6_11643, 0
  store i1 %v16_11643, i1* %zf.global-to-local, align 1
  store i8 %v6_11643, i8* %v2_11643, align 1
  %v0_11649 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11649 = add i32 %v0_11649, ptrtoint (i8** @global_var_ec83.2682 to i32)
  %v2_11649 = inttoptr i32 %v1_11649 to i8*
  %v3_11649 = load i8, i8* %v2_11649, align 1
  %v5_11649 = trunc i32 %v0_11649 to i8
  %v6_11649 = add i8 %v3_11649, %v5_11649
  %v16_11649 = icmp eq i8 %v6_11649, 0
  store i1 %v16_11649, i1* %zf.global-to-local, align 1
  store i8 %v6_11649, i8* %v2_11649, align 1
  %v0_1164f = load i32, i32* %ecx.global-to-local, align 4
  %v1_1164f = add i32 %v0_1164f, 61571
  %v2_1164f = inttoptr i32 %v1_1164f to i8*
  %v3_1164f = load i8, i8* %v2_1164f, align 1
  %v5_1164f = trunc i32 %v0_1164f to i8
  %v6_1164f = add i8 %v3_1164f, %v5_1164f
  %v16_1164f = icmp eq i8 %v6_1164f, 0
  store i1 %v16_1164f, i1* %zf.global-to-local, align 1
  store i8 %v6_1164f, i8* %v2_1164f, align 1
  %v0_11655 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11655 = add i32 %v0_11655, 1700537412
  %v2_11655 = inttoptr i32 %v1_11655 to i8*
  %v3_11655 = load i8, i8* %v2_11655, align 1
  %v4_11655 = load i32, i32* %ecx.global-to-local, align 4
  %v5_11655 = trunc i32 %v4_11655 to i8
  %v6_11655 = add i8 %v5_11655, %v3_11655
  store i8 %v6_11655, i8* %v2_11655, align 1
  %v0_1165b = load i32, i32* %eax.global-to-local, align 8
  %v1_1165b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1165b = xor i32 %v1_1165b, %v0_1165b
  %v3_1165b = icmp eq i32 %v2_1165b, 0
  store i1 %v3_1165b, i1* %zf.global-to-local, align 1
  store i32 %v2_1165b, i32* @eax, align 8
  %v0_11661 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11661 = add i32 %v0_11661, ptrtoint (i8** @global_var_d8.2683 to i32)
  %v2_11661 = inttoptr i32 %v1_11661 to i8*
  store i8 0, i8* %v2_11661, align 1
  %v0_11668 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11668 = add i32 %v0_11668, 217
  %v2_11668 = inttoptr i32 %v1_11668 to i8*
  store i8 0, i8* %v2_11668, align 1
  %v0_1166f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1166f = add i32 %v0_1166f, ptrtoint (i8** @global_var_da.2684 to i32)
  %v2_1166f = inttoptr i32 %v1_1166f to i8*
  store i8 0, i8* %v2_1166f, align 1
  %v0_11676 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11676 = add i32 %v0_11676, ptrtoint (i32* @global_var_dc.2450 to i32)
  %v2_11676 = inttoptr i32 %v1_11676 to i32*
  store i32 0, i32* %v2_11676, align 4
  %v0_11680 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11680 = add i32 %v0_11680, 228
  %v2_11680 = inttoptr i32 %v1_11680 to i32*
  store i32 0, i32* %v2_11680, align 4
  %v0_1168a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1168a = add i32 %v0_1168a, 232
  %v2_1168a = inttoptr i32 %v1_1168a to i32*
  store i32 0, i32* %v2_1168a, align 4
  %v0_11694 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11694 = add i32 %v0_11694, ptrtoint (i32* @global_var_f4.2449 to i32)
  %v2_11694 = inttoptr i32 %v1_11694 to i32*
  store i32 0, i32* %v2_11694, align 4
  %v0_1169e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1169e = add i32 %v0_1169e, ptrtoint (i8** @global_var_f8.2448 to i32)
  %v2_1169e = inttoptr i32 %v1_1169e to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1169e, align 1
  %v0_116a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_116a5 = add i32 %v0_116a5, 249
  %v2_116a5 = inttoptr i32 %v1_116a5 to i8*
  store i8 0, i8* %v2_116a5, align 1
  %v0_116ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_116ac = add i32 %v0_116ac, 256
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  store i32 0, i32* %v2_116ac, align 4
  %v0_116b6 = load i1, i1* %zf.global-to-local, align 1
  %v1_116b6 = icmp eq i1 %v0_116b6, false
  br i1 %v1_116b6, label %bb, label %dec_label_pc_1163b.dec_label_pc_116bc_crit_edge

dec_label_pc_1163b.dec_label_pc_116bc_crit_edge:  ; preds = %dec_label_pc_1163b
  %v0_116cf.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_116bc

bb:                                               ; preds = %dec_label_pc_1163b
  %v2_116b6 = call i32 @function_1180f()
  store i32 %v2_116b6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_116bc

dec_label_pc_116bc:                               ; preds = %dec_label_pc_1163b.dec_label_pc_116bc_crit_edge, %bb
  %v0_116cf = phi i32 [ %v0_116cf.pre, %dec_label_pc_1163b.dec_label_pc_116bc_crit_edge ], [ %v2_116b6, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  %v0_116cc = load i32, i32* @esp, align 4
  %v10_116cc = icmp eq i32 %v0_116cc, -124
  store i1 %v10_116cc, i1* %zf.global-to-local, align 1
  ret i32 %v0_116cf

; uselistorder directives
  uselistorder i32 ptrtoint (i8** @global_var_e483.2558 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_116bc, { 1, 0 }
}

define i32 @function_1174c() local_unnamed_addr {
dec_label_pc_1174c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11758(i32 %arg1) local_unnamed_addr {
dec_label_pc_11758:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1175f(i16 %arg1) local_unnamed_addr {
dec_label_pc_1175f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1175f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1175f = add i32 %v0_1175f, 76091459
  %v2_1175f = inttoptr i32 %v1_1175f to i8*
  %v3_1175f = load i8, i8* %v2_1175f, align 1
  %v4_1175f = load i32, i32* %ecx.global-to-local, align 4
  %v5_1175f = trunc i32 %v4_1175f to i8
  %v6_1175f = add i8 %v5_1175f, %v3_1175f
  store i8 %v6_1175f, i8* %v2_1175f, align 1
  %v0_11765 = load i32, i32* %eax.global-to-local, align 8
  %v1_11767 = and i32 %v0_11765, -1962934016
  store i32 %v1_11767, i32* %eax.global-to-local, align 8
  %v0_1176c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1176c = add i32 %v0_1176c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1176c, i32* %ebx.global-to-local, align 4
  ret i32 %v1_11767
}

define i32 @function_11777() local_unnamed_addr {
dec_label_pc_11777:
  %cf.global-to-local = alloca i1, align 1
  %v0_11777 = load i32, i32* @eax, align 8
  %v1_11777 = add i32 %v0_11777, 8
  %v2_11777 = inttoptr i32 %v1_11777 to i32*
  %v3_11777 = load i32, i32* %v2_11777, align 4
  %v4_11777 = load i1, i1* %cf.global-to-local, align 1
  %v6_11777 = mul i32 %v3_11777, 8
  %v7_11777 = zext i32 %v6_11777 to i64
  %v8_11777 = zext i32 %v3_11777 to i64
  %v9_11777 = lshr i64 %v8_11777, ptrtoint (i16** @global_var_1e.2596 to i64)
  %v11_11777 = select i1 %v4_11777, i64 4, i64 0
  %v12_11777 = or i64 %v9_11777, %v7_11777
  %v13_11777 = or i64 %v12_11777, %v11_11777
  %v14_11777 = trunc i64 %v13_11777 to i32
  store i32 %v14_11777, i32* %v2_11777, align 4
  %v19_11777 = and i32 %v3_11777, 536870912
  %v20_11777 = icmp ne i32 %v19_11777, 0
  store i1 %v20_11777, i1* %cf.global-to-local, align 1
  %v0_1177b = call i32 @function_8b087501()
  ret i32 %v0_1177b

; uselistorder directives
  uselistorder i32 %v3_11777, { 1, 2, 0 }
}

define i32 @function_1178e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1178e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1178e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1178e = add i32 %v0_1178e, -1991498668
  %v2_1178e = inttoptr i32 %v1_1178e to i32*
  %v3_1178e = load i32, i32* %v2_1178e, align 4
  %v4_1178e = sub i32 %v3_1178e, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1178e, i32* %v2_1178e, align 4
  %v0_11795 = load i32, i32* %eax.global-to-local, align 8
  %v11_11795 = and i32 %v0_11795, -232
  store i32 %v11_11795, i32* @eax, align 8
  %v0_11797 = load i32, i32* %edx.global-to-local, align 4
  %v1_1179a = call i32 @function_1ff10(i32 %v0_11797)
  store i32 %arg1, i32* @eax, align 8
  %v1_117aa = call i32 @function_21e80(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  %v0_117b5 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_117bf = call i32 @function_11758(i32 %v0_117b5)
  store i32 %v1_117bf, i32* %eax.global-to-local, align 8
  ret i32 %v1_117bf

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_117c1() local_unnamed_addr {
dec_label_pc_117c1:
  %stack_var_44 = alloca i32, align 4
  %v2_117c1 = ptrtoint i32* %stack_var_44 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_44, align 4
  %v1_117d8 = call i32 @function_228c0(i32 %v2_117c1)
  store i32 %v1_117d8, i32* @eax, align 8
  %v1_117e4 = call i32 @function_1ff10(i32 %v2_117c1)
  ret i32 %v1_117e4
}

define i32 @function_117ee() local_unnamed_addr {
dec_label_pc_117ee:
  %stack_var_60 = alloca i32, align 4
  %v2_117ee = ptrtoint i32* %stack_var_60 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_60, align 4
  %v1_11805 = call i32 @function_228c0(i32 %v2_117ee)
  store i32 %v1_11805, i32* @eax, align 8
  %v0_1180a = call i32 @function_1174c()
  ret i32 %v0_1180a
}

define i32 @function_1180f() local_unnamed_addr {
dec_label_pc_1180f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11813() local_unnamed_addr {
dec_label_pc_11813:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_85 = alloca i32, align 4
  %v0_11813 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11813 = add i32 %v0_11813, -950787004
  %v2_11813 = inttoptr i32 %v1_11813 to i32*
  %v3_11813 = load i32, i32* %v2_11813, align 4
  %v4_11813 = sub i32 %v3_11813, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11813, i32* %v2_11813, align 4
  %v0_1181a = load i32, i32* %eax.global-to-local, align 8
  %v1_1181a = trunc i32 %v0_1181a to i8
  %v2_1181a = and i8 %v1_1181a, ptrtoint (i32* @global_var_58.2405 to i8)
  %v8_1181a = zext i8 %v2_1181a to i32
  %v10_1181a = and i32 %v0_1181a, -256
  %v11_1181a = or i32 %v8_1181a, %v10_1181a
  store i32 %v11_1181a, i32* @eax, align 8
  %v1_1181c = inttoptr i32 %v11_1181a to i8*
  %v2_1181c = load i8, i8* %v1_1181c, align 4
  %v5_1181c = add i8 %v2_1181c, %v2_1181a
  store i8 %v5_1181c, i8* %v1_1181c, align 4
  %v0_1181e = load i32, i32* @eax, align 8
  %v1_1181e = inttoptr i32 %v0_1181e to i8*
  %v2_1181e = load i8, i8* %v1_1181e, align 1
  %v4_1181e = trunc i32 %v0_1181e to i8
  %v5_1181e = add i8 %v2_1181e, %v4_1181e
  store i8 %v5_1181e, i8* %v1_1181e, align 1
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_85, align 4
  %v0_11828 = load i32, i32* @eax, align 8
  %v1_1182b = call i32 @function_228c0(i32 %v0_11828)
  store i32 %v1_1182b, i32* @eax, align 8
  %v2_11830 = ptrtoint i32* %stack_var_85 to i32
  %v1_1183b = call i32 @function_1ff10(i32 %v2_11830)
  store i32 %v1_1182b, i32* %eax.global-to-local, align 8
  ret i32 %v1_1182b

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_11849() local_unnamed_addr {
dec_label_pc_11849:
  %stack_var_68 = alloca i32, align 4
  %v2_11849 = ptrtoint i32* %stack_var_68 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_68, align 4
  %v1_11860 = call i32 @function_228c0(i32 %v2_11849)
  store i32 %v1_11860, i32* @eax, align 8
  %v1_1186c = call i32 @function_1ff10(i32 %v2_11849)
  ret i32 %v1_11860

; uselistorder directives
  uselistorder i32 (i32)* @function_1ff10, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_228c0, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11880:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_11880 = load i32, i32* %esi.global-to-local, align 4
  %v0_11881 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_11899 = add i32 %arg2, 4
  %v2_11899 = inttoptr i32 %v1_11899 to i32*
  %v3_11899 = load i32, i32* %v2_11899, align 4
  store i32 %v3_11899, i32* %eax.global-to-local, align 8
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %arg1, align 4
  %v0_118a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_118a2 = add i32 %v0_118a2, 8
  %v2_118a2 = inttoptr i32 %v1_118a2 to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_118a2, align 4
  %v0_118a9 = load i32, i32* %eax.global-to-local, align 8
  %v1_118a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_118a9 = add i32 %v1_118a9, 4
  %v3_118a9 = inttoptr i32 %v2_118a9 to i32*
  store i32 %v0_118a9, i32* %v3_118a9, align 4
  %v0_118ac = load i32, i32* %esi.global-to-local, align 4
  %v1_118ac = add i32 %v0_118ac, 12
  %v2_118ac = inttoptr i32 %v1_118ac to i32*
  %v3_118ac = load i32, i32* %v2_118ac, align 4
  store i32 %v3_118ac, i32* %eax.global-to-local, align 8
  %v1_118af = icmp eq i32 %v3_118ac, 0
  %v1_118b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_118b1 = add i32 %v1_118b1, 12
  %v3_118b1 = inttoptr i32 %v2_118b1 to i32*
  store i32 %v3_118ac, i32* %v3_118b1, align 4
  br i1 %v1_118af, label %dec_label_pc_118be, label %dec_label_pc_118b6

dec_label_pc_118b6:                               ; preds = %dec_label_pc_11880
  br label %dec_label_pc_118be

dec_label_pc_118be:                               ; preds = %dec_label_pc_118b6, %dec_label_pc_11880
  %v0_118be = load i32, i32* %esi.global-to-local, align 4
  %v1_118be = add i32 %v0_118be, 16
  %v2_118be = inttoptr i32 %v1_118be to i32*
  %v3_118be = load i32, i32* %v2_118be, align 4
  store i32 %v3_118be, i32* %eax.global-to-local, align 8
  %v0_118c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_118c1 = add i32 %v0_118c1, 8
  %v2_118c1 = inttoptr i32 %v1_118c1 to i32*
  store i32 ptrtoint (i32* @global_var_30e3c.2670 to i32), i32* %v2_118c1, align 4
  %v0_118c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_118c8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_118c8 = add i32 %v1_118c8, 16
  %v3_118c8 = inttoptr i32 %v2_118c8 to i32*
  store i32 %v0_118c8, i32* %v3_118c8, align 4
  %v0_118cb = load i32, i32* %esi.global-to-local, align 4
  %v1_118cb = add i32 %v0_118cb, 20
  %v2_118cb = inttoptr i32 %v1_118cb to i32*
  %v3_118cb = load i32, i32* %v2_118cb, align 4
  store i32 %v3_118cb, i32* %eax.global-to-local, align 8
  %v1_118ce = load i32, i32* %ebx.global-to-local, align 4
  %v2_118ce = add i32 %v1_118ce, 20
  %v3_118ce = inttoptr i32 %v2_118ce to i32*
  store i32 %v3_118cb, i32* %v3_118ce, align 4
  %v0_118d1 = load i32, i32* %esi.global-to-local, align 4
  %v1_118d1 = add i32 %v0_118d1, 24
  %v2_118d1 = inttoptr i32 %v1_118d1 to i32*
  %v3_118d1 = load i32, i32* %v2_118d1, align 4
  store i32 %v3_118d1, i32* %eax.global-to-local, align 8
  %v0_118d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_118d4 = inttoptr i32 %v0_118d4 to i32*
  store i32 ptrtoint (%vtable_30e28_type* @global_var_30e28.2669 to i32), i32* %v1_118d4, align 4
  %v0_118da = load i32, i32* %eax.global-to-local, align 8
  %v1_118da = load i32, i32* %ebx.global-to-local, align 4
  %v2_118da = add i32 %v1_118da, 24
  %v3_118da = inttoptr i32 %v2_118da to i32*
  store i32 %v0_118da, i32* %v3_118da, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  br i1 false, label %dec_label_pc_118f0, label %dec_label_pc_118ea

dec_label_pc_118ea:                               ; preds = %dec_label_pc_118be
  store i32 %v0_11881, i32* %ebx.global-to-local, align 4
  store i32 %v0_11880, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118be
  ret i32 0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 5, 4, 6, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_30e28_type* @global_var_30e28.2669 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @function_118fc() local_unnamed_addr {
dec_label_pc_118fc:
  %v0_118fc = call i32 @function_348a1901()
  ret i32 %v0_118fc
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11910:
  %v4_11910 = add i32 %arg1, -28
  %v1_11915 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %v4_11910)
  ret i32 %v1_11915

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_11920:
  ret i32 0
}

define i32 @function_11940() local_unnamed_addr {
dec_label_pc_11940:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11940 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11940 = add i32 %v0_11940, -1996217228
  %v2_11940 = inttoptr i32 %v1_11940 to i32*
  %v3_11940 = load i32, i32* %v2_11940, align 4
  %v4_11940 = sub i32 %v3_11940, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11940, i32* %v2_11940, align 4
  %v0_11946 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11946
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11990:
  store i32 %arg1, i32* @esi, align 4
  ret i32 0
}

define i32 @function_119da() local_unnamed_addr {
dec_label_pc_119da:
  %eax.global-to-local = alloca i32, align 4
  %v0_119da = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_119da
}

define i32 @function_11a41() local_unnamed_addr {
dec_label_pc_11a41:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11a60() local_unnamed_addr {
dec_label_pc_11a60:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11a62 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11a62 = add i32 %v0_11a62, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_11a62, i32* @ebx, align 4
  %v0_11a63 = load i32, i32* %eax.global-to-local, align 8
  %v2_11a63 = load i1, i1* %cf.global-to-local, align 1
  %v3_11a63 = zext i1 %v2_11a63 to i32
  %v4_11a63 = add i32 %v0_11a63, 176
  %v5_11a63 = add i32 %v4_11a63, %v3_11a63
  %v30_11a63 = urem i32 %v5_11a63, 256
  %v32_11a63 = and i32 %v0_11a63, -256
  %v33_11a63 = or i32 %v30_11a63, %v32_11a63
  store i32 %v33_11a63, i32* %eax.global-to-local, align 8
  %v2_11a66 = inttoptr i32 %v33_11a63 to i32*
  %v3_11a66 = load i32, i32* %v2_11a66, align 4
  %v4_11a66 = add i32 %v33_11a63, %v3_11a66
  %v9_11a66 = icmp ult i32 %v4_11a66, %v33_11a63
  store i1 %v9_11a66, i1* %cf.global-to-local, align 1
  store i32 %v4_11a66, i32* @eax, align 8
  %tmp100 = urem i32 %v1_11a62, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  %tmp102 = zext i1 %tmp101 to i8
  %v4_11a6f = call i32 @function_21090(i8 %tmp102)
  store i32 %v4_11a66, i32* @eax, align 8
  %v0_11a78 = call i32 @function_11a41()
  store i32 %v0_11a78, i32* %eax.global-to-local, align 8
  ret i32 %v0_11a78

; uselistorder directives
  uselistorder i32 %v33_11a63, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11a63, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cf.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost6detail20interruption_checkerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a80:
  %v1_11a9b = add i32 %arg1, 4
  %v2_11a9b = inttoptr i32 %v1_11a9b to i32*
  %v3_11a9b = load i32, i32* %v2_11a9b, align 4
  store i32 %v3_11a9b, i32* @eax, align 8
  %v1_11a9e = add i32 %arg1, 8
  %v2_11a9e = inttoptr i32 %v1_11a9e to i8*
  %v3_11a9e = load i8, i8* %v2_11a9e, align 1
  %v10_11a9e = icmp eq i8 %v3_11a9e, 0
  br i1 %v10_11a9e, label %bb, label %dec_label_pc_11aa7

bb:                                               ; preds = %dec_label_pc_11a80
  %v2_11aa5 = call i32 @function_11b08(i32 %v3_11a9b)
  br label %dec_label_pc_11aa7

dec_label_pc_11aa7:                               ; preds = %bb, %dec_label_pc_11a80
  %v3_11aa5 = phi i32 [ %v2_11aa5, %bb ], [ %v3_11a9b, %dec_label_pc_11a80 ]
  ret i32 %v3_11aa5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11ae6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ae6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11ae6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11ae6 = add i32 %v0_11ae6, -1958054464
  %v2_11ae6 = inttoptr i32 %v1_11ae6 to i32*
  %v3_11ae6 = load i32, i32* %v2_11ae6, align 4
  %v4_11ae6 = add i32 %v3_11ae6, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11ae6, i32* %v2_11ae6, align 4
  %v0_11aed = load i32, i32* %eax.global-to-local, align 8
  %v11_11aed = and i32 %v0_11aed, -228
  store i32 %v11_11aed, i32* %eax.global-to-local, align 8
  %v1_11aef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11aef = xor i32 %v1_11aef, %v11_11aed
  %v3_11aef = icmp eq i32 %v2_11aef, 0
  store i32 %v2_11aef, i32* @eax, align 8
  %v1_11af6 = icmp eq i1 %v3_11aef, false
  br i1 %v1_11af6, label %bb, label %dec_label_pc_11af8

bb:                                               ; preds = %dec_label_pc_11ae6
  %v2_11af6 = call i32 @function_11b5e()
  store i32 %v2_11af6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11af8

dec_label_pc_11af8:                               ; preds = %bb, %dec_label_pc_11ae6
  %v0_11b03 = phi i32 [ %v2_11af6, %bb ], [ %v2_11aef, %dec_label_pc_11ae6 ]
  ret i32 %v0_11b03

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 1 }
}

define i32 @function_11b08(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b08:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11b5e() local_unnamed_addr {
dec_label_pc_11b5e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11b7f() local_unnamed_addr {
dec_label_pc_11b7f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11b7f = load i32, i32* %eax.global-to-local, align 8
  %v11_11b7f = and i32 %v0_11b7f, -24
  store i32 %v11_11b7f, i32* @eax, align 8
  %v0_11b81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11b81 = sub i32 %v0_11b81, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_11b81, i32* %ebx.global-to-local, align 4
  %v0_11b82 = call i32 @function_348a1b87()
  store i32 %v0_11b82, i32* %eax.global-to-local, align 8
  ret i32 %v0_11b82
}

define i32 @_ZN10CSemaphore4postEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b90:
  store i32 %arg1, i32* @ebx, align 4
  ret i32 0
}

define i32 @function_11be6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11be6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11be6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11be6 = add i32 %v0_11be6, -1957923392
  %v2_11be6 = inttoptr i32 %v1_11be6 to i32*
  %v3_11be6 = load i32, i32* %v2_11be6, align 4
  %v4_11be6 = add i32 %v3_11be6, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11be6, i32* %v2_11be6, align 4
  %v0_11bed = load i32, i32* %eax.global-to-local, align 8
  %v11_11bed = and i32 %v0_11bed, -228
  store i32 %v11_11bed, i32* %eax.global-to-local, align 8
  %v1_11bef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11bef = xor i32 %v1_11bef, %v11_11bed
  %v3_11bef = icmp eq i32 %v2_11bef, 0
  store i32 %v2_11bef, i32* @eax, align 8
  %v1_11bf6 = icmp eq i1 %v3_11bef, false
  br i1 %v1_11bf6, label %bb, label %dec_label_pc_11bf8

bb:                                               ; preds = %dec_label_pc_11be6
  %v2_11bf6 = call i32 @function_11c28()
  store i32 %v2_11bf6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %bb, %dec_label_pc_11be6
  %v0_11bfd = phi i32 [ %v2_11bf6, %bb ], [ %v2_11bef, %dec_label_pc_11be6 ]
  ret i32 %v0_11bfd
}

define i32 @function_11c1d() local_unnamed_addr {
dec_label_pc_11c1d:
  %v0_11c1d = call i32 @function_348a1c22()
  ret i32 %v0_11c1d
}

define i32 @function_11c28() local_unnamed_addr {
dec_label_pc_11c28:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11c2f(i16 %arg1) local_unnamed_addr {
dec_label_pc_11c2f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11c2f = load i32, i32* %ecx.global-to-local, align 4
  %v1_11c2f = sub i32 %v0_11c2f, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_11c2f, i32* %ecx.global-to-local, align 4
  %v0_11c31 = load i32, i32* %eax.global-to-local, align 8
  %v3_11c31 = udiv i32 %v1_11c2f, 256
  %v5_11c31 = add i32 %v0_11c31, %v3_11c31
  %v20_11c31 = and i32 %v5_11c31, 255
  %v22_11c31 = and i32 %v0_11c31, -256
  %v23_11c31 = or i32 %v20_11c31, %v22_11c31
  store i32 %v23_11c31, i32* %eax.global-to-local, align 8
  ret i32 %v23_11c31

; uselistorder directives
  uselistorder i32 %v0_11c31, { 1, 0 }
}

define i32 @_ZN15CSemaphoreGrantD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11c50:
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v0_11c50 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v1_11c64 = add i32 %tmp3, 4
  %v2_11c64 = inttoptr i32 %v1_11c64 to i8*
  %v3_11c64 = load i8, i8* %v2_11c64, align 1
  %v10_11c64 = icmp eq i8 %v3_11c64, 0
  br i1 %v10_11c64, label %dec_label_pc_11c78, label %dec_label_pc_11c6a

dec_label_pc_11c6a:                               ; preds = %dec_label_pc_11c50
  %v2_11c6a = load i32, i32* %arg1, align 4
  store i32 %v2_11c6a, i32* @eax, align 8
  %v1_11c6f = call i32 @function_237e0(i32 %v2_11c6a)
  %v0_11c74 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11c74 = add i32 %v0_11c74, 4
  %v2_11c74 = inttoptr i32 %v1_11c74 to i8*
  store i8 0, i8* %v2_11c74, align 1
  br label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c6a, %dec_label_pc_11c50
  br i1 false, label %dec_label_pc_11c8a, label %dec_label_pc_11c85

dec_label_pc_11c85:                               ; preds = %dec_label_pc_11c78
  store i32 %v0_11c50, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_11c8a:                               ; preds = %dec_label_pc_11c78
  ret i32 0
}

define i32 @_ZN5boost11unique_lockINS_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11c90:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v1_11ca4 = add i32 %tmp5, 4
  %v2_11ca4 = inttoptr i32 %v1_11ca4 to i8*
  %v3_11ca4 = load i8, i8* %v2_11ca4, align 1
  %v10_11ca4 = icmp eq i8 %v3_11ca4, 0
  %v1_11ca8 = icmp eq i1 %v10_11ca4, false
  br i1 %v1_11ca8, label %dec_label_pc_11cc0, label %dec_label_pc_11caa

dec_label_pc_11caa:                               ; preds = %dec_label_pc_11c90
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_11cb7

bb:                                               ; preds = %dec_label_pc_11caa
  br label %dec_label_pc_11cb7

dec_label_pc_11cb7:                               ; preds = %bb, %dec_label_pc_11caa
  ret i32 0

dec_label_pc_11cc0:                               ; preds = %dec_label_pc_11c90
  %v2_11cc0 = load i32, i32* %arg1, align 4
  ret i32 %v2_11cc0
}

define i32 @function_11cc9(i16 %arg1) local_unnamed_addr {
dec_label_pc_11cc9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11cc9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11cc9 = add i32 %v0_11cc9, -388205376
  %v2_11cc9 = inttoptr i32 %v1_11cc9 to i32*
  %v3_11cc9 = load i32, i32* %v2_11cc9, align 4
  %v4_11cc9 = add i32 %v3_11cc9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11cc9, i32* %v2_11cc9, align 4
  %v6_11ccf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_11ccf
}

define i32 @function_11cd3(i32 %arg1) local_unnamed_addr {
dec_label_pc_11cd3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost10lock_guardINS_12shared_mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11ce0:
  %tmp97 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp97
}

define i32 @function_11d52() local_unnamed_addr {
dec_label_pc_11d52:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_11d52 = add i32 %tmp91, -2093255232
  %v2_11d52 = inttoptr i32 %v1_11d52 to i32*
  %v3_11d52 = load i32, i32* %v2_11d52, align 4
  %v4_11d52 = add i32 %v3_11d52, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11d52, i32* %v2_11d52, align 4
  %v0_11d58 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11d58
}

define i32 @function_11d79(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d79:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11d79 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11d79 = add i32 %v0_11d79, -1955170880
  %v2_11d79 = inttoptr i32 %v1_11d79 to i32*
  %v3_11d79 = load i32, i32* %v2_11d79, align 4
  %v4_11d79 = add i32 %v3_11d79, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11d79, i32* %v2_11d79, align 4
  %v0_11d80 = load i32, i32* %eax.global-to-local, align 8
  %v11_11d80 = and i32 %v0_11d80, -228
  store i32 %v11_11d80, i32* %eax.global-to-local, align 8
  %v1_11d82 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11d82 = xor i32 %v1_11d82, %v11_11d80
  %v3_11d82 = icmp eq i32 %v2_11d82, 0
  store i32 %v2_11d82, i32* @eax, align 8
  %v1_11d89 = icmp eq i1 %v3_11d82, false
  br i1 %v1_11d89, label %bb, label %dec_label_pc_11d8b

bb:                                               ; preds = %dec_label_pc_11d79
  %v2_11d89 = call i32 @function_11dc1()
  store i32 %v2_11d89, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11d8b

dec_label_pc_11d8b:                               ; preds = %bb, %dec_label_pc_11d79
  %v0_11d91 = phi i32 [ %v2_11d89, %bb ], [ %v2_11d82, %dec_label_pc_11d79 ]
  ret i32 %v0_11d91
}

define i32 @function_11db6() local_unnamed_addr {
dec_label_pc_11db6:
  %v0_11db6 = call i32 @function_348a1dbb()
  ret i32 %v0_11db6
}

define i32 @function_11dc1() local_unnamed_addr {
dec_label_pc_11dc1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11edb:
  %stack_var_-64 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v2_11e07 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_11e07, i32* @esi, align 4
  %v2_11e0f = ptrtoint i32* %stack_var_-56 to i32
  store i32 %tmp114, i32* @ebx, align 4
  store i32 0, i32* @eax, align 8
  store i32 ptrtoint (%vtable_316a8_type* @global_var_316a8.2665 to i32), i32* %stack_var_-56, align 4
  store i32 ptrtoint (%vtable_316e8_type* @global_var_316e8.2640 to i32), i32* %stack_var_-84, align 4
  %v3_11e9a = call i32 @function_229b0(i32* nonnull %stack_var_-84, i32 %v2_11e0f)
  store i32 %v3_11e9a, i32* @eax, align 8
  %v6_11ebe = call i32 @function_11f58(i32 ptrtoint ([169 x i8]* @global_var_30d60.2686 to i32), i32 ptrtoint ([54 x i8]* @global_var_d740.2687 to i32), i32 81)
  %v1_11ec9 = load i32, i32* @ebx, align 4
  %v2_11ec9 = inttoptr i32 %v1_11ec9 to i32*
  store i32 0, i32* %v2_11ec9, align 4
  %v1_11ed2 = load i32, i32* @ebx, align 4
  %v2_11ed2 = add i32 %v1_11ed2, 4
  %v3_11ed2 = inttoptr i32 %v2_11ed2 to i32*
  store i32 ptrtoint (i32* @global_var_31da0.2689 to i32), i32* %v3_11ed2, align 4
  store i32 ptrtoint (i32* @global_var_31da5.2692 to i32), i32* bitcast ([90 x i8]** @global_var_31da4.2691 to i32*), align 4
  %v2_11edb = ptrtoint i32* %stack_var_-64 to i32
  ret i32 %v2_11edb

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 1, 2, 0 }
  uselistorder i32 ptrtoint (%vtable_316e8_type* @global_var_316e8.2640 to i32), { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_316a8_type* @global_var_316a8.2665 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @function_11f22(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11f22:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11f22 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11f22 = add i32 %v0_11f22, -2048383940
  %v2_11f22 = inttoptr i32 %v1_11f22 to i32*
  %v3_11f22 = load i32, i32* %v2_11f22, align 4
  %v4_11f22 = sub i32 %v3_11f22, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_11f22, i32* %v2_11f22, align 4
  %v2_11f29 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_11f29 = load i32, i32* %eax.global-to-local, align 8
  %v4_11f29 = trunc i32 %v3_11f29 to i8
  %v5_11f29 = add i8 %v4_11f29, %v2_11f29
  %v21_11f29 = inttoptr i32 %v3_11f29 to i8*
  store i8 %v5_11f29, i8* %v21_11f29, align 1
  %v0_11f2b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_11f2b, i32* @eax, align 8
  %v1_11f31 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11f31 = icmp eq i32 %v1_11f31, %arg1
  %v1_11f38 = icmp eq i1 %v3_11f31, false
  br i1 %v1_11f38, label %bb, label %dec_label_pc_11f3e

bb:                                               ; preds = %dec_label_pc_11f22
  %v2_11f38 = call i32 @function_12024()
  store i32 %v2_11f38, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11f3e

dec_label_pc_11f3e:                               ; preds = %bb, %dec_label_pc_11f22
  %v0_11f51 = phi i32 [ %v2_11f38, %bb ], [ %v0_11f2b, %dec_label_pc_11f22 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_11f51
}

define i32 @function_11f58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f58:
  %v3_11f58 = load i32, i32* @eax, align 8
  ret i32 %v3_11f58
}

define i32 @function_1201f() local_unnamed_addr {
dec_label_pc_1201f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1201f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1201f
}

define i32 @function_12024() local_unnamed_addr {
dec_label_pc_12024:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12044() local_unnamed_addr {
dec_label_pc_12044:
  %eax.global-to-local = alloca i32, align 4
  %v0_12044 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12044
}

define i32 @function_1204d() local_unnamed_addr {
dec_label_pc_1204d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12061(i32 %arg1) local_unnamed_addr {
dec_label_pc_12061:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12072() local_unnamed_addr {
dec_label_pc_12072:
  %eax.global-to-local = alloca i32, align 4
  %v0_12072 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12072
}

define i32 @function_12078() local_unnamed_addr {
dec_label_pc_12078:
  %v0_12078 = call i32 @function_1204d()
  ret i32 %v0_12078
}

define i32 @function_1207a() local_unnamed_addr {
dec_label_pc_1207a:
  %v0_12080 = call i32 @function_1204d()
  ret i32 %v0_12080

; uselistorder directives
  uselistorder i32 ()* @function_1204d, { 1, 0 }
}

define i32 @function_12082() local_unnamed_addr {
dec_label_pc_12082:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_12094 = call i32 @function_12061(i32 %tmp92)
  ret i32 %v1_12094
}

define i32 @_ZN5boost11unique_lockINS_5mutexEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_120a0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_120a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  %v1_120b4 = add i32 %tmp99, 4
  %v2_120b4 = inttoptr i32 %v1_120b4 to i8*
  %v3_120b4 = load i8, i8* %v2_120b4, align 1
  %v10_120b4 = icmp eq i8 %v3_120b4, 0
  %v1_120b8 = icmp eq i1 %v10_120b4, false
  br i1 %v1_120b8, label %bb, label %dec_label_pc_120ba

bb:                                               ; preds = %dec_label_pc_120a0
  %v3_120b8 = call i32 @function_120de(i32 %v0_120a8)
  %v0_120ba.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_120ba

dec_label_pc_120ba:                               ; preds = %bb, %dec_label_pc_120a0
  %v0_120ba = phi i32 [ %v0_120ba.pre, %bb ], [ %tmp99, %dec_label_pc_120a0 ]
  %v1_120ba = inttoptr i32 %v0_120ba to i32*
  %v2_120ba = load i32, i32* %v1_120ba, align 4
  ret i32 %v2_120ba
}

define i32 @function_120c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_120c3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_120c3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_120c3 = add i32 %v0_120c3, -1957726784
  %v2_120c3 = inttoptr i32 %v1_120c3 to i32*
  %v3_120c3 = load i32, i32* %v2_120c3, align 4
  %v4_120c3 = add i32 %v3_120c3, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_120c3, i32* %v2_120c3, align 4
  %v0_120ca = load i32, i32* %eax.global-to-local, align 8
  %v11_120ca = and i32 %v0_120ca, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.2406 to i8) to i32), i32 -256)
  store i32 %v11_120ca, i32* %eax.global-to-local, align 8
  %v1_120cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_120cc = xor i32 %v1_120cc, %v11_120ca
  %v3_120cc = icmp eq i32 %v2_120cc, 0
  store i1 %v3_120cc, i1* %zf.global-to-local, align 1
  store i32 %v2_120cc, i32* @eax, align 8
  %v0_120d3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_120d3 = add i32 %v0_120d3, 4
  %v2_120d3 = inttoptr i32 %v1_120d3 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_120d3, align 1
  %v0_120d7 = load i1, i1* %zf.global-to-local, align 1
  %v1_120d7 = icmp eq i1 %v0_120d7, false
  br i1 %v1_120d7, label %bb, label %dec_label_pc_120c3.dec_label_pc_120d9_crit_edge

dec_label_pc_120c3.dec_label_pc_120d9_crit_edge:  ; preds = %dec_label_pc_120c3
  %v0_120dd.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_120d9

bb:                                               ; preds = %dec_label_pc_120c3
  %v2_120d7 = call i32 @function_12112()
  store i32 %v2_120d7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_120d9

dec_label_pc_120d9:                               ; preds = %dec_label_pc_120c3.dec_label_pc_120d9_crit_edge, %bb
  %v0_120dd = phi i32 [ %v0_120dd.pre, %dec_label_pc_120c3.dec_label_pc_120d9_crit_edge ], [ %v2_120d7, %bb ]
  %v0_120d9 = load i32, i32* @esp, align 4
  %v10_120d9 = icmp eq i32 %v0_120d9, -72
  store i1 %v10_120d9, i1* %zf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_120dd

; uselistorder directives
  uselistorder label %dec_label_pc_120d9, { 1, 0 }
}

define i32 @function_120de(i32 %arg1) local_unnamed_addr {
dec_label_pc_120de:
  %stack_var_44 = alloca i32, align 4
  %v2_120de = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_120de, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), i32* %stack_var_44, align 4
  %v1_120f5 = call i32 @function_23a30(i32 %v2_120de)
  ret i32 %v1_120f5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost10lock_errorD1Ev, { 1, 2, 3, 0 }
  uselistorder i32 ptrtoint (%vtable_27820_type* @global_var_27820.2540 to i32), { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_12112() local_unnamed_addr {
dec_label_pc_12112:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12116() local_unnamed_addr {
dec_label_pc_12116:
  %eax.global-to-local = alloca i32, align 4
  %v0_12116 = load i32, i32* @ebp, align 4
  %v1_12116 = add i32 %v0_12116, -1993071524
  %v2_12116 = inttoptr i32 %v1_12116 to i32*
  %v3_12116 = load i32, i32* %v2_12116, align 4
  %v4_12116 = sub i32 %v3_12116, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12116, i32* %v2_12116, align 4
  %v0_1211d = load i32, i32* %eax.global-to-local, align 8
  %v11_1211d = and i32 %v0_1211d, or (i32 zext (i8 ptrtoint (i32* @global_var_38.2432 to i8) to i32), i32 -256)
  store i32 %v11_1211d, i32* @eax, align 8
  %v0_12127 = load i32, i32* @ebx, align 4
  %v1_1212a = call i32 @function_23a30(i32 %v0_12127)
  store i32 %v1_1212a, i32* %eax.global-to-local, align 8
  ret i32 %v1_1212a

; uselistorder directives
  uselistorder i32 (i32)* @function_23a30, { 1, 0 }
}

define i32 @_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12140:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ebx, align 4
  ret i32 0
}

define i32 @function_12191() local_unnamed_addr {
dec_label_pc_12191:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_121f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_121f8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_121f8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_121f8 = add i32 %v0_121f8, 1132793792
  %v2_121f8 = inttoptr i32 %v1_121f8 to i32*
  %v3_121f8 = load i32, i32* %v2_121f8, align 4
  %v4_121f8 = add i32 %v3_121f8, 1
  store i32 %v4_121f8, i32* %v2_121f8, align 4
  %v2_121fe = load i32, i32* %eax.global-to-local, align 8
  %v4_121fe = mul i32 %v2_121fe, 2
  %v14_121fe = icmp eq i32 %v4_121fe, 0
  store i1 %v14_121fe, i1* %zf.global-to-local, align 1
  %v21_121fe = inttoptr i32 %v2_121fe to i32*
  store i32 %v4_121fe, i32* %v21_121fe, align 4
  %v0_12200 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12200 = add i32 %v0_12200, 1699488836
  %v2_12200 = inttoptr i32 %v1_12200 to i8*
  %v3_12200 = load i8, i8* %v2_12200, align 1
  %v4_12200 = load i32, i32* %ecx.global-to-local, align 4
  %v5_12200 = trunc i32 %v4_12200 to i8
  %v6_12200 = add i8 %v5_12200, %v3_12200
  store i8 %v6_12200, i8* %v2_12200, align 1
  %v0_12206 = load i32, i32* %eax.global-to-local, align 8
  %v1_12206 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12206 = xor i32 %v1_12206, %v0_12206
  %v3_12206 = icmp eq i32 %v2_12206, 0
  store i1 %v3_12206, i1* %zf.global-to-local, align 1
  store i32 %v2_12206, i32* @eax, align 8
  %v0_1220c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1220c = add i32 %v0_1220c, 4
  %v2_1220c = inttoptr i32 %v1_1220c to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1220c, align 1
  %v0_12210 = load i1, i1* %zf.global-to-local, align 1
  %v1_12210 = icmp eq i1 %v0_12210, false
  br i1 %v1_12210, label %bb, label %dec_label_pc_121f8.dec_label_pc_12216_crit_edge

dec_label_pc_121f8.dec_label_pc_12216_crit_edge:  ; preds = %dec_label_pc_121f8
  %v0_1221d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_12216

bb:                                               ; preds = %dec_label_pc_121f8
  %v2_12210 = call i32 @function_1233f()
  store i32 %v2_12210, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_12216

dec_label_pc_12216:                               ; preds = %dec_label_pc_121f8.dec_label_pc_12216_crit_edge, %bb
  %v0_1221d = phi i32 [ %v0_1221d.pre, %dec_label_pc_121f8.dec_label_pc_12216_crit_edge ], [ %v2_12210, %bb ]
  %v0_12216 = load i32, i32* @esp, align 4
  %v10_12216 = icmp eq i32 %v0_12216, -92
  store i1 %v10_12216, i1* %zf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1221d

; uselistorder directives
  uselistorder i32 %v2_121fe, { 1, 0 }
  uselistorder label %dec_label_pc_12216, { 1, 0 }
}

define i32 @function_1226c() local_unnamed_addr {
dec_label_pc_1226c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_122c9() local_unnamed_addr {
dec_label_pc_122c9:
  %v0_122c9 = load i32, i32* @eax, align 8
  %v1_122c9 = icmp eq i32 %v0_122c9, 0
  br i1 %v1_122c9, label %bb, label %dec_label_pc_122d1

bb:                                               ; preds = %dec_label_pc_122c9
  %v1_122cb = call i32 @function_12191()
  store i32 %v1_122cb, i32* @eax, align 8
  br label %dec_label_pc_122d1

dec_label_pc_122d1:                               ; preds = %bb, %dec_label_pc_122c9
  %v0_122d1 = call i32 @function_1226c()
  ret i32 %v0_122d1
}

define i32 @function_122fb() local_unnamed_addr {
dec_label_pc_122fb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12307() local_unnamed_addr {
dec_label_pc_12307:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12313() local_unnamed_addr {
dec_label_pc_12313:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1233f() local_unnamed_addr {
dec_label_pc_1233f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12343() local_unnamed_addr {
dec_label_pc_12343:
  %eax.global-to-local = alloca i32, align 4
  %v0_12343 = load i32, i32* @ebp, align 4
  %v1_12343 = add i32 %v0_12343, -1992022948
  %v2_12343 = inttoptr i32 %v1_12343 to i32*
  %v3_12343 = load i32, i32* %v2_12343, align 4
  %v4_12343 = sub i32 %v3_12343, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12343, i32* %v2_12343, align 4
  %v0_1234a = load i32, i32* %eax.global-to-local, align 8
  %v11_1234a = and i32 %v0_1234a, -184
  store i32 %v11_1234a, i32* @eax, align 8
  %v0_12354 = load i32, i32* @ebx, align 4
  %v1_12361 = call i32 @function_20b90(i32 %v0_12354)
  store i32 %v1_12361, i32* @eax, align 8
  %v0_12366 = call i32 @function_12313()
  store i32 %v0_12366, i32* %eax.global-to-local, align 8
  ret i32 %v0_12366
}

define i32 @function_12401() local_unnamed_addr {
dec_label_pc_12401:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12401 = load i32, i32* @ebp, align 4
  %v1_12401 = add i32 %v0_12401, -1993071500
  %v2_12401 = inttoptr i32 %v1_12401 to i32*
  %v3_12401 = load i32, i32* %v2_12401, align 4
  %v4_12401 = sub i32 %v3_12401, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12401, i32* %v2_12401, align 4
  %v0_12408 = load i32, i32* %eax.global-to-local, align 8
  %v11_12408 = and i32 %v0_12408, or (i32 zext (i8 ptrtoint (i32* @global_var_38.2432 to i8) to i32), i32 -256)
  store i32 %v11_12408, i32* @eax, align 8
  %v0_12412 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v11_12408, i32* @edi, align 4
  store i32 %v11_12408, i32* %esi.global-to-local, align 4
  %v1_12421 = call i32 @function_20b90(i32 %v0_12412)
  store i32 %v1_12421, i32* @eax, align 8
  %v0_12426 = call i32 @function_12307()
  store i32 %v0_12426, i32* %eax.global-to-local, align 8
  ret i32 %v0_12426

; uselistorder directives
  uselistorder i32 %v11_12408, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_20b90, { 1, 0 }
}

define i32 @function_1242b() local_unnamed_addr {
dec_label_pc_1242b:
  %eax.global-to-local = alloca i32, align 4
  %v0_12443 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12443
}

define i32 @function_12474() local_unnamed_addr {
dec_label_pc_12474:
  %eax.global-to-local = alloca i32, align 4
  %v0_12474 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12474
}

define i32 @function_124b1() local_unnamed_addr {
dec_label_pc_124b1:
  %v0_124b3 = call i32 @function_122fb()
  ret i32 %v0_124b3
}

define i32 @function_124b8() local_unnamed_addr {
dec_label_pc_124b8:
  %v0_124b8 = call i32 @function_124b1()
  ret i32 %v0_124b8
}

define i32 @_ZN5boost10lock_guardINS_12shared_mutexEEC1ERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124c0:
  %tmp97 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp97
}

define i32 @function_12510() local_unnamed_addr {
dec_label_pc_12510:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1252e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1252e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1252e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1252e = add i32 %v0_1252e, 1697391684
  %v2_1252e = inttoptr i32 %v1_1252e to i32*
  %v3_1252e = load i32, i32* %v2_1252e, align 4
  %v4_1252e = add i32 %v3_1252e, -1
  store i32 %v4_1252e, i32* %v2_1252e, align 4
  %v0_12534 = load i32, i32* %eax.global-to-local, align 8
  %v1_12534 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12534 = xor i32 %v1_12534, %v0_12534
  %v3_12534 = icmp eq i32 %v2_12534, 0
  store i32 %v2_12534, i32* @eax, align 8
  %v1_1253a = icmp eq i1 %v3_12534, false
  br i1 %v1_1253a, label %bb, label %dec_label_pc_1253c

bb:                                               ; preds = %dec_label_pc_1252e
  %v2_1253a = call i32 @function_125a7()
  store i32 %v2_1253a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1253c

dec_label_pc_1253c:                               ; preds = %bb, %dec_label_pc_1252e
  %v0_12543 = phi i32 [ %v2_1253a, %bb ], [ %v2_12534, %dec_label_pc_1252e ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_12543
}

define i32 @function_12548() local_unnamed_addr {
dec_label_pc_12548:
  %v0_12548 = load i32, i32* @ebx, align 4
  %v1_12548 = add i32 %v0_12548, ptrtoint (i16** @global_var_6.2538 to i32)
  %v2_12548 = inttoptr i32 %v1_12548 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_12548, align 1
  %v0_1254c = load i32, i32* @esi, align 4
  %v0_12550 = load i32, i32* @edi, align 4
  %v2_12553 = inttoptr i32 %v0_12550 to i8*
  %v3_12553 = call i32 @function_24600(i8* %v2_12553, i32 %v0_1254c)
  store i32 %v3_12553, i32* @eax, align 8
  %v0_12558 = call i32 @function_12510()
  ret i32 %v0_12558
}

define i32 @function_12587() local_unnamed_addr {
dec_label_pc_12587:
  %eax.global-to-local = alloca i32, align 4
  %v0_12587 = load i32, i32* %eax.global-to-local, align 8
  %v11_12587 = and i32 %v0_12587, -24
  store i32 %v11_12587, i32* %eax.global-to-local, align 8
  ret i32 %v11_12587

; uselistorder directives
  uselistorder i32 %v11_12587, { 1, 0 }
}

define i32 @function_1258e() local_unnamed_addr {
dec_label_pc_1258e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1258e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1258e
}

define i32 @function_12597() local_unnamed_addr {
dec_label_pc_12597:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_125a7() local_unnamed_addr {
dec_label_pc_125a7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_125ab() local_unnamed_addr {
dec_label_pc_125ab:
  %v0_125ab = load i32, i32* @ecx, align 4
  %v1_125ab = add i32 %v0_125ab, 605850054
  %v2_125ab = inttoptr i32 %v1_125ab to i32*
  %v3_125ab = load i32, i32* %v2_125ab, align 4
  %v4_125ab = add i32 %v3_125ab, -1
  store i32 %v4_125ab, i32* %v2_125ab, align 4
  %v0_125b1 = load i32, i32* @esi, align 4
  store i32 %v0_125b1, i32* @ebx, align 4
  %v0_125b3 = call i32 @function_20f10()
  store i32 %v0_125b3, i32* @eax, align 8
  %v0_125b8 = call i32 @function_12597()
  ret i32 %v0_125b8
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_125c0:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v0_125c8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_125d5 = load i32, i32* %arg1, align 4
  %v1_125d7 = add i32 %tmp5, 8
  %v2_125d7 = inttoptr i32 %v1_125d7 to i32*
  %v3_125d7 = load i32, i32* %v2_125d7, align 4
  store i32 %v3_125d7, i32* @eax, align 8
  %v1_125da = icmp eq i32 %v2_125d5, 0
  br i1 %v1_125da, label %bb, label %dec_label_pc_125de

bb:                                               ; preds = %dec_label_pc_125c0
  %v2_125dc = call i32 @function_12608(i32 %v0_125c8)
  br label %dec_label_pc_125de

dec_label_pc_125de:                               ; preds = %bb, %dec_label_pc_125c0
  %v0_125de = phi i32 [ %v2_125dc, %bb ], [ %v3_125d7, %dec_label_pc_125c0 ]
  %v2_125de = sub i32 %v0_125de, %v2_125d5
  ret i32 %v2_125de
}

define i32 @function_12605() local_unnamed_addr {
dec_label_pc_12605:
  %eax.global-to-local = alloca i32, align 4
  %v0_12605 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12605
}

define i32 @function_12608(i32 %arg1) local_unnamed_addr {
dec_label_pc_12608:
  %v1_1260c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1260c = icmp eq i32 %v1_1260c, %arg1
  %v1_12613 = icmp eq i1 %v3_1260c, false
  br i1 %v1_12613, label %dec_label_pc_1261a, label %dec_label_pc_12615

dec_label_pc_12615:                               ; preds = %dec_label_pc_12608
  %v0_12619 = load i32, i32* @eax, align 8
  ret i32 %v0_12619

dec_label_pc_1261a:                               ; preds = %dec_label_pc_12608
  %v1_1261a = load i32, i32* @eax, align 8
  ret i32 %v1_1261a
}

define i32 @_ZN11CNetMessageD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12630:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12630 = load i32, i32* %esi.global-to-local, align 4
  %v0_12631 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v0_12639 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_12645 = add i32 %arg1, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_12645 = inttoptr i32 %v1_12645 to i32*
  %v3_12645 = load i32, i32* %v2_12645, align 4
  store i32 %v3_12645, i32* %esi.global-to-local, align 4
  %v1_12648 = add i32 %arg1, 68
  %v2_12648 = inttoptr i32 %v1_12648 to i32*
  %v3_12648 = load i32, i32* %v2_12648, align 4
  %v1_1264b = icmp eq i32 %v3_12645, 0
  br i1 %v1_1264b, label %bb, label %dec_label_pc_1264f

bb:                                               ; preds = %dec_label_pc_12630
  %v4_1264d = call i32 @function_12665(i32 %v0_12639, i32 %v0_12631, i32 %v0_12630)
  br label %dec_label_pc_1264f

dec_label_pc_1264f:                               ; preds = %bb, %dec_label_pc_12630
  %v0_1264f = phi i32 [ %v4_1264d, %bb ], [ %v3_12648, %dec_label_pc_12630 ]
  %v2_1264f = sub i32 %v0_1264f, %v3_12645
  ret i32 %v2_1264f

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_12665(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12665:
  %v0_12665 = load i32, i32* @ebx, align 4
  %v1_12665 = add i32 %v0_12665, 4
  %v2_12665 = inttoptr i32 %v1_12665 to i32*
  %v3_12665 = load i32, i32* %v2_12665, align 4
  %v1_12668 = add i32 %v0_12665, 12
  %v2_12668 = inttoptr i32 %v1_12668 to i32*
  %v3_12668 = load i32, i32* %v2_12668, align 4
  %v1_1266b = icmp eq i32 %v3_12665, 0
  br i1 %v1_1266b, label %bb, label %dec_label_pc_1266f

bb:                                               ; preds = %dec_label_pc_12665
  %v1_1266d = call i32 @function_12698()
  br label %dec_label_pc_1266f

dec_label_pc_1266f:                               ; preds = %bb, %dec_label_pc_12665
  %v0_1266f = phi i32 [ %v1_1266d, %bb ], [ %v3_12668, %dec_label_pc_12665 ]
  %v2_1266f = sub i32 %v0_1266f, %v3_12665
  ret i32 %v2_1266f
}

define i32 @function_12698() local_unnamed_addr {
dec_label_pc_12698:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_1269c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1269c = xor i32 %v1_1269c, %tmp3
  %v3_1269c = icmp eq i32 %v2_1269c, 0
  %v1_126a3 = icmp eq i1 %v3_1269c, false
  br i1 %v1_126a3, label %dec_label_pc_126ab, label %dec_label_pc_126a5

dec_label_pc_126a5:                               ; preds = %dec_label_pc_12698
  ret i32 %v2_1269c

dec_label_pc_126ab:                               ; preds = %dec_label_pc_12698
  ret i32 %v2_1269c

; uselistorder directives
  uselistorder i32 %v2_1269c, { 1, 0, 2 }
}

define i32 @function_126b8() local_unnamed_addr {
dec_label_pc_126b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_126b8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_126b8
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126d0:
  %eax.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %tmp100, i32* @ebx, align 4
  %v0_126e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_126ed = add i32 %arg2, 4
  %v2_126ed = inttoptr i32 %v1_126ed to i32*
  %v3_126ed = load i32, i32* %v2_126ed, align 4
  %v2_126f0 = inttoptr i32 %arg2 to i32*
  %v3_126f0 = load i32, i32* %v2_126f0, align 4
  %v4_126f0 = sub i32 %v3_126ed, %v3_126f0
  %v14_126f0 = icmp eq i32 %v4_126f0, 0
  store i32 %v4_126f0, i32* @esi, align 4
  store i32 0, i32* %arg1, align 4
  %v0_126f8 = load i32, i32* @ebx, align 4
  %v1_126f8 = add i32 %v0_126f8, 4
  %v2_126f8 = inttoptr i32 %v1_126f8 to i32*
  store i32 0, i32* %v2_126f8, align 4
  %v0_12701 = load i32, i32* @ebx, align 4
  %v1_12701 = add i32 %v0_12701, 8
  %v2_12701 = inttoptr i32 %v1_12701 to i32*
  store i32 0, i32* %v2_12701, align 4
  br i1 %v14_126f0, label %bb, label %dec_label_pc_126d0.dec_label_pc_1270a_crit_edge

dec_label_pc_126d0.dec_label_pc_1270a_crit_edge:  ; preds = %dec_label_pc_126d0
  %v3_1270a.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1270a

bb:                                               ; preds = %dec_label_pc_126d0
  %v2_12708 = call i32 @function_12714(i32 %v0_126e1)
  store i32 %v2_12708, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1270a

dec_label_pc_1270a:                               ; preds = %dec_label_pc_126d0.dec_label_pc_1270a_crit_edge, %bb
  %v3_1270a = phi i32 [ %v3_1270a.pre, %dec_label_pc_126d0.dec_label_pc_1270a_crit_edge ], [ %v2_12708, %bb ]
  ret i32 %v3_1270a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1270a, { 1, 0 }
}

define i32 @function_12714(i32 %arg1) local_unnamed_addr {
dec_label_pc_12714:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12714 = load i32, i32* @esi, align 4
  %v1_12714 = load i32, i32* @ebp, align 4
  %v2_12714 = add i32 %v1_12714, %v0_12714
  store i32 %v2_12714, i32* %esi.global-to-local, align 4
  %v1_12716 = load i32, i32* @ebx, align 4
  %v2_12716 = inttoptr i32 %v1_12716 to i32*
  store i32 %v1_12714, i32* %v2_12716, align 4
  %v0_12718 = load i32, i32* @ebp, align 4
  %v1_12718 = load i32, i32* @ebx, align 4
  %v2_12718 = add i32 %v1_12718, 4
  %v3_12718 = inttoptr i32 %v2_12718 to i32*
  store i32 %v0_12718, i32* %v3_12718, align 4
  %v0_1271b = load i32, i32* %esi.global-to-local, align 4
  %v1_1271b = load i32, i32* @ebx, align 4
  %v2_1271b = add i32 %v1_1271b, 8
  %v3_1271b = inttoptr i32 %v2_1271b to i32*
  store i32 %v0_1271b, i32* %v3_1271b, align 4
  %v0_1271e = load i32, i32* @edi, align 4
  %v1_1271e = add i32 %v0_1271e, 4
  %v2_1271e = inttoptr i32 %v1_1271e to i32*
  %v3_1271e = load i32, i32* %v2_1271e, align 4
  store i32 %v3_1271e, i32* %esi.global-to-local, align 4
  %v12_12723 = icmp eq i32 %v3_1271e, %v0_1271e
  br i1 %v12_12723, label %dec_label_pc_12714.dec_label_pc_12747_crit_edge, label %dec_label_pc_12727

dec_label_pc_12714.dec_label_pc_12747_crit_edge:  ; preds = %dec_label_pc_12714
  %v0_12752.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_12747

dec_label_pc_12727:                               ; preds = %dec_label_pc_12714
  store i32 %v0_1271e, i32* %edx.global-to-local, align 4
  %v0_12729 = load i32, i32* @ebp, align 4
  store i32 %v0_12729, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_12730

dec_label_pc_12730:                               ; preds = %dec_label_pc_12739, %dec_label_pc_12727
  %v1_1273f5 = phi i32 [ %v1_1273f, %dec_label_pc_12739 ], [ %v3_1271e, %dec_label_pc_12727 ]
  %v0_12734 = phi i32 [ %v1_12739, %dec_label_pc_12739 ], [ %v0_1271e, %dec_label_pc_12727 ]
  %v2_12737 = phi i32 [ %v1_1273c, %dec_label_pc_12739 ], [ %v0_12729, %dec_label_pc_12727 ]
  %v1_12730 = icmp eq i32 %v2_12737, 0
  br i1 %v1_12730, label %dec_label_pc_12739, label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_12730
  %v1_12734 = inttoptr i32 %v0_12734 to i8*
  %v2_12734 = load i8, i8* %v1_12734, align 1
  %v3_12734 = zext i8 %v2_12734 to i32
  store i32 %v3_12734, i32* %eax.global-to-local, align 8
  %v3_12737 = inttoptr i32 %v2_12737 to i8*
  store i8 %v2_12734, i8* %v3_12737, align 1
  %v0_12739.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1273c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1273f.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_12739

dec_label_pc_12739:                               ; preds = %dec_label_pc_12734, %dec_label_pc_12730
  %v1_1273f = phi i32 [ %v1_1273f.pre, %dec_label_pc_12734 ], [ %v1_1273f5, %dec_label_pc_12730 ]
  %v0_1273c = phi i32 [ %v0_1273c.pre, %dec_label_pc_12734 ], [ 0, %dec_label_pc_12730 ]
  %v0_12739 = phi i32 [ %v0_12739.pre, %dec_label_pc_12734 ], [ %v0_12734, %dec_label_pc_12730 ]
  %v1_12739 = add i32 %v0_12739, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_12739, i32* %edx.global-to-local, align 4
  %v1_1273c = add i32 %v0_1273c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1273c, i32* %ecx.global-to-local, align 4
  %v12_1273f = icmp eq i32 %v1_12739, %v1_1273f
  %v1_12741 = icmp eq i1 %v12_1273f, false
  br i1 %v1_12741, label %dec_label_pc_12730, label %dec_label_pc_12743

dec_label_pc_12743:                               ; preds = %dec_label_pc_12739
  %v1_12743 = load i32, i32* @edi, align 4
  %v2_12743 = sub i32 %v1_12739, %v1_12743
  store i32 %v2_12743, i32* %edx.global-to-local, align 4
  %v0_12745 = load i32, i32* @ebp, align 4
  %v2_12745 = add i32 %v0_12745, %v2_12743
  br label %dec_label_pc_12747

dec_label_pc_12747:                               ; preds = %dec_label_pc_12714.dec_label_pc_12747_crit_edge, %dec_label_pc_12743
  %v0_12752 = phi i32 [ %v0_12752.pre, %dec_label_pc_12714.dec_label_pc_12747_crit_edge ], [ %v2_12745, %dec_label_pc_12743 ]
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1274b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1274b = xor i32 %v1_1274b, %arg1
  %v3_1274b = icmp eq i32 %v2_1274b, 0
  store i32 %v2_1274b, i32* %eax.global-to-local, align 8
  %v1_12752 = load i32, i32* @ebx, align 4
  %v2_12752 = add i32 %v1_12752, 4
  %v3_12752 = inttoptr i32 %v2_12752 to i32*
  store i32 %v0_12752, i32* %v3_12752, align 4
  %v1_12755 = icmp eq i1 %v3_1274b, false
  br i1 %v1_12755, label %dec_label_pc_1275f, label %dec_label_pc_12757

dec_label_pc_12757:                               ; preds = %dec_label_pc_12747
  %v0_1275e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1275e

dec_label_pc_1275f:                               ; preds = %dec_label_pc_12747
  %v1_1275e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_1275e

; uselistorder directives
  uselistorder i32 %v1_1273c, { 1, 0 }
  uselistorder i32 %v1_12739, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1271e, { 1, 0, 2 }
  uselistorder i32 %v0_1271e, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12714, { 1, 0 }
  uselistorder label %dec_label_pc_12747, { 1, 0 }
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12770:
  %v0_12778 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12784 = load i32, i32* %arg1, align 4
  %v2_12788 = ashr i32 %v2_12784, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_1278b = xor i32 %v2_12788, %v2_12784
  store i32 %v2_1278b, i32* @eax, align 8
  %tmp109 = icmp ult i32 %v2_1278b, 20
  br i1 %tmp109, label %bb, label %dec_label_pc_12792

bb:                                               ; preds = %dec_label_pc_12770
  %v4_12790 = call i32 @function_127b8(i32 %v0_12778)
  br label %dec_label_pc_12792

dec_label_pc_12792:                               ; preds = %bb, %dec_label_pc_12770
  %v3_127aa = phi i32 [ %v4_12790, %bb ], [ %v2_1278b, %dec_label_pc_12770 ]
  ret i32 %v3_127aa

; uselistorder directives
  uselistorder i32 %v2_1278b, { 1, 0, 2 }
}

define i32 @function_127b5() local_unnamed_addr {
dec_label_pc_127b5:
  %eax.global-to-local = alloca i32, align 4
  %v0_127b5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_127b5
}

define i32 @function_127b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_127b8:
  %v0_127b8 = load i32, i32* @eax, align 8
  ret i32 %v0_127b8
}

define i32 @function_127c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_127c0:
  %edx.global-to-local = alloca i32, align 4
  %v0_127c8 = load i32, i32* %edx.global-to-local, align 4
  %v2_127c8 = icmp slt i32 %v0_127c8, 0
  br i1 %v2_127c8, label %bb, label %dec_label_pc_127d6

bb:                                               ; preds = %dec_label_pc_127c0
  %v1_127d0 = call i32 @function_12868()
  br label %dec_label_pc_127d6

dec_label_pc_127d6:                               ; preds = %bb, %dec_label_pc_127c0
  %v0_127d6 = load i32, i32* @ecx, align 4
  %v1_127d6 = add i32 %v0_127d6, 4
  %v2_127d6 = inttoptr i32 %v1_127d6 to i32*
  %v3_127d6 = load i32, i32* %v2_127d6, align 4
  store i32 %v3_127d6, i32* @eax, align 8
  %v1_127d9 = icmp eq i32 %v3_127d6, 0
  br i1 %v1_127d9, label %bb102, label %dec_label_pc_127dd

bb102:                                            ; preds = %dec_label_pc_127d6
  %v1_127db = call i32 @function_12830()
  store i32 %v1_127db, i32* @eax, align 8
  br label %dec_label_pc_127dd

dec_label_pc_127dd:                               ; preds = %bb102, %dec_label_pc_127d6
  %v0_127ee2 = phi i32 [ %v1_127db, %bb102 ], [ %v3_127d6, %dec_label_pc_127d6 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_127e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_127e1 = xor i32 %v1_127e1, %arg1
  %v3_127e1 = icmp eq i32 %v2_127e1, 0
  store i32 %v2_127e1, i32* %edx.global-to-local, align 4
  %v1_127e8 = icmp eq i1 %v3_127e1, false
  br i1 %v1_127e8, label %bb103, label %dec_label_pc_127ee

bb103:                                            ; preds = %dec_label_pc_127dd
  %v2_127e8 = call i32 @function_1288a()
  br label %dec_label_pc_127ee

dec_label_pc_127ee:                               ; preds = %bb103, %dec_label_pc_127dd
  %v0_127ee = phi i32 [ %v2_127e8, %bb103 ], [ %v0_127ee2, %dec_label_pc_127dd ]
  %v1_127ee = inttoptr i32 %v0_127ee to i32*
  %v2_127ee = load i32, i32* %v1_127ee, align 4
  store i32 %v2_127ee, i32* %edx.global-to-local, align 4
  %v1_127f4 = add i32 %v2_127ee, 4
  %v2_127f4 = inttoptr i32 %v1_127f4 to i32*
  %v3_127f4 = load i32, i32* %v2_127f4, align 4
  ret i32 %v3_127f4
}

define i32 @function_12823() local_unnamed_addr {
dec_label_pc_12823:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_12830() local_unnamed_addr {
dec_label_pc_12830:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_12834 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12834 = icmp eq i32 %v1_12834, %tmp4
  %v1_1283b = icmp eq i1 %v3_12834, false
  br i1 %v1_1283b, label %bb, label %dec_label_pc_12830.dec_label_pc_1283d_crit_edge

dec_label_pc_12830.dec_label_pc_1283d_crit_edge:  ; preds = %dec_label_pc_12830
  %v0_12841.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1283d

bb:                                               ; preds = %dec_label_pc_12830
  %v2_1283b = call i32 @function_1288a()
  br label %dec_label_pc_1283d

dec_label_pc_1283d:                               ; preds = %dec_label_pc_12830.dec_label_pc_1283d_crit_edge, %bb
  %v0_12841 = phi i32 [ %v2_1283b, %bb ], [ %v0_12841.pre, %dec_label_pc_12830.dec_label_pc_1283d_crit_edge ]
  ret i32 %v0_12841

; uselistorder directives
  uselistorder label %dec_label_pc_1283d, { 1, 0 }
}

define i32 @function_12848(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12848:
  %ecx.global-to-local = alloca i32, align 4
  %v1_1284c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1284c = icmp eq i32 %v1_1284c, %arg1
  %v1_12853 = icmp eq i1 %v3_1284c, false
  br i1 %v1_12853, label %bb, label %dec_label_pc_12848.dec_label_pc_12855_crit_edge

dec_label_pc_12848.dec_label_pc_12855_crit_edge:  ; preds = %dec_label_pc_12848
  %v0_12860.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_12855

bb:                                               ; preds = %dec_label_pc_12848
  %v2_12853 = call i32 @function_1288a()
  br label %dec_label_pc_12855

dec_label_pc_12855:                               ; preds = %dec_label_pc_12848.dec_label_pc_12855_crit_edge, %bb
  %v0_12860 = phi i32 [ %v2_12853, %bb ], [ %v0_12860.pre, %dec_label_pc_12848.dec_label_pc_12855_crit_edge ]
  %v0_12855 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12855 = add i32 %v0_12855, 8
  store i32 %v1_12855, i32* %ecx.global-to-local, align 4
  ret i32 %v0_12860

; uselistorder directives
  uselistorder i32 ()* @function_1288a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12855, { 1, 0 }
}

define i32 @function_12868() local_unnamed_addr {
dec_label_pc_12868:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_12868 = load i32, i32* @ecx, align 4
  %v1_12868 = add i32 %v0_12868, 4
  %v2_12868 = inttoptr i32 %v1_12868 to i32*
  %v3_12868 = load i32, i32* %v2_12868, align 4
  %v1_1286b = icmp eq i32 %v3_12868, 0
  br i1 %v1_1286b, label %bb, label %dec_label_pc_1286f

bb:                                               ; preds = %dec_label_pc_12868
  %v1_1286d = call i32 @function_12830()
  br label %dec_label_pc_1286f

dec_label_pc_1286f:                               ; preds = %bb, %dec_label_pc_12868
  %v1_1286f = inttoptr i32 %v3_12868 to i32*
  %v2_1286f = load i32, i32* %v1_1286f, align 4
  %v1_12871 = icmp eq i32 %v2_1286f, 0
  br i1 %v1_12871, label %dec_label_pc_1287d, label %dec_label_pc_12875

dec_label_pc_12875:                               ; preds = %dec_label_pc_1286f
  br label %dec_label_pc_1287d

dec_label_pc_1287d:                               ; preds = %dec_label_pc_12875, %dec_label_pc_1286f
  %v1_12881 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12881 = xor i32 %v1_12881, %tmp2
  ret i32 %v2_12881

; uselistorder directives
  uselistorder i32 ()* @function_12830, { 1, 0 }
}

define i32 @function_1288a() local_unnamed_addr {
dec_label_pc_1288a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_128e0:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v0_128e0 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  %v1_128f5 = add i32 %tmp6, 4
  %v2_128f5 = inttoptr i32 %v1_128f5 to i8*
  %v3_128f5 = load i8, i8* %v2_128f5, align 1
  %v10_128f5 = icmp eq i8 %v3_128f5, 0
  %v1_128f9 = icmp eq i1 %v10_128f5, false
  br i1 %v1_128f9, label %dec_label_pc_12910, label %dec_label_pc_128fb

dec_label_pc_128fb:                               ; preds = %dec_label_pc_128e0
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_12908

bb:                                               ; preds = %dec_label_pc_128fb
  br label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %bb, %dec_label_pc_128fb
  store i32 %v0_128e0, i32* @ebx, align 4
  ret i32 0

dec_label_pc_12910:                               ; preds = %dec_label_pc_128e0
  %v2_12910 = load i32, i32* %arg1, align 4
  store i32 %v2_12910, i32* @ebx, align 4
  ret i32 %tmp6
}

define i32 @function_1292b() local_unnamed_addr {
dec_label_pc_1292b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12941() local_unnamed_addr {
dec_label_pc_12941:
  %ebx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_12941 = add i32 %tmp91, -390761280
  %v2_12941 = inttoptr i32 %v1_12941 to i32*
  %v3_12941 = load i32, i32* %v2_12941, align 4
  %v4_12941 = add i32 %v3_12941, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12941, i32* %v2_12941, align 4
  %v1_12947 = load i32, i32* @eax, align 8
  %tmp96 = trunc i32 %v1_12947 to i8
  %v5_12949 = mul i8 %tmp96, 2
  %v21_12949 = inttoptr i32 %v1_12947 to i8*
  store i8 %v5_12949, i8* %v21_12949, align 1
  %v0_12950 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12950 = add i32 %v0_12950, 72
  %v2_12950 = inttoptr i32 %v1_12950 to i8*
  store i8 0, i8* %v2_12950, align 1
  %v0_12954 = call i32 @function_1292b()
  ret i32 %v0_12954
}

define i32 @function_12956(i32 %arg1) local_unnamed_addr {
dec_label_pc_12956:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt6vectorIiSaIiEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12970:
  %v0_12973 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12983 = load i32, i32* %arg1, align 4
  store i32 %v2_12983, i32* @eax, align 8
  %v1_12985 = icmp eq i32 %v2_12983, 0
  br i1 %v1_12985, label %bb, label %dec_label_pc_12989

bb:                                               ; preds = %dec_label_pc_12970
  %v2_12987 = call i32 @function_129a8(i32 %v0_12973)
  store i32 %v2_12987, i32* @eax, align 8
  br label %dec_label_pc_12989

dec_label_pc_12989:                               ; preds = %bb, %dec_label_pc_12970
  %v17_1299a2 = phi i32 [ %v2_12987, %bb ], [ %v2_12983, %dec_label_pc_12970 ]
  br i1 false, label %bb103, label %dec_label_pc_12996

bb103:                                            ; preds = %dec_label_pc_12989
  br label %dec_label_pc_12996

dec_label_pc_12996:                               ; preds = %bb103, %dec_label_pc_12989
  ret i32 %v17_1299a2
}

define i32 @function_129a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_129a8:
  %v1_129ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_129ac = xor i32 %v1_129ac, %arg1
  %v3_129ac = icmp eq i32 %v2_129ac, 0
  store i32 %v2_129ac, i32* @eax, align 8
  %v1_129b3 = icmp eq i1 %v3_129ac, false
  br i1 %v1_129b3, label %bb, label %dec_label_pc_129b5

bb:                                               ; preds = %dec_label_pc_129a8
  %v2_129b3 = call i32 @function_129b9()
  br label %dec_label_pc_129b5

dec_label_pc_129b5:                               ; preds = %bb, %dec_label_pc_129a8
  %v0_129b8 = phi i32 [ %v2_129b3, %bb ], [ %v2_129ac, %dec_label_pc_129a8 ]
  ret i32 %v0_129b8
}

define i32 @function_129b9() local_unnamed_addr {
dec_label_pc_129b9:
  %v1_129b9 = load i32, i32* @eax, align 8
  ret i32 %v1_129b9
}

define i32 @_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_129d0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_129d0 = load i32, i32* %edi.global-to-local, align 4
  %v0_129d1 = load i32, i32* %esi.global-to-local, align 4
  %v0_129d2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* @edi, align 4
  %v0_129da = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_129e6 = add i32 %tmp100, 4
  %v2_129e6 = inttoptr i32 %v1_129e6 to i32*
  %v3_129e6 = load i32, i32* %v2_129e6, align 4
  store i32 %v3_129e6, i32* @esi, align 4
  %v2_129e9 = load i32, i32* %arg1, align 4
  store i32 %v2_129e9, i32* @ebx, align 4
  %v12_129eb = icmp eq i32 %v3_129e6, %v2_129e9
  br i1 %v12_129eb, label %bb, label %dec_label_pc_129ef

bb:                                               ; preds = %dec_label_pc_129d0
  %v5_129ed = call i32 @function_12a07(i32 %v0_129da, i32 %v0_129d2, i32 %v0_129d1, i32 %v0_129d0)
  %v0_129f0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_129ef

dec_label_pc_129ef:                               ; preds = %bb, %dec_label_pc_129d0
  %v0_129f0 = phi i32 [ %v0_129f0.pre, %bb ], [ %v2_129e9, %dec_label_pc_129d0 ]
  %v1_129f0 = inttoptr i32 %v0_129f0 to i32*
  %v2_129f0 = load i32, i32* %v1_129f0, align 4
  store i32 %v2_129f0, i32* @eax, align 8
  %v1_129f2 = icmp eq i32 %v2_129f0, 0
  br i1 %v1_129f2, label %bb105, label %dec_label_pc_129f6

bb105:                                            ; preds = %dec_label_pc_129ef
  %v1_129f4 = call i32 @function_129fe()
  br label %dec_label_pc_129f6

dec_label_pc_129f6:                               ; preds = %bb105, %dec_label_pc_129ef
  %v0_129f6 = phi i32 [ %v1_129f4, %bb105 ], [ %v2_129f0, %dec_label_pc_129ef ]
  ret i32 %v0_129f6

; uselistorder directives
  uselistorder i32 %v2_129e9, { 1, 0, 2 }
}

define i32 @function_129fe() local_unnamed_addr {
dec_label_pc_129fe:
  %v3_12a05 = load i32, i32* @eax, align 8
  ret i32 %v3_12a05
}

define i32 @function_12a07(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a07:
  %v0_12a07 = load i32, i32* @ebx, align 4
  %v1_12a07 = icmp eq i32 %v0_12a07, 0
  br i1 %v1_12a07, label %bb, label %dec_label_pc_12a0b

bb:                                               ; preds = %dec_label_pc_12a07
  %v1_12a09 = call i32 @function_12a28()
  br label %dec_label_pc_12a0b

dec_label_pc_12a0b:                               ; preds = %bb, %dec_label_pc_12a07
  %v1_12a0f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12a0f = xor i32 %v1_12a0f, %arg1
  %v3_12a0f = icmp eq i32 %v2_12a0f, 0
  store i32 %v2_12a0f, i32* @eax, align 8
  %v1_12a16 = icmp eq i1 %v3_12a0f, false
  br i1 %v1_12a16, label %bb7, label %dec_label_pc_12a18

bb7:                                              ; preds = %dec_label_pc_12a0b
  %v2_12a16 = call i32 @function_12a3c()
  br label %dec_label_pc_12a18

dec_label_pc_12a18:                               ; preds = %bb7, %dec_label_pc_12a0b
  %v5_12a21 = phi i32 [ %v2_12a16, %bb7 ], [ %v2_12a0f, %dec_label_pc_12a0b ]
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v5_12a21
}

define i32 @function_12a28() local_unnamed_addr {
dec_label_pc_12a28:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_12a2c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12a2c = xor i32 %v1_12a2c, %tmp8
  %v3_12a2c = icmp eq i32 %v2_12a2c, 0
  store i32 %v2_12a2c, i32* @eax, align 8
  %v1_12a33 = icmp eq i1 %v3_12a2c, false
  br i1 %v1_12a33, label %bb, label %dec_label_pc_12a35

bb:                                               ; preds = %dec_label_pc_12a28
  %v2_12a33 = call i32 @function_12a3c()
  br label %dec_label_pc_12a35

dec_label_pc_12a35:                               ; preds = %bb, %dec_label_pc_12a28
  %v0_12a3b = phi i32 [ %v2_12a33, %bb ], [ %v2_12a2c, %dec_label_pc_12a28 ]
  ret i32 %v0_12a3b

; uselistorder directives
  uselistorder i32 ()* @function_12a3c, { 1, 0 }
}

define i32 @function_12a3c() local_unnamed_addr {
dec_label_pc_12a3c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeI4CInvSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12a50:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_12a50 = load i32, i32* %edi.global-to-local, align 4
  %v0_12a51 = load i32, i32* %esi.global-to-local, align 4
  %v0_12a52 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %edi.global-to-local, align 4
  %v0_12a5a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12a66 = load i32, i32* %arg1, align 4
  store i32 %v2_12a66, i32* @eax, align 8
  %v1_12a68 = icmp eq i32 %v2_12a66, 0
  br i1 %v1_12a68, label %bb, label %dec_label_pc_12a6c

bb:                                               ; preds = %dec_label_pc_12a50
  %v5_12a6a = call i32 @function_12ab0(i32 %v0_12a5a, i32 %v0_12a52, i32 %v0_12a51, i32 %v0_12a50)
  store i32 %v5_12a6a, i32* @eax, align 8
  %v0_12a6c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_12a6c

dec_label_pc_12a6c:                               ; preds = %bb, %dec_label_pc_12a50
  %v0_12a6c = phi i32 [ %v0_12a6c.pre, %bb ], [ %tmp101, %dec_label_pc_12a50 ]
  %v1_12a6c = add i32 %v0_12a6c, 36
  %v2_12a6c = inttoptr i32 %v1_12a6c to i32*
  %v3_12a6c = load i32, i32* %v2_12a6c, align 4
  store i32 %v3_12a6c, i32* %esi.global-to-local, align 4
  %v1_12a6f = add i32 %v0_12a6c, 20
  %v2_12a6f = inttoptr i32 %v1_12a6f to i32*
  %v3_12a6f = load i32, i32* %v2_12a6f, align 4
  store i32 %v3_12a6f, i32* %ebx.global-to-local, align 4
  %v1_12a72 = add i32 %v3_12a6c, 4
  store i32 %v1_12a72, i32* %esi.global-to-local, align 4
  %tmp108 = icmp ugt i32 %v1_12a72, %v3_12a6f
  br i1 %tmp108, label %dec_label_pc_12a79, label %bb106

bb106:                                            ; preds = %dec_label_pc_12a6c
  %v3_12a77 = call i32 @function_12a93()
  %v0_12a80.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_12a79

dec_label_pc_12a79:                               ; preds = %dec_label_pc_12a6c, %bb106
  %v0_12a80 = phi i32 [ %v0_12a80.pre, %bb106 ], [ %v3_12a6f, %dec_label_pc_12a6c ]
  %v1_12a80 = inttoptr i32 %v0_12a80 to i32*
  %v2_12a80 = load i32, i32* %v1_12a80, align 4
  %v1_12a82 = add i32 %v0_12a80, 4
  store i32 %v1_12a82, i32* %ebx.global-to-local, align 4
  ret i32 %v2_12a80

; uselistorder directives
  uselistorder i32 %v0_12a80, { 1, 0 }
  uselistorder i32 %v3_12a6f, { 1, 0, 2 }
  uselistorder i32 %v0_12a6c, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12a79, { 1, 0 }
}

define i32 @function_12a93() local_unnamed_addr {
dec_label_pc_12a93:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_12a97 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12a97 = icmp eq i32 %v1_12a97, %tmp9
  %v1_12a9e = icmp eq i1 %v3_12a97, false
  br i1 %v1_12a9e, label %bb, label %dec_label_pc_12a93.dec_label_pc_12aa0_crit_edge

dec_label_pc_12a93.dec_label_pc_12aa0_crit_edge:  ; preds = %dec_label_pc_12a93
  %v5_12aa9.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_12aa0

bb:                                               ; preds = %dec_label_pc_12a93
  %v2_12a9e = call i32 @function_12ac4()
  br label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a93.dec_label_pc_12aa0_crit_edge, %bb
  %v5_12aa9 = phi i32 [ %v2_12a9e, %bb ], [ %v5_12aa9.pre, %dec_label_pc_12a93.dec_label_pc_12aa0_crit_edge ]
  ret i32 %v5_12aa9

; uselistorder directives
  uselistorder label %dec_label_pc_12aa0, { 1, 0 }
}

define i32 @function_12ab0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12ab0:
  %v1_12ab4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12ab4 = xor i32 %v1_12ab4, %arg1
  %v3_12ab4 = icmp eq i32 %v2_12ab4, 0
  store i32 %v2_12ab4, i32* @eax, align 8
  %v1_12abb = icmp eq i1 %v3_12ab4, false
  br i1 %v1_12abb, label %bb, label %dec_label_pc_12abd

bb:                                               ; preds = %dec_label_pc_12ab0
  %v2_12abb = call i32 @function_12ac4()
  br label %dec_label_pc_12abd

dec_label_pc_12abd:                               ; preds = %bb, %dec_label_pc_12ab0
  %v0_12ac3 = phi i32 [ %v2_12abb, %bb ], [ %v2_12ab4, %dec_label_pc_12ab0 ]
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v0_12ac3

; uselistorder directives
  uselistorder i32 ()* @function_12ac4, { 1, 0 }
}

define i32 @function_12ac4() local_unnamed_addr {
dec_label_pc_12ac4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ad0:
  ret i32 0
}

define i32 @function_12aee() local_unnamed_addr {
dec_label_pc_12aee:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_12aee = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_12aee = lshr i8 %v2_12aee, ptrtoint (i8** @global_var_5.2484 to i8)
  %v4_12aee = mul i8 %v2_12aee, 8
  %v5_12aee = or i8 %v3_12aee, %v4_12aee
  %v6_12aee = load i32, i32* %edi.global-to-local, align 4
  %v7_12aee = inttoptr i32 %v6_12aee to i8*
  store i8 %v5_12aee, i8* %v7_12aee, align 1
  %v0_12af1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12af1
}

define i32 @function_12b02() local_unnamed_addr {
dec_label_pc_12b02:
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* @edx, align 4
  %v0_12b07 = load i32, i32* @eax, align 8
  %v1_12b07 = load i32, i32* @ebx, align 4
  %v2_12b07 = add i32 %v1_12b07, 76
  %v3_12b07 = inttoptr i32 %v2_12b07 to i32*
  %v4_12b07 = load i32, i32* %v3_12b07, align 4
  %v15_12b07 = icmp eq i32 %v0_12b07, %v4_12b07
  br i1 %v15_12b07, label %bb, label %dec_label_pc_12b0c

bb:                                               ; preds = %dec_label_pc_12b02
  %v1_12b0a = call i32 @function_12b61()
  store i32 %v1_12b0a, i32* @eax, align 8
  br label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %bb, %dec_label_pc_12b02
  %v0_12b0f = call i32 @function_12b2c()
  ret i32 %v0_12b0f
}

define i32 @function_12b18() local_unnamed_addr {
dec_label_pc_12b18:
  %v3_12b1c = load i32, i32* @eax, align 8
  ret i32 %v3_12b1c
}

define i32 @function_12b2c() local_unnamed_addr {
dec_label_pc_12b2c:
  %v0_12b2c = load i32, i32* @edx, align 4
  %v4_12b2c = trunc i32 %v0_12b2c to i8
  %v5_12b2c = icmp eq i8 %v4_12b2c, 0
  %v1_12b2e = icmp eq i1 %v5_12b2c, false
  br i1 %v1_12b2e, label %bb, label %dec_label_pc_12b30

bb:                                               ; preds = %dec_label_pc_12b2c
  %v2_12b2e = call i32 @function_12b18()
  store i32 %v2_12b2e, i32* @eax, align 8
  br label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %bb, %dec_label_pc_12b2c
  %v0_12b30 = load i32, i32* @ebx, align 4
  %v1_12b30 = add i32 %v0_12b30, 80
  %v2_12b30 = inttoptr i32 %v1_12b30 to i32*
  %v3_12b30 = load i32, i32* %v2_12b30, align 4
  %v4_12b30 = add i32 %v3_12b30, 1
  store i32 %v4_12b30, i32* %v2_12b30, align 4
  %v0_12b34 = load i32, i32* @ebx, align 4
  %v1_12b34 = add i32 %v0_12b34, 72
  %v2_12b34 = inttoptr i32 %v1_12b34 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_12b34, align 1
  %v3_12b34 = load i32, i32* @eax, align 8
  ret i32 %v3_12b34
}

define i32 @function_12b47(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b47:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_12b47 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12b47 = add i32 %v0_12b47, -1960479296
  %v2_12b47 = inttoptr i32 %v1_12b47 to i32*
  %v3_12b47 = load i32, i32* %v2_12b47, align 4
  %v4_12b47 = add i32 %v3_12b47, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12b47, i32* %v2_12b47, align 4
  %v0_12b4e = load i32, i32* %eax.global-to-local, align 8
  %v11_12b4e = and i32 %v0_12b4e, -228
  store i32 %v11_12b4e, i32* %eax.global-to-local, align 8
  %v1_12b50 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12b50 = xor i32 %v1_12b50, %v11_12b4e
  %v3_12b50 = icmp eq i32 %v2_12b50, 0
  store i32 %v2_12b50, i32* @eax, align 8
  %v1_12b57 = icmp eq i1 %v3_12b50, false
  br i1 %v1_12b57, label %bb, label %dec_label_pc_12b59

bb:                                               ; preds = %dec_label_pc_12b47
  %v2_12b57 = call i32 @function_12bb2()
  store i32 %v2_12b57, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_12b59

dec_label_pc_12b59:                               ; preds = %bb, %dec_label_pc_12b47
  %v0_12b60 = phi i32 [ %v2_12b57, %bb ], [ %v2_12b50, %dec_label_pc_12b47 ]
  ret i32 %v0_12b60
}

define i32 @function_12b61() local_unnamed_addr {
dec_label_pc_12b61:
  %v0_12b61 = load i32, i32* @ebx, align 4
  %v1_12b61 = add i32 %v0_12b61, 80
  %v2_12b61 = inttoptr i32 %v1_12b61 to i32*
  %v3_12b61 = load i32, i32* %v2_12b61, align 4
  %v4_12b61 = add i32 %v3_12b61, 1
  store i32 %v4_12b61, i32* %v2_12b61, align 4
  %v3_12b65 = load i32, i32* @eax, align 8
  ret i32 %v3_12b65
}

define i32 @function_12bb2() local_unnamed_addr {
dec_label_pc_12bb2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bc0:
  ret i32 0
}

define i32 @function_12bed() local_unnamed_addr {
dec_label_pc_12bed:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12c03(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c03:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_12c03 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12c03 = add i32 %v0_12c03, -1957923392
  %v2_12c03 = inttoptr i32 %v1_12c03 to i32*
  %v3_12c03 = load i32, i32* %v2_12c03, align 4
  %v4_12c03 = add i32 %v3_12c03, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12c03, i32* %v2_12c03, align 4
  %v0_12c0a = load i32, i32* %eax.global-to-local, align 8
  %v11_12c0a = and i32 %v0_12c0a, -228
  store i32 %v11_12c0a, i32* %eax.global-to-local, align 8
  %v1_12c0c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12c0c = xor i32 %v1_12c0c, %v11_12c0a
  %v3_12c0c = icmp eq i32 %v2_12c0c, 0
  store i32 %v2_12c0c, i32* %eax.global-to-local, align 8
  %v1_12c13 = icmp eq i1 %v3_12c0c, false
  br i1 %v1_12c13, label %dec_label_pc_12c2b, label %dec_label_pc_12c15

dec_label_pc_12c15:                               ; preds = %dec_label_pc_12c03
  ret i32 %v2_12c0c

dec_label_pc_12c2b:                               ; preds = %dec_label_pc_12c03
  ret i32 %v2_12c0c

; uselistorder directives
  uselistorder i32 %v2_12c0c, { 1, 0, 2, 3 }
}

define i32 @function_12c20() local_unnamed_addr {
dec_label_pc_12c20:
  %ebx.global-to-local = alloca i32, align 4
  %v0_12c20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12c20 = add i32 %v0_12c20, 72
  %v2_12c20 = inttoptr i32 %v1_12c20 to i8*
  store i8 0, i8* %v2_12c20, align 1
  %v0_12c24 = call i32 @function_12bed()
  ret i32 %v0_12c24
}

define i32 @function_12c26() local_unnamed_addr {
dec_label_pc_12c26:
  %v0_12c26 = call i32 @function_20c32()
  ret i32 %v0_12c26
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12c60:
  %zf.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i8
  %tmp8 = ptrtoint i32* %arg1 to i32
  store i32 %tmp8, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 0, i32* @eax, align 8
  %v10_12c7f = icmp eq i8 %tmp, 0
  store i1 %v10_12c7f, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* %arg1, align 4
  %v0_12c8a = load i32, i32* @ebx, align 4
  %v1_12c8a = add i32 %v0_12c8a, 4
  %v2_12c8a = inttoptr i32 %v1_12c8a to i8*
  store i8 0, i8* %v2_12c8a, align 1
  %v0_12c91 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_12c91, label %bb, label %dec_label_pc_12c60.dec_label_pc_12c93_crit_edge

dec_label_pc_12c60.dec_label_pc_12c93_crit_edge:  ; preds = %dec_label_pc_12c60
  %v3_12c91.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_12c93

bb:                                               ; preds = %dec_label_pc_12c60
  %v0_12c8e = load i32, i32* @esi, align 4
  %v2_12c91 = call i32 @function_12cb8(i32 %v0_12c8e)
  br label %dec_label_pc_12c93

dec_label_pc_12c93:                               ; preds = %dec_label_pc_12c60.dec_label_pc_12c93_crit_edge, %bb
  %v3_12c91 = phi i32 [ %v3_12c91.pre, %dec_label_pc_12c60.dec_label_pc_12c93_crit_edge ], [ %v2_12c91, %bb ]
  ret i32 %v3_12c91

; uselistorder directives
  uselistorder label %dec_label_pc_12c93, { 1, 0 }
}

define i32 @function_12ca7() local_unnamed_addr {
dec_label_pc_12ca7:
  %v0_12ca7 = load i32, i32* @eax, align 8
  %v1_12ca7 = load i32, i32* @esi, align 4
  %v2_12ca7 = add i32 %v1_12ca7, 76
  %v3_12ca7 = inttoptr i32 %v2_12ca7 to i32*
  %v4_12ca7 = load i32, i32* %v3_12ca7, align 4
  %v15_12ca7 = icmp eq i32 %v0_12ca7, %v4_12ca7
  br i1 %v15_12ca7, label %bb, label %dec_label_pc_12cac

bb:                                               ; preds = %dec_label_pc_12ca7
  %v1_12caa = call i32 @function_12ce5()
  store i32 %v1_12caa, i32* @eax, align 8
  br label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %bb, %dec_label_pc_12ca7
  %v0_12cb0 = call i32 @function_12cf5()
  ret i32 %v0_12cb0
}

define i32 @function_12cb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cb8:
  %v0_12cb8 = call i32 @function_25730()
  %v0_12cbd = load i32, i32* @ebx, align 4
  %v1_12cbd = add i32 %v0_12cbd, 4
  %v2_12cbd = inttoptr i32 %v1_12cbd to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_12cbd, align 1
  %v1_12cc5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12cc5 = xor i32 %v1_12cc5, %arg1
  %v3_12cc5 = icmp eq i32 %v2_12cc5, 0
  store i32 %v2_12cc5, i32* @eax, align 8
  %v1_12ccc = icmp eq i1 %v3_12cc5, false
  br i1 %v1_12ccc, label %bb, label %dec_label_pc_12cce

bb:                                               ; preds = %dec_label_pc_12cb8
  %v2_12ccc = call i32 @function_12d0d()
  br label %dec_label_pc_12cce

dec_label_pc_12cce:                               ; preds = %bb, %dec_label_pc_12cb8
  %v0_12cdd = phi i32 [ %v2_12ccc, %bb ], [ %v2_12cc5, %dec_label_pc_12cb8 ]
  ret i32 %v0_12cdd
}

define i32 @function_12ce5() local_unnamed_addr {
dec_label_pc_12ce5:
  %v0_12ce5 = load i32, i32* @esi, align 4
  %v1_12ce5 = add i32 %v0_12ce5, 80
  %v2_12ce5 = inttoptr i32 %v1_12ce5 to i32*
  %v3_12ce5 = load i32, i32* %v2_12ce5, align 4
  %v4_12ce5 = add i32 %v3_12ce5, 1
  store i32 %v4_12ce5, i32* %v2_12ce5, align 4
  %v0_12cee = load i32, i32* @esi, align 4
  %v1_12cee = add i32 %v0_12cee, 72
  %v2_12cee = inttoptr i32 %v1_12cee to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_12cee, align 1
  %v0_12cf2 = load i32, i32* @eax, align 8
  %v1_12cf2 = load i32, i32* @esi, align 4
  %v2_12cf2 = add i32 %v1_12cf2, 76
  %v3_12cf2 = inttoptr i32 %v2_12cf2 to i32*
  store i32 %v0_12cf2, i32* %v3_12cf2, align 4
  %v4_12cf2 = load i32, i32* @eax, align 8
  ret i32 %v4_12cf2
}

define i32 @function_12cf5() local_unnamed_addr {
dec_label_pc_12cf5:
  %v3_12cf5 = load i32, i32* @eax, align 8
  ret i32 %v3_12cf5
}

define i32 @function_12cfc() local_unnamed_addr {
dec_label_pc_12cfc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_12cfc = add i32 %tmp91, -1995344448
  %v2_12cfc = inttoptr i32 %v1_12cfc to i32*
  %v3_12cfc = load i32, i32* %v2_12cfc, align 4
  %v4_12cfc = add i32 %v3_12cfc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_12cfc, i32* %v2_12cfc, align 4
  %v0_12d03 = load i32, i32* %eax.global-to-local, align 8
  %v1_12d03 = trunc i32 %v0_12d03 to i8
  %v2_12d03 = load i32, i32* %ebx.global-to-local, align 4
  %v3_12d03 = add i32 %v2_12d03, 4
  %v4_12d03 = inttoptr i32 %v3_12d03 to i8*
  store i8 %v1_12d03, i8* %v4_12d03, align 1
  %v0_12d06 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12d06
}

define i32 @function_12d0d() local_unnamed_addr {
dec_label_pc_12d0d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost8optionalISsED1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_12d40:
  %v4_12d44 = ptrtoint i8* %arg1 to i32
  store i32 %v4_12d44, i32* @ebx, align 4
  %v2_12d54 = load i8, i8* %arg1, align 1
  %v9_12d54 = icmp eq i8 %v2_12d54, 0
  br i1 %v9_12d54, label %bb, label %dec_label_pc_12d59

bb:                                               ; preds = %dec_label_pc_12d40
  %v0_12d48 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12d57 = call i32 @function_12d67(i32 %v0_12d48)
  %v0_12d59.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_12d59

dec_label_pc_12d59:                               ; preds = %bb, %dec_label_pc_12d40
  %v0_12d59 = phi i32 [ %v0_12d59.pre, %bb ], [ %v4_12d44, %dec_label_pc_12d40 ]
  %v1_12d59 = add i32 %v0_12d59, 4
  ret i32 %v1_12d59
}

define i32 @function_12d67(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d67:
  %v1_12d6b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12d6b = xor i32 %v1_12d6b, %arg1
  %v3_12d6b = icmp eq i32 %v2_12d6b, 0
  %v1_12d72 = icmp eq i1 %v3_12d6b, false
  br i1 %v1_12d72, label %dec_label_pc_12d79, label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d67
  ret i32 %v2_12d6b

dec_label_pc_12d79:                               ; preds = %dec_label_pc_12d67
  ret i32 %v2_12d6b

; uselistorder directives
  uselistorder i32 %v2_12d6b, { 1, 0, 2 }
}

define i32 @_ZNKSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEE5countERS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d80:
  %v0_12d8b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_12d9c = add i32 %arg1, 8
  %v2_12d9c = inttoptr i32 %v1_12d9c to i32*
  %v3_12d9c = load i32, i32* %v2_12d9c, align 4
  store i32 %v3_12d9c, i32* @ebx, align 4
  %v1_12d9f = add i32 %arg1, 4
  store i32 %v1_12d9f, i32* @ebp, align 4
  store i32 0, i32* @eax, align 8
  %v1_12da4 = icmp eq i32 %v3_12d9c, 0
  br i1 %v1_12da4, label %bb, label %dec_label_pc_12da8

bb:                                               ; preds = %dec_label_pc_12d80
  %v2_12da6 = call i32 @function_12dee(i32 %v0_12d8b)
  br label %dec_label_pc_12da8

dec_label_pc_12da8:                               ; preds = %bb, %dec_label_pc_12d80
  %v1_12db9 = add i32 %v3_12d9c, 16
  ret i32 %v1_12db9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12dd3() local_unnamed_addr {
dec_label_pc_12dd3:
  store i32 0, i32* @eax, align 8
  %v0_12dd5 = load i32, i32* @ebp, align 4
  %v1_12dd5 = load i32, i32* @edi, align 4
  %v12_12dd5 = icmp eq i32 %v0_12dd5, %v1_12dd5
  br i1 %v12_12dd5, label %bb, label %dec_label_pc_12dd9

bb:                                               ; preds = %dec_label_pc_12dd3
  %v2_12dd7 = call i32 @function_12dee(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_12dd9

dec_label_pc_12dd9:                               ; preds = %bb, %dec_label_pc_12dd3
  %v3_12de0 = phi i32 [ %v2_12dd7, %bb ], [ 0, %dec_label_pc_12dd3 ]
  ret i32 %v3_12de0

; uselistorder directives
  uselistorder i32 (i32)* @function_12dee, { 1, 0 }
}

define i32 @function_12dee(i32 %arg1) local_unnamed_addr {
dec_label_pc_12dee:
  %v1_12df2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12df2 = icmp eq i32 %v1_12df2, %arg1
  %v1_12df9 = icmp eq i1 %v3_12df2, false
  br i1 %v1_12df9, label %dec_label_pc_12e03, label %dec_label_pc_12dfb

dec_label_pc_12dfb:                               ; preds = %dec_label_pc_12dee
  %v0_12e02 = load i32, i32* @eax, align 8
  ret i32 %v0_12e02

dec_label_pc_12e03:                               ; preds = %dec_label_pc_12dee
  %v1_12e02 = load i32, i32* @eax, align 8
  ret i32 %v1_12e02
}

define i32 @_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e10:
  %tmp21 = ptrtoint i32* %arg1 to i32
  %v0_12e13 = load i32, i32* @ebx, align 4
  store i32 %tmp21, i32* @ebx, align 4
  %v0_12e33 = load i32, i32* @ebp, align 4
  %v12_12e37 = icmp eq i32 %tmp21, %arg2
  br i1 %v12_12e37, label %dec_label_pc_12e7a, label %dec_label_pc_12e3b

dec_label_pc_12e3b:                               ; preds = %dec_label_pc_12e10
  %v1_12e3b = add i32 %arg2, 4
  %v2_12e3b = inttoptr i32 %v1_12e3b to i32*
  %v3_12e3b = load i32, i32* %v2_12e3b, align 4
  %v1_12e3e = inttoptr i32 %arg2 to i32*
  %v2_12e3e = load i32, i32* %v1_12e3e, align 4
  store i32 %v2_12e3e, i32* @ebp, align 4
  %v2_12e40 = load i32, i32* %arg1, align 4
  store i32 %v2_12e40, i32* @eax, align 8
  %v1_12e48 = add i32 %tmp21, 8
  %v2_12e48 = inttoptr i32 %v1_12e48 to i32*
  %v3_12e48 = load i32, i32* %v2_12e48, align 4
  %v2_12e4b = sub i32 %v3_12e3b, %v2_12e3e
  %v2_12e4d = sdiv i32 %v2_12e4b, 4
  %v2_12e4b.off = add i32 %v2_12e4b, 3
  %tmp30 = icmp ult i32 %v2_12e4b.off, 7
  store i32 %v2_12e4d, i32* @esi, align 4
  %v2_12e50 = sub i32 %v3_12e48, %v2_12e40
  %v2_12e52 = sdiv i32 %v2_12e50, 4
  %tmp31 = icmp ugt i32 %v2_12e4d, %v2_12e52
  br i1 %tmp31, label %bb, label %dec_label_pc_12e5d

bb:                                               ; preds = %dec_label_pc_12e3b
  %v5_12e57 = call i32 @function_12ef8(i32 %v3_12e3b)
  store i32 %v5_12e57, i32* @eax, align 8
  %v0_12e5d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_12e5d

dec_label_pc_12e5d:                               ; preds = %dec_label_pc_12e3b, %bb
  %v0_12e5d = phi i32 [ %v0_12e5d.pre, %bb ], [ %tmp21, %dec_label_pc_12e3b ]
  %v1_12e62 = phi i32 [ %v5_12e57, %bb ], [ %v2_12e40, %dec_label_pc_12e3b ]
  %v1_12e5d = add i32 %v0_12e5d, 4
  %v2_12e5d = inttoptr i32 %v1_12e5d to i32*
  %v3_12e5d = load i32, i32* %v2_12e5d, align 4
  %v2_12e62 = sub i32 %v3_12e5d, %v1_12e62
  %v2_12e64 = sdiv i32 %v2_12e62, 4
  store i32 %v2_12e64, i32* @edx, align 4
  %tmp32 = icmp ugt i32 %v2_12e4d, %v2_12e64
  br i1 %tmp32, label %dec_label_pc_12ea8, label %dec_label_pc_12e6f

dec_label_pc_12e6f:                               ; preds = %dec_label_pc_12e5d
  %v1_12e71 = icmp eq i1 %tmp30, false
  br i1 %v1_12e71, label %bb24, label %dec_label_pc_12e77

bb24:                                             ; preds = %dec_label_pc_12e6f
  %v3_12e71 = call i32 @function_12f50(i32 %v3_12e5d)
  br label %dec_label_pc_12e77

dec_label_pc_12e77:                               ; preds = %dec_label_pc_12eb8, %bb24, %dec_label_pc_12e6f
  %v0_12e77 = phi i32 [ %v3_12ebc, %dec_label_pc_12eb8 ], [ %v3_12e71, %bb24 ], [ %v1_12e62, %dec_label_pc_12e6f ]
  %v1_12e77 = load i32, i32* @ebx, align 4
  %v2_12e77 = add i32 %v1_12e77, 4
  %v3_12e77 = inttoptr i32 %v2_12e77 to i32*
  store i32 %v0_12e77, i32* %v3_12e77, align 4
  %v0_12e85.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_12e7a

dec_label_pc_12e7a:                               ; preds = %dec_label_pc_12e77, %dec_label_pc_12e10
  %v0_12e85 = phi i32 [ %v0_12e85.pre, %dec_label_pc_12e77 ], [ %tmp21, %dec_label_pc_12e10 ]
  store i32 %v0_12e85, i32* @eax, align 8
  br i1 false, label %bb25, label %dec_label_pc_12e8d

bb25:                                             ; preds = %dec_label_pc_12e7a
  br label %dec_label_pc_12e8d

dec_label_pc_12e8d:                               ; preds = %bb25, %dec_label_pc_12e7a
  store i32 %v0_12e13, i32* @ebx, align 4
  store i32 %v0_12e33, i32* @ebp, align 4
  ret i32 %v0_12e85

dec_label_pc_12ea8:                               ; preds = %dec_label_pc_12e5d
  %v2_12e62.off = add i32 %v2_12e62, 3
  %tmp33 = icmp ult i32 %v2_12e62.off, 7
  %v0_12ea8 = load i32, i32* @ebp, align 4
  %v2_12ea8 = mul i32 %v2_12e64, 4
  %v3_12ea8 = add i32 %v0_12ea8, %v2_12ea8
  %v1_12eb2 = icmp eq i1 %tmp33, false
  br i1 %v1_12eb2, label %bb27, label %dec_label_pc_12eb8

bb27:                                             ; preds = %dec_label_pc_12ea8
  %v4_12eb2 = call i32 @function_12f70(i32 %v3_12e5d, i32 %v3_12ea8)
  br label %dec_label_pc_12eb8

dec_label_pc_12eb8:                               ; preds = %bb27, %dec_label_pc_12ea8
  %v0_12ebc = phi i32 [ %v4_12eb2, %bb27 ], [ %v1_12e62, %dec_label_pc_12ea8 ]
  %v2_12ebc = mul i32 %v2_12e4d, 4
  %v3_12ebc = add i32 %v0_12ebc, %v2_12ebc
  %v5_12ebf = sub i32 %v3_12e3b, %v3_12ea8
  %v2_12ec3 = ashr i32 %v5_12ebf, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_12ec3 = icmp eq i32 %v2_12ec3, 0
  br i1 %v3_12ec3, label %dec_label_pc_12e77, label %dec_label_pc_12eca

dec_label_pc_12eca:                               ; preds = %dec_label_pc_12eb8
  ret i32 %v3_12ea8

; uselistorder directives
  uselistorder i32 %v3_12ea8, { 0, 2, 1 }
  uselistorder i32 %v2_12e64, { 2, 0, 1 }
  uselistorder i32 %v3_12e5d, { 1, 0, 2 }
  uselistorder i32 %v1_12e62, { 1, 0, 2 }
  uselistorder i32 %v2_12e4d, { 3, 0, 1, 2 }
  uselistorder i32 %tmp21, { 2, 1, 3, 0, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e5d, { 1, 0 }
}

define i32 @function_12ee4() local_unnamed_addr {
dec_label_pc_12ee4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_12ee4 = add i32 %tmp91, 46340
  %v2_12ee4 = inttoptr i32 %v1_12ee4 to i32*
  %v3_12ee4 = load i32, i32* %v2_12ee4, align 4
  %v4_12ee4 = add i32 %v3_12ee4, -1
  store i32 %v4_12ee4, i32* %v2_12ee4, align 4
  %v2_12eea = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_12eea = load i32, i32* %eax.global-to-local, align 8
  %v4_12eea = trunc i32 %v3_12eea to i8
  %v5_12eea = add i8 %v4_12eea, %v2_12eea
  %v21_12eea = inttoptr i32 %v3_12eea to i8*
  store i8 %v5_12eea, i8* %v21_12eea, align 1
  %v0_12eec = load i32, i32* %eax.global-to-local, align 8
  %v3_12eec = load i32, i32* %ebx.global-to-local, align 4
  %v4_12eec = add i32 %v3_12eec, %v0_12eec
  store i32 %v4_12eec, i32* %eax.global-to-local, align 8
  %v2_12eee = add i32 %v3_12eec, 4
  %v3_12eee = inttoptr i32 %v2_12eee to i32*
  store i32 %v4_12eec, i32* %v3_12eee, align 4
  %v0_12ef1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12ef1

; uselistorder directives
  uselistorder i32 %v3_12eec, { 1, 0 }
}

define i32 @function_12ef8(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ef8:
  %v0_12ef8 = load i32, i32* @esi, align 4
  %v1_12ef8 = icmp eq i32 %v0_12ef8, 0
  br i1 %v1_12ef8, label %bb, label %dec_label_pc_12f00

bb:                                               ; preds = %dec_label_pc_12ef8
  %v1_12efa = call i32 @function_12fd0()
  store i32 %v1_12efa, i32* @eax, align 8
  %v0_12f00.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_12f00

dec_label_pc_12f00:                               ; preds = %bb, %dec_label_pc_12ef8
  %v0_12f00 = phi i32 [ %v0_12f00.pre, %bb ], [ %v0_12ef8, %dec_label_pc_12ef8 ]
  %tmp7 = icmp ult i32 %v0_12f00, 1073741824
  br i1 %tmp7, label %dec_label_pc_12f00.dec_label_pc_12f0c_crit_edge, label %bb6

dec_label_pc_12f00.dec_label_pc_12f0c_crit_edge:  ; preds = %dec_label_pc_12f00
  %v3_12f17.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_12f0c

bb6:                                              ; preds = %dec_label_pc_12f00
  %v4_12f06 = call i32 @function_12fe4()
  br label %dec_label_pc_12f0c

dec_label_pc_12f0c:                               ; preds = %dec_label_pc_12f00.dec_label_pc_12f0c_crit_edge, %bb6
  %v3_12f17 = phi i32 [ %v3_12f17.pre, %dec_label_pc_12f00.dec_label_pc_12f0c_crit_edge ], [ %v4_12f06, %bb6 ]
  ret i32 %v3_12f17

; uselistorder directives
  uselistorder label %dec_label_pc_12f0c, { 1, 0 }
}

define i32 @function_12f29(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f29:
  %v2_12f29 = load i32, i32* @ebx, align 4
  %v1_12f2b = icmp eq i32 %v2_12f29, 0
  br i1 %v1_12f2b, label %bb, label %dec_label_pc_12f2f

bb:                                               ; preds = %dec_label_pc_12f29
  %v1_12f2d = call i32 @function_12f37()
  br label %dec_label_pc_12f2f

dec_label_pc_12f2f:                               ; preds = %bb, %dec_label_pc_12f29
  %v3_12f2f = phi i32 [ %v1_12f2d, %bb ], [ %v2_12f29, %dec_label_pc_12f29 ]
  ret i32 %v3_12f2f
}

define i32 @function_12f37() local_unnamed_addr {
dec_label_pc_12f37:
  %eax.global-to-local = alloca i32, align 4
  %v0_12f3b = load i32, i32* @edi, align 4
  %v1_12f3b = load i32, i32* @ebx, align 4
  %v2_12f3b = inttoptr i32 %v1_12f3b to i32*
  store i32 %v0_12f3b, i32* %v2_12f3b, align 4
  %v0_12f3d = load i32, i32* %eax.global-to-local, align 8
  %v1_12f3d = load i32, i32* @edi, align 4
  %v2_12f3d = add i32 %v1_12f3d, %v0_12f3d
  store i32 %v2_12f3d, i32* %eax.global-to-local, align 8
  %v1_12f3f = load i32, i32* @ebx, align 4
  %v2_12f3f = add i32 %v1_12f3f, 8
  %v3_12f3f = inttoptr i32 %v2_12f3f to i32*
  store i32 %v2_12f3d, i32* %v3_12f3f, align 4
  %v0_12f42 = load i32, i32* %eax.global-to-local, align 8
  %v1_12f42 = load i32, i32* @ebx, align 4
  %v2_12f42 = add i32 %v1_12f42, 4
  %v3_12f42 = inttoptr i32 %v2_12f42 to i32*
  store i32 %v0_12f42, i32* %v3_12f42, align 4
  %v0_12f45 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12f45
}

define i32 @function_12f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f50:
  %v3_12f5b = load i32, i32* @eax, align 8
  ret i32 %v3_12f5b
}

define i32 @function_12f63() local_unnamed_addr {
dec_label_pc_12f63:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v2_12f63 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12f65 = add i32 %tmp92, %v2_12f63
  store i32 %v2_12f65, i32* %eax.global-to-local, align 8
  %v2_12f67 = add i32 %v2_12f63, 4
  %v3_12f67 = inttoptr i32 %v2_12f67 to i32*
  store i32 %v2_12f65, i32* %v3_12f67, align 4
  %v0_12f6a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12f6a

; uselistorder directives
  uselistorder i32 %v2_12f63, { 1, 0 }
}

define i32 @function_12f70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f70:
  %v3_12f7b = load i32, i32* @eax, align 8
  ret i32 %v3_12f7b
}

define i32 @function_12f82() local_unnamed_addr {
dec_label_pc_12f82:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_12f82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12f82 = add i32 %v0_12f82, 260768835
  %v2_12f82 = inttoptr i32 %v1_12f82 to i32*
  %v3_12f82 = load i32, i32* %v2_12f82, align 4
  %v4_12f82 = add i32 %v3_12f82, -1
  store i32 %v4_12f82, i32* %v2_12f82, align 4
  %v0_12f88 = load i32, i32* %edi.global-to-local, align 4
  %v1_12f88 = add i32 %v0_12f88, 4
  %v2_12f88 = inttoptr i32 %v1_12f88 to i32*
  %v3_12f88 = load i32, i32* %v2_12f88, align 4
  store i32 %v3_12f88, i32* %edi.global-to-local, align 4
  %v2_12f8f = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v2_12f8f
}

define i32 @function_12fc4() local_unnamed_addr {
dec_label_pc_12fc4:
  %v1_12fc4 = call i32 @function_12f29(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_12fc4
}

define i32 @function_12fd0() local_unnamed_addr {
dec_label_pc_12fd0:
  store i32 0, i32* @edi, align 4
  %v1_12fda = call i32 @function_12f29(i32 0)
  ret i32 %v1_12fda
}

define i32 @function_12fdf() local_unnamed_addr {
dec_label_pc_12fdf:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12fe4() local_unnamed_addr {
dec_label_pc_12fe4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt6vectorISsSaISsEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ff0:
  %of.global-to-local = alloca i1, align 1
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %tmp107, i32* @edi, align 4
  %v2_1300f = sub i32 %arg2, %tmp107
  %v8_1300f = xor i32 %tmp107, %arg2
  %v9_1300f = xor i32 %v2_1300f, %arg2
  %v10_1300f = and i32 %v9_1300f, %v8_1300f
  %v11_1300f = icmp slt i32 %v10_1300f, 0
  store i1 %v11_1300f, i1* %of.global-to-local, align 1
  %v12_1300f = icmp eq i32 %v2_1300f, 0
  br i1 %v12_1300f, label %bb, label %dec_label_pc_13017

bb:                                               ; preds = %dec_label_pc_12ff0
  %v2_13011 = call i32 @function_130ac(i32 %arg2)
  %v0_13017.pre = load i32, i32* @edx, align 4
  %v0_1301c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_13017

dec_label_pc_13017:                               ; preds = %bb, %dec_label_pc_12ff0
  %v0_1302b = phi i32 [ %v0_1301c.pre, %bb ], [ %tmp107, %dec_label_pc_12ff0 ]
  %v0_13017 = phi i32 [ %v0_13017.pre, %bb ], [ %arg2, %dec_label_pc_12ff0 ]
  %v1_13017 = inttoptr i32 %v0_13017 to i32*
  %v2_13017 = load i32, i32* %v1_13017, align 4
  store i32 %v2_13017, i32* @ebx, align 4
  %v1_13019 = add i32 %v0_13017, 4
  %v2_13019 = inttoptr i32 %v1_13019 to i32*
  %v3_13019 = load i32, i32* %v2_13019, align 4
  store i32 %v3_13019, i32* @edx, align 4
  %v1_1301c = inttoptr i32 %v0_1302b to i32*
  %v2_1301c = load i32, i32* %v1_1301c, align 4
  store i32 %v2_1301c, i32* @ebp, align 4
  %v2_13020 = sub i32 %v3_13019, %v2_13017
  %v2_13022 = ashr i32 %v2_13020, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_13022 = icmp eq i32 %v2_13022, 0
  store i32 %v2_13022, i32* @esi, align 4
  %v1_1302b = add i32 %v0_1302b, 8
  %v2_1302b = inttoptr i32 %v1_1302b to i32*
  %v3_1302b = load i32, i32* %v2_1302b, align 4
  %v2_1302e = sub i32 %v3_1302b, %v2_1301c
  %v2_13030 = sdiv i32 %v2_1302e, 4
  store i32 %v2_13030, i32* @eax, align 8
  %v3_13033 = sub i32 %v2_13022, %v2_13030
  %v8_13033 = icmp ult i32 %v2_13022, %v2_13030
  %v9_13033 = xor i32 %v2_13030, %v2_13022
  %v10_13033 = xor i32 %v3_13033, %v2_13022
  %v11_13033 = and i32 %v10_13033, %v9_13033
  %v12_13033 = icmp slt i32 %v11_13033, 0
  store i1 %v12_13033, i1* %of.global-to-local, align 1
  %v13_13033 = icmp eq i32 %v3_13033, 0
  %v2_13035 = or i1 %v8_13033, %v13_13033
  br i1 %v2_13035, label %bb115, label %dec_label_pc_1303b

bb115:                                            ; preds = %dec_label_pc_13017
  %v5_13035 = call i32 @function_130c8(i32 %v2_13022)
  store i32 %v5_13035, i32* @eax, align 8
  br label %dec_label_pc_1303b

dec_label_pc_1303b:                               ; preds = %bb115, %dec_label_pc_13017
  store i1 false, i1* %of.global-to-local, align 1
  br i1 %v3_13022, label %bb116, label %dec_label_pc_13043

bb116:                                            ; preds = %dec_label_pc_1303b
  %v1_1303d = call i32 @function_131c0()
  store i32 %v1_1303d, i32* @eax, align 8
  br label %dec_label_pc_13043

dec_label_pc_13043:                               ; preds = %bb116, %dec_label_pc_1303b
  %tmp117 = sub i32 1073741822, %v2_13022
  %v9_13043 = and i32 %tmp117, %v2_13022
  %v10_13043 = icmp slt i32 %v9_13043, 0
  store i1 %v10_13043, i1* %of.global-to-local, align 1
  %tmp120 = icmp ult i32 %v2_13022, 1073741824
  br i1 %tmp120, label %dec_label_pc_1304f, label %bb118

bb118:                                            ; preds = %dec_label_pc_13043
  %v4_13049 = call i32 @function_131f6()
  %v1_13057.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1304f

dec_label_pc_1304f:                               ; preds = %dec_label_pc_13043, %bb118
  %v1_13057 = phi i1 [ %v10_13043, %dec_label_pc_13043 ], [ %v1_13057.pre, %bb118 ]
  %v2_13057 = shl i32 %v2_13022, ptrtoint (i64* @global_var_2.2539 to i32)
  store i1 %v1_13057, i1* %of.global-to-local, align 1
  ret i32 %v2_13057

; uselistorder directives
  uselistorder i32 %v3_13033, { 1, 0 }
  uselistorder i32 %v2_13030, { 3, 1, 2, 0 }
  uselistorder i32 %v2_13022, { 5, 0, 1, 6, 4, 2, 3, 8, 7, 9, 10 }
  uselistorder i32 %v0_13017, { 1, 0 }
  uselistorder i32 %v2_1300f, { 1, 0 }
  uselistorder i32 %tmp107, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_1304f, { 1, 0 }
}

define i32 @function_13068() local_unnamed_addr {
dec_label_pc_13068:
  %v2_1306c = call i32 @_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev(i32* nonnull @1)
  store i32 %v2_1306c, i32* @eax, align 8
  %v0_13071 = load i32, i32* @edi, align 4
  %v1_13071 = add i32 %v0_13071, 4
  %v2_13071 = inttoptr i32 %v1_13071 to i32*
  %v3_13071 = load i32, i32* %v2_13071, align 4
  store i32 %v0_13071, i32* @ebx, align 4
  %v12_13076 = icmp eq i32 %v3_13071, %v0_13071
  br i1 %v12_13076, label %bb, label %dec_label_pc_1307a

bb:                                               ; preds = %dec_label_pc_13068
  %v1_13078 = call i32 @function_13091()
  br label %dec_label_pc_1307a

dec_label_pc_1307a:                               ; preds = %bb, %dec_label_pc_13068
  %v16_13083 = phi i32 [ %v1_13078, %bb ], [ %v2_1306c, %dec_label_pc_13068 ]
  ret i32 %v16_13083

; uselistorder directives
  uselistorder i32 (i32*)* @_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev, { 2, 1, 0 }
}

define i32 @function_13091() local_unnamed_addr {
dec_label_pc_13091:
  %v0_13091 = load i32, i32* @ebx, align 4
  %v1_13091 = icmp eq i32 %v0_13091, 0
  br i1 %v1_13091, label %bb, label %dec_label_pc_13091.dec_label_pc_13095_crit_edge

dec_label_pc_13091.dec_label_pc_13095_crit_edge:  ; preds = %dec_label_pc_13091
  %v3_13095.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13095

bb:                                               ; preds = %dec_label_pc_13091
  %v1_13093 = call i32 @function_1309d()
  br label %dec_label_pc_13095

dec_label_pc_13095:                               ; preds = %dec_label_pc_13091.dec_label_pc_13095_crit_edge, %bb
  %v3_13095 = phi i32 [ %v3_13095.pre, %dec_label_pc_13091.dec_label_pc_13095_crit_edge ], [ %v1_13093, %bb ]
  ret i32 %v3_13095

; uselistorder directives
  uselistorder label %dec_label_pc_13095, { 1, 0 }
}

define i32 @function_1309d() local_unnamed_addr {
dec_label_pc_1309d:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_130a1 = load i32, i32* @esi, align 4
  %v1_130a1 = load i32, i32* @edi, align 4
  %v2_130a1 = inttoptr i32 %v1_130a1 to i32*
  store i32 %v0_130a1, i32* %v2_130a1, align 4
  %v0_130a3 = load i32, i32* @esi, align 4
  %v1_130a3 = load i32, i32* %edx.global-to-local, align 4
  %v2_130a3 = mul i32 %v1_130a3, 4
  %v3_130a3 = add i32 %v2_130a3, %v0_130a3
  store i32 %v3_130a3, i32* %eax.global-to-local, align 8
  %v1_130a6 = load i32, i32* @edi, align 4
  %v2_130a6 = add i32 %v1_130a6, 8
  %v3_130a6 = inttoptr i32 %v2_130a6 to i32*
  store i32 %v3_130a3, i32* %v3_130a6, align 4
  %v4_130a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_130a6
}

define i32 @function_130a9() local_unnamed_addr {
dec_label_pc_130a9:
  %v0_130a9 = load i32, i32* @eax, align 8
  %v1_130a9 = load i32, i32* @edi, align 4
  %v2_130a9 = add i32 %v1_130a9, 4
  %v3_130a9 = inttoptr i32 %v2_130a9 to i32*
  store i32 %v0_130a9, i32* %v3_130a9, align 4
  %v4_130a9 = load i32, i32* @eax, align 8
  ret i32 %v4_130a9
}

define i32 @function_130ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_130ac:
  %v1_130b0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_130b0 = xor i32 %v1_130b0, %arg1
  %v3_130b0 = icmp eq i32 %v2_130b0, 0
  store i32 %v2_130b0, i32* @edx, align 4
  %v0_130b7 = load i32, i32* @edi, align 4
  store i32 %v0_130b7, i32* @eax, align 8
  %v1_130b9 = icmp eq i1 %v3_130b0, false
  br i1 %v1_130b9, label %bb, label %dec_label_pc_130bf

bb:                                               ; preds = %dec_label_pc_130ac
  %v2_130b9 = call i32 @function_131d4()
  br label %dec_label_pc_130bf

dec_label_pc_130bf:                               ; preds = %bb, %dec_label_pc_130ac
  %v0_130c6 = phi i32 [ %v2_130b9, %bb ], [ %v0_130b7, %dec_label_pc_130ac ]
  ret i32 %v0_130c6
}

define i32 @function_130c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_130c8:
  %v0_130c8 = load i32, i32* @edi, align 4
  %v1_130c8 = add i32 %v0_130c8, 4
  %v2_130c8 = inttoptr i32 %v1_130c8 to i32*
  %v3_130c8 = load i32, i32* %v2_130c8, align 4
  %v1_130cf = load i32, i32* @ebp, align 4
  %v2_130cf = sub i32 %v3_130c8, %v1_130cf
  %v2_130d1 = sdiv i32 %v2_130cf, 4
  store i32 %v2_130d1, i32* @eax, align 8
  %tmp9 = icmp ult i32 %v2_130d1, %arg1
  br i1 %tmp9, label %bb, label %dec_label_pc_130da

bb:                                               ; preds = %dec_label_pc_130c8
  %v5_130d8 = call i32 @function_13140(i32 %v3_130c8)
  br label %dec_label_pc_130da

dec_label_pc_130da:                               ; preds = %dec_label_pc_130c8, %bb
  store i32 %arg1, i32* @eax, align 8
  %tmp6 = icmp slt i32 %arg1, 1
  br i1 %tmp6, label %bb7, label %dec_label_pc_130e2

bb7:                                              ; preds = %dec_label_pc_130da
  %v5_130e0 = call i32 @function_13113()
  br label %dec_label_pc_130e2

dec_label_pc_130e2:                               ; preds = %bb7, %dec_label_pc_130da
  %v16_130fa = phi i32 [ %v5_130e0, %bb7 ], [ %arg1, %dec_label_pc_130da ]
  %v0_130e6 = load i32, i32* @esi, align 4
  store i32 %v0_130e6, i32* @edi, align 4
  %v0_130f4 = load i32, i32* @ebx, align 4
  %v1_130f4 = add i32 %v0_130f4, 4
  store i32 %v1_130f4, i32* @ebx, align 4
  ret i32 %v16_130fa

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_130da, { 1, 0 }
}

define i32 @function_13106() local_unnamed_addr {
dec_label_pc_13106:
  %v0_13106 = call i32 @function_14258596()
  ret i32 %v0_13106
}

define i32 @function_13113() local_unnamed_addr {
dec_label_pc_13113:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v4_13113 = load i32, i32* @ebp, align 4
  %v15_13113 = icmp eq i32 %tmp3, %v4_13113
  br i1 %v15_13113, label %bb, label %dec_label_pc_13113.dec_label_pc_13119_crit_edge

dec_label_pc_13113.dec_label_pc_13119_crit_edge:  ; preds = %dec_label_pc_13113
  %v16_13123.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13119

bb:                                               ; preds = %dec_label_pc_13113
  %v1_13117 = call i32 @function_1312f()
  %v0_13123.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13119

dec_label_pc_13119:                               ; preds = %dec_label_pc_13113.dec_label_pc_13119_crit_edge, %bb
  %v16_13123 = phi i32 [ %v1_13117, %bb ], [ %v16_13123.pre, %dec_label_pc_13113.dec_label_pc_13119_crit_edge ]
  %v0_13123 = phi i32 [ %v0_13123.pre, %bb ], [ %v4_13113, %dec_label_pc_13113.dec_label_pc_13119_crit_edge ]
  %v1_13123 = add i32 %v0_13123, 4
  store i32 %v1_13123, i32* @ebp, align 4
  ret i32 %v16_13123

; uselistorder directives
  uselistorder i32 %v4_13113, { 1, 0 }
  uselistorder label %dec_label_pc_13119, { 1, 0 }
}

define i32 @function_1312c() local_unnamed_addr {
dec_label_pc_1312c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1312c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1312c
}

define i32 @function_1312f() local_unnamed_addr {
dec_label_pc_1312f:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v2_13133 = load i32, i32* @edi, align 4
  %v2_13135 = mul i32 %tmp, 4
  %v3_13135 = add i32 %v2_13133, %v2_13135
  store i32 %v3_13135, i32* @eax, align 8
  %v0_13138 = call i32 @function_130a9()
  ret i32 %v0_13138
}

define i32 @function_13140(i32 %arg1) local_unnamed_addr {
dec_label_pc_13140:
  %v0_13140 = load i32, i32* @eax, align 8
  %v0_13142 = load i32, i32* @ebx, align 4
  %v2_13142 = mul i32 %v0_13140, 4
  %v3_13142 = add i32 %v0_13142, %v2_13142
  store i32 %v3_13142, i32* @esi, align 4
  %tmp4 = icmp slt i32 %v0_13140, 1
  br i1 %tmp4, label %bb, label %dec_label_pc_13147

bb:                                               ; preds = %dec_label_pc_13140
  %v5_13145 = call i32 @function_13182()
  %v0_13154.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_13147

dec_label_pc_13147:                               ; preds = %bb, %dec_label_pc_13140
  %v0_13154 = phi i32 [ %v0_13154.pre, %bb ], [ %v0_13142, %dec_label_pc_13140 ]
  %v16_1315a = phi i32 [ %v5_13145, %bb ], [ %v0_13140, %dec_label_pc_13140 ]
  store i32 %v16_1315a, i32* @esi, align 4
  %v1_13154 = add i32 %v0_13154, 4
  store i32 %v1_13154, i32* @ebx, align 4
  %v0_1315a = load i32, i32* @ebp, align 4
  %v1_1315a = add i32 %v0_1315a, 4
  store i32 %v1_1315a, i32* @ebp, align 4
  ret i32 %v16_1315a

; uselistorder directives
  uselistorder i32 %v0_13142, { 1, 0 }
  uselistorder i32 %v0_13140, { 1, 0, 2 }
}

define i32 @function_13166() local_unnamed_addr {
dec_label_pc_13166:
  %v0_13166 = call i32 @function_8b0578f6()
  ret i32 %v0_13166
}

define i32 @function_13182() local_unnamed_addr {
dec_label_pc_13182:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_13182 = load i32, i32* @edx, align 4
  %v1_13182 = load i32, i32* @esi, align 4
  %v12_13182 = icmp eq i32 %v0_13182, %v1_13182
  br i1 %v12_13182, label %bb, label %dec_label_pc_1318a

bb:                                               ; preds = %dec_label_pc_13182
  %v1_13188 = call i32 @function_131c7()
  store i32 %v1_13188, i32* @eax, align 8
  %v0_1318c.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1318a

dec_label_pc_1318a:                               ; preds = %bb, %dec_label_pc_13182
  %v0_1318c = phi i32 [ %v0_1318c.pre, %bb ], [ %v0_13182, %dec_label_pc_13182 ]
  %v0_1318a = load i32, i32* @edi, align 4
  store i32 %v0_1318a, i32* @ebp, align 4
  store i32 %v0_1318c, i32* @edi, align 4
  %v1_13190 = icmp eq i32 %tmp5, 0
  br i1 %v1_13190, label %bb6, label %dec_label_pc_1318a.dec_label_pc_13194_crit_edge

dec_label_pc_1318a.dec_label_pc_13194_crit_edge:  ; preds = %dec_label_pc_1318a
  %v3_13198.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13194

bb6:                                              ; preds = %dec_label_pc_1318a
  %v1_13192 = call i32 @function_131a0()
  br label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_1318a.dec_label_pc_13194_crit_edge, %bb6
  %v3_13198 = phi i32 [ %v3_13198.pre, %dec_label_pc_1318a.dec_label_pc_13194_crit_edge ], [ %v1_13192, %bb6 ]
  ret i32 %v3_13198

; uselistorder directives
  uselistorder i32 %v0_13182, { 1, 0 }
  uselistorder label %dec_label_pc_13194, { 1, 0 }
}

define i32 @function_131a0() local_unnamed_addr {
dec_label_pc_131a0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_131a3 = load i32, i32* @ebx, align 4
  %v1_131a3 = add i32 %v0_131a3, 4
  store i32 %v1_131a3, i32* @ebx, align 4
  %v0_131ae = load i32, i32* @ebp, align 4
  store i32 %v0_131ae, i32* @edi, align 4
  %v2_131b3 = mul i32 %tmp, 4
  %v3_131b3 = add i32 %v0_131ae, %v2_131b3
  store i32 %v3_131b3, i32* @eax, align 8
  %v0_131b6 = call i32 @function_130a9()
  ret i32 %v0_131b6
}

define i32 @function_131c0() local_unnamed_addr {
dec_label_pc_131c0:
  store i32 0, i32* @esi, align 4
  %v0_131c2 = call i32 @function_13068()
  ret i32 %v0_131c2
}

define i32 @function_131c7() local_unnamed_addr {
dec_label_pc_131c7:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_131cb = load i32, i32* @ebp, align 4
  %v2_131cb = mul i32 %tmp, 4
  %v3_131cb = add i32 %v0_131cb, %v2_131cb
  store i32 %v3_131cb, i32* @eax, align 8
  %v0_131cf = call i32 @function_130a9()
  ret i32 %v0_131cf

; uselistorder directives
  uselistorder i32 ()* @function_130a9, { 2, 1, 0 }
}

define i32 @function_131d4() local_unnamed_addr {
dec_label_pc_131d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_131e5() local_unnamed_addr {
dec_label_pc_131e5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_131f4() local_unnamed_addr {
dec_label_pc_131f4:
  %v0_131f4 = call i32 @function_131e5()
  ret i32 %v0_131f4
}

define i32 @function_131f6() local_unnamed_addr {
dec_label_pc_131f6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1321c() local_unnamed_addr {
dec_label_pc_1321c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1321c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1321c
}

define i32 @function_1322b() local_unnamed_addr {
dec_label_pc_1322b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1322b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1322b
}

define i32 @_ZNSt10_List_baseISsSaISsEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13240:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v2_13256 = load i32, i32* %arg1, align 4
  %v12_13258 = icmp eq i32 %v2_13256, %tmp2
  %v1_1325a = icmp eq i1 %v12_13258, false
  br i1 %v1_1325a, label %dec_label_pc_13262, label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_13240
  %v0_1324a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_13242 = load i32, i32* @ebx, align 4
  %v0_13241 = load i32, i32* @esi, align 4
  %v0_13240 = load i32, i32* @edi, align 4
  %v4_1325c = call i32 @function_1327b(i32 %v0_1324a, i32 %v0_13242, i32 %v0_13241, i32 %v0_13240)
  ret i32 %v4_1325c

dec_label_pc_13262:                               ; preds = %dec_label_pc_13240
  %v1_13264 = add i32 %v2_13256, 8
  ret i32 %v1_13264

; uselistorder directives
  uselistorder i32 %v2_13256, { 1, 0 }
}

define i32 @function_1327b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1327b:
  %v1_1327f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1327f = xor i32 %v1_1327f, %arg1
  %v3_1327f = icmp eq i32 %v2_1327f, 0
  %v1_13286 = icmp eq i1 %v3_1327f, false
  br i1 %v1_13286, label %dec_label_pc_1328f, label %dec_label_pc_13288

dec_label_pc_13288:                               ; preds = %dec_label_pc_1327b
  ret i32 %v2_1327f

dec_label_pc_1328f:                               ; preds = %dec_label_pc_1327b
  ret i32 %v2_1327f

; uselistorder directives
  uselistorder i32 %v2_1327f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_132a0:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v0_132a0 = load i32, i32* @edi, align 4
  %v0_132a1 = load i32, i32* @esi, align 4
  %v0_132a2 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* @edi, align 4
  %v0_132aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_132b6 = load i32, i32* %arg1, align 4
  store i32 %v2_132b6, i32* @ebx, align 4
  %v12_132b8 = icmp eq i32 %v2_132b6, %tmp3
  %v1_132ba = icmp eq i1 %v12_132b8, false
  br i1 %v1_132ba, label %dec_label_pc_132c2, label %dec_label_pc_132bc

dec_label_pc_132bc:                               ; preds = %dec_label_pc_132a0
  %v4_132bc = call i32 @function_132df(i32 %v0_132aa, i32 %v0_132a2, i32 %v0_132a1, i32 %v0_132a0)
  ret i32 %v4_132bc

dec_label_pc_132c2:                               ; preds = %dec_label_pc_132a0
  %v1_132c2 = add i32 %v2_132b6, 8
  %v2_132c2 = inttoptr i32 %v1_132c2 to i32*
  %v3_132c2 = load i32, i32* %v2_132c2, align 4
  store i32 %v3_132c2, i32* @eax, align 8
  %v1_132c5 = inttoptr i32 %v2_132b6 to i32*
  %v2_132c5 = load i32, i32* %v1_132c5, align 4
  store i32 %v2_132c5, i32* @esi, align 4
  %v1_132c7 = icmp eq i32 %v3_132c2, 0
  br i1 %v1_132c7, label %bb, label %dec_label_pc_132cb

bb:                                               ; preds = %dec_label_pc_132c2
  %v1_132c9 = call i32 @function_132d3()
  br label %dec_label_pc_132cb

dec_label_pc_132cb:                               ; preds = %bb, %dec_label_pc_132c2
  %v0_132cb = phi i32 [ %v1_132c9, %bb ], [ %v3_132c2, %dec_label_pc_132c2 ]
  ret i32 %v0_132cb

; uselistorder directives
  uselistorder i32 %v2_132b6, { 2, 1, 0, 3 }
}

define i32 @function_132d3() local_unnamed_addr {
dec_label_pc_132d3:
  %v3_132d3 = load i32, i32* @eax, align 8
  ret i32 %v3_132d3
}

define i32 @function_132df(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_132df:
  %v1_132e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_132e3 = xor i32 %v1_132e3, %arg1
  %v3_132e3 = icmp eq i32 %v2_132e3, 0
  %v1_132ea = icmp eq i1 %v3_132e3, false
  br i1 %v1_132ea, label %dec_label_pc_132f3, label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132df
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v2_132e3

dec_label_pc_132f3:                               ; preds = %dec_label_pc_132df
  ret i32 %v2_132e3

; uselistorder directives
  uselistorder i32 %v2_132e3, { 1, 0, 2 }
}

define i32 @_ZN5boost12thread_group13create_threadINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEEEPNS_6threadET_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13300:
  %stack_var_-36 = alloca i32, align 4
  %v2_1330b = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* @edx, align 4
  %v1_1333f = add i32 %arg1, 8
  store i32 %v1_1333f, i32* @eax, align 8
  %v2_13346 = call i32 @function_257c0(i32 %v2_1330b, i32 %v1_1333f)
  ret i32 %v2_13346
}

define i32 @function_1337a() local_unnamed_addr {
dec_label_pc_1337a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1337a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1337a
}

define i32 @function_13413(i32 %arg1) local_unnamed_addr {
dec_label_pc_13413:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1344d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1344d:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1344d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1344d = add i32 %v0_1344d, -1964497876
  %v2_1344d = inttoptr i32 %v1_1344d to i32*
  %v3_1344d = load i32, i32* %v2_1344d, align 4
  %v4_1344d = sub i32 %v3_1344d, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1344d, i32* %v2_1344d, align 4
  %v0_13453 = load i32, i32* %eax.global-to-local, align 8
  %v3_13453 = load i32, i32* %ecx.global-to-local, align 4
  %v4_13453 = load i1, i1* %cf.global-to-local, align 1
  %v5_13453 = zext i1 %v4_13453 to i32
  %v6_13453 = sub i32 %v0_13453, %v3_13453
  %v7_13453 = add i32 %v5_13453, %v6_13453
  %v17_13453 = sub i32 %v6_13453, %v5_13453
  %v18_13453 = icmp ult i32 %v0_13453, %v17_13453
  %v19_13453 = icmp ne i32 %v3_13453, -1
  %v20_13453 = or i1 %v19_13453, %v18_13453
  %v21_13453 = icmp ult i32 %v0_13453, %v3_13453
  %v22_13453 = select i1 %v4_13453, i1 %v20_13453, i1 %v21_13453
  store i1 %v22_13453, i1* %cf.global-to-local, align 1
  store i32 %v7_13453, i32* %eax.global-to-local, align 8
  %v1_13455 = add i32 %v3_13453, 609520632
  %v2_13455 = inttoptr i32 %v1_13455 to i8*
  %v3_13455 = load i8, i8* %v2_13455, align 1
  %v5_13455 = trunc i32 %v3_13453 to i8
  %v6_13455 = add i8 %v3_13455, %v5_13455
  store i8 %v6_13455, i8* %v2_13455, align 1
  %v0_1345b = load i32, i32* %eax.global-to-local, align 8
  %v0_1345d = load i32, i32* %edx.global-to-local, align 4
  %v1_1345d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1345d = xor i32 %v1_1345d, %v0_1345d
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1345d = icmp eq i32 %v2_1345d, 0
  store i32 %v2_1345d, i32* %edx.global-to-local, align 4
  %v1_13463 = icmp eq i1 %v3_1345d, false
  br i1 %v1_13463, label %dec_label_pc_1347a, label %dec_label_pc_13465

dec_label_pc_13465:                               ; preds = %dec_label_pc_1344d
  %v0_13465 = load i32, i32* @esp, align 4
  %v5_13465 = icmp ugt i32 %v0_13465, -77
  store i1 %v5_13465, i1* %cf.global-to-local, align 1
  ret i32 %v0_1345b

dec_label_pc_1347a:                               ; preds = %dec_label_pc_1344d
  ret i32 %v0_1345b

; uselistorder directives
  uselistorder i32 %v6_13453, { 1, 0 }
  uselistorder i32 %v5_13453, { 1, 0 }
  uselistorder i32 %v3_13453, { 1, 0, 3, 2, 4 }
}

define i32 @function_13470() local_unnamed_addr {
dec_label_pc_13470:
  %v2_13470 = load i32, i32* @eax, align 8
  %v1_13478 = call i32 @function_13413(i32 %v2_13470)
  ret i32 %v1_13478
}

define i32 @function_13480() local_unnamed_addr {
dec_label_pc_13480:
  %eax.global-to-local = alloca i32, align 4
  %v0_13480 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13480
}

define i32 @function_1348d() local_unnamed_addr {
dec_label_pc_1348d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13498(i32 %arg1) local_unnamed_addr {
dec_label_pc_13498:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_134a0() local_unnamed_addr {
dec_label_pc_134a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_134d1() local_unnamed_addr {
dec_label_pc_134d1:
  %v1_134d1 = call i32 @function_13498(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_134d1
}

define i32 @function_134d3() local_unnamed_addr {
dec_label_pc_134d3:
  %v1_134d5 = call i32 @function_13498(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_134d5
}

define i32 @function_134d8() local_unnamed_addr {
dec_label_pc_134d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_134d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_134d8
}

define i32 @function_134e5() local_unnamed_addr {
dec_label_pc_134e5:
  %v1_134e5 = call i32 @function_13498(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_134e5
}

define i32 @function_134e7() local_unnamed_addr {
dec_label_pc_134e7:
  %v0_134e9 = call i32 @function_134a0()
  ret i32 %v0_134e9
}

define i32 @function_134ec() local_unnamed_addr {
dec_label_pc_134ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_134ec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_134ec
}

define i32 @function_134f5() local_unnamed_addr {
dec_label_pc_134f5:
  %v1_134f5 = call i32 @function_13498(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_134f5
}

define i32 @function_134f7() local_unnamed_addr {
dec_label_pc_134f7:
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_134f9 = add i32 %tmp93, 4
  store i32 %v1_134f9, i32* @eax, align 8
  %v1_13504 = call i32 @function_13498(i32 %v1_134f9)
  ret i32 %v1_13504

; uselistorder directives
  uselistorder i32 (i32)* @function_13498, { 4, 3, 2, 1, 0 }
}

define i32 @function_13506() local_unnamed_addr {
dec_label_pc_13506:
  %v0_13508 = call i32 @function_1348d()
  ret i32 %v0_13508
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13510:
  %v1_13529 = add i32 %arg2, 4
  ret i32 %v1_13529
}

define i32 @function_13540(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13540:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13540 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13540 = add i32 %v0_13540, 63376454
  %v2_13540 = inttoptr i32 %v1_13540 to i32*
  %v3_13540 = load i32, i32* %v2_13540, align 4
  %v4_13540 = add i32 %v3_13540, -1
  store i32 %v4_13540, i32* %v2_13540, align 4
  %v0_13548 = load i32, i32* %eax.global-to-local, align 8
  %v4_13548 = mul i32 %v0_13548, 2
  %v14_13548 = icmp eq i32 %v4_13548, 0
  store i32 %v4_13548, i32* %eax.global-to-local, align 8
  %v0_1354a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1354a = add i32 %v0_1354a, 8
  %v2_1354a = inttoptr i32 %v1_1354a to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_1354a, align 4
  %v1_13553 = load i32, i32* %ebx.global-to-local, align 4
  %v2_13553 = add i32 %v1_13553, 12
  %v3_13553 = inttoptr i32 %v2_13553 to i32*
  store i32 %v4_13548, i32* %v3_13553, align 4
  br i1 %v14_13548, label %dec_label_pc_13560, label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_13540
  br label %dec_label_pc_13560

dec_label_pc_13560:                               ; preds = %dec_label_pc_13558, %dec_label_pc_13540
  %v0_13560 = load i32, i32* %esi.global-to-local, align 4
  %v1_13560 = add i32 %v0_13560, 16
  %v2_13560 = inttoptr i32 %v1_13560 to i32*
  %v3_13560 = load i32, i32* %v2_13560, align 4
  store i32 %v3_13560, i32* %eax.global-to-local, align 8
  %v0_13563 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13563 = add i32 %v0_13563, 8
  %v2_13563 = inttoptr i32 %v1_13563 to i32*
  store i32 ptrtoint (i32* @global_var_3137c.2676 to i32), i32* %v2_13563, align 4
  %v0_1356a = load i32, i32* %eax.global-to-local, align 8
  %v1_1356a = load i32, i32* %ebx.global-to-local, align 4
  %v2_1356a = add i32 %v1_1356a, 16
  %v3_1356a = inttoptr i32 %v2_1356a to i32*
  store i32 %v0_1356a, i32* %v3_1356a, align 4
  %v0_1356d = load i32, i32* %esi.global-to-local, align 4
  %v1_1356d = add i32 %v0_1356d, 20
  %v2_1356d = inttoptr i32 %v1_1356d to i32*
  %v3_1356d = load i32, i32* %v2_1356d, align 4
  store i32 %v3_1356d, i32* %eax.global-to-local, align 8
  %v1_13570 = load i32, i32* %ebx.global-to-local, align 4
  %v2_13570 = add i32 %v1_13570, 20
  %v3_13570 = inttoptr i32 %v2_13570 to i32*
  store i32 %v3_1356d, i32* %v3_13570, align 4
  %v0_13573 = load i32, i32* %esi.global-to-local, align 4
  %v1_13573 = add i32 %v0_13573, 24
  %v2_13573 = inttoptr i32 %v1_13573 to i32*
  %v3_13573 = load i32, i32* %v2_13573, align 4
  store i32 %v3_13573, i32* %eax.global-to-local, align 8
  %v0_13576 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13576 = inttoptr i32 %v0_13576 to i32*
  store i32 ptrtoint (%vtable_31368_type* @global_var_31368.2675 to i32), i32* %v1_13576, align 4
  %v0_1357c = load i32, i32* %eax.global-to-local, align 8
  %v1_1357c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1357c = add i32 %v1_1357c, 24
  %v3_1357c = inttoptr i32 %v2_1357c to i32*
  store i32 %v0_1357c, i32* %v3_1357c, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_13583 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13583 = xor i32 %v1_13583, %arg1
  %v3_13583 = icmp eq i32 %v2_13583, 0
  store i32 %v2_13583, i32* %eax.global-to-local, align 8
  %v1_1358a = icmp eq i1 %v3_13583, false
  br i1 %v1_1358a, label %dec_label_pc_13592, label %dec_label_pc_1358c

dec_label_pc_1358c:                               ; preds = %dec_label_pc_13560
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v2_13583

dec_label_pc_13592:                               ; preds = %dec_label_pc_13560
  ret i32 %v2_13583

; uselistorder directives
  uselistorder i32 %v2_13583, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13548, { 2, 0, 1 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_31368_type* @global_var_31368.2675 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_135c0:
  %v4_135c0 = add i32 %arg1, -28
  %v1_135c5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %v4_135c0)
  ret i32 %v1_135c5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_135d0:
  ret i32 0
}

define i32 @function_135f0() local_unnamed_addr {
dec_label_pc_135f0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_135f0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_135f0 = add i32 %v0_135f0, -1996217228
  %v2_135f0 = inttoptr i32 %v1_135f0 to i32*
  %v3_135f0 = load i32, i32* %v2_135f0, align 4
  %v4_135f0 = sub i32 %v3_135f0, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_135f0, i32* %v2_135f0, align 4
  %v0_135f6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_135f6
}

define i32 @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_13640:
  ret i32 0
}

define i32 @function_13713() local_unnamed_addr {
dec_label_pc_13713:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13722() local_unnamed_addr {
dec_label_pc_13722:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13724 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13724 = add i32 %v0_13724, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_13724, i32* @ebx, align 4
  %v0_13725 = load i32, i32* %eax.global-to-local, align 8
  %v2_13725 = load i1, i1* %cf.global-to-local, align 1
  %v3_13725 = zext i1 %v2_13725 to i32
  %v4_13725 = add i32 %v0_13725, 176
  %v5_13725 = add i32 %v4_13725, %v3_13725
  %v30_13725 = urem i32 %v5_13725, 256
  %v32_13725 = and i32 %v0_13725, -256
  %v33_13725 = or i32 %v30_13725, %v32_13725
  store i32 %v33_13725, i32* %eax.global-to-local, align 8
  %v2_13728 = inttoptr i32 %v33_13725 to i32*
  %v3_13728 = load i32, i32* %v2_13728, align 4
  %v4_13728 = add i32 %v33_13725, %v3_13728
  %v9_13728 = icmp ult i32 %v4_13728, %v33_13725
  store i1 %v9_13728, i1* %cf.global-to-local, align 1
  store i32 %v4_13728, i32* @eax, align 8
  %tmp100 = urem i32 %v1_13724, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  %tmp102 = zext i1 %tmp101 to i32
  %v3_13731 = call i32 @function_22e80(i32 %tmp102)
  store i32 %v4_13728, i32* @eax, align 8
  %v0_1373a = load i32, i32* %esi.global-to-local, align 4
  %tmp103 = urem i32 %v0_1373a, 2
  %tmp104 = icmp ne i32 %tmp103, 0
  %tmp105 = zext i1 %tmp104 to i32
  %v3_13741 = call i32 @function_22e80(i32 %tmp105)
  store i32 %v4_13728, i32* @eax, align 8
  store i32 %v4_13728, i32* %esi.global-to-local, align 4
  %v0_1374c = call i32 @function_13713()
  store i32 %v0_1374c, i32* %eax.global-to-local, align 8
  ret i32 %v0_1374c

; uselistorder directives
  uselistorder i32 %v4_13728, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v33_13725, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13725, { 1, 0 }
  uselistorder i32 (i32)* @function_22e80, { 1, 0 }
}

define i32 @function_1374e() local_unnamed_addr {
dec_label_pc_1374e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1374e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1374e
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
dec_label_pc_13750:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_13751 = load i32, i32* @edi, align 4
  %v0_13753 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v0_1375b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_1376f = ptrtoint i8* %arg4 to i32
  store i32 %v4_1376f, i32* @edx, align 4
  %v1_13773 = icmp eq i32 %arg3, 0
  br i1 %v1_13773, label %bb, label %dec_label_pc_1377b

bb:                                               ; preds = %dec_label_pc_13750
  %v2_13775 = call i32 @function_13906(i32 %v0_1375b)
  store i32 %v2_13775, i32* %eax.global-to-local, align 8
  %v0_1377b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_1377b

dec_label_pc_1377b:                               ; preds = %bb, %dec_label_pc_13750
  %v0_1377b = phi i32 [ %v0_1377b.pre, %bb ], [ %arg1, %dec_label_pc_13750 ]
  %v1_1377b = add i32 %v0_1377b, 4
  %v2_1377b = inttoptr i32 %v1_1377b to i32*
  %v3_1377b = load i32, i32* %v2_1377b, align 4
  store i32 %v3_1377b, i32* @ebp, align 4
  %v1_1377e = add i32 %v0_1377b, 8
  %v2_1377e = inttoptr i32 %v1_1377e to i32*
  %v3_1377e = load i32, i32* %v2_1377e, align 4
  %v2_13781 = sub i32 %v3_1377e, %v3_1377b
  store i32 %v2_13781, i32* %eax.global-to-local, align 8
  %tmp35 = icmp ult i32 %v2_13781, %arg3
  br i1 %tmp35, label %bb30, label %dec_label_pc_1378b

bb30:                                             ; preds = %dec_label_pc_1377b
  %v4_13785 = call i32 @function_13818()
  store i32 %v4_13785, i32* %eax.global-to-local, align 8
  %v0_1378b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1378b

dec_label_pc_1378b:                               ; preds = %dec_label_pc_1377b, %bb30
  %v0_13790 = phi i32 [ %v3_1377b, %dec_label_pc_1377b ], [ %v0_1378b.pre, %bb30 ]
  store i32 %v0_13790, i32* %ecx.global-to-local, align 4
  %v0_1378d = load i32, i32* @edx, align 4
  %v1_1378d = inttoptr i32 %v0_1378d to i8*
  %v2_1378d = load i8, i8* %v1_1378d, align 1
  %v3_1378d = zext i8 %v2_1378d to i32
  store i32 %v3_1378d, i32* @edx, align 4
  store i32 %v0_13790, i32* @eax, align 8
  %v1_13792 = load i32, i32* @ebx, align 4
  %v2_13792 = sub i32 %v0_13790, %v1_13792
  store i32 %v2_13792, i32* %ecx.global-to-local, align 4
  %v7_13794 = icmp ugt i32 %v2_13792, %arg3
  %v1_1379a = icmp eq i1 %v7_13794, false
  br i1 %v1_1379a, label %bb31, label %dec_label_pc_137a0

bb31:                                             ; preds = %dec_label_pc_1378b
  %v3_1379a = inttoptr i32 %v2_13792 to i8*
  %v4_1379a = call i32 @function_13920(i8* %v3_1379a)
  store i32 %v4_1379a, i32* %eax.global-to-local, align 8
  %v0_137a6.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %bb31, %dec_label_pc_1378b
  %v0_137a6 = phi i32 [ %v0_137a6.pre, %bb31 ], [ %v0_13790, %dec_label_pc_1378b ]
  %v0_137a0 = phi i32 [ %v4_1379a, %bb31 ], [ %v0_13790, %dec_label_pc_1378b ]
  %v2_137a0 = sub i32 %v0_137a0, %arg3
  store i32 %v0_137a6, i32* %eax.global-to-local, align 8
  %v15_137a8 = icmp eq i32 %v0_137a6, %v2_137a0
  br i1 %v15_137a8, label %dec_label_pc_137a0.dec_label_pc_137d4_crit_edge, label %dec_label_pc_137ae

dec_label_pc_137a0.dec_label_pc_137d4_crit_edge:  ; preds = %dec_label_pc_137a0
  %v1_137d6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_137d4

dec_label_pc_137ae:                               ; preds = %dec_label_pc_137a0
  store i32 %v2_137a0, i32* %ecx.global-to-local, align 4
  %v0_137b2 = load i32, i32* @edi, align 4
  %v0_137b6 = load i32, i32* @edx, align 4
  store i32 %v0_137b6, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_137b8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137c1, %dec_label_pc_137ae
  %v1_137c710 = phi i32 [ %v1_137c7, %dec_label_pc_137c1 ], [ %v0_137a6, %dec_label_pc_137ae ]
  %v2_137bf = phi i32 [ %v1_137c4, %dec_label_pc_137c1 ], [ %v0_137a6, %dec_label_pc_137ae ]
  %v0_137bc = phi i32 [ %v1_137c1, %dec_label_pc_137c1 ], [ %v2_137a0, %dec_label_pc_137ae ]
  %v1_137b8 = icmp eq i32 %v2_137bf, 0
  br i1 %v1_137b8, label %dec_label_pc_137c1, label %dec_label_pc_137bc

dec_label_pc_137bc:                               ; preds = %dec_label_pc_137b8
  %v1_137bc = inttoptr i32 %v0_137bc to i8*
  %v2_137bc = load i8, i8* %v1_137bc, align 1
  %v3_137bf = inttoptr i32 %v2_137bf to i8*
  store i8 %v2_137bc, i8* %v3_137bf, align 1
  %v0_137c1.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_137c4.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_137c7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_137c1

dec_label_pc_137c1:                               ; preds = %dec_label_pc_137bc, %dec_label_pc_137b8
  %v1_137c7 = phi i32 [ %v1_137c7.pre, %dec_label_pc_137bc ], [ %v1_137c710, %dec_label_pc_137b8 ]
  %v0_137c4 = phi i32 [ %v0_137c4.pre, %dec_label_pc_137bc ], [ 0, %dec_label_pc_137b8 ]
  %v0_137c1 = phi i32 [ %v0_137c1.pre, %dec_label_pc_137bc ], [ %v0_137bc, %dec_label_pc_137b8 ]
  %v1_137c1 = add i32 %v0_137c1, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_137c1, i32* %ecx.global-to-local, align 4
  %v1_137c4 = add i32 %v0_137c4, 1
  store i32 %v1_137c4, i32* %eax.global-to-local, align 8
  %v12_137c7 = icmp eq i32 %v1_137c1, %v1_137c7
  %v1_137c9 = icmp eq i1 %v12_137c7, false
  br i1 %v1_137c9, label %dec_label_pc_137b8, label %dec_label_pc_137cb

dec_label_pc_137cb:                               ; preds = %dec_label_pc_137c1
  %v0_137cb = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_137cb, i32* @edx, align 4
  store i32 %v0_137b2, i32* %edi.global-to-local, align 4
  %v1_137d1 = add i32 %v0_137b2, 4
  %v2_137d1 = inttoptr i32 %v1_137d1 to i32*
  %v3_137d1 = load i32, i32* %v2_137d1, align 4
  store i32 %v3_137d1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_137d4

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137a0.dec_label_pc_137d4_crit_edge, %dec_label_pc_137cb
  %v1_137d6 = phi i32 [ %v0_137b2, %dec_label_pc_137cb ], [ %v1_137d6.pre, %dec_label_pc_137a0.dec_label_pc_137d4_crit_edge ]
  %v0_137d4 = phi i32 [ %v3_137d1, %dec_label_pc_137cb ], [ %v0_137a6, %dec_label_pc_137a0.dec_label_pc_137d4_crit_edge ]
  %v2_137d4 = add i32 %v0_137d4, %arg3
  %v2_137d6 = add i32 %v1_137d6, 4
  %v3_137d6 = inttoptr i32 %v2_137d6 to i32*
  store i32 %v2_137d4, i32* %v3_137d6, align 4
  %v1_137dd = load i32, i32* @ebx, align 4
  %v2_137dd = sub i32 %v2_137a0, %v1_137dd
  %v12_137dd = icmp eq i32 %v2_137dd, 0
  store i32 %v2_137dd, i32* @eax, align 8
  %v1_137df = icmp eq i1 %v12_137dd, false
  br i1 %v1_137df, label %bb32, label %dec_label_pc_137e5

bb32:                                             ; preds = %dec_label_pc_137d4
  %v2_137df = call i32 @function_13980()
  store i32 %v2_137df, i32* @eax, align 8
  br label %dec_label_pc_137e5

dec_label_pc_137e5:                               ; preds = %bb32, %dec_label_pc_137d4
  %v5_1380b15 = phi i32 [ %v2_137df, %bb32 ], [ %v2_137dd, %dec_label_pc_137d4 ]
  store i32 0, i32* %ecx.global-to-local, align 4
  br i1 false, label %bb33, label %dec_label_pc_137f6

bb33:                                             ; preds = %dec_label_pc_137e5
  br label %dec_label_pc_137f6

dec_label_pc_137f6:                               ; preds = %bb33, %dec_label_pc_137e5
  %v0_137fa = load i32, i32* @edx, align 4
  %v1_137fa = urem i32 %v0_137fa, 256
  store i32 %v1_137fa, i32* @edx, align 4
  store i32 %v0_13753, i32* @ebx, align 4
  store i32 %v0_13751, i32* %edi.global-to-local, align 4
  ret i32 %v5_1380b15

; uselistorder directives
  uselistorder i32 %v1_137c4, { 1, 0 }
  uselistorder i32 %v1_137c1, { 0, 2, 1 }
  uselistorder i32 %v0_137b2, { 0, 2, 1 }
  uselistorder i32 %v2_137a0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_137a6, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_13790, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1377b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 0, 1, 7, 2 }
  uselistorder i32 %arg3, { 1, 3, 2, 0, 4, 5 }
  uselistorder label %dec_label_pc_137d4, { 1, 0 }
  uselistorder label %dec_label_pc_1378b, { 1, 0 }
}

define i32 @function_13818() local_unnamed_addr {
dec_label_pc_13818:
  %ebp.global-to-local = alloca i32, align 4
  %v2_13818 = load i32, i32* @edi, align 4
  store i32 %v2_13818, i32* @eax, align 8
  %v0_1381a = load i32, i32* @ebp, align 4
  %v2_1381a = sub i32 %v0_1381a, %v2_13818
  store i32 %v2_1381a, i32* %ebp.global-to-local, align 4
  %v1_1381e = sub i32 -1, %v2_1381a
  %v0_13820 = load i32, i32* @esi, align 4
  %tmp10 = icmp ugt i32 %v0_13820, %v1_1381e
  br i1 %tmp10, label %bb, label %dec_label_pc_13828

bb:                                               ; preds = %dec_label_pc_13818
  %v4_13822 = call i32 @function_139c6()
  store i32 %v4_13822, i32* @eax, align 8
  %v0_13828.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_13828.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %dec_label_pc_13818, %bb
  %v1_13835 = phi i32 [ %v2_13818, %dec_label_pc_13818 ], [ %v4_13822, %bb ]
  %v0_1382a = phi i32 [ %v0_13820, %dec_label_pc_13818 ], [ %v1_13828.pre, %bb ]
  %v0_13837 = phi i32 [ %v2_1381a, %dec_label_pc_13818 ], [ %v0_13828.pre, %bb ]
  %v7_13828 = icmp ult i32 %v0_13837, %v0_1382a
  %v1_1382c = icmp eq i1 %v7_13828, false
  %v4_1382c = select i1 %v1_1382c, i32 %v0_13837, i32 %v0_1382a
  %v0_13833 = load i32, i32* @ebx, align 4
  %v5_13837 = add i32 %v4_1382c, %v0_13837
  %v10_13837 = icmp ult i32 %v5_13837, %v0_13837
  store i32 %v5_13837, i32* @ebp, align 4
  %v1_13847 = icmp eq i1 %v10_13837, false
  br i1 %v1_13847, label %bb9, label %dec_label_pc_1384d

bb9:                                              ; preds = %dec_label_pc_13828
  %v2_13835 = sub i32 %v0_13833, %v1_13835
  %v5_13847 = call i32 @function_139a0(i32 %v4_1382c, i32 -1, i32 %v2_13835)
  br label %dec_label_pc_1384d

dec_label_pc_1384d:                               ; preds = %bb9, %dec_label_pc_13828
  %v3_13855 = phi i32 [ %v5_13847, %bb9 ], [ %v1_13835, %dec_label_pc_13828 ]
  ret i32 %v3_13855

; uselistorder directives
  uselistorder i32 %v4_1382c, { 1, 0 }
  uselistorder i32 %v0_13837, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13820, { 1, 0 }
  uselistorder i32 %v2_1381a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13828, { 1, 0 }
}

define i32 @function_13865(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13865:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13869 = load i32, i32* @esi, align 4
  store i32 %v0_13869, i32* %ecx.global-to-local, align 4
  %v0_1386b = load i32, i32* @edx, align 4
  store i32 %v0_1386b, i32* %ebp.global-to-local, align 4
  %v5_1386d = add i32 %arg2, %arg1
  store i32 %v5_1386d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13882, %dec_label_pc_13865
  %v0_138853 = phi i32 [ %v1_13885, %dec_label_pc_13882 ], [ %v0_13869, %dec_label_pc_13865 ]
  %v2_13880 = phi i32 [ %v1_13882, %dec_label_pc_13882 ], [ %v5_1386d, %dec_label_pc_13865 ]
  %v1_13878 = icmp eq i32 %v2_13880, 0
  br i1 %v1_13878, label %dec_label_pc_13882, label %dec_label_pc_1387c

dec_label_pc_1387c:                               ; preds = %dec_label_pc_13878
  %v2_1387c = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v3_1387c = zext i8 %v2_1387c to i32
  store i32 %v3_1387c, i32* @edx, align 4
  %v3_13880 = inttoptr i32 %v2_13880 to i8*
  store i8 %v2_1387c, i8* %v3_13880, align 1
  %v0_13882.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_13885.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_13882

dec_label_pc_13882:                               ; preds = %dec_label_pc_1387c, %dec_label_pc_13878
  %v0_13885 = phi i32 [ %v0_13885.pre, %dec_label_pc_1387c ], [ %v0_138853, %dec_label_pc_13878 ]
  %v0_13882 = phi i32 [ %v0_13882.pre, %dec_label_pc_1387c ], [ 0, %dec_label_pc_13878 ]
  %v1_13882 = add i32 %v0_13882, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_13882, i32* %eax.global-to-local, align 8
  %v1_13885 = sub i32 %v0_13885, ptrtoint (i1* @global_var_1.2399 to i32)
  %v10_13885 = icmp eq i32 %v1_13885, 0
  store i32 %v1_13885, i32* %ecx.global-to-local, align 4
  %v1_13888 = icmp eq i1 %v10_13885, false
  br i1 %v1_13888, label %dec_label_pc_13878, label %dec_label_pc_1388a

dec_label_pc_1388a:                               ; preds = %dec_label_pc_13882
  %v2_1388a = load i32, i32* @edi, align 4
  store i32 %v2_1388a, i32* %ebp.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_13890 = load i32, i32* @ebx, align 4
  %v12_13890 = icmp eq i32 %v2_1388a, %v1_13890
  br i1 %v12_13890, label %dec_label_pc_138b3, label %dec_label_pc_13894

dec_label_pc_13894:                               ; preds = %dec_label_pc_1388a
  store i32 %v2_1388a, i32* @edx, align 4
  br label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_138a1, %dec_label_pc_13894
  %v1_138a79 = phi i32 [ %v0_138ab, %dec_label_pc_138a1 ], [ %v1_13890, %dec_label_pc_13894 ]
  %v0_1389c = phi i32 [ %v1_138a1, %dec_label_pc_138a1 ], [ %v2_1388a, %dec_label_pc_13894 ]
  %v2_1389f = phi i32 [ %v1_138a4, %dec_label_pc_138a1 ], [ %arg1, %dec_label_pc_13894 ]
  %v1_13898 = icmp eq i32 %v2_1389f, 0
  br i1 %v1_13898, label %dec_label_pc_138a1, label %dec_label_pc_1389c

dec_label_pc_1389c:                               ; preds = %dec_label_pc_13898
  %v1_1389c = inttoptr i32 %v0_1389c to i8*
  %v2_1389c = load i8, i8* %v1_1389c, align 1
  %v3_1389c = zext i8 %v2_1389c to i32
  store i32 %v3_1389c, i32* %ecx.global-to-local, align 4
  %v3_1389f = inttoptr i32 %v2_1389f to i8*
  store i8 %v2_1389c, i8* %v3_1389f, align 1
  %v0_138a1.pre = load i32, i32* @edx, align 4
  %v0_138a4.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_138a7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_138a1

dec_label_pc_138a1:                               ; preds = %dec_label_pc_1389c, %dec_label_pc_13898
  %v0_138ab = phi i32 [ %v1_138a7.pre, %dec_label_pc_1389c ], [ %v1_138a79, %dec_label_pc_13898 ]
  %v0_138a4 = phi i32 [ %v0_138a4.pre, %dec_label_pc_1389c ], [ 0, %dec_label_pc_13898 ]
  %v0_138a1 = phi i32 [ %v0_138a1.pre, %dec_label_pc_1389c ], [ %v0_1389c, %dec_label_pc_13898 ]
  %v1_138a1 = add i32 %v0_138a1, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_138a1, i32* @edx, align 4
  %v1_138a4 = add i32 %v0_138a4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_138a4, i32* %eax.global-to-local, align 8
  %v12_138a7 = icmp eq i32 %v1_138a1, %v0_138ab
  %v1_138a9 = icmp eq i1 %v12_138a7, false
  br i1 %v1_138a9, label %dec_label_pc_13898, label %dec_label_pc_138ab

dec_label_pc_138ab:                               ; preds = %dec_label_pc_138a1
  %v1_138ad = load i32, i32* %ebp.global-to-local, align 4
  %v2_138ad = sub i32 %v0_138ab, %v1_138ad
  %v5_138af = add i32 %v2_138ad, %arg1
  store i32 %v5_138af, i32* %eax.global-to-local, align 8
  %v0_138b3.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_138b3

dec_label_pc_138b3:                               ; preds = %dec_label_pc_138ab, %dec_label_pc_1388a
  %v0_138bc = phi i32 [ %v0_138ab, %dec_label_pc_138ab ], [ %v1_13890, %dec_label_pc_1388a ]
  %v1_138b6 = phi i32 [ %v5_138af, %dec_label_pc_138ab ], [ %arg1, %dec_label_pc_1388a ]
  %v0_138b3 = phi i32 [ %v0_138b3.pre, %dec_label_pc_138ab ], [ %v2_1388a, %dec_label_pc_1388a ]
  %v1_138b3 = add i32 %v0_138b3, 4
  %v2_138b3 = inttoptr i32 %v1_138b3 to i32*
  %v3_138b3 = load i32, i32* %v2_138b3, align 4
  store i32 %v3_138b3, i32* @ebp, align 4
  %v0_138b6 = load i32, i32* @esi, align 4
  %v2_138b6 = add i32 %v0_138b6, %v1_138b6
  store i32 %v2_138b6, i32* @esi, align 4
  %v12_138b8 = icmp eq i32 %v3_138b3, %v0_138bc
  br i1 %v12_138b8, label %dec_label_pc_138d7, label %dec_label_pc_138bc

dec_label_pc_138bc:                               ; preds = %dec_label_pc_138b3
  store i32 %v0_138bc, i32* %eax.global-to-local, align 8
  store i32 %v2_138b6, i32* @edx, align 4
  br label %dec_label_pc_138c0

dec_label_pc_138c0:                               ; preds = %dec_label_pc_138c9, %dec_label_pc_138bc
  %v1_138cf18 = phi i32 [ %v1_138cf, %dec_label_pc_138c9 ], [ %v3_138b3, %dec_label_pc_138bc ]
  %v0_138c4 = phi i32 [ %v1_138c9, %dec_label_pc_138c9 ], [ %v0_138bc, %dec_label_pc_138bc ]
  %v2_138c7 = phi i32 [ %v1_138cc, %dec_label_pc_138c9 ], [ %v2_138b6, %dec_label_pc_138bc ]
  %v1_138c0 = icmp eq i32 %v2_138c7, 0
  br i1 %v1_138c0, label %dec_label_pc_138c9, label %dec_label_pc_138c4

dec_label_pc_138c4:                               ; preds = %dec_label_pc_138c0
  %v1_138c4 = inttoptr i32 %v0_138c4 to i8*
  %v2_138c4 = load i8, i8* %v1_138c4, align 1
  %v3_138c4 = zext i8 %v2_138c4 to i32
  store i32 %v3_138c4, i32* %ecx.global-to-local, align 4
  %v3_138c7 = inttoptr i32 %v2_138c7 to i8*
  store i8 %v2_138c4, i8* %v3_138c7, align 1
  %v0_138c9.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_138cc.pre = load i32, i32* @edx, align 4
  %v1_138cf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_138c9

dec_label_pc_138c9:                               ; preds = %dec_label_pc_138c4, %dec_label_pc_138c0
  %v1_138cf = phi i32 [ %v1_138cf.pre, %dec_label_pc_138c4 ], [ %v1_138cf18, %dec_label_pc_138c0 ]
  %v0_138cc = phi i32 [ %v0_138cc.pre, %dec_label_pc_138c4 ], [ 0, %dec_label_pc_138c0 ]
  %v0_138c9 = phi i32 [ %v0_138c9.pre, %dec_label_pc_138c4 ], [ %v0_138c4, %dec_label_pc_138c0 ]
  %v1_138c9 = add i32 %v0_138c9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_138c9, i32* %eax.global-to-local, align 8
  %v1_138cc = add i32 %v0_138cc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_138cc, i32* @edx, align 4
  %v12_138cf = icmp eq i32 %v1_138c9, %v1_138cf
  %v1_138d1 = icmp eq i1 %v12_138cf, false
  br i1 %v1_138d1, label %dec_label_pc_138c0, label %dec_label_pc_138d3

dec_label_pc_138d3:                               ; preds = %dec_label_pc_138c9
  %v1_138d3 = load i32, i32* @ebx, align 4
  %v2_138d3 = sub i32 %v1_138c9, %v1_138d3
  store i32 %v2_138d3, i32* %eax.global-to-local, align 8
  %v0_138d5 = load i32, i32* @esi, align 4
  %v2_138d5 = add i32 %v0_138d5, %v2_138d3
  store i32 %v2_138d5, i32* @esi, align 4
  %v2_138d7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_138d7

dec_label_pc_138d7:                               ; preds = %dec_label_pc_138d3, %dec_label_pc_138b3
  %v2_138d7 = phi i32 [ %v2_138d7.pre, %dec_label_pc_138d3 ], [ %v0_138b3, %dec_label_pc_138b3 ]
  store i32 %v2_138d7, i32* @ebx, align 4
  %v1_138d9 = add i32 %v2_138d7, 8
  %v2_138d9 = inttoptr i32 %v1_138d9 to i32*
  %v3_138d9 = load i32, i32* %v2_138d9, align 4
  store i32 %v3_138d9, i32* %eax.global-to-local, align 8
  %v1_138dc = icmp eq i32 %v2_138d7, 0
  br i1 %v1_138dc, label %bb, label %dec_label_pc_138e0

bb:                                               ; preds = %dec_label_pc_138d7
  %v1_138de = call i32 @function_138f6()
  store i32 %v1_138de, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %bb, %dec_label_pc_138d7
  %v0_138e0 = phi i32 [ %v1_138de, %bb ], [ %v3_138d9, %dec_label_pc_138d7 ]
  %v2_138e0 = sub i32 %v0_138e0, %v2_138d7
  store i32 %v2_138e0, i32* %eax.global-to-local, align 8
  ret i32 %v2_138e0

; uselistorder directives
  uselistorder i32 %v2_138d7, { 3, 2, 1, 0 }
  uselistorder i32 %v1_138cc, { 1, 0 }
  uselistorder i32 %v1_138c9, { 1, 0, 3, 2 }
  uselistorder i32 %v3_138b3, { 1, 0, 2 }
  uselistorder i32 %v0_138bc, { 1, 2, 0 }
  uselistorder i32 %v1_138a4, { 1, 0 }
  uselistorder i32 %v1_138a1, { 0, 2, 1 }
  uselistorder i32 %v0_138ab, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13890, { 1, 2, 0 }
  uselistorder i32 %v2_1388a, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_13885, { 1, 2, 0 }
  uselistorder i32 %v1_13882, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %arg1, { 2, 0, 3, 4, 1 }
}

define i32 @function_138f6() local_unnamed_addr {
dec_label_pc_138f6:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_138fa = load i32, i32* @esi, align 4
  %v1_138fa = load i32, i32* @edi, align 4
  %v2_138fa = add i32 %v1_138fa, 4
  %v3_138fa = inttoptr i32 %v2_138fa to i32*
  store i32 %v0_138fa, i32* %v3_138fa, align 4
  %v0_138fd = load i32, i32* %eax.global-to-local, align 8
  %v1_138fd = load i32, i32* @edi, align 4
  %v2_138fd = inttoptr i32 %v1_138fd to i32*
  store i32 %v0_138fd, i32* %v2_138fd, align 4
  %v0_138ff = load i32, i32* %eax.global-to-local, align 8
  %v5_138ff = add i32 %v0_138ff, %tmp
  store i32 %v5_138ff, i32* %eax.global-to-local, align 8
  %v1_13903 = load i32, i32* @edi, align 4
  %v2_13903 = add i32 %v1_13903, 8
  %v3_13903 = inttoptr i32 %v2_13903 to i32*
  store i32 %v5_138ff, i32* %v3_13903, align 4
  %v4_13903 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_13903
}

define i32 @function_13906(i32 %arg1) local_unnamed_addr {
dec_label_pc_13906:
  %v1_1390a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1390a = icmp eq i32 %v1_1390a, %arg1
  %v1_13911 = icmp eq i1 %v3_1390a, false
  br i1 %v1_13911, label %bb, label %dec_label_pc_13906.dec_label_pc_13917_crit_edge

dec_label_pc_13906.dec_label_pc_13917_crit_edge:  ; preds = %dec_label_pc_13906
  %v0_1391e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13917

bb:                                               ; preds = %dec_label_pc_13906
  %v2_13911 = call i32 @function_139c1()
  br label %dec_label_pc_13917

dec_label_pc_13917:                               ; preds = %dec_label_pc_13906.dec_label_pc_13917_crit_edge, %bb
  %v0_1391e = phi i32 [ %v2_13911, %bb ], [ %v0_1391e.pre, %dec_label_pc_13906.dec_label_pc_13917_crit_edge ]
  ret i32 %v0_1391e

; uselistorder directives
  uselistorder label %dec_label_pc_13917, { 1, 0 }
}

define i32 @function_13920(i8* %arg1) local_unnamed_addr {
dec_label_pc_13920:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i1 @__decompiler_undefined_function_4()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %v0_13920 = load i32, i32* @esi, align 4
  %v5_13920 = ptrtoint i8* %arg1 to i32
  %v6_13920 = sub i32 %v0_13920, %v5_13920
  %v16_13920 = icmp eq i32 %v6_13920, 0
  store i32 %v6_13920, i32* %esi.global-to-local, align 4
  br i1 %v16_13920, label %dec_label_pc_13920.dec_label_pc_13939_crit_edge, label %dec_label_pc_13926

dec_label_pc_13920.dec_label_pc_13939_crit_edge:  ; preds = %dec_label_pc_13920
  %v1_13939.pre = load i32, i32* @eax, align 8
  %v1_1393d.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_13939

dec_label_pc_13926:                               ; preds = %dec_label_pc_13920
  store i32 %v6_13920, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_13928

dec_label_pc_13928:                               ; preds = %dec_label_pc_1392e, %dec_label_pc_13926
  %v0_139313 = phi i32 [ %v6_13920, %dec_label_pc_13926 ], [ %v1_13931, %dec_label_pc_1392e ]
  %.0 = phi i1 [ %tmp, %dec_label_pc_13926 ], [ %v17_1392e, %dec_label_pc_1392e ]
  %v2_13928 = icmp eq i1 %.0, false
  br i1 %v2_13928, label %dec_label_pc_1392e, label %dec_label_pc_1392c

dec_label_pc_1392c:                               ; preds = %dec_label_pc_13928
  %v0_1392c = load i32, i32* @edx, align 4
  %v1_1392c = trunc i32 %v0_1392c to i8
  %v3_1392c = sext i1 %.0 to i32
  %v4_1392c = inttoptr i32 %v3_1392c to i8*
  store i8 %v1_1392c, i8* %v4_1392c, align 1
  %v0_13931.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1392e

dec_label_pc_1392e:                               ; preds = %dec_label_pc_13928, %dec_label_pc_1392c
  %v0_13931 = phi i32 [ %v0_13931.pre, %dec_label_pc_1392c ], [ %v0_139313, %dec_label_pc_13928 ]
  %v1_1392e.pre-phi = phi i32 [ add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 -1), %dec_label_pc_1392c ], [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_13928 ]
  %tmp21 = urem i32 %v1_1392e.pre-phi, 2
  %v17_1392e = icmp ne i32 %tmp21, 0
  store i32 %v1_1392e.pre-phi, i32* %eax.global-to-local, align 8
  %v1_13931 = sub i32 %v0_13931, ptrtoint (i1* @global_var_1.2399 to i32)
  %v10_13931 = icmp eq i32 %v1_13931, 0
  store i32 %v1_13931, i32* %ecx.global-to-local, align 4
  %v1_13934 = icmp eq i1 %v10_13931, false
  br i1 %v1_13934, label %dec_label_pc_13928, label %dec_label_pc_13936

dec_label_pc_13936:                               ; preds = %dec_label_pc_1392e
  %v0_13936 = load i32, i32* @edi, align 4
  %v1_13936 = add i32 %v0_13936, 4
  %v2_13936 = inttoptr i32 %v1_13936 to i32*
  %v3_13936 = load i32, i32* %v2_13936, align 4
  store i32 %v3_13936, i32* %eax.global-to-local, align 8
  %v0_13939.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_13939

dec_label_pc_13939:                               ; preds = %dec_label_pc_13920.dec_label_pc_13939_crit_edge, %dec_label_pc_13936
  %v1_1393d = phi i32 [ %v0_13936, %dec_label_pc_13936 ], [ %v1_1393d.pre, %dec_label_pc_13920.dec_label_pc_13939_crit_edge ]
  %v1_13939 = phi i32 [ %v3_13936, %dec_label_pc_13936 ], [ %v1_13939.pre, %dec_label_pc_13920.dec_label_pc_13939_crit_edge ]
  %v0_13939 = phi i32 [ %v0_13939.pre, %dec_label_pc_13936 ], [ 0, %dec_label_pc_13920.dec_label_pc_13939_crit_edge ]
  %v2_13939 = add i32 %v0_13939, %v1_13939
  store i32 %v2_13939, i32* %esi.global-to-local, align 4
  %v0_1393b = load i32, i32* @ebp, align 4
  %v1_1393b = load i32, i32* @ebx, align 4
  %v12_1393b = icmp eq i32 %v0_1393b, %v1_1393b
  %v2_1393d = add i32 %v1_1393d, 4
  %v3_1393d = inttoptr i32 %v2_1393d to i32*
  store i32 %v2_13939, i32* %v3_1393d, align 4
  br i1 %v12_1393b, label %dec_label_pc_13939.dec_label_pc_1395e_crit_edge, label %dec_label_pc_13942

dec_label_pc_13939.dec_label_pc_1395e_crit_edge:  ; preds = %dec_label_pc_13939
  %v0_1395e.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_1396d.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_1395e

dec_label_pc_13942:                               ; preds = %dec_label_pc_13939
  %v0_13942 = load i32, i32* @ebx, align 4
  store i32 %v0_13942, i32* %eax.global-to-local, align 8
  %v0_13948.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_13948

dec_label_pc_13948:                               ; preds = %dec_label_pc_13951, %dec_label_pc_13942
  %v0_1394c = phi i32 [ %v1_13951, %dec_label_pc_13951 ], [ %v0_13942, %dec_label_pc_13942 ]
  %v2_1394f = phi i32 [ %v1_13954, %dec_label_pc_13951 ], [ %v0_13948.pre, %dec_label_pc_13942 ]
  %v1_13948 = icmp eq i32 %v2_1394f, 0
  br i1 %v1_13948, label %dec_label_pc_13951, label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13948
  %v1_1394c = inttoptr i32 %v0_1394c to i8*
  %v2_1394c = load i8, i8* %v1_1394c, align 1
  %v3_1394c = zext i8 %v2_1394c to i32
  store i32 %v3_1394c, i32* %ecx.global-to-local, align 4
  %v3_1394f = inttoptr i32 %v2_1394f to i8*
  store i8 %v2_1394c, i8* %v3_1394f, align 1
  %v0_13951.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_13954.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_13951

dec_label_pc_13951:                               ; preds = %dec_label_pc_1394c, %dec_label_pc_13948
  %v0_13954 = phi i32 [ %v0_13954.pre, %dec_label_pc_1394c ], [ 0, %dec_label_pc_13948 ]
  %v0_13951 = phi i32 [ %v0_13951.pre, %dec_label_pc_1394c ], [ %v0_1394c, %dec_label_pc_13948 ]
  %v1_13951 = add i32 %v0_13951, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_13951, i32* %eax.global-to-local, align 8
  %v1_13954 = add i32 %v0_13954, 1
  store i32 %v1_13954, i32* %esi.global-to-local, align 4
  %v1_13957 = load i32, i32* @ebp, align 4
  %v12_13957 = icmp eq i32 %v1_13951, %v1_13957
  %v1_13959 = icmp eq i1 %v12_13957, false
  br i1 %v1_13959, label %dec_label_pc_13948, label %dec_label_pc_1395b

dec_label_pc_1395b:                               ; preds = %dec_label_pc_13951
  %v0_1395b = load i32, i32* @edi, align 4
  %v1_1395b = add i32 %v0_1395b, 4
  %v2_1395b = inttoptr i32 %v1_1395b to i32*
  %v3_1395b = load i32, i32* %v2_1395b, align 4
  store i32 %v3_1395b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1395e

dec_label_pc_1395e:                               ; preds = %dec_label_pc_13939.dec_label_pc_1395e_crit_edge, %dec_label_pc_1395b
  %v1_1396d = phi i32 [ %v1_1396d.pre, %dec_label_pc_13939.dec_label_pc_1395e_crit_edge ], [ %v0_1395b, %dec_label_pc_1395b ]
  %v0_1395e = phi i32 [ %v0_1395e.pre, %dec_label_pc_13939.dec_label_pc_1395e_crit_edge ], [ %v3_1395b, %dec_label_pc_1395b ]
  %v6_1395e = add i32 %v0_1395e, %v5_13920
  store i32 %v6_1395e, i32* %esi.global-to-local, align 4
  %v1_13966 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13966 = xor i32 %v1_13966, %tmp18
  %v3_13966 = icmp eq i32 %v2_13966, 0
  store i32 %v2_13966, i32* @eax, align 8
  %v2_1396d = add i32 %v1_1396d, 4
  %v3_1396d = inttoptr i32 %v2_1396d to i32*
  store i32 %v6_1395e, i32* %v3_1396d, align 4
  %v1_13970 = icmp eq i1 %v3_13966, false
  br i1 %v1_13970, label %bb, label %dec_label_pc_1395e.dec_label_pc_13972_crit_edge

dec_label_pc_1395e.dec_label_pc_13972_crit_edge:  ; preds = %dec_label_pc_1395e
  %v0_1397a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13972

bb:                                               ; preds = %dec_label_pc_1395e
  %v2_13970 = call i32 @function_139c1()
  store i32 %v2_13970, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13972

dec_label_pc_13972:                               ; preds = %dec_label_pc_1395e.dec_label_pc_13972_crit_edge, %bb
  %v0_1397a = phi i32 [ %v0_1397a.pre, %dec_label_pc_1395e.dec_label_pc_13972_crit_edge ], [ %v2_13970, %bb ]
  store i32 %v5_13920, i32* %ecx.global-to-local, align 4
  ret i32 %v0_1397a

; uselistorder directives
  uselistorder i32 %v1_13954, { 1, 0 }
  uselistorder i32 %v1_13951, { 0, 2, 1 }
  uselistorder i32 %v1_13931, { 1, 2, 0 }
  uselistorder i32 %v1_1392e.pre-phi, { 1, 0 }
  uselistorder i32 %v5_13920, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8 }
  uselistorder i32 ()* @function_139c1, { 1, 0 }
  uselistorder label %dec_label_pc_13972, { 1, 0 }
  uselistorder label %dec_label_pc_1395e, { 1, 0 }
  uselistorder label %dec_label_pc_13939, { 1, 0 }
  uselistorder label %dec_label_pc_1392e, { 1, 0 }
}

define i32 @function_13980() local_unnamed_addr {
dec_label_pc_13980:
  %v1_13980 = load i32, i32* @eax, align 8
  ret i32 %v1_13980
}

define i32 @function_13995() local_unnamed_addr {
dec_label_pc_13995:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_13995 = sub i32 %tmp93, ptrtoint (i1* @global_var_1.2399 to i32)
  %v18_13995 = inttoptr i32 %tmp93 to i32*
  store i32 %v3_13995, i32* %v18_13995, align 4
  %v0_13997 = load i32, i32* %edx.global-to-local, align 4
  %v1_13997 = and i32 %v0_13997, -65281
  %v2_13997 = or i32 %v1_13997, ptrtoint (i8* @global_var_5400.2531 to i32)
  store i32 %v2_13997, i32* %edx.global-to-local, align 4
  %v0_13999 = load i32, i32* %eax.global-to-local, align 8
  %v11_13999 = and i32 %v0_13999, -240
  store i32 %v11_13999, i32* %eax.global-to-local, align 8
  ret i32 %v11_13999

; uselistorder directives
  uselistorder i32 %v11_13999, { 1, 0 }
  uselistorder i32 %tmp93, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_5400.2531 to i32), { 1, 0 }
}

define i32 @function_139a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_139a0:
  %v0_139a0 = load i32, i32* @ebp, align 4
  %v1_139a0 = icmp eq i32 %v0_139a0, 0
  br i1 %v1_139a0, label %bb, label %dec_label_pc_139a0.dec_label_pc_139b8_crit_edge

dec_label_pc_139a0.dec_label_pc_139b8_crit_edge:  ; preds = %dec_label_pc_139a0
  %v0_139bc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_139b8

bb:                                               ; preds = %dec_label_pc_139a0
  %v3_139b2 = call i32 @function_13865(i32 0, i32 0)
  br label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %dec_label_pc_139a0.dec_label_pc_139b8_crit_edge, %bb
  %v0_139bc = phi i32 [ %v0_139bc.pre, %dec_label_pc_139a0.dec_label_pc_139b8_crit_edge ], [ %v3_139b2, %bb ]
  ret i32 %v0_139bc

; uselistorder directives
  uselistorder label %dec_label_pc_139b8, { 1, 0 }
}

define i32 @function_139c1() local_unnamed_addr {
dec_label_pc_139c1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_139c6() local_unnamed_addr {
dec_label_pc_139c6:
  %v3_139c6 = load i32, i32* @eax, align 8
  ret i32 %v3_139c6
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139e0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_139e0 = load i32, i32* %edi.global-to-local, align 4
  %v0_139e1 = load i32, i32* %esi.global-to-local, align 4
  %v0_139e2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_139ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_139fa = icmp eq i32 %arg2, 0
  %v1_139fc = icmp eq i1 %v1_139fa, false
  br i1 %v1_139fc, label %dec_label_pc_13a02, label %dec_label_pc_139fe

dec_label_pc_139fe:                               ; preds = %dec_label_pc_139e0
  %v4_139fe = call i32 @function_13a20(i32 %v0_139ea, i32 %v0_139e2, i32 %v0_139e1, i32 %v0_139e0)
  ret i32 %v4_139fe

dec_label_pc_13a02:                               ; preds = %dec_label_pc_139e0
  %v1_13a02 = add i32 %arg2, 12
  %v2_13a02 = inttoptr i32 %v1_13a02 to i32*
  %v3_13a02 = load i32, i32* %v2_13a02, align 4
  store i32 %v3_13a02, i32* @eax, align 8
  %v2_13a0c = call i32 @function_273c0(i32 %arg1, i32 %v3_13a02)
  %v1_13a11 = add i32 %arg2, 8
  %v2_13a11 = inttoptr i32 %v1_13a11 to i32*
  %v3_13a11 = load i32, i32* %v2_13a11, align 4
  store i32 %v3_13a11, i32* %esi.global-to-local, align 4
  ret i32 %v2_13a0c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13a20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13a20:
  %v1_13a24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13a24 = xor i32 %v1_13a24, %arg1
  %v3_13a24 = icmp eq i32 %v2_13a24, 0
  %v1_13a2b = icmp eq i1 %v3_13a24, false
  br i1 %v1_13a2b, label %dec_label_pc_13a34, label %dec_label_pc_13a2d

dec_label_pc_13a2d:                               ; preds = %dec_label_pc_13a20
  ret i32 %v2_13a24

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a20
  ret i32 %v2_13a24

; uselistorder directives
  uselistorder i32 %v2_13a24, { 1, 0, 2 }
}

define i32 @_ZNSt6vectorISt3setIiSt4lessIiESaIiEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13a40:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v0_13a40 = load i32, i32* %edi.global-to-local, align 4
  %v0_13a41 = load i32, i32* %esi.global-to-local, align 4
  %v0_13a42 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp104, i32* %edi.global-to-local, align 4
  %v1_13a56 = add i32 %tmp104, 4
  %v2_13a56 = inttoptr i32 %v1_13a56 to i32*
  %v3_13a56 = load i32, i32* %v2_13a56, align 4
  store i32 %v3_13a56, i32* %esi.global-to-local, align 4
  %v2_13a59 = load i32, i32* %arg1, align 4
  store i32 %v2_13a59, i32* %ebx.global-to-local, align 4
  %v12_13a5b = icmp eq i32 %v3_13a56, %v2_13a59
  br i1 %v12_13a5b, label %dec_label_pc_13a78, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a40, %dec_label_pc_13a60
  %v0_13a60 = phi i32 [ %v1_13a66, %dec_label_pc_13a60 ], [ %v2_13a59, %dec_label_pc_13a40 ]
  %v1_13a66 = add i32 %v0_13a60, 24
  store i32 %v1_13a66, i32* %ebx.global-to-local, align 4
  %v12_13a72 = icmp eq i32 %v3_13a56, %v1_13a66
  %v1_13a74 = icmp eq i1 %v12_13a72, false
  br i1 %v1_13a74, label %dec_label_pc_13a60, label %dec_label_pc_13a76

dec_label_pc_13a76:                               ; preds = %dec_label_pc_13a60
  %v2_13a76 = load i32, i32* %arg1, align 4
  store i32 %v2_13a76, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a76, %dec_label_pc_13a40
  %v0_13a78 = phi i32 [ %v2_13a76, %dec_label_pc_13a76 ], [ %v2_13a59, %dec_label_pc_13a40 ]
  %v1_13a78 = icmp eq i32 %v0_13a78, 0
  br i1 %v1_13a78, label %bb, label %dec_label_pc_13a7c

bb:                                               ; preds = %dec_label_pc_13a78
  %v1_13a7a = call i32 @function_13a98()
  br label %dec_label_pc_13a7c

dec_label_pc_13a7c:                               ; preds = %bb, %dec_label_pc_13a78
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb109, label %dec_label_pc_13a89

bb109:                                            ; preds = %dec_label_pc_13a7c
  br label %dec_label_pc_13a89

dec_label_pc_13a89:                               ; preds = %bb109, %dec_label_pc_13a7c
  store i32 %v0_13a42, i32* %ebx.global-to-local, align 4
  store i32 %v0_13a41, i32* %esi.global-to-local, align 4
  store i32 %v0_13a40, i32* %edi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13a66, { 0, 2, 1 }
  uselistorder i32 %v2_13a59, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_13a60, { 1, 0 }
}

define i32 @function_13a98() local_unnamed_addr {
dec_label_pc_13a98:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_13a9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13a9c = xor i32 %v1_13a9c, %tmp8
  %v3_13a9c = icmp eq i32 %v2_13a9c, 0
  store i32 %v2_13a9c, i32* @eax, align 8
  %v1_13aa3 = icmp eq i1 %v3_13a9c, false
  br i1 %v1_13aa3, label %bb, label %dec_label_pc_13aa5

bb:                                               ; preds = %dec_label_pc_13a98
  %v2_13aa3 = call i32 @function_13aac()
  br label %dec_label_pc_13aa5

dec_label_pc_13aa5:                               ; preds = %bb, %dec_label_pc_13a98
  %v0_13aab = phi i32 [ %v2_13aa3, %bb ], [ %v2_13a9c, %dec_label_pc_13a98 ]
  ret i32 %v0_13aab
}

define i32 @function_13aac() local_unnamed_addr {
dec_label_pc_13aac:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ac0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13ac0 = load i32, i32* %edi.global-to-local, align 4
  %v0_13ac1 = load i32, i32* %esi.global-to-local, align 4
  %v0_13ac2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_13aca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_13ada = icmp eq i32 %arg2, 0
  %v1_13adc = icmp eq i1 %v1_13ada, false
  br i1 %v1_13adc, label %dec_label_pc_13ae2, label %dec_label_pc_13ade

dec_label_pc_13ade:                               ; preds = %dec_label_pc_13ac0
  %v4_13ade = call i32 @function_13b00(i32 %v0_13aca, i32 %v0_13ac2, i32 %v0_13ac1, i32 %v0_13ac0)
  ret i32 %v4_13ade

dec_label_pc_13ae2:                               ; preds = %dec_label_pc_13ac0
  %v1_13ae2 = add i32 %arg2, 12
  %v2_13ae2 = inttoptr i32 %v1_13ae2 to i32*
  %v3_13ae2 = load i32, i32* %v2_13ae2, align 4
  %v1_13af1 = add i32 %arg2, 8
  %v2_13af1 = inttoptr i32 %v1_13af1 to i32*
  %v3_13af1 = load i32, i32* %v2_13af1, align 4
  store i32 %v3_13af1, i32* %esi.global-to-local, align 4
  ret i32 %v3_13ae2

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13b00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13b00:
  %v1_13b04 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b04 = xor i32 %v1_13b04, %arg1
  %v3_13b04 = icmp eq i32 %v2_13b04, 0
  %v1_13b0b = icmp eq i1 %v3_13b04, false
  br i1 %v1_13b0b, label %dec_label_pc_13b14, label %dec_label_pc_13b0d

dec_label_pc_13b0d:                               ; preds = %dec_label_pc_13b00
  ret i32 %v2_13b04

dec_label_pc_13b14:                               ; preds = %dec_label_pc_13b00
  ret i32 %v2_13b04

; uselistorder directives
  uselistorder i32 %v2_13b04, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13b20:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13b20 = load i32, i32* %edi.global-to-local, align 4
  %v0_13b21 = load i32, i32* %esi.global-to-local, align 4
  %v0_13b22 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_13b2a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_13b3a = icmp eq i32 %arg2, 0
  %v1_13b3c = icmp eq i1 %v1_13b3a, false
  br i1 %v1_13b3c, label %dec_label_pc_13b42, label %dec_label_pc_13b3e

dec_label_pc_13b3e:                               ; preds = %dec_label_pc_13b20
  %v4_13b3e = call i32 @function_13b60(i32 %v0_13b2a, i32 %v0_13b22, i32 %v0_13b21, i32 %v0_13b20)
  ret i32 %v4_13b3e

dec_label_pc_13b42:                               ; preds = %dec_label_pc_13b20
  %v1_13b42 = add i32 %arg2, 12
  %v2_13b42 = inttoptr i32 %v1_13b42 to i32*
  %v3_13b42 = load i32, i32* %v2_13b42, align 4
  store i32 %v3_13b42, i32* @eax, align 8
  %v2_13b4c = call i32 @function_27640(i32 %arg1, i32 %v3_13b42)
  %v1_13b51 = add i32 %arg2, 8
  %v2_13b51 = inttoptr i32 %v1_13b51 to i32*
  %v3_13b51 = load i32, i32* %v2_13b51, align 4
  store i32 %v3_13b51, i32* %esi.global-to-local, align 4
  ret i32 %v2_13b4c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13b60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13b60:
  %v1_13b64 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b64 = xor i32 %v1_13b64, %arg1
  %v3_13b64 = icmp eq i32 %v2_13b64, 0
  %v1_13b6b = icmp eq i1 %v3_13b64, false
  br i1 %v1_13b6b, label %dec_label_pc_13b74, label %dec_label_pc_13b6d

dec_label_pc_13b6d:                               ; preds = %dec_label_pc_13b60
  ret i32 %v2_13b64

dec_label_pc_13b74:                               ; preds = %dec_label_pc_13b60
  ret i32 %v2_13b64

; uselistorder directives
  uselistorder i32 %v2_13b64, { 1, 0, 2 }
}

define i32 @_ZN8CAddrManD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b80:
  %edi.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 0, i32* @eax, align 8
  %v1_13b96 = add i32 %arg1, 184
  %v2_13b96 = inttoptr i32 %v1_13b96 to i32*
  %v3_13b96 = load i32, i32* %v2_13b96, align 4
  store i32 %v3_13b96, i32* %edi.global-to-local, align 4
  %v1_13b9c = add i32 %arg1, 180
  %v2_13b9c = inttoptr i32 %v1_13b9c to i32*
  %v3_13b9c = load i32, i32* %v2_13b9c, align 4
  %v12_13ba2 = icmp eq i32 %v3_13b96, %v3_13b9c
  br i1 %v12_13ba2, label %dec_label_pc_13bc4, label %dec_label_pc_13ba8

dec_label_pc_13ba8:                               ; preds = %dec_label_pc_13b80, %dec_label_pc_13ba8
  %v0_13ba8 = phi i32 [ %v1_13bae, %dec_label_pc_13ba8 ], [ %v3_13b9c, %dec_label_pc_13b80 ]
  %v1_13ba8 = add i32 %v0_13ba8, 8
  %v2_13ba8 = inttoptr i32 %v1_13ba8 to i32*
  %v3_13ba8 = load i32, i32* %v2_13ba8, align 4
  store i32 %v3_13ba8, i32* @eax, align 8
  %v1_13bae = add i32 %v0_13ba8, 24
  %v2_13bb5 = call i32 @function_27560(i32 %v0_13ba8, i32 %v3_13ba8)
  store i32 %v2_13bb5, i32* @eax, align 8
  %v0_13bba = load i32, i32* %edi.global-to-local, align 4
  %v12_13bba = icmp eq i32 %v0_13bba, %v1_13bae
  %v1_13bbc = icmp eq i1 %v12_13bba, false
  br i1 %v1_13bbc, label %dec_label_pc_13ba8, label %dec_label_pc_13bbe

dec_label_pc_13bbe:                               ; preds = %dec_label_pc_13ba8
  %v0_13bbe = load i32, i32* @ebx, align 4
  %v1_13bbe = add i32 %v0_13bbe, 180
  %v2_13bbe = inttoptr i32 %v1_13bbe to i32*
  %v3_13bbe = load i32, i32* %v2_13bbe, align 4
  br label %dec_label_pc_13bc4

dec_label_pc_13bc4:                               ; preds = %dec_label_pc_13bbe, %dec_label_pc_13b80
  %v3_13bc85 = phi i32 [ %v2_13bb5, %dec_label_pc_13bbe ], [ 0, %dec_label_pc_13b80 ]
  %v0_13bc4 = phi i32 [ %v3_13bbe, %dec_label_pc_13bbe ], [ %v3_13b9c, %dec_label_pc_13b80 ]
  %v1_13bc4 = icmp eq i32 %v0_13bc4, 0
  br i1 %v1_13bc4, label %bb, label %dec_label_pc_13bc8

bb:                                               ; preds = %dec_label_pc_13bc4
  %v1_13bc6 = call i32 @function_13bd0()
  br label %dec_label_pc_13bc8

dec_label_pc_13bc8:                               ; preds = %bb, %dec_label_pc_13bc4
  %v3_13bc8 = phi i32 [ %v1_13bc6, %bb ], [ %v3_13bc85, %dec_label_pc_13bc4 ]
  ret i32 %v3_13bc8

; uselistorder directives
  uselistorder i32 %v0_13ba8, { 0, 2, 1 }
  uselistorder i32 %v3_13b9c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ba8, { 1, 0 }
}

define i32 @function_13bd0() local_unnamed_addr {
dec_label_pc_13bd0:
  %v0_13bd0 = load i32, i32* @ebx, align 4
  %v1_13bd0 = add i32 %v0_13bd0, 168
  %v2_13bd0 = inttoptr i32 %v1_13bd0 to i32*
  %v3_13bd0 = load i32, i32* %v2_13bd0, align 4
  store i32 %v3_13bd0, i32* @edi, align 4
  %v1_13bd6 = add i32 %v0_13bd0, 164
  %v2_13bd6 = inttoptr i32 %v1_13bd6 to i32*
  %v3_13bd6 = load i32, i32* %v2_13bd6, align 4
  store i32 %v3_13bd6, i32* @esi, align 4
  %v12_13bdc = icmp eq i32 %v3_13bd0, %v3_13bd6
  br i1 %v12_13bdc, label %bb, label %dec_label_pc_13be0

bb:                                               ; preds = %dec_label_pc_13bd0
  %v1_13bde = call i32 @function_13bfb()
  %v0_13be0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_13be0

dec_label_pc_13be0:                               ; preds = %bb, %dec_label_pc_13bd0
  %v0_13be0 = phi i32 [ %v0_13be0.pre, %bb ], [ %v3_13bd6, %dec_label_pc_13bd0 ]
  %v1_13be0 = inttoptr i32 %v0_13be0 to i32*
  %v2_13be0 = load i32, i32* %v1_13be0, align 4
  store i32 %v2_13be0, i32* @eax, align 8
  %v1_13be2 = icmp eq i32 %v2_13be0, 0
  br i1 %v1_13be2, label %bb3, label %dec_label_pc_13be6

bb3:                                              ; preds = %dec_label_pc_13be0
  %v1_13be4 = call i32 @function_13bee()
  br label %dec_label_pc_13be6

dec_label_pc_13be6:                               ; preds = %bb3, %dec_label_pc_13be0
  %v3_13be6 = phi i32 [ %v1_13be4, %bb3 ], [ %v2_13be0, %dec_label_pc_13be0 ]
  ret i32 %v3_13be6

; uselistorder directives
  uselistorder i32 %v3_13bd6, { 1, 0, 2 }
}

define i32 @function_13bee() local_unnamed_addr {
dec_label_pc_13bee:
  %v4_13bf5 = load i32, i32* @eax, align 8
  ret i32 %v4_13bf5
}

define i32 @function_13bfb() local_unnamed_addr {
dec_label_pc_13bfb:
  %v0_13bfb = load i32, i32* @esi, align 4
  %v1_13bfb = icmp eq i32 %v0_13bfb, 0
  br i1 %v1_13bfb, label %bb, label %dec_label_pc_13bfb.dec_label_pc_13bff_crit_edge

dec_label_pc_13bfb.dec_label_pc_13bff_crit_edge:  ; preds = %dec_label_pc_13bfb
  %v3_13bff.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13bff

bb:                                               ; preds = %dec_label_pc_13bfb
  %v1_13bfd = call i32 @function_13c07()
  br label %dec_label_pc_13bff

dec_label_pc_13bff:                               ; preds = %dec_label_pc_13bfb.dec_label_pc_13bff_crit_edge, %bb
  %v3_13bff = phi i32 [ %v3_13bff.pre, %dec_label_pc_13bfb.dec_label_pc_13bff_crit_edge ], [ %v1_13bfd, %bb ]
  ret i32 %v3_13bff

; uselistorder directives
  uselistorder label %dec_label_pc_13bff, { 1, 0 }
}

define i32 @function_13c07() local_unnamed_addr {
dec_label_pc_13c07:
  %v0_13c07 = load i32, i32* @ebx, align 4
  %v1_13c07 = add i32 %v0_13c07, 148
  %v2_13c07 = inttoptr i32 %v1_13c07 to i32*
  %v3_13c07 = load i32, i32* %v2_13c07, align 4
  %v1_13c0d = icmp eq i32 %v3_13c07, 0
  br i1 %v1_13c0d, label %bb, label %dec_label_pc_13c11

bb:                                               ; preds = %dec_label_pc_13c07
  %v1_13c0f = call i32 @function_13c19()
  br label %dec_label_pc_13c11

dec_label_pc_13c11:                               ; preds = %bb, %dec_label_pc_13c07
  %v3_13c11 = phi i32 [ %v1_13c0f, %bb ], [ %v3_13c07, %dec_label_pc_13c07 ]
  ret i32 %v3_13c11
}

define i32 @function_13c19() local_unnamed_addr {
dec_label_pc_13c19:
  %v0_13c19 = load i32, i32* @ebx, align 4
  %v1_13c19 = add i32 %v0_13c19, 132
  %v2_13c19 = inttoptr i32 %v1_13c19 to i32*
  %v3_13c19 = load i32, i32* %v2_13c19, align 4
  %v1_13c23 = add i32 %v0_13c19, ptrtoint (i32* @global_var_7c.2696 to i32)
  %sext = mul i32 %v1_13c23, 16777216
  %v1_13c29 = sdiv i32 %sext, 16777216
  %v3_13c29 = call i32 @function_276a0(i32 %v1_13c29, i32 %v3_13c19)
  %v0_13c2e = load i32, i32* @ebx, align 4
  %v1_13c2e = add i32 %v0_13c2e, 108
  %v2_13c2e = inttoptr i32 %v1_13c2e to i32*
  %v3_13c2e = load i32, i32* %v2_13c2e, align 4
  %v1_13c35 = add i32 %v0_13c2e, ptrtoint (i8* @global_var_64.2519 to i32)
  store i32 %v1_13c35, i32* @eax, align 8
  %sext2 = mul i32 %v1_13c35, 16777216
  %v1_13c3b = sdiv i32 %sext2, 16777216
  %v3_13c3b = call i32 @function_27640(i32 %v1_13c3b, i32 %v3_13c2e)
  %v0_13c40 = load i32, i32* @ebx, align 4
  %v1_13c40 = add i32 %v0_13c40, 84
  %v2_13c40 = inttoptr i32 %v1_13c40 to i32*
  %v3_13c40 = load i32, i32* %v2_13c40, align 4
  store i32 %v3_13c40, i32* @eax, align 8
  %v1_13c43 = icmp eq i32 %v3_13c40, 0
  br i1 %v1_13c43, label %bb, label %dec_label_pc_13c47

bb:                                               ; preds = %dec_label_pc_13c19
  %v1_13c45 = call i32 @function_13c4f()
  br label %dec_label_pc_13c47

dec_label_pc_13c47:                               ; preds = %bb, %dec_label_pc_13c19
  %v4_13c47 = phi i32 [ %v1_13c45, %bb ], [ %v3_13c40, %dec_label_pc_13c19 ]
  ret i32 %v4_13c47

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_27640, { 1, 0 }
  uselistorder i32 16777216, { 2, 0, 3, 1 }
}

define i32 @function_13c4f() local_unnamed_addr {
dec_label_pc_13c4f:
  %v3_13c4f = load i32, i32* @eax, align 8
  ret i32 %v3_13c4f
}

define i32 @function_13c56() local_unnamed_addr {
dec_label_pc_13c56:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_13c56 = add i32 %tmp91, -2094828096
  %v2_13c56 = inttoptr i32 %v1_13c56 to i32*
  %v3_13c56 = load i32, i32* %v2_13c56, align 4
  %v4_13c56 = add i32 %v3_13c56, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_13c56, i32* %v2_13c56, align 4
  %v0_13c5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13c5c
}

define i32 @function_13c65(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13c65:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_13c65 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13c65 = add i32 %v0_13c65, -1960938048
  %v2_13c65 = inttoptr i32 %v1_13c65 to i32*
  %v3_13c65 = load i32, i32* %v2_13c65, align 4
  %v4_13c65 = add i32 %v3_13c65, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_13c65, i32* %v2_13c65, align 4
  %v0_13c6c = load i32, i32* %eax.global-to-local, align 8
  %v11_13c6c = and i32 %v0_13c6c, -228
  store i32 %v11_13c6c, i32* %eax.global-to-local, align 8
  %v1_13c6e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13c6e = xor i32 %v1_13c6e, %v11_13c6c
  %v3_13c6e = icmp eq i32 %v2_13c6e, 0
  store i32 %v2_13c6e, i32* %eax.global-to-local, align 8
  %v1_13c75 = icmp eq i1 %v3_13c6e, false
  br i1 %v1_13c75, label %dec_label_pc_13c83, label %dec_label_pc_13c77

dec_label_pc_13c77:                               ; preds = %dec_label_pc_13c65
  ret i32 %v2_13c6e

dec_label_pc_13c83:                               ; preds = %dec_label_pc_13c65
  ret i32 %v2_13c6e

; uselistorder directives
  uselistorder i32 %v2_13c6e, { 1, 0, 2, 3 }
}

define i32 @function_13c7e() local_unnamed_addr {
dec_label_pc_13c7e:
  %v0_13c7e = call i32 @function_21d2a()
  ret i32 %v0_13c7e
}

define i32 @_ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13cb0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_13cb0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v2_13cc4 = load i32, i32* %arg1, align 4
  %v1_13cc6 = icmp eq i32 %v2_13cc4, 0
  br i1 %v1_13cc6, label %bb, label %dec_label_pc_13cca

bb:                                               ; preds = %dec_label_pc_13cb0
  %v0_13cb8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13cc8 = call i32 @function_13cf8(i32 %v0_13cb8)
  %v0_13cca.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_13cca

dec_label_pc_13cca:                               ; preds = %bb, %dec_label_pc_13cb0
  %v0_13cca = phi i32 [ %v0_13cca.pre, %bb ], [ %tmp101, %dec_label_pc_13cb0 ]
  %v1_13ccd = add i32 %v0_13cca, 20
  %v2_13ccd = inttoptr i32 %v1_13ccd to i32*
  %v3_13ccd = load i32, i32* %v2_13ccd, align 4
  store i32 %v3_13ccd, i32* @eax, align 8
  %v0_13cd3 = call i32 @function_13d70()
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb105, label %dec_label_pc_13ce5

bb105:                                            ; preds = %dec_label_pc_13cca
  br label %dec_label_pc_13ce5

dec_label_pc_13ce5:                               ; preds = %bb105, %dec_label_pc_13cca
  %v0_13ce5 = load i32, i32* @ebx, align 4
  %v1_13ce5 = inttoptr i32 %v0_13ce5 to i32*
  %v2_13ce5 = load i32, i32* %v1_13ce5, align 4
  store i32 %v0_13cb0, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13ce5

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_13cf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cf8:
  %v1_13cfc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13cfc = xor i32 %v1_13cfc, %arg1
  %v3_13cfc = icmp eq i32 %v2_13cfc, 0
  store i32 %v2_13cfc, i32* @eax, align 8
  %v1_13d03 = icmp eq i1 %v3_13cfc, false
  br i1 %v1_13d03, label %bb, label %dec_label_pc_13d05

bb:                                               ; preds = %dec_label_pc_13cf8
  %v2_13d03 = call i32 @function_13d0a()
  br label %dec_label_pc_13d05

dec_label_pc_13d05:                               ; preds = %bb, %dec_label_pc_13cf8
  %v0_13d09 = phi i32 [ %v2_13d03, %bb ], [ %v2_13cfc, %dec_label_pc_13cf8 ]
  ret i32 %v0_13d09
}

define i32 @function_13d0a() local_unnamed_addr {
dec_label_pc_13d0a:
  %v1_13d0a = load i32, i32* @eax, align 8
  ret i32 %v1_13d0a
}

define i32 @_ZNSt11_Deque_baseI11CNetMessageSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13d20:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_13d20 = load i32, i32* %edi.global-to-local, align 4
  %v0_13d21 = load i32, i32* %esi.global-to-local, align 4
  %v0_13d22 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %edi.global-to-local, align 4
  %v0_13d2a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d36 = load i32, i32* %arg1, align 4
  store i32 %v2_13d36, i32* @eax, align 8
  %v1_13d38 = icmp eq i32 %v2_13d36, 0
  br i1 %v1_13d38, label %bb, label %dec_label_pc_13d3c

bb:                                               ; preds = %dec_label_pc_13d20
  %v5_13d3a = call i32 @function_13d80(i32 %v0_13d2a, i32 %v0_13d22, i32 %v0_13d21, i32 %v0_13d20)
  store i32 %v5_13d3a, i32* @eax, align 8
  %v0_13d3c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_13d3c

dec_label_pc_13d3c:                               ; preds = %bb, %dec_label_pc_13d20
  %v0_13d3c = phi i32 [ %v0_13d3c.pre, %bb ], [ %tmp101, %dec_label_pc_13d20 ]
  %v1_13d3c = add i32 %v0_13d3c, 36
  %v2_13d3c = inttoptr i32 %v1_13d3c to i32*
  %v3_13d3c = load i32, i32* %v2_13d3c, align 4
  store i32 %v3_13d3c, i32* %esi.global-to-local, align 4
  %v1_13d3f = add i32 %v0_13d3c, 20
  %v2_13d3f = inttoptr i32 %v1_13d3f to i32*
  %v3_13d3f = load i32, i32* %v2_13d3f, align 4
  store i32 %v3_13d3f, i32* %ebx.global-to-local, align 4
  %v1_13d42 = add i32 %v3_13d3c, 4
  store i32 %v1_13d42, i32* %esi.global-to-local, align 4
  %tmp108 = icmp ugt i32 %v1_13d42, %v3_13d3f
  br i1 %tmp108, label %dec_label_pc_13d49, label %bb106

bb106:                                            ; preds = %dec_label_pc_13d3c
  %v3_13d47 = call i32 @function_13d63()
  %v0_13d50.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13d49

dec_label_pc_13d49:                               ; preds = %dec_label_pc_13d3c, %bb106
  %v0_13d50 = phi i32 [ %v0_13d50.pre, %bb106 ], [ %v3_13d3f, %dec_label_pc_13d3c ]
  %v1_13d50 = inttoptr i32 %v0_13d50 to i32*
  %v2_13d50 = load i32, i32* %v1_13d50, align 4
  %v1_13d52 = add i32 %v0_13d50, 4
  store i32 %v1_13d52, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13d50

; uselistorder directives
  uselistorder i32 %v0_13d50, { 1, 0 }
  uselistorder i32 %v3_13d3f, { 1, 0, 2 }
  uselistorder i32 %v0_13d3c, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13d49, { 1, 0 }
}

define i32 @function_13d63() local_unnamed_addr {
dec_label_pc_13d63:
  %v0_13d6e = load i32, i32* @eax, align 8
  ret i32 %v0_13d6e
}

define i32 @function_13d70() local_unnamed_addr {
dec_label_pc_13d70:
  %v5_13d79 = load i32, i32* @eax, align 8
  ret i32 %v5_13d79
}

define i32 @function_13d80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13d80:
  %v1_13d84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d84 = xor i32 %v1_13d84, %arg1
  %v3_13d84 = icmp eq i32 %v2_13d84, 0
  store i32 %v2_13d84, i32* @eax, align 8
  %v1_13d8b = icmp eq i1 %v3_13d84, false
  br i1 %v1_13d8b, label %bb, label %dec_label_pc_13d8d

bb:                                               ; preds = %dec_label_pc_13d80
  %v2_13d8b = call i32 @function_13d94()
  br label %dec_label_pc_13d8d

dec_label_pc_13d8d:                               ; preds = %bb, %dec_label_pc_13d80
  %v0_13d93 = phi i32 [ %v2_13d8b, %bb ], [ %v2_13d84, %dec_label_pc_13d80 ]
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v0_13d93
}

define i32 @function_13d94() local_unnamed_addr {
dec_label_pc_13d94:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CAddressS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13da0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13da0 = load i32, i32* %edi.global-to-local, align 4
  %v0_13da1 = load i32, i32* %esi.global-to-local, align 4
  %v0_13da2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_13daa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_13dba = icmp eq i32 %arg2, 0
  %v1_13dbc = icmp eq i1 %v1_13dba, false
  br i1 %v1_13dbc, label %dec_label_pc_13dc2, label %dec_label_pc_13dbe

dec_label_pc_13dbe:                               ; preds = %dec_label_pc_13da0
  %v4_13dbe = call i32 @function_13de0(i32 %v0_13daa, i32 %v0_13da2, i32 %v0_13da1, i32 %v0_13da0)
  ret i32 %v4_13dbe

dec_label_pc_13dc2:                               ; preds = %dec_label_pc_13da0
  %v1_13dc2 = add i32 %arg2, 12
  %v2_13dc2 = inttoptr i32 %v1_13dc2 to i32*
  %v3_13dc2 = load i32, i32* %v2_13dc2, align 4
  store i32 %v3_13dc2, i32* @eax, align 8
  %v2_13dcc = call i32 @_ZZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEEEEdeEvE19__PRETTY_FUNCTION__(i32 %arg1, i32 %v3_13dc2)
  %v1_13dd1 = add i32 %arg2, 8
  %v2_13dd1 = inttoptr i32 %v1_13dd1 to i32*
  %v3_13dd1 = load i32, i32* %v2_13dd1, align 4
  store i32 %v3_13dd1, i32* %esi.global-to-local, align 4
  ret i32 %v2_13dcc

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13de0:
  %v1_13de4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13de4 = xor i32 %v1_13de4, %arg1
  %v3_13de4 = icmp eq i32 %v2_13de4, 0
  %v1_13deb = icmp eq i1 %v3_13de4, false
  br i1 %v1_13deb, label %dec_label_pc_13df4, label %dec_label_pc_13ded

dec_label_pc_13ded:                               ; preds = %dec_label_pc_13de0
  ret i32 %v2_13de4

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13de0
  ret i32 %v2_13de4

; uselistorder directives
  uselistorder i32 %v2_13de4, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13e00:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13e00 = load i32, i32* %edi.global-to-local, align 4
  %v0_13e01 = load i32, i32* %esi.global-to-local, align 4
  %v0_13e02 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_13e0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_13e1a = icmp eq i32 %arg2, 0
  %v1_13e1c = icmp eq i1 %v1_13e1a, false
  br i1 %v1_13e1c, label %dec_label_pc_13e22, label %dec_label_pc_13e1e

dec_label_pc_13e1e:                               ; preds = %dec_label_pc_13e00
  %v4_13e1e = call i32 @function_13e40(i32 %v0_13e0a, i32 %v0_13e02, i32 %v0_13e01, i32 %v0_13e00)
  ret i32 %v4_13e1e

dec_label_pc_13e22:                               ; preds = %dec_label_pc_13e00
  %v1_13e22 = add i32 %arg2, 12
  %v2_13e22 = inttoptr i32 %v1_13e22 to i32*
  %v3_13e22 = load i32, i32* %v2_13e22, align 4
  store i32 %v3_13e22, i32* @eax, align 8
  %v2_13e2c = call i32 @function_27c00(i32 %arg1, i32 %v3_13e22)
  %v1_13e31 = add i32 %arg2, 8
  %v2_13e31 = inttoptr i32 %v1_13e31 to i32*
  %v3_13e31 = load i32, i32* %v2_13e31, align 4
  store i32 %v3_13e31, i32* %esi.global-to-local, align 4
  ret i32 %v2_13e2c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13e40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13e40:
  %v1_13e44 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13e44 = xor i32 %v1_13e44, %arg1
  %v3_13e44 = icmp eq i32 %v2_13e44, 0
  %v1_13e4b = icmp eq i1 %v3_13e44, false
  br i1 %v1_13e4b, label %dec_label_pc_13e54, label %dec_label_pc_13e4d

dec_label_pc_13e4d:                               ; preds = %dec_label_pc_13e40
  ret i32 %v2_13e44

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e40
  ret i32 %v2_13e44

; uselistorder directives
  uselistorder i32 %v2_13e44, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13e60:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13e60 = load i32, i32* %edi.global-to-local, align 4
  %v0_13e61 = load i32, i32* %esi.global-to-local, align 4
  %v0_13e62 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_13e6a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_13e7a = icmp eq i32 %arg2, 0
  %v1_13e7c = icmp eq i1 %v1_13e7a, false
  br i1 %v1_13e7c, label %dec_label_pc_13e82, label %dec_label_pc_13e7e

dec_label_pc_13e7e:                               ; preds = %dec_label_pc_13e60
  %v4_13e7e = call i32 @function_13ea0(i32 %v0_13e6a, i32 %v0_13e62, i32 %v0_13e61, i32 %v0_13e60)
  ret i32 %v4_13e7e

dec_label_pc_13e82:                               ; preds = %dec_label_pc_13e60
  %v1_13e82 = add i32 %arg2, 12
  %v2_13e82 = inttoptr i32 %v1_13e82 to i32*
  %v3_13e82 = load i32, i32* %v2_13e82, align 4
  store i32 %v3_13e82, i32* @eax, align 8
  %v2_13e8c = call i32 @function_27cc0(i32 %arg1, i32 %v3_13e82)
  %v1_13e91 = add i32 %arg2, 8
  %v2_13e91 = inttoptr i32 %v1_13e91 to i32*
  %v3_13e91 = load i32, i32* %v2_13e91, align 4
  store i32 %v3_13e91, i32* %esi.global-to-local, align 4
  ret i32 %v2_13e8c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13ea0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13ea0:
  %v1_13ea4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13ea4 = xor i32 %v1_13ea4, %arg1
  %v3_13ea4 = icmp eq i32 %v2_13ea4, 0
  %v1_13eab = icmp eq i1 %v3_13ea4, false
  br i1 %v1_13eab, label %dec_label_pc_13eb4, label %dec_label_pc_13ead

dec_label_pc_13ead:                               ; preds = %dec_label_pc_13ea0
  ret i32 %v2_13ea4

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13ea0
  ret i32 %v2_13ea4

; uselistorder directives
  uselistorder i32 %v2_13ea4, { 1, 0, 2 }
}

define i32 @_ZN6mrusetI4CInvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ec0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13ec0 = load i32, i32* %edi.global-to-local, align 4
  %v0_13ec1 = load i32, i32* %esi.global-to-local, align 4
  %v0_13ec2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_13eca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_13ed6 = add i32 %arg1, 24
  %v2_13ed6 = inttoptr i32 %v1_13ed6 to i32*
  %v3_13ed6 = load i32, i32* %v2_13ed6, align 4
  store i32 %v3_13ed6, i32* @eax, align 8
  %v1_13ed9 = icmp eq i32 %v3_13ed6, 0
  br i1 %v1_13ed9, label %bb, label %dec_label_pc_13edd

bb:                                               ; preds = %dec_label_pc_13ec0
  %v5_13edb = call i32 @function_13f0c(i32 %v0_13eca, i32 %v0_13ec2, i32 %v0_13ec1, i32 %v0_13ec0)
  store i32 %v5_13edb, i32* @eax, align 8
  %v0_13edd.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_13edd

dec_label_pc_13edd:                               ; preds = %bb, %dec_label_pc_13ec0
  %v0_13edd = phi i32 [ %v0_13edd.pre, %bb ], [ %arg1, %dec_label_pc_13ec0 ]
  %v1_13edd = add i32 %v0_13edd, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_13edd = inttoptr i32 %v1_13edd to i32*
  %v3_13edd = load i32, i32* %v2_13edd, align 4
  store i32 %v3_13edd, i32* %esi.global-to-local, align 4
  %v1_13ee0 = add i32 %v0_13edd, 44
  %v2_13ee0 = inttoptr i32 %v1_13ee0 to i32*
  %v3_13ee0 = load i32, i32* %v2_13ee0, align 4
  store i32 %v3_13ee0, i32* %ebx.global-to-local, align 4
  %v1_13ee3 = add i32 %v3_13edd, 4
  store i32 %v1_13ee3, i32* %esi.global-to-local, align 4
  %tmp107 = icmp ugt i32 %v1_13ee3, %v3_13ee0
  br i1 %tmp107, label %dec_label_pc_13eea, label %bb105

bb105:                                            ; preds = %dec_label_pc_13edd
  %v3_13ee8 = call i32 @function_13f04()
  %v0_13ef0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13eea

dec_label_pc_13eea:                               ; preds = %dec_label_pc_13edd, %bb105
  %v0_13ef0 = phi i32 [ %v0_13ef0.pre, %bb105 ], [ %v3_13ee0, %dec_label_pc_13edd ]
  %v1_13ef0 = inttoptr i32 %v0_13ef0 to i32*
  %v2_13ef0 = load i32, i32* %v1_13ef0, align 4
  %v1_13ef2 = add i32 %v0_13ef0, 4
  store i32 %v1_13ef2, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13ef0

; uselistorder directives
  uselistorder i32 %v0_13ef0, { 1, 0 }
  uselistorder i32 %v3_13ee0, { 1, 0, 2 }
  uselistorder i32 %v0_13edd, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13eea, { 1, 0 }
}

define i32 @function_13f04() local_unnamed_addr {
dec_label_pc_13f04:
  %v3_13f04 = load i32, i32* @eax, align 8
  ret i32 %v3_13f04
}

define i32 @function_13f0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13f0c:
  %v0_13f0c = load i32, i32* @edi, align 4
  %v1_13f0c = add i32 %v0_13f0c, 8
  %v2_13f0c = inttoptr i32 %v1_13f0c to i32*
  %v3_13f0c = load i32, i32* %v2_13f0c, align 4
  store i32 %v3_13f0c, i32* @eax, align 8
  %v2_13f16 = call i32 @function_27d20(i32 %v0_13f0c, i32 %v3_13f0c)
  %v1_13f1f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13f1f = xor i32 %v1_13f1f, %arg1
  %v3_13f1f = icmp eq i32 %v2_13f1f, 0
  %v1_13f26 = icmp eq i1 %v3_13f1f, false
  br i1 %v1_13f26, label %dec_label_pc_13f2f, label %dec_label_pc_13f28

dec_label_pc_13f28:                               ; preds = %dec_label_pc_13f0c
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v2_13f1f

dec_label_pc_13f2f:                               ; preds = %dec_label_pc_13f0c
  ret i32 %v2_13f1f

; uselistorder directives
  uselistorder i32 %v2_13f1f, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeIxSt4pairIKx4CInvESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13f40:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13f40 = load i32, i32* %edi.global-to-local, align 4
  %v0_13f41 = load i32, i32* %esi.global-to-local, align 4
  %v0_13f42 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_13f4a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_13f5a = icmp eq i32 %arg2, 0
  %v1_13f5c = icmp eq i1 %v1_13f5a, false
  br i1 %v1_13f5c, label %dec_label_pc_13f62, label %dec_label_pc_13f5e

dec_label_pc_13f5e:                               ; preds = %dec_label_pc_13f40
  %v4_13f5e = call i32 @function_13f80(i32 %v0_13f4a, i32 %v0_13f42, i32 %v0_13f41, i32 %v0_13f40)
  ret i32 %v4_13f5e

dec_label_pc_13f62:                               ; preds = %dec_label_pc_13f40
  %v1_13f62 = add i32 %arg2, 12
  %v2_13f62 = inttoptr i32 %v1_13f62 to i32*
  %v3_13f62 = load i32, i32* %v2_13f62, align 4
  store i32 %v3_13f62, i32* @eax, align 8
  %v2_13f6c = call i32 @function_27e80(i32 %arg1, i32 %v3_13f62)
  %v1_13f71 = add i32 %arg2, 8
  %v2_13f71 = inttoptr i32 %v1_13f71 to i32*
  %v3_13f71 = load i32, i32* %v2_13f71, align 4
  store i32 %v3_13f71, i32* %esi.global-to-local, align 4
  ret i32 %v2_13f6c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13f80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13f80:
  %v1_13f84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13f84 = xor i32 %v1_13f84, %arg1
  %v3_13f84 = icmp eq i32 %v2_13f84, 0
  %v1_13f8b = icmp eq i1 %v3_13f84, false
  br i1 %v1_13f8b, label %dec_label_pc_13f94, label %dec_label_pc_13f8d

dec_label_pc_13f8d:                               ; preds = %dec_label_pc_13f80
  ret i32 %v2_13f84

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f80
  ret i32 %v2_13f84

; uselistorder directives
  uselistorder i32 %v2_13f84, { 1, 0, 2 }
}

define i32 @_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13fa0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %v0_13fa2 = load i32, i32* @esi, align 4
  %v0_13fa3 = load i32, i32* @ebx, align 4
  store i32 %tmp27, i32* @esi, align 4
  %v0_13fab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  %v1_13fbf = add i32 %tmp27, 4
  %v2_13fbf = inttoptr i32 %v1_13fbf to i32*
  %v3_13fbf = load i32, i32* %v2_13fbf, align 4
  store i32 %v3_13fbf, i32* %eax.global-to-local, align 8
  %v2_13fc2 = add i32 %tmp27, 8
  %v3_13fc2 = inttoptr i32 %v2_13fc2 to i32*
  %v4_13fc2 = load i32, i32* %v3_13fc2, align 4
  %v15_13fc2 = icmp eq i32 %v3_13fbf, %v4_13fc2
  br i1 %v15_13fc2, label %dec_label_pc_14130, label %dec_label_pc_13fcb

dec_label_pc_13fcb:                               ; preds = %dec_label_pc_13fa0
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_13fcd = icmp eq i32 %v3_13fbf, 0
  br i1 %v1_13fcd, label %dec_label_pc_1400f, label %dec_label_pc_13fd1

dec_label_pc_13fd1:                               ; preds = %dec_label_pc_13fcb
  %v1_13fd1 = add i32 %v3_13fbf, -40
  %v2_13fd1 = inttoptr i32 %v1_13fd1 to i32*
  %v3_13fd1 = load i32, i32* %v2_13fd1, align 4
  store i32 %v3_13fd1, i32* %edx.global-to-local, align 4
  %v2_13fd4 = inttoptr i32 %v3_13fbf to i32*
  store i32 %v3_13fd1, i32* %v2_13fd4, align 4
  %v1_13fd6 = add i32 %v3_13fbf, -36
  %v2_13fd6 = inttoptr i32 %v1_13fd6 to i32*
  %v3_13fd6 = load i32, i32* %v2_13fd6, align 4
  store i32 %v3_13fd6, i32* %edx.global-to-local, align 4
  %v2_13fd9 = add i32 %v3_13fbf, 4
  %v3_13fd9 = inttoptr i32 %v2_13fd9 to i32*
  store i32 %v3_13fd6, i32* %v3_13fd9, align 4
  %v1_13fdc = add i32 %v3_13fbf, -32
  %v2_13fdc = inttoptr i32 %v1_13fdc to i32*
  %v3_13fdc = load i32, i32* %v2_13fdc, align 4
  store i32 %v3_13fdc, i32* %edx.global-to-local, align 4
  %v2_13fdf = add i32 %v3_13fbf, 8
  %v3_13fdf = inttoptr i32 %v2_13fdf to i32*
  store i32 %v3_13fdc, i32* %v3_13fdf, align 4
  %v1_13fe2 = add i32 %v3_13fbf, -28
  %v2_13fe2 = inttoptr i32 %v1_13fe2 to i32*
  %v3_13fe2 = load i32, i32* %v2_13fe2, align 4
  store i32 %v3_13fe2, i32* %edx.global-to-local, align 4
  %v2_13fe5 = add i32 %v3_13fbf, 12
  %v3_13fe5 = inttoptr i32 %v2_13fe5 to i32*
  store i32 %v3_13fe2, i32* %v3_13fe5, align 4
  %v1_13fe8 = add i32 %v3_13fbf, -24
  %v2_13fe8 = inttoptr i32 %v1_13fe8 to i32*
  %v3_13fe8 = load i32, i32* %v2_13fe8, align 4
  store i32 %v3_13fe8, i32* %edx.global-to-local, align 4
  %v2_13feb = add i32 %v3_13fbf, 16
  %v3_13feb = inttoptr i32 %v2_13feb to i32*
  store i32 %v3_13fe8, i32* %v3_13feb, align 4
  %v1_13fee = add i32 %v3_13fbf, -20
  %v2_13fee = inttoptr i32 %v1_13fee to i32*
  %v3_13fee = load i32, i32* %v2_13fee, align 4
  store i32 %v3_13fee, i32* %edx.global-to-local, align 4
  %v2_13ff1 = add i32 %v3_13fbf, 20
  %v3_13ff1 = inttoptr i32 %v2_13ff1 to i32*
  store i32 %v3_13fee, i32* %v3_13ff1, align 4
  %v1_13ff4 = add i32 %v3_13fbf, -16
  %v2_13ff4 = inttoptr i32 %v1_13ff4 to i32*
  %v3_13ff4 = load i32, i32* %v2_13ff4, align 4
  store i32 %v3_13ff4, i32* %edx.global-to-local, align 4
  %v2_13ff7 = add i32 %v3_13fbf, 24
  %v3_13ff7 = inttoptr i32 %v2_13ff7 to i32*
  store i32 %v3_13ff4, i32* %v3_13ff7, align 4
  %v1_13ffa = add i32 %v3_13fbf, -12
  %v2_13ffa = inttoptr i32 %v1_13ffa to i32*
  %v3_13ffa = load i32, i32* %v2_13ffa, align 4
  store i32 %v3_13ffa, i32* %edx.global-to-local, align 4
  %v2_13ffd = add i32 %v3_13fbf, 28
  %v3_13ffd = inttoptr i32 %v2_13ffd to i32*
  store i32 %v3_13ffa, i32* %v3_13ffd, align 4
  %v1_14000 = add i32 %v3_13fbf, -8
  %v2_14000 = inttoptr i32 %v1_14000 to i32*
  %v3_14000 = load i32, i32* %v2_14000, align 4
  store i32 %v3_14000, i32* %edx.global-to-local, align 4
  %v2_14003 = add i32 %v3_13fbf, 32
  %v3_14003 = inttoptr i32 %v2_14003 to i32*
  store i32 %v3_14000, i32* %v3_14003, align 4
  %v1_14006 = add i32 %v3_13fbf, -4
  %v2_14006 = inttoptr i32 %v1_14006 to i32*
  %v3_14006 = load i32, i32* %v2_14006, align 4
  store i32 %v3_14006, i32* %edx.global-to-local, align 4
  %v2_14009 = add i32 %v3_13fbf, 36
  %v3_14009 = inttoptr i32 %v2_14009 to i32*
  store i32 %v3_14006, i32* %v3_14009, align 4
  %v0_1400c = load i32, i32* @esi, align 4
  %v1_1400c = add i32 %v0_1400c, 4
  %v2_1400c = inttoptr i32 %v1_1400c to i32*
  %v3_1400c = load i32, i32* %v2_1400c, align 4
  store i32 %v3_1400c, i32* %edx.global-to-local, align 4
  %phitmp = add i32 %v3_1400c, 40
  br label %dec_label_pc_1400f

dec_label_pc_1400f:                               ; preds = %dec_label_pc_13fd1, %dec_label_pc_13fcb
  %v1_14012 = phi i32 [ %v0_1400c, %dec_label_pc_13fd1 ], [ %tmp27, %dec_label_pc_13fcb ]
  %v0_1400f = phi i32 [ %phitmp, %dec_label_pc_13fd1 ], [ 40, %dec_label_pc_13fcb ]
  store i32 %v0_1400f, i32* %eax.global-to-local, align 8
  %v2_14012 = add i32 %v1_14012, 4
  %v3_14012 = inttoptr i32 %v2_14012 to i32*
  store i32 %v0_1400f, i32* %v3_14012, align 4
  %v0_14015 = load i32, i32* @ebp, align 4
  %v1_14015 = inttoptr i32 %v0_14015 to i32*
  %v2_14015 = load i32, i32* %v1_14015, align 4
  store i32 %v2_14015, i32* %eax.global-to-local, align 8
  %v0_14018 = load i32, i32* %edx.global-to-local, align 4
  %v1_14018 = add i32 %v0_14018, -40
  store i32 %v1_14018, i32* %ecx.global-to-local, align 4
  %v1_1401d = load i32, i32* @ebx, align 4
  %v2_1401d = sub i32 %v1_14018, %v1_1401d
  %v2_1401f = sdiv i32 %v2_1401d, 8
  store i32 %v2_1401f, i32* %esi.global-to-local, align 4
  %v1_14026 = add i32 %v0_14015, 4
  %v2_14026 = inttoptr i32 %v1_14026 to i32*
  %v3_14026 = load i32, i32* %v2_14026, align 4
  store i32 %v3_14026, i32* %eax.global-to-local, align 8
  %v3_14029 = mul i32 %v2_1401f, -858993459
  store i32 %v3_14029, i32* %esi.global-to-local, align 4
  %v1_14033 = add i32 %v0_14015, 8
  %v2_14033 = inttoptr i32 %v1_14033 to i32*
  %v3_14033 = load i32, i32* %v2_14033, align 4
  store i32 %v3_14033, i32* %eax.global-to-local, align 8
  %v1_1403c = add i32 %v0_14015, 12
  %v2_1403c = inttoptr i32 %v1_1403c to i32*
  %v3_1403c = load i32, i32* %v2_1403c, align 4
  store i32 %v3_1403c, i32* %eax.global-to-local, align 8
  %v1_14043 = add i32 %v0_14015, 16
  %v2_14043 = inttoptr i32 %v1_14043 to i32*
  %v3_14043 = load i32, i32* %v2_14043, align 4
  store i32 %v3_14043, i32* %eax.global-to-local, align 8
  %v1_1404a = add i32 %v0_14015, 20
  %v2_1404a = inttoptr i32 %v1_1404a to i32*
  %v3_1404a = load i32, i32* %v2_1404a, align 4
  store i32 %v3_1404a, i32* %eax.global-to-local, align 8
  %v1_14051 = add i32 %v0_14015, 24
  %v2_14051 = inttoptr i32 %v1_14051 to i32*
  %v3_14051 = load i32, i32* %v2_14051, align 4
  store i32 %v3_14051, i32* %eax.global-to-local, align 8
  %v1_14058 = add i32 %v0_14015, 28
  %v2_14058 = inttoptr i32 %v1_14058 to i32*
  %v3_14058 = load i32, i32* %v2_14058, align 4
  store i32 %v3_14058, i32* %eax.global-to-local, align 8
  %v1_1405f = add i32 %v0_14015, 32
  %v2_1405f = inttoptr i32 %v1_1405f to i32*
  %v3_1405f = load i32, i32* %v2_1405f, align 4
  store i32 %v3_1405f, i32* %eax.global-to-local, align 8
  %v1_14066 = add i32 %v0_14015, 36
  %v2_14066 = inttoptr i32 %v1_14066 to i32*
  %v3_14066 = load i32, i32* %v2_14066, align 4
  store i32 %v3_14066, i32* %eax.global-to-local, align 8
  %tmp33 = icmp slt i32 %v3_14029, 1
  br i1 %tmp33, label %dec_label_pc_140d0, label %dec_label_pc_1406f

dec_label_pc_1406f:                               ; preds = %dec_label_pc_1400f
  store i32 0, i32* %eax.global-to-local, align 8
  store i32 %v3_14029, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %dec_label_pc_14078.dec_label_pc_14078_crit_edge, %dec_label_pc_1406f
  %v1_1407c = phi i32 [ %v1_1407c.pre, %dec_label_pc_14078.dec_label_pc_14078_crit_edge ], [ %v0_14018, %dec_label_pc_1406f ]
  %v2_1407c = phi i32 [ %v1_140c8, %dec_label_pc_14078.dec_label_pc_14078_crit_edge ], [ 0, %dec_label_pc_1406f ]
  %v0_14078 = phi i32 [ %v0_14078.pre, %dec_label_pc_14078.dec_label_pc_14078_crit_edge ], [ %v1_14018, %dec_label_pc_1406f ]
  %v3_14078 = add i32 %v2_1407c, -40
  %v4_14078 = add i32 %v3_14078, %v0_14078
  %v5_14078 = inttoptr i32 %v4_14078 to i32*
  %v6_14078 = load i32, i32* %v5_14078, align 4
  %v4_1407c = add i32 %v1_1407c, -40
  %v5_1407c = add i32 %v4_1407c, %v2_1407c
  %v6_1407c = inttoptr i32 %v5_1407c to i32*
  store i32 %v6_14078, i32* %v6_1407c, align 4
  %v0_14080 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14080 = load i32, i32* %eax.global-to-local, align 8
  %v3_14080 = add i32 %v0_14080, -36
  %v4_14080 = add i32 %v3_14080, %v1_14080
  %v5_14080 = inttoptr i32 %v4_14080 to i32*
  %v6_14080 = load i32, i32* %v5_14080, align 4
  %v1_14084 = load i32, i32* %edx.global-to-local, align 4
  %v4_14084 = add i32 %v1_14080, -36
  %v5_14084 = add i32 %v4_14084, %v1_14084
  %v6_14084 = inttoptr i32 %v5_14084 to i32*
  store i32 %v6_14080, i32* %v6_14084, align 4
  %v0_14088 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14088 = load i32, i32* %eax.global-to-local, align 8
  %v3_14088 = add i32 %v0_14088, -32
  %v4_14088 = add i32 %v3_14088, %v1_14088
  %v5_14088 = inttoptr i32 %v4_14088 to i32*
  %v6_14088 = load i32, i32* %v5_14088, align 4
  %v1_1408c = load i32, i32* %edx.global-to-local, align 4
  %v4_1408c = add i32 %v1_14088, -32
  %v5_1408c = add i32 %v4_1408c, %v1_1408c
  %v6_1408c = inttoptr i32 %v5_1408c to i32*
  store i32 %v6_14088, i32* %v6_1408c, align 4
  %v0_14090 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14090 = load i32, i32* %eax.global-to-local, align 8
  %v3_14090 = add i32 %v0_14090, -28
  %v4_14090 = add i32 %v3_14090, %v1_14090
  %v5_14090 = inttoptr i32 %v4_14090 to i32*
  %v6_14090 = load i32, i32* %v5_14090, align 4
  %v1_14094 = load i32, i32* %edx.global-to-local, align 4
  %v4_14094 = add i32 %v1_14090, -28
  %v5_14094 = add i32 %v4_14094, %v1_14094
  %v6_14094 = inttoptr i32 %v5_14094 to i32*
  store i32 %v6_14090, i32* %v6_14094, align 4
  %v0_14098 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14098 = load i32, i32* %eax.global-to-local, align 8
  %v3_14098 = add i32 %v0_14098, -24
  %v4_14098 = add i32 %v3_14098, %v1_14098
  %v5_14098 = inttoptr i32 %v4_14098 to i32*
  %v6_14098 = load i32, i32* %v5_14098, align 4
  %v1_1409c = load i32, i32* %edx.global-to-local, align 4
  %v4_1409c = add i32 %v1_14098, -24
  %v5_1409c = add i32 %v4_1409c, %v1_1409c
  %v6_1409c = inttoptr i32 %v5_1409c to i32*
  store i32 %v6_14098, i32* %v6_1409c, align 4
  %v0_140a0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_140a0 = load i32, i32* %eax.global-to-local, align 8
  %v3_140a0 = add i32 %v0_140a0, -20
  %v4_140a0 = add i32 %v3_140a0, %v1_140a0
  %v5_140a0 = inttoptr i32 %v4_140a0 to i32*
  %v6_140a0 = load i32, i32* %v5_140a0, align 4
  %v1_140a4 = load i32, i32* %edx.global-to-local, align 4
  %v4_140a4 = add i32 %v1_140a0, -20
  %v5_140a4 = add i32 %v4_140a4, %v1_140a4
  %v6_140a4 = inttoptr i32 %v5_140a4 to i32*
  store i32 %v6_140a0, i32* %v6_140a4, align 4
  %v0_140a8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_140a8 = load i32, i32* %eax.global-to-local, align 8
  %v3_140a8 = add i32 %v0_140a8, -16
  %v4_140a8 = add i32 %v3_140a8, %v1_140a8
  %v5_140a8 = inttoptr i32 %v4_140a8 to i32*
  %v6_140a8 = load i32, i32* %v5_140a8, align 4
  %v1_140ac = load i32, i32* %edx.global-to-local, align 4
  %v4_140ac = add i32 %v1_140a8, -16
  %v5_140ac = add i32 %v4_140ac, %v1_140ac
  %v6_140ac = inttoptr i32 %v5_140ac to i32*
  store i32 %v6_140a8, i32* %v6_140ac, align 4
  %v0_140b0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_140b0 = load i32, i32* %eax.global-to-local, align 8
  %v3_140b0 = add i32 %v0_140b0, -12
  %v4_140b0 = add i32 %v3_140b0, %v1_140b0
  %v5_140b0 = inttoptr i32 %v4_140b0 to i32*
  %v6_140b0 = load i32, i32* %v5_140b0, align 4
  %v1_140b4 = load i32, i32* %edx.global-to-local, align 4
  %v4_140b4 = add i32 %v1_140b0, -12
  %v5_140b4 = add i32 %v4_140b4, %v1_140b4
  %v6_140b4 = inttoptr i32 %v5_140b4 to i32*
  store i32 %v6_140b0, i32* %v6_140b4, align 4
  %v0_140b8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_140b8 = load i32, i32* %eax.global-to-local, align 8
  %v3_140b8 = add i32 %v0_140b8, -8
  %v4_140b8 = add i32 %v3_140b8, %v1_140b8
  %v5_140b8 = inttoptr i32 %v4_140b8 to i32*
  %v6_140b8 = load i32, i32* %v5_140b8, align 4
  %v1_140bc = load i32, i32* %edx.global-to-local, align 4
  %v4_140bc = add i32 %v1_140b8, -8
  %v5_140bc = add i32 %v4_140bc, %v1_140bc
  %v6_140bc = inttoptr i32 %v5_140bc to i32*
  store i32 %v6_140b8, i32* %v6_140bc, align 4
  %v0_140c0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_140c0 = load i32, i32* %eax.global-to-local, align 8
  %v3_140c0 = add i32 %v0_140c0, -4
  %v4_140c0 = add i32 %v3_140c0, %v1_140c0
  %v5_140c0 = inttoptr i32 %v4_140c0 to i32*
  %v6_140c0 = load i32, i32* %v5_140c0, align 4
  %v1_140c4 = load i32, i32* %edx.global-to-local, align 4
  %v4_140c4 = add i32 %v1_140c0, -4
  %v5_140c4 = add i32 %v4_140c4, %v1_140c4
  %v6_140c4 = inttoptr i32 %v5_140c4 to i32*
  store i32 %v6_140c0, i32* %v6_140c4, align 4
  %v0_140c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_140c8 = add i32 %v0_140c8, -40
  store i32 %v1_140c8, i32* %eax.global-to-local, align 8
  %v0_140cb = load i32, i32* %esi.global-to-local, align 4
  %v1_140cb = add i32 %v0_140cb, -1
  %v10_140cb = icmp eq i32 %v1_140cb, 0
  store i32 %v1_140cb, i32* %esi.global-to-local, align 4
  %v1_140ce = icmp eq i1 %v10_140cb, false
  br i1 %v1_140ce, label %dec_label_pc_14078.dec_label_pc_14078_crit_edge, label %dec_label_pc_140d0.loopexit

dec_label_pc_14078.dec_label_pc_14078_crit_edge:  ; preds = %dec_label_pc_14078
  %v0_14078.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1407c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_140d0.loopexit:                      ; preds = %dec_label_pc_14078
  %v1_140d4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_140d0

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140d0.loopexit, %dec_label_pc_1400f
  %v1_140d4 = phi i32 [ %v1_140d4.pre, %dec_label_pc_140d0.loopexit ], [ %v1_1401d, %dec_label_pc_1400f ]
  %v2_140d4 = inttoptr i32 %v1_140d4 to i32*
  store i32 %v2_14015, i32* %v2_140d4, align 4
  %v1_140da = load i32, i32* @ebx, align 4
  %v2_140da = add i32 %v1_140da, 4
  %v3_140da = inttoptr i32 %v2_140da to i32*
  store i32 %v3_14026, i32* %v3_140da, align 4
  %v1_140e1 = load i32, i32* @ebx, align 4
  %v2_140e1 = add i32 %v1_140e1, 8
  %v3_140e1 = inttoptr i32 %v2_140e1 to i32*
  store i32 %v3_14033, i32* %v3_140e1, align 4
  %v1_140e8 = load i32, i32* @ebx, align 4
  %v2_140e8 = add i32 %v1_140e8, 12
  %v3_140e8 = inttoptr i32 %v2_140e8 to i32*
  store i32 %v3_1403c, i32* %v3_140e8, align 4
  %v1_140ef = load i32, i32* @ebx, align 4
  %v2_140ef = add i32 %v1_140ef, 16
  %v3_140ef = inttoptr i32 %v2_140ef to i32*
  store i32 %v3_14043, i32* %v3_140ef, align 4
  %v1_140f6 = load i32, i32* @ebx, align 4
  %v2_140f6 = add i32 %v1_140f6, 20
  %v3_140f6 = inttoptr i32 %v2_140f6 to i32*
  store i32 %v3_1404a, i32* %v3_140f6, align 4
  %v1_140fd = load i32, i32* @ebx, align 4
  %v2_140fd = add i32 %v1_140fd, 24
  %v3_140fd = inttoptr i32 %v2_140fd to i32*
  store i32 %v3_14051, i32* %v3_140fd, align 4
  %v1_14104 = load i32, i32* @ebx, align 4
  %v2_14104 = add i32 %v1_14104, 28
  %v3_14104 = inttoptr i32 %v2_14104 to i32*
  store i32 %v3_14058, i32* %v3_14104, align 4
  %v1_1410b = load i32, i32* @ebx, align 4
  %v2_1410b = add i32 %v1_1410b, 32
  %v3_1410b = inttoptr i32 %v2_1410b to i32*
  store i32 %v3_1405f, i32* %v3_1410b, align 4
  store i32 %v3_14066, i32* @eax, align 8
  %v1_14112 = load i32, i32* @ebx, align 4
  %v2_14112 = add i32 %v1_14112, 36
  %v3_14112 = inttoptr i32 %v2_14112 to i32*
  store i32 %v3_14066, i32* %v3_14112, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br i1 false, label %bb, label %dec_label_pc_140d0.dec_label_pc_14126_crit_edge

dec_label_pc_140d0.dec_label_pc_14126_crit_edge:  ; preds = %dec_label_pc_140d0
  %v0_1412d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_14126

bb:                                               ; preds = %dec_label_pc_140d0
  br label %dec_label_pc_14126

dec_label_pc_14126:                               ; preds = %dec_label_pc_140d0.dec_label_pc_14126_crit_edge, %bb
  %v0_1412d = phi i32 [ %v0_1412d.pre, %dec_label_pc_140d0.dec_label_pc_14126_crit_edge ], [ undef, %bb ]
  store i32 %v0_13fa3, i32* @ebx, align 4
  store i32 %v0_13fa2, i32* @esi, align 4
  ret i32 %v0_1412d

dec_label_pc_14130:                               ; preds = %dec_label_pc_13fa0
  %v2_14130 = load i32, i32* %arg1, align 4
  store i32 %v2_14130, i32* @edx, align 4
  %v2_14132 = sub i32 %v3_13fbf, %v2_14130
  %v2_14134 = sdiv i32 %v2_14132, 8
  store i32 %v2_14134, i32* %eax.global-to-local, align 8
  %v3_14137 = mul i32 %v2_14134, -858993459
  store i32 %v3_14137, i32* %ecx.global-to-local, align 4
  %v1_1413d = icmp eq i32 %v3_14137, 0
  br i1 %v1_1413d, label %bb36, label %dec_label_pc_14145

bb36:                                             ; preds = %dec_label_pc_14130
  %v2_1413f = call i32 @function_141fb(i32 %v0_13fab)
  store i32 %v2_1413f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14145

dec_label_pc_14145:                               ; preds = %bb36, %dec_label_pc_14130
  %v3_14145 = mul i32 %v2_14134, -1717986918
  store i32 %v3_14145, i32* @eax, align 8
  %v2_14148 = mul i32 %v2_14134, 858993459
  %v7_14148 = icmp ult i32 %v3_14137, %v3_14145
  %v12_14148 = icmp eq i32 %v2_14148, 0
  %v2_1414a = or i1 %v7_14148, %v12_14148
  br i1 %v2_1414a, label %bb37, label %dec_label_pc_14150

bb37:                                             ; preds = %dec_label_pc_14145
  %v3_1414a = call i32 @function_14217()
  store i32 %v3_1414a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14150

dec_label_pc_14150:                               ; preds = %bb37, %dec_label_pc_14145
  %v0_14150 = load i32, i32* @ebx, align 4
  %v1_14152 = load i32, i32* @edx, align 4
  %v2_14152 = sub i32 %v0_14150, %v1_14152
  store i32 %v2_14152, i32* %ecx.global-to-local, align 4
  %v2_14156 = sdiv i32 %v2_14152, 8
  %v3_14159 = mul i32 %v2_14156, -858993459
  store i32 %v3_14159, i32* %edx.global-to-local, align 4
  store i32 -16, i32* %eax.global-to-local, align 8
  ret i32 -16

; uselistorder directives
  uselistorder i32 %v3_14145, { 1, 0 }
  uselistorder i32 %v3_14137, { 2, 1, 0 }
  uselistorder i32 %v2_14134, { 2, 3, 1, 0 }
  uselistorder i32 %v1_140cb, { 1, 0 }
  uselistorder i32 %v1_140c8, { 1, 0 }
  uselistorder i32 %v2_1407c, { 1, 0 }
  uselistorder i32 %v3_14066, { 1, 0, 2 }
  uselistorder i32 %v3_14029, { 1, 0, 2 }
  uselistorder i32 %v2_1401f, { 1, 0 }
  uselistorder i32 %v0_14015, { 0, 2, 1, 4, 3, 6, 5, 7, 8, 9 }
  uselistorder i32 %v0_1400f, { 1, 0 }
  uselistorder i32 %v3_13fbf, { 22, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 21, 0, 23 }
  uselistorder i32 %tmp27, { 0, 2, 1, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 21, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder label %dec_label_pc_14126, { 1, 0 }
}

define i32 @function_1417d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1417d:
  %v0_1417d = load i32, i32* @edx, align 4
  %v0_14180 = load i32, i32* @edi, align 4
  %v2_14180 = mul i32 %v0_1417d, 40
  %v3_14180 = add i32 %v0_14180, %v2_14180
  %v1_14183 = icmp eq i32 %v3_14180, 0
  br i1 %v1_14183, label %dec_label_pc_141c2, label %dec_label_pc_14187

dec_label_pc_14187:                               ; preds = %dec_label_pc_1417d
  %v2_14187 = load i32, i32* @ebp, align 4
  %v2_1418a = inttoptr i32 %v3_14180 to i32*
  store i32 %v2_14187, i32* %v2_1418a, align 4
  %v0_1418c = load i32, i32* @ebp, align 4
  %v1_1418c = add i32 %v0_1418c, 4
  %v2_1418c = inttoptr i32 %v1_1418c to i32*
  %v3_1418c = load i32, i32* %v2_1418c, align 4
  %v2_1418f = add i32 %v3_14180, 4
  %v3_1418f = inttoptr i32 %v2_1418f to i32*
  store i32 %v3_1418c, i32* %v3_1418f, align 4
  %v0_14192 = load i32, i32* @ebp, align 4
  %v1_14192 = add i32 %v0_14192, 8
  %v2_14192 = inttoptr i32 %v1_14192 to i32*
  %v3_14192 = load i32, i32* %v2_14192, align 4
  %v2_14195 = add i32 %v3_14180, 8
  %v3_14195 = inttoptr i32 %v2_14195 to i32*
  store i32 %v3_14192, i32* %v3_14195, align 4
  %v0_14198 = load i32, i32* @ebp, align 4
  %v1_14198 = add i32 %v0_14198, 12
  %v2_14198 = inttoptr i32 %v1_14198 to i32*
  %v3_14198 = load i32, i32* %v2_14198, align 4
  %v2_1419b = add i32 %v3_14180, 12
  %v3_1419b = inttoptr i32 %v2_1419b to i32*
  store i32 %v3_14198, i32* %v3_1419b, align 4
  %v0_1419e = load i32, i32* @ebp, align 4
  %v1_1419e = add i32 %v0_1419e, 16
  %v2_1419e = inttoptr i32 %v1_1419e to i32*
  %v3_1419e = load i32, i32* %v2_1419e, align 4
  %v2_141a1 = add i32 %v3_14180, 16
  %v3_141a1 = inttoptr i32 %v2_141a1 to i32*
  store i32 %v3_1419e, i32* %v3_141a1, align 4
  %v0_141a4 = load i32, i32* @ebp, align 4
  %v1_141a4 = add i32 %v0_141a4, 20
  %v2_141a4 = inttoptr i32 %v1_141a4 to i32*
  %v3_141a4 = load i32, i32* %v2_141a4, align 4
  %v2_141a7 = add i32 %v3_14180, 20
  %v3_141a7 = inttoptr i32 %v2_141a7 to i32*
  store i32 %v3_141a4, i32* %v3_141a7, align 4
  %v0_141aa = load i32, i32* @ebp, align 4
  %v1_141aa = add i32 %v0_141aa, 24
  %v2_141aa = inttoptr i32 %v1_141aa to i32*
  %v3_141aa = load i32, i32* %v2_141aa, align 4
  %v2_141ad = add i32 %v3_14180, 24
  %v3_141ad = inttoptr i32 %v2_141ad to i32*
  store i32 %v3_141aa, i32* %v3_141ad, align 4
  %v0_141b0 = load i32, i32* @ebp, align 4
  %v1_141b0 = add i32 %v0_141b0, 28
  %v2_141b0 = inttoptr i32 %v1_141b0 to i32*
  %v3_141b0 = load i32, i32* %v2_141b0, align 4
  %v2_141b3 = add i32 %v3_14180, 28
  %v3_141b3 = inttoptr i32 %v2_141b3 to i32*
  store i32 %v3_141b0, i32* %v3_141b3, align 4
  %v0_141b6 = load i32, i32* @ebp, align 4
  %v1_141b6 = add i32 %v0_141b6, 32
  %v2_141b6 = inttoptr i32 %v1_141b6 to i32*
  %v3_141b6 = load i32, i32* %v2_141b6, align 4
  %v2_141b9 = add i32 %v3_14180, 32
  %v3_141b9 = inttoptr i32 %v2_141b9 to i32*
  store i32 %v3_141b6, i32* %v3_141b9, align 4
  %v0_141bc = load i32, i32* @ebp, align 4
  %v1_141bc = add i32 %v0_141bc, 36
  %v2_141bc = inttoptr i32 %v1_141bc to i32*
  %v3_141bc = load i32, i32* %v2_141bc, align 4
  %v2_141bf = add i32 %v3_14180, 36
  %v3_141bf = inttoptr i32 %v2_141bf to i32*
  store i32 %v3_141bc, i32* %v3_141bf, align 4
  br label %dec_label_pc_141c2

dec_label_pc_141c2:                               ; preds = %dec_label_pc_14187, %dec_label_pc_1417d
  %v2_141c2 = load i32, i32* @esi, align 4
  %v0_141c4 = load i32, i32* @ebx, align 4
  store i32 %v0_141c4, i32* @eax, align 8
  store i32 %v2_141c2, i32* @edx, align 4
  %v1_141dc = icmp eq i32 %v2_141c2, 0
  br i1 %v1_141dc, label %bb, label %dec_label_pc_141e2

bb:                                               ; preds = %dec_label_pc_141c2
  %v1_141e0 = call i32 @function_141ea()
  br label %dec_label_pc_141e2

dec_label_pc_141e2:                               ; preds = %bb, %dec_label_pc_141c2
  %v3_141e2 = phi i32 [ %v1_141e0, %bb ], [ %v0_141c4, %dec_label_pc_141c2 ]
  ret i32 %v3_141e2

; uselistorder directives
  uselistorder i32 %v2_141c2, { 1, 0 }
}

define i32 @function_141ea() local_unnamed_addr {
dec_label_pc_141ea:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_141ea = load i32, i32* @edi, align 4
  %v1_141ea = load i32, i32* @esi, align 4
  %v2_141ea = inttoptr i32 %v1_141ea to i32*
  store i32 %v0_141ea, i32* %v2_141ea, align 4
  %v0_141ec = load i32, i32* @edi, align 4
  %v5_141ec = add i32 %v0_141ec, %tmp
  store i32 %v5_141ec, i32* %edi.global-to-local, align 4
  %v0_141f0 = load i32, i32* @ebx, align 4
  %v1_141f0 = load i32, i32* @esi, align 4
  %v2_141f0 = add i32 %v1_141f0, 4
  %v3_141f0 = inttoptr i32 %v2_141f0 to i32*
  store i32 %v0_141f0, i32* %v3_141f0, align 4
  %v0_141f3 = load i32, i32* %edi.global-to-local, align 4
  %v1_141f3 = load i32, i32* @esi, align 4
  %v2_141f3 = add i32 %v1_141f3, 8
  %v3_141f3 = inttoptr i32 %v2_141f3 to i32*
  store i32 %v0_141f3, i32* %v3_141f3, align 4
  %v0_141f6 = load i32, i32* @eax, align 8
  ret i32 %v0_141f6
}

define i32 @function_141fb(i32 %arg1) local_unnamed_addr {
dec_label_pc_141fb:
  %v0_141fb = load i32, i32* @ebx, align 4
  %v1_141fd = load i32, i32* @edx, align 4
  %v2_141fd = sub i32 %v0_141fb, %v1_141fd
  %v2_14201 = sdiv i32 %v2_141fd, 8
  %v3_14204 = mul i32 %v2_14201, -858993459
  store i32 %v3_14204, i32* @edx, align 4
  ret i32 %v2_141fd

; uselistorder directives
  uselistorder i32 %v2_141fd, { 1, 0 }
}

define i32 @function_14217() local_unnamed_addr {
dec_label_pc_14217:
  %v0_14217 = load i32, i32* @eax, align 8
  store i32 0, i32* @edi, align 4
  %v0_1422b = load i32, i32* @ebx, align 4
  %v1_1422d = load i32, i32* @edx, align 4
  %v2_1422d = sub i32 %v0_1422b, %v1_1422d
  %v2_14231 = sdiv i32 %v2_1422d, 8
  %v3_14234 = mul i32 %v2_14231, -858993459
  store i32 %v3_14234, i32* @edx, align 4
  %v1_1423a = icmp eq i32 %v0_14217, 0
  br i1 %v1_1423a, label %bb, label %dec_label_pc_14242

bb:                                               ; preds = %dec_label_pc_14217
  %v2_1423c = call i32 @function_1417d(i32 0)
  br label %dec_label_pc_14242

dec_label_pc_14242:                               ; preds = %bb, %dec_label_pc_14217
  %v0_14242 = phi i32 [ %v2_1423c, %bb ], [ %v0_14217, %dec_label_pc_14217 ]
  ret i32 %v0_14242
}

define i32 @function_14247() local_unnamed_addr {
dec_label_pc_14247:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14250:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp23 = ptrtoint i32* %arg1 to i32
  %v0_14250 = load i32, i32* @ebp, align 4
  %v0_14251 = load i32, i32* @edi, align 4
  %v0_14252 = load i32, i32* @esi, align 4
  %v0_14253 = load i32, i32* @ebx, align 4
  store i32 %tmp23, i32* @esi, align 4
  %v0_1425b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  %v1_1426f = add i32 %tmp23, 4
  %v2_1426f = inttoptr i32 %v1_1426f to i32*
  %v3_1426f = load i32, i32* %v2_1426f, align 4
  %v2_14272 = add i32 %tmp23, 8
  %v3_14272 = inttoptr i32 %v2_14272 to i32*
  %v4_14272 = load i32, i32* %v3_14272, align 4
  %v15_14272 = icmp eq i32 %v3_1426f, %v4_14272
  br i1 %v15_14272, label %dec_label_pc_143b8, label %dec_label_pc_1427b

dec_label_pc_1427b:                               ; preds = %dec_label_pc_14250
  %v1_1427b = icmp eq i32 %v3_1426f, 0
  br i1 %v1_1427b, label %dec_label_pc_142b4, label %dec_label_pc_1427f

dec_label_pc_1427f:                               ; preds = %dec_label_pc_1427b
  %v1_1427f = add i32 %v3_1426f, -36
  %v2_1427f = inttoptr i32 %v1_1427f to i32*
  %v3_1427f = load i32, i32* %v2_1427f, align 4
  store i32 %v3_1427f, i32* %eax.global-to-local, align 8
  %v2_14282 = inttoptr i32 %v3_1426f to i32*
  store i32 %v3_1427f, i32* %v2_14282, align 4
  %v1_14284 = add i32 %v3_1426f, -32
  %v2_14284 = inttoptr i32 %v1_14284 to i32*
  %v3_14284 = load i32, i32* %v2_14284, align 4
  store i32 %v3_14284, i32* %eax.global-to-local, align 8
  %v2_14287 = add i32 %v3_1426f, 4
  %v3_14287 = inttoptr i32 %v2_14287 to i32*
  store i32 %v3_14284, i32* %v3_14287, align 4
  %v1_1428a = add i32 %v3_1426f, -28
  %v2_1428a = inttoptr i32 %v1_1428a to i32*
  %v3_1428a = load i32, i32* %v2_1428a, align 4
  store i32 %v3_1428a, i32* %eax.global-to-local, align 8
  %v2_1428d = add i32 %v3_1426f, 8
  %v3_1428d = inttoptr i32 %v2_1428d to i32*
  store i32 %v3_1428a, i32* %v3_1428d, align 4
  %v1_14290 = add i32 %v3_1426f, -24
  %v2_14290 = inttoptr i32 %v1_14290 to i32*
  %v3_14290 = load i32, i32* %v2_14290, align 4
  store i32 %v3_14290, i32* %eax.global-to-local, align 8
  %v2_14293 = add i32 %v3_1426f, 12
  %v3_14293 = inttoptr i32 %v2_14293 to i32*
  store i32 %v3_14290, i32* %v3_14293, align 4
  %v1_14296 = add i32 %v3_1426f, -20
  %v2_14296 = inttoptr i32 %v1_14296 to i32*
  %v3_14296 = load i32, i32* %v2_14296, align 4
  store i32 %v3_14296, i32* %eax.global-to-local, align 8
  %v2_14299 = add i32 %v3_1426f, 16
  %v3_14299 = inttoptr i32 %v2_14299 to i32*
  store i32 %v3_14296, i32* %v3_14299, align 4
  %v1_1429c = add i32 %v3_1426f, -16
  %v2_1429c = inttoptr i32 %v1_1429c to i32*
  %v3_1429c = load i32, i32* %v2_1429c, align 4
  store i32 %v3_1429c, i32* %eax.global-to-local, align 8
  %v2_1429f = add i32 %v3_1426f, 20
  %v3_1429f = inttoptr i32 %v2_1429f to i32*
  store i32 %v3_1429c, i32* %v3_1429f, align 4
  %v1_142a2 = add i32 %v3_1426f, -12
  %v2_142a2 = inttoptr i32 %v1_142a2 to i32*
  %v3_142a2 = load i32, i32* %v2_142a2, align 4
  store i32 %v3_142a2, i32* %eax.global-to-local, align 8
  %v2_142a5 = add i32 %v3_1426f, 24
  %v3_142a5 = inttoptr i32 %v2_142a5 to i32*
  store i32 %v3_142a2, i32* %v3_142a5, align 4
  %v1_142a8 = add i32 %v3_1426f, -8
  %v2_142a8 = inttoptr i32 %v1_142a8 to i32*
  %v3_142a8 = load i32, i32* %v2_142a8, align 4
  store i32 %v3_142a8, i32* %eax.global-to-local, align 8
  %v2_142ab = add i32 %v3_1426f, 28
  %v3_142ab = inttoptr i32 %v2_142ab to i32*
  store i32 %v3_142a8, i32* %v3_142ab, align 4
  %v1_142ae = add i32 %v3_1426f, -4
  %v2_142ae = inttoptr i32 %v1_142ae to i32*
  %v3_142ae = load i32, i32* %v2_142ae, align 4
  store i32 %v3_142ae, i32* %eax.global-to-local, align 8
  %v2_142b1 = add i32 %v3_1426f, 32
  %v3_142b1 = inttoptr i32 %v2_142b1 to i32*
  store i32 %v3_142ae, i32* %v3_142b1, align 4
  %v1_142b7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_142b4

dec_label_pc_142b4:                               ; preds = %dec_label_pc_1427b, %dec_label_pc_1427f
  %v1_142bd.pre-phi = phi i32 [ %v1_1427f, %dec_label_pc_1427f ], [ -36, %dec_label_pc_1427b ]
  %v1_142b7 = phi i32 [ %v1_142b7.pre, %dec_label_pc_1427f ], [ %tmp23, %dec_label_pc_1427b ]
  %v1_142b4 = add i32 %v3_1426f, 36
  store i32 %v1_142b4, i32* %eax.global-to-local, align 8
  %v2_142b7 = add i32 %v1_142b7, 4
  %v3_142b7 = inttoptr i32 %v2_142b7 to i32*
  store i32 %v1_142b4, i32* %v3_142b7, align 4
  %v0_142ba = load i32, i32* @ebp, align 4
  %v1_142ba = inttoptr i32 %v0_142ba to i32*
  %v2_142ba = load i32, i32* %v1_142ba, align 4
  store i32 %v2_142ba, i32* %eax.global-to-local, align 8
  store i32 %v1_142bd.pre-phi, i32* %ecx.global-to-local, align 4
  %v1_142c2 = load i32, i32* @ebx, align 4
  %v2_142c2 = sub i32 %v1_142bd.pre-phi, %v1_142c2
  %v2_142c4 = sdiv i32 %v2_142c2, 4
  store i32 %v2_142c4, i32* %esi.global-to-local, align 4
  %v1_142cb = add i32 %v0_142ba, 4
  %v2_142cb = inttoptr i32 %v1_142cb to i32*
  %v3_142cb = load i32, i32* %v2_142cb, align 4
  store i32 %v3_142cb, i32* %eax.global-to-local, align 8
  %v3_142ce = mul i32 %v2_142c4, 954437177
  store i32 %v3_142ce, i32* %esi.global-to-local, align 4
  %v1_142d8 = add i32 %v0_142ba, 8
  %v2_142d8 = inttoptr i32 %v1_142d8 to i32*
  %v3_142d8 = load i32, i32* %v2_142d8, align 4
  store i32 %v3_142d8, i32* %eax.global-to-local, align 8
  %v1_142e1 = add i32 %v0_142ba, 12
  %v2_142e1 = inttoptr i32 %v1_142e1 to i32*
  %v3_142e1 = load i32, i32* %v2_142e1, align 4
  store i32 %v3_142e1, i32* %eax.global-to-local, align 8
  %v1_142e8 = add i32 %v0_142ba, 16
  %v2_142e8 = inttoptr i32 %v1_142e8 to i32*
  %v3_142e8 = load i32, i32* %v2_142e8, align 4
  store i32 %v3_142e8, i32* %eax.global-to-local, align 8
  %v1_142ef = add i32 %v0_142ba, 20
  %v2_142ef = inttoptr i32 %v1_142ef to i32*
  %v3_142ef = load i32, i32* %v2_142ef, align 4
  store i32 %v3_142ef, i32* %eax.global-to-local, align 8
  %v1_142f6 = add i32 %v0_142ba, 24
  %v2_142f6 = inttoptr i32 %v1_142f6 to i32*
  %v3_142f6 = load i32, i32* %v2_142f6, align 4
  store i32 %v3_142f6, i32* %eax.global-to-local, align 8
  %v1_142fd = add i32 %v0_142ba, 28
  %v2_142fd = inttoptr i32 %v1_142fd to i32*
  %v3_142fd = load i32, i32* %v2_142fd, align 4
  store i32 %v3_142fd, i32* %eax.global-to-local, align 8
  %v1_14304 = add i32 %v0_142ba, 32
  %v2_14304 = inttoptr i32 %v1_14304 to i32*
  %v3_14304 = load i32, i32* %v2_14304, align 4
  store i32 %v3_14304, i32* %eax.global-to-local, align 8
  %tmp29 = icmp slt i32 %v3_142ce, 1
  br i1 %tmp29, label %dec_label_pc_14360, label %dec_label_pc_1430d

dec_label_pc_1430d:                               ; preds = %dec_label_pc_142b4
  store i32 0, i32* %eax.global-to-local, align 8
  %v4_1431c = add i32 %v3_1426f, -32
  %v4_14324 = add i32 %v3_1426f, -28
  %v4_1432c = add i32 %v3_1426f, -24
  %v4_14334 = add i32 %v3_1426f, -20
  %v4_1433c = add i32 %v3_1426f, -16
  %v4_14344 = add i32 %v3_1426f, -12
  %v4_1434c = add i32 %v3_1426f, -8
  %v4_14354 = add i32 %v3_1426f, -4
  br label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %dec_label_pc_14310.dec_label_pc_14310_crit_edge, %dec_label_pc_1430d
  %v1_14310 = phi i32 [ %v1_14358, %dec_label_pc_14310.dec_label_pc_14310_crit_edge ], [ 0, %dec_label_pc_1430d ]
  %v0_14310 = phi i32 [ %v0_14310.pre, %dec_label_pc_14310.dec_label_pc_14310_crit_edge ], [ %v1_142bd.pre-phi, %dec_label_pc_1430d ]
  %v3_14310 = add i32 %v1_14310, -36
  %v4_14310 = add i32 %v3_14310, %v0_14310
  %v5_14310 = inttoptr i32 %v4_14310 to i32*
  %v6_14310 = load i32, i32* %v5_14310, align 4
  %v5_14314 = add i32 %v1_14310, %v1_142bd.pre-phi
  %v6_14314 = inttoptr i32 %v5_14314 to i32*
  store i32 %v6_14310, i32* %v6_14314, align 4
  %v0_14318 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14318 = load i32, i32* %eax.global-to-local, align 8
  %v3_14318 = add i32 %v0_14318, -32
  %v4_14318 = add i32 %v3_14318, %v1_14318
  %v5_14318 = inttoptr i32 %v4_14318 to i32*
  %v6_14318 = load i32, i32* %v5_14318, align 4
  %v5_1431c = add i32 %v4_1431c, %v1_14318
  %v6_1431c = inttoptr i32 %v5_1431c to i32*
  store i32 %v6_14318, i32* %v6_1431c, align 4
  %v0_14320 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14320 = load i32, i32* %eax.global-to-local, align 8
  %v3_14320 = add i32 %v0_14320, -28
  %v4_14320 = add i32 %v3_14320, %v1_14320
  %v5_14320 = inttoptr i32 %v4_14320 to i32*
  %v6_14320 = load i32, i32* %v5_14320, align 4
  %v5_14324 = add i32 %v4_14324, %v1_14320
  %v6_14324 = inttoptr i32 %v5_14324 to i32*
  store i32 %v6_14320, i32* %v6_14324, align 4
  %v0_14328 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14328 = load i32, i32* %eax.global-to-local, align 8
  %v3_14328 = add i32 %v0_14328, -24
  %v4_14328 = add i32 %v3_14328, %v1_14328
  %v5_14328 = inttoptr i32 %v4_14328 to i32*
  %v6_14328 = load i32, i32* %v5_14328, align 4
  %v5_1432c = add i32 %v4_1432c, %v1_14328
  %v6_1432c = inttoptr i32 %v5_1432c to i32*
  store i32 %v6_14328, i32* %v6_1432c, align 4
  %v0_14330 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14330 = load i32, i32* %eax.global-to-local, align 8
  %v3_14330 = add i32 %v0_14330, -20
  %v4_14330 = add i32 %v3_14330, %v1_14330
  %v5_14330 = inttoptr i32 %v4_14330 to i32*
  %v6_14330 = load i32, i32* %v5_14330, align 4
  %v5_14334 = add i32 %v4_14334, %v1_14330
  %v6_14334 = inttoptr i32 %v5_14334 to i32*
  store i32 %v6_14330, i32* %v6_14334, align 4
  %v0_14338 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14338 = load i32, i32* %eax.global-to-local, align 8
  %v3_14338 = add i32 %v0_14338, -16
  %v4_14338 = add i32 %v3_14338, %v1_14338
  %v5_14338 = inttoptr i32 %v4_14338 to i32*
  %v6_14338 = load i32, i32* %v5_14338, align 4
  %v5_1433c = add i32 %v4_1433c, %v1_14338
  %v6_1433c = inttoptr i32 %v5_1433c to i32*
  store i32 %v6_14338, i32* %v6_1433c, align 4
  %v0_14340 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14340 = load i32, i32* %eax.global-to-local, align 8
  %v3_14340 = add i32 %v0_14340, -12
  %v4_14340 = add i32 %v3_14340, %v1_14340
  %v5_14340 = inttoptr i32 %v4_14340 to i32*
  %v6_14340 = load i32, i32* %v5_14340, align 4
  %v5_14344 = add i32 %v4_14344, %v1_14340
  %v6_14344 = inttoptr i32 %v5_14344 to i32*
  store i32 %v6_14340, i32* %v6_14344, align 4
  %v0_14348 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14348 = load i32, i32* %eax.global-to-local, align 8
  %v3_14348 = add i32 %v0_14348, -8
  %v4_14348 = add i32 %v3_14348, %v1_14348
  %v5_14348 = inttoptr i32 %v4_14348 to i32*
  %v6_14348 = load i32, i32* %v5_14348, align 4
  %v5_1434c = add i32 %v4_1434c, %v1_14348
  %v6_1434c = inttoptr i32 %v5_1434c to i32*
  store i32 %v6_14348, i32* %v6_1434c, align 4
  %v0_14350 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14350 = load i32, i32* %eax.global-to-local, align 8
  %v3_14350 = add i32 %v0_14350, -4
  %v4_14350 = add i32 %v3_14350, %v1_14350
  %v5_14350 = inttoptr i32 %v4_14350 to i32*
  %v6_14350 = load i32, i32* %v5_14350, align 4
  %v5_14354 = add i32 %v4_14354, %v1_14350
  %v6_14354 = inttoptr i32 %v5_14354 to i32*
  store i32 %v6_14350, i32* %v6_14354, align 4
  %v0_14358 = load i32, i32* %eax.global-to-local, align 8
  %v1_14358 = add i32 %v0_14358, -36
  store i32 %v1_14358, i32* %eax.global-to-local, align 8
  %v0_1435b = load i32, i32* %esi.global-to-local, align 4
  %v1_1435b = add i32 %v0_1435b, -1
  %v10_1435b = icmp eq i32 %v1_1435b, 0
  store i32 %v1_1435b, i32* %esi.global-to-local, align 4
  %v1_1435e = icmp eq i1 %v10_1435b, false
  br i1 %v1_1435e, label %dec_label_pc_14310.dec_label_pc_14310_crit_edge, label %dec_label_pc_14360.loopexit

dec_label_pc_14310.dec_label_pc_14310_crit_edge:  ; preds = %dec_label_pc_14310
  %v0_14310.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_14310

dec_label_pc_14360.loopexit:                      ; preds = %dec_label_pc_14310
  %v1_14364.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_14360

dec_label_pc_14360:                               ; preds = %dec_label_pc_14360.loopexit, %dec_label_pc_142b4
  %v1_14364 = phi i32 [ %v1_14364.pre, %dec_label_pc_14360.loopexit ], [ %v1_142c2, %dec_label_pc_142b4 ]
  %v2_14364 = inttoptr i32 %v1_14364 to i32*
  store i32 %v2_142ba, i32* %v2_14364, align 4
  %v1_1436a = load i32, i32* @ebx, align 4
  %v2_1436a = add i32 %v1_1436a, 4
  %v3_1436a = inttoptr i32 %v2_1436a to i32*
  store i32 %v3_142cb, i32* %v3_1436a, align 4
  %v1_14371 = load i32, i32* @ebx, align 4
  %v2_14371 = add i32 %v1_14371, 8
  %v3_14371 = inttoptr i32 %v2_14371 to i32*
  store i32 %v3_142d8, i32* %v3_14371, align 4
  %v1_14378 = load i32, i32* @ebx, align 4
  %v2_14378 = add i32 %v1_14378, 12
  %v3_14378 = inttoptr i32 %v2_14378 to i32*
  store i32 %v3_142e1, i32* %v3_14378, align 4
  %v1_1437f = load i32, i32* @ebx, align 4
  %v2_1437f = add i32 %v1_1437f, 16
  %v3_1437f = inttoptr i32 %v2_1437f to i32*
  store i32 %v3_142e8, i32* %v3_1437f, align 4
  %v1_14386 = load i32, i32* @ebx, align 4
  %v2_14386 = add i32 %v1_14386, 20
  %v3_14386 = inttoptr i32 %v2_14386 to i32*
  store i32 %v3_142ef, i32* %v3_14386, align 4
  %v1_1438d = load i32, i32* @ebx, align 4
  %v2_1438d = add i32 %v1_1438d, 24
  %v3_1438d = inttoptr i32 %v2_1438d to i32*
  store i32 %v3_142f6, i32* %v3_1438d, align 4
  %v1_14394 = load i32, i32* @ebx, align 4
  %v2_14394 = add i32 %v1_14394, 28
  %v3_14394 = inttoptr i32 %v2_14394 to i32*
  store i32 %v3_142fd, i32* %v3_14394, align 4
  store i32 %v3_14304, i32* @eax, align 8
  %v1_1439b = load i32, i32* @ebx, align 4
  %v2_1439b = add i32 %v1_1439b, 32
  %v3_1439b = inttoptr i32 %v2_1439b to i32*
  store i32 %v3_14304, i32* %v3_1439b, align 4
  br i1 false, label %bb, label %dec_label_pc_14360.dec_label_pc_143af_crit_edge

dec_label_pc_14360.dec_label_pc_143af_crit_edge:  ; preds = %dec_label_pc_14360
  %v0_143b6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_143af

bb:                                               ; preds = %dec_label_pc_14360
  br label %dec_label_pc_143af

dec_label_pc_143af:                               ; preds = %dec_label_pc_14360.dec_label_pc_143af_crit_edge, %bb
  %v0_143b6 = phi i32 [ %v0_143b6.pre, %dec_label_pc_14360.dec_label_pc_143af_crit_edge ], [ undef, %bb ]
  store i32 %v0_14253, i32* @ebx, align 4
  store i32 %v0_14252, i32* @esi, align 4
  store i32 %v0_14251, i32* @edi, align 4
  store i32 %v0_14250, i32* @ebp, align 4
  ret i32 %v0_143b6

dec_label_pc_143b8:                               ; preds = %dec_label_pc_14250
  %v2_143b8 = load i32, i32* %arg1, align 4
  store i32 %v2_143b8, i32* @ecx, align 4
  %v2_143ba = sub i32 %v3_1426f, %v2_143b8
  %v2_143bc = sdiv i32 %v2_143ba, 4
  %v3_143bf = mul i32 %v2_143bc, 954437177
  %v1_143c5 = icmp eq i32 %v3_143bf, 0
  br i1 %v1_143c5, label %bb32, label %dec_label_pc_143cd

bb32:                                             ; preds = %dec_label_pc_143b8
  %v2_143c7 = call i32 @function_1447b(i32 %v0_1425b)
  store i32 %v2_143c7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_143cd

dec_label_pc_143cd:                               ; preds = %bb32, %dec_label_pc_143b8
  %v3_143cd = mul i32 %v2_143bc, 1908874354
  store i32 %v3_143cd, i32* @eax, align 8
  %v2_143d0 = mul i32 %v2_143bc, -954437177
  %v7_143d0 = icmp ult i32 %v3_143bf, %v3_143cd
  %v12_143d0 = icmp eq i32 %v2_143d0, 0
  %v2_143d2 = or i1 %v7_143d0, %v12_143d0
  br i1 %v2_143d2, label %bb33, label %dec_label_pc_143d8

bb33:                                             ; preds = %dec_label_pc_143cd
  %v3_143d2 = call i32 @function_14495()
  store i32 %v3_143d2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %bb33, %dec_label_pc_143cd
  store i32 -4, i32* %eax.global-to-local, align 8
  ret i32 -4

; uselistorder directives
  uselistorder i32 %v3_143cd, { 1, 0 }
  uselistorder i32 %v3_143bf, { 1, 0 }
  uselistorder i32 %v2_143bc, { 1, 2, 0 }
  uselistorder i32 %v1_1435b, { 1, 0 }
  uselistorder i32 %v1_14358, { 1, 0 }
  uselistorder i32 %v3_14304, { 1, 0, 2 }
  uselistorder i32 %v2_142c4, { 1, 0 }
  uselistorder i32 %v0_142ba, { 1, 0, 3, 2, 5, 4, 6, 7, 8 }
  uselistorder i32 %v1_142bd.pre-phi, { 0, 3, 2, 1 }
  uselistorder i32 %v3_1426f, { 29, 19, 20, 21, 22, 23, 24, 25, 26, 27, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 28, 0 }
  uselistorder i32 %tmp23, { 0, 2, 1, 3 }
  uselistorder i32* %ecx.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 -16, { 3, 2, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 -20, { 5, 4, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_143af, { 1, 0 }
  uselistorder label %dec_label_pc_142b4, { 1, 0 }
}

define i32 @function_14403(i32 %arg1) local_unnamed_addr {
dec_label_pc_14403:
  %v0_14403 = load i32, i32* @edx, align 4
  %v0_14406 = load i32, i32* @edi, align 4
  %v2_14406 = mul i32 %v0_14403, 36
  %v3_14406 = add i32 %v0_14406, %v2_14406
  %v1_14409 = icmp eq i32 %v3_14406, 0
  br i1 %v1_14409, label %dec_label_pc_14442, label %dec_label_pc_1440d

dec_label_pc_1440d:                               ; preds = %dec_label_pc_14403
  %v2_1440d = load i32, i32* @ebp, align 4
  %v2_14410 = inttoptr i32 %v3_14406 to i32*
  store i32 %v2_1440d, i32* %v2_14410, align 4
  %v0_14412 = load i32, i32* @ebp, align 4
  %v1_14412 = add i32 %v0_14412, 4
  %v2_14412 = inttoptr i32 %v1_14412 to i32*
  %v3_14412 = load i32, i32* %v2_14412, align 4
  %v2_14415 = add i32 %v3_14406, 4
  %v3_14415 = inttoptr i32 %v2_14415 to i32*
  store i32 %v3_14412, i32* %v3_14415, align 4
  %v0_14418 = load i32, i32* @ebp, align 4
  %v1_14418 = add i32 %v0_14418, 8
  %v2_14418 = inttoptr i32 %v1_14418 to i32*
  %v3_14418 = load i32, i32* %v2_14418, align 4
  %v2_1441b = add i32 %v3_14406, 8
  %v3_1441b = inttoptr i32 %v2_1441b to i32*
  store i32 %v3_14418, i32* %v3_1441b, align 4
  %v0_1441e = load i32, i32* @ebp, align 4
  %v1_1441e = add i32 %v0_1441e, 12
  %v2_1441e = inttoptr i32 %v1_1441e to i32*
  %v3_1441e = load i32, i32* %v2_1441e, align 4
  %v2_14421 = add i32 %v3_14406, 12
  %v3_14421 = inttoptr i32 %v2_14421 to i32*
  store i32 %v3_1441e, i32* %v3_14421, align 4
  %v0_14424 = load i32, i32* @ebp, align 4
  %v1_14424 = add i32 %v0_14424, 16
  %v2_14424 = inttoptr i32 %v1_14424 to i32*
  %v3_14424 = load i32, i32* %v2_14424, align 4
  %v2_14427 = add i32 %v3_14406, 16
  %v3_14427 = inttoptr i32 %v2_14427 to i32*
  store i32 %v3_14424, i32* %v3_14427, align 4
  %v0_1442a = load i32, i32* @ebp, align 4
  %v1_1442a = add i32 %v0_1442a, 20
  %v2_1442a = inttoptr i32 %v1_1442a to i32*
  %v3_1442a = load i32, i32* %v2_1442a, align 4
  %v2_1442d = add i32 %v3_14406, 20
  %v3_1442d = inttoptr i32 %v2_1442d to i32*
  store i32 %v3_1442a, i32* %v3_1442d, align 4
  %v0_14430 = load i32, i32* @ebp, align 4
  %v1_14430 = add i32 %v0_14430, 24
  %v2_14430 = inttoptr i32 %v1_14430 to i32*
  %v3_14430 = load i32, i32* %v2_14430, align 4
  %v2_14433 = add i32 %v3_14406, 24
  %v3_14433 = inttoptr i32 %v2_14433 to i32*
  store i32 %v3_14430, i32* %v3_14433, align 4
  %v0_14436 = load i32, i32* @ebp, align 4
  %v1_14436 = add i32 %v0_14436, 28
  %v2_14436 = inttoptr i32 %v1_14436 to i32*
  %v3_14436 = load i32, i32* %v2_14436, align 4
  %v2_14439 = add i32 %v3_14406, 28
  %v3_14439 = inttoptr i32 %v2_14439 to i32*
  store i32 %v3_14436, i32* %v3_14439, align 4
  %v0_1443c = load i32, i32* @ebp, align 4
  %v1_1443c = add i32 %v0_1443c, 32
  %v2_1443c = inttoptr i32 %v1_1443c to i32*
  %v3_1443c = load i32, i32* %v2_1443c, align 4
  %v2_1443f = add i32 %v3_14406, 32
  %v3_1443f = inttoptr i32 %v2_1443f to i32*
  store i32 %v3_1443c, i32* %v3_1443f, align 4
  %v0_14446.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_14442

dec_label_pc_14442:                               ; preds = %dec_label_pc_1440d, %dec_label_pc_14403
  %v0_14446 = phi i32 [ %v0_14446.pre, %dec_label_pc_1440d ], [ %v0_14406, %dec_label_pc_14403 ]
  %v2_14442 = load i32, i32* @esi, align 4
  store i32 %v2_14442, i32* @eax, align 8
  %v0_14444 = load i32, i32* @ebx, align 4
  store i32 %v0_14444, i32* @edx, align 4
  store i32 %v0_14446, i32* @ecx, align 4
  %v0_14448 = call i32 @function_14590()
  %v0_1444d = load i32, i32* @esi, align 4
  %v1_1444d = add i32 %v0_1444d, 4
  %v2_1444d = inttoptr i32 %v1_1444d to i32*
  %v3_1444d = load i32, i32* %v2_1444d, align 4
  store i32 %v3_1444d, i32* @edx, align 4
  %v1_14450 = add i32 %v0_14448, 36
  store i32 %v1_14450, i32* @ecx, align 4
  %v0_14453 = load i32, i32* @ebx, align 4
  store i32 %v0_14453, i32* @eax, align 8
  %v0_14455 = call i32 @function_14590()
  store i32 %v0_14455, i32* @eax, align 8
  %v2_1445a = load i32, i32* @esi, align 4
  %v1_1445c = icmp eq i32 %v2_1445a, 0
  store i32 %v0_14455, i32* @ebx, align 4
  br i1 %v1_1445c, label %bb, label %dec_label_pc_14462

bb:                                               ; preds = %dec_label_pc_14442
  %v1_14460 = call i32 @function_1446a()
  br label %dec_label_pc_14462

dec_label_pc_14462:                               ; preds = %bb, %dec_label_pc_14442
  %v3_14462 = phi i32 [ %v1_14460, %bb ], [ %v0_14455, %dec_label_pc_14442 ]
  ret i32 %v3_14462

; uselistorder directives
  uselistorder i32 ()* @function_14590, { 1, 0 }
}

define i32 @function_1446a() local_unnamed_addr {
dec_label_pc_1446a:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_1446a = load i32, i32* @edi, align 4
  %v1_1446a = load i32, i32* @esi, align 4
  %v2_1446a = inttoptr i32 %v1_1446a to i32*
  store i32 %v0_1446a, i32* %v2_1446a, align 4
  %v0_1446c = load i32, i32* @edi, align 4
  %v5_1446c = add i32 %v0_1446c, %tmp
  store i32 %v5_1446c, i32* @edi, align 4
  %v0_14470 = load i32, i32* @ebx, align 4
  %v1_14470 = load i32, i32* @esi, align 4
  %v2_14470 = add i32 %v1_14470, 4
  %v3_14470 = inttoptr i32 %v2_14470 to i32*
  store i32 %v0_14470, i32* %v3_14470, align 4
  %v0_14473 = load i32, i32* @edi, align 4
  %v1_14473 = load i32, i32* @esi, align 4
  %v2_14473 = add i32 %v1_14473, 8
  %v3_14473 = inttoptr i32 %v2_14473 to i32*
  store i32 %v0_14473, i32* %v3_14473, align 4
  %v0_14476 = load i32, i32* @eax, align 8
  ret i32 %v0_14476
}

define i32 @function_1447b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1447b:
  %v0_14490 = load i32, i32* @eax, align 8
  ret i32 %v0_14490
}

define i32 @function_14495() local_unnamed_addr {
dec_label_pc_14495:
  %v0_14495 = load i32, i32* @eax, align 8
  store i32 0, i32* @edi, align 4
  %v0_144a9 = load i32, i32* @ebx, align 4
  %v1_144ab = load i32, i32* @ecx, align 4
  %v2_144ab = sub i32 %v0_144a9, %v1_144ab
  %v2_144ad = ashr i32 %v2_144ab, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_144b0 = mul i32 %v2_144ad, 954437177
  store i32 %v3_144b0, i32* @edx, align 4
  %v1_144b6 = icmp eq i32 %v0_14495, 0
  br i1 %v1_144b6, label %bb, label %dec_label_pc_144be

bb:                                               ; preds = %dec_label_pc_14495
  %v2_144b8 = call i32 @function_14403(i32 0)
  br label %dec_label_pc_144be

dec_label_pc_144be:                               ; preds = %bb, %dec_label_pc_14495
  %v0_144be = phi i32 [ %v2_144b8, %bb ], [ %v0_14495, %dec_label_pc_14495 ]
  ret i32 %v0_144be
}

define i32 @function_144c3() local_unnamed_addr {
dec_label_pc_144c3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_144d0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_144d3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_144db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_144e7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_144eb = load i32, i32* %edi.global-to-local, align 4
  %v1_144ef = add i32 %arg1, 132
  %v2_144ef = inttoptr i32 %v1_144ef to i32*
  %v3_144ef = load i32, i32* %v2_144ef, align 4
  store i32 %v3_144ef, i32* @eax, align 8
  %v1_144f5 = icmp eq i32 %v3_144ef, 0
  br i1 %v1_144f5, label %bb, label %dec_label_pc_144f9

bb:                                               ; preds = %dec_label_pc_144d0
  %v5_144f7 = call i32 @function_14532(i32 %v0_144db, i32 %v0_144e7, i32 %v0_144d3, i32 %v0_144eb)
  store i32 %v5_144f7, i32* @eax, align 8
  %v0_144f9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_144f9

dec_label_pc_144f9:                               ; preds = %bb, %dec_label_pc_144d0
  %v0_1450b4 = phi i32 [ %v5_144f7, %bb ], [ %v3_144ef, %dec_label_pc_144d0 ]
  %v0_144f9 = phi i32 [ %v0_144f9.pre, %bb ], [ %arg1, %dec_label_pc_144d0 ]
  %v1_144f9 = add i32 %v0_144f9, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_144f9 = inttoptr i32 %v1_144f9 to i32*
  %v3_144f9 = load i32, i32* %v2_144f9, align 4
  store i32 %v3_144f9, i32* @edx, align 4
  %tmp117 = icmp ult i32 %v3_144f9, 10
  br i1 %tmp117, label %bb112, label %dec_label_pc_14508

bb112:                                            ; preds = %dec_label_pc_144f9
  %v3_14502 = call i32 @function_145a9()
  store i32 %v3_14502, i32* @eax, align 8
  %v0_14508.pre = load i32, i32* @esi, align 4
  %v0_14519.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %bb112, %dec_label_pc_144f9
  %v0_14519 = phi i32 [ %v0_14519.pre, %bb112 ], [ %v3_144f9, %dec_label_pc_144f9 ]
  %v0_1450b = phi i32 [ %v3_14502, %bb112 ], [ %v0_1450b4, %dec_label_pc_144f9 ]
  %v0_14513 = phi i32 [ %v0_14508.pre, %bb112 ], [ %v0_144f9, %dec_label_pc_144f9 ]
  %v1_14513 = add i32 %v0_14513, 136
  %v2_14513 = inttoptr i32 %v1_14513 to i32*
  %v3_14513 = load i32, i32* %v2_14513, align 4
  store i32 %v3_14513, i32* @ecx, align 4
  %v7_14519 = icmp ult i32 %v0_14519, %v3_14513
  br i1 %v7_14519, label %bb113, label %dec_label_pc_14521

bb113:                                            ; preds = %dec_label_pc_14508
  %v1_1451b = call i32 @function_145a9()
  store i32 %v1_1451b, i32* @eax, align 8
  br label %dec_label_pc_14521

dec_label_pc_14521:                               ; preds = %bb113, %dec_label_pc_14508
  %v0_1452a8 = phi i32 [ %v1_1451b, %bb113 ], [ %v0_1450b, %dec_label_pc_14508 ]
  %v1_14521 = icmp eq i32 %v3_14513, 0
  %v1_14523 = icmp eq i1 %v1_14521, false
  br i1 %v1_14523, label %bb114, label %dec_label_pc_14525

bb114:                                            ; preds = %dec_label_pc_14521
  %v2_14523 = call i32 @function_14568()
  br label %dec_label_pc_14525

dec_label_pc_14525:                               ; preds = %bb114, %dec_label_pc_14521
  %v0_1452a7 = phi i32 [ %v2_14523, %bb114 ], [ %v0_1452a8, %dec_label_pc_14521 ]
  %v0_14525 = load i32, i32* @edx, align 4
  %tmp118 = icmp ult i32 %v0_14525, 11
  br i1 %tmp118, label %bb116, label %dec_label_pc_1452a

bb116:                                            ; preds = %dec_label_pc_14525
  %v7_14528 = call i32 @function_14532(i32 %v0_144eb, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_1452a

dec_label_pc_1452a:                               ; preds = %bb116, %dec_label_pc_14525
  %v0_1452a = phi i32 [ %v7_14528, %bb116 ], [ %v0_1452a7, %dec_label_pc_14525 ]
  ret i32 %v0_1452a

; uselistorder directives
  uselistorder i32 %v3_144f9, { 1, 0, 2 }
  uselistorder i32 ()* @function_145a9, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14532, { 1, 0 }
}

define i32 @function_14532(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14532:
  %v2_14532 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_14532 = icmp eq i8 %v2_14532, 0
  br i1 %v9_14532, label %bb, label %dec_label_pc_14537

bb:                                               ; preds = %dec_label_pc_14532
  %v1_14535 = call i32 @function_14545()
  br label %dec_label_pc_14537

dec_label_pc_14537:                               ; preds = %bb, %dec_label_pc_14532
  %v0_14537 = load i32, i32* @esi, align 4
  %v1_14537 = add i32 %v0_14537, 4
  ret i32 %v1_14537
}

define i32 @function_14545() local_unnamed_addr {
dec_label_pc_14545:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_14549 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14549 = xor i32 %v1_14549, %tmp5
  %v3_14549 = icmp eq i32 %v2_14549, 0
  store i32 %v2_14549, i32* @eax, align 8
  %v1_14550 = icmp eq i1 %v3_14549, false
  br i1 %v1_14550, label %bb, label %dec_label_pc_14552

bb:                                               ; preds = %dec_label_pc_14545
  %v2_14550 = call i32 @function_145ae()
  br label %dec_label_pc_14552

dec_label_pc_14552:                               ; preds = %bb, %dec_label_pc_14545
  %v0_14561 = phi i32 [ %v2_14550, %bb ], [ %v2_14549, %dec_label_pc_14545 ]
  ret i32 %v0_14561
}

define i32 @function_14568() local_unnamed_addr {
dec_label_pc_14568:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_14568 = load i32, i32* @ecx, align 4
  %v2_14568 = mul i32 %v0_14568, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14568 = add i32 %v0_14568, -3
  %v4_14568 = add i32 %v3_14568, %v2_14568
  %v0_1456c = load i32, i32* @eax, align 8
  %v2_1456c = mul i32 %v4_14568, 4
  %v3_1456c = add i32 %v2_1456c, %v0_1456c
  store i32 %v3_1456c, i32* %ebx.global-to-local, align 4
  %v3_1456f = mul i32 %v0_14568, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_14574 = shl i32 %v3_1456f, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_14577 = sub i32 %v3_1456c, %v2_14574
  store i32 %v2_14577, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_14580

dec_label_pc_14580:                               ; preds = %dec_label_pc_14580, %dec_label_pc_14568
  %v0_14580 = phi i32 [ %v1_14588, %dec_label_pc_14580 ], [ %v3_1456c, %dec_label_pc_14568 ]
  %v1_14583 = call i32 @function_26c40(i32 %v0_14580)
  store i32 %v1_14583, i32* @eax, align 8
  %v0_14588 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14588 = add i32 %v0_14588, -12
  store i32 %v1_14588, i32* %ebx.global-to-local, align 4
  %v0_1458b = load i32, i32* %edi.global-to-local, align 4
  %v7_1458b = icmp ult i32 %v0_1458b, %v1_14588
  br i1 %v7_1458b, label %dec_label_pc_14580, label %dec_label_pc_1458f

dec_label_pc_1458f:                               ; preds = %dec_label_pc_14580
  ret i32 %v1_14583

; uselistorder directives
  uselistorder i32 %v1_14588, { 1, 2, 0 }
  uselistorder i32 %v0_14568, { 0, 2, 1 }
}

define i32 @function_14590() local_unnamed_addr {
dec_label_pc_14590:
  %eax.global-to-local = alloca i32, align 4
  %v0_14590 = load i32, i32* @eax, align 8
  %v1_14590 = load i32, i32* @esi, align 4
  store i32 %v1_14590, i32* %eax.global-to-local, align 8
  store i32 %v0_14590, i32* @esi, align 4
  %tmp = trunc i32 %v0_14590 to i8
  %v15_14591 = inttoptr i32 %v1_14590 to i8*
  store i8 %tmp, i8* %v15_14591, align 1
  %v0_14594 = load i32, i32* @ebx, align 4
  %v1_14594 = add i32 %v0_14594, 33926
  %v2_14594 = inttoptr i32 %v1_14594 to i8*
  %v3_14594 = load i8, i8* %v2_14594, align 1
  %v4_14594 = load i32, i32* @ecx, align 4
  %v5_14594 = trunc i32 %v4_14594 to i8
  %v6_14594 = add i8 %v5_14594, %v3_14594
  store i8 %v6_14594, i8* %v2_14594, align 1
  %v0_1459a = load i32, i32* @ebx, align 4
  %v2_1459a = load i32, i32* @ecx, align 4
  %v3_1459a = udiv i32 %v2_1459a, 256
  %v5_1459a = add i32 %v3_1459a, %v0_1459a
  %v20_1459a = urem i32 %v5_1459a, 256
  %v22_1459a = and i32 %v0_1459a, -256
  %v23_1459a = or i32 %v20_1459a, %v22_1459a
  store i32 %v23_1459a, i32* @ebx, align 4
  %v1_1459c = trunc i32 %v2_1459a to i8
  %v2_1459c = load i32, i32* @ebp, align 4
  %v3_1459c = add i32 %v2_1459c, -92077962
  %v4_1459c = inttoptr i32 %v3_1459c to i8*
  store i8 %v1_1459c, i8* %v4_1459c, align 1
  %v0_145a2 = load i32, i32* @ecx, align 4
  %v1_145a2 = trunc i32 %v0_145a2 to i8
  %v4_145a2 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v5_145a2 = or i8 %v1_145a2, %v4_145a2
  %v11_145a2 = zext i8 %v5_145a2 to i32
  %v13_145a2 = and i32 %v0_145a2, -256
  %v14_145a2 = or i32 %v11_145a2, %v13_145a2
  store i32 %v14_145a2, i32* @ecx, align 4
  %v13_145a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v13_145a4

; uselistorder directives
  uselistorder i32 %v2_1459a, { 1, 0 }
  uselistorder i32 %v0_1459a, { 1, 0 }
}

define i32 @function_145a9() local_unnamed_addr {
dec_label_pc_145a9:
  %v0_145a9 = load i32, i32* @eax, align 8
  ret i32 %v0_145a9
}

define i32 @function_145ae() local_unnamed_addr {
dec_label_pc_145ae:
  %v0_145ae = load i32, i32* @eax, align 8
  ret i32 %v0_145ae
}

define i32 @function_145b6() local_unnamed_addr {
dec_label_pc_145b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_145b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_145b6
}

define i32 @_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_145d0:
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @ebx, align 4
  %v0_145db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_145f7 = add i32 %arg1, 4
  %v2_145f7 = inttoptr i32 %v1_145f7 to i32*
  %v3_145f7 = load i32, i32* %v2_145f7, align 4
  store i32 %v3_145f7, i32* @eax, align 8
  %v2_145fa = add i32 %arg1, 8
  %v3_145fa = inttoptr i32 %v2_145fa to i32*
  %v4_145fa = load i32, i32* %v3_145fa, align 4
  %v15_145fa = icmp eq i32 %v3_145f7, %v4_145fa
  br i1 %v15_145fa, label %bb, label %dec_label_pc_14603

bb:                                               ; preds = %dec_label_pc_145d0
  %v2_14601 = call i32 @function_14668(i32 %v0_145db)
  br label %dec_label_pc_14603

dec_label_pc_14603:                               ; preds = %bb, %dec_label_pc_145d0
  %v0_14609 = phi i32 [ %v2_14601, %bb ], [ %v3_145f7, %dec_label_pc_145d0 ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_14605 = icmp eq i32 %v0_14609, 0
  br i1 %v1_14605, label %dec_label_pc_14603.dec_label_pc_14611_crit_edge, label %dec_label_pc_14609

dec_label_pc_14603.dec_label_pc_14611_crit_edge:  ; preds = %dec_label_pc_14603
  %v1_14614.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_14611

dec_label_pc_14609:                               ; preds = %dec_label_pc_14603
  %v1_14609 = add i32 %v0_14609, -4
  %v2_14609 = inttoptr i32 %v1_14609 to i32*
  %v3_14609 = load i32, i32* %v2_14609, align 4
  store i32 %v3_14609, i32* %edx.global-to-local, align 4
  %v2_1460c = inttoptr i32 %v0_14609 to i32*
  store i32 %v3_14609, i32* %v2_1460c, align 4
  %v0_1460e = load i32, i32* @ebx, align 4
  %v1_1460e = add i32 %v0_1460e, 4
  %v2_1460e = inttoptr i32 %v1_1460e to i32*
  %v3_1460e = load i32, i32* %v2_1460e, align 4
  store i32 %v3_1460e, i32* %edx.global-to-local, align 4
  %phitmp = add i32 %v3_1460e, 4
  br label %dec_label_pc_14611

dec_label_pc_14611:                               ; preds = %dec_label_pc_14603.dec_label_pc_14611_crit_edge, %dec_label_pc_14609
  %v1_14614 = phi i32 [ %v0_1460e, %dec_label_pc_14609 ], [ %v1_14614.pre, %dec_label_pc_14603.dec_label_pc_14611_crit_edge ]
  %v0_14611 = phi i32 [ %phitmp, %dec_label_pc_14609 ], [ 4, %dec_label_pc_14603.dec_label_pc_14611_crit_edge ]
  %v2_14614 = add i32 %v1_14614, 4
  %v3_14614 = inttoptr i32 %v2_14614 to i32*
  store i32 %v0_14611, i32* %v3_14614, align 4
  %v0_14617 = load i32, i32* %edx.global-to-local, align 4
  %v1_14617 = add i32 %v0_14617, -4
  %v1_1461c = load i32, i32* @esi, align 4
  %v2_1461c = sub i32 %v1_14617, %v1_1461c
  %v2_1461e = ashr i32 %v2_1461c, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1461e = icmp eq i32 %v2_1461e, 0
  %v1_14623 = icmp eq i1 %v3_1461e, false
  br i1 %v1_14623, label %dec_label_pc_14650, label %dec_label_pc_14625

dec_label_pc_14625:                               ; preds = %dec_label_pc_14611
  %v0_1461a = load i32, i32* @edi, align 4
  %v1_1461a = inttoptr i32 %v0_1461a to i32*
  %v2_1461a = load i32, i32* %v1_1461a, align 4
  %v2_14625 = inttoptr i32 %v1_1461c to i32*
  store i32 %v2_1461a, i32* %v2_14625, align 4
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb21, label %dec_label_pc_14638

bb21:                                             ; preds = %dec_label_pc_14625
  br label %dec_label_pc_14638

dec_label_pc_14638:                               ; preds = %bb21, %dec_label_pc_14625
  ret i32 0

dec_label_pc_14650:                               ; preds = %dec_label_pc_14611
  %v3_14650 = shl i32 %v2_1461e, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_14653 = sub i32 %v0_14617, %v3_14650
  store i32 %v2_14653, i32* %edx.global-to-local, align 4
  ret i32 %v3_14650

; uselistorder directives
  uselistorder i32 %v0_14609, { 1, 0, 2 }
  uselistorder i32 %v3_145f7, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14611, { 1, 0 }
}

define i32 @function_14665() local_unnamed_addr {
dec_label_pc_14665:
  %eax.global-to-local = alloca i32, align 4
  %v0_14665 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14665
}

define i32 @function_14668(i32 %arg1) local_unnamed_addr {
dec_label_pc_14668:
  %v2_14668 = load i32, i32* @ebx, align 4
  store i32 %v2_14668, i32* @edx, align 4
  %v0_1466a = load i32, i32* @eax, align 8
  %v2_1466a = sub i32 %v0_1466a, %v2_14668
  %v2_1466c = ashr i32 %v2_1466a, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1466c = icmp eq i32 %v2_1466c, 0
  store i32 %v2_1466c, i32* @eax, align 8
  br i1 %v3_1466c, label %bb, label %dec_label_pc_14677

bb:                                               ; preds = %dec_label_pc_14668
  %v1_14671 = call i32 @function_14730()
  store i32 %v1_14671, i32* @eax, align 8
  br label %dec_label_pc_14677

dec_label_pc_14677:                               ; preds = %bb, %dec_label_pc_14668
  %v0_14677 = phi i32 [ %v1_14671, %bb ], [ %v2_1466c, %dec_label_pc_14668 ]
  %v3_14677 = mul i32 %v0_14677, add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 1)
  store i32 %v3_14677, i32* @ecx, align 4
  %v2_1467a = mul i32 %v0_14677, sub (i32 1, i32 add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 1))
  %v7_1467a = icmp ult i32 %v0_14677, %v3_14677
  %v12_1467a = icmp eq i32 %v2_1467a, 0
  %v2_1467c = or i1 %v7_1467a, %v12_1467a
  br i1 %v2_1467c, label %bb6, label %dec_label_pc_14682

bb6:                                              ; preds = %dec_label_pc_14677
  %v3_1467c = call i32 @function_1474b()
  br label %dec_label_pc_14682

dec_label_pc_14682:                               ; preds = %bb6, %dec_label_pc_14677
  ret i32 -4

; uselistorder directives
  uselistorder i32 %v0_14677, { 1, 2, 0 }
}

define i32 @function_146a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_146a9:
  %v0_146a9 = load i32, i32* @ebp, align 4
  %v1_146a9 = load i32, i32* @edx, align 4
  %v2_146a9 = mul i32 %v1_146a9, 4
  %v3_146a9 = add i32 %v2_146a9, %v0_146a9
  %v1_146ad = icmp eq i32 %v3_146a9, 0
  br i1 %v1_146ad, label %dec_label_pc_146b5, label %dec_label_pc_146b1

dec_label_pc_146b1:                               ; preds = %dec_label_pc_146a9
  %v2_146b1 = load i32, i32* @edi, align 4
  %v2_146b3 = inttoptr i32 %v3_146a9 to i32*
  store i32 %v2_146b1, i32* %v2_146b3, align 4
  br label %dec_label_pc_146b5

dec_label_pc_146b5:                               ; preds = %dec_label_pc_146b1, %dec_label_pc_146a9
  %v2_146b5 = load i32, i32* @ebx, align 4
  store i32 %v2_146b5, i32* @edx, align 4
  %v0_146b7 = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v2_146bb = sub i32 %v0_146b7, %v2_146b5
  %v2_146bd = ashr i32 %v2_146bb, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_146bd = icmp eq i32 %v2_146bd, 0
  br i1 %v3_146bd, label %bb, label %dec_label_pc_146c4

bb:                                               ; preds = %dec_label_pc_146b5
  %v1_146c2 = call i32 @function_146db()
  br label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %bb, %dec_label_pc_146b5
  %v0_146c4 = phi i32 [ %v1_146c2, %bb ], [ %v2_146bd, %dec_label_pc_146b5 ]
  %v1_146c4 = mul i32 %v0_146c4, 4
  store i32 %v1_146c4, i32* @edi, align 4
  ret i32 %v0_146c4

; uselistorder directives
  uselistorder i32 %v0_146c4, { 1, 0 }
}

define i32 @function_146db() local_unnamed_addr {
dec_label_pc_146db:
  %v0_146db = load i32, i32* @ebx, align 4
  %v1_146db = add i32 %v0_146db, 4
  %v2_146db = inttoptr i32 %v1_146db to i32*
  %v3_146db = load i32, i32* %v2_146db, align 4
  %v0_146de = load i32, i32* @ebp, align 4
  %v1_146de = load i32, i32* @edi, align 4
  %v3_146de = add i32 %v0_146de, 4
  %v4_146de = add i32 %v3_146de, %v1_146de
  store i32 %v4_146de, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v1_146e4 = load i32, i32* @esi, align 4
  %v2_146e4 = sub i32 %v3_146db, %v1_146e4
  %v2_146e6 = sdiv i32 %v2_146e4, 4
  %v2_146e4.off = add i32 %v2_146e4, 3
  %tmp5 = icmp ult i32 %v2_146e4.off, 7
  br i1 %tmp5, label %bb, label %dec_label_pc_146ed

bb:                                               ; preds = %dec_label_pc_146db
  %v1_146eb = call i32 @function_1470c()
  br label %dec_label_pc_146ed

dec_label_pc_146ed:                               ; preds = %bb, %dec_label_pc_146db
  %v0_146ed = phi i32 [ %v1_146eb, %bb ], [ %v2_146e6, %dec_label_pc_146db ]
  ret i32 %v0_146ed
}

define i32 @function_1470c() local_unnamed_addr {
dec_label_pc_1470c:
  %v2_1470c = load i32, i32* @ebx, align 4
  store i32 %v2_1470c, i32* @eax, align 8
  %v0_1470e = load i32, i32* @edi, align 4
  %v1_1470e = load i32, i32* @edx, align 4
  %v2_1470e = add i32 %v1_1470e, %v0_1470e
  store i32 %v2_1470e, i32* @edi, align 4
  %v1_14710 = icmp eq i32 %v2_1470c, 0
  br i1 %v1_14710, label %bb, label %dec_label_pc_14714

bb:                                               ; preds = %dec_label_pc_1470c
  %v1_14712 = call i32 @function_1471c()
  br label %dec_label_pc_14714

dec_label_pc_14714:                               ; preds = %bb, %dec_label_pc_1470c
  %v3_14714 = phi i32 [ %v1_14712, %bb ], [ %v2_1470c, %dec_label_pc_1470c ]
  ret i32 %v3_14714
}

define i32 @function_1471c() local_unnamed_addr {
dec_label_pc_1471c:
  %ebp.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_1471c = load i32, i32* @ebp, align 4
  %v1_1471c = load i32, i32* @ebx, align 4
  %v2_1471c = inttoptr i32 %v1_1471c to i32*
  store i32 %v0_1471c, i32* %v2_1471c, align 4
  %v0_1471e = load i32, i32* @ebp, align 4
  %v5_1471e = add i32 %v0_1471e, %tmp
  store i32 %v5_1471e, i32* %ebp.global-to-local, align 4
  %v0_14722 = load i32, i32* @edi, align 4
  %v1_14722 = load i32, i32* @ebx, align 4
  %v2_14722 = add i32 %v1_14722, 4
  %v3_14722 = inttoptr i32 %v2_14722 to i32*
  store i32 %v0_14722, i32* %v3_14722, align 4
  %v0_14725 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14725 = load i32, i32* @ebx, align 4
  %v2_14725 = add i32 %v1_14725, 8
  %v3_14725 = inttoptr i32 %v2_14725 to i32*
  store i32 %v0_14725, i32* %v3_14725, align 4
  %v0_14728 = load i32, i32* @eax, align 8
  ret i32 %v0_14728
}

define i32 @function_14730() local_unnamed_addr {
dec_label_pc_14730:
  %v0_14730 = load i32, i32* @esi, align 4
  %v1_14732 = load i32, i32* @edx, align 4
  %v2_14732 = sub i32 %v0_14730, %v1_14732
  %v2_14736 = ashr i32 %v2_14732, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_14736, i32* @edx, align 4
  ret i32 %v2_14732
}

define i32 @function_14746() local_unnamed_addr {
dec_label_pc_14746:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1474b() local_unnamed_addr {
dec_label_pc_1474b:
  %v0_1474b = load i32, i32* @ecx, align 4
  %v0_14757 = load i32, i32* @eax, align 8
  store i32 0, i32* @ebp, align 4
  %v0_14760 = load i32, i32* @esi, align 4
  %v1_14762 = load i32, i32* @edx, align 4
  %v2_14762 = sub i32 %v0_14760, %v1_14762
  %v2_14766 = ashr i32 %v2_14762, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_14766, i32* @edx, align 4
  %v1_14769 = icmp eq i32 %v0_1474b, 0
  br i1 %v1_14769, label %bb, label %dec_label_pc_14771

bb:                                               ; preds = %dec_label_pc_1474b
  %v2_14757 = mul i32 %v0_14757, 8
  %v2_1476b = call i32 @function_146a9(i32 %v2_14757)
  br label %dec_label_pc_14771

dec_label_pc_14771:                               ; preds = %bb, %dec_label_pc_1474b
  %v0_14771 = phi i32 [ %v2_1476b, %bb ], [ %v2_14762, %dec_label_pc_1474b ]
  ret i32 %v0_14771
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14780:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_14783 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_1478b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_14797 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1479b = load i32, i32* %edi.global-to-local, align 4
  %v1_1479f = add i32 %arg1, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_1479f = inttoptr i32 %v1_1479f to i32*
  %v3_1479f = load i32, i32* %v2_1479f, align 4
  store i32 %v3_1479f, i32* @eax, align 8
  %v1_147a5 = icmp eq i32 %v3_1479f, 0
  br i1 %v1_147a5, label %bb, label %dec_label_pc_147a9

bb:                                               ; preds = %dec_label_pc_14780
  %v5_147a7 = call i32 @function_147d7(i32 %v0_1478b, i32 %v0_14797, i32 %v0_14783, i32 %v0_1479b)
  store i32 %v5_147a7, i32* @eax, align 8
  %v0_147a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_147a9

dec_label_pc_147a9:                               ; preds = %bb, %dec_label_pc_14780
  %v0_147b84 = phi i32 [ %v5_147a7, %bb ], [ %v3_1479f, %dec_label_pc_14780 ]
  %v0_147a9 = phi i32 [ %v0_147a9.pre, %bb ], [ %arg1, %dec_label_pc_14780 ]
  %v1_147a9 = add i32 %v0_147a9, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_147a9 = inttoptr i32 %v1_147a9 to i32*
  %v3_147a9 = load i32, i32* %v2_147a9, align 4
  store i32 %v3_147a9, i32* @edx, align 4
  %tmp119 = icmp ult i32 %v3_147a9, 10
  br i1 %tmp119, label %bb113, label %dec_label_pc_147b5

bb113:                                            ; preds = %dec_label_pc_147a9
  %v3_147af = call i32 @function_14841()
  store i32 %v3_147af, i32* @eax, align 8
  %v0_147b5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_147b5

dec_label_pc_147b5:                               ; preds = %bb113, %dec_label_pc_147a9
  %v0_147b8 = phi i32 [ %v3_147af, %bb113 ], [ %v0_147b84, %dec_label_pc_147a9 ]
  %v0_147b5 = phi i32 [ %v0_147b5.pre, %bb113 ], [ %v0_147a9, %dec_label_pc_147a9 ]
  %v1_147b5 = add i32 %v0_147b5, 4
  %v12_147b8 = icmp eq i32 %v0_147b8, %v1_147b5
  br i1 %v12_147b8, label %bb114, label %dec_label_pc_147bc

bb114:                                            ; preds = %dec_label_pc_147b5
  %v1_147ba = call i32 @function_14838()
  store i32 %v1_147ba, i32* @eax, align 8
  %v0_147bc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_147bc

dec_label_pc_147bc:                               ; preds = %bb114, %dec_label_pc_147b5
  %v0_147cf9 = phi i32 [ %v1_147ba, %bb114 ], [ %v0_147b8, %dec_label_pc_147b5 ]
  %v0_147bc = phi i32 [ %v0_147bc.pre, %bb114 ], [ %v0_147b5, %dec_label_pc_147b5 ]
  %v1_147bc = add i32 %v0_147bc, 132
  %v2_147bc = inttoptr i32 %v1_147bc to i32*
  %v3_147bc = load i32, i32* %v2_147bc, align 4
  store i32 %v3_147bc, i32* @ecx, align 4
  %v0_147c2 = load i32, i32* @edx, align 4
  %v7_147c2 = icmp ult i32 %v0_147c2, %v3_147bc
  br i1 %v7_147c2, label %bb115, label %dec_label_pc_147c6

bb115:                                            ; preds = %dec_label_pc_147bc
  %v1_147c4 = call i32 @function_14841()
  store i32 %v1_147c4, i32* @eax, align 8
  br label %dec_label_pc_147c6

dec_label_pc_147c6:                               ; preds = %bb115, %dec_label_pc_147bc
  %v0_147cf8 = phi i32 [ %v1_147c4, %bb115 ], [ %v0_147cf9, %dec_label_pc_147bc ]
  %v1_147c6 = icmp eq i32 %v3_147bc, 0
  %v1_147c8 = icmp eq i1 %v1_147c6, false
  br i1 %v1_147c8, label %bb116, label %dec_label_pc_147ca

bb116:                                            ; preds = %dec_label_pc_147c6
  %v2_147c8 = call i32 @function_14800()
  br label %dec_label_pc_147ca

dec_label_pc_147ca:                               ; preds = %bb116, %dec_label_pc_147c6
  %v0_147cf7 = phi i32 [ %v2_147c8, %bb116 ], [ %v0_147cf8, %dec_label_pc_147c6 ]
  %v0_147ca = load i32, i32* @edx, align 4
  %tmp120 = icmp ult i32 %v0_147ca, 11
  br i1 %tmp120, label %bb118, label %dec_label_pc_147cf

bb118:                                            ; preds = %dec_label_pc_147ca
  %v7_147cd = call i32 @function_147d7(i32 %v0_1479b, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_147cf

dec_label_pc_147cf:                               ; preds = %bb118, %dec_label_pc_147ca
  %v0_147cf = phi i32 [ %v7_147cd, %bb118 ], [ %v0_147cf7, %dec_label_pc_147ca ]
  ret i32 %v0_147cf

; uselistorder directives
  uselistorder i32 %v0_147b8, { 1, 0 }
  uselistorder i32 ()* @function_14841, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_147d7, { 1, 0 }
}

define i32 @function_147d7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_147d7:
  %v2_147d7 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_147d7 = icmp eq i8 %v2_147d7, 0
  br i1 %v9_147d7, label %dec_label_pc_147df, label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147d7
  %v0_147dc = load i32, i32* @esi, align 4
  %v1_147dc = inttoptr i32 %v0_147dc to i8*
  store i8 0, i8* %v1_147dc, align 1
  br label %dec_label_pc_147df

dec_label_pc_147df:                               ; preds = %dec_label_pc_147dc, %dec_label_pc_147d7
  %v1_147e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_147e3 = xor i32 %v1_147e3, %arg1
  %v3_147e3 = icmp eq i32 %v2_147e3, 0
  store i32 %v2_147e3, i32* @eax, align 8
  %v1_147ea = icmp eq i1 %v3_147e3, false
  br i1 %v1_147ea, label %bb, label %dec_label_pc_147ec

bb:                                               ; preds = %dec_label_pc_147df
  %v2_147ea = call i32 @function_14846()
  br label %dec_label_pc_147ec

dec_label_pc_147ec:                               ; preds = %bb, %dec_label_pc_147df
  %v0_147fb = phi i32 [ %v2_147ea, %bb ], [ %v2_147e3, %dec_label_pc_147df ]
  store i32 %arg3, i32* @esi, align 4
  ret i32 %v0_147fb
}

define i32 @function_14800() local_unnamed_addr {
dec_label_pc_14800:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_14800 = load i32, i32* @ecx, align 4
  %v2_14800 = mul i32 %v0_14800, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14800 = add i32 %v0_14800, -3
  %v4_14800 = add i32 %v3_14800, %v2_14800
  %v0_14804 = load i32, i32* @eax, align 8
  %v2_14804 = mul i32 %v4_14800, 4
  %v3_14804 = add i32 %v2_14804, %v0_14804
  store i32 %v3_14804, i32* %ebx.global-to-local, align 4
  %v3_14807 = mul i32 %v0_14800, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_1480c = shl i32 %v3_14807, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_1480f = sub i32 %v3_14804, %v2_1480c
  store i32 %v2_1480f, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %dec_label_pc_14818, %dec_label_pc_14800
  %v0_14818 = phi i32 [ %v1_14820, %dec_label_pc_14818 ], [ %v3_14804, %dec_label_pc_14800 ]
  %v1_1481b = call i32 @function_26ef0(i32 %v0_14818)
  store i32 %v1_1481b, i32* @eax, align 8
  %v0_14820 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14820 = add i32 %v0_14820, -12
  store i32 %v1_14820, i32* %ebx.global-to-local, align 4
  %v0_14823 = load i32, i32* %edi.global-to-local, align 4
  %v7_14823 = icmp ult i32 %v0_14823, %v1_14820
  br i1 %v7_14823, label %dec_label_pc_14818, label %dec_label_pc_14827

dec_label_pc_14827:                               ; preds = %dec_label_pc_14818
  %v0_14827 = load i32, i32* @esi, align 4
  %v1_14827 = add i32 %v0_14827, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_14827 = inttoptr i32 %v1_14827 to i32*
  %v3_14827 = load i32, i32* %v2_14827, align 4
  store i32 %v3_14827, i32* @edx, align 4
  %v1_1482a = add i32 %v0_14827, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_1482a = inttoptr i32 %v1_1482a to i32*
  %v3_1482a = load i32, i32* %v2_1482a, align 4
  ret i32 %v3_1482a

; uselistorder directives
  uselistorder i32 %v1_14820, { 1, 2, 0 }
  uselistorder i32 %v0_14800, { 0, 2, 1 }
}

define i32 @function_14838() local_unnamed_addr {
dec_label_pc_14838:
  %v0_1483b = load i32, i32* @eax, align 8
  ret i32 %v0_1483b
}

define i32 @function_14841() local_unnamed_addr {
dec_label_pc_14841:
  %v0_14841 = call i32 @function_22d3a()
  ret i32 %v0_14841
}

define i32 @function_14846() local_unnamed_addr {
dec_label_pc_14846:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14860:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_14860 = load i32, i32* %edi.global-to-local, align 4
  %v0_14861 = load i32, i32* %esi.global-to-local, align 4
  %v0_14862 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1486a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1487a = icmp eq i32 %arg2, 0
  %v1_1487c = icmp eq i1 %v1_1487a, false
  br i1 %v1_1487c, label %dec_label_pc_14882, label %dec_label_pc_1487e

dec_label_pc_1487e:                               ; preds = %dec_label_pc_14860
  %v4_1487e = call i32 @function_148af(i32 %v0_1486a, i32 %v0_14862, i32 %v0_14861, i32 %v0_14860)
  ret i32 %v4_1487e

dec_label_pc_14882:                               ; preds = %dec_label_pc_14860
  %v1_14882 = add i32 %arg2, 12
  %v2_14882 = inttoptr i32 %v1_14882 to i32*
  %v3_14882 = load i32, i32* %v2_14882, align 4
  store i32 %v3_14882, i32* @eax, align 8
  %v2_1488c = call i32 @function_290c0(i32 %arg1, i32 %v3_14882)
  %v1_14891 = add i32 %arg2, 16
  %v2_14891 = inttoptr i32 %v1_14891 to i32*
  %v3_14891 = load i32, i32* %v2_14891, align 4
  store i32 %v3_14891, i32* @eax, align 8
  %v1_14894 = add i32 %arg2, 8
  %v2_14894 = inttoptr i32 %v1_14894 to i32*
  %v3_14894 = load i32, i32* %v2_14894, align 4
  store i32 %v3_14894, i32* %esi.global-to-local, align 4
  %v1_14897 = icmp eq i32 %v3_14891, 0
  br i1 %v1_14897, label %bb, label %dec_label_pc_1489b

bb:                                               ; preds = %dec_label_pc_14882
  %v1_14899 = call i32 @function_148a3()
  br label %dec_label_pc_1489b

dec_label_pc_1489b:                               ; preds = %bb, %dec_label_pc_14882
  %v0_1489b = phi i32 [ %v1_14899, %bb ], [ %v3_14891, %dec_label_pc_14882 ]
  ret i32 %v0_1489b

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_148a3() local_unnamed_addr {
dec_label_pc_148a3:
  %v3_148a3 = load i32, i32* @eax, align 8
  ret i32 %v3_148a3
}

define i32 @function_148af(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_148af:
  %v1_148b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_148b3 = xor i32 %v1_148b3, %arg1
  %v3_148b3 = icmp eq i32 %v2_148b3, 0
  %v1_148ba = icmp eq i1 %v3_148b3, false
  br i1 %v1_148ba, label %dec_label_pc_148c3, label %dec_label_pc_148bc

dec_label_pc_148bc:                               ; preds = %dec_label_pc_148af
  ret i32 %v2_148b3

dec_label_pc_148c3:                               ; preds = %dec_label_pc_148af
  ret i32 %v2_148b3

; uselistorder directives
  uselistorder i32 %v2_148b3, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_148d0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_148d3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_148db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_148e7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_148eb = load i32, i32* %edi.global-to-local, align 4
  %v1_148ef = add i32 %arg1, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_148ef = inttoptr i32 %v1_148ef to i32*
  %v3_148ef = load i32, i32* %v2_148ef, align 4
  store i32 %v3_148ef, i32* @eax, align 8
  %v1_148f5 = icmp eq i32 %v3_148ef, 0
  br i1 %v1_148f5, label %bb, label %dec_label_pc_148f9

bb:                                               ; preds = %dec_label_pc_148d0
  %v5_148f7 = call i32 @function_14927(i32 %v0_148db, i32 %v0_148e7, i32 %v0_148d3, i32 %v0_148eb)
  store i32 %v5_148f7, i32* @eax, align 8
  %v0_148f9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_148f9

dec_label_pc_148f9:                               ; preds = %bb, %dec_label_pc_148d0
  %v0_149084 = phi i32 [ %v5_148f7, %bb ], [ %v3_148ef, %dec_label_pc_148d0 ]
  %v0_148f9 = phi i32 [ %v0_148f9.pre, %bb ], [ %arg1, %dec_label_pc_148d0 ]
  %v1_148f9 = add i32 %v0_148f9, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_148f9 = inttoptr i32 %v1_148f9 to i32*
  %v3_148f9 = load i32, i32* %v2_148f9, align 4
  store i32 %v3_148f9, i32* @edx, align 4
  %tmp119 = icmp ult i32 %v3_148f9, 10
  br i1 %tmp119, label %bb113, label %dec_label_pc_14905

bb113:                                            ; preds = %dec_label_pc_148f9
  %v3_148ff = call i32 @function_14991()
  store i32 %v3_148ff, i32* @eax, align 8
  %v0_14905.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_14905

dec_label_pc_14905:                               ; preds = %bb113, %dec_label_pc_148f9
  %v0_14908 = phi i32 [ %v3_148ff, %bb113 ], [ %v0_149084, %dec_label_pc_148f9 ]
  %v0_14905 = phi i32 [ %v0_14905.pre, %bb113 ], [ %v0_148f9, %dec_label_pc_148f9 ]
  %v1_14905 = add i32 %v0_14905, 4
  %v12_14908 = icmp eq i32 %v0_14908, %v1_14905
  br i1 %v12_14908, label %bb114, label %dec_label_pc_1490c

bb114:                                            ; preds = %dec_label_pc_14905
  %v1_1490a = call i32 @function_14988()
  store i32 %v1_1490a, i32* @eax, align 8
  %v0_1490c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1490c

dec_label_pc_1490c:                               ; preds = %bb114, %dec_label_pc_14905
  %v0_1491f9 = phi i32 [ %v1_1490a, %bb114 ], [ %v0_14908, %dec_label_pc_14905 ]
  %v0_1490c = phi i32 [ %v0_1490c.pre, %bb114 ], [ %v0_14905, %dec_label_pc_14905 ]
  %v1_1490c = add i32 %v0_1490c, 132
  %v2_1490c = inttoptr i32 %v1_1490c to i32*
  %v3_1490c = load i32, i32* %v2_1490c, align 4
  store i32 %v3_1490c, i32* @ecx, align 4
  %v0_14912 = load i32, i32* @edx, align 4
  %v7_14912 = icmp ult i32 %v0_14912, %v3_1490c
  br i1 %v7_14912, label %bb115, label %dec_label_pc_14916

bb115:                                            ; preds = %dec_label_pc_1490c
  %v1_14914 = call i32 @function_14991()
  store i32 %v1_14914, i32* @eax, align 8
  br label %dec_label_pc_14916

dec_label_pc_14916:                               ; preds = %bb115, %dec_label_pc_1490c
  %v0_1491f8 = phi i32 [ %v1_14914, %bb115 ], [ %v0_1491f9, %dec_label_pc_1490c ]
  %v1_14916 = icmp eq i32 %v3_1490c, 0
  %v1_14918 = icmp eq i1 %v1_14916, false
  br i1 %v1_14918, label %bb116, label %dec_label_pc_1491a

bb116:                                            ; preds = %dec_label_pc_14916
  %v2_14918 = call i32 @function_14950()
  br label %dec_label_pc_1491a

dec_label_pc_1491a:                               ; preds = %bb116, %dec_label_pc_14916
  %v0_1491f7 = phi i32 [ %v2_14918, %bb116 ], [ %v0_1491f8, %dec_label_pc_14916 ]
  %v0_1491a = load i32, i32* @edx, align 4
  %tmp120 = icmp ult i32 %v0_1491a, 11
  br i1 %tmp120, label %bb118, label %dec_label_pc_1491f

bb118:                                            ; preds = %dec_label_pc_1491a
  %v7_1491d = call i32 @function_14927(i32 %v0_148eb, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_1491f

dec_label_pc_1491f:                               ; preds = %bb118, %dec_label_pc_1491a
  %v0_1491f = phi i32 [ %v7_1491d, %bb118 ], [ %v0_1491f7, %dec_label_pc_1491a ]
  ret i32 %v0_1491f

; uselistorder directives
  uselistorder i32 %v0_14908, { 1, 0 }
  uselistorder i32 ()* @function_14991, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14927, { 1, 0 }
}

define i32 @function_14927(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14927:
  %v2_14927 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_14927 = icmp eq i8 %v2_14927, 0
  br i1 %v9_14927, label %dec_label_pc_1492f, label %dec_label_pc_1492c

dec_label_pc_1492c:                               ; preds = %dec_label_pc_14927
  %v0_1492c = load i32, i32* @esi, align 4
  %v1_1492c = inttoptr i32 %v0_1492c to i8*
  store i8 0, i8* %v1_1492c, align 1
  br label %dec_label_pc_1492f

dec_label_pc_1492f:                               ; preds = %dec_label_pc_1492c, %dec_label_pc_14927
  %v1_14933 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14933 = xor i32 %v1_14933, %arg1
  %v3_14933 = icmp eq i32 %v2_14933, 0
  store i32 %v2_14933, i32* @eax, align 8
  %v1_1493a = icmp eq i1 %v3_14933, false
  br i1 %v1_1493a, label %bb, label %dec_label_pc_1493c

bb:                                               ; preds = %dec_label_pc_1492f
  %v2_1493a = call i32 @function_14996()
  br label %dec_label_pc_1493c

dec_label_pc_1493c:                               ; preds = %bb, %dec_label_pc_1492f
  %v0_1494b = phi i32 [ %v2_1493a, %bb ], [ %v2_14933, %dec_label_pc_1492f ]
  store i32 %arg3, i32* @esi, align 4
  ret i32 %v0_1494b
}

define i32 @function_14950() local_unnamed_addr {
dec_label_pc_14950:
  %edi.global-to-local = alloca i32, align 4
  %v0_14950 = load i32, i32* @ecx, align 4
  %v2_14950 = mul i32 %v0_14950, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14950 = add i32 %v0_14950, -3
  %v4_14950 = add i32 %v3_14950, %v2_14950
  %v0_14954 = load i32, i32* @eax, align 8
  %v2_14954 = mul i32 %v4_14950, 4
  %v3_14954 = add i32 %v2_14954, %v0_14954
  store i32 %v3_14954, i32* @ebx, align 4
  %v3_14957 = mul i32 %v0_14950, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_1495c = shl i32 %v3_14957, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_1495f = sub i32 %v3_14954, %v2_1495c
  store i32 %v2_1495f, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_14968

dec_label_pc_14968:                               ; preds = %dec_label_pc_14968, %dec_label_pc_14950
  %v0_14968 = phi i32 [ %v1_14970, %dec_label_pc_14968 ], [ %v3_14954, %dec_label_pc_14950 ]
  %v1_1496b = call i32 @function_27040(i32 %v0_14968)
  store i32 %v1_1496b, i32* @eax, align 8
  %v0_14970 = load i32, i32* @ebx, align 4
  %v1_14970 = add i32 %v0_14970, -12
  store i32 %v1_14970, i32* @ebx, align 4
  %v0_14973 = load i32, i32* %edi.global-to-local, align 4
  %v7_14973 = icmp ult i32 %v0_14973, %v1_14970
  br i1 %v7_14973, label %dec_label_pc_14968, label %dec_label_pc_14977

dec_label_pc_14977:                               ; preds = %dec_label_pc_14968
  %v0_14977 = load i32, i32* @esi, align 4
  %v1_14977 = add i32 %v0_14977, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_14977 = inttoptr i32 %v1_14977 to i32*
  %v3_14977 = load i32, i32* %v2_14977, align 4
  store i32 %v3_14977, i32* @edx, align 4
  %v1_1497a = add i32 %v0_14977, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_1497a = inttoptr i32 %v1_1497a to i32*
  %v3_1497a = load i32, i32* %v2_1497a, align 4
  ret i32 %v3_1497a

; uselistorder directives
  uselistorder i32 %v1_14970, { 1, 2, 0 }
  uselistorder i32 %v0_14950, { 0, 2, 1 }
}

define i32 @function_14988() local_unnamed_addr {
dec_label_pc_14988:
  %v0_1498b = load i32, i32* @eax, align 8
  ret i32 %v0_1498b
}

define i32 @function_14991() local_unnamed_addr {
dec_label_pc_14991:
  %v0_14991 = call i32 @function_22e8a()
  ret i32 %v0_14991
}

define i32 @function_14996() local_unnamed_addr {
dec_label_pc_14996:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_149b0:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_149b3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_149bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_149c7 = load i32, i32* @ebx, align 4
  %v0_149cb = load i32, i32* %edi.global-to-local, align 4
  %v1_149cf = add i32 %arg1, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_149cf = inttoptr i32 %v1_149cf to i32*
  %v3_149cf = load i32, i32* %v2_149cf, align 4
  store i32 %v3_149cf, i32* @eax, align 8
  %v1_149d5 = icmp eq i32 %v3_149cf, 0
  br i1 %v1_149d5, label %bb, label %dec_label_pc_149d9

bb:                                               ; preds = %dec_label_pc_149b0
  %v5_149d7 = call i32 @function_14a07(i32 %v0_149bb, i32 %v0_149c7, i32 %v0_149b3, i32 %v0_149cb)
  store i32 %v5_149d7, i32* @eax, align 8
  %v0_149d9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_149d9

dec_label_pc_149d9:                               ; preds = %bb, %dec_label_pc_149b0
  %v0_149e84 = phi i32 [ %v5_149d7, %bb ], [ %v3_149cf, %dec_label_pc_149b0 ]
  %v0_149d9 = phi i32 [ %v0_149d9.pre, %bb ], [ %arg1, %dec_label_pc_149b0 ]
  %v1_149d9 = add i32 %v0_149d9, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_149d9 = inttoptr i32 %v1_149d9 to i32*
  %v3_149d9 = load i32, i32* %v2_149d9, align 4
  store i32 %v3_149d9, i32* @edx, align 4
  %tmp119 = icmp ult i32 %v3_149d9, 10
  br i1 %tmp119, label %bb113, label %dec_label_pc_149e5

bb113:                                            ; preds = %dec_label_pc_149d9
  %v3_149df = call i32 @function_14a71()
  store i32 %v3_149df, i32* @eax, align 8
  %v0_149e5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_149e5

dec_label_pc_149e5:                               ; preds = %bb113, %dec_label_pc_149d9
  %v0_149e8 = phi i32 [ %v3_149df, %bb113 ], [ %v0_149e84, %dec_label_pc_149d9 ]
  %v0_149e5 = phi i32 [ %v0_149e5.pre, %bb113 ], [ %v0_149d9, %dec_label_pc_149d9 ]
  %v1_149e5 = add i32 %v0_149e5, 4
  %v12_149e8 = icmp eq i32 %v0_149e8, %v1_149e5
  br i1 %v12_149e8, label %bb114, label %dec_label_pc_149ec

bb114:                                            ; preds = %dec_label_pc_149e5
  %v1_149ea = call i32 @function_14a68()
  store i32 %v1_149ea, i32* @eax, align 8
  %v0_149ec.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %bb114, %dec_label_pc_149e5
  %v0_149ff9 = phi i32 [ %v1_149ea, %bb114 ], [ %v0_149e8, %dec_label_pc_149e5 ]
  %v0_149ec = phi i32 [ %v0_149ec.pre, %bb114 ], [ %v0_149e5, %dec_label_pc_149e5 ]
  %v1_149ec = add i32 %v0_149ec, 132
  %v2_149ec = inttoptr i32 %v1_149ec to i32*
  %v3_149ec = load i32, i32* %v2_149ec, align 4
  store i32 %v3_149ec, i32* @ecx, align 4
  %v0_149f2 = load i32, i32* @edx, align 4
  %v7_149f2 = icmp ult i32 %v0_149f2, %v3_149ec
  br i1 %v7_149f2, label %bb115, label %dec_label_pc_149f6

bb115:                                            ; preds = %dec_label_pc_149ec
  %v1_149f4 = call i32 @function_14a71()
  store i32 %v1_149f4, i32* @eax, align 8
  br label %dec_label_pc_149f6

dec_label_pc_149f6:                               ; preds = %bb115, %dec_label_pc_149ec
  %v0_149ff8 = phi i32 [ %v1_149f4, %bb115 ], [ %v0_149ff9, %dec_label_pc_149ec ]
  %v1_149f6 = icmp eq i32 %v3_149ec, 0
  %v1_149f8 = icmp eq i1 %v1_149f6, false
  br i1 %v1_149f8, label %bb116, label %dec_label_pc_149fa

bb116:                                            ; preds = %dec_label_pc_149f6
  %v2_149f8 = call i32 @function_14a30()
  br label %dec_label_pc_149fa

dec_label_pc_149fa:                               ; preds = %bb116, %dec_label_pc_149f6
  %v0_149ff7 = phi i32 [ %v2_149f8, %bb116 ], [ %v0_149ff8, %dec_label_pc_149f6 ]
  %v0_149fa = load i32, i32* @edx, align 4
  %tmp120 = icmp ult i32 %v0_149fa, 11
  br i1 %tmp120, label %bb118, label %dec_label_pc_149ff

bb118:                                            ; preds = %dec_label_pc_149fa
  %v7_149fd = call i32 @function_14a07(i32 %v0_149cb, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_149ff

dec_label_pc_149ff:                               ; preds = %bb118, %dec_label_pc_149fa
  %v0_149ff = phi i32 [ %v7_149fd, %bb118 ], [ %v0_149ff7, %dec_label_pc_149fa ]
  ret i32 %v0_149ff

; uselistorder directives
  uselistorder i32 %v0_149e8, { 1, 0 }
  uselistorder i32 ()* @function_14a71, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14a07, { 1, 0 }
}

define i32 @function_14a07(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14a07:
  %v2_14a07 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_14a07 = icmp eq i8 %v2_14a07, 0
  br i1 %v9_14a07, label %dec_label_pc_14a0f, label %dec_label_pc_14a0c

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_14a07
  %v0_14a0c = load i32, i32* @esi, align 4
  %v1_14a0c = inttoptr i32 %v0_14a0c to i8*
  store i8 0, i8* %v1_14a0c, align 1
  br label %dec_label_pc_14a0f

dec_label_pc_14a0f:                               ; preds = %dec_label_pc_14a0c, %dec_label_pc_14a07
  %v1_14a13 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14a13 = xor i32 %v1_14a13, %arg1
  %v3_14a13 = icmp eq i32 %v2_14a13, 0
  store i32 %v2_14a13, i32* @eax, align 8
  %v1_14a1a = icmp eq i1 %v3_14a13, false
  br i1 %v1_14a1a, label %bb, label %dec_label_pc_14a1c

bb:                                               ; preds = %dec_label_pc_14a0f
  %v2_14a1a = call i32 @function_14a76()
  br label %dec_label_pc_14a1c

dec_label_pc_14a1c:                               ; preds = %bb, %dec_label_pc_14a0f
  %v0_14a2b = phi i32 [ %v2_14a1a, %bb ], [ %v2_14a13, %dec_label_pc_14a0f ]
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  ret i32 %v0_14a2b
}

define i32 @function_14a30() local_unnamed_addr {
dec_label_pc_14a30:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_14a30 = load i32, i32* @ecx, align 4
  %v2_14a30 = mul i32 %v0_14a30, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14a30 = add i32 %v0_14a30, -3
  %v4_14a30 = add i32 %v3_14a30, %v2_14a30
  %v0_14a34 = load i32, i32* @eax, align 8
  %v2_14a34 = mul i32 %v4_14a30, 4
  %v3_14a34 = add i32 %v2_14a34, %v0_14a34
  store i32 %v3_14a34, i32* %ebx.global-to-local, align 4
  %v3_14a37 = mul i32 %v0_14a30, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_14a3c = shl i32 %v3_14a37, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_14a3f = sub i32 %v3_14a34, %v2_14a3c
  store i32 %v2_14a3f, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_14a48

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a48, %dec_label_pc_14a30
  %v0_14a48 = phi i32 [ %v1_14a50, %dec_label_pc_14a48 ], [ %v3_14a34, %dec_label_pc_14a30 ]
  %v1_14a4b = call i32 @function_27120(i32 %v0_14a48)
  store i32 %v1_14a4b, i32* @eax, align 8
  %v0_14a50 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14a50 = add i32 %v0_14a50, -12
  store i32 %v1_14a50, i32* %ebx.global-to-local, align 4
  %v0_14a53 = load i32, i32* %edi.global-to-local, align 4
  %v7_14a53 = icmp ult i32 %v0_14a53, %v1_14a50
  br i1 %v7_14a53, label %dec_label_pc_14a48, label %dec_label_pc_14a57

dec_label_pc_14a57:                               ; preds = %dec_label_pc_14a48
  %v0_14a57 = load i32, i32* @esi, align 4
  %v1_14a57 = add i32 %v0_14a57, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_14a57 = inttoptr i32 %v1_14a57 to i32*
  %v3_14a57 = load i32, i32* %v2_14a57, align 4
  store i32 %v3_14a57, i32* @edx, align 4
  %v1_14a5a = add i32 %v0_14a57, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_14a5a = inttoptr i32 %v1_14a5a to i32*
  %v3_14a5a = load i32, i32* %v2_14a5a, align 4
  ret i32 %v3_14a5a

; uselistorder directives
  uselistorder i32 %v1_14a50, { 1, 2, 0 }
  uselistorder i32 %v0_14a30, { 0, 2, 1 }
}

define i32 @function_14a68() local_unnamed_addr {
dec_label_pc_14a68:
  %v0_14a6b = load i32, i32* @eax, align 8
  ret i32 %v0_14a6b
}

define i32 @function_14a71() local_unnamed_addr {
dec_label_pc_14a71:
  %v0_14a71 = call i32 @function_22f6a()
  ret i32 %v0_14a71
}

define i32 @function_14a76() local_unnamed_addr {
dec_label_pc_14a76:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a90:
  %tmp12 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @ebx, align 4
  %v0_14a9b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp12, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_14ab7 = add i32 %arg1, 4
  %v2_14ab7 = inttoptr i32 %v1_14ab7 to i32*
  %v3_14ab7 = load i32, i32* %v2_14ab7, align 4
  store i32 %v3_14ab7, i32* @edx, align 4
  %v2_14aba = add i32 %arg1, 8
  %v3_14aba = inttoptr i32 %v2_14aba to i32*
  %v4_14aba = load i32, i32* %v3_14aba, align 4
  %v15_14aba = icmp eq i32 %v3_14ab7, %v4_14aba
  br i1 %v15_14aba, label %bb, label %dec_label_pc_14ac3

bb:                                               ; preds = %dec_label_pc_14a90
  %v2_14ac1 = call i32 @function_14b20(i32 %v0_14a9b)
  br label %dec_label_pc_14ac3

dec_label_pc_14ac3:                               ; preds = %bb, %dec_label_pc_14a90
  %v1_14ac3 = icmp eq i32 %v3_14ab7, 0
  br i1 %v1_14ac3, label %dec_label_pc_14acc, label %dec_label_pc_14ac7

dec_label_pc_14ac7:                               ; preds = %dec_label_pc_14ac3
  %v1_14ac7 = add i32 %v3_14ab7, -4
  %v2_14ac7 = inttoptr i32 %v1_14ac7 to i32*
  %v3_14ac7 = load i32, i32* %v2_14ac7, align 4
  %v2_14aca = inttoptr i32 %v3_14ab7 to i32*
  store i32 %v3_14ac7, i32* %v2_14aca, align 4
  br label %dec_label_pc_14acc

dec_label_pc_14acc:                               ; preds = %dec_label_pc_14ac3, %dec_label_pc_14ac7
  %v1_14ad2.pre-phi = phi i32 [ %v1_14ac7, %dec_label_pc_14ac7 ], [ -4, %dec_label_pc_14ac3 ]
  %v1_14acc = add i32 %v3_14ab7, 4
  %v1_14acf = load i32, i32* @ebx, align 4
  %v2_14acf = add i32 %v1_14acf, 4
  %v3_14acf = inttoptr i32 %v2_14acf to i32*
  store i32 %v1_14acc, i32* %v3_14acf, align 4
  %v1_14ad7 = load i32, i32* @esi, align 4
  %v2_14ad7 = sub i32 %v1_14ad2.pre-phi, %v1_14ad7
  %v2_14ad9 = ashr i32 %v2_14ad7, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14ad9 = icmp eq i32 %v2_14ad9, 0
  %v1_14ade = icmp eq i1 %v3_14ad9, false
  br i1 %v1_14ade, label %dec_label_pc_14b08, label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14acc
  %v0_14ad5 = load i32, i32* @edi, align 4
  %v1_14ad5 = inttoptr i32 %v0_14ad5 to i32*
  %v2_14ad5 = load i32, i32* %v1_14ad5, align 4
  %v2_14ae0 = inttoptr i32 %v1_14ad7 to i32*
  store i32 %v2_14ad5, i32* %v2_14ae0, align 4
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb19, label %dec_label_pc_14af3

bb19:                                             ; preds = %dec_label_pc_14ae0
  br label %dec_label_pc_14af3

dec_label_pc_14af3:                               ; preds = %bb19, %dec_label_pc_14ae0
  ret i32 0

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14acc
  %v3_14b08 = shl i32 %v2_14ad9, ptrtoint (i64* @global_var_2.2539 to i32)
  ret i32 %v3_14b08

; uselistorder directives
  uselistorder i32 %v3_14ab7, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14acc, { 1, 0 }
}

define i32 @function_14b1d() local_unnamed_addr {
dec_label_pc_14b1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_14b1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14b1d
}

define i32 @function_14b20(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b20:
  %v2_14b20 = load i32, i32* @ebx, align 4
  store i32 %v2_14b20, i32* @eax, align 8
  %v0_14b22 = load i32, i32* @edx, align 4
  %v2_14b22 = sub i32 %v0_14b22, %v2_14b20
  %v2_14b24 = ashr i32 %v2_14b22, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14b24 = icmp eq i32 %v2_14b24, 0
  store i32 %v2_14b24, i32* @edx, align 4
  br i1 %v3_14b24, label %bb, label %dec_label_pc_14b2f

bb:                                               ; preds = %dec_label_pc_14b20
  %v1_14b29 = call i32 @function_14bb0()
  store i32 %v1_14b29, i32* @eax, align 8
  br label %dec_label_pc_14b2f

dec_label_pc_14b2f:                               ; preds = %bb, %dec_label_pc_14b20
  %v5_14b2f = mul i32 %v2_14b24, add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 1)
  store i32 %v5_14b2f, i32* @ecx, align 4
  %v3_14b32 = mul i32 %v2_14b24, sub (i32 1, i32 add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 1))
  %v8_14b32 = icmp ult i32 %v2_14b24, %v5_14b2f
  %v13_14b32 = icmp eq i32 %v3_14b32, 0
  %v2_14b34 = or i1 %v8_14b32, %v13_14b32
  br i1 %v2_14b34, label %bb9, label %dec_label_pc_14b3a

bb9:                                              ; preds = %dec_label_pc_14b2f
  %v3_14b34 = call i32 @function_14c11()
  br label %dec_label_pc_14b3a

dec_label_pc_14b3a:                               ; preds = %bb9, %dec_label_pc_14b2f
  ret i32 -4

; uselistorder directives
  uselistorder i32 %v5_14b2f, { 1, 0 }
  uselistorder i32 %v2_14b24, { 2, 0, 1, 3, 4 }
}

define i32 @function_14b61(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b61:
  %edx.global-to-local = alloca i32, align 4
  %v0_14b61 = load i32, i32* @ebp, align 4
  %v1_14b61 = load i32, i32* @edx, align 4
  %v2_14b61 = mul i32 %v1_14b61, 4
  %v3_14b61 = add i32 %v2_14b61, %v0_14b61
  store i32 %v3_14b61, i32* %edx.global-to-local, align 4
  %v1_14b65 = icmp eq i32 %v3_14b61, 0
  br i1 %v1_14b65, label %dec_label_pc_14b6d, label %dec_label_pc_14b69

dec_label_pc_14b69:                               ; preds = %dec_label_pc_14b61
  %v2_14b69 = load i32, i32* @edi, align 4
  %v2_14b6b = inttoptr i32 %v3_14b61 to i32*
  store i32 %v2_14b69, i32* %v2_14b6b, align 4
  br label %dec_label_pc_14b6d

dec_label_pc_14b6d:                               ; preds = %dec_label_pc_14b69, %dec_label_pc_14b61
  %v0_14b6d = load i32, i32* @esi, align 4
  %v1_14b71 = load i32, i32* @eax, align 8
  %v2_14b71 = sub i32 %v0_14b6d, %v1_14b71
  %v2_14b73 = ashr i32 %v2_14b71, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_14b73 = icmp eq i32 %v2_14b73, 0
  store i32 %v2_14b73, i32* @edx, align 4
  %v1_14b78 = icmp eq i1 %v3_14b73, false
  br i1 %v1_14b78, label %bb, label %dec_label_pc_14b7a

bb:                                               ; preds = %dec_label_pc_14b6d
  %v2_14b78 = call i32 @function_14bc8()
  %v1_14b7d.pre = load i32, i32* @edi, align 4
  %v1_14b83.pre = load i32, i32* @esi, align 4
  %phitmp = add i32 %v1_14b7d.pre, 4
  br label %dec_label_pc_14b7a

dec_label_pc_14b7a:                               ; preds = %bb, %dec_label_pc_14b6d
  %v1_14b83 = phi i32 [ %v1_14b83.pre, %bb ], [ %v0_14b6d, %dec_label_pc_14b6d ]
  %v1_14b7d = phi i32 [ %phitmp, %bb ], [ 4, %dec_label_pc_14b6d ]
  %v0_14b7a = load i32, i32* @ebx, align 4
  %v1_14b7a = add i32 %v0_14b7a, 4
  %v2_14b7a = inttoptr i32 %v1_14b7a to i32*
  %v3_14b7a = load i32, i32* %v2_14b7a, align 4
  %v0_14b7d = load i32, i32* @ebp, align 4
  %v4_14b7d = add i32 %v1_14b7d, %v0_14b7d
  store i32 %v4_14b7d, i32* %edx.global-to-local, align 4
  %v2_14b83 = sub i32 %v3_14b7a, %v1_14b83
  %v2_14b85 = sdiv i32 %v2_14b83, 4
  %v2_14b83.off = add i32 %v2_14b83, 3
  %tmp13 = icmp ult i32 %v2_14b83.off, 7
  store i32 %v2_14b85, i32* @eax, align 8
  %v1_14b8a = icmp eq i1 %tmp13, false
  br i1 %v1_14b8a, label %bb11, label %dec_label_pc_14b8c

bb11:                                             ; preds = %dec_label_pc_14b7a
  %v2_14b8a = call i32 @function_14be8()
  %v2_14b8c.pre = load i32, i32* @ebx, align 4
  %v0_14b8e.pre = load i32, i32* @edi, align 4
  %v1_14b8e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_14b8c

dec_label_pc_14b8c:                               ; preds = %bb11, %dec_label_pc_14b7a
  %v1_14b8e = phi i32 [ %v1_14b8e.pre, %bb11 ], [ %v4_14b7d, %dec_label_pc_14b7a ]
  %v0_14b8e = phi i32 [ %v0_14b8e.pre, %bb11 ], [ 0, %dec_label_pc_14b7a ]
  %v2_14b8c = phi i32 [ %v2_14b8c.pre, %bb11 ], [ %v0_14b7a, %dec_label_pc_14b7a ]
  store i32 %v2_14b8c, i32* @eax, align 8
  %v2_14b8e = add i32 %v0_14b8e, %v1_14b8e
  store i32 %v2_14b8e, i32* @edi, align 4
  %v1_14b90 = icmp eq i32 %v2_14b8c, 0
  br i1 %v1_14b90, label %bb12, label %dec_label_pc_14b94

bb12:                                             ; preds = %dec_label_pc_14b8c
  %v1_14b92 = call i32 @function_14b9c()
  br label %dec_label_pc_14b94

dec_label_pc_14b94:                               ; preds = %bb12, %dec_label_pc_14b8c
  %v3_14b94 = phi i32 [ %v1_14b92, %bb12 ], [ %v2_14b8c, %dec_label_pc_14b8c ]
  ret i32 %v3_14b94
}

define i32 @function_14b9c() local_unnamed_addr {
dec_label_pc_14b9c:
  %ebp.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_14b9c = load i32, i32* @ebp, align 4
  %v1_14b9c = load i32, i32* @ebx, align 4
  %v2_14b9c = inttoptr i32 %v1_14b9c to i32*
  store i32 %v0_14b9c, i32* %v2_14b9c, align 4
  %v0_14b9e = load i32, i32* @ebp, align 4
  %v5_14b9e = add i32 %v0_14b9e, %tmp
  store i32 %v5_14b9e, i32* %ebp.global-to-local, align 4
  %v0_14ba2 = load i32, i32* @edi, align 4
  %v1_14ba2 = load i32, i32* @ebx, align 4
  %v2_14ba2 = add i32 %v1_14ba2, 4
  %v3_14ba2 = inttoptr i32 %v2_14ba2 to i32*
  store i32 %v0_14ba2, i32* %v3_14ba2, align 4
  %v0_14ba5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14ba5 = load i32, i32* @ebx, align 4
  %v2_14ba5 = add i32 %v1_14ba5, 8
  %v3_14ba5 = inttoptr i32 %v2_14ba5 to i32*
  store i32 %v0_14ba5, i32* %v3_14ba5, align 4
  %v0_14ba8 = load i32, i32* @eax, align 8
  ret i32 %v0_14ba8
}

define i32 @function_14bb0() local_unnamed_addr {
dec_label_pc_14bb0:
  %v0_14bb0 = load i32, i32* @esi, align 4
  %v1_14bb2 = load i32, i32* @eax, align 8
  %v2_14bb2 = sub i32 %v0_14bb0, %v1_14bb2
  %v2_14bb4 = ashr i32 %v2_14bb2, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_14bb4, i32* @edx, align 4
  ret i32 %v1_14bb2
}

define i32 @function_14bc8() local_unnamed_addr {
dec_label_pc_14bc8:
  %v0_14bc8 = load i32, i32* @edx, align 4
  %v1_14bc8 = mul i32 %v0_14bc8, 4
  store i32 %v1_14bc8, i32* @edi, align 4
  %v3_14bd7 = load i32, i32* @eax, align 8
  ret i32 %v3_14bd7
}

define i32 @function_14bdf() local_unnamed_addr {
dec_label_pc_14bdf:
  %eax.global-to-local = alloca i32, align 4
  %v0_14bdf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14bdf
}

define i32 @function_14be8() local_unnamed_addr {
dec_label_pc_14be8:
  %v0_14be8 = load i32, i32* @eax, align 8
  %v1_14be8 = mul i32 %v0_14be8, 4
  store i32 %v1_14be8, i32* @edi, align 4
  ret i32 %v0_14be8
}

define i32 @function_14c03(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c03:
  %eax.global-to-local = alloca i32, align 4
  %v0_14c07 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14c07
}

define i32 @function_14c0c() local_unnamed_addr {
dec_label_pc_14c0c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_14c11() local_unnamed_addr {
dec_label_pc_14c11:
  %v0_14c11 = load i32, i32* @ecx, align 4
  %v0_14c1d = load i32, i32* @edx, align 4
  store i32 0, i32* @ebp, align 4
  %v0_14c26 = load i32, i32* @esi, align 4
  %v1_14c28 = load i32, i32* @eax, align 8
  %v2_14c28 = sub i32 %v0_14c26, %v1_14c28
  %v2_14c2a = ashr i32 %v2_14c28, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_14c2a, i32* @edx, align 4
  %v1_14c2d = icmp eq i32 %v0_14c11, 0
  br i1 %v1_14c2d, label %bb, label %dec_label_pc_14c35

bb:                                               ; preds = %dec_label_pc_14c11
  %v2_14c1d = mul i32 %v0_14c1d, 8
  %v2_14c2f = call i32 @function_14b61(i32 %v2_14c1d)
  br label %dec_label_pc_14c35

dec_label_pc_14c35:                               ; preds = %bb, %dec_label_pc_14c11
  %v0_14c35 = phi i32 [ %v2_14c2f, %bb ], [ %v1_14c28, %dec_label_pc_14c11 ]
  ret i32 %v0_14c35
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14c40:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = ptrtoint i32* %arg1 to i32
  %v0_14c40 = load i32, i32* @ebp, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  store i32 0, i32* @eax, align 8
  store i32 %tmp47, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  %v12_14c67 = icmp eq i32 %arg4, %arg3
  br i1 %v12_14c67, label %dec_label_pc_14cd0, label %dec_label_pc_14c6b

dec_label_pc_14c6b:                               ; preds = %dec_label_pc_14c40
  %v1_14c6b = add i32 %tmp47, 4
  %v2_14c6b = inttoptr i32 %v1_14c6b to i32*
  %v3_14c6b = load i32, i32* %v2_14c6b, align 4
  store i32 %v3_14c6b, i32* @ecx, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  %v1_14c70 = add i32 %tmp47, 8
  %v2_14c70 = inttoptr i32 %v1_14c70 to i32*
  %v3_14c70 = load i32, i32* %v2_14c70, align 4
  %v2_14c73 = sub i32 %arg4, %arg3
  %v12_14c73 = icmp eq i32 %v2_14c73, 0
  store i32 %v2_14c73, i32* %ebp.global-to-local, align 4
  %v2_14c75 = sub i32 %v3_14c70, %v3_14c6b
  store i32 %v2_14c75, i32* %eax.global-to-local, align 8
  %tmp63 = icmp ugt i32 %v2_14c73, %v2_14c75
  br i1 %tmp63, label %dec_label_pc_14d80, label %dec_label_pc_14c7f

dec_label_pc_14c7f:                               ; preds = %dec_label_pc_14c6b
  %v2_14c81 = sub i32 %v3_14c6b, %arg2
  %v12_14c81 = icmp eq i32 %v2_14c81, 0
  store i32 %v2_14c81, i32* %edx.global-to-local, align 4
  %v3_14c83 = sub i32 %v2_14c73, %v2_14c81
  %v8_14c83 = icmp ult i32 %v2_14c73, %v2_14c81
  %v1_14c89 = icmp eq i1 %v8_14c83, false
  br i1 %v1_14c89, label %dec_label_pc_14cf0, label %dec_label_pc_14c8b

dec_label_pc_14c8b:                               ; preds = %dec_label_pc_14c7f
  %v3_14c8d = sub i32 %v3_14c6b, %v2_14c73
  store i32 %v3_14c6b, i32* %eax.global-to-local, align 8
  br i1 %v12_14c73, label %dec_label_pc_14cb6, label %dec_label_pc_14c9b

dec_label_pc_14c9b:                               ; preds = %dec_label_pc_14c8b
  store i32 %v3_14c8d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_14ca9, %dec_label_pc_14c9b
  %v1_14caf13 = phi i32 [ %v1_14caf, %dec_label_pc_14ca9 ], [ %v3_14c6b, %dec_label_pc_14c9b ]
  %v2_14ca7 = phi i32 [ %v1_14cac, %dec_label_pc_14ca9 ], [ %v3_14c6b, %dec_label_pc_14c9b ]
  %v0_14ca4 = phi i32 [ %v1_14ca9, %dec_label_pc_14ca9 ], [ %v3_14c8d, %dec_label_pc_14c9b ]
  %v1_14ca0 = icmp eq i32 %v2_14ca7, 0
  br i1 %v1_14ca0, label %dec_label_pc_14ca9, label %dec_label_pc_14ca4

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_14ca0
  %v1_14ca4 = inttoptr i32 %v0_14ca4 to i8*
  %v2_14ca4 = load i8, i8* %v1_14ca4, align 1
  %v3_14ca7 = inttoptr i32 %v2_14ca7 to i8*
  store i8 %v2_14ca4, i8* %v3_14ca7, align 1
  %v0_14ca9.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_14cac.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_14caf.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_14ca9

dec_label_pc_14ca9:                               ; preds = %dec_label_pc_14ca4, %dec_label_pc_14ca0
  %v1_14caf = phi i32 [ %v1_14caf.pre, %dec_label_pc_14ca4 ], [ %v1_14caf13, %dec_label_pc_14ca0 ]
  %v0_14cac = phi i32 [ %v0_14cac.pre, %dec_label_pc_14ca4 ], [ 0, %dec_label_pc_14ca0 ]
  %v0_14ca9 = phi i32 [ %v0_14ca9.pre, %dec_label_pc_14ca4 ], [ %v0_14ca4, %dec_label_pc_14ca0 ]
  %v1_14ca9 = add i32 %v0_14ca9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14ca9, i32* %edx.global-to-local, align 4
  %v1_14cac = add i32 %v0_14cac, 1
  store i32 %v1_14cac, i32* %eax.global-to-local, align 8
  %v12_14caf = icmp eq i32 %v1_14ca9, %v1_14caf
  %v1_14cb1 = icmp eq i1 %v12_14caf, false
  br i1 %v1_14cb1, label %dec_label_pc_14ca0, label %dec_label_pc_14cb3

dec_label_pc_14cb3:                               ; preds = %dec_label_pc_14ca9
  %v0_14cb3 = load i32, i32* @edi, align 4
  %v1_14cb3 = add i32 %v0_14cb3, 4
  %v2_14cb3 = inttoptr i32 %v1_14cb3 to i32*
  %v3_14cb3 = load i32, i32* %v2_14cb3, align 4
  store i32 %v3_14cb3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14cb6

dec_label_pc_14cb6:                               ; preds = %dec_label_pc_14cb3, %dec_label_pc_14c8b
  %v1_14cb8 = phi i32 [ %v0_14cb3, %dec_label_pc_14cb3 ], [ %tmp47, %dec_label_pc_14c8b ]
  %v0_14cb6 = phi i32 [ %v3_14cb3, %dec_label_pc_14cb3 ], [ %v3_14c6b, %dec_label_pc_14c8b ]
  %v3_14cb6 = add i32 %v0_14cb6, %v2_14c73
  %v2_14cb8 = add i32 %v1_14cb8, 4
  %v3_14cb8 = inttoptr i32 %v2_14cb8 to i32*
  store i32 %v3_14cb6, i32* %v3_14cb8, align 4
  %v1_14cbf = load i32, i32* @esi, align 4
  %v2_14cbf = sub i32 %v3_14c8d, %v1_14cbf
  %v12_14cbf = icmp eq i32 %v2_14cbf, 0
  store i32 %v2_14cbf, i32* @eax, align 8
  %v1_14cc1 = icmp eq i1 %v12_14cbf, false
  br i1 %v1_14cc1, label %bb, label %dec_label_pc_14cc7

bb:                                               ; preds = %dec_label_pc_14cb6
  %v2_14cc1 = call i32 @function_14ea0()
  store i32 %v2_14cc1, i32* @eax, align 8
  br label %dec_label_pc_14cc7

dec_label_pc_14cc7:                               ; preds = %bb, %dec_label_pc_14cb6
  %v1_14cc9 = icmp eq i1 %v12_14c73, false
  br i1 %v1_14cc9, label %bb57, label %dec_label_pc_14cd0

bb57:                                             ; preds = %dec_label_pc_14cc7
  %v2_14cc9 = call i32 @function_14e70()
  store i32 %v2_14cc9, i32* @eax, align 8
  br label %dec_label_pc_14cd0

dec_label_pc_14cd0:                               ; preds = %dec_label_pc_14cc7, %bb57, %dec_label_pc_14d4f, %dec_label_pc_14c40
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 false, label %bb58, label %dec_label_pc_14cd0.dec_label_pc_14ce1_crit_edge

dec_label_pc_14cd0.dec_label_pc_14ce1_crit_edge:  ; preds = %dec_label_pc_14cd0
  %v0_14ce8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_14ce1

bb58:                                             ; preds = %dec_label_pc_14cd0
  br label %dec_label_pc_14ce1

dec_label_pc_14ce1:                               ; preds = %dec_label_pc_14cd0.dec_label_pc_14ce1_crit_edge, %bb58
  %v0_14ce8 = phi i32 [ %v0_14ce8.pre, %dec_label_pc_14cd0.dec_label_pc_14ce1_crit_edge ], [ undef, %bb58 ]
  store i32 %v0_14c40, i32* %ebp.global-to-local, align 4
  ret i32 %v0_14ce8

dec_label_pc_14cf0:                               ; preds = %dec_label_pc_14c7f
  store i32 %v3_14c6b, i32* %eax.global-to-local, align 8
  %v6_14cf6 = add i32 %v2_14c81, %arg3
  store i32 %v6_14cf6, i32* %edx.global-to-local, align 4
  %v12_14cfa = icmp eq i32 %v6_14cf6, %arg4
  br i1 %v12_14cfa, label %dec_label_pc_14d22, label %dec_label_pc_14d08

dec_label_pc_14d08:                               ; preds = %dec_label_pc_14cf0, %dec_label_pc_14d11
  %v1_14d1721 = phi i32 [ %v1_14d17, %dec_label_pc_14d11 ], [ %arg4, %dec_label_pc_14cf0 ]
  %v0_14d0c = phi i32 [ %v1_14d11, %dec_label_pc_14d11 ], [ %v6_14cf6, %dec_label_pc_14cf0 ]
  %v2_14d0f = phi i32 [ %v1_14d14, %dec_label_pc_14d11 ], [ %v3_14c6b, %dec_label_pc_14cf0 ]
  %v1_14d08 = icmp eq i32 %v2_14d0f, 0
  br i1 %v1_14d08, label %dec_label_pc_14d11, label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14d08
  %v1_14d0c = inttoptr i32 %v0_14d0c to i8*
  %v2_14d0c = load i8, i8* %v1_14d0c, align 1
  %v3_14d0c = zext i8 %v2_14d0c to i32
  store i32 %v3_14d0c, i32* %ecx.global-to-local, align 4
  %v3_14d0f = inttoptr i32 %v2_14d0f to i8*
  store i8 %v2_14d0c, i8* %v3_14d0f, align 1
  %v0_14d11.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_14d14.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_14d17.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_14d11

dec_label_pc_14d11:                               ; preds = %dec_label_pc_14d0c, %dec_label_pc_14d08
  %v1_14d17 = phi i32 [ %v1_14d17.pre, %dec_label_pc_14d0c ], [ %v1_14d1721, %dec_label_pc_14d08 ]
  %v0_14d14 = phi i32 [ %v0_14d14.pre, %dec_label_pc_14d0c ], [ 0, %dec_label_pc_14d08 ]
  %v0_14d11 = phi i32 [ %v0_14d11.pre, %dec_label_pc_14d0c ], [ %v0_14d0c, %dec_label_pc_14d08 ]
  %v1_14d11 = add i32 %v0_14d11, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14d11, i32* %edx.global-to-local, align 4
  %v1_14d14 = add i32 %v0_14d14, 1
  store i32 %v1_14d14, i32* %eax.global-to-local, align 8
  %v12_14d17 = icmp eq i32 %v1_14d11, %v1_14d17
  %v1_14d19 = icmp eq i1 %v12_14d17, false
  br i1 %v1_14d19, label %dec_label_pc_14d08, label %dec_label_pc_14d1b

dec_label_pc_14d1b:                               ; preds = %dec_label_pc_14d11
  store i32 %v3_14c6b, i32* @ecx, align 4
  %v0_14d1f = load i32, i32* @edi, align 4
  %v1_14d1f = add i32 %v0_14d1f, 4
  %v2_14d1f = inttoptr i32 %v1_14d1f to i32*
  %v3_14d1f = load i32, i32* %v2_14d1f, align 4
  store i32 %v3_14d1f, i32* %eax.global-to-local, align 8
  %v1_14d28.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_14d22

dec_label_pc_14d22:                               ; preds = %dec_label_pc_14d1b, %dec_label_pc_14cf0
  %v1_14d2a = phi i32 [ %v0_14d1f, %dec_label_pc_14d1b ], [ %tmp47, %dec_label_pc_14cf0 ]
  %v1_14d28 = phi i32 [ %v1_14d28.pre, %dec_label_pc_14d1b ], [ %arg2, %dec_label_pc_14cf0 ]
  %v1_14d26 = phi i32 [ %v3_14d1f, %dec_label_pc_14d1b ], [ %v3_14c6b, %dec_label_pc_14cf0 ]
  %v2_14d26 = add i32 %v1_14d26, %v3_14c83
  store i32 %v2_14d26, i32* %ebp.global-to-local, align 4
  %v12_14d28 = icmp eq i32 %v3_14c6b, %v1_14d28
  %v2_14d2a = add i32 %v1_14d2a, 4
  %v3_14d2a = inttoptr i32 %v2_14d2a to i32*
  store i32 %v2_14d26, i32* %v3_14d2a, align 4
  br i1 %v12_14d28, label %dec_label_pc_14d22.dec_label_pc_14d4f_crit_edge, label %dec_label_pc_14d2f

dec_label_pc_14d22.dec_label_pc_14d4f_crit_edge:  ; preds = %dec_label_pc_14d22
  %v0_14d53.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_14d5b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_14d4f

dec_label_pc_14d2f:                               ; preds = %dec_label_pc_14d22
  %v0_14d2f = load i32, i32* @esi, align 4
  store i32 %v0_14d2f, i32* %eax.global-to-local, align 8
  %v0_14d38.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d42, %dec_label_pc_14d2f
  %v0_14d3c = phi i32 [ %v1_14d42, %dec_label_pc_14d42 ], [ %v0_14d2f, %dec_label_pc_14d2f ]
  %v2_14d3f = phi i32 [ %v1_14d45, %dec_label_pc_14d42 ], [ %v0_14d38.pre, %dec_label_pc_14d2f ]
  %v1_14d38 = icmp eq i32 %v2_14d3f, 0
  br i1 %v1_14d38, label %dec_label_pc_14d42, label %dec_label_pc_14d3c

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d38
  %v1_14d3c = inttoptr i32 %v0_14d3c to i8*
  %v2_14d3c = load i8, i8* %v1_14d3c, align 1
  %v3_14d3c = zext i8 %v2_14d3c to i32
  store i32 %v3_14d3c, i32* %edx.global-to-local, align 4
  %v3_14d3f = inttoptr i32 %v2_14d3f to i8*
  store i8 %v2_14d3c, i8* %v3_14d3f, align 1
  %v0_14d42.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_14d45.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_14d42

dec_label_pc_14d42:                               ; preds = %dec_label_pc_14d3c, %dec_label_pc_14d38
  %v0_14d45 = phi i32 [ %v0_14d45.pre, %dec_label_pc_14d3c ], [ 0, %dec_label_pc_14d38 ]
  %v0_14d42 = phi i32 [ %v0_14d42.pre, %dec_label_pc_14d3c ], [ %v0_14d3c, %dec_label_pc_14d38 ]
  %v1_14d42 = add i32 %v0_14d42, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14d42, i32* %eax.global-to-local, align 8
  %v1_14d45 = add i32 %v0_14d45, 1
  store i32 %v1_14d45, i32* %ebp.global-to-local, align 4
  %v1_14d48 = load i32, i32* @ecx, align 4
  %v12_14d48 = icmp eq i32 %v1_14d42, %v1_14d48
  %v1_14d4a = icmp eq i1 %v12_14d48, false
  br i1 %v1_14d4a, label %dec_label_pc_14d38, label %dec_label_pc_14d4c

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d42
  %v0_14d4c = load i32, i32* @edi, align 4
  %v1_14d4c = add i32 %v0_14d4c, 4
  %v2_14d4c = inttoptr i32 %v1_14d4c to i32*
  %v3_14d4c = load i32, i32* %v2_14d4c, align 4
  store i32 %v3_14d4c, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_14d4f

dec_label_pc_14d4f:                               ; preds = %dec_label_pc_14d22.dec_label_pc_14d4f_crit_edge, %dec_label_pc_14d4c
  %v1_14d5b = phi i32 [ %v1_14d5b.pre, %dec_label_pc_14d22.dec_label_pc_14d4f_crit_edge ], [ %v0_14d4c, %dec_label_pc_14d4c ]
  %v0_14d53 = phi i32 [ %v0_14d53.pre, %dec_label_pc_14d22.dec_label_pc_14d4f_crit_edge ], [ %v3_14d4c, %dec_label_pc_14d4c ]
  %v6_14d53 = add i32 %v0_14d53, %v2_14c81
  store i32 %v6_14d53, i32* %ebp.global-to-local, align 4
  store i32 %v2_14c81, i32* @eax, align 8
  %v2_14d5b = add i32 %v1_14d5b, 4
  %v3_14d5b = inttoptr i32 %v2_14d5b to i32*
  store i32 %v6_14d53, i32* %v3_14d5b, align 4
  br i1 %v12_14c81, label %dec_label_pc_14cd0, label %dec_label_pc_14d64

dec_label_pc_14d64:                               ; preds = %dec_label_pc_14d4f
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 false, label %bb60, label %dec_label_pc_14d64.dec_label_pc_14d75_crit_edge

dec_label_pc_14d64.dec_label_pc_14d75_crit_edge:  ; preds = %dec_label_pc_14d64
  %v0_14d75.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_14d75

bb60:                                             ; preds = %dec_label_pc_14d64
  br label %dec_label_pc_14d75

dec_label_pc_14d75:                               ; preds = %dec_label_pc_14d64.dec_label_pc_14d75_crit_edge, %bb60
  %v0_14d75 = phi i32 [ %v0_14d75.pre, %dec_label_pc_14d64.dec_label_pc_14d75_crit_edge ], [ undef, %bb60 ]
  %v2_14d79 = call i32 @function_14e81(i32 %v0_14d75)
  store i32 %v2_14d79, i32* %eax.global-to-local, align 8
  ret i32 %v2_14d79

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14c6b
  %v2_14d80 = load i32, i32* %arg1, align 4
  %v2_14d82 = sub i32 %v3_14c6b, %v2_14d80
  store i32 %v2_14d82, i32* %ecx.global-to-local, align 4
  %v1_14d8a = sub i32 -1, %v2_14d82
  store i32 %v1_14d8a, i32* @eax, align 8
  %tmp64 = icmp ugt i32 %v2_14c73, %v1_14d8a
  br i1 %tmp64, label %bb61, label %dec_label_pc_14d94

bb61:                                             ; preds = %dec_label_pc_14d80
  %v8_14d8e = call i32 @function_14ee6(i32 %arg3, i32 %v2_14d80)
  store i32 %v8_14d8e, i32* @eax, align 8
  %v2_14d94.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14d80, %bb61
  %v3_14dad8 = phi i32 [ %v1_14d8a, %dec_label_pc_14d80 ], [ %v8_14d8e, %bb61 ]
  %v3_14d96 = phi i32 [ %v2_14d82, %dec_label_pc_14d80 ], [ %v2_14d94.pre, %bb61 ]
  %v8_14d94 = icmp ult i32 %v2_14c73, %v3_14d96
  %v4_14d96 = select i1 %v8_14d94, i32 %v3_14d96, i32 %v2_14c73
  store i32 %v4_14d96, i32* %ebp.global-to-local, align 4
  %v2_14d99 = add i32 %v4_14d96, %v3_14d96
  %v7_14d99 = icmp ult i32 %v2_14d99, %v3_14d96
  store i32 %v2_14d99, i32* @ecx, align 4
  %v1_14da3 = icmp eq i1 %v7_14d99, false
  br i1 %v1_14da3, label %bb62, label %dec_label_pc_14da9

bb62:                                             ; preds = %dec_label_pc_14d94
  %v3_14da3 = call i32 @function_14ec0(i32 -1)
  store i32 %v3_14da3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14da9

dec_label_pc_14da9:                               ; preds = %bb62, %dec_label_pc_14d94
  %v3_14dad = phi i32 [ %v3_14da3, %bb62 ], [ %v3_14dad8, %dec_label_pc_14d94 ]
  store i32 -1, i32* %edx.global-to-local, align 4
  ret i32 %v3_14dad

; uselistorder directives
  uselistorder i32 %v3_14d96, { 2, 0, 1, 3 }
  uselistorder i32 %v1_14d8a, { 2, 0, 1 }
  uselistorder i32 %v2_14d82, { 1, 0, 2 }
  uselistorder i32 %v1_14d45, { 1, 0 }
  uselistorder i32 %v1_14d42, { 0, 2, 1 }
  uselistorder i32 %v1_14d14, { 1, 0 }
  uselistorder i32 %v1_14d11, { 0, 2, 1 }
  uselistorder i32 %v6_14cf6, { 1, 0, 2 }
  uselistorder i32 %v1_14cac, { 1, 0 }
  uselistorder i32 %v1_14ca9, { 0, 2, 1 }
  uselistorder i32 %v3_14c8d, { 1, 0, 2 }
  uselistorder i32 %v2_14c81, { 2, 0, 1, 4, 3, 5, 6 }
  uselistorder i1 %v12_14c73, { 1, 0 }
  uselistorder i32 %v2_14c73, { 6, 7, 0, 2, 3, 5, 4, 1, 8, 9 }
  uselistorder i32 %v3_14c6b, { 11, 0, 2, 3, 1, 4, 5, 7, 6, 8, 9, 10, 12, 13 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10 }
  uselistorder i32 %arg4, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %arg3, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_14d94, { 1, 0 }
  uselistorder label %dec_label_pc_14d75, { 1, 0 }
  uselistorder label %dec_label_pc_14d4f, { 1, 0 }
  uselistorder label %dec_label_pc_14d08, { 1, 0 }
  uselistorder label %dec_label_pc_14ce1, { 1, 0 }
  uselistorder label %dec_label_pc_14cd0, { 2, 1, 0, 3 }
}

define i32 @function_14dbf(i32 %arg1) local_unnamed_addr {
dec_label_pc_14dbf:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v4_14dbf = load i32, i32* @esi, align 4
  %v15_14dbf = icmp eq i32 %tmp24, %v4_14dbf
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  br i1 %v15_14dbf, label %dec_label_pc_14ded, label %dec_label_pc_14dc9

dec_label_pc_14dc9:                               ; preds = %dec_label_pc_14dbf
  store i32 %arg1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14dd9, %dec_label_pc_14dc9
  %v1_14ddf5 = phi i32 [ %v0_14de3, %dec_label_pc_14dd9 ], [ %v4_14dbf, %dec_label_pc_14dc9 ]
  %v0_14dd4 = phi i32 [ %v1_14dd9, %dec_label_pc_14dd9 ], [ %tmp24, %dec_label_pc_14dc9 ]
  %v2_14dd7 = phi i32 [ %v1_14ddc, %dec_label_pc_14dd9 ], [ %arg1, %dec_label_pc_14dc9 ]
  %v1_14dd0 = icmp eq i32 %v2_14dd7, 0
  br i1 %v1_14dd0, label %dec_label_pc_14dd9, label %dec_label_pc_14dd4

dec_label_pc_14dd4:                               ; preds = %dec_label_pc_14dd0
  %v1_14dd4 = inttoptr i32 %v0_14dd4 to i8*
  %v2_14dd4 = load i8, i8* %v1_14dd4, align 1
  %v3_14dd4 = zext i8 %v2_14dd4 to i32
  store i32 %v3_14dd4, i32* %ecx.global-to-local, align 4
  %v3_14dd7 = inttoptr i32 %v2_14dd7 to i8*
  store i8 %v2_14dd4, i8* %v3_14dd7, align 1
  %v0_14dd9.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_14ddc.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_14ddf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_14dd9

dec_label_pc_14dd9:                               ; preds = %dec_label_pc_14dd4, %dec_label_pc_14dd0
  %v0_14de3 = phi i32 [ %v1_14ddf.pre, %dec_label_pc_14dd4 ], [ %v1_14ddf5, %dec_label_pc_14dd0 ]
  %v0_14ddc = phi i32 [ %v0_14ddc.pre, %dec_label_pc_14dd4 ], [ 0, %dec_label_pc_14dd0 ]
  %v0_14dd9 = phi i32 [ %v0_14dd9.pre, %dec_label_pc_14dd4 ], [ %v0_14dd4, %dec_label_pc_14dd0 ]
  %v1_14dd9 = add i32 %v0_14dd9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14dd9, i32* %edx.global-to-local, align 4
  %v1_14ddc = add i32 %v0_14ddc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14ddc, i32* %eax.global-to-local, align 8
  %v12_14ddf = icmp eq i32 %v1_14dd9, %v0_14de3
  %v1_14de1 = icmp eq i1 %v12_14ddf, false
  br i1 %v1_14de1, label %dec_label_pc_14dd0, label %dec_label_pc_14de3

dec_label_pc_14de3:                               ; preds = %dec_label_pc_14dd9
  %v5_14de5 = sub i32 %v0_14de3, %tmp24
  %v5_14de9 = add i32 %v5_14de5, %arg1
  store i32 %v5_14de9, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_14ded

dec_label_pc_14ded:                               ; preds = %dec_label_pc_14de3, %dec_label_pc_14dbf
  %v0_14df1 = phi i32 [ %v5_14de9, %dec_label_pc_14de3 ], [ %arg1, %dec_label_pc_14dbf ]
  store i32 %v0_14df1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_14df8

dec_label_pc_14df8:                               ; preds = %dec_label_pc_14e01, %dec_label_pc_14ded
  %v0_14dfc = phi i32 [ %v1_14e01, %dec_label_pc_14e01 ], [ %tmp22, %dec_label_pc_14ded ]
  %v2_14dff = phi i32 [ %v1_14e04, %dec_label_pc_14e01 ], [ %v0_14df1, %dec_label_pc_14ded ]
  %v1_14df8 = icmp eq i32 %v2_14dff, 0
  br i1 %v1_14df8, label %dec_label_pc_14e01, label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14df8
  %v1_14dfc = inttoptr i32 %v0_14dfc to i8*
  %v2_14dfc = load i8, i8* %v1_14dfc, align 1
  %v3_14dfc = zext i8 %v2_14dfc to i32
  store i32 %v3_14dfc, i32* %ecx.global-to-local, align 4
  %v3_14dff = inttoptr i32 %v2_14dff to i8*
  store i8 %v2_14dfc, i8* %v3_14dff, align 1
  %v0_14e01.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_14e04.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_14e01

dec_label_pc_14e01:                               ; preds = %dec_label_pc_14dfc, %dec_label_pc_14df8
  %v0_14e04 = phi i32 [ %v0_14e04.pre, %dec_label_pc_14dfc ], [ 0, %dec_label_pc_14df8 ]
  %v0_14e01 = phi i32 [ %v0_14e01.pre, %dec_label_pc_14dfc ], [ %v0_14dfc, %dec_label_pc_14df8 ]
  %v1_14e01 = add i32 %v0_14e01, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14e01, i32* %eax.global-to-local, align 8
  %v1_14e04 = add i32 %v0_14e04, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14e04, i32* %edx.global-to-local, align 4
  %v1_14e07 = load i32, i32* @ebx, align 4
  %v12_14e07 = icmp eq i32 %v1_14e01, %v1_14e07
  %v1_14e09 = icmp eq i1 %v12_14e07, false
  br i1 %v1_14e09, label %dec_label_pc_14df8, label %dec_label_pc_14e0b

dec_label_pc_14e0b:                               ; preds = %dec_label_pc_14e01
  %v5_14e0b = sub i32 %v1_14e01, %tmp22
  store i32 %v5_14e0b, i32* %eax.global-to-local, align 8
  %v0_14e0f = load i32, i32* %ebp.global-to-local, align 4
  %v2_14e0f = add i32 %v0_14e0f, %v5_14e0b
  store i32 %v2_14e0f, i32* @ebp, align 4
  %v0_14e11 = load i32, i32* @edi, align 4
  %v1_14e11 = add i32 %v0_14e11, 4
  %v2_14e11 = inttoptr i32 %v1_14e11 to i32*
  %v3_14e11 = load i32, i32* %v2_14e11, align 4
  store i32 %v3_14e11, i32* %eax.global-to-local, align 8
  %v1_14e14 = load i32, i32* @esi, align 4
  %v12_14e14 = icmp eq i32 %v3_14e11, %v1_14e14
  br i1 %v12_14e14, label %dec_label_pc_14e37, label %dec_label_pc_14e18

dec_label_pc_14e18:                               ; preds = %dec_label_pc_14e0b
  store i32 %v1_14e14, i32* %edx.global-to-local, align 4
  store i32 %v2_14e0f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_14e20

dec_label_pc_14e20:                               ; preds = %dec_label_pc_14e29, %dec_label_pc_14e18
  %v1_14e2f16 = phi i32 [ %v1_14e2f, %dec_label_pc_14e29 ], [ %v3_14e11, %dec_label_pc_14e18 ]
  %v0_14e24 = phi i32 [ %v1_14e29, %dec_label_pc_14e29 ], [ %v1_14e14, %dec_label_pc_14e18 ]
  %v2_14e27 = phi i32 [ %v1_14e2c, %dec_label_pc_14e29 ], [ %v2_14e0f, %dec_label_pc_14e18 ]
  %v1_14e20 = icmp eq i32 %v2_14e27, 0
  br i1 %v1_14e20, label %dec_label_pc_14e29, label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e20
  %v1_14e24 = inttoptr i32 %v0_14e24 to i8*
  %v2_14e24 = load i8, i8* %v1_14e24, align 1
  %v3_14e27 = inttoptr i32 %v2_14e27 to i8*
  store i8 %v2_14e24, i8* %v3_14e27, align 1
  %v0_14e29.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_14e2c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_14e2f.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14e29

dec_label_pc_14e29:                               ; preds = %dec_label_pc_14e24, %dec_label_pc_14e20
  %v1_14e2f = phi i32 [ %v1_14e2f.pre, %dec_label_pc_14e24 ], [ %v1_14e2f16, %dec_label_pc_14e20 ]
  %v0_14e2c = phi i32 [ %v0_14e2c.pre, %dec_label_pc_14e24 ], [ 0, %dec_label_pc_14e20 ]
  %v0_14e29 = phi i32 [ %v0_14e29.pre, %dec_label_pc_14e24 ], [ %v0_14e24, %dec_label_pc_14e20 ]
  %v1_14e29 = add i32 %v0_14e29, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14e29, i32* %edx.global-to-local, align 4
  %v1_14e2c = add i32 %v0_14e2c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_14e2c, i32* %ecx.global-to-local, align 4
  %v12_14e2f = icmp eq i32 %v1_14e29, %v1_14e2f
  %v1_14e31 = icmp eq i1 %v12_14e2f, false
  br i1 %v1_14e31, label %dec_label_pc_14e20, label %dec_label_pc_14e33

dec_label_pc_14e33:                               ; preds = %dec_label_pc_14e29
  %v1_14e33 = load i32, i32* @esi, align 4
  %v2_14e33 = sub i32 %v1_14e29, %v1_14e33
  store i32 %v2_14e33, i32* %edx.global-to-local, align 4
  %v0_14e35 = load i32, i32* @ebp, align 4
  %v2_14e35 = add i32 %v0_14e35, %v2_14e33
  store i32 %v2_14e35, i32* @ebp, align 4
  %v2_14e37.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_14e37

dec_label_pc_14e37:                               ; preds = %dec_label_pc_14e33, %dec_label_pc_14e0b
  %v2_14e37 = phi i32 [ %v2_14e37.pre, %dec_label_pc_14e33 ], [ %v0_14e11, %dec_label_pc_14e0b ]
  %v1_14e39 = add i32 %v2_14e37, 8
  %v2_14e39 = inttoptr i32 %v1_14e39 to i32*
  %v3_14e39 = load i32, i32* %v2_14e39, align 4
  store i32 %v3_14e39, i32* %eax.global-to-local, align 8
  %v1_14e3c = icmp eq i32 %v2_14e37, 0
  br i1 %v1_14e3c, label %bb, label %dec_label_pc_14e40

bb:                                               ; preds = %dec_label_pc_14e37
  %v1_14e3e = call i32 @function_14e56()
  store i32 %v1_14e3e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_14e40

dec_label_pc_14e40:                               ; preds = %bb, %dec_label_pc_14e37
  %v0_14e40 = phi i32 [ %v1_14e3e, %bb ], [ %v3_14e39, %dec_label_pc_14e37 ]
  %v2_14e40 = sub i32 %v0_14e40, %v2_14e37
  store i32 %v2_14e40, i32* %eax.global-to-local, align 8
  ret i32 %v2_14e40

; uselistorder directives
  uselistorder i32 %v2_14e37, { 2, 1, 0 }
  uselistorder i32 %v1_14e2c, { 1, 0 }
  uselistorder i32 %v1_14e29, { 1, 0, 3, 2 }
  uselistorder i32 %v1_14e14, { 1, 2, 0 }
  uselistorder i32 %v3_14e11, { 1, 0, 2 }
  uselistorder i32 %v1_14e04, { 1, 0 }
  uselistorder i32 %v1_14e01, { 1, 0, 3, 2 }
  uselistorder i32 %v1_14ddc, { 1, 0 }
  uselistorder i32 %v1_14dd9, { 0, 2, 1 }
  uselistorder i32 %v0_14de3, { 1, 0, 2 }
  uselistorder i32 %v4_14dbf, { 1, 0 }
  uselistorder i32 %tmp24, { 2, 1, 0 }
  uselistorder i32 %tmp22, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @function_14e56() local_unnamed_addr {
dec_label_pc_14e56:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_14e5a = load i32, i32* @ebp, align 4
  %v1_14e5a = load i32, i32* @edi, align 4
  %v2_14e5a = add i32 %v1_14e5a, 4
  %v3_14e5a = inttoptr i32 %v2_14e5a to i32*
  store i32 %v0_14e5a, i32* %v3_14e5a, align 4
  %v0_14e5d = load i32, i32* %eax.global-to-local, align 8
  %v1_14e5d = load i32, i32* @edi, align 4
  %v2_14e5d = inttoptr i32 %v1_14e5d to i32*
  store i32 %v0_14e5d, i32* %v2_14e5d, align 4
  %v0_14e5f = load i32, i32* %eax.global-to-local, align 8
  %v5_14e5f = add i32 %v0_14e5f, %tmp
  store i32 %v5_14e5f, i32* %eax.global-to-local, align 8
  %v1_14e63 = load i32, i32* @edi, align 4
  %v2_14e63 = add i32 %v1_14e63, 8
  %v3_14e63 = inttoptr i32 %v2_14e63 to i32*
  store i32 %v5_14e5f, i32* %v3_14e63, align 4
  %v0_14e66 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14e66
}

define i32 @function_14e70() local_unnamed_addr {
dec_label_pc_14e70:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_14e74 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14e74 = icmp eq i32 %v1_14e74, %tmp2
  %v1_14e7b = icmp eq i1 %v3_14e74, false
  br i1 %v1_14e7b, label %bb, label %dec_label_pc_14e70.dec_label_pc_14e7d_crit_edge

dec_label_pc_14e70.dec_label_pc_14e7d_crit_edge:  ; preds = %dec_label_pc_14e70
  %v4_14e7d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_14e7d

bb:                                               ; preds = %dec_label_pc_14e70
  %v2_14e7b = call i32 @function_14ee1()
  br label %dec_label_pc_14e7d

dec_label_pc_14e7d:                               ; preds = %dec_label_pc_14e70.dec_label_pc_14e7d_crit_edge, %bb
  %v4_14e7d = phi i32 [ %v4_14e7d.pre, %dec_label_pc_14e70.dec_label_pc_14e7d_crit_edge ], [ %v2_14e7b, %bb ]
  ret i32 %v4_14e7d

; uselistorder directives
  uselistorder label %dec_label_pc_14e7d, { 1, 0 }
}

define i32 @function_14e81(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e81:
  %v5_14e93 = load i32, i32* @eax, align 8
  ret i32 %v5_14e93
}

define i32 @function_14ea0() local_unnamed_addr {
dec_label_pc_14ea0:
  %v1_14ea0 = load i32, i32* @eax, align 8
  ret i32 %v1_14ea0
}

define i32 @function_14eb2() local_unnamed_addr {
dec_label_pc_14eb2:
  %v0_14eba = call i32 @function_14e70()
  ret i32 %v0_14eba

; uselistorder directives
  uselistorder i32 ()* @function_14e70, { 1, 0 }
}

define i32 @function_14ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ec0:
  %v0_14ec0 = load i32, i32* @ecx, align 4
  %v1_14ec0 = icmp eq i32 %v0_14ec0, 0
  br i1 %v1_14ec0, label %bb, label %dec_label_pc_14ec0.dec_label_pc_14ed8_crit_edge

dec_label_pc_14ec0.dec_label_pc_14ed8_crit_edge:  ; preds = %dec_label_pc_14ec0
  %v0_14edc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_14ed8

bb:                                               ; preds = %dec_label_pc_14ec0
  %v2_14ed2 = call i32 @function_14dbf(i32 0)
  br label %dec_label_pc_14ed8

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14ec0.dec_label_pc_14ed8_crit_edge, %bb
  %v0_14edc = phi i32 [ %v0_14edc.pre, %dec_label_pc_14ec0.dec_label_pc_14ed8_crit_edge ], [ %v2_14ed2, %bb ]
  ret i32 %v0_14edc

; uselistorder directives
  uselistorder label %dec_label_pc_14ed8, { 1, 0 }
}

define i32 @function_14ee1() local_unnamed_addr {
dec_label_pc_14ee1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_14ee6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ee6:
  %v3_14ee6 = load i32, i32* @eax, align 8
  ret i32 %v3_14ee6
}

define i32 @_ZSt8_DestroyIPSt3setIiSt4lessIiESaIiEEEvT_S6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f00:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_14f00 = load i32, i32* %esi.global-to-local, align 4
  %v0_14f01 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v12_14f19 = icmp eq i32 %arg1, %arg2
  br i1 %v12_14f19, label %dec_label_pc_14f36, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %dec_label_pc_14f00, %dec_label_pc_14f20
  %v0_14f20 = phi i32 [ %v1_14f26, %dec_label_pc_14f20 ], [ %arg1, %dec_label_pc_14f00 ]
  %v1_14f20 = add i32 %v0_14f20, 8
  %v2_14f20 = inttoptr i32 %v1_14f20 to i32*
  %v3_14f20 = load i32, i32* %v2_14f20, align 4
  store i32 %v3_14f20, i32* @eax, align 8
  %v1_14f26 = add i32 %v0_14f20, 24
  store i32 %v1_14f26, i32* %ebx.global-to-local, align 4
  %v2_14f2d = call i32 @function_288e0(i32 %v0_14f20, i32 %v3_14f20)
  %v0_14f32 = load i32, i32* %esi.global-to-local, align 4
  %v12_14f32 = icmp eq i32 %v0_14f32, %v1_14f26
  %v1_14f34 = icmp eq i1 %v12_14f32, false
  br i1 %v1_14f34, label %dec_label_pc_14f20, label %dec_label_pc_14f36

dec_label_pc_14f36:                               ; preds = %dec_label_pc_14f20, %dec_label_pc_14f00
  br i1 false, label %dec_label_pc_14f49, label %dec_label_pc_14f43

dec_label_pc_14f43:                               ; preds = %dec_label_pc_14f36
  store i32 %v0_14f01, i32* %ebx.global-to-local, align 4
  store i32 %v0_14f00, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_14f49:                               ; preds = %dec_label_pc_14f36
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14f26, { 0, 2, 1 }
  uselistorder i32 %v0_14f20, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14f20, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f50:
  %ebp.global-to-local = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* @ebx, align 4
  %v0_14f5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg4, i32* @edx, align 4
  store i32 %tmp113, i32* @esi, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_14f7b = icmp eq i32 %arg3, 0
  br i1 %v1_14f7b, label %bb, label %dec_label_pc_14f87

bb:                                               ; preds = %dec_label_pc_14f50
  %v2_14f81 = call i32 @function_1505c(i32 %v0_14f5b)
  %v0_14f87.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_14f87

dec_label_pc_14f87:                               ; preds = %bb, %dec_label_pc_14f50
  %v0_14f87 = phi i32 [ %v0_14f87.pre, %bb ], [ %tmp113, %dec_label_pc_14f50 ]
  %v1_14f87 = add i32 %v0_14f87, 4
  %v2_14f87 = inttoptr i32 %v1_14f87 to i32*
  %v3_14f87 = load i32, i32* %v2_14f87, align 4
  store i32 %v3_14f87, i32* @ebp, align 4
  %v1_14f8a = add i32 %v0_14f87, 8
  %v2_14f8a = inttoptr i32 %v1_14f8a to i32*
  %v3_14f8a = load i32, i32* %v2_14f8a, align 4
  %v2_14f8d = sub i32 %v3_14f8a, %v3_14f87
  store i32 %v2_14f8d, i32* @eax, align 8
  %tmp125 = icmp ult i32 %v2_14f8d, %arg3
  br i1 %tmp125, label %dec_label_pc_14f97, label %bb121

bb121:                                            ; preds = %dec_label_pc_14f87
  %v3_14f91 = call i32 @function_15088()
  %v0_14f97.pre = load i32, i32* @esi, align 4
  %v0_14f99.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_14f97

dec_label_pc_14f97:                               ; preds = %dec_label_pc_14f87, %bb121
  %v0_14f99 = phi i32 [ %v0_14f99.pre, %bb121 ], [ %v3_14f87, %dec_label_pc_14f87 ]
  %v0_14f97 = phi i32 [ %v0_14f97.pre, %bb121 ], [ %v0_14f87, %dec_label_pc_14f87 ]
  %v1_14f97 = inttoptr i32 %v0_14f97 to i32*
  %v2_14f97 = load i32, i32* %v1_14f97, align 4
  store i32 %v2_14f97, i32* @eax, align 8
  %v2_14f99 = sub i32 %v0_14f99, %v2_14f97
  store i32 %v2_14f99, i32* %ebp.global-to-local, align 4
  %v1_14f9d = sub i32 -1, %v2_14f99
  %tmp126 = icmp ult i32 %v1_14f9d, %arg3
  br i1 %tmp126, label %bb122, label %dec_label_pc_14fa7

bb122:                                            ; preds = %dec_label_pc_14f97
  %v4_14fa1 = call i32 @function_151c6()
  store i32 %v4_14fa1, i32* @eax, align 8
  %v0_14fa7.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_14fa7

dec_label_pc_14fa7:                               ; preds = %dec_label_pc_14f97, %bb122
  %v1_14fb4 = phi i32 [ %v2_14f97, %dec_label_pc_14f97 ], [ %v4_14fa1, %bb122 ]
  %v0_14fb6 = phi i32 [ %v2_14f99, %dec_label_pc_14f97 ], [ %v0_14fa7.pre, %bb122 ]
  %v7_14fa7 = icmp ult i32 %v0_14fb6, %arg3
  %v1_14fab = icmp eq i1 %v7_14fa7, false
  %v4_14fab = select i1 %v1_14fab, i32 %v0_14fb6, i32 %arg3
  %v0_14fb2 = load i32, i32* @edi, align 4
  %v2_14fb4 = sub i32 %v0_14fb2, %v1_14fb4
  %v5_14fb6 = add i32 %v4_14fab, %v0_14fb6
  %v10_14fb6 = icmp ult i32 %v5_14fb6, %v0_14fb6
  %v15_14fb6 = icmp eq i32 %v5_14fb6, 0
  store i32 %v5_14fb6, i32* %ebp.global-to-local, align 4
  br i1 %v10_14fb6, label %bb123, label %dec_label_pc_14fcc

bb123:                                            ; preds = %dec_label_pc_14fa7
  %v2_14fc6 = call i32 @function_15138(i32 %v4_14fab)
  store i32 %v2_14fc6, i32* @eax, align 8
  br label %dec_label_pc_14fcc

dec_label_pc_14fcc:                               ; preds = %bb123, %dec_label_pc_14fa7
  %v1_14fce = icmp eq i1 %v15_14fb6, false
  br i1 %v1_14fce, label %bb124, label %dec_label_pc_14fd4

bb124:                                            ; preds = %dec_label_pc_14fcc
  %v2_14fce = call i32 @function_15131()
  br label %dec_label_pc_14fd4

dec_label_pc_14fd4:                               ; preds = %bb124, %dec_label_pc_14fcc
  store i32 0, i32* %ebp.global-to-local, align 4
  ret i32 %v2_14fb4

; uselistorder directives
  uselistorder i32 %v4_14fab, { 1, 0 }
  uselistorder i32 %v0_14fb6, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14f99, { 1, 0, 2 }
  uselistorder i32 %v0_14f87, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 3, 0, 1, 4, 5 }
  uselistorder label %dec_label_pc_14fa7, { 1, 0 }
  uselistorder label %dec_label_pc_14f97, { 1, 0 }
}

define i32 @function_15014() local_unnamed_addr {
dec_label_pc_15014:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_15014 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15014 = add i32 %v0_15014, -1960827820
  %v2_15014 = inttoptr i32 %v1_15014 to i32*
  %v3_15014 = load i32, i32* %v2_15014, align 4
  %v4_15014 = sub i32 %v3_15014, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_15014, i32* %v2_15014, align 4
  %v0_1501a = load i32, i32* %esi.global-to-local, align 4
  %v1_1501a = add i32 %v0_1501a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1501a, i32* %esi.global-to-local, align 4
  %v0_1501b = load i32, i32* %eax.global-to-local, align 8
  %v2_1501b = add i32 %v0_1501b, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v16_1501b = and i32 %v2_1501b, 255
  %v18_1501b = and i32 %v0_1501b, -256
  %v19_1501b = or i32 %v16_1501b, %v18_1501b
  store i32 %v19_1501b, i32* @eax, align 8
  %v0_1501d = call i32 @function_db31da01()
  store i32 %v0_1501d, i32* %eax.global-to-local, align 8
  ret i32 %v0_1501d

; uselistorder directives
  uselistorder i32 %v0_1501b, { 1, 0 }
}

define i32 @function_15028() local_unnamed_addr {
dec_label_pc_15028:
  %eax.global-to-local = alloca i32, align 4
  %v0_15028 = load i32, i32* %eax.global-to-local, align 8
  %v11_15028 = and i32 %v0_15028, -119
  store i32 %v11_15028, i32* %eax.global-to-local, align 8
  ret i32 %v11_15028

; uselistorder directives
  uselistorder i32 %v11_15028, { 1, 0 }
}

define i32 @function_1505c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1505c:
  %v1_15060 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15060 = xor i32 %v1_15060, %arg1
  %v3_15060 = icmp eq i32 %v2_15060, 0
  store i32 %v2_15060, i32* @eax, align 8
  %v1_15067 = icmp eq i1 %v3_15060, false
  br i1 %v1_15067, label %bb, label %dec_label_pc_1506d

bb:                                               ; preds = %dec_label_pc_1505c
  %v2_15067 = call i32 @function_151c1()
  br label %dec_label_pc_1506d

dec_label_pc_1506d:                               ; preds = %bb, %dec_label_pc_1505c
  %v0_15080 = phi i32 [ %v2_15067, %bb ], [ %v2_15060, %dec_label_pc_1505c ]
  ret i32 %v0_15080
}

define i32 @function_15088() local_unnamed_addr {
dec_label_pc_15088:
  %v2_15088 = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v3_15088 = zext i8 %v2_15088 to i32
  store i32 %v3_15088, i32* @ecx, align 4
  %v0_1508b = load i32, i32* @ebp, align 4
  %v1_1508d = load i32, i32* @edi, align 4
  %v2_1508d = sub i32 %v0_1508b, %v1_1508d
  store i32 %v2_1508d, i32* @edx, align 4
  %v0_1508f = load i32, i32* @ebx, align 4
  %v7_1508f = icmp ult i32 %v0_1508f, %v2_1508d
  %v1_15091 = icmp eq i1 %v7_1508f, false
  br i1 %v1_15091, label %bb, label %dec_label_pc_15097

bb:                                               ; preds = %dec_label_pc_15088
  %v2_15091 = call i32 @function_15158()
  %v0_15097.pre = load i32, i32* @ebp, align 4
  %v1_1509b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_15097

dec_label_pc_15097:                               ; preds = %bb, %dec_label_pc_15088
  %v1_1509b = phi i32 [ %v1_1509b.pre, %bb ], [ %v0_1508f, %dec_label_pc_15088 ]
  %v0_15097 = phi i32 [ %v0_15097.pre, %bb ], [ %v0_1508b, %dec_label_pc_15088 ]
  %v2_1509b = sub i32 %v0_15097, %v1_1509b
  store i32 %v2_1509b, i32* @edx, align 4
  %v12_1509d = icmp eq i32 %v1_1509b, 0
  br i1 %v12_1509d, label %bb10, label %dec_label_pc_150a9

bb10:                                             ; preds = %dec_label_pc_15097
  %v2_150a7 = call i32 @function_150d1(i32 0)
  br label %dec_label_pc_150a9

dec_label_pc_150a9:                               ; preds = %bb10, %dec_label_pc_15097
  %v3_150b9 = phi i32 [ %v2_150a7, %bb10 ], [ %v1_1509b, %dec_label_pc_15097 ]
  ret i32 %v3_150b9
}

define i32 @function_150d1(i32 %arg1) local_unnamed_addr {
dec_label_pc_150d1:
  %eax.global-to-local = alloca i32, align 4
  %v1_150d5 = load i32, i32* @ebx, align 4
  %v2_150d5 = add i32 %v1_150d5, %arg1
  store i32 %v2_150d5, i32* %eax.global-to-local, align 8
  %v0_150d7 = load i32, i32* @edx, align 4
  %v1_150d7 = load i32, i32* @edi, align 4
  %v2_150d7 = sub i32 %v0_150d7, %v1_150d7
  %v12_150d7 = icmp eq i32 %v2_150d7, 0
  store i32 %v2_150d7, i32* @edx, align 4
  %v1_150d9 = load i32, i32* @esi, align 4
  %v2_150d9 = add i32 %v1_150d9, 4
  %v3_150d9 = inttoptr i32 %v2_150d9 to i32*
  store i32 %v2_150d5, i32* %v3_150d9, align 4
  br i1 %v12_150d7, label %bb, label %dec_label_pc_150d1.dec_label_pc_150de_crit_edge

dec_label_pc_150d1.dec_label_pc_150de_crit_edge:  ; preds = %dec_label_pc_150d1
  %v3_150ec.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_150de

bb:                                               ; preds = %dec_label_pc_150d1
  %v1_150dc = call i32 @function_150f9()
  store i32 %v1_150dc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_150de

dec_label_pc_150de:                               ; preds = %dec_label_pc_150d1.dec_label_pc_150de_crit_edge, %bb
  %v3_150ec = phi i32 [ %v3_150ec.pre, %dec_label_pc_150d1.dec_label_pc_150de_crit_edge ], [ %v1_150dc, %bb ]
  %v0_150de = load i32, i32* @ebp, align 4
  %v1_150de = load i32, i32* @edx, align 4
  %v2_150de = sub i32 %v0_150de, %v1_150de
  store i32 %v2_150de, i32* @ebp, align 4
  ret i32 %v3_150ec

; uselistorder directives
  uselistorder label %dec_label_pc_150de, { 1, 0 }
}

define i32 @function_150f9() local_unnamed_addr {
dec_label_pc_150f9:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_150fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_150fd = xor i32 %v1_150fd, %tmp9
  %v3_150fd = icmp eq i32 %v2_150fd, 0
  store i32 %v2_150fd, i32* @eax, align 8
  %v1_15104 = icmp eq i1 %v3_150fd, false
  br i1 %v1_15104, label %bb, label %dec_label_pc_1510a

bb:                                               ; preds = %dec_label_pc_150f9
  %v2_15104 = call i32 @function_151c1()
  br label %dec_label_pc_1510a

dec_label_pc_1510a:                               ; preds = %bb, %dec_label_pc_150f9
  %v17_15129 = phi i32 [ %v2_15104, %bb ], [ %v2_150fd, %dec_label_pc_150f9 ]
  ret i32 %v17_15129
}

define i32 @function_15131() local_unnamed_addr {
dec_label_pc_15131:
  %v1_15135 = load i32, i32* @eax, align 8
  ret i32 %v1_15135
}

define i32 @function_15138(i32 %arg1) local_unnamed_addr {
dec_label_pc_15138:
  %v3_15140 = load i32, i32* @eax, align 8
  ret i32 %v3_15140
}

define i32 @function_15148(i32 %arg1) local_unnamed_addr {
dec_label_pc_15148:
  %eax.global-to-local = alloca i32, align 4
  %v0_1514c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1514c
}

define i32 @function_15158() local_unnamed_addr {
dec_label_pc_15158:
  %v0_15158 = load i32, i32* @ebx, align 4
  %v1_15158 = load i32, i32* @edx, align 4
  %v2_15158 = sub i32 %v0_15158, %v1_15158
  %v0_1515e = load i32, i32* @ecx, align 4
  %v1_1515e = urem i32 %v0_1515e, 256
  store i32 %v1_1515e, i32* @ebx, align 4
  store i32 %v2_15158, i32* @ecx, align 4
  %v4_15170 = load i32, i32* @eax, align 8
  ret i32 %v4_15170
}

define i32 @function_1519a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1519a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1519a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1519a = add i32 %v0_1519a, 1418396742
  %v2_1519a = inttoptr i32 %v1_1519a to i32*
  %v3_1519a = load i32, i32* %v2_1519a, align 4
  %v4_1519a = add i32 %v3_1519a, -1
  store i32 %v4_1519a, i32* %v2_1519a, align 4
  %v0_151a0 = load i32, i32* %eax.global-to-local, align 8
  %v11_151a0 = and i32 %v0_151a0, -224
  %v1_151a2 = load i32, i32* %edx.global-to-local, align 4
  %v2_151a2 = add i32 %v11_151a0, %v1_151a2
  %v1_151a4 = load i32, i32* %esi.global-to-local, align 4
  %v2_151a4 = add i32 %v1_151a4, 4
  %v3_151a4 = inttoptr i32 %v2_151a4 to i32*
  store i32 %v2_151a2, i32* %v3_151a4, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_151ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_151ab = xor i32 %v1_151ab, %arg1
  %v3_151ab = icmp eq i32 %v2_151ab, 0
  store i32 %v2_151ab, i32* @eax, align 8
  %v1_151b2 = icmp eq i1 %v3_151ab, false
  br i1 %v1_151b2, label %bb, label %dec_label_pc_151b4

bb:                                               ; preds = %dec_label_pc_1519a
  %v2_151b2 = call i32 @function_151c1()
  store i32 %v2_151b2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_151b4

dec_label_pc_151b4:                               ; preds = %bb, %dec_label_pc_1519a
  %v0_151bc = phi i32 [ %v2_151b2, %bb ], [ %v2_151ab, %dec_label_pc_1519a ]
  ret i32 %v0_151bc

; uselistorder directives
  uselistorder i32 ()* @function_151c1, { 2, 1, 0 }
}

define i32 @function_151c1() local_unnamed_addr {
dec_label_pc_151c1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_151c6() local_unnamed_addr {
dec_label_pc_151c6:
  %v3_151c6 = load i32, i32* @eax, align 8
  ret i32 %v3_151c6
}

define i32 @function_151d2() local_unnamed_addr {
dec_label_pc_151d2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_initialize_mapEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_151e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_15208 = lshr i32 %arg2, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 8, i32* %eax.global-to-local, align 8
  %v2_15211 = udiv i32 %v2_15208, 21
  %v1_15217 = add nuw nsw i32 %v2_15211, 3
  %v5_1521a = icmp ult i32 %v1_15217, 8
  %v3_1521d = select i1 %v5_1521a, i32 8, i32 %v1_15217
  store i32 %v3_1521d, i32* %edx.global-to-local, align 4
  %v2_15220 = add i32 %arg1, 4
  %v3_15220 = inttoptr i32 %v2_15220 to i32*
  store i32 %v3_1521d, i32* %v3_15220, align 4
  %v0_15223 = load i32, i32* %edx.global-to-local, align 4
  %v2_15223 = mul i32 %v0_15223, 4
  store i32 %v2_15223, i32* %edx.global-to-local, align 4
  %v3_15226 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_15226
}

define i32 @function_1522f() local_unnamed_addr {
dec_label_pc_1522f:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_15230 = load i32, i32* %eax.global-to-local, align 8
  %v2_15230 = add i32 %v0_15230, 41
  %v16_15230 = and i32 %v2_15230, 255
  %v18_15230 = and i32 %v0_15230, -256
  %v19_15230 = or i32 %v16_15230, %v18_15230
  store i32 %v19_15230, i32* @eax, align 8
  %v1_15234 = call i32 @function_8d902c8d(i32 %tmp93)
  store i32 %v1_15234, i32* %eax.global-to-local, align 8
  ret i32 %v1_15234

; uselistorder directives
  uselistorder i32 %v0_15230, { 1, 0 }
}

define i32 @function_15243() local_unnamed_addr {
dec_label_pc_15243:
  %v0_15243 = call i32 @function_151d2()
  ret i32 %v0_15243
}

define i32 @function_15248() local_unnamed_addr {
dec_label_pc_15248:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15253(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15253:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_15253 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15253 = add i32 %v0_15253, 79921923
  %v2_15253 = inttoptr i32 %v1_15253 to i32*
  %v3_15253 = load i32, i32* %v2_15253, align 4
  %v4_15253 = add i32 %v3_15253, -1
  store i32 %v4_15253, i32* %v2_15253, align 4
  %v0_15259 = load i32, i32* %esi.global-to-local, align 4
  %v1_15259 = load i32, i32* %ebx.global-to-local, align 4
  %tmp107 = icmp ugt i32 %v0_15259, %v1_15259
  br i1 %tmp107, label %bb, label %dec_label_pc_1525d

bb:                                               ; preds = %dec_label_pc_15253
  %v4_1525b = call i32 @function_15248()
  store i32 %v4_1525b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1525d

dec_label_pc_1525d:                               ; preds = %dec_label_pc_15253, %bb
  %v0_1525d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1525d = load i32, i32* %edi.global-to-local, align 4
  %v2_1525d = add i32 %v1_1525d, 20
  %v3_1525d = inttoptr i32 %v2_1525d to i32*
  store i32 %v0_1525d, i32* %v3_1525d, align 4
  %v2_15260 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_15260, i32* %eax.global-to-local, align 8
  %v1_15263 = add i32 %v2_15260, 504
  %v1_15269 = load i32, i32* %edi.global-to-local, align 4
  %v2_15269 = add i32 %v1_15269, 16
  %v3_15269 = inttoptr i32 %v2_15269 to i32*
  store i32 %v1_15263, i32* %v3_15269, align 4
  %v0_1526c = load i32, i32* %esi.global-to-local, align 4
  %v1_1526c = add i32 %v0_1526c, -4
  store i32 %v1_1526c, i32* %edx.global-to-local, align 4
  %v0_1526f = load i32, i32* %eax.global-to-local, align 8
  %v1_1526f = load i32, i32* %edi.global-to-local, align 4
  %v2_1526f = add i32 %v1_1526f, 12
  %v3_1526f = inttoptr i32 %v2_1526f to i32*
  store i32 %v0_1526f, i32* %v3_1526f, align 4
  %v0_15272 = load i32, i32* %edx.global-to-local, align 4
  %v1_15272 = load i32, i32* %edi.global-to-local, align 4
  %v2_15272 = add i32 %v1_15272, 36
  %v3_15272 = inttoptr i32 %v2_15272 to i32*
  store i32 %v0_15272, i32* %v3_15272, align 4
  %v0_15275 = load i32, i32* %esi.global-to-local, align 4
  %v1_15275 = add i32 %v0_15275, -4
  %v2_15275 = inttoptr i32 %v1_15275 to i32*
  %v3_15275 = load i32, i32* %v2_15275, align 4
  store i32 %v3_15275, i32* %ecx.global-to-local, align 4
  %v0_15278 = load i32, i32* %eax.global-to-local, align 8
  %v1_15278 = load i32, i32* %edi.global-to-local, align 4
  %v2_15278 = add i32 %v1_15278, 8
  %v3_15278 = inttoptr i32 %v2_15278 to i32*
  store i32 %v0_15278, i32* %v3_15278, align 4
  %v0_1527f = load i32, i32* %ecx.global-to-local, align 4
  %v1_1527f = add i32 %v0_1527f, 504
  %v2_15285 = lshr i32 %arg1, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v2_15285, i32* %eax.global-to-local, align 8
  %v1_15287 = load i32, i32* %edi.global-to-local, align 4
  %v2_15287 = add i32 %v1_15287, 32
  %v3_15287 = inttoptr i32 %v2_15287 to i32*
  store i32 %v1_1527f, i32* %v3_15287, align 4
  %v1_1528f = load i32, i32* %eax.global-to-local, align 8
  %v7_1528f = udiv i32 %v1_1528f, 6
  store i32 %v7_1528f, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v0_15295 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15295 = load i32, i32* %edi.global-to-local, align 4
  %v2_15295 = add i32 %v1_15295, 28
  %v3_15295 = inttoptr i32 %v2_15295 to i32*
  store i32 %v0_15295, i32* %v3_15295, align 4
  %v0_15298 = load i32, i32* %edx.global-to-local, align 4
  %v2_15298 = udiv i32 %v0_15298, 4
  %v3_1529b = mul i32 %v2_15298, 42
  store i32 %v3_1529b, i32* %edx.global-to-local, align 4
  %v0_1529e = load i32, i32* %eax.global-to-local, align 8
  %v2_1529e = sub i32 %v0_1529e, %v3_1529b
  %v0_152a3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_152a3 = mul i32 %v2_1529e, 12
  %v3_152a3 = add i32 %v2_152a3, %v0_152a3
  %v1_152a6 = load i32, i32* %edi.global-to-local, align 4
  %v2_152a6 = add i32 %v1_152a6, 24
  %v3_152a6 = inttoptr i32 %v2_152a6 to i32*
  store i32 %v3_152a3, i32* %v3_152a6, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_152ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_152ad = xor i32 %v1_152ad, %arg2
  %v3_152ad = icmp eq i32 %v2_152ad, 0
  store i32 %v2_152ad, i32* @eax, align 8
  %v1_152b4 = icmp eq i1 %v3_152ad, false
  br i1 %v1_152b4, label %bb105, label %dec_label_pc_152b6

bb105:                                            ; preds = %dec_label_pc_1525d
  %v2_152b4 = call i32 @function_152d4()
  store i32 %v2_152b4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_152b6

dec_label_pc_152b6:                               ; preds = %bb105, %dec_label_pc_1525d
  %v0_152bd = phi i32 [ %v2_152b4, %bb105 ], [ %v2_152ad, %dec_label_pc_1525d ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_152bd

; uselistorder directives
  uselistorder i32 %v3_1529b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1525d, { 1, 0 }
}

define i32 @function_152d4() local_unnamed_addr {
dec_label_pc_152d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_152da() local_unnamed_addr {
dec_label_pc_152da:
  %eax.global-to-local = alloca i32, align 4
  %v0_152da = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_152da
}

define i32 @function_15305() local_unnamed_addr {
dec_label_pc_15305:
  %eax.global-to-local = alloca i32, align 4
  %v0_15305 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15305
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE19_M_destroy_data_auxESt15_Deque_iteratorIS3_RS3_PS3_ES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15320:
  %v1_15344 = add i32 %arg1, 12
  %v2_15344 = inttoptr i32 %v1_15344 to i32*
  %v3_15344 = load i32, i32* %v2_15344, align 4
  store i32 %v3_15344, i32* @edx, align 4
  %v1_1534b = add i32 %arg2, 12
  %v2_1534b = inttoptr i32 %v1_1534b to i32*
  %v3_1534b = load i32, i32* %v2_1534b, align 4
  store i32 %v3_1534b, i32* @eax, align 8
  %v1_1534e = add i32 %v3_15344, 4
  store i32 %v1_1534e, i32* @ebp, align 4
  %v7_15351 = icmp ult i32 %v1_1534e, %v3_1534b
  %v1_15353 = icmp eq i1 %v7_15351, false
  br i1 %v1_15353, label %bb, label %dec_label_pc_15355

bb:                                               ; preds = %dec_label_pc_15320
  %v4_15353 = inttoptr i32 %arg2 to i32*
  %v5_15353 = call i32 @function_153a3(i32* %v4_15353, i32 %arg1)
  %v0_15358.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_15355

dec_label_pc_15355:                               ; preds = %bb, %dec_label_pc_15320
  %v0_15358 = phi i32 [ %v0_15358.pre, %bb ], [ %v1_1534e, %dec_label_pc_15320 ]
  %v1_15358 = inttoptr i32 %v0_15358 to i32*
  %v2_15358 = load i32, i32* %v1_15358, align 4
  store i32 %v2_15358, i32* @ebx, align 4
  %v1_15368 = inttoptr i32 %v2_15358 to i32*
  %v2_15368 = load i32, i32* %v1_15368, align 4
  %v1_1536a = add i32 %v2_15358, 8
  %v2_1536a = inttoptr i32 %v1_1536a to i32*
  %v3_1536a = load i32, i32* %v2_1536a, align 4
  %v1_1536d = icmp eq i32 %v2_15368, 0
  br i1 %v1_1536d, label %bb110, label %dec_label_pc_15371

bb110:                                            ; preds = %dec_label_pc_15355
  %v1_1536f = call i32 @function_15387()
  br label %dec_label_pc_15371

dec_label_pc_15371:                               ; preds = %bb110, %dec_label_pc_15355
  %v0_15371 = phi i32 [ %v1_1536f, %bb110 ], [ %v3_1536a, %dec_label_pc_15355 ]
  %v2_15371 = sub i32 %v0_15371, %v2_15368
  ret i32 %v2_15371

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15387() local_unnamed_addr {
dec_label_pc_15387:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_15395 = add i32 %tmp1, 12
  %v2_15395 = inttoptr i32 %v1_15395 to i32*
  %v3_15395 = load i32, i32* %v2_15395, align 4
  ret i32 %v3_15395
}

define i32 @function_153a3(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_153a3:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v0_153a3 = load i32, i32* @eax, align 8
  %v1_153a3 = load i32, i32* @edx, align 4
  %v12_153a3 = icmp eq i32 %v0_153a3, %v1_153a3
  br i1 %v12_153a3, label %bb, label %dec_label_pc_153ab

bb:                                               ; preds = %dec_label_pc_153a3
  %v1_153a5 = call i32 @function_1542b()
  br label %dec_label_pc_153ab

dec_label_pc_153ab:                               ; preds = %bb, %dec_label_pc_153a3
  store i32 %tmp6, i32* @eax, align 8
  %v1_153af = add i32 %tmp6, 8
  %v2_153af = inttoptr i32 %v1_153af to i32*
  %v3_153af = load i32, i32* %v2_153af, align 4
  store i32 %v3_153af, i32* @edi, align 4
  %v2_153b2 = load i32, i32* %arg1, align 4
  store i32 %v2_153b2, i32* @ebx, align 4
  %v12_153b4 = icmp eq i32 %v3_153af, %v2_153b2
  br i1 %v12_153b4, label %bb7, label %dec_label_pc_153b8

bb7:                                              ; preds = %dec_label_pc_153ab
  %v1_153b6 = call i32 @function_153de()
  %v0_153b8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %bb7, %dec_label_pc_153ab
  %v0_153b8 = phi i32 [ %v0_153b8.pre, %bb7 ], [ %v2_153b2, %dec_label_pc_153ab ]
  %v1_153b8 = inttoptr i32 %v0_153b8 to i32*
  %v2_153b8 = load i32, i32* %v1_153b8, align 4
  %v1_153ba = add i32 %v0_153b8, 8
  %v2_153ba = inttoptr i32 %v1_153ba to i32*
  %v3_153ba = load i32, i32* %v2_153ba, align 4
  store i32 %v3_153ba, i32* @eax, align 8
  %v1_153bd = icmp eq i32 %v2_153b8, 0
  br i1 %v1_153bd, label %bb8, label %dec_label_pc_153c1

bb8:                                              ; preds = %dec_label_pc_153b8
  %v1_153bf = call i32 @function_153d7()
  br label %dec_label_pc_153c1

dec_label_pc_153c1:                               ; preds = %bb8, %dec_label_pc_153b8
  %v0_153c1 = phi i32 [ %v1_153bf, %bb8 ], [ %v3_153ba, %dec_label_pc_153b8 ]
  %v2_153c1 = sub i32 %v0_153c1, %v2_153b8
  ret i32 %v2_153c1

; uselistorder directives
  uselistorder i32 %v0_153b8, { 1, 0 }
  uselistorder i32 %v2_153b2, { 1, 0, 2 }
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @function_153d7() local_unnamed_addr {
dec_label_pc_153d7:
  %v0_153dc = load i32, i32* @eax, align 8
  ret i32 %v0_153dc
}

define i32 @function_153de() local_unnamed_addr {
dec_label_pc_153de:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_153e2 = inttoptr i32 %tmp5 to i32*
  %v2_153e2 = load i32, i32* %v1_153e2, align 4
  store i32 %v2_153e2, i32* @edi, align 4
  %v1_153e4 = add i32 %tmp5, 4
  %v2_153e4 = inttoptr i32 %v1_153e4 to i32*
  %v3_153e4 = load i32, i32* %v2_153e4, align 4
  store i32 %v3_153e4, i32* @ebx, align 4
  %v12_153e7 = icmp eq i32 %v2_153e2, %v3_153e4
  br i1 %v12_153e7, label %bb, label %dec_label_pc_153eb

bb:                                               ; preds = %dec_label_pc_153de
  %v1_153e9 = call i32 @function_15416()
  %v0_153f0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_153eb

dec_label_pc_153eb:                               ; preds = %bb, %dec_label_pc_153de
  %v0_153f0 = phi i32 [ %v0_153f0.pre, %bb ], [ %v3_153e4, %dec_label_pc_153de ]
  %v1_153f0 = inttoptr i32 %v0_153f0 to i32*
  %v2_153f0 = load i32, i32* %v1_153f0, align 4
  %v1_153f2 = add i32 %v0_153f0, 8
  %v2_153f2 = inttoptr i32 %v1_153f2 to i32*
  %v3_153f2 = load i32, i32* %v2_153f2, align 4
  store i32 %v3_153f2, i32* @eax, align 8
  %v1_153f5 = icmp eq i32 %v2_153f0, 0
  br i1 %v1_153f5, label %bb6, label %dec_label_pc_153f9

bb6:                                              ; preds = %dec_label_pc_153eb
  %v1_153f7 = call i32 @function_1540f()
  br label %dec_label_pc_153f9

dec_label_pc_153f9:                               ; preds = %bb6, %dec_label_pc_153eb
  %v0_153f9 = phi i32 [ %v1_153f7, %bb6 ], [ %v3_153f2, %dec_label_pc_153eb ]
  %v2_153f9 = sub i32 %v0_153f9, %v2_153f0
  ret i32 %v2_153f9

; uselistorder directives
  uselistorder i32 %v0_153f0, { 1, 0 }
  uselistorder i32 %v3_153e4, { 1, 0, 2 }
}

define i32 @function_1540f() local_unnamed_addr {
dec_label_pc_1540f:
  %v0_1540f = load i32, i32* @ebx, align 4
  %v1_1540f = add i32 %v0_1540f, 12
  store i32 %v1_1540f, i32* @ebx, align 4
  %v0_15414 = load i32, i32* @eax, align 8
  ret i32 %v0_15414
}

define i32 @function_15416() local_unnamed_addr {
dec_label_pc_15416:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1541a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1541a = icmp eq i32 %v1_1541a, %tmp10
  %v1_15421 = icmp eq i1 %v3_1541a, false
  br i1 %v1_15421, label %bb, label %dec_label_pc_15416.dec_label_pc_15423_crit_edge

dec_label_pc_15416.dec_label_pc_15423_crit_edge:  ; preds = %dec_label_pc_15416
  %v0_1542a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_15423

bb:                                               ; preds = %dec_label_pc_15416
  %v2_15421 = call i32 @function_15468()
  br label %dec_label_pc_15423

dec_label_pc_15423:                               ; preds = %dec_label_pc_15416.dec_label_pc_15423_crit_edge, %bb
  %v0_1542a = phi i32 [ %v2_15421, %bb ], [ %v0_1542a.pre, %dec_label_pc_15416.dec_label_pc_15423_crit_edge ]
  ret i32 %v0_1542a

; uselistorder directives
  uselistorder label %dec_label_pc_15423, { 1, 0 }
}

define i32 @function_1542b() local_unnamed_addr {
dec_label_pc_1542b:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_15433 = inttoptr i32 %tmp6 to i32*
  %v2_15433 = load i32, i32* %v1_15433, align 4
  store i32 %v2_15433, i32* @edi, align 4
  %v1_15435 = inttoptr i32 %tmp5 to i32*
  %v2_15435 = load i32, i32* %v1_15435, align 4
  store i32 %v2_15435, i32* @ebx, align 4
  %v12_15437 = icmp eq i32 %v2_15433, %v2_15435
  br i1 %v12_15437, label %bb, label %dec_label_pc_1543b

bb:                                               ; preds = %dec_label_pc_1542b
  %v1_15439 = call i32 @function_15416()
  %v0_15440.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1543b

dec_label_pc_1543b:                               ; preds = %bb, %dec_label_pc_1542b
  %v0_15440 = phi i32 [ %v0_15440.pre, %bb ], [ %v2_15435, %dec_label_pc_1542b ]
  %v1_15440 = inttoptr i32 %v0_15440 to i32*
  %v2_15440 = load i32, i32* %v1_15440, align 4
  %v1_15442 = add i32 %v0_15440, 8
  %v2_15442 = inttoptr i32 %v1_15442 to i32*
  %v3_15442 = load i32, i32* %v2_15442, align 4
  store i32 %v3_15442, i32* @eax, align 8
  %v1_15445 = icmp eq i32 %v2_15440, 0
  br i1 %v1_15445, label %bb7, label %dec_label_pc_15449

bb7:                                              ; preds = %dec_label_pc_1543b
  %v1_15447 = call i32 @function_1545f()
  br label %dec_label_pc_15449

dec_label_pc_15449:                               ; preds = %bb7, %dec_label_pc_1543b
  %v0_15449 = phi i32 [ %v1_15447, %bb7 ], [ %v3_15442, %dec_label_pc_1543b ]
  %v2_15449 = sub i32 %v0_15449, %v2_15440
  ret i32 %v2_15449

; uselistorder directives
  uselistorder i32 %v0_15440, { 1, 0 }
  uselistorder i32 %v2_15435, { 1, 0, 2 }
}

define i32 @function_1545f() local_unnamed_addr {
dec_label_pc_1545f:
  %v0_15466 = call i32 @function_15416()
  ret i32 %v0_15466

; uselistorder directives
  uselistorder i32 ()* @function_15416, { 2, 1, 0 }
}

define i32 @function_15468() local_unnamed_addr {
dec_label_pc_15468:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15470:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_15473 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v0_15487 = load i32, i32* %ebp.global-to-local, align 4
  %v0_1548b = load i32, i32* %esi.global-to-local, align 4
  %v1_15492 = add i32 %arg1, 24
  %v2_15492 = inttoptr i32 %v1_15492 to i32*
  %v3_15492 = load i32, i32* %v2_15492, align 4
  store i32 %v3_15492, i32* %ebp.global-to-local, align 4
  %v1_15495 = add i32 %arg1, 32
  %v2_15495 = inttoptr i32 %v1_15495 to i32*
  %v3_15495 = load i32, i32* %v2_15495, align 4
  store i32 %v3_15495, i32* %esi.global-to-local, align 4
  %v1_154a2 = add i32 %arg1, 8
  %v2_154a2 = inttoptr i32 %v1_154a2 to i32*
  %v3_154a2 = load i32, i32* %v2_154a2, align 4
  %v0_154a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_154a9 = add i32 %arg1, 28
  %v2_154a9 = inttoptr i32 %v1_154a9 to i32*
  %v3_154a9 = load i32, i32* %v2_154a9, align 4
  store i32 %v3_154a9, i32* %edi.global-to-local, align 4
  store i32 %v3_15492, i32* %stack_var_-48, align 4
  %v1_154b0 = add i32 %arg1, 16
  %v2_154b0 = inttoptr i32 %v1_154b0 to i32*
  %v3_154b0 = load i32, i32* %v2_154b0, align 4
  store i32 %v3_154b0, i32* %ebp.global-to-local, align 4
  %v2_154b7 = ptrtoint i32* %stack_var_-48 to i32
  %v2_154bf = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_154bf, i32* @eax, align 8
  store i32 %v3_154a2, i32* %stack_var_-64, align 4
  %v3_154de = call i32 @function_2a790(i32 %arg1, i32 %v2_154bf, i32 %v2_154b7)
  store i32 %v3_154de, i32* @eax, align 8
  %v0_154e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_154e6 = call i32 @function_29120(i32 %v0_154e3)
  store i32 0, i32* %ebp.global-to-local, align 4
  br i1 false, label %dec_label_pc_1550c, label %dec_label_pc_154f8

dec_label_pc_154f8:                               ; preds = %dec_label_pc_15470
  store i32 %v0_15473, i32* %ebx.global-to-local, align 4
  store i32 %v0_1548b, i32* %esi.global-to-local, align 4
  store i32 %v0_154a5, i32* %edi.global-to-local, align 4
  store i32 %v0_15487, i32* %ebp.global-to-local, align 4
  ret i32 %v1_154e6

dec_label_pc_1550c:                               ; preds = %dec_label_pc_15470
  ret i32 %v1_154e6

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 4, 0 }
}

define i32 @function_15522() local_unnamed_addr {
dec_label_pc_15522:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt11_Deque_baseI4CInvSaIS0_EE17_M_initialize_mapEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15530:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_15558 = lshr i32 %arg2, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 8, i32* %eax.global-to-local, align 8
  %v2_15561 = udiv i32 %v2_15558, 7
  %v1_15567 = add nuw nsw i32 %v2_15561, 3
  %v5_1556a = icmp ult i32 %v1_15567, 8
  %v3_1556d = select i1 %v5_1556a, i32 8, i32 %v1_15567
  store i32 %v3_1556d, i32* %edx.global-to-local, align 4
  %v2_15570 = add i32 %arg1, 4
  %v3_15570 = inttoptr i32 %v2_15570 to i32*
  store i32 %v3_1556d, i32* %v3_15570, align 4
  %v0_15573 = load i32, i32* %edx.global-to-local, align 4
  %v2_15573 = mul i32 %v0_15573, 4
  store i32 %v2_15573, i32* %edx.global-to-local, align 4
  %v3_15576 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_15576
}

define i32 @function_1557f() local_unnamed_addr {
dec_label_pc_1557f:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_15580 = load i32, i32* %eax.global-to-local, align 8
  %v2_15580 = add i32 %v0_15580, 41
  %v16_15580 = and i32 %v2_15580, 255
  %v18_15580 = and i32 %v0_15580, -256
  %v19_15580 = or i32 %v16_15580, %v18_15580
  store i32 %v19_15580, i32* @eax, align 8
  %v1_15584 = call i32 @function_8d902c8d(i32 %tmp93)
  store i32 %v1_15584, i32* %eax.global-to-local, align 8
  ret i32 %v1_15584

; uselistorder directives
  uselistorder i32 %v0_15580, { 1, 0 }
}

define i32 @function_15593() local_unnamed_addr {
dec_label_pc_15593:
  %v0_15593 = call i32 @function_15522()
  ret i32 %v0_15593
}

define i32 @function_15598() local_unnamed_addr {
dec_label_pc_15598:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_155a3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_155a3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_155a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_155a3 = add i32 %v0_155a3, 79921923
  %v2_155a3 = inttoptr i32 %v1_155a3 to i32*
  %v3_155a3 = load i32, i32* %v2_155a3, align 4
  %v4_155a3 = add i32 %v3_155a3, -1
  store i32 %v4_155a3, i32* %v2_155a3, align 4
  %v0_155a9 = load i32, i32* %esi.global-to-local, align 4
  %v1_155a9 = load i32, i32* %ebx.global-to-local, align 4
  %tmp107 = icmp ugt i32 %v0_155a9, %v1_155a9
  br i1 %tmp107, label %bb, label %dec_label_pc_155ad

bb:                                               ; preds = %dec_label_pc_155a3
  %v4_155ab = call i32 @function_15598()
  store i32 %v4_155ab, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_155ad

dec_label_pc_155ad:                               ; preds = %dec_label_pc_155a3, %bb
  %v0_155ad = load i32, i32* %ebp.global-to-local, align 4
  %v1_155ad = load i32, i32* %edi.global-to-local, align 4
  %v2_155ad = add i32 %v1_155ad, 20
  %v3_155ad = inttoptr i32 %v2_155ad to i32*
  store i32 %v0_155ad, i32* %v3_155ad, align 4
  %v2_155b0 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_155b0, i32* %eax.global-to-local, align 8
  %v1_155b3 = add i32 %v2_155b0, 504
  %v1_155b9 = load i32, i32* %edi.global-to-local, align 4
  %v2_155b9 = add i32 %v1_155b9, 16
  %v3_155b9 = inttoptr i32 %v2_155b9 to i32*
  store i32 %v1_155b3, i32* %v3_155b9, align 4
  %v0_155bc = load i32, i32* %esi.global-to-local, align 4
  %v1_155bc = add i32 %v0_155bc, -4
  store i32 %v1_155bc, i32* %edx.global-to-local, align 4
  %v0_155bf = load i32, i32* %eax.global-to-local, align 8
  %v1_155bf = load i32, i32* %edi.global-to-local, align 4
  %v2_155bf = add i32 %v1_155bf, 12
  %v3_155bf = inttoptr i32 %v2_155bf to i32*
  store i32 %v0_155bf, i32* %v3_155bf, align 4
  %v0_155c2 = load i32, i32* %edx.global-to-local, align 4
  %v1_155c2 = load i32, i32* %edi.global-to-local, align 4
  %v2_155c2 = add i32 %v1_155c2, 36
  %v3_155c2 = inttoptr i32 %v2_155c2 to i32*
  store i32 %v0_155c2, i32* %v3_155c2, align 4
  %v0_155c5 = load i32, i32* %esi.global-to-local, align 4
  %v1_155c5 = add i32 %v0_155c5, -4
  %v2_155c5 = inttoptr i32 %v1_155c5 to i32*
  %v3_155c5 = load i32, i32* %v2_155c5, align 4
  store i32 %v3_155c5, i32* %ecx.global-to-local, align 4
  %v0_155c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_155c8 = load i32, i32* %edi.global-to-local, align 4
  %v2_155c8 = add i32 %v1_155c8, 8
  %v3_155c8 = inttoptr i32 %v2_155c8 to i32*
  store i32 %v0_155c8, i32* %v3_155c8, align 4
  %v0_155cf = load i32, i32* %ecx.global-to-local, align 4
  %v1_155cf = add i32 %v0_155cf, 504
  %v2_155d5 = lshr i32 %arg1, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v2_155d5, i32* %eax.global-to-local, align 8
  %v1_155d7 = load i32, i32* %edi.global-to-local, align 4
  %v2_155d7 = add i32 %v1_155d7, 32
  %v3_155d7 = inttoptr i32 %v2_155d7 to i32*
  store i32 %v1_155cf, i32* %v3_155d7, align 4
  %v1_155df = load i32, i32* %eax.global-to-local, align 8
  %v7_155df = udiv i32 %v1_155df, 2
  store i32 %v7_155df, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v0_155e5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_155e5 = load i32, i32* %edi.global-to-local, align 4
  %v2_155e5 = add i32 %v1_155e5, 28
  %v3_155e5 = inttoptr i32 %v2_155e5 to i32*
  store i32 %v0_155e5, i32* %v3_155e5, align 4
  %v0_155e8 = load i32, i32* %edx.global-to-local, align 4
  %v2_155e8 = udiv i32 %v0_155e8, 4
  %v3_155eb = mul i32 %v2_155e8, 14
  store i32 %v3_155eb, i32* %edx.global-to-local, align 4
  %v0_155ee = load i32, i32* %eax.global-to-local, align 8
  %v2_155ee = sub i32 %v0_155ee, %v3_155eb
  %v0_155f3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_155f3 = mul i32 %v2_155ee, 36
  %v3_155f3 = add i32 %v2_155f3, %v0_155f3
  %v1_155f6 = load i32, i32* %edi.global-to-local, align 4
  %v2_155f6 = add i32 %v1_155f6, 24
  %v3_155f6 = inttoptr i32 %v2_155f6 to i32*
  store i32 %v3_155f3, i32* %v3_155f6, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_155fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_155fd = xor i32 %v1_155fd, %arg2
  %v3_155fd = icmp eq i32 %v2_155fd, 0
  store i32 %v2_155fd, i32* @eax, align 8
  %v1_15604 = icmp eq i1 %v3_155fd, false
  br i1 %v1_15604, label %bb105, label %dec_label_pc_15606

bb105:                                            ; preds = %dec_label_pc_155ad
  %v2_15604 = call i32 @function_15631()
  store i32 %v2_15604, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_15606

dec_label_pc_15606:                               ; preds = %bb105, %dec_label_pc_155ad
  %v0_1560d = phi i32 [ %v2_15604, %bb105 ], [ %v2_155fd, %dec_label_pc_155ad ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1560d

; uselistorder directives
  uselistorder i32 %v3_155eb, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_155ad, { 1, 0 }
}

define i32 @function_15629() local_unnamed_addr {
dec_label_pc_15629:
  %eax.global-to-local = alloca i32, align 4
  %v0_15629 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15629
}

define i32 @function_15631() local_unnamed_addr {
dec_label_pc_15631:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15637() local_unnamed_addr {
dec_label_pc_15637:
  %eax.global-to-local = alloca i32, align 4
  %v0_15637 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15637
}

define i32 @function_15660() local_unnamed_addr {
dec_label_pc_15660:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15662() local_unnamed_addr {
dec_label_pc_15662:
  %eax.global-to-local = alloca i32, align 4
  %v0_15662 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15662
}

define i32 @_ZNSt11_Deque_baseI11CNetMessageSaIS0_EE17_M_initialize_mapEj(i32 %arg1, i64 %arg2) local_unnamed_addr {
dec_label_pc_15670:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v3_15695 = and i64 %arg2, 4294967295
  %v4_15695 = mul nuw i64 %v3_15695, 3435973837
  store i32 8, i32* %eax.global-to-local, align 8
  %v2_1569c1 = udiv i64 %v4_15695, 17179869184
  %v2_1569c = trunc i64 %v2_1569c1 to i32
  %v1_156a2 = add nuw nsw i32 %v2_1569c, 3
  %v5_156a5 = icmp ult i32 %v1_156a2, 8
  %v3_156a8 = select i1 %v5_156a5, i32 8, i32 %v1_156a2
  store i32 %v3_156a8, i32* %edx.global-to-local, align 4
  %v2_156ab = add i32 %arg1, 4
  %v3_156ab = inttoptr i32 %v2_156ab to i32*
  store i32 %v3_156a8, i32* %v3_156ab, align 4
  %v0_156ae = load i32, i32* %edx.global-to-local, align 4
  %v2_156ae = mul i32 %v0_156ae, 4
  store i32 %v2_156ae, i32* %edx.global-to-local, align 4
  %v3_156b1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_156b1
}

define i32 @function_156ba() local_unnamed_addr {
dec_label_pc_156ba:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_156bb = load i32, i32* %eax.global-to-local, align 8
  %v2_156bb = add i32 %v0_156bb, 41
  %v16_156bb = and i32 %v2_156bb, 255
  %v18_156bb = and i32 %v0_156bb, -256
  %v19_156bb = or i32 %v16_156bb, %v18_156bb
  store i32 %v19_156bb, i32* @eax, align 8
  %v1_156bf = call i32 @function_8d902c8d(i32 %tmp93)
  store i32 %v1_156bf, i32* %eax.global-to-local, align 8
  ret i32 %v1_156bf

; uselistorder directives
  uselistorder i32 %v0_156bb, { 1, 0 }
}

define i32 @function_156ce() local_unnamed_addr {
dec_label_pc_156ce:
  %v0_156ce = call i32 @function_15660()
  ret i32 %v0_156ce
}

define i32 @function_156d0() local_unnamed_addr {
dec_label_pc_156d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_156db(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_156db:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_156db = load i32, i32* %ecx.global-to-local, align 4
  %v1_156db = add i32 %v0_156db, 79921923
  %v2_156db = inttoptr i32 %v1_156db to i32*
  %v3_156db = load i32, i32* %v2_156db, align 4
  %v4_156db = add i32 %v3_156db, -1
  store i32 %v4_156db, i32* %v2_156db, align 4
  %v0_156e1 = load i32, i32* %esi.global-to-local, align 4
  %v1_156e1 = load i32, i32* %ebx.global-to-local, align 4
  %tmp108 = icmp ugt i32 %v0_156e1, %v1_156e1
  br i1 %tmp108, label %bb, label %dec_label_pc_156e5

bb:                                               ; preds = %dec_label_pc_156db
  %v4_156e3 = call i32 @function_156d0()
  store i32 %v4_156e3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_156e5

dec_label_pc_156e5:                               ; preds = %dec_label_pc_156db, %bb
  %v0_156e5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_156e5 = load i32, i32* %edi.global-to-local, align 4
  %v2_156e5 = add i32 %v1_156e5, 20
  %v3_156e5 = inttoptr i32 %v2_156e5 to i32*
  store i32 %v0_156e5, i32* %v3_156e5, align 4
  %v2_156e8 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_156e8, i32* %eax.global-to-local, align 8
  %v1_156eb = add i32 %v2_156e8, ptrtoint (i8** @global_var_1cc.2485 to i32)
  %v1_156f1 = load i32, i32* %edi.global-to-local, align 4
  %v2_156f1 = add i32 %v1_156f1, 16
  %v3_156f1 = inttoptr i32 %v2_156f1 to i32*
  store i32 %v1_156eb, i32* %v3_156f1, align 4
  %v0_156f4 = load i32, i32* %esi.global-to-local, align 4
  %v1_156f4 = add i32 %v0_156f4, -4
  store i32 %v1_156f4, i32* %edx.global-to-local, align 4
  %v0_156f7 = load i32, i32* %eax.global-to-local, align 8
  %v1_156f7 = load i32, i32* %edi.global-to-local, align 4
  %v2_156f7 = add i32 %v1_156f7, 12
  %v3_156f7 = inttoptr i32 %v2_156f7 to i32*
  store i32 %v0_156f7, i32* %v3_156f7, align 4
  %v0_156fa = load i32, i32* %edx.global-to-local, align 4
  %v1_156fa = load i32, i32* %edi.global-to-local, align 4
  %v2_156fa = add i32 %v1_156fa, 36
  %v3_156fa = inttoptr i32 %v2_156fa to i32*
  store i32 %v0_156fa, i32* %v3_156fa, align 4
  %v0_156fd = load i32, i32* %esi.global-to-local, align 4
  %v1_156fd = add i32 %v0_156fd, -4
  %v2_156fd = inttoptr i32 %v1_156fd to i32*
  %v3_156fd = load i32, i32* %v2_156fd, align 4
  store i32 %v3_156fd, i32* %ecx.global-to-local, align 4
  %v0_15700 = load i32, i32* %eax.global-to-local, align 8
  %v1_15700 = load i32, i32* %edi.global-to-local, align 4
  %v2_15700 = add i32 %v1_15700, 8
  %v3_15700 = inttoptr i32 %v2_15700 to i32*
  store i32 %v0_15700, i32* %v3_15700, align 4
  %v4_15703 = trunc i64 %arg1 to i32
  store i32 %v4_15703, i32* %eax.global-to-local, align 8
  %v0_15707 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15707 = add i32 %v0_15707, ptrtoint (i8** @global_var_1cc.2485 to i32)
  %v1_1570d = load i32, i32* %edi.global-to-local, align 4
  %v2_1570d = add i32 %v1_1570d, 32
  %v3_1570d = inttoptr i32 %v2_1570d to i32*
  store i32 %v1_15707, i32* %v3_1570d, align 4
  %v1_15715 = load i32, i32* %eax.global-to-local, align 8
  %v7_15715 = udiv i32 %v1_15715, 2
  store i32 %v7_15715, i32* %edx.global-to-local, align 4
  %v0_15717 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15717 = load i32, i32* %edi.global-to-local, align 4
  %v2_15717 = add i32 %v1_15717, 28
  %v3_15717 = inttoptr i32 %v2_15717 to i32*
  store i32 %v0_15717, i32* %v3_15717, align 4
  %v0_1571a = load i32, i32* %edx.global-to-local, align 4
  %v2_1571a = udiv i32 %v0_1571a, 4
  %tmp105 = mul i32 %v2_1571a, -5
  %v2_15724 = add i32 %tmp105, %v4_15703
  store i32 %v2_15724, i32* %edx.global-to-local, align 4
  %v3_15726 = mul i32 %v2_15724, ptrtoint (i32* @global_var_5c.2559 to i32)
  %v0_15729 = load i32, i32* %ecx.global-to-local, align 4
  %v2_15729 = add i32 %v3_15726, %v0_15729
  store i32 %v2_15729, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_1572f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1572f = xor i32 %v1_1572f, %arg2
  %v3_1572f = icmp eq i32 %v2_1572f, 0
  store i32 %v2_1572f, i32* @eax, align 8
  %v1_15736 = load i32, i32* %edi.global-to-local, align 4
  %v2_15736 = add i32 %v1_15736, 24
  %v3_15736 = inttoptr i32 %v2_15736 to i32*
  store i32 %v2_15729, i32* %v3_15736, align 4
  %v1_15739 = icmp eq i1 %v3_1572f, false
  br i1 %v1_15739, label %bb106, label %dec_label_pc_156e5.dec_label_pc_1573b_crit_edge

dec_label_pc_156e5.dec_label_pc_1573b_crit_edge:  ; preds = %dec_label_pc_156e5
  %v0_15742.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1573b

bb106:                                            ; preds = %dec_label_pc_156e5
  %v2_15739 = call i32 @function_15766()
  store i32 %v2_15739, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1573b

dec_label_pc_1573b:                               ; preds = %dec_label_pc_156e5.dec_label_pc_1573b_crit_edge, %bb106
  %v0_15742 = phi i32 [ %v0_15742.pre, %dec_label_pc_156e5.dec_label_pc_1573b_crit_edge ], [ %v2_15739, %bb106 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_15742

; uselistorder directives
  uselistorder i32 %v2_15724, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 1 }
  uselistorder label %dec_label_pc_1573b, { 1, 0 }
  uselistorder label %dec_label_pc_156e5, { 1, 0 }
}

define i32 @function_1575e() local_unnamed_addr {
dec_label_pc_1575e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1575e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1575e
}

define i32 @function_15766() local_unnamed_addr {
dec_label_pc_15766:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1576c() local_unnamed_addr {
dec_label_pc_1576c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1576c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1576c
}

define i32 @function_15797() local_unnamed_addr {
dec_label_pc_15797:
  %eax.global-to-local = alloca i32, align 4
  %v0_15797 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15797
}

define i32 @_ZNSt5dequeI11CNetMessageSaIS0_EE19_M_destroy_data_auxESt15_Deque_iteratorIS0_RS0_PS0_ES6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_157b0:
  %v1_157d4 = add i32 %arg1, 12
  %v2_157d4 = inttoptr i32 %v1_157d4 to i32*
  %v3_157d4 = load i32, i32* %v2_157d4, align 4
  store i32 %v3_157d4, i32* @edx, align 4
  %v1_157db = add i32 %arg2, 12
  %v2_157db = inttoptr i32 %v1_157db to i32*
  %v3_157db = load i32, i32* %v2_157db, align 4
  store i32 %v3_157db, i32* @eax, align 8
  %v1_157de = add i32 %v3_157d4, 4
  store i32 %v1_157de, i32* @ebp, align 4
  %v7_157e1 = icmp ult i32 %v1_157de, %v3_157db
  %v1_157e3 = icmp eq i1 %v7_157e1, false
  br i1 %v1_157e3, label %bb, label %dec_label_pc_157e5

bb:                                               ; preds = %dec_label_pc_157b0
  %v4_157e3 = inttoptr i32 %arg2 to i32*
  %v5_157e3 = call i32 @function_15854(i32* %v4_157e3, i32 %arg1)
  %v0_157e8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_157e5

dec_label_pc_157e5:                               ; preds = %bb, %dec_label_pc_157b0
  %v0_157e8 = phi i32 [ %v0_157e8.pre, %bb ], [ %v1_157de, %dec_label_pc_157b0 ]
  %v1_157e8 = inttoptr i32 %v0_157e8 to i32*
  %v2_157e8 = load i32, i32* %v1_157e8, align 4
  store i32 %v2_157e8, i32* @ebx, align 4
  %v1_157eb = add i32 %v2_157e8, ptrtoint (i8** @global_var_1cc.2485 to i32)
  store i32 %v1_157eb, i32* @edi, align 4
  %v1_157f8 = add i32 %v2_157e8, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_157f8 = inttoptr i32 %v1_157f8 to i32*
  %v3_157f8 = load i32, i32* %v2_157f8, align 4
  %v1_157fb = add i32 %v2_157e8, 68
  %v2_157fb = inttoptr i32 %v1_157fb to i32*
  %v3_157fb = load i32, i32* %v2_157fb, align 4
  %v1_157fe = icmp eq i32 %v3_157f8, 0
  br i1 %v1_157fe, label %bb14, label %dec_label_pc_15802

bb14:                                             ; preds = %dec_label_pc_157e5
  %v1_15800 = call i32 @function_15818()
  br label %dec_label_pc_15802

dec_label_pc_15802:                               ; preds = %bb14, %dec_label_pc_157e5
  %v0_15802 = phi i32 [ %v1_15800, %bb14 ], [ %v3_157fb, %dec_label_pc_157e5 ]
  %v2_15802 = sub i32 %v0_15802, %v3_157f8
  ret i32 %v2_15802

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15818() local_unnamed_addr {
dec_label_pc_15818:
  %v0_15818 = load i32, i32* @ebx, align 4
  %v1_15818 = add i32 %v0_15818, 4
  %v2_15818 = inttoptr i32 %v1_15818 to i32*
  %v3_15818 = load i32, i32* %v2_15818, align 4
  %v1_1581b = add i32 %v0_15818, 12
  %v2_1581b = inttoptr i32 %v1_1581b to i32*
  %v3_1581b = load i32, i32* %v2_1581b, align 4
  %v1_1581e = icmp eq i32 %v3_15818, 0
  br i1 %v1_1581e, label %bb, label %dec_label_pc_15822

bb:                                               ; preds = %dec_label_pc_15818
  %v1_15820 = call i32 @function_15838()
  br label %dec_label_pc_15822

dec_label_pc_15822:                               ; preds = %bb, %dec_label_pc_15818
  %v0_15822 = phi i32 [ %v1_15820, %bb ], [ %v3_1581b, %dec_label_pc_15818 ]
  %v2_15822 = sub i32 %v0_15822, %v3_15818
  ret i32 %v2_15822
}

define i32 @function_15838() local_unnamed_addr {
dec_label_pc_15838:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_15838 = load i32, i32* @ebx, align 4
  %v1_15838 = add i32 %v0_15838, ptrtoint (i32* @global_var_5c.2559 to i32)
  store i32 %v1_15838, i32* @ebx, align 4
  %v0_15843 = load i32, i32* @ebp, align 4
  %v1_15843 = add i32 %v0_15843, 4
  store i32 %v1_15843, i32* @ebp, align 4
  %v1_15846 = add i32 %tmp1, 12
  %v2_15846 = inttoptr i32 %v1_15846 to i32*
  %v3_15846 = load i32, i32* %v2_15846, align 4
  ret i32 %v3_15846
}

define i32 @function_15854(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15854:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v0_15854 = load i32, i32* @eax, align 8
  %v1_15854 = load i32, i32* @edx, align 4
  %v12_15854 = icmp eq i32 %v0_15854, %v1_15854
  br i1 %v12_15854, label %bb, label %dec_label_pc_1585c

bb:                                               ; preds = %dec_label_pc_15854
  %v1_15856 = call i32 @function_15928()
  br label %dec_label_pc_1585c

dec_label_pc_1585c:                               ; preds = %bb, %dec_label_pc_15854
  store i32 %tmp6, i32* @eax, align 8
  %v1_15860 = add i32 %tmp6, 8
  %v2_15860 = inttoptr i32 %v1_15860 to i32*
  %v3_15860 = load i32, i32* %v2_15860, align 4
  store i32 %v3_15860, i32* @edi, align 4
  %v2_15863 = load i32, i32* %arg1, align 4
  store i32 %v2_15863, i32* @ebx, align 4
  %v12_15865 = icmp eq i32 %v3_15860, %v2_15863
  br i1 %v12_15865, label %bb7, label %dec_label_pc_15869

bb7:                                              ; preds = %dec_label_pc_1585c
  %v1_15867 = call i32 @function_158b7()
  %v0_15870.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_15869

dec_label_pc_15869:                               ; preds = %bb7, %dec_label_pc_1585c
  %v0_15870 = phi i32 [ %v0_15870.pre, %bb7 ], [ %v2_15863, %dec_label_pc_1585c ]
  %v1_15870 = add i32 %v0_15870, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_15870 = inttoptr i32 %v1_15870 to i32*
  %v3_15870 = load i32, i32* %v2_15870, align 4
  %v1_15873 = add i32 %v0_15870, 68
  %v2_15873 = inttoptr i32 %v1_15873 to i32*
  %v3_15873 = load i32, i32* %v2_15873, align 4
  %v1_15876 = icmp eq i32 %v3_15870, 0
  br i1 %v1_15876, label %bb8, label %dec_label_pc_1587a

bb8:                                              ; preds = %dec_label_pc_15869
  %v1_15878 = call i32 @function_15890()
  br label %dec_label_pc_1587a

dec_label_pc_1587a:                               ; preds = %bb8, %dec_label_pc_15869
  %v0_1587a = phi i32 [ %v1_15878, %bb8 ], [ %v3_15873, %dec_label_pc_15869 ]
  %v2_1587a = sub i32 %v0_1587a, %v3_15870
  ret i32 %v2_1587a

; uselistorder directives
  uselistorder i32 %v0_15870, { 1, 0 }
  uselistorder i32 %v2_15863, { 1, 0, 2 }
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @function_15890() local_unnamed_addr {
dec_label_pc_15890:
  %v0_15890 = load i32, i32* @ebx, align 4
  %v1_15890 = add i32 %v0_15890, 4
  %v2_15890 = inttoptr i32 %v1_15890 to i32*
  %v3_15890 = load i32, i32* %v2_15890, align 4
  %v1_15893 = add i32 %v0_15890, 12
  %v2_15893 = inttoptr i32 %v1_15893 to i32*
  %v3_15893 = load i32, i32* %v2_15893, align 4
  store i32 %v3_15893, i32* @eax, align 8
  %v1_15896 = icmp eq i32 %v3_15890, 0
  br i1 %v1_15896, label %bb, label %dec_label_pc_1589a

bb:                                               ; preds = %dec_label_pc_15890
  %v1_15898 = call i32 @function_158b0()
  br label %dec_label_pc_1589a

dec_label_pc_1589a:                               ; preds = %bb, %dec_label_pc_15890
  %v0_1589a = phi i32 [ %v1_15898, %bb ], [ %v3_15893, %dec_label_pc_15890 ]
  %v2_1589a = sub i32 %v0_1589a, %v3_15890
  ret i32 %v2_1589a
}

define i32 @function_158b0() local_unnamed_addr {
dec_label_pc_158b0:
  %v0_158b5 = load i32, i32* @eax, align 8
  ret i32 %v0_158b5
}

define i32 @function_158b7() local_unnamed_addr {
dec_label_pc_158b7:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_158bb = inttoptr i32 %tmp5 to i32*
  %v2_158bb = load i32, i32* %v1_158bb, align 4
  store i32 %v2_158bb, i32* @edi, align 4
  %v1_158bd = add i32 %tmp5, 4
  %v2_158bd = inttoptr i32 %v1_158bd to i32*
  %v3_158bd = load i32, i32* %v2_158bd, align 4
  store i32 %v3_158bd, i32* @ebx, align 4
  %v12_158c0 = icmp eq i32 %v2_158bb, %v3_158bd
  br i1 %v12_158c0, label %bb, label %dec_label_pc_158c4

bb:                                               ; preds = %dec_label_pc_158b7
  %v1_158c2 = call i32 @function_1590f()
  %v0_158c8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_158c4

dec_label_pc_158c4:                               ; preds = %bb, %dec_label_pc_158b7
  %v0_158c8 = phi i32 [ %v0_158c8.pre, %bb ], [ %v3_158bd, %dec_label_pc_158b7 ]
  %v1_158c8 = add i32 %v0_158c8, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_158c8 = inttoptr i32 %v1_158c8 to i32*
  %v3_158c8 = load i32, i32* %v2_158c8, align 4
  %v1_158cb = add i32 %v0_158c8, 68
  %v2_158cb = inttoptr i32 %v1_158cb to i32*
  %v3_158cb = load i32, i32* %v2_158cb, align 4
  %v1_158ce = icmp eq i32 %v3_158c8, 0
  br i1 %v1_158ce, label %bb6, label %dec_label_pc_158d2

bb6:                                              ; preds = %dec_label_pc_158c4
  %v1_158d0 = call i32 @function_158e8()
  br label %dec_label_pc_158d2

dec_label_pc_158d2:                               ; preds = %bb6, %dec_label_pc_158c4
  %v0_158d2 = phi i32 [ %v1_158d0, %bb6 ], [ %v3_158cb, %dec_label_pc_158c4 ]
  %v2_158d2 = sub i32 %v0_158d2, %v3_158c8
  ret i32 %v2_158d2

; uselistorder directives
  uselistorder i32 %v0_158c8, { 1, 0 }
  uselistorder i32 %v3_158bd, { 1, 0, 2 }
}

define i32 @function_158e8() local_unnamed_addr {
dec_label_pc_158e8:
  %v0_158e8 = load i32, i32* @ebx, align 4
  %v1_158e8 = add i32 %v0_158e8, 4
  %v2_158e8 = inttoptr i32 %v1_158e8 to i32*
  %v3_158e8 = load i32, i32* %v2_158e8, align 4
  %v1_158eb = add i32 %v0_158e8, 12
  %v2_158eb = inttoptr i32 %v1_158eb to i32*
  %v3_158eb = load i32, i32* %v2_158eb, align 4
  store i32 %v3_158eb, i32* @eax, align 8
  %v1_158ee = icmp eq i32 %v3_158e8, 0
  br i1 %v1_158ee, label %bb, label %dec_label_pc_158f2

bb:                                               ; preds = %dec_label_pc_158e8
  %v1_158f0 = call i32 @function_15908()
  br label %dec_label_pc_158f2

dec_label_pc_158f2:                               ; preds = %bb, %dec_label_pc_158e8
  %v0_158f2 = phi i32 [ %v1_158f0, %bb ], [ %v3_158eb, %dec_label_pc_158e8 ]
  %v2_158f2 = sub i32 %v0_158f2, %v3_158e8
  ret i32 %v2_158f2
}

define i32 @function_15908() local_unnamed_addr {
dec_label_pc_15908:
  %v0_15908 = load i32, i32* @ebx, align 4
  %v1_15908 = add i32 %v0_15908, ptrtoint (i32* @global_var_5c.2559 to i32)
  store i32 %v1_15908, i32* @ebx, align 4
  %v0_1590d = load i32, i32* @eax, align 8
  ret i32 %v0_1590d
}

define i32 @function_1590f() local_unnamed_addr {
dec_label_pc_1590f:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_15913 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_15913 = icmp eq i32 %v1_15913, %tmp10
  %v1_1591a = icmp eq i1 %v3_15913, false
  br i1 %v1_1591a, label %bb, label %dec_label_pc_1590f.dec_label_pc_15920_crit_edge

dec_label_pc_1590f.dec_label_pc_15920_crit_edge:  ; preds = %dec_label_pc_1590f
  %v0_15927.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_15920

bb:                                               ; preds = %dec_label_pc_1590f
  %v2_1591a = call i32 @function_159ab()
  br label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_1590f.dec_label_pc_15920_crit_edge, %bb
  %v0_15927 = phi i32 [ %v2_1591a, %bb ], [ %v0_15927.pre, %dec_label_pc_1590f.dec_label_pc_15920_crit_edge ]
  ret i32 %v0_15927

; uselistorder directives
  uselistorder label %dec_label_pc_15920, { 1, 0 }
}

define i32 @function_15928() local_unnamed_addr {
dec_label_pc_15928:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_15930 = inttoptr i32 %tmp6 to i32*
  %v2_15930 = load i32, i32* %v1_15930, align 4
  store i32 %v2_15930, i32* @edi, align 4
  %v1_15932 = inttoptr i32 %tmp5 to i32*
  %v2_15932 = load i32, i32* %v1_15932, align 4
  store i32 %v2_15932, i32* @ebx, align 4
  %v12_15934 = icmp eq i32 %v2_15930, %v2_15932
  br i1 %v12_15934, label %bb, label %dec_label_pc_15938

bb:                                               ; preds = %dec_label_pc_15928
  %v1_15936 = call i32 @function_1590f()
  %v0_15938.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_15938

dec_label_pc_15938:                               ; preds = %bb, %dec_label_pc_15928
  %v0_15938 = phi i32 [ %v0_15938.pre, %bb ], [ %v2_15932, %dec_label_pc_15928 ]
  %v1_15938 = add i32 %v0_15938, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_15938 = inttoptr i32 %v1_15938 to i32*
  %v3_15938 = load i32, i32* %v2_15938, align 4
  %v1_1593b = add i32 %v0_15938, 68
  %v2_1593b = inttoptr i32 %v1_1593b to i32*
  %v3_1593b = load i32, i32* %v2_1593b, align 4
  %v1_1593e = icmp eq i32 %v3_15938, 0
  br i1 %v1_1593e, label %bb7, label %dec_label_pc_15942

bb7:                                              ; preds = %dec_label_pc_15938
  %v1_15940 = call i32 @function_15958()
  br label %dec_label_pc_15942

dec_label_pc_15942:                               ; preds = %bb7, %dec_label_pc_15938
  %v0_15942 = phi i32 [ %v1_15940, %bb7 ], [ %v3_1593b, %dec_label_pc_15938 ]
  %v2_15942 = sub i32 %v0_15942, %v3_15938
  ret i32 %v2_15942

; uselistorder directives
  uselistorder i32 %v0_15938, { 1, 0 }
  uselistorder i32 %v2_15932, { 1, 0, 2 }
}

define i32 @function_15958() local_unnamed_addr {
dec_label_pc_15958:
  %v0_15958 = load i32, i32* @ebx, align 4
  %v1_15958 = add i32 %v0_15958, 4
  %v2_15958 = inttoptr i32 %v1_15958 to i32*
  %v3_15958 = load i32, i32* %v2_15958, align 4
  %v1_1595b = add i32 %v0_15958, 12
  %v2_1595b = inttoptr i32 %v1_1595b to i32*
  %v3_1595b = load i32, i32* %v2_1595b, align 4
  store i32 %v3_1595b, i32* @eax, align 8
  %v1_1595e = icmp eq i32 %v3_15958, 0
  br i1 %v1_1595e, label %bb, label %dec_label_pc_15962

bb:                                               ; preds = %dec_label_pc_15958
  %v1_15960 = call i32 @function_15978()
  br label %dec_label_pc_15962

dec_label_pc_15962:                               ; preds = %bb, %dec_label_pc_15958
  %v0_15962 = phi i32 [ %v1_15960, %bb ], [ %v3_1595b, %dec_label_pc_15958 ]
  %v2_15962 = sub i32 %v0_15962, %v3_15958
  ret i32 %v2_15962
}

define i32 @function_15978() local_unnamed_addr {
dec_label_pc_15978:
  %v0_1597f = call i32 @function_1590f()
  ret i32 %v0_1597f

; uselistorder directives
  uselistorder i32 ()* @function_1590f, { 2, 1, 0 }
}

define i32 @function_15984() local_unnamed_addr {
dec_label_pc_15984:
  %eax.global-to-local = alloca i32, align 4
  %v0_15984 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15984
}

define i32 @function_15999() local_unnamed_addr {
dec_label_pc_15999:
  %eax.global-to-local = alloca i32, align 4
  %v0_15999 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15999
}

define i32 @function_159ab() local_unnamed_addr {
dec_label_pc_159ab:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_159b3() local_unnamed_addr {
dec_label_pc_159b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_159b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_159b3
}

define i32 @function_159c8() local_unnamed_addr {
dec_label_pc_159c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_159c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_159c8
}

define i32 @_ZNSt5dequeI11CNetMessageSaIS0_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_159e0:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_159e3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v0_159f7 = load i32, i32* %ebp.global-to-local, align 4
  %v0_159fb = load i32, i32* %esi.global-to-local, align 4
  %v1_15a02 = add i32 %arg1, 24
  %v2_15a02 = inttoptr i32 %v1_15a02 to i32*
  %v3_15a02 = load i32, i32* %v2_15a02, align 4
  store i32 %v3_15a02, i32* %ebp.global-to-local, align 4
  %v1_15a05 = add i32 %arg1, 32
  %v2_15a05 = inttoptr i32 %v1_15a05 to i32*
  %v3_15a05 = load i32, i32* %v2_15a05, align 4
  store i32 %v3_15a05, i32* %esi.global-to-local, align 4
  %v1_15a12 = add i32 %arg1, 8
  %v2_15a12 = inttoptr i32 %v1_15a12 to i32*
  %v3_15a12 = load i32, i32* %v2_15a12, align 4
  %v0_15a15 = load i32, i32* %edi.global-to-local, align 4
  %v1_15a19 = add i32 %arg1, 28
  %v2_15a19 = inttoptr i32 %v1_15a19 to i32*
  %v3_15a19 = load i32, i32* %v2_15a19, align 4
  store i32 %v3_15a19, i32* %edi.global-to-local, align 4
  store i32 %v3_15a02, i32* %stack_var_-48, align 4
  %v1_15a20 = add i32 %arg1, 16
  %v2_15a20 = inttoptr i32 %v1_15a20 to i32*
  %v3_15a20 = load i32, i32* %v2_15a20, align 4
  store i32 %v3_15a20, i32* %ebp.global-to-local, align 4
  %v2_15a27 = ptrtoint i32* %stack_var_-48 to i32
  %v2_15a2f = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_15a2f, i32* @eax, align 8
  store i32 %v3_15a12, i32* %stack_var_-64, align 4
  %v3_15a4e = call i32 @function_2b190(i32 %arg1, i32 %v2_15a2f, i32 %v2_15a27)
  store i32 %v3_15a4e, i32* @eax, align 8
  %v0_15a53 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15a56 = call i32 @function_29700(i32 %v0_15a53)
  store i32 0, i32* %ebp.global-to-local, align 4
  br i1 false, label %dec_label_pc_15a7c, label %dec_label_pc_15a68

dec_label_pc_15a68:                               ; preds = %dec_label_pc_159e0
  store i32 %v0_159e3, i32* %ebx.global-to-local, align 4
  store i32 %v0_159fb, i32* %esi.global-to-local, align 4
  store i32 %v0_15a15, i32* %edi.global-to-local, align 4
  store i32 %v0_159f7, i32* %ebp.global-to-local, align 4
  ret i32 %v1_15a56

dec_label_pc_15a7c:                               ; preds = %dec_label_pc_159e0
  ret i32 %v1_15a56

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 4, 0 }
}

define i32 @_ZN5CNodeD1Ev() local_unnamed_addr {
dec_label_pc_15aa0:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_15aba = add i32 %tmp2, 8
  %v2_15aba = inttoptr i32 %v1_15aba to i32*
  %v3_15aba = load i32, i32* %v2_15aba, align 4
  %v10_15abd = icmp eq i32 %v3_15aba, -1
  br i1 %v10_15abd, label %bb, label %dec_label_pc_15ac2

bb:                                               ; preds = %dec_label_pc_15aa0
  %v0_15aae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15ac0 = call i32 @function_15ad1(i32 %v0_15aae)
  br label %dec_label_pc_15ac2

dec_label_pc_15ac2:                               ; preds = %bb, %dec_label_pc_15aa0
  %v0_15ac2 = phi i32 [ %v2_15ac0, %bb ], [ %v3_15aba, %dec_label_pc_15aa0 ]
  ret i32 %v0_15ac2

; uselistorder directives
  uselistorder i32 %v3_15aba, { 1, 0 }
}

define i32 @function_15ad1(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ad1:
  %v0_15ad1 = load i32, i32* @ebx, align 4
  %v1_15ad1 = add i32 %v0_15ad1, 560
  %v2_15ad1 = inttoptr i32 %v1_15ad1 to i32*
  %v3_15ad1 = load i32, i32* %v2_15ad1, align 4
  %v1_15ad7 = icmp eq i32 %v3_15ad1, 0
  br i1 %v1_15ad7, label %bb, label %dec_label_pc_15adb

bb:                                               ; preds = %dec_label_pc_15ad1
  %v1_15ad9 = call i32 @function_15af1()
  br label %dec_label_pc_15adb

dec_label_pc_15adb:                               ; preds = %bb, %dec_label_pc_15ad1
  %v1_15adb = inttoptr i32 %v3_15ad1 to i32*
  %v2_15adb = load i32, i32* %v1_15adb, align 4
  store i32 %v2_15adb, i32* @eax, align 8
  %v1_15add = icmp eq i32 %v2_15adb, 0
  br i1 %v1_15add, label %bb3, label %dec_label_pc_15ae1

bb3:                                              ; preds = %dec_label_pc_15adb
  %v1_15adf = call i32 @function_15ae9()
  br label %dec_label_pc_15ae1

dec_label_pc_15ae1:                               ; preds = %bb3, %dec_label_pc_15adb
  %v3_15ae1 = phi i32 [ %v1_15adf, %bb3 ], [ %v2_15adb, %dec_label_pc_15adb ]
  ret i32 %v3_15ae1
}

define i32 @function_15ae9() local_unnamed_addr {
dec_label_pc_15ae9:
  %v3_15ae9 = load i32, i32* @eax, align 8
  ret i32 %v3_15ae9
}

define i32 @function_15af1() local_unnamed_addr {
dec_label_pc_15af1:
  %v0_15af1 = load i32, i32* @ebx, align 4
  %v1_15af1 = add i32 %v0_15af1, 884
  %v2_15af1 = inttoptr i32 %v1_15af1 to i32*
  %v3_15af1 = load i32, i32* %v2_15af1, align 4
  %v1_15afb = add i32 %v0_15af1, 876
  store i32 %v1_15afb, i32* @eax, align 8
  %v2_15b04 = call i32 @function_299e0(i32 %v1_15afb, i32 %v3_15af1)
  %v0_15b09 = load i32, i32* @ebx, align 4
  %v1_15b09 = add i32 %v0_15b09, 792
  ret i32 %v1_15b09

; uselistorder directives
  uselistorder i32 792, { 2, 1, 0 }
}

define i32 @function_15b9e() local_unnamed_addr {
dec_label_pc_15b9e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15b9e = load i32, i32* %ebx.global-to-local, align 4
  %v1_15b9e = add i32 %v0_15b9e, ptrtoint ([14 x i8]* @global_var_2b883.2699 to i32)
  %v2_15b9e = inttoptr i32 %v1_15b9e to i8*
  %v3_15b9e = load i8, i8* %v2_15b9e, align 1
  %v4_15b9e = load i32, i32* %ecx.global-to-local, align 4
  %v5_15b9e = trunc i32 %v4_15b9e to i8
  %v6_15b9e = add i8 %v5_15b9e, %v3_15b9e
  store i8 %v6_15b9e, i8* %v2_15b9e, align 1
  %v0_15ba4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15ba4 = add i32 %v0_15ba4, -1929108412
  %v2_15ba4 = inttoptr i32 %v1_15ba4 to i8*
  %v3_15ba4 = load i8, i8* %v2_15ba4, align 1
  %v5_15ba4 = trunc i32 %v0_15ba4 to i8
  %v6_15ba4 = add i8 %v3_15ba4, %v5_15ba4
  store i8 %v6_15ba4, i8* %v2_15ba4, align 1
  %v0_15baa = load i32, i32* %eax.global-to-local, align 8
  %v1_15baa = add i32 %v0_15baa, -1996488702
  %v2_15baa = inttoptr i32 %v1_15baa to i32*
  %v3_15baa = load i32, i32* %v2_15baa, align 4
  %v4_15baa = xor i32 %v3_15baa, 4
  store i32 %v4_15baa, i32* %v2_15baa, align 4
  %v0_15bb1 = load i32, i32* %eax.global-to-local, align 8
  %v11_15bb1 = and i32 %v0_15bb1, -24
  store i32 %v11_15bb1, i32* @eax, align 8
  %v0_15bb3 = call i32 @function_8b015cf4()
  store i32 %v0_15bb3, i32* %eax.global-to-local, align 8
  ret i32 %v0_15bb3
}

define i32 @function_15c1a() local_unnamed_addr {
dec_label_pc_15c1a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15db7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15db7:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15db7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15db7 = add i32 %v0_15db7, 1700537452
  %v2_15db7 = inttoptr i32 %v1_15db7 to i32*
  %v3_15db7 = load i32, i32* %v2_15db7, align 4
  %v4_15db7 = add i32 %v3_15db7, -1
  store i32 %v4_15db7, i32* %v2_15db7, align 4
  %v0_15dbd = load i32, i32* %ebp.global-to-local, align 4
  %v1_15dbd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15dbd = xor i32 %v1_15dbd, %v0_15dbd
  %v3_15dbd = icmp eq i32 %v2_15dbd, 0
  store i32 %v2_15dbd, i32* %ebp.global-to-local, align 4
  %v1_15dc3 = icmp eq i1 %v3_15dbd, false
  br i1 %v1_15dc3, label %bb, label %dec_label_pc_15db7.dec_label_pc_15dc9_crit_edge

dec_label_pc_15db7.dec_label_pc_15dc9_crit_edge:  ; preds = %dec_label_pc_15db7
  %v0_15dd0.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_15dc9

bb:                                               ; preds = %dec_label_pc_15db7
  %v2_15dc3 = call i32 @function_15f37()
  br label %dec_label_pc_15dc9

dec_label_pc_15dc9:                               ; preds = %dec_label_pc_15db7.dec_label_pc_15dc9_crit_edge, %bb
  %v0_15dd0 = phi i32 [ %v0_15dd0.pre, %dec_label_pc_15db7.dec_label_pc_15dc9_crit_edge ], [ %v2_15dc3, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_15dd0

; uselistorder directives
  uselistorder label %dec_label_pc_15dc9, { 1, 0 }
}

define i32 @function_15dd8() local_unnamed_addr {
dec_label_pc_15dd8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_15dd8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15dd8 = add i32 %v0_15dd8, ptrtoint (i32* @global_var_1d4.2529 to i32)
  %v2_15dd8 = inttoptr i32 %v1_15dd8 to i32*
  %v3_15dd8 = load i32, i32* %v2_15dd8, align 4
  store i32 %v3_15dd8, i32* @eax, align 8
  %v1_15de1 = call i32 @function_27630(i32 %v3_15dd8)
  store i32 %v1_15de1, i32* @eax, align 8
  %v0_15de6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15de6 = add i32 %v0_15de6, ptrtoint (i8** @global_var_1d8.2528 to i32)
  %v2_15de6 = inttoptr i32 %v1_15de6 to i8*
  store i8 0, i8* %v2_15de6, align 1
  %v0_15ded = call i32 @function_15c1a()
  ret i32 %v0_15ded

; uselistorder directives
  uselistorder i32 ptrtoint (i8** @global_var_1d8.2528 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @function_15df4() local_unnamed_addr {
dec_label_pc_15df4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15e2c() local_unnamed_addr {
dec_label_pc_15e2c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15e50() local_unnamed_addr {
dec_label_pc_15e50:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15e51() local_unnamed_addr {
dec_label_pc_15e51:
  %eax.global-to-local = alloca i32, align 4
  %v0_15e51 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15e51
}

define i32 @function_15f15(i16 %arg1) local_unnamed_addr {
dec_label_pc_15f15:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15f15 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15f15 = add i32 %v0_15f15, ptrtoint (i32* @global_var_1dc83.2700 to i32)
  %v2_15f15 = inttoptr i32 %v1_15f15 to i32*
  %v3_15f15 = load i32, i32* %v2_15f15, align 4
  %v4_15f15 = sub i32 %v3_15f15, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_15f15, i32* %v2_15f15, align 4
  %v0_15f1b = load i32, i32* %ecx.global-to-local, align 4
  %v1_15f1b = add i32 %v0_15f1b, 1021846532
  %v2_15f1b = inttoptr i32 %v1_15f1b to i8*
  %v3_15f1b = load i8, i8* %v2_15f1b, align 1
  %v5_15f1b = trunc i32 %v0_15f1b to i8
  %v6_15f1b = add i8 %v3_15f1b, %v5_15f1b
  store i8 %v6_15f1b, i8* %v2_15f1b, align 1
  %v0_15f23 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15f23 = add i32 %v0_15f23, ptrtoint (i8** @global_var_1d483.2701 to i32)
  %v2_15f23 = inttoptr i32 %v1_15f23 to i8*
  %v3_15f23 = load i8, i8* %v2_15f23, align 1
  %v4_15f23 = load i32, i32* %ecx.global-to-local, align 4
  %v5_15f23 = trunc i32 %v4_15f23 to i8
  %v6_15f23 = add i8 %v5_15f23, %v3_15f23
  store i8 %v6_15f23, i8* %v2_15f23, align 1
  %v0_15f29 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15f29 = add i32 %v0_15f29, -1092082684
  %v2_15f29 = inttoptr i32 %v1_15f29 to i8*
  %v3_15f29 = load i8, i8* %v2_15f29, align 1
  %v5_15f29 = trunc i32 %v0_15f29 to i8
  %v6_15f29 = add i8 %v3_15f29, %v5_15f29
  store i8 %v6_15f29, i8* %v2_15f29, align 1
  %v2_15f30 = load i32, i32* @eax, align 8
  %v4_15f30 = mul i32 %v2_15f30, 2
  %v21_15f30 = inttoptr i32 %v2_15f30 to i32*
  store i32 %v4_15f30, i32* %v21_15f30, align 4
  %v0_15f32 = call i32 @function_15df4()
  ret i32 %v0_15f32

; uselistorder directives
  uselistorder i32 %v2_15f30, { 1, 0 }
}

define i32 @function_15f37() local_unnamed_addr {
dec_label_pc_15f37:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15f3b() local_unnamed_addr {
dec_label_pc_15f3b:
  %ecx.global-to-local = alloca i32, align 4
  %v0_15f3b = load i32, i32* %ecx.global-to-local, align 4
  %v1_15f3b = add i32 %v0_15f3b, 607422919
  %v2_15f3b = inttoptr i32 %v1_15f3b to i32*
  %v3_15f3b = load i32, i32* %v2_15f3b, align 4
  %v4_15f3b = add i32 %v3_15f3b, -1
  store i32 %v4_15f3b, i32* %v2_15f3b, align 4
  %v0_15f43 = call i32 @function_29750()
  store i32 %v0_15f43, i32* @eax, align 8
  %v0_15f48 = call i32 @function_15e50()
  ret i32 %v0_15f48
}

define i32 @function_15f4d() local_unnamed_addr {
dec_label_pc_15f4d:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_15f54 = call i32 @function_297c0(i32 %tmp92)
  store i32 %v1_15f54, i32* @eax, align 8
  %v0_15f59 = call i32 @function_15e2c()
  ret i32 %v0_15f59
}

define i32 @_ZN11CNetCleanupD1Ev() local_unnamed_addr {
dec_label_pc_15f82:
  ret i32 859057720
}

define i32 @function_15fa1() local_unnamed_addr {
dec_label_pc_15fa1:
  %v0_15fa6 = load i32, i32* @eax, align 8
  ret i32 %v0_15fa6
}

define i32 @function_15fa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15fa8:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 1701707888, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint ([2 x i8]* @7 to i32), i32* %esi.global-to-local, align 4
  br i1 icmp eq (i32 sub (i32 1701707888, i32 ptrtoint ([2 x i8]* @7 to i32)), i32 0), label %dec_label_pc_15fca, label %dec_label_pc_15fb8

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fa8, %dec_label_pc_15fc3
  %v0_15fc65 = phi i32 [ %v0_15fc6, %dec_label_pc_15fc3 ], [ ptrtoint ([2 x i8]* @7 to i32), %dec_label_pc_15fa8 ]
  %v0_15fb8 = phi i32 [ %v1_15fc3, %dec_label_pc_15fc3 ], [ 1701707888, %dec_label_pc_15fa8 ]
  %v1_15fb8 = inttoptr i32 %v0_15fb8 to i32*
  %v2_15fb8 = load i32, i32* %v1_15fb8, align 4
  store i32 %v2_15fb8, i32* @eax, align 8
  %v10_15fba = icmp eq i32 %v2_15fb8, -1
  %v1_15fbd = icmp eq i1 %v10_15fba, false
  br i1 %v1_15fbd, label %bb, label %dec_label_pc_15fc3

bb:                                               ; preds = %dec_label_pc_15fb8
  %v2_15fbd = call i32 @function_16100()
  store i32 %v2_15fbd, i32* @eax, align 8
  %v0_15fc3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v0_15fc6.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_15fc3

dec_label_pc_15fc3:                               ; preds = %bb, %dec_label_pc_15fb8
  %v0_15fc6 = phi i32 [ %v0_15fc6.pre, %bb ], [ %v0_15fc65, %dec_label_pc_15fb8 ]
  %v0_15fc3 = phi i32 [ %v0_15fc3.pre, %bb ], [ %v0_15fb8, %dec_label_pc_15fb8 ]
  %v1_15fc3 = add i32 %v0_15fc3, 4
  store i32 %v1_15fc3, i32* %ebx.global-to-local, align 4
  %v12_15fc6 = icmp eq i32 %v0_15fc6, %v1_15fc3
  %v1_15fc8 = icmp eq i1 %v12_15fc6, false
  br i1 %v1_15fc8, label %dec_label_pc_15fb8, label %dec_label_pc_15fca

dec_label_pc_15fca:                               ; preds = %dec_label_pc_15fc3, %dec_label_pc_15fa8
  store i32 26482, i32* %esi.global-to-local, align 4
  store i32 26482, i32* %ebx.global-to-local, align 4
  %v2_15fe3 = call i32 @function_2ba00(i32 26482)
  ret i32 %v2_15fe3

; uselistorder directives
  uselistorder i32 %v1_15fc3, { 0, 2, 1 }
  uselistorder i32 ptrtoint ([2 x i8]* @7 to i32), { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_15fb8, { 1, 0 }
}

define i32 @function_15ff0() local_unnamed_addr {
dec_label_pc_15ff0:
  %v0_15ff5 = load i32, i32* @eax, align 8
  ret i32 %v0_15ff5
}

define i32 @function_15ff7() local_unnamed_addr {
dec_label_pc_15ff7:
  %v1_16013 = call i32 @function_2ba00(i32 1701707888)
  ret i32 %v1_16013

; uselistorder directives
  uselistorder i32 1701707888, { 1, 0, 2, 3, 4, 5 }
}

define i32 @function_16020() local_unnamed_addr {
dec_label_pc_16020:
  %v0_16022 = load i32, i32* @esi, align 4
  %v10_16022 = icmp eq i32 %v0_16022, 41752
  store i32 26482, i32* bitcast ([13 x i8]* @global_var_a178.2412 to i32*), align 4
  %v1_1603d = icmp eq i1 %v10_16022, false
  br i1 %v1_1603d, label %dec_label_pc_1604a, label %dec_label_pc_1603f

dec_label_pc_1603f:                               ; preds = %dec_label_pc_16020
  %v0_1603f = call i32 @function_1605c()
  ret i32 %v0_1603f

dec_label_pc_1604a:                               ; preds = %dec_label_pc_16020
  ret i32 %v0_16022

; uselistorder directives
  uselistorder i32 %v0_16022, { 1, 0 }
}

define i32 @function_1605c() local_unnamed_addr {
dec_label_pc_1605c:
  store i32 ptrtoint ([4 x i8]* @global_var_a318.2552 to i32), i32* bitcast ([4 x i8]* @global_var_a318.2552 to i32*), align 4
  store i32 ptrtoint ([4 x i8]* @global_var_a318.2552 to i32), i32* bitcast ([6 x i8]* @global_var_a31c.2702 to i32*), align 4
  ret i32 ptrtoint ([24 x i8]* @global_var_a378.2550 to i32)

; uselistorder directives
  uselistorder [4 x i8]* @global_var_a318.2552, { 1, 0 }
}

define i32 @function_160b8() local_unnamed_addr {
dec_label_pc_160b8:
  store i32 0, i32* bitcast ([5 x i8]* @global_var_a330.2471 to i32*), align 4
  %v2_160cf = call i32 @function_2ba00(i32 1684955496)
  ret i32 %v2_160cf

; uselistorder directives
  uselistorder i32 (i32)* @function_2ba00, { 2, 1, 0 }
}

define i32 @function_160dc() local_unnamed_addr {
dec_label_pc_160dc:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_160e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_160e0 = xor i32 %v1_160e0, %tmp8
  %v3_160e0 = icmp eq i32 %v2_160e0, 0
  store i32 %v2_160e0, i32* @eax, align 8
  store i32 0, i32* bitcast ([5 x i8]* @global_var_a338.2515 to i32*), align 4
  %v1_160f1 = icmp eq i1 %v3_160e0, false
  br i1 %v1_160f1, label %bb, label %dec_label_pc_160f3

bb:                                               ; preds = %dec_label_pc_160dc
  %v2_160f1 = call i32 @function_16144()
  br label %dec_label_pc_160f3

dec_label_pc_160f3:                               ; preds = %bb, %dec_label_pc_160dc
  %v0_160f9 = phi i32 [ %v2_160f1, %bb ], [ %v2_160e0, %dec_label_pc_160dc ]
  ret i32 %v0_160f9
}

define i32 @function_16100() local_unnamed_addr {
dec_label_pc_16100:
  %v3_16100 = load i32, i32* @eax, align 8
  ret i32 %v3_16100
}

define i32 @function_16128() local_unnamed_addr {
dec_label_pc_16128:
  %eax.global-to-local = alloca i32, align 4
  %v0_16128 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16128
}

define i32 @function_16130() local_unnamed_addr {
dec_label_pc_16130:
  store i32 26482, i32* bitcast ([13 x i8]* @global_var_a178.2412 to i32*), align 4
  %v0_1613a = call i32 @function_1605c()
  ret i32 %v0_1613a

; uselistorder directives
  uselistorder i32 ()* @function_1605c, { 1, 0 }
  uselistorder i32 26482, { 7, 1, 2, 8, 9, 3, 10, 11, 12, 13, 14, 0, 4, 15, 5, 6, 16 }
}

define i32 @function_16144() local_unnamed_addr {
dec_label_pc_16144:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_161a0:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  %v0_161a0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_161a1 = load i32, i32* %edi.global-to-local, align 4
  %v0_161a2 = load i32, i32* %esi.global-to-local, align 4
  %v0_161a3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp113, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v12_161bb = icmp eq i32 %tmp113, %arg2
  br i1 %v12_161bb, label %dec_label_pc_16220, label %dec_label_pc_161bf

dec_label_pc_161bf:                               ; preds = %dec_label_pc_161a0
  %v2_161bf = load i32, i32* %arg1, align 4
  %v1_161c1 = add i32 %arg2, 4
  %v2_161c1 = inttoptr i32 %v1_161c1 to i32*
  %v3_161c1 = load i32, i32* %v2_161c1, align 4
  store i32 %v3_161c1, i32* %esi.global-to-local, align 4
  %v1_161c4 = inttoptr i32 %arg2 to i32*
  %v2_161c4 = load i32, i32* %v1_161c4, align 4
  store i32 %v2_161c4, i32* %ebx.global-to-local, align 4
  %v1_161cb = add i32 %tmp113, 8
  %v2_161cb = inttoptr i32 %v1_161cb to i32*
  %v3_161cb = load i32, i32* %v2_161cb, align 4
  %v5_161ce = sub i32 %v3_161cb, %v2_161bf
  %v2_161d4 = sub i32 %v3_161c1, %v2_161c4
  %v12_161d4 = icmp eq i32 %v2_161d4, 0
  store i32 %v2_161d4, i32* @edx, align 4
  %tmp123 = icmp ugt i32 %v2_161d4, %v5_161ce
  br i1 %tmp123, label %dec_label_pc_16258, label %dec_label_pc_161da

dec_label_pc_161da:                               ; preds = %dec_label_pc_161bf
  %v1_161da = add i32 %tmp113, 4
  %v2_161da = inttoptr i32 %v1_161da to i32*
  %v3_161da = load i32, i32* %v2_161da, align 4
  store i32 %v3_161da, i32* %ecx.global-to-local, align 4
  %v5_161df = sub i32 %v3_161da, %v2_161bf
  %tmp124 = icmp ugt i32 %v2_161d4, %v5_161df
  br i1 %tmp124, label %dec_label_pc_161e7, label %dec_label_pc_16240

dec_label_pc_161e7:                               ; preds = %dec_label_pc_161da
  %v15_161df = icmp eq i32 %v5_161df, 0
  %v2_161e7 = add i32 %v5_161df, %v2_161c4
  %v1_161f3 = icmp eq i1 %v15_161df, false
  br i1 %v1_161f3, label %bb, label %dec_label_pc_161f9

bb:                                               ; preds = %dec_label_pc_161e7
  %v5_161f3 = call i32 @function_162b8(i32 %v2_161e7, i32 %v2_161bf, i32 %v5_161df)
  %v0_161f9.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_161f9

dec_label_pc_161f9:                               ; preds = %bb, %dec_label_pc_161e7
  %v0_161f9 = phi i32 [ %v0_161f9.pre, %bb ], [ %v3_161c1, %dec_label_pc_161e7 ]
  %v15_161f9 = icmp eq i32 %v0_161f9, %v2_161e7
  store i32 %v2_161e7, i32* @eax, align 8
  br i1 %v15_161f9, label %bb119, label %dec_label_pc_16208.preheader

bb119:                                            ; preds = %dec_label_pc_161f9
  %v1_16201 = call i32 @function_1631b()
  store i32 %v1_16201, i32* @eax, align 8
  br label %dec_label_pc_16208.preheader

dec_label_pc_16208.preheader:                     ; preds = %bb119, %dec_label_pc_161f9
  %v0_1620c4 = phi i32 [ %v1_16201, %bb119 ], [ %v2_161e7, %dec_label_pc_161f9 ]
  %v0_16208.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_16208

dec_label_pc_16208:                               ; preds = %dec_label_pc_16208.preheader, %dec_label_pc_16211
  %v0_1620c = phi i32 [ %v0_1620c4, %dec_label_pc_16208.preheader ], [ %v1_16211, %dec_label_pc_16211 ]
  %v2_1620f = phi i32 [ %v0_16208.pre, %dec_label_pc_16208.preheader ], [ %v1_16214, %dec_label_pc_16211 ]
  %v1_16208 = icmp eq i32 %v2_1620f, 0
  br i1 %v1_16208, label %dec_label_pc_16211, label %dec_label_pc_1620c

dec_label_pc_1620c:                               ; preds = %dec_label_pc_16208
  %v1_1620c = inttoptr i32 %v0_1620c to i8*
  %v2_1620c = load i8, i8* %v1_1620c, align 1
  %v3_1620c = zext i8 %v2_1620c to i32
  store i32 %v3_1620c, i32* %ebx.global-to-local, align 4
  %v3_1620f = inttoptr i32 %v2_1620f to i8*
  store i8 %v2_1620c, i8* %v3_1620f, align 1
  %v0_16211.pre = load i32, i32* @eax, align 8
  %v0_16214.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_16211

dec_label_pc_16211:                               ; preds = %dec_label_pc_1620c, %dec_label_pc_16208
  %v0_16214 = phi i32 [ %v0_16214.pre, %dec_label_pc_1620c ], [ 0, %dec_label_pc_16208 ]
  %v0_16211 = phi i32 [ %v0_16211.pre, %dec_label_pc_1620c ], [ %v0_1620c, %dec_label_pc_16208 ]
  %v1_16211 = add i32 %v0_16211, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_16211, i32* @eax, align 8
  %v1_16214 = add i32 %v0_16214, 1
  store i32 %v1_16214, i32* %ecx.global-to-local, align 4
  %v1_16217 = load i32, i32* %esi.global-to-local, align 4
  %v12_16217 = icmp eq i32 %v1_16211, %v1_16217
  %v1_16219 = icmp eq i1 %v12_16217, false
  br i1 %v1_16219, label %dec_label_pc_16208, label %dec_label_pc_1621b

dec_label_pc_1621b:                               ; preds = %dec_label_pc_16211
  %v1_1621b = load i32, i32* %edi.global-to-local, align 4
  %v2_1621b = inttoptr i32 %v1_1621b to i32*
  %v3_1621b = load i32, i32* %v2_1621b, align 4
  %v4_1621b = add i32 %v3_1621b, %v2_161d4
  %v2_1621d = add i32 %v1_1621b, 4
  %v3_1621d = inttoptr i32 %v2_1621d to i32*
  store i32 %v4_1621b, i32* %v3_1621d, align 4
  br label %dec_label_pc_16220

dec_label_pc_16220:                               ; preds = %dec_label_pc_16248, %dec_label_pc_1621b, %dec_label_pc_161a0
  %v0_1622b = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_1622b, i32* @eax, align 8
  br i1 false, label %bb120, label %dec_label_pc_16233

bb120:                                            ; preds = %dec_label_pc_16220
  br label %dec_label_pc_16233

dec_label_pc_16233:                               ; preds = %bb120, %dec_label_pc_16220
  store i32 %v0_161a3, i32* %ebx.global-to-local, align 4
  store i32 %v0_161a2, i32* %esi.global-to-local, align 4
  store i32 %v0_161a1, i32* %edi.global-to-local, align 4
  store i32 %v0_161a0, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1622b

dec_label_pc_16240:                               ; preds = %dec_label_pc_161da
  %v1_16242 = icmp eq i1 %v12_161d4, false
  br i1 %v1_16242, label %bb122, label %dec_label_pc_16248

bb122:                                            ; preds = %dec_label_pc_16240
  %v3_16242 = call i32 @function_162f8(i32 %v2_161bf)
  %v1_1624c.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_16248

dec_label_pc_16248:                               ; preds = %bb122, %dec_label_pc_16240
  %v1_1624c = phi i32 [ %v1_1624c.pre, %bb122 ], [ %tmp113, %dec_label_pc_16240 ]
  %v2_1624c = add i32 %v1_1624c, 4
  %v3_1624c = inttoptr i32 %v2_1624c to i32*
  store i32 %v2_161bf, i32* %v3_1624c, align 4
  br label %dec_label_pc_16220

dec_label_pc_16258:                               ; preds = %dec_label_pc_161bf
  ret i32 %v5_161ce

; uselistorder directives
  uselistorder i32 %v1_16214, { 1, 0 }
  uselistorder i32 %v1_16211, { 0, 2, 1 }
  uselistorder i32 %v2_161e7, { 1, 2, 0, 3 }
  uselistorder i32 %v5_161df, { 2, 1, 3, 0 }
  uselistorder i32 %v2_161d4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v5_161ce, { 1, 0 }
  uselistorder i32 %v2_161bf, { 3, 2, 4, 1, 0 }
  uselistorder i32 %tmp113, { 1, 2, 3, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %edi.global-to-local, { 4, 1, 2, 3, 5, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_16208, { 1, 0 }
}

define i32 @function_1627a() local_unnamed_addr {
dec_label_pc_1627a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1627a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1627a
}

define i32 @function_162a5() local_unnamed_addr {
dec_label_pc_162a5:
  %ebx.global-to-local = alloca i32, align 4
  %v0_162a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_162a5 = add i32 %v0_162a5, 18097236
  %v2_162a5 = inttoptr i32 %v1_162a5 to i32*
  %v3_162a5 = load i32, i32* %v2_162a5, align 4
  %v4_162a5 = add i32 %v3_162a5, -1
  store i32 %v4_162a5, i32* %v2_162a5, align 4
  %v0_162ab = call i32 @function_57892f89()
  ret i32 %v0_162ab
}

define i32 @function_162b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_162b8:
  ret i32 %arg1
}

define i32 @function_162cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_162cf:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_162cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_162cf = add i32 %v0_162cf, 72321799
  %v2_162cf = inttoptr i32 %v1_162cf to i32*
  %v3_162cf = load i32, i32* %v2_162cf, align 4
  %v4_162cf = add i32 %v3_162cf, -1
  store i32 %v4_162cf, i32* %v2_162cf, align 4
  %v0_162d5 = load i32, i32* %ebp.global-to-local, align 4
  ret i32 %v0_162d5
}

define i32 @function_162f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_162f8:
  ret i32 %arg1
}

define i32 @function_1630f(i16 %arg1) local_unnamed_addr {
dec_label_pc_1630f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1630f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1630f = add i32 %v0_1630f, 51651668
  %v2_1630f = inttoptr i32 %v1_1630f to i32*
  %v3_1630f = load i32, i32* %v2_1630f, align 4
  %v4_1630f = add i32 %v3_1630f, -1
  store i32 %v4_1630f, i32* %v2_1630f, align 4
  %v0_16316 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16316
}

define i32 @function_1631b() local_unnamed_addr {
dec_label_pc_1631b:
  %v0_1631f = load i32, i32* @eax, align 8
  ret i32 %v0_1631f
}

define i32 @function_16324() local_unnamed_addr {
dec_label_pc_16324:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail11unique_lockINS0_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16330:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  br i1 false, label %bb, label %dec_label_pc_16351

bb:                                               ; preds = %dec_label_pc_16330
  br label %dec_label_pc_16351

dec_label_pc_16351:                               ; preds = %bb, %dec_label_pc_16330
  %v2_16351 = load i32, i32* %arg1, align 4
  ret i32 %v2_16351
}

define i32 @function_1635f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1635f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16370:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_16370 = load i32, i32* %edi.global-to-local, align 4
  %v0_16371 = load i32, i32* %esi.global-to-local, align 4
  %v0_16372 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1637a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1638a = icmp eq i32 %arg2, 0
  %v1_1638c = icmp eq i1 %v1_1638a, false
  br i1 %v1_1638c, label %dec_label_pc_16392, label %dec_label_pc_1638e

dec_label_pc_1638e:                               ; preds = %dec_label_pc_16370
  %v4_1638e = call i32 @function_163b0(i32 %v0_1637a, i32 %v0_16372, i32 %v0_16371, i32 %v0_16370)
  ret i32 %v4_1638e

dec_label_pc_16392:                               ; preds = %dec_label_pc_16370
  %v1_16392 = add i32 %arg2, 12
  %v2_16392 = inttoptr i32 %v1_16392 to i32*
  %v3_16392 = load i32, i32* %v2_16392, align 4
  store i32 %v3_16392, i32* @eax, align 8
  %v2_1639c = call i32 @function_2c6e0(i32 %arg1, i32 %v3_16392)
  %v1_163a1 = add i32 %arg2, 8
  %v2_163a1 = inttoptr i32 %v1_163a1 to i32*
  %v3_163a1 = load i32, i32* %v2_163a1, align 4
  store i32 %v3_163a1, i32* %esi.global-to-local, align 4
  ret i32 %v2_1639c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_163b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_163b0:
  %v1_163b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_163b4 = xor i32 %v1_163b4, %arg1
  %v3_163b4 = icmp eq i32 %v2_163b4, 0
  %v1_163bb = icmp eq i1 %v3_163b4, false
  br i1 %v1_163bb, label %dec_label_pc_163c4, label %dec_label_pc_163bd

dec_label_pc_163bd:                               ; preds = %dec_label_pc_163b0
  ret i32 %v2_163b4

dec_label_pc_163c4:                               ; preds = %dec_label_pc_163b0
  ret i32 %v2_163b4

; uselistorder directives
  uselistorder i32 %v2_163b4, { 1, 0, 2 }
}

define i32 @_ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_163d0:
  store i32 %arg1, i32* @eax, align 8
  %v1_163e4 = add i32 %arg1, 8
  %v2_163e4 = inttoptr i32 %v1_163e4 to i32*
  %v3_163e4 = load i32, i32* %v2_163e4, align 4
  %v2_163ee = call i32 @function_2c740(i32 %arg1, i32 %v3_163e4)
  br i1 false, label %dec_label_pc_16404, label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %dec_label_pc_163d0
  ret i32 0

dec_label_pc_16404:                               ; preds = %dec_label_pc_163d0
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16410:
  %v1_1642b = icmp eq i32 %arg2, 0
  %v1_1642d = icmp eq i1 %v1_1642b, false
  br i1 %v1_1642d, label %dec_label_pc_1643a, label %dec_label_pc_1642f

dec_label_pc_1642f:                               ; preds = %dec_label_pc_16410
  %v0_1641b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1642f = call i32 @function_16478(i32 %v0_1641b)
  ret i32 %v1_1642f

dec_label_pc_1643a:                               ; preds = %dec_label_pc_16410
  %v1_1643a = add i32 %arg2, 12
  %v2_1643a = inttoptr i32 %v1_1643a to i32*
  %v3_1643a = load i32, i32* %v2_1643a, align 4
  store i32 %v3_1643a, i32* @eax, align 8
  %v1_16444 = call i32 @function_2c820(i32 %v3_1643a)
  %v1_16449 = add i32 %arg2, 52
  %v2_16449 = inttoptr i32 %v1_16449 to i32*
  %v3_16449 = load i32, i32* %v2_16449, align 4
  %v1_1644f = add i32 %arg2, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_1644f = inttoptr i32 %v1_1644f to i32*
  %v3_1644f = load i32, i32* %v2_1644f, align 4
  store i32 %v3_1644f, i32* @eax, align 8
  %v1_16452 = icmp eq i32 %v3_16449, 0
  br i1 %v1_16452, label %bb, label %dec_label_pc_16456

bb:                                               ; preds = %dec_label_pc_1643a
  %v1_16454 = call i32 @function_1646c()
  br label %dec_label_pc_16456

dec_label_pc_16456:                               ; preds = %bb, %dec_label_pc_1643a
  %v0_16456 = phi i32 [ %v1_16454, %bb ], [ %v3_1644f, %dec_label_pc_1643a ]
  %v2_16456 = sub i32 %v0_16456, %v3_16449
  ret i32 %v2_16456
}

define i32 @function_1646c() local_unnamed_addr {
dec_label_pc_1646c:
  %v3_1646c = load i32, i32* @eax, align 8
  ret i32 %v3_1646c
}

define i32 @function_16478(i32 %arg1) local_unnamed_addr {
dec_label_pc_16478:
  %v1_1647c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1647c = xor i32 %v1_1647c, %arg1
  %v3_1647c = icmp eq i32 %v2_1647c, 0
  %v1_16483 = icmp eq i1 %v3_1647c, false
  br i1 %v1_16483, label %dec_label_pc_1648d, label %dec_label_pc_16485

dec_label_pc_16485:                               ; preds = %dec_label_pc_16478
  ret i32 %v2_1647c

dec_label_pc_1648d:                               ; preds = %dec_label_pc_16478
  ret i32 %v2_1647c

; uselistorder directives
  uselistorder i32 %v2_1647c, { 1, 0, 2 }
}

define i32 @_ZNSt3mapI4CInv11CDataStreamSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_164a0:
  store i32 %arg1, i32* @eax, align 8
  %v1_164b4 = add i32 %arg1, 8
  %v2_164b4 = inttoptr i32 %v1_164b4 to i32*
  %v3_164b4 = load i32, i32* %v2_164b4, align 4
  %v2_164be = call i32 @function_2c8b0(i32 %arg1, i32 %v3_164b4)
  br i1 false, label %dec_label_pc_164d4, label %dec_label_pc_164d0

dec_label_pc_164d0:                               ; preds = %dec_label_pc_164a0
  ret i32 0

dec_label_pc_164d4:                               ; preds = %dec_label_pc_164a0
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZNSt11_Deque_baseISt4pairIx4CInvESaIS2_EE17_M_initialize_mapEj(i32 %arg1, i64 %arg2) local_unnamed_addr {
dec_label_pc_164e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v3_16505 = and i64 %arg2, 4294967295
  %v4_16505 = mul nuw i64 %v3_16505, 3123612579
  store i32 8, i32* %eax.global-to-local, align 8
  %v2_1650c1 = udiv i64 %v4_16505, 34359738368
  %v2_1650c = trunc i64 %v2_1650c1 to i32
  %v1_16512 = add nuw nsw i32 %v2_1650c, 3
  %v5_16515 = icmp ult i32 %v1_16512, 8
  %v3_16518 = select i1 %v5_16515, i32 8, i32 %v1_16512
  store i32 %v3_16518, i32* %edx.global-to-local, align 4
  %v2_1651b = add i32 %arg1, 4
  %v3_1651b = inttoptr i32 %v2_1651b to i32*
  store i32 %v3_16518, i32* %v3_1651b, align 4
  %v0_1651e = load i32, i32* %edx.global-to-local, align 4
  %v2_1651e = mul i32 %v0_1651e, 4
  store i32 %v2_1651e, i32* %edx.global-to-local, align 4
  %v3_16521 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_16521
}

define i32 @function_1652a() local_unnamed_addr {
dec_label_pc_1652a:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_1652b = load i32, i32* %eax.global-to-local, align 8
  %v2_1652b = add i32 %v0_1652b, 41
  %v16_1652b = and i32 %v2_1652b, 255
  %v18_1652b = and i32 %v0_1652b, -256
  %v19_1652b = or i32 %v16_1652b, %v18_1652b
  store i32 %v19_1652b, i32* @eax, align 8
  %v1_1652f = call i32 @function_8d902c8d(i32 %tmp93)
  store i32 %v1_1652f, i32* %eax.global-to-local, align 8
  ret i32 %v1_1652f

; uselistorder directives
  uselistorder i32 %v0_1652b, { 1, 0 }
}

define i32 @function_1653e() local_unnamed_addr {
dec_label_pc_1653e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1653e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1653e
}

define i32 @function_16540() local_unnamed_addr {
dec_label_pc_16540:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1654b(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1654b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1654b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1654b = add i32 %v0_1654b, 79921923
  %v2_1654b = inttoptr i32 %v1_1654b to i32*
  %v3_1654b = load i32, i32* %v2_1654b, align 4
  %v4_1654b = add i32 %v3_1654b, -1
  store i32 %v4_1654b, i32* %v2_1654b, align 4
  %v0_16551 = load i32, i32* %esi.global-to-local, align 4
  %v1_16551 = load i32, i32* %ebx.global-to-local, align 4
  %tmp109 = icmp ugt i32 %v0_16551, %v1_16551
  br i1 %tmp109, label %bb, label %dec_label_pc_16555

bb:                                               ; preds = %dec_label_pc_1654b
  %v4_16553 = call i32 @function_16540()
  store i32 %v4_16553, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16555

dec_label_pc_16555:                               ; preds = %dec_label_pc_1654b, %bb
  %v0_16555 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16555 = load i32, i32* %edi.global-to-local, align 4
  %v2_16555 = add i32 %v1_16555, 20
  %v3_16555 = inttoptr i32 %v2_16555 to i32*
  store i32 %v0_16555, i32* %v3_16555, align 4
  %v2_16558 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_16558, i32* %eax.global-to-local, align 8
  %v1_1655b = add i32 %v2_16558, 484
  %v1_16561 = load i32, i32* %edi.global-to-local, align 4
  %v2_16561 = add i32 %v1_16561, 16
  %v3_16561 = inttoptr i32 %v2_16561 to i32*
  store i32 %v1_1655b, i32* %v3_16561, align 4
  %v0_16564 = load i32, i32* %esi.global-to-local, align 4
  %v1_16564 = add i32 %v0_16564, -4
  store i32 %v1_16564, i32* %edx.global-to-local, align 4
  %v0_16567 = load i32, i32* %eax.global-to-local, align 8
  %v1_16567 = load i32, i32* %edi.global-to-local, align 4
  %v2_16567 = add i32 %v1_16567, 12
  %v3_16567 = inttoptr i32 %v2_16567 to i32*
  store i32 %v0_16567, i32* %v3_16567, align 4
  %v0_1656a = load i32, i32* %edx.global-to-local, align 4
  %v1_1656a = load i32, i32* %edi.global-to-local, align 4
  %v2_1656a = add i32 %v1_1656a, 36
  %v3_1656a = inttoptr i32 %v2_1656a to i32*
  store i32 %v0_1656a, i32* %v3_1656a, align 4
  %v0_1656d = load i32, i32* %esi.global-to-local, align 4
  %v1_1656d = add i32 %v0_1656d, -4
  %v2_1656d = inttoptr i32 %v1_1656d to i32*
  %v3_1656d = load i32, i32* %v2_1656d, align 4
  store i32 %v3_1656d, i32* %ecx.global-to-local, align 4
  %v0_16570 = load i32, i32* %eax.global-to-local, align 8
  %v1_16570 = load i32, i32* %edi.global-to-local, align 4
  %v2_16570 = add i32 %v1_16570, 8
  %v3_16570 = inttoptr i32 %v2_16570 to i32*
  store i32 %v0_16570, i32* %v3_16570, align 4
  %v4_16573 = trunc i64 %arg1 to i32
  store i32 %v4_16573, i32* %eax.global-to-local, align 8
  %v0_16577 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16577 = add i32 %v0_16577, 484
  %v1_1657d = load i32, i32* %edi.global-to-local, align 4
  %v2_1657d = add i32 %v1_1657d, 32
  %v3_1657d = inttoptr i32 %v2_1657d to i32*
  store i32 %v1_16577, i32* %v3_1657d, align 4
  %v1_16585 = load i32, i32* %eax.global-to-local, align 8
  %v7_16585 = udiv i32 %v1_16585, 2
  store i32 %v7_16585, i32* %edx.global-to-local, align 4
  %v0_16587 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16587 = load i32, i32* %edi.global-to-local, align 4
  %v2_16587 = add i32 %v1_16587, 28
  %v3_16587 = inttoptr i32 %v2_16587 to i32*
  store i32 %v0_16587, i32* %v3_16587, align 4
  %v0_1658a = load i32, i32* %edx.global-to-local, align 4
  %v2_1658a = udiv i32 %v0_1658a, 8
  %tmp106 = mul i32 %v2_1658a, -11
  %v2_16597 = add i32 %tmp106, %v4_16573
  store i32 %v2_16597, i32* %edx.global-to-local, align 4
  %v3_16599 = mul i32 %v2_16597, 44
  %v0_1659c = load i32, i32* %ecx.global-to-local, align 4
  %v2_1659c = add i32 %v3_16599, %v0_1659c
  store i32 %v2_1659c, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_165a2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_165a2 = xor i32 %v1_165a2, %arg2
  %v3_165a2 = icmp eq i32 %v2_165a2, 0
  store i32 %v2_165a2, i32* @eax, align 8
  %v1_165a9 = load i32, i32* %edi.global-to-local, align 4
  %v2_165a9 = add i32 %v1_165a9, 24
  %v3_165a9 = inttoptr i32 %v2_165a9 to i32*
  store i32 %v2_1659c, i32* %v3_165a9, align 4
  %v1_165ac = icmp eq i1 %v3_165a2, false
  br i1 %v1_165ac, label %bb107, label %dec_label_pc_16555.dec_label_pc_165ae_crit_edge

dec_label_pc_16555.dec_label_pc_165ae_crit_edge:  ; preds = %dec_label_pc_16555
  %v0_165b5.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_165ae

bb107:                                            ; preds = %dec_label_pc_16555
  %v2_165ac = call i32 @function_165d9()
  store i32 %v2_165ac, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_165ae

dec_label_pc_165ae:                               ; preds = %dec_label_pc_16555.dec_label_pc_165ae_crit_edge, %bb107
  %v0_165b5 = phi i32 [ %v0_165b5.pre, %dec_label_pc_16555.dec_label_pc_165ae_crit_edge ], [ %v2_165ac, %bb107 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_165b5

; uselistorder directives
  uselistorder i32 %v2_16597, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 1 }
  uselistorder label %dec_label_pc_165ae, { 1, 0 }
  uselistorder label %dec_label_pc_16555, { 1, 0 }
}

define i32 @function_165d1() local_unnamed_addr {
dec_label_pc_165d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_165d1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_165d1
}

define i32 @function_165d9() local_unnamed_addr {
dec_label_pc_165d9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_165df() local_unnamed_addr {
dec_label_pc_165df:
  %eax.global-to-local = alloca i32, align 4
  %v0_165df = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_165df
}

define i32 @function_1660a() local_unnamed_addr {
dec_label_pc_1660a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1660a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1660a
}

define i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16620:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_16620 = load i32, i32* %edi.global-to-local, align 4
  %v0_16621 = load i32, i32* %esi.global-to-local, align 4
  %v0_16622 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1662a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1663a = icmp eq i32 %arg2, 0
  %v1_1663c = icmp eq i1 %v1_1663a, false
  br i1 %v1_1663c, label %dec_label_pc_16642, label %dec_label_pc_1663e

dec_label_pc_1663e:                               ; preds = %dec_label_pc_16620
  %v4_1663e = call i32 @function_16660(i32 %v0_1662a, i32 %v0_16622, i32 %v0_16621, i32 %v0_16620)
  ret i32 %v4_1663e

dec_label_pc_16642:                               ; preds = %dec_label_pc_16620
  %v1_16642 = add i32 %arg2, 12
  %v2_16642 = inttoptr i32 %v1_16642 to i32*
  %v3_16642 = load i32, i32* %v2_16642, align 4
  store i32 %v3_16642, i32* @eax, align 8
  %v2_1664c = call i32 @function_2cc40(i32 %arg1, i32 %v3_16642)
  %v1_16651 = add i32 %arg2, 8
  %v2_16651 = inttoptr i32 %v1_16651 to i32*
  %v3_16651 = load i32, i32* %v2_16651, align 4
  store i32 %v3_16651, i32* %esi.global-to-local, align 4
  ret i32 %v2_1664c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_16660(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16660:
  %v1_16664 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16664 = xor i32 %v1_16664, %arg1
  %v3_16664 = icmp eq i32 %v2_16664, 0
  %v1_1666b = icmp eq i1 %v3_16664, false
  br i1 %v1_1666b, label %dec_label_pc_16674, label %dec_label_pc_1666d

dec_label_pc_1666d:                               ; preds = %dec_label_pc_16660
  ret i32 %v2_16664

dec_label_pc_16674:                               ; preds = %dec_label_pc_16660
  ret i32 %v2_16664

; uselistorder directives
  uselistorder i32 %v2_16664, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeIxSt4pairIKxSt17_Rb_tree_iteratorIS0_IK4CInvxEEESt10_Select1stIS7_ESt4lessIxESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16680:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_16680 = load i32, i32* %edi.global-to-local, align 4
  %v0_16681 = load i32, i32* %esi.global-to-local, align 4
  %v0_16682 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1668a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1669a = icmp eq i32 %arg2, 0
  %v1_1669c = icmp eq i1 %v1_1669a, false
  br i1 %v1_1669c, label %dec_label_pc_166a2, label %dec_label_pc_1669e

dec_label_pc_1669e:                               ; preds = %dec_label_pc_16680
  %v4_1669e = call i32 @function_166c0(i32 %v0_1668a, i32 %v0_16682, i32 %v0_16681, i32 %v0_16680)
  ret i32 %v4_1669e

dec_label_pc_166a2:                               ; preds = %dec_label_pc_16680
  %v1_166a2 = add i32 %arg2, 12
  %v2_166a2 = inttoptr i32 %v1_166a2 to i32*
  %v3_166a2 = load i32, i32* %v2_166a2, align 4
  store i32 %v3_166a2, i32* @eax, align 8
  %v2_166ac = call i32 @function_2cd00(i32 %arg1, i32 %v3_166a2)
  %v1_166b1 = add i32 %arg2, 8
  %v2_166b1 = inttoptr i32 %v1_166b1 to i32*
  %v3_166b1 = load i32, i32* %v2_166b1, align 4
  store i32 %v3_166b1, i32* %esi.global-to-local, align 4
  ret i32 %v2_166ac

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_166c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_166c0:
  %v1_166c4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_166c4 = xor i32 %v1_166c4, %arg1
  %v3_166c4 = icmp eq i32 %v2_166c4, 0
  %v1_166cb = icmp eq i1 %v3_166c4, false
  br i1 %v1_166cb, label %dec_label_pc_166d4, label %dec_label_pc_166cd

dec_label_pc_166cd:                               ; preds = %dec_label_pc_166c0
  ret i32 %v2_166c4

dec_label_pc_166d4:                               ; preds = %dec_label_pc_166c0
  ret i32 %v2_166c4

; uselistorder directives
  uselistorder i32 %v2_166c4, { 1, 0, 2 }
}

define i32 @_ZN10limitedmapI4CInvxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_166e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_166e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_166f4 = add i32 %arg1, 32
  %v2_166f4 = inttoptr i32 %v1_166f4 to i32*
  %v3_166f4 = load i32, i32* %v2_166f4, align 4
  %v1_166fb = add i32 %arg1, 24
  store i32 %v1_166fb, i32* @eax, align 8
  %v2_16701 = call i32 @function_2cd60(i32 %v1_166fb, i32 %v3_166f4)
  %v0_16706 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16706 = add i32 %v0_16706, 8
  %v2_16706 = inttoptr i32 %v1_16706 to i32*
  %v3_16706 = load i32, i32* %v2_16706, align 4
  store i32 %v3_16706, i32* @eax, align 8
  %v2_16710 = call i32 @function_2cd00(i32 %v0_16706, i32 %v3_16706)
  br i1 false, label %dec_label_pc_16727, label %dec_label_pc_16722

dec_label_pc_16722:                               ; preds = %dec_label_pc_166e0
  store i32 %v0_166e0, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_16727:                               ; preds = %dec_label_pc_166e0
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32)* @function_2cd00, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZNSt11_Deque_baseISsSaISsEE17_M_initialize_mapEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16730:
  %eax.global-to-local = alloca i32, align 4
  %v2_16758 = udiv i32 %arg2, 128
  %v1_1675e = add nuw nsw i32 %v2_16758, 3
  %v5_16761 = icmp ult i32 %v1_1675e, 8
  %v3_16764 = select i1 %v5_16761, i32 8, i32 %v1_1675e
  store i32 %v3_16764, i32* %eax.global-to-local, align 8
  %v2_16767 = add i32 %arg1, 4
  %v3_16767 = inttoptr i32 %v2_16767 to i32*
  store i32 %v3_16764, i32* %v3_16767, align 4
  %v0_1676a = load i32, i32* %eax.global-to-local, align 8
  %v2_1676a = mul i32 %v0_1676a, 4
  store i32 %v2_1676a, i32* %eax.global-to-local, align 8
  ret i32 %v2_1676a

; uselistorder directives
  uselistorder i32 %v2_1676a, { 1, 0 }
}

define i32 @function_16776() local_unnamed_addr {
dec_label_pc_16776:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_16777 = load i32, i32* %eax.global-to-local, align 8
  %v2_16777 = add i32 %v0_16777, 41
  %v16_16777 = and i32 %v2_16777, 255
  %v18_16777 = and i32 %v0_16777, -256
  %v19_16777 = or i32 %v16_16777, %v18_16777
  store i32 %v19_16777, i32* @eax, align 8
  %v1_1677b = call i32 @function_8d902c8d(i32 %tmp93)
  store i32 %v1_1677b, i32* %eax.global-to-local, align 8
  ret i32 %v1_1677b

; uselistorder directives
  uselistorder i32 %v0_16777, { 1, 0 }
  uselistorder i32 (i32)* @function_8d902c8d, { 4, 3, 2, 1, 0 }
}

define i32 @function_16788() local_unnamed_addr {
dec_label_pc_16788:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_16788 = load i32, i32* %eax.global-to-local, align 8
  %v1_16788 = trunc i32 %v0_16788 to i8
  %v2_16788 = load i1, i1* %cf.global-to-local, align 1
  %v3_16788 = zext i1 %v2_16788 to i32
  %v4_16788 = add i32 %v0_16788, 119
  %v5_16788 = add i32 %v4_16788, %v3_16788
  %v17_16788 = icmp ult i8 %v1_16788, -119
  %v18_16788 = or i1 %v2_16788, %v17_16788
  store i1 %v18_16788, i1* %cf.global-to-local, align 1
  %v31_16788 = and i32 %v5_16788, 255
  %v33_16788 = and i32 %v0_16788, -256
  %v34_16788 = or i32 %v31_16788, %v33_16788
  store i32 %v34_16788, i32* %eax.global-to-local, align 8
  ret i32 %v34_16788

; uselistorder directives
  uselistorder i1 %v2_16788, { 1, 0 }
  uselistorder i32 %v0_16788, { 1, 0, 2 }
}

define i32 @function_16790() local_unnamed_addr {
dec_label_pc_16790:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1679b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1679b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1679b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1679b = add i32 %v0_1679b, 79921923
  %v2_1679b = inttoptr i32 %v1_1679b to i32*
  %v3_1679b = load i32, i32* %v2_1679b, align 4
  %v4_1679b = add i32 %v3_1679b, -1
  store i32 %v4_1679b, i32* %v2_1679b, align 4
  %v0_167a1 = load i32, i32* %esi.global-to-local, align 4
  %v1_167a1 = load i32, i32* %ebx.global-to-local, align 4
  %tmp106 = icmp ugt i32 %v0_167a1, %v1_167a1
  br i1 %tmp106, label %bb, label %dec_label_pc_167a5

bb:                                               ; preds = %dec_label_pc_1679b
  %v4_167a3 = call i32 @function_16790()
  store i32 %v4_167a3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_167a5

dec_label_pc_167a5:                               ; preds = %dec_label_pc_1679b, %bb
  %v0_167a5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_167a5 = load i32, i32* %edi.global-to-local, align 4
  %v2_167a5 = add i32 %v1_167a5, 20
  %v3_167a5 = inttoptr i32 %v2_167a5 to i32*
  store i32 %v0_167a5, i32* %v3_167a5, align 4
  %v2_167a8 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_167a8, i32* %edx.global-to-local, align 4
  %v1_167ab = add i32 %v2_167a8, ptrtoint (i32* @global_var_200.2533 to i32)
  %v1_167b1 = load i32, i32* %edi.global-to-local, align 4
  %v2_167b1 = add i32 %v1_167b1, 16
  %v3_167b1 = inttoptr i32 %v2_167b1 to i32*
  store i32 %v1_167ab, i32* %v3_167b1, align 4
  %v0_167b4 = load i32, i32* %esi.global-to-local, align 4
  %v1_167b4 = add i32 %v0_167b4, -4
  store i32 %v1_167b4, i32* %eax.global-to-local, align 8
  %v0_167b7 = load i32, i32* %edx.global-to-local, align 4
  %v1_167b7 = load i32, i32* %edi.global-to-local, align 4
  %v2_167b7 = add i32 %v1_167b7, 12
  %v3_167b7 = inttoptr i32 %v2_167b7 to i32*
  store i32 %v0_167b7, i32* %v3_167b7, align 4
  %v0_167ba = load i32, i32* %eax.global-to-local, align 8
  %v1_167ba = load i32, i32* %edi.global-to-local, align 4
  %v2_167ba = add i32 %v1_167ba, 36
  %v3_167ba = inttoptr i32 %v2_167ba to i32*
  store i32 %v0_167ba, i32* %v3_167ba, align 4
  %v0_167bd = load i32, i32* %esi.global-to-local, align 4
  %v1_167bd = add i32 %v0_167bd, -4
  %v2_167bd = inttoptr i32 %v1_167bd to i32*
  %v3_167bd = load i32, i32* %v2_167bd, align 4
  store i32 %v3_167bd, i32* %eax.global-to-local, align 8
  %v0_167c0 = load i32, i32* %edx.global-to-local, align 4
  %v1_167c0 = load i32, i32* %edi.global-to-local, align 4
  %v2_167c0 = add i32 %v1_167c0, 8
  %v3_167c0 = inttoptr i32 %v2_167c0 to i32*
  store i32 %v0_167c0, i32* %v3_167c0, align 4
  %v0_167c7 = load i32, i32* %eax.global-to-local, align 8
  %v1_167c7 = add i32 %v0_167c7, ptrtoint (i32* @global_var_200.2533 to i32)
  store i32 %v1_167c7, i32* %ecx.global-to-local, align 4
  %v1_167cd = and i32 %arg1, ptrtoint (i32* @global_var_7f.2703 to i32)
  store i32 %v1_167cd, i32* %edx.global-to-local, align 4
  %v1_167d0 = load i32, i32* %edi.global-to-local, align 4
  %v2_167d0 = add i32 %v1_167d0, 28
  %v3_167d0 = inttoptr i32 %v2_167d0 to i32*
  store i32 %v0_167c7, i32* %v3_167d0, align 4
  %v0_167d3 = load i32, i32* %eax.global-to-local, align 8
  %v1_167d3 = load i32, i32* %edx.global-to-local, align 4
  %v2_167d3 = mul i32 %v1_167d3, 4
  %v3_167d3 = add i32 %v2_167d3, %v0_167d3
  %v1_167d6 = load i32, i32* %edi.global-to-local, align 4
  %v2_167d6 = add i32 %v1_167d6, 24
  %v3_167d6 = inttoptr i32 %v2_167d6 to i32*
  store i32 %v3_167d3, i32* %v3_167d6, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_167dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_167dd = xor i32 %v1_167dd, %arg2
  %v3_167dd = icmp eq i32 %v2_167dd, 0
  store i32 %v2_167dd, i32* @eax, align 8
  %v0_167e4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_167e4 = load i32, i32* %edi.global-to-local, align 4
  %v2_167e4 = add i32 %v1_167e4, 32
  %v3_167e4 = inttoptr i32 %v2_167e4 to i32*
  store i32 %v0_167e4, i32* %v3_167e4, align 4
  %v1_167e7 = icmp eq i1 %v3_167dd, false
  br i1 %v1_167e7, label %bb104, label %dec_label_pc_167a5.dec_label_pc_167e9_crit_edge

dec_label_pc_167a5.dec_label_pc_167e9_crit_edge:  ; preds = %dec_label_pc_167a5
  %v0_167f0.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_167e9

bb104:                                            ; preds = %dec_label_pc_167a5
  %v2_167e7 = call i32 @function_16814()
  store i32 %v2_167e7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_167e9

dec_label_pc_167e9:                               ; preds = %dec_label_pc_167a5.dec_label_pc_167e9_crit_edge, %bb104
  %v0_167f0 = phi i32 [ %v0_167f0.pre, %dec_label_pc_167a5.dec_label_pc_167e9_crit_edge ], [ %v2_167e7, %bb104 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_167f0

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 1 }
  uselistorder label %dec_label_pc_167e9, { 1, 0 }
  uselistorder label %dec_label_pc_167a5, { 1, 0 }
}

define i32 @function_1680c() local_unnamed_addr {
dec_label_pc_1680c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1680c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1680c
}

define i32 @function_16814() local_unnamed_addr {
dec_label_pc_16814:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1681a() local_unnamed_addr {
dec_label_pc_1681a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1681a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1681a
}

define i32 @function_16845() local_unnamed_addr {
dec_label_pc_16845:
  %eax.global-to-local = alloca i32, align 4
  %v0_16845 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16845
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16860:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_16860 = load i32, i32* %edi.global-to-local, align 4
  %v0_16861 = load i32, i32* %esi.global-to-local, align 4
  %v0_16862 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1686a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1687a = icmp eq i32 %arg2, 0
  %v1_1687c = icmp eq i1 %v1_1687a, false
  br i1 %v1_1687c, label %dec_label_pc_16882, label %dec_label_pc_1687e

dec_label_pc_1687e:                               ; preds = %dec_label_pc_16860
  %v4_1687e = call i32 @function_168a0(i32 %v0_1686a, i32 %v0_16862, i32 %v0_16861, i32 %v0_16860)
  ret i32 %v4_1687e

dec_label_pc_16882:                               ; preds = %dec_label_pc_16860
  %v1_16882 = add i32 %arg2, 12
  %v2_16882 = inttoptr i32 %v1_16882 to i32*
  %v3_16882 = load i32, i32* %v2_16882, align 4
  store i32 %v3_16882, i32* @eax, align 8
  %v2_1688c = call i32 @_ZZN5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__(i32 %arg1, i32 %v3_16882)
  %v1_16891 = add i32 %arg2, 8
  %v2_16891 = inttoptr i32 %v1_16891 to i32*
  %v3_16891 = load i32, i32* %v2_16891, align 4
  store i32 %v3_16891, i32* %esi.global-to-local, align 4
  ret i32 %v2_1688c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_168a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_168a0:
  %v1_168a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_168a4 = xor i32 %v1_168a4, %arg1
  %v3_168a4 = icmp eq i32 %v2_168a4, 0
  %v1_168ab = icmp eq i1 %v3_168a4, false
  br i1 %v1_168ab, label %dec_label_pc_168b4, label %dec_label_pc_168ad

dec_label_pc_168ad:                               ; preds = %dec_label_pc_168a0
  ret i32 %v2_168a4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_168a0
  ret i32 %v2_168a4

; uselistorder directives
  uselistorder i32 %v2_168a4, { 1, 0, 2 }
}

define i32 @_ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_168c0:
  store i32 %arg1, i32* @eax, align 8
  %v1_168d4 = add i32 %arg1, 8
  %v2_168d4 = inttoptr i32 %v1_168d4 to i32*
  %v3_168d4 = load i32, i32* %v2_168d4, align 4
  %v2_168de = call i32 @function_2d120(i32 %arg1, i32 %v3_168d4)
  br i1 false, label %dec_label_pc_168f4, label %dec_label_pc_168f0

dec_label_pc_168f0:                               ; preds = %dec_label_pc_168c0
  ret i32 0

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168c0
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16900:
  ret i32 0
}

define i32 @function_1693c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1693c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v0_1693c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1693c = add i32 %v0_1693c, -2062277564
  %v2_1693c = inttoptr i32 %v1_1693c to i32*
  %v3_1693c = load i32, i32* %v2_1693c, align 4
  %v4_1693c = sub i32 %v3_1693c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1693c, i32* %v2_1693c, align 4
  %v0_16947 = load i32, i32* @eax, align 8
  %v1_16947 = icmp eq i32 %v0_16947, 0
  br i1 %v1_16947, label %dec_label_pc_169aa, label %dec_label_pc_1694b

dec_label_pc_1694b:                               ; preds = %dec_label_pc_1693c
  store i32 %v0_16947, i32* %esi.global-to-local, align 4
  %v1_16971 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1697b

dec_label_pc_16950:                               ; preds = %dec_label_pc_1697b
  %v1_16950 = add i32 %v0_16950, 8
  %v2_16950 = inttoptr i32 %v1_16950 to i32*
  %v3_16950 = load i32, i32* %v2_16950, align 4
  store i32 %v3_16950, i32* @ebx, align 4
  %v1_16953 = icmp eq i32 %v3_16950, 0
  br i1 %v1_16953, label %dec_label_pc_169aa, label %dec_label_pc_16957

dec_label_pc_16957:                               ; preds = %dec_label_pc_16950
  %v1_16961 = add i32 %v3_16950, 4
  %v2_16961 = inttoptr i32 %v1_16961 to i8*
  store i8 0, i8* %v2_16961, align 1
  store i32 %tmp109, i32* @eax, align 8
  %v0_1696f = load i32, i32* %esi.global-to-local, align 4
  %v1_1696f = inttoptr i32 %v0_1696f to i32*
  %v2_1696f = load i32, i32* %v1_1696f, align 4
  store i32 %v2_1696f, i32* %esi.global-to-local, align 4
  br i1 %v1_16971, label %dec_label_pc_1699e, label %dec_label_pc_16975

dec_label_pc_16975:                               ; preds = %dec_label_pc_16957
  %v2_16975 = load i32, i32* %arg1, align 4
  store i32 %v2_16975, i32* @eax, align 8
  %v1_16977 = icmp eq i32 %v2_16975, 0
  br i1 %v1_16977, label %dec_label_pc_169aa, label %dec_label_pc_1697b

dec_label_pc_1697b:                               ; preds = %dec_label_pc_16975, %dec_label_pc_1694b
  %v0_16950 = phi i32 [ %v0_16947, %dec_label_pc_1694b ], [ %v2_1696f, %dec_label_pc_16975 ]
  %.0 = phi i32 [ %tmp100, %dec_label_pc_1694b ], [ %v2_16975, %dec_label_pc_16975 ]
  %v12_1697b = icmp eq i32 %v0_16950, %.0
  %v1_1697d = icmp eq i1 %v12_1697b, false
  br i1 %v1_1697d, label %dec_label_pc_16950, label %dec_label_pc_1697f

dec_label_pc_1697f:                               ; preds = %dec_label_pc_1697b
  %v1_1698f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1698f = xor i32 %v1_1698f, %arg2
  %v3_1698f = icmp eq i32 %v2_1698f, 0
  %v1_16996 = icmp eq i1 %v3_1698f, false
  br i1 %v1_16996, label %dec_label_pc_169af, label %dec_label_pc_16998

dec_label_pc_16998:                               ; preds = %dec_label_pc_1697f
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v2_1698f

dec_label_pc_1699e:                               ; preds = %dec_label_pc_16957
  %v1_169a0 = call i32 @function_24b7a(i32 %v3_16950)
  store i32 %v1_169a0, i32* @eax, align 8
  br label %dec_label_pc_169aa

dec_label_pc_169aa:                               ; preds = %dec_label_pc_16950, %dec_label_pc_16975, %dec_label_pc_1699e, %dec_label_pc_1693c
  %v0_169aa = call i32 @function_24cb2()
  br label %dec_label_pc_169af

dec_label_pc_169af:                               ; preds = %dec_label_pc_169aa, %dec_label_pc_1697f
  %v0_169af = phi i32 [ %v0_169aa, %dec_label_pc_169aa ], [ %v2_1698f, %dec_label_pc_1697f ]
  ret i32 %v0_169af

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_169aa, { 2, 1, 0, 3 }
}

define i32 @function_169b6() local_unnamed_addr {
dec_label_pc_169b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_169b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_169b6
}

define i32 @_ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_169d0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v0_169d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp106, i32* @ebx, align 4
  %v1_169e4 = add i32 %tmp106, 4
  %v2_169e4 = inttoptr i32 %v1_169e4 to i32*
  %v3_169e4 = load i32, i32* %v2_169e4, align 4
  store i32 %v3_169e4, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), i32* %arg1, align 4
  %v1_169ed = icmp eq i32 %v3_169e4, 0
  br i1 %v1_169ed, label %dec_label_pc_16a1c, label %dec_label_pc_169f1

dec_label_pc_169f1:                               ; preds = %dec_label_pc_169d0
  %v2_169f4 = call i32 @function_2d2d0(i32 %v3_169e4)
  %v0_169f9 = load i32, i32* @ebx, align 4
  %v1_169f9 = add i32 %v0_169f9, 8
  store i32 %v1_169f9, i32* @eax, align 8
  %v2_169ff = call i32 @function_26f10(i32 %v1_169f9)
  store i32 0, i32* @eax, align 8
  %v0_16a0f = load i32, i32* @ebx, align 4
  %v1_16a0f = inttoptr i32 %v0_16a0f to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16a0f, align 4
  br i1 false, label %bb, label %dec_label_pc_169f1.dec_label_pc_16a17_crit_edge

dec_label_pc_169f1.dec_label_pc_16a17_crit_edge:  ; preds = %dec_label_pc_169f1
  %v0_16a1b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_16a17

bb:                                               ; preds = %dec_label_pc_169f1
  br label %dec_label_pc_16a17

dec_label_pc_16a17:                               ; preds = %dec_label_pc_169f1.dec_label_pc_16a17_crit_edge, %bb
  %v0_16a1b = phi i32 [ %v0_16a1b.pre, %dec_label_pc_169f1.dec_label_pc_16a17_crit_edge ], [ undef, %bb ]
  store i32 %v0_169d0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_16a1b

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_169d0
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_16a17, { 1, 0 }
}

define i32 @function_16a40() local_unnamed_addr {
dec_label_pc_16a40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16a45() local_unnamed_addr {
dec_label_pc_16a45:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16a52(i32 %arg1) local_unnamed_addr {
dec_label_pc_16a52:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16a52 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16a52 = add i32 %v0_16a52, 1149831251
  %v2_16a52 = inttoptr i32 %v1_16a52 to i32*
  %v3_16a52 = load i32, i32* %v2_16a52, align 4
  %v4_16a52 = add i32 %v3_16a52, -1
  store i32 %v4_16a52, i32* %v2_16a52, align 4
  %v0_16a58 = load i32, i32* %eax.global-to-local, align 8
  %v11_16a58 = and i32 %v0_16a58, -228
  store i32 %v11_16a58, i32* @eax, align 8
  %v0_16a5a = load i32, i32* %edx.global-to-local, align 4
  %v1_16a5d = call i32 @function_26f10(i32 %v0_16a5a)
  store i32 %arg1, i32* @eax, align 8
  %v0_16a66 = call i32 @function_16a45()
  store i32 %v0_16a66, i32* %eax.global-to-local, align 8
  ret i32 %v0_16a66

; uselistorder directives
  uselistorder i32 (i32)* @function_26f10, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_16a70:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16a70 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_16a78 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16a84 = add i32 %tmp101, 4
  %v2_16a84 = inttoptr i32 %v1_16a84 to i32*
  %v3_16a84 = load i32, i32* %v2_16a84, align 4
  store i32 %v3_16a84, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), i32* %arg1, align 4
  %v0_16a8d = load i32, i32* @eax, align 8
  %v1_16a8d = icmp eq i32 %v0_16a8d, 0
  br i1 %v1_16a8d, label %bb, label %dec_label_pc_16a91

bb:                                               ; preds = %dec_label_pc_16a70
  %v2_16a8f = call i32 @function_16ac4(i32 %v0_16a78)
  store i32 %v2_16a8f, i32* @eax, align 8
  br label %dec_label_pc_16a91

dec_label_pc_16a91:                               ; preds = %bb, %dec_label_pc_16a70
  %v0_16a91 = phi i32 [ %v2_16a8f, %bb ], [ %v0_16a8d, %dec_label_pc_16a70 ]
  %v1_16a94 = call i32 @function_2d370(i32 %v0_16a91)
  %v0_16a99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16a99 = add i32 %v0_16a99, 8
  %v1_16a9f = call i32 @function_26fb0(i32 %v1_16a99)
  store i32 0, i32* @eax, align 8
  %v0_16aaf = load i32, i32* @ebx, align 4
  %v1_16aaf = inttoptr i32 %v0_16aaf to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16aaf, align 4
  br i1 false, label %bb104, label %dec_label_pc_16a91.dec_label_pc_16ab7_crit_edge

dec_label_pc_16a91.dec_label_pc_16ab7_crit_edge:  ; preds = %dec_label_pc_16a91
  %v5_16abe.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_16ab7

bb104:                                            ; preds = %dec_label_pc_16a91
  br label %dec_label_pc_16ab7

dec_label_pc_16ab7:                               ; preds = %dec_label_pc_16a91.dec_label_pc_16ab7_crit_edge, %bb104
  %v5_16abe = phi i32 [ %v5_16abe.pre, %dec_label_pc_16a91.dec_label_pc_16ab7_crit_edge ], [ undef, %bb104 ]
  store i32 %v0_16a70, i32* %ebx.global-to-local, align 4
  ret i32 %v5_16abe

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16ab7, { 1, 0 }
}

define i32 @function_16ac4(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ac4:
  %v0_16ac4 = call i32 @function_24ef2()
  ret i32 %v0_16ac4
}

define i32 @function_16ac9() local_unnamed_addr {
dec_label_pc_16ac9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16ace() local_unnamed_addr {
dec_label_pc_16ace:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16adb(i32 %arg1) local_unnamed_addr {
dec_label_pc_16adb:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16adb = load i32, i32* %ebp.global-to-local, align 4
  %v1_16adb = add i32 %v0_16adb, 1149831251
  %v2_16adb = inttoptr i32 %v1_16adb to i32*
  %v3_16adb = load i32, i32* %v2_16adb, align 4
  %v4_16adb = add i32 %v3_16adb, -1
  store i32 %v4_16adb, i32* %v2_16adb, align 4
  %v0_16ae1 = load i32, i32* %eax.global-to-local, align 8
  %v11_16ae1 = and i32 %v0_16ae1, -228
  store i32 %v11_16ae1, i32* %eax.global-to-local, align 8
  %v0_16ae3 = load i32, i32* %edx.global-to-local, align 4
  %v1_16ae6 = call i32 @function_26fb0(i32 %v0_16ae3)
  store i32 %arg1, i32* @eax, align 8
  %v0_16aef = call i32 @function_16ace()
  store i32 %v0_16aef, i32* %eax.global-to-local, align 8
  ret i32 %v0_16aef

; uselistorder directives
  uselistorder i32 (i32)* @function_26fb0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_16b00:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16b00 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* @ebx, align 4
  %v0_16b08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_16b14 = add i32 %tmp101, 4
  %v2_16b14 = inttoptr i32 %v1_16b14 to i32*
  %v3_16b14 = load i32, i32* %v2_16b14, align 4
  store i32 %v3_16b14, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), i32* %arg1, align 4
  %v1_16b1d = icmp eq i32 %v3_16b14, 0
  br i1 %v1_16b1d, label %dec_label_pc_16b4c, label %dec_label_pc_16b21

dec_label_pc_16b21:                               ; preds = %dec_label_pc_16b00
  %v1_16b24 = call i32 @function_2d400(i32 %v3_16b14)
  %v0_16b29 = load i32, i32* @ebx, align 4
  %v1_16b29 = add i32 %v0_16b29, 8
  store i32 %v1_16b29, i32* @eax, align 8
  %v1_16b2f = call i32 @function_27040(i32 %v1_16b29)
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_16b3f = load i32, i32* @ebx, align 4
  %v1_16b3f = inttoptr i32 %v0_16b3f to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16b3f, align 4
  br i1 false, label %dec_label_pc_16b21.dec_label_pc_16b51_crit_edge, label %dec_label_pc_16b47

dec_label_pc_16b21.dec_label_pc_16b51_crit_edge:  ; preds = %dec_label_pc_16b21
  br label %dec_label_pc_16b51

dec_label_pc_16b47:                               ; preds = %dec_label_pc_16b21
  store i32 %v0_16b00, i32* %ebx.global-to-local, align 4
  %v0_16b4b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16b4b

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16b00
  %v1_16b4c = call i32 @function_24f82(i32 %v0_16b08)
  store i32 %v1_16b4c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16b51

dec_label_pc_16b51:                               ; preds = %dec_label_pc_16b21.dec_label_pc_16b51_crit_edge, %dec_label_pc_16b4c
  %v2_16b4c = phi i32 [ undef, %dec_label_pc_16b21.dec_label_pc_16b51_crit_edge ], [ %v1_16b4c, %dec_label_pc_16b4c ]
  ret i32 %v2_16b4c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_16b51, { 1, 0 }
}

define i32 @function_16b56() local_unnamed_addr {
dec_label_pc_16b56:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16b63(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b63:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16b63 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16b63 = add i32 %v0_16b63, 1149831251
  %v2_16b63 = inttoptr i32 %v1_16b63 to i32*
  %v3_16b63 = load i32, i32* %v2_16b63, align 4
  %v4_16b63 = add i32 %v3_16b63, -1
  store i32 %v4_16b63, i32* %v2_16b63, align 4
  %v0_16b69 = load i32, i32* %eax.global-to-local, align 8
  %v11_16b69 = and i32 %v0_16b69, -228
  store i32 %v11_16b69, i32* @eax, align 8
  %v0_16b6b = load i32, i32* %edx.global-to-local, align 4
  %v1_16b6e = call i32 @function_27040(i32 %v0_16b6b)
  store i32 %arg1, i32* @eax, align 8
  %v0_16b77 = call i32 @function_16b56()
  store i32 %v0_16b77, i32* %eax.global-to-local, align 8
  ret i32 %v0_16b77

; uselistorder directives
  uselistorder i32 (i32)* @function_27040, { 2, 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_16b80:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16b80 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_16b88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16b94 = add i32 %tmp101, 4
  %v2_16b94 = inttoptr i32 %v1_16b94 to i32*
  %v3_16b94 = load i32, i32* %v2_16b94, align 4
  store i32 %v3_16b94, i32* @eax, align 8
  store i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), i32* %arg1, align 4
  %v0_16b9d = load i32, i32* @eax, align 8
  %v1_16b9d = icmp eq i32 %v0_16b9d, 0
  br i1 %v1_16b9d, label %bb, label %dec_label_pc_16ba1

bb:                                               ; preds = %dec_label_pc_16b80
  %v2_16b9f = call i32 @function_16bd4(i32 %v0_16b88)
  store i32 %v2_16b9f, i32* @eax, align 8
  br label %dec_label_pc_16ba1

dec_label_pc_16ba1:                               ; preds = %bb, %dec_label_pc_16b80
  %v0_16ba1 = phi i32 [ %v2_16b9f, %bb ], [ %v0_16b9d, %dec_label_pc_16b80 ]
  %v1_16ba4 = call i32 @function_2d480(i32 %v0_16ba1)
  %v0_16ba9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @eax, align 8
  %v1_16bbf = inttoptr i32 %v0_16ba9 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16bbf, align 4
  br i1 false, label %bb104, label %dec_label_pc_16ba1.dec_label_pc_16bc7_crit_edge

dec_label_pc_16ba1.dec_label_pc_16bc7_crit_edge:  ; preds = %dec_label_pc_16ba1
  %v5_16bce.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_16bc7

bb104:                                            ; preds = %dec_label_pc_16ba1
  br label %dec_label_pc_16bc7

dec_label_pc_16bc7:                               ; preds = %dec_label_pc_16ba1.dec_label_pc_16bc7_crit_edge, %bb104
  %v5_16bce = phi i32 [ %v5_16bce.pre, %dec_label_pc_16ba1.dec_label_pc_16bc7_crit_edge ], [ undef, %bb104 ]
  store i32 %v0_16b80, i32* %ebx.global-to-local, align 4
  ret i32 %v5_16bce

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16bc7, { 1, 0 }
}

define i32 @function_16bd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bd4:
  %v0_16bd4 = call i32 @function_25002()
  ret i32 %v0_16bd4
}

define i32 @function_16bd9(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bd9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16bde(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bde:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16beb(i32 %arg1) local_unnamed_addr {
dec_label_pc_16beb:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16beb = load i32, i32* %ebp.global-to-local, align 4
  %v1_16beb = add i32 %v0_16beb, 1149831251
  %v2_16beb = inttoptr i32 %v1_16beb to i32*
  %v3_16beb = load i32, i32* %v2_16beb, align 4
  %v4_16beb = add i32 %v3_16beb, -1
  store i32 %v4_16beb, i32* %v2_16beb, align 4
  %v0_16bf3 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_16bff = call i32 @function_16bde(i32 %v0_16bf3)
  ret i32 %v1_16bff
}

define i32 @_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c10:
  ret i32 0
}

define i32 @function_16c4c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16c4c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %stack_var_24 = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v0_16c4c = load i32, i32* %ebx.global-to-local, align 4
  %v1_16c4c = add i32 %v0_16c4c, -2062277564
  %v2_16c4c = inttoptr i32 %v1_16c4c to i32*
  %v3_16c4c = load i32, i32* %v2_16c4c, align 4
  %v4_16c4c = sub i32 %v3_16c4c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_16c4c, i32* %v2_16c4c, align 4
  %v0_16c57 = load i32, i32* @eax, align 8
  %v1_16c57 = icmp eq i32 %v0_16c57, 0
  br i1 %v1_16c57, label %dec_label_pc_16cba, label %dec_label_pc_16c5b

dec_label_pc_16c5b:                               ; preds = %dec_label_pc_16c4c
  store i32 %v0_16c57, i32* %esi.global-to-local, align 4
  %v1_16c81 = icmp eq i32* %arg1, null
  br label %dec_label_pc_16c8b

dec_label_pc_16c60:                               ; preds = %dec_label_pc_16c8b
  %v1_16c60 = add i32 %v0_16c60, 8
  %v2_16c60 = inttoptr i32 %v1_16c60 to i32*
  %v3_16c60 = load i32, i32* %v2_16c60, align 4
  store i32 %v3_16c60, i32* %ebx.global-to-local, align 4
  %v1_16c63 = icmp eq i32 %v3_16c60, 0
  br i1 %v1_16c63, label %dec_label_pc_16cb5, label %dec_label_pc_16c67

dec_label_pc_16c67:                               ; preds = %dec_label_pc_16c60
  %v1_16c71 = add i32 %v3_16c60, 4
  %v2_16c71 = inttoptr i32 %v1_16c71 to i8*
  store i8 0, i8* %v2_16c71, align 1
  store i32 %tmp111, i32* @eax, align 8
  %v0_16c7f = load i32, i32* %esi.global-to-local, align 4
  %v1_16c7f = inttoptr i32 %v0_16c7f to i32*
  %v2_16c7f = load i32, i32* %v1_16c7f, align 4
  store i32 %v2_16c7f, i32* %esi.global-to-local, align 4
  br i1 %v1_16c81, label %dec_label_pc_16cae, label %dec_label_pc_16c85

dec_label_pc_16c85:                               ; preds = %dec_label_pc_16c67
  %v2_16c85 = load i32, i32* %arg1, align 4
  store i32 %v2_16c85, i32* @eax, align 8
  %v1_16c87 = icmp eq i32 %v2_16c85, 0
  br i1 %v1_16c87, label %dec_label_pc_16cba, label %dec_label_pc_16c8b

dec_label_pc_16c8b:                               ; preds = %dec_label_pc_16c85, %dec_label_pc_16c5b
  %v0_16c60 = phi i32 [ %v0_16c57, %dec_label_pc_16c5b ], [ %v2_16c7f, %dec_label_pc_16c85 ]
  %.0 = phi i32 [ %tmp102, %dec_label_pc_16c5b ], [ %v2_16c85, %dec_label_pc_16c85 ]
  %v12_16c8b = icmp eq i32 %v0_16c60, %.0
  %v1_16c8d = icmp eq i1 %v12_16c8b, false
  br i1 %v1_16c8d, label %dec_label_pc_16c60, label %dec_label_pc_16c8f

dec_label_pc_16c8f:                               ; preds = %dec_label_pc_16c8b
  %v2_16c8f = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_16c8f, i32* @eax, align 8
  %v1_16c96 = call i32 @function_27150(i32 %v2_16c8f)
  %v1_16c9f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16c9f = xor i32 %v1_16c9f, %arg2
  %v3_16c9f = icmp eq i32 %v2_16c9f, 0
  %v1_16ca6 = icmp eq i1 %v3_16c9f, false
  br i1 %v1_16ca6, label %dec_label_pc_16cbf, label %dec_label_pc_16ca8

dec_label_pc_16ca8:                               ; preds = %dec_label_pc_16c8f
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v2_16c9f

dec_label_pc_16cae:                               ; preds = %dec_label_pc_16c67
  %v1_16cb0 = call i32 @function_24ebe(i32 %v3_16c60)
  store i32 %v1_16cb0, i32* @eax, align 8
  br label %dec_label_pc_16cb5

dec_label_pc_16cb5:                               ; preds = %dec_label_pc_16c60, %dec_label_pc_16cae
  %v0_16cb5 = call i32 @function_24f5a()
  br label %dec_label_pc_16cba

dec_label_pc_16cba:                               ; preds = %dec_label_pc_16c85, %dec_label_pc_16cb5, %dec_label_pc_16c4c
  %v0_16cba = call i32 @function_24ff6()
  br label %dec_label_pc_16cbf

dec_label_pc_16cbf:                               ; preds = %dec_label_pc_16cba, %dec_label_pc_16c8f
  %v0_16cbf = phi i32 [ %v0_16cba, %dec_label_pc_16cba ], [ %v2_16c9f, %dec_label_pc_16c8f ]
  ret i32 %v0_16cbf

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16cba, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16cb5, { 1, 0 }
}

define i32 @function_16cc6() local_unnamed_addr {
dec_label_pc_16cc6:
  %eax.global-to-local = alloca i32, align 4
  %v0_16cc6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16cc6
}

define i32 @_ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_16ce0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v0_16ce0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp106, i32* %ebx.global-to-local, align 4
  %v1_16cf4 = add i32 %tmp106, 4
  %v2_16cf4 = inttoptr i32 %v1_16cf4 to i32*
  %v3_16cf4 = load i32, i32* %v2_16cf4, align 4
  store i32 %v3_16cf4, i32* @eax, align 8
  store i32 ptrtoint (%vtable_315d8_type* @global_var_315d8.2705 to i32), i32* %arg1, align 4
  %v1_16cfd = icmp eq i32 %v3_16cf4, 0
  br i1 %v1_16cfd, label %dec_label_pc_16d2c, label %dec_label_pc_16d01

dec_label_pc_16d01:                               ; preds = %dec_label_pc_16ce0
  %v2_16d04 = call i32 @function_2d8f0(i32 %v3_16cf4)
  %v0_16d09 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16d09 = add i32 %v0_16d09, 8
  store i32 %v1_16d09, i32* @eax, align 8
  %v2_16d0f = call i32 @function_27220(i32 %v1_16d09)
  store i32 0, i32* @eax, align 8
  %v1_16d1f = inttoptr i32 %v0_16d09 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16d1f, align 4
  br i1 false, label %bb, label %dec_label_pc_16d01.dec_label_pc_16d27_crit_edge

dec_label_pc_16d01.dec_label_pc_16d27_crit_edge:  ; preds = %dec_label_pc_16d01
  %v0_16d2b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_16d27

bb:                                               ; preds = %dec_label_pc_16d01
  br label %dec_label_pc_16d27

dec_label_pc_16d27:                               ; preds = %dec_label_pc_16d01.dec_label_pc_16d27_crit_edge, %bb
  %v0_16d2b = phi i32 [ %v0_16d2b.pre, %dec_label_pc_16d01.dec_label_pc_16d27_crit_edge ], [ undef, %bb ]
  store i32 %v0_16ce0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_16d2b

dec_label_pc_16d2c:                               ; preds = %dec_label_pc_16ce0
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16d27, { 1, 0 }
}

define i32 @function_16d50() local_unnamed_addr {
dec_label_pc_16d50:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16d55() local_unnamed_addr {
dec_label_pc_16d55:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16d62(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d62:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16d62 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16d62 = add i32 %v0_16d62, 1149831251
  %v2_16d62 = inttoptr i32 %v1_16d62 to i32*
  %v3_16d62 = load i32, i32* %v2_16d62, align 4
  %v4_16d62 = add i32 %v3_16d62, -1
  store i32 %v4_16d62, i32* %v2_16d62, align 4
  %v0_16d68 = load i32, i32* %eax.global-to-local, align 8
  %v11_16d68 = and i32 %v0_16d68, -228
  store i32 %v11_16d68, i32* @eax, align 8
  %v0_16d6a = load i32, i32* %edx.global-to-local, align 4
  %v1_16d6d = call i32 @function_27220(i32 %v0_16d6a)
  store i32 %arg1, i32* @eax, align 8
  %v0_16d76 = call i32 @function_16d55()
  store i32 %v0_16d76, i32* %eax.global-to-local, align 8
  ret i32 %v0_16d76

; uselistorder directives
  uselistorder i32 (i32)* @function_27220, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_16d80:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16d80 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* @ebx, align 4
  %v0_16d88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_16d94 = add i32 %tmp101, 4
  %v2_16d94 = inttoptr i32 %v1_16d94 to i32*
  %v3_16d94 = load i32, i32* %v2_16d94, align 4
  store i32 %v3_16d94, i32* @eax, align 8
  store i32 ptrtoint (%vtable_315d8_type* @global_var_315d8.2705 to i32), i32* %arg1, align 4
  %v1_16d9d = icmp eq i32 %v3_16d94, 0
  br i1 %v1_16d9d, label %dec_label_pc_16dcc, label %dec_label_pc_16da1

dec_label_pc_16da1:                               ; preds = %dec_label_pc_16d80
  %v1_16da4 = call i32 @function_2d990(i32 %v3_16d94)
  %v0_16da9 = load i32, i32* @ebx, align 4
  %v1_16da9 = add i32 %v0_16da9, 8
  store i32 %v1_16da9, i32* @eax, align 8
  %v1_16daf = call i32 @function_272c0(i32 %v1_16da9)
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_16dbf = load i32, i32* @ebx, align 4
  %v1_16dbf = inttoptr i32 %v0_16dbf to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16dbf, align 4
  br i1 false, label %dec_label_pc_16da1.dec_label_pc_16dd1_crit_edge, label %dec_label_pc_16dc7

dec_label_pc_16da1.dec_label_pc_16dd1_crit_edge:  ; preds = %dec_label_pc_16da1
  br label %dec_label_pc_16dd1

dec_label_pc_16dc7:                               ; preds = %dec_label_pc_16da1
  store i32 %v0_16d80, i32* %ebx.global-to-local, align 4
  %v0_16dcb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16dcb

dec_label_pc_16dcc:                               ; preds = %dec_label_pc_16d80
  %v1_16dcc = inttoptr i32 %v0_16d88 to i32*
  %v2_16dcc = call i32 @function_25236(i32* %v1_16dcc)
  store i32 %v2_16dcc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16dd1

dec_label_pc_16dd1:                               ; preds = %dec_label_pc_16da1.dec_label_pc_16dd1_crit_edge, %dec_label_pc_16dcc
  %v3_16dcc = phi i32 [ undef, %dec_label_pc_16da1.dec_label_pc_16dd1_crit_edge ], [ %v2_16dcc, %dec_label_pc_16dcc ]
  ret i32 %v3_16dcc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_16dd1, { 1, 0 }
}

define i32 @function_16dd6() local_unnamed_addr {
dec_label_pc_16dd6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16de3(i32 %arg1) local_unnamed_addr {
dec_label_pc_16de3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16de3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16de3 = add i32 %v0_16de3, 1149831251
  %v2_16de3 = inttoptr i32 %v1_16de3 to i32*
  %v3_16de3 = load i32, i32* %v2_16de3, align 4
  %v4_16de3 = add i32 %v3_16de3, -1
  store i32 %v4_16de3, i32* %v2_16de3, align 4
  %v0_16de9 = load i32, i32* %eax.global-to-local, align 8
  %v11_16de9 = and i32 %v0_16de9, -228
  store i32 %v11_16de9, i32* @eax, align 8
  %v0_16deb = load i32, i32* %edx.global-to-local, align 4
  %v1_16dee = call i32 @function_272c0(i32 %v0_16deb)
  store i32 %arg1, i32* @eax, align 8
  %v0_16df7 = call i32 @function_16dd6()
  store i32 %v0_16df7, i32* %eax.global-to-local, align 8
  ret i32 %v0_16df7

; uselistorder directives
  uselistorder i32 (i32)* @function_272c0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_16e00:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16e00 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_16e08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16e14 = add i32 %tmp101, 4
  %v2_16e14 = inttoptr i32 %v1_16e14 to i32*
  %v3_16e14 = load i32, i32* %v2_16e14, align 4
  store i32 %v3_16e14, i32* @eax, align 8
  store i32 ptrtoint (%vtable_315d8_type* @global_var_315d8.2705 to i32), i32* %arg1, align 4
  %v0_16e1d = load i32, i32* @eax, align 8
  store i1 false, i1* @of, align 1
  %v1_16e1d = icmp eq i32 %v0_16e1d, 0
  br i1 %v1_16e1d, label %bb, label %dec_label_pc_16e21

bb:                                               ; preds = %dec_label_pc_16e00
  %v2_16e1f = call i32 @function_16e54(i32 %v0_16e08)
  store i32 %v2_16e1f, i32* @eax, align 8
  br label %dec_label_pc_16e21

dec_label_pc_16e21:                               ; preds = %bb, %dec_label_pc_16e00
  %v0_16e21 = phi i32 [ %v2_16e1f, %bb ], [ %v0_16e1d, %dec_label_pc_16e00 ]
  %v1_16e24 = call i32 @function_2da10(i32 %v0_16e21)
  %v0_16e29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16e29 = add i32 %v0_16e29, 8
  store i32 %v1_16e29, i32* @eax, align 8
  %v1_16e2f = call i32 @function_27340(i32 %v1_16e29)
  store i32 0, i32* @eax, align 8
  %v1_16e3f = inttoptr i32 %v0_16e29 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16e3f, align 4
  br i1 false, label %bb104, label %dec_label_pc_16e21.dec_label_pc_16e47_crit_edge

dec_label_pc_16e21.dec_label_pc_16e47_crit_edge:  ; preds = %dec_label_pc_16e21
  %v5_16e4e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_16e47

bb104:                                            ; preds = %dec_label_pc_16e21
  br label %dec_label_pc_16e47

dec_label_pc_16e47:                               ; preds = %dec_label_pc_16e21.dec_label_pc_16e47_crit_edge, %bb104
  %v5_16e4e = phi i32 [ %v5_16e4e.pre, %dec_label_pc_16e21.dec_label_pc_16e47_crit_edge ], [ undef, %bb104 ]
  store i32 %v0_16e00, i32* %ebx.global-to-local, align 4
  ret i32 %v5_16e4e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16e47, { 1, 0 }
}

define i32 @function_16e54(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e54:
  %v0_16e54 = load i32, i32* @eax, align 8
  ret i32 %v0_16e54
}

define i32 @function_16e59() local_unnamed_addr {
dec_label_pc_16e59:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16e5e() local_unnamed_addr {
dec_label_pc_16e5e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16e6b(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e6b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16e6b = load i32, i32* %ebp.global-to-local, align 4
  %v1_16e6b = add i32 %v0_16e6b, 1149831251
  %v2_16e6b = inttoptr i32 %v1_16e6b to i32*
  %v3_16e6b = load i32, i32* %v2_16e6b, align 4
  %v4_16e6b = add i32 %v3_16e6b, -1
  store i32 %v4_16e6b, i32* %v2_16e6b, align 4
  %v0_16e71 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* @of, align 1
  %v11_16e71 = and i32 %v0_16e71, -228
  store i32 %v11_16e71, i32* @eax, align 8
  %v0_16e73 = load i32, i32* %edx.global-to-local, align 4
  %v1_16e76 = call i32 @function_27340(i32 %v0_16e73)
  store i32 %arg1, i32* @eax, align 8
  %v0_16e7f = call i32 @function_16e5e()
  store i32 %v0_16e7f, i32* %eax.global-to-local, align 8
  ret i32 %v0_16e7f

; uselistorder directives
  uselistorder i32 (i32)* @function_27340, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_16e90:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16e90 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_16e98 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16ea4 = add i32 %tmp101, 4
  %v2_16ea4 = inttoptr i32 %v1_16ea4 to i32*
  %v3_16ea4 = load i32, i32* %v2_16ea4, align 4
  store i32 %v3_16ea4, i32* @eax, align 8
  store i32 ptrtoint (%vtable_315d8_type* @global_var_315d8.2705 to i32), i32* %arg1, align 4
  %v0_16ead = load i32, i32* @eax, align 8
  %v1_16ead = icmp eq i32 %v0_16ead, 0
  br i1 %v1_16ead, label %bb, label %dec_label_pc_16eb1

bb:                                               ; preds = %dec_label_pc_16e90
  %v2_16eaf = call i32 @function_16ee4(i32 %v0_16e98)
  store i32 %v2_16eaf, i32* @eax, align 8
  br label %dec_label_pc_16eb1

dec_label_pc_16eb1:                               ; preds = %bb, %dec_label_pc_16e90
  %v0_16eb1 = phi i32 [ %v2_16eaf, %bb ], [ %v0_16ead, %dec_label_pc_16e90 ]
  %v1_16eb4 = call i32 @function_2daa0(i32 %v0_16eb1)
  %v0_16eb9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16eb9 = add i32 %v0_16eb9, 8
  store i32 %v1_16eb9, i32* @eax, align 8
  %v1_16ebf = call i32 @function_273d0(i32 %v1_16eb9)
  store i32 0, i32* @eax, align 8
  %v1_16ecf = inttoptr i32 %v0_16eb9 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16ecf, align 4
  br i1 false, label %bb104, label %dec_label_pc_16eb1.dec_label_pc_16ed7_crit_edge

dec_label_pc_16eb1.dec_label_pc_16ed7_crit_edge:  ; preds = %dec_label_pc_16eb1
  %v5_16ede.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_16ed7

bb104:                                            ; preds = %dec_label_pc_16eb1
  br label %dec_label_pc_16ed7

dec_label_pc_16ed7:                               ; preds = %dec_label_pc_16eb1.dec_label_pc_16ed7_crit_edge, %bb104
  %v5_16ede = phi i32 [ %v5_16ede.pre, %dec_label_pc_16eb1.dec_label_pc_16ed7_crit_edge ], [ undef, %bb104 ]
  store i32 %v0_16e90, i32* %ebx.global-to-local, align 4
  ret i32 %v5_16ede

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16ed7, { 1, 0 }
}

define i32 @function_16ee4(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ee4:
  %v0_16ee4 = load i32, i32* @eax, align 8
  ret i32 %v0_16ee4
}

define i32 @function_16ee9() local_unnamed_addr {
dec_label_pc_16ee9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16eee() local_unnamed_addr {
dec_label_pc_16eee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16efb(i32 %arg1) local_unnamed_addr {
dec_label_pc_16efb:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16efb = load i32, i32* %ebp.global-to-local, align 4
  %v1_16efb = add i32 %v0_16efb, 1149831251
  %v2_16efb = inttoptr i32 %v1_16efb to i32*
  %v3_16efb = load i32, i32* %v2_16efb, align 4
  %v4_16efb = add i32 %v3_16efb, -1
  store i32 %v4_16efb, i32* %v2_16efb, align 4
  %v0_16f01 = load i32, i32* %eax.global-to-local, align 8
  %v11_16f01 = and i32 %v0_16f01, -228
  store i32 %v11_16f01, i32* @eax, align 8
  %v0_16f03 = load i32, i32* %edx.global-to-local, align 4
  %v1_16f06 = call i32 @function_273d0(i32 %v0_16f03)
  store i32 %arg1, i32* @eax, align 8
  %v0_16f0f = call i32 @function_16eee()
  store i32 %v0_16f0f, i32* %eax.global-to-local, align 8
  ret i32 %v0_16f0f

; uselistorder directives
  uselistorder i32 (i32)* @function_273d0, { 1, 0 }
}

define i32 @_ZN12CNodeSignalsD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16f20:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16f20 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_16f34 = add i32 %tmp101, 16
  %v2_16f34 = inttoptr i32 %v1_16f34 to i32*
  %v3_16f34 = load i32, i32* %v2_16f34, align 4
  store i32 %v3_16f34, i32* @eax, align 8
  %v1_16f37 = add i32 %tmp101, 12
  %v2_16f37 = inttoptr i32 %v1_16f37 to i32*
  store i32 ptrtoint (%vtable_315d8_type* @global_var_315d8.2705 to i32), i32* %v2_16f37, align 4
  %v0_16f3e = load i32, i32* @eax, align 8
  %v1_16f3e = icmp eq i32 %v0_16f3e, 0
  br i1 %v1_16f3e, label %dec_label_pc_16f99, label %dec_label_pc_16f42

dec_label_pc_16f42:                               ; preds = %dec_label_pc_16f20
  %v1_16f45 = call i32 @function_2db30(i32 %v0_16f3e)
  %v0_16f4a = load i32, i32* @ebx, align 4
  %v1_16f4a = add i32 %v0_16f4a, 20
  store i32 %v1_16f4a, i32* @eax, align 8
  %v1_16f50 = call i32 @function_27460(i32 %v1_16f4a)
  store i32 %v1_16f50, i32* %eax.global-to-local, align 8
  %v0_16f55 = load i32, i32* @ebx, align 4
  %v1_16f55 = add i32 %v0_16f55, 4
  %v2_16f55 = inttoptr i32 %v1_16f55 to i32*
  %v3_16f55 = load i32, i32* %v2_16f55, align 4
  store i32 %v3_16f55, i32* @eax, align 8
  %v1_16f58 = add i32 %v0_16f55, 12
  %v2_16f58 = inttoptr i32 %v1_16f58 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v2_16f58, align 4
  %v0_16f5f = load i32, i32* @ebx, align 4
  %v1_16f5f = inttoptr i32 %v0_16f5f to i32*
  store i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), i32* %v1_16f5f, align 4
  %v0_16f65 = load i32, i32* @eax, align 8
  %v1_16f65 = icmp eq i32 %v0_16f65, 0
  br i1 %v1_16f65, label %bb, label %dec_label_pc_16f69

bb:                                               ; preds = %dec_label_pc_16f42
  %v1_16f67 = call i32 @function_16f9e()
  store i32 %v1_16f67, i32* @eax, align 8
  br label %dec_label_pc_16f69

dec_label_pc_16f69:                               ; preds = %bb, %dec_label_pc_16f42
  %v0_16f69 = phi i32 [ %v1_16f67, %bb ], [ %v0_16f65, %dec_label_pc_16f42 ]
  %v1_16f6c = call i32 @function_2d820(i32 %v0_16f69)
  %v0_16f71 = load i32, i32* @ebx, align 4
  %v1_16f71 = add i32 %v0_16f71, 8
  store i32 %v1_16f71, i32* @eax, align 8
  %v1_16f77 = call i32 @function_27460(i32 %v1_16f71)
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_16f87 = load i32, i32* @ebx, align 4
  %v1_16f87 = inttoptr i32 %v0_16f87 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16f87, align 4
  br i1 false, label %dec_label_pc_16f69.dec_label_pc_16f99_crit_edge, label %dec_label_pc_16f8f

dec_label_pc_16f69.dec_label_pc_16f99_crit_edge:  ; preds = %dec_label_pc_16f69
  br label %dec_label_pc_16f99

dec_label_pc_16f8f:                               ; preds = %dec_label_pc_16f69
  store i32 %v0_16f20, i32* %ebx.global-to-local, align 4
  %v0_16f93 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16f93

dec_label_pc_16f99:                               ; preds = %dec_label_pc_16f69.dec_label_pc_16f99_crit_edge, %dec_label_pc_16f20
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_315d8_type* @global_var_315d8.2705 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @function_16f9e() local_unnamed_addr {
dec_label_pc_16f9e:
  %v0_16fa5 = load i32, i32* @ebx, align 4
  %v1_16fa5 = inttoptr i32 %v0_16fa5 to i32*
  store i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), i32* %v1_16fa5, align 4
  %v3_16fab = load i32, i32* @eax, align 8
  ret i32 %v3_16fab

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_315f0_type* @global_var_315f0.2579 to i32), { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_16fb2(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fb2:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16fb2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16fb2 = add i32 %v0_16fb2, 1149831251
  %v2_16fb2 = inttoptr i32 %v1_16fb2 to i32*
  %v3_16fb2 = load i32, i32* %v2_16fb2, align 4
  %v4_16fb2 = add i32 %v3_16fb2, -1
  store i32 %v4_16fb2, i32* %v2_16fb2, align 4
  %v0_16fb8 = load i32, i32* %eax.global-to-local, align 8
  %v11_16fb8 = and i32 %v0_16fb8, -228
  store i32 %v11_16fb8, i32* @eax, align 8
  %v0_16fba = load i32, i32* %edx.global-to-local, align 4
  %v1_16fbd = call i32 @function_27460(i32 %v0_16fba)
  store i32 %arg1, i32* %eax.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16fc8() local_unnamed_addr {
dec_label_pc_16fc8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16fe6(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fe6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16fe6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16fe6 = add i32 %v0_16fe6, 1149834323
  %v2_16fe6 = inttoptr i32 %v1_16fe6 to i32*
  %v3_16fe6 = load i32, i32* %v2_16fe6, align 4
  %v4_16fe6 = add i32 %v3_16fe6, -1
  store i32 %v4_16fe6, i32* %v2_16fe6, align 4
  %v0_16fec = load i32, i32* %eax.global-to-local, align 8
  %v11_16fec = and i32 %v0_16fec, -228
  store i32 %v11_16fec, i32* @eax, align 8
  %v0_16fee = load i32, i32* %edx.global-to-local, align 4
  %v1_16ff1 = call i32 @function_27460(i32 %v0_16fee)
  store i32 %arg1, i32* @eax, align 8
  %v0_16ffa = call i32 @function_16fc8()
  store i32 %v0_16ffa, i32* %eax.global-to-local, align 8
  ret i32 %v0_16ffa

; uselistorder directives
  uselistorder i32 (i32)* @function_27460, { 3, 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17000:
  %v1_1701a = icmp eq i32 %arg2, 0
  %v1_1701c = icmp eq i1 %v1_1701a, false
  br i1 %v1_1701c, label %dec_label_pc_17022, label %dec_label_pc_1701e

dec_label_pc_1701e:                               ; preds = %dec_label_pc_17000
  %v0_1700a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_17002 = load i32, i32* @ebx, align 4
  %v0_17001 = load i32, i32* @esi, align 4
  %v0_17000 = load i32, i32* @edi, align 4
  %v4_1701e = call i32 @function_17040(i32 %v0_1700a, i32 %v0_17002, i32 %v0_17001, i32 %v0_17000)
  ret i32 %v4_1701e

dec_label_pc_17022:                               ; preds = %dec_label_pc_17000
  %v1_17022 = add i32 %arg2, 12
  %v2_17022 = inttoptr i32 %v1_17022 to i32*
  %v3_17022 = load i32, i32* %v2_17022, align 4
  store i32 %v3_17022, i32* @eax, align 8
  %v2_1702c = call i32 @function_2e000(i32 %arg1, i32 %v3_17022)
  ret i32 %v2_1702c
}

define i32 @function_17040(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17040:
  %v1_17044 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17044 = xor i32 %v1_17044, %arg1
  %v3_17044 = icmp eq i32 %v2_17044, 0
  %v1_1704b = icmp eq i1 %v3_17044, false
  br i1 %v1_1704b, label %dec_label_pc_17054, label %dec_label_pc_1704d

dec_label_pc_1704d:                               ; preds = %dec_label_pc_17040
  ret i32 %v2_17044

dec_label_pc_17054:                               ; preds = %dec_label_pc_17040
  ret i32 %v2_17044

; uselistorder directives
  uselistorder i32 %v2_17044, { 1, 0, 2 }
}

define i32 @_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17060:
  store i32 %arg1, i32* @eax, align 8
  %v1_17074 = add i32 %arg1, 8
  %v2_17074 = inttoptr i32 %v1_17074 to i32*
  %v3_17074 = load i32, i32* %v2_17074, align 4
  %v2_1707e = call i32 @function_2e060(i32 %arg1, i32 %v3_17074)
  br i1 false, label %dec_label_pc_17094, label %dec_label_pc_17090

dec_label_pc_17090:                               ; preds = %dec_label_pc_17060
  ret i32 0

dec_label_pc_17094:                               ; preds = %dec_label_pc_17060
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_170a0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp146 = ptrtoint i32* %arg1 to i32
  %v0_170a0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_170a1 = load i32, i32* %edi.global-to-local, align 4
  %v0_170a2 = load i32, i32* %esi.global-to-local, align 4
  %v0_170a3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edx.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 8
  store i32 %arg9, i32* %ecx.global-to-local, align 4
  store i32 %arg7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg10, i32* %esi.global-to-local, align 4
  %v2_17114 = sub i32 %arg9, %arg5
  %v2_17123 = ashr i32 %v2_17114, ptrtoint (i64* @global_var_2.2539 to i32)
  %v1_17126 = sub i32 %v2_17123, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_17129 = mul i32 %v1_17126, 42
  store i32 %v3_17129, i32* %ecx.global-to-local, align 4
  %v2_1712e = sub i32 %arg6, %arg7
  %v2_17130 = sub i32 %arg4, %arg2
  %v2_17132 = ashr i32 %v2_1712e, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17135 = mul i32 %v2_17132, -1431655765
  %v2_1713b = ashr i32 %v2_17130, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1713e = mul i32 %v2_1713b, -1431655765
  store i32 %v3_1713e, i32* %edx.global-to-local, align 4
  %v2_17148 = add i32 %v3_17129, %v3_17135
  store i32 %v2_17148, i32* %eax.global-to-local, align 8
  %v1_1714a = inttoptr i32 %arg10 to i32*
  %v2_1714a = load i32, i32* %v1_1714a, align 4
  store i32 %v2_1714a, i32* %ecx.global-to-local, align 4
  %v2_17150 = add i32 %v2_17148, %v3_1713e
  store i32 %v2_17150, i32* %edx.global-to-local, align 4
  %tmp158 = icmp slt i32 %v2_17150, 1
  %v1_1739c = add i32 %arg10, 4
  %v2_1739c = inttoptr i32 %v1_1739c to i32*
  %v3_1739c = load i32, i32* %v2_1739c, align 4
  br i1 %tmp158, label %dec_label_pc_1739c, label %dec_label_pc_1716a

dec_label_pc_1716a:                               ; preds = %dec_label_pc_170a0
  store i32 %v3_1739c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_17178

dec_label_pc_17178:                               ; preds = %dec_label_pc_17289, %dec_label_pc_1716a
  %v0_171c0 = phi i32 [ %v2_1714a, %dec_label_pc_1716a ], [ %v0_1717c.pre, %dec_label_pc_17289 ]
  %stack_var_-88.0 = phi i32 [ %arg9, %dec_label_pc_1716a ], [ %stack_var_-88.2, %dec_label_pc_17289 ]
  %stack_var_-96.0 = phi i32 [ %arg6, %dec_label_pc_1716a ], [ %stack_var_-96.2, %dec_label_pc_17289 ]
  %stack_var_-84.0 = phi i32 [ %arg7, %dec_label_pc_1716a ], [ %stack_var_-84.2, %dec_label_pc_17289 ]
  %stack_var_-104.0 = phi i32 [ %v2_17150, %dec_label_pc_1716a ], [ %v5_17289, %dec_label_pc_17289 ]
  %stack_var_-108.0 = phi i32 [ %v3_1739c, %dec_label_pc_1716a ], [ %stack_var_-108.2, %dec_label_pc_17289 ]
  store i32 %stack_var_-96.0, i32* %ebp.global-to-local, align 4
  %v5_1717e = sub i32 %v0_171c0, %stack_var_-108.0
  %v5_17184 = sub i32 %stack_var_-96.0, %stack_var_-84.0
  %v2_17188 = ashr i32 %v5_1717e, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1718b = mul i32 %v2_17188, -1431655765
  store i32 %v3_1718b, i32* %ebx.global-to-local, align 4
  %v2_17191 = ashr i32 %v5_17184, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17194 = mul i32 %v2_17191, -1431655765
  store i32 %v3_17194, i32* %eax.global-to-local, align 8
  %v1_171a0 = icmp eq i32 %v3_17194, 0
  store i32 %stack_var_-96.0, i32* %edi.global-to-local, align 4
  %v1_171a8 = icmp eq i1 %v1_171a0, false
  br i1 %v1_171a8, label %dec_label_pc_171be, label %dec_label_pc_171aa

dec_label_pc_171aa:                               ; preds = %dec_label_pc_17178
  store i32 %stack_var_-88.0, i32* %eax.global-to-local, align 8
  %v1_171ae = add i32 %stack_var_-88.0, -4
  %v2_171ae = inttoptr i32 %v1_171ae to i32*
  %v3_171ae = load i32, i32* %v2_171ae, align 4
  store i32 42, i32* %eax.global-to-local, align 8
  %v1_171b6 = add i32 %v3_171ae, 504
  store i32 %v1_171b6, i32* %edi.global-to-local, align 4
  store i32 %v1_171b6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_171be

dec_label_pc_171be:                               ; preds = %dec_label_pc_171aa, %dec_label_pc_17178
  %v0_171f0 = phi i32 [ %v1_171b6, %dec_label_pc_171aa ], [ %stack_var_-96.0, %dec_label_pc_17178 ]
  %v6_171d6 = phi i32 [ 42, %dec_label_pc_171aa ], [ %v3_17194, %dec_label_pc_17178 ]
  %v1_171be = icmp eq i32 %v3_1718b, 0
  store i32 %v0_171c0, i32* %edx.global-to-local, align 4
  %v1_171c2 = icmp eq i1 %v1_171be, false
  br i1 %v1_171c2, label %dec_label_pc_171d2, label %dec_label_pc_171c4

dec_label_pc_171c4:                               ; preds = %dec_label_pc_171be
  %v0_171c4 = load i32, i32* %esi.global-to-local, align 4
  %v1_171c4 = add i32 %v0_171c4, 12
  %v2_171c4 = inttoptr i32 %v1_171c4 to i32*
  %v3_171c4 = load i32, i32* %v2_171c4, align 4
  store i32 %v3_171c4, i32* %edx.global-to-local, align 4
  %v1_171c7 = and i32 %v3_1718b, -256
  %v2_171c7 = or i32 %v1_171c7, 42
  store i32 %v2_171c7, i32* %ebx.global-to-local, align 4
  %v1_171c9 = add i32 %v3_171c4, -4
  %v2_171c9 = inttoptr i32 %v1_171c9 to i32*
  %v3_171c9 = load i32, i32* %v2_171c9, align 4
  %v1_171cc = add i32 %v3_171c9, 504
  store i32 %v1_171cc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_171d2

dec_label_pc_171d2:                               ; preds = %dec_label_pc_171c4, %dec_label_pc_171be
  %v0_17207 = phi i32 [ %v1_171cc, %dec_label_pc_171c4 ], [ %v0_171c0, %dec_label_pc_171be ]
  %v5_171dd = phi i32 [ %v2_171c7, %dec_label_pc_171c4 ], [ %v3_1718b, %dec_label_pc_171be ]
  %v5_171d2 = sub i32 %v6_171d6, %stack_var_-104.0
  %v11_171d2 = xor i32 %v6_171d6, %stack_var_-104.0
  %v12_171d2 = xor i32 %v5_171d2, %v6_171d6
  %v13_171d2 = and i32 %v12_171d2, %v11_171d2
  %v14_171d2 = icmp slt i32 %v13_171d2, 0
  %v15_171d2 = icmp eq i32 %v5_171d2, 0
  %v16_171d2 = icmp slt i32 %v5_171d2, 0
  %v3_171d6 = icmp eq i1 %v16_171d2, %v14_171d2
  %v4_171d6 = icmp eq i1 %v15_171d2, false
  %v5_171d6 = icmp eq i1 %v3_171d6, %v4_171d6
  %v11_171d6 = select i1 %v5_171d6, i32 %stack_var_-104.0, i32 %v6_171d6
  %v2_171db = sub i32 %v11_171d6, %v5_171dd
  %v8_171db = xor i32 %v5_171dd, %v11_171d6
  %v9_171db = xor i32 %v2_171db, %v11_171d6
  %v10_171db = and i32 %v9_171db, %v8_171db
  %v11_171db = icmp slt i32 %v10_171db, 0
  %v12_171db = icmp eq i32 %v2_171db, 0
  %v13_171db = icmp slt i32 %v2_171db, 0
  %v3_171dd = icmp ne i1 %v13_171db, %v11_171db
  %v4_171dd = or i1 %v12_171db, %v3_171dd
  %v7_171dd = select i1 %v4_171dd, i32 %v11_171d6, i32 %v5_171dd
  store i32 %v7_171dd, i32* %ebx.global-to-local, align 4
  %v2_171e3 = mul i32 %v7_171dd, 12
  %v5_171ec = sub i32 %v0_171f0, %v2_171e3
  store i32 %v5_171ec, i32* @eax, align 8
  %v2_171f2 = ashr i32 %v2_171e3, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_171f5 = mul i32 %v2_171f2, -1431655765
  store i32 %v3_171f5, i32* %ebp.global-to-local, align 4
  %tmp161 = icmp slt i32 %v3_171f5, 1
  br i1 %tmp161, label %dec_label_pc_17247, label %dec_label_pc_171ff

dec_label_pc_171ff:                               ; preds = %dec_label_pc_171d2
  %v0_171ff = load i32, i32* %esi.global-to-local, align 4
  store i32 %v3_171f5, i32* %ebx.global-to-local, align 4
  store i32 %v0_17207, i32* %ebp.global-to-local, align 4
  store i32 %v7_171dd, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_17210.dec_label_pc_17210_crit_edge, %dec_label_pc_171ff
  %v0_17210 = phi i32 [ %v0_17210.pre, %dec_label_pc_17210.dec_label_pc_17210_crit_edge ], [ %v0_171f0, %dec_label_pc_171ff ]
  %v0_17213 = phi i32 [ %v0_17213.pre, %dec_label_pc_17210.dec_label_pc_17210_crit_edge ], [ %v0_17207, %dec_label_pc_171ff ]
  %v1_17210 = add i32 %v0_17210, -12
  store i32 %v1_17210, i32* %edi.global-to-local, align 4
  %v1_17213 = add i32 %v0_17213, -12
  store i32 %v1_17213, i32* %ebp.global-to-local, align 4
  %v1_1721d = call i32 @function_2d240(i32 %v1_17210)
  store i32 %v1_1721d, i32* @eax, align 8
  %v0_17222 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17222 = add i32 %v0_17222, -1
  %v10_17222 = icmp eq i32 %v1_17222, 0
  store i32 %v1_17222, i32* %ebx.global-to-local, align 4
  %v1_17225 = icmp eq i1 %v10_17222, false
  br i1 %v1_17225, label %dec_label_pc_17210.dec_label_pc_17210_crit_edge, label %dec_label_pc_17227

dec_label_pc_17210.dec_label_pc_17210_crit_edge:  ; preds = %dec_label_pc_17210
  %v0_17213.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_17210.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_17227:                               ; preds = %dec_label_pc_17210
  %v0_17227 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_17227, i32* %ebx.global-to-local, align 4
  store i32 %v0_171ff, i32* %esi.global-to-local, align 4
  %v1_1722d = inttoptr i32 %v0_171ff to i32*
  %v2_1722d = load i32, i32* %v1_1722d, align 4
  store i32 %v2_1722d, i32* %ecx.global-to-local, align 4
  %v1_1722f = add i32 %v0_171ff, 4
  %v2_1722f = inttoptr i32 %v1_1722f to i32*
  %v3_1722f = load i32, i32* %v2_1722f, align 4
  store i32 %v3_1722f, i32* %edx.global-to-local, align 4
  %v2_17234 = sub i32 %v2_1722d, %v3_1722f
  %v2_17236 = ashr i32 %v2_17234, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17239 = mul i32 %v2_17236, -1431655765
  store i32 %v3_17239, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_17247

dec_label_pc_17247:                               ; preds = %dec_label_pc_17227, %dec_label_pc_171d2
  %v0_17284 = phi i32 [ %v0_171c0, %dec_label_pc_171d2 ], [ %v2_1722d, %dec_label_pc_17227 ]
  %v1_17361 = phi i32 [ %v7_171dd, %dec_label_pc_171d2 ], [ %v0_17227, %dec_label_pc_17227 ]
  %stack_var_-108.1 = phi i32 [ %stack_var_-108.0, %dec_label_pc_171d2 ], [ %v3_1722f, %dec_label_pc_17227 ]
  %stack_var_-92.0.in = phi i32 [ %v3_1718b, %dec_label_pc_171d2 ], [ %v3_17239, %dec_label_pc_17227 ]
  %v1_1724d = sub i32 0, %v1_17361
  store i32 %v1_1724d, i32* %ebp.global-to-local, align 4
  %v2_1724f = sub i32 %v3_17194, %v1_17361
  %v13_1724f = icmp slt i32 %v2_1724f, 0
  %v18_1724f = sext i32 %v2_1724f to i64
  store i32 %v2_1724f, i32* %edi.global-to-local, align 4
  br i1 %v13_1724f, label %dec_label_pc_17388, label %dec_label_pc_17257

dec_label_pc_17257:                               ; preds = %dec_label_pc_17247
  %v9_1725a = icmp sgt i32 %v2_1724f, 41
  br i1 %v9_1725a, label %dec_label_pc_17328, label %dec_label_pc_17260

dec_label_pc_17260:                               ; preds = %dec_label_pc_17257
  %v3_17264 = mul i32 %v1_1724d, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  store i32 %v3_17264, i32* %eax.global-to-local, align 8
  %v2_1726c = mul i32 %v1_1724d, mul (i32 add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1), i32 4)
  %v3_1726c = add i32 %v2_1726c, %stack_var_-96.0
  store i32 %v3_1726c, i32* %edx.global-to-local, align 4
  %v2_1726f = sub i32 %stack_var_-92.0.in, %v1_17361
  %v13_1726f = icmp slt i32 %v2_1726f, 0
  store i32 %v2_1726f, i32* %edi.global-to-local, align 4
  br i1 %v13_1726f, label %dec_label_pc_1736d, label %dec_label_pc_1727b

dec_label_pc_1727b:                               ; preds = %dec_label_pc_1733d, %dec_label_pc_17260
  %v0_172e7 = phi i32 [ %v2_17361, %dec_label_pc_1733d ], [ %v2_1726f, %dec_label_pc_17260 ]
  %stack_var_-88.1 = phi i32 [ %v3_17341, %dec_label_pc_1733d ], [ %stack_var_-88.0, %dec_label_pc_17260 ]
  %stack_var_-96.1 = phi i32 [ %v3_1735e, %dec_label_pc_1733d ], [ %v3_1726c, %dec_label_pc_17260 ]
  %stack_var_-84.1 = phi i32 [ %v2_1734b, %dec_label_pc_1733d ], [ %stack_var_-84.0, %dec_label_pc_17260 ]
  %v9_1727e = icmp sgt i32 %v0_172e7, 41
  br i1 %v9_1727e, label %dec_label_pc_172e0, label %dec_label_pc_17280

dec_label_pc_17280:                               ; preds = %dec_label_pc_1727b
  %v3_17280 = mul i32 %v1_1724d, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  store i32 %v3_17280, i32* %eax.global-to-local, align 8
  %v2_17284 = mul i32 %v1_1724d, mul (i32 add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1), i32 4)
  %v3_17284 = add i32 %v0_17284, %v2_17284
  store i32 %v3_17284, i32* %ecx.global-to-local, align 4
  %v1_17287 = load i32, i32* %esi.global-to-local, align 4
  %v2_17287 = inttoptr i32 %v1_17287 to i32*
  store i32 %v3_17284, i32* %v2_17287, align 4
  br label %dec_label_pc_17289

dec_label_pc_17289:                               ; preds = %dec_label_pc_172f1, %dec_label_pc_17280
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.3, %dec_label_pc_172f1 ], [ %stack_var_-88.1, %dec_label_pc_17280 ]
  %stack_var_-96.2 = phi i32 [ %stack_var_-96.3, %dec_label_pc_172f1 ], [ %stack_var_-96.1, %dec_label_pc_17280 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.3, %dec_label_pc_172f1 ], [ %stack_var_-84.1, %dec_label_pc_17280 ]
  %stack_var_-108.2 = phi i32 [ %v2_17301, %dec_label_pc_172f1 ], [ %stack_var_-108.1, %dec_label_pc_17280 ]
  %v4_17289 = load i32, i32* %ebx.global-to-local, align 4
  %v5_17289 = sub i32 %stack_var_-104.0, %v4_17289
  %v15_17289 = icmp eq i32 %v5_17289, 0
  %v16_17289 = icmp slt i32 %v5_17289, 0
  store i32 %v5_17289, i32* %eax.global-to-local, align 8
  %v3_17293 = icmp eq i1 %v16_17289, false
  %v4_17293 = icmp eq i1 %v15_17289, false
  %v5_17293 = icmp eq i1 %v3_17293, %v4_17293
  %v0_1717c.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v5_17293, label %dec_label_pc_17178, label %dec_label_pc_17299

dec_label_pc_17299:                               ; preds = %dec_label_pc_17289, %dec_label_pc_1739c
  %v0_172a1 = phi i32 [ %v2_1714a, %dec_label_pc_1739c ], [ %v0_1717c.pre, %dec_label_pc_17289 ]
  %stack_var_-108.3 = phi i32 [ %v3_1739c, %dec_label_pc_1739c ], [ %stack_var_-108.2, %dec_label_pc_17289 ]
  store i32 %tmp146, i32* %eax.global-to-local, align 8
  store i32 %stack_var_-108.3, i32* %edx.global-to-local, align 4
  store i32 %v0_172a1, i32* %arg1, align 4
  %v2_172a3 = add i32 %tmp146, 4
  %v3_172a3 = inttoptr i32 %v2_172a3 to i32*
  store i32 %stack_var_-108.3, i32* %v3_172a3, align 4
  store i32 %tmp146, i32* %edx.global-to-local, align 4
  %v0_172aa = load i32, i32* %esi.global-to-local, align 4
  %v1_172aa = add i32 %v0_172aa, 8
  %v2_172aa = inttoptr i32 %v1_172aa to i32*
  %v3_172aa = load i32, i32* %v2_172aa, align 4
  store i32 %v3_172aa, i32* %eax.global-to-local, align 8
  %v2_172ad = add i32 %tmp146, 8
  %v3_172ad = inttoptr i32 %v2_172ad to i32*
  store i32 %v3_172aa, i32* %v3_172ad, align 4
  %v0_172b0 = load i32, i32* %esi.global-to-local, align 4
  %v1_172b0 = add i32 %v0_172b0, 12
  %v2_172b0 = inttoptr i32 %v1_172b0 to i32*
  %v3_172b0 = load i32, i32* %v2_172b0, align 4
  %v1_172b3 = load i32, i32* %edx.global-to-local, align 4
  %v2_172b3 = add i32 %v1_172b3, 12
  %v3_172b3 = inttoptr i32 %v2_172b3 to i32*
  store i32 %v3_172b0, i32* %v3_172b3, align 4
  %v0_172b6 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_172b6, i32* %eax.global-to-local, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 false, label %dec_label_pc_173a8, label %dec_label_pc_172c9

dec_label_pc_172c9:                               ; preds = %dec_label_pc_17299
  store i32 %v0_170a3, i32* %ebx.global-to-local, align 4
  store i32 %v0_170a2, i32* %esi.global-to-local, align 4
  store i32 %v0_170a1, i32* %edi.global-to-local, align 4
  store i32 %v0_170a0, i32* %ebp.global-to-local, align 4
  ret i32 %v0_172b6

dec_label_pc_172e0:                               ; preds = %dec_label_pc_1727b
  %v2_172e5 = sext i32 %v0_172e7 to i64
  %v4_172e5 = mul nsw i64 %v2_172e5, 818089009
  %v6_172e5 = udiv i64 %v4_172e5, 4294967296
  %v7_172e5 = trunc i64 %v6_172e5 to i32
  %v2_172e9 = ashr i32 %v0_172e7, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_172e9, i32* %eax.global-to-local, align 8
  %v2_172ec = sdiv i32 %v7_172e5, 8
  store i32 %v2_172ec, i32* %edx.global-to-local, align 4
  %v2_172ef = sub i32 %v2_172ec, %v2_172e9
  br label %dec_label_pc_172f1

dec_label_pc_172f1:                               ; preds = %dec_label_pc_1736d, %dec_label_pc_172e0
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.4, %dec_label_pc_1736d ], [ %stack_var_-88.1, %dec_label_pc_172e0 ]
  %stack_var_-96.3 = phi i32 [ %stack_var_-96.4, %dec_label_pc_1736d ], [ %stack_var_-96.1, %dec_label_pc_172e0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.4, %dec_label_pc_1736d ], [ %stack_var_-84.1, %dec_label_pc_172e0 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_1736d ], [ %v2_172ef, %dec_label_pc_172e0 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_172f1 = mul i32 %storemerge, 4
  store i32 %v1_172f1, i32* %eax.global-to-local, align 8
  %v1_172f8 = load i32, i32* %esi.global-to-local, align 4
  %v2_172f8 = add i32 %v1_172f8, 12
  %v3_172f8 = inttoptr i32 %v2_172f8 to i32*
  %v4_172f8 = load i32, i32* %v3_172f8, align 4
  %v5_172f8 = add i32 %v4_172f8, %v1_172f1
  store i32 %v5_172f8, i32* %eax.global-to-local, align 8
  %v3_172fb = mul i32 %storemerge, 42
  store i32 %v3_172fb, i32* %edx.global-to-local, align 4
  store i32 %v5_172f8, i32* %v3_172f8, align 4
  %v0_17301 = load i32, i32* %eax.global-to-local, align 8
  %v1_17301 = inttoptr i32 %v0_17301 to i32*
  %v2_17301 = load i32, i32* %v1_17301, align 4
  store i32 %v2_17301, i32* %eax.global-to-local, align 8
  %v0_17303 = load i32, i32* %edi.global-to-local, align 4
  %v1_17303 = load i32, i32* %edx.global-to-local, align 4
  %v2_17303 = sub i32 %v0_17303, %v1_17303
  store i32 %v2_17303, i32* %edi.global-to-local, align 4
  store i32 %v2_17301, i32* %edx.global-to-local, align 4
  %v1_1730d = load i32, i32* %esi.global-to-local, align 4
  %v2_1730d = add i32 %v1_1730d, 4
  %v3_1730d = inttoptr i32 %v2_1730d to i32*
  store i32 %v2_17301, i32* %v3_1730d, align 4
  %v0_17310 = load i32, i32* %eax.global-to-local, align 8
  %v1_17310 = add i32 %v0_17310, 504
  %v1_17315 = load i32, i32* %esi.global-to-local, align 4
  %v2_17315 = add i32 %v1_17315, 8
  %v3_17315 = inttoptr i32 %v2_17315 to i32*
  store i32 %v1_17310, i32* %v3_17315, align 4
  %v0_17318 = load i32, i32* %edi.global-to-local, align 4
  %v3_17318 = mul i32 %v0_17318, 3
  store i32 %v3_17318, i32* %eax.global-to-local, align 8
  %v0_1731b = load i32, i32* %edx.global-to-local, align 4
  %v2_1731b = mul i32 %v0_17318, 12
  %v3_1731b = add i32 %v0_1731b, %v2_1731b
  store i32 %v3_1731b, i32* %ecx.global-to-local, align 4
  %v1_1731e = load i32, i32* %esi.global-to-local, align 4
  %v2_1731e = inttoptr i32 %v1_1731e to i32*
  store i32 %v3_1731b, i32* %v2_1731e, align 4
  br label %dec_label_pc_17289

dec_label_pc_17328:                               ; preds = %dec_label_pc_17257
  %v5_17331 = mul nsw i64 %v18_1724f, 818089009
  %v7_17331 = udiv i64 %v5_17331, 4294967296
  %v8_17331 = trunc i64 %v7_17331 to i32
  %v2_17335 = ashr i32 %v2_1724f, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_17335, i32* %eax.global-to-local, align 8
  %v2_17338 = sdiv i32 %v8_17331, 8
  store i32 %v2_17338, i32* %edx.global-to-local, align 4
  %v2_1733b = sub i32 %v2_17338, %v2_17335
  br label %dec_label_pc_1733d

dec_label_pc_1733d:                               ; preds = %dec_label_pc_17388, %dec_label_pc_17328
  %storemerge6 = phi i32 [ -1, %dec_label_pc_17388 ], [ %v2_1733b, %dec_label_pc_17328 ]
  %v2_17341 = mul i32 %storemerge6, 4
  %v3_17341 = add i32 %v2_17341, %stack_var_-88.0
  store i32 %v3_17341, i32* %eax.global-to-local, align 8
  %v3_17344 = mul i32 %storemerge6, 42
  store i32 %v3_17344, i32* %edx.global-to-local, align 4
  %v1_1734b = inttoptr i32 %v3_17341 to i32*
  %v2_1734b = load i32, i32* %v1_1734b, align 4
  %v3_1734d = sub i32 %v2_1724f, %v3_17344
  store i32 %v2_1734b, i32* %edx.global-to-local, align 4
  %v2_1735e = mul i32 %v3_1734d, 12
  %v3_1735e = add i32 %v2_1734b, %v2_1735e
  store i32 %v3_1735e, i32* %eax.global-to-local, align 8
  %v2_17361 = sub i32 %stack_var_-92.0.in, %v1_17361
  %v13_17361 = icmp slt i32 %v2_17361, 0
  store i32 %v2_17361, i32* %edi.global-to-local, align 4
  %v1_17367 = icmp eq i1 %v13_17361, false
  br i1 %v1_17367, label %dec_label_pc_1727b, label %dec_label_pc_1736d

dec_label_pc_1736d:                               ; preds = %dec_label_pc_1733d, %dec_label_pc_17260
  %stack_var_-88.4 = phi i32 [ %v3_17341, %dec_label_pc_1733d ], [ %stack_var_-88.0, %dec_label_pc_17260 ]
  %stack_var_-96.4 = phi i32 [ %v3_1735e, %dec_label_pc_1733d ], [ %v3_1726c, %dec_label_pc_17260 ]
  %stack_var_-84.4 = phi i32 [ %v2_1734b, %dec_label_pc_1733d ], [ %stack_var_-84.0, %dec_label_pc_17260 ]
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_172f1

dec_label_pc_17388:                               ; preds = %dec_label_pc_17247
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1733d

dec_label_pc_1739c:                               ; preds = %dec_label_pc_170a0
  store i32 %v3_1739c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_17299

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17299
  ret i32 %v0_172b6

; uselistorder directives
  uselistorder i32 %v2_17361, { 1, 2, 0 }
  uselistorder i32 %v3_1735e, { 0, 2, 1 }
  uselistorder i32 %v2_1734b, { 0, 3, 1, 2 }
  uselistorder i32 %v3_17341, { 0, 2, 3, 1 }
  uselistorder i32 %v2_17338, { 1, 0 }
  uselistorder i32 %v2_17301, { 1, 0, 3, 2 }
  uselistorder i32 %v2_172ec, { 1, 0 }
  uselistorder i32 %v5_17289, { 1, 2, 3, 0 }
  uselistorder i32 %stack_var_-84.1, { 1, 0 }
  uselistorder i32 %stack_var_-96.1, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 1, 0 }
  uselistorder i32 %v2_1724f, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1724d, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_17222, { 1, 0 }
  uselistorder i32 %v0_171ff, { 2, 1, 0 }
  uselistorder i32 %v3_171f5, { 1, 2, 0 }
  uselistorder i32 %v2_171db, { 1, 2, 0 }
  uselistorder i32 %v11_171d6, { 2, 0, 1, 3 }
  uselistorder i32 %v5_171d2, { 1, 2, 0 }
  uselistorder i32 %v5_171dd, { 1, 0, 2 }
  uselistorder i32 %v0_17207, { 1, 0 }
  uselistorder i32 %v6_171d6, { 2, 0, 1, 3 }
  uselistorder i32 %v3_17194, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1718b, { 3, 0, 1, 2, 4 }
  uselistorder i32 %stack_var_-104.0, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-96.0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-88.0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_1739c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_17150, { 1, 0, 2 }
  uselistorder i32 %tmp146, { 2, 3, 0, 1 }
  uselistorder i32* %esi.global-to-local, { 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12, 13, 14, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg10, { 1, 0, 2 }
  uselistorder i32 %arg9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17299, { 1, 0 }
}

define i32 @_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_173b0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp148 = ptrtoint i32* %arg1 to i32
  %v0_173b0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_173b1 = load i32, i32* %edi.global-to-local, align 4
  %v0_173b2 = load i32, i32* %esi.global-to-local, align 4
  %v0_173b3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  store i32 %arg7, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v5_173fd = sub i32 %arg6, %arg7
  store i32 %arg3, i32* %edi.global-to-local, align 4
  %v2_17416 = ashr i32 %v5_173fd, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %arg10, i32* %esi.global-to-local, align 4
  %v3_17420 = mul i32 %v2_17416, -1431655765
  %v2_17441 = sub i32 %arg9, %arg5
  %v2_17443 = ashr i32 %v2_17441, ptrtoint (i64* @global_var_2.2539 to i32)
  %v1_17446 = sub i32 %v2_17443, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_17449 = mul i32 %v1_17446, 42
  %v2_17458 = add i32 %v3_17449, %v3_17420
  store i32 %v2_17458, i32* %eax.global-to-local, align 8
  %v2_1745c = sub i32 %arg4, %arg2
  %v2_1745e = ashr i32 %v2_1745c, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17461 = mul i32 %v2_1745e, -1431655765
  %v2_1746f = add i32 %v3_17461, %v2_17458
  store i32 %v2_1746f, i32* %edx.global-to-local, align 4
  %tmp161 = icmp slt i32 %v2_1746f, 1
  br i1 %tmp161, label %dec_label_pc_17657, label %dec_label_pc_1747d

dec_label_pc_1747d:                               ; preds = %dec_label_pc_173b0
  %v1_1747d = add i32 %arg10, 8
  %v2_1747d = inttoptr i32 %v1_1747d to i32*
  %v3_1747d = load i32, i32* %v2_1747d, align 4
  store i32 %v3_1747d, i32* %eax.global-to-local, align 8
  %v1_17480 = inttoptr i32 %arg10 to i32*
  %v2_17480 = load i32, i32* %v1_17480, align 4
  store i32 %v2_17480, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_17488

dec_label_pc_17488:                               ; preds = %dec_label_pc_17597.dec_label_pc_17488_crit_edge, %dec_label_pc_1747d
  %v0_174db = phi i32 [ %v2_17480, %dec_label_pc_1747d ], [ %v1_1748c.pre, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %v0_1748c = phi i32 [ %v3_1747d, %dec_label_pc_1747d ], [ %v0_1748c.pre, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %stack_var_-108.0.off0 = phi i32 [ %arg2, %dec_label_pc_1747d ], [ %stack_var_-108.1, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %stack_var_-100.0 = phi i32 [ %arg3, %dec_label_pc_1747d ], [ %stack_var_-100.1, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %stack_var_-88.0 = phi i32 [ %arg4, %dec_label_pc_1747d ], [ %stack_var_-88.1, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %stack_var_-96.0 = phi i32 [ %arg5, %dec_label_pc_1747d ], [ %stack_var_-96.1, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %stack_var_-112.0 = phi i32 [ %v2_1746f, %dec_label_pc_1747d ], [ %v5_17597, %dec_label_pc_17597.dec_label_pc_17488_crit_edge ]
  %v2_1748c = sub i32 %v0_1748c, %v0_174db
  %v6_1748e = sub i32 %stack_var_-88.0, %stack_var_-108.0.off0
  %v2_17492 = ashr i32 %v2_1748c, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17499 = mul i32 %v2_17492, -1431655765
  %v2_1749f = ashr i32 %v6_1748e, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_174a2 = mul i32 %v2_1749f, -1431655765
  %v2_174a8 = sub i32 %v3_17499, %v3_174a2
  %v8_174a8 = xor i32 %v3_174a2, %v3_17499
  %v9_174a8 = xor i32 %v2_174a8, %v3_17499
  %v10_174a8 = and i32 %v9_174a8, %v8_174a8
  %v11_174a8 = icmp slt i32 %v10_174a8, 0
  %v12_174a8 = icmp eq i32 %v2_174a8, 0
  %v13_174a8 = icmp slt i32 %v2_174a8, 0
  %v3_174aa = icmp ne i1 %v13_174a8, %v11_174a8
  %v4_174aa = or i1 %v12_174a8, %v3_174aa
  %v7_174aa = select i1 %v4_174aa, i32 %v3_17499, i32 %v3_174a2
  %v5_174ad = sub i32 %v7_174aa, %stack_var_-112.0
  %v11_174ad = xor i32 %v7_174aa, %stack_var_-112.0
  %v12_174ad = xor i32 %v5_174ad, %v7_174aa
  %v13_174ad = and i32 %v12_174ad, %v11_174ad
  %v14_174ad = icmp slt i32 %v13_174ad, 0
  %v15_174ad = icmp eq i32 %v5_174ad, 0
  %v16_174ad = icmp slt i32 %v5_174ad, 0
  %v3_174b1 = icmp ne i1 %v16_174ad, %v14_174ad
  %v4_174b1 = or i1 %v15_174ad, %v3_174b1
  %v7_174b1 = select i1 %v4_174b1, i32 %v7_174aa, i32 %stack_var_-112.0
  store i32 %v7_174b1, i32* %ebx.global-to-local, align 4
  %v3_174b8 = mul i32 %v7_174b1, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_174bb = shl i32 %v3_174b8, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_174bb, i32* %eax.global-to-local, align 8
  %v2_174c0 = ashr i32 %v2_174bb, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_174c3 = add i32 %v2_174bb, %stack_var_-108.0.off0
  store i32 %v2_174c3, i32* %edx.global-to-local, align 4
  %v3_174c5 = mul i32 %v2_174c0, -1431655765
  store i32 %v3_174c5, i32* %ebp.global-to-local, align 4
  %tmp162 = icmp slt i32 %v3_174c5, 1
  br i1 %tmp162, label %dec_label_pc_17507, label %dec_label_pc_174d7

dec_label_pc_174d7:                               ; preds = %dec_label_pc_17488
  store i32 %v0_174db, i32* %edi.global-to-local, align 4
  %v0_174dd = load i32, i32* %esi.global-to-local, align 4
  store i32 %v7_174b1, i32* %esi.global-to-local, align 4
  %v2_174e3 = sub i32 %stack_var_-108.0.off0, %v0_174db
  store i32 %v2_174e3, i32* %eax.global-to-local, align 8
  store i32 %v2_174e3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %dec_label_pc_174e8.dec_label_pc_174e8_crit_edge, %dec_label_pc_174d7
  %v1_174e8 = phi i32 [ %v1_174e8.pre, %dec_label_pc_174e8.dec_label_pc_174e8_crit_edge ], [ %v2_174e3, %dec_label_pc_174d7 ]
  %v0_174e8 = phi i32 [ %v0_174e8.pre, %dec_label_pc_174e8.dec_label_pc_174e8_crit_edge ], [ %v0_174db, %dec_label_pc_174d7 ]
  %v3_174e8 = add i32 %v0_174e8, %v1_174e8
  store i32 %v3_174e8, i32* @eax, align 8
  %v1_174ee = add i32 %v0_174e8, 12
  store i32 %v1_174ee, i32* %edi.global-to-local, align 4
  %v3_174f5 = call i32 @function_2d550(i32 %v0_174e8, i32 %v3_174e8)
  store i32 %v3_174f5, i32* %eax.global-to-local, align 8
  %v0_174fa = load i32, i32* %ebp.global-to-local, align 4
  %v1_174fa = sub i32 %v0_174fa, ptrtoint (i1* @global_var_1.2399 to i32)
  %v10_174fa = icmp eq i32 %v1_174fa, 0
  store i32 %v1_174fa, i32* %ebp.global-to-local, align 4
  %v1_174fd = icmp eq i1 %v10_174fa, false
  br i1 %v1_174fd, label %dec_label_pc_174e8.dec_label_pc_174e8_crit_edge, label %dec_label_pc_174ff

dec_label_pc_174e8.dec_label_pc_174e8_crit_edge:  ; preds = %dec_label_pc_174e8
  %v0_174e8.pre = load i32, i32* %edi.global-to-local, align 4
  %v1_174e8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_174e8

dec_label_pc_174ff:                               ; preds = %dec_label_pc_174e8
  %v0_174ff = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_174ff, i32* %ebx.global-to-local, align 4
  store i32 %v0_174dd, i32* %esi.global-to-local, align 4
  %v1_17505 = inttoptr i32 %v0_174dd to i32*
  %v2_17505 = load i32, i32* %v1_17505, align 4
  store i32 %v2_17505, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_17507

dec_label_pc_17507:                               ; preds = %dec_label_pc_174ff, %dec_label_pc_17488
  %v0_17573 = phi i32 [ %v2_17505, %dec_label_pc_174ff ], [ %v0_174db, %dec_label_pc_17488 ]
  %v1_17581 = phi i32 [ %v0_174ff, %dec_label_pc_174ff ], [ %v7_174b1, %dec_label_pc_17488 ]
  %v5_1750b = sub i32 %stack_var_-108.0.off0, %stack_var_-100.0
  %v2_1750f = ashr i32 %v5_1750b, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17512 = mul i32 %v2_1750f, -1431655765
  %v2_17518 = add i32 %v1_17581, %v3_17512
  %v13_17518 = icmp slt i32 %v2_17518, 0
  %v18_17518 = sext i32 %v2_17518 to i64
  store i32 %v2_17518, i32* %edi.global-to-local, align 4
  br i1 %v13_17518, label %dec_label_pc_17640, label %dec_label_pc_17520

dec_label_pc_17520:                               ; preds = %dec_label_pc_17507
  store i32 %v2_174c3, i32* %edx.global-to-local, align 4
  %v8_1752b = icmp sgt i32 %v2_17518, 41
  br i1 %v8_1752b, label %dec_label_pc_1752d, label %dec_label_pc_17573

dec_label_pc_1752d:                               ; preds = %dec_label_pc_17520
  %v5_1753a = mul nsw i64 %v18_17518, 818089009
  %v7_1753a = udiv i64 %v5_1753a, 4294967296
  %v8_1753a = trunc i64 %v7_1753a to i32
  %v2_1753e = ashr i32 %v2_17518, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_1753e, i32* %eax.global-to-local, align 8
  %v2_17541 = sdiv i32 %v8_1753a, 8
  store i32 %v2_17541, i32* %edx.global-to-local, align 4
  %v2_17544 = sub i32 %v2_17541, %v2_1753e
  br label %dec_label_pc_17546

dec_label_pc_17546:                               ; preds = %dec_label_pc_17640, %dec_label_pc_1752d
  %storemerge5 = phi i32 [ -1, %dec_label_pc_17640 ], [ %v2_17544, %dec_label_pc_1752d ]
  %v2_1754a = mul i32 %storemerge5, 4
  %v3_1754a = add i32 %v2_1754a, %stack_var_-96.0
  store i32 %v3_1754a, i32* %eax.global-to-local, align 8
  %v3_17551 = mul i32 %storemerge5, 42
  store i32 %v3_17551, i32* %edx.global-to-local, align 4
  %v1_17554 = inttoptr i32 %v3_1754a to i32*
  %v2_17554 = load i32, i32* %v1_17554, align 4
  %v3_17556 = sub i32 %v2_17518, %v3_17551
  store i32 %v3_17556, i32* %edi.global-to-local, align 4
  store i32 %v2_17554, i32* %edx.global-to-local, align 4
  %v1_17560 = add i32 %v2_17554, 504
  %v2_1756c = mul i32 %v3_17556, 12
  %v3_1756c = add i32 %v2_17554, %v2_1756c
  store i32 %v3_1756c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_17573

dec_label_pc_17573:                               ; preds = %dec_label_pc_17520, %dec_label_pc_17546
  %stack_var_-108.1 = phi i32 [ %v3_1756c, %dec_label_pc_17546 ], [ %v2_174c3, %dec_label_pc_17520 ]
  %stack_var_-100.1 = phi i32 [ %v2_17554, %dec_label_pc_17546 ], [ %stack_var_-100.0, %dec_label_pc_17520 ]
  %stack_var_-88.1 = phi i32 [ %v1_17560, %dec_label_pc_17546 ], [ %stack_var_-88.0, %dec_label_pc_17520 ]
  %stack_var_-96.1 = phi i32 [ %v3_1754a, %dec_label_pc_17546 ], [ %stack_var_-96.0, %dec_label_pc_17520 ]
  store i32 %v0_17573, i32* %edi.global-to-local, align 4
  %v1_17575 = load i32, i32* %esi.global-to-local, align 4
  %v2_17575 = add i32 %v1_17575, 4
  %v3_17575 = inttoptr i32 %v2_17575 to i32*
  %v4_17575 = load i32, i32* %v3_17575, align 4
  %v5_17575 = sub i32 %v0_17573, %v4_17575
  %v2_17578 = ashr i32 %v5_17575, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1757b = mul i32 %v2_17578, -1431655765
  %v2_17581 = add i32 %v3_1757b, %v1_17581
  %v13_17581 = icmp slt i32 %v2_17581, 0
  %v18_17581 = sext i32 %v2_17581 to i64
  store i32 %v2_17581, i32* %edi.global-to-local, align 4
  br i1 %v13_17581, label %dec_label_pc_17628, label %dec_label_pc_17589

dec_label_pc_17589:                               ; preds = %dec_label_pc_17573
  %v9_1758c = icmp sgt i32 %v2_17581, 41
  br i1 %v9_1758c, label %dec_label_pc_175e0, label %dec_label_pc_1758e

dec_label_pc_1758e:                               ; preds = %dec_label_pc_17589
  %v6_1758e = add i32 %v0_17573, %v2_174bb
  store i32 %v6_1758e, i32* %ecx.global-to-local, align 4
  %v1_17592 = add i32 %v1_17575, 8
  %v2_17592 = inttoptr i32 %v1_17592 to i32*
  %v3_17592 = load i32, i32* %v2_17592, align 4
  store i32 %v3_17592, i32* %eax.global-to-local, align 8
  %v2_17595 = inttoptr i32 %v1_17575 to i32*
  store i32 %v6_1758e, i32* %v2_17595, align 4
  br label %dec_label_pc_17597

dec_label_pc_17597:                               ; preds = %dec_label_pc_175f5, %dec_label_pc_1758e
  %v4_17597 = load i32, i32* %ebx.global-to-local, align 4
  %v5_17597 = sub i32 %stack_var_-112.0, %v4_17597
  %v15_17597 = icmp eq i32 %v5_17597, 0
  %v16_17597 = icmp slt i32 %v5_17597, 0
  store i32 %v5_17597, i32* %edx.global-to-local, align 4
  %v3_175a1 = icmp eq i1 %v16_17597, false
  %v4_175a1 = icmp eq i1 %v15_17597, false
  %v5_175a1 = icmp eq i1 %v3_175a1, %v4_175a1
  br i1 %v5_175a1, label %dec_label_pc_17597.dec_label_pc_17488_crit_edge, label %dec_label_pc_175a7.loopexit

dec_label_pc_17597.dec_label_pc_17488_crit_edge:  ; preds = %dec_label_pc_17597
  %v0_1748c.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_1748c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_17488

dec_label_pc_175a7.loopexit:                      ; preds = %dec_label_pc_17597
  %v0_175ab.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_175a7

dec_label_pc_175a7:                               ; preds = %dec_label_pc_175a7.loopexit, %dec_label_pc_17657
  %v0_175ab = phi i32 [ %v0_175ab.pre, %dec_label_pc_175a7.loopexit ], [ %v2_17657, %dec_label_pc_17657 ]
  store i32 %tmp148, i32* %edx.global-to-local, align 4
  store i32 %v0_175ab, i32* %arg1, align 4
  store i32 %tmp148, i32* %ecx.global-to-local, align 4
  %v0_175b1 = load i32, i32* %esi.global-to-local, align 4
  %v1_175b1 = add i32 %v0_175b1, 4
  %v2_175b1 = inttoptr i32 %v1_175b1 to i32*
  %v3_175b1 = load i32, i32* %v2_175b1, align 4
  store i32 %v3_175b1, i32* %edx.global-to-local, align 4
  %v0_175b4 = load i32, i32* %eax.global-to-local, align 8
  %v2_175b4 = add i32 %tmp148, 8
  %v3_175b4 = inttoptr i32 %v2_175b4 to i32*
  store i32 %v0_175b4, i32* %v3_175b4, align 4
  %v0_175b7 = load i32, i32* %esi.global-to-local, align 4
  %v1_175b7 = add i32 %v0_175b7, 12
  %v2_175b7 = inttoptr i32 %v1_175b7 to i32*
  %v3_175b7 = load i32, i32* %v2_175b7, align 4
  store i32 %v3_175b7, i32* %eax.global-to-local, align 8
  %v0_175ba = load i32, i32* %edx.global-to-local, align 4
  %v1_175ba = load i32, i32* %ecx.global-to-local, align 4
  %v2_175ba = add i32 %v1_175ba, 4
  %v3_175ba = inttoptr i32 %v2_175ba to i32*
  store i32 %v0_175ba, i32* %v3_175ba, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_175c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_175c8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_175c8 = add i32 %v1_175c8, 12
  %v3_175c8 = inttoptr i32 %v2_175c8 to i32*
  store i32 %v0_175c8, i32* %v3_175c8, align 4
  %v0_175cb = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_175cb, i32* %eax.global-to-local, align 8
  br i1 false, label %dec_label_pc_17661, label %dec_label_pc_175d3

dec_label_pc_175d3:                               ; preds = %dec_label_pc_175a7
  store i32 %v0_173b3, i32* %ebx.global-to-local, align 4
  store i32 %v0_173b2, i32* %esi.global-to-local, align 4
  store i32 %v0_173b1, i32* %edi.global-to-local, align 4
  store i32 %v0_173b0, i32* %ebp.global-to-local, align 4
  ret i32 %v0_175cb

dec_label_pc_175e0:                               ; preds = %dec_label_pc_17589
  %v5_175e9 = mul nsw i64 %v18_17581, 818089009
  %v7_175e9 = udiv i64 %v5_175e9, 4294967296
  %v8_175e9 = trunc i64 %v7_175e9 to i32
  %v2_175ed = ashr i32 %v2_17581, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_175ed, i32* %eax.global-to-local, align 8
  %v2_175f0 = sdiv i32 %v8_175e9, 8
  store i32 %v2_175f0, i32* %edx.global-to-local, align 4
  %v2_175f3 = sub i32 %v2_175f0, %v2_175ed
  br label %dec_label_pc_175f5

dec_label_pc_175f5:                               ; preds = %dec_label_pc_17628, %dec_label_pc_175e0
  %storemerge = phi i32 [ -1, %dec_label_pc_17628 ], [ %v2_175f3, %dec_label_pc_175e0 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_175f5 = mul i32 %storemerge, 4
  store i32 %v1_175f5, i32* %eax.global-to-local, align 8
  %v2_175fc = add i32 %v1_17575, 12
  %v3_175fc = inttoptr i32 %v2_175fc to i32*
  %v4_175fc = load i32, i32* %v3_175fc, align 4
  %v5_175fc = add i32 %v4_175fc, %v1_175f5
  store i32 %v5_175fc, i32* %eax.global-to-local, align 8
  %v3_175ff = mul i32 %storemerge, 42
  store i32 %v3_175ff, i32* %edx.global-to-local, align 4
  store i32 %v5_175fc, i32* %v3_175fc, align 4
  %v0_17605 = load i32, i32* %eax.global-to-local, align 8
  %v1_17605 = inttoptr i32 %v0_17605 to i32*
  %v2_17605 = load i32, i32* %v1_17605, align 4
  store i32 %v2_17605, i32* %ecx.global-to-local, align 4
  %v2_17607 = load i32, i32* %edx.global-to-local, align 4
  %v3_17607 = sub i32 %v2_17581, %v2_17607
  store i32 %v3_17607, i32* %edi.global-to-local, align 4
  %v3_17609 = mul i32 %v3_17607, 3
  store i32 %v3_17609, i32* %edx.global-to-local, align 4
  %v1_1760c = add i32 %v2_17605, 504
  store i32 %v1_1760c, i32* %eax.global-to-local, align 8
  %v1_17612 = load i32, i32* %esi.global-to-local, align 4
  %v2_17612 = add i32 %v1_17612, 4
  %v3_17612 = inttoptr i32 %v2_17612 to i32*
  store i32 %v2_17605, i32* %v3_17612, align 4
  %v0_17615 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17615 = load i32, i32* %edx.global-to-local, align 4
  %v2_17615 = mul i32 %v1_17615, 4
  %v3_17615 = add i32 %v2_17615, %v0_17615
  store i32 %v3_17615, i32* %ecx.global-to-local, align 4
  %v0_17618 = load i32, i32* %eax.global-to-local, align 8
  %v1_17618 = load i32, i32* %esi.global-to-local, align 4
  %v2_17618 = add i32 %v1_17618, 8
  %v3_17618 = inttoptr i32 %v2_17618 to i32*
  store i32 %v0_17618, i32* %v3_17618, align 4
  %v0_1761b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1761b = load i32, i32* %esi.global-to-local, align 4
  %v2_1761b = inttoptr i32 %v1_1761b to i32*
  store i32 %v0_1761b, i32* %v2_1761b, align 4
  br label %dec_label_pc_17597

dec_label_pc_17628:                               ; preds = %dec_label_pc_17573
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_175f5

dec_label_pc_17640:                               ; preds = %dec_label_pc_17507
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_17546

dec_label_pc_17657:                               ; preds = %dec_label_pc_173b0
  %v1_17657 = inttoptr i32 %arg10 to i32*
  %v2_17657 = load i32, i32* %v1_17657, align 4
  store i32 %v2_17657, i32* %ecx.global-to-local, align 4
  %v1_17659 = add i32 %arg10, 8
  %v2_17659 = inttoptr i32 %v1_17659 to i32*
  %v3_17659 = load i32, i32* %v2_17659, align 4
  store i32 %v3_17659, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_175a7

dec_label_pc_17661:                               ; preds = %dec_label_pc_175a7
  ret i32 %v0_175cb

; uselistorder directives
  uselistorder i32 %v2_17657, { 1, 0 }
  uselistorder i32 %v2_17605, { 1, 0, 2 }
  uselistorder i32 %v2_175f0, { 1, 0 }
  uselistorder i32 %v0_175cb, { 1, 0, 2 }
  uselistorder i32 %v5_17597, { 1, 2, 3, 0 }
  uselistorder i32 %v2_17581, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17575, { 0, 2, 1, 3 }
  uselistorder i32 %v2_17554, { 3, 0, 2, 1 }
  uselistorder i32 %v2_17541, { 1, 0 }
  uselistorder i32 %v2_17518, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_17573, { 2, 1, 0 }
  uselistorder i32 %v0_174e8, { 1, 2, 0 }
  uselistorder i32 %v0_174dd, { 1, 0 }
  uselistorder i32 %v5_174ad, { 1, 2, 0 }
  uselistorder i32 %v7_174aa, { 2, 0, 1, 3 }
  uselistorder i32 %v2_174a8, { 1, 2, 0 }
  uselistorder i32 %v3_174a2, { 1, 0, 2 }
  uselistorder i32 %v3_17499, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-112.0, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-96.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.off0, { 3, 1, 0, 2 }
  uselistorder i32 %v0_174db, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_1746f, { 1, 0, 2 }
  uselistorder i32 %tmp148, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 5, 6, 7, 1, 8, 9, 10, 2, 3, 4, 11, 12, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg10, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_175a7, { 1, 0 }
  uselistorder label %dec_label_pc_17573, { 1, 0 }
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17670:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %tmp83 = ptrtoint i32* %arg1 to i32
  %stack_var_-364 = alloca i32, align 4
  %v0_17670 = load i32, i32* @ebp, align 4
  %v0_17671 = load i32, i32* @edi, align 4
  %v0_17672 = load i32, i32* @esi, align 4
  %v0_17673 = load i32, i32* @ebx, align 4
  %v16_17674 = ptrtoint i32* %stack_var_-364 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 8
  store i32 %arg4, i32* %edx.global-to-local, align 4
  %v0_17688 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %tmp83, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_176a6 = inttoptr i32 %arg3 to i32*
  %v2_176a6 = load i32, i32* %v1_176a6, align 4
  store i32 %v2_176a6, i32* %edi.global-to-local, align 4
  %v1_176a8 = inttoptr i32 %arg4 to i32*
  %v2_176a8 = load i32, i32* %v1_176a8, align 4
  store i32 %v2_176a8, i32* %ebp.global-to-local, align 4
  %v12_176aa = icmp eq i32 %v2_176a6, %v2_176a8
  br i1 %v12_176aa, label %dec_label_pc_17d88, label %dec_label_pc_176b2

dec_label_pc_176b2:                               ; preds = %dec_label_pc_17670
  %v1_176b2 = add i32 %arg2, 8
  %v2_176b2 = inttoptr i32 %v1_176b2 to i32*
  %v3_176b2 = load i32, i32* %v2_176b2, align 4
  store i32 %v3_176b2, i32* %ecx.global-to-local, align 4
  %v12_176b9 = icmp eq i32 %v2_176a6, %v3_176b2
  %v1_176bb = add i32 %arg2, 24
  %v2_176bb = inttoptr i32 %v1_176bb to i32*
  %v3_176bb = load i32, i32* %v2_176bb, align 4
  store i32 %v3_176bb, i32* %ecx.global-to-local, align 4
  br i1 %v12_176b9, label %dec_label_pc_17cb8, label %dec_label_pc_176c8

dec_label_pc_176c8:                               ; preds = %dec_label_pc_176b2, %dec_label_pc_17cb8
  %v1_176c8 = add i32 %arg4, 12
  %v2_176c8 = inttoptr i32 %v1_176c8 to i32*
  %v3_176c8 = load i32, i32* %v2_176c8, align 4
  store i32 %v3_176c8, i32* %ecx.global-to-local, align 4
  %v1_176cf = add i32 %arg3, 12
  %v2_176cf = inttoptr i32 %v1_176cf to i32*
  %v3_176cf = load i32, i32* %v2_176cf, align 4
  store i32 %v3_176cf, i32* %ecx.global-to-local, align 4
  %v1_176d6 = add i32 %arg4, 4
  %v2_176d6 = inttoptr i32 %v1_176d6 to i32*
  %v3_176d6 = load i32, i32* %v2_176d6, align 4
  store i32 %v3_176d6, i32* %ecx.global-to-local, align 4
  %v1_176dd = add i32 %arg3, 8
  %v2_176dd = inttoptr i32 %v1_176dd to i32*
  %v3_176dd = load i32, i32* %v2_176dd, align 4
  store i32 %v3_176dd, i32* %ecx.global-to-local, align 4
  %v1_176e0 = add i32 %arg3, 4
  %v2_176e0 = inttoptr i32 %v1_176e0 to i32*
  %v3_176e0 = load i32, i32* %v2_176e0, align 4
  store i32 %v3_176e0, i32* %eax.global-to-local, align 8
  %v5_176eb = sub i32 %v3_176c8, %v3_176cf
  %v2_176f3 = sdiv i32 %v5_176eb, 4
  %tmp98 = mul i32 %v2_176f3, 42
  %v5_17702 = sub i32 %v2_176a8, %v3_176d6
  %v2_17706 = sdiv i32 %v5_17702, 4
  %v2_1771b = sub i32 %v3_176dd, %v2_176a6
  %v2_1771d = ashr i32 %v2_1771b, ptrtoint (i64* @global_var_2.2539 to i32)
  %tmp110 = add i32 %v2_1771d, %v2_17706
  %tmp111 = mul i32 %tmp110, -1431655765
  %v5_1770f = add i32 %tmp98, -42
  %v5_17726 = add i32 %v5_1770f, %tmp111
  store i32 %v5_17726, i32* %ecx.global-to-local, align 4
  %v1_1772e = add i32 %arg2, 16
  %v2_1772e = inttoptr i32 %v1_1772e to i32*
  %v3_1772e = load i32, i32* %v2_1772e, align 4
  store i32 %v3_1772e, i32* %ecx.global-to-local, align 4
  %v5_17739 = sub i32 %v3_1772e, %v3_176b2
  store i32 %v5_17739, i32* %eax.global-to-local, align 8
  %v1_1773d = add i32 %arg2, 20
  %v2_1773d = inttoptr i32 %v1_1773d to i32*
  %v3_1773d = load i32, i32* %v2_1773d, align 4
  %v2_17740 = ashr i32 %v5_17739, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17743 = mul i32 %v2_17740, -1431655765
  %v5_17751 = sub i32 %v3_176cf, %v3_1773d
  %v5_1775b = sub i32 %v2_176a6, %v3_176e0
  %v2_1775f = sdiv i32 %v5_17751, 4
  %v2_17765 = sdiv i32 %v5_1775b, 4
  %tmp99 = mul i32 %v2_1775f, 42
  %v3_17768 = add i32 %tmp99, -42
  store i32 %v3_17768, i32* %ecx.global-to-local, align 4
  %v3_1776b = mul i32 %v2_17765, -1431655765
  %v2_17771 = add i32 %v3_17768, %v3_1776b
  store i32 %v2_17771, i32* %eax.global-to-local, align 8
  %v1_17773 = add i32 %arg2, 36
  %v2_17773 = inttoptr i32 %v1_17773 to i32*
  %v3_17773 = load i32, i32* %v2_17773, align 4
  store i32 %v3_17773, i32* %ecx.global-to-local, align 4
  %v5_17776 = add i32 %v2_17771, %v3_17743
  store i32 %v5_17776, i32* %eax.global-to-local, align 8
  %v1_1777e = add i32 %arg2, 28
  %v2_1777e = inttoptr i32 %v1_1777e to i32*
  %v3_1777e = load i32, i32* %v2_1777e, align 4
  %v5_17789 = sub i32 %v3_176bb, %v3_1777e
  %v2_1778d = ashr i32 %v5_17789, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17790 = mul i32 %v2_1778d, -1431655765
  %v5_1779c = sub i32 %v3_17773, %v3_1773d
  %v2_177a0 = sdiv i32 %v5_1779c, 4
  %tmp100 = mul i32 %v2_177a0, 42
  %v3_177a6 = sub i32 -42, %v5_17726
  %v5_177a9 = add i32 %v3_177a6, %v3_17743
  %v5_177ad = add i32 %v5_177a9, %tmp100
  %v5_177b1 = add i32 %v5_177ad, %v3_17790
  %v2_177b5 = udiv i32 %v5_177b1, 2
  store i32 %v2_177b5, i32* %eax.global-to-local, align 8
  %tmp112 = icmp ugt i32 %v5_17776, %v2_177b5
  br i1 %tmp112, label %dec_label_pc_179f8, label %dec_label_pc_177c1

dec_label_pc_17730:                               ; preds = %dec_label_pc_17d88, %dec_label_pc_17cc0, %dec_label_pc_17b7a, %dec_label_pc_178fc
  %v4_177bb = phi i32 [ %v1_17d3d, %dec_label_pc_17cc0 ], [ %v1_17be7, %dec_label_pc_17b7a ], [ %v3_1796e, %dec_label_pc_178fc ], [ %v0_179df, %dec_label_pc_17d88 ]
  ret i32 %v4_177bb

dec_label_pc_177c1:                               ; preds = %dec_label_pc_176c8
  br i1 %v12_176b9, label %dec_label_pc_178af, label %dec_label_pc_177cb

dec_label_pc_177cb:                               ; preds = %dec_label_pc_177c1
  %v1_177cb = add i32 %arg4, 8
  %v2_177cb = inttoptr i32 %v1_177cb to i32*
  %v3_177cb = load i32, i32* %v2_177cb, align 4
  store i32 %v3_177cb, i32* %eax.global-to-local, align 8
  %v1_177ce = add i32 %arg2, 12
  %v2_177ce = inttoptr i32 %v1_177ce to i32*
  %v3_177ce = load i32, i32* %v2_177ce, align 4
  store i32 %v2_176a8, i32* %stack_var_-160, align 4
  %v2_1784a = ptrtoint i32* %stack_var_-208 to i32
  store i32 %v2_1784a, i32* %edx.global-to-local, align 4
  %v2_17858 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v3_176b2, i32* @eax, align 8
  store i32 %v3_1773d, i32* %ecx.global-to-local, align 4
  store i32 %v2_1784a, i32* %stack_var_-364, align 4
  %v10_17892 = call i32 @function_2e710(i32 %v2_1784a, i32 %v3_176b2, i32 %v3_177ce, i32 %v3_1772e, i32 %v3_1773d, i32 %v2_176a6, i32 %v3_176e0, i32 %v3_176dd, i32 %v3_176cf, i32 %v2_17858)
  store i32 %v10_17892, i32* %eax.global-to-local, align 8
  %v0_17897 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17897 = add i32 %v0_17897, 8
  %v2_17897 = inttoptr i32 %v1_17897 to i32*
  %v3_17897 = load i32, i32* %v2_17897, align 4
  store i32 %v3_17897, i32* %ecx.global-to-local, align 4
  %v16_1789a = ptrtoint i32* %stack_var_-368 to i32
  %v1_178a1 = add i32 %v0_17897, 16
  %v2_178a1 = inttoptr i32 %v1_178a1 to i32*
  %v3_178a1 = load i32, i32* %v2_178a1, align 4
  store i32 %v3_178a1, i32* %ecx.global-to-local, align 4
  %v1_178a8 = add i32 %v0_17897, 20
  %v2_178a8 = inttoptr i32 %v1_178a8 to i32*
  %v3_178a8 = load i32, i32* %v2_178a8, align 4
  store i32 %v3_178a8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_178af

dec_label_pc_178af:                               ; preds = %dec_label_pc_177c1, %dec_label_pc_177cb
  %v0_178b2 = phi i32 [ %v16_1789a, %dec_label_pc_177cb ], [ %v16_17674, %dec_label_pc_177c1 ]
  %v0_178af = phi i32 [ %v0_17897, %dec_label_pc_177cb ], [ %arg2, %dec_label_pc_177c1 ]
  %stack_var_-304.0 = phi i32 [ %v3_17897, %dec_label_pc_177cb ], [ %v3_17790, %dec_label_pc_177c1 ]
  %stack_var_-312.0 = phi i32 [ %v3_178a8, %dec_label_pc_177cb ], [ %tmp43, %dec_label_pc_177c1 ]
  %v1_178af = add i32 %v0_178af, 12
  %v2_178af = inttoptr i32 %v1_178af to i32*
  %v3_178af = load i32, i32* %v2_178af, align 4
  store i32 %v3_178af, i32* %ecx.global-to-local, align 4
  %v1_178b2 = add i32 %v0_178b2, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_178b2 = inttoptr i32 %v1_178b2 to i32*
  %v3_178b2 = load i32, i32* %v2_178b2, align 4
  store i32 %v3_178b2, i32* %eax.global-to-local, align 8
  %v2_178b6 = add i32 %v0_178b2, 68
  %v3_178b6 = inttoptr i32 %v2_178b6 to i32*
  store i32 %v3_178af, i32* %v3_178b6, align 4
  %v0_178ba = load i32, i32* %eax.global-to-local, align 8
  %v1_178ba = load i32, i32* %ecx.global-to-local, align 4
  %v2_178ba = sub i32 %v0_178ba, %v1_178ba
  %v2_178bc = sdiv i32 %v2_178ba, 4
  %v3_178bf = mul i32 %v2_178bc, -1431655765
  store i32 %v3_178bf, i32* %eax.global-to-local, align 8
  %v1_178c5 = load i32, i32* @esp, align 4
  %v2_178c5 = add i32 %v1_178c5, 80
  %v3_178c5 = inttoptr i32 %v2_178c5 to i32*
  %v4_178c5 = load i32, i32* %v3_178c5, align 4
  %v5_178c5 = add i32 %v4_178c5, %v3_178bf
  %v16_178c5 = icmp slt i32 %v5_178c5, 0
  store i32 %v5_178c5, i32* %eax.global-to-local, align 8
  %v2_178c9 = add i32 %v1_178c5, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_178c9 = inttoptr i32 %v2_178c9 to i32*
  store i32 %v5_178c5, i32* %v3_178c9, align 4
  br i1 %v16_178c5, label %dec_label_pc_178af.dec_label_pc_17da8_crit_edge, label %dec_label_pc_178d3

dec_label_pc_178af.dec_label_pc_17da8_crit_edge:  ; preds = %dec_label_pc_178af
  %v0_17da8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_17da8

dec_label_pc_178d3:                               ; preds = %dec_label_pc_178af
  %v0_178d3 = load i32, i32* %eax.global-to-local, align 8
  %v8_178d6 = icmp sgt i32 %v0_178d3, 41
  %v0_17c28 = load i32, i32* @esp, align 4
  br i1 %v8_178d6, label %dec_label_pc_17c28, label %dec_label_pc_178dc

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178d3
  %v1_178dc = add i32 %v0_17c28, 80
  %v2_178dc = inttoptr i32 %v1_178dc to i32*
  %v3_178dc = load i32, i32* %v2_178dc, align 4
  store i32 %v3_178dc, i32* %edx.global-to-local, align 4
  %v0_178e0 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_178e0, i32* %ebp.global-to-local, align 4
  %v1_178e2 = add i32 %v0_17c28, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_178e2 = inttoptr i32 %v1_178e2 to i32*
  %v3_178e2 = load i32, i32* %v2_178e2, align 4
  store i32 %v3_178e2, i32* %edi.global-to-local, align 4
  %v3_178e6 = mul i32 %v3_178dc, 3
  store i32 %v3_178e6, i32* %eax.global-to-local, align 8
  %v1_178e9 = add i32 %v0_17c28, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_178e9 = inttoptr i32 %v1_178e9 to i32*
  %v3_178e9 = load i32, i32* %v2_178e9, align 4
  store i32 %v3_178e9, i32* %edx.global-to-local, align 4
  %v2_178ed = mul i32 %v3_178dc, 12
  %v3_178ed = add i32 %v3_178e9, %v2_178ed
  store i32 %v3_178ed, i32* %eax.global-to-local, align 8
  %v2_178f0 = add i32 %v0_17c28, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_178f0 = inttoptr i32 %v2_178f0 to i32*
  store i32 %v3_178ed, i32* %v3_178f0, align 4
  %v0_178f4 = load i32, i32* @esp, align 4
  %v1_178f4 = add i32 %v0_178f4, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_178f4 = inttoptr i32 %v1_178f4 to i32*
  %v3_178f4 = load i32, i32* %v2_178f4, align 4
  store i32 %v3_178f4, i32* %eax.global-to-local, align 8
  %v2_178f8 = add i32 %v0_178f4, 72
  %v3_178f8 = inttoptr i32 %v2_178f8 to i32*
  store i32 %v3_178f4, i32* %v3_178f8, align 4
  br label %dec_label_pc_178fc

dec_label_pc_178fc:                               ; preds = %dec_label_pc_17c4b, %dec_label_pc_178dc
  %v0_178fc = load i32, i32* @esp, align 4
  %v1_178fc = add i32 %v0_178fc, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_178fc = inttoptr i32 %v1_178fc to i32*
  %v3_178fc = load i32, i32* %v2_178fc, align 4
  store i32 %v3_178fc, i32* %eax.global-to-local, align 8
  %v1_17900 = add i32 %v0_178fc, 72
  %v2_17900 = inttoptr i32 %v1_17900 to i32*
  %v3_17900 = load i32, i32* %v2_17900, align 4
  store i32 %v3_17900, i32* %edx.global-to-local, align 4
  %v0_17904 = load i32, i32* %ecx.global-to-local, align 4
  %v2_17904 = add i32 %v0_178fc, 52
  %v3_17904 = inttoptr i32 %v2_17904 to i32*
  store i32 %v0_17904, i32* %v3_17904, align 4
  %v0_17908 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17908 = load i32, i32* @esp, align 4
  %v2_17908 = add i32 %v1_17908, 240
  %v3_17908 = inttoptr i32 %v2_17908 to i32*
  store i32 %v0_17908, i32* %v3_17908, align 4
  %v0_1790f = load i32, i32* %eax.global-to-local, align 8
  %v1_1790f = load i32, i32* @esp, align 4
  %v2_1790f = add i32 %v1_1790f, 236
  %v3_1790f = inttoptr i32 %v2_1790f to i32*
  store i32 %v0_1790f, i32* %v3_1790f, align 4
  %v0_17916 = load i32, i32* @esp, align 4
  %v1_17916 = add i32 %v0_17916, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_17916 = inttoptr i32 %v1_17916 to i32*
  %v3_17916 = load i32, i32* %v2_17916, align 4
  store i32 %v3_17916, i32* %eax.global-to-local, align 8
  %v0_1791a = load i32, i32* %edx.global-to-local, align 4
  %v2_1791a = add i32 %v0_17916, ptrtoint (i32* @global_var_f4.2449 to i32)
  %v3_1791a = inttoptr i32 %v2_1791a to i32*
  store i32 %v0_1791a, i32* %v3_1791a, align 4
  %v0_17921 = load i32, i32* @esp, align 4
  %v1_17921 = add i32 %v0_17921, 68
  %v2_17921 = inttoptr i32 %v1_17921 to i32*
  %v3_17921 = load i32, i32* %v2_17921, align 4
  store i32 %v3_17921, i32* %edx.global-to-local, align 4
  %v0_17925 = load i32, i32* %edi.global-to-local, align 4
  %v2_17925 = add i32 %v0_17921, ptrtoint (i8** @global_var_f8.2448 to i32)
  %v3_17925 = inttoptr i32 %v2_17925 to i32*
  store i32 %v0_17925, i32* %v3_17925, align 4
  %v0_1792c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1792c = load i32, i32* @esp, align 4
  %v2_1792c = inttoptr i32 %v1_1792c to i32*
  store i32 %v0_1792c, i32* %v2_1792c, align 4
  %v0_1792f = load i32, i32* %eax.global-to-local, align 8
  %v1_1792f = load i32, i32* @esp, align 4
  %v2_1792f = add i32 %v1_1792f, ptrtoint (i32* @global_var_dc.2450 to i32)
  %v3_1792f = inttoptr i32 %v2_1792f to i32*
  store i32 %v0_1792f, i32* %v3_1792f, align 4
  %v0_17936 = load i32, i32* @esp, align 4
  %v1_17936 = add i32 %v0_17936, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_17936 = inttoptr i32 %v1_17936 to i32*
  %v3_17936 = load i32, i32* %v2_17936, align 4
  store i32 %v3_17936, i32* %eax.global-to-local, align 8
  %v0_1793a = load i32, i32* %edx.global-to-local, align 4
  %v2_1793a = add i32 %v0_17936, ptrtoint (i32* @global_var_e0.2706 to i32)
  %v3_1793a = inttoptr i32 %v2_1793a to i32*
  store i32 %v0_1793a, i32* %v3_1793a, align 4
  %v0_17941 = load i32, i32* @esp, align 4
  %v1_17941 = add i32 %v0_17941, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_17941 = inttoptr i32 %v1_17941 to i32*
  %v3_17941 = load i32, i32* %v2_17941, align 4
  store i32 %v3_17941, i32* %edx.global-to-local, align 4
  %v0_17945 = load i32, i32* %eax.global-to-local, align 8
  %v2_17945 = add i32 %v0_17941, 228
  %v3_17945 = inttoptr i32 %v2_17945 to i32*
  store i32 %v0_17945, i32* %v3_17945, align 4
  %v0_1794c = load i32, i32* @esp, align 4
  %v1_1794c = add i32 %v0_1794c, 236
  %v2_17953 = add i32 %v0_1794c, 8
  %v3_17953 = inttoptr i32 %v2_17953 to i32*
  store i32 %v1_1794c, i32* %v3_17953, align 4
  %v0_17957 = load i32, i32* @esp, align 4
  %v1_17957 = add i32 %v0_17957, ptrtoint (i32* @global_var_dc.2450 to i32)
  store i32 %v1_17957, i32* @eax, align 8
  %v0_1795e = load i32, i32* %edx.global-to-local, align 4
  %v2_1795e = add i32 %v0_17957, 232
  %v3_1795e = inttoptr i32 %v2_1795e to i32*
  store i32 %v0_1795e, i32* %v3_1795e, align 4
  %v0_17965 = load i32, i32* @eax, align 8
  %v1_17965 = load i32, i32* @esp, align 4
  %v2_17965 = add i32 %v1_17965, 4
  %v3_17965 = inttoptr i32 %v2_17965 to i32*
  store i32 %v0_17965, i32* %v3_17965, align 4
  %v3_17969 = call i32 @function_2c990(i32 %stack_var_-312.0, i32 %v3_1773d, i32 %stack_var_-304.0)
  store i32 %v3_17969, i32* %eax.global-to-local, align 8
  %v0_1796e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1796e = add i32 %v0_1796e, 20
  %v2_1796e = inttoptr i32 %v1_1796e to i32*
  %v3_1796e = load i32, i32* %v2_1796e, align 4
  store i32 %v3_1796e, i32* %eax.global-to-local, align 8
  %v0_17971 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_17971, i32* @edx, align 4
  br label %dec_label_pc_17730

dec_label_pc_179e7:                               ; preds = %dec_label_pc_17d88
  store i32 %v0_17673, i32* %ebx.global-to-local, align 4
  store i32 %v0_17672, i32* %esi.global-to-local, align 4
  store i32 %v0_17671, i32* %edi.global-to-local, align 4
  store i32 %v0_17670, i32* %ebp.global-to-local, align 4
  ret i32 %v0_179df

dec_label_pc_179f8:                               ; preds = %dec_label_pc_176c8
  %v15_179f8 = icmp eq i32 %v2_176a8, %v3_176bb
  br i1 %v15_179f8, label %dec_label_pc_17af2, label %dec_label_pc_17a02

dec_label_pc_17a02:                               ; preds = %dec_label_pc_179f8
  %v2_17a8f = ptrtoint i32* %stack_var_-208 to i32
  store i32 %v2_17a8f, i32* %edx.global-to-local, align 4
  store i32 %v3_176d6, i32* %ecx.global-to-local, align 4
  store i32 %v3_176c8, i32* @eax, align 8
  store i32 %v2_17a8f, i32* %stack_var_-364, align 4
  %v1_17ac4 = call i32 @function_2ea20(i32 %v2_17a8f)
  store i32 %v1_17ac4, i32* %eax.global-to-local, align 8
  %v0_17ac9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17ac9 = add i32 %v0_17ac9, 24
  %v2_17ac9 = inttoptr i32 %v1_17ac9 to i32*
  %v3_17ac9 = load i32, i32* %v2_17ac9, align 4
  store i32 %v3_17ac9, i32* %ecx.global-to-local, align 4
  %v16_17acc = ptrtoint i32* %stack_var_-368 to i32
  %v1_17ad3 = add i32 %v0_17ac9, 28
  %v2_17ad3 = inttoptr i32 %v1_17ad3 to i32*
  %v3_17ad3 = load i32, i32* %v2_17ad3, align 4
  store i32 %v3_17ad3, i32* %ecx.global-to-local, align 4
  store i32 %v3_17ac9, i32* %eax.global-to-local, align 8
  %v1_17ade = add i32 %v0_17ac9, 36
  %v2_17ade = inttoptr i32 %v1_17ade to i32*
  %v3_17ade = load i32, i32* %v2_17ade, align 4
  store i32 %v3_17ade, i32* %ecx.global-to-local, align 4
  %v5_17ae1 = sub i32 %v3_17ac9, %v3_17ad3
  %v2_17ae5 = ashr i32 %v5_17ae1, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_17ae8 = mul i32 %v2_17ae5, -1431655765
  store i32 %v3_17ae8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_17af2

dec_label_pc_17af2:                               ; preds = %dec_label_pc_179f8, %dec_label_pc_17a02
  %v0_17af6 = phi i32 [ %v0_17ac9, %dec_label_pc_17a02 ], [ %arg2, %dec_label_pc_179f8 ]
  %v1_17afd = phi i32 [ %v16_17acc, %dec_label_pc_17a02 ], [ %v16_17674, %dec_label_pc_179f8 ]
  %stack_var_-308.0 = phi i32 [ %v3_17ae8, %dec_label_pc_17a02 ], [ %v3_1773d, %dec_label_pc_179f8 ]
  %v1_17af2 = add i32 %v1_17afd, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_17af2 = inttoptr i32 %v1_17af2 to i32*
  %v3_17af2 = load i32, i32* %v2_17af2, align 4
  store i32 %v3_17af2, i32* %edx.global-to-local, align 4
  %v1_17af6 = add i32 %v0_17af6, 32
  %v2_17af6 = inttoptr i32 %v1_17af6 to i32*
  %v3_17af6 = load i32, i32* %v2_17af6, align 4
  store i32 %v3_17af6, i32* %eax.global-to-local, align 8
  %v2_17af9 = add i32 %v1_17afd, 80
  %v3_17af9 = inttoptr i32 %v2_17af9 to i32*
  %v4_17af9 = load i32, i32* %v3_17af9, align 4
  %v5_17af9 = sub i32 %v3_17af2, %v4_17af9
  %v16_17af9 = icmp slt i32 %v5_17af9, 0
  store i32 %v5_17af9, i32* %edx.global-to-local, align 4
  %v2_17afd = add i32 %v1_17afd, 68
  %v3_17afd = inttoptr i32 %v2_17afd to i32*
  store i32 %v3_17af6, i32* %v3_17afd, align 4
  %v0_17b01 = load i32, i32* %edx.global-to-local, align 4
  %v1_17b01 = load i32, i32* @esp, align 4
  %v2_17b01 = add i32 %v1_17b01, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_17b01 = inttoptr i32 %v2_17b01 to i32*
  store i32 %v0_17b01, i32* %v3_17b01, align 4
  br i1 %v16_17af9, label %dec_label_pc_17af2.dec_label_pc_17dc8_crit_edge, label %dec_label_pc_17b0b

dec_label_pc_17af2.dec_label_pc_17dc8_crit_edge:  ; preds = %dec_label_pc_17af2
  %v0_17dc8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_17dc8

dec_label_pc_17b0b:                               ; preds = %dec_label_pc_17af2
  %v0_17b0b = load i32, i32* %edx.global-to-local, align 4
  %v7_17b0e = icmp sgt i32 %v0_17b0b, 41
  %v0_17b10 = load i32, i32* @esp, align 4
  br i1 %v7_17b0e, label %dec_label_pc_17b10, label %dec_label_pc_17b58

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17b0b
  %v1_17b10 = add i32 %v0_17b10, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_17b10 = inttoptr i32 %v1_17b10 to i32*
  %v3_17b10 = load i32, i32* %v2_17b10, align 4
  store i32 %v3_17b10, i32* %edi.global-to-local, align 4
  %tmp106 = icmp slt i32 %v3_17b10, 1
  br i1 %tmp106, label %dec_label_pc_17dc8, label %dec_label_pc_17b1c

dec_label_pc_17b1c:                               ; preds = %dec_label_pc_17b10
  %v3_17b1c = load i32, i32* %v2_17b10, align 4
  %v3_17b25 = sext i32 %v3_17b1c to i64
  %v4_17b25 = mul nsw i64 %v3_17b25, 818089009
  %v5_17b25 = trunc i64 %v4_17b25 to i32
  %v6_17b25 = udiv i64 %v4_17b25, 4294967296
  %v7_17b25 = trunc i64 %v6_17b25 to i32
  store i32 %v5_17b25, i32* %eax.global-to-local, align 8
  store i32 %v7_17b25, i32* %edx.global-to-local, align 4
  %v3_17b27 = load i32, i32* %v2_17b10, align 4
  %v2_17b2b = sdiv i32 %v7_17b25, 8
  store i32 %v2_17b2b, i32* %edx.global-to-local, align 4
  %v2_17b2e = ashr i32 %v3_17b27, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_17b2e, i32* %eax.global-to-local, align 8
  %v2_17b31 = sub i32 %v2_17b2b, %v2_17b2e
  br label %dec_label_pc_17b33

dec_label_pc_17b33:                               ; preds = %dec_label_pc_17dc8, %dec_label_pc_17b1c
  %v1_17b41 = phi i32 [ %v0_17dc8, %dec_label_pc_17dc8 ], [ %v0_17b10, %dec_label_pc_17b1c ]
  %storemerge5 = phi i32 [ -1, %dec_label_pc_17dc8 ], [ %v2_17b31, %dec_label_pc_17b1c ]
  store i32 %storemerge5, i32* %edx.global-to-local, align 4
  %v0_17b33 = load i32, i32* %ecx.global-to-local, align 4
  %v2_17b33 = mul i32 %storemerge5, 4
  %v3_17b33 = add i32 %v0_17b33, %v2_17b33
  store i32 %v3_17b33, i32* %edi.global-to-local, align 4
  %v1_17b36 = inttoptr i32 %v3_17b33 to i32*
  %v2_17b36 = load i32, i32* %v1_17b36, align 4
  store i32 %v2_17b36, i32* %ebp.global-to-local, align 4
  %v3_17b38 = mul i32 %storemerge5, 42
  store i32 %v3_17b38, i32* %edx.global-to-local, align 4
  %v1_17b3b = add i32 %v2_17b36, 504
  store i32 %v1_17b3b, i32* %eax.global-to-local, align 8
  %v2_17b41 = add i32 %v1_17b41, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_17b41 = inttoptr i32 %v2_17b41 to i32*
  store i32 %v1_17b3b, i32* %v3_17b41, align 4
  %v0_17b45 = load i32, i32* @esp, align 4
  %v1_17b45 = add i32 %v0_17b45, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_17b45 = inttoptr i32 %v1_17b45 to i32*
  %v3_17b45 = load i32, i32* %v2_17b45, align 4
  %v1_17b49 = load i32, i32* %edx.global-to-local, align 4
  %v2_17b49 = sub i32 %v3_17b45, %v1_17b49
  %v0_17b4e = load i32, i32* %ebp.global-to-local, align 4
  %v2_17b4e = mul i32 %v2_17b49, 12
  %v3_17b4e = add i32 %v0_17b4e, %v2_17b4e
  store i32 %v3_17b4e, i32* %eax.global-to-local, align 8
  %v2_17b52 = add i32 %v0_17b45, ptrtoint (i32* @global_var_38.2432 to i32)
  %v3_17b52 = inttoptr i32 %v2_17b52 to i32*
  store i32 %v3_17b4e, i32* %v3_17b52, align 4
  br label %dec_label_pc_17b7a

dec_label_pc_17b58:                               ; preds = %dec_label_pc_17b0b
  %v1_17b58 = add i32 %v0_17b10, 80
  %v2_17b58 = inttoptr i32 %v1_17b58 to i32*
  %v3_17b58 = load i32, i32* %v2_17b58, align 4
  store i32 %v3_17b58, i32* %eax.global-to-local, align 8
  %v0_17b5c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_17b5c, i32* %edi.global-to-local, align 4
  %v1_17b5e = add i32 %v0_17b10, 72
  %v2_17b5e = inttoptr i32 %v1_17b5e to i32*
  %v3_17b5e = load i32, i32* %v2_17b5e, align 4
  store i32 %v3_17b5e, i32* %edx.global-to-local, align 4
  %v1_17b62 = add i32 %v0_17b10, 84
  %v2_17b62 = inttoptr i32 %v1_17b62 to i32*
  %v3_17b62 = load i32, i32* %v2_17b62, align 4
  store i32 %v3_17b62, i32* %ebp.global-to-local, align 4
  %v2_17b6b = mul i32 %v3_17b58, -12
  %v3_17b6b = add i32 %v3_17b5e, %v2_17b6b
  store i32 %v3_17b6b, i32* %eax.global-to-local, align 8
  %v2_17b6e = add i32 %v0_17b10, ptrtoint (i32* @global_var_38.2432 to i32)
  %v3_17b6e = inttoptr i32 %v2_17b6e to i32*
  store i32 %v3_17b6b, i32* %v3_17b6e, align 4
  %v0_17b72 = load i32, i32* @esp, align 4
  %v1_17b72 = add i32 %v0_17b72, 68
  %v2_17b72 = inttoptr i32 %v1_17b72 to i32*
  %v3_17b72 = load i32, i32* %v2_17b72, align 4
  store i32 %v3_17b72, i32* %eax.global-to-local, align 8
  %v2_17b76 = add i32 %v0_17b72, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_17b76 = inttoptr i32 %v2_17b76 to i32*
  store i32 %v3_17b72, i32* %v3_17b76, align 4
  br label %dec_label_pc_17b7a

dec_label_pc_17b7a:                               ; preds = %dec_label_pc_17b58, %dec_label_pc_17b33
  %v0_17b7a = load i32, i32* @esp, align 4
  %v1_17b7a = add i32 %v0_17b7a, 72
  %v2_17b7a = inttoptr i32 %v1_17b7a to i32*
  %v3_17b7a = load i32, i32* %v2_17b7a, align 4
  store i32 %v3_17b7a, i32* %edx.global-to-local, align 4
  %v0_17b7e = load i32, i32* %ecx.global-to-local, align 4
  %v2_17b7e = add i32 %v0_17b7a, ptrtoint (i32* @global_var_148.2707 to i32)
  %v3_17b7e = inttoptr i32 %v2_17b7e to i32*
  store i32 %v0_17b7e, i32* %v3_17b7e, align 4
  %v0_17b85 = load i32, i32* @esp, align 4
  %v1_17b85 = add i32 %v0_17b85, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_17b85 = inttoptr i32 %v1_17b85 to i32*
  %v3_17b85 = load i32, i32* %v2_17b85, align 4
  store i32 %v3_17b85, i32* %ecx.global-to-local, align 4
  %v1_17b89 = add i32 %v0_17b85, 84
  %v2_17b89 = inttoptr i32 %v1_17b89 to i32*
  %v3_17b89 = load i32, i32* %v2_17b89, align 4
  store i32 %v3_17b89, i32* %eax.global-to-local, align 8
  %v0_17b8d = load i32, i32* %ebp.global-to-local, align 4
  %v2_17b8d = add i32 %v0_17b85, 304
  %v3_17b8d = inttoptr i32 %v2_17b8d to i32*
  store i32 %v0_17b8d, i32* %v3_17b8d, align 4
  %v0_17b94 = load i32, i32* %edx.global-to-local, align 4
  %v1_17b94 = load i32, i32* @esp, align 4
  %v2_17b94 = add i32 %v1_17b94, 316
  %v3_17b94 = inttoptr i32 %v2_17b94 to i32*
  store i32 %v0_17b94, i32* %v3_17b94, align 4
  %v0_17b9b = load i32, i32* @esp, align 4
  %v1_17b9b = add i32 %v0_17b9b, 68
  %v2_17b9b = inttoptr i32 %v1_17b9b to i32*
  %v3_17b9b = load i32, i32* %v2_17b9b, align 4
  store i32 %v3_17b9b, i32* %edx.global-to-local, align 4
  %v0_17b9f = load i32, i32* %ecx.global-to-local, align 4
  %v2_17b9f = add i32 %v0_17b9b, 300
  %v3_17b9f = inttoptr i32 %v2_17b9f to i32*
  store i32 %v0_17b9f, i32* %v3_17b9f, align 4
  %v0_17ba6 = load i32, i32* @esp, align 4
  %v1_17ba6 = add i32 %v0_17ba6, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_17ba6 = inttoptr i32 %v1_17ba6 to i32*
  %v3_17ba6 = load i32, i32* %v2_17ba6, align 4
  store i32 %v3_17ba6, i32* %ecx.global-to-local, align 4
  %v0_17baa = load i32, i32* %eax.global-to-local, align 8
  %v2_17baa = add i32 %v0_17ba6, ptrtoint (i32* @global_var_140.2708 to i32)
  %v3_17baa = inttoptr i32 %v2_17baa to i32*
  store i32 %v0_17baa, i32* %v3_17baa, align 4
  %v0_17bb1 = load i32, i32* @esp, align 4
  %v1_17bb1 = add i32 %v0_17bb1, 316
  %v2_17bb8 = add i32 %v0_17bb1, 8
  %v3_17bb8 = inttoptr i32 %v2_17bb8 to i32*
  store i32 %v1_17bb1, i32* %v3_17bb8, align 4
  %v0_17bbc = load i32, i32* @esp, align 4
  %v1_17bbc = add i32 %v0_17bbc, 300
  store i32 %v1_17bbc, i32* @eax, align 8
  %v0_17bc3 = load i32, i32* %edx.global-to-local, align 4
  %v2_17bc3 = add i32 %v0_17bbc, ptrtoint (i32* @global_var_144.2709 to i32)
  %v3_17bc3 = inttoptr i32 %v2_17bc3 to i32*
  store i32 %v0_17bc3, i32* %v3_17bc3, align 4
  %v0_17bca = load i32, i32* %ecx.global-to-local, align 4
  %v1_17bca = load i32, i32* @esp, align 4
  %v2_17bca = add i32 %v1_17bca, 308
  %v3_17bca = inttoptr i32 %v2_17bca to i32*
  store i32 %v0_17bca, i32* %v3_17bca, align 4
  %v0_17bd1 = load i32, i32* %edi.global-to-local, align 4
  %v1_17bd1 = load i32, i32* @esp, align 4
  %v2_17bd1 = add i32 %v1_17bd1, 312
  %v3_17bd1 = inttoptr i32 %v2_17bd1 to i32*
  store i32 %v0_17bd1, i32* %v3_17bd1, align 4
  %v0_17bd8 = load i32, i32* @eax, align 8
  %v1_17bd8 = load i32, i32* @esp, align 4
  %v2_17bd8 = add i32 %v1_17bd8, 4
  %v3_17bd8 = inttoptr i32 %v2_17bd8 to i32*
  store i32 %v0_17bd8, i32* %v3_17bd8, align 4
  %v0_17bdc = load i32, i32* %ebx.global-to-local, align 4
  %v1_17bdc = load i32, i32* @esp, align 4
  %v2_17bdc = inttoptr i32 %v1_17bdc to i32*
  store i32 %v0_17bdc, i32* %v2_17bdc, align 4
  %v3_17bdf = call i32 @function_2c990(i32 %stack_var_-308.0, i32 %v3_17790, i32 %v3_176b2)
  store i32 %v3_17bdf, i32* %eax.global-to-local, align 8
  %v0_17be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17be4 = add i32 %v0_17be4, 36
  %v2_17be4 = inttoptr i32 %v1_17be4 to i32*
  %v3_17be4 = load i32, i32* %v2_17be4, align 4
  %v0_17be7 = load i32, i32* %edi.global-to-local, align 4
  %v1_17be7 = add i32 %v0_17be7, 4
  store i32 %v1_17be7, i32* %eax.global-to-local, align 8
  %v1_17bea = add i32 %v3_17be4, 4
  store i32 %v1_17bea, i32* @edx, align 4
  br label %dec_label_pc_17730

dec_label_pc_17c28:                               ; preds = %dec_label_pc_178d3
  %v1_17c28 = add i32 %v0_17c28, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_17c28 = inttoptr i32 %v1_17c28 to i32*
  %v3_17c28 = load i32, i32* %v2_17c28, align 4
  store i32 %v3_17c28, i32* %ebp.global-to-local, align 4
  %tmp108 = icmp slt i32 %v3_17c28, 1
  br i1 %tmp108, label %dec_label_pc_17da8, label %dec_label_pc_17c34

dec_label_pc_17c34:                               ; preds = %dec_label_pc_17c28
  %v3_17c34 = load i32, i32* %v2_17c28, align 4
  %v3_17c3d = sext i32 %v3_17c34 to i64
  %v4_17c3d = mul nsw i64 %v3_17c3d, 818089009
  %v5_17c3d = trunc i64 %v4_17c3d to i32
  %v6_17c3d = udiv i64 %v4_17c3d, 4294967296
  %v7_17c3d = trunc i64 %v6_17c3d to i32
  store i32 %v5_17c3d, i32* %eax.global-to-local, align 8
  store i32 %v7_17c3d, i32* %edx.global-to-local, align 4
  %v3_17c3f = load i32, i32* %v2_17c28, align 4
  %v2_17c43 = sdiv i32 %v7_17c3d, 8
  store i32 %v2_17c43, i32* %edx.global-to-local, align 4
  %v2_17c46 = ashr i32 %v3_17c3f, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_17c46, i32* %eax.global-to-local, align 8
  %v2_17c49 = sub i32 %v2_17c43, %v2_17c46
  br label %dec_label_pc_17c4b

dec_label_pc_17c4b:                               ; preds = %dec_label_pc_17da8, %dec_label_pc_17c34
  %v1_17c6a = phi i32 [ %v0_17da8, %dec_label_pc_17da8 ], [ %v0_17c28, %dec_label_pc_17c34 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_17da8 ], [ %v2_17c49, %dec_label_pc_17c34 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_17c4b = add i32 %v1_17c6a, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_17c4b = inttoptr i32 %v1_17c4b to i32*
  %v3_17c4b = load i32, i32* %v2_17c4b, align 4
  store i32 %v3_17c4b, i32* %ecx.global-to-local, align 4
  %v1_17c4f = add i32 %v1_17c6a, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_17c4f = inttoptr i32 %v1_17c4f to i32*
  %v3_17c4f = load i32, i32* %v2_17c4f, align 4
  store i32 %v3_17c4f, i32* %eax.global-to-local, align 8
  %v2_17c53 = mul i32 %storemerge, 4
  %v3_17c53 = add i32 %v3_17c4b, %v2_17c53
  store i32 %v3_17c53, i32* %edi.global-to-local, align 4
  %v3_17c56 = mul i32 %storemerge, 42
  store i32 %v3_17c56, i32* %edx.global-to-local, align 4
  %v1_17c59 = inttoptr i32 %v3_17c53 to i32*
  %v2_17c59 = load i32, i32* %v1_17c59, align 4
  store i32 %v2_17c59, i32* %ebp.global-to-local, align 4
  %v2_17c5b = sub i32 %v3_17c4f, %v3_17c56
  %v1_17c60 = add i32 %v2_17c59, 504
  %v2_17c66 = mul i32 %v2_17c5b, 12
  %v3_17c66 = add i32 %v2_17c59, %v2_17c66
  store i32 %v3_17c66, i32* %eax.global-to-local, align 8
  %v2_17c6a = add i32 %v1_17c6a, 72
  %v3_17c6a = inttoptr i32 %v2_17c6a to i32*
  store i32 %v1_17c60, i32* %v3_17c6a, align 4
  %v0_17c6e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_17c6e, i32* %ecx.global-to-local, align 4
  %v0_17c70 = load i32, i32* %eax.global-to-local, align 8
  %v1_17c70 = load i32, i32* @esp, align 4
  %v2_17c70 = add i32 %v1_17c70, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_17c70 = inttoptr i32 %v2_17c70 to i32*
  store i32 %v0_17c70, i32* %v3_17c70, align 4
  br label %dec_label_pc_178fc

dec_label_pc_17cb8:                               ; preds = %dec_label_pc_176b2
  %v12_17cb8 = icmp eq i32 %v2_176a8, %v3_176bb
  %v1_17cba = icmp eq i1 %v12_17cb8, false
  br i1 %v1_17cba, label %dec_label_pc_176c8, label %dec_label_pc_17cc0

dec_label_pc_17cc0:                               ; preds = %dec_label_pc_17cb8
  %v1_17cc0 = add i32 %arg2, 12
  %v2_17cc0 = inttoptr i32 %v1_17cc0 to i32*
  %v3_17cc0 = load i32, i32* %v2_17cc0, align 4
  store i32 %v3_17cc0, i32* %ecx.global-to-local, align 4
  %v1_17cc3 = add i32 %arg2, 32
  %v2_17cc3 = inttoptr i32 %v1_17cc3 to i32*
  %v3_17cc3 = load i32, i32* %v2_17cc3, align 4
  store i32 %v3_17cc3, i32* %edx.global-to-local, align 4
  %v1_17cc6 = add i32 %arg2, 28
  %v2_17cc6 = inttoptr i32 %v1_17cc6 to i32*
  %v3_17cc6 = load i32, i32* %v2_17cc6, align 4
  store i32 %v3_17cc6, i32* %eax.global-to-local, align 8
  store i32 %v2_176a8, i32* %stack_var_-224, align 4
  %v1_17cd4 = add i32 %arg2, 16
  %v2_17cd4 = inttoptr i32 %v1_17cd4 to i32*
  %v3_17cd4 = load i32, i32* %v2_17cd4, align 4
  store i32 %v3_17cd4, i32* %ecx.global-to-local, align 4
  %v1_17cde = add i32 %arg2, 36
  %v2_17cde = inttoptr i32 %v1_17cde to i32*
  %v3_17cde = load i32, i32* %v2_17cde, align 4
  store i32 %v3_17cde, i32* %edx.global-to-local, align 4
  store i32 %v3_17cc0, i32* %eax.global-to-local, align 8
  store i32 %v2_176a6, i32* %stack_var_-240, align 4
  %v1_17cf4 = add i32 %arg2, 20
  %v2_17cf4 = inttoptr i32 %v1_17cf4 to i32*
  %v3_17cf4 = load i32, i32* %v2_17cf4, align 4
  store i32 %v3_17cf4, i32* %ecx.global-to-local, align 4
  store i32 %v3_17cd4, i32* %edx.global-to-local, align 4
  %v2_17d09 = ptrtoint i32* %stack_var_-224 to i32
  %v2_17d14 = ptrtoint i32* %stack_var_-240 to i32
  store i32 %v2_17d14, i32* @eax, align 8
  store i32 %arg2, i32* %stack_var_-364, align 4
  %v3_17d31 = call i32 @function_2c990(i32 %arg2, i32 %v2_17d14, i32 %v2_17d09)
  store i32 %v3_17d31, i32* %eax.global-to-local, align 8
  store i32 %v3_17cf4, i32* %ecx.global-to-local, align 4
  %v0_17d3a = load i32, i32* %ebx.global-to-local, align 4
  %v1_17d3a = add i32 %v0_17d3a, 36
  %v2_17d3a = inttoptr i32 %v1_17d3a to i32*
  %v3_17d3a = load i32, i32* %v2_17d3a, align 4
  %v1_17d3d = add i32 %v3_17cf4, 4
  store i32 %v1_17d3d, i32* %eax.global-to-local, align 8
  %v1_17d40 = add i32 %v3_17d3a, 4
  store i32 %v1_17d40, i32* @edx, align 4
  br label %dec_label_pc_17730

dec_label_pc_17d88:                               ; preds = %dec_label_pc_17670
  %v1_17d88 = add i32 %arg3, 4
  %v2_17d88 = inttoptr i32 %v1_17d88 to i32*
  %v3_17d88 = load i32, i32* %v2_17d88, align 4
  store i32 %v3_17d88, i32* %edx.global-to-local, align 4
  store i32 %v2_176a6, i32* %arg1, align 4
  %v1_17d8d = load i32, i32* %esi.global-to-local, align 4
  %v2_17d8d = add i32 %v1_17d8d, 4
  %v3_17d8d = inttoptr i32 %v2_17d8d to i32*
  store i32 %v3_17d88, i32* %v3_17d8d, align 4
  %v0_17d90 = load i32, i32* %eax.global-to-local, align 8
  %v1_17d90 = add i32 %v0_17d90, 8
  %v2_17d90 = inttoptr i32 %v1_17d90 to i32*
  %v3_17d90 = load i32, i32* %v2_17d90, align 4
  store i32 %v3_17d90, i32* %edx.global-to-local, align 4
  %v1_17d93 = add i32 %v0_17d90, 12
  %v2_17d93 = inttoptr i32 %v1_17d93 to i32*
  %v3_17d93 = load i32, i32* %v2_17d93, align 4
  store i32 %v3_17d93, i32* %eax.global-to-local, align 8
  %v1_17d96 = load i32, i32* %esi.global-to-local, align 4
  %v2_17d96 = add i32 %v1_17d96, 8
  %v3_17d96 = inttoptr i32 %v2_17d96 to i32*
  store i32 %v3_17d90, i32* %v3_17d96, align 4
  %v0_17d99 = load i32, i32* %eax.global-to-local, align 8
  %v1_17d99 = load i32, i32* %esi.global-to-local, align 4
  %v2_17d99 = add i32 %v1_17d99, 12
  %v3_17d99 = inttoptr i32 %v2_17d99 to i32*
  store i32 %v0_17d99, i32* %v3_17d99, align 4
  store i32 %v0_17688, i32* %edx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v0_179df = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_179df, i32* %eax.global-to-local, align 8
  br i1 false, label %dec_label_pc_17730, label %dec_label_pc_179e7

dec_label_pc_17da8:                               ; preds = %dec_label_pc_178af.dec_label_pc_17da8_crit_edge, %dec_label_pc_17c28
  %v0_17da8 = phi i32 [ %v0_17da8.pre, %dec_label_pc_178af.dec_label_pc_17da8_crit_edge ], [ %v0_17c28, %dec_label_pc_17c28 ]
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_17c4b

dec_label_pc_17dc8:                               ; preds = %dec_label_pc_17af2.dec_label_pc_17dc8_crit_edge, %dec_label_pc_17b10
  %v0_17dc8 = phi i32 [ %v0_17dc8.pre, %dec_label_pc_17af2.dec_label_pc_17dc8_crit_edge ], [ %v0_17b10, %dec_label_pc_17b10 ]
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_17b33

; uselistorder directives
  uselistorder i32 %v0_179df, { 2, 0, 1 }
  uselistorder i32 %v1_17d3d, { 1, 0 }
  uselistorder i32 %v3_17cf4, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_17c6a, { 0, 2, 1 }
  uselistorder i32 %v2_17c43, { 1, 0 }
  uselistorder i32 %v1_17be7, { 1, 0 }
  uselistorder i32 %v2_17b2b, { 1, 0 }
  uselistorder i32 %v0_17b10, { 1, 2, 4, 3, 5, 0, 6 }
  uselistorder i32 %v3_17ac9, { 1, 0, 2 }
  uselistorder i32 %v0_17ac9, { 0, 2, 1, 3 }
  uselistorder i32 %v2_17a8f, { 1, 0, 2 }
  uselistorder i32 %v3_1796e, { 1, 0 }
  uselistorder i32 %v3_178dc, { 1, 0, 2 }
  uselistorder i32 %v0_17c28, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32 %v0_178b2, { 1, 0 }
  uselistorder i32 %v0_17897, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1784a, { 1, 0, 2 }
  uselistorder i32 %v3_17790, { 2, 0, 1 }
  uselistorder i32 %v3_17768, { 1, 0 }
  uselistorder i32 %v3_1773d, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v3_176e0, { 1, 0, 2 }
  uselistorder i1 %v12_176b9, { 1, 0 }
  uselistorder i32 %v3_176b2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_176a8, { 5, 0, 1, 3, 4, 2, 6 }
  uselistorder i32 %v2_176a6, { 5, 6, 2, 3, 4, 0, 1, 7 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %edi.global-to-local, { 1, 4, 3, 2, 5, 6, 0, 7, 8, 9, 10 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 22, 24, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 26 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 0, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 49 }
  uselistorder i32 (i32, i32, i32)* @function_2c990, { 2, 1, 0 }
  uselistorder i32 232, { 1, 0 }
  uselistorder i32 228, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i8** @global_var_f8.2448 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i32 240, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 8, 7, 9, 11, 10, 12, 14, 13, 0, 1, 2, 4, 3, 6, 5, 15, 16, 17 }
  uselistorder label %dec_label_pc_17dc8, { 1, 0 }
  uselistorder label %dec_label_pc_17da8, { 1, 0 }
  uselistorder label %dec_label_pc_17af2, { 1, 0 }
  uselistorder label %dec_label_pc_178af, { 1, 0 }
  uselistorder label %dec_label_pc_176c8, { 1, 0 }
}

define i32 @_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17df0:
  %eax.global-to-local = alloca i32, align 4
  %tmp33 = ptrtoint i32* %arg1 to i32
  %v0_17df0 = load i32, i32* @ebp, align 4
  store i32 %tmp33, i32* %eax.global-to-local, align 8
  store i32 %arg4, i32* @ebp, align 4
  %v2_17e1e = sub i32 %arg3, %arg2
  %v2_17e22 = sdiv i32 %v2_17e1e, 16
  %v2_17e25 = ashr i32 %v2_17e1e, ptrtoint (i64* @global_var_2.2539 to i32)
  %tmp41 = icmp slt i32 %v2_17e1e, 16
  br i1 %tmp41, label %dec_label_pc_17e8d, label %dec_label_pc_17e2c

dec_label_pc_17e2c:                               ; preds = %dec_label_pc_17df0
  %v1_17e2c = inttoptr i32 %arg4 to i32*
  %v2_17e2c = load i32, i32* %v1_17e2c, align 4
  %v1_17e2f = inttoptr i32 %arg2 to i32*
  %v2_17e2f = load i32, i32* %v1_17e2f, align 4
  %v14_17e2f = icmp eq i32 %v2_17e2f, %v2_17e2c
  br i1 %v14_17e2f, label %dec_label_pc_17ed0, label %dec_label_pc_17e37

dec_label_pc_17e37:                               ; preds = %dec_label_pc_17e2c
  %v2_17e37 = add i32 %arg2, 4
  %v3_17e37 = inttoptr i32 %v2_17e37 to i32*
  %v4_17e37 = load i32, i32* %v3_17e37, align 4
  %v15_17e37 = icmp eq i32 %v2_17e2c, %v4_17e37
  br i1 %v15_17e37, label %dec_label_pc_17ee5, label %dec_label_pc_17e40

dec_label_pc_17e40:                               ; preds = %dec_label_pc_17e37
  %v2_17e40 = add i32 %arg2, 8
  %v3_17e40 = inttoptr i32 %v2_17e40 to i32*
  %v4_17e40 = load i32, i32* %v3_17e40, align 4
  %v15_17e40 = icmp eq i32 %v2_17e2c, %v4_17e40
  br i1 %v15_17e40, label %dec_label_pc_17eea, label %dec_label_pc_17e49

dec_label_pc_17e49:                               ; preds = %dec_label_pc_17e40
  %v2_17e49 = add i32 %arg2, 12
  %v3_17e49 = inttoptr i32 %v2_17e49 to i32*
  %v4_17e49 = load i32, i32* %v3_17e49, align 4
  %v15_17e49 = icmp eq i32 %v2_17e2c, %v4_17e49
  %v1_17e4c = icmp eq i1 %v15_17e49, false
  br i1 %v1_17e4c, label %dec_label_pc_17e7a, label %dec_label_pc_17ea4

dec_label_pc_17e58:                               ; preds = %dec_label_pc_17e7a
  %v1_17e58 = inttoptr i32 %v1_17e7a to i32*
  %v2_17e58 = load i32, i32* %v1_17e58, align 4
  %v14_17e58 = icmp eq i32 %v2_17e58, %v2_17e2c
  br i1 %v14_17e58, label %dec_label_pc_17ed0.loopexit, label %dec_label_pc_17e62

dec_label_pc_17e62:                               ; preds = %dec_label_pc_17e58
  %v1_17e62 = add i32 %v0_17e7a, 20
  %v2_17e62 = inttoptr i32 %v1_17e62 to i32*
  %v3_17e62 = load i32, i32* %v2_17e62, align 4
  %v15_17e62 = icmp eq i32 %v3_17e62, %v2_17e2c
  br i1 %v15_17e62, label %dec_label_pc_17ea8.loopexit, label %dec_label_pc_17e6a

dec_label_pc_17e6a:                               ; preds = %dec_label_pc_17e62
  %v1_17e6a = add i32 %v0_17e7a, 24
  %v2_17e6a = inttoptr i32 %v1_17e6a to i32*
  %v3_17e6a = load i32, i32* %v2_17e6a, align 4
  %v15_17e6a = icmp eq i32 %v3_17e6a, %v2_17e2c
  br i1 %v15_17e6a, label %dec_label_pc_17ea8.loopexit, label %dec_label_pc_17e72

dec_label_pc_17e72:                               ; preds = %dec_label_pc_17e6a
  %v1_17e72 = add i32 %v0_17e7a, 28
  %v2_17e72 = inttoptr i32 %v1_17e72 to i32*
  %v3_17e72 = load i32, i32* %v2_17e72, align 4
  %v15_17e72 = icmp eq i32 %v3_17e72, %v2_17e2c
  br i1 %v15_17e72, label %dec_label_pc_17ea8.loopexit, label %dec_label_pc_17e7a

dec_label_pc_17e7a:                               ; preds = %dec_label_pc_17e49, %dec_label_pc_17e72
  %v0_17e7d = phi i32 [ %v1_17e7d, %dec_label_pc_17e72 ], [ %v2_17e22, %dec_label_pc_17e49 ]
  %v0_17e7a = phi i32 [ %v1_17e7a, %dec_label_pc_17e72 ], [ %arg2, %dec_label_pc_17e49 ]
  %v1_17e7a = add i32 %v0_17e7a, 16
  %v1_17e7d = add i32 %v0_17e7d, -1
  %v10_17e7d = icmp eq i32 %v1_17e7d, 0
  %v1_17e82 = icmp eq i1 %v10_17e7d, false
  br i1 %v1_17e82, label %dec_label_pc_17e58, label %dec_label_pc_17e84

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e7a
  %v2_17e88 = sub i32 %arg3, %v1_17e7a
  %v2_17e8a = sdiv i32 %v2_17e88, 4
  br label %dec_label_pc_17e8d

dec_label_pc_17e8d:                               ; preds = %dec_label_pc_17e84, %dec_label_pc_17df0
  %v0_17ee0 = phi i32 [ %v1_17e7a, %dec_label_pc_17e84 ], [ %arg2, %dec_label_pc_17df0 ]
  %v0_17e97 = phi i32 [ %v2_17e8a, %dec_label_pc_17e84 ], [ %v2_17e25, %dec_label_pc_17df0 ]
  %v10_17e8d = icmp eq i32 %v0_17e97, 2
  br i1 %v10_17e8d, label %dec_label_pc_17ec1, label %dec_label_pc_17e92

dec_label_pc_17e92:                               ; preds = %dec_label_pc_17e8d
  %v10_17e92 = icmp eq i32 %v0_17e97, 3
  br i1 %v10_17e92, label %dec_label_pc_17ed9, label %dec_label_pc_17e97

dec_label_pc_17e97:                               ; preds = %dec_label_pc_17e92
  %v10_17e97 = icmp eq i32 %v0_17e97, 1
  br i1 %v10_17e97, label %dec_label_pc_17ed4, label %dec_label_pc_17e9c

dec_label_pc_17e9c:                               ; preds = %dec_label_pc_17ecb, %dec_label_pc_17e97
  store i32 %arg3, i32* %arg1, align 4
  br label %dec_label_pc_17eaa

dec_label_pc_17ea4:                               ; preds = %dec_label_pc_17e49
  br label %dec_label_pc_17ea8

dec_label_pc_17ea8.loopexit:                      ; preds = %dec_label_pc_17e62, %dec_label_pc_17e6a, %dec_label_pc_17e72
  %v0_17ea821 = phi i32 [ %v1_17e62, %dec_label_pc_17e62 ], [ %v1_17e6a, %dec_label_pc_17e6a ], [ %v1_17e72, %dec_label_pc_17e72 ]
  br label %dec_label_pc_17ea8

dec_label_pc_17ea8:                               ; preds = %dec_label_pc_17ea8.loopexit, %dec_label_pc_17eea, %dec_label_pc_17ee5, %dec_label_pc_17ea4
  %v0_17ea8 = phi i32 [ %v0_17ea821, %dec_label_pc_17ea8.loopexit ], [ %v2_17e40, %dec_label_pc_17eea ], [ %v2_17e37, %dec_label_pc_17ee5 ], [ %v2_17e49, %dec_label_pc_17ea4 ]
  store i32 %v0_17ea8, i32* %arg1, align 4
  br label %dec_label_pc_17eaa

dec_label_pc_17eaa:                               ; preds = %dec_label_pc_17ed0, %dec_label_pc_17ea8, %dec_label_pc_17e9c
  br i1 false, label %dec_label_pc_17eef, label %dec_label_pc_17eb7

dec_label_pc_17eb7:                               ; preds = %dec_label_pc_17eaa
  store i32 %v0_17df0, i32* @ebp, align 4
  %v0_17ebe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17ebe

dec_label_pc_17ec1:                               ; preds = %dec_label_pc_17e8d
  %v1_17ec1 = inttoptr i32 %arg4 to i32*
  %v2_17ec1 = load i32, i32* %v1_17ec1, align 4
  br label %dec_label_pc_17ec4

dec_label_pc_17ec4:                               ; preds = %dec_label_pc_17ee0, %dec_label_pc_17ec1
  %v3_17ec4 = phi i32 [ %v2_17ed9, %dec_label_pc_17ee0 ], [ %v2_17ec1, %dec_label_pc_17ec1 ]
  %v0_17ec8 = phi i32 [ %v1_17ee0, %dec_label_pc_17ee0 ], [ %v0_17ee0, %dec_label_pc_17ec1 ]
  %v1_17ec4 = inttoptr i32 %v0_17ec8 to i32*
  %v2_17ec4 = load i32, i32* %v1_17ec4, align 4
  %v14_17ec4 = icmp eq i32 %v2_17ec4, %v3_17ec4
  br i1 %v14_17ec4, label %dec_label_pc_17ed0, label %dec_label_pc_17ec8

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17ec4
  %v1_17ec8 = add i32 %v0_17ec8, 4
  br label %dec_label_pc_17ecb

dec_label_pc_17ecb:                               ; preds = %dec_label_pc_17ed4, %dec_label_pc_17ec8
  %v1_17ecb = phi i32 [ %v0_17ee0, %dec_label_pc_17ed4 ], [ %v1_17ec8, %dec_label_pc_17ec8 ]
  %v0_17ecb = phi i32 [ %v2_17ed4, %dec_label_pc_17ed4 ], [ %v3_17ec4, %dec_label_pc_17ec8 ]
  %v2_17ecb = inttoptr i32 %v1_17ecb to i32*
  %v3_17ecb = load i32, i32* %v2_17ecb, align 4
  %v14_17ecb = icmp eq i32 %v0_17ecb, %v3_17ecb
  %v1_17ecd = icmp eq i1 %v14_17ecb, false
  br i1 %v1_17ecd, label %dec_label_pc_17e9c, label %dec_label_pc_17ed0

dec_label_pc_17ed0.loopexit:                      ; preds = %dec_label_pc_17e58
  br label %dec_label_pc_17ed0

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17ed0.loopexit, %dec_label_pc_17ecb, %dec_label_pc_17ed9, %dec_label_pc_17ec4, %dec_label_pc_17e2c
  %v0_17ed0 = phi i32 [ %v1_17e7a, %dec_label_pc_17ed0.loopexit ], [ %v1_17ecb, %dec_label_pc_17ecb ], [ %v0_17ee0, %dec_label_pc_17ed9 ], [ %v0_17ec8, %dec_label_pc_17ec4 ], [ %arg2, %dec_label_pc_17e2c ]
  store i32 %v0_17ed0, i32* %arg1, align 4
  br label %dec_label_pc_17eaa

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17e97
  %v1_17ed4 = inttoptr i32 %arg4 to i32*
  %v2_17ed4 = load i32, i32* %v1_17ed4, align 4
  br label %dec_label_pc_17ecb

dec_label_pc_17ed9:                               ; preds = %dec_label_pc_17e92
  %v1_17ed9 = inttoptr i32 %arg4 to i32*
  %v2_17ed9 = load i32, i32* %v1_17ed9, align 4
  %v1_17edc = inttoptr i32 %v0_17ee0 to i32*
  %v2_17edc = load i32, i32* %v1_17edc, align 4
  %v14_17edc = icmp eq i32 %v2_17edc, %v2_17ed9
  br i1 %v14_17edc, label %dec_label_pc_17ed0, label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17ed9
  %v1_17ee0 = add i32 %v0_17ee0, 4
  br label %dec_label_pc_17ec4

dec_label_pc_17ee5:                               ; preds = %dec_label_pc_17e37
  br label %dec_label_pc_17ea8

dec_label_pc_17eea:                               ; preds = %dec_label_pc_17e40
  br label %dec_label_pc_17ea8

dec_label_pc_17eef:                               ; preds = %dec_label_pc_17eaa
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_17ec4, { 1, 0 }
  uselistorder i32 %v0_17ee0, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_17e7d, { 1, 0 }
  uselistorder i32 %v1_17e7a, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17e7a, { 3, 2, 1, 0 }
  uselistorder i32 %v2_17e2c, { 0, 1, 2, 7, 3, 4, 5, 6 }
  uselistorder i32 %v2_17e1e, { 0, 2, 1 }
  uselistorder i32 %arg4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_17ed0, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_17ea8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_17ea8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17e7a, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_17f00:
  store i32 %arg4, i32* @edx, align 4
  store i32 %arg5, i32* @esi, align 4
  %v1_17f3b = icmp eq i32 %arg3, 0
  br i1 %v1_17f3b, label %bb, label %dec_label_pc_17f48

bb:                                               ; preds = %dec_label_pc_17f00
  %v6_17f42 = call i32 @function_18018(i32 %arg1, i32 %arg4, i32 zext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  br label %dec_label_pc_17f48

dec_label_pc_17f48:                               ; preds = %bb, %dec_label_pc_17f00
  %v2_17f48 = phi i32 [ %v6_17f42, %bb ], [ %arg3, %dec_label_pc_17f00 ]
  ret i32 %v2_17f48
}

define i32 @function_17f58() local_unnamed_addr {
dec_label_pc_17f58:
  %eax.global-to-local = alloca i32, align 4
  %v0_17f58 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17f58
}

define i32 @function_17f7b() local_unnamed_addr {
dec_label_pc_17f7b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_17f91() local_unnamed_addr {
dec_label_pc_17f91:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_17fb5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_17fb5:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17fb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17fb5 = add i32 %v0_17fb5, -2095569852
  %v2_17fb5 = inttoptr i32 %v1_17fb5 to i32*
  %v3_17fb5 = load i32, i32* %v2_17fb5, align 4
  %v4_17fb5 = sub i32 %v3_17fb5, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_17fb5, i32* %v2_17fb5, align 4
  %v0_17fbb = load i32, i32* %ebp.global-to-local, align 4
  %v1_17fbb = add i32 %v0_17fbb, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_17fbb, i32* %ebp.global-to-local, align 4
  %v0_17fbc = load i32, i32* %eax.global-to-local, align 8
  %v2_17fbc = load i1, i1* %cf.global-to-local, align 1
  %v3_17fbc = zext i1 %v2_17fbc to i32
  %v4_17fbc = add i32 %v0_17fbc, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_17fbc = add i32 %v4_17fbc, %v3_17fbc
  %v25_17fbc = urem i32 %v5_17fbc, 256
  %v27_17fbc = and i32 %v0_17fbc, -256
  %v28_17fbc = or i32 %v25_17fbc, %v27_17fbc
  store i32 %v28_17fbc, i32* @eax, align 8
  %v1_17fc2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_17fc2 = icmp eq i32 %v1_17fc2, %arg1
  %v0_17fc9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_17fc9 = inttoptr i32 %v28_17fbc to i32*
  store i32 %v0_17fc9, i32* %v2_17fc9, align 4
  %v1_17fcb = icmp eq i1 %v3_17fc2, false
  br i1 %v1_17fcb, label %bb, label %dec_label_pc_17fb5.dec_label_pc_17fd1_crit_edge

dec_label_pc_17fb5.dec_label_pc_17fd1_crit_edge:  ; preds = %dec_label_pc_17fb5
  %v0_17fe4.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_17fd1

bb:                                               ; preds = %dec_label_pc_17fb5
  %v2_17fcb = call i32 @function_1806a()
  store i32 %v2_17fcb, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_17fd1

dec_label_pc_17fd1:                               ; preds = %dec_label_pc_17fb5.dec_label_pc_17fd1_crit_edge, %bb
  %v0_17fe4 = phi i32 [ %v0_17fe4.pre, %dec_label_pc_17fb5.dec_label_pc_17fd1_crit_edge ], [ %v2_17fcb, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  %v0_17fe1 = load i32, i32* @esp, align 4
  %v5_17fe1 = icmp ugt i32 %v0_17fe1, -93
  store i1 %v5_17fe1, i1* %cf.global-to-local, align 1
  ret i32 %v0_17fe4

; uselistorder directives
  uselistorder i32 %v0_17fbc, { 1, 0 }
  uselistorder label %dec_label_pc_17fd1, { 1, 0 }
}

define i32 @function_17ff0() local_unnamed_addr {
dec_label_pc_17ff0:
  %v0_17ff2 = call i32 @function_17f7b()
  ret i32 %v0_17ff2
}

define i32 @function_1800e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1800e:
  %v0_18012 = call i32 @function_17f91()
  ret i32 %v0_18012
}

define i32 @function_18018(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18018:
  %v0_1801b = load i32, i32* @edx, align 4
  %v2_18025 = load i32, i32* @esi, align 4
  %v1_18027 = add i32 %v0_1801b, 16
  %v2_18027 = inttoptr i32 %v1_18027 to i32*
  %v3_18027 = load i32, i32* %v2_18027, align 4
  %v1_1802a = add i32 %v0_1801b, 20
  %v2_1802a = inttoptr i32 %v1_1802a to i32*
  %v3_1802a = load i32, i32* %v2_1802a, align 4
  %v1_1802d = add i32 %v2_18025, 4
  %v2_1802d = inttoptr i32 %v1_1802d to i32*
  %v3_1802d = load i32, i32* %v2_1802d, align 4
  %v2_18037 = sub i32 %v3_1802a, %v3_18027
  %v2_18039 = sub i32 %v3_1802d, %v2_18025
  %tmp3 = icmp ule i32 %v2_18039, %v2_18037
  %v5_1803f = select i1 %tmp3, i32 %v2_18039, i32 %v2_18037
  ret i32 %v5_1803f

; uselistorder directives
  uselistorder i32 %v2_18039, { 1, 0 }
  uselistorder i32 %v2_18037, { 1, 0 }
}

define i32 @function_1804b() local_unnamed_addr {
dec_label_pc_1804b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_1804b = load i32, i32* %ebx.global-to-local, align 4
  %v7_1804b = icmp ult i32 %v0_1804b, %tmp93
  %v0_18052 = load i32, i32* %eax.global-to-local, align 8
  %v2_18054 = lshr i32 %v0_18052, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v1_18057 = icmp eq i32 %v0_18052, 0
  %v4_18059 = zext i1 %v7_1804b to i32
  %v1_1805e = icmp eq i1 %v1_18057, false
  %v4_1805e = select i1 %v1_1805e, i32 %v2_18054, i32 %v4_18059
  store i32 %v4_1805e, i32* %eax.global-to-local, align 8
  ret i32 %v4_1805e
}

define i32 @function_1806a() local_unnamed_addr {
dec_label_pc_1806a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18085() local_unnamed_addr {
dec_label_pc_18085:
  %eax.global-to-local = alloca i32, align 4
  %v0_18085 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18085
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_180a0:
  store i32 %arg2, i32* @edx, align 4
  %v1_180cf = add i32 %arg2, 8
  %v2_180cf = inttoptr i32 %v1_180cf to i32*
  %v3_180cf = load i32, i32* %v2_180cf, align 4
  %v1_180d2 = icmp eq i32 %v3_180cf, 0
  br i1 %v1_180d2, label %bb, label %dec_label_pc_180da

bb:                                               ; preds = %dec_label_pc_180a0
  %tmp107 = ptrtoint i32* %arg3 to i32
  %v4_180d4 = call i32 @function_1819e(i32 %arg1, i32 %tmp107, i32 %arg2)
  br label %dec_label_pc_180da

dec_label_pc_180da:                               ; preds = %bb, %dec_label_pc_180a0
  %v3_18120 = phi i32 [ %v4_180d4, %bb ], [ 0, %dec_label_pc_180a0 ]
  ret i32 %v3_18120

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_1812b(i16 %arg1) local_unnamed_addr {
dec_label_pc_1812b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1812b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1812b, i32* %edi.global-to-local, align 4
  %v0_1812c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1812c = add i32 %v0_1812c, 535478722
  %v2_1812c = inttoptr i32 %v1_1812c to i32*
  %v3_1812c = load i32, i32* %v2_1812c, align 4
  %v4_1812c = udiv i32 %v3_1812c, 32
  %v5_1812c = mul i32 %v3_1812c, 134217728
  %v6_1812c = or i32 %v4_1812c, %v5_1812c
  store i32 %v6_1812c, i32* %v2_1812c, align 4
  %v2_18133 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_18133 = lshr i8 %v2_18133, ptrtoint (i8** @global_var_5.2484 to i8)
  %v4_18133 = mul i8 %v2_18133, 8
  %v5_18133 = or i8 %v3_18133, %v4_18133
  %v6_18133 = load i32, i32* %edi.global-to-local, align 4
  %v7_18133 = inttoptr i32 %v6_18133 to i8*
  store i8 %v5_18133, i8* %v7_18133, align 1
  %v6_18136 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_18136

; uselistorder directives
  uselistorder i8 ptrtoint (i8** @global_var_5.2484 to i8), { 4, 3, 2, 1, 0 }
}

define i32 @function_18142() local_unnamed_addr {
dec_label_pc_18142:
  %v4_18159 = load i32, i32* @eax, align 8
  ret i32 %v4_18159
}

define i32 @function_1814e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1814e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18163() local_unnamed_addr {
dec_label_pc_18163:
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp93
}

define i32 @function_1816a() local_unnamed_addr {
dec_label_pc_1816a:
  %v0_1816a = call i32 @function_fc2068e()
  ret i32 %v0_1816a
}

define i32 @function_1817f() local_unnamed_addr {
dec_label_pc_1817f:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_18183 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18183 = icmp eq i32 %v1_18183, %tmp11
  %v1_1818e = icmp eq i1 %v3_18183, false
  br i1 %v1_1818e, label %bb, label %dec_label_pc_18194

bb:                                               ; preds = %dec_label_pc_1817f
  %v2_1818e = call i32 @function_18232()
  br label %dec_label_pc_18194

dec_label_pc_18194:                               ; preds = %bb, %dec_label_pc_1817f
  %v0_1819b = phi i32 [ %v2_1818e, %bb ], [ %tmp10, %dec_label_pc_1817f ]
  ret i32 %v0_1819b
}

define i32 @function_1819e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1819e:
  %v0_1819e = load i32, i32* @edx, align 4
  %v1_1819e = add i32 %v0_1819e, 4
  %v2_181b0 = add i32 %arg1, 12
  %v3_181b0 = inttoptr i32 %v2_181b0 to i32*
  %v4_181b0 = load i32, i32* %v3_181b0, align 4
  %v15_181b0 = icmp eq i32 %v1_1819e, %v4_181b0
  br i1 %v15_181b0, label %bb, label %dec_label_pc_181b5

bb:                                               ; preds = %dec_label_pc_1819e
  %v2_181b3 = call i32 @function_181f0(i32 %v1_1819e)
  br label %dec_label_pc_181b5

dec_label_pc_181b5:                               ; preds = %bb, %dec_label_pc_1819e
  %v3_181b9 = phi i32 [ %v2_181b3, %bb ], [ %v1_1819e, %dec_label_pc_1819e ]
  ret i32 %v3_181b9

; uselistorder directives
  uselistorder i32 %v1_1819e, { 1, 2, 0 }
}

define i32 @function_181c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_181c0:
  %cf.global-to-local = alloca i1, align 1
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_181c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_181c0 = add i32 %v0_181c0, -1959517100
  %v2_181c0 = inttoptr i32 %v1_181c0 to i32*
  %v3_181c0 = load i32, i32* %v2_181c0, align 4
  %v4_181c0 = sub i32 %v3_181c0, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_181c0, i32* %v2_181c0, align 4
  %v0_181c6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_181c6 = trunc i32 %v0_181c6 to i8
  %v2_181c6 = load i32, i32* %ebx.global-to-local, align 4
  %v3_181c6 = add i32 %v2_181c6, -964095896
  %v4_181c6 = inttoptr i32 %v3_181c6 to i8*
  %v5_181c6 = load i8, i8* %v4_181c6, align 1
  %v6_181c6 = load i1, i1* %cf.global-to-local, align 1
  %v7_181c6 = zext i1 %v6_181c6 to i8
  %v8_181c6 = add i8 %v5_181c6, %v1_181c6
  %v9_181c6 = add i8 %v8_181c6, %v7_181c6
  %v30_181c6 = zext i8 %v9_181c6 to i32
  %v32_181c6 = and i32 %v0_181c6, -256
  %v33_181c6 = or i32 %v30_181c6, %v32_181c6
  store i32 %v33_181c6, i32* %ecx.global-to-local, align 4
  %v0_181cc = load i32, i32* @eax, align 8
  %v1_181cc = add i32 %v0_181cc, 20
  %v2_181cc = inttoptr i32 %v1_181cc to i32*
  %v3_181cc = load i32, i32* %v2_181cc, align 4
  %v0_181cf = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_181d7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_181d7 = sub i32 %v3_181cc, %v1_181d7
  store i32 %v2_181d7, i32* %ebx.global-to-local, align 4
  %v1_181d9 = add i32 %arg1, 4
  %v2_181d9 = inttoptr i32 %v1_181d9 to i32*
  %v3_181d9 = load i32, i32* %v2_181d9, align 4
  %v5_181dc = sub i32 %v3_181d9, %v0_181cf
  %v7_181e0 = icmp ult i32 %v2_181d7, %v5_181dc
  store i1 %v7_181e0, i1* %cf.global-to-local, align 1
  %tmp99 = icmp ule i32 %v2_181d7, %v5_181dc
  %v5_181e4 = select i1 %tmp99, i32 %v2_181d7, i32 %v5_181dc
  store i32 %v5_181e4, i32* %edx.global-to-local, align 4
  %v1_181e7 = call i32 @function_1814e(i32 %v0_181cf)
  ret i32 %v1_181e7

; uselistorder directives
  uselistorder i32 %v5_181dc, { 1, 0, 2 }
  uselistorder i32 %v2_181d7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_181cf, { 1, 0 }
}

define i32 @function_181f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_181f0:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v2_181f4 = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_181f4, i32* @eax, align 8
  %v5_18217 = call i32 @function_2ffa0(i32 %v2_181f4, i32 %tmp3, i32 0, i32 %arg1, i32 %tmp10)
  %v2_18227 = inttoptr i32 %tmp to i32*
  %v0_18229 = load i32, i32* %edx.global-to-local, align 4
  %v1_18229 = add i32 %v0_18229, 4
  %v2_18229 = inttoptr i32 %v1_18229 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_18229, align 1
  %v0_1822d = call i32 @function_1817f()
  ret i32 %v0_1822d
}

define i32 @function_18232() local_unnamed_addr {
dec_label_pc_18232:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_18240:
  %v1_18270 = icmp eq i32 %arg3, 0
  %v1_18272 = add i32 %arg2, 4
  store i32 %v1_18272, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_18270, label %bb, label %dec_label_pc_18283

bb:                                               ; preds = %dec_label_pc_18240
  %v2_18281 = call i32 @function_18300(i32 %v1_18272)
  br label %dec_label_pc_18283

dec_label_pc_18283:                               ; preds = %bb, %dec_label_pc_18240
  %v2_18287 = phi i32 [ %v2_18281, %bb ], [ %arg3, %dec_label_pc_18240 ]
  ret i32 %v2_18287
}

define i32 @function_182ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_182ce:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_182ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_182ce = add i32 %v0_182ce, -2095569852
  %v2_182ce = inttoptr i32 %v1_182ce to i32*
  %v3_182ce = load i32, i32* %v2_182ce, align 4
  %v4_182ce = sub i32 %v3_182ce, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_182ce, i32* %v2_182ce, align 4
  %v0_182d4 = load i32, i32* %esi.global-to-local, align 4
  %v1_182d4 = add i32 %v0_182d4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_182d4, i32* %esi.global-to-local, align 4
  %v0_182d5 = load i32, i32* %eax.global-to-local, align 8
  %v2_182d5 = load i1, i1* %cf.global-to-local, align 1
  %v3_182d5 = zext i1 %v2_182d5 to i32
  %v4_182d5 = add i32 %v0_182d5, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_182d5 = add i32 %v4_182d5, %v3_182d5
  %v25_182d5 = urem i32 %v5_182d5, 256
  %v27_182d5 = and i32 %v0_182d5, -256
  %v28_182d5 = or i32 %v25_182d5, %v27_182d5
  store i32 %v28_182d5, i32* %eax.global-to-local, align 8
  %v1_182db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_182db = icmp eq i32 %v1_182db, %arg1
  %v1_182e2 = load i32, i32* %edi.global-to-local, align 4
  %v2_182e2 = inttoptr i32 %v1_182e2 to i32*
  store i32 %v28_182d5, i32* %v2_182e2, align 4
  %v0_182e4 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_182e4, i32* @eax, align 8
  %v1_182e6 = icmp eq i1 %v3_182db, false
  br i1 %v1_182e6, label %bb, label %dec_label_pc_182e8

bb:                                               ; preds = %dec_label_pc_182ce
  %v2_182e6 = call i32 @function_18323()
  store i32 %v2_182e6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_182e8

dec_label_pc_182e8:                               ; preds = %bb, %dec_label_pc_182ce
  %v0_182fb = phi i32 [ %v2_182e6, %bb ], [ %v0_182e4, %dec_label_pc_182ce ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_182f8 = load i32, i32* @esp, align 4
  %v5_182f8 = icmp ugt i32 %v0_182f8, -77
  store i1 %v5_182f8, i1* %cf.global-to-local, align 1
  ret i32 %v0_182fb

; uselistorder directives
  uselistorder i32 %v0_182d5, { 1, 0 }
}

define i32 @function_18300(i32 %arg1) local_unnamed_addr {
dec_label_pc_18300:
  %v0_18300 = load i32, i32* @ebp, align 4
  %v1_18308 = add i32 %v0_18300, 16
  ret i32 %v1_18308
}

define i32 @function_18317() local_unnamed_addr {
dec_label_pc_18317:
  %eax.global-to-local = alloca i32, align 4
  %v0_18319 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18319
}

define i32 @function_18323() local_unnamed_addr {
dec_label_pc_18323:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18330:
  store i32 %arg2, i32* @ebp, align 4
  %v0_1833b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_1834f = add i32 %arg2, 8
  %v2_1834f = inttoptr i32 %v1_1834f to i32*
  %v3_1834f = load i32, i32* %v2_1834f, align 4
  %v1_18352 = icmp eq i32 %v3_1834f, 0
  %v1_18354 = icmp eq i1 %v1_18352, false
  br i1 %v1_18354, label %dec_label_pc_18369, label %dec_label_pc_18356

dec_label_pc_18356:                               ; preds = %dec_label_pc_18330
  %v1_18356 = call i32 @function_18407(i32 %v0_1833b)
  ret i32 %v1_18356

dec_label_pc_18369:                               ; preds = %dec_label_pc_18330
  %v1_18369 = add i32 %v3_1834f, 16
  ret i32 %v1_18369
}

define i32 @function_18383() local_unnamed_addr {
dec_label_pc_18383:
  %v0_18383 = load i32, i32* @eax, align 8
  ret i32 %v0_18383
}

define i32 @function_18387() local_unnamed_addr {
dec_label_pc_18387:
  %v0_18387 = load i32, i32* @ebx, align 4
  %v1_18387 = load i32, i32* @ebp, align 4
  %v2_18387 = add i32 %v1_18387, 12
  %v3_18387 = inttoptr i32 %v2_18387 to i32*
  %v4_18387 = load i32, i32* %v3_18387, align 4
  %v15_18387 = icmp eq i32 %v0_18387, %v4_18387
  br i1 %v15_18387, label %bb, label %dec_label_pc_18387.dec_label_pc_1838c_crit_edge

dec_label_pc_18387.dec_label_pc_1838c_crit_edge:  ; preds = %dec_label_pc_18387
  %v3_1838c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1838c

bb:                                               ; preds = %dec_label_pc_18387
  %v1_1838a = call i32 @function_183d8()
  br label %dec_label_pc_1838c

dec_label_pc_1838c:                               ; preds = %dec_label_pc_18387.dec_label_pc_1838c_crit_edge, %bb
  %v3_1838c = phi i32 [ %v3_1838c.pre, %dec_label_pc_18387.dec_label_pc_1838c_crit_edge ], [ %v1_1838a, %bb ]
  ret i32 %v3_1838c

; uselistorder directives
  uselistorder label %dec_label_pc_1838c, { 1, 0 }
}

define i32 @function_18395() local_unnamed_addr {
dec_label_pc_18395:
  %eax.global-to-local = alloca i32, align 4
  %v0_18395 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18395
}

define i32 @function_183b7() local_unnamed_addr {
dec_label_pc_183b7:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_183bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_183bb = icmp eq i32 %v1_183bb, %tmp10
  %v0_183c2 = load i32, i32* @edi, align 4
  store i32 %v0_183c2, i32* @eax, align 8
  %v1_183c4 = icmp eq i1 %v3_183bb, false
  br i1 %v1_183c4, label %bb, label %dec_label_pc_183c6

bb:                                               ; preds = %dec_label_pc_183b7
  %v2_183c4 = call i32 @function_1840f()
  br label %dec_label_pc_183c6

dec_label_pc_183c6:                               ; preds = %bb, %dec_label_pc_183b7
  %v0_183cd = phi i32 [ %v2_183c4, %bb ], [ %v0_183c2, %dec_label_pc_183b7 ]
  ret i32 %v0_183cd
}

define i32 @function_183d0() local_unnamed_addr {
dec_label_pc_183d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_183d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_183d2
}

define i32 @function_183d8() local_unnamed_addr {
dec_label_pc_183d8:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_183d8 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_183d8, i32* @eax, align 8
  %v0_183df = load i32, i32* @esi, align 4
  %v0_183e3 = load i32, i32* @ebx, align 4
  %v4_183f3 = call i32 @function_30570(i32 %v2_183d8, i32 0, i32 %v0_183e3, i32 %v0_183df)
  %v0_183ff = load i32, i32* @edi, align 4
  %v1_183ff = add i32 %v0_183ff, 4
  %v2_183ff = inttoptr i32 %v1_183ff to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_183ff, align 1
  %v0_18403 = load i32, i32* %eax.global-to-local, align 8
  %v1_18403 = load i32, i32* @edi, align 4
  %v2_18403 = inttoptr i32 %v1_18403 to i32*
  store i32 %v0_18403, i32* %v2_18403, align 4
  %v0_18405 = call i32 @function_183b7()
  store i32 %v0_18405, i32* %eax.global-to-local, align 8
  ret i32 %v0_18405
}

define i32 @function_18407(i32 %arg1) local_unnamed_addr {
dec_label_pc_18407:
  %v0_18407 = load i32, i32* @ebp, align 4
  %v1_18407 = add i32 %v0_18407, 4
  store i32 %v1_18407, i32* @ebx, align 4
  %v0_1840a = call i32 @function_18387()
  ret i32 %v0_1840a
}

define i32 @function_1840f() local_unnamed_addr {
dec_label_pc_1840f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11equal_rangeERS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18420:
  %v1_18444 = add i32 %arg2, 8
  %v2_18444 = inttoptr i32 %v1_18444 to i32*
  %v3_18444 = load i32, i32* %v2_18444, align 4
  %v1_18447 = add i32 %arg2, 4
  %v1_18450 = icmp eq i32 %v3_18444, 0
  br i1 %v1_18450, label %bb, label %dec_label_pc_18454

bb:                                               ; preds = %dec_label_pc_18420
  %v3_18452 = inttoptr i32 %arg1 to i32*
  %v4_18452 = call i32 @function_1846e(i32 %v1_18447, i32* %v3_18452)
  br label %dec_label_pc_18454

dec_label_pc_18454:                               ; preds = %bb, %dec_label_pc_18420
  %v3_1845b = phi i32 [ %v4_18452, %bb ], [ %v1_18447, %dec_label_pc_18420 ]
  ret i32 %v3_1845b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1846e(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1846e:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %arg2, align 4
  %v2_18478 = add i32 %tmp8, 4
  %v3_18478 = inttoptr i32 %v2_18478 to i32*
  store i32 %arg1, i32* %v3_18478, align 4
  %v1_1847f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1847f = icmp eq i32 %v1_1847f, %tmp6
  store i32 %tmp8, i32* @eax, align 8
  %v1_1848a = icmp eq i1 %v3_1847f, false
  br i1 %v1_1848a, label %bb, label %dec_label_pc_18490

bb:                                               ; preds = %dec_label_pc_1846e
  %v2_1848a = call i32 @function_18535()
  br label %dec_label_pc_18490

dec_label_pc_18490:                               ; preds = %bb, %dec_label_pc_1846e
  %v0_18497 = phi i32 [ %v2_1848a, %bb ], [ %tmp8, %dec_label_pc_1846e ]
  ret i32 %v0_18497

; uselistorder directives
  uselistorder i32 %tmp8, { 1, 2, 0 }
}

define i32 @function_184ab() local_unnamed_addr {
dec_label_pc_184ab:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_184ab = load i32, i32* %eax.global-to-local, align 8
  %v2_184ab = mul i32 %v0_184ab, 8
  %v3_184ab = add i32 %v0_184ab, 1552486516
  %v4_184ab = add i32 %v3_184ab, %v2_184ab
  %v5_184ab = inttoptr i32 %v4_184ab to i32*
  %v6_184ab = load i32, i32* %v5_184ab, align 4
  %v7_184ab = add i32 %v6_184ab, 1
  store i32 %v7_184ab, i32* %v5_184ab, align 4
  %v0_184b2 = load i32, i32* %eax.global-to-local, align 8
  %v11_184b2 = and i32 %v0_184b2, -232
  store i32 %v11_184b2, i32* %eax.global-to-local, align 8
  %v0_184b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_184b4 = add i32 %v0_184b4, 8
  %v2_184b4 = inttoptr i32 %v1_184b4 to i32*
  %v3_184b4 = load i32, i32* %v2_184b4, align 4
  store i32 %v3_184b4, i32* %ebx.global-to-local, align 4
  ret i32 %v11_184b2

; uselistorder directives
  uselistorder i32 %v11_184b2, { 1, 0 }
  uselistorder i32 %v0_184ab, { 1, 0 }
}

define i32 @function_184c8() local_unnamed_addr {
dec_label_pc_184c8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_184f0() local_unnamed_addr {
dec_label_pc_184f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_184f4() local_unnamed_addr {
dec_label_pc_184f4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18502(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_18502:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg2 to i32
  %v0_18502 = load i32, i32* @eax, align 8
  %v2_18502 = mul i32 %v0_18502, 8
  %v3_18502 = add i32 %v0_18502, -74899083
  %v4_18502 = add i32 %v3_18502, %v2_18502
  %v5_18502 = inttoptr i32 %v4_18502 to i32*
  %v6_18502 = load i32, i32* %v5_18502, align 4
  %v7_18502 = add i32 %v6_18502, 1
  store i32 %v7_18502, i32* %v5_18502, align 4
  %v0_18509 = load i32, i32* %edi.global-to-local, align 4
  %v1_18509 = add i32 %v0_18509, 8
  %v2_18509 = inttoptr i32 %v1_18509 to i32*
  %v3_18509 = load i32, i32* %v2_18509, align 4
  store i32 %v3_18509, i32* %edi.global-to-local, align 4
  %v1_1850c = icmp eq i32 %v3_18509, 0
  %v1_1850e = icmp eq i1 %v1_1850c, false
  br i1 %v1_1850e, label %bb, label %dec_label_pc_18510

bb:                                               ; preds = %dec_label_pc_18502
  %v2_1850e = call i32 @function_184f4()
  store i32 %v2_1850e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_18510

dec_label_pc_18510:                               ; preds = %bb, %dec_label_pc_18502
  store i32 %tmp99, i32* %eax.global-to-local, align 8
  %v0_18518 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_18518, i32* %arg2, align 4
  %v2_1851a = add i32 %tmp99, 4
  %v3_1851a = inttoptr i32 %v2_1851a to i32*
  store i32 %arg1, i32* %v3_1851a, align 4
  %v0_1851d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1851d

; uselistorder directives
  uselistorder i32 %v0_18502, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_18528() local_unnamed_addr {
dec_label_pc_18528:
  %v0_1852b = call i32 @function_184f0()
  ret i32 %v0_1852b
}

define i32 @function_18530() local_unnamed_addr {
dec_label_pc_18530:
  %v0_18533 = call i32 @function_184c8()
  ret i32 %v0_18533
}

define i32 @function_18535() local_unnamed_addr {
dec_label_pc_18535:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_18540:
  %v1_18579 = icmp eq i32 %arg3, 0
  br i1 %v1_18579, label %bb, label %dec_label_pc_18581

bb:                                               ; preds = %dec_label_pc_18540
  %v7_1857b = call i32 @function_186a0(i32 %arg2, i32 %arg1, i32 %arg4, i32 zext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  br label %dec_label_pc_18581

dec_label_pc_18581:                               ; preds = %bb, %dec_label_pc_18540
  %v2_18581 = phi i32 [ %v7_1857b, %bb ], [ %arg3, %dec_label_pc_18540 ]
  ret i32 %v2_18581
}

define i32 @function_185fa() local_unnamed_addr {
dec_label_pc_185fa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18614() local_unnamed_addr {
dec_label_pc_18614:
  %eax.global-to-local = alloca i32, align 4
  %v0_18614 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18614
}

define i32 @function_18622() local_unnamed_addr {
dec_label_pc_18622:
  %eax.global-to-local = alloca i32, align 4
  %v0_18622 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18622
}

define i32 @function_18679(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_18679:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_18679 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18679 = add i32 %v0_18679, -2095307708
  %v2_18679 = inttoptr i32 %v1_18679 to i32*
  %v3_18679 = load i32, i32* %v2_18679, align 4
  %v4_18679 = sub i32 %v3_18679, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_18679, i32* %v2_18679, align 4
  %v0_1867f = load i32, i32* %eax.global-to-local, align 8
  %v1_1867f = add i32 %v0_1867f, ptrtoint (i1* @global_var_1.2399 to i32)
  %v2_18680 = load i1, i1* %cf.global-to-local, align 1
  %v3_18680 = zext i1 %v2_18680 to i32
  %v4_18680 = add i32 %v0_1867f, add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32))
  %v5_18680 = add i32 %v4_18680, %v3_18680
  %v25_18680 = urem i32 %v5_18680, 256
  %v27_18680 = and i32 %v1_1867f, -256
  %v28_18680 = or i32 %v25_18680, %v27_18680
  store i32 %v28_18680, i32* %eax.global-to-local, align 8
  %v1_18686 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_18686 = icmp eq i32 %v1_18686, %arg2
  store i32 %tmp103, i32* @eax, align 8
  %v0_18691 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_18691, i32* %arg1, align 4
  %v1_18693 = icmp eq i1 %v3_18686, false
  br i1 %v1_18693, label %bb, label %dec_label_pc_18679.dec_label_pc_18695_crit_edge

dec_label_pc_18679.dec_label_pc_18695_crit_edge:  ; preds = %dec_label_pc_18679
  %v0_1869c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_18695

bb:                                               ; preds = %dec_label_pc_18679
  %v2_18693 = call i32 @function_186d7()
  store i32 %v2_18693, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_18695

dec_label_pc_18695:                               ; preds = %dec_label_pc_18679.dec_label_pc_18695_crit_edge, %bb
  %v0_1869c = phi i32 [ %v0_1869c.pre, %dec_label_pc_18679.dec_label_pc_18695_crit_edge ], [ %v2_18693, %bb ]
  %v0_18695 = load i32, i32* @esp, align 4
  %v5_18695 = icmp ugt i32 %v0_18695, -77
  store i1 %v5_18695, i1* %cf.global-to-local, align 1
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_1869c

; uselistorder directives
  uselistorder label %dec_label_pc_18695, { 1, 0 }
}

define i32 @function_186a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_186a0:
  %v1_186b8 = add i32 %arg2, 16
  ret i32 %v1_186b8
}

define i32 @function_186c3() local_unnamed_addr {
dec_label_pc_186c3:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_186c3 = load i32, i32* %eax.global-to-local, align 8
  %v2_186c3 = mul i32 %v0_186c3, 8
  %v3_186c3 = add i32 %v0_186c3, 608474383
  %v4_186c3 = add i32 %v3_186c3, %v2_186c3
  %v5_186c3 = inttoptr i32 %v4_186c3 to i32*
  %v6_186c3 = load i32, i32* %v5_186c3, align 4
  %v7_186c3 = add i32 %v6_186c3, 1
  %v8_186c3 = urem i32 %v6_186c3, 16
  %v9_186c3 = add nuw nsw i32 %v8_186c3, 1
  %v10_186c3 = icmp ugt i32 %v9_186c3, 15
  store i32 %v7_186c3, i32* %v5_186c3, align 4
  %v0_186ca = load i32, i32* %eax.global-to-local, align 8
  %v1_186ca = trunc i32 %v0_186ca to i8
  %v3_186ca = load i1, i1* %cf.global-to-local, align 1
  %v4_186ca = and i8 %v1_186ca, 14
  %v5_186ca = icmp ugt i8 %v4_186ca, 9
  %v6_186ca = or i1 %v10_186c3, %v5_186ca
  br i1 %v6_186ca, label %bb, label %bb100

bb:                                               ; preds = %dec_label_pc_186c3
  %v7_186ca = add i8 %v1_186ca, -6
  %v8_186ca = icmp ugt i8 %v1_186ca, -103
  %v9_186ca = or i1 %v3_186ca, %v8_186ca
  %v10_186ca = sub i8 %v7_186ca, ptrtoint (i32* @global_var_60.2520 to i8)
  %v11_186ca = select i1 %v9_186ca, i8 %v10_186ca, i8 %v7_186ca
  store i1 %v9_186ca, i1* %cf.global-to-local, align 1
  %v12_186ca = zext i8 %v11_186ca to i32
  %v14_186ca = and i32 %v0_186ca, -256
  %v15_186ca = or i32 %v12_186ca, %v14_186ca
  br label %bb101

bb100:                                            ; preds = %dec_label_pc_186c3
  %v21_186ca = icmp ugt i8 %v1_186ca, -103
  %v22_186ca = or i1 %v3_186ca, %v21_186ca
  %v23_186ca = sub i32 %v0_186ca, zext (i8 ptrtoint (i32* @global_var_60.2520 to i8) to i32)
  %v24_186ca = select i1 %v22_186ca, i32 %v23_186ca, i32 %v0_186ca
  store i1 %v22_186ca, i1* %cf.global-to-local, align 1
  %v25_186ca = and i32 %v24_186ca, 255
  %v27_186ca = and i32 %v0_186ca, -256
  %v28_186ca = or i32 %v25_186ca, %v27_186ca
  br label %bb101

bb101:                                            ; preds = %bb, %bb100
  %storemerge3 = phi i32 [ %v28_186ca, %bb100 ], [ %v15_186ca, %bb ]
  store i32 %storemerge3, i32* %eax.global-to-local, align 8
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i1 %v22_186ca, { 1, 0 }
  uselistorder i32 %v0_186ca, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_186c3, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
}

define i32 @function_186d0() local_unnamed_addr {
dec_label_pc_186d0:
  %v0_186d2 = call i32 @function_185fa()
  ret i32 %v0_186d2
}

define i32 @function_186d7() local_unnamed_addr {
dec_label_pc_186d7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_186f2() local_unnamed_addr {
dec_label_pc_186f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_186f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_186f2
}

define i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18700:
  store i32 %arg2, i32* @ebp, align 4
  %v0_1870b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_1871f = add i32 %arg2, 8
  %v2_1871f = inttoptr i32 %v1_1871f to i32*
  %v3_1871f = load i32, i32* %v2_1871f, align 4
  %v1_18722 = icmp eq i32 %v3_1871f, 0
  %v1_18724 = icmp eq i1 %v1_18722, false
  br i1 %v1_18724, label %dec_label_pc_18739, label %dec_label_pc_18726

dec_label_pc_18726:                               ; preds = %dec_label_pc_18700
  %v1_18726 = call i32 @function_187d7(i32 %v0_1870b)
  ret i32 %v1_18726

dec_label_pc_18739:                               ; preds = %dec_label_pc_18700
  %v1_18739 = add i32 %v3_1871f, 16
  ret i32 %v1_18739
}

define i32 @function_18753() local_unnamed_addr {
dec_label_pc_18753:
  %v0_18753 = load i32, i32* @eax, align 8
  ret i32 %v0_18753
}

define i32 @function_18757() local_unnamed_addr {
dec_label_pc_18757:
  %v0_18757 = load i32, i32* @ebx, align 4
  %v1_18757 = load i32, i32* @ebp, align 4
  %v2_18757 = add i32 %v1_18757, 12
  %v3_18757 = inttoptr i32 %v2_18757 to i32*
  %v4_18757 = load i32, i32* %v3_18757, align 4
  %v15_18757 = icmp eq i32 %v0_18757, %v4_18757
  br i1 %v15_18757, label %bb, label %dec_label_pc_18757.dec_label_pc_1875c_crit_edge

dec_label_pc_18757.dec_label_pc_1875c_crit_edge:  ; preds = %dec_label_pc_18757
  %v3_1875c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1875c

bb:                                               ; preds = %dec_label_pc_18757
  %v1_1875a = call i32 @function_187a8()
  br label %dec_label_pc_1875c

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18757.dec_label_pc_1875c_crit_edge, %bb
  %v3_1875c = phi i32 [ %v3_1875c.pre, %dec_label_pc_18757.dec_label_pc_1875c_crit_edge ], [ %v1_1875a, %bb ]
  ret i32 %v3_1875c

; uselistorder directives
  uselistorder label %dec_label_pc_1875c, { 1, 0 }
}

define i32 @function_18765() local_unnamed_addr {
dec_label_pc_18765:
  %eax.global-to-local = alloca i32, align 4
  %v0_18765 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18765
}

define i32 @function_18787() local_unnamed_addr {
dec_label_pc_18787:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1878b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1878b = icmp eq i32 %v1_1878b, %tmp10
  %v0_18792 = load i32, i32* @edi, align 4
  store i32 %v0_18792, i32* @eax, align 8
  %v1_18794 = icmp eq i1 %v3_1878b, false
  br i1 %v1_18794, label %bb, label %dec_label_pc_18796

bb:                                               ; preds = %dec_label_pc_18787
  %v2_18794 = call i32 @function_187df()
  br label %dec_label_pc_18796

dec_label_pc_18796:                               ; preds = %bb, %dec_label_pc_18787
  %v0_1879d = phi i32 [ %v2_18794, %bb ], [ %v0_18792, %dec_label_pc_18787 ]
  ret i32 %v0_1879d
}

define i32 @function_187a0() local_unnamed_addr {
dec_label_pc_187a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_187a2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_187a2
}

define i32 @function_187a8() local_unnamed_addr {
dec_label_pc_187a8:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_187a8 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_187a8, i32* @eax, align 8
  %v0_187af = load i32, i32* @esi, align 4
  %v0_187b3 = load i32, i32* @ebx, align 4
  %v4_187c3 = call i32 @function_30c40(i32 %v2_187a8, i32 0, i32 %v0_187b3, i32 %v0_187af)
  %v0_187cf = load i32, i32* @edi, align 4
  %v1_187cf = add i32 %v0_187cf, 4
  %v2_187cf = inttoptr i32 %v1_187cf to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_187cf, align 1
  %v0_187d3 = load i32, i32* %eax.global-to-local, align 8
  %v1_187d3 = load i32, i32* @edi, align 4
  %v2_187d3 = inttoptr i32 %v1_187d3 to i32*
  store i32 %v0_187d3, i32* %v2_187d3, align 4
  %v0_187d5 = call i32 @function_18787()
  store i32 %v0_187d5, i32* %eax.global-to-local, align 8
  ret i32 %v0_187d5
}

define i32 @function_187d7(i32 %arg1) local_unnamed_addr {
dec_label_pc_187d7:
  %v0_187d7 = load i32, i32* @ebp, align 4
  %v1_187d7 = add i32 %v0_187d7, 4
  store i32 %v1_187d7, i32* @ebx, align 4
  %v0_187da = call i32 @function_18757()
  ret i32 %v0_187da
}

define i32 @function_187df() local_unnamed_addr {
dec_label_pc_187df:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_187f0:
  %v1_18809 = add i32 %arg2, 4
  ret i32 %v1_18809
}

define i32 @function_18820(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18820:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_18820 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18820 = add i32 %v0_18820, 63376454
  %v2_18820 = inttoptr i32 %v1_18820 to i32*
  %v3_18820 = load i32, i32* %v2_18820, align 4
  %v4_18820 = add i32 %v3_18820, -1
  store i32 %v4_18820, i32* %v2_18820, align 4
  %v0_1882b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1882b = add i32 %v0_1882b, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_1882b = trunc i32 %v1_1882b to i8
  store i32 %v1_1882b, i32* %ebx.global-to-local, align 4
  %v2_1882c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v5_1882c = or i8 %v2_1882c, %v11_1882b
  %v11_1882c = load i32, i32* %eax.global-to-local, align 8
  %v12_1882c = inttoptr i32 %v11_1882c to i8*
  store i8 %v5_1882c, i8* %v12_1882c, align 1
  %v0_1882f = load i32, i32* %eax.global-to-local, align 8
  %v4_1882f = mul i32 %v0_1882f, 2
  %v14_1882f = icmp eq i32 %v4_1882f, 0
  store i32 %v4_1882f, i32* %eax.global-to-local, align 8
  %v1_18833 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18833 = add i32 %v1_18833, 12
  %v3_18833 = inttoptr i32 %v2_18833 to i32*
  store i32 %v4_1882f, i32* %v3_18833, align 4
  br i1 %v14_1882f, label %dec_label_pc_18840, label %dec_label_pc_18838

dec_label_pc_18838:                               ; preds = %dec_label_pc_18820
  br label %dec_label_pc_18840

dec_label_pc_18840:                               ; preds = %dec_label_pc_18838, %dec_label_pc_18820
  %v0_18840 = load i32, i32* %esi.global-to-local, align 4
  %v1_18840 = add i32 %v0_18840, 16
  %v2_18840 = inttoptr i32 %v1_18840 to i32*
  %v3_18840 = load i32, i32* %v2_18840, align 4
  store i32 %v3_18840, i32* %eax.global-to-local, align 8
  %v0_18843 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18843 = add i32 %v0_18843, 8
  %v2_18843 = inttoptr i32 %v1_18843 to i32*
  store i32 ptrtoint (i32* @global_var_3119c.2678 to i32), i32* %v2_18843, align 4
  %v0_1884a = load i32, i32* %eax.global-to-local, align 8
  %v1_1884a = load i32, i32* %ebx.global-to-local, align 4
  %v2_1884a = add i32 %v1_1884a, 16
  %v3_1884a = inttoptr i32 %v2_1884a to i32*
  store i32 %v0_1884a, i32* %v3_1884a, align 4
  %v0_1884d = load i32, i32* %esi.global-to-local, align 4
  %v1_1884d = add i32 %v0_1884d, 20
  %v2_1884d = inttoptr i32 %v1_1884d to i32*
  %v3_1884d = load i32, i32* %v2_1884d, align 4
  store i32 %v3_1884d, i32* %eax.global-to-local, align 8
  %v1_18850 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18850 = add i32 %v1_18850, 20
  %v3_18850 = inttoptr i32 %v2_18850 to i32*
  store i32 %v3_1884d, i32* %v3_18850, align 4
  %v0_18853 = load i32, i32* %esi.global-to-local, align 4
  %v1_18853 = add i32 %v0_18853, 24
  %v2_18853 = inttoptr i32 %v1_18853 to i32*
  %v3_18853 = load i32, i32* %v2_18853, align 4
  store i32 %v3_18853, i32* %eax.global-to-local, align 8
  %v0_18856 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18856 = inttoptr i32 %v0_18856 to i32*
  store i32 ptrtoint (%vtable_31188_type* @global_var_31188.2677 to i32), i32* %v1_18856, align 4
  %v0_1885c = load i32, i32* %eax.global-to-local, align 8
  %v1_1885c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1885c = add i32 %v1_1885c, 24
  %v3_1885c = inttoptr i32 %v2_1885c to i32*
  store i32 %v0_1885c, i32* %v3_1885c, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_18863 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18863 = xor i32 %v1_18863, %arg1
  %v3_18863 = icmp eq i32 %v2_18863, 0
  store i32 %v2_18863, i32* %eax.global-to-local, align 8
  %v1_1886a = icmp eq i1 %v3_18863, false
  br i1 %v1_1886a, label %dec_label_pc_18872, label %dec_label_pc_1886c

dec_label_pc_1886c:                               ; preds = %dec_label_pc_18840
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v2_18863

dec_label_pc_18872:                               ; preds = %dec_label_pc_18840
  ret i32 %v2_18863

; uselistorder directives
  uselistorder i32 %v2_18863, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1882f, { 2, 0, 1 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_31188_type* @global_var_31188.2677 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_188a0:
  %v4_188a0 = add i32 %arg1, -28
  %v1_188a5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %v4_188a0)
  ret i32 %v1_188a5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_188b0:
  ret i32 0
}

define i32 @function_188d0() local_unnamed_addr {
dec_label_pc_188d0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_188d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_188d0 = add i32 %v0_188d0, -1996217228
  %v2_188d0 = inttoptr i32 %v1_188d0 to i32*
  %v3_188d0 = load i32, i32* %v2_188d0, align 4
  %v4_188d0 = sub i32 %v3_188d0, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_188d0, i32* %v2_188d0, align 4
  %v0_188d6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_188d6
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian8bad_yearEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18920:
  ret i32 0
}

define i32 @function_1894b() local_unnamed_addr {
dec_label_pc_1894b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1894b = load i32, i32* %eax.global-to-local, align 8
  %v11_1894b = and i32 %v0_1894b, -119
  store i32 %v11_1894b, i32* %eax.global-to-local, align 8
  ret i32 %v11_1894b

; uselistorder directives
  uselistorder i32 %v11_1894b, { 1, 0 }
}

define i32 @function_189d8() local_unnamed_addr {
dec_label_pc_189d8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_189e7() local_unnamed_addr {
dec_label_pc_189e7:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_189e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_189e9 = add i32 %v0_189e9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_189e9, i32* %ebx.global-to-local, align 4
  %v0_189ea = load i32, i32* %eax.global-to-local, align 8
  %v2_189ea = load i1, i1* %cf.global-to-local, align 1
  %v3_189ea = zext i1 %v2_189ea to i32
  %v4_189ea = add i32 %v0_189ea, 176
  %v5_189ea = add i32 %v4_189ea, %v3_189ea
  %v30_189ea = urem i32 %v5_189ea, 256
  %v32_189ea = and i32 %v0_189ea, -256
  %v33_189ea = or i32 %v30_189ea, %v32_189ea
  store i32 %v33_189ea, i32* %eax.global-to-local, align 8
  %v2_189ed = inttoptr i32 %v33_189ea to i32*
  %v3_189ed = load i32, i32* %v2_189ed, align 4
  %v4_189ed = add i32 %v33_189ea, %v3_189ed
  %v9_189ed = icmp ult i32 %v4_189ed, %v33_189ea
  store i1 %v9_189ed, i1* %cf.global-to-local, align 1
  store i32 %v4_189ed, i32* @eax, align 8
  %tmp100 = urem i32 %v1_189e9, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  %tmp102 = zext i1 %tmp101 to i32
  %v3_189f6 = call i32 @function_281d0(i32 %tmp102)
  store i32 %v4_189ed, i32* @eax, align 8
  %v0_189ff = load i32, i32* %esi.global-to-local, align 4
  %tmp103 = urem i32 %v0_189ff, 2
  %tmp104 = icmp ne i32 %tmp103, 0
  %tmp105 = zext i1 %tmp104 to i32
  %v3_18a06 = call i32 @function_281d0(i32 %tmp105)
  store i32 %v4_189ed, i32* @eax, align 8
  store i32 %v4_189ed, i32* %esi.global-to-local, align 4
  %v0_18a11 = call i32 @function_189d8()
  store i32 %v0_18a11, i32* %eax.global-to-local, align 8
  ret i32 %v0_18a11

; uselistorder directives
  uselistorder i32 %v4_189ed, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v33_189ea, { 1, 0, 2, 3 }
  uselistorder i32 %v0_189ea, { 1, 0 }
  uselistorder i32 (i32)* @function_281d0, { 1, 0 }
}

define i32 @function_18a13() local_unnamed_addr {
dec_label_pc_18a13:
  %eax.global-to-local = alloca i32, align 4
  %v0_18a13 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18a13
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18a20:
  %v1_18a39 = add i32 %arg2, 4
  ret i32 %v1_18a39
}

define i32 @function_18a50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a50:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_18a50 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18a50 = add i32 %v0_18a50, 63376454
  %v2_18a50 = inttoptr i32 %v1_18a50 to i32*
  %v3_18a50 = load i32, i32* %v2_18a50, align 4
  %v4_18a50 = add i32 %v3_18a50, -1
  store i32 %v4_18a50, i32* %v2_18a50, align 4
  %v0_18a56 = load i32, i32* %edx.global-to-local, align 4
  %v1_18a56 = trunc i32 %v0_18a56 to i8
  %v2_18a56 = load i32, i32* %eax.global-to-local, align 8
  %v3_18a56 = inttoptr i32 %v2_18a56 to i8*
  store i8 %v1_18a56, i8* %v3_18a56, align 1
  %v0_18a58 = load i32, i32* %eax.global-to-local, align 8
  %v4_18a58 = mul i32 %v0_18a58, 2
  %v14_18a58 = icmp eq i32 %v4_18a58, 0
  store i32 %v4_18a58, i32* %eax.global-to-local, align 8
  %v0_18a5a = load i32, i32* %ebx.global-to-local, align 4
  %v1_18a5a = add i32 %v0_18a5a, 8
  %v2_18a5a = inttoptr i32 %v1_18a5a to i32*
  store i32 ptrtoint (i32* @global_var_30e18.2643 to i32), i32* %v2_18a5a, align 4
  %v1_18a63 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18a63 = add i32 %v1_18a63, 12
  %v3_18a63 = inttoptr i32 %v2_18a63 to i32*
  store i32 %v4_18a58, i32* %v3_18a63, align 4
  br i1 %v14_18a58, label %dec_label_pc_18a70, label %dec_label_pc_18a68

dec_label_pc_18a68:                               ; preds = %dec_label_pc_18a50
  %v1_18a68 = inttoptr i32 %v4_18a58 to i32*
  %v2_18a68 = load i32, i32* %v1_18a68, align 4
  store i32 %v2_18a68, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_18a70

dec_label_pc_18a70:                               ; preds = %dec_label_pc_18a68, %dec_label_pc_18a50
  %v0_18a70 = load i32, i32* %esi.global-to-local, align 4
  %v1_18a70 = add i32 %v0_18a70, 16
  %v2_18a70 = inttoptr i32 %v1_18a70 to i32*
  %v3_18a70 = load i32, i32* %v2_18a70, align 4
  store i32 %v3_18a70, i32* %eax.global-to-local, align 8
  %v0_18a73 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18a73 = add i32 %v0_18a73, 8
  %v2_18a73 = inttoptr i32 %v1_18a73 to i32*
  store i32 ptrtoint (i32* @global_var_310bc.2680 to i32), i32* %v2_18a73, align 4
  %v0_18a7a = load i32, i32* %eax.global-to-local, align 8
  %v1_18a7a = load i32, i32* %ebx.global-to-local, align 4
  %v2_18a7a = add i32 %v1_18a7a, 16
  %v3_18a7a = inttoptr i32 %v2_18a7a to i32*
  store i32 %v0_18a7a, i32* %v3_18a7a, align 4
  %v0_18a7d = load i32, i32* %esi.global-to-local, align 4
  %v1_18a7d = add i32 %v0_18a7d, 20
  %v2_18a7d = inttoptr i32 %v1_18a7d to i32*
  %v3_18a7d = load i32, i32* %v2_18a7d, align 4
  store i32 %v3_18a7d, i32* %eax.global-to-local, align 8
  %v1_18a80 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18a80 = add i32 %v1_18a80, 20
  %v3_18a80 = inttoptr i32 %v2_18a80 to i32*
  store i32 %v3_18a7d, i32* %v3_18a80, align 4
  %v0_18a83 = load i32, i32* %esi.global-to-local, align 4
  %v1_18a83 = add i32 %v0_18a83, 24
  %v2_18a83 = inttoptr i32 %v1_18a83 to i32*
  %v3_18a83 = load i32, i32* %v2_18a83, align 4
  store i32 %v3_18a83, i32* %eax.global-to-local, align 8
  %v0_18a86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18a86 = inttoptr i32 %v0_18a86 to i32*
  store i32 ptrtoint (%vtable_310a8_type* @global_var_310a8.2679 to i32), i32* %v1_18a86, align 4
  %v0_18a8c = load i32, i32* %eax.global-to-local, align 8
  %v1_18a8c = load i32, i32* %ebx.global-to-local, align 4
  %v2_18a8c = add i32 %v1_18a8c, 24
  %v3_18a8c = inttoptr i32 %v2_18a8c to i32*
  store i32 %v0_18a8c, i32* %v3_18a8c, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_18a93 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18a93 = xor i32 %v1_18a93, %arg1
  %v3_18a93 = icmp eq i32 %v2_18a93, 0
  store i32 %v2_18a93, i32* %eax.global-to-local, align 8
  %v1_18a9a = icmp eq i1 %v3_18a93, false
  br i1 %v1_18a9a, label %dec_label_pc_18aa2, label %dec_label_pc_18a9c

dec_label_pc_18a9c:                               ; preds = %dec_label_pc_18a70
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v2_18a93

dec_label_pc_18aa2:                               ; preds = %dec_label_pc_18a70
  ret i32 %v2_18a93

; uselistorder directives
  uselistorder i32 %v2_18a93, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18a58, { 3, 2, 0, 1 }
  uselistorder i32 ()* @instance_of_cnetcleanup, { 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_310a8_type* @global_var_310a8.2679 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ad0:
  %v4_18ad0 = add i32 %arg1, -28
  %v1_18ad5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %v4_18ad0)
  ret i32 %v1_18ad5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 29, 28, 30, 31, 32, 33, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_18ae0:
  ret i32 0
}

define i32 @function_18b00() local_unnamed_addr {
dec_label_pc_18b00:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_18b00 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18b00 = add i32 %v0_18b00, -1996217228
  %v2_18b00 = inttoptr i32 %v1_18b00 to i32*
  %v3_18b00 = load i32, i32* %v2_18b00, align 4
  %v4_18b00 = sub i32 %v3_18b00, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_18b00, i32* %v2_18b00, align 4
  %v0_18b06 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18b06
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian9bad_monthEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18b50:
  ret i32 0
}

define i32 @function_18b7b() local_unnamed_addr {
dec_label_pc_18b7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_18b7b = load i32, i32* %eax.global-to-local, align 8
  %v11_18b7b = and i32 %v0_18b7b, -119
  store i32 %v11_18b7b, i32* %eax.global-to-local, align 8
  ret i32 %v11_18b7b

; uselistorder directives
  uselistorder i32 %v11_18b7b, { 1, 0 }
}

define i32 @function_18c08() local_unnamed_addr {
dec_label_pc_18c08:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18c17() local_unnamed_addr {
dec_label_pc_18c17:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_18c19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18c19 = add i32 %v0_18c19, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_18c19, i32* %ebx.global-to-local, align 4
  %v0_18c1a = load i32, i32* %eax.global-to-local, align 8
  %v2_18c1a = load i1, i1* %cf.global-to-local, align 1
  %v3_18c1a = zext i1 %v2_18c1a to i32
  %v4_18c1a = add i32 %v0_18c1a, 176
  %v5_18c1a = add i32 %v4_18c1a, %v3_18c1a
  %v30_18c1a = urem i32 %v5_18c1a, 256
  %v32_18c1a = and i32 %v0_18c1a, -256
  %v33_18c1a = or i32 %v30_18c1a, %v32_18c1a
  store i32 %v33_18c1a, i32* %eax.global-to-local, align 8
  %v2_18c1d = inttoptr i32 %v33_18c1a to i32*
  %v3_18c1d = load i32, i32* %v2_18c1d, align 4
  %v4_18c1d = add i32 %v33_18c1a, %v3_18c1d
  %v9_18c1d = icmp ult i32 %v4_18c1d, %v33_18c1a
  store i1 %v9_18c1d, i1* %cf.global-to-local, align 1
  store i32 %v4_18c1d, i32* @eax, align 8
  %tmp100 = urem i32 %v1_18c19, 2
  %tmp101 = icmp ne i32 %tmp100, 0
  %tmp102 = zext i1 %tmp101 to i32
  %v3_18c26 = call i32 @function_28470(i32 %tmp102)
  store i32 %v4_18c1d, i32* @eax, align 8
  %v0_18c2f = load i32, i32* %esi.global-to-local, align 4
  %tmp103 = urem i32 %v0_18c2f, 2
  %tmp104 = icmp ne i32 %tmp103, 0
  %tmp105 = zext i1 %tmp104 to i32
  %v3_18c36 = call i32 @function_28470(i32 %tmp105)
  store i32 %v4_18c1d, i32* @eax, align 8
  store i32 %v4_18c1d, i32* %esi.global-to-local, align 4
  %v0_18c41 = call i32 @function_18c08()
  store i32 %v0_18c41, i32* %eax.global-to-local, align 8
  ret i32 %v0_18c41

; uselistorder directives
  uselistorder i32 %v4_18c1d, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v33_18c1a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18c1a, { 1, 0 }
  uselistorder i32 (i32)* @function_28470, { 1, 0 }
}

define i32 @function_18c43() local_unnamed_addr {
dec_label_pc_18c43:
  %eax.global-to-local = alloca i32, align 4
  %v0_18c43 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18c43
}

define i32 @_ZN5boost9date_time14microsec_clockINS_10posix_time5ptimeEE11create_timeEPFP2tmPKlS6_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18c50:
  %stack_var_-60 = alloca i32, align 4
  %v2_18c81 = ptrtoint i32* %stack_var_-60 to i32
  ret i32 %v2_18c81
}

define i32 @function_18c8c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_18c8c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp140 = trunc i32 %arg6 to i16
  %tmp141 = trunc i32 %arg4 to i16
  %stack_var_104 = alloca i32, align 4
  %stack_var_123 = alloca i32, align 4
  %tmp151 = ptrtoint i32* %arg1 to i32
  %stack_var_116 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_116, align 4
  %tmp163 = call i64 @__decompiler_undefined_function_5()
  %stack_var_52 = alloca i32, align 4
  %stack_var_112 = alloca i32, align 4
  %v0_18c8c = load i32, i32* %ebx.global-to-local, align 4
  %v1_18c8c = add i32 %v0_18c8c, -1956633532
  %v2_18c8c = inttoptr i32 %v1_18c8c to i32*
  %v3_18c8c = load i32, i32* %v2_18c8c, align 4
  %v4_18c8c = sub i32 %v3_18c8c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_18c8c, i32* %v2_18c8c, align 4
  %v0_18c92 = load i32, i32* %edx.global-to-local, align 4
  %v1_18c92 = trunc i32 %v0_18c92 to i16
  %v2_18c92 = call i8 @__asm_insb(i16 %v1_18c92)
  %v3_18c92 = load i32, i32* %edi.global-to-local, align 4
  %v4_18c92 = inttoptr i32 %v3_18c92 to i8*
  store i8 %v2_18c92, i8* %v4_18c92, align 1
  %v0_18c93 = load i32, i32* %eax.global-to-local, align 8
  %v11_18c93 = and i32 %v0_18c93, or (i32 zext (i8 ptrtoint (i8* @global_var_64.2519 to i8) to i32), i32 -256)
  store i32 %v11_18c93, i32* %stack_var_112, align 4
  %v2_18ca1 = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_18ca1, i32* %edx.global-to-local, align 4
  %v4_18cac = urem i32 %arg4, 65536
  store i32 %v4_18cac, i32* @eax, align 8
  store i32 %v4_18cac, i32* %ebx.global-to-local, align 4
  %v1_18cb3 = icmp eq i16 %tmp141, 0
  br i1 %v1_18cb3, label %bb, label %dec_label_pc_18cbf

bb:                                               ; preds = %dec_label_pc_18c8c
  %v3_18cb9 = ptrtoint i32* %stack_var_52 to i32
  %v4_18cb9 = call i32 @function_19051(i32 %v2_18ca1, i32 %v3_18cb9)
  store i32 %v4_18cb9, i32* @eax, align 8
  br label %dec_label_pc_18cbf

dec_label_pc_18cbf:                               ; preds = %bb, %dec_label_pc_18c8c
  %v0_18cbf = phi i32 [ %v4_18cb9, %bb ], [ %v4_18cac, %dec_label_pc_18c8c ]
  %v1_18cbf = trunc i32 %v0_18cbf to i16
  %tmp198 = icmp ult i16 %v1_18cbf, 32
  br i1 %tmp198, label %dec_label_pc_18cc9, label %bb178

bb178:                                            ; preds = %dec_label_pc_18cbf
  %v6_18cc3 = trunc i64 %tmp163 to i32
  %v7_18cc3 = call i32 @function_19051(i32 %v4_18cac, i32 %v6_18cc3)
  store i32 %v7_18cc3, i32* @eax, align 8
  br label %dec_label_pc_18cc9

dec_label_pc_18cc9:                               ; preds = %dec_label_pc_18cbf, %bb178
  %v0_18f7828 = phi i32 [ %v0_18cbf, %dec_label_pc_18cbf ], [ %v7_18cc3, %bb178 ]
  %v4_18cc9 = urem i32 %arg5, 65536
  %v1_18ccf = add i32 %v4_18cc9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_18ccf, i32* %ecx.global-to-local, align 4
  %fold = add i32 %arg5, ptrtoint (i1* @global_var_1.2399 to i32)
  %v1_18cd7 = urem i32 %fold, 65536
  store i32 %v1_18cd7, i32* %ebx.global-to-local, align 4
  %v2_18cda = icmp eq i32 %v1_18cd7, 0
  br i1 %v2_18cda, label %bb179, label %dec_label_pc_18ce6

bb179:                                            ; preds = %dec_label_pc_18cc9
  %sext18 = mul i32 %arg5, 65536
  %v4_18ce0 = sdiv i32 %sext18, 65536
  %v5_18ce0 = call i32 @function_19065(i32 0, i32 %v4_18ce0)
  store i32 %v5_18ce0, i32* @eax, align 8
  %v0_18ce6.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_18ce6

dec_label_pc_18ce6:                               ; preds = %bb179, %dec_label_pc_18cc9
  %v0_18f7827 = phi i32 [ %v5_18ce0, %bb179 ], [ %v0_18f7828, %dec_label_pc_18cc9 ]
  %v0_18ce6 = phi i32 [ %v0_18ce6.pre, %bb179 ], [ %v1_18ccf, %dec_label_pc_18cc9 ]
  %v1_18ce6 = trunc i32 %v0_18ce6 to i16
  %tmp199 = icmp ult i16 %v1_18ce6, 13
  br i1 %tmp199, label %dec_label_pc_18cf0, label %bb181

bb181:                                            ; preds = %dec_label_pc_18ce6
  %sext = mul i32 %arg5, 65536
  %v7_18cea = sdiv i32 %sext, 65536
  %v8_18cea = call i32 @function_19065(i32 %v1_18cd7, i32 %v7_18cea)
  store i32 %v8_18cea, i32* @eax, align 8
  br label %dec_label_pc_18cf0

dec_label_pc_18cf0:                               ; preds = %dec_label_pc_18ce6, %bb181
  %v0_18f7826 = phi i32 [ %v0_18f7827, %dec_label_pc_18ce6 ], [ %v8_18cea, %bb181 ]
  %v2_18cf9 = add i16 %tmp140, ptrtoint (i16* @global_var_76c.2710 to i16)
  %v17_18cf9 = zext i16 %v2_18cf9 to i32
  store i32 %v17_18cf9, i32* %ebx.global-to-local, align 4
  store i32 %v17_18cf9, i32* %esi.global-to-local, align 4
  %v7_18d07 = icmp ugt i16 %v2_18cf9, 1399
  br i1 %v7_18d07, label %dec_label_pc_18d0d, label %bb182

bb182:                                            ; preds = %dec_label_pc_18cf0
  %sext14 = mul i32 %arg6, 65536
  %v9_18d07 = sdiv i32 %sext14, 65536
  %v10_18d07 = call i32 @function_1905b(i32 %v9_18d07)
  store i32 %v10_18d07, i32* @eax, align 8
  %v0_18d0d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_18d0d

dec_label_pc_18d0d:                               ; preds = %dec_label_pc_18cf0, %bb182
  %v0_18f7825 = phi i32 [ %v0_18f7826, %dec_label_pc_18cf0 ], [ %v10_18d07, %bb182 ]
  %v0_18d0d = phi i32 [ %v17_18cf9, %dec_label_pc_18cf0 ], [ %v0_18d0d.pre, %bb182 ]
  %v1_18d0d = trunc i32 %v0_18d0d to i16
  %tmp200 = icmp ult i16 %v1_18d0d, 10001
  br i1 %tmp200, label %dec_label_pc_18d18, label %bb184

bb184:                                            ; preds = %dec_label_pc_18d0d
  %sext15 = mul i32 %arg6, 65536
  %v5_18d12 = sdiv i32 %sext15, 65536
  %v6_18d12 = call i32 @function_1905b(i32 %v5_18d12)
  store i32 %v6_18d12, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_18d18

dec_label_pc_18d18:                               ; preds = %dec_label_pc_18d0d, %bb184
  %v0_18f78.pre = phi i32 [ %v0_18f7825, %dec_label_pc_18d0d ], [ %v6_18d12, %bb184 ]
  %v0_18d18 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18d18 = trunc i32 %v0_18d18 to i16
  %tmp201 = icmp ult i16 %v1_18d18, 12
  br i1 %tmp201, label %dec_label_pc_18f00, label %dec_label_pc_18d22

dec_label_pc_18d22:                               ; preds = %dec_label_pc_18f78, %dec_label_pc_18f14, %dec_label_pc_18d18
  %v3_18d22 = load i32, i32* %stack_var_116, align 4
  store i32 %v3_18d22, i32* %ecx.global-to-local, align 4
  %v0_18d25 = load i32, i32* %ebp.global-to-local, align 4
  %v2_18d29 = load i32, i32* %stack_var_112, align 4
  store i32 %v2_18d29, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_18d36 = icmp slt i32 %v3_18d22, 0
  br i1 %v2_18d36, label %dec_label_pc_18d98, label %dec_label_pc_18d3a

dec_label_pc_18d3a:                               ; preds = %dec_label_pc_18d22
  %v2_18d3c = lshr i32 %arg3, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v5_18d3c = trunc i32 %v2_18d3c to i8
  store i32 %v2_18d3c, i32* %eax.global-to-local, align 8
  %v5_18d3f = icmp eq i8 %v5_18d3c, 0
  %v1_18d41 = icmp eq i1 %v5_18d3f, false
  br i1 %v1_18d41, label %dec_label_pc_18d98, label %dec_label_pc_18d43

dec_label_pc_18d43:                               ; preds = %dec_label_pc_18d3a
  %v2_18d43 = icmp slt i32 %v2_18d29, 0
  br i1 %v2_18d43, label %dec_label_pc_18d98, label %dec_label_pc_18d47

dec_label_pc_18d47:                               ; preds = %dec_label_pc_18d43
  %v3_18d4e = sext i32 %arg3 to i64
  %v4_18d4e = mul nsw i64 %v3_18d4e, 3600
  %v5_18d4e = trunc i64 %v4_18d4e to i32
  %v6_18d4e = udiv i64 %v4_18d4e, 4294967296
  %v7_18d4e = trunc i64 %v6_18d4e to i32
  %v2_18d5d = sext i32 %v3_18d22 to i64
  %v4_18d5d = mul nsw i64 %v2_18d5d, sext (i32 ptrtoint (i32* @global_var_3c.2406 to i32) to i64)
  %v5_18d5d = trunc i64 %v4_18d5d to i32
  %v6_18d5d = udiv i64 %v4_18d5d, 4294967296
  %v7_18d5d = trunc i64 %v6_18d5d to i32
  %v6_18d5f = add i32 %v5_18d5d, %v5_18d4e
  %v11_18d5f = icmp ult i32 %v6_18d5f, %v5_18d4e
  %v7_18d68 = zext i1 %v11_18d5f to i32
  %v8_18d68 = add i32 %v7_18d5d, %v7_18d4e
  %v2_18d6e = ashr i32 %v2_18d29, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v6_18d71 = add i32 %v6_18d5f, %v2_18d29
  %v11_18d71 = icmp ult i32 %v6_18d71, %v6_18d5f
  %v25_18d71 = sext i32 %v6_18d71 to i64
  %v7_18d75 = zext i1 %v11_18d71 to i32
  %v9_18d68 = add i32 %v8_18d68, %v2_18d6e
  %v8_18d75 = add i32 %v9_18d68, %v7_18d68
  %v9_18d75 = add i32 %v8_18d75, %v7_18d75
  %v7_18d79 = mul i32 %v9_18d75, 1000000
  %v8_18d81 = mul nsw i64 %v25_18d71, 1000000
  %v9_18d81 = trunc i64 %v8_18d81 to i32
  %v10_18d81 = udiv i64 %v8_18d81, 4294967296
  %v11_18d81 = trunc i64 %v10_18d81 to i32
  store i32 %v9_18d81, i32* %eax.global-to-local, align 8
  %v2_18d89 = add i32 %v7_18d79, %v11_18d81
  store i32 %v2_18d89, i32* %edx.global-to-local, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_18d8f = add i32 %v9_18d81, %v0_18d25
  %v7_18d8f = icmp ult i32 %v2_18d8f, %v0_18d25
  store i32 %v2_18d8f, i32* @esi, align 4
  %v3_18d91 = zext i1 %v7_18d8f to i32
  %v5_18d91 = add i32 %v3_18d91, %v2_18d89
  br label %dec_label_pc_18e01

dec_label_pc_18d98:                               ; preds = %dec_label_pc_18d22, %dec_label_pc_18d43, %dec_label_pc_18d3a
  %v2_18d9c = ashr i32 %v3_18d22, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_18da4 = ashr i32 %arg3, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_18da7 = xor i32 %v2_18d9c, %v3_18d22
  %v2_18da9 = xor i32 %v2_18da4, %arg3
  %v2_18dab = sub i32 %v2_18da7, %v2_18d9c
  store i32 %v2_18dab, i32* %ecx.global-to-local, align 4
  %v2_18dad = sub i32 %v2_18da9, %v2_18da4
  store i32 %v2_18dad, i32* %ebx.global-to-local, align 4
  %v3_18db1 = sext i32 %v2_18dab to i64
  %v4_18db1 = mul nsw i64 %v3_18db1, -60
  %v5_18db1 = trunc i64 %v4_18db1 to i32
  %v6_18db1 = udiv i64 %v4_18db1, 4294967296
  %v7_18db1 = trunc i64 %v6_18db1 to i32
  %v2_18dc0 = sext i32 %v2_18dad to i64
  %v4_18dc0 = mul nsw i64 %v2_18dc0, -3600
  %v5_18dc0 = trunc i64 %v4_18dc0 to i32
  %v6_18dc0 = udiv i64 %v4_18dc0, 4294967296
  %v7_18dc0 = trunc i64 %v6_18dc0 to i32
  %v6_18dc2 = add i32 %v5_18db1, %v5_18dc0
  %v11_18dc2 = icmp ult i32 %v6_18dc2, %v5_18db1
  %v7_18dc6 = zext i1 %v11_18dc2 to i32
  %v8_18dc6 = add i32 %v7_18db1, %v7_18dc0
  %v2_18dcc = ashr i32 %v2_18d29, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_18dd1 = xor i32 %v2_18dcc, %v2_18d29
  %v2_18dd3 = sub i32 %v2_18dd1, %v2_18dcc
  %v2_18dd7 = ashr i32 %v2_18dd3, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v6_18dda = sub i32 %v6_18dc2, %v2_18dd3
  %v11_18dda = icmp ult i32 %v6_18dc2, %v2_18dd3
  %v25_18dda = sext i32 %v6_18dda to i64
  %v7_18de3 = zext i1 %v11_18dda to i32
  %v9_18dc6 = sub i32 %v8_18dc6, %v2_18dd7
  %v8_18de3 = add i32 %v9_18dc6, %v7_18dc6
  %v9_18de3 = add i32 %v8_18de3, %v7_18de3
  %v7_18de7 = mul i32 %v9_18de3, 1000000
  %v8_18def = mul nsw i64 %v25_18dda, 1000000
  %v9_18def = trunc i64 %v8_18def to i32
  %v10_18def = udiv i64 %v8_18def, 4294967296
  %v11_18def = trunc i64 %v10_18def to i32
  store i32 %v9_18def, i32* %eax.global-to-local, align 8
  %v2_18df3 = add i32 %v7_18de7, %v11_18def
  store i32 %v2_18df3, i32* %edx.global-to-local, align 4
  store i32 %v2_18df3, i32* %edi.global-to-local, align 4
  %v5_18df9 = sub i32 %v9_18def, %v0_18d25
  %v10_18df9 = icmp ult i32 %v9_18def, %v0_18d25
  store i32 %v5_18df9, i32* @esi, align 4
  %v6_18dfd = zext i1 %v10_18df9 to i32
  %v8_18dfd = add i32 %v2_18df3, %v6_18dfd
  br label %dec_label_pc_18e01

dec_label_pc_18e01:                               ; preds = %dec_label_pc_18d98, %dec_label_pc_18d47
  %storemerge = phi i32 [ %v8_18dfd, %dec_label_pc_18d98 ], [ %v5_18d91, %dec_label_pc_18d47 ]
  store i32 %storemerge, i32* @edi, align 4
  %v6_18e10 = sub nsw i32 14, %v1_18cd7
  %v3_18e16 = sext i32 %v6_18e10 to i64
  %v4_18e16 = mul nsw i64 %v3_18e16, 715827883
  %v6_18e16 = udiv i64 %v4_18e16, 4294967296
  %v7_18e16 = trunc i64 %v6_18e16 to i32
  %v2_18e18 = ashr i32 %v6_18e10, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_18e1b = sdiv i32 %v7_18e16, 2
  %v1_18e1d = trunc i32 %v2_18e1b to i16
  %v3_18e1d = trunc i32 %v2_18e18 to i16
  %v4_18e1d = sub i16 %v1_18e1d, %v3_18e1d
  %v20_18e1d = zext i16 %v4_18e1d to i32
  %v22_18e1d = and i32 %v2_18e1b, -65536
  %v23_18e1d = or i32 %v20_18e1d, %v22_18e1d
  %v2_18e25 = add i16 %tmp140, 6700
  %v4_18e2a = sub i16 %v2_18e25, %v4_18e1d
  %v20_18e2a = zext i16 %v4_18e2a to i32
  %v2_18e30 = mul i32 %v23_18e1d, 12
  %v3_18e30 = add i32 %v2_18e30, 65534
  %v4_18e30 = add i32 %v3_18e30, %arg5
  store i32 1717986919, i32* %ebx.global-to-local, align 4
  %v1_18e39 = urem i32 %v4_18e30, 65536
  %v3_18e3c = mul nuw nsw i32 %v1_18e39, 153
  %v1_18e42 = add nuw nsw i32 %v3_18e3c, 2
  %v3_18e4c = mul nuw nsw i32 %v20_18e2a, 365
  %v2_18e52 = udiv i32 %v1_18e42, 5
  %div = udiv i16 %v4_18e2a, 4
  %v3_18e5c = zext i16 %div to i32
  %div196 = udiv i16 %v4_18e2a, 16
  %v3_18e63 = zext i16 %div196 to i32
  %v3_18e6c = mul nuw nsw i32 %v3_18e5c, 5243
  %v3_18e72 = mul nuw nsw i32 %v3_18e63, 2622
  %v2_18e78 = udiv i32 %v3_18e6c, 131072
  %v2_18e7d = udiv i32 %v3_18e72, 65536
  store i32 %v2_18e7d, i32* %ecx.global-to-local, align 4
  %v5_18e54 = add nsw i32 %v4_18cac, -32045
  %v2_18e58 = add nsw i32 %v5_18e54, %v3_18e4c
  %v2_18e67 = add nsw i32 %v2_18e58, %v3_18e5c
  %v2_18e7b = add nsw i32 %v2_18e67, %v2_18e7d
  %v3_18e80 = sub nsw i32 %v2_18e7b, %v2_18e78
  %v4_18e80 = add nsw i32 %v3_18e80, %v2_18e52
  store i32 %v4_18e80, i32* @eax, align 8
  store i32 %tmp151, i32* %edx.global-to-local, align 4
  %v1_18e8b = icmp eq i32 %v4_18e80, 0
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %arg1, align 4
  %v1_18e93 = add i32 %tmp151, 4
  %v2_18e93 = inttoptr i32 %v1_18e93 to i32*
  store i32 0, i32* %v2_18e93, align 4
  br i1 %v1_18e8b, label %bb188, label %dec_label_pc_18e01.dec_label_pc_18ea0_crit_edge

dec_label_pc_18e01.dec_label_pc_18ea0_crit_edge:  ; preds = %dec_label_pc_18e01
  %v0_18ea0.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_18ea0

bb188:                                            ; preds = %dec_label_pc_18e01
  %v1_18e9a = call i32 @function_18fc0()
  store i32 %v1_18e9a, i32* @eax, align 8
  br label %dec_label_pc_18ea0

dec_label_pc_18ea0:                               ; preds = %dec_label_pc_18e01.dec_label_pc_18ea0_crit_edge, %bb188
  %v0_18ea0 = phi i32 [ %v0_18ea0.pre, %dec_label_pc_18e01.dec_label_pc_18ea0_crit_edge ], [ %v1_18e9a, %bb188 ]
  %v10_18ea0 = icmp eq i32 %v0_18ea0, -1
  br i1 %v10_18ea0, label %bb189, label %dec_label_pc_18ea9

bb189:                                            ; preds = %dec_label_pc_18ea0
  %v1_18ea3 = call i32 @function_18fc0()
  store i32 %v1_18ea3, i32* @eax, align 8
  br label %dec_label_pc_18ea9

dec_label_pc_18ea9:                               ; preds = %bb189, %dec_label_pc_18ea0
  %v0_18ea9 = phi i32 [ %v1_18ea3, %bb189 ], [ %v0_18ea0, %dec_label_pc_18ea0 ]
  %v10_18ea9 = icmp eq i32 %v0_18ea9, -2
  br i1 %v10_18ea9, label %bb190, label %dec_label_pc_18eb2

bb190:                                            ; preds = %dec_label_pc_18ea9
  %v1_18eac = call i32 @function_18fc0()
  store i32 %v1_18eac, i32* @eax, align 8
  br label %dec_label_pc_18eb2

dec_label_pc_18eb2:                               ; preds = %bb190, %dec_label_pc_18ea9
  %v1_18ec534 = phi i32 [ %v1_18eac, %bb190 ], [ %v0_18ea9, %dec_label_pc_18ea9 ]
  %v0_18eb2 = load i32, i32* @edi, align 4
  %v1_18eb2 = xor i32 %v0_18eb2, -2147483648
  %v1_18eb8 = load i32, i32* @esi, align 4
  %v2_18eb8 = or i32 %v1_18eb8, %v1_18eb2
  %v3_18eb8 = icmp eq i32 %v2_18eb8, 0
  store i32 %v2_18eb8, i32* %edx.global-to-local, align 4
  br i1 %v3_18eb8, label %bb191, label %dec_label_pc_18ec0

bb191:                                            ; preds = %dec_label_pc_18eb2
  %v1_18eba = call i32 @function_19040()
  store i32 %v1_18eba, i32* %eax.global-to-local, align 8
  %v1_18ed2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_18ec0

dec_label_pc_18ec0:                               ; preds = %bb191, %dec_label_pc_18eb2
  %v1_18ed2 = phi i32 [ %v1_18ed2.pre, %bb191 ], [ %v0_18eb2, %dec_label_pc_18eb2 ]
  %v1_18ec5 = phi i32 [ %v1_18eba, %bb191 ], [ %v1_18ec534, %dec_label_pc_18eb2 ]
  %v3_18ec5 = mul i32 %v1_18ec5, 20
  %v7_18ec8 = udiv i32 %v1_18ec5, 9
  store i32 %tmp151, i32* %ecx.global-to-local, align 4
  %v2_18ece = add i32 %v3_18ec5, %v1_18ed2
  %v5_18ed2 = add i32 %v2_18ece, %v7_18ec8
  store i32 %v5_18ed2, i32* %edx.global-to-local, align 4
  %v2_18ed6 = add i32 %tmp151, 4
  %v3_18ed6 = inttoptr i32 %v2_18ed6 to i32*
  store i32 %v5_18ed2, i32* %v3_18ed6, align 4
  %sext17 = mul i32 %arg4, 65536
  %v4_18ed9 = sdiv i32 %sext17, 65536
  store i32 %v4_18ed9, i32* %ebx.global-to-local, align 4
  %v1_18edd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18edd = xor i32 %v1_18edd, %v4_18ed9
  %v3_18edd = icmp eq i32 %v2_18edd, 0
  store i32 %v2_18edd, i32* %ebx.global-to-local, align 4
  store i32 %tmp151, i32* @eax, align 8
  %v1_18ee8 = icmp eq i1 %v3_18edd, false
  br i1 %v1_18ee8, label %bb192, label %dec_label_pc_18eee

bb192:                                            ; preds = %dec_label_pc_18ec0
  %v2_18ee8 = call i32 @function_19056()
  store i32 %v2_18ee8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_18eee

dec_label_pc_18eee:                               ; preds = %bb192, %dec_label_pc_18ec0
  %v0_18ef8 = phi i32 [ %v2_18ee8, %bb192 ], [ %tmp151, %dec_label_pc_18ec0 ]
  store i32 %arg7, i32* %ebx.global-to-local, align 4
  store i32 %arg8, i32* %esi.global-to-local, align 4
  store i32 %arg9, i32* %edi.global-to-local, align 4
  store i32 %arg10, i32* %ebp.global-to-local, align 4
  ret i32 %v0_18ef8

dec_label_pc_18f00:                               ; preds = %dec_label_pc_18d18
  %v3_18f05 = urem i32 %v0_18d18, 32
  %v5_18f05 = icmp eq i32 %v3_18f05, 0
  br i1 %v5_18f05, label %bb195, label %bb194

bb194:                                            ; preds = %dec_label_pc_18f00
  %v6_18f05 = shl i32 ptrtoint (i1* @global_var_1.2399 to i32), %v3_18f05
  br label %bb195

bb195:                                            ; preds = %dec_label_pc_18f00, %bb194
  %storemerge197 = phi i32 [ %v6_18f05, %bb194 ], [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_18f00 ]
  %v0_18f14 = phi i32 [ %v6_18f05, %bb194 ], [ ptrtoint (i1* @global_var_1.2399 to i32), %dec_label_pc_18f00 ]
  store i32 %storemerge197, i32* %edi.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_1e.2596 to i32), i32* %ecx.global-to-local, align 4
  %v1_18f0c = and i32 %v0_18f14, 2640
  %v2_18f0c = icmp eq i32 %v1_18f0c, 0
  %v1_18f12 = icmp eq i1 %v2_18f0c, false
  br i1 %v1_18f12, label %dec_label_pc_18f78, label %dec_label_pc_18f14

dec_label_pc_18f14:                               ; preds = %bb195
  %v1_18f14 = and i32 %v0_18f14, 4
  %v2_18f14 = icmp eq i32 %v1_18f14, 0
  store i32 %v1_18f14, i32* %edi.global-to-local, align 4
  br i1 %v2_18f14, label %dec_label_pc_18d22, label %dec_label_pc_18f1d

dec_label_pc_18f1d:                               ; preds = %dec_label_pc_18f14
  %v0_18f1d = load i32, i32* %esi.global-to-local, align 4
  %v1_18f1d = urem i32 %v0_18f1d, 4
  %v2_18f1d = icmp eq i32 %v1_18f1d, 0
  store i32 %v1_18f1d, i32* %esi.global-to-local, align 4
  store i32 or (i32 and (i32 ptrtoint (i16** @global_var_1e.2596 to i32), i32 -256), i32 28), i32* %ecx.global-to-local, align 4
  %v1_18f22 = icmp eq i1 %v2_18f1d, false
  br i1 %v1_18f22, label %dec_label_pc_18f78, label %dec_label_pc_18f24

dec_label_pc_18f24:                               ; preds = %dec_label_pc_18f1d
  %v0_18f24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18f26 = trunc i32 %v0_18f24 to i16
  %v3_18f26 = lshr i16 %v1_18f26, ptrtoint (i64* @global_var_2.2539 to i16)
  %v10_18f26 = zext i16 %v3_18f26 to i32
  %v3_18f2d = mul nuw nsw i32 %v10_18f26, 5243
  %v2_18f33 = udiv i32 %v3_18f2d, 131072
  %v1_18f3c = mul nuw nsw i32 %v2_18f33, 100
  store i32 %v1_18f3c, i32* %esi.global-to-local, align 4
  store i32 29, i32* %ecx.global-to-local, align 4
  %v3_18f48 = trunc i32 %v1_18f3c to i16
  %v14_18f48 = icmp eq i16 %v1_18f26, %v3_18f48
  %v1_18f4b = icmp eq i1 %v14_18f48, false
  br i1 %v1_18f4b, label %dec_label_pc_18f78, label %dec_label_pc_18f4d

dec_label_pc_18f4d:                               ; preds = %dec_label_pc_18f24
  %v12_18f26 = and i32 %v0_18f24, -65536
  %v3_18f4f = udiv i32 %v0_18f24, 16
  %v10_18f4f = urem i32 %v3_18f4f, 4096
  %v3_18f56 = mul nuw nsw i32 %v10_18f4f, 2622
  %v2_18f5c = udiv i32 %v3_18f56, 65536
  %v2_18f65 = mul nuw nsw i32 %v2_18f5c, 400
  %v3_18f68 = trunc i32 %v2_18f65 to i16
  %v4_18f68 = sub i16 %v1_18f26, %v3_18f68
  %v14_18f68 = icmp eq i16 %v4_18f68, 0
  %v20_18f68 = zext i16 %v4_18f68 to i32
  %v23_18f68 = or i32 %v20_18f68, %v12_18f26
  store i32 %v23_18f68, i32* %ebx.global-to-local, align 4
  %v3_18f6f = zext i1 %v14_18f68 to i32
  %v1_18f73 = sub nsw i32 28, %v3_18f6f
  store i32 %v1_18f73, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_18f78

dec_label_pc_18f78:                               ; preds = %dec_label_pc_18f4d, %dec_label_pc_18f24, %dec_label_pc_18f1d, %bb195
  %v2_18f78 = phi i32 [ %v1_18f73, %dec_label_pc_18f4d ], [ 29, %dec_label_pc_18f24 ], [ or (i32 and (i32 ptrtoint (i16** @global_var_1e.2596 to i32), i32 -256), i32 28), %dec_label_pc_18f1d ], [ ptrtoint (i16** @global_var_1e.2596 to i32), %bb195 ]
  %v1_18f78 = trunc i32 %v0_18f78.pre to i16
  %v3_18f78 = trunc i32 %v2_18f78 to i16
  %tmp202 = icmp ugt i16 %v1_18f78, %v3_18f78
  br i1 %tmp202, label %dec_label_pc_18f81, label %dec_label_pc_18d22

dec_label_pc_18f81:                               ; preds = %dec_label_pc_18f78
  %v2_18f81 = ptrtoint i32* %stack_var_123 to i32
  store i32 %v2_18f81, i32* %eax.global-to-local, align 8
  %v2_18f85 = ptrtoint i32* %stack_var_116 to i32
  store i32 %v2_18f85, i32* %esi.global-to-local, align 4
  %v2_18f89 = ptrtoint i32* %stack_var_104 to i32
  store i32 %v2_18f89, i32* %ebx.global-to-local, align 4
  ret i32 %v2_18f81

; uselistorder directives
  uselistorder i16 %v1_18f26, { 1, 0, 2 }
  uselistorder i32 %v1_18f1d, { 1, 0 }
  uselistorder i32 %v3_18f05, { 1, 0 }
  uselistorder i32 %v4_18ed9, { 1, 0 }
  uselistorder i32 %v0_18ea9, { 1, 0 }
  uselistorder i32 %v0_18ea0, { 1, 0 }
  uselistorder i32 %v2_18e7d, { 1, 0 }
  uselistorder i32 %v3_18e5c, { 1, 0 }
  uselistorder i32 %v2_18e1b, { 1, 0 }
  uselistorder i32 %v2_18dd3, { 1, 0, 2 }
  uselistorder i32 %v2_18dcc, { 1, 0 }
  uselistorder i32 %v5_18db1, { 1, 0 }
  uselistorder i32 %v2_18da4, { 1, 0 }
  uselistorder i32 %v2_18d9c, { 1, 0 }
  uselistorder i32 %v6_18d5f, { 1, 0, 2 }
  uselistorder i32 %v5_18d4e, { 1, 0 }
  uselistorder i32 %v2_18d29, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 %v0_18d25, { 2, 3, 1, 0 }
  uselistorder i32 %v3_18d22, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v17_18cf9, { 0, 2, 1 }
  uselistorder i32 %v1_18cd7, { 3, 2, 0, 1 }
  uselistorder i32 %v4_18cac, { 4, 0, 3, 1, 2 }
  uselistorder i32* %stack_var_116, { 1, 2, 0 }
  uselistorder i32 %tmp151, { 2, 5, 0, 4, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 4, 5, 6, 2, 7 }
  uselistorder i32 ()* @function_18fc0, { 2, 1, 0 }
  uselistorder i32 2622, { 1, 0 }
  uselistorder i32 5243, { 1, 0 }
  uselistorder i32 (i32)* @function_1905b, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_19065, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_19051, { 1, 0 }
  uselistorder i8* @global_var_64.2519, { 1, 0 }
  uselistorder i32 %arg5, { 3, 0, 1, 4, 2 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %dec_label_pc_18ea0, { 1, 0 }
  uselistorder label %dec_label_pc_18d98, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18d18, { 1, 0 }
  uselistorder label %dec_label_pc_18d0d, { 1, 0 }
  uselistorder label %dec_label_pc_18cf0, { 1, 0 }
  uselistorder label %dec_label_pc_18cc9, { 1, 0 }
}

define i32 @function_18fc0() local_unnamed_addr {
dec_label_pc_18fc0:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_18fc0 = load i32, i32* @edi, align 4
  %v1_18fc0 = xor i32 %v0_18fc0, -2147483648
  %v1_18fc6 = load i32, i32* @esi, align 4
  %v2_18fc6 = or i32 %v1_18fc6, %v1_18fc0
  %v3_18fc6 = icmp eq i32 %v2_18fc6, 0
  br i1 %v3_18fc6, label %bb, label %dec_label_pc_18fc0.dec_label_pc_18fca_crit_edge

dec_label_pc_18fc0.dec_label_pc_18fca_crit_edge:  ; preds = %dec_label_pc_18fc0
  %v0_18fca.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_18fca

bb:                                               ; preds = %dec_label_pc_18fc0
  %v1_18fc8 = call i32 @function_1901e()
  store i32 %v1_18fc8, i32* @eax, align 8
  br label %dec_label_pc_18fca

dec_label_pc_18fca:                               ; preds = %dec_label_pc_18fc0.dec_label_pc_18fca_crit_edge, %bb
  %v0_18ff0 = phi i32 [ %v0_18fca.pre, %dec_label_pc_18fc0.dec_label_pc_18fca_crit_edge ], [ %v1_18fc8, %bb ]
  %v1_18fca = icmp eq i32 %v0_18ff0, 0
  %v10_18ff0 = icmp eq i32 %v0_18ff0, -1
  br i1 %v1_18fca, label %dec_label_pc_18ff0, label %dec_label_pc_18fce

dec_label_pc_18fce:                               ; preds = %dec_label_pc_18fca
  br i1 %v10_18ff0, label %bb6, label %dec_label_pc_18fd3

bb6:                                              ; preds = %dec_label_pc_18fce
  %v1_18fd1 = call i32 @function_19040()
  store i32 %v1_18fd1, i32* @eax, align 8
  br label %dec_label_pc_18fd3

dec_label_pc_18fd3:                               ; preds = %bb6, %dec_label_pc_18fce
  %v0_18fd3 = phi i32 [ %v1_18fd1, %bb6 ], [ %v0_18ff0, %dec_label_pc_18fce ]
  %v10_18fd3 = icmp eq i32 %v0_18fd3, -2
  br i1 %v10_18fd3, label %bb7, label %dec_label_pc_18fd8

bb7:                                              ; preds = %dec_label_pc_18fd3
  %v1_18fd6 = call i32 @function_19028()
  store i32 %v1_18fd6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18ff5, %bb7, %dec_label_pc_18fd3
  %v1_18fda = phi i32 [ %v0_18ff5, %dec_label_pc_18ff5 ], [ %v1_18fd6, %bb7 ], [ %v0_18fd3, %dec_label_pc_18fd3 ]
  %v0_18fda = load i32, i32* @esi, align 4
  %v2_18fda = add i32 %v0_18fda, %v1_18fda
  %v7_18fda = icmp ult i32 %v2_18fda, %v0_18fda
  store i32 %v2_18fda, i32* @esi, align 4
  %v0_18fdc = load i32, i32* @edi, align 4
  %v3_18fdc = zext i1 %v7_18fda to i32
  %v5_18fdc = add i32 %v3_18fdc, %v0_18fdc
  br label %dec_label_pc_18fde

dec_label_pc_18fde:                               ; preds = %dec_label_pc_18ff9, %dec_label_pc_18fd8
  %v0_18fe2 = phi i32 [ 0, %dec_label_pc_18ff9 ], [ %v2_18fda, %dec_label_pc_18fd8 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_18ff9 ], [ %v5_18fdc, %dec_label_pc_18fd8 ]
  store i32 %storemerge, i32* @edi, align 4
  %v2_18fe2 = inttoptr i32 %tmp to i32*
  store i32 %v0_18fe2, i32* %v2_18fe2, align 4
  %v0_18fe4 = load i32, i32* @edi, align 4
  %v1_18fe4 = load i32, i32* %eax.global-to-local, align 8
  %v2_18fe4 = add i32 %v1_18fe4, 4
  %v3_18fe4 = inttoptr i32 %v2_18fe4 to i32*
  store i32 %v0_18fe4, i32* %v3_18fe4, align 4
  %v0_18fe7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18fe7

dec_label_pc_18ff0:                               ; preds = %dec_label_pc_18fca
  br i1 %v10_18ff0, label %bb9, label %dec_label_pc_18ff5

bb9:                                              ; preds = %dec_label_pc_18ff0
  %v1_18ff3 = call i32 @function_19034()
  store i32 %v1_18ff3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_18ff5

dec_label_pc_18ff5:                               ; preds = %bb9, %dec_label_pc_18ff0
  %v0_18ff5 = phi i32 [ %v1_18ff3, %bb9 ], [ 0, %dec_label_pc_18ff0 ]
  %v1_18ff5 = icmp eq i32 %v0_18ff5, 0
  %v1_18ff7 = icmp eq i1 %v1_18ff5, false
  br i1 %v1_18ff7, label %dec_label_pc_18fd8, label %dec_label_pc_18ff9

dec_label_pc_18ff9:                               ; preds = %dec_label_pc_18ff5
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_18fde

; uselistorder directives
  uselistorder i32 %v0_18ff5, { 1, 0 }
  uselistorder i32 %v0_18fda, { 1, 0 }
  uselistorder i32 %v0_18fd3, { 1, 0 }
  uselistorder i1 %v10_18ff0, { 1, 0 }
  uselistorder i32 %v0_18ff0, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_18fca, { 1, 0 }
}

define i32 @function_1900e() local_unnamed_addr {
dec_label_pc_1900e:
  %v3_1900e = load i32, i32* @eax, align 8
  ret i32 %v3_1900e
}

define i32 @function_1901e() local_unnamed_addr {
dec_label_pc_1901e:
  %v0_1901e = load i32, i32* @eax, align 8
  %v10_1901e = icmp eq i32 %v0_1901e, -2
  %v1_19021 = icmp eq i1 %v10_1901e, false
  br i1 %v1_19021, label %bb, label %dec_label_pc_19023

bb:                                               ; preds = %dec_label_pc_1901e
  %v2_19021 = call i32 @function_19040()
  br label %dec_label_pc_19023

dec_label_pc_19023:                               ; preds = %bb, %dec_label_pc_1901e
  %v1_19024 = phi i32 [ %v2_19021, %bb ], [ %v0_1901e, %dec_label_pc_1901e ]
  ret i32 %v1_19024

; uselistorder directives
  uselistorder i32 %v0_1901e, { 1, 0 }
  uselistorder i32 ()* @function_19040, { 2, 1, 0 }
}

define i32 @function_19028() local_unnamed_addr {
dec_label_pc_19028:
  store i32 -2, i32* @esi, align 4
  store i32 2147483647, i32* @edi, align 4
  %v0_19032 = load i32, i32* @eax, align 8
  ret i32 %v0_19032
}

define i32 @function_19034() local_unnamed_addr {
dec_label_pc_19034:
  store i32 -1, i32* @esi, align 4
  store i32 2147483647, i32* @edi, align 4
  %v0_1903e = load i32, i32* @eax, align 8
  ret i32 %v0_1903e
}

define i32 @function_19040() local_unnamed_addr {
dec_label_pc_19040:
  %v0_1904f = call i32 @function_19028()
  ret i32 %v0_1904f

; uselistorder directives
  uselistorder i32 ()* @function_19028, { 1, 0 }
}

define i32 @function_19051(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19051:
  %v0_19051 = call i32 @function_27271()
  ret i32 %v0_19051
}

define i32 @function_19056() local_unnamed_addr {
dec_label_pc_19056:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1905b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1905b:
  %v0_19060 = call i32 @function_272f9()
  ret i32 %v0_19060
}

define i32 @function_19065(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19065:
  %v0_19065 = call i32 @function_27381()
  store i32 %v0_19065, i32* @eax, align 8
  %v0_1906c = call i32 @function_1900e()
  ret i32 %v0_1906c
}

define i32 @_Z10MilliSleepx(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19070:
  %v7_19073 = mul i32 %arg2, 1000000
  store i32 %v7_19073, i32* @ecx, align 4
  %v8_1908c = mul i64 %arg1, 1000000
  %v9_1908c = trunc i64 %v8_1908c to i32
  ret i32 %v9_1908c

; uselistorder directives
  uselistorder i64 1000000, { 2, 1, 0 }
}

define i32 @function_190e8() local_unnamed_addr {
dec_label_pc_190e8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_190ea(i16 %arg1) local_unnamed_addr {
dec_label_pc_190ea:
  %eax.global-to-local = alloca i32, align 4
  %v6_190ea = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_190ea
}

define i32 @function_190ef() local_unnamed_addr {
dec_label_pc_190ef:
  %ecx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %zf.global-to-local = alloca i1, align 1
  %v0_190ef = load i1, i1* %zf.global-to-local, align 1
  %v1_190ef = load i1, i1* %sf.global-to-local, align 1
  %v2_190ef = load i1, i1* %of.global-to-local, align 1
  %v3_190ef = icmp eq i1 %v1_190ef, %v2_190ef
  %v4_190ef = icmp eq i1 %v0_190ef, false
  %v5_190ef = icmp eq i1 %v3_190ef, %v4_190ef
  br i1 %v5_190ef, label %bb, label %dec_label_pc_190f1

bb:                                               ; preds = %dec_label_pc_190ef
  %v6_190ef = call i32 @function_190e8()
  store i32 %v6_190ef, i32* @eax, align 8
  br label %dec_label_pc_190f1

dec_label_pc_190f1:                               ; preds = %bb, %dec_label_pc_190ef
  %v3_190f1 = load i32, i32* %ecx.global-to-local, align 4
  %v4_190f1 = trunc i32 %v3_190f1 to i8
  %v5_190f1 = and i8 %v4_190f1, ptrtoint (i64* @global_var_1f.2426 to i8)
  %v6_190f1 = icmp eq i8 %v5_190f1, 0
  br i1 %v6_190f1, label %bb97, label %bb96

bb96:                                             ; preds = %dec_label_pc_190f1
  %v2_190f1 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v12_190f1 = inttoptr i32 %v3_190f1 to i8*
  store i8 %v2_190f1, i8* %v12_190f1, align 1
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_190f1, %bb96
  %v0_190f3 = load i32, i32* @eax, align 8
  ret i32 %v0_190f3

; uselistorder directives
  uselistorder label %bb97, { 1, 0 }
}

define i32 @function_190f7(i16 %arg1) local_unnamed_addr {
dec_label_pc_190f7:
  %eax.global-to-local = alloca i32, align 4
  %v6_190f7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_190f7
}

define i32 @function_19116(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19116:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_19116 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19116 = add i32 %v0_19116, 1697391684
  %v2_19116 = inttoptr i32 %v1_19116 to i32*
  %v3_19116 = load i32, i32* %v2_19116, align 4
  %v4_19116 = add i32 %v3_19116, -1
  store i32 %v4_19116, i32* %v2_19116, align 4
  %v0_1911c = load i32, i32* %eax.global-to-local, align 8
  %v1_1911c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1911c = xor i32 %v1_1911c, %v0_1911c
  %v3_1911c = icmp eq i32 %v2_1911c, 0
  store i32 %v2_1911c, i32* %eax.global-to-local, align 8
  %v1_19122 = icmp eq i1 %v3_1911c, false
  br i1 %v1_19122, label %dec_label_pc_19134, label %dec_label_pc_19124

dec_label_pc_19124:                               ; preds = %dec_label_pc_19116
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_1911c

dec_label_pc_19134:                               ; preds = %dec_label_pc_19116
  ret i32 %v2_1911c

; uselistorder directives
  uselistorder i32 %v2_1911c, { 1, 0, 2, 3 }
}

define i32 @_Z11LoopForeverIPFvvEEvPKcT_x(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19140:
  %stack_var_-36 = alloca i32, align 4
  %v2_19157 = ptrtoint i32* %stack_var_-36 to i32
  ret i32 %v2_19157
}

define i32 @function_191a1() local_unnamed_addr {
dec_label_pc_191a1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_191a1 = add i32 %tmp91, 182
  %v2_191a1 = inttoptr i32 %v1_191a1 to i32*
  %v3_191a1 = load i32, i32* %v2_191a1, align 4
  %v4_191a1 = add i32 %v3_191a1, -1
  store i32 %v4_191a1, i32* %v2_191a1, align 4
  %v0_191a7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_191a7 = add i32 %v0_191a7, 2089362484
  %v2_191a7 = inttoptr i32 %v1_191a7 to i8*
  %v3_191a7 = load i8, i8* %v2_191a7, align 1
  %v5_191a7 = trunc i32 %v0_191a7 to i8
  %v6_191a7 = add i8 %v3_191a7, %v5_191a7
  store i8 %v6_191a7, i8* %v2_191a7, align 1
  %v0_191ad = load i32, i32* %eax.global-to-local, align 8
  %v11_191ad = and i32 %v0_191ad, -252
  store i32 %v11_191ad, i32* @eax, align 8
  %v0_191af = call i32 @function_321b0()
  store i32 %v0_191af, i32* %eax.global-to-local, align 8
  ret i32 %v0_191af
}

define i32 @function_191b9() local_unnamed_addr {
dec_label_pc_191b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_191b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_191b9
}

define i32 @function_191ba() local_unnamed_addr {
dec_label_pc_191ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_191f5() local_unnamed_addr {
dec_label_pc_191f5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_19200(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19200:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_19200 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19200 = add i32 %v0_19200, 1696343108
  %v2_19200 = inttoptr i32 %v1_19200 to i32*
  %v3_19200 = load i32, i32* %v2_19200, align 4
  %v4_19200 = add i32 %v3_19200, -1
  store i32 %v4_19200, i32* %v2_19200, align 4
  %v0_19206 = load i32, i32* %eax.global-to-local, align 8
  %v1_19206 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19206 = xor i32 %v1_19206, %v0_19206
  %v3_19206 = icmp eq i32 %v2_19206, 0
  store i32 %v2_19206, i32* @eax, align 8
  %v1_1920c = icmp eq i1 %v3_19206, false
  br i1 %v1_1920c, label %bb, label %dec_label_pc_1920e

bb:                                               ; preds = %dec_label_pc_19200
  %v2_1920c = call i32 @function_19233()
  store i32 %v2_1920c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1920e

dec_label_pc_1920e:                               ; preds = %bb, %dec_label_pc_19200
  %v0_19215 = phi i32 [ %v2_1920c, %bb ], [ %v2_19206, %dec_label_pc_19200 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_19215
}

define i32 @function_19233() local_unnamed_addr {
dec_label_pc_19233:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_19238() local_unnamed_addr {
dec_label_pc_19238:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_19239() local_unnamed_addr {
dec_label_pc_19239:
  %eax.global-to-local = alloca i32, align 4
  %v0_19239 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19239
}

define i32 @function_19240() local_unnamed_addr {
dec_label_pc_19240:
  %v0_19240 = call i32 @function_191ba()
  ret i32 %v0_19240
}

define i32 @function_19246() local_unnamed_addr {
dec_label_pc_19246:
  %eax.global-to-local = alloca i32, align 4
  %v0_19246 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19246
}

define i32 @function_19250() local_unnamed_addr {
dec_label_pc_19250:
  %v0_19250 = call i32 @function_191ba()
  ret i32 %v0_19250

; uselistorder directives
  uselistorder i32 ()* @function_191ba, { 1, 0 }
}

define i32 @function_1926e() local_unnamed_addr {
dec_label_pc_1926e:
  %v0_1926e = call i32 @function_191f5()
  ret i32 %v0_1926e
}

define i32 @function_19270() local_unnamed_addr {
dec_label_pc_19270:
  %v0_19270 = call i32 @function_19238()
  ret i32 %v0_19270
}

define i32 @_Z13GetTimeMillisv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19280:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v2_1928f = ptrtoint i32* %stack_var_-36 to i32
  store i32 -2147484, i32* @ebx, align 4
  %v2_192af = call i32 @unknown_31ed0(i32 %v2_1928f, i32 ptrtoint (i32* @global_var_10f20.2712 to i32))
  store i32 1511828489, i32* @ecx, align 4
  %v3_192bc = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_192bc, i32* @edi, align 4
  %v1_192c4 = xor i32 %v3_192bc, -2147483648
  %v2_192ca = or i32 %v1_192c4, %tmp7
  %v3_192ca = icmp eq i32 %v2_192ca, 0
  br i1 %v3_192ca, label %bb, label %dec_label_pc_192ce

bb:                                               ; preds = %dec_label_pc_19280
  %v1_192cc = call i32 @function_1931c()
  %v0_192ce.pre = load i32, i32* @edi, align 4
  %v0_192d0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_192ce

dec_label_pc_192ce:                               ; preds = %bb, %dec_label_pc_19280
  %v0_192d0 = phi i32 [ %v0_192d0.pre, %bb ], [ %tmp7, %dec_label_pc_19280 ]
  %v0_192ce = phi i32 [ %v0_192ce.pre, %bb ], [ %v3_192bc, %dec_label_pc_19280 ]
  %v1_192d2 = xor i32 %v0_192ce, 2147483647
  %v1_192d7 = sub i32 -1, %v0_192d0
  %v2_192d9 = or i32 %v1_192d2, %v1_192d7
  %v3_192d9 = icmp eq i32 %v2_192d9, 0
  br i1 %v3_192d9, label %bb16, label %dec_label_pc_192dd

bb16:                                             ; preds = %dec_label_pc_192ce
  %v1_192db = call i32 @function_19340()
  %v0_192dd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_192dd

dec_label_pc_192dd:                               ; preds = %bb16, %dec_label_pc_192ce
  %v0_192ec = phi i32 [ %v1_192db, %bb16 ], [ %v1_192d2, %dec_label_pc_192ce ]
  %v0_192dd = phi i32 [ %v0_192dd.pre, %bb16 ], [ %v0_192d0, %dec_label_pc_192ce ]
  store i32 -1511828489, i32* @ecx, align 4
  %v1_192e4 = xor i32 %v0_192dd, -2
  store i32 %v1_192e4, i32* @edx, align 4
  store i32 2147483, i32* @ebx, align 4
  %v2_192ec = or i32 %v1_192e4, %v0_192ec
  %v3_192ec = icmp eq i32 %v2_192ec, 0
  br i1 %v3_192ec, label %bb17, label %dec_label_pc_192f0

bb17:                                             ; preds = %dec_label_pc_192dd
  %v1_192ee = call i32 @function_1931c()
  br label %dec_label_pc_192f0

dec_label_pc_192f0:                               ; preds = %bb17, %dec_label_pc_192dd
  %v4_1930f = phi i32 [ %v1_192ee, %bb17 ], [ %v2_192ec, %dec_label_pc_192dd ]
  ret i32 %v4_1930f

; uselistorder directives
  uselistorder i32 %v1_192d2, { 1, 0 }
  uselistorder i32 %v0_192d0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 2147483647, { 2, 0, 1 }
}

define i32 @function_1931c() local_unnamed_addr {
dec_label_pc_1931c:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_1931c = load i32, i32* @ecx, align 4
  store i32 %v0_1931c, i32* @eax, align 8
  %v0_1931e = load i32, i32* @ebx, align 4
  store i32 %v0_1931e, i32* @edx, align 4
  %v1_19324 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19324 = icmp eq i32 %v1_19324, %tmp5
  %v1_1932b = icmp eq i1 %v3_19324, false
  br i1 %v1_1932b, label %bb, label %dec_label_pc_1932d

bb:                                               ; preds = %dec_label_pc_1931c
  %v2_1932b = call i32 @function_1934c()
  br label %dec_label_pc_1932d

dec_label_pc_1932d:                               ; preds = %bb, %dec_label_pc_1931c
  %v0_1933c = phi i32 [ %v2_1932b, %bb ], [ %v0_1931c, %dec_label_pc_1931c ]
  ret i32 %v0_1933c
}

define i32 @function_19340() local_unnamed_addr {
dec_label_pc_19340:
  store i32 -1511828489, i32* @ecx, align 4
  store i32 2147483, i32* @ebx, align 4
  %v0_1934a = call i32 @function_1931c()
  ret i32 %v0_1934a

; uselistorder directives
  uselistorder i32 ()* @function_1931c, { 2, 1, 0 }
}

define i32 @function_1934c() local_unnamed_addr {
dec_label_pc_1934c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19360:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_19360 = load i32, i32* %ebx.global-to-local, align 4
  %v0_19368 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_19368, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v7_1937d = icmp eq i32 %arg3, 0
  br i1 %v7_1937d, label %dec_label_pc_193f0, label %dec_label_pc_19382

dec_label_pc_19382:                               ; preds = %dec_label_pc_19360
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v1_19386 = add i32 %arg1, 4
  %v2_19386 = inttoptr i32 %v1_19386 to i32*
  %v3_19386 = load i32, i32* %v2_19386, align 4
  store i32 %v3_19386, i32* @eax, align 8
  %v2_19389 = ptrtoint i32* %stack_var_-16 to i32
  %v2_19391 = ptrtoint i32* %stack_var_-17 to i32
  store i32 -1, i32* %stack_var_-17, align 4
  %v4_193ae = call i32 @function_2dfa0(i32 %arg1, i32 %v3_19386, i32 %v2_19391, i32 %v2_19389)
  %v0_193b3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_193b3 = add i32 %v0_193b3, 4
  %v2_193b3 = inttoptr i32 %v1_193b3 to i32*
  %v3_193b3 = load i32, i32* %v2_193b3, align 4
  store i32 %v3_193b3, i32* @eax, align 8
  br label %dec_label_pc_193c3

dec_label_pc_193c3:                               ; preds = %dec_label_pc_19460, %dec_label_pc_19440, %dec_label_pc_193fe, %dec_label_pc_19382
  %v0_193cf = phi i32 [ %v0_1948e, %dec_label_pc_19460 ], [ %arg1, %dec_label_pc_19440 ], [ %v0_1942b, %dec_label_pc_193fe ], [ %v0_193b3, %dec_label_pc_19382 ]
  %v0_193c7.in = phi i32* [ %stack_var_-18, %dec_label_pc_19460 ], [ %stack_var_-16, %dec_label_pc_19440 ], [ %stack_var_-20, %dec_label_pc_193fe ], [ %stack_var_-28, %dec_label_pc_19382 ]
  %v0_193cb.in = phi i32* [ %stack_var_-20, %dec_label_pc_19460 ], [ %stack_var_-17, %dec_label_pc_19440 ], [ %stack_var_-24, %dec_label_pc_193fe ], [ %stack_var_-36, %dec_label_pc_19382 ]
  %v0_193c3 = phi i32 [ %v3_1948e, %dec_label_pc_19460 ], [ %v3_19448, %dec_label_pc_19440 ], [ %v3_1942b, %dec_label_pc_193fe ], [ %v3_193b3, %dec_label_pc_19382 ]
  %v0_193c7 = ptrtoint i32* %v0_193c7.in to i32
  %v0_193cb = ptrtoint i32* %v0_193cb.in to i32
  %v4_193d2 = call i32 @function_2dfa0(i32 %v0_193cf, i32 %v0_193c3, i32 %v0_193cb, i32 %v0_193c7)
  %v3_193d7 = load i32, i32* %stack_var_-16, align 4
  %v1_193db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_193db = xor i32 %v1_193db, %v3_193d7
  %v3_193db = icmp eq i32 %v2_193db, 0
  %v1_193e2 = icmp eq i1 %v3_193db, false
  br i1 %v1_193e2, label %dec_label_pc_194a3, label %dec_label_pc_193e8

dec_label_pc_193e8:                               ; preds = %dec_label_pc_193c3
  store i32 %v0_19360, i32* %ebx.global-to-local, align 4
  ret i32 %v2_193db

dec_label_pc_193f0:                               ; preds = %dec_label_pc_19360
  %tmp122 = icmp ult i32 %arg2, 253
  br i1 %tmp122, label %dec_label_pc_19440, label %dec_label_pc_193f7

dec_label_pc_193f7:                               ; preds = %dec_label_pc_193f0
  %tmp123 = icmp ult i32 %arg2, 65536
  br i1 %tmp123, label %dec_label_pc_19460, label %dec_label_pc_193fe

dec_label_pc_193fe:                               ; preds = %dec_label_pc_193f7
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v1_19402 = add i32 %arg1, 4
  %v2_19402 = inttoptr i32 %v1_19402 to i32*
  %v3_19402 = load i32, i32* %v2_19402, align 4
  store i32 %v3_19402, i32* @eax, align 8
  %v2_19405 = ptrtoint i32* %stack_var_-17 to i32
  %v2_19409 = ptrtoint i32* %stack_var_-16 to i32
  store i32 -2, i32* %stack_var_-17, align 4
  %v4_19426 = call i32 @function_2dfa0(i32 %arg1, i32 %v3_19402, i32 %v2_19405, i32 %v2_19409)
  %v0_1942b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1942b = add i32 %v0_1942b, 4
  %v2_1942b = inttoptr i32 %v1_1942b to i32*
  %v3_1942b = load i32, i32* %v2_1942b, align 4
  store i32 %v3_1942b, i32* @eax, align 8
  br label %dec_label_pc_193c3

dec_label_pc_19440:                               ; preds = %dec_label_pc_193f0
  store i32 %arg2, i32* %stack_var_-17, align 4
  %v1_19448 = add i32 %arg1, 4
  %v2_19448 = inttoptr i32 %v1_19448 to i32*
  %v3_19448 = load i32, i32* %v2_19448, align 4
  store i32 %v3_19448, i32* @eax, align 8
  br label %dec_label_pc_193c3

dec_label_pc_19460:                               ; preds = %dec_label_pc_193f7
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v1_19465 = add i32 %arg1, 4
  %v2_19465 = inttoptr i32 %v1_19465 to i32*
  %v3_19465 = load i32, i32* %v2_19465, align 4
  store i32 %v3_19465, i32* @eax, align 8
  %v2_19468 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1946c = ptrtoint i32* %stack_var_-16 to i32
  store i32 -3, i32* %stack_var_-17, align 4
  %v4_19489 = call i32 @function_2dfa0(i32 %arg1, i32 %v3_19465, i32 %v2_19468, i32 %v2_1946c)
  %v0_1948e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1948e = add i32 %v0_1948e, 4
  %v2_1948e = inttoptr i32 %v1_1948e to i32*
  %v3_1948e = load i32, i32* %v2_1948e, align 4
  store i32 %v3_1948e, i32* @eax, align 8
  br label %dec_label_pc_193c3

dec_label_pc_194a3:                               ; preds = %dec_label_pc_193c3
  ret i32 %v2_193db

; uselistorder directives
  uselistorder i32 %v3_1948e, { 1, 0 }
  uselistorder i32 %v0_1948e, { 1, 0 }
  uselistorder i32 %v3_19448, { 1, 0 }
  uselistorder i32 %v3_1942b, { 1, 0 }
  uselistorder i32 %v0_1942b, { 1, 0 }
  uselistorder i32 %v2_193db, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-17, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 -2, { 3, 5, 4, 0, 1, 2 }
  uselistorder i32 65536, { 0, 1, 3, 2, 4, 5, 7, 6, 9, 8, 11, 10, 13, 12, 14, 15, 16, 18, 17, 19 }
  uselistorder i32 (i32, i32, i32, i32)* @function_2dfa0, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 4, 3, 0, 1, 5 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0, 6, 7, 8 }
}

define i32 @_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194b0:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp116 = ptrtoint i32* %arg1 to i32
  %v0_194b0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_194b1 = load i32, i32* %edi.global-to-local, align 4
  %v0_194b2 = load i32, i32* %esi.global-to-local, align 4
  %v0_194b3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp116, i32* %edi.global-to-local, align 4
  %v2_194bb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_194c3 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_194c3, i32* %ebp.global-to-local, align 4
  %v0_194c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_194c7, i32* %stack_var_-32, align 4
  %v2_194d3 = load i32, i32* %arg1, align 4
  store i32 %v2_194d3, i32* %stack_var_-36, align 4
  %v1_194d9 = add i32 %arg2, 4
  %v2_194d9 = inttoptr i32 %v1_194d9 to i32*
  %v3_194d9 = load i32, i32* %v2_194d9, align 4
  store i32 %v3_194d9, i32* @eax, align 8
  %v6_194f0 = call i32 @function_2e0f0(i32 %arg2, i32 %v3_194d9, i32 %v2_194c3, i32 %v2_194bb, i32 0)
  %v0_194f5 = load i32, i32* %edi.global-to-local, align 4
  %v1_194f5 = add i32 %v0_194f5, 8
  %v2_194f5 = inttoptr i32 %v1_194f5 to i32*
  %v3_194f5 = load i32, i32* %v2_194f5, align 4
  %v2_194f8 = add i32 %v0_194f5, 4
  %v3_194f8 = inttoptr i32 %v2_194f8 to i32*
  %v4_194f8 = load i32, i32* %v3_194f8, align 4
  %v5_194f8 = sub i32 %v3_194f5, %v4_194f8
  %v0_19503 = load i32, i32* %ebx.global-to-local, align 4
  %v2_19506 = sdiv i32 %v5_194f8, 4
  %v3_19509 = mul i32 %v2_19506, -991146299
  store i32 %v3_19509, i32* @eax, align 8
  %v3_19513 = call i32 @function_32810(i32 %v0_19503, i32 %v3_19509, i32 0)
  %v0_19518 = load i32, i32* %edi.global-to-local, align 4
  %v1_19518 = add i32 %v0_19518, 4
  %v2_19518 = inttoptr i32 %v1_19518 to i32*
  %v3_19518 = load i32, i32* %v2_19518, align 4
  store i32 %v3_19518, i32* %esi.global-to-local, align 4
  %v2_19520 = add i32 %v0_19518, 8
  %v3_19520 = inttoptr i32 %v2_19520 to i32*
  %v4_19520 = load i32, i32* %v3_19520, align 4
  %v15_19520 = icmp eq i32 %v3_19518, %v4_19520
  store i32 %v3_19518, i32* @eax, align 8
  %v1_19525 = icmp eq i1 %v15_19520, false
  br i1 %v1_19525, label %dec_label_pc_1953f, label %dec_label_pc_195da

dec_label_pc_19530:                               ; preds = %dec_label_pc_195a7
  %v1_19530 = add i32 %v0_195ce, ptrtoint (i32* @global_var_58.2405 to i32)
  store i32 %v1_19530, i32* %esi.global-to-local, align 4
  br i1 icmp slt (i32 add (i32 ptrtoint (i32* @global_var_58.2405 to i32), i32 -52), i32 0), label %dec_label_pc_196bf, label %dec_label_pc_1953d

dec_label_pc_1953d:                               ; preds = %dec_label_pc_19530
  store i32 %v1_195ce, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1953f

dec_label_pc_1953f:                               ; preds = %dec_label_pc_194b0, %dec_label_pc_1953d
  %v0_19548 = phi i32 [ %v1_195ce, %dec_label_pc_1953d ], [ %v3_19518, %dec_label_pc_194b0 ]
  %v0_19542 = phi i32 [ add (i32 ptrtoint (i32* @global_var_58.2405 to i32), i32 -52), %dec_label_pc_1953d ], [ 36, %dec_label_pc_194b0 ]
  %v0_1953f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1953f = add i32 %v0_1953f, 4
  %v2_1953f = inttoptr i32 %v1_1953f to i32*
  %v3_1953f = load i32, i32* %v2_1953f, align 4
  %v2_19542 = add i32 %v0_19542, %v0_19548
  %v6_19558 = call i32 @function_2e0f0(i32 %v0_1953f, i32 %v3_1953f, i32 %v0_19548, i32 %v2_19542, i32 0)
  %v0_1955d = load i32, i32* %esi.global-to-local, align 4
  %v1_1955d = add i32 %v0_1955d, 40
  %v2_1955d = inttoptr i32 %v1_1955d to i32*
  %v3_1955d = load i32, i32* %v2_1955d, align 4
  %v2_19560 = add i32 %v0_1955d, 36
  %v3_19560 = inttoptr i32 %v2_19560 to i32*
  %v4_19560 = load i32, i32* %v3_19560, align 4
  %v5_19560 = sub i32 %v3_1955d, %v4_19560
  store i32 %v5_19560, i32* @eax, align 8
  %v0_1956b = load i32, i32* %ebx.global-to-local, align 4
  %v3_19572 = call i32 @function_32810(i32 %v0_1956b, i32 %v5_19560, i32 0)
  %v0_19577 = load i32, i32* %esi.global-to-local, align 4
  %v1_19577 = add i32 %v0_19577, 40
  %v2_19577 = inttoptr i32 %v1_19577 to i32*
  %v3_19577 = load i32, i32* %v2_19577, align 4
  %v1_1957a = add i32 %v0_19577, 36
  %v2_1957a = inttoptr i32 %v1_1957a to i32*
  %v3_1957a = load i32, i32* %v2_1957a, align 4
  store i32 %v3_1957a, i32* @eax, align 8
  %v2_1957d = sub i32 %v3_19577, %v3_1957a
  %v12_1957d = icmp eq i32 %v2_1957d, 0
  br i1 %v12_1957d, label %dec_label_pc_195a7, label %dec_label_pc_19581

dec_label_pc_19581:                               ; preds = %dec_label_pc_1953f
  %v13_1957d = icmp slt i32 %v2_1957d, 0
  br i1 %v13_1957d, label %dec_label_pc_196bf, label %dec_label_pc_19589

dec_label_pc_19589:                               ; preds = %dec_label_pc_19581
  %v0_19589 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19589 = add i32 %v0_19589, 4
  %v2_19589 = inttoptr i32 %v1_19589 to i32*
  %v3_19589 = load i32, i32* %v2_19589, align 4
  %v6_195a2 = call i32 @function_2e0f0(i32 %v0_19589, i32 %v3_19589, i32 %v3_1957a, i32 %v3_19577, i32 0)
  %v0_195a7.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_195a7

dec_label_pc_195a7:                               ; preds = %dec_label_pc_19589, %dec_label_pc_1953f
  %v0_195a7 = phi i32 [ %v0_195a7.pre, %dec_label_pc_19589 ], [ %v0_19577, %dec_label_pc_1953f ]
  %v1_195a7 = add i32 %v0_195a7, 48
  %v2_195a7 = inttoptr i32 %v1_195a7 to i32*
  %v3_195a7 = load i32, i32* %v2_195a7, align 4
  store i32 %v3_195a7, i32* %stack_var_-36, align 4
  %v0_195b2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_195b2 = add i32 %v0_195b2, 4
  %v2_195b2 = inttoptr i32 %v1_195b2 to i32*
  %v3_195b2 = load i32, i32* %v2_195b2, align 4
  store i32 %v3_195b2, i32* @eax, align 8
  %v6_195c9 = call i32 @function_2e0f0(i32 %v0_195b2, i32 %v3_195b2, i32 %v2_194c3, i32 %v2_194bb, i32 0)
  %v0_195ce = load i32, i32* %esi.global-to-local, align 4
  %v1_195ce = add i32 %v0_195ce, 52
  store i32 %v1_195ce, i32* @eax, align 8
  %v1_195d1 = load i32, i32* %edi.global-to-local, align 4
  %v2_195d1 = add i32 %v1_195d1, 8
  %v3_195d1 = inttoptr i32 %v2_195d1 to i32*
  %v4_195d1 = load i32, i32* %v3_195d1, align 4
  %v15_195d1 = icmp eq i32 %v1_195ce, %v4_195d1
  %v1_195d4 = icmp eq i1 %v15_195d1, false
  br i1 %v1_195d4, label %dec_label_pc_19530, label %dec_label_pc_195da

dec_label_pc_195da:                               ; preds = %dec_label_pc_195a7, %dec_label_pc_194b0
  %v0_195da = phi i32 [ %v0_19518, %dec_label_pc_194b0 ], [ %v1_195d1, %dec_label_pc_195a7 ]
  %v1_195da = add i32 %v0_195da, 20
  %v2_195da = inttoptr i32 %v1_195da to i32*
  %v3_195da = load i32, i32* %v2_195da, align 4
  %v2_195dd = add i32 %v0_195da, 16
  %v3_195dd = inttoptr i32 %v2_195dd to i32*
  %v4_195dd = load i32, i32* %v3_195dd, align 4
  %v5_195dd = sub i32 %v3_195da, %v4_195dd
  %v0_195e8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_195eb = sdiv i32 %v5_195dd, 4
  %v3_195ee = mul i32 %v2_195eb, -858993459
  store i32 %v3_195ee, i32* @eax, align 8
  %v3_195f8 = call i32 @function_32810(i32 %v0_195e8, i32 %v3_195ee, i32 0)
  %v0_195fd = load i32, i32* %edi.global-to-local, align 4
  %v1_195fd = add i32 %v0_195fd, 16
  %v2_195fd = inttoptr i32 %v1_195fd to i32*
  %v3_195fd = load i32, i32* %v2_195fd, align 4
  store i32 %v3_195fd, i32* %esi.global-to-local, align 4
  %v2_19600 = add i32 %v0_195fd, 20
  %v3_19600 = inttoptr i32 %v2_19600 to i32*
  %v4_19600 = load i32, i32* %v3_19600, align 4
  %v15_19600 = icmp eq i32 %v3_195fd, %v4_19600
  br i1 %v15_19600, label %dec_label_pc_19683, label %dec_label_pc_19608.preheader

dec_label_pc_19608.preheader:                     ; preds = %dec_label_pc_195da
  %v2_19618 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_19608

dec_label_pc_19608:                               ; preds = %dec_label_pc_19608.preheader, %dec_label_pc_1967b
  %v0_19608 = phi i32 [ %v3_195fd, %dec_label_pc_19608.preheader ], [ %v1_1967b, %dec_label_pc_1967b ]
  %v1_19608 = inttoptr i32 %v0_19608 to i32*
  %v2_19608 = load i32, i32* %v1_19608, align 4
  store i32 %v2_19608, i32* %stack_var_-44, align 4
  %v0_19611 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19611 = add i32 %v0_19611, 4
  %v2_19611 = inttoptr i32 %v1_19611 to i32*
  %v3_19611 = load i32, i32* %v2_19611, align 4
  store i32 %v3_19611, i32* @eax, align 8
  %v6_19630 = call i32 @function_2e0f0(i32 %v0_19611, i32 %v3_19611, i32 %v2_19618, i32 %v2_194c3, i32 0)
  %v0_19635 = load i32, i32* %esi.global-to-local, align 4
  %v1_19635 = add i32 %v0_19635, 12
  %v2_19635 = inttoptr i32 %v1_19635 to i32*
  %v3_19635 = load i32, i32* %v2_19635, align 4
  %v2_19638 = add i32 %v0_19635, 8
  %v3_19638 = inttoptr i32 %v2_19638 to i32*
  %v4_19638 = load i32, i32* %v3_19638, align 4
  %v5_19638 = sub i32 %v3_19635, %v4_19638
  store i32 %v5_19638, i32* @eax, align 8
  %v0_19643 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1964a = call i32 @function_32810(i32 %v0_19643, i32 %v5_19638, i32 0)
  %v0_1964f = load i32, i32* %esi.global-to-local, align 4
  %v1_1964f = add i32 %v0_1964f, 12
  %v2_1964f = inttoptr i32 %v1_1964f to i32*
  %v3_1964f = load i32, i32* %v2_1964f, align 4
  %v1_19652 = add i32 %v0_1964f, 8
  %v2_19652 = inttoptr i32 %v1_19652 to i32*
  %v3_19652 = load i32, i32* %v2_19652, align 4
  store i32 %v3_19652, i32* @eax, align 8
  %v2_19655 = sub i32 %v3_1964f, %v3_19652
  %v12_19655 = icmp eq i32 %v2_19655, 0
  br i1 %v12_19655, label %dec_label_pc_1967b, label %dec_label_pc_19659

dec_label_pc_19659:                               ; preds = %dec_label_pc_19608
  %v13_19655 = icmp slt i32 %v2_19655, 0
  br i1 %v13_19655, label %dec_label_pc_196bf, label %dec_label_pc_1965d

dec_label_pc_1965d:                               ; preds = %dec_label_pc_19659
  %v0_1965d = load i32, i32* %ebx.global-to-local, align 4
  %v1_1965d = add i32 %v0_1965d, 4
  %v2_1965d = inttoptr i32 %v1_1965d to i32*
  %v3_1965d = load i32, i32* %v2_1965d, align 4
  %v6_19676 = call i32 @function_2e0f0(i32 %v0_1965d, i32 %v3_1965d, i32 %v3_19652, i32 %v3_1964f, i32 0)
  %v0_1967b.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1967b

dec_label_pc_1967b:                               ; preds = %dec_label_pc_1965d, %dec_label_pc_19608
  %v0_1967b = phi i32 [ %v0_1967b.pre, %dec_label_pc_1965d ], [ %v0_1964f, %dec_label_pc_19608 ]
  %v1_1967b = add i32 %v0_1967b, 20
  store i32 %v1_1967b, i32* %esi.global-to-local, align 4
  %v1_1967e = load i32, i32* %edi.global-to-local, align 4
  %v2_1967e = add i32 %v1_1967e, 20
  %v3_1967e = inttoptr i32 %v2_1967e to i32*
  %v4_1967e = load i32, i32* %v3_1967e, align 4
  %v15_1967e = icmp eq i32 %v1_1967b, %v4_1967e
  %v1_19681 = icmp eq i1 %v15_1967e, false
  br i1 %v1_19681, label %dec_label_pc_19608, label %dec_label_pc_19683

dec_label_pc_19683:                               ; preds = %dec_label_pc_1967b, %dec_label_pc_195da
  %v0_19683 = phi i32 [ %v0_195fd, %dec_label_pc_195da ], [ %v1_1967e, %dec_label_pc_1967b ]
  %v1_19683 = add i32 %v0_19683, 28
  %v2_19683 = inttoptr i32 %v1_19683 to i32*
  %v3_19683 = load i32, i32* %v2_19683, align 4
  store i32 %v3_19683, i32* %stack_var_-36, align 4
  %v0_1968e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1968e = add i32 %v0_1968e, 4
  %v2_1968e = inttoptr i32 %v1_1968e to i32*
  %v3_1968e = load i32, i32* %v2_1968e, align 4
  store i32 %v3_1968e, i32* @eax, align 8
  %v6_196a5 = call i32 @function_2e0f0(i32 %v0_1968e, i32 %v3_1968e, i32 %v2_194c3, i32 %v2_194bb, i32 0)
  %v3_196aa = load i32, i32* %stack_var_-32, align 4
  %v1_196ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_196ae = xor i32 %v1_196ae, %v3_196aa
  %v3_196ae = icmp eq i32 %v2_196ae, 0
  %v1_196b5 = icmp eq i1 %v3_196ae, false
  br i1 %v1_196b5, label %dec_label_pc_196c4, label %dec_label_pc_196b7

dec_label_pc_196b7:                               ; preds = %dec_label_pc_19683
  store i32 %v0_194b3, i32* %ebx.global-to-local, align 4
  store i32 %v0_194b2, i32* %esi.global-to-local, align 4
  store i32 %v0_194b1, i32* %edi.global-to-local, align 4
  store i32 %v0_194b0, i32* %ebp.global-to-local, align 4
  ret i32 %v2_196ae

dec_label_pc_196bf:                               ; preds = %dec_label_pc_19530, %dec_label_pc_19581, %dec_label_pc_19659
  %v0_196bf = call i32 @function_2799a()
  br label %dec_label_pc_196c4

dec_label_pc_196c4:                               ; preds = %dec_label_pc_196bf, %dec_label_pc_19683
  %v1_196bf = phi i32 [ %v0_196bf, %dec_label_pc_196bf ], [ %v2_196ae, %dec_label_pc_19683 ]
  ret i32 %v1_196bf

; uselistorder directives
  uselistorder i32 %v1_1967b, { 0, 2, 1 }
  uselistorder i32 %v3_195fd, { 1, 0, 2 }
  uselistorder i32 %v3_195ee, { 1, 0 }
  uselistorder i32 %v0_195da, { 1, 0 }
  uselistorder i32 %v1_195ce, { 0, 3, 2, 1 }
  uselistorder i32 %v0_195ce, { 1, 0 }
  uselistorder i32 %v0_19548, { 1, 0 }
  uselistorder i32 %v3_19518, { 1, 2, 0, 3 }
  uselistorder i32 %v3_19509, { 1, 0 }
  uselistorder i32 %v2_194c3, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 7, 5, 6, 8, 9, 12, 10, 11, 3, 4, 13, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 0 }
  uselistorder i32 -858993459, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 48, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_32810, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_2e0f0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_196bf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19608, { 1, 0 }
  uselistorder label %dec_label_pc_1953f, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_196d0:
  %v1_196f4 = add i32 %arg2, 8
  %v2_196f4 = inttoptr i32 %v1_196f4 to i32*
  %v3_196f4 = load i32, i32* %v2_196f4, align 4
  %v1_196f7 = add i32 %arg2, 4
  %v1_19700 = icmp eq i32 %v3_196f4, 0
  br i1 %v1_19700, label %bb, label %dec_label_pc_19704

bb:                                               ; preds = %dec_label_pc_196d0
  %v3_19702 = inttoptr i32 %arg1 to i32*
  %v4_19702 = call i32 @function_1971e(i32 %v1_196f7, i32* %v3_19702)
  br label %dec_label_pc_19704

dec_label_pc_19704:                               ; preds = %bb, %dec_label_pc_196d0
  %v3_1970b = phi i32 [ %v4_19702, %bb ], [ %v1_196f7, %dec_label_pc_196d0 ]
  ret i32 %v3_1970b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1971e(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1971e:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %arg2, align 4
  %v2_19728 = add i32 %tmp8, 4
  %v3_19728 = inttoptr i32 %v2_19728 to i32*
  store i32 %arg1, i32* %v3_19728, align 4
  %v1_1972f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1972f = icmp eq i32 %v1_1972f, %tmp6
  store i32 %tmp8, i32* @eax, align 8
  %v1_1973a = icmp eq i1 %v3_1972f, false
  br i1 %v1_1973a, label %bb, label %dec_label_pc_19740

bb:                                               ; preds = %dec_label_pc_1971e
  %v2_1973a = call i32 @function_197e5()
  br label %dec_label_pc_19740

dec_label_pc_19740:                               ; preds = %bb, %dec_label_pc_1971e
  %v0_19747 = phi i32 [ %v2_1973a, %bb ], [ %tmp8, %dec_label_pc_1971e ]
  ret i32 %v0_19747

; uselistorder directives
  uselistorder i32 %tmp8, { 1, 2, 0 }
}

define i32 @function_1975b() local_unnamed_addr {
dec_label_pc_1975b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1975b = load i32, i32* %eax.global-to-local, align 8
  %v2_1975b = mul i32 %v0_1975b, 8
  %v3_1975b = add i32 %v0_1975b, 1552486516
  %v4_1975b = add i32 %v3_1975b, %v2_1975b
  %v5_1975b = inttoptr i32 %v4_1975b to i32*
  %v6_1975b = load i32, i32* %v5_1975b, align 4
  %v7_1975b = add i32 %v6_1975b, 1
  store i32 %v7_1975b, i32* %v5_1975b, align 4
  %v0_19762 = load i32, i32* %eax.global-to-local, align 8
  %v11_19762 = and i32 %v0_19762, -232
  store i32 %v11_19762, i32* %eax.global-to-local, align 8
  %v0_19764 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19764 = add i32 %v0_19764, 8
  %v2_19764 = inttoptr i32 %v1_19764 to i32*
  %v3_19764 = load i32, i32* %v2_19764, align 4
  store i32 %v3_19764, i32* %ebx.global-to-local, align 4
  ret i32 %v11_19762

; uselistorder directives
  uselistorder i32 %v11_19762, { 1, 0 }
  uselistorder i32 %v0_1975b, { 1, 0 }
}

define i32 @function_19778() local_unnamed_addr {
dec_label_pc_19778:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_197a0() local_unnamed_addr {
dec_label_pc_197a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_197a4() local_unnamed_addr {
dec_label_pc_197a4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_197b2(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_197b2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg2 to i32
  %v0_197b2 = load i32, i32* @eax, align 8
  %v2_197b2 = mul i32 %v0_197b2, 8
  %v3_197b2 = add i32 %v0_197b2, -74899083
  %v4_197b2 = add i32 %v3_197b2, %v2_197b2
  %v5_197b2 = inttoptr i32 %v4_197b2 to i32*
  %v6_197b2 = load i32, i32* %v5_197b2, align 4
  %v7_197b2 = add i32 %v6_197b2, 1
  store i32 %v7_197b2, i32* %v5_197b2, align 4
  %v0_197b9 = load i32, i32* %edi.global-to-local, align 4
  %v1_197b9 = add i32 %v0_197b9, 8
  %v2_197b9 = inttoptr i32 %v1_197b9 to i32*
  %v3_197b9 = load i32, i32* %v2_197b9, align 4
  store i32 %v3_197b9, i32* %edi.global-to-local, align 4
  %v1_197bc = icmp eq i32 %v3_197b9, 0
  %v1_197be = icmp eq i1 %v1_197bc, false
  br i1 %v1_197be, label %bb, label %dec_label_pc_197c0

bb:                                               ; preds = %dec_label_pc_197b2
  %v2_197be = call i32 @function_197a4()
  store i32 %v2_197be, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_197c0

dec_label_pc_197c0:                               ; preds = %bb, %dec_label_pc_197b2
  store i32 %tmp99, i32* %eax.global-to-local, align 8
  %v0_197c8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_197c8, i32* %arg2, align 4
  %v2_197ca = add i32 %tmp99, 4
  %v3_197ca = inttoptr i32 %v2_197ca to i32*
  store i32 %arg1, i32* %v3_197ca, align 4
  %v0_197cd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_197cd

; uselistorder directives
  uselistorder i32 %v0_197b2, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_197d8() local_unnamed_addr {
dec_label_pc_197d8:
  %v0_197db = call i32 @function_197a0()
  ret i32 %v0_197db
}

define i32 @function_197e0() local_unnamed_addr {
dec_label_pc_197e0:
  %v0_197e3 = call i32 @function_19778()
  ret i32 %v0_197e3
}

define i32 @function_197e5() local_unnamed_addr {
dec_label_pc_197e5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_197f0:
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_1980b = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1980b, i32* @eax, align 8
  %v3_1981a = call i32 @function_32ec0(i32 %v2_1980b, i32 %arg1, i32 %arg2)
  %v0_1981f = load i32, i32* @edi, align 4
  %v1_1981f = add i32 %v0_1981f, 20
  %v2_1981f = inttoptr i32 %v1_1981f to i32*
  %v3_1981f = load i32, i32* %v2_1981f, align 4
  %v1_19829 = add i32 %v0_1981f, 12
  %v2_19829 = inttoptr i32 %v1_19829 to i32*
  %v3_19829 = load i32, i32* %v2_19829, align 4
  %v15_19829 = icmp eq i32 %v3_19829, %tmp101
  %v3_1982c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1982c, i32* @ebp, align 4
  br i1 %v15_19829, label %bb, label %dec_label_pc_19838

bb:                                               ; preds = %dec_label_pc_197f0
  %v2_19836 = call i32 @function_19898(i32 %v3_1981f)
  %v0_19838.pre = load i32, i32* @edi, align 4
  %v0_1983b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_19838

dec_label_pc_19838:                               ; preds = %bb, %dec_label_pc_197f0
  %v3_1984a = phi i32 [ %v2_19836, %bb ], [ %tmp101, %dec_label_pc_197f0 ]
  %v0_1983b = phi i32 [ %v0_1983b.pre, %bb ], [ %v3_1982c, %dec_label_pc_197f0 ]
  %v0_19838 = phi i32 [ %v0_19838.pre, %bb ], [ %v0_1981f, %dec_label_pc_197f0 ]
  %v12_1983b = icmp eq i32 %v0_1983b, %v3_1984a
  %v1_19841 = icmp eq i1 %v12_1983b, false
  br i1 %v1_19841, label %dec_label_pc_1984a, label %dec_label_pc_19843

dec_label_pc_19843:                               ; preds = %dec_label_pc_19838
  %v1_19838 = add i32 %v0_19838, 4
  %v1_19843 = call i32 @function_198ce(i32 %v1_19838)
  ret i32 %v1_19843

dec_label_pc_1984a:                               ; preds = %dec_label_pc_19838
  ret i32 %v3_1984a

; uselistorder directives
  uselistorder i32 %v3_1984a, { 1, 0 }
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_1987d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1987d:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_19881 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19881 = icmp eq i32 %v1_19881, %tmp11
  store i32 %arg1, i32* @eax, align 8
  %v1_1988c = icmp eq i1 %v3_19881, false
  br i1 %v1_1988c, label %bb, label %dec_label_pc_1988e

bb:                                               ; preds = %dec_label_pc_1987d
  %v2_1988c = call i32 @function_198d8()
  br label %dec_label_pc_1988e

dec_label_pc_1988e:                               ; preds = %bb, %dec_label_pc_1987d
  %v0_19895 = phi i32 [ %v2_1988c, %bb ], [ %arg1, %dec_label_pc_1987d ]
  ret i32 %v0_19895
}

define i32 @function_19898(i32 %arg1) local_unnamed_addr {
dec_label_pc_19898:
  %edx.global-to-local = alloca i32, align 4
  %v0_19898 = load i32, i32* @edi, align 4
  %v1_19898 = add i32 %v0_19898, 4
  store i32 %v1_19898, i32* %edx.global-to-local, align 4
  %v1_198a5 = add i32 %v0_19898, 8
  %v2_198a5 = inttoptr i32 %v1_198a5 to i32*
  %v3_198a5 = load i32, i32* %v2_198a5, align 4
  store i32 %v3_198a5, i32* @eax, align 8
  %v2_198af = call i32 @function_2d650(i32 %v0_19898, i32 %v3_198a5)
  store i32 %v1_19898, i32* %edx.global-to-local, align 4
  %v0_198b8 = load i32, i32* @edi, align 4
  %v1_198b8 = add i32 %v0_198b8, 8
  %v2_198b8 = inttoptr i32 %v1_198b8 to i32*
  store i32 0, i32* %v2_198b8, align 4
  %v0_198bf = load i32, i32* @edi, align 4
  %v1_198bf = add i32 %v0_198bf, 20
  %v2_198bf = inttoptr i32 %v1_198bf to i32*
  store i32 0, i32* %v2_198bf, align 4
  %v0_198c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_198c6 = load i32, i32* @edi, align 4
  %v2_198c6 = add i32 %v1_198c6, 12
  %v3_198c6 = inttoptr i32 %v2_198c6 to i32*
  store i32 %v0_198c6, i32* %v3_198c6, align 4
  %v0_198c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_198c9 = load i32, i32* @edi, align 4
  %v2_198c9 = add i32 %v1_198c9, 16
  %v3_198c9 = inttoptr i32 %v2_198c9 to i32*
  store i32 %v0_198c9, i32* %v3_198c9, align 4
  %v1_198cc = call i32 @function_1987d(i32 %v3_198a5)
  ret i32 %v1_198cc

; uselistorder directives
  uselistorder i32 %v0_19898, { 1, 0, 2 }
}

define i32 @function_198ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_198ce:
  %v1_198d6 = call i32 @function_1987d(i32 0)
  ret i32 %v1_198d6

; uselistorder directives
  uselistorder i32 (i32)* @function_1987d, { 1, 0 }
}

define i32 @function_198d8() local_unnamed_addr {
dec_label_pc_198d8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_198e0:
  %v1_19900 = icmp eq i32 %arg3, 0
  store i32 %arg5, i32* @edi, align 4
  br i1 %v1_19900, label %bb, label %dec_label_pc_19925

bb:                                               ; preds = %dec_label_pc_198e0
  %v4_1991f = call i32 @function_199a8(i32 zext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  br label %dec_label_pc_19925

dec_label_pc_19925:                               ; preds = %bb, %dec_label_pc_198e0
  %v2_19925 = phi i32 [ %v4_1991f, %bb ], [ %arg4, %dec_label_pc_198e0 ]
  ret i32 %v2_19925
}

define i32 @function_19932() local_unnamed_addr {
dec_label_pc_19932:
  %eax.global-to-local = alloca i32, align 4
  %v0_19932 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19932
}

define i32 @function_19979(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19979:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19979 = load i32, i32* %ecx.global-to-local, align 4
  %v1_19979 = add i32 %v0_19979, 340165608
  %v2_19979 = inttoptr i32 %v1_19979 to i32*
  %v3_19979 = load i32, i32* %v2_19979, align 4
  %v4_19979 = add i32 %v3_19979, -1
  store i32 %v4_19979, i32* %v2_19979, align 4
  %v0_1997f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1997f = add i32 %v0_1997f, 1698440276
  %v2_1997f = inttoptr i32 %v1_1997f to i32*
  %v3_1997f = load i32, i32* %v2_1997f, align 4
  %v4_1997f = load i32, i32* %ecx.global-to-local, align 4
  %v5_1997f = add i32 %v4_1997f, %v3_1997f
  store i32 %v5_1997f, i32* %v2_1997f, align 4
  %v0_19985 = load i32, i32* %edx.global-to-local, align 4
  %v1_19985 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19985 = xor i32 %v1_19985, %v0_19985
  %v3_19985 = icmp eq i32 %v2_19985, 0
  store i32 %v2_19985, i32* %edx.global-to-local, align 4
  %v0_1998b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1998b = load i32, i32* %ebp.global-to-local, align 4
  %v2_1998b = inttoptr i32 %v1_1998b to i32*
  store i32 %v0_1998b, i32* %v2_1998b, align 4
  %v1_1998e = icmp eq i1 %v3_19985, false
  br i1 %v1_1998e, label %bb, label %dec_label_pc_19979.dec_label_pc_19990_crit_edge

dec_label_pc_19979.dec_label_pc_19990_crit_edge:  ; preds = %dec_label_pc_19979
  %v0_199a3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_19990

bb:                                               ; preds = %dec_label_pc_19979
  %v2_1998e = call i32 @function_199f2()
  br label %dec_label_pc_19990

dec_label_pc_19990:                               ; preds = %dec_label_pc_19979.dec_label_pc_19990_crit_edge, %bb
  %v0_199a3 = phi i32 [ %v0_199a3.pre, %dec_label_pc_19979.dec_label_pc_19990_crit_edge ], [ %v2_1998e, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_199a3

; uselistorder directives
  uselistorder label %dec_label_pc_19990, { 1, 0 }
}

define i32 @function_199a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_199a8:
  %v2_199b9 = load i32, i32* @edi, align 4
  ret i32 %v2_199b9
}

define i32 @function_199dc() local_unnamed_addr {
dec_label_pc_199dc:
  %eax.global-to-local = alloca i32, align 4
  %v4_199dc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_199dc
}

define i32 @function_199de(i32 %arg1) local_unnamed_addr {
dec_label_pc_199de:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_199df = load i32, i32* %eax.global-to-local, align 8
  %v11_199df = and i32 %v0_199df, -240
  %v1_199e1 = icmp eq i32 %v11_199df, 0
  %v2_199e3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_199e3 = select i1 %v1_199e1, i32 %v2_199e3, i32 %v11_199df
  %v2_199e6 = lshr i32 %v3_199e3, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_199e6, i32* %eax.global-to-local, align 8
  ret i32 %v2_199e6

; uselistorder directives
  uselistorder i32 %v11_199df, { 1, 0 }
}

define i32 @function_199f2() local_unnamed_addr {
dec_label_pc_199f2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_19a07() local_unnamed_addr {
dec_label_pc_19a07:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_19a1c() local_unnamed_addr {
dec_label_pc_19a1c:
  %v0_19a1c = call i32 @function_19a07()
  ret i32 %v0_19a1c
}

define i32 @function_19a1f() local_unnamed_addr {
dec_label_pc_19a1f:
  %eax.global-to-local = alloca i32, align 4
  %v0_19a1f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19a1f
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_19a30:
  store i32 0, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v1_19a5f = add i32 %arg2, 8
  %v2_19a5f = inttoptr i32 %v1_19a5f to i32*
  %v3_19a5f = load i32, i32* %v2_19a5f, align 4
  %v1_19a62 = icmp eq i32 %v3_19a5f, 0
  br i1 %v1_19a62, label %bb, label %dec_label_pc_19a6a

bb:                                               ; preds = %dec_label_pc_19a30
  %tmp106 = ptrtoint i32* %arg3 to i32
  %v4_19a64 = call i32 @function_19b25(i32 %arg1, i32 %arg2, i32 %tmp106)
  br label %dec_label_pc_19a6a

dec_label_pc_19a6a:                               ; preds = %bb, %dec_label_pc_19a30
  %v2_19a6e = load i32, i32* %arg3, align 4
  ret i32 %v2_19a6e

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_19acd() local_unnamed_addr {
dec_label_pc_19acd:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp4
}

define i32 @function_19ad5(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ad5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_19aee() local_unnamed_addr {
dec_label_pc_19aee:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_19aee = load i32, i32* %ebx.global-to-local, align 4
  %v1_19aee = add i32 %v0_19aee, -2060966828
  %v2_19aee = inttoptr i32 %v1_19aee to i32*
  %v3_19aee = load i32, i32* %v2_19aee, align 4
  %v4_19aee = sub i32 %v3_19aee, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_19aee, i32* %v2_19aee, align 4
  %v2_19af4 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_19af4 = udiv i8 %v2_19af4, 16
  %v4_19af4 = mul i8 %v2_19af4, 16
  %v5_19af4 = or i8 %v3_19af4, %v4_19af4
  %v6_19af4 = load i32, i32* %edi.global-to-local, align 4
  %v7_19af4 = inttoptr i32 %v6_19af4 to i8*
  store i8 %v5_19af4, i8* %v7_19af4, align 1
  %v0_19af7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19af7
}

define i32 @function_19b06() local_unnamed_addr {
dec_label_pc_19b06:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_19b0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19b0a = icmp eq i32 %v1_19b0a, %tmp11
  %v1_19b15 = icmp eq i1 %v3_19b0a, false
  br i1 %v1_19b15, label %bb, label %dec_label_pc_19b1b

bb:                                               ; preds = %dec_label_pc_19b06
  %v2_19b15 = call i32 @function_19ba6()
  br label %dec_label_pc_19b1b

dec_label_pc_19b1b:                               ; preds = %bb, %dec_label_pc_19b06
  %v0_19b22 = phi i32 [ %v2_19b15, %bb ], [ %tmp10, %dec_label_pc_19b06 ]
  ret i32 %v0_19b22
}

define i32 @function_19b25(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19b25:
  %v0_19b25 = load i32, i32* @edx, align 4
  %v1_19b27 = add i32 %v0_19b25, 4
  store i32 %v1_19b27, i32* @edi, align 4
  %v2_19b34 = add i32 %arg1, 12
  %v3_19b34 = inttoptr i32 %v2_19b34 to i32*
  %v4_19b34 = load i32, i32* %v3_19b34, align 4
  %v15_19b34 = icmp eq i32 %v1_19b27, %v4_19b34
  br i1 %v15_19b34, label %bb, label %dec_label_pc_19b25.dec_label_pc_19b39_crit_edge

dec_label_pc_19b25.dec_label_pc_19b39_crit_edge:  ; preds = %dec_label_pc_19b25
  %v3_19b39.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_19b39

bb:                                               ; preds = %dec_label_pc_19b25
  %v1_19b37 = call i32 @function_19b68()
  br label %dec_label_pc_19b39

dec_label_pc_19b39:                               ; preds = %dec_label_pc_19b25.dec_label_pc_19b39_crit_edge, %bb
  %v3_19b39 = phi i32 [ %v3_19b39.pre, %dec_label_pc_19b25.dec_label_pc_19b39_crit_edge ], [ %v1_19b37, %bb ]
  ret i32 %v3_19b39

; uselistorder directives
  uselistorder label %dec_label_pc_19b39, { 1, 0 }
}

define i32 @function_19b40() local_unnamed_addr {
dec_label_pc_19b40:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_19b40 = load i32, i32* %ecx.global-to-local, align 4
  %v1_19b40 = add i32 %v0_19b40, 608472002
  %v2_19b40 = inttoptr i32 %v1_19b40 to i32*
  %v3_19b40 = load i32, i32* %v2_19b40, align 4
  %v4_19b40 = add i32 %v3_19b40, -1
  store i32 %v4_19b40, i32* %v2_19b40, align 4
  %v0_19b4c = load i32, i32* %ebp.global-to-local, align 4
  %v1_19b4c = add i32 %v0_19b4c, -12
  %v2_19b4c = inttoptr i32 %v1_19b4c to i32*
  %v3_19b4c = load i32, i32* %v2_19b4c, align 4
  %v0_19b4f = load i32, i32* %eax.global-to-local, align 8
  %v1_19b4f = add i32 %v0_19b4f, -12
  %v2_19b4f = inttoptr i32 %v1_19b4f to i32*
  %v3_19b4f = load i32, i32* %v2_19b4f, align 4
  %tmp98 = icmp ule i32 %v3_19b4f, %v3_19b4c
  %v5_19b5a = select i1 %tmp98, i32 %v3_19b4f, i32 %v3_19b4c
  store i32 %v5_19b5a, i32* @eax, align 8
  %v1_19b5d = call i32 @function_19ad5(i32 %v0_19b4f)
  store i32 %v1_19b5d, i32* %eax.global-to-local, align 8
  ret i32 %v1_19b5d

; uselistorder directives
  uselistorder i32 %v3_19b4f, { 1, 0 }
  uselistorder i32 %v3_19b4c, { 1, 0 }
}

define i32 @function_19b68() local_unnamed_addr {
dec_label_pc_19b68:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v2_19b6c = ptrtoint i32* %stack_var_60 to i32
  %v0_19b73 = load i32, i32* @edi, align 4
  %v5_19b8b = call i32 @unknown_33310(i32 %v2_19b6c, i32 %tmp3, i32 0, i32 %v0_19b73, i32 %tmp9)
  %v2_19b9b = inttoptr i32 %tmp to i32*
  %v0_19b9d = load i32, i32* %edx.global-to-local, align 4
  %v1_19b9d = add i32 %v0_19b9d, 4
  %v2_19b9d = inttoptr i32 %v1_19b9d to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_19b9d, align 1
  %v0_19ba1 = call i32 @function_19b06()
  ret i32 %v0_19ba1
}

define i32 @function_19ba6() local_unnamed_addr {
dec_label_pc_19ba6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_19bb0:
  store i32 %arg2, i32* @ebp, align 4
  %v1_19bdd = add i32 %arg2, 4
  %v12_19be0 = icmp eq i32 %v1_19bdd, %arg3
  store i32 %arg1, i32* @edi, align 4
  br i1 %v12_19be0, label %bb, label %dec_label_pc_19bfb

bb:                                               ; preds = %dec_label_pc_19bb0
  %v3_19bf5 = call i32 @function_19db8(i32* %arg4)
  br label %dec_label_pc_19bfb

dec_label_pc_19bfb:                               ; preds = %dec_label_pc_19bb0, %bb
  %v3_19c31 = phi i32 [ %v3_19bf5, %bb ], [ %v1_19bdd, %dec_label_pc_19bb0 ]
  ret i32 %v3_19c31

; uselistorder directives
  uselistorder i32 %v1_19bdd, { 1, 0 }
  uselistorder label %dec_label_pc_19bfb, { 1, 0 }
}

define i32 @function_19ccb() local_unnamed_addr {
dec_label_pc_19ccb:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_19ccf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19ccf = xor i32 %v1_19ccf, %tmp6
  %v3_19ccf = icmp eq i32 %v2_19ccf, 0
  store i32 %v2_19ccf, i32* @ecx, align 4
  %v0_19cd6 = load i32, i32* @edi, align 4
  store i32 %v0_19cd6, i32* @eax, align 8
  %v1_19cd8 = icmp eq i1 %v3_19ccf, false
  br i1 %v1_19cd8, label %bb, label %dec_label_pc_19cde

bb:                                               ; preds = %dec_label_pc_19ccb
  %v2_19cd8 = call i32 @function_19ea2()
  br label %dec_label_pc_19cde

dec_label_pc_19cde:                               ; preds = %bb, %dec_label_pc_19ccb
  %v0_19cf1 = phi i32 [ %v2_19cd8, %bb ], [ %v0_19cd6, %dec_label_pc_19ccb ]
  ret i32 %v0_19cf1
}

define i32 @function_19d32() local_unnamed_addr {
dec_label_pc_19d32:
  %v0_19d32 = call i32 @function_89000000()
  ret i32 %v0_19d32
}

define i32 @function_19d66(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d66:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_19d66 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19d66 = add i32 %v0_19d66, 724837452
  %v2_19d66 = inttoptr i32 %v1_19d66 to i32*
  %v3_19d66 = load i32, i32* %v2_19d66, align 4
  %v4_19d66 = add i32 %v3_19d66, -1
  store i32 %v4_19d66, i32* %v2_19d66, align 4
  %v0_19d6d = load i32, i32* %eax.global-to-local, align 8
  %v11_19d6d = and i32 %v0_19d6d, or (i32 zext (i8 ptrtoint (i32* @global_var_38.2432 to i8) to i32), i32 -256)
  %v1_19d6f = icmp eq i32 %v11_19d6d, 0
  %v2_19d71 = load i32, i32* %ebx.global-to-local, align 4
  %v3_19d71 = select i1 %v1_19d6f, i32 %v2_19d71, i32 %v11_19d6d
  store i32 %v3_19d71, i32* %eax.global-to-local, align 8
  %v2_19d74 = icmp slt i32 %v3_19d71, 0
  %v1_19d76 = icmp eq i1 %v2_19d74, false
  br i1 %v1_19d76, label %bb, label %dec_label_pc_19d7c

bb:                                               ; preds = %dec_label_pc_19d66
  %v2_19d76 = call i32 @function_19e48()
  store i32 %v2_19d76, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_19d7c

dec_label_pc_19d7c:                               ; preds = %bb, %dec_label_pc_19d66
  %v0_19d7c = load i32, i32* @esi, align 4
  %v1_19d7c = add i32 %v0_19d7c, 12
  %v2_19d7c = inttoptr i32 %v1_19d7c to i32*
  %v3_19d7c = load i32, i32* %v2_19d7c, align 4
  store i32 %v3_19d7c, i32* %ebx.global-to-local, align 4
  %v1_19d7f = icmp eq i32 %v3_19d7c, 0
  br i1 %v1_19d7f, label %bb106, label %dec_label_pc_19d87

bb106:                                            ; preds = %dec_label_pc_19d7c
  %v1_19d81 = call i32 @function_19e70()
  store i32 %v1_19d81, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_19d87

dec_label_pc_19d87:                               ; preds = %bb106, %dec_label_pc_19d7c
  %v0_19d8f = load i32, i32* @ecx, align 4
  %v0_19d9b = load i32, i32* @edi, align 4
  %v2_19d9e = call i32 @unknown_33490(i32 %v0_19d9b, i32 %v0_19d8f)
  store i32 %v2_19d9e, i32* %eax.global-to-local, align 8
  %v0_19da6 = call i32 @function_19ccb()
  store i32 %v0_19da6, i32* %eax.global-to-local, align 8
  ret i32 %v0_19da6

; uselistorder directives
  uselistorder i32 %v11_19d6d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 1, 4, 5 }
}

define i32 @function_19db0() local_unnamed_addr {
dec_label_pc_19db0:
  %v1_19db0 = load i32, i32* @edi, align 4
  %v2_19db0 = inttoptr i32 %v1_19db0 to i32*
  %v0_19db2 = call i32 @function_19ccb()
  ret i32 %v0_19db2
}

define i32 @function_19db8(i32* %arg1) local_unnamed_addr {
dec_label_pc_19db8:
  %v0_19db8 = load i32, i32* @ebp, align 4
  %v1_19db8 = add i32 %v0_19db8, 20
  %v2_19db8 = inttoptr i32 %v1_19db8 to i32*
  %v3_19db8 = load i32, i32* %v2_19db8, align 4
  %v1_19dbb = icmp eq i32 %v3_19db8, 0
  br i1 %v1_19dbb, label %bb, label %dec_label_pc_19dbf

bb:                                               ; preds = %dec_label_pc_19db8
  %v1_19dbd = call i32 @function_19df8()
  %v0_19dbf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_19dbf

dec_label_pc_19dbf:                               ; preds = %bb, %dec_label_pc_19db8
  %v0_19dbf = phi i32 [ %v0_19dbf.pre, %bb ], [ %v0_19db8, %dec_label_pc_19db8 ]
  %v1_19dbf = add i32 %v0_19dbf, 16
  %v2_19dbf = inttoptr i32 %v1_19dbf to i32*
  %v3_19dbf = load i32, i32* %v2_19dbf, align 4
  %v1_19dc6 = add i32 %v3_19dbf, 16
  %v2_19dc6 = inttoptr i32 %v1_19dc6 to i32*
  %v3_19dc6 = load i32, i32* %v2_19dc6, align 4
  %v2_19dcd = load i32, i32* %arg1, align 4
  %v1_19dd2 = add i32 %v2_19dcd, -12
  %v2_19dd2 = inttoptr i32 %v1_19dd2 to i32*
  %v3_19dd2 = load i32, i32* %v2_19dd2, align 4
  store i32 %v3_19dd2, i32* @esi, align 4
  ret i32 %v3_19dc6
}

define i32 @function_19def() local_unnamed_addr {
dec_label_pc_19def:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_19def = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_19def = udiv i8 %v2_19def, 16
  %v4_19def = mul i8 %v2_19def, 16
  %v5_19def = or i8 %v3_19def, %v4_19def
  %v6_19def = load i32, i32* %edi.global-to-local, align 4
  %v7_19def = inttoptr i32 %v6_19def to i8*
  store i8 %v5_19def, i8* %v7_19def, align 1
  %v0_19df2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19df2
}

define i32 @function_19df8() local_unnamed_addr {
dec_label_pc_19df8:
  %stack_var_72 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_19dfc = ptrtoint i32* %stack_var_72 to i32
  %v2_19e0b = call i32 @unknown_335e0(i32 %v2_19dfc, i32 %tmp6)
  %v1_19e17 = load i32, i32* @edi, align 4
  %v2_19e17 = inttoptr i32 %v1_19e17 to i32*
  %v0_19e19 = call i32 @function_19ccb()
  ret i32 %v0_19e19
}

define i32 @function_19e2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19e2c:
  %v0_19e38 = load i32, i32* @edi, align 4
  %v2_19e3b = call i32 @unknown_33490(i32 %v0_19e38, i32 0)
  %v0_19e43 = call i32 @function_19ccb()
  ret i32 %v0_19e43
}

define i32 @function_19e48() local_unnamed_addr {
dec_label_pc_19e48:
  %stack_var_72 = alloca i32, align 4
  %v2_19e4c = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_19e4c
}

define i32 @function_19e58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19e58:
  %v2_19e68 = call i32 @function_19e2c(i32 %arg1, i32 %arg2)
  ret i32 %v2_19e68
}

define i32 @function_19e70() local_unnamed_addr {
dec_label_pc_19e70:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_19e74 = load i32, i32* @esi, align 4
  %v2_19e7c = call i32 @function_19e2c(i32 %v0_19e74, i32 %tmp2)
  ret i32 %v2_19e7c
}

define i32 @function_19e7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_19e7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_19e86 = load i32, i32* %eax.global-to-local, align 8
  %v0_19e92 = load i32, i32* @edi, align 4
  %v2_19e95 = call i32 @unknown_33490(i32 %v0_19e92, i32 %v0_19e86)
  store i32 %v2_19e95, i32* %eax.global-to-local, align 8
  %v0_19e9d = call i32 @function_19ccb()
  store i32 %v0_19e9d, i32* %eax.global-to-local, align 8
  ret i32 %v0_19e9d

; uselistorder directives
  uselistorder i32 ()* @function_19ccb, { 4, 2, 0, 3, 1 }
  uselistorder i32 (i32, i32)* @unknown_33490, { 2, 1, 0 }
}

define i32 @function_19ea2() local_unnamed_addr {
dec_label_pc_19ea2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_19eb0:
  store i32 %arg1, i32* @eax, align 8
  %v1_19edb = add i32 %arg1, 8
  %v2_19edb = inttoptr i32 %v1_19edb to i32*
  %v3_19edb = load i32, i32* %v2_19edb, align 4
  %v1_19ee5 = icmp eq i32 %v3_19edb, 0
  br i1 %v1_19ee5, label %bb, label %dec_label_pc_19eed

bb:                                               ; preds = %dec_label_pc_19eb0
  %v1_19ede = add i32 %arg1, 4
  %tmp108 = ptrtoint i32* %arg2 to i32
  %v4_19ee7 = call i32 @function_19ffb(i32 %arg1, i32 %v1_19ede, i32 %tmp108)
  br label %dec_label_pc_19eed

dec_label_pc_19eed:                               ; preds = %bb, %dec_label_pc_19eb0
  %v1_19f13 = add i32 %v3_19edb, 16
  %v2_19f13 = inttoptr i32 %v1_19f13 to i32*
  %v3_19f13 = load i32, i32* %v2_19f13, align 4
  ret i32 %v3_19f13

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_19f42(i32 %arg1) local_unnamed_addr {
dec_label_pc_19f42:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v15_19f46 = icmp eq i32 %tmp5, %arg1
  br i1 %v15_19f46, label %bb, label %dec_label_pc_19f4c

bb:                                               ; preds = %dec_label_pc_19f42
  %v1_19f4a = call i32 @function_19f78()
  %v0_19f4c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_19f4c:                               ; preds = %bb, %dec_label_pc_19f42
  %v0_19f4c = phi i32 [ %v0_19f4c.pre, %bb ], [ %arg1, %dec_label_pc_19f42 ]
  %v1_19f4c = add i32 %v0_19f4c, 16
  %v2_19f4c = inttoptr i32 %v1_19f4c to i32*
  %v3_19f4c = load i32, i32* %v2_19f4c, align 4
  ret i32 %v3_19f4c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_19f78() local_unnamed_addr {
dec_label_pc_19f78:
  %v3_19f7c = load i32, i32* @eax, align 8
  ret i32 %v3_19f7c
}

define i32 @function_19fe2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19fe2:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19fe2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19fe2 = add i32 %v0_19fe2, 1698440276
  %v2_19fe2 = inttoptr i32 %v1_19fe2 to i32*
  %v3_19fe2 = load i32, i32* %v2_19fe2, align 4
  %v4_19fe2 = add i32 %v3_19fe2, -1
  store i32 %v4_19fe2, i32* %v2_19fe2, align 4
  %v0_19fe8 = load i32, i32* %edx.global-to-local, align 4
  %v1_19fe8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19fe8 = xor i32 %v1_19fe8, %v0_19fe8
  %v3_19fe8 = icmp eq i32 %v2_19fe8, 0
  store i32 %v2_19fe8, i32* %edx.global-to-local, align 4
  %v0_19fee = load i32, i32* %ebx.global-to-local, align 4
  %v1_19fee = add i32 %v0_19fee, 20
  store i32 %v1_19fee, i32* @eax, align 8
  %v1_19ff1 = icmp eq i1 %v3_19fe8, false
  br i1 %v1_19ff1, label %bb, label %dec_label_pc_19ff3

bb:                                               ; preds = %dec_label_pc_19fe2
  %v2_19ff1 = call i32 @function_1a004()
  br label %dec_label_pc_19ff3

dec_label_pc_19ff3:                               ; preds = %bb, %dec_label_pc_19fe2
  %v0_19ffa = phi i32 [ %v2_19ff1, %bb ], [ %v1_19fee, %dec_label_pc_19fe2 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_19ffa
}

define i32 @function_19ffb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19ffb:
  %v0_19fff = call i32 @function_19f78()
  ret i32 %v0_19fff
}

define i32 @function_1a004() local_unnamed_addr {
dec_label_pc_1a004:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1a00a() local_unnamed_addr {
dec_label_pc_1a00a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a00a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a00a
}

define i32 @function_1a013() local_unnamed_addr {
dec_label_pc_1a013:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1a024() local_unnamed_addr {
dec_label_pc_1a024:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a024 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a024
}

define i32 @function_1a035() local_unnamed_addr {
dec_label_pc_1a035:
  %v0_1a035 = call i32 @function_1a013()
  ret i32 %v0_1a035
}

define i32 @function_1a037() local_unnamed_addr {
dec_label_pc_1a037:
  %v0_1a03d = call i32 @function_1a013()
  ret i32 %v0_1a03d

; uselistorder directives
  uselistorder i32 ()* @function_1a013, { 1, 0 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbP5CNodeNS0_8functionIFbSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a040:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1a040 = load i32, i32* %edi.global-to-local, align 4
  %v0_1a041 = load i32, i32* %esi.global-to-local, align 4
  %v0_1a042 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1a04a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a056 = load i32, i32* %arg1, align 4
  store i32 %v2_1a056, i32* %ebx.global-to-local, align 4
  %v12_1a058 = icmp eq i32 %v2_1a056, %tmp98
  %v1_1a05a = icmp eq i1 %v12_1a058, false
  br i1 %v1_1a05a, label %dec_label_pc_1a062, label %dec_label_pc_1a05c

dec_label_pc_1a05c:                               ; preds = %dec_label_pc_1a040
  %v4_1a05c = call i32 @function_1a07b(i32 %v0_1a04a, i32 %v0_1a042, i32 %v0_1a041, i32 %v0_1a040)
  ret i32 %v4_1a05c

dec_label_pc_1a062:                               ; preds = %dec_label_pc_1a040
  %v1_1a062 = inttoptr i32 %v2_1a056 to i32*
  %v2_1a062 = load i32, i32* %v1_1a062, align 4
  store i32 %v2_1a062, i32* %esi.global-to-local, align 4
  %v1_1a064 = add i32 %v2_1a056, 12
  store i32 %v1_1a064, i32* @eax, align 8
  %v1_1a06a = call i32 @function_2a580(i32 %v1_1a064)
  ret i32 %v1_1a06a

; uselistorder directives
  uselistorder i32 %v2_1a056, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1a07b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a07b:
  %v1_1a07f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a07f = xor i32 %v1_1a07f, %arg1
  %v3_1a07f = icmp eq i32 %v2_1a07f, 0
  %v1_1a086 = icmp eq i1 %v3_1a07f, false
  br i1 %v1_1a086, label %dec_label_pc_1a08f, label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a07b
  ret i32 %v2_1a07f

dec_label_pc_1a08f:                               ; preds = %dec_label_pc_1a07b
  ret i32 %v2_1a07f

; uselistorder directives
  uselistorder i32 %v2_1a07f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IbP5CNodebNS0_8functionIFbSC_bEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a0a0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1a0a0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1a0a1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1a0a2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1a0aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a0b6 = load i32, i32* %arg1, align 4
  store i32 %v2_1a0b6, i32* %ebx.global-to-local, align 4
  %v12_1a0b8 = icmp eq i32 %v2_1a0b6, %tmp98
  %v1_1a0ba = icmp eq i1 %v12_1a0b8, false
  br i1 %v1_1a0ba, label %dec_label_pc_1a0c2, label %dec_label_pc_1a0bc

dec_label_pc_1a0bc:                               ; preds = %dec_label_pc_1a0a0
  %v4_1a0bc = call i32 @function_1a0db(i32 %v0_1a0aa, i32 %v0_1a0a2, i32 %v0_1a0a1, i32 %v0_1a0a0)
  ret i32 %v4_1a0bc

dec_label_pc_1a0c2:                               ; preds = %dec_label_pc_1a0a0
  %v1_1a0c2 = inttoptr i32 %v2_1a0b6 to i32*
  %v2_1a0c2 = load i32, i32* %v1_1a0c2, align 4
  store i32 %v2_1a0c2, i32* %esi.global-to-local, align 4
  %v1_1a0c4 = add i32 %v2_1a0b6, 12
  store i32 %v1_1a0c4, i32* @eax, align 8
  %v1_1a0ca = call i32 @function_2a5e0(i32 %v1_1a0c4)
  ret i32 %v1_1a0ca

; uselistorder directives
  uselistorder i32 %v2_1a0b6, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1a0db(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a0db:
  %v1_1a0df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a0df = xor i32 %v1_1a0df, %arg1
  %v3_1a0df = icmp eq i32 %v2_1a0df, 0
  %v1_1a0e6 = icmp eq i1 %v3_1a0df, false
  br i1 %v1_1a0e6, label %dec_label_pc_1a0ef, label %dec_label_pc_1a0e8

dec_label_pc_1a0e8:                               ; preds = %dec_label_pc_1a0db
  ret i32 %v2_1a0df

dec_label_pc_1a0ef:                               ; preds = %dec_label_pc_1a0db
  ret i32 %v2_1a0df

; uselistorder directives
  uselistorder i32 %v2_1a0df, { 1, 0, 2 }
}

define i32 @_ZNSt5dequeISsSaISsEE17_M_reallocate_mapEjb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a100:
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 %tmp110, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_1a124 = trunc i32 %arg3 to i8
  %v1_1a128 = add i32 %tmp110, 36
  %v2_1a128 = inttoptr i32 %v1_1a128 to i32*
  %v3_1a128 = load i32, i32* %v2_1a128, align 4
  %v1_1a12b = add i32 %tmp110, 20
  %v2_1a12b = inttoptr i32 %v1_1a12b to i32*
  %v3_1a12b = load i32, i32* %v2_1a12b, align 4
  store i32 %v3_1a12b, i32* @eax, align 8
  %v1_1a136 = add i32 %tmp110, 4
  %v2_1a136 = inttoptr i32 %v1_1a136 to i32*
  %v3_1a136 = load i32, i32* %v2_1a136, align 4
  store i32 %v3_1a136, i32* @ebp, align 4
  %v2_1a13b = sub i32 %v3_1a128, %v3_1a12b
  %v2_1a13d = ashr i32 %v2_1a13b, ptrtoint (i64* @global_var_2.2539 to i32)
  %v1_1a140 = add i32 %v2_1a13d, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1a140, i32* @edi, align 4
  %v3_1a143 = add i32 %v1_1a140, %arg2
  store i32 %v3_1a143, i32* %edx.global-to-local, align 4
  %v3_1a14a = mul i32 %v3_1a143, 2
  %tmp119 = icmp ugt i32 %v3_1a136, %v3_1a14a
  br i1 %tmp119, label %dec_label_pc_1a151, label %bb

bb:                                               ; preds = %dec_label_pc_1a100
  %v4_1a14f = call i32 @function_1a1a0(i32 %v3_1a128)
  store i32 %v4_1a14f, i32* @eax, align 8
  %v0_1a151.pre = load i32, i32* @ebp, align 4
  %v1_1a151.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1a159.pre = load i32, i32* @esi, align 4
  %v1_1a16e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1a151

dec_label_pc_1a151:                               ; preds = %dec_label_pc_1a100, %bb
  %v1_1a16e = phi i32 [ %v1_1a16e.pre, %bb ], [ %tmp110, %dec_label_pc_1a100 ]
  %v1_1a16c = phi i32 [ %v4_1a14f, %bb ], [ %v3_1a12b, %dec_label_pc_1a100 ]
  %v0_1a159 = phi i32 [ %v0_1a159.pre, %bb ], [ %arg2, %dec_label_pc_1a100 ]
  %v1_1a151 = phi i32 [ %v1_1a151.pre, %bb ], [ %v3_1a143, %dec_label_pc_1a100 ]
  %v0_1a151 = phi i32 [ %v0_1a151.pre, %bb ], [ %v3_1a136, %dec_label_pc_1a100 ]
  %v2_1a151 = sub i32 %v0_1a151, %v1_1a151
  %v2_1a159 = shl i32 %v0_1a159, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_1a15c = udiv i32 %v2_1a151, 2
  %v10_1a15e = icmp eq i8 %v1_1a124, 0
  %v1_1a163 = icmp eq i1 %v10_1a15e, false
  %v4_1a163 = select i1 %v1_1a163, i32 %v2_1a159, i32 0
  store i32 %v4_1a163, i32* %edx.global-to-local, align 4
  %v1_1a166 = add i32 %v3_1a128, 4
  %v2_1a169 = mul i32 %v2_1a15c, 4
  %v3_1a169 = add i32 %v2_1a169, %v4_1a163
  %v2_1a16c = sub i32 %v1_1a166, %v1_1a16c
  %v2_1a16e = inttoptr i32 %v1_1a16e to i32*
  %v3_1a16e = load i32, i32* %v2_1a16e, align 4
  %v4_1a16e = add i32 %v3_1a16e, %v3_1a169
  store i32 %v4_1a16e, i32* @esi, align 4
  %v2_1a170 = sdiv i32 %v2_1a16c, 4
  %v2_1a16c.off = add i32 %v2_1a16c, 3
  %tmp120 = icmp ult i32 %v2_1a16c.off, 7
  store i32 %v2_1a170, i32* @ecx, align 4
  %tmp121 = icmp ugt i32 %v1_1a16c, %v4_1a16e
  br i1 %tmp121, label %bb114, label %dec_label_pc_1a17b

bb114:                                            ; preds = %dec_label_pc_1a151
  %v4_1a175 = call i32 @function_1a270()
  br label %dec_label_pc_1a17b

dec_label_pc_1a17b:                               ; preds = %dec_label_pc_1a151, %bb114
  br i1 %tmp120, label %bb115, label %dec_label_pc_1a183

bb115:                                            ; preds = %dec_label_pc_1a17b
  %v1_1a17d = call i32 @function_1a224()
  br label %dec_label_pc_1a183

dec_label_pc_1a183:                               ; preds = %bb115, %dec_label_pc_1a17b
  %v0_1a18a = load i32, i32* @esi, align 4
  %v1_1a18a = load i32, i32* @edi, align 4
  %v2_1a18a = mul i32 %v1_1a18a, 4
  %v3_1a18a = add i32 %v2_1a18a, %v0_1a18a
  %tmp122 = mul i32 %v2_1a170, -4
  %v2_1a18d = add i32 %v3_1a18a, %tmp122
  ret i32 %v2_1a18d

; uselistorder directives
  uselistorder i32 %v3_1a143, { 1, 0, 2 }
  uselistorder i32 %v3_1a136, { 1, 0, 2 }
  uselistorder i32 %tmp110, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1a17b, { 1, 0 }
  uselistorder label %dec_label_pc_1a151, { 1, 0 }
}

define i32 @function_1a19b() local_unnamed_addr {
dec_label_pc_1a19b:
  %v0_1a19b = call i32 @function_1a224()
  ret i32 %v0_1a19b
}

define i32 @function_1a1a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a1a0:
  %of.global-to-local = alloca i1, align 1
  %v0_1a1a0 = load i32, i32* @esi, align 4
  %v1_1a1a0 = load i32, i32* @ebp, align 4
  %v7_1a1a0 = icmp ult i32 %v0_1a1a0, %v1_1a1a0
  %v1_1a1a4 = icmp eq i1 %v7_1a1a0, false
  %v4_1a1a4 = select i1 %v1_1a1a4, i32 %v0_1a1a0, i32 %v1_1a1a0
  store i32 %v4_1a1a4, i32* @eax, align 8
  %v3_1a1a7 = add i32 %v1_1a1a0, ptrtoint (i64* @global_var_2.2539 to i32)
  %v4_1a1a7 = add i32 %v3_1a1a7, %v4_1a1a4
  store i32 %v4_1a1a7, i32* @ebp, align 4
  %tmp5 = sub i32 1073741822, %v4_1a1a7
  %v8_1a1ab = and i32 %tmp5, %v4_1a1a7
  %v9_1a1ab = icmp slt i32 %v8_1a1ab, 0
  store i1 %v9_1a1ab, i1* %of.global-to-local, align 1
  %tmp7 = icmp ult i32 %v4_1a1a7, 1073741824
  br i1 %tmp7, label %dec_label_pc_1a1b7, label %bb

bb:                                               ; preds = %dec_label_pc_1a1a0
  %v4_1a1b1 = call i32 @function_1a289()
  %v0_1a1b7.pre = load i32, i32* @ebp, align 4
  %v0_1a1c2.pre = load i32, i32* @esi, align 4
  %v1_1a1c2.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1a1b7

dec_label_pc_1a1b7:                               ; preds = %dec_label_pc_1a1a0, %bb
  %v1_1a1c2 = phi i1 [ %v9_1a1ab, %dec_label_pc_1a1a0 ], [ %v1_1a1c2.pre, %bb ]
  %v0_1a1c2 = phi i32 [ %v0_1a1a0, %dec_label_pc_1a1a0 ], [ %v0_1a1c2.pre, %bb ]
  %v0_1a1b7 = phi i32 [ %v4_1a1a7, %dec_label_pc_1a1a0 ], [ %v0_1a1b7.pre, %bb ]
  %v1_1a1b7 = mul i32 %v0_1a1b7, 4
  %v2_1a1c2 = shl i32 %v0_1a1c2, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_1a1c2, i32* @esi, align 4
  store i1 %v1_1a1c2, i1* %of.global-to-local, align 1
  ret i32 %v1_1a1b7

; uselistorder directives
  uselistorder i32 %v4_1a1a7, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1a1b7, { 1, 0 }
}

define i32 @function_1a224() local_unnamed_addr {
dec_label_pc_1a224:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1a224 = load i32, i32* @esi, align 4
  %v1_1a224 = load i32, i32* @ebx, align 4
  %v2_1a224 = add i32 %v1_1a224, 20
  %v3_1a224 = inttoptr i32 %v2_1a224 to i32*
  store i32 %v0_1a224, i32* %v3_1a224, align 4
  %v2_1a227 = load i32, i32* @esi, align 4
  store i32 %v2_1a227, i32* %eax.global-to-local, align 8
  %v1_1a229 = load i32, i32* @ebx, align 4
  %v2_1a229 = add i32 %v1_1a229, 12
  %v3_1a229 = inttoptr i32 %v2_1a229 to i32*
  store i32 %v2_1a227, i32* %v3_1a229, align 4
  %v0_1a22c = load i32, i32* %eax.global-to-local, align 8
  %v1_1a22c = add i32 %v0_1a22c, ptrtoint (i32* @global_var_200.2533 to i32)
  %v1_1a231 = load i32, i32* @ebx, align 4
  %v2_1a231 = add i32 %v1_1a231, 16
  %v3_1a231 = inttoptr i32 %v2_1a231 to i32*
  store i32 %v1_1a22c, i32* %v3_1a231, align 4
  %v0_1a234 = load i32, i32* @esi, align 4
  %v1_1a234 = load i32, i32* @edi, align 4
  %v2_1a234 = mul i32 %v1_1a234, 4
  %v3_1a234 = add i32 %v0_1a234, -4
  %v4_1a234 = add i32 %v3_1a234, %v2_1a234
  store i32 %v4_1a234, i32* %eax.global-to-local, align 8
  %v1_1a238 = load i32, i32* @ebx, align 4
  %v2_1a238 = add i32 %v1_1a238, 36
  %v3_1a238 = inttoptr i32 %v2_1a238 to i32*
  store i32 %v4_1a234, i32* %v3_1a238, align 4
  %v0_1a23b = load i32, i32* %eax.global-to-local, align 8
  %v1_1a23b = inttoptr i32 %v0_1a23b to i32*
  %v2_1a23b = load i32, i32* %v1_1a23b, align 4
  store i32 %v2_1a23b, i32* %eax.global-to-local, align 8
  %v1_1a23d = load i32, i32* @ebx, align 4
  %v2_1a23d = add i32 %v1_1a23d, 28
  %v3_1a23d = inttoptr i32 %v2_1a23d to i32*
  store i32 %v2_1a23b, i32* %v3_1a23d, align 4
  %v0_1a240 = load i32, i32* %eax.global-to-local, align 8
  %v1_1a240 = add i32 %v0_1a240, ptrtoint (i32* @global_var_200.2533 to i32)
  store i32 %v1_1a240, i32* @eax, align 8
  %v1_1a249 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a249 = xor i32 %v1_1a249, %tmp6
  %v3_1a249 = icmp eq i32 %v2_1a249, 0
  store i32 %v2_1a249, i32* @ecx, align 4
  %v1_1a250 = load i32, i32* @ebx, align 4
  %v2_1a250 = add i32 %v1_1a250, 32
  %v3_1a250 = inttoptr i32 %v2_1a250 to i32*
  store i32 %v1_1a240, i32* %v3_1a250, align 4
  %v1_1a253 = icmp eq i1 %v3_1a249, false
  br i1 %v1_1a253, label %bb, label %dec_label_pc_1a224.dec_label_pc_1a255_crit_edge

dec_label_pc_1a224.dec_label_pc_1a255_crit_edge:  ; preds = %dec_label_pc_1a224
  %v0_1a268.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1a255

bb:                                               ; preds = %dec_label_pc_1a224
  %v2_1a253 = call i32 @function_1a28e()
  store i32 %v2_1a253, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1a255

dec_label_pc_1a255:                               ; preds = %dec_label_pc_1a224.dec_label_pc_1a255_crit_edge, %bb
  %v0_1a268 = phi i32 [ %v0_1a268.pre, %dec_label_pc_1a224.dec_label_pc_1a255_crit_edge ], [ %v2_1a253, %bb ]
  %v0_1a265 = load i32, i32* @esp, align 4
  %v1_1a265 = add i32 %v0_1a265, 76
  %tmp7 = xor i32 %v0_1a265, -2147483648
  %v8_1a265 = and i32 %v1_1a265, %tmp7
  %v9_1a265 = icmp slt i32 %v8_1a265, 0
  store i1 %v9_1a265, i1* @of, align 1
  ret i32 %v0_1a268

; uselistorder directives
  uselistorder label %dec_label_pc_1a255, { 1, 0 }
}

define i32 @function_1a270() local_unnamed_addr {
dec_label_pc_1a270:
  %v0_1a270 = load i32, i32* @ecx, align 4
  %v1_1a270 = icmp eq i32 %v0_1a270, 0
  br i1 %v1_1a270, label %bb, label %dec_label_pc_1a270.dec_label_pc_1a274_crit_edge

dec_label_pc_1a270.dec_label_pc_1a274_crit_edge:  ; preds = %dec_label_pc_1a270
  %v3_1a27f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1a274

bb:                                               ; preds = %dec_label_pc_1a270
  %v1_1a272 = call i32 @function_1a224()
  br label %dec_label_pc_1a274

dec_label_pc_1a274:                               ; preds = %dec_label_pc_1a270.dec_label_pc_1a274_crit_edge, %bb
  %v3_1a27f = phi i32 [ %v1_1a272, %bb ], [ %v3_1a27f.pre, %dec_label_pc_1a270.dec_label_pc_1a274_crit_edge ]
  ret i32 %v3_1a27f

; uselistorder directives
  uselistorder label %dec_label_pc_1a274, { 1, 0 }
}

define i32 @function_1a287() local_unnamed_addr {
dec_label_pc_1a287:
  %v0_1a287 = call i32 @function_1a224()
  ret i32 %v0_1a287

; uselistorder directives
  uselistorder i32 ()* @function_1a224, { 3, 1, 2, 0 }
}

define i32 @function_1a289() local_unnamed_addr {
dec_label_pc_1a289:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1a28e() local_unnamed_addr {
dec_label_pc_1a28e:
  %v0_1a28e = load i32, i32* @eax, align 8
  ret i32 %v0_1a28e
}

define i32 @_ZNSt5dequeISsSaISsEE16_M_push_back_auxERKSs(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a2a0:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v0_1a2a3 = load i32, i32* @ebx, align 4
  store i32 %tmp6, i32* @ebx, align 4
  %v1_1a2c3 = add i32 %tmp6, 36
  %v2_1a2c3 = inttoptr i32 %v1_1a2c3 to i32*
  %v3_1a2c3 = load i32, i32* %v2_1a2c3, align 4
  %v3_1a2c8 = load i32, i32* %arg1, align 4
  %v4_1a2c8 = sub i32 %v3_1a2c3, %v3_1a2c8
  %v2_1a2ca = sdiv i32 %v4_1a2c8, 4
  %v2_1a2cf = add i32 %tmp6, 4
  %v3_1a2cf = inttoptr i32 %v2_1a2cf to i32*
  %v4_1a2cf = load i32, i32* %v3_1a2cf, align 4
  %v5_1a2cf = sub i32 %v4_1a2cf, %v2_1a2ca
  %tmp10 = or i32 %v5_1a2cf, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  br i1 %tmp11, label %bb, label %dec_label_pc_1a2d7

bb:                                               ; preds = %dec_label_pc_1a2a0
  %v0_1a2bb = load i32, i32* @edi, align 4
  %v0_1a2af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_1a2ab = load i32, i32* @esi, align 4
  %v7_1a2d5 = call i32 @function_1a338(i32 %v0_1a2af, i32 %v0_1a2a3, i32 %v0_1a2ab, i32 %v0_1a2bb)
  br label %dec_label_pc_1a2d7

dec_label_pc_1a2d7:                               ; preds = %bb, %dec_label_pc_1a2a0
  %v2_1a2d7 = phi i32 [ %v7_1a2d5, %bb ], [ %v5_1a2cf, %dec_label_pc_1a2a0 ]
  ret i32 %v2_1a2d7

; uselistorder directives
  uselistorder i32 %v5_1a2cf, { 1, 0 }
}

define i32 @function_1a2f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a2f8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1a2f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a2f8 = add i32 %v0_1a2f8, 1351427139
  %v2_1a2f8 = inttoptr i32 %v1_1a2f8 to i32*
  %v3_1a2f8 = load i32, i32* %v2_1a2f8, align 4
  %v4_1a2f8 = add i32 %v3_1a2f8, -1
  store i32 %v4_1a2f8, i32* %v2_1a2f8, align 4
  %v0_1a2fe = load i32, i32* %eax.global-to-local, align 8
  %v2_1a2fe = add i32 %v0_1a2fe, 137
  %v0_1a300 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1a300, i32* %stack_var_-4, align 4
  %v2_1a301 = and i32 %v2_1a2fe, 139
  %v10_1a301 = and i32 %v0_1a2fe, -256
  %v11_1a301 = or i32 %v2_1a301, %v10_1a301
  %v1_1a303 = add i32 %v11_1a301, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_1a303 = trunc i32 %v1_1a303 to i8
  %v2_1a304 = add i8 %v11_1a303, -115
  %v16_1a304 = zext i8 %v2_1a304 to i32
  %v18_1a304 = and i32 %v1_1a303, -256
  %v19_1a304 = or i32 %v16_1a304, %v18_1a304
  store i32 %v19_1a304, i32* %eax.global-to-local, align 8
  %v2_1a307 = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v5_1a307 = add i8 %v2_1a304, %v2_1a307
  %v20_1a307 = load i32, i32* %edx.global-to-local, align 4
  %v21_1a307 = inttoptr i32 %v20_1a307 to i8*
  store i8 %v5_1a307, i8* %v21_1a307, align 1
  %v0_1a309 = load i32, i32* %eax.global-to-local, align 8
  %v1_1a309 = inttoptr i32 %v0_1a309 to i8*
  %v2_1a309 = load i8, i8* %v1_1a309, align 1
  %v4_1a309 = trunc i32 %v0_1a309 to i8
  %v5_1a309 = add i8 %v2_1a309, %v4_1a309
  store i8 %v5_1a309, i8* %v1_1a309, align 1
  %v0_1a30b = load i32, i32* %eax.global-to-local, align 8
  %v1_1a30b = load i32, i32* %ebx.global-to-local, align 4
  %v2_1a30b = add i32 %v1_1a30b, 28
  %v3_1a30b = inttoptr i32 %v2_1a30b to i32*
  store i32 %v0_1a30b, i32* %v3_1a30b, align 4
  %v0_1a30e = load i32, i32* %eax.global-to-local, align 8
  %v1_1a30e = load i32, i32* %ebx.global-to-local, align 4
  %v2_1a30e = add i32 %v1_1a30e, 24
  %v3_1a30e = inttoptr i32 %v2_1a30e to i32*
  store i32 %v0_1a30e, i32* %v3_1a30e, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1a315 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a315 = xor i32 %v1_1a315, %arg1
  %v3_1a315 = icmp eq i32 %v2_1a315, 0
  store i32 %v2_1a315, i32* @eax, align 8
  %v0_1a31c = load i32, i32* %edx.global-to-local, align 4
  %v1_1a31c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1a31c = add i32 %v1_1a31c, 32
  %v3_1a31c = inttoptr i32 %v2_1a31c to i32*
  store i32 %v0_1a31c, i32* %v3_1a31c, align 4
  %v1_1a31f = icmp eq i1 %v3_1a315, false
  br i1 %v1_1a31f, label %bb, label %dec_label_pc_1a2f8.dec_label_pc_1a321_crit_edge

dec_label_pc_1a2f8.dec_label_pc_1a321_crit_edge:  ; preds = %dec_label_pc_1a2f8
  %v0_1a330.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1a321

bb:                                               ; preds = %dec_label_pc_1a2f8
  %v2_1a31f = load i32, i32* %stack_var_-4, align 4
  %v3_1a31f = call i32 @function_1a355(i32 %v2_1a31f)
  store i32 %v3_1a31f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1a321

dec_label_pc_1a321:                               ; preds = %dec_label_pc_1a2f8.dec_label_pc_1a321_crit_edge, %bb
  %v0_1a330 = phi i32 [ %v0_1a330.pre, %dec_label_pc_1a2f8.dec_label_pc_1a321_crit_edge ], [ %v3_1a31f, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1a330

; uselistorder directives
  uselistorder i32 %v0_1a2fe, { 1, 0 }
  uselistorder label %dec_label_pc_1a321, { 1, 0 }
}

define i32 @function_1a338(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a338:
  %v0_1a348 = load i32, i32* @ebx, align 4
  %v4_1a34b = call i32 @unknown_343a0(i32 %v0_1a348, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), i32 0)
  ret i32 %v4_1a34b
}

define i32 @function_1a355(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a355:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1a376() local_unnamed_addr {
dec_label_pc_1a376:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a376 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a376
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a390:
  %v1_1a3c0 = icmp eq i32 %arg3, 0
  %v1_1a3c2 = add i32 %arg2, 4
  store i32 %v1_1a3c2, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_1a3c0, label %bb, label %dec_label_pc_1a3d7

bb:                                               ; preds = %dec_label_pc_1a390
  %v2_1a3d1 = call i32 @function_1a460(i32 %v1_1a3c2)
  br label %dec_label_pc_1a3d7

dec_label_pc_1a3d7:                               ; preds = %bb, %dec_label_pc_1a390
  %v2_1a3db = phi i32 [ %v2_1a3d1, %bb ], [ %arg3, %dec_label_pc_1a390 ]
  ret i32 %v2_1a3db
}

define i32 @function_1a42e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a42e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1a42e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a42e = add i32 %v0_1a42e, -2095569852
  %v2_1a42e = inttoptr i32 %v1_1a42e to i32*
  %v3_1a42e = load i32, i32* %v2_1a42e, align 4
  %v4_1a42e = sub i32 %v3_1a42e, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1a42e, i32* %v2_1a42e, align 4
  %v0_1a434 = load i32, i32* %esi.global-to-local, align 4
  %v1_1a434 = add i32 %v0_1a434, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1a434, i32* %esi.global-to-local, align 4
  %v0_1a435 = load i32, i32* %eax.global-to-local, align 8
  %v2_1a435 = load i1, i1* %cf.global-to-local, align 1
  %v3_1a435 = zext i1 %v2_1a435 to i32
  %v4_1a435 = add i32 %v0_1a435, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_1a435 = add i32 %v4_1a435, %v3_1a435
  %v25_1a435 = urem i32 %v5_1a435, 256
  %v27_1a435 = and i32 %v0_1a435, -256
  %v28_1a435 = or i32 %v25_1a435, %v27_1a435
  store i32 %v28_1a435, i32* %eax.global-to-local, align 8
  %v1_1a43b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1a43b = icmp eq i32 %v1_1a43b, %arg1
  %v1_1a442 = load i32, i32* %edi.global-to-local, align 4
  %v2_1a442 = inttoptr i32 %v1_1a442 to i32*
  store i32 %v28_1a435, i32* %v2_1a442, align 4
  %v0_1a444 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_1a444, i32* @eax, align 8
  %v1_1a446 = icmp eq i1 %v3_1a43b, false
  br i1 %v1_1a446, label %bb, label %dec_label_pc_1a448

bb:                                               ; preds = %dec_label_pc_1a42e
  %v2_1a446 = call i32 @function_1a483()
  store i32 %v2_1a446, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1a448

dec_label_pc_1a448:                               ; preds = %bb, %dec_label_pc_1a42e
  %v0_1a45b = phi i32 [ %v2_1a446, %bb ], [ %v0_1a444, %dec_label_pc_1a42e ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_1a458 = load i32, i32* @esp, align 4
  %v5_1a458 = icmp ugt i32 %v0_1a458, -77
  store i1 %v5_1a458, i1* %cf.global-to-local, align 1
  ret i32 %v0_1a45b

; uselistorder directives
  uselistorder i32 %v0_1a435, { 1, 0 }
}

define i32 @function_1a460(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a460:
  %v0_1a460 = load i32, i32* @ebp, align 4
  %v1_1a468 = add i32 %v0_1a460, 16
  ret i32 %v1_1a468
}

define i32 @function_1a477() local_unnamed_addr {
dec_label_pc_1a477:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a479 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a479
}

define i32 @function_1a483() local_unnamed_addr {
dec_label_pc_1a483:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a490:
  store i32 %arg2, i32* @ebp, align 4
  %v0_1a49b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_1a4af = add i32 %arg2, 8
  %v2_1a4af = inttoptr i32 %v1_1a4af to i32*
  %v3_1a4af = load i32, i32* %v2_1a4af, align 4
  %v1_1a4b2 = icmp eq i32 %v3_1a4af, 0
  %v1_1a4b4 = icmp eq i1 %v1_1a4b2, false
  br i1 %v1_1a4b4, label %dec_label_pc_1a4c9, label %dec_label_pc_1a4b6

dec_label_pc_1a4b6:                               ; preds = %dec_label_pc_1a490
  %v1_1a4b6 = call i32 @function_1a567(i32 %v0_1a49b)
  ret i32 %v1_1a4b6

dec_label_pc_1a4c9:                               ; preds = %dec_label_pc_1a490
  %v1_1a4c9 = add i32 %v3_1a4af, 16
  ret i32 %v1_1a4c9
}

define i32 @function_1a4e3() local_unnamed_addr {
dec_label_pc_1a4e3:
  %v0_1a4e3 = load i32, i32* @eax, align 8
  ret i32 %v0_1a4e3
}

define i32 @function_1a4e7() local_unnamed_addr {
dec_label_pc_1a4e7:
  %v0_1a4e7 = load i32, i32* @ebx, align 4
  %v1_1a4e7 = load i32, i32* @ebp, align 4
  %v2_1a4e7 = add i32 %v1_1a4e7, 12
  %v3_1a4e7 = inttoptr i32 %v2_1a4e7 to i32*
  %v4_1a4e7 = load i32, i32* %v3_1a4e7, align 4
  %v15_1a4e7 = icmp eq i32 %v0_1a4e7, %v4_1a4e7
  br i1 %v15_1a4e7, label %bb, label %dec_label_pc_1a4e7.dec_label_pc_1a4ec_crit_edge

dec_label_pc_1a4e7.dec_label_pc_1a4ec_crit_edge:  ; preds = %dec_label_pc_1a4e7
  %v3_1a4ec.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1a4ec

bb:                                               ; preds = %dec_label_pc_1a4e7
  %v1_1a4ea = call i32 @function_1a538()
  br label %dec_label_pc_1a4ec

dec_label_pc_1a4ec:                               ; preds = %dec_label_pc_1a4e7.dec_label_pc_1a4ec_crit_edge, %bb
  %v3_1a4ec = phi i32 [ %v3_1a4ec.pre, %dec_label_pc_1a4e7.dec_label_pc_1a4ec_crit_edge ], [ %v1_1a4ea, %bb ]
  ret i32 %v3_1a4ec

; uselistorder directives
  uselistorder label %dec_label_pc_1a4ec, { 1, 0 }
}

define i32 @function_1a4f5() local_unnamed_addr {
dec_label_pc_1a4f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a4f5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a4f5
}

define i32 @function_1a517() local_unnamed_addr {
dec_label_pc_1a517:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1a51b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a51b = icmp eq i32 %v1_1a51b, %tmp10
  %v0_1a522 = load i32, i32* @edi, align 4
  store i32 %v0_1a522, i32* @eax, align 8
  %v1_1a524 = icmp eq i1 %v3_1a51b, false
  br i1 %v1_1a524, label %bb, label %dec_label_pc_1a526

bb:                                               ; preds = %dec_label_pc_1a517
  %v2_1a524 = call i32 @function_1a56f()
  br label %dec_label_pc_1a526

dec_label_pc_1a526:                               ; preds = %bb, %dec_label_pc_1a517
  %v0_1a52d = phi i32 [ %v2_1a524, %bb ], [ %v0_1a522, %dec_label_pc_1a517 ]
  ret i32 %v0_1a52d
}

define i32 @function_1a530() local_unnamed_addr {
dec_label_pc_1a530:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a532 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a532
}

define i32 @function_1a538() local_unnamed_addr {
dec_label_pc_1a538:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_1a538 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_1a538, i32* %eax.global-to-local, align 8
  %v0_1a53f = load i32, i32* @esi, align 4
  %v0_1a543 = load i32, i32* @ebx, align 4
  %v4_1a553 = call i32 @unknown_34820(i32 %v2_1a538, i32 0, i32 %v0_1a543, i32 %v0_1a53f)
  %v0_1a55f = load i32, i32* @edi, align 4
  %v1_1a55f = add i32 %v0_1a55f, 4
  %v2_1a55f = inttoptr i32 %v1_1a55f to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1a55f, align 1
  %v0_1a563 = load i32, i32* %eax.global-to-local, align 8
  %v1_1a563 = load i32, i32* @edi, align 4
  %v2_1a563 = inttoptr i32 %v1_1a563 to i32*
  store i32 %v0_1a563, i32* %v2_1a563, align 4
  %v0_1a565 = call i32 @function_1a517()
  store i32 %v0_1a565, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a565
}

define i32 @function_1a567(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a567:
  %v0_1a567 = load i32, i32* @ebp, align 4
  %v1_1a567 = add i32 %v0_1a567, 4
  store i32 %v1_1a567, i32* @ebx, align 4
  %v0_1a56a = call i32 @function_1a4e7()
  ret i32 %v0_1a56a
}

define i32 @function_1a56f() local_unnamed_addr {
dec_label_pc_1a56f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a580:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_1a593 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_1a5a7 = add i32 %arg2, 4
  %v12_1a5aa = icmp eq i32 %v1_1a5a7, %arg3
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v12_1a5aa, label %bb, label %dec_label_pc_1a5ba

bb:                                               ; preds = %dec_label_pc_1a580
  %v2_1a5b4 = call i32 @function_1a6d0(i32 %v0_1a593)
  br label %dec_label_pc_1a5ba

dec_label_pc_1a5ba:                               ; preds = %bb, %dec_label_pc_1a580
  %v3_1a5c5 = phi i32 [ %v2_1a5b4, %bb ], [ %v1_1a5a7, %dec_label_pc_1a580 ]
  ret i32 %v3_1a5c5

; uselistorder directives
  uselistorder i32 %v1_1a5a7, { 1, 0 }
}

define i32 @function_1a5eb() local_unnamed_addr {
dec_label_pc_1a5eb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a5eb = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a5eb = add i32 %v0_1a5eb, -1996217236
  %v2_1a5eb = inttoptr i32 %v1_1a5eb to i32*
  %v3_1a5eb = load i32, i32* %v2_1a5eb, align 4
  %v4_1a5eb = sub i32 %v3_1a5eb, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1a5eb, i32* %v2_1a5eb, align 4
  %v0_1a5f1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a5f1
}

define i32 @function_1a600(i16 %arg1) local_unnamed_addr {
dec_label_pc_1a600:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1a600 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a600 = add i32 %v0_1a600, -2078006188
  %v2_1a600 = inttoptr i32 %v1_1a600 to i32*
  %v3_1a600 = load i32, i32* %v2_1a600, align 4
  %v4_1a600 = sub i32 %v3_1a600, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1a600, i32* %v2_1a600, align 4
  %v2_1a606 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1a606 = udiv i8 %v2_1a606, 16
  %v4_1a606 = mul i8 %v2_1a606, 16
  %v5_1a606 = or i8 %v3_1a606, %v4_1a606
  %v6_1a606 = load i32, i32* %edi.global-to-local, align 4
  %v7_1a606 = inttoptr i32 %v6_1a606 to i8*
  store i8 %v5_1a606, i8* %v7_1a606, align 1
  %v6_1a609 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_1a609
}

define i32 @function_1a633() local_unnamed_addr {
dec_label_pc_1a633:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1a637 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a637 = xor i32 %v1_1a637, %tmp6
  %v3_1a637 = icmp eq i32 %v2_1a637, 0
  store i32 %v2_1a637, i32* @edx, align 4
  %v0_1a63e = load i32, i32* @esi, align 4
  store i32 %v0_1a63e, i32* @eax, align 8
  %v1_1a640 = icmp eq i1 %v3_1a637, false
  br i1 %v1_1a640, label %bb, label %dec_label_pc_1a646

bb:                                               ; preds = %dec_label_pc_1a633
  %v2_1a640 = call i32 @function_1a780()
  br label %dec_label_pc_1a646

dec_label_pc_1a646:                               ; preds = %bb, %dec_label_pc_1a633
  %v0_1a659 = phi i32 [ %v2_1a640, %bb ], [ %v0_1a63e, %dec_label_pc_1a633 ]
  ret i32 %v0_1a659
}

define i32 @function_1a689() local_unnamed_addr {
dec_label_pc_1a689:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a689 = load i32, i32* %eax.global-to-local, align 8
  %v11_1a689 = and i32 %v0_1a689, -119
  store i32 %v11_1a689, i32* %eax.global-to-local, align 8
  ret i32 %v11_1a689

; uselistorder directives
  uselistorder i32 %v11_1a689, { 1, 0 }
}

define i32 @function_1a69b() local_unnamed_addr {
dec_label_pc_1a69b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a69b = load i32, i32* @ebx, align 4
  %v1_1a69b = add i32 %v0_1a69b, -2078006188
  %v2_1a69b = inttoptr i32 %v1_1a69b to i32*
  %v3_1a69b = load i32, i32* %v2_1a69b, align 4
  %v4_1a69b = sub i32 %v3_1a69b, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1a69b, i32* %v2_1a69b, align 4
  %v0_1a6a1 = load i32, i32* @ebx, align 4
  %v1_1a6a1 = load i32, i32* @esi, align 4
  %v2_1a6a1 = mul i32 %v1_1a6a1, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_1a6a1 = add i32 %v0_1a6a1, -117
  %v4_1a6a1 = add i32 %v3_1a6a1, %v2_1a6a1
  %v5_1a6a1 = inttoptr i32 %v4_1a6a1 to i8*
  %v6_1a6a1 = load i8, i8* %v5_1a6a1, align 1
  %v8_1a6a1 = mul i8 %v6_1a6a1, 8
  store i8 %v8_1a6a1, i8* %v5_1a6a1, align 1
  %v0_1a6a6 = load i32, i32* %eax.global-to-local, align 8
  %v11_1a6a6 = or i32 %v0_1a6a6, 137
  store i32 %v11_1a6a6, i32* %eax.global-to-local, align 8
  %v0_1a6a8 = load i32, i32* @edx, align 4
  %v1_1a6a8 = trunc i32 %v0_1a6a8 to i16
  %v2_1a6a8 = call i8 @__asm_insb(i16 %v1_1a6a8)
  %v3_1a6a8 = load i32, i32* @edi, align 4
  %v4_1a6a8 = inttoptr i32 %v3_1a6a8 to i8*
  store i8 %v2_1a6a8, i8* %v4_1a6a8, align 1
  %v0_1a6a9 = load i32, i32* %eax.global-to-local, align 8
  %v11_1a6a9 = and i32 %v0_1a6a9, -240
  store i32 %v11_1a6a9, i32* %eax.global-to-local, align 8
  %v1_1a6ab = icmp eq i32 %v11_1a6a9, 0
  br i1 %v1_1a6ab, label %bb, label %dec_label_pc_1a6b3

bb:                                               ; preds = %dec_label_pc_1a69b
  %v1_1a6ad = call i32 @function_1a770()
  store i32 %v1_1a6ad, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1a6b3

dec_label_pc_1a6b3:                               ; preds = %bb, %dec_label_pc_1a69b
  %v0_1a6b7 = load i32, i32* @edx, align 4
  %v0_1a6bb = load i32, i32* @edi, align 4
  %v0_1a6bf = load i32, i32* @esi, align 4
  %v3_1a6c2 = call i32 @unknown_34910(i32 %v0_1a6bf, i32 %v0_1a6bb, i32 %v0_1a6b7)
  store i32 %v3_1a6c2, i32* %eax.global-to-local, align 8
  %v0_1a6ca = call i32 @function_1a633()
  store i32 %v0_1a6ca, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a6ca

; uselistorder directives
  uselistorder i32 %v11_1a6a9, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
}

define i32 @function_1a6d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a6d0:
  %stack_var_40 = alloca i32, align 4
  %v0_1a6d0 = load i32, i32* @edi, align 4
  %v1_1a6d0 = add i32 %v0_1a6d0, 20
  %v2_1a6d0 = inttoptr i32 %v1_1a6d0 to i32*
  %v3_1a6d0 = load i32, i32* %v2_1a6d0, align 4
  %v1_1a6d3 = icmp eq i32 %v3_1a6d0, 0
  %v1_1a6d5 = icmp eq i1 %v1_1a6d3, false
  br i1 %v1_1a6d5, label %dec_label_pc_1a708, label %dec_label_pc_1a6d7

dec_label_pc_1a6d7:                               ; preds = %dec_label_pc_1a6d0
  %v2_1a6d7 = ptrtoint i32* %stack_var_40 to i32
  %v2_1a6e6 = call i32 @unknown_34a10(i32 %v2_1a6d7, i32 %v0_1a6d0)
  %v1_1a6f2 = load i32, i32* @esi, align 4
  %v2_1a6f2 = inttoptr i32 %v1_1a6f2 to i32*
  store i32 %arg1, i32* %v2_1a6f2, align 4
  %v0_1a6f4 = call i32 @function_1a633()
  ret i32 %v0_1a6f4

dec_label_pc_1a708:                               ; preds = %dec_label_pc_1a6d0
  %v1_1a70c = add i32 %v0_1a6d0, 16
  %v2_1a70c = inttoptr i32 %v1_1a70c to i32*
  %v3_1a70c = load i32, i32* %v2_1a70c, align 4
  %v1_1a70f = add i32 %v3_1a70c, 16
  ret i32 %v1_1a70f
}

define i32 @function_1a719() local_unnamed_addr {
dec_label_pc_1a719:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a719 = load i32, i32* %eax.global-to-local, align 8
  %v2_1a719 = mul i32 %v0_1a719, 8
  %v3_1a719 = add i32 %v0_1a719, 1820965236
  %v4_1a719 = add i32 %v3_1a719, %v2_1a719
  %v5_1a719 = inttoptr i32 %v4_1a719 to i32*
  %v6_1a719 = load i32, i32* %v5_1a719, align 4
  %v7_1a719 = add i32 %v6_1a719, 1
  store i32 %v7_1a719, i32* %v5_1a719, align 4
  %v0_1a720 = load i32, i32* %eax.global-to-local, align 8
  %v11_1a720 = and i32 %v0_1a720, -240
  store i32 %v11_1a720, i32* %eax.global-to-local, align 8
  %v0_1a722 = load i32, i32* @edi, align 4
  %v1_1a722 = add i32 %v0_1a722, 16
  %v2_1a722 = inttoptr i32 %v1_1a722 to i32*
  %v3_1a722 = load i32, i32* %v2_1a722, align 4
  store i32 %v3_1a722, i32* %eax.global-to-local, align 8
  %v1_1a729 = call i32 @function_1a734(i32 %v3_1a722)
  store i32 %v1_1a729, i32* %eax.global-to-local, align 8
  ret i32 %v1_1a729

; uselistorder directives
  uselistorder i32 %v0_1a719, { 1, 0 }
}

define i32 @function_1a734(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a734:
  %v0_1a73c = load i32, i32* @edi, align 4
  %v0_1a740 = load i32, i32* @esi, align 4
  %v3_1a743 = call i32 @unknown_34910(i32 %v0_1a740, i32 %v0_1a73c, i32 0)
  %v0_1a74b = call i32 @function_1a633()
  ret i32 %v0_1a74b
}

define i32 @function_1a750() local_unnamed_addr {
dec_label_pc_1a750:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1a758 = load i32, i32* %eax.global-to-local, align 8
  %v0_1a75c = load i32, i32* %edi.global-to-local, align 4
  %v0_1a760 = load i32, i32* @esi, align 4
  %v3_1a763 = call i32 @unknown_34910(i32 %v0_1a760, i32 %v0_1a75c, i32 %v0_1a758)
  store i32 %v3_1a763, i32* %eax.global-to-local, align 8
  %v0_1a76b = call i32 @function_1a633()
  store i32 %v0_1a76b, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a76b

; uselistorder directives
  uselistorder i32 ()* @function_1a633, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_34910, { 2, 1, 0 }
}

define i32 @function_1a770() local_unnamed_addr {
dec_label_pc_1a770:
  %v0_1a770 = load i32, i32* @ebx, align 4
  %v1_1a774 = call i32 @function_1a734(i32 %v0_1a770)
  ret i32 %v1_1a774
}

define i32 @function_1a776() local_unnamed_addr {
dec_label_pc_1a776:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a77a = load i32, i32* %eax.global-to-local, align 8
  %v1_1a77e = call i32 @function_1a734(i32 %v0_1a77a)
  store i32 %v1_1a77e, i32* %eax.global-to-local, align 8
  ret i32 %v1_1a77e

; uselistorder directives
  uselistorder i32 (i32)* @function_1a734, { 2, 0, 1 }
}

define i32 @function_1a780() local_unnamed_addr {
dec_label_pc_1a780:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a790:
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_1a7ab = add i32 %arg1, 8
  %v2_1a7ab = inttoptr i32 %v1_1a7ab to i32*
  %v3_1a7ab = load i32, i32* %v2_1a7ab, align 4
  store i32 %v3_1a7ab, i32* @ebx, align 4
  %v1_1a7b5 = icmp eq i32 %v3_1a7ab, 0
  br i1 %v1_1a7b5, label %bb, label %dec_label_pc_1a7b9

bb:                                               ; preds = %dec_label_pc_1a790
  %v1_1a7ae = add i32 %arg1, 4
  %v2_1a7b7 = call i32 @function_1a814(i32 %v1_1a7ae)
  br label %dec_label_pc_1a7b9

dec_label_pc_1a7b9:                               ; preds = %bb, %dec_label_pc_1a790
  %v1_1a7c9 = add i32 %v3_1a7ab, 16
  ret i32 %v1_1a7c9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1a7e3() local_unnamed_addr {
dec_label_pc_1a7e3:
  %v4_1a7e3 = load i32, i32* @edi, align 4
  %v1_1a7e9 = add i32 %v4_1a7e3, 16
  ret i32 %v1_1a7e9
}

define i32 @function_1a7fc() local_unnamed_addr {
dec_label_pc_1a7fc:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1a800 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a800 = xor i32 %v1_1a800, %tmp10
  %v3_1a800 = icmp eq i32 %v2_1a800, 0
  store i32 %v2_1a800, i32* @edx, align 4
  %v0_1a807 = load i32, i32* @edi, align 4
  %v1_1a807 = add i32 %v0_1a807, 32
  store i32 %v1_1a807, i32* @eax, align 8
  %v1_1a80a = icmp eq i1 %v3_1a800, false
  br i1 %v1_1a80a, label %bb, label %dec_label_pc_1a80c

bb:                                               ; preds = %dec_label_pc_1a7fc
  %v2_1a80a = call i32 @function_1a868()
  br label %dec_label_pc_1a80c

dec_label_pc_1a80c:                               ; preds = %bb, %dec_label_pc_1a7fc
  %v0_1a813 = phi i32 [ %v2_1a80a, %bb ], [ %v1_1a807, %dec_label_pc_1a7fc ]
  ret i32 %v0_1a813
}

define i32 @function_1a814(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a814:
  %stack_var_28 = alloca i32, align 4
  %stack_var_36 = alloca i32, align 4
  %v2_1a818 = load i32, i32* @esi, align 4
  %v2_1a81a = ptrtoint i32* %stack_var_36 to i32
  store i32 %v2_1a818, i32* %stack_var_36, align 4
  %v2_1a853 = ptrtoint i32* %stack_var_28 to i32
  %v3_1a85a = call i32 @unknown_34d10(i32 %v2_1a853, i32 %arg1, i32 %v2_1a81a)
  store i32 %arg1, i32* @edi, align 4
  %v0_1a866 = call i32 @function_1a7fc()
  ret i32 %v0_1a866

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a868() local_unnamed_addr {
dec_label_pc_1a868:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a870:
  %v1_1a8a0 = icmp eq i32 %arg3, 0
  %v1_1a8a2 = add i32 %arg2, 4
  store i32 %v1_1a8a2, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_1a8a0, label %bb, label %dec_label_pc_1a8b7

bb:                                               ; preds = %dec_label_pc_1a870
  %v2_1a8b1 = call i32 @function_1a940(i32 %v1_1a8a2)
  br label %dec_label_pc_1a8b7

dec_label_pc_1a8b7:                               ; preds = %bb, %dec_label_pc_1a870
  %v2_1a8bb = phi i32 [ %v2_1a8b1, %bb ], [ %arg3, %dec_label_pc_1a870 ]
  ret i32 %v2_1a8bb
}

define i32 @function_1a90e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a90e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1a90e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a90e = add i32 %v0_1a90e, -2095569852
  %v2_1a90e = inttoptr i32 %v1_1a90e to i32*
  %v3_1a90e = load i32, i32* %v2_1a90e, align 4
  %v4_1a90e = sub i32 %v3_1a90e, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1a90e, i32* %v2_1a90e, align 4
  %v0_1a914 = load i32, i32* %esi.global-to-local, align 4
  %v1_1a914 = add i32 %v0_1a914, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1a914, i32* %esi.global-to-local, align 4
  %v0_1a915 = load i32, i32* %eax.global-to-local, align 8
  %v2_1a915 = load i1, i1* %cf.global-to-local, align 1
  %v3_1a915 = zext i1 %v2_1a915 to i32
  %v4_1a915 = add i32 %v0_1a915, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_1a915 = add i32 %v4_1a915, %v3_1a915
  %v25_1a915 = urem i32 %v5_1a915, 256
  %v27_1a915 = and i32 %v0_1a915, -256
  %v28_1a915 = or i32 %v25_1a915, %v27_1a915
  store i32 %v28_1a915, i32* %eax.global-to-local, align 8
  %v1_1a91b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1a91b = icmp eq i32 %v1_1a91b, %arg1
  %v1_1a922 = load i32, i32* %edi.global-to-local, align 4
  %v2_1a922 = inttoptr i32 %v1_1a922 to i32*
  store i32 %v28_1a915, i32* %v2_1a922, align 4
  %v0_1a924 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_1a924, i32* @eax, align 8
  %v1_1a926 = icmp eq i1 %v3_1a91b, false
  br i1 %v1_1a926, label %bb, label %dec_label_pc_1a928

bb:                                               ; preds = %dec_label_pc_1a90e
  %v2_1a926 = call i32 @function_1a963()
  store i32 %v2_1a926, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1a928

dec_label_pc_1a928:                               ; preds = %bb, %dec_label_pc_1a90e
  %v0_1a93b = phi i32 [ %v2_1a926, %bb ], [ %v0_1a924, %dec_label_pc_1a90e ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_1a938 = load i32, i32* @esp, align 4
  %v5_1a938 = icmp ugt i32 %v0_1a938, -77
  store i1 %v5_1a938, i1* %cf.global-to-local, align 1
  ret i32 %v0_1a93b

; uselistorder directives
  uselistorder i32 %v0_1a915, { 1, 0 }
}

define i32 @function_1a940(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a940:
  %v0_1a940 = load i32, i32* @ebp, align 4
  %v1_1a948 = add i32 %v0_1a940, 16
  ret i32 %v1_1a948
}

define i32 @function_1a957() local_unnamed_addr {
dec_label_pc_1a957:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a959 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a959
}

define i32 @function_1a963() local_unnamed_addr {
dec_label_pc_1a963:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a970:
  store i32 %arg2, i32* @ebp, align 4
  %v0_1a97b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_1a98f = add i32 %arg2, 8
  %v2_1a98f = inttoptr i32 %v1_1a98f to i32*
  %v3_1a98f = load i32, i32* %v2_1a98f, align 4
  %v1_1a992 = icmp eq i32 %v3_1a98f, 0
  %v1_1a994 = icmp eq i1 %v1_1a992, false
  br i1 %v1_1a994, label %dec_label_pc_1a9a9, label %dec_label_pc_1a996

dec_label_pc_1a996:                               ; preds = %dec_label_pc_1a970
  %v1_1a996 = call i32 @function_1aa47(i32 %v0_1a97b)
  ret i32 %v1_1a996

dec_label_pc_1a9a9:                               ; preds = %dec_label_pc_1a970
  %v1_1a9a9 = add i32 %v3_1a98f, 16
  ret i32 %v1_1a9a9
}

define i32 @function_1a9c3() local_unnamed_addr {
dec_label_pc_1a9c3:
  %v0_1a9c3 = load i32, i32* @eax, align 8
  ret i32 %v0_1a9c3
}

define i32 @function_1a9c7() local_unnamed_addr {
dec_label_pc_1a9c7:
  %v0_1a9c7 = load i32, i32* @ebx, align 4
  %v1_1a9c7 = load i32, i32* @ebp, align 4
  %v2_1a9c7 = add i32 %v1_1a9c7, 12
  %v3_1a9c7 = inttoptr i32 %v2_1a9c7 to i32*
  %v4_1a9c7 = load i32, i32* %v3_1a9c7, align 4
  %v15_1a9c7 = icmp eq i32 %v0_1a9c7, %v4_1a9c7
  br i1 %v15_1a9c7, label %bb, label %dec_label_pc_1a9c7.dec_label_pc_1a9cc_crit_edge

dec_label_pc_1a9c7.dec_label_pc_1a9cc_crit_edge:  ; preds = %dec_label_pc_1a9c7
  %v3_1a9cc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1a9cc

bb:                                               ; preds = %dec_label_pc_1a9c7
  %v1_1a9ca = call i32 @function_1aa18()
  br label %dec_label_pc_1a9cc

dec_label_pc_1a9cc:                               ; preds = %dec_label_pc_1a9c7.dec_label_pc_1a9cc_crit_edge, %bb
  %v3_1a9cc = phi i32 [ %v3_1a9cc.pre, %dec_label_pc_1a9c7.dec_label_pc_1a9cc_crit_edge ], [ %v1_1a9ca, %bb ]
  ret i32 %v3_1a9cc

; uselistorder directives
  uselistorder label %dec_label_pc_1a9cc, { 1, 0 }
}

define i32 @function_1a9d5() local_unnamed_addr {
dec_label_pc_1a9d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a9d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a9d5
}

define i32 @function_1a9f7() local_unnamed_addr {
dec_label_pc_1a9f7:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1a9fb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a9fb = icmp eq i32 %v1_1a9fb, %tmp10
  %v0_1aa02 = load i32, i32* @edi, align 4
  store i32 %v0_1aa02, i32* @eax, align 8
  %v1_1aa04 = icmp eq i1 %v3_1a9fb, false
  br i1 %v1_1aa04, label %bb, label %dec_label_pc_1aa06

bb:                                               ; preds = %dec_label_pc_1a9f7
  %v2_1aa04 = call i32 @function_1aa4f()
  br label %dec_label_pc_1aa06

dec_label_pc_1aa06:                               ; preds = %bb, %dec_label_pc_1a9f7
  %v0_1aa0d = phi i32 [ %v2_1aa04, %bb ], [ %v0_1aa02, %dec_label_pc_1a9f7 ]
  ret i32 %v0_1aa0d
}

define i32 @function_1aa10() local_unnamed_addr {
dec_label_pc_1aa10:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa12 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa12
}

define i32 @function_1aa18() local_unnamed_addr {
dec_label_pc_1aa18:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_1aa18 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_1aa18, i32* %eax.global-to-local, align 8
  %v0_1aa1f = load i32, i32* @esi, align 4
  %v0_1aa23 = load i32, i32* @ebx, align 4
  %v4_1aa33 = call i32 @unknown_351e0(i32 %v2_1aa18, i32 0, i32 %v0_1aa23, i32 %v0_1aa1f)
  %v0_1aa3f = load i32, i32* @edi, align 4
  %v1_1aa3f = add i32 %v0_1aa3f, 4
  %v2_1aa3f = inttoptr i32 %v1_1aa3f to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1aa3f, align 1
  %v0_1aa43 = load i32, i32* %eax.global-to-local, align 8
  %v1_1aa43 = load i32, i32* @edi, align 4
  %v2_1aa43 = inttoptr i32 %v1_1aa43 to i32*
  store i32 %v0_1aa43, i32* %v2_1aa43, align 4
  %v0_1aa45 = call i32 @function_1a9f7()
  store i32 %v0_1aa45, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa45
}

define i32 @function_1aa47(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aa47:
  %v0_1aa47 = load i32, i32* @ebp, align 4
  %v1_1aa47 = add i32 %v0_1aa47, 4
  store i32 %v1_1aa47, i32* @ebx, align 4
  %v0_1aa4a = call i32 @function_1a9c7()
  ret i32 %v0_1aa4a
}

define i32 @function_1aa4f() local_unnamed_addr {
dec_label_pc_1aa4f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1aa60:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_1aa73 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_1aa87 = add i32 %arg2, 4
  %v12_1aa8a = icmp eq i32 %v1_1aa87, %arg3
  br i1 %v12_1aa8a, label %bb, label %dec_label_pc_1aa9a

bb:                                               ; preds = %dec_label_pc_1aa60
  %v2_1aa94 = call i32 @function_1abb0(i32 %v0_1aa73)
  br label %dec_label_pc_1aa9a

dec_label_pc_1aa9a:                               ; preds = %bb, %dec_label_pc_1aa60
  %v3_1aaa5 = phi i32 [ %v2_1aa94, %bb ], [ %v1_1aa87, %dec_label_pc_1aa60 ]
  ret i32 %v3_1aaa5

; uselistorder directives
  uselistorder i32 %v1_1aa87, { 1, 0 }
}

define i32 @function_1aacb() local_unnamed_addr {
dec_label_pc_1aacb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1aacb = load i32, i32* %ecx.global-to-local, align 4
  %v1_1aacb = add i32 %v0_1aacb, -1996217236
  %v2_1aacb = inttoptr i32 %v1_1aacb to i32*
  %v3_1aacb = load i32, i32* %v2_1aacb, align 4
  %v4_1aacb = sub i32 %v3_1aacb, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1aacb, i32* %v2_1aacb, align 4
  %v0_1aad1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aad1
}

define i32 @function_1aae0(i16 %arg1) local_unnamed_addr {
dec_label_pc_1aae0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1aae0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1aae0 = add i32 %v0_1aae0, -2078006188
  %v2_1aae0 = inttoptr i32 %v1_1aae0 to i32*
  %v3_1aae0 = load i32, i32* %v2_1aae0, align 4
  %v4_1aae0 = sub i32 %v3_1aae0, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1aae0, i32* %v2_1aae0, align 4
  %v2_1aae6 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1aae6 = udiv i8 %v2_1aae6, 16
  %v4_1aae6 = mul i8 %v2_1aae6, 16
  %v5_1aae6 = or i8 %v3_1aae6, %v4_1aae6
  %v6_1aae6 = load i32, i32* %edi.global-to-local, align 4
  %v7_1aae6 = inttoptr i32 %v6_1aae6 to i8*
  store i8 %v5_1aae6, i8* %v7_1aae6, align 1
  %v6_1aae9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_1aae9
}

define i32 @function_1ab13() local_unnamed_addr {
dec_label_pc_1ab13:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1ab17 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ab17 = xor i32 %v1_1ab17, %tmp6
  %v3_1ab17 = icmp eq i32 %v2_1ab17, 0
  store i32 %v2_1ab17, i32* @edx, align 4
  %v0_1ab1e = load i32, i32* @esi, align 4
  store i32 %v0_1ab1e, i32* @eax, align 8
  %v1_1ab20 = icmp eq i1 %v3_1ab17, false
  br i1 %v1_1ab20, label %bb, label %dec_label_pc_1ab26

bb:                                               ; preds = %dec_label_pc_1ab13
  %v2_1ab20 = call i32 @function_1ac60()
  br label %dec_label_pc_1ab26

dec_label_pc_1ab26:                               ; preds = %bb, %dec_label_pc_1ab13
  %v0_1ab39 = phi i32 [ %v2_1ab20, %bb ], [ %v0_1ab1e, %dec_label_pc_1ab13 ]
  ret i32 %v0_1ab39
}

define i32 @function_1ab69() local_unnamed_addr {
dec_label_pc_1ab69:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ab69 = load i32, i32* %eax.global-to-local, align 8
  %v11_1ab69 = and i32 %v0_1ab69, -119
  store i32 %v11_1ab69, i32* %eax.global-to-local, align 8
  ret i32 %v11_1ab69

; uselistorder directives
  uselistorder i32 %v11_1ab69, { 1, 0 }
}

define i32 @function_1ab7b() local_unnamed_addr {
dec_label_pc_1ab7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ab7b = load i32, i32* @ebx, align 4
  %v1_1ab7b = add i32 %v0_1ab7b, -2078006188
  %v2_1ab7b = inttoptr i32 %v1_1ab7b to i32*
  %v3_1ab7b = load i32, i32* %v2_1ab7b, align 4
  %v4_1ab7b = sub i32 %v3_1ab7b, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1ab7b, i32* %v2_1ab7b, align 4
  %v0_1ab81 = load i32, i32* @ebx, align 4
  %v1_1ab81 = load i32, i32* @esi, align 4
  %v2_1ab81 = mul i32 %v1_1ab81, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_1ab81 = add i32 %v0_1ab81, -117
  %v4_1ab81 = add i32 %v3_1ab81, %v2_1ab81
  %v5_1ab81 = inttoptr i32 %v4_1ab81 to i8*
  %v6_1ab81 = load i8, i8* %v5_1ab81, align 1
  %v8_1ab81 = mul i8 %v6_1ab81, 8
  store i8 %v8_1ab81, i8* %v5_1ab81, align 1
  %v0_1ab86 = load i32, i32* %eax.global-to-local, align 8
  %v11_1ab86 = or i32 %v0_1ab86, 137
  store i32 %v11_1ab86, i32* %eax.global-to-local, align 8
  %v0_1ab88 = load i32, i32* @edx, align 4
  %v1_1ab88 = trunc i32 %v0_1ab88 to i16
  %v2_1ab88 = call i8 @__asm_insb(i16 %v1_1ab88)
  %v3_1ab88 = load i32, i32* @edi, align 4
  %v4_1ab88 = inttoptr i32 %v3_1ab88 to i8*
  store i8 %v2_1ab88, i8* %v4_1ab88, align 1
  %v0_1ab89 = load i32, i32* %eax.global-to-local, align 8
  %v11_1ab89 = and i32 %v0_1ab89, -240
  store i32 %v11_1ab89, i32* %eax.global-to-local, align 8
  %v1_1ab8b = icmp eq i32 %v11_1ab89, 0
  br i1 %v1_1ab8b, label %bb, label %dec_label_pc_1ab93

bb:                                               ; preds = %dec_label_pc_1ab7b
  %v1_1ab8d = call i32 @function_1ac50()
  store i32 %v1_1ab8d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ab93

dec_label_pc_1ab93:                               ; preds = %bb, %dec_label_pc_1ab7b
  %v0_1ab97 = load i32, i32* @edx, align 4
  %v0_1ab9b = load i32, i32* @edi, align 4
  %v0_1ab9f = load i32, i32* @esi, align 4
  %v3_1aba2 = call i32 @unknown_352d0(i32 %v0_1ab9f, i32 %v0_1ab9b, i32 %v0_1ab97)
  store i32 %v3_1aba2, i32* %eax.global-to-local, align 8
  %v0_1abaa = call i32 @function_1ab13()
  store i32 %v0_1abaa, i32* %eax.global-to-local, align 8
  ret i32 %v0_1abaa

; uselistorder directives
  uselistorder i32 %v11_1ab89, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 137, { 1, 2, 3, 0 }
  uselistorder i8 8, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13 }
}

define i32 @function_1abb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1abb0:
  %stack_var_40 = alloca i32, align 4
  %v0_1abb0 = load i32, i32* @edi, align 4
  %v1_1abb0 = add i32 %v0_1abb0, 20
  %v2_1abb0 = inttoptr i32 %v1_1abb0 to i32*
  %v3_1abb0 = load i32, i32* %v2_1abb0, align 4
  %v1_1abb3 = icmp eq i32 %v3_1abb0, 0
  %v1_1abb5 = icmp eq i1 %v1_1abb3, false
  br i1 %v1_1abb5, label %dec_label_pc_1abe8, label %dec_label_pc_1abb7

dec_label_pc_1abb7:                               ; preds = %dec_label_pc_1abb0
  %v2_1abb7 = ptrtoint i32* %stack_var_40 to i32
  %v2_1abc6 = call i32 @unknown_353d0(i32 %v2_1abb7, i32 %v0_1abb0)
  %v1_1abd2 = load i32, i32* @esi, align 4
  %v2_1abd2 = inttoptr i32 %v1_1abd2 to i32*
  store i32 %arg1, i32* %v2_1abd2, align 4
  %v0_1abd4 = call i32 @function_1ab13()
  ret i32 %v0_1abd4

dec_label_pc_1abe8:                               ; preds = %dec_label_pc_1abb0
  %v1_1abec = add i32 %v0_1abb0, 16
  %v2_1abec = inttoptr i32 %v1_1abec to i32*
  %v3_1abec = load i32, i32* %v2_1abec, align 4
  %v1_1abef = add i32 %v3_1abec, 16
  ret i32 %v1_1abef
}

define i32 @function_1abf9() local_unnamed_addr {
dec_label_pc_1abf9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1abf9 = load i32, i32* %eax.global-to-local, align 8
  %v2_1abf9 = mul i32 %v0_1abf9, 8
  %v3_1abf9 = add i32 %v0_1abf9, 1820965236
  %v4_1abf9 = add i32 %v3_1abf9, %v2_1abf9
  %v5_1abf9 = inttoptr i32 %v4_1abf9 to i32*
  %v6_1abf9 = load i32, i32* %v5_1abf9, align 4
  %v7_1abf9 = add i32 %v6_1abf9, 1
  store i32 %v7_1abf9, i32* %v5_1abf9, align 4
  %v0_1ac00 = load i32, i32* %eax.global-to-local, align 8
  %v11_1ac00 = and i32 %v0_1ac00, -240
  store i32 %v11_1ac00, i32* %eax.global-to-local, align 8
  %v0_1ac02 = load i32, i32* @edi, align 4
  %v1_1ac02 = add i32 %v0_1ac02, 16
  %v2_1ac02 = inttoptr i32 %v1_1ac02 to i32*
  %v3_1ac02 = load i32, i32* %v2_1ac02, align 4
  store i32 %v3_1ac02, i32* %eax.global-to-local, align 8
  %v1_1ac09 = call i32 @function_1ac14(i32 %v3_1ac02)
  store i32 %v1_1ac09, i32* %eax.global-to-local, align 8
  ret i32 %v1_1ac09

; uselistorder directives
  uselistorder i32 %v0_1abf9, { 1, 0 }
}

define i32 @function_1ac14(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac14:
  %v0_1ac1c = load i32, i32* @edi, align 4
  %v0_1ac20 = load i32, i32* @esi, align 4
  %v3_1ac23 = call i32 @unknown_352d0(i32 %v0_1ac20, i32 %v0_1ac1c, i32 0)
  %v0_1ac2b = call i32 @function_1ab13()
  ret i32 %v0_1ac2b
}

define i32 @function_1ac30() local_unnamed_addr {
dec_label_pc_1ac30:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1ac38 = load i32, i32* %eax.global-to-local, align 8
  %v0_1ac3c = load i32, i32* %edi.global-to-local, align 4
  %v0_1ac40 = load i32, i32* @esi, align 4
  %v3_1ac43 = call i32 @unknown_352d0(i32 %v0_1ac40, i32 %v0_1ac3c, i32 %v0_1ac38)
  store i32 %v3_1ac43, i32* %eax.global-to-local, align 8
  %v0_1ac4b = call i32 @function_1ab13()
  store i32 %v0_1ac4b, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ac4b

; uselistorder directives
  uselistorder i32 ()* @function_1ab13, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_352d0, { 2, 1, 0 }
}

define i32 @function_1ac50() local_unnamed_addr {
dec_label_pc_1ac50:
  %v0_1ac50 = load i32, i32* @ebx, align 4
  %v1_1ac54 = call i32 @function_1ac14(i32 %v0_1ac50)
  ret i32 %v1_1ac54
}

define i32 @function_1ac56() local_unnamed_addr {
dec_label_pc_1ac56:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ac5a = load i32, i32* %eax.global-to-local, align 8
  %v1_1ac5e = call i32 @function_1ac14(i32 %v0_1ac5a)
  store i32 %v1_1ac5e, i32* %eax.global-to-local, align 8
  ret i32 %v1_1ac5e

; uselistorder directives
  uselistorder i32 (i32)* @function_1ac14, { 2, 0, 1 }
}

define i32 @function_1ac60() local_unnamed_addr {
dec_label_pc_1ac60:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac70:
  %v1_1ac8b = add i32 %arg1, 8
  %v2_1ac8b = inttoptr i32 %v1_1ac8b to i32*
  %v3_1ac8b = load i32, i32* %v2_1ac8b, align 4
  store i32 %v3_1ac8b, i32* @ebx, align 4
  %v1_1ac8e = add i32 %arg1, 4
  %v1_1ac95 = icmp eq i32 %v3_1ac8b, 0
  br i1 %v1_1ac95, label %bb, label %dec_label_pc_1ac99

bb:                                               ; preds = %dec_label_pc_1ac70
  %v2_1ac97 = call i32 @function_1acf4(i32 %v1_1ac8e)
  %v0_1ac99.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1ac99

dec_label_pc_1ac99:                               ; preds = %bb, %dec_label_pc_1ac70
  %v0_1ac99 = phi i32 [ %v0_1ac99.pre, %bb ], [ %v1_1ac8e, %dec_label_pc_1ac70 ]
  store i32 %v0_1ac99, i32* @edi, align 4
  %v1_1aca9 = add i32 %v3_1ac8b, 16
  ret i32 %v1_1aca9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1acc3() local_unnamed_addr {
dec_label_pc_1acc3:
  %v4_1acc3 = load i32, i32* @edi, align 4
  %v1_1acc9 = add i32 %v4_1acc3, 16
  ret i32 %v1_1acc9
}

define i32 @function_1acdc() local_unnamed_addr {
dec_label_pc_1acdc:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1ace0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ace0 = xor i32 %v1_1ace0, %tmp10
  %v3_1ace0 = icmp eq i32 %v2_1ace0, 0
  store i32 %v2_1ace0, i32* @edx, align 4
  %v0_1ace7 = load i32, i32* @edi, align 4
  %v1_1ace7 = add i32 %v0_1ace7, 32
  store i32 %v1_1ace7, i32* @eax, align 8
  %v1_1acea = icmp eq i1 %v3_1ace0, false
  br i1 %v1_1acea, label %bb, label %dec_label_pc_1acec

bb:                                               ; preds = %dec_label_pc_1acdc
  %v2_1acea = call i32 @function_1ad48()
  br label %dec_label_pc_1acec

dec_label_pc_1acec:                               ; preds = %bb, %dec_label_pc_1acdc
  %v0_1acf3 = phi i32 [ %v2_1acea, %bb ], [ %v1_1ace7, %dec_label_pc_1acdc ]
  ret i32 %v0_1acf3
}

define i32 @function_1acf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1acf4:
  %stack_var_28 = alloca i32, align 4
  %stack_var_36 = alloca i32, align 4
  %v2_1acf8 = load i32, i32* @esi, align 4
  %v2_1acfa = ptrtoint i32* %stack_var_36 to i32
  store i32 %v2_1acf8, i32* %stack_var_36, align 4
  %v2_1ad33 = ptrtoint i32* %stack_var_28 to i32
  %v3_1ad3a = call i32 @unknown_356d0(i32 %v2_1ad33, i32 %arg1, i32 %v2_1acfa)
  store i32 %arg1, i32* @edi, align 4
  %v0_1ad46 = call i32 @function_1acdc()
  ret i32 %v0_1ad46

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ad48() local_unnamed_addr {
dec_label_pc_1ad48:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeI11CNetMessageSaIS0_EE17_M_reallocate_mapEjb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ad50:
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 %tmp110, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_1ad74 = trunc i32 %arg3 to i8
  %v1_1ad78 = add i32 %tmp110, 36
  %v2_1ad78 = inttoptr i32 %v1_1ad78 to i32*
  %v3_1ad78 = load i32, i32* %v2_1ad78, align 4
  %v1_1ad7b = add i32 %tmp110, 20
  %v2_1ad7b = inttoptr i32 %v1_1ad7b to i32*
  %v3_1ad7b = load i32, i32* %v2_1ad7b, align 4
  store i32 %v3_1ad7b, i32* @eax, align 8
  %v1_1ad86 = add i32 %tmp110, 4
  %v2_1ad86 = inttoptr i32 %v1_1ad86 to i32*
  %v3_1ad86 = load i32, i32* %v2_1ad86, align 4
  store i32 %v3_1ad86, i32* @ebp, align 4
  %v2_1ad8b = sub i32 %v3_1ad78, %v3_1ad7b
  %v2_1ad8d = ashr i32 %v2_1ad8b, ptrtoint (i64* @global_var_2.2539 to i32)
  %v1_1ad90 = add i32 %v2_1ad8d, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1ad90, i32* @edi, align 4
  %v3_1ad93 = add i32 %v1_1ad90, %arg2
  store i32 %v3_1ad93, i32* %edx.global-to-local, align 4
  %v3_1ad9a = mul i32 %v3_1ad93, 2
  %tmp119 = icmp ugt i32 %v3_1ad86, %v3_1ad9a
  br i1 %tmp119, label %dec_label_pc_1ada1, label %bb

bb:                                               ; preds = %dec_label_pc_1ad50
  %v4_1ad9f = call i32 @function_1adf0(i32 %v3_1ad78)
  store i32 %v4_1ad9f, i32* @eax, align 8
  %v0_1ada1.pre = load i32, i32* @ebp, align 4
  %v1_1ada1.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1ada9.pre = load i32, i32* @esi, align 4
  %v1_1adbe.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1ada1

dec_label_pc_1ada1:                               ; preds = %dec_label_pc_1ad50, %bb
  %v1_1adbe = phi i32 [ %v1_1adbe.pre, %bb ], [ %tmp110, %dec_label_pc_1ad50 ]
  %v1_1adbc = phi i32 [ %v4_1ad9f, %bb ], [ %v3_1ad7b, %dec_label_pc_1ad50 ]
  %v0_1ada9 = phi i32 [ %v0_1ada9.pre, %bb ], [ %arg2, %dec_label_pc_1ad50 ]
  %v1_1ada1 = phi i32 [ %v1_1ada1.pre, %bb ], [ %v3_1ad93, %dec_label_pc_1ad50 ]
  %v0_1ada1 = phi i32 [ %v0_1ada1.pre, %bb ], [ %v3_1ad86, %dec_label_pc_1ad50 ]
  %v2_1ada1 = sub i32 %v0_1ada1, %v1_1ada1
  %v2_1ada9 = shl i32 %v0_1ada9, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_1adac = udiv i32 %v2_1ada1, 2
  %v10_1adae = icmp eq i8 %v1_1ad74, 0
  %v1_1adb3 = icmp eq i1 %v10_1adae, false
  %v4_1adb3 = select i1 %v1_1adb3, i32 %v2_1ada9, i32 0
  store i32 %v4_1adb3, i32* %edx.global-to-local, align 4
  %v1_1adb6 = add i32 %v3_1ad78, 4
  %v2_1adb9 = mul i32 %v2_1adac, 4
  %v3_1adb9 = add i32 %v2_1adb9, %v4_1adb3
  %v2_1adbc = sub i32 %v1_1adb6, %v1_1adbc
  %v2_1adbe = inttoptr i32 %v1_1adbe to i32*
  %v3_1adbe = load i32, i32* %v2_1adbe, align 4
  %v4_1adbe = add i32 %v3_1adbe, %v3_1adb9
  store i32 %v4_1adbe, i32* @esi, align 4
  %v2_1adc0 = sdiv i32 %v2_1adbc, 4
  %v2_1adbc.off = add i32 %v2_1adbc, 3
  %tmp120 = icmp ult i32 %v2_1adbc.off, 7
  store i32 %v2_1adc0, i32* @ecx, align 4
  %tmp121 = icmp ugt i32 %v1_1adbc, %v4_1adbe
  br i1 %tmp121, label %bb114, label %dec_label_pc_1adcb

bb114:                                            ; preds = %dec_label_pc_1ada1
  %v4_1adc5 = call i32 @function_1aec0()
  br label %dec_label_pc_1adcb

dec_label_pc_1adcb:                               ; preds = %dec_label_pc_1ada1, %bb114
  br i1 %tmp120, label %bb115, label %dec_label_pc_1add3

bb115:                                            ; preds = %dec_label_pc_1adcb
  %v1_1adcd = call i32 @function_1ae74()
  br label %dec_label_pc_1add3

dec_label_pc_1add3:                               ; preds = %bb115, %dec_label_pc_1adcb
  %v0_1adda = load i32, i32* @esi, align 4
  %v1_1adda = load i32, i32* @edi, align 4
  %v2_1adda = mul i32 %v1_1adda, 4
  %v3_1adda = add i32 %v2_1adda, %v0_1adda
  %tmp122 = mul i32 %v2_1adc0, -4
  %v2_1addd = add i32 %v3_1adda, %tmp122
  ret i32 %v2_1addd

; uselistorder directives
  uselistorder i32 %v3_1ad93, { 1, 0, 2 }
  uselistorder i32 %v3_1ad86, { 1, 0, 2 }
  uselistorder i32 %tmp110, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1adcb, { 1, 0 }
  uselistorder label %dec_label_pc_1ada1, { 1, 0 }
}

define i32 @function_1adeb() local_unnamed_addr {
dec_label_pc_1adeb:
  %v0_1adeb = call i32 @function_1ae74()
  ret i32 %v0_1adeb
}

define i32 @function_1adf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adf0:
  %of.global-to-local = alloca i1, align 1
  %v0_1adf0 = load i32, i32* @esi, align 4
  %v1_1adf0 = load i32, i32* @ebp, align 4
  %v7_1adf0 = icmp ult i32 %v0_1adf0, %v1_1adf0
  %v1_1adf4 = icmp eq i1 %v7_1adf0, false
  %v4_1adf4 = select i1 %v1_1adf4, i32 %v0_1adf0, i32 %v1_1adf0
  store i32 %v4_1adf4, i32* @eax, align 8
  %v3_1adf7 = add i32 %v1_1adf0, ptrtoint (i64* @global_var_2.2539 to i32)
  %v4_1adf7 = add i32 %v3_1adf7, %v4_1adf4
  store i32 %v4_1adf7, i32* @ebp, align 4
  %tmp5 = sub i32 1073741822, %v4_1adf7
  %v8_1adfb = and i32 %tmp5, %v4_1adf7
  %v9_1adfb = icmp slt i32 %v8_1adfb, 0
  store i1 %v9_1adfb, i1* %of.global-to-local, align 1
  %tmp7 = icmp ult i32 %v4_1adf7, 1073741824
  br i1 %tmp7, label %dec_label_pc_1ae07, label %bb

bb:                                               ; preds = %dec_label_pc_1adf0
  %v4_1ae01 = call i32 @function_1aed9()
  %v0_1ae07.pre = load i32, i32* @ebp, align 4
  %v0_1ae12.pre = load i32, i32* @esi, align 4
  %v1_1ae12.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1ae07

dec_label_pc_1ae07:                               ; preds = %dec_label_pc_1adf0, %bb
  %v1_1ae12 = phi i1 [ %v9_1adfb, %dec_label_pc_1adf0 ], [ %v1_1ae12.pre, %bb ]
  %v0_1ae12 = phi i32 [ %v0_1adf0, %dec_label_pc_1adf0 ], [ %v0_1ae12.pre, %bb ]
  %v0_1ae07 = phi i32 [ %v4_1adf7, %dec_label_pc_1adf0 ], [ %v0_1ae07.pre, %bb ]
  %v1_1ae07 = mul i32 %v0_1ae07, 4
  %v2_1ae12 = shl i32 %v0_1ae12, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_1ae12, i32* @esi, align 4
  store i1 %v1_1ae12, i1* %of.global-to-local, align 1
  ret i32 %v1_1ae07

; uselistorder directives
  uselistorder i32 %v4_1adf7, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1ae07, { 1, 0 }
}

define i32 @function_1ae74() local_unnamed_addr {
dec_label_pc_1ae74:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1ae74 = load i32, i32* @esi, align 4
  %v1_1ae74 = load i32, i32* @ebx, align 4
  %v2_1ae74 = add i32 %v1_1ae74, 20
  %v3_1ae74 = inttoptr i32 %v2_1ae74 to i32*
  store i32 %v0_1ae74, i32* %v3_1ae74, align 4
  %v2_1ae77 = load i32, i32* @esi, align 4
  store i32 %v2_1ae77, i32* %eax.global-to-local, align 8
  %v1_1ae79 = load i32, i32* @ebx, align 4
  %v2_1ae79 = add i32 %v1_1ae79, 12
  %v3_1ae79 = inttoptr i32 %v2_1ae79 to i32*
  store i32 %v2_1ae77, i32* %v3_1ae79, align 4
  %v0_1ae7c = load i32, i32* %eax.global-to-local, align 8
  %v1_1ae7c = add i32 %v0_1ae7c, ptrtoint (i8** @global_var_1cc.2485 to i32)
  %v1_1ae81 = load i32, i32* @ebx, align 4
  %v2_1ae81 = add i32 %v1_1ae81, 16
  %v3_1ae81 = inttoptr i32 %v2_1ae81 to i32*
  store i32 %v1_1ae7c, i32* %v3_1ae81, align 4
  %v0_1ae84 = load i32, i32* @esi, align 4
  %v1_1ae84 = load i32, i32* @edi, align 4
  %v2_1ae84 = mul i32 %v1_1ae84, 4
  %v3_1ae84 = add i32 %v0_1ae84, -4
  %v4_1ae84 = add i32 %v3_1ae84, %v2_1ae84
  store i32 %v4_1ae84, i32* %eax.global-to-local, align 8
  %v1_1ae88 = load i32, i32* @ebx, align 4
  %v2_1ae88 = add i32 %v1_1ae88, 36
  %v3_1ae88 = inttoptr i32 %v2_1ae88 to i32*
  store i32 %v4_1ae84, i32* %v3_1ae88, align 4
  %v0_1ae8b = load i32, i32* %eax.global-to-local, align 8
  %v1_1ae8b = inttoptr i32 %v0_1ae8b to i32*
  %v2_1ae8b = load i32, i32* %v1_1ae8b, align 4
  store i32 %v2_1ae8b, i32* %eax.global-to-local, align 8
  %v1_1ae8d = load i32, i32* @ebx, align 4
  %v2_1ae8d = add i32 %v1_1ae8d, 28
  %v3_1ae8d = inttoptr i32 %v2_1ae8d to i32*
  store i32 %v2_1ae8b, i32* %v3_1ae8d, align 4
  %v0_1ae90 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ae90 = add i32 %v0_1ae90, ptrtoint (i8** @global_var_1cc.2485 to i32)
  store i32 %v1_1ae90, i32* @eax, align 8
  %v1_1ae99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ae99 = xor i32 %v1_1ae99, %tmp6
  %v3_1ae99 = icmp eq i32 %v2_1ae99, 0
  store i32 %v2_1ae99, i32* @ecx, align 4
  %v1_1aea0 = load i32, i32* @ebx, align 4
  %v2_1aea0 = add i32 %v1_1aea0, 32
  %v3_1aea0 = inttoptr i32 %v2_1aea0 to i32*
  store i32 %v1_1ae90, i32* %v3_1aea0, align 4
  %v1_1aea3 = icmp eq i1 %v3_1ae99, false
  br i1 %v1_1aea3, label %bb, label %dec_label_pc_1ae74.dec_label_pc_1aea5_crit_edge

dec_label_pc_1ae74.dec_label_pc_1aea5_crit_edge:  ; preds = %dec_label_pc_1ae74
  %v0_1aeb8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1aea5

bb:                                               ; preds = %dec_label_pc_1ae74
  %v2_1aea3 = call i32 @function_1aede()
  store i32 %v2_1aea3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1aea5

dec_label_pc_1aea5:                               ; preds = %dec_label_pc_1ae74.dec_label_pc_1aea5_crit_edge, %bb
  %v0_1aeb8 = phi i32 [ %v0_1aeb8.pre, %dec_label_pc_1ae74.dec_label_pc_1aea5_crit_edge ], [ %v2_1aea3, %bb ]
  %v0_1aeb5 = load i32, i32* @esp, align 4
  %v1_1aeb5 = add i32 %v0_1aeb5, 76
  %tmp7 = xor i32 %v0_1aeb5, -2147483648
  %v8_1aeb5 = and i32 %v1_1aeb5, %tmp7
  %v9_1aeb5 = icmp slt i32 %v8_1aeb5, 0
  store i1 %v9_1aeb5, i1* @of, align 1
  ret i32 %v0_1aeb8

; uselistorder directives
  uselistorder label %dec_label_pc_1aea5, { 1, 0 }
}

define i32 @function_1aec0() local_unnamed_addr {
dec_label_pc_1aec0:
  %v0_1aec0 = load i32, i32* @ecx, align 4
  %v1_1aec0 = icmp eq i32 %v0_1aec0, 0
  br i1 %v1_1aec0, label %bb, label %dec_label_pc_1aec0.dec_label_pc_1aec4_crit_edge

dec_label_pc_1aec0.dec_label_pc_1aec4_crit_edge:  ; preds = %dec_label_pc_1aec0
  %v3_1aecf.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1aec4

bb:                                               ; preds = %dec_label_pc_1aec0
  %v1_1aec2 = call i32 @function_1ae74()
  br label %dec_label_pc_1aec4

dec_label_pc_1aec4:                               ; preds = %dec_label_pc_1aec0.dec_label_pc_1aec4_crit_edge, %bb
  %v3_1aecf = phi i32 [ %v1_1aec2, %bb ], [ %v3_1aecf.pre, %dec_label_pc_1aec0.dec_label_pc_1aec4_crit_edge ]
  ret i32 %v3_1aecf

; uselistorder directives
  uselistorder label %dec_label_pc_1aec4, { 1, 0 }
}

define i32 @function_1aed7() local_unnamed_addr {
dec_label_pc_1aed7:
  %v0_1aed7 = call i32 @function_1ae74()
  ret i32 %v0_1aed7

; uselistorder directives
  uselistorder i32 ()* @function_1ae74, { 3, 1, 2, 0 }
}

define i32 @function_1aed9() local_unnamed_addr {
dec_label_pc_1aed9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1aede() local_unnamed_addr {
dec_label_pc_1aede:
  %v0_1aede = load i32, i32* @eax, align 8
  ret i32 %v0_1aede
}

define i32 @_ZNSt5dequeI11CNetMessageSaIS0_EE16_M_push_back_auxERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aef0:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v1_1af10 = add i32 %tmp5, 36
  %v2_1af10 = inttoptr i32 %v1_1af10 to i32*
  %v3_1af10 = load i32, i32* %v2_1af10, align 4
  store i32 %tmp5, i32* @ecx, align 4
  %v3_1af19 = load i32, i32* %arg1, align 4
  %v4_1af19 = sub i32 %v3_1af10, %v3_1af19
  %v2_1af1b = sdiv i32 %v4_1af19, 4
  %v2_1af20 = add i32 %tmp5, 4
  %v3_1af20 = inttoptr i32 %v2_1af20 to i32*
  %v4_1af20 = load i32, i32* %v3_1af20, align 4
  %v5_1af20 = sub i32 %v4_1af20, %v2_1af1b
  %tmp13 = or i32 %v5_1af20, 1
  %tmp14 = icmp eq i32 %tmp13, 1
  br i1 %tmp14, label %bb, label %dec_label_pc_1af2c

bb:                                               ; preds = %dec_label_pc_1aef0
  %v4_1af26 = call i32 @function_1b0e8(i32 %tmp5)
  br label %dec_label_pc_1af2c

dec_label_pc_1af2c:                               ; preds = %bb, %dec_label_pc_1aef0
  %v3_1af2c = phi i32 [ %v4_1af26, %bb ], [ %v5_1af20, %dec_label_pc_1aef0 ]
  ret i32 %v3_1af2c

; uselistorder directives
  uselistorder i32 %v5_1af20, { 1, 0 }
  uselistorder i32 %tmp5, { 3, 0, 2, 1 }
}

define i32 @function_1af7c() local_unnamed_addr {
dec_label_pc_1af7c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1af94(i16 %arg1) local_unnamed_addr {
dec_label_pc_1af94:
  %eax.global-to-local = alloca i32, align 4
  %v0_1af94 = load i32, i32* %eax.global-to-local, align 8
  %v11_1af94 = and i32 %v0_1af94, -119
  store i32 %v11_1af94, i32* %eax.global-to-local, align 8
  ret i32 %v11_1af94

; uselistorder directives
  uselistorder i32 %v11_1af94, { 1, 0 }
}

define i32 @function_1afaa() local_unnamed_addr {
dec_label_pc_1afaa:
  %eax.global-to-local = alloca i32, align 4
  %v0_1afaa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1afaa
}

define i32 @function_1b032(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1b032:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1b032 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b032 = add i32 %v0_1b032, -1980825147
  %v2_1b032 = inttoptr i32 %v1_1b032 to i32*
  %v3_1b032 = load i32, i32* %v2_1b032, align 4
  %v4_1b032 = sub i32 %v3_1b032, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1b032, i32* %v2_1b032, align 4
  %v0_1b038 = load i32, i32* %edx.global-to-local, align 4
  %v1_1b038 = trunc i32 %v0_1b038 to i16
  %v4_1b038 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_1b038, i8 %v4_1b038)
  %v1_1b03b = trunc i32 %v0_1b038 to i16
  %v4_1b03b = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_1b03b, i8 %v4_1b03b)
  %v0_1b03c = load i32, i32* %eax.global-to-local, align 8
  %v1_1b03c = add i32 %v0_1b03c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1b03c, i32* %eax.global-to-local, align 8
  %v0_1b03d = load i32, i32* %edi.global-to-local, align 4
  %v1_1b03d = load i32, i32* %esi.global-to-local, align 4
  %v2_1b03d = add i32 %v1_1b03d, 68
  %v3_1b03d = inttoptr i32 %v2_1b03d to i32*
  store i32 %v0_1b03d, i32* %v3_1b03d, align 4
  %v0_1b040 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b040 = add i32 %v0_1b040, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_1b040 = inttoptr i32 %v1_1b040 to i32*
  %v3_1b040 = load i32, i32* %v2_1b040, align 4
  store i32 %v3_1b040, i32* %eax.global-to-local, align 8
  %v1_1b043 = add i32 %v0_1b040, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_1b043 = inttoptr i32 %v1_1b043 to i32*
  %v3_1b043 = load i32, i32* %v2_1b043, align 4
  store i32 %v3_1b043, i32* %edi.global-to-local, align 4
  %v12_1b04a = icmp eq i32 %v3_1b043, %v3_1b040
  br i1 %v12_1b04a, label %dec_label_pc_1b032.dec_label_pc_1b071_crit_edge, label %dec_label_pc_1b04e

dec_label_pc_1b032.dec_label_pc_1b071_crit_edge:  ; preds = %dec_label_pc_1b032
  %v0_1b074.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1b071

dec_label_pc_1b04e:                               ; preds = %dec_label_pc_1b032
  store i32 %v3_1b040, i32* %edx.global-to-local, align 4
  %v0_1b050 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_1b050, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1b058

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b061, %dec_label_pc_1b04e
  %v1_1b0675 = phi i32 [ %v1_1b067, %dec_label_pc_1b061 ], [ %v3_1b043, %dec_label_pc_1b04e ]
  %v0_1b05c = phi i32 [ %v1_1b061, %dec_label_pc_1b061 ], [ %v3_1b040, %dec_label_pc_1b04e ]
  %v2_1b05f = phi i32 [ %v1_1b064, %dec_label_pc_1b061 ], [ %v0_1b050, %dec_label_pc_1b04e ]
  %v1_1b058 = icmp eq i32 %v2_1b05f, 0
  br i1 %v1_1b058, label %dec_label_pc_1b061, label %dec_label_pc_1b05c

dec_label_pc_1b05c:                               ; preds = %dec_label_pc_1b058
  %v1_1b05c = inttoptr i32 %v0_1b05c to i8*
  %v2_1b05c = load i8, i8* %v1_1b05c, align 1
  %v3_1b05c = zext i8 %v2_1b05c to i32
  store i32 %v3_1b05c, i32* %eax.global-to-local, align 8
  %v3_1b05f = inttoptr i32 %v2_1b05f to i8*
  store i8 %v2_1b05c, i8* %v3_1b05f, align 1
  %v0_1b061.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1b064.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b067.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_1b061

dec_label_pc_1b061:                               ; preds = %dec_label_pc_1b05c, %dec_label_pc_1b058
  %v1_1b067 = phi i32 [ %v1_1b067.pre, %dec_label_pc_1b05c ], [ %v1_1b0675, %dec_label_pc_1b058 ]
  %v0_1b064 = phi i32 [ %v0_1b064.pre, %dec_label_pc_1b05c ], [ 0, %dec_label_pc_1b058 ]
  %v0_1b061 = phi i32 [ %v0_1b061.pre, %dec_label_pc_1b05c ], [ %v0_1b05c, %dec_label_pc_1b058 ]
  %v1_1b061 = add i32 %v0_1b061, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1b061, i32* %edx.global-to-local, align 4
  %v1_1b064 = add i32 %v0_1b064, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1b064, i32* %ecx.global-to-local, align 4
  %v12_1b067 = icmp eq i32 %v1_1b061, %v1_1b067
  %v1_1b069 = icmp eq i1 %v12_1b067, false
  br i1 %v1_1b069, label %dec_label_pc_1b058, label %dec_label_pc_1b06b

dec_label_pc_1b06b:                               ; preds = %dec_label_pc_1b061
  %v5_1b06b = sub i32 %v1_1b061, %v3_1b040
  store i32 %v5_1b06b, i32* %edx.global-to-local, align 4
  %v0_1b06f = load i32, i32* %ebp.global-to-local, align 4
  %v2_1b06f = add i32 %v0_1b06f, %v5_1b06b
  store i32 %v2_1b06f, i32* %ebp.global-to-local, align 4
  %v0_1b071.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1b071

dec_label_pc_1b071:                               ; preds = %dec_label_pc_1b032.dec_label_pc_1b071_crit_edge, %dec_label_pc_1b06b
  %v0_1b074 = phi i32 [ %v2_1b06f, %dec_label_pc_1b06b ], [ %v0_1b074.pre, %dec_label_pc_1b032.dec_label_pc_1b071_crit_edge ]
  %v0_1b071 = phi i32 [ %v0_1b071.pre, %dec_label_pc_1b06b ], [ %v0_1b040, %dec_label_pc_1b032.dec_label_pc_1b071_crit_edge ]
  %v1_1b071 = add i32 %v0_1b071, 72
  %v2_1b071 = inttoptr i32 %v1_1b071 to i32*
  %v3_1b071 = load i32, i32* %v2_1b071, align 4
  store i32 %v3_1b071, i32* %eax.global-to-local, align 8
  %v1_1b074 = load i32, i32* %esi.global-to-local, align 4
  %v2_1b074 = add i32 %v1_1b074, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_1b074 = inttoptr i32 %v2_1b074 to i32*
  store i32 %v0_1b074, i32* %v3_1b074, align 4
  %v0_1b077 = load i32, i32* %eax.global-to-local, align 8
  %v1_1b077 = load i32, i32* %esi.global-to-local, align 4
  %v2_1b077 = add i32 %v1_1b077, 72
  %v3_1b077 = inttoptr i32 %v2_1b077 to i32*
  store i32 %v0_1b077, i32* %v3_1b077, align 4
  %v0_1b07a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b07a = add i32 %v0_1b07a, 76
  %v2_1b07a = inttoptr i32 %v1_1b07a to i16*
  %v3_1b07a = load i16, i16* %v2_1b07a, align 2
  %v4_1b07a = zext i16 %v3_1b07a to i32
  store i32 %v4_1b07a, i32* %eax.global-to-local, align 8
  %v2_1b07e = load i32, i32* %esi.global-to-local, align 4
  %v3_1b07e = add i32 %v2_1b07e, 76
  %v4_1b07e = inttoptr i32 %v3_1b07e to i16*
  store i16 %v3_1b07a, i16* %v4_1b07e, align 2
  %v0_1b082 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b082 = add i32 %v0_1b082, ptrtoint (i16** @global_var_4e.2713 to i32)
  %v2_1b082 = inttoptr i32 %v1_1b082 to i16*
  %v3_1b082 = load i16, i16* %v2_1b082, align 2
  %v4_1b082 = zext i16 %v3_1b082 to i32
  store i32 %v4_1b082, i32* %eax.global-to-local, align 8
  %v2_1b086 = load i32, i32* %esi.global-to-local, align 4
  %v3_1b086 = add i32 %v2_1b086, ptrtoint (i16** @global_var_4e.2713 to i32)
  %v4_1b086 = inttoptr i32 %v3_1b086 to i16*
  store i16 %v3_1b082, i16* %v4_1b086, align 2
  %v0_1b08a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b08a = add i32 %v0_1b08a, 80
  %v2_1b08a = inttoptr i32 %v1_1b08a to i32*
  %v3_1b08a = load i32, i32* %v2_1b08a, align 4
  store i32 %v3_1b08a, i32* %eax.global-to-local, align 8
  %v1_1b08d = load i32, i32* %esi.global-to-local, align 4
  %v2_1b08d = add i32 %v1_1b08d, 80
  %v3_1b08d = inttoptr i32 %v2_1b08d to i32*
  store i32 %v3_1b08a, i32* %v3_1b08d, align 4
  %v0_1b090 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b090 = add i32 %v0_1b090, 84
  %v2_1b090 = inttoptr i32 %v1_1b090 to i32*
  %v3_1b090 = load i32, i32* %v2_1b090, align 4
  store i32 %v3_1b090, i32* %eax.global-to-local, align 8
  %v1_1b093 = load i32, i32* %esi.global-to-local, align 4
  %v2_1b093 = add i32 %v1_1b093, 84
  %v3_1b093 = inttoptr i32 %v2_1b093 to i32*
  store i32 %v3_1b090, i32* %v3_1b093, align 4
  %v0_1b096 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b096 = add i32 %v0_1b096, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_1b096 = inttoptr i32 %v1_1b096 to i32*
  %v3_1b096 = load i32, i32* %v2_1b096, align 4
  store i32 %v3_1b096, i32* %eax.global-to-local, align 8
  %v1_1b099 = load i32, i32* %esi.global-to-local, align 4
  %v2_1b099 = add i32 %v1_1b099, ptrtoint (i32* @global_var_58.2405 to i32)
  %v3_1b099 = inttoptr i32 %v2_1b099 to i32*
  store i32 %v3_1b096, i32* %v3_1b099, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_1b0a4 = add i32 %arg1, 36
  %v2_1b0a4 = inttoptr i32 %v1_1b0a4 to i32*
  %v3_1b0a4 = load i32, i32* %v2_1b0a4, align 4
  store i32 %v3_1b0a4, i32* %eax.global-to-local, align 8
  %v1_1b0a7 = add i32 %v3_1b0a4, 4
  store i32 %v1_1b0a7, i32* %edx.global-to-local, align 4
  store i32 %v1_1b0a7, i32* %v2_1b0a4, align 4
  %v0_1b0ad = load i32, i32* %eax.global-to-local, align 8
  %v1_1b0ad = add i32 %v0_1b0ad, 4
  %v2_1b0ad = inttoptr i32 %v1_1b0ad to i32*
  %v3_1b0ad = load i32, i32* %v2_1b0ad, align 4
  store i32 %v3_1b0ad, i32* %eax.global-to-local, align 8
  %v1_1b0b0 = add i32 %v3_1b0ad, ptrtoint (i8** @global_var_1cc.2485 to i32)
  store i32 %v1_1b0b0, i32* %edx.global-to-local, align 4
  %v1_1b0b6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1b0b6 = add i32 %v1_1b0b6, 28
  %v3_1b0b6 = inttoptr i32 %v2_1b0b6 to i32*
  store i32 %v3_1b0ad, i32* %v3_1b0b6, align 4
  %v0_1b0b9 = load i32, i32* %eax.global-to-local, align 8
  %v1_1b0b9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1b0b9 = add i32 %v1_1b0b9, 24
  %v3_1b0b9 = inttoptr i32 %v2_1b0b9 to i32*
  store i32 %v0_1b0b9, i32* %v3_1b0b9, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_1b0c0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b0c0 = xor i32 %v1_1b0c0, %arg2
  %v3_1b0c0 = icmp eq i32 %v2_1b0c0, 0
  store i32 %v2_1b0c0, i32* @eax, align 8
  %v0_1b0c7 = load i32, i32* %edx.global-to-local, align 4
  %v1_1b0c7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1b0c7 = add i32 %v1_1b0c7, 32
  %v3_1b0c7 = inttoptr i32 %v2_1b0c7 to i32*
  store i32 %v0_1b0c7, i32* %v3_1b0c7, align 4
  %v1_1b0ca = icmp eq i1 %v3_1b0c0, false
  br i1 %v1_1b0ca, label %bb, label %dec_label_pc_1b071.dec_label_pc_1b0cc_crit_edge

dec_label_pc_1b071.dec_label_pc_1b0cc_crit_edge:  ; preds = %dec_label_pc_1b071
  %v0_1b0d3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1b0cc

bb:                                               ; preds = %dec_label_pc_1b071
  %v2_1b0ca = call i32 @function_1b13c()
  store i32 %v2_1b0ca, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b0cc

dec_label_pc_1b0cc:                               ; preds = %dec_label_pc_1b071.dec_label_pc_1b0cc_crit_edge, %bb
  %v0_1b0d3 = phi i32 [ %v0_1b0d3.pre, %dec_label_pc_1b071.dec_label_pc_1b0cc_crit_edge ], [ %v2_1b0ca, %bb ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1b0d3

; uselistorder directives
  uselistorder i32 %v1_1b064, { 1, 0 }
  uselistorder i32 %v1_1b061, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1b043, { 1, 0, 2 }
  uselistorder i32 %v3_1b040, { 3, 1, 2, 0, 4 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 ptrtoint (i8** @global_var_1cc.2485 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b0cc, { 1, 0 }
  uselistorder label %dec_label_pc_1b071, { 1, 0 }
}

define i32 @function_1b0d8() local_unnamed_addr {
dec_label_pc_1b0d8:
  %v0_1b0da = call i32 @function_1af7c()
  ret i32 %v0_1b0da
}

define i32 @function_1b0e0() local_unnamed_addr {
dec_label_pc_1b0e0:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b0e2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b0e2
}

define i32 @function_1b0e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b0e8:
  %v0_1b0f8 = load i32, i32* @ecx, align 4
  %v4_1b0fb = call i32 @unknown_35c40(i32 %v0_1b0f8, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), i32 0)
  ret i32 %arg1
}

define i32 @function_1b10d() local_unnamed_addr {
dec_label_pc_1b10d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b10d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b10d
}

define i32 @function_1b11b() local_unnamed_addr {
dec_label_pc_1b11b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b13a() local_unnamed_addr {
dec_label_pc_1b13a:
  %v0_1b13a = call i32 @function_1b11b()
  ret i32 %v0_1b13a
}

define i32 @function_1b13c() local_unnamed_addr {
dec_label_pc_1b13c:
  %v1_1b13c = load i32, i32* @eax, align 8
  ret i32 %v1_1b13c
}

define i32 @function_1b146() local_unnamed_addr {
dec_label_pc_1b146:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b146 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b146
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1b160:
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg5, i32* @ebx, align 4
  %v1_1b18e = icmp eq i32 %arg3, 0
  br i1 %v1_1b18e, label %bb, label %dec_label_pc_1b1a3

bb:                                               ; preds = %dec_label_pc_1b160
  %v5_1b19d = call i32 @function_1b2a8(i32 %arg2, i32 zext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  br label %dec_label_pc_1b1a3

dec_label_pc_1b1a3:                               ; preds = %bb, %dec_label_pc_1b160
  %v2_1b1a3 = phi i32 [ %v5_1b19d, %bb ], [ 0, %dec_label_pc_1b160 ]
  ret i32 %v2_1b1a3

; uselistorder directives
  uselistorder i32 zext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), { 1, 2, 0, 3 }
}

define i32 @function_1b1ae() local_unnamed_addr {
dec_label_pc_1b1ae:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b1ae = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b1ae = add i32 %v0_1b1ae, -2084206142
  %v2_1b1ae = inttoptr i32 %v1_1b1ae to i32*
  %v3_1b1ae = load i32, i32* %v2_1b1ae, align 4
  %v4_1b1ae = sub i32 %v3_1b1ae, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1b1ae, i32* %v2_1b1ae, align 4
  %v0_1b1b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b1b4
}

define i32 @function_1b20d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b20d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b22b() local_unnamed_addr {
dec_label_pc_1b22b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b22b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b22b
}

define i32 @function_1b242() local_unnamed_addr {
dec_label_pc_1b242:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b242 = load i32, i32* %eax.global-to-local, align 8
  %v2_1b242 = add i32 %v0_1b242, 131
  %v16_1b242 = and i32 %v2_1b242, 255
  %v18_1b242 = and i32 %v0_1b242, -256
  %v19_1b242 = or i32 %v16_1b242, %v18_1b242
  store i32 %v19_1b242, i32* %eax.global-to-local, align 8
  ret i32 %v19_1b242

; uselistorder directives
  uselistorder i32 %v0_1b242, { 1, 0 }
}

define i32 @function_1b24a() local_unnamed_addr {
dec_label_pc_1b24a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b270(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1b270:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_1b270 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b270 = add i32 %v0_1b270, -2095307708
  %v2_1b270 = inttoptr i32 %v1_1b270 to i32*
  %v3_1b270 = load i32, i32* %v2_1b270, align 4
  %v4_1b270 = sub i32 %v3_1b270, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1b270, i32* %v2_1b270, align 4
  %v0_1b276 = load i32, i32* %eax.global-to-local, align 8
  %v1_1b276 = add i32 %v0_1b276, ptrtoint (i1* @global_var_1.2399 to i32)
  %v2_1b277 = load i1, i1* %cf.global-to-local, align 1
  %v3_1b277 = zext i1 %v2_1b277 to i32
  %v4_1b277 = add i32 %v0_1b276, add (i32 ptrtoint (i1* @global_var_1.2399 to i32), i32 zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32))
  %v5_1b277 = add i32 %v4_1b277, %v3_1b277
  %v25_1b277 = urem i32 %v5_1b277, 256
  %v27_1b277 = and i32 %v1_1b276, -256
  %v28_1b277 = or i32 %v25_1b277, %v27_1b277
  store i32 %v28_1b277, i32* %eax.global-to-local, align 8
  %v1_1b27d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1b27d = icmp eq i32 %v1_1b27d, %arg2
  store i32 %tmp103, i32* @eax, align 8
  %v0_1b288 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_1b288, i32* %arg1, align 4
  %v1_1b28a = icmp eq i1 %v3_1b27d, false
  br i1 %v1_1b28a, label %bb, label %dec_label_pc_1b270.dec_label_pc_1b28c_crit_edge

dec_label_pc_1b270.dec_label_pc_1b28c_crit_edge:  ; preds = %dec_label_pc_1b270
  %v0_1b293.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1b28c

bb:                                               ; preds = %dec_label_pc_1b270
  %v2_1b28a = call i32 @function_1b308()
  store i32 %v2_1b28a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b28c

dec_label_pc_1b28c:                               ; preds = %dec_label_pc_1b270.dec_label_pc_1b28c_crit_edge, %bb
  %v0_1b293 = phi i32 [ %v0_1b293.pre, %dec_label_pc_1b270.dec_label_pc_1b28c_crit_edge ], [ %v2_1b28a, %bb ]
  %v0_1b28c = load i32, i32* @esp, align 4
  %v5_1b28c = icmp ugt i32 %v0_1b28c, -93
  store i1 %v5_1b28c, i1* %cf.global-to-local, align 1
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1b293

; uselistorder directives
  uselistorder label %dec_label_pc_1b28c, { 1, 0 }
}

define i32 @function_1b298() local_unnamed_addr {
dec_label_pc_1b298:
  %v1_1b2a2 = call i32 @function_1b20d(i32 0)
  ret i32 %v1_1b2a2
}

define i32 @function_1b2a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b2a8:
  %v2_1b2b8 = load i32, i32* @ebx, align 4
  ret i32 %v2_1b2b8
}

define i32 @function_1b2d8() local_unnamed_addr {
dec_label_pc_1b2d8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1b2d8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b2d8 = add i32 %v0_1b2d8, -968618048
  %v2_1b2d8 = inttoptr i32 %v1_1b2d8 to i32*
  %v3_1b2d8 = load i32, i32* %v2_1b2d8, align 4
  %v4_1b2d8 = add i32 %v3_1b2d8, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1b2d8, i32* %v2_1b2d8, align 4
  %v0_1b2de = load i32, i32* %eax.global-to-local, align 8
  %v2_1b2de = lshr i32 %v0_1b2de, ptrtoint (i64* @global_var_1f.2426 to i32)
  store i32 %v2_1b2de, i32* %eax.global-to-local, align 8
  ret i32 %v2_1b2de
}

define i32 @function_1b2ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b2ea:
  %v0_1b2ee = call i32 @function_1b24a()
  ret i32 %v0_1b2ee
}

define i32 @function_1b308() local_unnamed_addr {
dec_label_pc_1b308:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b33c() local_unnamed_addr {
dec_label_pc_1b33c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b33c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b33c
}

define i32 @function_1b33d() local_unnamed_addr {
dec_label_pc_1b33d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b348() local_unnamed_addr {
dec_label_pc_1b348:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b348 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b348 = add i32 %v0_1b348, -1985549352
  %v2_1b348 = inttoptr i32 %v1_1b348 to i32*
  %v3_1b348 = load i32, i32* %v2_1b348, align 4
  %v4_1b348 = sub i32 %v3_1b348, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1b348, i32* %v2_1b348, align 4
  %v0_1b34e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b34e
}

define i32 @function_1b35d() local_unnamed_addr {
dec_label_pc_1b35d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b35d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b35d
}

define i32 @function_1b372() local_unnamed_addr {
dec_label_pc_1b372:
  %v0_1b372 = call i32 @function_1b33d()
  ret i32 %v0_1b372
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_1b380:
  store i32 0, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v1_1b3af = add i32 %arg2, 8
  %v2_1b3af = inttoptr i32 %v1_1b3af to i32*
  %v3_1b3af = load i32, i32* %v2_1b3af, align 4
  %v1_1b3b2 = icmp eq i32 %v3_1b3af, 0
  br i1 %v1_1b3b2, label %bb, label %dec_label_pc_1b3ba

bb:                                               ; preds = %dec_label_pc_1b380
  %tmp106 = ptrtoint i32* %arg3 to i32
  %v4_1b3b4 = call i32 @function_1b475(i32 %arg1, i32 %arg2, i32 %tmp106)
  br label %dec_label_pc_1b3ba

dec_label_pc_1b3ba:                               ; preds = %bb, %dec_label_pc_1b380
  %v2_1b3be = load i32, i32* %arg3, align 4
  ret i32 %v2_1b3be

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_1b41d() local_unnamed_addr {
dec_label_pc_1b41d:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp4
}

define i32 @function_1b425(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b425:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b43e() local_unnamed_addr {
dec_label_pc_1b43e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1b43e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b43e = add i32 %v0_1b43e, -2060966828
  %v2_1b43e = inttoptr i32 %v1_1b43e to i32*
  %v3_1b43e = load i32, i32* %v2_1b43e, align 4
  %v4_1b43e = sub i32 %v3_1b43e, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1b43e, i32* %v2_1b43e, align 4
  %v2_1b444 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1b444 = udiv i8 %v2_1b444, 16
  %v4_1b444 = mul i8 %v2_1b444, 16
  %v5_1b444 = or i8 %v3_1b444, %v4_1b444
  %v6_1b444 = load i32, i32* %edi.global-to-local, align 4
  %v7_1b444 = inttoptr i32 %v6_1b444 to i8*
  store i8 %v5_1b444, i8* %v7_1b444, align 1
  %v0_1b447 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b447
}

define i32 @function_1b456() local_unnamed_addr {
dec_label_pc_1b456:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1b45a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1b45a = icmp eq i32 %v1_1b45a, %tmp11
  %v1_1b465 = icmp eq i1 %v3_1b45a, false
  br i1 %v1_1b465, label %bb, label %dec_label_pc_1b46b

bb:                                               ; preds = %dec_label_pc_1b456
  %v2_1b465 = call i32 @function_1b4f6()
  br label %dec_label_pc_1b46b

dec_label_pc_1b46b:                               ; preds = %bb, %dec_label_pc_1b456
  %v0_1b472 = phi i32 [ %v2_1b465, %bb ], [ %tmp10, %dec_label_pc_1b456 ]
  ret i32 %v0_1b472
}

define i32 @function_1b475(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b475:
  %v0_1b475 = load i32, i32* @edx, align 4
  %v1_1b477 = add i32 %v0_1b475, 4
  store i32 %v1_1b477, i32* @edi, align 4
  %v2_1b484 = add i32 %arg1, 12
  %v3_1b484 = inttoptr i32 %v2_1b484 to i32*
  %v4_1b484 = load i32, i32* %v3_1b484, align 4
  %v15_1b484 = icmp eq i32 %v1_1b477, %v4_1b484
  br i1 %v15_1b484, label %bb, label %dec_label_pc_1b475.dec_label_pc_1b489_crit_edge

dec_label_pc_1b475.dec_label_pc_1b489_crit_edge:  ; preds = %dec_label_pc_1b475
  %v3_1b489.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1b489

bb:                                               ; preds = %dec_label_pc_1b475
  %v1_1b487 = call i32 @function_1b4b8()
  br label %dec_label_pc_1b489

dec_label_pc_1b489:                               ; preds = %dec_label_pc_1b475.dec_label_pc_1b489_crit_edge, %bb
  %v3_1b489 = phi i32 [ %v3_1b489.pre, %dec_label_pc_1b475.dec_label_pc_1b489_crit_edge ], [ %v1_1b487, %bb ]
  ret i32 %v3_1b489

; uselistorder directives
  uselistorder label %dec_label_pc_1b489, { 1, 0 }
}

define i32 @function_1b490() local_unnamed_addr {
dec_label_pc_1b490:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b490 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b490 = add i32 %v0_1b490, 608472002
  %v2_1b490 = inttoptr i32 %v1_1b490 to i32*
  %v3_1b490 = load i32, i32* %v2_1b490, align 4
  %v4_1b490 = add i32 %v3_1b490, -1
  store i32 %v4_1b490, i32* %v2_1b490, align 4
  %v0_1b49c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b49c = add i32 %v0_1b49c, -12
  %v2_1b49c = inttoptr i32 %v1_1b49c to i32*
  %v3_1b49c = load i32, i32* %v2_1b49c, align 4
  %v0_1b49f = load i32, i32* %eax.global-to-local, align 8
  %v1_1b49f = add i32 %v0_1b49f, -12
  %v2_1b49f = inttoptr i32 %v1_1b49f to i32*
  %v3_1b49f = load i32, i32* %v2_1b49f, align 4
  %tmp98 = icmp ule i32 %v3_1b49f, %v3_1b49c
  %v5_1b4aa = select i1 %tmp98, i32 %v3_1b49f, i32 %v3_1b49c
  store i32 %v5_1b4aa, i32* @eax, align 8
  %v1_1b4ad = call i32 @function_1b425(i32 %v0_1b49f)
  store i32 %v1_1b4ad, i32* %eax.global-to-local, align 8
  ret i32 %v1_1b4ad

; uselistorder directives
  uselistorder i32 %v3_1b49f, { 1, 0 }
  uselistorder i32 %v3_1b49c, { 1, 0 }
}

define i32 @function_1b4b8() local_unnamed_addr {
dec_label_pc_1b4b8:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v2_1b4bc = ptrtoint i32* %stack_var_60 to i32
  %v0_1b4c3 = load i32, i32* @edi, align 4
  %v5_1b4db = call i32 @unknown_364e0(i32 %v2_1b4bc, i32 %tmp3, i32 0, i32 %v0_1b4c3, i32 %tmp9)
  %v2_1b4eb = inttoptr i32 %tmp to i32*
  %v0_1b4ed = load i32, i32* %edx.global-to-local, align 4
  %v1_1b4ed = add i32 %v0_1b4ed, 4
  %v2_1b4ed = inttoptr i32 %v1_1b4ed to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1b4ed, align 1
  %v0_1b4f1 = call i32 @function_1b456()
  ret i32 %v0_1b4f1
}

define i32 @function_1b4f6() local_unnamed_addr {
dec_label_pc_1b4f6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1b500:
  store i32 %arg2, i32* @ebp, align 4
  %v1_1b52d = add i32 %arg2, 4
  %v12_1b530 = icmp eq i32 %v1_1b52d, %arg3
  store i32 %arg1, i32* @edi, align 4
  br i1 %v12_1b530, label %bb, label %dec_label_pc_1b54b

bb:                                               ; preds = %dec_label_pc_1b500
  %v3_1b545 = call i32 @function_1b708(i32* %arg4)
  br label %dec_label_pc_1b54b

dec_label_pc_1b54b:                               ; preds = %dec_label_pc_1b500, %bb
  %v3_1b581 = phi i32 [ %v3_1b545, %bb ], [ %v1_1b52d, %dec_label_pc_1b500 ]
  ret i32 %v3_1b581

; uselistorder directives
  uselistorder i32 %v1_1b52d, { 1, 0 }
  uselistorder label %dec_label_pc_1b54b, { 1, 0 }
}

define i32 @function_1b61b() local_unnamed_addr {
dec_label_pc_1b61b:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1b61f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b61f = xor i32 %v1_1b61f, %tmp6
  %v3_1b61f = icmp eq i32 %v2_1b61f, 0
  store i32 %v2_1b61f, i32* @ecx, align 4
  %v0_1b626 = load i32, i32* @edi, align 4
  store i32 %v0_1b626, i32* @eax, align 8
  %v1_1b628 = icmp eq i1 %v3_1b61f, false
  br i1 %v1_1b628, label %bb, label %dec_label_pc_1b62e

bb:                                               ; preds = %dec_label_pc_1b61b
  %v2_1b628 = call i32 @function_1b7f2()
  br label %dec_label_pc_1b62e

dec_label_pc_1b62e:                               ; preds = %bb, %dec_label_pc_1b61b
  %v0_1b641 = phi i32 [ %v2_1b628, %bb ], [ %v0_1b626, %dec_label_pc_1b61b ]
  ret i32 %v0_1b641
}

define i32 @function_1b682() local_unnamed_addr {
dec_label_pc_1b682:
  %v0_1b682 = call i32 @function_89000000()
  ret i32 %v0_1b682

; uselistorder directives
  uselistorder i32 ()* @function_89000000, { 1, 0 }
}

define i32 @function_1b6b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b6b6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1b6b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b6b6 = add i32 %v0_1b6b6, 724837452
  %v2_1b6b6 = inttoptr i32 %v1_1b6b6 to i32*
  %v3_1b6b6 = load i32, i32* %v2_1b6b6, align 4
  %v4_1b6b6 = add i32 %v3_1b6b6, -1
  store i32 %v4_1b6b6, i32* %v2_1b6b6, align 4
  %v0_1b6bd = load i32, i32* %eax.global-to-local, align 8
  %v11_1b6bd = and i32 %v0_1b6bd, or (i32 zext (i8 ptrtoint (i32* @global_var_38.2432 to i8) to i32), i32 -256)
  %v1_1b6bf = icmp eq i32 %v11_1b6bd, 0
  %v2_1b6c1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1b6c1 = select i1 %v1_1b6bf, i32 %v2_1b6c1, i32 %v11_1b6bd
  store i32 %v3_1b6c1, i32* %eax.global-to-local, align 8
  %v2_1b6c4 = icmp slt i32 %v3_1b6c1, 0
  %v1_1b6c6 = icmp eq i1 %v2_1b6c4, false
  br i1 %v1_1b6c6, label %bb, label %dec_label_pc_1b6cc

bb:                                               ; preds = %dec_label_pc_1b6b6
  %v2_1b6c6 = call i32 @function_1b798()
  store i32 %v2_1b6c6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b6cc

dec_label_pc_1b6cc:                               ; preds = %bb, %dec_label_pc_1b6b6
  %v0_1b6cc = load i32, i32* @esi, align 4
  %v1_1b6cc = add i32 %v0_1b6cc, 12
  %v2_1b6cc = inttoptr i32 %v1_1b6cc to i32*
  %v3_1b6cc = load i32, i32* %v2_1b6cc, align 4
  store i32 %v3_1b6cc, i32* %eax.global-to-local, align 8
  %v1_1b6cf = icmp eq i32 %v3_1b6cc, 0
  br i1 %v1_1b6cf, label %bb106, label %dec_label_pc_1b6d7

bb106:                                            ; preds = %dec_label_pc_1b6cc
  %v1_1b6d1 = call i32 @function_1b7c0()
  store i32 %v1_1b6d1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b6d7

dec_label_pc_1b6d7:                               ; preds = %bb106, %dec_label_pc_1b6cc
  %v0_1b6df = load i32, i32* @ecx, align 4
  %v0_1b6eb = load i32, i32* @edi, align 4
  %v2_1b6ee = call i32 @unknown_36660(i32 %v0_1b6eb, i32 %v0_1b6df)
  store i32 %v2_1b6ee, i32* %eax.global-to-local, align 8
  %v0_1b6f6 = call i32 @function_1b61b()
  store i32 %v0_1b6f6, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b6f6

; uselistorder directives
  uselistorder i32 %v11_1b6bd, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32 or (i32 zext (i8 ptrtoint (i32* @global_var_38.2432 to i8) to i32), i32 -256), { 3, 4, 0, 1, 2 }
}

define i32 @function_1b700() local_unnamed_addr {
dec_label_pc_1b700:
  %v1_1b700 = load i32, i32* @edi, align 4
  %v2_1b700 = inttoptr i32 %v1_1b700 to i32*
  %v0_1b702 = call i32 @function_1b61b()
  ret i32 %v0_1b702
}

define i32 @function_1b708(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b708:
  %v0_1b708 = load i32, i32* @ebp, align 4
  %v1_1b708 = add i32 %v0_1b708, 20
  %v2_1b708 = inttoptr i32 %v1_1b708 to i32*
  %v3_1b708 = load i32, i32* %v2_1b708, align 4
  %v1_1b70b = icmp eq i32 %v3_1b708, 0
  br i1 %v1_1b70b, label %bb, label %dec_label_pc_1b70f

bb:                                               ; preds = %dec_label_pc_1b708
  %v1_1b70d = call i32 @function_1b748()
  %v0_1b70f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1b70f

dec_label_pc_1b70f:                               ; preds = %bb, %dec_label_pc_1b708
  %v0_1b70f = phi i32 [ %v0_1b70f.pre, %bb ], [ %v0_1b708, %dec_label_pc_1b708 ]
  %v1_1b70f = add i32 %v0_1b70f, 16
  %v2_1b70f = inttoptr i32 %v1_1b70f to i32*
  %v3_1b70f = load i32, i32* %v2_1b70f, align 4
  %v1_1b716 = add i32 %v3_1b70f, 16
  %v2_1b716 = inttoptr i32 %v1_1b716 to i32*
  %v3_1b716 = load i32, i32* %v2_1b716, align 4
  %v2_1b71d = load i32, i32* %arg1, align 4
  %v1_1b722 = add i32 %v2_1b71d, -12
  %v2_1b722 = inttoptr i32 %v1_1b722 to i32*
  %v3_1b722 = load i32, i32* %v2_1b722, align 4
  store i32 %v3_1b722, i32* @esi, align 4
  ret i32 %v3_1b716
}

define i32 @function_1b73f() local_unnamed_addr {
dec_label_pc_1b73f:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_1b73f = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1b73f = udiv i8 %v2_1b73f, 16
  %v4_1b73f = mul i8 %v2_1b73f, 16
  %v5_1b73f = or i8 %v3_1b73f, %v4_1b73f
  %v6_1b73f = load i32, i32* %edi.global-to-local, align 4
  %v7_1b73f = inttoptr i32 %v6_1b73f to i8*
  store i8 %v5_1b73f, i8* %v7_1b73f, align 1
  %v0_1b742 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b742
}

define i32 @function_1b748() local_unnamed_addr {
dec_label_pc_1b748:
  %stack_var_72 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_1b74c = ptrtoint i32* %stack_var_72 to i32
  %v2_1b75b = call i32 @unknown_36880(i32 %v2_1b74c, i32 %tmp6)
  %v1_1b767 = load i32, i32* @edi, align 4
  %v2_1b767 = inttoptr i32 %v1_1b767 to i32*
  %v0_1b769 = call i32 @function_1b61b()
  ret i32 %v0_1b769
}

define i32 @function_1b77c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b77c:
  %v0_1b788 = load i32, i32* @edi, align 4
  %v2_1b78b = call i32 @unknown_36660(i32 %v0_1b788, i32 0)
  %v0_1b793 = call i32 @function_1b61b()
  ret i32 %v0_1b793
}

define i32 @function_1b798() local_unnamed_addr {
dec_label_pc_1b798:
  %stack_var_72 = alloca i32, align 4
  %v2_1b79c = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_1b79c
}

define i32 @function_1b7a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b7a8:
  %v2_1b7b8 = call i32 @function_1b77c(i32 %arg1, i32 %arg2)
  ret i32 %v2_1b7b8
}

define i32 @function_1b7c0() local_unnamed_addr {
dec_label_pc_1b7c0:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_1b7c4 = load i32, i32* @esi, align 4
  %v2_1b7cc = call i32 @function_1b77c(i32 %v0_1b7c4, i32 %tmp2)
  ret i32 %v2_1b7cc
}

define i32 @function_1b7ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b7ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b7d6 = load i32, i32* %eax.global-to-local, align 8
  %v0_1b7e2 = load i32, i32* @edi, align 4
  %v2_1b7e5 = call i32 @unknown_36660(i32 %v0_1b7e2, i32 %v0_1b7d6)
  store i32 %v2_1b7e5, i32* %eax.global-to-local, align 8
  %v0_1b7ed = call i32 @function_1b61b()
  store i32 %v0_1b7ed, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b7ed

; uselistorder directives
  uselistorder i32 ()* @function_1b61b, { 4, 2, 0, 3, 1 }
  uselistorder i32 (i32, i32)* @unknown_36660, { 2, 1, 0 }
}

define i32 @function_1b7f2() local_unnamed_addr {
dec_label_pc_1b7f2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEixERS6_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1b800:
  store i32 %arg1, i32* @eax, align 8
  %v1_1b82b = add i32 %arg1, 8
  %v2_1b82b = inttoptr i32 %v1_1b82b to i32*
  %v3_1b82b = load i32, i32* %v2_1b82b, align 4
  %v1_1b835 = icmp eq i32 %v3_1b82b, 0
  br i1 %v1_1b835, label %bb, label %dec_label_pc_1b83d

bb:                                               ; preds = %dec_label_pc_1b800
  %v1_1b82e = add i32 %arg1, 4
  %tmp108 = ptrtoint i32* %arg2 to i32
  %v4_1b837 = call i32 @function_1ba09(i32 %arg1, i32 %v1_1b82e, i32 %tmp108)
  br label %dec_label_pc_1b83d

dec_label_pc_1b83d:                               ; preds = %bb, %dec_label_pc_1b800
  %v1_1b863 = add i32 %v3_1b82b, 16
  %v2_1b863 = inttoptr i32 %v1_1b863 to i32*
  %v3_1b863 = load i32, i32* %v2_1b863, align 4
  ret i32 %v3_1b863

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1b892(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b892:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v15_1b896 = icmp eq i32 %tmp5, %arg1
  br i1 %v15_1b896, label %bb, label %dec_label_pc_1b89c

bb:                                               ; preds = %dec_label_pc_1b892
  %v1_1b89a = call i32 @function_1b8cc()
  %v0_1b89c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1b89c

dec_label_pc_1b89c:                               ; preds = %bb, %dec_label_pc_1b892
  %v0_1b89c = phi i32 [ %v0_1b89c.pre, %bb ], [ %arg1, %dec_label_pc_1b892 ]
  %v1_1b89c = add i32 %v0_1b89c, 16
  %v2_1b89c = inttoptr i32 %v1_1b89c to i32*
  %v3_1b89c = load i32, i32* %v2_1b89c, align 4
  ret i32 %v3_1b89c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1b8cc() local_unnamed_addr {
dec_label_pc_1b8cc:
  %v4_1b8f0 = load i32, i32* @eax, align 8
  ret i32 %v4_1b8f0
}

define i32 @function_1b948() local_unnamed_addr {
dec_label_pc_1b948:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b9e6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b9e6:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b9e6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b9e6 = add i32 %v0_1b9e6, 1699488852
  %v2_1b9e6 = inttoptr i32 %v1_1b9e6 to i32*
  %v3_1b9e6 = load i32, i32* %v2_1b9e6, align 4
  %v4_1b9e6 = add i32 %v3_1b9e6, -1
  store i32 %v4_1b9e6, i32* %v2_1b9e6, align 4
  %v0_1b9ec = load i32, i32* %edx.global-to-local, align 4
  %v1_1b9ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b9ec = xor i32 %v1_1b9ec, %v0_1b9ec
  %v3_1b9ec = icmp eq i32 %v2_1b9ec, 0
  store i32 %v2_1b9ec, i32* %edx.global-to-local, align 4
  %v0_1b9f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b9f2 = add i32 %v0_1b9f2, 20
  store i32 %v1_1b9f2, i32* @eax, align 8
  %v1_1b9f5 = icmp eq i1 %v3_1b9ec, false
  br i1 %v1_1b9f5, label %bb, label %dec_label_pc_1b9f7

bb:                                               ; preds = %dec_label_pc_1b9e6
  %v2_1b9f5 = call i32 @function_1ba12()
  br label %dec_label_pc_1b9f7

dec_label_pc_1b9f7:                               ; preds = %bb, %dec_label_pc_1b9e6
  %v0_1b9fe = phi i32 [ %v2_1b9f5, %bb ], [ %v1_1b9f2, %dec_label_pc_1b9e6 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1b9fe
}

define i32 @function_1ba00() local_unnamed_addr {
dec_label_pc_1ba00:
  %v0_1ba04 = call i32 @function_1b948()
  ret i32 %v0_1ba04
}

define i32 @function_1ba09(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ba09:
  %v0_1ba0d = call i32 @function_1b8cc()
  ret i32 %v0_1ba0d
}

define i32 @function_1ba12() local_unnamed_addr {
dec_label_pc_1ba12:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ba1d() local_unnamed_addr {
dec_label_pc_1ba1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ba1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ba1d
}

define i32 @function_1ba1e() local_unnamed_addr {
dec_label_pc_1ba1e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ba26() local_unnamed_addr {
dec_label_pc_1ba26:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ba2f() local_unnamed_addr {
dec_label_pc_1ba2f:
  %v0_1ba2f = call i32 @function_1c8aba34()
  ret i32 %v0_1ba2f
}

define i32 @function_1ba39() local_unnamed_addr {
dec_label_pc_1ba39:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ba39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ba39 = add i32 %v0_1ba39, -1993071532
  %v2_1ba39 = inttoptr i32 %v1_1ba39 to i32*
  %v3_1ba39 = load i32, i32* %v2_1ba39, align 4
  %v4_1ba39 = sub i32 %v3_1ba39, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1ba39, i32* %v2_1ba39, align 4
  %v0_1ba3f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ba3f
}

define i32 @function_1ba4c() local_unnamed_addr {
dec_label_pc_1ba4c:
  %v0_1ba4c = call i32 @function_1ba1e()
  ret i32 %v0_1ba4c
}

define i32 @function_1ba4e() local_unnamed_addr {
dec_label_pc_1ba4e:
  %stack_var_52 = alloca i32, align 4
  %v2_1ba50 = ptrtoint i32* %stack_var_52 to i32
  store i32 %v2_1ba50, i32* @eax, align 8
  %v1_1ba57 = call i32 @function_2a430(i32 %v2_1ba50)
  store i32 %v1_1ba57, i32* @eax, align 8
  %v0_1ba5c = call i32 @function_1ba1e()
  ret i32 %v0_1ba5c

; uselistorder directives
  uselistorder i32 ()* @function_1ba1e, { 1, 0 }
}

define i32 @function_1ba5e() local_unnamed_addr {
dec_label_pc_1ba5e:
  %v0_1ba60 = call i32 @function_1ba26()
  ret i32 %v0_1ba60
}

define i32 @_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS4_ESC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ba70:
  store i32 %arg1, i32* @edi, align 4
  %v0_1ba7f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg3, i32* @ebp, align 4
  %v1_1ba90 = add i32 %arg1, 12
  %v2_1ba90 = inttoptr i32 %v1_1ba90 to i32*
  %v3_1ba90 = load i32, i32* %v2_1ba90, align 4
  %v15_1ba90 = icmp eq i32 %v3_1ba90, %arg2
  br i1 %v15_1ba90, label %bb, label %dec_label_pc_1ba9b

bb:                                               ; preds = %dec_label_pc_1ba70
  %v2_1ba95 = call i32 @function_1bb18(i32 %v0_1ba7f)
  %v0_1ba9b.pre = load i32, i32* @edi, align 4
  %v0_1ba9e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1ba9b

dec_label_pc_1ba9b:                               ; preds = %bb, %dec_label_pc_1ba70
  %v3_1baaa = phi i32 [ %v2_1ba95, %bb ], [ %arg2, %dec_label_pc_1ba70 ]
  %v0_1ba9e = phi i32 [ %v0_1ba9e.pre, %bb ], [ %arg3, %dec_label_pc_1ba70 ]
  %v0_1ba9b = phi i32 [ %v0_1ba9b.pre, %bb ], [ %arg1, %dec_label_pc_1ba70 ]
  %v12_1ba9e = icmp eq i32 %v0_1ba9e, %v3_1baaa
  %v1_1baa4 = icmp eq i1 %v12_1ba9e, false
  br i1 %v1_1baa4, label %dec_label_pc_1baaa, label %dec_label_pc_1baa6

dec_label_pc_1baa6:                               ; preds = %dec_label_pc_1ba9b
  %v1_1ba9b = add i32 %v0_1ba9b, 4
  %v1_1baa6 = call i32 @function_1bafe(i32 %v1_1ba9b)
  ret i32 %v1_1baa6

dec_label_pc_1baaa:                               ; preds = %dec_label_pc_1ba9b
  ret i32 %v3_1baaa

; uselistorder directives
  uselistorder i32 %v3_1baaa, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1bac5() local_unnamed_addr {
dec_label_pc_1bac5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bac5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bac5
}

define i32 @function_1bad1() local_unnamed_addr {
dec_label_pc_1bad1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bad1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bad1
}

define i32 @function_1bafe(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bafe:
  %v1_1bb02 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bb02 = xor i32 %v1_1bb02, %arg1
  %v3_1bb02 = icmp eq i32 %v2_1bb02, 0
  store i32 %v2_1bb02, i32* @eax, align 8
  %v1_1bb09 = icmp eq i1 %v3_1bb02, false
  br i1 %v1_1bb09, label %bb, label %dec_label_pc_1bb0b

bb:                                               ; preds = %dec_label_pc_1bafe
  %v2_1bb09 = call i32 @function_1bb50()
  br label %dec_label_pc_1bb0b

dec_label_pc_1bb0b:                               ; preds = %bb, %dec_label_pc_1bafe
  %v0_1bb12 = phi i32 [ %v2_1bb09, %bb ], [ %v2_1bb02, %dec_label_pc_1bafe ]
  ret i32 %v0_1bb12
}

define i32 @function_1bb18(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bb18:
  %edx.global-to-local = alloca i32, align 4
  %v0_1bb18 = load i32, i32* @edi, align 4
  %v1_1bb18 = add i32 %v0_1bb18, 4
  store i32 %v1_1bb18, i32* %edx.global-to-local, align 4
  %v1_1bb27 = add i32 %v0_1bb18, 8
  %v2_1bb27 = inttoptr i32 %v1_1bb27 to i32*
  %v3_1bb27 = load i32, i32* %v2_1bb27, align 4
  store i32 %v3_1bb27, i32* @eax, align 8
  %v2_1bb31 = call i32 @_ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE(i32 %v0_1bb18, i32 %v3_1bb27)
  store i32 %v1_1bb18, i32* %edx.global-to-local, align 4
  %v0_1bb3a = load i32, i32* @edi, align 4
  %v1_1bb3a = add i32 %v0_1bb3a, 8
  %v2_1bb3a = inttoptr i32 %v1_1bb3a to i32*
  store i32 0, i32* %v2_1bb3a, align 4
  %v0_1bb41 = load i32, i32* @edi, align 4
  %v1_1bb41 = add i32 %v0_1bb41, 20
  %v2_1bb41 = inttoptr i32 %v1_1bb41 to i32*
  store i32 0, i32* %v2_1bb41, align 4
  %v0_1bb48 = load i32, i32* %edx.global-to-local, align 4
  %v1_1bb48 = load i32, i32* @edi, align 4
  %v2_1bb48 = add i32 %v1_1bb48, 12
  %v3_1bb48 = inttoptr i32 %v2_1bb48 to i32*
  store i32 %v0_1bb48, i32* %v3_1bb48, align 4
  %v0_1bb4b = load i32, i32* %edx.global-to-local, align 4
  %v1_1bb4b = load i32, i32* @edi, align 4
  %v2_1bb4b = add i32 %v1_1bb4b, 16
  %v3_1bb4b = inttoptr i32 %v2_1bb4b to i32*
  store i32 %v0_1bb4b, i32* %v3_1bb4b, align 4
  %v1_1bb4e = call i32 @function_1bafe(i32 %v3_1bb27)
  ret i32 %v1_1bb4e

; uselistorder directives
  uselistorder i32 %v0_1bb18, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1bafe, { 1, 0 }
}

define i32 @function_1bb50() local_unnamed_addr {
dec_label_pc_1bb50:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISt4pairIx4CInvESaIS2_EE17_M_reallocate_mapEjb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bb60:
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 %tmp110, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_1bb84 = trunc i32 %arg3 to i8
  %v1_1bb88 = add i32 %tmp110, 36
  %v2_1bb88 = inttoptr i32 %v1_1bb88 to i32*
  %v3_1bb88 = load i32, i32* %v2_1bb88, align 4
  %v1_1bb8b = add i32 %tmp110, 20
  %v2_1bb8b = inttoptr i32 %v1_1bb8b to i32*
  %v3_1bb8b = load i32, i32* %v2_1bb8b, align 4
  store i32 %v3_1bb8b, i32* @eax, align 8
  %v1_1bb96 = add i32 %tmp110, 4
  %v2_1bb96 = inttoptr i32 %v1_1bb96 to i32*
  %v3_1bb96 = load i32, i32* %v2_1bb96, align 4
  store i32 %v3_1bb96, i32* @ebp, align 4
  %v2_1bb9b = sub i32 %v3_1bb88, %v3_1bb8b
  %v2_1bb9d = ashr i32 %v2_1bb9b, ptrtoint (i64* @global_var_2.2539 to i32)
  %v1_1bba0 = add i32 %v2_1bb9d, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1bba0, i32* @edi, align 4
  %v3_1bba3 = add i32 %v1_1bba0, %arg2
  store i32 %v3_1bba3, i32* %edx.global-to-local, align 4
  %v3_1bbaa = mul i32 %v3_1bba3, 2
  %tmp119 = icmp ugt i32 %v3_1bb96, %v3_1bbaa
  br i1 %tmp119, label %dec_label_pc_1bbb1, label %bb

bb:                                               ; preds = %dec_label_pc_1bb60
  %v4_1bbaf = call i32 @function_1bc00(i32 %v3_1bb88)
  store i32 %v4_1bbaf, i32* @eax, align 8
  %v0_1bbb1.pre = load i32, i32* @ebp, align 4
  %v1_1bbb1.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1bbb9.pre = load i32, i32* @esi, align 4
  %v1_1bbce.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1bbb1

dec_label_pc_1bbb1:                               ; preds = %dec_label_pc_1bb60, %bb
  %v1_1bbce = phi i32 [ %v1_1bbce.pre, %bb ], [ %tmp110, %dec_label_pc_1bb60 ]
  %v1_1bbcc = phi i32 [ %v4_1bbaf, %bb ], [ %v3_1bb8b, %dec_label_pc_1bb60 ]
  %v0_1bbb9 = phi i32 [ %v0_1bbb9.pre, %bb ], [ %arg2, %dec_label_pc_1bb60 ]
  %v1_1bbb1 = phi i32 [ %v1_1bbb1.pre, %bb ], [ %v3_1bba3, %dec_label_pc_1bb60 ]
  %v0_1bbb1 = phi i32 [ %v0_1bbb1.pre, %bb ], [ %v3_1bb96, %dec_label_pc_1bb60 ]
  %v2_1bbb1 = sub i32 %v0_1bbb1, %v1_1bbb1
  %v2_1bbb9 = shl i32 %v0_1bbb9, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_1bbbc = udiv i32 %v2_1bbb1, 2
  %v10_1bbbe = icmp eq i8 %v1_1bb84, 0
  %v1_1bbc3 = icmp eq i1 %v10_1bbbe, false
  %v4_1bbc3 = select i1 %v1_1bbc3, i32 %v2_1bbb9, i32 0
  store i32 %v4_1bbc3, i32* %edx.global-to-local, align 4
  %v1_1bbc6 = add i32 %v3_1bb88, 4
  %v2_1bbc9 = mul i32 %v2_1bbbc, 4
  %v3_1bbc9 = add i32 %v2_1bbc9, %v4_1bbc3
  %v2_1bbcc = sub i32 %v1_1bbc6, %v1_1bbcc
  %v2_1bbce = inttoptr i32 %v1_1bbce to i32*
  %v3_1bbce = load i32, i32* %v2_1bbce, align 4
  %v4_1bbce = add i32 %v3_1bbce, %v3_1bbc9
  store i32 %v4_1bbce, i32* @esi, align 4
  %v2_1bbd0 = sdiv i32 %v2_1bbcc, 4
  %v2_1bbcc.off = add i32 %v2_1bbcc, 3
  %tmp120 = icmp ult i32 %v2_1bbcc.off, 7
  store i32 %v2_1bbd0, i32* @ecx, align 4
  %tmp121 = icmp ugt i32 %v1_1bbcc, %v4_1bbce
  br i1 %tmp121, label %bb114, label %dec_label_pc_1bbdb

bb114:                                            ; preds = %dec_label_pc_1bbb1
  %v4_1bbd5 = call i32 @function_1bcd0()
  br label %dec_label_pc_1bbdb

dec_label_pc_1bbdb:                               ; preds = %dec_label_pc_1bbb1, %bb114
  br i1 %tmp120, label %bb115, label %dec_label_pc_1bbe3

bb115:                                            ; preds = %dec_label_pc_1bbdb
  %v1_1bbdd = call i32 @function_1bc84()
  br label %dec_label_pc_1bbe3

dec_label_pc_1bbe3:                               ; preds = %bb115, %dec_label_pc_1bbdb
  %v0_1bbea = load i32, i32* @esi, align 4
  %v1_1bbea = load i32, i32* @edi, align 4
  %v2_1bbea = mul i32 %v1_1bbea, 4
  %v3_1bbea = add i32 %v2_1bbea, %v0_1bbea
  %tmp122 = mul i32 %v2_1bbd0, -4
  %v2_1bbed = add i32 %v3_1bbea, %tmp122
  ret i32 %v2_1bbed

; uselistorder directives
  uselistorder i32 %v3_1bba3, { 1, 0, 2 }
  uselistorder i32 %v3_1bb96, { 1, 0, 2 }
  uselistorder i32 %tmp110, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1bbdb, { 1, 0 }
  uselistorder label %dec_label_pc_1bbb1, { 1, 0 }
}

define i32 @function_1bbfb() local_unnamed_addr {
dec_label_pc_1bbfb:
  %v0_1bbfb = call i32 @function_1bc84()
  ret i32 %v0_1bbfb
}

define i32 @function_1bc00(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bc00:
  %of.global-to-local = alloca i1, align 1
  %v0_1bc00 = load i32, i32* @esi, align 4
  %v1_1bc00 = load i32, i32* @ebp, align 4
  %v7_1bc00 = icmp ult i32 %v0_1bc00, %v1_1bc00
  %v1_1bc04 = icmp eq i1 %v7_1bc00, false
  %v4_1bc04 = select i1 %v1_1bc04, i32 %v0_1bc00, i32 %v1_1bc00
  store i32 %v4_1bc04, i32* @eax, align 8
  %v3_1bc07 = add i32 %v1_1bc00, ptrtoint (i64* @global_var_2.2539 to i32)
  %v4_1bc07 = add i32 %v3_1bc07, %v4_1bc04
  store i32 %v4_1bc07, i32* @ebp, align 4
  %tmp5 = sub i32 1073741822, %v4_1bc07
  %v8_1bc0b = and i32 %tmp5, %v4_1bc07
  %v9_1bc0b = icmp slt i32 %v8_1bc0b, 0
  store i1 %v9_1bc0b, i1* %of.global-to-local, align 1
  %tmp7 = icmp ult i32 %v4_1bc07, 1073741824
  br i1 %tmp7, label %dec_label_pc_1bc17, label %bb

bb:                                               ; preds = %dec_label_pc_1bc00
  %v4_1bc11 = call i32 @function_1bce9()
  %v0_1bc17.pre = load i32, i32* @ebp, align 4
  %v0_1bc22.pre = load i32, i32* @esi, align 4
  %v1_1bc22.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1bc17

dec_label_pc_1bc17:                               ; preds = %dec_label_pc_1bc00, %bb
  %v1_1bc22 = phi i1 [ %v9_1bc0b, %dec_label_pc_1bc00 ], [ %v1_1bc22.pre, %bb ]
  %v0_1bc22 = phi i32 [ %v0_1bc00, %dec_label_pc_1bc00 ], [ %v0_1bc22.pre, %bb ]
  %v0_1bc17 = phi i32 [ %v4_1bc07, %dec_label_pc_1bc00 ], [ %v0_1bc17.pre, %bb ]
  %v1_1bc17 = mul i32 %v0_1bc17, 4
  %v2_1bc22 = shl i32 %v0_1bc22, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_1bc22, i32* @esi, align 4
  store i1 %v1_1bc22, i1* %of.global-to-local, align 1
  ret i32 %v1_1bc17

; uselistorder directives
  uselistorder i32 %v4_1bc07, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1bc17, { 1, 0 }
}

define i32 @function_1bc84() local_unnamed_addr {
dec_label_pc_1bc84:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1bc84 = load i32, i32* @esi, align 4
  %v1_1bc84 = load i32, i32* @ebx, align 4
  %v2_1bc84 = add i32 %v1_1bc84, 20
  %v3_1bc84 = inttoptr i32 %v2_1bc84 to i32*
  store i32 %v0_1bc84, i32* %v3_1bc84, align 4
  %v2_1bc87 = load i32, i32* @esi, align 4
  store i32 %v2_1bc87, i32* %eax.global-to-local, align 8
  %v1_1bc89 = load i32, i32* @ebx, align 4
  %v2_1bc89 = add i32 %v1_1bc89, 12
  %v3_1bc89 = inttoptr i32 %v2_1bc89 to i32*
  store i32 %v2_1bc87, i32* %v3_1bc89, align 4
  %v0_1bc8c = load i32, i32* %eax.global-to-local, align 8
  %v1_1bc8c = add i32 %v0_1bc8c, 484
  %v1_1bc91 = load i32, i32* @ebx, align 4
  %v2_1bc91 = add i32 %v1_1bc91, 16
  %v3_1bc91 = inttoptr i32 %v2_1bc91 to i32*
  store i32 %v1_1bc8c, i32* %v3_1bc91, align 4
  %v0_1bc94 = load i32, i32* @esi, align 4
  %v1_1bc94 = load i32, i32* @edi, align 4
  %v2_1bc94 = mul i32 %v1_1bc94, 4
  %v3_1bc94 = add i32 %v0_1bc94, -4
  %v4_1bc94 = add i32 %v3_1bc94, %v2_1bc94
  store i32 %v4_1bc94, i32* %eax.global-to-local, align 8
  %v1_1bc98 = load i32, i32* @ebx, align 4
  %v2_1bc98 = add i32 %v1_1bc98, 36
  %v3_1bc98 = inttoptr i32 %v2_1bc98 to i32*
  store i32 %v4_1bc94, i32* %v3_1bc98, align 4
  %v0_1bc9b = load i32, i32* %eax.global-to-local, align 8
  %v1_1bc9b = inttoptr i32 %v0_1bc9b to i32*
  %v2_1bc9b = load i32, i32* %v1_1bc9b, align 4
  store i32 %v2_1bc9b, i32* %eax.global-to-local, align 8
  %v1_1bc9d = load i32, i32* @ebx, align 4
  %v2_1bc9d = add i32 %v1_1bc9d, 28
  %v3_1bc9d = inttoptr i32 %v2_1bc9d to i32*
  store i32 %v2_1bc9b, i32* %v3_1bc9d, align 4
  %v0_1bca0 = load i32, i32* %eax.global-to-local, align 8
  %v1_1bca0 = add i32 %v0_1bca0, 484
  store i32 %v1_1bca0, i32* @eax, align 8
  %v1_1bca9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bca9 = xor i32 %v1_1bca9, %tmp6
  %v3_1bca9 = icmp eq i32 %v2_1bca9, 0
  store i32 %v2_1bca9, i32* @ecx, align 4
  %v1_1bcb0 = load i32, i32* @ebx, align 4
  %v2_1bcb0 = add i32 %v1_1bcb0, 32
  %v3_1bcb0 = inttoptr i32 %v2_1bcb0 to i32*
  store i32 %v1_1bca0, i32* %v3_1bcb0, align 4
  %v1_1bcb3 = icmp eq i1 %v3_1bca9, false
  br i1 %v1_1bcb3, label %bb, label %dec_label_pc_1bc84.dec_label_pc_1bcb5_crit_edge

dec_label_pc_1bc84.dec_label_pc_1bcb5_crit_edge:  ; preds = %dec_label_pc_1bc84
  %v0_1bcc8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1bcb5

bb:                                               ; preds = %dec_label_pc_1bc84
  %v2_1bcb3 = call i32 @function_1bcee()
  store i32 %v2_1bcb3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1bcb5

dec_label_pc_1bcb5:                               ; preds = %dec_label_pc_1bc84.dec_label_pc_1bcb5_crit_edge, %bb
  %v0_1bcc8 = phi i32 [ %v0_1bcc8.pre, %dec_label_pc_1bc84.dec_label_pc_1bcb5_crit_edge ], [ %v2_1bcb3, %bb ]
  %v0_1bcc5 = load i32, i32* @esp, align 4
  %v1_1bcc5 = add i32 %v0_1bcc5, 76
  %tmp7 = xor i32 %v0_1bcc5, -2147483648
  %v8_1bcc5 = and i32 %v1_1bcc5, %tmp7
  %v9_1bcc5 = icmp slt i32 %v8_1bcc5, 0
  store i1 %v9_1bcc5, i1* @of, align 1
  ret i32 %v0_1bcc8

; uselistorder directives
  uselistorder label %dec_label_pc_1bcb5, { 1, 0 }
}

define i32 @function_1bcd0() local_unnamed_addr {
dec_label_pc_1bcd0:
  %v0_1bcd0 = load i32, i32* @ecx, align 4
  %v1_1bcd0 = icmp eq i32 %v0_1bcd0, 0
  br i1 %v1_1bcd0, label %bb, label %dec_label_pc_1bcd0.dec_label_pc_1bcd4_crit_edge

dec_label_pc_1bcd0.dec_label_pc_1bcd4_crit_edge:  ; preds = %dec_label_pc_1bcd0
  %v3_1bcdf.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1bcd4

bb:                                               ; preds = %dec_label_pc_1bcd0
  %v1_1bcd2 = call i32 @function_1bc84()
  br label %dec_label_pc_1bcd4

dec_label_pc_1bcd4:                               ; preds = %dec_label_pc_1bcd0.dec_label_pc_1bcd4_crit_edge, %bb
  %v3_1bcdf = phi i32 [ %v1_1bcd2, %bb ], [ %v3_1bcdf.pre, %dec_label_pc_1bcd0.dec_label_pc_1bcd4_crit_edge ]
  ret i32 %v3_1bcdf

; uselistorder directives
  uselistorder label %dec_label_pc_1bcd4, { 1, 0 }
}

define i32 @function_1bce7() local_unnamed_addr {
dec_label_pc_1bce7:
  %v0_1bce7 = call i32 @function_1bc84()
  ret i32 %v0_1bce7

; uselistorder directives
  uselistorder i32 ()* @function_1bc84, { 3, 1, 2, 0 }
}

define i32 @function_1bce9() local_unnamed_addr {
dec_label_pc_1bce9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1bcee() local_unnamed_addr {
dec_label_pc_1bcee:
  %v0_1bcee = load i32, i32* @eax, align 8
  ret i32 %v0_1bcee
}

define i32 @_ZNSt5dequeISt4pairIx4CInvESaIS2_EE16_M_push_back_auxERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bd00:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v0_1bd00 = load i32, i32* @edi, align 4
  %v0_1bd01 = load i32, i32* @esi, align 4
  %v0_1bd02 = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v1_1bd1a = add i32 %tmp4, 36
  %v2_1bd1a = inttoptr i32 %v1_1bd1a to i32*
  %v3_1bd1a = load i32, i32* %v2_1bd1a, align 4
  %v3_1bd1f = load i32, i32* %arg1, align 4
  %v4_1bd1f = sub i32 %v3_1bd1a, %v3_1bd1f
  %v2_1bd21 = sdiv i32 %v4_1bd1f, 4
  %v2_1bd26 = add i32 %tmp4, 4
  %v3_1bd26 = inttoptr i32 %v2_1bd26 to i32*
  %v4_1bd26 = load i32, i32* %v3_1bd26, align 4
  %v5_1bd26 = sub i32 %v4_1bd26, %v2_1bd21
  %tmp10 = or i32 %v5_1bd26, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  br i1 %tmp11, label %bb, label %dec_label_pc_1bd32

bb:                                               ; preds = %dec_label_pc_1bd00
  %v0_1bd0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v7_1bd2c = call i32 @function_1bdb8(i32 %v0_1bd0a, i32 %v0_1bd02, i32 %v0_1bd01, i32 %v0_1bd00)
  br label %dec_label_pc_1bd32

dec_label_pc_1bd32:                               ; preds = %bb, %dec_label_pc_1bd00
  %v2_1bd32 = phi i32 [ %v7_1bd2c, %bb ], [ %v5_1bd26, %dec_label_pc_1bd00 ]
  ret i32 %v2_1bd32

; uselistorder directives
  uselistorder i32 %v5_1bd26, { 1, 0 }
}

define i32 @function_1bd3d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1bd3d:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1bd3d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1bd3d = add i32 %v0_1bd3d, 1183515719
  %v2_1bd3d = inttoptr i32 %v1_1bd3d to i32*
  %v3_1bd3d = load i32, i32* %v2_1bd3d, align 4
  %v4_1bd3d = add i32 %v3_1bd3d, -1
  store i32 %v4_1bd3d, i32* %v2_1bd3d, align 4
  %v0_1bd43 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1bd43 = add i32 %v0_1bd43, -1958710080
  %v2_1bd43 = inttoptr i32 %v1_1bd43 to i8*
  %v3_1bd43 = load i8, i8* %v2_1bd43, align 1
  %v4_1bd43 = load i32, i32* %eax.global-to-local, align 8
  %v5_1bd43 = trunc i32 %v4_1bd43 to i8
  %v6_1bd43 = load i1, i1* %cf.global-to-local, align 1
  %v7_1bd43 = zext i1 %v6_1bd43 to i8
  %v8_1bd43 = sub i8 %v3_1bd43, %v5_1bd43
  %v9_1bd43 = add i8 %v8_1bd43, %v7_1bd43
  %v19_1bd43 = sub i8 %v8_1bd43, %v7_1bd43
  %v20_1bd43 = icmp ult i8 %v3_1bd43, %v19_1bd43
  %v21_1bd43 = icmp ne i8 %v5_1bd43, -1
  %v22_1bd43 = or i1 %v21_1bd43, %v20_1bd43
  %v23_1bd43 = icmp ult i8 %v3_1bd43, %v5_1bd43
  %v24_1bd43 = select i1 %v6_1bd43, i1 %v22_1bd43, i1 %v23_1bd43
  store i1 %v24_1bd43, i1* %cf.global-to-local, align 1
  store i8 %v9_1bd43, i8* %v2_1bd43, align 1
  %v0_1bd49 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1bd49 = add i32 %v0_1bd49, 72583952
  %v3_1bd49 = inttoptr i32 %v2_1bd49 to i32*
  %v4_1bd49 = load i32, i32* %v3_1bd49, align 4
  %v5_1bd49 = load i1, i1* %cf.global-to-local, align 1
  %v6_1bd49 = zext i1 %v5_1bd49 to i32
  %v7_1bd49 = add i32 %v4_1bd49, %v0_1bd49
  %v8_1bd49 = add i32 %v6_1bd49, %v7_1bd49
  %v27_1bd49 = icmp ule i32 %v8_1bd49, %v0_1bd49
  %v28_1bd49 = icmp ult i32 %v7_1bd49, %v0_1bd49
  %v29_1bd49 = select i1 %v5_1bd49, i1 %v27_1bd49, i1 %v28_1bd49
  store i1 %v29_1bd49, i1* %cf.global-to-local, align 1
  store i32 %v8_1bd49, i32* %ecx.global-to-local, align 4
  %v0_1bd4f = load i32, i32* %edx.global-to-local, align 4
  %v1_1bd4f = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd4f = add i32 %v1_1bd4f, 4
  %v3_1bd4f = inttoptr i32 %v2_1bd4f to i32*
  store i32 %v0_1bd4f, i32* %v3_1bd4f, align 4
  %v0_1bd52 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd52 = add i32 %v0_1bd52, 8
  %v2_1bd52 = inttoptr i32 %v1_1bd52 to i32*
  %v3_1bd52 = load i32, i32* %v2_1bd52, align 4
  store i32 %v3_1bd52, i32* %edx.global-to-local, align 4
  %v1_1bd55 = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd55 = add i32 %v1_1bd55, 8
  %v3_1bd55 = inttoptr i32 %v2_1bd55 to i32*
  store i32 %v3_1bd52, i32* %v3_1bd55, align 4
  %v0_1bd58 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd58 = add i32 %v0_1bd58, 12
  %v2_1bd58 = inttoptr i32 %v1_1bd58 to i32*
  %v3_1bd58 = load i32, i32* %v2_1bd58, align 4
  store i32 %v3_1bd58, i32* %edx.global-to-local, align 4
  %v1_1bd5b = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd5b = add i32 %v1_1bd5b, 12
  %v3_1bd5b = inttoptr i32 %v2_1bd5b to i32*
  store i32 %v3_1bd58, i32* %v3_1bd5b, align 4
  %v0_1bd5e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd5e = add i32 %v0_1bd5e, 16
  %v2_1bd5e = inttoptr i32 %v1_1bd5e to i32*
  %v3_1bd5e = load i32, i32* %v2_1bd5e, align 4
  store i32 %v3_1bd5e, i32* %edx.global-to-local, align 4
  %v1_1bd61 = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd61 = add i32 %v1_1bd61, 16
  %v3_1bd61 = inttoptr i32 %v2_1bd61 to i32*
  store i32 %v3_1bd5e, i32* %v3_1bd61, align 4
  %v0_1bd64 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd64 = add i32 %v0_1bd64, 20
  %v2_1bd64 = inttoptr i32 %v1_1bd64 to i32*
  %v3_1bd64 = load i32, i32* %v2_1bd64, align 4
  store i32 %v3_1bd64, i32* %edx.global-to-local, align 4
  %v1_1bd67 = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd67 = add i32 %v1_1bd67, 20
  %v3_1bd67 = inttoptr i32 %v2_1bd67 to i32*
  store i32 %v3_1bd64, i32* %v3_1bd67, align 4
  %v0_1bd6a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd6a = add i32 %v0_1bd6a, 24
  %v2_1bd6a = inttoptr i32 %v1_1bd6a to i32*
  %v3_1bd6a = load i32, i32* %v2_1bd6a, align 4
  store i32 %v3_1bd6a, i32* %edx.global-to-local, align 4
  %v1_1bd6d = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd6d = add i32 %v1_1bd6d, 24
  %v3_1bd6d = inttoptr i32 %v2_1bd6d to i32*
  store i32 %v3_1bd6a, i32* %v3_1bd6d, align 4
  %v0_1bd70 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd70 = add i32 %v0_1bd70, 28
  %v2_1bd70 = inttoptr i32 %v1_1bd70 to i32*
  %v3_1bd70 = load i32, i32* %v2_1bd70, align 4
  store i32 %v3_1bd70, i32* %edx.global-to-local, align 4
  %v1_1bd73 = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd73 = add i32 %v1_1bd73, 28
  %v3_1bd73 = inttoptr i32 %v2_1bd73 to i32*
  store i32 %v3_1bd70, i32* %v3_1bd73, align 4
  %v0_1bd76 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd76 = add i32 %v0_1bd76, 32
  %v2_1bd76 = inttoptr i32 %v1_1bd76 to i32*
  %v3_1bd76 = load i32, i32* %v2_1bd76, align 4
  store i32 %v3_1bd76, i32* %edx.global-to-local, align 4
  %v1_1bd79 = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd79 = add i32 %v1_1bd79, 32
  %v3_1bd79 = inttoptr i32 %v2_1bd79 to i32*
  store i32 %v3_1bd76, i32* %v3_1bd79, align 4
  %v0_1bd7c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd7c = add i32 %v0_1bd7c, 36
  %v2_1bd7c = inttoptr i32 %v1_1bd7c to i32*
  %v3_1bd7c = load i32, i32* %v2_1bd7c, align 4
  store i32 %v3_1bd7c, i32* %edx.global-to-local, align 4
  %v1_1bd7f = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd7f = add i32 %v1_1bd7f, 36
  %v3_1bd7f = inttoptr i32 %v2_1bd7f to i32*
  store i32 %v3_1bd7c, i32* %v3_1bd7f, align 4
  %v0_1bd82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd82 = add i32 %v0_1bd82, 40
  %v2_1bd82 = inttoptr i32 %v1_1bd82 to i32*
  %v3_1bd82 = load i32, i32* %v2_1bd82, align 4
  store i32 %v3_1bd82, i32* %edx.global-to-local, align 4
  %v1_1bd85 = load i32, i32* %eax.global-to-local, align 8
  %v2_1bd85 = add i32 %v1_1bd85, 40
  %v3_1bd85 = inttoptr i32 %v2_1bd85 to i32*
  store i32 %v3_1bd82, i32* %v3_1bd85, align 4
  %v0_1bd88 = load i32, i32* %esi.global-to-local, align 4
  %v1_1bd88 = add i32 %v0_1bd88, 36
  %v2_1bd88 = inttoptr i32 %v1_1bd88 to i32*
  %v3_1bd88 = load i32, i32* %v2_1bd88, align 4
  store i32 %v3_1bd88, i32* %eax.global-to-local, align 8
  %v1_1bd8b = add i32 %v3_1bd88, 4
  store i32 %v1_1bd8b, i32* %edx.global-to-local, align 4
  store i32 %v1_1bd8b, i32* %v2_1bd88, align 4
  %v0_1bd91 = load i32, i32* %eax.global-to-local, align 8
  %v1_1bd91 = add i32 %v0_1bd91, 4
  %v2_1bd91 = inttoptr i32 %v1_1bd91 to i32*
  %v3_1bd91 = load i32, i32* %v2_1bd91, align 4
  store i32 %v3_1bd91, i32* %eax.global-to-local, align 8
  %v1_1bd94 = add i32 %v3_1bd91, 484
  store i32 %v1_1bd94, i32* %edx.global-to-local, align 4
  %v1_1bd9a = load i32, i32* %esi.global-to-local, align 4
  %v2_1bd9a = add i32 %v1_1bd9a, 28
  %v3_1bd9a = inttoptr i32 %v2_1bd9a to i32*
  store i32 %v3_1bd91, i32* %v3_1bd9a, align 4
  %v0_1bd9d = load i32, i32* %eax.global-to-local, align 8
  %v1_1bd9d = load i32, i32* %esi.global-to-local, align 4
  %v2_1bd9d = add i32 %v1_1bd9d, 24
  %v3_1bd9d = inttoptr i32 %v2_1bd9d to i32*
  store i32 %v0_1bd9d, i32* %v3_1bd9d, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1bda4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bda4 = xor i32 %v1_1bda4, %arg1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1bda4 = icmp eq i32 %v2_1bda4, 0
  store i32 %v2_1bda4, i32* @eax, align 8
  %v0_1bdab = load i32, i32* %edx.global-to-local, align 4
  %v1_1bdab = load i32, i32* %esi.global-to-local, align 4
  %v2_1bdab = add i32 %v1_1bdab, 32
  %v3_1bdab = inttoptr i32 %v2_1bdab to i32*
  store i32 %v0_1bdab, i32* %v3_1bdab, align 4
  %v1_1bdae = icmp eq i1 %v3_1bda4, false
  br i1 %v1_1bdae, label %bb, label %dec_label_pc_1bd3d.dec_label_pc_1bdb0_crit_edge

dec_label_pc_1bd3d.dec_label_pc_1bdb0_crit_edge:  ; preds = %dec_label_pc_1bd3d
  %v0_1bdb6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1bdb0

bb:                                               ; preds = %dec_label_pc_1bd3d
  %v2_1bdae = call i32 @function_1bdd8()
  store i32 %v2_1bdae, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1bdb0

dec_label_pc_1bdb0:                               ; preds = %dec_label_pc_1bd3d.dec_label_pc_1bdb0_crit_edge, %bb
  %v0_1bdb6 = phi i32 [ %v0_1bdb6.pre, %dec_label_pc_1bd3d.dec_label_pc_1bdb0_crit_edge ], [ %v2_1bdae, %bb ]
  %v0_1bdb0 = load i32, i32* @esp, align 4
  %v4_1bdb0 = icmp ugt i32 %v0_1bdb0, -33
  store i1 %v4_1bdb0, i1* %cf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v0_1bdb6

; uselistorder directives
  uselistorder i32 %v8_1bd49, { 1, 0 }
  uselistorder i32 %v7_1bd49, { 1, 0 }
  uselistorder i32 %v0_1bd49, { 2, 3, 0, 1 }
  uselistorder i8 %v5_1bd43, { 1, 0, 2 }
  uselistorder i32 484, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_1bdb0, { 1, 0 }
}

define i32 @function_1bdb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1bdb8:
  %v0_1bdc8 = load i32, i32* @esi, align 4
  %v4_1bdcb = call i32 @unknown_37860(i32 %v0_1bdc8, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), i32 0)
  ret i32 %v4_1bdcb
}

define i32 @function_1bdd8() local_unnamed_addr {
dec_label_pc_1bdd8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_24expired_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bde0:
  store i32 %arg2, i32* @eax, align 8
  %tmp113 = icmp ult i32 %arg2, 20
  br i1 %tmp113, label %bb, label %dec_label_pc_1be02

bb:                                               ; preds = %dec_label_pc_1bde0
  %v0_1bde8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v4_1be00 = call i32 @function_1be28(i32 %v0_1bde8)
  br label %dec_label_pc_1be02

dec_label_pc_1be02:                               ; preds = %bb, %dec_label_pc_1bde0
  %v3_1be1a = phi i32 [ %v4_1be00, %bb ], [ %arg2, %dec_label_pc_1bde0 ]
  ret i32 %v3_1be1a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_1be25() local_unnamed_addr {
dec_label_pc_1be25:
  %eax.global-to-local = alloca i32, align 4
  %v0_1be25 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1be25
}

define i32 @function_1be28(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be28:
  %v0_1be28 = load i32, i32* @eax, align 8
  ret i32 %v0_1be28
}

define i32 @function_1be30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1be30:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1be30 = call i32 @function_1bfb0()
  %v0_1be38 = load i32, i32* %edx.global-to-local, align 4
  %v2_1be38 = icmp slt i32 %v0_1be38, 0
  %v2_1be3a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v2_1be3a, i32* @eax, align 8
  br i1 %v2_1be38, label %dec_label_pc_1bea8, label %dec_label_pc_1be42

dec_label_pc_1be42:                               ; preds = %dec_label_pc_1be30
  %v1_1be42 = icmp eq i32 %v2_1be3a, 0
  br i1 %v1_1be42, label %bb, label %dec_label_pc_1be46

bb:                                               ; preds = %dec_label_pc_1be42
  %v1_1be44 = call i32 @function_1bec5()
  br label %dec_label_pc_1be46

dec_label_pc_1be46:                               ; preds = %bb, %dec_label_pc_1be42
  %v1_1bebc2 = phi i32 [ %v1_1be44, %bb ], [ %v2_1be3a, %dec_label_pc_1be42 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_1be4a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1be4a = xor i32 %v1_1be4a, %arg1
  %v3_1be4a = icmp eq i32 %v2_1be4a, 0
  store i32 %v2_1be4a, i32* %edx.global-to-local, align 4
  %v1_1be51 = icmp eq i1 %v3_1be4a, false
  br i1 %v1_1be51, label %dec_label_pc_1bebb, label %dec_label_pc_1be53

dec_label_pc_1be53:                               ; preds = %dec_label_pc_1beae, %dec_label_pc_1be46
  %v0_1be53 = phi i32 [ %v1_1bebc3, %dec_label_pc_1beae ], [ %v1_1bebc2, %dec_label_pc_1be46 ]
  %v1_1be53 = inttoptr i32 %v0_1be53 to i32*
  %v2_1be53 = load i32, i32* %v1_1be53, align 4
  store i32 %v2_1be53, i32* %edx.global-to-local, align 4
  %v1_1be59 = add i32 %v2_1be53, 12
  %v2_1be59 = inttoptr i32 %v1_1be59 to i32*
  %v3_1be59 = load i32, i32* %v2_1be59, align 4
  ret i32 %v3_1be59

dec_label_pc_1bea8:                               ; preds = %dec_label_pc_1be30
  store i32 %v2_1be3a, i32* @eax, align 8
  %v1_1beaa = icmp eq i32 %v2_1be3a, 0
  br i1 %v1_1beaa, label %bb108, label %dec_label_pc_1beae

bb108:                                            ; preds = %dec_label_pc_1bea8
  %v1_1beac = call i32 @function_1bec5()
  br label %dec_label_pc_1beae

dec_label_pc_1beae:                               ; preds = %bb108, %dec_label_pc_1bea8
  %v1_1bebc3 = phi i32 [ %v1_1beac, %bb108 ], [ %v2_1be3a, %dec_label_pc_1bea8 ]
  %v1_1beb2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1beb2 = icmp eq i32 %v1_1beb2, %arg1
  br i1 %v3_1beb2, label %dec_label_pc_1be53, label %dec_label_pc_1bebb

dec_label_pc_1bebb:                               ; preds = %dec_label_pc_1beae, %dec_label_pc_1be46
  %v1_1bebc = phi i32 [ %v1_1bebc3, %dec_label_pc_1beae ], [ %v1_1bebc2, %dec_label_pc_1be46 ]
  ret i32 %v1_1bebc

; uselistorder directives
  uselistorder i32 %v1_1bebc3, { 1, 0 }
  uselistorder i32 %v1_1bebc2, { 1, 0 }
  uselistorder i32 %v2_1be3a, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 ()* @function_1bec5, { 1, 0 }
}

define i32 @function_1bec5() local_unnamed_addr {
dec_label_pc_1bec5:
  %v3_1bedd = load i32, i32* @eax, align 8
  ret i32 %v3_1bedd
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEjS4_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bf40:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 0, i32* @eax, align 8
  %v1_1bf63 = icmp eq i32 %arg2, 0
  br i1 %v1_1bf63, label %bb, label %dec_label_pc_1bf6b

bb:                                               ; preds = %dec_label_pc_1bf40
  %v2_1bf65 = call i32 @function_1c010(i32 %arg1)
  store i32 %v2_1bf65, i32* @eax, align 8
  br label %dec_label_pc_1bf6b

dec_label_pc_1bf6b:                               ; preds = %bb, %dec_label_pc_1bf40
  store i32 %arg1, i32* @ebx, align 4
  %v0_1bf6f = call i32 @function_1bfb8()
  ret i32 %v0_1bf6f

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1bf91() local_unnamed_addr {
dec_label_pc_1bf91:
  %v0_1bf91 = load i32, i32* @ebp, align 4
  %v1_1bf91 = load i32, i32* @edx, align 4
  %v2_1bf91 = add i32 %v1_1bf91, %v0_1bf91
  %v1_1bf93 = load i32, i32* @ebx, align 4
  %v2_1bf93 = add i32 %v1_1bf93, 8
  %v3_1bf93 = inttoptr i32 %v2_1bf93 to i32*
  store i32 %v2_1bf91, i32* %v3_1bf93, align 4
  store i32 0, i32* @ebp, align 4
  %v0_1bf98 = load i32, i32* @edx, align 4
  %v1_1bf98 = load i32, i32* @ebx, align 4
  %v2_1bf98 = inttoptr i32 %v1_1bf98 to i32*
  store i32 %v0_1bf98, i32* %v2_1bf98, align 4
  %v0_1bf9a = load i32, i32* @edx, align 4
  %v1_1bf9a = load i32, i32* @ebx, align 4
  %v2_1bf9a = add i32 %v1_1bf9a, 4
  %v3_1bf9a = inttoptr i32 %v2_1bf9a to i32*
  store i32 %v0_1bf9a, i32* %v3_1bf9a, align 4
  %v2_1bf9d = load i32, i32* @esi, align 4
  %v1_1bf9f = add i32 %v2_1bf9d, 4
  %v2_1bf9f = inttoptr i32 %v1_1bf9f to i32*
  %v3_1bf9f = load i32, i32* %v2_1bf9f, align 4
  %v2_1bfa2 = sub i32 %v3_1bf9f, %v2_1bf9d
  %v2_1bfa4 = sdiv i32 %v2_1bfa2, 4
  %v2_1bfa2.off = add i32 %v2_1bfa2, 3
  %tmp = icmp ult i32 %v2_1bfa2.off, 7
  store i32 %v2_1bfa4, i32* @eax, align 8
  %v1_1bfa9 = icmp eq i1 %tmp, false
  br i1 %v1_1bfa9, label %bb, label %dec_label_pc_1bfab

bb:                                               ; preds = %dec_label_pc_1bf91
  %v2_1bfa9 = call i32 @function_1bfe8()
  store i32 %v2_1bfa9, i32* @eax, align 8
  br label %dec_label_pc_1bfab

dec_label_pc_1bfab:                               ; preds = %bb, %dec_label_pc_1bf91
  %v0_1bfab = load i32, i32* @edx, align 4
  %v1_1bfab = load i32, i32* @ebp, align 4
  %v2_1bfab = add i32 %v1_1bfab, %v0_1bfab
  %v1_1bfad = load i32, i32* @ebx, align 4
  %v2_1bfad = add i32 %v1_1bfad, 4
  %v3_1bfad = inttoptr i32 %v2_1bfad to i32*
  store i32 %v2_1bfab, i32* %v3_1bfad, align 4
  %v4_1bfad = load i32, i32* @eax, align 8
  ret i32 %v4_1bfad
}

define i32 @function_1bfb0() local_unnamed_addr {
dec_label_pc_1bfb0:
  %v0_1bfb0 = load i32, i32* @ebx, align 4
  %v1_1bfb0 = add i32 %v0_1bfb0, 12
  store i32 %v1_1bfb0, i32* @ebx, align 4
  %v0_1bfb6 = load i32, i32* @eax, align 8
  ret i32 %v0_1bfb6
}

define i32 @function_1bfb8() local_unnamed_addr {
dec_label_pc_1bfb8:
  %v0_1bfb8 = load i32, i32* @ebx, align 4
  %v1_1bfb8 = icmp eq i32 %v0_1bfb8, 0
  br i1 %v1_1bfb8, label %bb, label %dec_label_pc_1bfbc

bb:                                               ; preds = %dec_label_pc_1bfb8
  %v1_1bfba = call i32 @function_1bfb0()
  %v0_1bfc1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1bfbc

dec_label_pc_1bfbc:                               ; preds = %bb, %dec_label_pc_1bfb8
  %v0_1bfc1 = phi i32 [ %v0_1bfc1.pre, %bb ], [ %v0_1bfb8, %dec_label_pc_1bfb8 ]
  %v1_1bfc1 = inttoptr i32 %v0_1bfc1 to i32*
  store i32 0, i32* %v1_1bfc1, align 4
  %v0_1bfc7 = load i32, i32* @ebx, align 4
  %v1_1bfc7 = add i32 %v0_1bfc7, 4
  %v2_1bfc7 = inttoptr i32 %v1_1bfc7 to i32*
  store i32 0, i32* %v2_1bfc7, align 4
  %v0_1bfd3 = load i32, i32* @ebx, align 4
  %v1_1bfd3 = add i32 %v0_1bfd3, 8
  %v2_1bfd3 = inttoptr i32 %v1_1bfd3 to i32*
  store i32 0, i32* %v2_1bfd3, align 4
  store i32 0, i32* @ebp, align 4
  store i32 0, i32* @edx, align 4
  %v0_1bfe0 = call i32 @function_1bf91()
  ret i32 %v0_1bfe0
}

define i32 @function_1bfe8() local_unnamed_addr {
dec_label_pc_1bfe8:
  %v0_1bfe8 = load i32, i32* @eax, align 8
  %v1_1bfe8 = mul i32 %v0_1bfe8, 4
  store i32 %v1_1bfe8, i32* @ebp, align 4
  ret i32 %v0_1bfe8
}

define i32 @function_1c003(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c003:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c007 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c007
}

define i32 @function_1c010(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c010:
  %v1_1c014 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c014 = xor i32 %v1_1c014, %arg1
  %v3_1c014 = icmp eq i32 %v2_1c014, 0
  store i32 %v2_1c014, i32* @eax, align 8
  %v1_1c01b = icmp eq i1 %v3_1c014, false
  br i1 %v1_1c01b, label %bb, label %dec_label_pc_1c01d

bb:                                               ; preds = %dec_label_pc_1c010
  %v2_1c01b = call i32 @function_1c050()
  br label %dec_label_pc_1c01d

dec_label_pc_1c01d:                               ; preds = %bb, %dec_label_pc_1c010
  %v0_1c024 = phi i32 [ %v2_1c01b, %bb ], [ %v2_1c014, %dec_label_pc_1c010 ]
  ret i32 %v0_1c024
}

define i32 @function_1c050() local_unnamed_addr {
dec_label_pc_1c050:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c056() local_unnamed_addr {
dec_label_pc_1c056:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c056 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c056
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_reallocate_mapEjb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c070:
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 %tmp110, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_1c094 = trunc i32 %arg3 to i8
  %v1_1c098 = add i32 %tmp110, 36
  %v2_1c098 = inttoptr i32 %v1_1c098 to i32*
  %v3_1c098 = load i32, i32* %v2_1c098, align 4
  %v1_1c09b = add i32 %tmp110, 20
  %v2_1c09b = inttoptr i32 %v1_1c09b to i32*
  %v3_1c09b = load i32, i32* %v2_1c09b, align 4
  store i32 %v3_1c09b, i32* @eax, align 8
  %v1_1c0a6 = add i32 %tmp110, 4
  %v2_1c0a6 = inttoptr i32 %v1_1c0a6 to i32*
  %v3_1c0a6 = load i32, i32* %v2_1c0a6, align 4
  store i32 %v3_1c0a6, i32* @ebp, align 4
  %v2_1c0ab = sub i32 %v3_1c098, %v3_1c09b
  %v2_1c0ad = ashr i32 %v2_1c0ab, ptrtoint (i64* @global_var_2.2539 to i32)
  %v1_1c0b0 = add i32 %v2_1c0ad, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c0b0, i32* @edi, align 4
  %v3_1c0b3 = add i32 %v1_1c0b0, %arg2
  store i32 %v3_1c0b3, i32* %edx.global-to-local, align 4
  %v3_1c0ba = mul i32 %v3_1c0b3, 2
  %tmp119 = icmp ugt i32 %v3_1c0a6, %v3_1c0ba
  br i1 %tmp119, label %dec_label_pc_1c0c1, label %bb

bb:                                               ; preds = %dec_label_pc_1c070
  %v4_1c0bf = call i32 @function_1c110(i32 %v3_1c098)
  store i32 %v4_1c0bf, i32* @eax, align 8
  %v0_1c0c1.pre = load i32, i32* @ebp, align 4
  %v1_1c0c1.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1c0c9.pre = load i32, i32* @esi, align 4
  %v1_1c0de.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1c0c1

dec_label_pc_1c0c1:                               ; preds = %dec_label_pc_1c070, %bb
  %v1_1c0de = phi i32 [ %v1_1c0de.pre, %bb ], [ %tmp110, %dec_label_pc_1c070 ]
  %v1_1c0dc = phi i32 [ %v4_1c0bf, %bb ], [ %v3_1c09b, %dec_label_pc_1c070 ]
  %v0_1c0c9 = phi i32 [ %v0_1c0c9.pre, %bb ], [ %arg2, %dec_label_pc_1c070 ]
  %v1_1c0c1 = phi i32 [ %v1_1c0c1.pre, %bb ], [ %v3_1c0b3, %dec_label_pc_1c070 ]
  %v0_1c0c1 = phi i32 [ %v0_1c0c1.pre, %bb ], [ %v3_1c0a6, %dec_label_pc_1c070 ]
  %v2_1c0c1 = sub i32 %v0_1c0c1, %v1_1c0c1
  %v2_1c0c9 = shl i32 %v0_1c0c9, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_1c0cc = udiv i32 %v2_1c0c1, 2
  %v10_1c0ce = icmp eq i8 %v1_1c094, 0
  %v1_1c0d3 = icmp eq i1 %v10_1c0ce, false
  %v4_1c0d3 = select i1 %v1_1c0d3, i32 %v2_1c0c9, i32 0
  store i32 %v4_1c0d3, i32* %edx.global-to-local, align 4
  %v1_1c0d6 = add i32 %v3_1c098, 4
  %v2_1c0d9 = mul i32 %v2_1c0cc, 4
  %v3_1c0d9 = add i32 %v2_1c0d9, %v4_1c0d3
  %v2_1c0dc = sub i32 %v1_1c0d6, %v1_1c0dc
  %v2_1c0de = inttoptr i32 %v1_1c0de to i32*
  %v3_1c0de = load i32, i32* %v2_1c0de, align 4
  %v4_1c0de = add i32 %v3_1c0de, %v3_1c0d9
  store i32 %v4_1c0de, i32* @esi, align 4
  %v2_1c0e0 = sdiv i32 %v2_1c0dc, 4
  %v2_1c0dc.off = add i32 %v2_1c0dc, 3
  %tmp120 = icmp ult i32 %v2_1c0dc.off, 7
  store i32 %v2_1c0e0, i32* @ecx, align 4
  %tmp121 = icmp ugt i32 %v1_1c0dc, %v4_1c0de
  br i1 %tmp121, label %bb114, label %dec_label_pc_1c0eb

bb114:                                            ; preds = %dec_label_pc_1c0c1
  %v4_1c0e5 = call i32 @function_1c1e0()
  br label %dec_label_pc_1c0eb

dec_label_pc_1c0eb:                               ; preds = %dec_label_pc_1c0c1, %bb114
  br i1 %tmp120, label %bb115, label %dec_label_pc_1c0f3

bb115:                                            ; preds = %dec_label_pc_1c0eb
  %v1_1c0ed = call i32 @function_1c194()
  br label %dec_label_pc_1c0f3

dec_label_pc_1c0f3:                               ; preds = %bb115, %dec_label_pc_1c0eb
  %v0_1c0fa = load i32, i32* @esi, align 4
  %v1_1c0fa = load i32, i32* @edi, align 4
  %v2_1c0fa = mul i32 %v1_1c0fa, 4
  %v3_1c0fa = add i32 %v2_1c0fa, %v0_1c0fa
  %tmp122 = mul i32 %v2_1c0e0, -4
  %v2_1c0fd = add i32 %v3_1c0fa, %tmp122
  ret i32 %v2_1c0fd

; uselistorder directives
  uselistorder i32 %v3_1c0b3, { 1, 0, 2 }
  uselistorder i32 %v3_1c0a6, { 1, 0, 2 }
  uselistorder i32 %tmp110, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1c0eb, { 1, 0 }
  uselistorder label %dec_label_pc_1c0c1, { 1, 0 }
}

define i32 @function_1c10b() local_unnamed_addr {
dec_label_pc_1c10b:
  %v0_1c10b = call i32 @function_1c194()
  ret i32 %v0_1c10b
}

define i32 @function_1c110(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c110:
  %of.global-to-local = alloca i1, align 1
  %v0_1c110 = load i32, i32* @esi, align 4
  %v1_1c110 = load i32, i32* @ebp, align 4
  %v7_1c110 = icmp ult i32 %v0_1c110, %v1_1c110
  %v1_1c114 = icmp eq i1 %v7_1c110, false
  %v4_1c114 = select i1 %v1_1c114, i32 %v0_1c110, i32 %v1_1c110
  store i32 %v4_1c114, i32* @eax, align 8
  %v3_1c117 = add i32 %v1_1c110, ptrtoint (i64* @global_var_2.2539 to i32)
  %v4_1c117 = add i32 %v3_1c117, %v4_1c114
  store i32 %v4_1c117, i32* @ebp, align 4
  %tmp5 = sub i32 1073741822, %v4_1c117
  %v8_1c11b = and i32 %tmp5, %v4_1c117
  %v9_1c11b = icmp slt i32 %v8_1c11b, 0
  store i1 %v9_1c11b, i1* %of.global-to-local, align 1
  %tmp7 = icmp ult i32 %v4_1c117, 1073741824
  br i1 %tmp7, label %dec_label_pc_1c127, label %bb

bb:                                               ; preds = %dec_label_pc_1c110
  %v4_1c121 = call i32 @function_1c1f9()
  %v0_1c127.pre = load i32, i32* @ebp, align 4
  %v0_1c132.pre = load i32, i32* @esi, align 4
  %v1_1c132.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1c127

dec_label_pc_1c127:                               ; preds = %dec_label_pc_1c110, %bb
  %v1_1c132 = phi i1 [ %v9_1c11b, %dec_label_pc_1c110 ], [ %v1_1c132.pre, %bb ]
  %v0_1c132 = phi i32 [ %v0_1c110, %dec_label_pc_1c110 ], [ %v0_1c132.pre, %bb ]
  %v0_1c127 = phi i32 [ %v4_1c117, %dec_label_pc_1c110 ], [ %v0_1c127.pre, %bb ]
  %v1_1c127 = mul i32 %v0_1c127, 4
  %v2_1c132 = shl i32 %v0_1c132, ptrtoint (i64* @global_var_2.2539 to i32)
  store i32 %v2_1c132, i32* @esi, align 4
  store i1 %v1_1c132, i1* %of.global-to-local, align 1
  ret i32 %v1_1c127

; uselistorder directives
  uselistorder i32 %v4_1c117, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1c127, { 1, 0 }
}

define i32 @function_1c194() local_unnamed_addr {
dec_label_pc_1c194:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1c194 = load i32, i32* @esi, align 4
  %v1_1c194 = load i32, i32* @ebx, align 4
  %v2_1c194 = add i32 %v1_1c194, 20
  %v3_1c194 = inttoptr i32 %v2_1c194 to i32*
  store i32 %v0_1c194, i32* %v3_1c194, align 4
  %v2_1c197 = load i32, i32* @esi, align 4
  store i32 %v2_1c197, i32* %eax.global-to-local, align 8
  %v1_1c199 = load i32, i32* @ebx, align 4
  %v2_1c199 = add i32 %v1_1c199, 12
  %v3_1c199 = inttoptr i32 %v2_1c199 to i32*
  store i32 %v2_1c197, i32* %v3_1c199, align 4
  %v0_1c19c = load i32, i32* %eax.global-to-local, align 8
  %v1_1c19c = add i32 %v0_1c19c, 504
  %v1_1c1a1 = load i32, i32* @ebx, align 4
  %v2_1c1a1 = add i32 %v1_1c1a1, 16
  %v3_1c1a1 = inttoptr i32 %v2_1c1a1 to i32*
  store i32 %v1_1c19c, i32* %v3_1c1a1, align 4
  %v0_1c1a4 = load i32, i32* @esi, align 4
  %v1_1c1a4 = load i32, i32* @edi, align 4
  %v2_1c1a4 = mul i32 %v1_1c1a4, 4
  %v3_1c1a4 = add i32 %v0_1c1a4, -4
  %v4_1c1a4 = add i32 %v3_1c1a4, %v2_1c1a4
  store i32 %v4_1c1a4, i32* %eax.global-to-local, align 8
  %v1_1c1a8 = load i32, i32* @ebx, align 4
  %v2_1c1a8 = add i32 %v1_1c1a8, 36
  %v3_1c1a8 = inttoptr i32 %v2_1c1a8 to i32*
  store i32 %v4_1c1a4, i32* %v3_1c1a8, align 4
  %v0_1c1ab = load i32, i32* %eax.global-to-local, align 8
  %v1_1c1ab = inttoptr i32 %v0_1c1ab to i32*
  %v2_1c1ab = load i32, i32* %v1_1c1ab, align 4
  store i32 %v2_1c1ab, i32* %eax.global-to-local, align 8
  %v1_1c1ad = load i32, i32* @ebx, align 4
  %v2_1c1ad = add i32 %v1_1c1ad, 28
  %v3_1c1ad = inttoptr i32 %v2_1c1ad to i32*
  store i32 %v2_1c1ab, i32* %v3_1c1ad, align 4
  %v0_1c1b0 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c1b0 = add i32 %v0_1c1b0, 504
  store i32 %v1_1c1b0, i32* @eax, align 8
  %v1_1c1b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c1b9 = xor i32 %v1_1c1b9, %tmp6
  %v3_1c1b9 = icmp eq i32 %v2_1c1b9, 0
  store i32 %v2_1c1b9, i32* @ecx, align 4
  %v1_1c1c0 = load i32, i32* @ebx, align 4
  %v2_1c1c0 = add i32 %v1_1c1c0, 32
  %v3_1c1c0 = inttoptr i32 %v2_1c1c0 to i32*
  store i32 %v1_1c1b0, i32* %v3_1c1c0, align 4
  %v1_1c1c3 = icmp eq i1 %v3_1c1b9, false
  br i1 %v1_1c1c3, label %bb, label %dec_label_pc_1c194.dec_label_pc_1c1c5_crit_edge

dec_label_pc_1c194.dec_label_pc_1c1c5_crit_edge:  ; preds = %dec_label_pc_1c194
  %v0_1c1d8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1c1c5

bb:                                               ; preds = %dec_label_pc_1c194
  %v2_1c1c3 = call i32 @function_1c1fe()
  store i32 %v2_1c1c3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c1c5

dec_label_pc_1c1c5:                               ; preds = %dec_label_pc_1c194.dec_label_pc_1c1c5_crit_edge, %bb
  %v0_1c1d8 = phi i32 [ %v0_1c1d8.pre, %dec_label_pc_1c194.dec_label_pc_1c1c5_crit_edge ], [ %v2_1c1c3, %bb ]
  %v0_1c1d5 = load i32, i32* @esp, align 4
  %v1_1c1d5 = add i32 %v0_1c1d5, 76
  %tmp7 = xor i32 %v0_1c1d5, -2147483648
  %v8_1c1d5 = and i32 %v1_1c1d5, %tmp7
  %v9_1c1d5 = icmp slt i32 %v8_1c1d5, 0
  store i1 %v9_1c1d5, i1* @of, align 1
  ret i32 %v0_1c1d8

; uselistorder directives
  uselistorder label %dec_label_pc_1c1c5, { 1, 0 }
}

define i32 @function_1c1e0() local_unnamed_addr {
dec_label_pc_1c1e0:
  %v0_1c1e0 = load i32, i32* @ecx, align 4
  %v1_1c1e0 = icmp eq i32 %v0_1c1e0, 0
  br i1 %v1_1c1e0, label %bb, label %dec_label_pc_1c1e0.dec_label_pc_1c1e4_crit_edge

dec_label_pc_1c1e0.dec_label_pc_1c1e4_crit_edge:  ; preds = %dec_label_pc_1c1e0
  %v3_1c1ef.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1c1e4

bb:                                               ; preds = %dec_label_pc_1c1e0
  %v1_1c1e2 = call i32 @function_1c194()
  br label %dec_label_pc_1c1e4

dec_label_pc_1c1e4:                               ; preds = %dec_label_pc_1c1e0.dec_label_pc_1c1e4_crit_edge, %bb
  %v3_1c1ef = phi i32 [ %v1_1c1e2, %bb ], [ %v3_1c1ef.pre, %dec_label_pc_1c1e0.dec_label_pc_1c1e4_crit_edge ]
  ret i32 %v3_1c1ef

; uselistorder directives
  uselistorder label %dec_label_pc_1c1e4, { 1, 0 }
}

define i32 @function_1c1f7() local_unnamed_addr {
dec_label_pc_1c1f7:
  %v0_1c1f7 = call i32 @function_1c194()
  ret i32 %v0_1c1f7

; uselistorder directives
  uselistorder i32 ()* @function_1c194, { 3, 1, 2, 0 }
}

define i32 @function_1c1f9() local_unnamed_addr {
dec_label_pc_1c1f9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c1fe() local_unnamed_addr {
dec_label_pc_1c1fe:
  %v0_1c1fe = load i32, i32* @eax, align 8
  ret i32 %v0_1c1fe
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_push_front_auxERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c210:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @esi, align 4
  %v1_1c22b = add i32 %tmp100, 20
  %v2_1c22b = inttoptr i32 %v1_1c22b to i32*
  %v3_1c22b = load i32, i32* %v2_1c22b, align 4
  %v3_1c230 = load i32, i32* %arg1, align 4
  %v4_1c230 = sub i32 %v3_1c22b, %v3_1c230
  %v2_1c232 = sdiv i32 %v4_1c230, 4
  %v4_1c230.off = add i32 %v4_1c230, 3
  %tmp106 = icmp ult i32 %v4_1c230.off, 7
  br i1 %tmp106, label %bb, label %dec_label_pc_1c23d

bb:                                               ; preds = %dec_label_pc_1c210
  %v0_1c21b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c237 = call i32 @function_1c308(i32 %v0_1c21b)
  br label %dec_label_pc_1c23d

dec_label_pc_1c23d:                               ; preds = %bb, %dec_label_pc_1c210
  %v2_1c23d = phi i32 [ %v2_1c237, %bb ], [ %v2_1c232, %dec_label_pc_1c210 ]
  ret i32 %v2_1c23d
}

define i32 @function_1c2a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1c2a4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1c2a4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c2a4 = add i32 %v0_1c2a4, -1980300858
  %v2_1c2a4 = inttoptr i32 %v1_1c2a4 to i32*
  %v3_1c2a4 = load i32, i32* %v2_1c2a4, align 4
  %v4_1c2a4 = sub i32 %v3_1c2a4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1c2a4, i32* %v2_1c2a4, align 4
  %v0_1c2aa = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c2aa = and i32 %v0_1c2aa, -256
  %v2_1c2aa = or i32 %v1_1c2aa, 236
  store i32 %v2_1c2aa, i32* %ebx.global-to-local, align 4
  %v2_1c2ac = load i32, i32* %eax.global-to-local, align 8
  %v4_1c2ac = mul i32 %v2_1c2ac, 2
  %v14_1c2ac = icmp eq i32 %v4_1c2ac, 0
  store i1 %v14_1c2ac, i1* %zf.global-to-local, align 1
  %v21_1c2ac = inttoptr i32 %v2_1c2ac to i32*
  store i32 %v4_1c2ac, i32* %v21_1c2ac, align 4
  %v0_1c2ae = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c2ae = add i32 %v0_1c2ae, 127155
  %v2_1c2ae = inttoptr i32 %v1_1c2ae to i8*
  %v3_1c2ae = load i8, i8* %v2_1c2ae, align 1
  %v5_1c2ae = trunc i32 %v0_1c2ae to i8
  %v6_1c2ae = add i8 %v3_1c2ae, %v5_1c2ae
  %v16_1c2ae = icmp eq i8 %v6_1c2ae, 0
  store i1 %v16_1c2ae, i1* %zf.global-to-local, align 1
  store i8 %v6_1c2ae, i8* %v2_1c2ae, align 1
  %v0_1c2b4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c2b4 = add i32 %v0_1c2b4, 128187
  %v2_1c2b4 = inttoptr i32 %v1_1c2b4 to i8*
  %v3_1c2b4 = load i8, i8* %v2_1c2b4, align 1
  %v5_1c2b4 = trunc i32 %v0_1c2b4 to i8
  %v6_1c2b4 = add i8 %v3_1c2b4, %v5_1c2b4
  %v16_1c2b4 = icmp eq i8 %v6_1c2b4, 0
  store i1 %v16_1c2b4, i1* %zf.global-to-local, align 1
  store i8 %v6_1c2b4, i8* %v2_1c2b4, align 1
  %v0_1c2ba = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c2ba = add i32 %v0_1c2ba, 1837827197
  %v2_1c2ba = inttoptr i32 %v1_1c2ba to i8*
  %v3_1c2ba = load i8, i8* %v2_1c2ba, align 1
  %v4_1c2ba = load i32, i32* %ecx.global-to-local, align 4
  %v5_1c2ba = trunc i32 %v4_1c2ba to i8
  %v6_1c2ba = add i8 %v5_1c2ba, %v3_1c2ba
  store i8 %v6_1c2ba, i8* %v2_1c2ba, align 1
  %v2_1c2c0 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_1c2c0 = load i32, i32* %ebx.global-to-local, align 4
  %v4_1c2c0 = udiv i32 %v3_1c2c0, 256
  %v5_1c2c0 = trunc i32 %v4_1c2c0 to i8
  %v6_1c2c0 = add i8 %v5_1c2c0, %v2_1c2c0
  %v16_1c2c0 = icmp eq i8 %v6_1c2c0, 0
  store i1 %v16_1c2c0, i1* %zf.global-to-local, align 1
  %v21_1c2c0 = load i32, i32* %ecx.global-to-local, align 4
  %v22_1c2c0 = inttoptr i32 %v21_1c2c0 to i8*
  store i8 %v6_1c2c0, i8* %v22_1c2c0, align 1
  %v0_1c2c3 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1c2c3, label %dec_label_pc_1c2a4.dec_label_pc_1c2e7_crit_edge, label %dec_label_pc_1c2c5

dec_label_pc_1c2a4.dec_label_pc_1c2e7_crit_edge:  ; preds = %dec_label_pc_1c2a4
  %v0_1c2e7.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1c2e7

dec_label_pc_1c2c5:                               ; preds = %dec_label_pc_1c2a4
  %v0_1c2c5 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_1c2c5, i32* %edx.global-to-local, align 4
  %v0_1c2c7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1c2c7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1c2d0

dec_label_pc_1c2d0:                               ; preds = %dec_label_pc_1c2d9, %dec_label_pc_1c2c5
  %v0_1c2d4 = phi i32 [ %v1_1c2d9, %dec_label_pc_1c2d9 ], [ %v0_1c2c5, %dec_label_pc_1c2c5 ]
  %v2_1c2d7 = phi i32 [ %v1_1c2dc, %dec_label_pc_1c2d9 ], [ %v0_1c2c7, %dec_label_pc_1c2c5 ]
  %v1_1c2d0 = icmp eq i32 %v2_1c2d7, 0
  store i1 %v1_1c2d0, i1* %zf.global-to-local, align 1
  br i1 %v1_1c2d0, label %dec_label_pc_1c2d9, label %dec_label_pc_1c2d4

dec_label_pc_1c2d4:                               ; preds = %dec_label_pc_1c2d0
  %v1_1c2d4 = inttoptr i32 %v0_1c2d4 to i8*
  %v2_1c2d4 = load i8, i8* %v1_1c2d4, align 1
  %v3_1c2d4 = zext i8 %v2_1c2d4 to i32
  store i32 %v3_1c2d4, i32* %eax.global-to-local, align 8
  %v3_1c2d7 = inttoptr i32 %v2_1c2d7 to i8*
  store i8 %v2_1c2d4, i8* %v3_1c2d7, align 1
  %v0_1c2d9.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1c2dc.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1c2d9

dec_label_pc_1c2d9:                               ; preds = %dec_label_pc_1c2d4, %dec_label_pc_1c2d0
  %v0_1c2dc = phi i32 [ %v0_1c2dc.pre, %dec_label_pc_1c2d4 ], [ 0, %dec_label_pc_1c2d0 ]
  %v0_1c2d9 = phi i32 [ %v0_1c2d9.pre, %dec_label_pc_1c2d4 ], [ %v0_1c2d4, %dec_label_pc_1c2d0 ]
  %v1_1c2d9 = add i32 %v0_1c2d9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c2d9, i32* %edx.global-to-local, align 4
  %v1_1c2dc = add i32 %v0_1c2dc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c2dc, i32* %ecx.global-to-local, align 4
  %v1_1c2df = load i32, i32* %edi.global-to-local, align 4
  %v12_1c2df = icmp eq i32 %v1_1c2d9, %v1_1c2df
  store i1 %v12_1c2df, i1* %zf.global-to-local, align 1
  %v1_1c2e1 = icmp eq i1 %v12_1c2df, false
  br i1 %v1_1c2e1, label %dec_label_pc_1c2d0, label %dec_label_pc_1c2e3

dec_label_pc_1c2e3:                               ; preds = %dec_label_pc_1c2d9
  %v1_1c2e3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1c2e3 = sub i32 %v1_1c2d9, %v1_1c2e3
  store i32 %v2_1c2e3, i32* %edx.global-to-local, align 4
  %v0_1c2e5 = load i32, i32* %esi.global-to-local, align 4
  %v2_1c2e5 = add i32 %v0_1c2e5, %v2_1c2e3
  %v12_1c2e5 = icmp eq i32 %v2_1c2e5, 0
  store i1 %v12_1c2e5, i1* %zf.global-to-local, align 1
  store i32 %v2_1c2e5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1c2e7

dec_label_pc_1c2e7:                               ; preds = %dec_label_pc_1c2a4.dec_label_pc_1c2e7_crit_edge, %dec_label_pc_1c2e3
  %v0_1c2e7 = phi i32 [ %v0_1c2e7.pre, %dec_label_pc_1c2a4.dec_label_pc_1c2e7_crit_edge ], [ %v2_1c2e5, %dec_label_pc_1c2e3 ]
  %v1_1c2e7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c2e7 = add i32 %v1_1c2e7, 496
  %v3_1c2e7 = inttoptr i32 %v2_1c2e7 to i32*
  store i32 %v0_1c2e7, i32* %v3_1c2e7, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1c2f1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c2f1 = xor i32 %v1_1c2f1, %arg1
  %v3_1c2f1 = icmp eq i32 %v2_1c2f1, 0
  store i1 %v3_1c2f1, i1* %zf.global-to-local, align 1
  store i32 %v2_1c2f1, i32* @eax, align 8
  %v1_1c2f8 = icmp eq i1 %v3_1c2f1, false
  br i1 %v1_1c2f8, label %bb, label %dec_label_pc_1c2fa

bb:                                               ; preds = %dec_label_pc_1c2e7
  %v2_1c2f8 = call i32 @function_1c373()
  store i32 %v2_1c2f8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c2fa

dec_label_pc_1c2fa:                               ; preds = %bb, %dec_label_pc_1c2e7
  %v0_1c301 = phi i32 [ %v2_1c2f8, %bb ], [ %v2_1c2f1, %dec_label_pc_1c2e7 ]
  %v0_1c2fa = load i32, i32* @esp, align 4
  %v10_1c2fa = icmp eq i32 %v0_1c2fa, -44
  store i1 %v10_1c2fa, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1c301

; uselistorder directives
  uselistorder i1 %v12_1c2df, { 1, 0 }
  uselistorder i32 %v1_1c2dc, { 1, 0 }
  uselistorder i32 %v1_1c2d9, { 1, 0, 3, 2 }
  uselistorder i32 %v2_1c2ac, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 236, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1c2e7, { 1, 0 }
}

define i32 @function_1c308(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c308:
  %v0_1c318 = load i32, i32* @esi, align 4
  %v5_1c31b = call i32 @unknown_38280(i32 %v0_1c318, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  ret i32 %v5_1c31b
}

define i32 @function_1c328() local_unnamed_addr {
dec_label_pc_1c328:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c32a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c32a
}

define i32 @function_1c373() local_unnamed_addr {
dec_label_pc_1c373:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c379() local_unnamed_addr {
dec_label_pc_1c379:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c379 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c379
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_push_back_auxERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c390:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @ebx, align 4
  %v1_1c3ab = add i32 %tmp100, 36
  %v2_1c3ab = inttoptr i32 %v1_1c3ab to i32*
  %v3_1c3ab = load i32, i32* %v2_1c3ab, align 4
  %v3_1c3b0 = load i32, i32* %arg1, align 4
  %v4_1c3b0 = sub i32 %v3_1c3ab, %v3_1c3b0
  %v2_1c3b2 = sdiv i32 %v4_1c3b0, 4
  %v2_1c3b7 = add i32 %tmp100, 4
  %v3_1c3b7 = inttoptr i32 %v2_1c3b7 to i32*
  %v4_1c3b7 = load i32, i32* %v3_1c3b7, align 4
  %v5_1c3b7 = sub i32 %v4_1c3b7, %v2_1c3b2
  %tmp107 = or i32 %v5_1c3b7, 1
  %tmp108 = icmp eq i32 %tmp107, 1
  br i1 %tmp108, label %bb, label %dec_label_pc_1c3c3

bb:                                               ; preds = %dec_label_pc_1c390
  %v0_1c39b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v4_1c3bd = call i32 @function_1c478(i32 %v0_1c39b)
  br label %dec_label_pc_1c3c3

dec_label_pc_1c3c3:                               ; preds = %bb, %dec_label_pc_1c390
  %v2_1c3c3 = phi i32 [ %v4_1c3bd, %bb ], [ %v5_1c3b7, %dec_label_pc_1c390 ]
  ret i32 %v2_1c3c3

; uselistorder directives
  uselistorder i32 %v5_1c3b7, { 1, 0 }
}

define i32 @function_1c3ff() local_unnamed_addr {
dec_label_pc_1c3ff:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_1c3ff = load i32, i32* @edi, align 4
  %v1_1c3ff = load i32, i32* @eax, align 8
  %v2_1c3ff = add i32 %v1_1c3ff, %v0_1c3ff
  store i32 %v2_1c3ff, i32* %edi.global-to-local, align 4
  %v1_1c401 = load i32, i32* @esi, align 4
  %v2_1c401 = inttoptr i32 %v1_1c401 to i32*
  store i32 %v1_1c3ff, i32* %v2_1c401, align 4
  %v0_1c403 = load i32, i32* @eax, align 8
  %v1_1c403 = load i32, i32* @esi, align 4
  %v2_1c403 = add i32 %v1_1c403, 4
  %v3_1c403 = inttoptr i32 %v2_1c403 to i32*
  store i32 %v0_1c403, i32* %v3_1c403, align 4
  %v0_1c406 = load i32, i32* %edi.global-to-local, align 4
  %v1_1c406 = load i32, i32* @esi, align 4
  %v2_1c406 = add i32 %v1_1c406, 8
  %v3_1c406 = inttoptr i32 %v2_1c406 to i32*
  store i32 %v0_1c406, i32* %v3_1c406, align 4
  %v0_1c409 = load i32, i32* @ebp, align 4
  %v1_1c409 = add i32 %v0_1c409, 4
  %v2_1c409 = inttoptr i32 %v1_1c409 to i32*
  %v3_1c409 = load i32, i32* %v2_1c409, align 4
  store i32 %v3_1c409, i32* %edi.global-to-local, align 4
  %v12_1c40f = icmp eq i32 %v3_1c409, %v0_1c409
  br i1 %v12_1c40f, label %dec_label_pc_1c3ff.dec_label_pc_1c43b_crit_edge, label %dec_label_pc_1c417

dec_label_pc_1c3ff.dec_label_pc_1c43b_crit_edge:  ; preds = %dec_label_pc_1c3ff
  %v0_1c43b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1c43b

dec_label_pc_1c417:                               ; preds = %dec_label_pc_1c3ff
  store i32 %v0_1c409, i32* %edx.global-to-local, align 4
  %v0_1c419 = load i32, i32* @eax, align 8
  store i32 %v0_1c419, i32* %ecx.global-to-local, align 4
  store i32 %v0_1c419, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1c420

dec_label_pc_1c420:                               ; preds = %dec_label_pc_1c429, %dec_label_pc_1c417
  %v1_1c42f5 = phi i32 [ %v1_1c42f, %dec_label_pc_1c429 ], [ %v3_1c409, %dec_label_pc_1c417 ]
  %v0_1c424 = phi i32 [ %v1_1c429, %dec_label_pc_1c429 ], [ %v0_1c409, %dec_label_pc_1c417 ]
  %v2_1c427 = phi i32 [ %v1_1c42c, %dec_label_pc_1c429 ], [ %v0_1c419, %dec_label_pc_1c417 ]
  %v1_1c420 = icmp eq i32 %v2_1c427, 0
  br i1 %v1_1c420, label %dec_label_pc_1c429, label %dec_label_pc_1c424

dec_label_pc_1c424:                               ; preds = %dec_label_pc_1c420
  %v1_1c424 = inttoptr i32 %v0_1c424 to i8*
  %v2_1c424 = load i8, i8* %v1_1c424, align 1
  %v3_1c424 = zext i8 %v2_1c424 to i32
  store i32 %v3_1c424, i32* %eax.global-to-local, align 8
  %v3_1c427 = inttoptr i32 %v2_1c427 to i8*
  store i8 %v2_1c424, i8* %v3_1c427, align 1
  %v0_1c429.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1c42c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c42f.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_1c429

dec_label_pc_1c429:                               ; preds = %dec_label_pc_1c424, %dec_label_pc_1c420
  %v1_1c42f = phi i32 [ %v1_1c42f.pre, %dec_label_pc_1c424 ], [ %v1_1c42f5, %dec_label_pc_1c420 ]
  %v0_1c42c = phi i32 [ %v0_1c42c.pre, %dec_label_pc_1c424 ], [ 0, %dec_label_pc_1c420 ]
  %v0_1c429 = phi i32 [ %v0_1c429.pre, %dec_label_pc_1c424 ], [ %v0_1c424, %dec_label_pc_1c420 ]
  %v1_1c429 = add i32 %v0_1c429, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c429, i32* %edx.global-to-local, align 4
  %v1_1c42c = add i32 %v0_1c42c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c42c, i32* %ecx.global-to-local, align 4
  %v12_1c42f = icmp eq i32 %v1_1c429, %v1_1c42f
  %v1_1c431 = icmp eq i1 %v12_1c42f, false
  br i1 %v1_1c431, label %dec_label_pc_1c420, label %dec_label_pc_1c433

dec_label_pc_1c433:                               ; preds = %dec_label_pc_1c429
  %v5_1c433 = sub i32 %v1_1c429, %v0_1c409
  store i32 %v5_1c433, i32* %edx.global-to-local, align 4
  %v0_1c437 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1c439 = add i32 %v0_1c437, %v5_1c433
  store i32 %v2_1c439, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c43b

dec_label_pc_1c43b:                               ; preds = %dec_label_pc_1c3ff.dec_label_pc_1c43b_crit_edge, %dec_label_pc_1c433
  %v0_1c43b = phi i32 [ %v0_1c43b.pre, %dec_label_pc_1c3ff.dec_label_pc_1c43b_crit_edge ], [ %v2_1c439, %dec_label_pc_1c433 ]
  %v1_1c43b = load i32, i32* @esi, align 4
  %v2_1c43b = add i32 %v1_1c43b, 4
  %v3_1c43b = inttoptr i32 %v2_1c43b to i32*
  store i32 %v0_1c43b, i32* %v3_1c43b, align 4
  %v0_1c43e = load i32, i32* @ebx, align 4
  %v1_1c43e = add i32 %v0_1c43e, 36
  %v2_1c43e = inttoptr i32 %v1_1c43e to i32*
  %v3_1c43e = load i32, i32* %v2_1c43e, align 4
  store i32 %v3_1c43e, i32* %eax.global-to-local, align 8
  %v1_1c441 = add i32 %v3_1c43e, 4
  store i32 %v1_1c441, i32* %edx.global-to-local, align 4
  store i32 %v1_1c441, i32* %v2_1c43e, align 4
  %v0_1c447 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c447 = add i32 %v0_1c447, 4
  %v2_1c447 = inttoptr i32 %v1_1c447 to i32*
  %v3_1c447 = load i32, i32* %v2_1c447, align 4
  store i32 %v3_1c447, i32* %eax.global-to-local, align 8
  %v1_1c44a = add i32 %v3_1c447, 504
  store i32 %v1_1c44a, i32* %edx.global-to-local, align 4
  %v1_1c450 = load i32, i32* @ebx, align 4
  %v2_1c450 = add i32 %v1_1c450, 28
  %v3_1c450 = inttoptr i32 %v2_1c450 to i32*
  store i32 %v3_1c447, i32* %v3_1c450, align 4
  %v0_1c453 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c453 = load i32, i32* @ebx, align 4
  %v2_1c453 = add i32 %v1_1c453, 24
  %v3_1c453 = inttoptr i32 %v2_1c453 to i32*
  store i32 %v0_1c453, i32* %v3_1c453, align 4
  %v1_1c45a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c45a = xor i32 %v1_1c45a, %tmp13
  %v3_1c45a = icmp eq i32 %v2_1c45a, 0
  store i32 %v2_1c45a, i32* @eax, align 8
  %v0_1c461 = load i32, i32* %edx.global-to-local, align 4
  %v1_1c461 = load i32, i32* @ebx, align 4
  %v2_1c461 = add i32 %v1_1c461, 32
  %v3_1c461 = inttoptr i32 %v2_1c461 to i32*
  store i32 %v0_1c461, i32* %v3_1c461, align 4
  %v1_1c464 = icmp eq i1 %v3_1c45a, false
  br i1 %v1_1c464, label %bb, label %dec_label_pc_1c43b.dec_label_pc_1c466_crit_edge

dec_label_pc_1c43b.dec_label_pc_1c466_crit_edge:  ; preds = %dec_label_pc_1c43b
  %v0_1c46d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1c466

bb:                                               ; preds = %dec_label_pc_1c43b
  %v2_1c464 = call i32 @function_1c4b3()
  store i32 %v2_1c464, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c466

dec_label_pc_1c466:                               ; preds = %dec_label_pc_1c43b.dec_label_pc_1c466_crit_edge, %bb
  %v0_1c46d = phi i32 [ %v0_1c46d.pre, %dec_label_pc_1c43b.dec_label_pc_1c466_crit_edge ], [ %v2_1c464, %bb ]
  ret i32 %v0_1c46d

; uselistorder directives
  uselistorder i32 %v1_1c42c, { 1, 0 }
  uselistorder i32 %v1_1c429, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1c409, { 1, 0, 2 }
  uselistorder i32 %v0_1c409, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_1c3ff, { 1, 0 }
  uselistorder label %dec_label_pc_1c466, { 1, 0 }
  uselistorder label %dec_label_pc_1c43b, { 1, 0 }
}

define i32 @function_1c470() local_unnamed_addr {
dec_label_pc_1c470:
  store i32 0, i32* @eax, align 8
  %v0_1c472 = call i32 @function_1c3ff()
  ret i32 %v0_1c472
}

define i32 @function_1c478(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c478:
  %v0_1c488 = load i32, i32* @ebx, align 4
  %v4_1c48b = call i32 @unknown_38400(i32 %v0_1c488, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), i32 0)
  ret i32 %v4_1c48b
}

define i32 @function_1c4b3() local_unnamed_addr {
dec_label_pc_1c4b3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c4b9() local_unnamed_addr {
dec_label_pc_1c4b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c4b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c4b9
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1c4d0:
  %tmp109 = ptrtoint i32* %arg4 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_1c506 = add i32 %tmp109, 4
  %v2_1c506 = inttoptr i32 %v1_1c506 to i32*
  %v3_1c506 = load i32, i32* %v2_1c506, align 4
  store i32 %v3_1c506, i32* @ebp, align 4
  %v2_1c509 = load i32, i32* %arg4, align 4
  store i32 0, i32* @eax, align 8
  %v2_1c51e = sub i32 %v3_1c506, %v2_1c509
  %v12_1c51e = icmp eq i32 %v2_1c51e, 0
  store i32 %v2_1c51e, i32* @edx, align 4
  br i1 %v12_1c51e, label %bb, label %dec_label_pc_1c53c

bb:                                               ; preds = %dec_label_pc_1c4d0
  %v3_1c53a = call i32 @function_1c555(i32 %v2_1c509, i32 %arg1)
  br label %dec_label_pc_1c53c

dec_label_pc_1c53c:                               ; preds = %bb, %dec_label_pc_1c4d0
  %v4_1c53f = phi i32 [ %v3_1c53a, %bb ], [ 0, %dec_label_pc_1c4d0 ]
  ret i32 %v4_1c53f
}

define i32 @function_1c555(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c555:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_208 = alloca i32, align 4
  %v0_1c555 = load i32, i32* @edx, align 4
  %v1_1c555 = load i32, i32* @eax, align 8
  %v2_1c555 = add i32 %v1_1c555, %v0_1c555
  store i32 %v2_1c555, i32* %edx.global-to-local, align 4
  %v0_1c557 = load i32, i32* @ebp, align 4
  %v15_1c557 = icmp eq i32 %v0_1c557, %arg1
  store i32 %v1_1c555, i32* %stack_var_208, align 4
  br i1 %v15_1c557, label %dec_label_pc_1c591, label %dec_label_pc_1c572

dec_label_pc_1c572:                               ; preds = %dec_label_pc_1c555
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %v1_1c555, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1c578

dec_label_pc_1c578:                               ; preds = %dec_label_pc_1c581, %dec_label_pc_1c572
  %v1_1c5876 = phi i32 [ %v1_1c587, %dec_label_pc_1c581 ], [ %v0_1c557, %dec_label_pc_1c572 ]
  %v0_1c57c = phi i32 [ %v1_1c581, %dec_label_pc_1c581 ], [ %arg1, %dec_label_pc_1c572 ]
  %v2_1c57f = phi i32 [ %v1_1c584, %dec_label_pc_1c581 ], [ %v1_1c555, %dec_label_pc_1c572 ]
  %v1_1c578 = icmp eq i32 %v2_1c57f, 0
  br i1 %v1_1c578, label %dec_label_pc_1c581, label %dec_label_pc_1c57c

dec_label_pc_1c57c:                               ; preds = %dec_label_pc_1c578
  %v1_1c57c = inttoptr i32 %v0_1c57c to i8*
  %v2_1c57c = load i8, i8* %v1_1c57c, align 1
  %v3_1c57c = zext i8 %v2_1c57c to i32
  store i32 %v3_1c57c, i32* %ebx.global-to-local, align 4
  %v3_1c57f = inttoptr i32 %v2_1c57f to i8*
  store i8 %v2_1c57c, i8* %v3_1c57f, align 1
  %v0_1c581.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1c584.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c587.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1c581

dec_label_pc_1c581:                               ; preds = %dec_label_pc_1c57c, %dec_label_pc_1c578
  %v1_1c587 = phi i32 [ %v1_1c587.pre, %dec_label_pc_1c57c ], [ %v1_1c5876, %dec_label_pc_1c578 ]
  %v0_1c584 = phi i32 [ %v0_1c584.pre, %dec_label_pc_1c57c ], [ 0, %dec_label_pc_1c578 ]
  %v0_1c581 = phi i32 [ %v0_1c581.pre, %dec_label_pc_1c57c ], [ %v0_1c57c, %dec_label_pc_1c578 ]
  %v1_1c581 = add i32 %v0_1c581, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c581, i32* %edx.global-to-local, align 4
  %v1_1c584 = add i32 %v0_1c584, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c584, i32* %ecx.global-to-local, align 4
  %v12_1c587 = icmp eq i32 %v1_1c581, %v1_1c587
  %v1_1c589 = icmp eq i1 %v12_1c587, false
  br i1 %v1_1c589, label %dec_label_pc_1c578, label %dec_label_pc_1c58b

dec_label_pc_1c58b:                               ; preds = %dec_label_pc_1c581
  %v5_1c58b = sub i32 %v1_1c581, %arg1
  store i32 %v5_1c58b, i32* %edx.global-to-local, align 4
  %v0_1c58f = load i32, i32* @eax, align 8
  %v2_1c58f = add i32 %v0_1c58f, %v5_1c58b
  store i32 %v2_1c58f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c591

dec_label_pc_1c591:                               ; preds = %dec_label_pc_1c58b, %dec_label_pc_1c555
  %v0_1c591 = load i32, i32* @edi, align 4
  %v1_1c591 = add i32 %v0_1c591, 20
  %v2_1c591 = inttoptr i32 %v1_1c591 to i32*
  %v3_1c591 = load i32, i32* %v2_1c591, align 4
  store i32 %v3_1c591, i32* @ebx, align 4
  %v1_1c594 = add i32 %v0_1c591, 16
  %v2_1c594 = inttoptr i32 %v1_1c594 to i32*
  %v3_1c594 = load i32, i32* %v2_1c594, align 4
  %v0_1c597 = load i32, i32* @esi, align 4
  %v1_1c597 = add i32 %v0_1c597, 12
  %v2_1c597 = inttoptr i32 %v1_1c597 to i32*
  %v3_1c597 = load i32, i32* %v2_1c597, align 4
  store i32 %v3_1c597, i32* %ecx.global-to-local, align 4
  store i32 %v0_1c597, i32* %eax.global-to-local, align 8
  %v2_1c5a3 = add i32 %v0_1c597, 4
  %v3_1c5a3 = inttoptr i32 %v2_1c5a3 to i32*
  %v4_1c5a3 = load i32, i32* %v3_1c5a3, align 4
  %v5_1c5a3 = sub i32 %v0_1c597, %v4_1c5a3
  store i32 %v5_1c5a3, i32* %eax.global-to-local, align 8
  %v1_1c5aa = add i32 %v0_1c591, 8
  %v2_1c5aa = inttoptr i32 %v1_1c5aa to i32*
  %v3_1c5aa = load i32, i32* %v2_1c5aa, align 4
  %v2_1c5ad = sub i32 %v3_1c597, %v3_1c591
  %v2_1c5b3 = sdiv i32 %v2_1c5ad, 4
  %v2_1c5b9 = sdiv i32 %v5_1c5a3, 4
  %tmp21 = mul i32 %v2_1c5b3, 42
  %v3_1c5bc = add i32 %tmp21, -42
  store i32 %v3_1c5bc, i32* %ecx.global-to-local, align 4
  %v2_1c5bf = sub i32 %v3_1c594, %v3_1c5aa
  %v3_1c5c1 = mul i32 %v2_1c5b9, -1431655765
  store i32 %v3_1c5c1, i32* %eax.global-to-local, align 8
  %v2_1c5c7 = sdiv i32 %v2_1c5bf, 4
  %v3_1c5ca = mul i32 %v2_1c5c7, -1431655765
  store i32 %v3_1c5ca, i32* %edx.global-to-local, align 4
  %v1_1c5d4 = add i32 %v0_1c591, 24
  %v2_1c5d4 = inttoptr i32 %v1_1c5d4 to i32*
  %v3_1c5d4 = load i32, i32* %v2_1c5d4, align 4
  store i32 %v3_1c5d4, i32* @ebp, align 4
  %v2_1c5d7 = add i32 %v3_1c5c1, %v3_1c5bc
  store i32 %v2_1c5d7, i32* %eax.global-to-local, align 8
  %v1_1c5d9 = add i32 %v0_1c591, 36
  %v2_1c5d9 = inttoptr i32 %v1_1c5d9 to i32*
  %v3_1c5d9 = load i32, i32* %v2_1c5d9, align 4
  store i32 %v3_1c5d9, i32* %ecx.global-to-local, align 4
  %v2_1c5dc = add i32 %v3_1c5ca, %v2_1c5d7
  store i32 %v3_1c5d9, i32* %eax.global-to-local, align 8
  %v1_1c5ea = add i32 %v0_1c591, 28
  %v2_1c5ea = inttoptr i32 %v1_1c5ea to i32*
  %v3_1c5ea = load i32, i32* %v2_1c5ea, align 4
  store i32 %v3_1c5ea, i32* @ecx, align 4
  %v2_1c5ed = sub i32 %v3_1c5d9, %v3_1c591
  %v2_1c5ef = sdiv i32 %v2_1c5ed, 4
  %tmp22 = mul i32 %v2_1c5ef, 42
  %v2_1c5fe = sub i32 %v3_1c5d4, %v3_1c5ea
  %v2_1c600 = sdiv i32 %v2_1c5fe, 4
  %v3_1c603 = mul i32 %v2_1c600, -1431655765
  %v3_1c5f5 = add i32 %v3_1c603, -42
  %v5_1c609 = add i32 %v3_1c5f5, %tmp22
  store i32 %v5_1c609, i32* %eax.global-to-local, align 8
  %v2_1c60d = add i32 %v5_1c609, %v3_1c5ca
  %v2_1c60f = udiv i32 %v2_1c60d, 2
  store i32 %v2_1c60f, i32* %edx.global-to-local, align 4
  %v10_1c611 = icmp ult i32 %v2_1c5dc, %v2_1c60f
  br i1 %v10_1c611, label %bb, label %dec_label_pc_1c61b

bb:                                               ; preds = %dec_label_pc_1c591
  %v2_1c615 = inttoptr i32 %v3_1c5d9 to i32*
  %v3_1c615 = call i32 @function_1c8b8(i32* %v2_1c615)
  store i32 %v3_1c615, i32* %eax.global-to-local, align 8
  %v1_1c61b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1c61b

dec_label_pc_1c61b:                               ; preds = %bb, %dec_label_pc_1c591
  %v1_1c61b = phi i32 [ %v1_1c61b.pre, %bb ], [ %v3_1c5ea, %dec_label_pc_1c591 ]
  %v12_1c61b = icmp eq i32 %v3_1c5d4, %v1_1c61b
  br i1 %v12_1c61b, label %bb24, label %dec_label_pc_1c627

bb24:                                             ; preds = %dec_label_pc_1c61b
  %v1_1c621 = call i32 @function_1cb58()
  store i32 %v1_1c621, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c627

dec_label_pc_1c627:                               ; preds = %bb24, %dec_label_pc_1c61b
  %v0_1c627 = load i32, i32* @edi, align 4
  %v1_1c627 = add i32 %v0_1c627, 32
  %v2_1c627 = inttoptr i32 %v1_1c627 to i32*
  %v3_1c627 = load i32, i32* %v2_1c627, align 4
  %v1_1c62e = add i32 %v3_1c627, -12
  store i32 %v1_1c62e, i32* %eax.global-to-local, align 8
  %v12_1c631 = icmp eq i32 %v3_1c5d4, %v1_1c62e
  br i1 %v12_1c631, label %bb25, label %dec_label_pc_1c639

bb25:                                             ; preds = %dec_label_pc_1c627
  %v2_1c633 = call i32 @function_1cc4c(i32 %v3_1c627)
  store i32 %v2_1c633, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c639

dec_label_pc_1c639:                               ; preds = %bb25, %dec_label_pc_1c627
  %v1_1c639 = icmp eq i32 %v3_1c5d4, 0
  br i1 %v1_1c639, label %bb26, label %dec_label_pc_1c641

bb26:                                             ; preds = %dec_label_pc_1c639
  %v1_1c63b = call i32 @function_1cb10()
  store i32 %v1_1c63b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c641

dec_label_pc_1c641:                               ; preds = %bb26, %dec_label_pc_1c639
  store i32 %v3_1c5d4, i32* %ebx.global-to-local, align 4
  store i32 %v3_1c5d4, i32* %eax.global-to-local, align 8
  %v1_1c649 = add i32 %v3_1c5d4, -8
  %v2_1c649 = inttoptr i32 %v1_1c649 to i32*
  %v3_1c649 = load i32, i32* %v2_1c649, align 4
  store i32 %v3_1c649, i32* %ebx.global-to-local, align 4
  %v1_1c64c = add i32 %v3_1c5d4, -12
  %v2_1c64c = inttoptr i32 %v1_1c64c to i32*
  %v3_1c64c = load i32, i32* %v2_1c64c, align 4
  store i32 %v3_1c64c, i32* %eax.global-to-local, align 8
  %v1_1c64f = inttoptr i32 %v3_1c5d4 to i32*
  store i32 0, i32* %v1_1c64f, align 4
  %v1_1c656 = add i32 %v3_1c5d4, 4
  %v2_1c656 = inttoptr i32 %v1_1c656 to i32*
  store i32 0, i32* %v2_1c656, align 4
  %v1_1c65d = add i32 %v3_1c5d4, 8
  %v2_1c65d = inttoptr i32 %v1_1c65d to i32*
  store i32 0, i32* %v2_1c65d, align 4
  %v0_1c664 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c664 = load i32, i32* %eax.global-to-local, align 8
  %v2_1c664 = sub i32 %v0_1c664, %v1_1c664
  %v12_1c664 = icmp eq i32 %v2_1c664, 0
  store i32 %v2_1c664, i32* %ebx.global-to-local, align 4
  br i1 %v12_1c664, label %bb27, label %dec_label_pc_1c672

bb27:                                             ; preds = %dec_label_pc_1c641
  %v2_1c66c = call i32 @function_1cb00(i32 0)
  store i32 %v2_1c66c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c672

dec_label_pc_1c672:                               ; preds = %bb27, %dec_label_pc_1c641
  %v3_1c675 = phi i32 [ %v2_1c66c, %bb27 ], [ %v1_1c664, %dec_label_pc_1c641 ]
  %v2_1c675 = ptrtoint i32* %stack_var_208 to i32
  store i32 %v2_1c675, i32* %ebx.global-to-local, align 4
  ret i32 %v3_1c675

; uselistorder directives
  uselistorder i32 %v2_1c60f, { 1, 0 }
  uselistorder i32 %v3_1c5d9, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1c5d4, { 2, 3, 4, 8, 7, 6, 5, 9, 0, 1, 10, 11 }
  uselistorder i32 %v0_1c597, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1c591, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v1_1c584, { 1, 0 }
  uselistorder i32 %v1_1c581, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1c557, { 1, 0 }
  uselistorder i32 %v1_1c555, { 1, 2, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 6, 7, 1, 2, 8, 3, 4, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 42, { 0, 1, 6, 7, 2, 3, 4, 9, 8, 10, 11, 12, 15, 5, 16, 13, 14 }
  uselistorder i32 %arg1, { 2, 1, 3, 0 }
}

define i32 @function_1c685(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c685:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_208 = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %stack_var_204 = alloca i32, align 4
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = urem i32 %arg1, 2
  %tmp51 = icmp ne i32 %tmp50, 0
  %v4_1c685 = sext i1 %tmp51 to i32
  store i32 %v4_1c685, i32* %eax.global-to-local, align 8
  %v1_1c68d = load i32, i32* @ebp, align 4
  %v2_1c68d = inttoptr i32 %v1_1c68d to i32*
  store i32 %v4_1c685, i32* %v2_1c68d, align 4
  %v0_1c690 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c690 = load i32, i32* @ebp, align 4
  %v2_1c690 = add i32 %v1_1c690, 4
  %v3_1c690 = inttoptr i32 %v2_1c690 to i32*
  store i32 %v0_1c690, i32* %v3_1c690, align 4
  %v0_1c693 = load i32, i32* %eax.global-to-local, align 8
  %v5_1c693 = add i32 %v0_1c693, %tmp46
  store i32 %v5_1c693, i32* %eax.global-to-local, align 8
  %v1_1c697 = load i32, i32* @ebp, align 4
  %v2_1c697 = add i32 %v1_1c697, 8
  %v3_1c697 = inttoptr i32 %v2_1c697 to i32*
  store i32 %v5_1c693, i32* %v3_1c697, align 4
  %v0_1c69a = load i32, i32* %edx.global-to-local, align 4
  %v1_1c69a = add i32 %v0_1c69a, -12
  %v2_1c69a = inttoptr i32 %v1_1c69a to i32*
  %v3_1c69a = load i32, i32* %v2_1c69a, align 4
  %v1_1c69d = add i32 %v0_1c69a, -8
  %v2_1c69d = inttoptr i32 %v1_1c69d to i32*
  %v3_1c69d = load i32, i32* %v2_1c69d, align 4
  store i32 %v3_1c69d, i32* %ebx.global-to-local, align 4
  %v12_1c6a4 = icmp eq i32 %v3_1c69d, %v3_1c69a
  br i1 %v12_1c6a4, label %dec_label_pc_1c6cb, label %dec_label_pc_1c6a8

dec_label_pc_1c6a8:                               ; preds = %dec_label_pc_1c685
  store i32 %v4_1c685, i32* %edx.global-to-local, align 4
  store i32 %v3_1c69a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c6b0

dec_label_pc_1c6b0:                               ; preds = %dec_label_pc_1c6b9, %dec_label_pc_1c6a8
  %v1_1c6bf6 = phi i32 [ %v1_1c6bf, %dec_label_pc_1c6b9 ], [ %v3_1c69d, %dec_label_pc_1c6a8 ]
  %v0_1c6b4 = phi i32 [ %v1_1c6b9, %dec_label_pc_1c6b9 ], [ %v3_1c69a, %dec_label_pc_1c6a8 ]
  %v2_1c6b7 = phi i32 [ %v1_1c6bc, %dec_label_pc_1c6b9 ], [ %v4_1c685, %dec_label_pc_1c6a8 ]
  %v1_1c6b0 = icmp eq i32 %v2_1c6b7, 0
  br i1 %v1_1c6b0, label %dec_label_pc_1c6b9, label %dec_label_pc_1c6b4

dec_label_pc_1c6b4:                               ; preds = %dec_label_pc_1c6b0
  %v1_1c6b4 = inttoptr i32 %v0_1c6b4 to i8*
  %v2_1c6b4 = load i8, i8* %v1_1c6b4, align 1
  %v3_1c6b7 = inttoptr i32 %v2_1c6b7 to i8*
  store i8 %v2_1c6b4, i8* %v3_1c6b7, align 1
  %v0_1c6b9.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_1c6bc.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_1c6bf.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1c6b9

dec_label_pc_1c6b9:                               ; preds = %dec_label_pc_1c6b4, %dec_label_pc_1c6b0
  %v1_1c6bf = phi i32 [ %v1_1c6bf.pre, %dec_label_pc_1c6b4 ], [ %v1_1c6bf6, %dec_label_pc_1c6b0 ]
  %v0_1c6bc = phi i32 [ %v0_1c6bc.pre, %dec_label_pc_1c6b4 ], [ 0, %dec_label_pc_1c6b0 ]
  %v0_1c6b9 = phi i32 [ %v0_1c6b9.pre, %dec_label_pc_1c6b4 ], [ %v0_1c6b4, %dec_label_pc_1c6b0 ]
  %v1_1c6b9 = add i32 %v0_1c6b9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c6b9, i32* %eax.global-to-local, align 8
  %v1_1c6bc = add i32 %v0_1c6bc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c6bc, i32* %edx.global-to-local, align 4
  %v12_1c6bf = icmp eq i32 %v1_1c6b9, %v1_1c6bf
  %v1_1c6c1 = icmp eq i1 %v12_1c6bf, false
  br i1 %v1_1c6c1, label %dec_label_pc_1c6b0, label %dec_label_pc_1c6c3

dec_label_pc_1c6c3:                               ; preds = %dec_label_pc_1c6b9
  %v5_1c6c3 = sub i32 %v1_1c6b9, %v3_1c69a
  store i32 %v5_1c6c3, i32* %eax.global-to-local, align 8
  %v6_1c6c7 = add i32 %v5_1c6c3, %v4_1c685
  %tmp54 = urem i32 %v6_1c6c7, 2
  %v25_1c6c7 = icmp ne i32 %tmp54, 0
  br label %dec_label_pc_1c6cb

dec_label_pc_1c6cb:                               ; preds = %dec_label_pc_1c6c3, %dec_label_pc_1c685
  %stack_var_52.0 = phi i1 [ %tmp51, %dec_label_pc_1c685 ], [ %v25_1c6c7, %dec_label_pc_1c6c3 ]
  %v4_1c6cb = sext i1 %stack_var_52.0 to i32
  store i32 %v4_1c6cb, i32* %eax.global-to-local, align 8
  %v0_1c6cf = load i32, i32* @edi, align 4
  %v1_1c6cf = add i32 %v0_1c6cf, 32
  %v2_1c6cf = inttoptr i32 %v1_1c6cf to i32*
  %v3_1c6cf = load i32, i32* %v2_1c6cf, align 4
  store i32 %v3_1c6cf, i32* %ebx.global-to-local, align 4
  %v1_1c6d2 = add i32 %v0_1c6cf, 28
  %v2_1c6d2 = inttoptr i32 %v1_1c6d2 to i32*
  %v3_1c6d2 = load i32, i32* %v2_1c6d2, align 4
  store i32 %v3_1c6d2, i32* @ecx, align 4
  %v1_1c6d5 = load i32, i32* @ebp, align 4
  %v2_1c6d5 = add i32 %v1_1c6d5, 4
  %v3_1c6d5 = inttoptr i32 %v2_1c6d5 to i32*
  store i32 %v4_1c6cb, i32* %v3_1c6d5, align 4
  %v0_1c6d8 = load i32, i32* @edi, align 4
  %v1_1c6d8 = add i32 %v0_1c6d8, 36
  %v2_1c6d8 = inttoptr i32 %v1_1c6d8 to i32*
  %v3_1c6d8 = load i32, i32* %v2_1c6d8, align 4
  store i32 %v3_1c6d8, i32* %ebp.global-to-local, align 4
  %v1_1c6df = add i32 %v0_1c6d8, 8
  %v2_1c6df = inttoptr i32 %v1_1c6df to i32*
  %v3_1c6df = load i32, i32* %v2_1c6df, align 4
  store i32 %v3_1c6df, i32* %ebx.global-to-local, align 4
  %v1_1c6e2 = add i32 %v0_1c6d8, 24
  %v2_1c6e2 = inttoptr i32 %v1_1c6e2 to i32*
  %v3_1c6e2 = load i32, i32* %v2_1c6e2, align 4
  store i32 %v3_1c6e2, i32* %eax.global-to-local, align 8
  %v1_1c6e9 = add i32 %v0_1c6d8, 16
  %v2_1c6e9 = inttoptr i32 %v1_1c6e9 to i32*
  %v3_1c6e9 = load i32, i32* %v2_1c6e9, align 4
  store i32 %v3_1c6e9, i32* %ebp.global-to-local, align 4
  %tmp55 = urem i32 %v3_1c6df, 2
  %v4_1c6ec = icmp ne i32 %tmp55, 0
  %v1_1c6f0 = add i32 %v0_1c6d8, 20
  %v2_1c6f0 = inttoptr i32 %v1_1c6f0 to i32*
  %v3_1c6f0 = load i32, i32* %v2_1c6f0, align 4
  store i32 %v3_1c6f0, i32* @ebx, align 4
  %v1_1c6f7 = add i32 %v3_1c6e2, 12
  store i32 %v1_1c6f7, i32* %eax.global-to-local, align 8
  store i32 %v1_1c6f7, i32* %v2_1c6e2, align 4
  %v0_1c6fd = load i32, i32* %eax.global-to-local, align 8
  %v1_1c6fd = load i32, i32* @ecx, align 4
  %v12_1c6fd = icmp eq i32 %v0_1c6fd, %v1_1c6fd
  br i1 %v12_1c6fd, label %bb, label %dec_label_pc_1c705

bb:                                               ; preds = %dec_label_pc_1c6cb
  %v2_1c6ff = sext i1 %v4_1c6ec to i32
  %v3_1c6ff = call i32 @function_1cb70(i32 %v2_1c6ff)
  store i32 %v3_1c6ff, i32* %eax.global-to-local, align 8
  %v1_1c70c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1c705

dec_label_pc_1c705:                               ; preds = %bb, %dec_label_pc_1c6cb
  %v1_1c70c = phi i32 [ %v1_1c70c.pre, %bb ], [ %v1_1c6fd, %dec_label_pc_1c6cb ]
  %v0_1c705 = phi i32 [ %v3_1c6ff, %bb ], [ %v0_1c6fd, %dec_label_pc_1c6cb ]
  %v1_1c705 = add i32 %v0_1c705, -12
  store i32 %v1_1c705, i32* %eax.global-to-local, align 8
  store i32 %v3_1c6d8, i32* %ebp.global-to-local, align 4
  %v12_1c70c = icmp eq i32 %v1_1c705, %v1_1c70c
  br i1 %v12_1c70c, label %bb56, label %dec_label_pc_1c718

bb56:                                             ; preds = %dec_label_pc_1c705
  %v2_1c712 = call i32 @function_1cb30(i32 %v1_1c705)
  store i32 %v2_1c712, i32* %eax.global-to-local, align 8
  %v0_1c718.pre = load i32, i32* @ebp, align 4
  %v0_1c724.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1c718

dec_label_pc_1c718:                               ; preds = %bb56, %dec_label_pc_1c705
  %v0_1c724 = phi i32 [ %v0_1c724.pre, %bb56 ], [ %v1_1c70c, %dec_label_pc_1c705 ]
  %v0_1c718 = phi i32 [ %v0_1c718.pre, %bb56 ], [ %v3_1c6d8, %dec_label_pc_1c705 ]
  %v1_1c72c = add i32 %v0_1c705, -24
  store i32 %v1_1c72c, i32* %eax.global-to-local, align 8
  %v4_1c72f = sext i1 %v4_1c6ec to i32
  store i32 %v4_1c72f, i32* %ebp.global-to-local, align 4
  %v0_1c737 = load i32, i32* @edi, align 4
  %v1_1c737 = add i32 %v0_1c737, 12
  %v2_1c737 = inttoptr i32 %v1_1c737 to i32*
  %v3_1c737 = load i32, i32* %v2_1c737, align 4
  store i32 %v3_1c737, i32* %eax.global-to-local, align 8
  %v2_1c73a = sub i32 %v4_1c72f, %v3_1c737
  %v2_1c73c = ashr i32 %v2_1c73a, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1c73f = mul i32 %v2_1c73c, -1431655765
  %v5_1c745 = add i32 %v3_1c73f, %tmp39
  %v16_1c745 = icmp slt i32 %v5_1c745, 0
  store i32 %v5_1c745, i32* @ebp, align 4
  br i1 %v16_1c745, label %bb57, label %dec_label_pc_1c74f

bb57:                                             ; preds = %dec_label_pc_1c718
  %v3_1c749 = call i32 @function_1cb18(i32 %v0_1c724, i32 %v1_1c72c)
  store i32 %v3_1c749, i32* %eax.global-to-local, align 8
  %v0_1c74f.pr = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1c74f

dec_label_pc_1c74f:                               ; preds = %bb57, %dec_label_pc_1c718
  %v0_1c74f = phi i32 [ %v0_1c74f.pr, %bb57 ], [ %v5_1c745, %dec_label_pc_1c718 ]
  %v8_1c752 = icmp sgt i32 %v0_1c74f, 41
  br i1 %v8_1c752, label %bb59, label %dec_label_pc_1c758

bb59:                                             ; preds = %dec_label_pc_1c74f
  %v9_1c752 = call i32 @function_1cac8()
  store i32 %v9_1c752, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c758

dec_label_pc_1c758:                               ; preds = %bb59, %dec_label_pc_1c74f
  store i32 %v3_1c6e9, i32* %edi.global-to-local, align 4
  %v2_1c767 = mul i32 %tmp39, mul (i32 add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1), i32 4)
  %v3_1c767 = add i32 %v4_1c72f, %v2_1c767
  store i32 %v3_1c767, i32* %edx.global-to-local, align 4
  %v0_1c76f = load i32, i32* @ebx, align 4
  %v1_1c76f = load i32, i32* @esi, align 4
  %v2_1c76f = add i32 %v1_1c76f, 12
  %v3_1c76f = inttoptr i32 %v2_1c76f to i32*
  store i32 %v0_1c76f, i32* %v3_1c76f, align 4
  %v0_1c772 = load i32, i32* %edx.global-to-local, align 4
  %v1_1c772 = load i32, i32* @esi, align 4
  %v2_1c772 = inttoptr i32 %v1_1c772 to i32*
  store i32 %v0_1c772, i32* %v2_1c772, align 4
  %v0_1c774 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c774 = load i32, i32* @esi, align 4
  %v2_1c774 = add i32 %v1_1c774, 4
  %v3_1c774 = inttoptr i32 %v2_1c774 to i32*
  store i32 %v0_1c774, i32* %v3_1c774, align 4
  store i32 %v3_1c6d8, i32* %ebp.global-to-local, align 4
  %v0_1c782 = load i32, i32* %edi.global-to-local, align 4
  %v1_1c782 = load i32, i32* @esi, align 4
  %v2_1c782 = add i32 %v1_1c782, 8
  %v3_1c782 = inttoptr i32 %v2_1c782 to i32*
  store i32 %v0_1c782, i32* %v3_1c782, align 4
  %v0_1c797 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_1c797, i32* %stack_var_204, align 4
  %v0_1c7d8 = load i32, i32* %edx.global-to-local, align 4
  %v2_1c7f9 = ptrtoint i32* %stack_var_96 to i32
  store i32 %v0_1c718, i32* %ebp.global-to-local, align 4
  %v0_1c819 = load i32, i32* %eax.global-to-local, align 8
  %v0_1c81d = load i32, i32* @ebx, align 4
  %v2_1c821 = ptrtoint i32* %stack_var_208 to i32
  store i32 %v2_1c821, i32* %ebx.global-to-local, align 4
  %v0_1c828 = load i32, i32* %edi.global-to-local, align 4
  %v5_1c82f = call i32 @unknown_33570(i32 %v2_1c7f9, i32 %v0_1c7d8, i32 %v0_1c819, i32 %v0_1c828, i32 %v0_1c81d)
  %v2_1c837 = ptrtoint i32* %stack_var_204 to i32
  store i32 %v2_1c837, i32* %ebx.global-to-local, align 4
  %v2_1c842 = load i32, i32* @esi, align 4
  store i32 %v2_1c842, i32* @eax, align 8
  %v2_1c847 = call i32 @function_32670(i32 %v2_1c842, i32 %v2_1c837)
  store i32 %v3_1c6d8, i32* %edx.global-to-local, align 4
  %v2_1c850 = load i32, i32* @esi, align 4
  store i32 %v2_1c850, i32* %eax.global-to-local, align 8
  %v3_1c852 = load i32, i32* %stack_var_204, align 4
  store i32 %v3_1c852, i32* %ebx.global-to-local, align 4
  %v2_1c859 = inttoptr i32 %v3_1c6d8 to i32*
  store i32 %v2_1c850, i32* %v2_1c859, align 4
  %v0_1c85b = load i32, i32* @esi, align 4
  %v1_1c85b = add i32 %v0_1c85b, 4
  %v2_1c85b = inttoptr i32 %v1_1c85b to i32*
  %v3_1c85b = load i32, i32* %v2_1c85b, align 4
  store i32 %v3_1c85b, i32* %eax.global-to-local, align 8
  %v1_1c85e = icmp eq i32 %v3_1c852, 0
  %v1_1c860 = load i32, i32* %edx.global-to-local, align 4
  %v2_1c860 = add i32 %v1_1c860, 4
  %v3_1c860 = inttoptr i32 %v2_1c860 to i32*
  store i32 %v3_1c85b, i32* %v3_1c860, align 4
  %v0_1c863 = load i32, i32* @esi, align 4
  %v1_1c863 = add i32 %v0_1c863, 8
  %v2_1c863 = inttoptr i32 %v1_1c863 to i32*
  %v3_1c863 = load i32, i32* %v2_1c863, align 4
  store i32 %v3_1c863, i32* %eax.global-to-local, align 8
  %v1_1c866 = load i32, i32* %edx.global-to-local, align 4
  %v2_1c866 = add i32 %v1_1c866, 8
  %v3_1c866 = inttoptr i32 %v2_1c866 to i32*
  store i32 %v3_1c863, i32* %v3_1c866, align 4
  %v0_1c869 = load i32, i32* @esi, align 4
  %v1_1c869 = add i32 %v0_1c869, 12
  %v2_1c869 = inttoptr i32 %v1_1c869 to i32*
  %v3_1c869 = load i32, i32* %v2_1c869, align 4
  %v1_1c86c = load i32, i32* %edx.global-to-local, align 4
  %v2_1c86c = add i32 %v1_1c86c, 12
  %v3_1c86c = inttoptr i32 %v2_1c86c to i32*
  store i32 %v3_1c869, i32* %v3_1c86c, align 4
  br i1 %v1_1c85e, label %bb61, label %dec_label_pc_1c878

bb61:                                             ; preds = %dec_label_pc_1c758
  %v1_1c876 = call i32 @function_1c88e()
  store i32 %v1_1c876, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1c878

dec_label_pc_1c878:                               ; preds = %bb61, %dec_label_pc_1c758
  %v0_1c878 = phi i32 [ %v1_1c876, %bb61 ], [ %tmp13, %dec_label_pc_1c758 ]
  %v2_1c878 = sub i32 %v0_1c878, %v3_1c852
  store i32 %v2_1c878, i32* %eax.global-to-local, align 8
  ret i32 %v2_1c878

; uselistorder directives
  uselistorder i32 %v1_1c705, { 1, 0, 2 }
  uselistorder i32 %v1_1c70c, { 1, 0 }
  uselistorder i32 %v1_1c6fd, { 1, 0 }
  uselistorder i32 %v0_1c6fd, { 1, 0 }
  uselistorder i32 %v3_1c6d8, { 3, 4, 2, 0, 1, 5 }
  uselistorder i32 %v0_1c6d8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1c6bc, { 1, 0 }
  uselistorder i32 %v1_1c6b9, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1c69d, { 1, 0, 2 }
  uselistorder i32 %v3_1c69a, { 3, 1, 2, 0 }
  uselistorder i32 %tmp39, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 0, 6, 7, 8, 9, 10, 1, 2, 11, 12, 3, 13, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
}

define i32 @function_1c88e() local_unnamed_addr {
dec_label_pc_1c88e:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1c895 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1c895 = icmp eq i32 %v1_1c895, %tmp11
  %v1_1c8a0 = icmp eq i1 %v3_1c895, false
  br i1 %v1_1c8a0, label %bb, label %dec_label_pc_1c8a6

bb:                                               ; preds = %dec_label_pc_1c88e
  %v2_1c8a0 = call i32 @function_1ccbc()
  br label %dec_label_pc_1c8a6

dec_label_pc_1c8a6:                               ; preds = %bb, %dec_label_pc_1c88e
  %v0_1c8b0 = phi i32 [ %v2_1c8a0, %bb ], [ %tmp10, %dec_label_pc_1c88e ]
  ret i32 %v0_1c8b0
}

define i32 @function_1c8b8(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c8b8:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_208 = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v0_1c8b8 = load i32, i32* @edi, align 4
  %v1_1c8b8 = add i32 %v0_1c8b8, 12
  %v2_1c8b8 = inttoptr i32 %v1_1c8b8 to i32*
  %v3_1c8b8 = load i32, i32* %v2_1c8b8, align 4
  store i32 %v3_1c8b8, i32* @eax, align 8
  %v15_1c8bb = icmp eq i32 %tmp6, %v3_1c8b8
  br i1 %v15_1c8bb, label %bb, label %dec_label_pc_1c8c5

bb:                                               ; preds = %dec_label_pc_1c8b8
  %v1_1c8bf = call i32 @function_1cc90()
  store i32 %v1_1c8bf, i32* @eax, align 8
  br label %dec_label_pc_1c8c5

dec_label_pc_1c8c5:                               ; preds = %bb, %dec_label_pc_1c8b8
  %v4_1c8c5 = add i32 %tmp6, -12
  %v13_1c8c5 = icmp eq i32 %v4_1c8c5, 0
  br i1 %v13_1c8c5, label %bb8, label %dec_label_pc_1c8d0

bb8:                                              ; preds = %dec_label_pc_1c8c5
  %v1_1c8ca = call i32 @function_1cc27()
  store i32 %v1_1c8ca, i32* @eax, align 8
  br label %dec_label_pc_1c8d0

dec_label_pc_1c8d0:                               ; preds = %bb8, %dec_label_pc_1c8c5
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %ebp.global-to-local, align 4
  %v2_1c8d8 = load i32, i32* %arg1, align 4
  store i32 %v2_1c8d8, i32* %ebx.global-to-local, align 4
  %v2_1c8da = inttoptr i32 %v4_1c8c5 to i32*
  store i32 0, i32* %v2_1c8da, align 4
  %v0_1c8e1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1c8e1 = add i32 %v0_1c8e1, -8
  %v2_1c8e1 = inttoptr i32 %v1_1c8e1 to i32*
  store i32 0, i32* %v2_1c8e1, align 4
  %v0_1c8e8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1c8e8 = add i32 %v0_1c8e8, -4
  %v2_1c8e8 = inttoptr i32 %v1_1c8e8 to i32*
  store i32 0, i32* %v2_1c8e8, align 4
  %v0_1c8ef = load i32, i32* %ebx.global-to-local, align 4
  %v0_1c8f3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1c8f3 = add i32 %v0_1c8f3, 4
  %v2_1c8f3 = inttoptr i32 %v1_1c8f3 to i32*
  %v3_1c8f3 = load i32, i32* %v2_1c8f3, align 4
  store i32 %v3_1c8f3, i32* @ebx, align 4
  %v5_1c8f8 = sub i32 %v3_1c8f3, %v0_1c8ef
  %v15_1c8f8 = icmp eq i32 %v5_1c8f8, 0
  store i32 %v5_1c8f8, i32* @ebp, align 4
  br i1 %v15_1c8f8, label %bb9, label %dec_label_pc_1c8d0.dec_label_pc_1c906_crit_edge

dec_label_pc_1c8d0.dec_label_pc_1c906_crit_edge:  ; preds = %dec_label_pc_1c8d0
  %v3_1c909.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1c906

bb9:                                              ; preds = %dec_label_pc_1c8d0
  %v2_1c900 = call i32 @function_1cc2e(i32 %v0_1c8ef)
  br label %dec_label_pc_1c906

dec_label_pc_1c906:                               ; preds = %dec_label_pc_1c8d0.dec_label_pc_1c906_crit_edge, %bb9
  %v3_1c909 = phi i32 [ %v3_1c909.pre, %dec_label_pc_1c8d0.dec_label_pc_1c906_crit_edge ], [ %v2_1c900, %bb9 ]
  %v2_1c909 = ptrtoint i32* %stack_var_208 to i32
  store i32 %v2_1c909, i32* %ebx.global-to-local, align 4
  ret i32 %v3_1c909

; uselistorder directives
  uselistorder i32 %tmp6, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1c906, { 1, 0 }
}

define i32 @function_1c924() local_unnamed_addr {
dec_label_pc_1c924:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_1c92c = load i32, i32* @ebp, align 4
  %v2_1c92c = add i32 %v1_1c92c, %tmp7
  store i32 %v2_1c92c, i32* %eax.global-to-local, align 8
  %v0_1c92e = load i32, i32* @ebx, align 4
  %v15_1c92e = icmp eq i32 %v0_1c92e, %tmp
  %v2_1c932 = add i32 %tmp6, -12
  %v3_1c932 = inttoptr i32 %v2_1c932 to i32*
  store i32 %v1_1c92c, i32* %v3_1c932, align 4
  %v0_1c935 = load i32, i32* @ebp, align 4
  %v1_1c935 = load i32, i32* @ecx, align 4
  %v2_1c935 = add i32 %v1_1c935, -8
  %v3_1c935 = inttoptr i32 %v2_1c935 to i32*
  store i32 %v0_1c935, i32* %v3_1c935, align 4
  %v0_1c938 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c938 = load i32, i32* @ecx, align 4
  %v2_1c938 = add i32 %v1_1c938, -4
  %v3_1c938 = inttoptr i32 %v2_1c938 to i32*
  store i32 %v0_1c938, i32* %v3_1c938, align 4
  br i1 %v15_1c92e, label %dec_label_pc_1c924.dec_label_pc_1c961_crit_edge, label %dec_label_pc_1c93d

dec_label_pc_1c924.dec_label_pc_1c961_crit_edge:  ; preds = %dec_label_pc_1c924
  %v0_1c96b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1c961

dec_label_pc_1c93d:                               ; preds = %dec_label_pc_1c924
  %v0_1c941 = load i32, i32* @ebp, align 4
  store i32 %v0_1c941, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1c948

dec_label_pc_1c948:                               ; preds = %dec_label_pc_1c951, %dec_label_pc_1c93d
  %v0_1c94c = phi i32 [ %v1_1c951, %dec_label_pc_1c951 ], [ %tmp, %dec_label_pc_1c93d ]
  %v2_1c94f = phi i32 [ %v1_1c954, %dec_label_pc_1c951 ], [ %v0_1c941, %dec_label_pc_1c93d ]
  %v1_1c948 = icmp eq i32 %v2_1c94f, 0
  br i1 %v1_1c948, label %dec_label_pc_1c951, label %dec_label_pc_1c94c

dec_label_pc_1c94c:                               ; preds = %dec_label_pc_1c948
  %v1_1c94c = inttoptr i32 %v0_1c94c to i8*
  %v2_1c94c = load i8, i8* %v1_1c94c, align 1
  %v3_1c94c = zext i8 %v2_1c94c to i32
  store i32 %v3_1c94c, i32* @ecx, align 4
  %v3_1c94f = inttoptr i32 %v2_1c94f to i8*
  store i8 %v2_1c94c, i8* %v3_1c94f, align 1
  %v0_1c951.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_1c954.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1c951

dec_label_pc_1c951:                               ; preds = %dec_label_pc_1c94c, %dec_label_pc_1c948
  %v0_1c954 = phi i32 [ %v0_1c954.pre, %dec_label_pc_1c94c ], [ 0, %dec_label_pc_1c948 ]
  %v0_1c951 = phi i32 [ %v0_1c951.pre, %dec_label_pc_1c94c ], [ %v0_1c94c, %dec_label_pc_1c948 ]
  %v1_1c951 = add i32 %v0_1c951, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c951, i32* %eax.global-to-local, align 8
  %v1_1c954 = add i32 %v0_1c954, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1c954, i32* %edx.global-to-local, align 4
  %v1_1c957 = load i32, i32* @ebx, align 4
  %v12_1c957 = icmp eq i32 %v1_1c951, %v1_1c957
  %v1_1c959 = icmp eq i1 %v12_1c957, false
  br i1 %v1_1c959, label %dec_label_pc_1c948, label %dec_label_pc_1c95b

dec_label_pc_1c95b:                               ; preds = %dec_label_pc_1c951
  %v5_1c95b = sub i32 %v1_1c951, %tmp
  store i32 %v5_1c95b, i32* %eax.global-to-local, align 8
  %v0_1c95f = load i32, i32* @ebp, align 4
  %v2_1c95f = add i32 %v0_1c95f, %v5_1c95b
  br label %dec_label_pc_1c961

dec_label_pc_1c961:                               ; preds = %dec_label_pc_1c924.dec_label_pc_1c961_crit_edge, %dec_label_pc_1c95b
  %v0_1c96b = phi i32 [ %v0_1c96b.pre, %dec_label_pc_1c924.dec_label_pc_1c961_crit_edge ], [ %v2_1c95f, %dec_label_pc_1c95b ]
  %v0_1c965 = load i32, i32* @edi, align 4
  %v1_1c965 = add i32 %v0_1c965, 8
  %v2_1c965 = inttoptr i32 %v1_1c965 to i32*
  %v3_1c965 = load i32, i32* %v2_1c965, align 4
  store i32 %v3_1c965, i32* %edx.global-to-local, align 4
  %v1_1c968 = add i32 %v0_1c965, 12
  %v2_1c968 = inttoptr i32 %v1_1c968 to i32*
  %v3_1c968 = load i32, i32* %v2_1c968, align 4
  store i32 %v3_1c968, i32* %eax.global-to-local, align 8
  %v2_1c96b = add i32 %tmp6, -8
  %v3_1c96b = inttoptr i32 %v2_1c96b to i32*
  store i32 %v0_1c96b, i32* %v3_1c96b, align 4
  %v0_1c96e = load i32, i32* @edi, align 4
  %v1_1c96e = add i32 %v0_1c96e, 16
  %v2_1c96e = inttoptr i32 %v1_1c96e to i32*
  %v3_1c96e = load i32, i32* %v2_1c96e, align 4
  store i32 %v3_1c96e, i32* @ebp, align 4
  %v0_1c974 = load i32, i32* %edx.global-to-local, align 4
  %v1_1c974 = add i32 %v0_1c974, -12
  store i32 %v1_1c974, i32* %edx.global-to-local, align 4
  %v4_1c977 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_1c977

; uselistorder directives
  uselistorder i32 %v1_1c954, { 1, 0 }
  uselistorder i32 %v1_1c951, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1c92c, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 -8, { 24, 25, 27, 26, 28, 30, 29, 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35 }
  uselistorder label %dec_label_pc_1c961, { 1, 0 }
}

define i32 @function_1c96a() local_unnamed_addr {
dec_label_pc_1c96a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c97b() local_unnamed_addr {
dec_label_pc_1c97b:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %stack_var_144 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %v0_1c97b = load i32, i32* @edx, align 4
  %v1_1c97b = load i32, i32* @edi, align 4
  %v2_1c97b = add i32 %v1_1c97b, 8
  %v3_1c97b = inttoptr i32 %v2_1c97b to i32*
  store i32 %v0_1c97b, i32* %v3_1c97b, align 4
  %v0_1c97e = load i32, i32* @edx, align 4
  %v1_1c97e = add i32 %v0_1c97e, 12
  store i32 %v1_1c97e, i32* @ebp, align 4
  %v15_1c981 = icmp eq i32 %v1_1c97e, %tmp36
  br i1 %v15_1c981, label %bb, label %dec_label_pc_1c97b.dec_label_pc_1c98b_crit_edge

dec_label_pc_1c97b.dec_label_pc_1c98b_crit_edge:  ; preds = %dec_label_pc_1c97b
  %v0_1c993.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1c98b

bb:                                               ; preds = %dec_label_pc_1c97b
  %v1_1c985 = call i32 @function_1cbf3()
  store i32 %v1_1c985, i32* @eax, align 8
  %v0_1c99f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1c98b

dec_label_pc_1c98b:                               ; preds = %dec_label_pc_1c97b.dec_label_pc_1c98b_crit_edge, %bb
  %v0_1c99f = phi i32 [ %v1_1c97e, %dec_label_pc_1c97b.dec_label_pc_1c98b_crit_edge ], [ %v0_1c99f.pre, %bb ]
  %v0_1c993 = phi i32 [ %v0_1c993.pre, %dec_label_pc_1c97b.dec_label_pc_1c98b_crit_edge ], [ %v1_1c985, %bb ]
  %v0_1c98f = load i32, i32* @ebx, align 4
  %v1_1c99f = add i32 %v0_1c99f, 12
  %v12_1c9a6 = icmp eq i32 %v1_1c99f, %tmp36
  br i1 %v12_1c9a6, label %bb39, label %dec_label_pc_1c9ae

bb39:                                             ; preds = %dec_label_pc_1c98b
  %v4_1c9a8 = call i32 @function_1cbc6(i32 %v1_1c99f, i32 %tmp36, i32 %v0_1c98f)
  store i32 %v4_1c9a8, i32* @eax, align 8
  br label %dec_label_pc_1c9ae

dec_label_pc_1c9ae:                               ; preds = %bb39, %dec_label_pc_1c98b
  %v1_1c9c8 = phi i32 [ %v4_1c9a8, %bb39 ], [ %v0_1c993, %dec_label_pc_1c98b ]
  %v0_1c9c6 = load i32, i32* @edx, align 4
  %v2_1c9c8 = sub i32 %v0_1c9c6, %v1_1c9c8
  %v2_1c9ca = ashr i32 %v2_1c9c8, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1c9cd = mul i32 %v2_1c9ca, -1431655765
  %v5_1c9d3 = add i32 %v3_1c9cd, %tmp28
  %v16_1c9d3 = icmp slt i32 %v5_1c9d3, 0
  store i32 %v5_1c9d3, i32* @ecx, align 4
  br i1 %v16_1c9d3, label %bb40, label %dec_label_pc_1c9dd

bb40:                                             ; preds = %dec_label_pc_1c9ae
  %v2_1c9d7 = call i32 @function_1cc35(i32 %v0_1c993)
  store i32 %v2_1c9d7, i32* @eax, align 8
  %v0_1c9dd.pr = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1c9dd

dec_label_pc_1c9dd:                               ; preds = %bb40, %dec_label_pc_1c9ae
  %v0_1c9dd = phi i32 [ %v0_1c9dd.pr, %bb40 ], [ %v5_1c9d3, %dec_label_pc_1c9ae ]
  %v8_1c9e0 = icmp sgt i32 %v0_1c9dd, 41
  br i1 %v8_1c9e0, label %bb42, label %dec_label_pc_1c9e6

bb42:                                             ; preds = %dec_label_pc_1c9dd
  %v9_1c9e0 = call i32 @function_1cb90()
  store i32 %v9_1c9e0, i32* @eax, align 8
  br label %dec_label_pc_1c9e6

dec_label_pc_1c9e6:                               ; preds = %bb42, %dec_label_pc_1c9dd
  %v0_1c9f1 = load i32, i32* @edx, align 4
  %v2_1c9f1 = mul i32 %tmp28, mul (i32 add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1), i32 4)
  %v3_1c9f1 = add i32 %v0_1c9f1, %v2_1c9f1
  store i32 %v3_1c9f1, i32* %edx.global-to-local, align 4
  %v1_1c9f4 = load i32, i32* @esi, align 4
  %v2_1c9f4 = inttoptr i32 %v1_1c9f4 to i32*
  store i32 %v3_1c9f1, i32* %v2_1c9f4, align 4
  %v0_1c9f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_1c9f6 = add i32 %v0_1c9f6, 12
  store i32 %v1_1c9f6, i32* @edx, align 4
  %v0_1c9f9 = load i32, i32* @ebx, align 4
  store i32 %v0_1c9f9, i32* @ecx, align 4
  %v1_1c9fb = load i32, i32* @edi, align 4
  %v12_1c9fb = icmp eq i32 %v1_1c9f6, %v1_1c9fb
  %v0_1c9fd = load i32, i32* @eax, align 8
  %v1_1c9fd = load i32, i32* @esi, align 4
  %v2_1c9fd = add i32 %v1_1c9fd, 4
  %v3_1c9fd = inttoptr i32 %v2_1c9fd to i32*
  store i32 %v0_1c9fd, i32* %v3_1c9fd, align 4
  %v0_1ca00 = load i32, i32* @edi, align 4
  %v1_1ca00 = load i32, i32* @esi, align 4
  %v2_1ca00 = add i32 %v1_1ca00, 8
  %v3_1ca00 = inttoptr i32 %v2_1ca00 to i32*
  store i32 %v0_1ca00, i32* %v3_1ca00, align 4
  %v0_1ca03 = load i32, i32* @ebx, align 4
  %v1_1ca03 = load i32, i32* @esi, align 4
  %v2_1ca03 = add i32 %v1_1ca03, 12
  %v3_1ca03 = inttoptr i32 %v2_1ca03 to i32*
  store i32 %v0_1ca03, i32* %v3_1ca03, align 4
  br i1 %v12_1c9fb, label %bb43, label %dec_label_pc_1c9e6.dec_label_pc_1ca0c_crit_edge

dec_label_pc_1c9e6.dec_label_pc_1ca0c_crit_edge:  ; preds = %dec_label_pc_1c9e6
  %v0_1ca9f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1ca0c

bb43:                                             ; preds = %dec_label_pc_1c9e6
  %v1_1ca06 = call i32 @function_1cc14()
  br label %dec_label_pc_1ca0c

dec_label_pc_1ca0c:                               ; preds = %dec_label_pc_1c9e6.dec_label_pc_1ca0c_crit_edge, %bb43
  %v0_1ca9f = phi i32 [ %v0_1ca9f.pre, %dec_label_pc_1c9e6.dec_label_pc_1ca0c_crit_edge ], [ %v1_1ca06, %bb43 ]
  %v0_1ca10 = load i32, i32* @ebp, align 4
  store i32 %v0_1ca10, i32* %stack_var_144, align 4
  %v0_1ca22 = load i32, i32* @edi, align 4
  %v0_1ca47 = load i32, i32* @ecx, align 4
  store i32 %v0_1c993, i32* @ecx, align 4
  store i32 %v0_1c98f, i32* @edi, align 4
  %v2_1ca7d = ptrtoint i32* %stack_var_96 to i32
  %v0_1ca88 = load i32, i32* @edx, align 4
  %v2_1ca90 = ptrtoint i32* %stack_var_144 to i32
  %v10_1cab9 = call i32 @unknown_33880(i32 %v2_1ca7d, i32 %v1_1c99f, i32 %v0_1c993, i32 %tmp36, i32 %v0_1c98f, i32 %v0_1ca88, i32 %v0_1ca9f, i32 %v0_1ca22, i32 %v0_1ca47, i32 %v2_1ca90)
  ret i32 %v10_1cab9

; uselistorder directives
  uselistorder i32 %v1_1c99f, { 1, 2, 0 }
  uselistorder i32 %v0_1c993, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1c97e, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 2, 3, 0, 1 }
  uselistorder i32 %tmp28, { 1, 0 }
  uselistorder i32 41, { 5, 6, 7, 8, 10, 9, 12, 11, 0, 1, 2, 3, 4 }
  uselistorder i32 -1431655765, { 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 0, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 21, 22, 23 }
  uselistorder label %dec_label_pc_1ca0c, { 1, 0 }
  uselistorder label %dec_label_pc_1c98b, { 1, 0 }
}

define i32 @function_1cac8() local_unnamed_addr {
dec_label_pc_1cac8:
  %v0_1cac8 = load i32, i32* @ebp, align 4
  %tmp = icmp slt i32 %v0_1cac8, 1
  br i1 %tmp, label %bb, label %dec_label_pc_1cacc

bb:                                               ; preds = %dec_label_pc_1cac8
  %v7_1caca = call i32 @function_1cb18(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v0_1cacc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1cacc

dec_label_pc_1cacc:                               ; preds = %bb, %dec_label_pc_1cac8
  %v0_1cae7 = phi i32 [ %v0_1cacc.pre, %bb ], [ %v0_1cac8, %dec_label_pc_1cac8 ]
  %v3_1cad3 = sext i32 %v0_1cae7 to i64
  %v4_1cad3 = mul nsw i64 %v3_1cad3, 818089009
  %v6_1cad3 = udiv i64 %v4_1cad3, 4294967296
  %v7_1cad3 = trunc i64 %v6_1cad3 to i32
  %v2_1cad7 = ashr i32 %v0_1cae7, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_1cada = sdiv i32 %v7_1cad3, 8
  %v2_1cadd = sub i32 %v2_1cada, %v2_1cad7
  %v0_1cadf = load i32, i32* @ebx, align 4
  %v2_1cadf = mul i32 %v2_1cadd, 4
  %v3_1cadf = add i32 %v2_1cadf, %v0_1cadf
  store i32 %v3_1cadf, i32* @ebx, align 4
  %v1_1cae5 = inttoptr i32 %v3_1cadf to i32*
  %v2_1cae5 = load i32, i32* %v1_1cae5, align 4
  ret i32 %v2_1cae5

; uselistorder directives
  uselistorder i32 %v0_1cac8, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1cb18, { 1, 0 }
}

define i32 @function_1cb00(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cb00:
  %v1_1cb08 = call i32 @function_1c685(i32 0)
  ret i32 %v1_1cb08
}

define i32 @function_1cb10() local_unnamed_addr {
dec_label_pc_1cb10:
  ret i32 0
}

define i32 @function_1cb18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cb18:
  ret i32 undef
}

define i32 @function_1cb30(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cb30:
  %v1_1cb3b = add i32 %arg1, -4
  %v2_1cb3b = inttoptr i32 %v1_1cb3b to i32*
  %v3_1cb3b = load i32, i32* %v2_1cb3b, align 4
  store i32 %v3_1cb3b, i32* @ebp, align 4
  %v1_1cb40 = add i32 %v3_1cb3b, 504
  ret i32 %v1_1cb40
}

define i32 @function_1cb58() local_unnamed_addr {
dec_label_pc_1cb58:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_1cb5c = add i32 %tmp1, -4
  %v2_1cb5c = inttoptr i32 %v1_1cb5c to i32*
  %v3_1cb5c = load i32, i32* %v2_1cb5c, align 4
  %v1_1cb5f = add i32 %v3_1cb5c, 504
  ret i32 %v1_1cb5f
}

define i32 @function_1cb70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cb70:
  %v1_1cb74 = add i32 %arg1, -4
  %v2_1cb74 = inttoptr i32 %v1_1cb74 to i32*
  %v3_1cb74 = load i32, i32* %v2_1cb74, align 4
  store i32 %v3_1cb74, i32* @ecx, align 4
  %v1_1cb7e = add i32 %v3_1cb74, 504
  ret i32 %v1_1cb7e
}

define i32 @function_1cb90() local_unnamed_addr {
dec_label_pc_1cb90:
  %v0_1cb90 = load i32, i32* @ecx, align 4
  %tmp = icmp slt i32 %v0_1cb90, 1
  br i1 %tmp, label %bb, label %dec_label_pc_1cb98

bb:                                               ; preds = %dec_label_pc_1cb90
  %v6_1cb92 = call i32 @function_1cc35(i32 ptrtoint (i32* @1 to i32))
  %v0_1cb98.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1cb98

dec_label_pc_1cb98:                               ; preds = %bb, %dec_label_pc_1cb90
  %v0_1cbb3 = phi i32 [ %v0_1cb98.pre, %bb ], [ %v0_1cb90, %dec_label_pc_1cb90 ]
  %v3_1cb9f = sext i32 %v0_1cbb3 to i64
  %v4_1cb9f = mul nsw i64 %v3_1cb9f, 818089009
  %v6_1cb9f = udiv i64 %v4_1cb9f, 4294967296
  %v7_1cb9f = trunc i64 %v6_1cb9f to i32
  %v2_1cba3 = ashr i32 %v0_1cbb3, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_1cba6 = sdiv i32 %v7_1cb9f, 8
  %v2_1cba9 = sub i32 %v2_1cba6, %v2_1cba3
  %v0_1cbab = load i32, i32* @ebx, align 4
  %v2_1cbab = mul i32 %v2_1cba9, 4
  %v3_1cbab = add i32 %v2_1cbab, %v0_1cbab
  store i32 %v3_1cbab, i32* @ebx, align 4
  %v1_1cbb1 = inttoptr i32 %v3_1cbab to i32*
  %v2_1cbb1 = load i32, i32* %v1_1cbb1, align 4
  %tmp2 = mul i32 %v2_1cba9, -42
  %v2_1cbb3 = add i32 %v0_1cbb3, %tmp2
  %v2_1cbbe = mul i32 %v2_1cbb3, 12
  %v3_1cbbe = add i32 %v2_1cbbe, %v2_1cbb1
  store i32 %v3_1cbbe, i32* @edx, align 4
  ret i32 %v2_1cbb1

; uselistorder directives
  uselistorder i32 %v2_1cbb1, { 1, 0 }
  uselistorder i32 %v0_1cb90, { 1, 0 }
  uselistorder i32 -42, { 0, 3, 4, 1, 5, 2 }
  uselistorder i64 818089009, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_1cc35, { 1, 0 }
}

define i32 @function_1cbc6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cbc6:
  %v0_1cbee = load i32, i32* @eax, align 8
  ret i32 %v0_1cbee
}

define i32 @function_1cbf3() local_unnamed_addr {
dec_label_pc_1cbf3:
  %v0_1cbf3 = load i32, i32* @ebx, align 4
  %v1_1cbf3 = add i32 %v0_1cbf3, 4
  %v2_1cbf3 = inttoptr i32 %v1_1cbf3 to i32*
  %v3_1cbf3 = load i32, i32* %v2_1cbf3, align 4
  store i32 %v3_1cbf3, i32* @ebp, align 4
  %v0_1cc0f = load i32, i32* @eax, align 8
  ret i32 %v0_1cc0f
}

define i32 @function_1cc14() local_unnamed_addr {
dec_label_pc_1cc14:
  %v0_1cc14 = load i32, i32* @ebx, align 4
  %v1_1cc14 = add i32 %v0_1cc14, 4
  %v2_1cc14 = inttoptr i32 %v1_1cc14 to i32*
  %v3_1cc14 = load i32, i32* %v2_1cc14, align 4
  store i32 %v1_1cc14, i32* @ecx, align 4
  %v1_1cc1a = add i32 %v3_1cc14, 504
  store i32 %v1_1cc1a, i32* @edi, align 4
  store i32 %v3_1cc14, i32* @edx, align 4
  ret i32 %v3_1cc14
}

define i32 @function_1cc27() local_unnamed_addr {
dec_label_pc_1cc27:
  store i32 0, i32* @edx, align 4
  %v0_1cc29 = call i32 @function_1c97b()
  ret i32 %v0_1cc29
}

define i32 @function_1cc2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc2e:
  store i32 0, i32* @ebp, align 4
  %v0_1cc30 = call i32 @function_1c924()
  ret i32 %v0_1cc30
}

define i32 @function_1cc35(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc35:
  store i32 -1, i32* @edx, align 4
  ret i32 undef
}

define i32 @function_1cc4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc4c:
  %v0_1cc57 = load i32, i32* @edi, align 4
  %v1_1cc5a = add i32 %arg1, -12
  %v2_1cc61 = call i32 @unknown_38860(i32 %v0_1cc57, i32 %v1_1cc5a)
  %v0_1cc66 = load i32, i32* @edi, align 4
  %v1_1cc6c = add i32 %v0_1cc66, 24
  %v2_1cc6c = inttoptr i32 %v1_1cc6c to i32*
  %v3_1cc6c = load i32, i32* %v2_1cc6c, align 4
  %v1_1cc7d = add i32 %v0_1cc66, 16
  %v2_1cc7d = inttoptr i32 %v1_1cc7d to i32*
  %v3_1cc7d = load i32, i32* %v2_1cc7d, align 4
  store i32 %v3_1cc7d, i32* @ebp, align 4
  ret i32 %v3_1cc6c
}

define i32 @function_1cc90() local_unnamed_addr {
dec_label_pc_1cc90:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1cc94 = load i32, i32* @edi, align 4
  %v2_1cca2 = call i32 @unknown_386e0(i32 %v0_1cc94, i32 %tmp4)
  %v0_1cca7 = load i32, i32* @edi, align 4
  %v1_1ccad = add i32 %v0_1cca7, 12
  %v2_1ccad = inttoptr i32 %v1_1ccad to i32*
  %v3_1ccad = load i32, i32* %v2_1ccad, align 4
  %v1_1ccb0 = add i32 %v0_1cca7, 20
  %v2_1ccb0 = inttoptr i32 %v1_1ccb0 to i32*
  %v3_1ccb0 = load i32, i32* %v2_1ccb0, align 4
  store i32 %v3_1ccb0, i32* @ebx, align 4
  ret i32 %v3_1ccad

; uselistorder directives
  uselistorder i32 %v0_1cca7, { 1, 0 }
}

define i32 @function_1ccbc() local_unnamed_addr {
dec_label_pc_1ccbc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cce0:
  %stack_var_-48 = alloca i32, align 4
  %tmp123 = ptrtoint i32* %arg3 to i32
  store i32 %arg2, i32* @esi, align 4
  %v0_1ccf3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1cd00 = load i32, i32* %arg3, align 4
  store i32 %v2_1cd00, i32* @ebx, align 4
  %v2_1cd02 = add i32 %arg2, 8
  %v3_1cd02 = inttoptr i32 %v2_1cd02 to i32*
  %v4_1cd02 = load i32, i32* %v3_1cd02, align 4
  %v15_1cd02 = icmp eq i32 %v2_1cd00, %v4_1cd02
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v15_1cd02, label %bb, label %dec_label_pc_1cd1b

bb:                                               ; preds = %dec_label_pc_1cce0
  %v2_1cd15 = call i32 @function_1ce48(i32 %v0_1ccf3)
  %v1_1cd1b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1cd1b

dec_label_pc_1cd1b:                               ; preds = %bb, %dec_label_pc_1cce0
  %v0_1cd20 = phi i32 [ %v2_1cd15, %bb ], [ %tmp123, %dec_label_pc_1cce0 ]
  %v0_1cd80 = phi i32 [ %v1_1cd1b.pre, %bb ], [ %arg2, %dec_label_pc_1cce0 ]
  %v2_1cd1b = add i32 %v0_1cd80, 24
  %v3_1cd1b = inttoptr i32 %v2_1cd1b to i32*
  %v4_1cd1b = load i32, i32* %v3_1cd1b, align 4
  %v15_1cd1b = icmp eq i32 %v2_1cd00, %v4_1cd1b
  br i1 %v15_1cd1b, label %dec_label_pc_1cd80, label %dec_label_pc_1cd20

dec_label_pc_1cd20:                               ; preds = %dec_label_pc_1cd1b
  store i32 %v2_1cd00, i32* %stack_var_-48, align 4
  %v1_1cd2e = add i32 %v0_1cd20, 12
  %v2_1cd2e = inttoptr i32 %v1_1cd2e to i32*
  %v3_1cd2e = load i32, i32* %v2_1cd2e, align 4
  %v2_1cd41 = ptrtoint i32* %stack_var_-48 to i32
  %v0_1cd49 = load i32, i32* @edi, align 4
  %v3_1cd4c = call i32 @unknown_391b0(i32 %v0_1cd49, i32 %v0_1cd80, i32 %v2_1cd41)
  %v1_1cd58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1cd58 = icmp eq i32 %v1_1cd58, %v3_1cd2e
  %v0_1cd5f = load i32, i32* @edi, align 4
  store i32 %v0_1cd5f, i32* @eax, align 8
  %v1_1cd61 = icmp eq i1 %v3_1cd58, false
  br i1 %v1_1cd61, label %bb125, label %dec_label_pc_1cd67

bb125:                                            ; preds = %dec_label_pc_1cd20
  %v2_1cd61 = call i32 @function_1cec3()
  br label %dec_label_pc_1cd67

dec_label_pc_1cd67:                               ; preds = %bb125, %dec_label_pc_1cd20
  %v0_1cd7a = phi i32 [ %v2_1cd61, %bb125 ], [ %v0_1cd5f, %dec_label_pc_1cd20 ]
  ret i32 %v0_1cd7a

dec_label_pc_1cd80:                               ; preds = %dec_label_pc_1cd1b
  %v1_1cd80 = add i32 %v0_1cd80, 32
  %v2_1cd80 = inttoptr i32 %v1_1cd80 to i32*
  %v3_1cd80 = load i32, i32* %v2_1cd80, align 4
  store i32 %v3_1cd80, i32* @eax, align 8
  %v1_1cd83 = add i32 %v3_1cd80, -12
  %v12_1cd86 = icmp eq i32 %v2_1cd00, %v1_1cd83
  br i1 %v12_1cd86, label %bb127, label %dec_label_pc_1cd8e

bb127:                                            ; preds = %dec_label_pc_1cd80
  %v1_1cd88 = call i32 @function_1ce98()
  store i32 %v1_1cd88, i32* @eax, align 8
  br label %dec_label_pc_1cd8e

dec_label_pc_1cd8e:                               ; preds = %bb127, %dec_label_pc_1cd80
  %v1_1cd8e = icmp eq i32 %v2_1cd00, 0
  br i1 %v1_1cd8e, label %bb128, label %dec_label_pc_1cd96

bb128:                                            ; preds = %dec_label_pc_1cd8e
  %v1_1cd90 = call i32 @function_1ce20()
  store i32 %v1_1cd90, i32* @eax, align 8
  br label %dec_label_pc_1cd96

dec_label_pc_1cd96:                               ; preds = %bb128, %dec_label_pc_1cd8e
  %v0_1cd96 = load i32, i32* @ebp, align 4
  %v1_1cd96 = add i32 %v0_1cd96, 4
  %v2_1cd96 = inttoptr i32 %v1_1cd96 to i32*
  %v3_1cd96 = load i32, i32* %v2_1cd96, align 4
  %v2_1cd99 = inttoptr i32 %v0_1cd96 to i32*
  %v3_1cd99 = load i32, i32* %v2_1cd99, align 4
  %v4_1cd99 = sub i32 %v3_1cd96, %v3_1cd99
  %v14_1cd99 = icmp eq i32 %v4_1cd99, 0
  store i32 %v4_1cd99, i32* @edx, align 4
  %v1_1cda4 = inttoptr i32 %v2_1cd00 to i32*
  store i32 0, i32* %v1_1cda4, align 4
  %v1_1cdac = add i32 %v2_1cd00, 4
  %v2_1cdac = inttoptr i32 %v1_1cdac to i32*
  store i32 0, i32* %v2_1cdac, align 4
  %v1_1cdb3 = add i32 %v2_1cd00, 8
  %v2_1cdb3 = inttoptr i32 %v1_1cdb3 to i32*
  store i32 0, i32* %v2_1cdb3, align 4
  br i1 %v14_1cd99, label %bb129, label %dec_label_pc_1cd96.dec_label_pc_1cdbc_crit_edge

dec_label_pc_1cd96.dec_label_pc_1cdbc_crit_edge:  ; preds = %dec_label_pc_1cd96
  %v4_1cdbf.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1cdbc

bb129:                                            ; preds = %dec_label_pc_1cd96
  %v2_1cdba = call i32 @function_1cdd0(i32 0)
  br label %dec_label_pc_1cdbc

dec_label_pc_1cdbc:                               ; preds = %dec_label_pc_1cd96.dec_label_pc_1cdbc_crit_edge, %bb129
  %v4_1cdbf = phi i32 [ %v4_1cdbf.pre, %dec_label_pc_1cd96.dec_label_pc_1cdbc_crit_edge ], [ %v2_1cdba, %bb129 ]
  ret i32 %v4_1cdbf

; uselistorder directives
  uselistorder i32 %v2_1cd00, { 4, 5, 6, 7, 0, 3, 1, 2, 8 }
  uselistorder label %dec_label_pc_1cdbc, { 1, 0 }
}

define i32 @function_1cdd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cdd0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = urem i32 %arg1, 2
  %tmp11 = icmp ne i32 %tmp10, 0
  %v4_1cdd0 = sext i1 %tmp11 to i32
  store i32 %v4_1cdd0, i32* %eax.global-to-local, align 8
  %v0_1cdd4 = load i32, i32* @edx, align 4
  %v2_1cdd4 = add i32 %v0_1cdd4, %v4_1cdd0
  store i32 %v2_1cdd4, i32* %edx.global-to-local, align 4
  %v1_1cdd6 = load i32, i32* @ebx, align 4
  %v2_1cdd6 = inttoptr i32 %v1_1cdd6 to i32*
  store i32 %v4_1cdd0, i32* %v2_1cdd6, align 4
  %v0_1cdd8 = load i32, i32* %eax.global-to-local, align 8
  %v1_1cdd8 = load i32, i32* @ebx, align 4
  %v2_1cdd8 = add i32 %v1_1cdd8, 4
  %v3_1cdd8 = inttoptr i32 %v2_1cdd8 to i32*
  store i32 %v0_1cdd8, i32* %v3_1cdd8, align 4
  %v0_1cddb = load i32, i32* %edx.global-to-local, align 4
  %v1_1cddb = load i32, i32* @ebx, align 4
  %v2_1cddb = add i32 %v1_1cddb, 8
  %v3_1cddb = inttoptr i32 %v2_1cddb to i32*
  store i32 %v0_1cddb, i32* %v3_1cddb, align 4
  %v0_1cdde = load i32, i32* @ebp, align 4
  %v1_1cdde = add i32 %v0_1cdde, 4
  %v2_1cdde = inttoptr i32 %v1_1cdde to i32*
  %v3_1cdde = load i32, i32* %v2_1cdde, align 4
  %v12_1cde4 = icmp eq i32 %v3_1cdde, %v0_1cdde
  br i1 %v12_1cde4, label %dec_label_pc_1ce13, label %dec_label_pc_1cdec

dec_label_pc_1cdec:                               ; preds = %dec_label_pc_1cdd0
  store i32 %v4_1cdd0, i32* %edx.global-to-local, align 4
  store i32 %v0_1cdde, i32* %eax.global-to-local, align 8
  store i32 %v3_1cdde, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1cdf8

dec_label_pc_1cdf8:                               ; preds = %dec_label_pc_1ce01, %dec_label_pc_1cdec
  %v1_1ce076 = phi i32 [ %v1_1ce07, %dec_label_pc_1ce01 ], [ %v3_1cdde, %dec_label_pc_1cdec ]
  %v0_1cdfc = phi i32 [ %v1_1ce01, %dec_label_pc_1ce01 ], [ %v0_1cdde, %dec_label_pc_1cdec ]
  %v2_1cdff = phi i32 [ %v1_1ce04, %dec_label_pc_1ce01 ], [ %v4_1cdd0, %dec_label_pc_1cdec ]
  %v1_1cdf8 = icmp eq i32 %v2_1cdff, 0
  br i1 %v1_1cdf8, label %dec_label_pc_1ce01, label %dec_label_pc_1cdfc

dec_label_pc_1cdfc:                               ; preds = %dec_label_pc_1cdf8
  %v1_1cdfc = inttoptr i32 %v0_1cdfc to i8*
  %v2_1cdfc = load i8, i8* %v1_1cdfc, align 1
  %v3_1cdff = inttoptr i32 %v2_1cdff to i8*
  store i8 %v2_1cdfc, i8* %v3_1cdff, align 1
  %v0_1ce01.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_1ce04.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_1ce07.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1ce01

dec_label_pc_1ce01:                               ; preds = %dec_label_pc_1cdfc, %dec_label_pc_1cdf8
  %v1_1ce07 = phi i32 [ %v1_1ce07.pre, %dec_label_pc_1cdfc ], [ %v1_1ce076, %dec_label_pc_1cdf8 ]
  %v0_1ce04 = phi i32 [ %v0_1ce04.pre, %dec_label_pc_1cdfc ], [ 0, %dec_label_pc_1cdf8 ]
  %v0_1ce01 = phi i32 [ %v0_1ce01.pre, %dec_label_pc_1cdfc ], [ %v0_1cdfc, %dec_label_pc_1cdf8 ]
  %v1_1ce01 = add i32 %v0_1ce01, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1ce01, i32* %eax.global-to-local, align 8
  %v1_1ce04 = add i32 %v0_1ce04, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1ce04, i32* %edx.global-to-local, align 4
  %v12_1ce07 = icmp eq i32 %v1_1ce01, %v1_1ce07
  %v1_1ce09 = icmp eq i1 %v12_1ce07, false
  br i1 %v1_1ce09, label %dec_label_pc_1cdf8, label %dec_label_pc_1ce0b

dec_label_pc_1ce0b:                               ; preds = %dec_label_pc_1ce01
  %v5_1ce0b = sub i32 %v1_1ce01, %v0_1cdde
  store i32 %v5_1ce0b, i32* %eax.global-to-local, align 8
  %v6_1ce0f = add i32 %v5_1ce0b, %v4_1cdd0
  %tmp12 = urem i32 %v6_1ce0f, 2
  %v25_1ce0f = icmp ne i32 %tmp12, 0
  br label %dec_label_pc_1ce13

dec_label_pc_1ce13:                               ; preds = %dec_label_pc_1ce0b, %dec_label_pc_1cdd0
  %stack_var_24.0 = phi i1 [ %tmp11, %dec_label_pc_1cdd0 ], [ %v25_1ce0f, %dec_label_pc_1ce0b ]
  %v4_1ce13 = sext i1 %stack_var_24.0 to i32
  store i32 %v4_1ce13, i32* %eax.global-to-local, align 8
  %v1_1ce17 = load i32, i32* @ebx, align 4
  %v2_1ce17 = add i32 %v1_1ce17, 4
  %v3_1ce17 = inttoptr i32 %v2_1ce17 to i32*
  store i32 %v4_1ce13, i32* %v3_1ce17, align 4
  %v0_1ce1a = load i32, i32* @esi, align 4
  %v1_1ce1d = add i32 %v0_1ce1a, 32
  %v2_1ce1d = inttoptr i32 %v1_1ce1d to i32*
  %v3_1ce1d = load i32, i32* %v2_1ce1d, align 4
  store i32 %v3_1ce1d, i32* %eax.global-to-local, align 8
  ret i32 %v3_1ce1d

; uselistorder directives
  uselistorder i32 %v1_1ce04, { 1, 0 }
  uselistorder i32 %v1_1ce01, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1cdde, { 1, 2, 0 }
  uselistorder i32 %v0_1cdde, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v4_1cdd0, { 0, 2, 4, 3, 1, 5 }
}

define i32 @function_1ce20() local_unnamed_addr {
dec_label_pc_1ce20:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ce20 = load i32, i32* @ebx, align 4
  %v1_1ce20 = add i32 %v0_1ce20, 12
  store i32 %v1_1ce20, i32* %ebx.global-to-local, align 4
  %v1_1ce23 = load i32, i32* @esi, align 4
  %v2_1ce23 = add i32 %v1_1ce23, 24
  %v3_1ce23 = inttoptr i32 %v2_1ce23 to i32*
  store i32 %v1_1ce20, i32* %v3_1ce23, align 4
  %v0_1ce26 = load i32, i32* @esi, align 4
  %v1_1ce26 = add i32 %v0_1ce26, 28
  %v2_1ce26 = inttoptr i32 %v1_1ce26 to i32*
  %v3_1ce26 = load i32, i32* %v2_1ce26, align 4
  store i32 %v3_1ce26, i32* @edx, align 4
  %v1_1ce29 = add i32 %v0_1ce26, 36
  %v2_1ce29 = inttoptr i32 %v1_1ce29 to i32*
  %v3_1ce29 = load i32, i32* %v2_1ce29, align 4
  store i32 %v3_1ce29, i32* @ecx, align 4
  %v1_1ce2c = load i32, i32* %ebx.global-to-local, align 4
  %v12_1ce2c = icmp eq i32 %v3_1ce26, %v1_1ce2c
  br i1 %v12_1ce2c, label %bb, label %dec_label_pc_1ce30

bb:                                               ; preds = %dec_label_pc_1ce20
  %v1_1ce2e = call i32 @function_1ce88()
  store i32 %v1_1ce2e, i32* @eax, align 8
  %v0_1ce30.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1ce30

dec_label_pc_1ce30:                               ; preds = %bb, %dec_label_pc_1ce20
  %v0_1ce30 = phi i32 [ %v0_1ce30.pre, %bb ], [ %v1_1ce2c, %dec_label_pc_1ce20 ]
  %v1_1ce30 = add i32 %v0_1ce30, -12
  store i32 %v1_1ce30, i32* @ebx, align 4
  %v1_1ce33 = load i32, i32* @edi, align 4
  %v2_1ce33 = inttoptr i32 %v1_1ce33 to i32*
  store i32 %v1_1ce30, i32* %v2_1ce33, align 4
  %v0_1ce35 = load i32, i32* @edx, align 4
  %v1_1ce35 = load i32, i32* @edi, align 4
  %v2_1ce35 = add i32 %v1_1ce35, 4
  %v3_1ce35 = inttoptr i32 %v2_1ce35 to i32*
  store i32 %v0_1ce35, i32* %v3_1ce35, align 4
  %v0_1ce38 = load i32, i32* @eax, align 8
  %v1_1ce38 = load i32, i32* @edi, align 4
  %v2_1ce38 = add i32 %v1_1ce38, 8
  %v3_1ce38 = inttoptr i32 %v2_1ce38 to i32*
  store i32 %v0_1ce38, i32* %v3_1ce38, align 4
  %v0_1ce3b = load i32, i32* @ecx, align 4
  %v1_1ce3b = load i32, i32* @edi, align 4
  %v2_1ce3b = add i32 %v1_1ce3b, 12
  %v3_1ce3b = inttoptr i32 %v2_1ce3b to i32*
  store i32 %v0_1ce3b, i32* %v3_1ce3b, align 4
  %v0_1ce3e = load i32, i32* @eax, align 8
  ret i32 %v0_1ce3e

; uselistorder directives
  uselistorder i32 %v1_1ce2c, { 1, 0 }
}

define i32 @function_1ce48(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ce48:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ce48 = load i32, i32* @esi, align 4
  %v1_1ce48 = add i32 %v0_1ce48, 12
  %v2_1ce48 = inttoptr i32 %v1_1ce48 to i32*
  %v3_1ce48 = load i32, i32* %v2_1ce48, align 4
  store i32 %v3_1ce48, i32* @eax, align 8
  %v0_1ce4b = load i32, i32* @ebx, align 4
  %v12_1ce4b = icmp eq i32 %v0_1ce4b, %v3_1ce48
  br i1 %v12_1ce4b, label %bb, label %dec_label_pc_1ce4f

bb:                                               ; preds = %dec_label_pc_1ce48
  %v1_1ce4d = call i32 @function_1ceaf()
  store i32 %v1_1ce4d, i32* @eax, align 8
  %v0_1ce4f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1ce4f

dec_label_pc_1ce4f:                               ; preds = %bb, %dec_label_pc_1ce48
  %v0_1ce4f = phi i32 [ %v0_1ce4f.pre, %bb ], [ %v0_1ce4b, %dec_label_pc_1ce48 ]
  %v1_1ce4f = add i32 %v0_1ce4f, -12
  %v10_1ce4f = icmp eq i32 %v1_1ce4f, 0
  store i32 %v1_1ce4f, i32* @ebx, align 4
  br i1 %v10_1ce4f, label %dec_label_pc_1ce4f.dec_label_pc_1ce69_crit_edge, label %dec_label_pc_1ce54

dec_label_pc_1ce4f.dec_label_pc_1ce69_crit_edge:  ; preds = %dec_label_pc_1ce4f
  %v1_1ce69.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1ce69

dec_label_pc_1ce54:                               ; preds = %dec_label_pc_1ce4f
  %v1_1ce5b = call i32 @function_2f3b0(i32 %v1_1ce4f)
  store i32 %v1_1ce5b, i32* %eax.global-to-local, align 8
  %v0_1ce60 = load i32, i32* @esi, align 4
  %v1_1ce60 = add i32 %v0_1ce60, 8
  %v2_1ce60 = inttoptr i32 %v1_1ce60 to i32*
  %v3_1ce60 = load i32, i32* %v2_1ce60, align 4
  %v1_1ce63 = add i32 %v0_1ce60, 12
  %v2_1ce63 = inttoptr i32 %v1_1ce63 to i32*
  %v3_1ce63 = load i32, i32* %v2_1ce63, align 4
  store i32 %v3_1ce63, i32* @eax, align 8
  %v1_1ce66 = add i32 %v3_1ce60, -12
  store i32 %v1_1ce66, i32* @ebx, align 4
  br label %dec_label_pc_1ce69

dec_label_pc_1ce69:                               ; preds = %dec_label_pc_1ce4f.dec_label_pc_1ce69_crit_edge, %dec_label_pc_1ce54
  %v1_1ce69 = phi i32 [ %v0_1ce60, %dec_label_pc_1ce54 ], [ %v1_1ce69.pre, %dec_label_pc_1ce4f.dec_label_pc_1ce69_crit_edge ]
  %v0_1ce69 = phi i32 [ %v1_1ce66, %dec_label_pc_1ce54 ], [ 0, %dec_label_pc_1ce4f.dec_label_pc_1ce69_crit_edge ]
  %v2_1ce69 = add i32 %v1_1ce69, 8
  %v3_1ce69 = inttoptr i32 %v2_1ce69 to i32*
  store i32 %v0_1ce69, i32* %v3_1ce69, align 4
  %v0_1ce6c = load i32, i32* @eax, align 8
  %v1_1ce6c = load i32, i32* @edi, align 4
  %v2_1ce6c = add i32 %v1_1ce6c, 4
  %v3_1ce6c = inttoptr i32 %v2_1ce6c to i32*
  store i32 %v0_1ce6c, i32* %v3_1ce6c, align 4
  %v0_1ce6f = load i32, i32* @esi, align 4
  %v1_1ce6f = add i32 %v0_1ce6f, 16
  %v2_1ce6f = inttoptr i32 %v1_1ce6f to i32*
  %v3_1ce6f = load i32, i32* %v2_1ce6f, align 4
  store i32 %v3_1ce6f, i32* %eax.global-to-local, align 8
  %v0_1ce72 = load i32, i32* @ebx, align 4
  %v1_1ce72 = load i32, i32* @edi, align 4
  %v2_1ce72 = inttoptr i32 %v1_1ce72 to i32*
  store i32 %v0_1ce72, i32* %v2_1ce72, align 4
  %v0_1ce74 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ce74 = load i32, i32* @edi, align 4
  %v2_1ce74 = add i32 %v1_1ce74, 8
  %v3_1ce74 = inttoptr i32 %v2_1ce74 to i32*
  store i32 %v0_1ce74, i32* %v3_1ce74, align 4
  %v0_1ce77 = load i32, i32* @esi, align 4
  %v1_1ce77 = add i32 %v0_1ce77, 20
  %v2_1ce77 = inttoptr i32 %v1_1ce77 to i32*
  %v3_1ce77 = load i32, i32* %v2_1ce77, align 4
  store i32 %v3_1ce77, i32* %eax.global-to-local, align 8
  %v1_1ce7a = load i32, i32* @edi, align 4
  %v2_1ce7a = add i32 %v1_1ce7a, 12
  %v3_1ce7a = inttoptr i32 %v2_1ce7a to i32*
  store i32 %v3_1ce77, i32* %v3_1ce7a, align 4
  %v0_1ce7d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ce7d

; uselistorder directives
  uselistorder i32 %v1_1ce4f, { 0, 2, 1 }
  uselistorder i32 %v0_1ce4b, { 1, 0 }
  uselistorder label %dec_label_pc_1ce69, { 1, 0 }
}

define i32 @function_1ce88() local_unnamed_addr {
dec_label_pc_1ce88:
  %v0_1ce88 = load i32, i32* @ecx, align 4
  %v1_1ce88 = add i32 %v0_1ce88, -4
  %v2_1ce88 = inttoptr i32 %v1_1ce88 to i32*
  %v3_1ce88 = load i32, i32* %v2_1ce88, align 4
  store i32 %v3_1ce88, i32* @edx, align 4
  store i32 %v1_1ce88, i32* @ecx, align 4
  %v1_1ce8e = add i32 %v3_1ce88, 504
  store i32 %v1_1ce8e, i32* @ebx, align 4
  ret i32 %v1_1ce8e
}

define i32 @function_1ce98() local_unnamed_addr {
dec_label_pc_1ce98:
  %v0_1ce9c = load i32, i32* @esi, align 4
  %v1_1ce9f = call i32 @unknown_39070(i32 %v0_1ce9c)
  %v0_1cea4 = load i32, i32* @esi, align 4
  %v1_1cea4 = add i32 %v0_1cea4, 24
  %v2_1cea4 = inttoptr i32 %v1_1cea4 to i32*
  %v3_1cea4 = load i32, i32* %v2_1cea4, align 4
  store i32 %v3_1cea4, i32* @ebx, align 4
  %v1_1cea7 = add i32 %v0_1cea4, 32
  %v2_1cea7 = inttoptr i32 %v1_1cea7 to i32*
  %v3_1cea7 = load i32, i32* %v2_1cea7, align 4
  ret i32 %v3_1cea7
}

define i32 @function_1ceaf() local_unnamed_addr {
dec_label_pc_1ceaf:
  %v0_1ceb3 = load i32, i32* @esi, align 4
  %v1_1ceb6 = call i32 @unknown_38ef0(i32 %v0_1ceb3)
  %v0_1cebb = load i32, i32* @esi, align 4
  %v1_1cebb = add i32 %v0_1cebb, 8
  %v2_1cebb = inttoptr i32 %v1_1cebb to i32*
  %v3_1cebb = load i32, i32* %v2_1cebb, align 4
  store i32 %v3_1cebb, i32* @ebx, align 4
  %v1_1cebe = add i32 %v0_1cebb, 12
  %v2_1cebe = inttoptr i32 %v1_1cebe to i32*
  %v3_1cebe = load i32, i32* %v2_1cebe, align 4
  ret i32 %v3_1cebe
}

define i32 @function_1cec3() local_unnamed_addr {
dec_label_pc_1cec3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5CNode10EndMessageEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ced0:
  %stack_var_-98 = alloca i32, align 4
  %v2_1cef4 = ptrtoint i32* %stack_var_-98 to i32
  ret i32 %v2_1cef4
}

define i32 @function_1cf38() local_unnamed_addr {
dec_label_pc_1cf38:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cf41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1cf41
}

define i32 @function_1cf43() local_unnamed_addr {
dec_label_pc_1cf43:
  %esi.global-to-local = alloca i32, align 4
  %v0_1cf43 = load i32, i32* %esi.global-to-local, align 4
  %v1_1cf43 = add i32 %v0_1cf43, 16
  %v2_1cf43 = inttoptr i32 %v1_1cf43 to i32*
  %v3_1cf43 = load i32, i32* %v2_1cf43, align 4
  ret i32 %v3_1cf43
}

define i32 @function_1cf72() local_unnamed_addr {
dec_label_pc_1cf72:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_1cffd() local_unnamed_addr {
dec_label_pc_1cffd:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cffd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1cffd
}

define i32 @function_1d01c() local_unnamed_addr {
dec_label_pc_1d01c:
  %v4_1d020 = load i32, i32* @eax, align 8
  ret i32 %v4_1d020
}

define i32 @function_1d075() local_unnamed_addr {
dec_label_pc_1d075:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d075 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d075
}

define i32 @function_1d078() local_unnamed_addr {
dec_label_pc_1d078:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1d078 = load i32, i32* %eax.global-to-local, align 8
  %v3_1d078 = load i32, i32* %ebx.global-to-local, align 4
  %v4_1d078 = load i1, i1* %cf.global-to-local, align 1
  %v5_1d078 = zext i1 %v4_1d078 to i32
  %v6_1d078 = add i32 %v3_1d078, %v0_1d078
  %v7_1d078 = add i32 %v6_1d078, %v5_1d078
  store i32 %v7_1d078, i32* %eax.global-to-local, align 8
  %v2_1d07a = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1d07a = load i32, i32* %ecx.global-to-local, align 4
  %v4_1d07a = trunc i32 %v3_1d07a to i8
  %v5_1d07a = add i8 %v4_1d07a, %v2_1d07a
  %v10_1d07a = icmp ult i8 %v5_1d07a, %v2_1d07a
  store i1 %v10_1d07a, i1* %cf.global-to-local, align 1
  %v20_1d07a = load i32, i32* %edi.global-to-local, align 4
  %v21_1d07a = inttoptr i32 %v20_1d07a to i8*
  store i8 %v5_1d07a, i8* %v21_1d07a, align 1
  %v0_1d07d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d07d

; uselistorder directives
  uselistorder i8 %v2_1d07a, { 1, 0 }
}

define i32 @function_1d1e7(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d1e7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* %eax.global-to-local, align 8
  %v0_1d1eb = load i32, i32* @ebx, align 4
  %v1_1d1eb = add i32 %v0_1d1eb, 12
  %v2_1d1eb = inttoptr i32 %v1_1d1eb to i32*
  %v3_1d1eb = load i32, i32* %v2_1d1eb, align 4
  store i32 %v3_1d1eb, i32* %edx.global-to-local, align 4
  %v2_1d1ee = load i32, i32* %arg1, align 4
  store i32 %v2_1d1ee, i32* %ecx.global-to-local, align 4
  store i32 %v2_1d1ee, i32* %v2_1d1eb, align 4
  %v0_1d1f3 = load i32, i32* %eax.global-to-local, align 8
  %v1_1d1f3 = add i32 %v0_1d1f3, 4
  %v2_1d1f3 = inttoptr i32 %v1_1d1f3 to i32*
  %v3_1d1f3 = load i32, i32* %v2_1d1f3, align 4
  store i32 %v3_1d1f3, i32* %ecx.global-to-local, align 4
  %v0_1d1f6 = load i32, i32* %edx.global-to-local, align 4
  %v2_1d1f6 = inttoptr i32 %v0_1d1f3 to i32*
  store i32 %v0_1d1f6, i32* %v2_1d1f6, align 4
  %v0_1d1f8 = load i32, i32* @ebx, align 4
  %v1_1d1f8 = add i32 %v0_1d1f8, 16
  %v2_1d1f8 = inttoptr i32 %v1_1d1f8 to i32*
  %v3_1d1f8 = load i32, i32* %v2_1d1f8, align 4
  store i32 %v3_1d1f8, i32* %edx.global-to-local, align 4
  %v0_1d1fb = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_1d1fb, i32* %v2_1d1f8, align 4
  %v0_1d1fe = load i32, i32* %eax.global-to-local, align 8
  %v1_1d1fe = add i32 %v0_1d1fe, 8
  %v2_1d1fe = inttoptr i32 %v1_1d1fe to i32*
  %v3_1d1fe = load i32, i32* %v2_1d1fe, align 4
  store i32 %v3_1d1fe, i32* %ecx.global-to-local, align 4
  %v0_1d201 = load i32, i32* %edx.global-to-local, align 4
  %v2_1d201 = add i32 %v0_1d1fe, 4
  %v3_1d201 = inttoptr i32 %v2_1d201 to i32*
  store i32 %v0_1d201, i32* %v3_1d201, align 4
  %v0_1d204 = load i32, i32* @ebx, align 4
  %v1_1d204 = add i32 %v0_1d204, 20
  %v2_1d204 = inttoptr i32 %v1_1d204 to i32*
  %v3_1d204 = load i32, i32* %v2_1d204, align 4
  store i32 %v3_1d204, i32* %edx.global-to-local, align 4
  %v0_1d207 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_1d207, i32* %v2_1d204, align 4
  %v0_1d20a = load i32, i32* %edx.global-to-local, align 4
  %v1_1d20a = load i32, i32* %eax.global-to-local, align 8
  %v2_1d20a = add i32 %v1_1d20a, 8
  %v3_1d20a = inttoptr i32 %v2_1d20a to i32*
  store i32 %v0_1d20a, i32* %v3_1d20a, align 4
  %v0_1d20d = load i32, i32* @ebx, align 4
  %v1_1d20d = add i32 %v0_1d20d, 12
  %v2_1d20d = inttoptr i32 %v1_1d20d to i32*
  %v3_1d20d = load i32, i32* %v2_1d20d, align 4
  %v1_1d210 = add i32 %v0_1d20d, 20
  %v2_1d210 = inttoptr i32 %v1_1d210 to i32*
  %v3_1d210 = load i32, i32* %v2_1d210, align 4
  store i32 %v3_1d210, i32* %eax.global-to-local, align 8
  store i32 0, i32* %v2_1d20d, align 4
  %v0_1d21a = load i32, i32* @ebx, align 4
  %v1_1d21a = add i32 %v0_1d21a, 16
  %v2_1d21a = inttoptr i32 %v1_1d21a to i32*
  store i32 0, i32* %v2_1d21a, align 4
  %v1_1d221 = icmp eq i32 %v3_1d20d, 0
  %v0_1d223 = load i32, i32* @ebx, align 4
  %v1_1d223 = add i32 %v0_1d223, 20
  %v2_1d223 = inttoptr i32 %v1_1d223 to i32*
  store i32 0, i32* %v2_1d223, align 4
  br i1 %v1_1d221, label %bb, label %dec_label_pc_1d1e7.dec_label_pc_1d22c_crit_edge

dec_label_pc_1d1e7.dec_label_pc_1d22c_crit_edge:  ; preds = %dec_label_pc_1d1e7
  %v0_1d22c.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1d22c

bb:                                               ; preds = %dec_label_pc_1d1e7
  %v1_1d22a = call i32 @function_1d242()
  store i32 %v1_1d22a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1d22c

dec_label_pc_1d22c:                               ; preds = %dec_label_pc_1d1e7.dec_label_pc_1d22c_crit_edge, %bb
  %v0_1d22c = phi i32 [ %v0_1d22c.pre, %dec_label_pc_1d1e7.dec_label_pc_1d22c_crit_edge ], [ %v1_1d22a, %bb ]
  %v2_1d22c = sub i32 %v0_1d22c, %v3_1d20d
  store i32 %v2_1d22c, i32* %eax.global-to-local, align 8
  ret i32 %v2_1d22c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_1d22c, { 1, 0 }
}

define i32 @function_1d242() local_unnamed_addr {
dec_label_pc_1d242:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_1d246 = add i32 %tmp3, 4
  %v2_1d246 = inttoptr i32 %v1_1d246 to i32*
  %v3_1d246 = load i32, i32* %v2_1d246, align 4
  %v2_1d249 = inttoptr i32 %tmp3 to i32*
  %v3_1d249 = load i32, i32* %v2_1d249, align 4
  %v4_1d249 = sub i32 %v3_1d246, %v3_1d249
  %v0_1d24b = load i32, i32* @ebx, align 4
  %v1_1d24b = add i32 %v0_1d24b, 40
  %v2_1d24b = inttoptr i32 %v1_1d24b to i32*
  %v3_1d24b = load i32, i32* %v2_1d24b, align 4
  %v5_1d24b = add i32 %v3_1d24b, %v4_1d249
  store i32 %v5_1d24b, i32* %v2_1d24b, align 4
  %v0_1d24e = load i32, i32* @eax, align 8
  %v1_1d24e = load i32, i32* @ebx, align 4
  %v2_1d24e = add i32 %v1_1d24e, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_1d24e = inttoptr i32 %v2_1d24e to i32*
  %v4_1d24e = load i32, i32* %v3_1d24e, align 4
  %v10_1d24e = icmp ult i32 %v0_1d24e, %v4_1d24e
  store i1 %v10_1d24e, i1* @cf, align 1
  %v15_1d24e = icmp eq i32 %v0_1d24e, %v4_1d24e
  br i1 %v15_1d24e, label %bb, label %dec_label_pc_1d257

bb:                                               ; preds = %dec_label_pc_1d242
  %v1_1d251 = call i32 @function_1d36d()
  br label %dec_label_pc_1d257

dec_label_pc_1d257:                               ; preds = %bb, %dec_label_pc_1d242
  %v3_1d25a = phi i32 [ %v1_1d251, %bb ], [ %v0_1d24e, %dec_label_pc_1d242 ]
  ret i32 %v3_1d25a

; uselistorder directives
  uselistorder i32 %v0_1d24e, { 1, 0, 2 }
}

define i32 @function_1d27e() local_unnamed_addr {
dec_label_pc_1d27e:
  %eax.global-to-local = alloca i32, align 4
  %v2_1d27e = load i32, i32* %eax.global-to-local, align 8
  %v3_1d27e = add i32 %v2_1d27e, 125
  %v19_1d27e = inttoptr i32 %v2_1d27e to i32*
  store i32 %v3_1d27e, i32* %v19_1d27e, align 4
  %v0_1d285 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d285
}

define i32 @function_1d29e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d29e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d29e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d29e = add i32 %v0_1d29e, -561705024
  %v2_1d29e = inttoptr i32 %v1_1d29e to i32*
  %v3_1d29e = load i32, i32* %v2_1d29e, align 4
  %v4_1d29e = add i32 %v3_1d29e, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1d29e, i32* %v2_1d29e, align 4
  %v2_1d2a4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1d2a4 = load i32, i32* %eax.global-to-local, align 8
  %v4_1d2a4 = trunc i32 %v3_1d2a4 to i8
  %v5_1d2a4 = add i8 %v4_1d2a4, %v2_1d2a4
  %v21_1d2a4 = inttoptr i32 %v3_1d2a4 to i8*
  store i8 %v5_1d2a4, i8* %v21_1d2a4, align 1
  %v0_1d2a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d2a6 = add i32 %v0_1d2a6, 11281540
  %v2_1d2a6 = inttoptr i32 %v1_1d2a6 to i8*
  %v3_1d2a6 = load i8, i8* %v2_1d2a6, align 1
  %v4_1d2a6 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1d2a6 = trunc i32 %v4_1d2a6 to i8
  %v6_1d2a6 = add i8 %v5_1d2a6, %v3_1d2a6
  store i8 %v6_1d2a6, i8* %v2_1d2a6, align 1
  %v2_1d2ac = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1d2ac = load i32, i32* %eax.global-to-local, align 8
  %v4_1d2ac = trunc i32 %v3_1d2ac to i8
  %v5_1d2ac = add i8 %v4_1d2ac, %v2_1d2ac
  %v21_1d2ac = inttoptr i32 %v3_1d2ac to i8*
  store i8 %v5_1d2ac, i8* %v21_1d2ac, align 1
  %v0_1d2ae = load i32, i32* %eax.global-to-local, align 8
  %v1_1d2ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d2ae = xor i32 %v1_1d2ae, %v0_1d2ae
  %v3_1d2ae = icmp eq i32 %v2_1d2ae, 0
  store i32 %v2_1d2ae, i32* @eax, align 8
  %v1_1d2b5 = icmp eq i1 %v3_1d2ae, false
  br i1 %v1_1d2b5, label %bb, label %dec_label_pc_1d2bb

bb:                                               ; preds = %dec_label_pc_1d29e
  %v2_1d2b5 = call i32 @function_1d3d4()
  store i32 %v2_1d2b5, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1d2bb

dec_label_pc_1d2bb:                               ; preds = %bb, %dec_label_pc_1d29e
  %v0_1d2c5 = phi i32 [ %v2_1d2b5, %bb ], [ %v2_1d2ae, %dec_label_pc_1d29e ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1d2c5
}

define i32 @function_1d2ef() local_unnamed_addr {
dec_label_pc_1d2ef:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v4_1d2ef = load i32, i32* %eax.global-to-local, align 8
  %v1_1d2f5 = add i32 %v4_1d2ef, -2097152000
  %v2_1d2f5 = inttoptr i32 %v1_1d2f5 to i32*
  %v3_1d2f5 = load i32, i32* %v2_1d2f5, align 4
  %v4_1d2f5 = xor i32 %v3_1d2f5, -24
  store i32 %v4_1d2f5, i32* %v2_1d2f5, align 4
  %v0_1d2fc = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d2fc = add i32 %v0_1d2fc, -1333556800
  %v2_1d2fc = inttoptr i32 %v1_1d2fc to i32*
  %v3_1d2fc = load i32, i32* %v2_1d2fc, align 4
  %v4_1d2fc = load i32, i32* %eax.global-to-local, align 8
  %v5_1d2fc = add i32 %v4_1d2fc, %v3_1d2fc
  store i32 %v5_1d2fc, i32* %v2_1d2fc, align 4
  %v2_1d302 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1d302 = load i32, i32* %eax.global-to-local, align 8
  %v4_1d302 = trunc i32 %v3_1d302 to i8
  %v5_1d302 = add i8 %v4_1d302, %v2_1d302
  %v21_1d302 = inttoptr i32 %v3_1d302 to i8*
  store i8 %v5_1d302, i8* %v21_1d302, align 1
  %v0_1d304 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d304 = load i32, i32* %edi.global-to-local, align 4
  %v2_1d304 = mul i32 %v1_1d304, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_1d304 = add i32 %v0_1d304, -125
  %v4_1d304 = add i32 %v3_1d304, %v2_1d304
  %v5_1d304 = inttoptr i32 %v4_1d304 to i8*
  %v6_1d304 = load i8, i8* %v5_1d304, align 1
  %v7_1d304 = load i32, i32* %edx.global-to-local, align 4
  %v8_1d304 = udiv i32 %v7_1d304, 256
  %v9_1d304 = trunc i32 %v8_1d304 to i8
  %v10_1d304 = add i8 %v9_1d304, %v6_1d304
  store i8 %v10_1d304, i8* %v5_1d304, align 1
  %v0_1d308 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d308
}

define i32 @function_1d33b() local_unnamed_addr {
dec_label_pc_1d33b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d33b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d33b
}

define i32 @function_1d340() local_unnamed_addr {
dec_label_pc_1d340:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d340 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d340 = add i32 %v0_1d340, 168
  %v2_1d340 = inttoptr i32 %v1_1d340 to i8*
  store i8 0, i8* %v2_1d340, align 1
  %v0_1d347 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d347

; uselistorder directives
  uselistorder i32 168, { 0, 3, 1, 2 }
}

define i32 @function_1d350() local_unnamed_addr {
dec_label_pc_1d350:
  %v0_1d352 = call i32 @function_1d01c()
  ret i32 %v0_1d352
}

define i32 @function_1d368() local_unnamed_addr {
dec_label_pc_1d368:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d368 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d368
}

define i32 @function_1d36d() local_unnamed_addr {
dec_label_pc_1d36d:
  %v0_1d36d = load i32, i32* @ebx, align 4
  %v1_1d370 = call i32 @function_1ecf0(i32 %v0_1d36d)
  ret i32 %v1_1d370
}

define i32 @function_1d37b() local_unnamed_addr {
dec_label_pc_1d37b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d37b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d37b
}

define i32 @function_1d38b() local_unnamed_addr {
dec_label_pc_1d38b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d38b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d38b
}

define i32 @function_1d38c() local_unnamed_addr {
dec_label_pc_1d38c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d398() local_unnamed_addr {
dec_label_pc_1d398:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d3c5() local_unnamed_addr {
dec_label_pc_1d3c5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d3c5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d3c5
}

define i32 @function_1d3ce() local_unnamed_addr {
dec_label_pc_1d3ce:
  %v0_1d3ce = call i32 @function_1d38c()
  ret i32 %v0_1d3ce
}

define i32 @function_1d3d0() local_unnamed_addr {
dec_label_pc_1d3d0:
  %v0_1d3d2 = call i32 @function_1d398()
  ret i32 %v0_1d3d2
}

define i32 @function_1d3d4() local_unnamed_addr {
dec_label_pc_1d3d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d3d8() local_unnamed_addr {
dec_label_pc_1d3d8:
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d3d8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d3d8 = add i32 %v0_1d3d8, 607422915
  %v2_1d3d8 = inttoptr i32 %v1_1d3d8 to i32*
  %v3_1d3d8 = load i32, i32* %v2_1d3d8, align 4
  %v4_1d3d8 = add i32 %v3_1d3d8, -1
  store i32 %v4_1d3d8, i32* %v2_1d3d8, align 4
  %v0_1d3de = call i32 @function_2f490()
  store i32 %v0_1d3de, i32* @eax, align 8
  %v0_1d3e3 = call i32 @function_1d398()
  ret i32 %v0_1d3e3

; uselistorder directives
  uselistorder i32 ()* @function_1d398, { 1, 0 }
}

define i32 @_ZN5CNodeC1Ej8CAddressSsb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i8 %arg14) local_unnamed_addr {
dec_label_pc_1d3f0:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1d422 = add i32 %arg1, 12
  %v2_1d422 = inttoptr i32 %v1_1d422 to i32*
  store i32 0, i32* %v2_1d422, align 4
  %v0_1d42d = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d42d = add i32 %v0_1d42d, ptrtoint (i32* @global_var_38.2432 to i32)
  store i32 %v1_1d42d, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 8
  %v1_1d4a6 = add i32 %v0_1d42d, 16
  %v2_1d4a6 = inttoptr i32 %v1_1d4a6 to i32*
  store i32 0, i32* %v2_1d4a6, align 4
  %v0_1d4ad = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4ad = add i32 %v0_1d4ad, 20
  %v2_1d4ad = inttoptr i32 %v1_1d4ad to i32*
  store i32 0, i32* %v2_1d4ad, align 4
  %v0_1d4b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4b4 = add i32 %v0_1d4b4, 24
  %v2_1d4b4 = inttoptr i32 %v1_1d4b4 to i32*
  store i32 0, i32* %v2_1d4b4, align 4
  %v0_1d4bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4bb = add i32 %v0_1d4bb, 32
  %v2_1d4bb = inttoptr i32 %v1_1d4bb to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_1d4bb, align 4
  %v0_1d4c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4c2 = add i32 %v0_1d4c2, 36
  %v2_1d4c2 = inttoptr i32 %v1_1d4c2 to i32*
  store i32 209, i32* %v2_1d4c2, align 4
  %v0_1d4c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4c9 = add i32 %v0_1d4c9, 28
  %v2_1d4c9 = inttoptr i32 %v1_1d4c9 to i16*
  store i16 0, i16* %v2_1d4c9, align 2
  %v0_1d4cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4cf = add i32 %v0_1d4cf, ptrtoint (i16** @global_var_1e.2596 to i32)
  %v2_1d4cf = inttoptr i32 %v1_1d4cf to i16*
  store i16 ptrtoint (i8** @global_var_5.2484 to i16), i16* %v2_1d4cf, align 2
  %v0_1d4d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4d5 = add i32 %v0_1d4d5, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_1d4d5 = inttoptr i32 %v1_1d4d5 to i32*
  store i32 0, i32* %v2_1d4d5, align 4
  %v0_1d4dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4dc = add i32 %v0_1d4dc, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_1d4dc = inttoptr i32 %v1_1d4dc to i32*
  store i32 0, i32* %v2_1d4dc, align 4
  %v0_1d4e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4e3 = add i32 %v0_1d4e3, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_1d4e3 = inttoptr i32 %v1_1d4e3 to i32*
  store i32 0, i32* %v2_1d4e3, align 4
  %v0_1d4ea = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4ea = add i32 %v0_1d4ea, 68
  %v2_1d4ea = inttoptr i32 %v1_1d4ea to i32*
  store i32 0, i32* %v2_1d4ea, align 4
  %v0_1d4f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4f1 = add i32 %v0_1d4f1, 72
  %v2_1d4f1 = inttoptr i32 %v1_1d4f1 to i32*
  store i32 0, i32* %v2_1d4f1, align 4
  %v0_1d4f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4f8 = add i32 %v0_1d4f8, 76
  %v2_1d4f8 = inttoptr i32 %v1_1d4f8 to i32*
  store i32 0, i32* %v2_1d4f8, align 4
  %v0_1d4ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4ff = add i32 %v0_1d4ff, 80
  %v2_1d4ff = inttoptr i32 %v1_1d4ff to i32*
  store i32 0, i32* %v2_1d4ff, align 4
  %v0_1d506 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d506 = add i32 %v0_1d506, 84
  %v2_1d506 = inttoptr i32 %v1_1d506 to i32*
  store i32 0, i32* %v2_1d506, align 4
  %v0_1d50d = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d50d = add i32 %v0_1d50d, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_1d50d = inttoptr i32 %v1_1d50d to i32*
  store i32 0, i32* %v2_1d50d, align 4
  %v0_1d514 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d514 = add i32 %v0_1d514, ptrtoint (i32* @global_var_5c.2559 to i32)
  %v2_1d514 = inttoptr i32 %v1_1d514 to i32*
  store i32 0, i32* %v2_1d514, align 4
  %v0_1d527 = load i32, i32* %edx.global-to-local, align 4
  %v2_1d52a = call i32 @function_325d0(i32 %v0_1d527, i32 0)
  ret i32 %v2_1d52a

; uselistorder directives
  uselistorder i32 84, { 2, 0, 1, 4, 5, 3 }
  uselistorder i32 ptrtoint (i16** @global_var_1e.2596 to i32), { 3, 0, 1, 2 }
  uselistorder i16 0, { 4, 3, 1, 0, 2, 5 }
}

define i32 @function_1db46(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1db46:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1dce8() local_unnamed_addr {
dec_label_pc_1dce8:
  %eax.global-to-local = alloca i32, align 4
  %v4_1dce8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_1dce8
}

define i32 @function_1dcf7() local_unnamed_addr {
dec_label_pc_1dcf7:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 274877907, i32* %ecx.global-to-local, align 4
  %v0_1dcfc = load i32, i32* %edi.global-to-local, align 4
  %v2_1dd00 = udiv i32 %v0_1dcfc, 1000
  %tmp109 = icmp ult i32 %v0_1dcfc, 1000
  store i32 %v2_1dd00, i32* %edx.global-to-local, align 4
  br i1 %tmp109, label %bb, label %dec_label_pc_1dd0f

bb:                                               ; preds = %dec_label_pc_1dcf7
  %v2_1dd09 = call i32 @function_1dee8(i32 0)
  br label %dec_label_pc_1dd0f

dec_label_pc_1dd0f:                               ; preds = %bb, %dec_label_pc_1dcf7
  %v0_1dd0f = load i32, i32* @ebx, align 4
  %v1_1dd0f = add i32 %v0_1dd0f, ptrtoint (i32* @global_var_2f4.2719 to i32)
  %v2_1dd0f = inttoptr i32 %v1_1dd0f to i32*
  %v3_1dd0f = load i32, i32* %v2_1dd0f, align 4
  store i32 %v3_1dd0f, i32* %edi.global-to-local, align 4
  %v1_1dd15 = add i32 %v0_1dd0f, 712
  store i32 %v1_1dd15, i32* @esi, align 4
  %v1_1dd1b = add i32 %v0_1dd0f, ptrtoint (i32* @global_var_2f0.2720 to i32)
  %v2_1dd1b = inttoptr i32 %v1_1dd1b to i32*
  %v3_1dd1b = load i32, i32* %v2_1dd1b, align 4
  store i32 %v3_1dd1b, i32* %ecx.global-to-local, align 4
  %v1_1dd21 = add i32 %v0_1dd0f, 744
  %v2_1dd21 = inttoptr i32 %v1_1dd21 to i32*
  %v3_1dd21 = load i32, i32* %v2_1dd21, align 4
  store i32 %v3_1dd21, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1dd3f

dec_label_pc_1dd30:                               ; preds = %dec_label_pc_1dd7e
  %v1_1dd30 = add i32 %v0_1dd8c, ptrtoint (i32* @global_var_2f4.2719 to i32)
  %v2_1dd30 = inttoptr i32 %v1_1dd30 to i32*
  %v3_1dd30 = load i32, i32* %v2_1dd30, align 4
  store i32 %v3_1dd30, i32* %edi.global-to-local, align 4
  %v1_1dd36 = add i32 %v3_1dd92, 36
  store i32 %v1_1dd36, i32* %edx.global-to-local, align 4
  store i32 %v1_1dd36, i32* %v2_1dd92, align 4
  %v0_1dd3f.pre = load i32, i32* @ebx, align 4
  %v0_1dd45.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1dd45.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_1dd50.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_1dd3f

dec_label_pc_1dd3f:                               ; preds = %dec_label_pc_1dd30, %dec_label_pc_1dd0f
  %v1_1dd50 = phi i32 [ %v1_1dd50.pre, %dec_label_pc_1dd30 ], [ %v3_1dd0f, %dec_label_pc_1dd0f ]
  %v1_1dd45 = phi i32 [ %v1_1dd45.pre, %dec_label_pc_1dd30 ], [ %v3_1dd21, %dec_label_pc_1dd0f ]
  %v0_1dd45 = phi i32 [ %v0_1dd45.pre, %dec_label_pc_1dd30 ], [ %v3_1dd1b, %dec_label_pc_1dd0f ]
  %v0_1dd5b = phi i32 [ %v0_1dd3f.pre, %dec_label_pc_1dd30 ], [ %v0_1dd0f, %dec_label_pc_1dd0f ]
  %v1_1dd3f = add i32 %v0_1dd5b, 772
  %v2_1dd3f = inttoptr i32 %v1_1dd3f to i32*
  %v3_1dd3f = load i32, i32* %v2_1dd3f, align 4
  %v2_1dd45 = sub i32 %v0_1dd45, %v1_1dd45
  %v2_1dd47 = sdiv i32 %v2_1dd45, 4
  %v3_1dd4a = mul i32 %v2_1dd47, 954437177
  store i32 %v3_1dd4a, i32* %ecx.global-to-local, align 4
  %v2_1dd50 = sub i32 %v3_1dd3f, %v1_1dd50
  %v2_1dd52 = sdiv i32 %v2_1dd50, 4
  %tmp110 = mul i32 %v2_1dd52, 14
  %v3_1dd58 = add i32 %tmp110, -14
  store i32 %v3_1dd58, i32* %edi.global-to-local, align 4
  %v1_1dd5b = add i32 %v0_1dd5b, 760
  %v2_1dd5b = inttoptr i32 %v1_1dd5b to i32*
  %v3_1dd5b = load i32, i32* %v2_1dd5b, align 4
  %v2_1dd61 = add i32 %v0_1dd5b, 764
  %v3_1dd61 = inttoptr i32 %v2_1dd61 to i32*
  %v4_1dd61 = load i32, i32* %v3_1dd61, align 4
  %v5_1dd61 = sub i32 %v3_1dd5b, %v4_1dd61
  %v2_1dd67 = sdiv i32 %v5_1dd61, 4
  %v3_1dd6a = mul i32 %v2_1dd67, 954437177
  %v2_1dd70 = add i32 %v3_1dd4a, %v3_1dd58
  %v2_1dd72 = add i32 %v2_1dd70, %v3_1dd6a
  store i32 %v2_1dd72, i32* @eax, align 8
  %v10_1dd74 = icmp ult i32 %v2_1dd00, %v2_1dd72
  %v1_1dd78 = icmp eq i1 %v10_1dd74, false
  br i1 %v1_1dd78, label %bb107, label %dec_label_pc_1dd7e

bb107:                                            ; preds = %dec_label_pc_1dd3f
  %v3_1dd78 = call i32 @function_1dee8(i32 %v2_1dd00)
  %v0_1dd7e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1dd7e

dec_label_pc_1dd7e:                               ; preds = %bb107, %dec_label_pc_1dd3f
  %v0_1dd7e = phi i32 [ %v0_1dd7e.pre, %bb107 ], [ %v1_1dd45, %dec_label_pc_1dd3f ]
  %v0_1dd82 = load i32, i32* @esi, align 4
  store i32 %v0_1dd82, i32* %edi.global-to-local, align 4
  %v2_1dd87 = call i32 @unknown_36be0(i32 %v0_1dd82, i32 %v0_1dd7e)
  %v0_1dd8c = load i32, i32* @ebx, align 4
  %v1_1dd8c = add i32 %v0_1dd8c, ptrtoint (i32* @global_var_2f0.2720 to i32)
  %v2_1dd8c = inttoptr i32 %v1_1dd8c to i32*
  %v3_1dd8c = load i32, i32* %v2_1dd8c, align 4
  store i32 %v3_1dd8c, i32* %ecx.global-to-local, align 4
  %v1_1dd92 = add i32 %v0_1dd8c, 744
  %v2_1dd92 = inttoptr i32 %v1_1dd92 to i32*
  %v3_1dd92 = load i32, i32* %v2_1dd92, align 4
  store i32 %v3_1dd92, i32* %edx.global-to-local, align 4
  %v1_1dd98 = add i32 %v3_1dd8c, -36
  %v12_1dd9b = icmp eq i32 %v3_1dd92, %v1_1dd98
  %v1_1dd9d = icmp eq i1 %v12_1dd9b, false
  br i1 %v1_1dd9d, label %dec_label_pc_1dd30, label %dec_label_pc_1dd9f

dec_label_pc_1dd9f:                               ; preds = %dec_label_pc_1dd7e
  %v1_1dd9f = add i32 %v0_1dd8c, ptrtoint (i32* @global_var_2ec.2721 to i32)
  %v2_1dd9f = inttoptr i32 %v1_1dd9f to i32*
  %v3_1dd9f = load i32, i32* %v2_1dd9f, align 4
  ret i32 %v3_1dd9f

; uselistorder directives
  uselistorder i32 %v3_1dd92, { 0, 2, 1 }
  uselistorder i32* %v2_1dd92, { 1, 0 }
  uselistorder i32 %v0_1dd8c, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1dd58, { 1, 0 }
  uselistorder i32 %v0_1dd5b, { 1, 0, 2 }
  uselistorder i32 %v0_1dd0f, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_1dd00, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %edi.global-to-local, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 -36, { 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder i32 954437177, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32)* @function_1dee8, { 1, 0 }
}

define i32 @function_1ddad() local_unnamed_addr {
dec_label_pc_1ddad:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1ddad = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ddad = add i32 %v0_1ddad, ptrtoint (i32* @global_var_2f4.2719 to i32)
  %v2_1ddad = inttoptr i32 %v1_1ddad to i32*
  %v3_1ddad = load i32, i32* %v2_1ddad, align 4
  store i32 %v3_1ddad, i32* %eax.global-to-local, align 8
  %v1_1ddb3 = add i32 %v3_1ddad, 4
  store i32 %v1_1ddb3, i32* %v2_1ddad, align 4
  %v0_1ddbc = load i32, i32* %eax.global-to-local, align 8
  %v1_1ddbc = add i32 %v0_1ddbc, 4
  %v2_1ddbc = inttoptr i32 %v1_1ddbc to i32*
  %v3_1ddbc = load i32, i32* %v2_1ddbc, align 4
  store i32 %v3_1ddbc, i32* %edx.global-to-local, align 4
  %v1_1ddbf = add i32 %v3_1ddbc, 504
  store i32 %v1_1ddbf, i32* %ecx.global-to-local, align 4
  %v1_1ddc5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1ddc5 = add i32 %v1_1ddc5, ptrtoint (i32* @global_var_2ec.2721 to i32)
  %v3_1ddc5 = inttoptr i32 %v2_1ddc5 to i32*
  store i32 %v3_1ddbc, i32* %v3_1ddc5, align 4
  %v0_1ddcb = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ddcb = load i32, i32* %ebx.global-to-local, align 4
  %v2_1ddcb = add i32 %v1_1ddcb, ptrtoint (i32* @global_var_2f0.2720 to i32)
  %v3_1ddcb = inttoptr i32 %v2_1ddcb to i32*
  store i32 %v0_1ddcb, i32* %v3_1ddcb, align 4
  %v0_1ddd1 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ddd1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1ddd1 = add i32 %v1_1ddd1, 744
  %v3_1ddd1 = inttoptr i32 %v2_1ddd1 to i32*
  store i32 %v0_1ddd1, i32* %v3_1ddd1, align 4
  %v0_1ddd7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ddd7

; uselistorder directives
  uselistorder i32 504, { 0, 6, 7, 8, 9, 10, 1, 11, 12, 18, 19, 13, 14, 15, 16, 17, 2, 3, 4, 5 }
}

define i32 @function_1dee8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dee8:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* @edx, align 4
  %v0_1deec = load i32, i32* @ebx, align 4
  %v1_1deec = add i32 %v0_1deec, 8
  %v2_1deec = inttoptr i32 %v1_1deec to i32*
  %v3_1deec = load i32, i32* %v2_1deec, align 4
  %v13_1deec = icmp eq i32 %v3_1deec, -1
  %v1_1def0 = add i32 %v0_1deec, 560
  %v2_1def0 = inttoptr i32 %v1_1def0 to i32*
  store i32 0, i32* %v2_1def0, align 4
  %v0_1defa = load i32, i32* @edx, align 4
  %v1_1defa = load i32, i32* @ebx, align 4
  %v2_1defa = add i32 %v1_1defa, 776
  %v3_1defa = inttoptr i32 %v2_1defa to i32*
  store i32 %v0_1defa, i32* %v3_1defa, align 4
  br i1 %v13_1deec, label %dec_label_pc_1df0f, label %dec_label_pc_1df02

dec_label_pc_1df02:                               ; preds = %dec_label_pc_1dee8
  %v0_1df02 = load i32, i32* @ebx, align 4
  %v1_1df02 = add i32 %v0_1df02, ptrtoint (i8** @global_var_1ce.2508 to i32)
  %v2_1df02 = inttoptr i32 %v1_1df02 to i8*
  %v3_1df02 = load i8, i8* %v2_1df02, align 1
  %v10_1df02 = icmp eq i8 %v3_1df02, 0
  br i1 %v10_1df02, label %bb, label %dec_label_pc_1df0f

bb:                                               ; preds = %dec_label_pc_1df02
  %v1_1df09 = call i32 @function_1e0a8()
  br label %dec_label_pc_1df0f

dec_label_pc_1df0f:                               ; preds = %bb, %dec_label_pc_1df02, %dec_label_pc_1dee8
  %v1_1df16 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1df16 = xor i32 %v1_1df16, %tmp6
  %v3_1df16 = icmp eq i32 %v2_1df16, 0
  store i32 %v2_1df16, i32* @eax, align 8
  %v1_1df1d = icmp eq i1 %v3_1df16, false
  br i1 %v1_1df1d, label %bb8, label %dec_label_pc_1df23

bb8:                                              ; preds = %dec_label_pc_1df0f
  %v2_1df1d = call i32 @function_1e106()
  br label %dec_label_pc_1df23

dec_label_pc_1df23:                               ; preds = %bb8, %dec_label_pc_1df0f
  %v0_1df2d = phi i32 [ %v2_1df1d, %bb8 ], [ %v2_1df16, %dec_label_pc_1df0f ]
  ret i32 %v0_1df2d

; uselistorder directives
  uselistorder i32 ptrtoint (i8** @global_var_1ce.2508 to i32), { 3, 2, 1, 0 }
  uselistorder i32 560, { 0, 2, 1 }
}

define i32 @function_1df30(i32 %arg1) local_unnamed_addr {
dec_label_pc_1df30:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_176 = alloca i32, align 4
  %v2_1df34 = ptrtoint i32* %stack_var_176 to i32
  %v0_1df3b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1df3b = add i32 %v0_1df3b, 428
  store i32 %v1_1df3b, i32* @eax, align 8
  %v2_1df61 = call i32 @function_1db46(i32 %v2_1df34, i32 %arg1)
  ret i32 %v2_1df61
}

define i32 @function_1df66() local_unnamed_addr {
dec_label_pc_1df66:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1df72() local_unnamed_addr {
dec_label_pc_1df72:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1df7e() local_unnamed_addr {
dec_label_pc_1df7e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1df7f() local_unnamed_addr {
dec_label_pc_1df7f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1df7f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1df7f
}

define i32 @function_1df90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1df90:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1df90 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1df90 = add i32 %v0_1df90, 607422919
  %v2_1df90 = inttoptr i32 %v1_1df90 to i32*
  %v3_1df90 = load i32, i32* %v2_1df90, align 4
  %v4_1df90 = add i32 %v3_1df90, -1
  store i32 %v4_1df90, i32* %v2_1df90, align 4
  %v0_1df98 = call i32 @function_2bdb0()
  store i32 %v0_1df98, i32* @eax, align 8
  %v1_1dfa4 = call i32 @function_32dd0(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1dfb0 = call i32 @function_2fe40(i32 %arg1)
  store i32 %v1_1dfb0, i32* @eax, align 8
  %v0_1dfb5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1dfb8 = call i32 @function_2bbb0(i32 %v0_1dfb5)
  store i32 %v1_1dfb8, i32* @eax, align 8
  %v0_1dfbd = call i32 @function_1df72()
  ret i32 %v0_1dfbd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1dfbf() local_unnamed_addr {
dec_label_pc_1dfbf:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1dfdf() local_unnamed_addr {
dec_label_pc_1dfdf:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1dff9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dff9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e004() local_unnamed_addr {
dec_label_pc_1e004:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e004 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e004 = add i32 %v0_1e004, -1994120124
  %v2_1e004 = inttoptr i32 %v1_1e004 to i32*
  %v3_1e004 = load i32, i32* %v2_1e004, align 4
  %v4_1e004 = sub i32 %v3_1e004, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1e004, i32* %v2_1e004, align 4
  %v0_1e00a = load i32, i32* %eax.global-to-local, align 8
  %v2_1e00a = add i32 %v0_1e00a, 36
  %v16_1e00a = and i32 %v2_1e00a, 255
  %v18_1e00a = and i32 %v0_1e00a, -256
  %v19_1e00a = or i32 %v16_1e00a, %v18_1e00a
  store i32 %v19_1e00a, i32* @eax, align 8
  %v1_1e00c = call i32 @function_2bbb0(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_1e00c, i32* %eax.global-to-local, align 8
  ret i32 %v1_1e00c

; uselistorder directives
  uselistorder i32 %v0_1e00a, { 1, 0 }
}

define i32 @function_1e013() local_unnamed_addr {
dec_label_pc_1e013:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e039() local_unnamed_addr {
dec_label_pc_1e039:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e053(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e053:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e094() local_unnamed_addr {
dec_label_pc_1e094:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e094 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e094 = add i32 %v0_1e094, -1993071548
  %v2_1e094 = inttoptr i32 %v1_1e094 to i32*
  %v3_1e094 = load i32, i32* %v2_1e094, align 4
  %v4_1e094 = sub i32 %v3_1e094, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1e094, i32* %v2_1e094, align 4
  %v0_1e09a = load i32, i32* %eax.global-to-local, align 8
  %v2_1e09a = add i32 %v0_1e09a, 36
  %v16_1e09a = and i32 %v2_1e09a, 255
  %v18_1e09a = and i32 %v0_1e09a, -256
  %v19_1e09a = or i32 %v16_1e09a, %v18_1e09a
  store i32 %v19_1e09a, i32* @eax, align 8
  %v1_1e09c = call i32 @function_2bbb0(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_1e09c, i32* @eax, align 8
  %v0_1e0a1 = call i32 @function_1dfdf()
  store i32 %v0_1e0a1, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e0a1

; uselistorder directives
  uselistorder i32 %v0_1e09a, { 1, 0 }
}

define i32 @function_1e0a8() local_unnamed_addr {
dec_label_pc_1e0a8:
  %v0_1e0b6 = load i32, i32* @eax, align 8
  ret i32 %v0_1e0b6
}

define i32 @function_1e0bb() local_unnamed_addr {
dec_label_pc_1e0bb:
  %stack_var_112 = alloca i32, align 4
  %v2_1e0bb = ptrtoint i32* %stack_var_112 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_112, align 4
  %v1_1e0d2 = call i32 @function_2e760(i32 %v2_1e0bb)
  store i32 %v1_1e0d2, i32* @eax, align 8
  %v0_1e0d7 = call i32 @function_1df66()
  ret i32 %v0_1e0d7
}

define i32 @function_1e0dc() local_unnamed_addr {
dec_label_pc_1e0dc:
  %stack_var_128 = alloca i32, align 4
  %v2_1e0dc = ptrtoint i32* %stack_var_128 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_128, align 4
  %v1_1e0fc = call i32 @function_2e760(i32 %v2_1e0dc)
  ret i32 %v1_1e0fc
}

define i32 @function_1e106() local_unnamed_addr {
dec_label_pc_1e106:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e10a() local_unnamed_addr {
dec_label_pc_1e10a:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1e10a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e10a = add i32 %v0_1e10a, 9446580
  %v2_1e10a = inttoptr i32 %v1_1e10a to i32*
  %v3_1e10a = load i32, i32* %v2_1e10a, align 4
  %v4_1e10a = add i32 %v3_1e10a, -1
  store i32 %v4_1e10a, i32* %v2_1e10a, align 4
  %v2_1e110 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1e110 = load i32, i32* @eax, align 8
  %v4_1e110 = trunc i32 %v3_1e110 to i8
  %v5_1e110 = add i8 %v4_1e110, %v2_1e110
  %v21_1e110 = inttoptr i32 %v3_1e110 to i8*
  store i8 %v5_1e110, i8* %v21_1e110, align 1
  %v0_1e128 = load i32, i32* %esi.global-to-local, align 4
  %v1_1e12b = call i32 @function_2e760(i32 %v0_1e128)
  store i32 %v1_1e12b, i32* @eax, align 8
  %v0_1e130 = call i32 @function_1dfbf()
  ret i32 %v0_1e130
}

define i32 @function_1e140(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e140:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e140 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e140 = add i32 %v0_1e140, ptrtoint ([748 x i8]* @global_var_2c8bb.2723 to i32)
  %v2_1e140 = inttoptr i32 %v1_1e140 to i32*
  %v3_1e140 = load i32, i32* %v2_1e140, align 4
  %v4_1e140 = sub i32 %v3_1e140, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1e140, i32* %v2_1e140, align 4
  %v0_1e146 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e146 = add i32 %v0_1e146, 226435
  %v2_1e146 = inttoptr i32 %v1_1e146 to i8*
  %v3_1e146 = load i8, i8* %v2_1e146, align 1
  %v4_1e146 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1e146 = trunc i32 %v4_1e146 to i8
  %v6_1e146 = add i8 %v5_1e146, %v3_1e146
  store i8 %v6_1e146, i8* %v2_1e146, align 1
  %v0_1e14c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e14c = add i32 %v0_1e14c, -1929108412
  %v2_1e14c = inttoptr i32 %v1_1e14c to i8*
  %v3_1e14c = load i8, i8* %v2_1e14c, align 1
  %v5_1e14c = trunc i32 %v0_1e14c to i8
  %v6_1e14c = add i8 %v3_1e14c, %v5_1e14c
  store i8 %v6_1e14c, i8* %v2_1e14c, align 1
  %v1_1e152 = load i32, i32* @eax, align 8
  %v1_1e15a = call i32 @_ZTVN5boost17bad_function_callE(i32 %v1_1e152)
  store i32 %v1_1e15a, i32* @eax, align 8
  %v1_1e166 = call i32 @function_2bbb0(i32 %arg1)
  store i32 %v1_1e166, i32* @eax, align 8
  %v0_1e16b = call i32 @function_1e039()
  ret i32 %v0_1e16b

; uselistorder directives
  uselistorder i32 (i32)* @function_2bbb0, { 3, 2, 1, 0 }
}

define i32 @function_1e170() local_unnamed_addr {
dec_label_pc_1e170:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e172 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e172 = add i32 %v0_1e172, 428
  store i32 %v1_1e172, i32* @eax, align 8
  %v1_1e17c = call i32 @function_1dff9(i32 %v1_1e172)
  ret i32 %v1_1e17c
}

define i32 @function_1e181() local_unnamed_addr {
dec_label_pc_1e181:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e181 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e181
}

define i32 @function_1e188() local_unnamed_addr {
dec_label_pc_1e188:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e188 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e188
}

define i32 @function_1e19a() local_unnamed_addr {
dec_label_pc_1e19a:
  %cs.global-to-local = alloca i16, align 2
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e19a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e19a = add i32 %v0_1e19a, 116867
  %v2_1e19a = inttoptr i32 %v1_1e19a to i32*
  %v3_1e19a = load i32, i32* %v2_1e19a, align 4
  %v4_1e19a = add i32 %v3_1e19a, -1
  store i32 %v4_1e19a, i32* %v2_1e19a, align 4
  %v0_1e1a0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e1a0 = add i32 %v0_1e1a0, ptrtoint ([748 x i8]* @global_var_2c8bb.2723 to i32)
  %v2_1e1a0 = inttoptr i32 %v1_1e1a0 to i8*
  %v3_1e1a0 = load i8, i8* %v2_1e1a0, align 1
  %v4_1e1a0 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1e1a0 = trunc i32 %v4_1e1a0 to i8
  %v6_1e1a0 = add i8 %v5_1e1a0, %v3_1e1a0
  store i8 %v6_1e1a0, i8* %v2_1e1a0, align 1
  %v0_1e1a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e1a6 = add i32 %v0_1e1a6, -348380092
  %v2_1e1a6 = inttoptr i32 %v1_1e1a6 to i8*
  %v3_1e1a6 = load i8, i8* %v2_1e1a6, align 1
  %v5_1e1a6 = trunc i32 %v0_1e1a6 to i8
  %v6_1e1a6 = add i8 %v3_1e1a6, %v5_1e1a6
  store i8 %v6_1e1a6, i8* %v2_1e1a6, align 1
  %v0_1e1ac = load i16, i16* %cs.global-to-local, align 2
  %v5_1e1ac = sext i16 %v0_1e1ac to i32
  %v6_1e1ac = call i32 @unknown_96ebc689(i32 %v5_1e1ac)
  %v0_1e1b3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e1b3 = add i32 %v0_1e1b3, 720
  %v2_1e1b3 = inttoptr i32 %v1_1e1b3 to i32*
  %v3_1e1b3 = load i32, i32* %v2_1e1b3, align 4
  %v1_1e1bd = add i32 %v0_1e1b3, 712
  store i32 %v1_1e1bd, i32* @eax, align 8
  %v2_1e1c6 = call i32 @function_31250(i32 %v1_1e1bd, i32 %v3_1e1b3)
  %v0_1e1cb = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e1cb = add i32 %v0_1e1cb, 428
  %v1_1e1d1 = add i32 %v0_1e1cb, ptrtoint (i32* @global_var_1c8.2722 to i32)
  store i32 %v1_1e1d1, i32* @eax, align 8
  %v2_1e1df = call i32 @function_1e053(i32 %v1_1e1cb, i32 %v1_1e1d1)
  ret i32 %v2_1e1df

; uselistorder directives
  uselistorder i32 720, { 0, 2, 1 }
}

define i32 @function_1e1e4() local_unnamed_addr {
dec_label_pc_1e1e4:
  %stack_var_160 = alloca i32, align 4
  %v2_1e1e4 = ptrtoint i32* %stack_var_160 to i32
  store i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), i32* %stack_var_160, align 4
  %v1_1e204 = call i32 @function_2e760(i32 %v2_1e1e4)
  store i32 %v1_1e204, i32* @eax, align 8
  %v0_1e20b = call i32 @function_1df7e()
  ret i32 %v0_1e20b

; uselistorder directives
  uselistorder i32 (i32)* @function_2e760, { 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost21thread_resource_errorD1Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_31248_type* @global_var_31248.2524 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1e210() local_unnamed_addr {
dec_label_pc_1e210:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e210 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e210
}

define i32 @function_1e217() local_unnamed_addr {
dec_label_pc_1e217:
  %v0_1e217 = call i32 @function_1e013()
  ret i32 %v0_1e217
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e220:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1e220 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e221 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e222 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1e22a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1e23a = icmp eq i32 %arg2, 0
  %v1_1e23c = icmp eq i1 %v1_1e23a, false
  br i1 %v1_1e23c, label %dec_label_pc_1e242, label %dec_label_pc_1e23e

dec_label_pc_1e23e:                               ; preds = %dec_label_pc_1e220
  %v4_1e23e = call i32 @function_1e26a(i32 %v0_1e22a, i32 %v0_1e222, i32 %v0_1e221, i32 %v0_1e220)
  store i32 %v4_1e23e, i32* %eax.global-to-local, align 8
  ret i32 %v4_1e23e

dec_label_pc_1e242:                               ; preds = %dec_label_pc_1e220
  %v1_1e242 = add i32 %arg2, 12
  %v2_1e242 = inttoptr i32 %v1_1e242 to i32*
  %v3_1e242 = load i32, i32* %v2_1e242, align 4
  store i32 %v3_1e242, i32* %eax.global-to-local, align 8
  %v2_1e24c = call i32 @unknown_3c440(i32 %arg1, i32 %v3_1e242)
  store i32 %v2_1e24c, i32* %eax.global-to-local, align 8
  %v1_1e251 = add i32 %arg2, 8
  %v2_1e251 = inttoptr i32 %v1_1e251 to i32*
  %v3_1e251 = load i32, i32* %v2_1e251, align 4
  store i32 %v3_1e251, i32* %esi.global-to-local, align 4
  %v1_1e254 = add i32 %arg2, 20
  %v2_1e254 = inttoptr i32 %v1_1e254 to i8*
  %v3_1e254 = load i8, i8* %v2_1e254, align 1
  %v10_1e254 = icmp eq i8 %v3_1e254, 0
  br i1 %v10_1e254, label %dec_label_pc_1e25e, label %dec_label_pc_1e25a

dec_label_pc_1e25a:                               ; preds = %dec_label_pc_1e242
  store i8 0, i8* %v2_1e254, align 1
  %v3_1e25e.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1e25e

dec_label_pc_1e25e:                               ; preds = %dec_label_pc_1e25a, %dec_label_pc_1e242
  %v3_1e25e = phi i32 [ %v3_1e25e.pre, %dec_label_pc_1e25a ], [ %v2_1e24c, %dec_label_pc_1e242 ]
  ret i32 %v3_1e25e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_1e26a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e26a:
  %v1_1e26e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e26e = xor i32 %v1_1e26e, %arg1
  %v3_1e26e = icmp eq i32 %v2_1e26e, 0
  %v1_1e275 = icmp eq i1 %v3_1e26e, false
  br i1 %v1_1e275, label %dec_label_pc_1e27e, label %dec_label_pc_1e277

dec_label_pc_1e277:                               ; preds = %dec_label_pc_1e26a
  ret i32 %v2_1e26e

dec_label_pc_1e27e:                               ; preds = %dec_label_pc_1e26a
  ret i32 %v2_1e26e

; uselistorder directives
  uselistorder i32 %v2_1e26e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e290:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_1e2a6 = add i32 %tmp99, 16
  %v2_1e2a6 = inttoptr i32 %v1_1e2a6 to i32*
  %v3_1e2a6 = load i32, i32* %v2_1e2a6, align 4
  %v1_1e2ad = add i32 %tmp99, 8
  %v2_1e2b3 = call i32 @unknown_3c4b0(i32 %v1_1e2ad, i32 %v3_1e2a6)
  %v2_1e2b8 = load i32, i32* %arg1, align 4
  %v12_1e2ba = icmp eq i32 %v2_1e2b8, %tmp99
  %v1_1e2bc = icmp eq i1 %v12_1e2ba, false
  br i1 %v1_1e2bc, label %dec_label_pc_1e2c2, label %dec_label_pc_1e2be

dec_label_pc_1e2be:                               ; preds = %dec_label_pc_1e290
  %v0_1e2be = call i32 @function_1e2db()
  ret i32 %v0_1e2be

dec_label_pc_1e2c2:                               ; preds = %dec_label_pc_1e290
  %v1_1e2c4 = add i32 %v2_1e2b8, 12
  store i32 %v1_1e2c4, i32* @eax, align 8
  %v1_1e2ca = call i32 @function_2e7d0(i32 %v1_1e2c4)
  ret i32 %v1_1e2ca

; uselistorder directives
  uselistorder i32 %v2_1e2b8, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_1e2db() local_unnamed_addr {
dec_label_pc_1e2db:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_1e2df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e2df = xor i32 %v1_1e2df, %tmp4
  %v3_1e2df = icmp eq i32 %v2_1e2df, 0
  %v1_1e2e6 = icmp eq i1 %v3_1e2df, false
  br i1 %v1_1e2e6, label %dec_label_pc_1e2ef, label %dec_label_pc_1e2e8

dec_label_pc_1e2e8:                               ; preds = %dec_label_pc_1e2db
  ret i32 %v2_1e2df

dec_label_pc_1e2ef:                               ; preds = %dec_label_pc_1e2db
  ret i32 %v2_1e2df

; uselistorder directives
  uselistorder i32 %v2_1e2df, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_1e300:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1e300 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e301 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e302 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1e306 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1e316 = add i32 %arg1, 12
  %v2_1e316 = inttoptr i32 %v1_1e316 to i32*
  %v3_1e316 = load i32, i32* %v2_1e316, align 4
  store i32 %v3_1e316, i32* %edi.global-to-local, align 4
  %v1_1e319 = icmp eq i32 %v3_1e316, 0
  br i1 %v1_1e319, label %bb, label %dec_label_pc_1e31d

bb:                                               ; preds = %dec_label_pc_1e300
  %v5_1e31b = call i32 @function_1e370(i32 %v0_1e306, i32 %v0_1e302, i32 %v0_1e301, i32 %v0_1e300)
  br label %dec_label_pc_1e31d

dec_label_pc_1e31d:                               ; preds = %bb, %dec_label_pc_1e300
  %v1_1e31d = add i32 %v3_1e316, 16
  %v2_1e31d = inttoptr i32 %v1_1e31d to i32*
  %v3_1e31d = load i32, i32* %v2_1e31d, align 4
  %v1_1e324 = add i32 %v3_1e316, 8
  %v2_1e32a = call i32 @unknown_3c520(i32 %v1_1e324, i32 %v3_1e31d)
  %v1_1e32f = inttoptr i32 %v3_1e316 to i32*
  %v2_1e32f = load i32, i32* %v1_1e32f, align 4
  store i32 %v2_1e32f, i32* %ebx.global-to-local, align 4
  %v12_1e331 = icmp eq i32 %v2_1e32f, %v3_1e316
  %v1_1e333 = icmp eq i1 %v12_1e331, false
  br i1 %v1_1e333, label %dec_label_pc_1e33a, label %dec_label_pc_1e353

dec_label_pc_1e338:                               ; preds = %dec_label_pc_1e33a
  store i32 %v2_1e33a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e33a

dec_label_pc_1e33a:                               ; preds = %dec_label_pc_1e31d, %dec_label_pc_1e338
  %v0_1e33a = phi i32 [ %v2_1e33a, %dec_label_pc_1e338 ], [ %v2_1e32f, %dec_label_pc_1e31d ]
  %v1_1e33a = inttoptr i32 %v0_1e33a to i32*
  %v2_1e33a = load i32, i32* %v1_1e33a, align 4
  store i32 %v2_1e33a, i32* %esi.global-to-local, align 4
  %v1_1e33c = add i32 %v0_1e33a, 12
  store i32 %v1_1e33c, i32* @eax, align 8
  %v1_1e342 = call i32 @_ZZN5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__(i32 %v1_1e33c)
  %v12_1e34f = icmp eq i32 %v2_1e33a, %v3_1e316
  %v1_1e351 = icmp eq i1 %v12_1e34f, false
  br i1 %v1_1e351, label %dec_label_pc_1e338, label %dec_label_pc_1e353

dec_label_pc_1e353:                               ; preds = %dec_label_pc_1e33a, %dec_label_pc_1e31d
  store i32 0, i32* @eax, align 8
  br i1 false, label %bb107, label %dec_label_pc_1e360

bb107:                                            ; preds = %dec_label_pc_1e353
  br label %dec_label_pc_1e360

dec_label_pc_1e360:                               ; preds = %bb107, %dec_label_pc_1e353
  store i32 %v0_1e302, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e301, i32* %esi.global-to-local, align 4
  store i32 %v0_1e300, i32* %edi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1e33a, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1e33a, { 1, 0 }
  uselistorder i32 %v2_1e32f, { 1, 0, 2 }
  uselistorder i32 %v3_1e316, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1e33a, { 1, 0 }
}

define i32 @function_1e370(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e370:
  %v1_1e374 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e374 = xor i32 %v1_1e374, %arg1
  %v3_1e374 = icmp eq i32 %v2_1e374, 0
  store i32 %v2_1e374, i32* @eax, align 8
  %v1_1e37b = icmp eq i1 %v3_1e374, false
  br i1 %v1_1e37b, label %bb, label %dec_label_pc_1e37d

bb:                                               ; preds = %dec_label_pc_1e370
  %v2_1e37b = call i32 @function_1e384()
  br label %dec_label_pc_1e37d

dec_label_pc_1e37d:                               ; preds = %bb, %dec_label_pc_1e370
  %v0_1e383 = phi i32 [ %v2_1e37b, %bb ], [ %v2_1e374, %dec_label_pc_1e370 ]
  ret i32 %v0_1e383
}

define i32 @function_1e384() local_unnamed_addr {
dec_label_pc_1e384:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e390:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1e390 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1e3a4 = icmp eq i32 %arg1, 0
  br i1 %v1_1e3a4, label %dec_label_pc_1e3d8, label %dec_label_pc_1e3a8

dec_label_pc_1e3a8:                               ; preds = %dec_label_pc_1e390
  %v1_1e3b3 = add i32 %arg1, 4
  store i32 %v1_1e3b3, i32* @eax, align 8
  store i32 %v1_1e3b3, i32* %stack_var_-44, align 4
  %v1_1e3b9 = call i32 @function_2e8d0(i32 %v1_1e3b3)
  br i1 false, label %dec_label_pc_1e3ea, label %dec_label_pc_1e3cb

dec_label_pc_1e3cb:                               ; preds = %dec_label_pc_1e3a8
  store i32 %v0_1e390, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e3d8

dec_label_pc_1e3d8:                               ; preds = %dec_label_pc_1e3cb, %dec_label_pc_1e390
  %v0_1e3e5.in = phi i32* [ %stack_var_0, %dec_label_pc_1e3cb ], [ %stack_var_-44, %dec_label_pc_1e390 ]
  %v0_1e3e5 = ptrtoint i32* %v0_1e3e5.in to i32
  %v1_1e3d8 = add i32 %v0_1e3e5, 28
  %v2_1e3d8 = inttoptr i32 %v1_1e3d8 to i32*
  %v3_1e3d8 = load i32, i32* %v2_1e3d8, align 4
  %v1_1e3dc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e3dc = xor i32 %v1_1e3dc, %v3_1e3d8
  %v3_1e3dc = icmp eq i32 %v2_1e3dc, 0
  %v1_1e3e3 = icmp eq i1 %v3_1e3dc, false
  br i1 %v1_1e3e3, label %dec_label_pc_1e3ea, label %dec_label_pc_1e3e5

dec_label_pc_1e3e5:                               ; preds = %dec_label_pc_1e3d8
  %v1_1e3e5 = add i32 %v0_1e3e5, 40
  %v1_1e3e8 = inttoptr i32 %v1_1e3e5 to i32*
  %v2_1e3e8 = load i32, i32* %v1_1e3e8, align 4
  store i32 %v2_1e3e8, i32* %ebx.global-to-local, align 4
  ret i32 %v2_1e3dc

dec_label_pc_1e3ea:                               ; preds = %dec_label_pc_1e3d8, %dec_label_pc_1e3a8
  %v1_1e3ea = phi i32 [ %v2_1e3dc, %dec_label_pc_1e3d8 ], [ 0, %dec_label_pc_1e3a8 ]
  ret i32 %v1_1e3ea

; uselistorder directives
  uselistorder i32 %v0_1e3e5, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e400:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1e400 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e401 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e402 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1e40a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1e41a = icmp eq i32 %arg2, 0
  %v1_1e41c = icmp eq i1 %v1_1e41a, false
  br i1 %v1_1e41c, label %dec_label_pc_1e422, label %dec_label_pc_1e41e

dec_label_pc_1e41e:                               ; preds = %dec_label_pc_1e400
  %v4_1e41e = call i32 @function_1e44a(i32 %v0_1e40a, i32 %v0_1e402, i32 %v0_1e401, i32 %v0_1e400)
  store i32 %v4_1e41e, i32* %eax.global-to-local, align 8
  ret i32 %v4_1e41e

dec_label_pc_1e422:                               ; preds = %dec_label_pc_1e400
  %v1_1e422 = add i32 %arg2, 12
  %v2_1e422 = inttoptr i32 %v1_1e422 to i32*
  %v3_1e422 = load i32, i32* %v2_1e422, align 4
  store i32 %v3_1e422, i32* %eax.global-to-local, align 8
  %v2_1e42c = call i32 @unknown_3c800(i32 %arg1, i32 %v3_1e422)
  store i32 %v2_1e42c, i32* %eax.global-to-local, align 8
  %v1_1e431 = add i32 %arg2, 8
  %v2_1e431 = inttoptr i32 %v1_1e431 to i32*
  %v3_1e431 = load i32, i32* %v2_1e431, align 4
  store i32 %v3_1e431, i32* %esi.global-to-local, align 4
  %v1_1e434 = add i32 %arg2, 20
  %v2_1e434 = inttoptr i32 %v1_1e434 to i8*
  %v3_1e434 = load i8, i8* %v2_1e434, align 1
  %v10_1e434 = icmp eq i8 %v3_1e434, 0
  br i1 %v10_1e434, label %dec_label_pc_1e43e, label %dec_label_pc_1e43a

dec_label_pc_1e43a:                               ; preds = %dec_label_pc_1e422
  store i8 0, i8* %v2_1e434, align 1
  %v3_1e43e.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1e43e

dec_label_pc_1e43e:                               ; preds = %dec_label_pc_1e43a, %dec_label_pc_1e422
  %v3_1e43e = phi i32 [ %v3_1e43e.pre, %dec_label_pc_1e43a ], [ %v2_1e42c, %dec_label_pc_1e422 ]
  ret i32 %v3_1e43e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_1e44a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e44a:
  %v1_1e44e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e44e = xor i32 %v1_1e44e, %arg1
  %v3_1e44e = icmp eq i32 %v2_1e44e, 0
  %v1_1e455 = icmp eq i1 %v3_1e44e, false
  br i1 %v1_1e455, label %dec_label_pc_1e45e, label %dec_label_pc_1e457

dec_label_pc_1e457:                               ; preds = %dec_label_pc_1e44a
  ret i32 %v2_1e44e

dec_label_pc_1e45e:                               ; preds = %dec_label_pc_1e44a
  ret i32 %v2_1e44e

; uselistorder directives
  uselistorder i32 %v2_1e44e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e470:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_1e486 = add i32 %tmp99, 16
  %v2_1e486 = inttoptr i32 %v1_1e486 to i32*
  %v3_1e486 = load i32, i32* %v2_1e486, align 4
  %v1_1e48d = add i32 %tmp99, 8
  %v2_1e493 = call i32 @unknown_3c870(i32 %v1_1e48d, i32 %v3_1e486)
  %v2_1e498 = load i32, i32* %arg1, align 4
  %v12_1e49a = icmp eq i32 %v2_1e498, %tmp99
  %v1_1e49c = icmp eq i1 %v12_1e49a, false
  br i1 %v1_1e49c, label %dec_label_pc_1e4a2, label %dec_label_pc_1e49e

dec_label_pc_1e49e:                               ; preds = %dec_label_pc_1e470
  %v0_1e49e = call i32 @function_1e4bb()
  ret i32 %v0_1e49e

dec_label_pc_1e4a2:                               ; preds = %dec_label_pc_1e470
  %v1_1e4a4 = add i32 %v2_1e498, 12
  store i32 %v1_1e4a4, i32* @eax, align 8
  %v1_1e4aa = call i32 @function_2e9b0(i32 %v1_1e4a4)
  ret i32 %v1_1e4aa

; uselistorder directives
  uselistorder i32 %v2_1e498, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_1e4bb() local_unnamed_addr {
dec_label_pc_1e4bb:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_1e4bf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e4bf = xor i32 %v1_1e4bf, %tmp4
  %v3_1e4bf = icmp eq i32 %v2_1e4bf, 0
  %v1_1e4c6 = icmp eq i1 %v3_1e4bf, false
  br i1 %v1_1e4c6, label %dec_label_pc_1e4cf, label %dec_label_pc_1e4c8

dec_label_pc_1e4c8:                               ; preds = %dec_label_pc_1e4bb
  ret i32 %v2_1e4bf

dec_label_pc_1e4cf:                               ; preds = %dec_label_pc_1e4bb
  ret i32 %v2_1e4bf

; uselistorder directives
  uselistorder i32 %v2_1e4bf, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_1e4e0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1e4e0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e4e1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e4e2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1e4e6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1e4f6 = add i32 %arg1, 12
  %v2_1e4f6 = inttoptr i32 %v1_1e4f6 to i32*
  %v3_1e4f6 = load i32, i32* %v2_1e4f6, align 4
  store i32 %v3_1e4f6, i32* %edi.global-to-local, align 4
  %v1_1e4f9 = icmp eq i32 %v3_1e4f6, 0
  br i1 %v1_1e4f9, label %bb, label %dec_label_pc_1e4fd

bb:                                               ; preds = %dec_label_pc_1e4e0
  %v5_1e4fb = call i32 @function_1e550(i32 %v0_1e4e6, i32 %v0_1e4e2, i32 %v0_1e4e1, i32 %v0_1e4e0)
  br label %dec_label_pc_1e4fd

dec_label_pc_1e4fd:                               ; preds = %bb, %dec_label_pc_1e4e0
  %v1_1e4fd = add i32 %v3_1e4f6, 16
  %v2_1e4fd = inttoptr i32 %v1_1e4fd to i32*
  %v3_1e4fd = load i32, i32* %v2_1e4fd, align 4
  %v1_1e504 = add i32 %v3_1e4f6, 8
  %v2_1e50a = call i32 @unknown_3c8e0(i32 %v1_1e504, i32 %v3_1e4fd)
  %v1_1e50f = inttoptr i32 %v3_1e4f6 to i32*
  %v2_1e50f = load i32, i32* %v1_1e50f, align 4
  store i32 %v2_1e50f, i32* %ebx.global-to-local, align 4
  %v12_1e511 = icmp eq i32 %v2_1e50f, %v3_1e4f6
  %v1_1e513 = icmp eq i1 %v12_1e511, false
  br i1 %v1_1e513, label %dec_label_pc_1e51a, label %dec_label_pc_1e515

dec_label_pc_1e515:                               ; preds = %dec_label_pc_1e4fd
  %v0_1e515 = call i32 @function_1e533()
  ret i32 %v0_1e515

dec_label_pc_1e51a:                               ; preds = %dec_label_pc_1e4fd
  %v1_1e51a = inttoptr i32 %v2_1e50f to i32*
  %v2_1e51a = load i32, i32* %v1_1e51a, align 4
  store i32 %v2_1e51a, i32* %esi.global-to-local, align 4
  %v1_1e51c = add i32 %v2_1e50f, 12
  store i32 %v1_1e51c, i32* @eax, align 8
  %v1_1e522 = call i32 @function_2ea20(i32 %v1_1e51c)
  ret i32 %v1_1e522

; uselistorder directives
  uselistorder i32 %v2_1e50f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1e4f6, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2ea20, { 1, 0 }
}

define i32 @function_1e533() local_unnamed_addr {
dec_label_pc_1e533:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_1e537 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e537 = xor i32 %v1_1e537, %tmp9
  %v3_1e537 = icmp eq i32 %v2_1e537, 0
  store i32 %v2_1e537, i32* @eax, align 8
  %v1_1e53e = icmp eq i1 %v3_1e537, false
  br i1 %v1_1e53e, label %bb, label %dec_label_pc_1e540

bb:                                               ; preds = %dec_label_pc_1e533
  %v2_1e53e = call i32 @function_1e564()
  br label %dec_label_pc_1e540

dec_label_pc_1e540:                               ; preds = %bb, %dec_label_pc_1e533
  %v0_1e54f = phi i32 [ %v2_1e53e, %bb ], [ %v2_1e537, %dec_label_pc_1e533 ]
  ret i32 %v0_1e54f
}

define i32 @function_1e550(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e550:
  %v1_1e554 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e554 = xor i32 %v1_1e554, %arg1
  %v3_1e554 = icmp eq i32 %v2_1e554, 0
  store i32 %v2_1e554, i32* @eax, align 8
  %v1_1e55b = icmp eq i1 %v3_1e554, false
  br i1 %v1_1e55b, label %bb, label %dec_label_pc_1e55d

bb:                                               ; preds = %dec_label_pc_1e550
  %v2_1e55b = call i32 @function_1e564()
  br label %dec_label_pc_1e55d

dec_label_pc_1e55d:                               ; preds = %bb, %dec_label_pc_1e550
  %v0_1e563 = phi i32 [ %v2_1e55b, %bb ], [ %v2_1e554, %dec_label_pc_1e550 ]
  ret i32 %v0_1e563

; uselistorder directives
  uselistorder i32 ()* @function_1e564, { 1, 0 }
}

define i32 @function_1e564() local_unnamed_addr {
dec_label_pc_1e564:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e570:
  %v1_1e584 = icmp eq i32 %arg1, 0
  br i1 %v1_1e584, label %bb, label %dec_label_pc_1e588

bb:                                               ; preds = %dec_label_pc_1e570
  %v0_1e578 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e586 = call i32 @function_1e5b8(i32 %v0_1e578)
  br label %dec_label_pc_1e588

dec_label_pc_1e588:                               ; preds = %bb, %dec_label_pc_1e570
  %v1_1e588 = add i32 %arg1, 12
  ret i32 %v1_1e588
}

define i32 @function_1e5b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5b8:
  %v1_1e5bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e5bc = xor i32 %v1_1e5bc, %arg1
  %v3_1e5bc = icmp eq i32 %v2_1e5bc, 0
  %v1_1e5c3 = icmp eq i1 %v3_1e5bc, false
  br i1 %v1_1e5c3, label %dec_label_pc_1e5ca, label %dec_label_pc_1e5c5

dec_label_pc_1e5c5:                               ; preds = %dec_label_pc_1e5b8
  ret i32 %v2_1e5bc

dec_label_pc_1e5ca:                               ; preds = %dec_label_pc_1e5b8
  ret i32 %v2_1e5bc

; uselistorder directives
  uselistorder i32 %v2_1e5bc, { 1, 0, 2 }
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5e0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_1e5e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1e5f4 = icmp eq i32 %arg1, 0
  br i1 %v1_1e5f4, label %dec_label_pc_1e628, label %dec_label_pc_1e5f8

dec_label_pc_1e5f8:                               ; preds = %dec_label_pc_1e5e0
  %v1_1e5f8 = add i32 %arg1, 12
  store i32 %v1_1e5f8, i32* @eax, align 8
  store i32 %v1_1e5f8, i32* %stack_var_-60, align 4
  %v1_1e5fe = call i32 @function_2eb20(i32 %v1_1e5f8)
  %v1_1e603 = add i32 %arg1, 4
  store i32 %v1_1e603, i32* @eax, align 8
  store i32 %v1_1e603, i32* %stack_var_-60, align 4
  %v1_1e609 = call i32 @function_2eb20(i32 %v1_1e603)
  br i1 false, label %dec_label_pc_1e63a, label %dec_label_pc_1e61b

dec_label_pc_1e61b:                               ; preds = %dec_label_pc_1e5f8
  store i32 %v0_1e5e0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e628

dec_label_pc_1e628:                               ; preds = %dec_label_pc_1e61b, %dec_label_pc_1e5e0
  %v0_1e635.in = phi i32* [ %stack_var_0, %dec_label_pc_1e61b ], [ %stack_var_-60, %dec_label_pc_1e5e0 ]
  %v0_1e635 = ptrtoint i32* %v0_1e635.in to i32
  %v1_1e628 = add i32 %v0_1e635, 44
  %v2_1e628 = inttoptr i32 %v1_1e628 to i32*
  %v3_1e628 = load i32, i32* %v2_1e628, align 4
  %v1_1e62c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e62c = xor i32 %v1_1e62c, %v3_1e628
  %v3_1e62c = icmp eq i32 %v2_1e62c, 0
  %v1_1e633 = icmp eq i1 %v3_1e62c, false
  br i1 %v1_1e633, label %dec_label_pc_1e63a, label %dec_label_pc_1e635

dec_label_pc_1e635:                               ; preds = %dec_label_pc_1e628
  %v1_1e635 = add i32 %v0_1e635, ptrtoint (i32* @global_var_38.2432 to i32)
  %v1_1e638 = inttoptr i32 %v1_1e635 to i32*
  %v2_1e638 = load i32, i32* %v1_1e638, align 4
  store i32 %v2_1e638, i32* %ebx.global-to-local, align 4
  ret i32 %v2_1e62c

dec_label_pc_1e63a:                               ; preds = %dec_label_pc_1e628, %dec_label_pc_1e5f8
  %v1_1e63a = phi i32 [ %v2_1e62c, %dec_label_pc_1e628 ], [ 0, %dec_label_pc_1e5f8 ]
  ret i32 %v1_1e63a

; uselistorder directives
  uselistorder i32 %v0_1e635, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_2eb20, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_1e646() local_unnamed_addr {
dec_label_pc_1e646:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e646 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e646
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e660:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_1e660 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1e674 = icmp eq i32 %arg1, 0
  br i1 %v1_1e674, label %dec_label_pc_1e6a8, label %dec_label_pc_1e678

dec_label_pc_1e678:                               ; preds = %dec_label_pc_1e660
  %v1_1e678 = add i32 %arg1, 12
  store i32 %v1_1e678, i32* @eax, align 8
  store i32 %v1_1e678, i32* %stack_var_-60, align 4
  %v1_1e67e = call i32 @function_2eba0(i32 %v1_1e678)
  %v1_1e683 = add i32 %arg1, 4
  store i32 %v1_1e683, i32* @eax, align 8
  store i32 %v1_1e683, i32* %stack_var_-60, align 4
  %v1_1e689 = call i32 @function_2eba0(i32 %v1_1e683)
  br i1 false, label %dec_label_pc_1e6ba, label %dec_label_pc_1e69b

dec_label_pc_1e69b:                               ; preds = %dec_label_pc_1e678
  store i32 %v0_1e660, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e6a8

dec_label_pc_1e6a8:                               ; preds = %dec_label_pc_1e69b, %dec_label_pc_1e660
  %v0_1e6b5.in = phi i32* [ %stack_var_0, %dec_label_pc_1e69b ], [ %stack_var_-60, %dec_label_pc_1e660 ]
  %v0_1e6b5 = ptrtoint i32* %v0_1e6b5.in to i32
  %v1_1e6a8 = add i32 %v0_1e6b5, 44
  %v2_1e6a8 = inttoptr i32 %v1_1e6a8 to i32*
  %v3_1e6a8 = load i32, i32* %v2_1e6a8, align 4
  %v1_1e6ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e6ac = xor i32 %v1_1e6ac, %v3_1e6a8
  %v3_1e6ac = icmp eq i32 %v2_1e6ac, 0
  %v1_1e6b3 = icmp eq i1 %v3_1e6ac, false
  br i1 %v1_1e6b3, label %dec_label_pc_1e6ba, label %dec_label_pc_1e6b5

dec_label_pc_1e6b5:                               ; preds = %dec_label_pc_1e6a8
  %v1_1e6b5 = add i32 %v0_1e6b5, ptrtoint (i32* @global_var_38.2432 to i32)
  %v1_1e6b8 = inttoptr i32 %v1_1e6b5 to i32*
  %v2_1e6b8 = load i32, i32* %v1_1e6b8, align 4
  store i32 %v2_1e6b8, i32* %ebx.global-to-local, align 4
  ret i32 %v2_1e6ac

dec_label_pc_1e6ba:                               ; preds = %dec_label_pc_1e6a8, %dec_label_pc_1e678
  %v1_1e6ba = phi i32 [ %v2_1e6ac, %dec_label_pc_1e6a8 ], [ 0, %dec_label_pc_1e678 ]
  ret i32 %v1_1e6ba

; uselistorder directives
  uselistorder i32 %v0_1e6b5, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_2eba0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_1e6c6() local_unnamed_addr {
dec_label_pc_1e6c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e6c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e6c6
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e6e0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_1e6e0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e6e1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e6e2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v2_1e6f6 = load i32, i32* %arg1, align 4
  store i32 %v2_1e6f6, i32* %ebx.global-to-local, align 4
  %v12_1e6f8 = icmp eq i32 %v2_1e6f6, %tmp100
  %v1_1e6fa = icmp eq i1 %v12_1e6f8, false
  br i1 %v1_1e6fa, label %dec_label_pc_1e702, label %dec_label_pc_1e71b

dec_label_pc_1e700:                               ; preds = %dec_label_pc_1e702
  store i32 %v2_1e702, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e702

dec_label_pc_1e702:                               ; preds = %dec_label_pc_1e6e0, %dec_label_pc_1e700
  %v0_1e702 = phi i32 [ %v2_1e702, %dec_label_pc_1e700 ], [ %v2_1e6f6, %dec_label_pc_1e6e0 ]
  %v1_1e702 = inttoptr i32 %v0_1e702 to i32*
  %v2_1e702 = load i32, i32* %v1_1e702, align 4
  store i32 %v2_1e702, i32* %esi.global-to-local, align 4
  %v1_1e704 = add i32 %v0_1e702, 12
  store i32 %v1_1e704, i32* @eax, align 8
  %v1_1e70a = call i32 @function_2ec20(i32 %v1_1e704)
  %v1_1e717 = load i32, i32* %edi.global-to-local, align 4
  %v12_1e717 = icmp eq i32 %v2_1e702, %v1_1e717
  %v1_1e719 = icmp eq i1 %v12_1e717, false
  br i1 %v1_1e719, label %dec_label_pc_1e700, label %dec_label_pc_1e71b

dec_label_pc_1e71b:                               ; preds = %dec_label_pc_1e702, %dec_label_pc_1e6e0
  br i1 false, label %dec_label_pc_1e72f, label %dec_label_pc_1e728

dec_label_pc_1e728:                               ; preds = %dec_label_pc_1e71b
  store i32 %v0_1e6e2, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e6e1, i32* %esi.global-to-local, align 4
  store i32 %v0_1e6e0, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_1e72f:                               ; preds = %dec_label_pc_1e71b
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1e702, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1e702, { 1, 0 }
  uselistorder i32 %v2_1e6f6, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1e702, { 1, 0 }
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e740:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_1e740 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e741 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e742 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp104, i32* %edi.global-to-local, align 4
  %v1_1e756 = icmp eq i32* %arg1, null
  br i1 %v1_1e756, label %dec_label_pc_1e7b0, label %dec_label_pc_1e75a

dec_label_pc_1e75a:                               ; preds = %dec_label_pc_1e740
  %v1_1e75a = add i32 %tmp104, 16
  %v2_1e75a = inttoptr i32 %v1_1e75a to i32*
  %v3_1e75a = load i32, i32* %v2_1e75a, align 4
  %v1_1e761 = add i32 %tmp104, 8
  store i32 %v1_1e761, i32* %stack_var_-44, align 4
  %v2_1e767 = call i32 @unknown_3c960(i32 %v1_1e761, i32 %v3_1e75a)
  %v2_1e76c = load i32, i32* %arg1, align 4
  store i32 %v2_1e76c, i32* %ebx.global-to-local, align 4
  %v12_1e76e = icmp eq i32 %v2_1e76c, %tmp104
  %v1_1e770 = icmp eq i1 %v12_1e76e, false
  br i1 %v1_1e770, label %dec_label_pc_1e77a, label %dec_label_pc_1e793

dec_label_pc_1e778:                               ; preds = %dec_label_pc_1e77a
  store i32 %v0_1e78f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e77a

dec_label_pc_1e77a:                               ; preds = %dec_label_pc_1e75a, %dec_label_pc_1e778
  %v0_1e77a = phi i32 [ %v0_1e78f, %dec_label_pc_1e778 ], [ %v2_1e76c, %dec_label_pc_1e75a ]
  %v1_1e77a = inttoptr i32 %v0_1e77a to i32*
  %v2_1e77a = load i32, i32* %v1_1e77a, align 4
  store i32 %v2_1e77a, i32* %esi.global-to-local, align 4
  %v1_1e77c = add i32 %v0_1e77a, 12
  store i32 %v1_1e77c, i32* @eax, align 8
  store i32 %v1_1e77c, i32* %stack_var_-44, align 4
  %v1_1e782 = call i32 @function_2ec80(i32 %v1_1e77c)
  %v0_1e787 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e787, i32* %stack_var_-44, align 4
  %v0_1e78f = load i32, i32* %esi.global-to-local, align 4
  %v12_1e78f = icmp eq i32 %v0_1e78f, %tmp104
  %v1_1e791 = icmp eq i1 %v12_1e78f, false
  br i1 %v1_1e791, label %dec_label_pc_1e778, label %dec_label_pc_1e793

dec_label_pc_1e793:                               ; preds = %dec_label_pc_1e77a, %dec_label_pc_1e75a
  br i1 false, label %dec_label_pc_1e7c4, label %dec_label_pc_1e7a0

dec_label_pc_1e7a0:                               ; preds = %dec_label_pc_1e793
  store i32 %v0_1e742, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e741, i32* %esi.global-to-local, align 4
  store i32 %v0_1e740, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_1e7b0

dec_label_pc_1e7b0:                               ; preds = %dec_label_pc_1e7a0, %dec_label_pc_1e740
  %v0_1e7bd.in = phi i32* [ %stack_var_0, %dec_label_pc_1e7a0 ], [ %stack_var_-44, %dec_label_pc_1e740 ]
  %v0_1e7bd = ptrtoint i32* %v0_1e7bd.in to i32
  %v1_1e7b0 = add i32 %v0_1e7bd, 28
  %v2_1e7b0 = inttoptr i32 %v1_1e7b0 to i32*
  %v3_1e7b0 = load i32, i32* %v2_1e7b0, align 4
  %v1_1e7b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e7b4 = xor i32 %v1_1e7b4, %v3_1e7b0
  %v3_1e7b4 = icmp eq i32 %v2_1e7b4, 0
  %v1_1e7bb = icmp eq i1 %v3_1e7b4, false
  br i1 %v1_1e7bb, label %dec_label_pc_1e7c4, label %dec_label_pc_1e7bd

dec_label_pc_1e7bd:                               ; preds = %dec_label_pc_1e7b0
  %v1_1e7bd = add i32 %v0_1e7bd, 32
  %v1_1e7c0 = inttoptr i32 %v1_1e7bd to i32*
  %v2_1e7c0 = load i32, i32* %v1_1e7c0, align 4
  store i32 %v2_1e7c0, i32* %ebx.global-to-local, align 4
  %v3_1e7c0 = add i32 %v0_1e7bd, 36
  %v1_1e7c1 = inttoptr i32 %v3_1e7c0 to i32*
  %v2_1e7c1 = load i32, i32* %v1_1e7c1, align 4
  store i32 %v2_1e7c1, i32* %esi.global-to-local, align 4
  %v3_1e7c1 = add i32 %v0_1e7bd, 40
  %v1_1e7c2 = inttoptr i32 %v3_1e7c1 to i32*
  %v2_1e7c2 = load i32, i32* %v1_1e7c2, align 4
  store i32 %v2_1e7c2, i32* %edi.global-to-local, align 4
  ret i32 %v2_1e7b4

dec_label_pc_1e7c4:                               ; preds = %dec_label_pc_1e7b0, %dec_label_pc_1e793
  %v1_1e7c3 = phi i32 [ %v2_1e7b4, %dec_label_pc_1e7b0 ], [ 0, %dec_label_pc_1e793 ]
  ret i32 %v1_1e7c3

; uselistorder directives
  uselistorder i32 %v0_1e7bd, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1e78f, { 0, 2, 1 }
  uselistorder i32 %v0_1e77a, { 1, 0 }
  uselistorder i32 %v2_1e76c, { 1, 0, 2 }
  uselistorder i32 %tmp104, { 0, 1, 3, 2, 4 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 4, 2, 5, 0 }
  uselistorder label %dec_label_pc_1e77a, { 1, 0 }
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e7d0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_1e7d0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e7d1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e7d2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp104, i32* %edi.global-to-local, align 4
  %v1_1e7e6 = icmp eq i32* %arg1, null
  br i1 %v1_1e7e6, label %dec_label_pc_1e840, label %dec_label_pc_1e7ea

dec_label_pc_1e7ea:                               ; preds = %dec_label_pc_1e7d0
  %v1_1e7ea = add i32 %tmp104, 16
  %v2_1e7ea = inttoptr i32 %v1_1e7ea to i32*
  %v3_1e7ea = load i32, i32* %v2_1e7ea, align 4
  %v1_1e7f1 = add i32 %tmp104, 8
  store i32 %v1_1e7f1, i32* %stack_var_-44, align 4
  %v2_1e7f7 = call i32 @unknown_3cbd0(i32 %v1_1e7f1, i32 %v3_1e7ea)
  %v2_1e7fc = load i32, i32* %arg1, align 4
  store i32 %v2_1e7fc, i32* %ebx.global-to-local, align 4
  %v12_1e7fe = icmp eq i32 %v2_1e7fc, %tmp104
  %v1_1e800 = icmp eq i1 %v12_1e7fe, false
  br i1 %v1_1e800, label %dec_label_pc_1e80a, label %dec_label_pc_1e823

dec_label_pc_1e808:                               ; preds = %dec_label_pc_1e80a
  store i32 %v0_1e81f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e80a

dec_label_pc_1e80a:                               ; preds = %dec_label_pc_1e7ea, %dec_label_pc_1e808
  %v0_1e80a = phi i32 [ %v0_1e81f, %dec_label_pc_1e808 ], [ %v2_1e7fc, %dec_label_pc_1e7ea ]
  %v1_1e80a = inttoptr i32 %v0_1e80a to i32*
  %v2_1e80a = load i32, i32* %v1_1e80a, align 4
  store i32 %v2_1e80a, i32* %esi.global-to-local, align 4
  %v1_1e80c = add i32 %v0_1e80a, 12
  store i32 %v1_1e80c, i32* @eax, align 8
  store i32 %v1_1e80c, i32* %stack_var_-44, align 4
  %v1_1e812 = call i32 @function_2ed10(i32 %v1_1e80c)
  %v0_1e817 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e817, i32* %stack_var_-44, align 4
  %v0_1e81f = load i32, i32* %esi.global-to-local, align 4
  %v12_1e81f = icmp eq i32 %v0_1e81f, %tmp104
  %v1_1e821 = icmp eq i1 %v12_1e81f, false
  br i1 %v1_1e821, label %dec_label_pc_1e808, label %dec_label_pc_1e823

dec_label_pc_1e823:                               ; preds = %dec_label_pc_1e80a, %dec_label_pc_1e7ea
  br i1 false, label %dec_label_pc_1e854, label %dec_label_pc_1e830

dec_label_pc_1e830:                               ; preds = %dec_label_pc_1e823
  store i32 %v0_1e7d2, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e7d1, i32* %esi.global-to-local, align 4
  store i32 %v0_1e7d0, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_1e840

dec_label_pc_1e840:                               ; preds = %dec_label_pc_1e830, %dec_label_pc_1e7d0
  %v0_1e84d.in = phi i32* [ %stack_var_0, %dec_label_pc_1e830 ], [ %stack_var_-44, %dec_label_pc_1e7d0 ]
  %v0_1e84d = ptrtoint i32* %v0_1e84d.in to i32
  %v1_1e840 = add i32 %v0_1e84d, 28
  %v2_1e840 = inttoptr i32 %v1_1e840 to i32*
  %v3_1e840 = load i32, i32* %v2_1e840, align 4
  %v1_1e844 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e844 = xor i32 %v1_1e844, %v3_1e840
  %v3_1e844 = icmp eq i32 %v2_1e844, 0
  %v1_1e84b = icmp eq i1 %v3_1e844, false
  br i1 %v1_1e84b, label %dec_label_pc_1e854, label %dec_label_pc_1e84d

dec_label_pc_1e84d:                               ; preds = %dec_label_pc_1e840
  %v1_1e84d = add i32 %v0_1e84d, 32
  %v1_1e850 = inttoptr i32 %v1_1e84d to i32*
  %v2_1e850 = load i32, i32* %v1_1e850, align 4
  store i32 %v2_1e850, i32* %ebx.global-to-local, align 4
  %v3_1e850 = add i32 %v0_1e84d, 36
  %v1_1e851 = inttoptr i32 %v3_1e850 to i32*
  %v2_1e851 = load i32, i32* %v1_1e851, align 4
  store i32 %v2_1e851, i32* %esi.global-to-local, align 4
  %v3_1e851 = add i32 %v0_1e84d, 40
  %v1_1e852 = inttoptr i32 %v3_1e851 to i32*
  %v2_1e852 = load i32, i32* %v1_1e852, align 4
  store i32 %v2_1e852, i32* %edi.global-to-local, align 4
  ret i32 %v2_1e844

dec_label_pc_1e854:                               ; preds = %dec_label_pc_1e840, %dec_label_pc_1e823
  %v1_1e853 = phi i32 [ %v2_1e844, %dec_label_pc_1e840 ], [ 0, %dec_label_pc_1e823 ]
  ret i32 %v1_1e853

; uselistorder directives
  uselistorder i32 %v0_1e84d, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1e81f, { 0, 2, 1 }
  uselistorder i32 %v0_1e80a, { 1, 0 }
  uselistorder i32 %v2_1e7fc, { 1, 0, 2 }
  uselistorder i32 %tmp104, { 0, 1, 3, 2, 4 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 4, 2, 5, 0 }
  uselistorder label %dec_label_pc_1e80a, { 1, 0 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e860:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_1e860 = load i32, i32* %edi.global-to-local, align 4
  %v0_1e861 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e862 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v2_1e876 = load i32, i32* %arg1, align 4
  store i32 %v2_1e876, i32* %ebx.global-to-local, align 4
  %v12_1e878 = icmp eq i32 %v2_1e876, %tmp100
  %v1_1e87a = icmp eq i1 %v12_1e878, false
  br i1 %v1_1e87a, label %dec_label_pc_1e882, label %dec_label_pc_1e89b

dec_label_pc_1e880:                               ; preds = %dec_label_pc_1e882
  store i32 %v2_1e882, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e882

dec_label_pc_1e882:                               ; preds = %dec_label_pc_1e860, %dec_label_pc_1e880
  %v0_1e882 = phi i32 [ %v2_1e882, %dec_label_pc_1e880 ], [ %v2_1e876, %dec_label_pc_1e860 ]
  %v1_1e882 = inttoptr i32 %v0_1e882 to i32*
  %v2_1e882 = load i32, i32* %v1_1e882, align 4
  store i32 %v2_1e882, i32* %esi.global-to-local, align 4
  %v1_1e884 = add i32 %v0_1e882, 12
  store i32 %v1_1e884, i32* @eax, align 8
  %v1_1e88a = call i32 @function_2eda0(i32 %v1_1e884)
  %v1_1e897 = load i32, i32* %edi.global-to-local, align 4
  %v12_1e897 = icmp eq i32 %v2_1e882, %v1_1e897
  %v1_1e899 = icmp eq i1 %v12_1e897, false
  br i1 %v1_1e899, label %dec_label_pc_1e880, label %dec_label_pc_1e89b

dec_label_pc_1e89b:                               ; preds = %dec_label_pc_1e882, %dec_label_pc_1e860
  br i1 false, label %dec_label_pc_1e8af, label %dec_label_pc_1e8a8

dec_label_pc_1e8a8:                               ; preds = %dec_label_pc_1e89b
  store i32 %v0_1e862, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e861, i32* %esi.global-to-local, align 4
  store i32 %v0_1e860, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_1e8af:                               ; preds = %dec_label_pc_1e89b
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1e882, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1e882, { 1, 0 }
  uselistorder i32 %v2_1e876, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1e882, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e8c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_1e8c5 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1e8d9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp110, i32* %ebx.global-to-local, align 4
  %v0_1e8e1 = load i32, i32* %edi.global-to-local, align 4
  %v1_1e8e5 = add i32 %arg2, 4
  %v2_1e8e5 = inttoptr i32 %v1_1e8e5 to i32*
  %v3_1e8e5 = load i32, i32* %v2_1e8e5, align 4
  %v1_1e8f0 = icmp eq i32 %v3_1e8e5, 0
  store i32 %v3_1e8e5, i32* %stack_var_-20, align 4
  br i1 %v1_1e8f0, label %dec_label_pc_1e915, label %dec_label_pc_1e8f8

dec_label_pc_1e8f8:                               ; preds = %dec_label_pc_1e8c0
  %v1_1e8f8 = add i32 %v3_1e8e5, 4
  %v2_1e8f8 = inttoptr i32 %v1_1e8f8 to i32*
  %v3_1e8f8 = load i32, i32* %v2_1e8f8, align 4
  store i32 %v3_1e8f8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1e8fb

dec_label_pc_1e8fb:                               ; preds = %dec_label_pc_1e8ff, %dec_label_pc_1e8f8
  %v0_1e8ff = phi i32 [ %v3_1e902, %dec_label_pc_1e8ff ], [ %v3_1e8f8, %dec_label_pc_1e8f8 ]
  %v1_1e8fb = icmp eq i32 %v0_1e8ff, 0
  br i1 %v1_1e8fb, label %dec_label_pc_1e909, label %dec_label_pc_1e8ff

dec_label_pc_1e8ff:                               ; preds = %dec_label_pc_1e8fb
  %v1_1e901 = add i32 %v0_1e8ff, 1
  store i32 %v1_1e901, i32* %edi.global-to-local, align 4
  %v3_1e902 = load i32, i32* %v2_1e8f8, align 4
  %v16_1e902 = icmp eq i32 %v0_1e8ff, %v3_1e902
  %v23_1e902 = select i1 %v16_1e902, i32 %v1_1e901, i32 %v3_1e902
  store i32 %v23_1e902, i32* %v2_1e8f8, align 4
  store i32 %v3_1e902, i32* %eax.global-to-local, align 8
  %v1_1e907 = icmp eq i1 %v16_1e902, false
  br i1 %v1_1e907, label %dec_label_pc_1e8fb, label %dec_label_pc_1e909

dec_label_pc_1e909:                               ; preds = %dec_label_pc_1e8ff, %dec_label_pc_1e8fb
  %v0_1e909 = phi i32 [ %v0_1e8ff, %dec_label_pc_1e8ff ], [ 0, %dec_label_pc_1e8fb ]
  %v1_1e909 = icmp eq i32 %v0_1e909, 0
  %v1_1e90b = icmp eq i1 %v1_1e909, false
  br i1 %v1_1e90b, label %dec_label_pc_1e960, label %dec_label_pc_1e90d

dec_label_pc_1e90d:                               ; preds = %dec_label_pc_1e909
  store i32 0, i32* %stack_var_-20, align 4
  br label %dec_label_pc_1e915

dec_label_pc_1e915:                               ; preds = %dec_label_pc_1e960, %dec_label_pc_1e90d, %dec_label_pc_1e8c0
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1e8c0 ], [ %v2_1e960, %dec_label_pc_1e960 ], [ 0, %dec_label_pc_1e90d ]
  %v0_1e915 = load i32, i32* %ebx.global-to-local, align 4
  %v10_1e915 = icmp eq i32 %v0_1e915, -4
  br i1 %v10_1e915, label %dec_label_pc_1e92c, label %dec_label_pc_1e91a

dec_label_pc_1e91a:                               ; preds = %dec_label_pc_1e915
  store i32 %stack_var_-24.0, i32* %eax.global-to-local, align 8
  %v0_1e91e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e91e = icmp eq i32 %v0_1e91e, 0
  %v2_1e920 = add i32 %v0_1e915, 8
  %v3_1e920 = inttoptr i32 %v2_1e920 to i32*
  store i32 %v0_1e91e, i32* %v3_1e920, align 4
  %v0_1e923 = load i32, i32* %eax.global-to-local, align 8
  %v1_1e923 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1e923 = add i32 %v1_1e923, 4
  %v3_1e923 = inttoptr i32 %v2_1e923 to i32*
  store i32 %v0_1e923, i32* %v3_1e923, align 4
  br i1 %v1_1e91e, label %dec_label_pc_1e92c, label %dec_label_pc_1e928

dec_label_pc_1e928:                               ; preds = %dec_label_pc_1e91a
  %v0_1e928 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e928 = add i32 %v0_1e928, 4
  %v2_1e928 = inttoptr i32 %v1_1e928 to i32*
  %v3_1e928 = load i32, i32* %v2_1e928, align 4
  %v4_1e928 = add i32 %v3_1e928, 1
  store i32 %v4_1e928, i32* %v2_1e928, align 4
  br label %dec_label_pc_1e92c

dec_label_pc_1e92c:                               ; preds = %dec_label_pc_1e928, %dec_label_pc_1e91a, %dec_label_pc_1e915
  %v2_1e92c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1e92c, i32* @eax, align 8
  %v0_1e930 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e930 = inttoptr i32 %v0_1e930 to i32*
  store i32 0, i32* %v1_1e930, align 4
  %v1_1e939 = call i32 @_ZZN5boost8optionalISsE3getEvE19__PRETTY_FUNCTION__(i32 %v2_1e92c)
  %v0_1e93e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e93e, i32* %eax.global-to-local, align 8
  br i1 false, label %dec_label_pc_1e96a, label %dec_label_pc_1e94d

dec_label_pc_1e94d:                               ; preds = %dec_label_pc_1e92c
  store i32 %v0_1e8d9, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e8c5, i32* %esi.global-to-local, align 4
  store i32 %v0_1e8e1, i32* %edi.global-to-local, align 4
  ret i32 %v0_1e93e

dec_label_pc_1e960:                               ; preds = %dec_label_pc_1e909
  %v0_1e960 = load i32, i32* %esi.global-to-local, align 4
  %v1_1e960 = inttoptr i32 %v0_1e960 to i32*
  %v2_1e960 = load i32, i32* %v1_1e960, align 4
  store i32 %v2_1e960, i32* %eax.global-to-local, align 8
  store i32 %v3_1e8e5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1e915

dec_label_pc_1e96a:                               ; preds = %dec_label_pc_1e92c
  ret i32 %v0_1e93e

; uselistorder directives
  uselistorder i32 %v2_1e960, { 1, 0 }
  uselistorder i32 %v0_1e915, { 1, 0 }
  uselistorder i32 %v3_1e902, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1e8ff, { 1, 0, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e970:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v16_1e971 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %tmp105, i32* %ebx.global-to-local, align 4
  %v1_1e988 = inttoptr i32 %arg2 to i32*
  %v2_1e988 = load i32, i32* %v1_1e988, align 4
  store i32 %v2_1e988, i32* %eax.global-to-local, align 8
  %v1_1e98a = icmp eq i32 %v2_1e988, 0
  br i1 %v1_1e98a, label %dec_label_pc_1e9e6, label %dec_label_pc_1e98e

dec_label_pc_1e98e:                               ; preds = %dec_label_pc_1e970
  %v2_1e990 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1e990, i32* %stack_var_-44, align 4
  %v1_1e9a1 = add i32 %tmp105, 4
  %v10_1e9a1 = icmp eq i32 %v1_1e9a1, 0
  br i1 %v10_1e9a1, label %dec_label_pc_1e9b5, label %dec_label_pc_1e9a6

dec_label_pc_1e9a6:                               ; preds = %dec_label_pc_1e98e
  %v3_1e9b2 = inttoptr i32 %v1_1e9a1 to i32*
  %v0_1e9b9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e9b5

dec_label_pc_1e9b5:                               ; preds = %dec_label_pc_1e9a6, %dec_label_pc_1e98e
  %v0_1e9b9 = phi i32 [ %v0_1e9b9.pre, %dec_label_pc_1e9a6 ], [ %tmp105, %dec_label_pc_1e98e ]
  %v1_1e9b9 = inttoptr i32 %v0_1e9b9 to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v1_1e9b9, align 4
  %v1_1e9bf = icmp eq i32 %tmp100, 0
  br i1 %v1_1e9bf, label %dec_label_pc_1e9cb, label %dec_label_pc_1e9c3

dec_label_pc_1e9c3:                               ; preds = %dec_label_pc_1e9b5
  br label %dec_label_pc_1e9cb

dec_label_pc_1e9cb:                               ; preds = %dec_label_pc_1e9c3, %dec_label_pc_1e9b5
  %v3_1e9cb = load i32, i32* %stack_var_-20, align 4
  %v1_1e9cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e9cf = icmp eq i32 %v1_1e9cf, %v3_1e9cb
  %v0_1e9d6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1e9d6, i32* %eax.global-to-local, align 8
  %v1_1e9d8 = icmp eq i1 %v3_1e9cf, false
  %v0_1e9e6.pre = load i32, i32* @esp, align 4
  br i1 %v1_1e9d8, label %dec_label_pc_1e9e6, label %dec_label_pc_1e9da

dec_label_pc_1e9da:                               ; preds = %dec_label_pc_1e9cb
  ret i32 %v0_1e9d6

dec_label_pc_1e9e6:                               ; preds = %dec_label_pc_1e9cb, %dec_label_pc_1e970
  %v0_1e9e6 = phi i32 [ %v16_1e971, %dec_label_pc_1e970 ], [ %v0_1e9e6.pre, %dec_label_pc_1e9cb ]
  %v1_1e9e6 = add i32 %v0_1e9e6, 12
  %v2_1e9e6 = inttoptr i32 %v1_1e9e6 to i32*
  store i32 ptrtoint ([107 x i8]* @global_var_28bc0.2715 to i32), i32* %v2_1e9e6, align 4
  %v0_1e9ee = load i32, i32* @esp, align 4
  %v1_1e9ee = add i32 %v0_1e9ee, 8
  %v2_1e9ee = inttoptr i32 %v1_1e9ee to i32*
  store i32 ptrtoint (i32* @global_var_61.2716 to i32), i32* %v2_1e9ee, align 4
  %v0_1e9f6 = load i32, i32* @esp, align 4
  %v1_1e9f6 = add i32 %v0_1e9f6, 4
  %v2_1e9f6 = inttoptr i32 %v1_1e9f6 to i32*
  store i32 ptrtoint ([44 x i8]* @global_var_dbec.2717 to i32), i32* %v2_1e9f6, align 4
  %v0_1e9fe = load i32, i32* @esp, align 4
  %v1_1e9fe = inttoptr i32 %v0_1e9fe to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_9f6e.2573 to i32), i32* %v1_1e9fe, align 4
  %v2_1e9fe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_1e9fe

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1ea09() local_unnamed_addr {
dec_label_pc_1ea09:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ea09 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ea09 = add i32 %v0_1ea09, -1994906540
  %v2_1ea09 = inttoptr i32 %v1_1ea09 to i32*
  %v3_1ea09 = load i32, i32* %v2_1ea09, align 4
  %v4_1ea09 = sub i32 %v3_1ea09, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1ea09, i32* %v2_1ea09, align 4
  %v0_1ea0f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ea0f
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_21lock_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1ea30:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1ea37 = load i32, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v0_1ea3f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_1ea50 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v0_1ea5b = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %esi.global-to-local, align 4
  %tmp117 = icmp ult i32 %arg3, 20
  br i1 %tmp117, label %bb, label %dec_label_pc_1ea65

bb:                                               ; preds = %dec_label_pc_1ea30
  %v7_1ea63 = call i32 @function_1ea90(i32 %v0_1ea3f, i32 %v0_1ea50, i32 %v0_1ea5b, i32 %v0_1ea37)
  br label %dec_label_pc_1ea65

dec_label_pc_1ea65:                               ; preds = %bb, %dec_label_pc_1ea30
  %v3_1ea7d = phi i32 [ %v7_1ea63, %bb ], [ %arg2, %dec_label_pc_1ea30 ]
  ret i32 %v3_1ea7d

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1ea90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ea90:
  %v0_1ea90 = load i32, i32* @eax, align 8
  ret i32 %v0_1ea90
}

define i32 @function_1eac7() local_unnamed_addr {
dec_label_pc_1eac7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ead2() local_unnamed_addr {
dec_label_pc_1ead2:
  %v0_1ead2 = load i32, i32* @ebx, align 4
  %v0_1ead4 = load i1, i1* @zf, align 1
  %v1_1ead4 = icmp eq i1 %v0_1ead4, false
  br i1 %v1_1ead4, label %dec_label_pc_1eb3f, label %dec_label_pc_1ead6

dec_label_pc_1ead6:                               ; preds = %dec_label_pc_1ead2
  ret i32 %v0_1ead2

dec_label_pc_1eb3f:                               ; preds = %dec_label_pc_1ead2
  ret i32 %v0_1ead2

; uselistorder directives
  uselistorder i32 %v0_1ead2, { 1, 0 }
}

define i32 @function_1eae8() local_unnamed_addr {
dec_label_pc_1eae8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1eae8 = load i32, i32* %eax.global-to-local, align 8
  %v2_1eae8 = icmp slt i32 %v0_1eae8, 0
  %v2_1eb28 = load i32, i32* %esi.global-to-local, align 4
  br i1 %v2_1eae8, label %dec_label_pc_1eb28, label %dec_label_pc_1eaf4

dec_label_pc_1eaf4:                               ; preds = %dec_label_pc_1eae8
  %v0_1eaf8 = load i32, i32* %ecx.global-to-local, align 4
  %v0_1eafc = load i32, i32* %ebx.global-to-local, align 4
  %v5_1eaff = call i32 @unknown_3d2f0(i32 %v0_1eafc, i32 %v0_1eaf8, i32 %v2_1eb28, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  store i32 %v5_1eaff, i32* @eax, align 8
  %v0_1eb07 = call i32 @function_1eac7()
  store i32 %v0_1eb07, i32* %eax.global-to-local, align 8
  ret i32 %v0_1eb07

dec_label_pc_1eb28:                               ; preds = %dec_label_pc_1eae8
  store i32 %v2_1eb28, i32* %eax.global-to-local, align 8
  %v0_1eb2a = load i32, i32* %ecx.global-to-local, align 4
  %v0_1eb2e = load i32, i32* %ebx.global-to-local, align 4
  %v5_1eb35 = call i32 @unknown_3d2f0(i32 %v0_1eb2e, i32 %v0_1eb2a, i32 %v2_1eb28, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  store i32 %v5_1eb35, i32* @eax, align 8
  %v0_1eb3d = call i32 @function_1eac7()
  store i32 %v0_1eb3d, i32* %eax.global-to-local, align 8
  ret i32 %v0_1eb3d

; uselistorder directives
  uselistorder i32 %v2_1eb28, { 1, 2, 0 }
  uselistorder i32 ()* @function_1eac7, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_3d2f0, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1eba0:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg2 to i32
  store i32 %tmp102, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v1_1ebd4 = add i32 %tmp102, 16
  %v2_1ebd4 = inttoptr i32 %v1_1ebd4 to i32*
  %v3_1ebd4 = load i32, i32* %v2_1ebd4, align 4
  store i32 %v3_1ebd4, i32* inttoptr (i32 16 to i32*), align 16
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* inttoptr (i32 12 to i32*), align 4
  store i32 undef, i32* null, align 536870912
  %v0_1ebed = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ebed = add i32 %v0_1ebed, 12
  %v2_1ebed = inttoptr i32 %v1_1ebed to i32*
  %v3_1ebed = load i32, i32* %v2_1ebed, align 4
  store i32 %v3_1ebed, i32* @eax, align 8
  %v0_1ebf0 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ebf0 = add i32 %v0_1ebf0, 8
  %v2_1ebf0 = inttoptr i32 %v1_1ebf0 to i32*
  store i32 0, i32* %v2_1ebf0, align 4
  %v0_1ebf7 = load i32, i32* %esi.global-to-local, align 4
  %v1_1ebf7 = load i32, i32* %edx.global-to-local, align 4
  %v2_1ebf7 = add i32 %v1_1ebf7, 4
  %v3_1ebf7 = inttoptr i32 %v2_1ebf7 to i32*
  store i32 %v0_1ebf7, i32* %v3_1ebf7, align 4
  %v0_1ebfa = load i32, i32* @eax, align 8
  %v1_1ebfa = icmp eq i32 %v0_1ebfa, 0
  br i1 %v1_1ebfa, label %dec_label_pc_1ec15, label %dec_label_pc_1ebfe

dec_label_pc_1ebfe:                               ; preds = %dec_label_pc_1eba0
  %v0_1ebfe = load i32, i32* %edx.global-to-local, align 4
  %v2_1ec09 = call i32 @unknown_3d740(i32 %v0_1ebfa, i32 %v0_1ebfe)
  store i32 %v2_1ec09, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %v2_1ec09, i32* inttoptr (i32 12 to i32*), align 4
  br label %dec_label_pc_1ec15

dec_label_pc_1ec15:                               ; preds = %dec_label_pc_1ebfe, %dec_label_pc_1eba0
  %v0_1ec15 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ec15 = add i32 %v0_1ec15, 8
  %v2_1ec15 = inttoptr i32 %v1_1ec15 to i32*
  %v3_1ec15 = load i32, i32* %v2_1ec15, align 4
  store i32 %v3_1ec15, i32* %esi.global-to-local, align 4
  %v1_1ec1c = icmp eq i32 %v3_1ec15, 0
  %v1_1ec1e = icmp eq i1 %v1_1ec1c, false
  br i1 %v1_1ec1e, label %dec_label_pc_1ec2a, label %dec_label_pc_1ec20

dec_label_pc_1ec20:                               ; preds = %dec_label_pc_1ec15
  %v0_1ec20 = call i32 @function_1ec7c()
  ret i32 %v0_1ec20

dec_label_pc_1ec2a:                               ; preds = %dec_label_pc_1ec15
  %v2_1ec2a = load i32, i32* @eax, align 8
  ret i32 %v2_1ec2a

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 1, 0 }
}

define i32 @function_1ec3a() local_unnamed_addr {
dec_label_pc_1ec3a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ec3a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ec3a
}

define i32 @function_1ec40(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec40:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ec40 = load i32, i32* @eax, align 8
  %v1_1ec40 = load i32, i32* @ebx, align 4
  %v2_1ec40 = add i32 %v1_1ec40, 16
  %v3_1ec40 = inttoptr i32 %v2_1ec40 to i32*
  store i32 %v0_1ec40, i32* %v3_1ec40, align 4
  %v2_1ec43 = load i32, i32* @esi, align 4
  store i32 %v2_1ec43, i32* %eax.global-to-local, align 8
  %v0_1ec45 = load i32, i32* @ebx, align 4
  %v1_1ec45 = add i32 %v0_1ec45, 12
  %v2_1ec45 = inttoptr i32 %v1_1ec45 to i32*
  store i32 0, i32* %v2_1ec45, align 4
  %v3_1ec45 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_1ec45
}

define i32 @function_1ec50(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec50:
  %eax.global-to-local = alloca i32, align 4
  %v2_1ec50 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1ec50 = load i32, i32* @eax, align 8
  %v4_1ec50 = trunc i32 %v3_1ec50 to i8
  %v5_1ec50 = add i8 %v4_1ec50, %v2_1ec50
  %v21_1ec50 = inttoptr i32 %v3_1ec50 to i8*
  store i8 %v5_1ec50, i8* %v21_1ec50, align 1
  %v0_1ec52 = load i32, i32* @ecx, align 4
  %v1_1ec52 = add i32 %v0_1ec52, 59311227
  %v2_1ec52 = inttoptr i32 %v1_1ec52 to i8*
  %v3_1ec52 = load i8, i8* %v2_1ec52, align 1
  %v5_1ec52 = trunc i32 %v0_1ec52 to i8
  %v6_1ec52 = add i8 %v3_1ec52, %v5_1ec52
  store i8 %v6_1ec52, i8* %v2_1ec52, align 1
  %v0_1ec58 = load i32, i32* @esi, align 4
  %v1_1ec58 = add i32 %v0_1ec58, 12
  %v2_1ec58 = inttoptr i32 %v1_1ec58 to i32*
  %v3_1ec58 = load i32, i32* %v2_1ec58, align 4
  store i32 %v3_1ec58, i32* %eax.global-to-local, align 8
  %v0_1ec5b = load i32, i32* @ebx, align 4
  %v1_1ec5b = load i32, i32* @edi, align 4
  %v2_1ec5b = add i32 %v1_1ec5b, 8
  %v3_1ec5b = inttoptr i32 %v2_1ec5b to i32*
  store i32 %v0_1ec5b, i32* %v3_1ec5b, align 4
  %v0_1ec5e = load i32, i32* %eax.global-to-local, align 8
  %v1_1ec5e = icmp eq i32 %v0_1ec5e, 0
  br i1 %v1_1ec5e, label %dec_label_pc_1ec75, label %dec_label_pc_1ec62

dec_label_pc_1ec62:                               ; preds = %dec_label_pc_1ec50
  %v0_1ec62 = load i32, i32* @ebx, align 4
  %v2_1ec6d = call i32 @unknown_3d740(i32 %v0_1ec5e, i32 %v0_1ec62)
  store i32 %v2_1ec6d, i32* %eax.global-to-local, align 8
  %v1_1ec72 = load i32, i32* @ebx, align 4
  %v2_1ec72 = add i32 %v1_1ec72, 12
  %v3_1ec72 = inttoptr i32 %v2_1ec72 to i32*
  store i32 %v2_1ec6d, i32* %v3_1ec72, align 4
  %v4_1ec7c.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ec75

dec_label_pc_1ec75:                               ; preds = %dec_label_pc_1ec62, %dec_label_pc_1ec50
  %v4_1ec7c = phi i32 [ %v4_1ec7c.pre, %dec_label_pc_1ec62 ], [ 0, %dec_label_pc_1ec50 ]
  ret i32 %v4_1ec7c
}

define i32 @function_1ec7c() local_unnamed_addr {
dec_label_pc_1ec7c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ec83(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec83:
  %zf.global-to-local = alloca i1, align 1
  %v0_1ec83 = load i32, i32* @eax, align 8
  %v1_1ec83 = trunc i32 %v0_1ec83 to i8
  %v2_1ec83 = load i1, i1* @cf, align 1
  %v3_1ec83 = zext i1 %v2_1ec83 to i8
  %v4_1ec83 = add i8 %v3_1ec83, %v1_1ec83
  %v13_1ec83 = icmp eq i8 %v4_1ec83, 0
  store i1 %v13_1ec83, i1* %zf.global-to-local, align 1
  %v22_1ec83 = zext i8 %v4_1ec83 to i32
  %v24_1ec83 = and i32 %v0_1ec83, -256
  %v25_1ec83 = or i32 %v22_1ec83, %v24_1ec83
  %v1_1ec85 = inttoptr i32 %v25_1ec83 to i8*
  %v2_1ec85 = load i8, i8* %v1_1ec85, align 1
  %v5_1ec85 = add i8 %v2_1ec85, %v4_1ec83
  %v15_1ec85 = icmp eq i8 %v5_1ec85, 0
  store i1 %v15_1ec85, i1* %zf.global-to-local, align 1
  store i8 %v5_1ec85, i8* %v1_1ec85, align 1
  store i32 %arg1, i32* @eax, align 8
  %v0_1ec8b = load i1, i1* %zf.global-to-local, align 1
  %v1_1ec8b = icmp eq i1 %v0_1ec8b, false
  br i1 %v1_1ec8b, label %bb, label %dec_label_pc_1ec8d

bb:                                               ; preds = %dec_label_pc_1ec83
  %v2_1ec8b = call i32 @function_1ecb2()
  br label %dec_label_pc_1ec8d

dec_label_pc_1ec8d:                               ; preds = %bb, %dec_label_pc_1ec83
  %v0_1ec94 = phi i32 [ %v2_1ec8b, %bb ], [ %arg1, %dec_label_pc_1ec83 ]
  %v0_1ec8d = load i32, i32* @esp, align 4
  %v10_1ec8d = icmp eq i32 %v0_1ec8d, -60
  store i1 %v10_1ec8d, i1* %zf.global-to-local, align 1
  ret i32 %v0_1ec94
}

define i32 @function_1ecb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ecb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ecb2() local_unnamed_addr {
dec_label_pc_1ecb2:
  %v0_1ecb7 = load i32, i32* @eax, align 8
  ret i32 %v0_1ecb7
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3setIiSt4lessIiESaIiEEjS6_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ecd0:
  ret i32 0
}

define i32 @function_1ecf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ecf0:
  %v0_1ecf0 = load i32, i32* @edi, align 4
  %v1_1ecf0 = load i32, i32* @ebp, align 4
  %v2_1ecf0 = mul i32 %v1_1ecf0, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_1ecf0 = add i32 %v0_1ecf0, -119
  %v4_1ecf0 = add i32 %v3_1ecf0, %v2_1ecf0
  %v5_1ecf0 = inttoptr i32 %v4_1ecf0 to i32*
  %v6_1ecf0 = load i32, i32* %v5_1ecf0, align 4
  %v1_1ecf4 = call i32 @function_1ec83(i32 %v6_1ecf0)
  ret i32 %v1_1ecf4
}

define i32 @function_1ecf8() local_unnamed_addr {
dec_label_pc_1ecf8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ecf8 = load i32, i32* @ebx, align 4
  %v1_1ecfc = add i32 %v0_1ecf8, 4
  store i32 %v1_1ecfc, i32* %eax.global-to-local, align 8
  %v2_1ecff = inttoptr i32 %v1_1ecfc to i32*
  store i32 0, i32* %v2_1ecff, align 4
  %v0_1ed06 = load i32, i32* @ebx, align 4
  %v1_1ed06 = add i32 %v0_1ed06, 8
  %v2_1ed06 = inttoptr i32 %v1_1ed06 to i32*
  store i32 0, i32* %v2_1ed06, align 4
  %v3_1ed06 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_1ed06
}

define i32 @function_1ed10(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed10:
  %eax.global-to-local = alloca i32, align 4
  %v2_1ed10 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1ed10 = load i32, i32* @eax, align 8
  %v4_1ed10 = trunc i32 %v3_1ed10 to i8
  %v5_1ed10 = add i8 %v4_1ed10, %v2_1ed10
  %v21_1ed10 = inttoptr i32 %v3_1ed10 to i8*
  store i8 %v5_1ed10, i8* %v21_1ed10, align 1
  %v2_1ed12 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1ed12 = load i32, i32* @eax, align 8
  %v4_1ed12 = trunc i32 %v3_1ed12 to i8
  %v5_1ed12 = add i8 %v4_1ed12, %v2_1ed12
  %v21_1ed12 = inttoptr i32 %v3_1ed12 to i8*
  store i8 %v5_1ed12, i8* %v21_1ed12, align 1
  %v0_1ed14 = load i32, i32* @eax, align 8
  %v1_1ed14 = load i32, i32* @ebx, align 4
  %v2_1ed14 = add i32 %v1_1ed14, 12
  %v3_1ed14 = inttoptr i32 %v2_1ed14 to i32*
  store i32 %v0_1ed14, i32* %v3_1ed14, align 4
  %v0_1ed17 = load i32, i32* @eax, align 8
  %v1_1ed17 = load i32, i32* @ebx, align 4
  %v2_1ed17 = add i32 %v1_1ed17, 16
  %v3_1ed17 = inttoptr i32 %v2_1ed17 to i32*
  store i32 %v0_1ed17, i32* %v3_1ed17, align 4
  %v0_1ed1a = load i32, i32* @esi, align 4
  %v1_1ed1a = add i32 %v0_1ed1a, 8
  %v2_1ed1a = inttoptr i32 %v1_1ed1a to i32*
  %v3_1ed1a = load i32, i32* %v2_1ed1a, align 4
  %v1_1ed1d = icmp eq i32 %v3_1ed1a, 0
  br i1 %v1_1ed1d, label %dec_label_pc_1ed5a, label %dec_label_pc_1ed21

dec_label_pc_1ed21:                               ; preds = %dec_label_pc_1ed10
  %v0_1ed21 = load i32, i32* @eax, align 8
  %v0_1ed29 = load i32, i32* @ebx, align 4
  %v3_1ed2c = call i32 @unknown_3d870(i32 %v0_1ed29, i32 %v3_1ed1a, i32 %v0_1ed21)
  store i32 %v3_1ed2c, i32* %eax.global-to-local, align 8
  %v1_1ed31 = load i32, i32* @ebx, align 4
  %v2_1ed31 = add i32 %v1_1ed31, 8
  %v3_1ed31 = inttoptr i32 %v2_1ed31 to i32*
  store i32 %v3_1ed2c, i32* %v3_1ed31, align 4
  %v0_1ed34 = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ed3a

dec_label_pc_1ed3a:                               ; preds = %dec_label_pc_1ed3a, %dec_label_pc_1ed21
  %v0_1ed41 = phi i32 [ %v0_1ed34, %dec_label_pc_1ed21 ], [ %v3_1ed3a, %dec_label_pc_1ed3a ]
  %v1_1ed3a = add i32 %v0_1ed41, 8
  %v2_1ed3a = inttoptr i32 %v1_1ed3a to i32*
  %v3_1ed3a = load i32, i32* %v2_1ed3a, align 4
  %v1_1ed3d = icmp eq i32 %v3_1ed3a, 0
  %v1_1ed3f = icmp eq i1 %v1_1ed3d, false
  br i1 %v1_1ed3f, label %dec_label_pc_1ed3a, label %dec_label_pc_1ed41

dec_label_pc_1ed41:                               ; preds = %dec_label_pc_1ed3a
  %v1_1ed41 = load i32, i32* @ebx, align 4
  %v2_1ed41 = add i32 %v1_1ed41, 12
  %v3_1ed41 = inttoptr i32 %v2_1ed41 to i32*
  store i32 %v0_1ed41, i32* %v3_1ed41, align 4
  %v0_1ed4a.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_1ed4a15 = add i32 %v0_1ed4a.pre, 12
  %v2_1ed4a16 = inttoptr i32 %v1_1ed4a15 to i32*
  %v3_1ed4a17 = load i32, i32* %v2_1ed4a16, align 4
  %v1_1ed4d18 = icmp eq i32 %v3_1ed4a17, 0
  %v1_1ed4f19 = icmp eq i1 %v1_1ed4d18, false
  br i1 %v1_1ed4f19, label %dec_label_pc_1ed48, label %dec_label_pc_1ed51

dec_label_pc_1ed48:                               ; preds = %dec_label_pc_1ed41, %dec_label_pc_1ed48
  %v3_1ed4a20 = phi i32 [ %v3_1ed4a, %dec_label_pc_1ed48 ], [ %v3_1ed4a17, %dec_label_pc_1ed41 ]
  store i32 %v3_1ed4a20, i32* %eax.global-to-local, align 8
  %v1_1ed4a = add i32 %v3_1ed4a20, 12
  %v2_1ed4a = inttoptr i32 %v1_1ed4a to i32*
  %v3_1ed4a = load i32, i32* %v2_1ed4a, align 4
  %v1_1ed4d = icmp eq i32 %v3_1ed4a, 0
  %v1_1ed4f = icmp eq i1 %v1_1ed4d, false
  br i1 %v1_1ed4f, label %dec_label_pc_1ed48, label %dec_label_pc_1ed51

dec_label_pc_1ed51:                               ; preds = %dec_label_pc_1ed48, %dec_label_pc_1ed41
  %v0_1ed51.lcssa = phi i32 [ %v0_1ed4a.pre, %dec_label_pc_1ed41 ], [ %v3_1ed4a20, %dec_label_pc_1ed48 ]
  %v1_1ed51 = load i32, i32* @ebx, align 4
  %v2_1ed51 = add i32 %v1_1ed51, 16
  %v3_1ed51 = inttoptr i32 %v2_1ed51 to i32*
  store i32 %v0_1ed51.lcssa, i32* %v3_1ed51, align 4
  %v0_1ed54 = load i32, i32* @esi, align 4
  %v1_1ed54 = add i32 %v0_1ed54, 20
  %v2_1ed54 = inttoptr i32 %v1_1ed54 to i32*
  %v3_1ed54 = load i32, i32* %v2_1ed54, align 4
  store i32 %v3_1ed54, i32* %eax.global-to-local, align 8
  %v1_1ed57 = load i32, i32* @ebx, align 4
  %v2_1ed57 = add i32 %v1_1ed57, 20
  %v3_1ed57 = inttoptr i32 %v2_1ed57 to i32*
  store i32 %v3_1ed54, i32* %v3_1ed57, align 4
  br label %dec_label_pc_1ed5a

dec_label_pc_1ed5a:                               ; preds = %dec_label_pc_1ed51, %dec_label_pc_1ed10
  %v0_1ed5a = load i32, i32* @ebx, align 4
  %v1_1ed5a = add i32 %v0_1ed5a, 24
  store i32 %v1_1ed5a, i32* @ebx, align 4
  %v0_1ed5d = load i32, i32* @edi, align 4
  %v10_1ed5d = icmp eq i32 %v0_1ed5d, ptrtoint (i1* @global_var_1.2399 to i32)
  %v1_1ed60 = icmp eq i1 %v10_1ed5d, false
  br i1 %v1_1ed60, label %bb, label %dec_label_pc_1ed62

bb:                                               ; preds = %dec_label_pc_1ed5a
  %v2_1ed60 = call i32 @function_1ecf8()
  store i32 %v2_1ed60, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ed62

dec_label_pc_1ed62:                               ; preds = %bb, %dec_label_pc_1ed5a
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1ed66 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ed66 = xor i32 %v1_1ed66, %arg1
  %v3_1ed66 = icmp eq i32 %v2_1ed66, 0
  store i32 %v2_1ed66, i32* %eax.global-to-local, align 8
  %v1_1ed6d = icmp eq i1 %v3_1ed66, false
  br i1 %v1_1ed6d, label %dec_label_pc_1ed90, label %dec_label_pc_1ed6f

dec_label_pc_1ed6f:                               ; preds = %dec_label_pc_1ed62
  ret i32 %v2_1ed66

dec_label_pc_1ed90:                               ; preds = %dec_label_pc_1ed62
  ret i32 %v2_1ed66

; uselistorder directives
  uselistorder i32 %v2_1ed66, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1ed4a, { 1, 0 }
  uselistorder i32 %v3_1ed3a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 4, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_1ed48, { 1, 0 }
}

define i32 @function_1ed80(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed80:
  %v0_1ed86 = call i32 @unknown_33bd0()
  ret i32 %v0_1ed86
}

define i32 @function_1ed96() local_unnamed_addr {
dec_label_pc_1ed96:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ed96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ed96
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1edb0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1edb0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1edb1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1edb2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1edba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1edca = icmp eq i32 %arg2, 0
  %v1_1edcc = icmp eq i1 %v1_1edca, false
  br i1 %v1_1edcc, label %dec_label_pc_1edd2, label %dec_label_pc_1edce

dec_label_pc_1edce:                               ; preds = %dec_label_pc_1edb0
  %v4_1edce = call i32 @function_1edfa(i32 %v0_1edba, i32 %v0_1edb2, i32 %v0_1edb1, i32 %v0_1edb0)
  store i32 %v4_1edce, i32* %eax.global-to-local, align 8
  ret i32 %v4_1edce

dec_label_pc_1edd2:                               ; preds = %dec_label_pc_1edb0
  %v1_1edd2 = add i32 %arg2, 12
  %v2_1edd2 = inttoptr i32 %v1_1edd2 to i32*
  %v3_1edd2 = load i32, i32* %v2_1edd2, align 4
  store i32 %v3_1edd2, i32* %eax.global-to-local, align 8
  %v2_1eddc = call i32 @unknown_3db60(i32 %arg1, i32 %v3_1edd2)
  store i32 %v2_1eddc, i32* %eax.global-to-local, align 8
  %v1_1ede1 = add i32 %arg2, 8
  %v2_1ede1 = inttoptr i32 %v1_1ede1 to i32*
  %v3_1ede1 = load i32, i32* %v2_1ede1, align 4
  store i32 %v3_1ede1, i32* %esi.global-to-local, align 4
  %v1_1ede4 = add i32 %arg2, 20
  %v2_1ede4 = inttoptr i32 %v1_1ede4 to i8*
  %v3_1ede4 = load i8, i8* %v2_1ede4, align 1
  %v10_1ede4 = icmp eq i8 %v3_1ede4, 0
  br i1 %v10_1ede4, label %dec_label_pc_1edee, label %dec_label_pc_1edea

dec_label_pc_1edea:                               ; preds = %dec_label_pc_1edd2
  store i8 0, i8* %v2_1ede4, align 1
  %v3_1edea.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1edee

dec_label_pc_1edee:                               ; preds = %dec_label_pc_1edea, %dec_label_pc_1edd2
  %v3_1edea = phi i32 [ %v3_1edea.pre, %dec_label_pc_1edea ], [ %v2_1eddc, %dec_label_pc_1edd2 ]
  ret i32 %v3_1edea

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_1edfa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1edfa:
  %v1_1edfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1edfe = xor i32 %v1_1edfe, %arg1
  %v3_1edfe = icmp eq i32 %v2_1edfe, 0
  %v1_1ee05 = icmp eq i1 %v3_1edfe, false
  br i1 %v1_1ee05, label %dec_label_pc_1ee0e, label %dec_label_pc_1ee07

dec_label_pc_1ee07:                               ; preds = %dec_label_pc_1edfa
  ret i32 %v2_1edfe

dec_label_pc_1ee0e:                               ; preds = %dec_label_pc_1edfa
  ret i32 %v2_1edfe

; uselistorder directives
  uselistorder i32 %v2_1edfe, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_1ee20:
  %v1_1ee36 = add i32 %arg1, 12
  %v2_1ee36 = inttoptr i32 %v1_1ee36 to i32*
  %v3_1ee36 = load i32, i32* %v2_1ee36, align 4
  %v1_1ee3d = add i32 %v3_1ee36, 16
  %v2_1ee3d = inttoptr i32 %v1_1ee3d to i32*
  %v3_1ee3d = load i32, i32* %v2_1ee3d, align 4
  %v1_1ee44 = add i32 %v3_1ee36, 8
  %v2_1ee4a = call i32 @unknown_3dbd0(i32 %v1_1ee44, i32 %v3_1ee3d)
  %v1_1ee4f = inttoptr i32 %v3_1ee36 to i32*
  %v2_1ee4f = load i32, i32* %v1_1ee4f, align 4
  %v12_1ee51 = icmp eq i32 %v2_1ee4f, %v3_1ee36
  %v1_1ee53 = icmp eq i1 %v12_1ee51, false
  br i1 %v1_1ee53, label %dec_label_pc_1ee5a, label %dec_label_pc_1ee55

dec_label_pc_1ee55:                               ; preds = %dec_label_pc_1ee20
  ret i32 %v2_1ee4a

dec_label_pc_1ee5a:                               ; preds = %dec_label_pc_1ee20
  %v1_1ee5c = add i32 %v2_1ee4f, 12
  ret i32 %v1_1ee5c

; uselistorder directives
  uselistorder i32 %v2_1ee4f, { 1, 0 }
  uselistorder i32 %v3_1ee36, { 0, 3, 2, 1 }
}

define i32 @function_1ee60(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee60:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_1ee60 = load i32, i32* @eax, align 8
  %v2_1ee60 = add i32 %v0_1ee60, 36
  %v16_1ee60 = and i32 %v2_1ee60, 255
  %v18_1ee60 = and i32 %v0_1ee60, -256
  %v19_1ee60 = or i32 %v16_1ee60, %v18_1ee60
  store i32 %v19_1ee60, i32* @eax, align 8
  %v0_1ee62 = call i32 @function_2f360()
  %v1_1ee77 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ee77 = xor i32 %v1_1ee77, %arg1
  %v3_1ee77 = icmp eq i32 %v2_1ee77, 0
  %v1_1ee7e = icmp eq i1 %v3_1ee77, false
  br i1 %v1_1ee7e, label %dec_label_pc_1eea4, label %dec_label_pc_1ee80

dec_label_pc_1ee80:                               ; preds = %dec_label_pc_1ee60
  %v1_1ee94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ee94 = xor i32 %v1_1ee94, %tmp5
  %v3_1ee94 = icmp eq i32 %v2_1ee94, 0
  %v1_1ee9b = icmp eq i1 %v3_1ee94, false
  br i1 %v1_1ee9b, label %dec_label_pc_1eea4, label %dec_label_pc_1ee9d

dec_label_pc_1ee9d:                               ; preds = %dec_label_pc_1ee80
  ret i32 %v2_1ee94

dec_label_pc_1eea4:                               ; preds = %dec_label_pc_1ee80, %dec_label_pc_1ee60
  %v1_1eea3 = phi i32 [ %v2_1ee94, %dec_label_pc_1ee80 ], [ %v2_1ee77, %dec_label_pc_1ee60 ]
  ret i32 %v1_1eea3

; uselistorder directives
  uselistorder i32 %v0_1ee60, { 1, 0 }
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1eeb0:
  %edi.global-to-local = alloca i32, align 4
  %v0_1eeb0 = load i32, i32* %edi.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1eec6 = icmp eq i32 %arg1, 0
  br i1 %v1_1eec6, label %dec_label_pc_1ef20, label %dec_label_pc_1eeca

dec_label_pc_1eeca:                               ; preds = %dec_label_pc_1eeb0
  %v1_1eeca = add i32 %arg1, 16
  %v2_1eeca = inttoptr i32 %v1_1eeca to i32*
  %v3_1eeca = load i32, i32* %v2_1eeca, align 4
  ret i32 %v3_1eeca

dec_label_pc_1ef20:                               ; preds = %dec_label_pc_1eeb0
  br i1 false, label %dec_label_pc_1ef34, label %dec_label_pc_1ef2d

dec_label_pc_1ef2d:                               ; preds = %dec_label_pc_1ef20
  store i32 %v0_1eeb0, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_1ef34:                               ; preds = %dec_label_pc_1ef20
  ret i32 0

; uselistorder directives
  uselistorder i32* %edi.global-to-local, { 2, 1, 0 }
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ef40:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_1ef40 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1ef54 = icmp eq i32 %arg1, 0
  br i1 %v1_1ef54, label %dec_label_pc_1ef88, label %dec_label_pc_1ef58

dec_label_pc_1ef58:                               ; preds = %dec_label_pc_1ef40
  %v1_1ef58 = add i32 %arg1, 12
  store i32 %v1_1ef58, i32* @eax, align 8
  store i32 %v1_1ef58, i32* %stack_var_-60, align 4
  %v1_1ef5e = call i32 @function_2f480(i32 %v1_1ef58)
  %v1_1ef63 = add i32 %arg1, 4
  store i32 %v1_1ef63, i32* @eax, align 8
  store i32 %v1_1ef63, i32* %stack_var_-60, align 4
  %v1_1ef69 = call i32 @function_2f480(i32 %v1_1ef63)
  br i1 false, label %dec_label_pc_1ef9a, label %dec_label_pc_1ef7b

dec_label_pc_1ef7b:                               ; preds = %dec_label_pc_1ef58
  store i32 %v0_1ef40, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1ef88

dec_label_pc_1ef88:                               ; preds = %dec_label_pc_1ef7b, %dec_label_pc_1ef40
  %v0_1ef88.in = phi i32* [ %stack_var_0, %dec_label_pc_1ef7b ], [ %stack_var_-60, %dec_label_pc_1ef40 ]
  %v0_1ef88 = ptrtoint i32* %v0_1ef88.in to i32
  %v1_1ef88 = add i32 %v0_1ef88, 44
  %v2_1ef88 = inttoptr i32 %v1_1ef88 to i32*
  %v3_1ef88 = load i32, i32* %v2_1ef88, align 4
  ret i32 %v3_1ef88

dec_label_pc_1ef9a:                               ; preds = %dec_label_pc_1ef58
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_2f480, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_1efa6() local_unnamed_addr {
dec_label_pc_1efa6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1efa6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1efa6
}

define i32 @function_1efb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1efb0:
  %eax.global-to-local = alloca i32, align 4
  %v0_1efb1 = load i32, i32* @eax, align 8
  %v2_1efb1 = add i32 %v0_1efb1, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v16_1efb1 = and i32 %v2_1efb1, 255
  %v18_1efb1 = and i32 %v0_1efb1, -256
  %v19_1efb1 = or i32 %v16_1efb1, %v18_1efb1
  store i32 %v19_1efb1, i32* %eax.global-to-local, align 8
  %v0_1efb3 = load i32, i32* @ebx, align 4
  %v1_1efb3 = add i32 %v0_1efb3, -1994644412
  %v2_1efb3 = inttoptr i32 %v1_1efb3 to i8*
  %v3_1efb3 = load i8, i8* %v2_1efb3, align 1
  %v4_1efb3 = load i32, i32* @ecx, align 4
  %v5_1efb3 = trunc i32 %v4_1efb3 to i8
  %v6_1efb3 = add i8 %v5_1efb3, %v3_1efb3
  store i8 %v6_1efb3, i8* %v2_1efb3, align 1
  %v0_1efb9 = load i32, i32* %eax.global-to-local, align 8
  %v2_1efb9 = add i32 %v0_1efb9, 36
  %v16_1efb9 = and i32 %v2_1efb9, 255
  %v18_1efb9 = and i32 %v0_1efb9, -256
  %v19_1efb9 = or i32 %v16_1efb9, %v18_1efb9
  store i32 %v19_1efb9, i32* %eax.global-to-local, align 8
  ret i32 %v19_1efb9

; uselistorder directives
  uselistorder i32 %v0_1efb9, { 1, 0 }
  uselistorder i32 %v0_1efb1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1efc0:
  ret i32 0
}

define i32 @function_1f030(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f030:
  %zf.global-to-local = alloca i1, align 1
  %v2_1f030 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1f030 = load i32, i32* @eax, align 8
  %v4_1f030 = trunc i32 %v3_1f030 to i8
  %v5_1f030 = or i8 %v4_1f030, %v2_1f030
  %v12_1f030 = inttoptr i32 %v3_1f030 to i8*
  store i8 %v5_1f030, i8* %v12_1f030, align 1
  %v2_1f032 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1f032 = load i32, i32* @eax, align 8
  %v4_1f032 = trunc i32 %v3_1f032 to i8
  %v5_1f032 = add i8 %v4_1f032, %v2_1f032
  %v15_1f032 = icmp eq i8 %v5_1f032, 0
  store i1 %v15_1f032, i1* %zf.global-to-local, align 1
  %v21_1f032 = inttoptr i32 %v3_1f032 to i8*
  store i8 %v5_1f032, i8* %v21_1f032, align 1
  %v0_1f034 = load i32, i32* @ecx, align 4
  %v1_1f034 = add i32 %v0_1f034, -1065024398
  %v2_1f034 = inttoptr i32 %v1_1f034 to i8*
  %v3_1f034 = load i8, i8* %v2_1f034, align 1
  %v5_1f034 = trunc i32 %v0_1f034 to i8
  %v6_1f034 = add i8 %v3_1f034, %v5_1f034
  %v16_1f034 = icmp eq i8 %v6_1f034, 0
  store i1 %v16_1f034, i1* %zf.global-to-local, align 1
  store i8 %v6_1f034, i8* %v2_1f034, align 1
  %v0_1f03a = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1f03a, label %dec_label_pc_1f053, label %dec_label_pc_1f03c

dec_label_pc_1f03c:                               ; preds = %dec_label_pc_1f030
  %v0_1f03c = load i32, i32* @edx, align 4
  %v0_1f040 = load i32, i32* @eax, align 8
  %v2_1f047 = call i32 @unknown_3df80(i32 %v0_1f040, i32 %v0_1f03c)
  store i32 %v2_1f047, i32* @eax, align 8
  %v2_1f050 = add i32 %arg1, 12
  %v3_1f050 = inttoptr i32 %v2_1f050 to i32*
  store i32 %v2_1f047, i32* %v3_1f050, align 4
  br label %dec_label_pc_1f053

dec_label_pc_1f053:                               ; preds = %dec_label_pc_1f03c, %dec_label_pc_1f030
  %v0_1f053 = load i32, i32* @ebx, align 4
  %v1_1f053 = add i32 %v0_1f053, 8
  %v2_1f053 = inttoptr i32 %v1_1f053 to i32*
  %v3_1f053 = load i32, i32* %v2_1f053, align 4
  %v1_1f05a = icmp eq i32 %v3_1f053, 0
  store i1 %v1_1f05a, i1* %zf.global-to-local, align 1
  %v1_1f05c = icmp eq i1 %v1_1f05a, false
  br i1 %v1_1f05c, label %dec_label_pc_1f062, label %dec_label_pc_1f05e

dec_label_pc_1f05e:                               ; preds = %dec_label_pc_1f053
  %v0_1f05e = call i32 @function_1f0ce()
  ret i32 %v0_1f05e

dec_label_pc_1f062:                               ; preds = %dec_label_pc_1f053
  %v2_1f062 = load i32, i32* @eax, align 8
  ret i32 %v2_1f062
}

define i32 @function_1f070(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f070:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f072() local_unnamed_addr {
dec_label_pc_1f072:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f072 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f072
}

define i32 @function_1f0c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f0c0:
  %v0_1f0c6 = load i32, i32* @eax, align 8
  %v11_1f0c6 = or i32 %v0_1f0c6, 139
  ret i32 %v11_1f0c6

; uselistorder directives
  uselistorder i32 139, { 0, 2, 1, 3 }
}

define i32 @function_1f0ce() local_unnamed_addr {
dec_label_pc_1f0ce:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1f0d2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f0d2 = icmp eq i32 %v1_1f0d2, %tmp6
  %v1_1f0dd = icmp eq i1 %v3_1f0d2, false
  br i1 %v1_1f0dd, label %dec_label_pc_1f0e7, label %dec_label_pc_1f0df

dec_label_pc_1f0df:                               ; preds = %dec_label_pc_1f0ce
  ret i32 %tmp5

dec_label_pc_1f0e7:                               ; preds = %dec_label_pc_1f0ce
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_1f10a() local_unnamed_addr {
dec_label_pc_1f10a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f10a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f10a
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEEC1ERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f120:
  %eax.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %tmp100, i32* @esi, align 4
  store i32 %tmp100, i32* %arg1, align 4
  %v0_1f142 = load i32, i32* @esi, align 4
  %v2_1f142 = add i32 %v0_1f142, 4
  %v3_1f142 = inttoptr i32 %v2_1f142 to i32*
  store i32 %v0_1f142, i32* %v3_1f142, align 4
  %v0_1f145 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f145 = inttoptr i32 %v0_1f145 to i32*
  %v2_1f145 = load i32, i32* %v1_1f145, align 4
  %v12_1f147 = icmp eq i32 %v0_1f145, %v2_1f145
  br i1 %v12_1f147, label %bb, label %dec_label_pc_1f14b

bb:                                               ; preds = %dec_label_pc_1f120
  %v2_1f149 = call i32 @function_1f187(i32 %arg2)
  store i32 %v2_1f149, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f14b

dec_label_pc_1f14b:                               ; preds = %bb, %dec_label_pc_1f120
  %v0_1f14b = phi i32 [ %v2_1f149, %bb ], [ %v0_1f145, %dec_label_pc_1f120 ]
  ret i32 %v0_1f14b

; uselistorder directives
  uselistorder i32 %v0_1f145, { 1, 0, 2 }
  uselistorder i32 %v0_1f142, { 1, 0 }
}

define i32 @function_1f187(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f187:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1f187 = load i32, i32* @esi, align 4
  %v1_1f187 = add i32 %v0_1f187, 12
  store i32 %v1_1f187, i32* %ecx.global-to-local, align 4
  %v2_1f18a = add i32 %v0_1f187, 20
  %v3_1f18a = inttoptr i32 %v2_1f18a to i32*
  store i32 %v1_1f187, i32* %v3_1f18a, align 4
  %v0_1f18d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f18f = load i32, i32* @esi, align 4
  %v2_1f18f = add i32 %v1_1f18f, 24
  %v3_1f18f = inttoptr i32 %v2_1f18f to i32*
  store i32 %v0_1f18d, i32* %v3_1f18f, align 4
  %v0_1f192 = load i32, i32* @esi, align 4
  %v1_1f192 = add i32 %v0_1f192, 8
  store i32 %v1_1f192, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_1f19d = add i32 %v0_1f192, 12
  %v2_1f19d = inttoptr i32 %v1_1f19d to i32*
  store i32 0, i32* %v2_1f19d, align 4
  %v0_1f1a4 = load i32, i32* @esi, align 4
  %v1_1f1a4 = add i32 %v0_1f1a4, 16
  %v2_1f1a4 = inttoptr i32 %v1_1f1a4 to i32*
  store i32 0, i32* %v2_1f1a4, align 4
  %v0_1f1ab = load i32, i32* @esi, align 4
  %v1_1f1ab = add i32 %v0_1f1ab, 28
  %v2_1f1ab = inttoptr i32 %v1_1f1ab to i32*
  store i32 0, i32* %v2_1f1ab, align 4
  %v0_1f1b2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f1b2 = add i32 %v0_1f1b2, 16
  %v2_1f1b2 = inttoptr i32 %v1_1f1b2 to i32*
  %v3_1f1b2 = load i32, i32* %v2_1f1b2, align 4
  store i32 %v3_1f1b2, i32* %eax.global-to-local, align 8
  %v1_1f1b5 = icmp eq i32 %v3_1f1b2, 0
  br i1 %v1_1f1b5, label %dec_label_pc_1f1f6, label %dec_label_pc_1f1b9

dec_label_pc_1f1b9:                               ; preds = %dec_label_pc_1f187
  %v0_1f1c1 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f1c4 = call i32 @unknown_3e0e0(i32 %v0_1f1c1, i32 %v3_1f1b2)
  store i32 %v2_1f1c4, i32* %eax.global-to-local, align 8
  %v1_1f1c9 = load i32, i32* @esi, align 4
  %v2_1f1c9 = add i32 %v1_1f1c9, 16
  %v3_1f1c9 = inttoptr i32 %v2_1f1c9 to i32*
  store i32 %v2_1f1c4, i32* %v3_1f1c9, align 4
  %v0_1f1cc = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f1d2

dec_label_pc_1f1d2:                               ; preds = %dec_label_pc_1f1d2, %dec_label_pc_1f1b9
  %v0_1f1d9 = phi i32 [ %v0_1f1cc, %dec_label_pc_1f1b9 ], [ %v3_1f1d2, %dec_label_pc_1f1d2 ]
  %v1_1f1d2 = add i32 %v0_1f1d9, 8
  %v2_1f1d2 = inttoptr i32 %v1_1f1d2 to i32*
  %v3_1f1d2 = load i32, i32* %v2_1f1d2, align 4
  store i32 %v3_1f1d2, i32* %edx.global-to-local, align 4
  %v1_1f1d5 = icmp eq i32 %v3_1f1d2, 0
  %v1_1f1d7 = icmp eq i1 %v1_1f1d5, false
  br i1 %v1_1f1d7, label %dec_label_pc_1f1d2, label %dec_label_pc_1f1d9

dec_label_pc_1f1d9:                               ; preds = %dec_label_pc_1f1d2
  %v1_1f1d9 = load i32, i32* @esi, align 4
  %v2_1f1d9 = add i32 %v1_1f1d9, 20
  %v3_1f1d9 = inttoptr i32 %v2_1f1d9 to i32*
  store i32 %v0_1f1d9, i32* %v3_1f1d9, align 4
  %v0_1f1e2.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_1f1e210 = add i32 %v0_1f1e2.pre, 12
  %v2_1f1e211 = inttoptr i32 %v1_1f1e210 to i32*
  %v3_1f1e212 = load i32, i32* %v2_1f1e211, align 4
  store i32 %v3_1f1e212, i32* %edx.global-to-local, align 4
  %v1_1f1e513 = icmp eq i32 %v3_1f1e212, 0
  %v1_1f1e714 = icmp eq i1 %v1_1f1e513, false
  br i1 %v1_1f1e714, label %dec_label_pc_1f1e0, label %dec_label_pc_1f1e9

dec_label_pc_1f1e0:                               ; preds = %dec_label_pc_1f1d9, %dec_label_pc_1f1e0
  %v3_1f1e215 = phi i32 [ %v3_1f1e2, %dec_label_pc_1f1e0 ], [ %v3_1f1e212, %dec_label_pc_1f1d9 ]
  store i32 %v3_1f1e215, i32* %eax.global-to-local, align 8
  %v1_1f1e2 = add i32 %v3_1f1e215, 12
  %v2_1f1e2 = inttoptr i32 %v1_1f1e2 to i32*
  %v3_1f1e2 = load i32, i32* %v2_1f1e2, align 4
  store i32 %v3_1f1e2, i32* %edx.global-to-local, align 4
  %v1_1f1e5 = icmp eq i32 %v3_1f1e2, 0
  %v1_1f1e7 = icmp eq i1 %v1_1f1e5, false
  br i1 %v1_1f1e7, label %dec_label_pc_1f1e0, label %dec_label_pc_1f1e9

dec_label_pc_1f1e9:                               ; preds = %dec_label_pc_1f1e0, %dec_label_pc_1f1d9
  %v0_1f1ed.lcssa = phi i32 [ %v0_1f1e2.pre, %dec_label_pc_1f1d9 ], [ %v3_1f1e215, %dec_label_pc_1f1e0 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_1f1ed = load i32, i32* @esi, align 4
  %v2_1f1ed = add i32 %v1_1f1ed, 24
  %v3_1f1ed = inttoptr i32 %v2_1f1ed to i32*
  store i32 %v0_1f1ed.lcssa, i32* %v3_1f1ed, align 4
  %v0_1f1f0 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f1f0 = add i32 %v0_1f1f0, 28
  %v2_1f1f0 = inttoptr i32 %v1_1f1f0 to i32*
  %v3_1f1f0 = load i32, i32* %v2_1f1f0, align 4
  store i32 %v3_1f1f0, i32* %eax.global-to-local, align 8
  %v1_1f1f3 = load i32, i32* @esi, align 4
  %v2_1f1f3 = add i32 %v1_1f1f3, 28
  %v3_1f1f3 = inttoptr i32 %v2_1f1f3 to i32*
  store i32 %v3_1f1f0, i32* %v3_1f1f3, align 4
  %v1_1f20a.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f1f6

dec_label_pc_1f1f6:                               ; preds = %dec_label_pc_1f1e9, %dec_label_pc_1f187
  %v1_1f20a = phi i32 [ %v1_1f20a.pre, %dec_label_pc_1f1e9 ], [ 0, %dec_label_pc_1f187 ]
  %v1_1f1ff = add i32 %arg1, 12
  store i32 %v1_1f1ff, i32* %ecx.global-to-local, align 4
  ret i32 %v1_1f20a

; uselistorder directives
  uselistorder i32 %v3_1f1e2, { 1, 2, 0 }
  uselistorder i32 %v3_1f1d2, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 4, 3, 5, 6 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f1e0, { 1, 0 }
}

define i32 @function_1f210(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f210:
  %v4_1f210 = load i32, i32* @ebp, align 4
  %v15_1f210 = icmp eq i32 %v4_1f210, %arg1
  br i1 %v15_1f210, label %bb, label %dec_label_pc_1f216

bb:                                               ; preds = %dec_label_pc_1f210
  %v1_1f214 = call i32 @function_1f27c()
  store i32 %v1_1f214, i32* @eax, align 8
  %v1_1f216.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1f216

dec_label_pc_1f216:                               ; preds = %bb, %dec_label_pc_1f210
  %v1_1f216 = phi i32 [ %v1_1f216.pre, %bb ], [ %v4_1f210, %dec_label_pc_1f210 ]
  %v0_1f216 = load i32, i32* @esi, align 4
  %v2_1f216 = add i32 %v1_1f216, 28
  %v3_1f216 = inttoptr i32 %v2_1f216 to i32*
  store i32 %v0_1f216, i32* %v3_1f216, align 4
  %v0_1f219 = load i32, i32* @edi, align 4
  %v1_1f219 = add i32 %v0_1f219, 28
  %v2_1f219 = inttoptr i32 %v1_1f219 to i32*
  %v3_1f219 = load i32, i32* %v2_1f219, align 4
  store i32 %v3_1f219, i32* @ebx, align 4
  %v3_1f21c = load i32, i32* @eax, align 8
  ret i32 %v3_1f21c

; uselistorder directives
  uselistorder i32 %v4_1f210, { 1, 0 }
}

define i32 @function_1f230(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f230:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_1f230 = load i32, i32* @edi, align 4
  %v1_1f230 = add i32 %v0_1f230, 28
  %v2_1f230 = inttoptr i32 %v1_1f230 to i32*
  %v3_1f230 = load i32, i32* %v2_1f230, align 4
  store i32 %v3_1f230, i32* @eax, align 8
  %v0_1f23c.pre = load i32, i32* @ebx, align 4
  %v12_1f23c11 = icmp eq i32 %v0_1f23c.pre, %v3_1f230
  %v1_1f23e12 = icmp eq i1 %v12_1f23c11, false
  br i1 %v1_1f23e12, label %dec_label_pc_1f238.lr.ph, label %dec_label_pc_1f240

dec_label_pc_1f238.lr.ph:                         ; preds = %dec_label_pc_1f230
  %v0_1f23a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1f238

dec_label_pc_1f238:                               ; preds = %dec_label_pc_1f238.lr.ph, %dec_label_pc_1f238
  %v0_1f23a = phi i32 [ %v0_1f23a.pre, %dec_label_pc_1f238.lr.ph ], [ %v2_1f23a, %dec_label_pc_1f238 ]
  %v0_1f23813 = phi i32 [ %v0_1f23c.pre, %dec_label_pc_1f238.lr.ph ], [ %v2_1f238, %dec_label_pc_1f238 ]
  %v1_1f238 = inttoptr i32 %v0_1f23813 to i32*
  %v2_1f238 = load i32, i32* %v1_1f238, align 4
  %v1_1f23a = inttoptr i32 %v0_1f23a to i32*
  %v2_1f23a = load i32, i32* %v1_1f23a, align 4
  store i32 %v2_1f23a, i32* @esi, align 4
  %v12_1f23c = icmp eq i32 %v2_1f238, %v3_1f230
  %v1_1f23e = icmp eq i1 %v12_1f23c, false
  br i1 %v1_1f23e, label %dec_label_pc_1f238, label %dec_label_pc_1f240

dec_label_pc_1f240:                               ; preds = %dec_label_pc_1f238, %dec_label_pc_1f230
  %v0_1f240 = load i32, i32* @ebp, align 4
  %v15_1f248 = icmp eq i32 %v0_1f230, %arg1
  store i32 %v3_1f230, i32* @ebp, align 4
  %v1_1f24e = icmp eq i1 %v15_1f248, false
  br i1 %v1_1f24e, label %bb, label %dec_label_pc_1f250

bb:                                               ; preds = %dec_label_pc_1f240
  %v3_1f24e = call i32 @function_1f210(i32 %v0_1f240)
  br label %dec_label_pc_1f250

dec_label_pc_1f250:                               ; preds = %bb, %dec_label_pc_1f240
  %v1_1f254 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f254 = xor i32 %v1_1f254, %tmp7
  %v3_1f254 = icmp eq i32 %v2_1f254, 0
  %v1_1f25b = icmp eq i1 %v3_1f254, false
  br i1 %v1_1f25b, label %dec_label_pc_1f277, label %dec_label_pc_1f25d

dec_label_pc_1f25d:                               ; preds = %dec_label_pc_1f250
  ret i32 %v2_1f254

dec_label_pc_1f277:                               ; preds = %dec_label_pc_1f250
  ret i32 %v2_1f254

; uselistorder directives
  uselistorder i32 %v2_1f254, { 1, 0, 2 }
  uselistorder i32 %v2_1f23a, { 1, 0 }
  uselistorder i32 %v3_1f230, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1f238, { 1, 0 }
}

define i32 @function_1f265() local_unnamed_addr {
dec_label_pc_1f265:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_1f26a = call i32 @unknown_39160(i32 %tmp92)
  ret i32 %v1_1f26a
}

define i32 @function_1f27c() local_unnamed_addr {
dec_label_pc_1f27c:
  %v0_1f2a2 = load i32, i32* @esi, align 4
  %v2_1f2a5 = call i32 @unknown_39160(i32 %v0_1f2a2)
  ret i32 %v2_1f2a5
}

define i32 @function_1f2b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f2b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEC1ERKS6_RKS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f2c0:
  %stack_var_-56 = alloca i32, align 4
  %v2_1f2db = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_1f2db
}

define i32 @function_1f310(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f310:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f380(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f380:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f3b0(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f3b0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_1f3b0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f3b0 = add i32 %v0_1f3b0, 1086786672
  %v2_1f3b0 = inttoptr i32 %v1_1f3b0 to i32*
  %v3_1f3b0 = load i32, i32* %v2_1f3b0, align 4
  %v4_1f3b0 = add i32 %v3_1f3b0, -1
  store i32 %v4_1f3b0, i32* %v2_1f3b0, align 4
  %v0_1f3b6 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f3b6 = trunc i32 %v0_1f3b6 to i8
  %v2_1f3b6 = add i8 %v1_1f3b6, ptrtoint (i1* @global_var_1.2399 to i8)
  %v16_1f3b6 = zext i8 %v2_1f3b6 to i32
  %v18_1f3b6 = and i32 %v0_1f3b6, -256
  %v19_1f3b6 = or i32 %v16_1f3b6, %v18_1f3b6
  store i32 %v19_1f3b6, i32* %eax.global-to-local, align 8
  %v1_1f3b8 = inttoptr i32 %v19_1f3b6 to i8*
  %v2_1f3b8 = load i8, i8* %v1_1f3b8, align 1
  %v5_1f3b8 = add i8 %v2_1f3b8, %v2_1f3b6
  store i8 %v5_1f3b8, i8* %v1_1f3b8, align 1
  %v0_1f3ba = load i32, i32* %ebx.global-to-local, align 4
  %v3_1f3ba = load i32, i32* %eax.global-to-local, align 8
  %v5_1f3ba2 = mul i32 %v3_1f3ba, 256
  %v1_1f3ba3 = add i32 %v5_1f3ba2, %v0_1f3ba
  %v22_1f3ba = and i32 %v1_1f3ba3, 65280
  %v23_1f3ba = and i32 %v0_1f3ba, -65281
  %v24_1f3ba = or i32 %v22_1f3ba, %v23_1f3ba
  store i32 %v24_1f3ba, i32* %ebx.global-to-local, align 4
  %v1_1f3bc = add i32 %v3_1f3ba, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_1f3bc = trunc i32 %v1_1f3bc to i8
  store i32 %v1_1f3bc, i32* %eax.global-to-local, align 8
  %v2_1f3bd = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_1f3bd = or i8 %v2_1f3bd, %v11_1f3bc
  %v11_1f3bd = load i32, i32* %ecx.global-to-local, align 4
  %v12_1f3bd = inttoptr i32 %v11_1f3bd to i8*
  store i8 %v5_1f3bd, i8* %v12_1f3bd, align 1
  %v0_1f3bf = load i32, i32* %eax.global-to-local, align 8
  %v1_1f3bf = inttoptr i32 %v0_1f3bf to i8*
  %v2_1f3bf = load i8, i8* %v1_1f3bf, align 1
  %v4_1f3bf = trunc i32 %v0_1f3bf to i8
  %v5_1f3bf = add i8 %v2_1f3bf, %v4_1f3bf
  store i8 %v5_1f3bf, i8* %v1_1f3bf, align 1
  %v0_1f3c1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1f3c1 = load i32, i32* %eax.global-to-local, align 8
  %v4_1f3c1 = trunc i32 %v3_1f3c1 to i8
  %v5_1f3c14 = mul i32 %v3_1f3c1, 256
  %v1_1f3c15 = add i32 %v5_1f3c14, %v0_1f3c1
  %v22_1f3c1 = and i32 %v1_1f3c15, 65280
  %v23_1f3c1 = and i32 %v0_1f3c1, -65281
  %v24_1f3c1 = or i32 %v22_1f3c1, %v23_1f3c1
  store i32 %v24_1f3c1, i32* %ebx.global-to-local, align 4
  %v2_1f3c3 = load i32, i32* %ecx.global-to-local, align 4
  %v3_1f3c3 = udiv i32 %v2_1f3c3, 256
  %v4_1f3c3 = trunc i32 %v3_1f3c3 to i8
  %v5_1f3c3 = add i8 %v4_1f3c3, %v4_1f3c1
  %v10_1f3c3 = icmp ult i8 %v5_1f3c3, %v4_1f3c1
  %v3_1f3c5 = zext i1 %v10_1f3c3 to i8
  %v4_1f3c5 = add i8 %v5_1f3c3, 3
  %v5_1f3c5 = add i8 %v4_1f3c5, %v3_1f3c5
  %v25_1f3c5 = zext i8 %v5_1f3c5 to i32
  %v27_1f3c5 = and i32 %v3_1f3c1, -256
  %v28_1f3c5 = or i32 %v25_1f3c5, %v27_1f3c5
  store i32 %v28_1f3c5, i32* %eax.global-to-local, align 8
  %v1_1f3c7 = add i32 %v2_1f3c3, 1149961287
  %v2_1f3c7 = inttoptr i32 %v1_1f3c7 to i8*
  %v3_1f3c7 = load i8, i8* %v2_1f3c7, align 1
  %v5_1f3c7 = trunc i32 %v2_1f3c3 to i8
  %v6_1f3c7 = add i8 %v3_1f3c7, %v5_1f3c7
  store i8 %v6_1f3c7, i8* %v2_1f3c7, align 1
  %v0_1f3cd = load i32, i32* %eax.global-to-local, align 8
  %v11_1f3cd = and i32 %v0_1f3cd, -216
  %v2_1f3d3 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_1f3d3, i32* %eax.global-to-local, align 8
  %v2_1f3da = call i32 @unknown_3d4e0(i32 %v2_1f3d3, i32 %v11_1f3cd)
  store i32 %v2_1f3da, i32* %eax.global-to-local, align 8
  %v1_1f3e3 = load i32, i32* %ebx.global-to-local, align 4
  %v12_1f3e3 = icmp eq i32 %tmp103, %v1_1f3e3
  %v1_1f3e5 = icmp eq i1 %v12_1f3e3, false
  br i1 %v1_1f3e5, label %dec_label_pc_1f3f2, label %dec_label_pc_1f40b

dec_label_pc_1f3f0:                               ; preds = %dec_label_pc_1f3f2
  br label %dec_label_pc_1f3f2

dec_label_pc_1f3f2:                               ; preds = %dec_label_pc_1f3b0, %dec_label_pc_1f3f0
  %v0_1f3f2 = phi i32 [ %v2_1f3f2, %dec_label_pc_1f3f0 ], [ %tmp103, %dec_label_pc_1f3b0 ]
  %v1_1f3f2 = inttoptr i32 %v0_1f3f2 to i32*
  %v2_1f3f2 = load i32, i32* %v1_1f3f2, align 4
  %v1_1f3f4 = add i32 %v0_1f3f2, 12
  store i32 %v1_1f3f4, i32* @eax, align 8
  %v1_1f3fa = call i32 @function_2f800(i32 %v1_1f3f4)
  store i32 %v1_1f3fa, i32* %eax.global-to-local, align 8
  %v1_1f407 = load i32, i32* %ebx.global-to-local, align 4
  %v12_1f407 = icmp eq i32 %v2_1f3f2, %v1_1f407
  %v1_1f409 = icmp eq i1 %v12_1f407, false
  br i1 %v1_1f409, label %dec_label_pc_1f3f0, label %dec_label_pc_1f40b

dec_label_pc_1f40b:                               ; preds = %dec_label_pc_1f3f2, %dec_label_pc_1f3b0
  %v2_1f40b = load i32, i32* %edi.global-to-local, align 4
  store i32 %v2_1f40b, i32* %eax.global-to-local, align 8
  ret i32 %v2_1f40b

; uselistorder directives
  uselistorder i32 %v0_1f3f2, { 1, 0 }
  uselistorder i32 %v2_1f3c3, { 2, 1, 0 }
  uselistorder i8 %v4_1f3c1, { 1, 0 }
  uselistorder i32 %v3_1f3c1, { 1, 0, 2 }
  uselistorder i32 %v0_1f3c1, { 1, 0 }
  uselistorder i32 %v3_1f3ba, { 1, 0 }
  uselistorder i32 %v0_1f3ba, { 1, 0 }
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder label %dec_label_pc_1f3f2, { 1, 0 }
}

define i32 @function_1f410(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f410:
  %v0_1f413 = load i32, i32* @eax, align 8
  %v1_1f413 = icmp eq i32 %v0_1f413, 0
  br i1 %v1_1f413, label %bb, label %dec_label_pc_1f417

bb:                                               ; preds = %dec_label_pc_1f410
  %v1_1f415 = call i32 @function_1f459()
  store i32 %v1_1f415, i32* @eax, align 8
  br label %dec_label_pc_1f417

dec_label_pc_1f417:                               ; preds = %bb, %dec_label_pc_1f410
  %v0_1f417 = phi i32 [ %v1_1f415, %bb ], [ %v0_1f413, %dec_label_pc_1f410 ]
  %v1_1f417 = load i32, i32* @edi, align 4
  %v2_1f417 = add i32 %v1_1f417, 8
  %v3_1f417 = inttoptr i32 %v2_1f417 to i32*
  store i32 %v0_1f417, i32* %v3_1f417, align 4
  %v3_1f425 = load i32, i32* @eax, align 8
  ret i32 %v3_1f425
}

define i32 @function_1f42c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f42c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f42c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f42c = add i32 %v0_1f42c, 1698440260
  %v2_1f42c = inttoptr i32 %v1_1f42c to i32*
  %v3_1f42c = load i32, i32* %v2_1f42c, align 4
  %v4_1f42c = add i32 %v3_1f42c, -1
  store i32 %v4_1f42c, i32* %v2_1f42c, align 4
  %v0_1f432 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f432 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f432 = xor i32 %v1_1f432, %v0_1f432
  %v3_1f432 = icmp eq i32 %v2_1f432, 0
  store i32 %v2_1f432, i32* @eax, align 8
  %v1_1f438 = icmp eq i1 %v3_1f432, false
  br i1 %v1_1f438, label %bb, label %dec_label_pc_1f43a

bb:                                               ; preds = %dec_label_pc_1f42c
  %v2_1f438 = call i32 @function_1f454()
  store i32 %v2_1f438, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f43a

dec_label_pc_1f43a:                               ; preds = %bb, %dec_label_pc_1f42c
  %v0_1f441 = phi i32 [ %v2_1f438, %bb ], [ %v2_1f432, %dec_label_pc_1f42c ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1f441
}

define i32 @function_1f444() local_unnamed_addr {
dec_label_pc_1f444:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f454() local_unnamed_addr {
dec_label_pc_1f454:
  %v0_1f454 = load i32, i32* @eax, align 8
  ret i32 %v0_1f454
}

define i32 @function_1f459() local_unnamed_addr {
dec_label_pc_1f459:
  %v0_1f459 = call i32 @function_2d672()
  store i32 %v0_1f459, i32* @eax, align 8
  %v0_1f460 = call i32 @function_2d53a()
  ret i32 %v0_1f460
}

define i32 @function_1f470(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f470:
  %v0_1f470 = call i32 @unknown_3d8a0()
  ret i32 %v0_1f470
}

define i32 @function_1f496() local_unnamed_addr {
dec_label_pc_1f496:
  %v0_1f496 = call i32 @function_1f444()
  ret i32 %v0_1f496
}

define i32 @function_1f49f() local_unnamed_addr {
dec_label_pc_1f49f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f4aa() local_unnamed_addr {
dec_label_pc_1f4aa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f4b2() local_unnamed_addr {
dec_label_pc_1f4b2:
  %v0_1f4b2 = call i32 @function_1f444()
  ret i32 %v0_1f4b2

; uselistorder directives
  uselistorder i32 ()* @function_1f444, { 1, 0 }
}

define i32 @function_1f4b4() local_unnamed_addr {
dec_label_pc_1f4b4:
  %v0_1f4b6 = call i32 @function_1f49f()
  ret i32 %v0_1f4b6
}

define i32 @function_1f4d1() local_unnamed_addr {
dec_label_pc_1f4d1:
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f4d1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f4d1 = add i32 %v0_1f4d1, 606898631
  %v2_1f4d1 = inttoptr i32 %v1_1f4d1 to i32*
  %v3_1f4d1 = load i32, i32* %v2_1f4d1, align 4
  %v4_1f4d1 = add i32 %v3_1f4d1, -1
  store i32 %v4_1f4d1, i32* %v2_1f4d1, align 4
  %v0_1f4dc = call i32 @function_1f4aa()
  ret i32 %v0_1f4dc
}

define i32 @function_1f4de() local_unnamed_addr {
dec_label_pc_1f4de:
  %v0_1f4e0 = call i32 @function_1f4aa()
  ret i32 %v0_1f4e0
}

define i32 @function_1f4e9() local_unnamed_addr {
dec_label_pc_1f4e9:
  %v0_1f4e9 = call i32 @function_1f4aa()
  ret i32 %v0_1f4e9

; uselistorder directives
  uselistorder i32 ()* @function_1f4aa, { 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4f0:
  ret i32 0
}

define i32 @function_1f51a(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f51a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_1f51a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f51a = add i32 %v0_1f51a, 1149890808
  %v2_1f51a = inttoptr i32 %v1_1f51a to i32*
  %v3_1f51a = load i32, i32* %v2_1f51a, align 4
  %v4_1f51a = add i32 %v3_1f51a, 1
  store i32 %v4_1f51a, i32* %v2_1f51a, align 4
  %v0_1f520 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f520 = trunc i32 %v0_1f520 to i8
  %v2_1f520 = and i8 %v1_1f520, 28
  %v3_1f520 = icmp eq i8 %v2_1f520, 0
  %v8_1f520 = zext i8 %v2_1f520 to i32
  %v10_1f520 = and i32 %v0_1f520, -256
  %v11_1f520 = or i32 %v8_1f520, %v10_1f520
  store i32 %v11_1f520, i32* %eax.global-to-local, align 8
  br i1 %v3_1f520, label %dec_label_pc_1f54c, label %dec_label_pc_1f524

dec_label_pc_1f524:                               ; preds = %dec_label_pc_1f51a
  %v0_1f524 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f524 = add i32 %v0_1f524, 16
  %v2_1f524 = inttoptr i32 %v1_1f524 to i32*
  %v3_1f524 = load i32, i32* %v2_1f524, align 4
  store i32 %v3_1f524, i32* %eax.global-to-local, align 8
  store i32 %tmp103, i32* %edx.global-to-local, align 4
  %v2_1f52b = add i32 %tmp103, 16
  %v3_1f52b = inttoptr i32 %v2_1f52b to i32*
  store i32 %v3_1f524, i32* %v3_1f52b, align 4
  %v0_1f52e = load i32, i32* %edx.global-to-local, align 4
  %v1_1f52e = add i32 %v0_1f52e, 20
  %v2_1f52e = inttoptr i32 %v1_1f52e to i8*
  store i8 0, i8* %v2_1f52e, align 1
  %v0_1f532 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f532 = add i32 %v0_1f532, 20
  %v2_1f532 = inttoptr i32 %v1_1f532 to i8*
  %v3_1f532 = load i8, i8* %v2_1f532, align 1
  %v10_1f532 = icmp eq i8 %v3_1f532, 0
  br i1 %v10_1f532, label %dec_label_pc_1f542, label %dec_label_pc_1f538

dec_label_pc_1f538:                               ; preds = %dec_label_pc_1f524
  %v1_1f538 = add i32 %v0_1f532, 24
  %v2_1f538 = inttoptr i32 %v1_1f538 to i32*
  %v3_1f538 = load i32, i32* %v2_1f538, align 4
  store i32 %v3_1f538, i32* %eax.global-to-local, align 8
  %v0_1f53b = load i32, i32* %edx.global-to-local, align 4
  %v1_1f53b = add i32 %v0_1f53b, 20
  %v2_1f53b = inttoptr i32 %v1_1f53b to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1f53b, align 1
  %v0_1f53f = load i32, i32* %eax.global-to-local, align 8
  %v1_1f53f = load i32, i32* %edx.global-to-local, align 4
  %v2_1f53f = add i32 %v1_1f53f, 24
  %v3_1f53f = inttoptr i32 %v2_1f53f to i32*
  store i32 %v0_1f53f, i32* %v3_1f53f, align 4
  %v0_1f542.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1f542

dec_label_pc_1f542:                               ; preds = %dec_label_pc_1f538, %dec_label_pc_1f524
  %v0_1f542 = phi i32 [ %v0_1f542.pre, %dec_label_pc_1f538 ], [ %v0_1f532, %dec_label_pc_1f524 ]
  %v1_1f542 = add i32 %v0_1f542, 28
  %v2_1f542 = inttoptr i32 %v1_1f542 to i32*
  %v3_1f542 = load i32, i32* %v2_1f542, align 4
  store i32 %v3_1f542, i32* %eax.global-to-local, align 8
  store i32 %tmp103, i32* %edx.global-to-local, align 4
  %v2_1f549 = add i32 %tmp103, 28
  %v3_1f549 = inttoptr i32 %v2_1f549 to i32*
  store i32 %v3_1f542, i32* %v3_1f549, align 4
  br label %dec_label_pc_1f54c

dec_label_pc_1f54c:                               ; preds = %dec_label_pc_1f542, %dec_label_pc_1f51a
  store i32 %tmp103, i32* %edx.global-to-local, align 4
  %v2_1f550 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_1f550, i32* %eax.global-to-local, align 8
  %v1_1f552 = add i32 %tmp103, 12
  %v2_1f552 = inttoptr i32 %v1_1f552 to i32*
  store i32 0, i32* %v2_1f552, align 4
  %v0_1f559 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f559 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f559 = inttoptr i32 %v1_1f559 to i32*
  store i32 %v0_1f559, i32* %v2_1f559, align 4
  %v0_1f55b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f55b = add i32 %v0_1f55b, 12
  %v2_1f55b = inttoptr i32 %v1_1f55b to i32*
  %v3_1f55b = load i32, i32* %v2_1f55b, align 4
  store i32 %v3_1f55b, i32* %eax.global-to-local, align 8
  %v0_1f55e = load i32, i32* %edx.global-to-local, align 4
  %v1_1f55e = add i32 %v0_1f55e, 8
  %v2_1f55e = inttoptr i32 %v1_1f55e to i32*
  store i32 0, i32* %v2_1f55e, align 4
  %v0_1f565 = load i32, i32* %esi.global-to-local, align 4
  %v1_1f565 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f565 = add i32 %v1_1f565, 4
  %v3_1f565 = inttoptr i32 %v2_1f565 to i32*
  store i32 %v0_1f565, i32* %v3_1f565, align 4
  %v0_1f568 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f568 = icmp eq i32 %v0_1f568, 0
  br i1 %v1_1f568, label %dec_label_pc_1f583, label %dec_label_pc_1f56c

dec_label_pc_1f56c:                               ; preds = %dec_label_pc_1f54c
  %v0_1f56c = load i32, i32* %edx.global-to-local, align 4
  %v2_1f577 = call i32 @unknown_3e9e0(i32 %v0_1f568, i32 %v0_1f56c)
  store i32 %v2_1f577, i32* %eax.global-to-local, align 8
  store i32 %tmp103, i32* %edx.global-to-local, align 4
  store i32 %v2_1f577, i32* %v2_1f552, align 4
  %v0_1f58e.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f583

dec_label_pc_1f583:                               ; preds = %dec_label_pc_1f56c, %dec_label_pc_1f54c
  %v0_1f58e = phi i32 [ %v0_1f58e.pre, %dec_label_pc_1f56c ], [ 0, %dec_label_pc_1f54c ]
  %v0_1f583 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f583 = add i32 %v0_1f583, 8
  %v2_1f583 = inttoptr i32 %v1_1f583 to i32*
  %v3_1f583 = load i32, i32* %v2_1f583, align 4
  store i32 %v3_1f583, i32* %esi.global-to-local, align 4
  ret i32 %v0_1f58e

; uselistorder directives
  uselistorder i32 %tmp103, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
}

define i32 @function_1f590(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f590:
  %v2_1f592 = load i32, i32* @eax, align 8
  ret i32 %v2_1f592
}

define i32 @function_1f5a2() local_unnamed_addr {
dec_label_pc_1f5a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f5a2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f5a2
}

define i32 @function_1f5f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5f0:
  %v2_1f5f1 = load i32, i32* @eax, align 8
  %v4_1f5f1 = mul i32 %v2_1f5f1, 2
  %v21_1f5f1 = inttoptr i32 %v2_1f5f1 to i32*
  store i32 %v4_1f5f1, i32* %v21_1f5f1, align 4
  %v0_1f5f4 = load i32, i32* @eax, align 8
  %v1_1f5f4 = load i32, i32* @ebx, align 4
  %v2_1f5f4 = add i32 %v1_1f5f4, 12
  %v3_1f5f4 = inttoptr i32 %v2_1f5f4 to i32*
  store i32 %v0_1f5f4, i32* %v3_1f5f4, align 4
  %v0_1f5f7 = load i32, i32* @esi, align 4
  %v1_1f5f7 = add i32 %v0_1f5f7, 8
  %v2_1f5f7 = inttoptr i32 %v1_1f5f7 to i32*
  %v3_1f5f7 = load i32, i32* %v2_1f5f7, align 4
  %v1_1f5fa = icmp eq i32 %v3_1f5f7, 0
  %v1_1f5fc = icmp eq i1 %v1_1f5fa, false
  br i1 %v1_1f5fc, label %bb, label %dec_label_pc_1f5f0.dec_label_pc_1f5fe_crit_edge

dec_label_pc_1f5f0.dec_label_pc_1f5fe_crit_edge:  ; preds = %dec_label_pc_1f5f0
  %v4_1f5fc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1f5fe

bb:                                               ; preds = %dec_label_pc_1f5f0
  %v3_1f5fc = call i32 @function_1f590(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_1f5fe

dec_label_pc_1f5fe:                               ; preds = %dec_label_pc_1f5f0.dec_label_pc_1f5fe_crit_edge, %bb
  %v4_1f5fc = phi i32 [ %v4_1f5fc.pre, %dec_label_pc_1f5f0.dec_label_pc_1f5fe_crit_edge ], [ %v3_1f5fc, %bb ]
  ret i32 %v4_1f5fc

; uselistorder directives
  uselistorder i32 %v2_1f5f1, { 1, 0 }
  uselistorder i32 (i32)* @function_1f590, { 1, 0 }
  uselistorder label %dec_label_pc_1f5fe, { 1, 0 }
}

define i32 @function_1f600(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f600:
  %v0_1f602 = load i32, i32* @edx, align 4
  %v1_1f602 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f602 = icmp eq i32 %v1_1f602, %v0_1f602
  %v1_1f60d = icmp eq i1 %v3_1f602, false
  br i1 %v1_1f60d, label %dec_label_pc_1f617, label %dec_label_pc_1f60f

dec_label_pc_1f60f:                               ; preds = %dec_label_pc_1f600
  ret i32 %arg1

dec_label_pc_1f617:                               ; preds = %dec_label_pc_1f600
  %v1_1f62f = call i32 @unknown_3d8f0(i32 %arg1)
  ret i32 %v1_1f62f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f63a() local_unnamed_addr {
dec_label_pc_1f63a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f63a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f63a
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f650:
  ret i32 %arg2
}

define i32 @function_1f660(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f660:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f66c = load i32, i32* @eax, align 8
  %v0_1f670 = load i32, i32* @esi, align 4
  %v2_1f670 = inttoptr i32 %v0_1f670 to i32*
  store i32 %v0_1f670, i32* %v2_1f670, align 4
  %v0_1f672 = load i32, i32* @esi, align 4
  %v2_1f672 = add i32 %v0_1f672, 4
  %v3_1f672 = inttoptr i32 %v2_1f672 to i32*
  store i32 %v0_1f672, i32* %v3_1f672, align 4
  %v2_1f675 = load i32, i32* @eax, align 8
  store i32 %v2_1f675, i32* @ebx, align 4
  %v2_1f679 = call i32 @function_1f6b7(i32 %v0_1f66c)
  store i32 %v2_1f679, i32* %eax.global-to-local, align 8
  %v1_1f68c = add i32 %v2_1f679, 8
  %v10_1f68c = icmp eq i32 %v1_1f68c, 0
  br i1 %v10_1f68c, label %dec_label_pc_1f6a5, label %dec_label_pc_1f691

dec_label_pc_1f691:                               ; preds = %dec_label_pc_1f660
  %v0_1f691 = load i32, i32* @ebx, align 4
  %v1_1f691 = add i32 %v0_1f691, 8
  %v2_1f691 = inttoptr i32 %v1_1f691 to i32*
  %v3_1f691 = load i32, i32* %v2_1f691, align 4
  %v3_1f694 = inttoptr i32 %v1_1f68c to i32*
  store i32 %v3_1f691, i32* %v3_1f694, align 4
  %v0_1f697 = load i32, i32* @ebx, align 4
  %v1_1f697 = add i32 %v0_1f697, 12
  %v2_1f697 = inttoptr i32 %v1_1f697 to i32*
  %v3_1f697 = load i32, i32* %v2_1f697, align 4
  %v1_1f69a = icmp eq i32 %v3_1f697, 0
  %v1_1f69c = load i32, i32* %eax.global-to-local, align 8
  %v2_1f69c = add i32 %v1_1f69c, 12
  %v3_1f69c = inttoptr i32 %v2_1f69c to i32*
  store i32 %v3_1f697, i32* %v3_1f69c, align 4
  br i1 %v1_1f69a, label %dec_label_pc_1f6a5, label %dec_label_pc_1f6a1

dec_label_pc_1f6a1:                               ; preds = %dec_label_pc_1f691
  %v1_1f6a1 = add i32 %v3_1f697, 4
  %v2_1f6a1 = inttoptr i32 %v1_1f6a1 to i32*
  %v3_1f6a1 = load i32, i32* %v2_1f6a1, align 4
  %v4_1f6a1 = add i32 %v3_1f6a1, 1
  store i32 %v4_1f6a1, i32* %v2_1f6a1, align 4
  br label %dec_label_pc_1f6a5

dec_label_pc_1f6a5:                               ; preds = %dec_label_pc_1f6a1, %dec_label_pc_1f691, %dec_label_pc_1f660
  %v3_1f6a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_1f6a9

; uselistorder directives
  uselistorder i32 %v0_1f672, { 1, 0 }
  uselistorder i32 %v0_1f670, { 1, 0 }
}

define i32 @function_1f6b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6b7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1f6b7 = load i32, i32* @esi, align 4
  %v1_1f6b7 = add i32 %v0_1f6b7, 12
  store i32 %v1_1f6b7, i32* %ecx.global-to-local, align 4
  %v2_1f6ba = add i32 %v0_1f6b7, 20
  %v3_1f6ba = inttoptr i32 %v2_1f6ba to i32*
  store i32 %v1_1f6b7, i32* %v3_1f6ba, align 4
  %v0_1f6bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f6bf = load i32, i32* @esi, align 4
  %v2_1f6bf = add i32 %v1_1f6bf, 24
  %v3_1f6bf = inttoptr i32 %v2_1f6bf to i32*
  store i32 %v0_1f6bd, i32* %v3_1f6bf, align 4
  %v0_1f6c2 = load i32, i32* @esi, align 4
  %v1_1f6c2 = add i32 %v0_1f6c2, 8
  store i32 %v1_1f6c2, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_1f6cd = add i32 %v0_1f6c2, 12
  %v2_1f6cd = inttoptr i32 %v1_1f6cd to i32*
  store i32 0, i32* %v2_1f6cd, align 4
  %v0_1f6d4 = load i32, i32* @esi, align 4
  %v1_1f6d4 = add i32 %v0_1f6d4, 16
  %v2_1f6d4 = inttoptr i32 %v1_1f6d4 to i32*
  store i32 0, i32* %v2_1f6d4, align 4
  %v0_1f6db = load i32, i32* @esi, align 4
  %v1_1f6db = add i32 %v0_1f6db, 28
  %v2_1f6db = inttoptr i32 %v1_1f6db to i32*
  store i32 0, i32* %v2_1f6db, align 4
  %v0_1f6e2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f6e2 = add i32 %v0_1f6e2, 16
  %v2_1f6e2 = inttoptr i32 %v1_1f6e2 to i32*
  %v3_1f6e2 = load i32, i32* %v2_1f6e2, align 4
  store i32 %v3_1f6e2, i32* %eax.global-to-local, align 8
  %v0_1f6f1 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f6f4 = call i32 @unknown_3eb40(i32 %v0_1f6f1, i32 %v3_1f6e2)
  store i32 %v2_1f6f4, i32* %eax.global-to-local, align 8
  %v1_1f6f9 = load i32, i32* @esi, align 4
  %v2_1f6f9 = add i32 %v1_1f6f9, 16
  %v3_1f6f9 = inttoptr i32 %v2_1f6f9 to i32*
  store i32 %v2_1f6f4, i32* %v3_1f6f9, align 4
  %v0_1f6fc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f6fc
}

define i32 @function_1f6f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f700(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f700:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %v0_1f700 = load i32, i32* @edx, align 4
  store i32 %v0_1f700, i32* %ebp.global-to-local, align 4
  %v1_1f702 = add i32 %v0_1f700, 8
  %v2_1f702 = inttoptr i32 %v1_1f702 to i32*
  %v3_1f702 = load i32, i32* %v2_1f702, align 4
  store i32 %v3_1f702, i32* @edx, align 4
  %v1_1f705 = icmp eq i32 %v3_1f702, 0
  %v1_1f707 = icmp eq i1 %v1_1f705, false
  br i1 %v1_1f707, label %bb, label %dec_label_pc_1f709

bb:                                               ; preds = %dec_label_pc_1f700
  %v3_1f707 = call i32 @function_1f700(i32 ptrtoint (i32* @1 to i32))
  store i32 %v3_1f707, i32* @eax, align 8
  %v0_1f709.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1f709

dec_label_pc_1f709:                               ; preds = %bb, %dec_label_pc_1f700
  %v0_1f709 = phi i32 [ %v0_1f709.pre, %bb ], [ %v0_1f700, %dec_label_pc_1f700 ]
  %v1_1f709 = load i32, i32* @esi, align 4
  %v2_1f709 = add i32 %v1_1f709, 20
  %v3_1f709 = inttoptr i32 %v2_1f709 to i32*
  store i32 %v0_1f709, i32* %v3_1f709, align 4
  %v0_1f712.pre = load i32, i32* @eax, align 8
  %v1_1f71226 = add i32 %v0_1f712.pre, 12
  %v2_1f71227 = inttoptr i32 %v1_1f71226 to i32*
  %v3_1f71228 = load i32, i32* %v2_1f71227, align 4
  store i32 %v3_1f71228, i32* %edx.global-to-local, align 4
  %v1_1f71529 = icmp eq i32 %v3_1f71228, 0
  %v1_1f71730 = icmp eq i1 %v1_1f71529, false
  br i1 %v1_1f71730, label %dec_label_pc_1f710, label %dec_label_pc_1f719

dec_label_pc_1f710:                               ; preds = %dec_label_pc_1f709, %dec_label_pc_1f710
  %v3_1f71231 = phi i32 [ %v3_1f712, %dec_label_pc_1f710 ], [ %v3_1f71228, %dec_label_pc_1f709 ]
  %v1_1f712 = add i32 %v3_1f71231, 12
  %v2_1f712 = inttoptr i32 %v1_1f712 to i32*
  %v3_1f712 = load i32, i32* %v2_1f712, align 4
  store i32 %v3_1f712, i32* %edx.global-to-local, align 4
  %v1_1f715 = icmp eq i32 %v3_1f712, 0
  %v1_1f717 = icmp eq i1 %v1_1f715, false
  br i1 %v1_1f717, label %dec_label_pc_1f710, label %dec_label_pc_1f719

dec_label_pc_1f719:                               ; preds = %dec_label_pc_1f710, %dec_label_pc_1f709
  %v0_1f71d.lcssa = phi i32 [ %v0_1f712.pre, %dec_label_pc_1f709 ], [ %v3_1f71231, %dec_label_pc_1f710 ]
  %v1_1f71d = load i32, i32* @esi, align 4
  %v2_1f71d = add i32 %v1_1f71d, 24
  %v3_1f71d = inttoptr i32 %v2_1f71d to i32*
  store i32 %v0_1f71d.lcssa, i32* %v3_1f71d, align 4
  %v0_1f720 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f720 = add i32 %v0_1f720, 28
  %v2_1f720 = inttoptr i32 %v1_1f720 to i32*
  %v3_1f720 = load i32, i32* %v2_1f720, align 4
  store i32 %v3_1f720, i32* @eax, align 8
  %v1_1f723 = load i32, i32* @esi, align 4
  %v2_1f723 = add i32 %v1_1f723, 28
  %v3_1f723 = inttoptr i32 %v2_1f723 to i32*
  store i32 %v3_1f720, i32* %v3_1f723, align 4
  %v1_1f72c = add i32 %tmp19, 20
  %v2_1f72c = inttoptr i32 %v1_1f72c to i32*
  %v3_1f72c = load i32, i32* %v2_1f72c, align 4
  store i32 %v3_1f72c, i32* %edi.global-to-local, align 4
  %v1_1f72f = add i32 %tmp19, 12
  %v12_1f736 = icmp eq i32 %v1_1f72f, %v3_1f72c
  br i1 %v12_1f736, label %dec_label_pc_1f780, label %dec_label_pc_1f740.preheader

dec_label_pc_1f740.preheader:                     ; preds = %dec_label_pc_1f719
  %v4_1f740.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1f740

dec_label_pc_1f740:                               ; preds = %dec_label_pc_1f740.preheader, %dec_label_pc_1f770
  %v4_1f740 = phi i32 [ %v4_1f740.pre, %dec_label_pc_1f740.preheader ], [ %v0_1f77c, %dec_label_pc_1f770 ]
  %v15_1f740 = icmp eq i32 %v4_1f740, %arg1
  br i1 %v15_1f740, label %bb20, label %dec_label_pc_1f746

bb20:                                             ; preds = %dec_label_pc_1f740
  %v1_1f744 = call i32 @function_1f7ac()
  store i32 %v1_1f744, i32* @eax, align 8
  %v1_1f746.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_1f746

dec_label_pc_1f746:                               ; preds = %bb20, %dec_label_pc_1f740
  %v1_1f746 = phi i32 [ %v1_1f746.pre, %bb20 ], [ %v4_1f740, %dec_label_pc_1f740 ]
  %v0_1f746 = load i32, i32* @esi, align 4
  %v2_1f746 = add i32 %v1_1f746, 28
  %v3_1f746 = inttoptr i32 %v2_1f746 to i32*
  store i32 %v0_1f746, i32* %v3_1f746, align 4
  %v0_1f749 = load i32, i32* %edi.global-to-local, align 4
  %v1_1f749 = add i32 %v0_1f749, 28
  %v2_1f749 = inttoptr i32 %v1_1f749 to i32*
  %v3_1f749 = load i32, i32* %v2_1f749, align 4
  %v0_1f754 = load i32, i32* @eax, align 8
  store i32 %v0_1f754, i32* %edi.global-to-local, align 4
  %v15_1f75a = icmp eq i32 %v1_1f72f, %v0_1f754
  br i1 %v15_1f75a, label %dec_label_pc_1f76c.preheader, label %dec_label_pc_1f760

dec_label_pc_1f760:                               ; preds = %dec_label_pc_1f746
  %v1_1f760 = add i32 %v0_1f754, 28
  %v2_1f760 = inttoptr i32 %v1_1f760 to i32*
  %v3_1f760 = load i32, i32* %v2_1f760, align 4
  store i32 %v3_1f760, i32* @eax, align 8
  br label %dec_label_pc_1f76c.preheader

dec_label_pc_1f76c.preheader:                     ; preds = %dec_label_pc_1f746, %dec_label_pc_1f760
  %v0_1f77c = phi i32 [ %tmp19, %dec_label_pc_1f746 ], [ %v3_1f760, %dec_label_pc_1f760 ]
  %v12_1f76c23 = icmp eq i32 %v3_1f749, %v0_1f77c
  %v1_1f76e24 = icmp eq i1 %v12_1f76c23, false
  br i1 %v1_1f76e24, label %dec_label_pc_1f768.lr.ph, label %dec_label_pc_1f770

dec_label_pc_1f768.lr.ph:                         ; preds = %dec_label_pc_1f76c.preheader
  %v0_1f76a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1f768

dec_label_pc_1f768:                               ; preds = %dec_label_pc_1f768.lr.ph, %dec_label_pc_1f768
  %v0_1f76a = phi i32 [ %v0_1f76a.pre, %dec_label_pc_1f768.lr.ph ], [ %v2_1f76a, %dec_label_pc_1f768 ]
  %v0_1f76825 = phi i32 [ %v3_1f749, %dec_label_pc_1f768.lr.ph ], [ %v2_1f768, %dec_label_pc_1f768 ]
  %v1_1f768 = inttoptr i32 %v0_1f76825 to i32*
  %v2_1f768 = load i32, i32* %v1_1f768, align 4
  %v1_1f76a = inttoptr i32 %v0_1f76a to i32*
  %v2_1f76a = load i32, i32* %v1_1f76a, align 4
  store i32 %v2_1f76a, i32* @esi, align 4
  %v12_1f76c = icmp eq i32 %v2_1f768, %v0_1f77c
  %v1_1f76e = icmp eq i1 %v12_1f76c, false
  br i1 %v1_1f76e, label %dec_label_pc_1f768, label %dec_label_pc_1f770

dec_label_pc_1f770:                               ; preds = %dec_label_pc_1f768, %dec_label_pc_1f76c.preheader
  store i32 %v0_1f77c, i32* %ebp.global-to-local, align 4
  %v1_1f77e = icmp eq i1 %v15_1f75a, false
  br i1 %v1_1f77e, label %dec_label_pc_1f740, label %dec_label_pc_1f780

dec_label_pc_1f780:                               ; preds = %dec_label_pc_1f770, %dec_label_pc_1f719
  %v1_1f784 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f784 = xor i32 %v1_1f784, %tmp15
  %v3_1f784 = icmp eq i32 %v2_1f784, 0
  store i32 %v2_1f784, i32* @eax, align 8
  %v1_1f78b = icmp eq i1 %v3_1f784, false
  br i1 %v1_1f78b, label %bb21, label %dec_label_pc_1f78d

bb21:                                             ; preds = %dec_label_pc_1f780
  %v2_1f78b = call i32 @function_1f7a7()
  br label %dec_label_pc_1f78d

dec_label_pc_1f78d:                               ; preds = %bb21, %dec_label_pc_1f780
  %v0_1f794 = phi i32 [ %v2_1f78b, %bb21 ], [ %v2_1f784, %dec_label_pc_1f780 ]
  ret i32 %v0_1f794

; uselistorder directives
  uselistorder i32 %v2_1f76a, { 1, 0 }
  uselistorder i32 %v0_1f77c, { 2, 1, 0, 3 }
  uselistorder i1 %v15_1f75a, { 1, 0 }
  uselistorder i32 %v0_1f754, { 1, 0, 2 }
  uselistorder i32 %v4_1f740, { 1, 0 }
  uselistorder i32 %v3_1f712, { 1, 2, 0 }
  uselistorder i32 %tmp19, { 0, 2, 1 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @function_1f700, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1f768, { 1, 0 }
  uselistorder label %dec_label_pc_1f76c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1f740, { 1, 0 }
  uselistorder label %dec_label_pc_1f710, { 1, 0 }
}

define i32 @function_1f796() local_unnamed_addr {
dec_label_pc_1f796:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f796 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f796
}

define i32 @function_1f7a7() local_unnamed_addr {
dec_label_pc_1f7a7:
  %v0_1f7a7 = load i32, i32* @eax, align 8
  ret i32 %v0_1f7a7
}

define i32 @function_1f7ac() local_unnamed_addr {
dec_label_pc_1f7ac:
  %v0_1f7d2 = load i32, i32* @esi, align 4
  %v7_1f7d5 = call i32 @unknown_396f0(i32 %v0_1f7d2, i32 ptrtoint ([51 x i8]* @global_var_dd74.2726 to i32), i32 80, i32 ptrtoint ([845 x i8]* @global_var_2eaa0.2728 to i32))
  ret i32 %v7_1f7d5
}

define i32 @_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEC1ERKS6_RKS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7f0:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_1f7f7 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1f7f7, i32* @ebx, align 4
  %v2_1f80b = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_1f80b
}

define i32 @function_1f850(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f850:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f850 = load i32, i32* @ecx, align 4
  %v1_1f850 = add i32 %v0_1f850, 610044357
  %v2_1f850 = inttoptr i32 %v1_1f850 to i32*
  %v3_1f850 = load i32, i32* %v2_1f850, align 4
  %v4_1f850 = add i32 %v3_1f850, -1
  store i32 %v4_1f850, i32* %v2_1f850, align 4
  %v0_1f856 = load i32, i32* @eax, align 8
  %v2_1f858 = add i32 %v0_1f856, 173
  %v16_1f858 = and i32 %v2_1f858, 255
  %v18_1f858 = and i32 %v0_1f856, -256
  %v19_1f858 = or i32 %v16_1f858, %v18_1f858
  store i32 %v19_1f858, i32* %eax.global-to-local, align 8
  %v0_1f85a = call i32 @unknown_3ee40()
  store i32 %v0_1f85a, i32* %eax.global-to-local, align 8
  %v0_1f85f = load i32, i32* @ebp, align 4
  %v1_1f85f = load i32, i32* @esi, align 4
  %v2_1f85f = inttoptr i32 %v1_1f85f to i32*
  store i32 %v0_1f85f, i32* %v2_1f85f, align 4
  %v0_1f861 = load i32, i32* @esi, align 4
  %v1_1f861 = add i32 %v0_1f861, 4
  %v2_1f861 = inttoptr i32 %v1_1f861 to i32*
  store i32 0, i32* %v2_1f861, align 4
  %v0_1f874 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f874 = add i32 %v0_1f874, 4
  %v2_1f874 = inttoptr i32 %v1_1f874 to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_1f874, align 4
  %v0_1f87b = load i32, i32* %eax.global-to-local, align 8
  %v1_1f87b = add i32 %v0_1f87b, 8
  %v2_1f87b = inttoptr i32 %v1_1f87b to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_1f87b, align 4
  %v0_1f882 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f882 = inttoptr i32 %v0_1f882 to i32*
  store i32 ptrtoint (%vtable_31508_type* @global_var_31508.2729 to i32), i32* %v1_1f882, align 4
  %v0_1f888 = load i32, i32* @ebp, align 4
  %v1_1f888 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f888 = add i32 %v1_1f888, 12
  %v3_1f888 = inttoptr i32 %v2_1f888 to i32*
  store i32 %v0_1f888, i32* %v3_1f888, align 4
  %v0_1f88b = load i32, i32* %eax.global-to-local, align 8
  %v1_1f88b = load i32, i32* @esi, align 4
  %v2_1f88b = add i32 %v1_1f88b, 4
  %v3_1f88b = inttoptr i32 %v2_1f88b to i32*
  store i32 %v0_1f88b, i32* %v3_1f88b, align 4
  %v3_1f88e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_1f88e

; uselistorder directives
  uselistorder i32 %v0_1f856, { 1, 0 }
}

define i32 @function_1f8c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f8c0:
  %v0_1f8c0 = load i32, i32* @eax, align 8
  %v1_1f8c0 = inttoptr i32 %v0_1f8c0 to i32*
  store i32 ptrtoint (%vtable_31678_type* @global_var_31678.2730 to i32), i32* %v1_1f8c0, align 4
  %v0_1f8c6 = load i32, i32* @ebp, align 4
  %v1_1f8c6 = load i32, i32* @eax, align 8
  %v2_1f8c6 = add i32 %v1_1f8c6, 12
  %v3_1f8c6 = inttoptr i32 %v2_1f8c6 to i32*
  store i32 %v0_1f8c6, i32* %v3_1f8c6, align 4
  %v0_1f8c9 = load i32, i32* @eax, align 8
  %v1_1f8c9 = load i32, i32* @esi, align 4
  %v2_1f8c9 = add i32 %v1_1f8c9, 12
  %v3_1f8c9 = inttoptr i32 %v2_1f8c9 to i32*
  store i32 %v0_1f8c9, i32* %v3_1f8c9, align 4
  %v0_1f8cc = load i32, i32* @esi, align 4
  %v1_1f8cc = load i32, i32* @edi, align 4
  %v2_1f8cc = inttoptr i32 %v1_1f8cc to i32*
  store i32 %v0_1f8cc, i32* %v2_1f8cc, align 4
  %v0_1f8ce = load i32, i32* @edi, align 4
  %v1_1f8ce = add i32 %v0_1f8ce, 4
  %v2_1f8ce = inttoptr i32 %v1_1f8ce to i32*
  store i32 0, i32* %v2_1f8ce, align 4
  %v2_1f8d5 = load i32, i32* @eax, align 8
  ret i32 %v2_1f8d5
}

define i32 @function_1f8e0(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f8e0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %stack_var_33 = alloca i32, align 4
  %v0_1f8e0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f8e0 = add i32 %v0_1f8e0, 1086786672
  %v2_1f8e0 = inttoptr i32 %v1_1f8e0 to i32*
  %v3_1f8e0 = load i32, i32* %v2_1f8e0, align 4
  %v4_1f8e0 = add i32 %v3_1f8e0, -1
  store i32 %v4_1f8e0, i32* %v2_1f8e0, align 4
  %v0_1f8e6 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f8e6 = trunc i32 %v0_1f8e6 to i8
  %v2_1f8e6 = add i8 %v1_1f8e6, ptrtoint (i1* @global_var_1.2399 to i8)
  %v6_1f8e6 = icmp ult i8 %v2_1f8e6, %v1_1f8e6
  store i1 %v6_1f8e6, i1* %cf.global-to-local, align 1
  %v16_1f8e6 = zext i8 %v2_1f8e6 to i32
  %v18_1f8e6 = and i32 %v0_1f8e6, -256
  %v19_1f8e6 = or i32 %v16_1f8e6, %v18_1f8e6
  store i32 %v19_1f8e6, i32* %eax.global-to-local, align 8
  %v1_1f8e8 = inttoptr i32 %v19_1f8e6 to i8*
  %v2_1f8e8 = load i8, i8* %v1_1f8e8, align 1
  %v5_1f8e8 = add i8 %v2_1f8e8, %v2_1f8e6
  store i8 %v5_1f8e8, i8* %v1_1f8e8, align 1
  %v0_1f8ea = load i32, i32* %ebx.global-to-local, align 4
  %v3_1f8ea = load i32, i32* %eax.global-to-local, align 8
  %v5_1f8ea1 = mul i32 %v3_1f8ea, 256
  %v1_1f8ea2 = add i32 %v5_1f8ea1, %v0_1f8ea
  %v22_1f8ea = and i32 %v1_1f8ea2, 65280
  %v23_1f8ea = and i32 %v0_1f8ea, -65281
  %v24_1f8ea = or i32 %v22_1f8ea, %v23_1f8ea
  store i32 %v24_1f8ea, i32* %ebx.global-to-local, align 4
  %v1_1f8ec = add i32 %v3_1f8ea, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_1f8ec = trunc i32 %v1_1f8ec to i8
  store i32 %v1_1f8ec, i32* %eax.global-to-local, align 8
  %v2_1f8ed = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_1f8ed = or i8 %v2_1f8ed, %v11_1f8ec
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_1f8ed = load i32, i32* %ecx.global-to-local, align 4
  %v12_1f8ed = inttoptr i32 %v11_1f8ed to i8*
  store i8 %v5_1f8ed, i8* %v12_1f8ed, align 1
  %v0_1f8ef = load i32, i32* %eax.global-to-local, align 8
  %v1_1f8ef = inttoptr i32 %v0_1f8ef to i8*
  %v2_1f8ef = load i8, i8* %v1_1f8ef, align 1
  %v4_1f8ef = trunc i32 %v0_1f8ef to i8
  %v5_1f8ef = add i8 %v2_1f8ef, %v4_1f8ef
  store i8 %v5_1f8ef, i8* %v1_1f8ef, align 1
  %v0_1f8f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f8f1 = udiv i32 %v0_1f8f1, 256
  %v2_1f8f1 = trunc i32 %v1_1f8f1 to i8
  %v3_1f8f1 = load i32, i32* %eax.global-to-local, align 8
  %v4_1f8f1 = trunc i32 %v3_1f8f1 to i8
  %v5_1f8f1 = add i8 %v2_1f8f1, %v4_1f8f1
  %v10_1f8f1 = icmp ult i8 %v5_1f8f1, %v2_1f8f1
  store i1 %v10_1f8f1, i1* %cf.global-to-local, align 1
  %v20_1f8f1 = zext i8 %v5_1f8f1 to i32
  %v22_1f8f1 = mul nuw nsw i32 %v20_1f8f1, 256
  %v23_1f8f1 = and i32 %v0_1f8f1, -65281
  %v24_1f8f1 = or i32 %v22_1f8f1, %v23_1f8f1
  store i32 %v24_1f8f1, i32* %ebx.global-to-local, align 4
  %v1_1f8f3 = inttoptr i32 %v3_1f8f1 to i8*
  %v2_1f8f3 = load i8, i8* %v1_1f8f3, align 1
  %v3_1f8f3 = load i32, i32* %ecx.global-to-local, align 4
  %v4_1f8f3 = udiv i32 %v3_1f8f3, 256
  %v5_1f8f3 = trunc i32 %v4_1f8f3 to i8
  %v6_1f8f3 = add i8 %v5_1f8f3, %v2_1f8f3
  %v11_1f8f3 = icmp ult i8 %v6_1f8f3, %v2_1f8f3
  store i1 %v11_1f8f3, i1* %cf.global-to-local, align 1
  store i8 %v6_1f8f3, i8* %v1_1f8f3, align 1
  %v0_1f8f5 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f8f5 = load i1, i1* %cf.global-to-local, align 1
  %v2_1f8f5 = zext i1 %v1_1f8f5 to i32
  %v3_1f8f5 = add i32 %v0_1f8f5, 1200160771
  %v4_1f8f5 = add i32 %v3_1f8f5, %v2_1f8f5
  %v2_1f8fa = add i32 %v4_1f8f5, 11
  %v2_1f8fd = and i32 %v2_1f8fa, 40
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_1f8fd = and i32 %v4_1f8f5, -256
  %v11_1f8fd = or i32 %v2_1f8fd, %v10_1f8fd
  %v2_1f903 = ptrtoint i32* %stack_var_33 to i32
  store i32 %v2_1f903, i32* %eax.global-to-local, align 8
  %v2_1f90a = call i32 @unknown_3dbf0(i32 %v2_1f903, i32 %v11_1f8fd)
  store i32 %v2_1f90a, i32* %eax.global-to-local, align 8
  %v1_1f913 = load i32, i32* %ebx.global-to-local, align 4
  %v7_1f913 = icmp ult i32 %tmp99, %v1_1f913
  store i1 %v7_1f913, i1* %cf.global-to-local, align 1
  %v12_1f913 = icmp eq i32 %tmp99, %v1_1f913
  %v1_1f915 = icmp eq i1 %v12_1f913, false
  br i1 %v1_1f915, label %dec_label_pc_1f922, label %dec_label_pc_1f917

dec_label_pc_1f917:                               ; preds = %dec_label_pc_1f8e0
  %v0_1f917 = call i32 @function_1f93b()
  store i32 %v0_1f917, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f917

dec_label_pc_1f922:                               ; preds = %dec_label_pc_1f8e0
  %v1_1f924 = add i32 %tmp99, 12
  store i32 %v1_1f924, i32* @eax, align 8
  %v1_1f92a = call i32 @function_2fd30(i32 %v1_1f924)
  store i32 %v1_1f92a, i32* %eax.global-to-local, align 8
  ret i32 %v1_1f92a

; uselistorder directives
  uselistorder i32 %v4_1f8f5, { 1, 0 }
  uselistorder i8 %v2_1f8f3, { 1, 0 }
  uselistorder i32 %v0_1f8f1, { 1, 0 }
  uselistorder i32 %v3_1f8ea, { 1, 0 }
  uselistorder i32 %v0_1f8ea, { 1, 0 }
  uselistorder i32 %tmp99, { 1, 0, 2 }
}

define i32 @function_1f93b() local_unnamed_addr {
dec_label_pc_1f93b:
  %v2_1f93b = load i32, i32* @edi, align 4
  ret i32 %v2_1f93b
}

define i32 @function_1f940(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f940:
  %v0_1f943 = load i32, i32* @eax, align 8
  %v1_1f943 = icmp eq i32 %v0_1f943, 0
  br i1 %v1_1f943, label %bb, label %dec_label_pc_1f947

bb:                                               ; preds = %dec_label_pc_1f940
  %v1_1f945 = call i32 @function_1f989()
  store i32 %v1_1f945, i32* @eax, align 8
  br label %dec_label_pc_1f947

dec_label_pc_1f947:                               ; preds = %bb, %dec_label_pc_1f940
  %v0_1f947 = phi i32 [ %v1_1f945, %bb ], [ %v0_1f943, %dec_label_pc_1f940 ]
  %v1_1f947 = load i32, i32* @edi, align 4
  %v2_1f947 = add i32 %v1_1f947, 8
  %v3_1f947 = inttoptr i32 %v2_1f947 to i32*
  store i32 %v0_1f947, i32* %v3_1f947, align 4
  %v3_1f955 = load i32, i32* @eax, align 8
  ret i32 %v3_1f955
}

define i32 @function_1f95c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f95c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f95c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f95c = add i32 %v0_1f95c, 1698440260
  %v2_1f95c = inttoptr i32 %v1_1f95c to i32*
  %v3_1f95c = load i32, i32* %v2_1f95c, align 4
  %v4_1f95c = add i32 %v3_1f95c, -1
  store i32 %v4_1f95c, i32* %v2_1f95c, align 4
  %v0_1f962 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f962 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f962 = xor i32 %v1_1f962, %v0_1f962
  %v3_1f962 = icmp eq i32 %v2_1f962, 0
  store i32 %v2_1f962, i32* %eax.global-to-local, align 8
  %v1_1f968 = icmp eq i1 %v3_1f962, false
  br i1 %v1_1f968, label %dec_label_pc_1f984, label %dec_label_pc_1f96a

dec_label_pc_1f96a:                               ; preds = %dec_label_pc_1f95c
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_1f962

dec_label_pc_1f984:                               ; preds = %dec_label_pc_1f95c
  ret i32 %v2_1f962

; uselistorder directives
  uselistorder i32 %v2_1f962, { 1, 0, 2, 3 }
}

define i32 @function_1f972() local_unnamed_addr {
dec_label_pc_1f972:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f974 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f977 = call i32 @unknown_3dc60(i32 %v0_1f974)
  ret i32 %v1_1f977
}

define i32 @function_1f989() local_unnamed_addr {
dec_label_pc_1f989:
  %v0_1f989 = call i32 @function_2dbd6()
  store i32 %v0_1f989, i32* @eax, align 8
  %v0_1f990 = call i32 @function_2da9e()
  ret i32 %v0_1f990
}

define i32 @function_1f9c6() local_unnamed_addr {
dec_label_pc_1f9c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f9c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f9c6
}

define i32 @function_1f9cf() local_unnamed_addr {
dec_label_pc_1f9cf:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f9da() local_unnamed_addr {
dec_label_pc_1f9da:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f9e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f9e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f9e2() local_unnamed_addr {
dec_label_pc_1f9e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f9e2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f9e2
}

define i32 @function_1f9e4() local_unnamed_addr {
dec_label_pc_1f9e4:
  %v0_1f9e6 = call i32 @function_1f9cf()
  ret i32 %v0_1f9e6
}

define i32 @function_1f9f7() local_unnamed_addr {
dec_label_pc_1f9f7:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f9f7 = load i32, i32* %eax.global-to-local, align 8
  %v11_1f9f7 = and i32 %v0_1f9f7, -24
  store i32 %v11_1f9f7, i32* %eax.global-to-local, align 8
  ret i32 %v11_1f9f7

; uselistorder directives
  uselistorder i32 %v11_1f9f7, { 1, 0 }
  uselistorder i32 -24, { 0, 21, 16, 1, 24, 23, 25, 26, 27, 28, 2, 14, 15, 3, 22, 4, 5, 6, 7, 17, 18, 8, 19, 9, 10, 20, 11, 12, 13 }
}

define i32 @function_1fa01() local_unnamed_addr {
dec_label_pc_1fa01:
  %ecx.global-to-local = alloca i32, align 4
  %v0_1fa01 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fa01 = add i32 %v0_1fa01, 606898631
  %v2_1fa01 = inttoptr i32 %v1_1fa01 to i32*
  %v3_1fa01 = load i32, i32* %v2_1fa01, align 4
  %v4_1fa01 = add i32 %v3_1fa01, -1
  store i32 %v4_1fa01, i32* %v2_1fa01, align 4
  %v0_1fa0c = call i32 @function_1f9da()
  ret i32 %v0_1fa0c
}

define i32 @function_1fa0e() local_unnamed_addr {
dec_label_pc_1fa0e:
  %v0_1fa10 = call i32 @function_1f9da()
  ret i32 %v0_1fa10
}

define i32 @function_1fa19() local_unnamed_addr {
dec_label_pc_1fa19:
  %v0_1fa19 = call i32 @function_1f9da()
  ret i32 %v0_1fa19

; uselistorder directives
  uselistorder i32 ()* @function_1f9da, { 2, 1, 0 }
}

define i32 @_ZN12CNodeSignalsC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fa20:
  store i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_31620_type* @global_var_31620.2704 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1fa40(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa40:
  %v2_1fa40 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1fa40 = load i32, i32* @eax, align 8
  %v4_1fa40 = trunc i32 %v3_1fa40 to i8
  %v5_1fa40 = add i8 %v4_1fa40, %v2_1fa40
  %v21_1fa40 = inttoptr i32 %v3_1fa40 to i8*
  store i8 %v5_1fa40, i8* %v21_1fa40, align 1
  %v22_1fa40 = load i32, i32* @eax, align 8
  ret i32 %v22_1fa40
}

define i32 @function_1fab0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fab0:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_42 = alloca i32, align 4
  %v0_1fab0 = load i32, i32* @eax, align 8
  %v2_1fab4 = ptrtoint i32* %stack_var_42 to i32
  store i32 %v2_1fab4, i32* %eax.global-to-local, align 8
  %v0_1fabc = load i32, i32* @esi, align 4
  %v3_1fabf = call i32 @unknown_3f210(i32 %v0_1fabc, i32 %v2_1fab4, i32 %v0_1fab0)
  store i32 %v3_1fabf, i32* %eax.global-to-local, align 8
  %v0_1fac4 = load i32, i32* @esi, align 4
  %v1_1fac4 = load i32, i32* @ebx, align 4
  %v2_1fac4 = add i32 %v1_1fac4, 16
  %v3_1fac4 = inttoptr i32 %v2_1fac4 to i32*
  store i32 %v0_1fac4, i32* %v3_1fac4, align 4
  %v0_1fac7 = load i32, i32* @ebx, align 4
  %v1_1fac7 = add i32 %v0_1fac7, 20
  %v2_1fac7 = inttoptr i32 %v1_1fac7 to i32*
  store i32 0, i32* %v2_1fac7, align 4
  %v2_1face = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_1face
}

define i32 @function_1fad9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fad9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1fad9 = load i32, i32* %edi.global-to-local, align 4
  %v1_1fad9 = add i32 %v0_1fad9, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1fad9, i32* %edi.global-to-local, align 4
  %v0_1fadb = load i32, i32* %eax.global-to-local, align 8
  %v1_1fadb = add i32 %v0_1fadb, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_1fadb = trunc i32 %v1_1fadb to i8
  %v2_1fadc = add i8 %v11_1fadb, ptrtoint (i1* @global_var_1.2399 to i8)
  %v16_1fadc = zext i8 %v2_1fadc to i32
  %v18_1fadc = and i32 %v1_1fadb, -256
  %v19_1fadc = or i32 %v16_1fadc, %v18_1fadc
  store i32 %v19_1fadc, i32* %eax.global-to-local, align 8
  %v1_1fade = inttoptr i32 %v19_1fadc to i8*
  %v2_1fade = load i8, i8* %v1_1fade, align 1
  %v5_1fade = add i8 %v2_1fade, %v2_1fadc
  store i8 %v5_1fade, i8* %v1_1fade, align 1
  %v0_1fae0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1fae0 = load i32, i32* %eax.global-to-local, align 8
  %v5_1fae01 = mul i32 %v3_1fae0, 256
  %v1_1fae02 = add i32 %v5_1fae01, %v0_1fae0
  %v22_1fae0 = and i32 %v1_1fae02, 65280
  %v23_1fae0 = and i32 %v0_1fae0, -65281
  %v24_1fae0 = or i32 %v22_1fae0, %v23_1fae0
  store i32 %v24_1fae0, i32* %ebx.global-to-local, align 4
  %v1_1fae2 = add i32 %v3_1fae0, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_1fae2 = trunc i32 %v1_1fae2 to i8
  store i32 %v1_1fae2, i32* %eax.global-to-local, align 8
  %v2_1fae3 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_1fae3 = or i8 %v2_1fae3, %v11_1fae2
  %v11_1fae3 = load i32, i32* %ecx.global-to-local, align 4
  %v12_1fae3 = inttoptr i32 %v11_1fae3 to i8*
  store i8 %v5_1fae3, i8* %v12_1fae3, align 1
  %v0_1fae5 = load i32, i32* %eax.global-to-local, align 8
  %v1_1fae5 = inttoptr i32 %v0_1fae5 to i8*
  %v2_1fae5 = load i8, i8* %v1_1fae5, align 1
  %v4_1fae5 = trunc i32 %v0_1fae5 to i8
  %v5_1fae5 = add i8 %v2_1fae5, %v4_1fae5
  store i8 %v5_1fae5, i8* %v1_1fae5, align 1
  %v0_1fae7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fae7 = udiv i32 %v0_1fae7, 256
  %v3_1fae7 = load i32, i32* %eax.global-to-local, align 8
  %v5_1fae7 = add i32 %v1_1fae7, %v3_1fae7
  %v20_1fae7 = and i32 %v5_1fae7, 255
  %v22_1fae7 = mul nuw nsw i32 %v20_1fae7, 256
  %v23_1fae7 = and i32 %v0_1fae7, -65281
  %v24_1fae7 = or i32 %v22_1fae7, %v23_1fae7
  store i32 %v24_1fae7, i32* %ebx.global-to-local, align 4
  %v1_1fae9 = add i32 %v3_1fae7, 22
  %v2_1fae9 = inttoptr i32 %v1_1fae9 to i8*
  %v3_1fae9 = load i8, i8* %v2_1fae9, align 1
  %v5_1fae9 = trunc i32 %v0_1fae7 to i8
  %v6_1fae9 = add i8 %v3_1fae9, %v5_1fae9
  store i8 %v6_1fae9, i8* %v2_1fae9, align 1
  %v0_1faec = load i32, i32* %eax.global-to-local, align 8
  %v2_1faec = inttoptr i32 %v0_1faec to i32*
  %v3_1faec = load i32, i32* %v2_1faec, align 4
  %v4_1faec = add i32 %v3_1faec, %v0_1faec
  store i32 %v4_1faec, i32* %eax.global-to-local, align 8
  %v0_1faee = load i32, i32* %esi.global-to-local, align 4
  %v2_1faee = add i32 %v4_1faec, 12
  %v3_1faee = inttoptr i32 %v2_1faee to i32*
  store i32 %v0_1faee, i32* %v3_1faee, align 4
  %v0_1faf1 = load i32, i32* %eax.global-to-local, align 8
  %v1_1faf1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1faf1 = add i32 %v1_1faf1, 20
  %v3_1faf1 = inttoptr i32 %v2_1faf1 to i32*
  store i32 %v0_1faf1, i32* %v3_1faf1, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1faf8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1faf8 = xor i32 %v1_1faf8, %arg1
  %v3_1faf8 = icmp eq i32 %v2_1faf8, 0
  store i32 %v2_1faf8, i32* %eax.global-to-local, align 8
  %v0_1faff = load i32, i32* %ebx.global-to-local, align 4
  %v1_1faff = add i32 %v0_1faff, 12
  %v2_1faff = inttoptr i32 %v1_1faff to i32*
  store i32 ptrtoint (%vtable_315c0_type* @global_var_315c0.2731 to i32), i32* %v2_1faff, align 4
  %v1_1fb06 = icmp eq i1 %v3_1faf8, false
  br i1 %v1_1fb06, label %dec_label_pc_1fb0e, label %dec_label_pc_1fb08

dec_label_pc_1fb08:                               ; preds = %dec_label_pc_1fad9
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_1fb0d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fb0d

dec_label_pc_1fb0e:                               ; preds = %dec_label_pc_1fad9
  %v1_1fb0d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_1fb0d

; uselistorder directives
  uselistorder i32 %v3_1fae7, { 1, 0 }
  uselistorder i32 %v0_1fae7, { 2, 1, 0 }
  uselistorder i32 %v3_1fae0, { 1, 0 }
  uselistorder i32 %v0_1fae0, { 1, 0 }
}

define i32 @function_1fb3a() local_unnamed_addr {
dec_label_pc_1fb3a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1fb51() local_unnamed_addr {
dec_label_pc_1fb51:
  %v0_1fb58 = call i32 @function_1fb3a()
  ret i32 %v0_1fb58
}

define i32 @function_1fb5a() local_unnamed_addr {
dec_label_pc_1fb5a:
  %v0_1fb60 = call i32 @function_1fb3a()
  ret i32 %v0_1fb60

; uselistorder directives
  uselistorder i32 ()* @function_1fb3a, { 1, 0 }
}

define i32 @function_1fb87() local_unnamed_addr {
dec_label_pc_1fb87:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1fb95() local_unnamed_addr {
dec_label_pc_1fb95:
  %v0_1fb95 = call i32 @function_1fb87()
  ret i32 %v0_1fb95
}

define i32 @function_1fb9e() local_unnamed_addr {
dec_label_pc_1fb9e:
  %v0_1fba0 = call i32 @function_1fb87()
  ret i32 %v0_1fba0

; uselistorder directives
  uselistorder i32 ()* @function_1fb87, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fbb0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1fbb0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1fbb1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1fbb2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1fbba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1fbca = icmp eq i32 %arg2, 0
  %v1_1fbcc = icmp eq i1 %v1_1fbca, false
  br i1 %v1_1fbcc, label %dec_label_pc_1fbd2, label %dec_label_pc_1fbce

dec_label_pc_1fbce:                               ; preds = %dec_label_pc_1fbb0
  %v4_1fbce = call i32 @function_1fbfa(i32 %v0_1fbba, i32 %v0_1fbb2, i32 %v0_1fbb1, i32 %v0_1fbb0)
  store i32 %v4_1fbce, i32* %eax.global-to-local, align 8
  ret i32 %v4_1fbce

dec_label_pc_1fbd2:                               ; preds = %dec_label_pc_1fbb0
  %v1_1fbd2 = add i32 %arg2, 12
  %v2_1fbd2 = inttoptr i32 %v1_1fbd2 to i32*
  %v3_1fbd2 = load i32, i32* %v2_1fbd2, align 4
  store i32 %v3_1fbd2, i32* %eax.global-to-local, align 8
  %v2_1fbdc = call i32 @unknown_3f760(i32 %arg1, i32 %v3_1fbd2)
  store i32 %v2_1fbdc, i32* %eax.global-to-local, align 8
  %v1_1fbe1 = add i32 %arg2, 8
  %v2_1fbe1 = inttoptr i32 %v1_1fbe1 to i32*
  %v3_1fbe1 = load i32, i32* %v2_1fbe1, align 4
  store i32 %v3_1fbe1, i32* %esi.global-to-local, align 4
  %v1_1fbe4 = add i32 %arg2, 20
  %v2_1fbe4 = inttoptr i32 %v1_1fbe4 to i8*
  %v3_1fbe4 = load i8, i8* %v2_1fbe4, align 1
  %v10_1fbe4 = icmp eq i8 %v3_1fbe4, 0
  br i1 %v10_1fbe4, label %dec_label_pc_1fbee, label %dec_label_pc_1fbea

dec_label_pc_1fbea:                               ; preds = %dec_label_pc_1fbd2
  store i8 0, i8* %v2_1fbe4, align 1
  %v3_1fbee.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1fbee

dec_label_pc_1fbee:                               ; preds = %dec_label_pc_1fbea, %dec_label_pc_1fbd2
  %v3_1fbee = phi i32 [ %v3_1fbee.pre, %dec_label_pc_1fbea ], [ %v2_1fbdc, %dec_label_pc_1fbd2 ]
  ret i32 %v3_1fbee

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_1fbfa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fbfa:
  %v1_1fbfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fbfe = xor i32 %v1_1fbfe, %arg1
  %v3_1fbfe = icmp eq i32 %v2_1fbfe, 0
  %v1_1fc05 = icmp eq i1 %v3_1fbfe, false
  br i1 %v1_1fc05, label %dec_label_pc_1fc0e, label %dec_label_pc_1fc07

dec_label_pc_1fc07:                               ; preds = %dec_label_pc_1fbfa
  ret i32 %v2_1fbfe

dec_label_pc_1fc0e:                               ; preds = %dec_label_pc_1fbfa
  ret i32 %v2_1fbfe

; uselistorder directives
  uselistorder i32 %v2_1fbfe, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_1fc20:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1fc20 = load i32, i32* %edi.global-to-local, align 4
  %v0_1fc21 = load i32, i32* %esi.global-to-local, align 4
  %v0_1fc22 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1fc26 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1fc36 = add i32 %arg1, 12
  %v2_1fc36 = inttoptr i32 %v1_1fc36 to i32*
  %v3_1fc36 = load i32, i32* %v2_1fc36, align 4
  store i32 %v3_1fc36, i32* %edi.global-to-local, align 4
  %v1_1fc39 = icmp eq i32 %v3_1fc36, 0
  br i1 %v1_1fc39, label %bb, label %dec_label_pc_1fc3d

bb:                                               ; preds = %dec_label_pc_1fc20
  %v5_1fc3b = call i32 @function_1fc90(i32 %v0_1fc26, i32 %v0_1fc22, i32 %v0_1fc21, i32 %v0_1fc20)
  br label %dec_label_pc_1fc3d

dec_label_pc_1fc3d:                               ; preds = %bb, %dec_label_pc_1fc20
  %v1_1fc3d = add i32 %v3_1fc36, 16
  %v2_1fc3d = inttoptr i32 %v1_1fc3d to i32*
  %v3_1fc3d = load i32, i32* %v2_1fc3d, align 4
  %v1_1fc44 = add i32 %v3_1fc36, 8
  %v2_1fc4a = call i32 @unknown_3f7d0(i32 %v1_1fc44, i32 %v3_1fc3d)
  %v1_1fc4f = inttoptr i32 %v3_1fc36 to i32*
  %v2_1fc4f = load i32, i32* %v1_1fc4f, align 4
  store i32 %v2_1fc4f, i32* %ebx.global-to-local, align 4
  %v12_1fc51 = icmp eq i32 %v2_1fc4f, %v3_1fc36
  %v1_1fc53 = icmp eq i1 %v12_1fc51, false
  br i1 %v1_1fc53, label %dec_label_pc_1fc5a, label %dec_label_pc_1fc55

dec_label_pc_1fc55:                               ; preds = %dec_label_pc_1fc3d
  %v0_1fc55 = call i32 @function_1fc73()
  ret i32 %v0_1fc55

dec_label_pc_1fc5a:                               ; preds = %dec_label_pc_1fc3d
  %v1_1fc5a = inttoptr i32 %v2_1fc4f to i32*
  %v2_1fc5a = load i32, i32* %v1_1fc5a, align 4
  store i32 %v2_1fc5a, i32* %esi.global-to-local, align 4
  %v1_1fc5c = add i32 %v2_1fc4f, 12
  store i32 %v1_1fc5c, i32* @eax, align 8
  %v1_1fc62 = call i32 @function_30160(i32 %v1_1fc5c)
  ret i32 %v1_1fc62

; uselistorder directives
  uselistorder i32 %v2_1fc4f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1fc36, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1fc73() local_unnamed_addr {
dec_label_pc_1fc73:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_1fc77 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fc77 = xor i32 %v1_1fc77, %tmp9
  %v3_1fc77 = icmp eq i32 %v2_1fc77, 0
  store i32 %v2_1fc77, i32* @eax, align 8
  %v1_1fc7e = icmp eq i1 %v3_1fc77, false
  br i1 %v1_1fc7e, label %bb, label %dec_label_pc_1fc80

bb:                                               ; preds = %dec_label_pc_1fc73
  %v2_1fc7e = call i32 @function_1fca4()
  br label %dec_label_pc_1fc80

dec_label_pc_1fc80:                               ; preds = %bb, %dec_label_pc_1fc73
  %v5_1fc89 = phi i32 [ %v2_1fc7e, %bb ], [ %v2_1fc77, %dec_label_pc_1fc73 ]
  ret i32 %v5_1fc89
}

define i32 @function_1fc90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fc90:
  %v1_1fc94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fc94 = xor i32 %v1_1fc94, %arg1
  %v3_1fc94 = icmp eq i32 %v2_1fc94, 0
  store i32 %v2_1fc94, i32* @eax, align 8
  %v1_1fc9b = icmp eq i1 %v3_1fc94, false
  br i1 %v1_1fc9b, label %bb, label %dec_label_pc_1fc9d

bb:                                               ; preds = %dec_label_pc_1fc90
  %v2_1fc9b = call i32 @function_1fca4()
  br label %dec_label_pc_1fc9d

dec_label_pc_1fc9d:                               ; preds = %bb, %dec_label_pc_1fc90
  %v16_1fc9d = phi i32 [ %v2_1fc9b, %bb ], [ %v2_1fc94, %dec_label_pc_1fc90 ]
  ret i32 %v16_1fc9d

; uselistorder directives
  uselistorder i32 ()* @function_1fca4, { 1, 0 }
}

define i32 @function_1fca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fca0:
  %v0_1fca3 = load i32, i32* @eax, align 8
  ret i32 %v0_1fca3
}

define i32 @function_1fca4() local_unnamed_addr {
dec_label_pc_1fca4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fcb0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_1fcb0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1fcb1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1fcb2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_1fcc6 = icmp eq i32* %arg1, null
  br i1 %v1_1fcc6, label %bb, label %dec_label_pc_1fcca

bb:                                               ; preds = %dec_label_pc_1fcb0
  %v0_1fcba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_1fcc8 = call i32 @function_1fd20(i32 %v0_1fcba, i32 %v0_1fcb2, i32 %v0_1fcb1, i32 %v0_1fcb0)
  br label %dec_label_pc_1fcca

dec_label_pc_1fcca:                               ; preds = %bb, %dec_label_pc_1fcb0
  %v1_1fcca = add i32 %tmp100, 16
  %v2_1fcca = inttoptr i32 %v1_1fcca to i32*
  %v3_1fcca = load i32, i32* %v2_1fcca, align 4
  %v1_1fcd1 = add i32 %tmp100, 8
  %v2_1fcd7 = call i32 @unknown_3f860(i32 %v1_1fcd1, i32 %v3_1fcca)
  %v2_1fcdc = load i32, i32* %arg1, align 4
  store i32 %v2_1fcdc, i32* %ebx.global-to-local, align 4
  %v12_1fcde = icmp eq i32 %v2_1fcdc, %tmp100
  %v1_1fce0 = icmp eq i1 %v12_1fcde, false
  br i1 %v1_1fce0, label %dec_label_pc_1fcea, label %dec_label_pc_1fce2

dec_label_pc_1fce2:                               ; preds = %dec_label_pc_1fcca
  %v0_1fce2 = call i32 @function_1fd03()
  ret i32 %v0_1fce2

dec_label_pc_1fcea:                               ; preds = %dec_label_pc_1fcca
  %v1_1fcea = inttoptr i32 %v2_1fcdc to i32*
  %v2_1fcea = load i32, i32* %v1_1fcea, align 4
  store i32 %v2_1fcea, i32* %esi.global-to-local, align 4
  %v1_1fcec = add i32 %v2_1fcdc, 12
  store i32 %v1_1fcec, i32* @eax, align 8
  %v1_1fcf2 = call i32 @function_301f0(i32 %v1_1fcec)
  ret i32 %v1_1fcf2

; uselistorder directives
  uselistorder i32 %v2_1fcdc, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1fd03() local_unnamed_addr {
dec_label_pc_1fd03:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_1fd07 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fd07 = xor i32 %v1_1fd07, %tmp9
  %v3_1fd07 = icmp eq i32 %v2_1fd07, 0
  store i32 %v2_1fd07, i32* @eax, align 8
  %v1_1fd0e = icmp eq i1 %v3_1fd07, false
  br i1 %v1_1fd0e, label %bb, label %dec_label_pc_1fd10

bb:                                               ; preds = %dec_label_pc_1fd03
  %v2_1fd0e = call i32 @function_1fd34()
  br label %dec_label_pc_1fd10

dec_label_pc_1fd10:                               ; preds = %bb, %dec_label_pc_1fd03
  %v5_1fd19 = phi i32 [ %v2_1fd0e, %bb ], [ %v2_1fd07, %dec_label_pc_1fd03 ]
  ret i32 %v5_1fd19
}

define i32 @function_1fd20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fd20:
  %v1_1fd24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fd24 = xor i32 %v1_1fd24, %arg1
  %v3_1fd24 = icmp eq i32 %v2_1fd24, 0
  store i32 %v2_1fd24, i32* @eax, align 8
  %v1_1fd2b = icmp eq i1 %v3_1fd24, false
  br i1 %v1_1fd2b, label %bb, label %dec_label_pc_1fd2d

bb:                                               ; preds = %dec_label_pc_1fd20
  %v2_1fd2b = call i32 @function_1fd34()
  br label %dec_label_pc_1fd2d

dec_label_pc_1fd2d:                               ; preds = %bb, %dec_label_pc_1fd20
  %v0_1fd33 = phi i32 [ %v2_1fd2b, %bb ], [ %v2_1fd24, %dec_label_pc_1fd20 ]
  ret i32 %v0_1fd33

; uselistorder directives
  uselistorder i32 ()* @function_1fd34, { 1, 0 }
}

define i32 @function_1fd34() local_unnamed_addr {
dec_label_pc_1fd34:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fd40:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_1fd40 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1fd54 = icmp eq i32 %arg1, 0
  br i1 %v1_1fd54, label %dec_label_pc_1fd88, label %dec_label_pc_1fd58

dec_label_pc_1fd58:                               ; preds = %dec_label_pc_1fd40
  %v1_1fd58 = add i32 %arg1, 12
  store i32 %v1_1fd58, i32* @eax, align 8
  store i32 %v1_1fd58, i32* %stack_var_-60, align 4
  %v1_1fd5e = call i32 @function_30280(i32 %v1_1fd58)
  %v1_1fd63 = add i32 %arg1, 4
  store i32 %v1_1fd63, i32* @eax, align 8
  store i32 %v1_1fd63, i32* %stack_var_-60, align 4
  %v1_1fd69 = call i32 @function_30280(i32 %v1_1fd63)
  br i1 false, label %dec_label_pc_1fd9a, label %dec_label_pc_1fd7b

dec_label_pc_1fd7b:                               ; preds = %dec_label_pc_1fd58
  store i32 %v0_1fd40, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1fd88

dec_label_pc_1fd88:                               ; preds = %dec_label_pc_1fd7b, %dec_label_pc_1fd40
  %v0_1fd95.in = phi i32* [ %stack_var_0, %dec_label_pc_1fd7b ], [ %stack_var_-60, %dec_label_pc_1fd40 ]
  %v0_1fd95 = ptrtoint i32* %v0_1fd95.in to i32
  %v1_1fd88 = add i32 %v0_1fd95, 44
  %v2_1fd88 = inttoptr i32 %v1_1fd88 to i32*
  %v3_1fd88 = load i32, i32* %v2_1fd88, align 4
  %v1_1fd8c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fd8c = xor i32 %v1_1fd8c, %v3_1fd88
  %v3_1fd8c = icmp eq i32 %v2_1fd8c, 0
  %v1_1fd93 = icmp eq i1 %v3_1fd8c, false
  br i1 %v1_1fd93, label %dec_label_pc_1fd9a, label %dec_label_pc_1fd95

dec_label_pc_1fd95:                               ; preds = %dec_label_pc_1fd88
  %v1_1fd95 = add i32 %v0_1fd95, ptrtoint (i32* @global_var_38.2432 to i32)
  %v1_1fd98 = inttoptr i32 %v1_1fd95 to i32*
  %v2_1fd98 = load i32, i32* %v1_1fd98, align 4
  store i32 %v2_1fd98, i32* %ebx.global-to-local, align 4
  ret i32 %v2_1fd8c

dec_label_pc_1fd9a:                               ; preds = %dec_label_pc_1fd88, %dec_label_pc_1fd58
  %v1_1fd9a = phi i32 [ %v2_1fd8c, %dec_label_pc_1fd88 ], [ 0, %dec_label_pc_1fd58 ]
  ret i32 %v1_1fd9a

; uselistorder directives
  uselistorder i32 %v0_1fd95, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 44, { 2, 3, 4, 5, 0, 6, 7, 1, 8 }
  uselistorder i32 (i32)* @function_30280, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_1fda6() local_unnamed_addr {
dec_label_pc_1fda6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fda6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fda6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1fdc0:
  store i32 %arg5, i32* @esi, align 4
  %v1_1fdf0 = icmp eq i32 %arg3, 0
  %v1_1fdf2 = add i32 %arg2, 4
  store i32 %v1_1fdf2, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_1fdf0, label %bb, label %dec_label_pc_1fe07

bb:                                               ; preds = %dec_label_pc_1fdc0
  %v2_1fe01 = call i32 @function_1fe90(i32 %v1_1fdf2)
  br label %dec_label_pc_1fe07

dec_label_pc_1fe07:                               ; preds = %bb, %dec_label_pc_1fdc0
  %v2_1fe0b = phi i32 [ %v2_1fe01, %bb ], [ %arg3, %dec_label_pc_1fdc0 ]
  ret i32 %v2_1fe0b
}

define i32 @function_1fe5a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1fe5a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1fe5a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fe5a = add i32 %v0_1fe5a, -2095569852
  %v2_1fe5a = inttoptr i32 %v1_1fe5a to i32*
  %v3_1fe5a = load i32, i32* %v2_1fe5a, align 4
  %v4_1fe5a = sub i32 %v3_1fe5a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_1fe5a, i32* %v2_1fe5a, align 4
  %v0_1fe60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fe60 = add i32 %v0_1fe60, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_1fe60, i32* %ebx.global-to-local, align 4
  %v0_1fe61 = load i32, i32* %eax.global-to-local, align 8
  %v2_1fe61 = load i1, i1* %cf.global-to-local, align 1
  %v3_1fe61 = zext i1 %v2_1fe61 to i32
  %v4_1fe61 = add i32 %v0_1fe61, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_1fe61 = add i32 %v4_1fe61, %v3_1fe61
  %v25_1fe61 = urem i32 %v5_1fe61, 256
  %v27_1fe61 = and i32 %v0_1fe61, -256
  %v28_1fe61 = or i32 %v25_1fe61, %v27_1fe61
  store i32 %v28_1fe61, i32* %eax.global-to-local, align 8
  %v1_1fe67 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1fe67 = icmp eq i32 %v1_1fe67, %arg1
  %v1_1fe6e = load i32, i32* %edi.global-to-local, align 4
  %v2_1fe6e = inttoptr i32 %v1_1fe6e to i32*
  store i32 %v28_1fe61, i32* %v2_1fe6e, align 4
  %v0_1fe70 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_1fe70, i32* @eax, align 8
  %v1_1fe72 = icmp eq i1 %v3_1fe67, false
  br i1 %v1_1fe72, label %bb, label %dec_label_pc_1fe74

bb:                                               ; preds = %dec_label_pc_1fe5a
  %v2_1fe72 = call i32 @function_1feaa()
  store i32 %v2_1fe72, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1fe74

dec_label_pc_1fe74:                               ; preds = %bb, %dec_label_pc_1fe5a
  %v0_1fe87 = phi i32 [ %v2_1fe72, %bb ], [ %v0_1fe70, %dec_label_pc_1fe5a ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_1fe84 = load i32, i32* @esp, align 4
  %v5_1fe84 = icmp ugt i32 %v0_1fe84, -77
  store i1 %v5_1fe84, i1* %cf.global-to-local, align 1
  ret i32 %v0_1fe87

; uselistorder directives
  uselistorder i32 %v0_1fe61, { 1, 0 }
}

define i32 @function_1fe90(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fe90:
  %v0_1fe9b = load i32, i32* @esi, align 4
  ret i32 %v0_1fe9b
}

define i32 @function_1feaa() local_unnamed_addr {
dec_label_pc_1feaa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1feb0:
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg1, i32* @esi, align 4
  %v4_1fecc = sext i8 %arg3 to i32
  store i32 %v4_1fecc, i32* @ebx, align 4
  %v1_1fed0 = add i32 %arg2, 8
  %v2_1fed0 = inttoptr i32 %v1_1fed0 to i32*
  %v3_1fed0 = load i32, i32* %v2_1fed0, align 4
  store i32 %v3_1fed0, i32* @edi, align 4
  %v1_1fed7 = icmp eq i32 %v3_1fed0, 0
  %v1_1fed9 = icmp eq i1 %v1_1fed7, false
  br i1 %v1_1fed9, label %dec_label_pc_1fee9.preheader, label %dec_label_pc_1fedb

dec_label_pc_1fee9.preheader:                     ; preds = %dec_label_pc_1feb0
  %v5_1fef3 = icmp eq i8 %arg3, 0
  %v1_1fef5 = icmp eq i1 %v5_1fef3, false
  br label %dec_label_pc_1fee9

dec_label_pc_1fedb:                               ; preds = %dec_label_pc_1feb0
  %v1_1fedb = call i32 @function_1ff8b(i32 %arg2)
  ret i32 %v1_1fedb

dec_label_pc_1fee0:                               ; preds = %dec_label_pc_1fee9
  %v1_1fee0 = add i32 %v0_1fee0, 8
  %v2_1fee0 = inttoptr i32 %v1_1fee0 to i32*
  %v3_1fee0 = load i32, i32* %v2_1fee0, align 4
  %v1_1fee3 = icmp eq i32 %v3_1fee0, 0
  br i1 %v1_1fee3, label %dec_label_pc_1fefe.thread120, label %dec_label_pc_1fee7

dec_label_pc_1fefe.thread120:                     ; preds = %dec_label_pc_1fee0
  br label %dec_label_pc_1ff02

dec_label_pc_1fee7:                               ; preds = %dec_label_pc_1fee0, %dec_label_pc_1fef7
  %v0_1fee7 = phi i32 [ %v3_1fee0, %dec_label_pc_1fee0 ], [ %v3_1fef7, %dec_label_pc_1fef7 ]
  store i32 %v0_1fee7, i32* @edi, align 4
  br label %dec_label_pc_1fee9

dec_label_pc_1fee9:                               ; preds = %dec_label_pc_1fee9.preheader, %dec_label_pc_1fee7
  %v0_1fee0 = phi i32 [ %v0_1fee7, %dec_label_pc_1fee7 ], [ %v3_1fed0, %dec_label_pc_1fee9.preheader ]
  br i1 %v1_1fef5, label %dec_label_pc_1fee0, label %dec_label_pc_1fef7

dec_label_pc_1fef7:                               ; preds = %dec_label_pc_1fee9
  %v1_1fef7 = add i32 %v0_1fee0, 12
  %v2_1fef7 = inttoptr i32 %v1_1fef7 to i32*
  %v3_1fef7 = load i32, i32* %v2_1fef7, align 4
  %v1_1fefa = icmp eq i32 %v3_1fef7, 0
  %v1_1fefc = icmp eq i1 %v1_1fefa, false
  br i1 %v1_1fefc, label %dec_label_pc_1fee7, label %bb

bb:                                               ; preds = %dec_label_pc_1fef7
  %v1_1ff00 = call i32 @function_1ff48()
  %v0_1ff06.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_1ff02

dec_label_pc_1ff02:                               ; preds = %dec_label_pc_1fefe.thread120, %bb
  %v0_1ff06 = phi i32 [ %v0_1ff06.pre, %bb ], [ %v0_1fee0, %dec_label_pc_1fefe.thread120 ]
  %v2_1ff06 = add i32 %arg2, 12
  %v3_1ff06 = inttoptr i32 %v2_1ff06 to i32*
  %v4_1ff06 = load i32, i32* %v3_1ff06, align 4
  %v15_1ff06 = icmp eq i32 %v0_1ff06, %v4_1ff06
  br i1 %v15_1ff06, label %bb118, label %dec_label_pc_1ff0b

bb118:                                            ; preds = %dec_label_pc_1ff02
  %v1_1ff09 = call i32 @function_1ff58()
  br label %dec_label_pc_1ff0b

dec_label_pc_1ff0b:                               ; preds = %bb118, %dec_label_pc_1ff02
  %v3_1ff0b = phi i32 [ %v1_1ff09, %bb118 ], [ %arg2, %dec_label_pc_1ff02 ]
  ret i32 %v3_1ff0b

; uselistorder directives
  uselistorder i32 %v3_1fef7, { 1, 0 }
  uselistorder i32 %v0_1fee0, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_1ff02, { 1, 0 }
  uselistorder label %dec_label_pc_1fee9, { 1, 0 }
  uselistorder label %dec_label_pc_1fee7, { 1, 0 }
}

define i32 @function_1ff10(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ff10:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ff23() local_unnamed_addr {
dec_label_pc_1ff23:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_1ff29() local_unnamed_addr {
dec_label_pc_1ff29:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1ff2d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1ff2d = icmp eq i32 %v1_1ff2d, %tmp10
  %v0_1ff34 = load i32, i32* @esi, align 4
  store i32 %v0_1ff34, i32* @eax, align 8
  %v1_1ff36 = icmp eq i1 %v3_1ff2d, false
  br i1 %v1_1ff36, label %bb, label %dec_label_pc_1ff38

bb:                                               ; preds = %dec_label_pc_1ff29
  %v2_1ff36 = call i32 @function_1ff95()
  br label %dec_label_pc_1ff38

dec_label_pc_1ff38:                               ; preds = %bb, %dec_label_pc_1ff29
  %v0_1ff3f = phi i32 [ %v2_1ff36, %bb ], [ %v0_1ff34, %dec_label_pc_1ff29 ]
  ret i32 %v0_1ff3f
}

define i32 @function_1ff48() local_unnamed_addr {
dec_label_pc_1ff48:
  %v0_1ff48 = load i32, i32* @edi, align 4
  %v1_1ff4c = add i32 %v0_1ff48, 16
  ret i32 %v1_1ff4c
}

define i32 @function_1ff58() local_unnamed_addr {
dec_label_pc_1ff58:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v2_1ff5c = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_1ff5c, i32* %eax.global-to-local, align 8
  %v0_1ff63 = load i32, i32* @ebx, align 4
  %v0_1ff67 = load i32, i32* @edi, align 4
  %v5_1ff77 = call i32 @unknown_3fc70(i32 %v2_1ff5c, i32 %tmp7, i32 0, i32 %v0_1ff67, i32 %v0_1ff63)
  %v0_1ff83 = load i32, i32* @esi, align 4
  %v1_1ff83 = add i32 %v0_1ff83, 4
  %v2_1ff83 = inttoptr i32 %v1_1ff83 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_1ff83, align 1
  %v0_1ff87 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ff87 = load i32, i32* @esi, align 4
  %v2_1ff87 = inttoptr i32 %v1_1ff87 to i32*
  store i32 %v0_1ff87, i32* %v2_1ff87, align 4
  %v0_1ff89 = call i32 @function_1ff29()
  store i32 %v0_1ff89, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ff89
}

define i32 @function_1ff8b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ff8b:
  %v0_1ff8b = load i32, i32* @eax, align 8
  ret i32 %v0_1ff8b
}

define i32 @function_1ff95() local_unnamed_addr {
dec_label_pc_1ff95:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ffa0:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_1ffb3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_1ffc7 = add i32 %tmp13, 4
  %v12_1ffca = icmp eq i32 %tmp11, %v1_1ffc7
  store i1 %v12_1ffca, i1* @zf, align 1
  br i1 %v12_1ffca, label %bb, label %dec_label_pc_1ffda

bb:                                               ; preds = %dec_label_pc_1ffa0
  %v2_1ffd4 = call i32 @function_200e0(i32 %v0_1ffb3)
  %v0_1ffda.pre = load i32, i32* @ebx, align 4
  %v0_1ffe3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1ffda

dec_label_pc_1ffda:                               ; preds = %bb, %dec_label_pc_1ffa0
  %v0_1ffe3 = phi i32 [ %v0_1ffe3.pre, %bb ], [ %tmp6, %dec_label_pc_1ffa0 ]
  %v0_1ffda = phi i32 [ %v0_1ffda.pre, %bb ], [ %tmp11, %dec_label_pc_1ffa0 ]
  %v1_1ffda = add i32 %v0_1ffda, 16
  store i32 %v0_1ffe3, i32* @eax, align 8
  %v1_1ffe5 = call i32 @function_20380(i32 %v1_1ffda)
  %v4_1ffea = trunc i32 %v1_1ffe5 to i8
  %v5_1ffea = icmp eq i8 %v4_1ffea, 0
  store i1 %v5_1ffea, i1* @zf, align 1
  br i1 %v5_1ffea, label %bb16, label %dec_label_pc_1fff2

bb16:                                             ; preds = %dec_label_pc_1ffda
  %v1_1ffec = call i32 @function_20070()
  br label %dec_label_pc_1fff2

dec_label_pc_1fff2:                               ; preds = %bb16, %dec_label_pc_1ffda
  %v0_1fff2 = load i32, i32* @edi, align 4
  %v1_1fff2 = add i32 %v0_1fff2, 12
  %v2_1fff2 = inttoptr i32 %v1_1fff2 to i32*
  %v3_1fff2 = load i32, i32* %v2_1fff2, align 4
  store i32 %v3_1fff2, i32* @eax, align 8
  %v1_1fff5 = load i32, i32* @ebx, align 4
  %v12_1fff5 = icmp eq i32 %v3_1fff2, %v1_1fff5
  br i1 %v12_1fff5, label %bb17, label %dec_label_pc_1fffd

bb17:                                             ; preds = %dec_label_pc_1fff2
  %v1_1fff7 = call i32 @function_20158()
  br label %dec_label_pc_1fffd

dec_label_pc_1fffd:                               ; preds = %bb17, %dec_label_pc_1fff2
  %v3_1fffd = phi i32 [ %v1_1fff7, %bb17 ], [ %v3_1fff2, %dec_label_pc_1fff2 ]
  ret i32 %v3_1fffd

; uselistorder directives
  uselistorder i32 %v3_1fff2, { 1, 0, 2 }
  uselistorder i1 %v12_1ffca, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
}

define i32 @function_20006() local_unnamed_addr {
dec_label_pc_20006:
  %v0_20006 = call i32 @function_408dc189()
  ret i32 %v0_20006
}

define i32 @function_20047() local_unnamed_addr {
dec_label_pc_20047:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_2004b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2004b = icmp eq i32 %v1_2004b, %tmp6
  %v0_20052 = load i32, i32* @esi, align 4
  store i32 %v0_20052, i32* @eax, align 8
  %v1_20054 = icmp eq i1 %v3_2004b, false
  br i1 %v1_20054, label %bb, label %dec_label_pc_2005a

bb:                                               ; preds = %dec_label_pc_20047
  %v2_20054 = call i32 @function_20188()
  br label %dec_label_pc_2005a

dec_label_pc_2005a:                               ; preds = %bb, %dec_label_pc_20047
  %v0_2006d = phi i32 [ %v2_20054, %bb ], [ %v0_20052, %dec_label_pc_20047 ]
  %v0_2006a = load i32, i32* @esp, align 4
  %v10_2006a = icmp eq i32 %v0_2006a, -92
  store i1 %v10_2006a, i1* @zf, align 1
  ret i32 %v0_2006d
}

define i32 @function_20070() local_unnamed_addr {
dec_label_pc_20070:
  %v1_20076 = call i32 @function_20380(i32 ptrtoint (i32* @1 to i32))
  %v4_2007b = trunc i32 %v1_20076 to i8
  %v5_2007b = icmp eq i8 %v4_2007b, 0
  br i1 %v5_2007b, label %bb, label %dec_label_pc_20083

bb:                                               ; preds = %dec_label_pc_20070
  %v1_2007d = call i32 @function_20110()
  br label %dec_label_pc_20083

dec_label_pc_20083:                               ; preds = %bb, %dec_label_pc_20070
  %v0_20083 = load i32, i32* @edi, align 4
  %v1_20083 = add i32 %v0_20083, 16
  %v2_20083 = inttoptr i32 %v1_20083 to i32*
  %v3_20083 = load i32, i32* %v2_20083, align 4
  store i32 %v3_20083, i32* @eax, align 8
  %v1_20086 = load i32, i32* @ebx, align 4
  %v12_20086 = icmp eq i32 %v3_20083, %v1_20086
  br i1 %v12_20086, label %bb4, label %dec_label_pc_2008e

bb4:                                              ; preds = %dec_label_pc_20083
  %v1_20088 = call i32 @function_2017e()
  br label %dec_label_pc_2008e

dec_label_pc_2008e:                               ; preds = %bb4, %dec_label_pc_20083
  %v3_2008e = phi i32 [ %v1_20088, %bb4 ], [ %v3_20083, %dec_label_pc_20083 ]
  ret i32 %v3_2008e

; uselistorder directives
  uselistorder i32 %v3_20083, { 1, 0, 2 }
}

define i32 @function_20095() local_unnamed_addr {
dec_label_pc_20095:
  %ecx.global-to-local = alloca i32, align 4
  %v0_20095 = load i32, i32* @ecx, align 4
  %v1_20095 = add i32 %v0_20095, 273714625
  %v2_20095 = inttoptr i32 %v1_20095 to i32*
  %v3_20095 = load i32, i32* %v2_20095, align 4
  %v4_20095 = add i32 %v3_20095, -1
  %v12_20095 = icmp eq i32 %v4_20095, 0
  store i1 %v12_20095, i1* @zf, align 1
  store i32 %v4_20095, i32* %v2_20095, align 4
  %v0_2009b = load i32, i32* @ebp, align 4
  store i32 %v0_2009b, i32* @eax, align 8
  %v0_2009d = load i32, i32* @ecx, align 4
  %v1_200a1 = call i32 @function_20380(i32 %v0_2009d)
  store i32 %v0_2009d, i32* %ecx.global-to-local, align 4
  %v0_200ae = load i32, i32* @ebx, align 4
  %v1_200ae = add i32 %v0_200ae, 12
  %v2_200ae = inttoptr i32 %v1_200ae to i32*
  %v3_200ae = load i32, i32* %v2_200ae, align 4
  %v1_200b5 = icmp eq i32 %v3_200ae, 0
  br i1 %v1_200b5, label %bb, label %dec_label_pc_200bd

bb:                                               ; preds = %dec_label_pc_20095
  %v1_200b7 = call i32 @function_20178()
  %v0_200c1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_200bd

dec_label_pc_200bd:                               ; preds = %bb, %dec_label_pc_20095
  %v0_200c1 = phi i32 [ %v0_200c1.pre, %bb ], [ %v0_2009d, %dec_label_pc_20095 ]
  %v0_200c5 = load i32, i32* @edi, align 4
  %v0_200c9 = load i32, i32* @esi, align 4
  %v3_200cc = call i32 @unknown_3fd60(i32 %v0_200c9, i32 %v0_200c5, i32 %v0_200c1)
  %v0_200d4 = call i32 @function_20047()
  ret i32 %v0_200d4

; uselistorder directives
  uselistorder i32 %v4_20095, { 1, 0 }
}

define i32 @function_200e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_200e0:
  %stack_var_40 = alloca i32, align 4
  %v0_200e0 = load i32, i32* @edi, align 4
  %v1_200e0 = add i32 %v0_200e0, 20
  %v2_200e0 = inttoptr i32 %v1_200e0 to i32*
  %v3_200e0 = load i32, i32* %v2_200e0, align 4
  %v1_200e3 = icmp eq i32 %v3_200e0, 0
  store i1 %v1_200e3, i1* @zf, align 1
  %v1_200e5 = icmp eq i1 %v1_200e3, false
  br i1 %v1_200e5, label %bb, label %dec_label_pc_200e7

bb:                                               ; preds = %dec_label_pc_200e0
  %v2_200e5 = call i32 @function_20118()
  %v0_200f2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_200e7

dec_label_pc_200e7:                               ; preds = %bb, %dec_label_pc_200e0
  %v0_200f2 = phi i32 [ %v0_200f2.pre, %bb ], [ %v0_200e0, %dec_label_pc_200e0 ]
  %v2_200e7 = ptrtoint i32* %stack_var_40 to i32
  %v2_200f6 = call i32 @unknown_3fe50(i32 %v2_200e7, i32 %v0_200f2)
  %v1_20102 = load i32, i32* @esi, align 4
  %v2_20102 = inttoptr i32 %v1_20102 to i32*
  store i32 %arg1, i32* %v2_20102, align 4
  %v0_20104 = call i32 @function_20047()
  ret i32 %v0_20104
}

define i32 @function_20110() local_unnamed_addr {
dec_label_pc_20110:
  %v0_20110 = load i32, i32* @ebx, align 4
  %v1_20110 = load i32, i32* @esi, align 4
  %v2_20110 = inttoptr i32 %v1_20110 to i32*
  store i32 %v0_20110, i32* %v2_20110, align 4
  %v0_20112 = call i32 @function_20047()
  ret i32 %v0_20112
}

define i32 @function_20118() local_unnamed_addr {
dec_label_pc_20118:
  %v0_20118 = load i32, i32* @edi, align 4
  %v1_20118 = add i32 %v0_20118, 16
  %v2_20118 = inttoptr i32 %v1_20118 to i32*
  %v3_20118 = load i32, i32* %v2_20118, align 4
  store i32 %v3_20118, i32* @ebx, align 4
  %v1_2011d = add i32 %v3_20118, 16
  store i32 %v1_2011d, i32* @eax, align 8
  %v1_20120 = call i32 @function_20380(i32 ptrtoint (i32* @1 to i32))
  %v0_2012d = load i32, i32* @ebx, align 4
  %v1_20131 = call i32 @function_2013c(i32 %v0_2012d)
  ret i32 %v1_20131

; uselistorder directives
  uselistorder i32 (i32)* @function_20380, { 2, 3, 1, 0 }
}

define i32 @function_2013c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2013c:
  %v0_20144 = load i32, i32* @edi, align 4
  %v0_20148 = load i32, i32* @esi, align 4
  %v3_2014b = call i32 @unknown_3fd60(i32 %v0_20148, i32 %v0_20144, i32 0)
  %v0_20153 = call i32 @function_20047()
  ret i32 %v0_20153
}

define i32 @function_20158() local_unnamed_addr {
dec_label_pc_20158:
  %v0_20160 = load i32, i32* @eax, align 8
  %v0_20164 = load i32, i32* @edi, align 4
  %v0_20168 = load i32, i32* @esi, align 4
  %v3_2016b = call i32 @unknown_3fd60(i32 %v0_20168, i32 %v0_20164, i32 %v0_20160)
  %v0_20173 = call i32 @function_20047()
  ret i32 %v0_20173

; uselistorder directives
  uselistorder i32 ()* @function_20047, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_3fd60, { 1, 0, 2 }
}

define i32 @function_20178() local_unnamed_addr {
dec_label_pc_20178:
  %v0_20178 = load i32, i32* @ebx, align 4
  %v1_2017c = call i32 @function_2013c(i32 %v0_20178)
  ret i32 %v1_2017c
}

define i32 @function_2017e() local_unnamed_addr {
dec_label_pc_2017e:
  %v0_20182 = load i32, i32* @eax, align 8
  %v1_20186 = call i32 @function_2013c(i32 %v0_20182)
  ret i32 %v1_20186

; uselistorder directives
  uselistorder i32 (i32)* @function_2013c, { 1, 2, 0 }
}

define i32 @function_20188() local_unnamed_addr {
dec_label_pc_20188:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20190:
  ret i32 %arg1
}

define i32 @function_20285() local_unnamed_addr {
dec_label_pc_20285:
  %eax.global-to-local = alloca i32, align 4
  %v0_20285 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20285
}

define i32 @function_20288(i32 %arg1) local_unnamed_addr {
dec_label_pc_20288:
  %v1_2028c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2028c = icmp eq i32 %v1_2028c, %arg1
  %v0_20293 = load i32, i32* @ebx, align 4
  %v1_20293 = load i32, i32* @edi, align 4
  %v2_20293 = add i32 %v1_20293, 8
  %v3_20293 = inttoptr i32 %v2_20293 to i32*
  store i32 %v0_20293, i32* %v3_20293, align 4
  %v1_20296 = icmp eq i1 %v3_2028c, false
  br i1 %v1_20296, label %bb, label %dec_label_pc_20288.dec_label_pc_2029c_crit_edge

dec_label_pc_20288.dec_label_pc_2029c_crit_edge:  ; preds = %dec_label_pc_20288
  %v0_202a3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2029c

bb:                                               ; preds = %dec_label_pc_20288
  %v2_20296 = call i32 @function_20618()
  br label %dec_label_pc_2029c

dec_label_pc_2029c:                               ; preds = %dec_label_pc_20288.dec_label_pc_2029c_crit_edge, %bb
  %v0_202a3 = phi i32 [ %v0_202a3.pre, %dec_label_pc_20288.dec_label_pc_2029c_crit_edge ], [ %v2_20296, %bb ]
  ret i32 %v0_202a3

; uselistorder directives
  uselistorder label %dec_label_pc_2029c, { 1, 0 }
}

define i32 @function_202a4() local_unnamed_addr {
dec_label_pc_202a4:
  %v0_202a4 = load i32, i32* @edx, align 4
  %v1_202a4 = add i32 %v0_202a4, 4
  %v2_202a4 = inttoptr i32 %v1_202a4 to i32*
  %v3_202a4 = load i32, i32* %v2_202a4, align 4
  %v1_202a7 = add i32 %v3_202a4, 4
  %v2_202a7 = inttoptr i32 %v1_202a7 to i32*
  %v3_202a7 = load i32, i32* %v2_202a7, align 4
  ret i32 %v3_202a7
}

define i32 @function_202b2() local_unnamed_addr {
dec_label_pc_202b2:
  %v0_202b2 = load i32, i32* @ebp, align 4
  %v1_202b2 = add i32 %v0_202b2, 4
  %v2_202b2 = inttoptr i32 %v1_202b2 to i8*
  store i8 0, i8* %v2_202b2, align 1
  %v0_202b6 = load i32, i32* @eax, align 8
  ret i32 %v0_202b6
}

define i32 @function_202b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_202b8:
  %tmp22 = call i8 @__decompiler_undefined_function_3()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = urem i32 %arg1, 2
  %tmp27 = icmp ne i32 %tmp26, 0
  %v0_202b8 = load i32, i32* @ebx, align 4
  %v1_202b8 = add i32 %v0_202b8, 8
  %v2_202b8 = inttoptr i32 %v1_202b8 to i32*
  %v3_202b8 = load i32, i32* %v2_202b8, align 4
  %v1_202bb = icmp eq i32 %v3_202b8, 0
  br i1 %v1_202bb, label %bb, label %dec_label_pc_202c3

bb:                                               ; preds = %dec_label_pc_202b8
  %v2_202bd = call i32 @function_204c2(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_202c3

dec_label_pc_202c3:                               ; preds = %bb, %dec_label_pc_202b8
  %v1_202c3 = add i32 %v3_202b8, 4
  %v2_202c3 = inttoptr i32 %v1_202c3 to i8*
  %v3_202c3 = load i8, i8* %v2_202c3, align 1
  %v4_202c3 = zext i8 %v3_202c3 to i32
  %v2_202c7 = load i32, i32* @esi, align 4
  store i32 %v4_202c3, i32* @eax, align 8
  %v5_202d1 = icmp eq i8 %v3_202c3, 0
  br i1 %v5_202d1, label %dec_label_pc_20348, label %dec_label_pc_202d5

dec_label_pc_202d5:                               ; preds = %dec_label_pc_202c3
  %v2_202d7 = load i32, i32* @edi, align 4
  store i32 %v2_202d7, i32* @eax, align 8
  %v1_202d9 = icmp eq i32 %v2_202d7, 0
  br i1 %v1_202d9, label %bb30, label %dec_label_pc_202e1

bb30:                                             ; preds = %dec_label_pc_202d5
  %v3_202db = call i32 @function_20613(i32 %v2_202c7)
  %v2_202e1.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_202e1

dec_label_pc_202e1:                               ; preds = %bb30, %dec_label_pc_202d5
  %v2_202e1 = phi i32 [ %v2_202e1.pre, %bb30 ], [ %v2_202d7, %dec_label_pc_202d5 ]
  store i32 %v2_202e1, i32* @eax, align 8
  %v1_202e3 = icmp eq i32 %v2_202e1, 0
  br i1 %v1_202e3, label %bb31, label %dec_label_pc_202eb

bb31:                                             ; preds = %dec_label_pc_202e1
  %v3_202e5 = call i32 @function_2060e(i32 %v2_202c7)
  store i32 %v3_202e5, i32* @eax, align 8
  br label %dec_label_pc_202eb

dec_label_pc_202eb:                               ; preds = %bb31, %dec_label_pc_202e1
  %v0_202eb = phi i32 [ %v3_202e5, %bb31 ], [ %v2_202e1, %dec_label_pc_202e1 ]
  %v1_202eb = load i32, i32* @ebx, align 4
  %v12_202eb = icmp eq i32 %v0_202eb, %v1_202eb
  br i1 %v12_202eb, label %bb32, label %dec_label_pc_202ef

bb32:                                             ; preds = %dec_label_pc_202eb
  %v3_202ed = call i32 @function_20288(i32 %v2_202c7)
  br label %dec_label_pc_202ef

dec_label_pc_202ef:                               ; preds = %bb32, %dec_label_pc_202eb
  %v4_202ef10 = zext i1 %tmp27 to i32
  %v5_202ef = add i32 %v4_202ef10, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp33 = urem i32 %v5_202ef, 2
  %v23_202ef = icmp ne i32 %tmp33, 0
  %v4_202f4 = sext i1 %v23_202ef to i32
  store i32 %v4_202f4, i32* @eax, align 8
  %tmp38 = icmp ugt i32 %tmp23, %v4_202f4
  br i1 %tmp38, label %dec_label_pc_20305, label %dec_label_pc_202fe

dec_label_pc_202fe:                               ; preds = %dec_label_pc_202ef
  %v10_202fe = icmp eq i8 %tmp22, 0
  br i1 %v10_202fe, label %bb34, label %dec_label_pc_20305

bb34:                                             ; preds = %dec_label_pc_202fe
  %v3_20303 = call i32 @function_20288(i32 %v4_202f4)
  br label %dec_label_pc_20305

dec_label_pc_20305:                               ; preds = %dec_label_pc_202ef, %bb34, %dec_label_pc_202fe
  %v0_20338 = phi i32 [ %v4_202f4, %dec_label_pc_202ef ], [ %v3_20303, %bb34 ], [ %v4_202f4, %dec_label_pc_202fe ]
  ret i32 %v0_20338

dec_label_pc_20348:                               ; preds = %dec_label_pc_202c3
  %v0_20348 = load i32, i32* @ebx, align 4
  %v1_20348 = add i32 %v0_20348, 8
  %v2_20348 = inttoptr i32 %v1_20348 to i32*
  %v3_20348 = load i32, i32* %v2_20348, align 4
  %v1_2034b = icmp eq i32 %v3_20348, 0
  br i1 %v1_2034b, label %bb35, label %dec_label_pc_20357

bb35:                                             ; preds = %dec_label_pc_20348
  %v2_20351 = call i32 @function_204c2(i32 0)
  br label %dec_label_pc_20357

dec_label_pc_20357:                               ; preds = %bb35, %dec_label_pc_20348
  %v2_2035b = load i32, i32* @edi, align 4
  store i32 %v2_2035b, i32* @eax, align 8
  %v1_20360 = icmp eq i32 %v2_2035b, 0
  br i1 %v1_20360, label %bb36, label %dec_label_pc_20368

bb36:                                             ; preds = %dec_label_pc_20357
  %v2_20362 = call i32 @function_20613(i32 %v3_20348)
  %v2_20368.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_20368

dec_label_pc_20368:                               ; preds = %bb36, %dec_label_pc_20357
  %v2_20368 = phi i32 [ %v2_20368.pre, %bb36 ], [ %v2_2035b, %dec_label_pc_20357 ]
  store i32 %v2_20368, i32* @eax, align 8
  %v1_2036a = icmp eq i32 %v2_20368, 0
  br i1 %v1_2036a, label %bb37, label %dec_label_pc_20376

bb37:                                             ; preds = %dec_label_pc_20368
  %v2_20370 = call i32 @function_2060e(i32 0)
  br label %dec_label_pc_20376

dec_label_pc_20376:                               ; preds = %bb37, %dec_label_pc_20368
  ret i32 %v2_20368

; uselistorder directives
  uselistorder i32 %v2_20368, { 0, 2, 1 }
  uselistorder i32 %v4_202f4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_202e1, { 0, 2, 1 }
  uselistorder i32 %v2_202c7, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_20288, { 1, 0 }
  uselistorder i32 (i32)* @function_2060e, { 1, 0 }
  uselistorder i32 (i32)* @function_20613, { 1, 0 }
  uselistorder i32 (i32)* @function_204c2, { 1, 0 }
  uselistorder label %dec_label_pc_20305, { 1, 2, 0 }
}

define i32 @function_20380(i32 %arg1) local_unnamed_addr {
dec_label_pc_20380:
  %v0_20380 = load i1, i1* @zf, align 1
  br i1 %v0_20380, label %bb, label %dec_label_pc_20386

bb:                                               ; preds = %dec_label_pc_20380
  %v1_20380 = call i32 @function_2069b()
  store i32 %v1_20380, i32* @eax, align 8
  br label %dec_label_pc_20386

dec_label_pc_20386:                               ; preds = %bb, %dec_label_pc_20380
  %v1_2038a = add i32 %arg1, 16
  %v2_2038a = inttoptr i32 %v1_2038a to i32*
  %v3_2038a = load i32, i32* %v2_2038a, align 4
  %v1_2038d = icmp eq i32 %v3_2038a, 0
  br i1 %v1_2038d, label %bb25, label %dec_label_pc_20399

bb25:                                             ; preds = %dec_label_pc_20386
  %v2_20393 = call i32 @function_20677(i32 0)
  br label %dec_label_pc_20399

dec_label_pc_20399:                               ; preds = %bb25, %dec_label_pc_20386
  store i32 %v3_2038a, i32* @esi, align 4
  %v1_2039f = add i32 %arg1, 12
  br label %dec_label_pc_203bb.outer

dec_label_pc_203b0:                               ; preds = %dec_label_pc_203bb
  %v1_203b4 = add i32 %v0_203b0, 8
  %v2_203b4 = inttoptr i32 %v1_203b4 to i32*
  %v3_203b4 = load i32, i32* %v2_203b4, align 4
  store i32 %v3_203b4, i32* @esi, align 4
  %v1_203b7 = icmp eq i32 %v3_203b4, 0
  br i1 %v1_203b7, label %dec_label_pc_203d0, label %dec_label_pc_203bb.outer

dec_label_pc_203bb.outer:                         ; preds = %dec_label_pc_203b0, %dec_label_pc_20399
  %v0_203bb12 = phi i32 [ %v3_203b4, %dec_label_pc_203b0 ], [ %v3_2038a, %dec_label_pc_20399 ]
  %stack_var_28.0.ph = phi i32 [ %v0_203b0, %dec_label_pc_203b0 ], [ %v1_2039f, %dec_label_pc_20399 ]
  br label %dec_label_pc_203bb

dec_label_pc_203bb:                               ; preds = %dec_label_pc_203bb.outer, %dec_label_pc_203c9
  %v0_203bb = phi i32 [ %v0_203bb12, %dec_label_pc_203bb.outer ], [ %v3_203c9, %dec_label_pc_203c9 ]
  %v1_203bb = add i32 %v0_203bb, 16
  store i32 %v1_203bb, i32* @eax, align 8
  %v0_203c0 = call i32 @function_20570()
  store i32 %v0_203c0, i32* @eax, align 8
  %v4_203c5 = trunc i32 %v0_203c0 to i8
  %v5_203c5 = icmp eq i8 %v4_203c5, 0
  %v0_203b0 = load i32, i32* @esi, align 4
  br i1 %v5_203c5, label %dec_label_pc_203b0, label %dec_label_pc_203c9

dec_label_pc_203c9:                               ; preds = %dec_label_pc_203bb
  %v1_203c9 = add i32 %v0_203b0, 12
  %v2_203c9 = inttoptr i32 %v1_203c9 to i32*
  %v3_203c9 = load i32, i32* %v2_203c9, align 4
  store i32 %v3_203c9, i32* @esi, align 4
  %v1_203cc = icmp eq i32 %v3_203c9, 0
  %v1_203ce = icmp eq i1 %v1_203cc, false
  br i1 %v1_203ce, label %dec_label_pc_203bb, label %dec_label_pc_203d0

dec_label_pc_203d0:                               ; preds = %dec_label_pc_203b0, %dec_label_pc_203c9
  %stack_var_28.1 = phi i32 [ %stack_var_28.0.ph, %dec_label_pc_203c9 ], [ %v0_203b0, %dec_label_pc_203b0 ]
  %v15_203d4 = icmp eq i32 %stack_var_28.1, %v1_2039f
  br i1 %v15_203d4, label %bb27, label %dec_label_pc_203de

bb27:                                             ; preds = %dec_label_pc_203d0
  %v2_203d8 = call i32 @function_20677(i32 %stack_var_28.1)
  br label %dec_label_pc_203de

dec_label_pc_203de:                               ; preds = %bb27, %dec_label_pc_203d0
  %v1_203e4 = add i32 %stack_var_28.1, 16
  store i32 %v1_203e4, i32* @esi, align 4
  store i32 %v1_203e4, i32* @eax, align 8
  %v0_203e9 = call i32 @function_20570()
  %v4_203ee = trunc i32 %v0_203e9 to i8
  %v5_203ee = icmp eq i8 %v4_203ee, 0
  br i1 %v5_203ee, label %bb29, label %dec_label_pc_203f2

bb29:                                             ; preds = %dec_label_pc_203de
  %v1_203f0 = call i32 @function_20418()
  br label %dec_label_pc_203f2

dec_label_pc_203f2:                               ; preds = %bb29, %dec_label_pc_203de
  %v3_2040a = phi i32 [ %v1_203f0, %bb29 ], [ %v0_203e9, %dec_label_pc_203de ]
  ret i32 %v3_2040a

; uselistorder directives
  uselistorder i32 %stack_var_28.1, { 1, 2, 0 }
  uselistorder i32 %v3_203c9, { 1, 2, 0 }
  uselistorder i32 %v0_203b0, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @function_20677, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_203d0, { 1, 0 }
  uselistorder label %dec_label_pc_203bb, { 1, 0 }
}

define i32 @function_20415() local_unnamed_addr {
dec_label_pc_20415:
  %eax.global-to-local = alloca i32, align 4
  %v0_20415 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20415
}

define i32 @function_20418() local_unnamed_addr {
dec_label_pc_20418:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_2041a = load i32, i32* @ebp, align 4
  store i32 %v0_2041a, i32* @eax, align 8
  %v0_2041c = call i32 @function_20570()
  %v2_20429 = load i32, i32* @ebx, align 4
  %v2_2042b = add i32 %tmp4, 28
  %v3_2042b = inttoptr i32 %v2_2042b to i32*
  %v4_2042b = load i32, i32* %v3_2042b, align 4
  %v15_2042b = icmp eq i32 %v2_20429, %v4_2042b
  br i1 %v15_2042b, label %bb, label %dec_label_pc_20438

bb:                                               ; preds = %dec_label_pc_20418
  %v2_20432 = call i32 @function_204c8(i32 %v2_20429)
  %v0_20438.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_20438

dec_label_pc_20438:                               ; preds = %bb, %dec_label_pc_20418
  %v0_20438 = phi i32 [ %v0_20438.pre, %bb ], [ %v2_20429, %dec_label_pc_20418 ]
  %v1_20440 = add i32 %v0_20438, 12
  store i32 %v1_20440, i32* @eax, align 8
  %v1_20446 = call i32 @function_306d0(i32 %v1_20440)
  ret i32 %v1_20446

; uselistorder directives
  uselistorder i32 %v2_20429, { 1, 2, 0 }
}

define i32 @function_20453(i32 %arg1) local_unnamed_addr {
dec_label_pc_20453:
  %eax.global-to-local = alloca i32, align 4
  %v0_20457 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20457
}

define i32 @function_20460(i32 %arg1) local_unnamed_addr {
dec_label_pc_20468:
  %v0_20468.pre = load i32, i32* @edx, align 4
  %phitmp = add i32 %v0_20468.pre, 8
  %phitmp4 = inttoptr i32 %phitmp to i32*
  %v3_20468 = load i32, i32* %phitmp4, align 4
  store i32 %v3_20468, i32* @eax, align 8
  %v1_2046b = icmp eq i32 %v3_20468, 0
  br i1 %v1_2046b, label %bb, label %dec_label_pc_20473

bb:                                               ; preds = %dec_label_pc_20468
  %v1_2046d = call i32 @function_202b2()
  br label %dec_label_pc_20473

dec_label_pc_20473:                               ; preds = %bb, %dec_label_pc_20468
  %v0_20473 = phi i32 [ %v1_2046d, %bb ], [ %v3_20468, %dec_label_pc_20468 ]
  %v1_20473 = add i32 %v0_20473, 4
  %v2_20473 = inttoptr i32 %v1_20473 to i32*
  %v3_20473 = load i32, i32* %v2_20473, align 4
  %v1_20476 = icmp eq i32 %v3_20473, 0
  %v1_20478 = zext i1 %v1_20476 to i32
  %v3_20478 = and i32 %v3_20473, -256
  %v4_20478 = or i32 %v1_20478, %v3_20478
  store i32 %v4_20478, i32* @eax, align 8
  %v5_2047b = icmp eq i1 %v1_20476, false
  %v1_2047d = icmp eq i1 %v5_2047b, false
  br i1 %v1_2047d, label %bb7, label %dec_label_pc_20483

bb7:                                              ; preds = %dec_label_pc_20473
  %v2_2047d = call i32 @function_202b2()
  br label %dec_label_pc_20483

dec_label_pc_20483:                               ; preds = %bb7, %dec_label_pc_20473
  %v4_20487 = add i32 %arg1, 12
  %v1_20499 = call i32 @function_202b8(i32 %v4_20487)
  ret i32 %v1_20499

; uselistorder directives
  uselistorder i1 %v1_20476, { 1, 0 }
  uselistorder i32 ()* @function_202b2, { 1, 0 }
}

define i32 @function_204a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_204a0:
  %edx.global-to-local = alloca i32, align 4
  %v0_204a0 = load i32, i32* %edx.global-to-local, align 4
  %v2_204a0 = icmp slt i32 %v0_204a0, 0
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_204a6 = add i32 %arg1, 4
  %v2_204a6 = inttoptr i32 %v1_204a6 to i32*
  %v3_204a6 = load i32, i32* %v2_204a6, align 4
  store i32 %v3_204a6, i32* @eax, align 8
  br i1 %v2_204a0, label %bb, label %dec_label_pc_204af

bb:                                               ; preds = %dec_label_pc_204a0
  %v1_204a9 = call i32 @function_205ce()
  store i32 %v1_204a9, i32* @eax, align 8
  br label %dec_label_pc_204af

dec_label_pc_204af:                               ; preds = %bb, %dec_label_pc_204a0
  %v0_204af = phi i32 [ %v1_204a9, %bb ], [ %v3_204a6, %dec_label_pc_204a0 ]
  %v1_204af = icmp eq i32 %v0_204af, 0
  br i1 %v1_204af, label %bb100, label %dec_label_pc_204b7

bb100:                                            ; preds = %dec_label_pc_204af
  %v1_204b1 = call i32 @function_20641()
  br label %dec_label_pc_204b7

dec_label_pc_204b7:                               ; preds = %bb100, %dec_label_pc_204af
  %v0_204b7 = phi i32 [ %v1_204b1, %bb100 ], [ %v0_204af, %dec_label_pc_204af ]
  %v1_204b7 = inttoptr i32 %v0_204b7 to i32*
  %v2_204b7 = load i32, i32* %v1_204b7, align 4
  store i32 %v2_204b7, i32* %edx.global-to-local, align 4
  ret i32 %v0_204b7

; uselistorder directives
  uselistorder i32 %v0_204b7, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_204c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_204c2:
  %v0_204c2 = call i32 @function_2e5aa()
  ret i32 %v0_204c2
}

define i32 @function_204c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_204c8:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_204eb

dec_label_pc_204eb:                               ; preds = %dec_label_pc_204eb, %dec_label_pc_204c8
  %stack_var_68.1 = phi i32 [ %arg1, %dec_label_pc_204c8 ], [ %stack_var_68.0, %dec_label_pc_204eb ]
  %v0_204ee = load i32, i32* @ebp, align 4
  store i32 %v0_204ee, i32* @eax, align 8
  %v0_204f0 = call i32 @function_20570()
  %v4_204f5 = trunc i32 %v0_204f0 to i8
  %v5_204f5 = icmp eq i8 %v4_204f5, 0
  %v1_204f7 = icmp eq i1 %v5_204f5, false
  %v0_204e0 = load i32, i32* @esi, align 4
  %stack_var_68.0 = select i1 %v1_204f7, i32 %v0_204e0, i32 %stack_var_68.1
  %storemerge4.in.in.v = select i1 %v1_204f7, i32 8, i32 12
  %storemerge4.in.in = add i32 %storemerge4.in.in.v, %v0_204e0
  %storemerge4.in = inttoptr i32 %storemerge4.in.in to i32*
  %storemerge4 = load i32, i32* %storemerge4.in, align 4
  store i32 %storemerge4, i32* @esi, align 4
  %v1_204e7 = icmp eq i32 %storemerge4, 0
  br i1 %v1_204e7, label %dec_label_pc_20500, label %dec_label_pc_204eb

dec_label_pc_20500:                               ; preds = %dec_label_pc_204eb
  %v15_20504 = icmp eq i32 %stack_var_68.0, %arg1
  br i1 %v15_20504, label %dec_label_pc_20511, label %dec_label_pc_2050a

dec_label_pc_2050a:                               ; preds = %dec_label_pc_20500
  %v1_2050a = add i32 %stack_var_68.0, 28
  %v2_2050a = inttoptr i32 %v1_2050a to i32*
  %v3_2050a = load i32, i32* %v2_2050a, align 4
  br label %dec_label_pc_20511

dec_label_pc_20511:                               ; preds = %dec_label_pc_2050a, %dec_label_pc_20500
  %stack_var_64.0 = phi i32 [ %tmp10, %dec_label_pc_20500 ], [ %v3_2050a, %dec_label_pc_2050a ]
  %v15_20515 = icmp eq i32 %tmp9, %stack_var_64.0
  br i1 %v15_20515, label %bb, label %dec_label_pc_2051f

bb:                                               ; preds = %dec_label_pc_20511
  %v1_20519 = call i32 @function_205d5()
  br label %dec_label_pc_2051f

dec_label_pc_2051f:                               ; preds = %bb, %dec_label_pc_20511
  %v0_2051f = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  br label %dec_label_pc_20539

dec_label_pc_20530:                               ; preds = %dec_label_pc_20539
  store i32 %v0_20530, i32* @esi, align 4
  %v1_20532 = add i32 %v0_20530, 8
  br label %dec_label_pc_20535

dec_label_pc_20535:                               ; preds = %dec_label_pc_20530, %dec_label_pc_20547
  %storemerge.in.in = phi i32 [ %v1_20532, %dec_label_pc_20530 ], [ %v1_20547, %dec_label_pc_20547 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_20535 = icmp eq i32 %storemerge, 0
  br i1 %v1_20535, label %dec_label_pc_20550, label %dec_label_pc_20539

dec_label_pc_20539:                               ; preds = %dec_label_pc_20535, %dec_label_pc_2051f
  %v0_20539 = phi i32 [ %storemerge, %dec_label_pc_20535 ], [ %tmp12, %dec_label_pc_2051f ]
  %v1_20539 = add i32 %v0_20539, 16
  store i32 %v1_20539, i32* @eax, align 8
  %v0_2053e = call i32 @function_20570()
  %v4_20543 = trunc i32 %v0_2053e to i8
  %v5_20543 = icmp eq i8 %v4_20543, 0
  %v0_20530 = load i32, i32* @ebx, align 4
  br i1 %v5_20543, label %dec_label_pc_20530, label %dec_label_pc_20547

dec_label_pc_20547:                               ; preds = %dec_label_pc_20539
  %v1_20547 = add i32 %v0_20530, 12
  br label %dec_label_pc_20535

dec_label_pc_20550:                               ; preds = %dec_label_pc_20535
  %v0_20550 = load i32, i32* @esi, align 4
  %v15_20550 = icmp eq i32 %v0_20550, %arg1
  store i32 %v0_2051f, i32* @ebx, align 4
  br i1 %v15_20550, label %dec_label_pc_20568, label %dec_label_pc_2055a

dec_label_pc_2055a:                               ; preds = %dec_label_pc_20550
  %v0_2055d = load i32, i32* @ebp, align 4
  store i32 %v0_2055d, i32* @eax, align 8
  %v0_2055f = call i32 @function_20570()
  store i32 %v0_2055f, i32* @eax, align 8
  %v4_20564 = trunc i32 %v0_2055f to i8
  %v5_20564 = icmp eq i8 %v4_20564, 0
  br i1 %v5_20564, label %bb15, label %dec_label_pc_20568

bb15:                                             ; preds = %dec_label_pc_2055a
  %v1_20566 = call i32 @function_205c2()
  br label %dec_label_pc_20568

dec_label_pc_20568:                               ; preds = %bb15, %dec_label_pc_2055a, %dec_label_pc_20550
  %v4_20568 = phi i32 [ %v1_20566, %bb15 ], [ %v0_2055f, %dec_label_pc_2055a ], [ %v0_2053e, %dec_label_pc_20550 ]
  ret i32 %v4_20568

; uselistorder directives
  uselistorder i32 %v0_20530, { 0, 2, 1 }
  uselistorder i32 %stack_var_68.0, { 1, 0, 2 }
  uselistorder i32 ()* @function_20570, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_20535, { 1, 0 }
}

define i32 @function_20570() local_unnamed_addr {
dec_label_pc_20570:
  %stack_var_75 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_91 = alloca i32, align 4
  %v0_20570 = load i32, i32* @ebx, align 4
  %v1_20570 = add i32 %v0_20570, 2055226434
  %v2_20570 = inttoptr i32 %v1_20570 to i8*
  %v3_20570 = load i8, i8* %v2_20570, align 1
  %v4_20570 = load i32, i32* @ecx, align 4
  %v5_20570 = trunc i32 %v4_20570 to i8
  %v6_20570 = add i8 %v5_20570, %v3_20570
  store i8 %v6_20570, i8* %v2_20570, align 1
  %v0_20577 = load i32, i32* @ecx, align 4
  %v1_20577 = add i32 %v0_20577, 1952195652
  %v2_20577 = inttoptr i32 %v1_20577 to i8*
  %v3_20577 = load i8, i8* %v2_20577, align 1
  %v5_20577 = trunc i32 %v0_20577 to i8
  %v6_20577 = add i8 %v3_20577, %v5_20577
  store i8 %v6_20577, i8* %v2_20577, align 1
  %v2_2058a = ptrtoint i32* %stack_var_91 to i32
  %v2_20596 = ptrtoint i32* %stack_var_75 to i32
  %v0_2059a = load i32, i32* @esi, align 4
  %v1_205a9 = add i32 %tmp8, 8
  %v4_205b0 = call i32 @unknown_40130(i32 %v2_20596, i32 %v1_205a9, i32 %v0_2059a, i32 %v2_2058a)
  %v2_205b5 = load i32, i32* @ebx, align 4
  ret i32 %v2_205b5
}

define i32 @function_205c2() local_unnamed_addr {
dec_label_pc_205c2:
  %v1_205c6 = load i32, i32* @esi, align 4
  %v2_205c6 = add i32 %v1_205c6, 28
  %v3_205c6 = inttoptr i32 %v2_205c6 to i32*
  %v0_205c9 = load i32, i32* @eax, align 8
  ret i32 %v0_205c9
}

define i32 @function_205ce() local_unnamed_addr {
dec_label_pc_205ce:
  %v0_205d0 = load i32, i32* @eax, align 8
  ret i32 %v0_205d0
}

define i32 @function_205d5() local_unnamed_addr {
dec_label_pc_205d5:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp3
}

define i32 @function_205fa() local_unnamed_addr {
dec_label_pc_205fa:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_205fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_205fa = add i32 %v0_205fa, -1960565692
  %v2_205fa = inttoptr i32 %v1_205fa to i32*
  %v3_205fa = load i32, i32* %v2_205fa, align 4
  %v4_205fa = sub i32 %v3_205fa, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_205fa, i32* %v2_205fa, align 4
  %v0_20600 = load i32, i32* %eax.global-to-local, align 8
  %v1_20600 = load i32, i32* %ebx.global-to-local, align 4
  %v2_20600 = add i32 %v1_20600, -1996415896
  %v3_20600 = inttoptr i32 %v2_20600 to i32*
  %v4_20600 = load i32, i32* %v3_20600, align 4
  %v5_20600 = load i1, i1* %cf.global-to-local, align 1
  %v6_20600 = zext i1 %v5_20600 to i32
  %v7_20600 = add i32 %v4_20600, %v0_20600
  %v8_20600 = add i32 %v7_20600, %v6_20600
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_20607 = and i32 %v8_20600, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.2406 to i8) to i32), i32 -256)
  store i32 %v11_20607, i32* %eax.global-to-local, align 8
  ret i32 %v11_20607

; uselistorder directives
  uselistorder i32 %v11_20607, { 1, 0 }
}

define i32 @function_2060e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2060e:
  %v0_2060e = call i32 @function_2e472()
  ret i32 %v0_2060e
}

define i32 @function_20613(i32 %arg1) local_unnamed_addr {
dec_label_pc_20613:
  %v0_20613 = call i32 @function_2e3a2()
  ret i32 %v0_20613
}

define i32 @function_20618() local_unnamed_addr {
dec_label_pc_20618:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2061d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2061d:
  %v3_20635 = load i32, i32* @eax, align 8
  ret i32 %v3_20635
}

define i32 @function_20641() local_unnamed_addr {
dec_label_pc_20641:
  %v3_20659 = load i32, i32* @eax, align 8
  ret i32 %v3_20659
}

define i32 @function_20666() local_unnamed_addr {
dec_label_pc_20666:
  %eax.global-to-local = alloca i32, align 4
  %v0_20666 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20666
}

define i32 @function_20677(i32 %arg1) local_unnamed_addr {
dec_label_pc_20677:
  %v3_2068f = load i32, i32* @eax, align 8
  ret i32 %v3_2068f
}

define i32 @function_2069b() local_unnamed_addr {
dec_label_pc_2069b:
  %v3_206b3 = load i32, i32* @eax, align 8
  ret i32 %v3_206b3
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20710:
  ret i32 0
}

define i32 @function_2073a(i32* %arg1) local_unnamed_addr {
dec_label_pc_2073a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_2073a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2073a = add i32 %v0_2073a, 1149890808
  %v2_2073a = inttoptr i32 %v1_2073a to i32*
  %v3_2073a = load i32, i32* %v2_2073a, align 4
  %v4_2073a = add i32 %v3_2073a, 1
  store i32 %v4_2073a, i32* %v2_2073a, align 4
  %v0_20740 = load i32, i32* %eax.global-to-local, align 8
  %v1_20740 = trunc i32 %v0_20740 to i8
  %v2_20740 = and i8 %v1_20740, 28
  %v3_20740 = icmp eq i8 %v2_20740, 0
  %v8_20740 = zext i8 %v2_20740 to i32
  %v10_20740 = and i32 %v0_20740, -256
  %v11_20740 = or i32 %v8_20740, %v10_20740
  store i32 %v11_20740, i32* %eax.global-to-local, align 8
  br i1 %v3_20740, label %dec_label_pc_2076c, label %dec_label_pc_20744

dec_label_pc_20744:                               ; preds = %dec_label_pc_2073a
  %v0_20744 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20744 = add i32 %v0_20744, 16
  %v2_20744 = inttoptr i32 %v1_20744 to i32*
  %v3_20744 = load i32, i32* %v2_20744, align 4
  store i32 %v3_20744, i32* %eax.global-to-local, align 8
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2074b = add i32 %tmp102, 16
  %v3_2074b = inttoptr i32 %v2_2074b to i32*
  store i32 %v3_20744, i32* %v3_2074b, align 4
  %v0_2074e = load i32, i32* %edx.global-to-local, align 4
  %v1_2074e = add i32 %v0_2074e, 20
  %v2_2074e = inttoptr i32 %v1_2074e to i8*
  store i8 0, i8* %v2_2074e, align 1
  %v0_20752 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20752 = add i32 %v0_20752, 20
  %v2_20752 = inttoptr i32 %v1_20752 to i8*
  %v3_20752 = load i8, i8* %v2_20752, align 1
  %v10_20752 = icmp eq i8 %v3_20752, 0
  br i1 %v10_20752, label %dec_label_pc_20762, label %dec_label_pc_20758

dec_label_pc_20758:                               ; preds = %dec_label_pc_20744
  %v1_20758 = add i32 %v0_20752, 24
  %v2_20758 = inttoptr i32 %v1_20758 to i32*
  %v3_20758 = load i32, i32* %v2_20758, align 4
  store i32 %v3_20758, i32* %eax.global-to-local, align 8
  %v0_2075b = load i32, i32* %edx.global-to-local, align 4
  %v1_2075b = add i32 %v0_2075b, 20
  %v2_2075b = inttoptr i32 %v1_2075b to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_2075b, align 1
  %v0_2075f = load i32, i32* %eax.global-to-local, align 8
  %v1_2075f = load i32, i32* %edx.global-to-local, align 4
  %v2_2075f = add i32 %v1_2075f, 24
  %v3_2075f = inttoptr i32 %v2_2075f to i32*
  store i32 %v0_2075f, i32* %v3_2075f, align 4
  %v0_20762.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_20762

dec_label_pc_20762:                               ; preds = %dec_label_pc_20758, %dec_label_pc_20744
  %v0_20762 = phi i32 [ %v0_20762.pre, %dec_label_pc_20758 ], [ %v0_20752, %dec_label_pc_20744 ]
  %v1_20762 = add i32 %v0_20762, 28
  %v2_20762 = inttoptr i32 %v1_20762 to i32*
  %v3_20762 = load i32, i32* %v2_20762, align 4
  store i32 %v3_20762, i32* %eax.global-to-local, align 8
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_20769 = add i32 %tmp102, 28
  %v3_20769 = inttoptr i32 %v2_20769 to i32*
  store i32 %v3_20762, i32* %v3_20769, align 4
  br label %dec_label_pc_2076c

dec_label_pc_2076c:                               ; preds = %dec_label_pc_20762, %dec_label_pc_2073a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_20770 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_20770, i32* %eax.global-to-local, align 8
  %v1_20772 = add i32 %tmp102, 12
  %v2_20772 = inttoptr i32 %v1_20772 to i32*
  store i32 0, i32* %v2_20772, align 4
  %v0_20779 = load i32, i32* %eax.global-to-local, align 8
  %v1_20779 = load i32, i32* %edx.global-to-local, align 4
  %v2_20779 = inttoptr i32 %v1_20779 to i32*
  store i32 %v0_20779, i32* %v2_20779, align 4
  %v0_2077b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2077b = add i32 %v0_2077b, 12
  %v2_2077b = inttoptr i32 %v1_2077b to i32*
  %v3_2077b = load i32, i32* %v2_2077b, align 4
  store i32 %v3_2077b, i32* %eax.global-to-local, align 8
  %v0_2077e = load i32, i32* %edx.global-to-local, align 4
  %v1_2077e = add i32 %v0_2077e, 8
  %v2_2077e = inttoptr i32 %v1_2077e to i32*
  store i32 0, i32* %v2_2077e, align 4
  %v0_20785 = load i32, i32* %esi.global-to-local, align 4
  %v1_20785 = load i32, i32* %edx.global-to-local, align 4
  %v2_20785 = add i32 %v1_20785, 4
  %v3_20785 = inttoptr i32 %v2_20785 to i32*
  store i32 %v0_20785, i32* %v3_20785, align 4
  %v0_20788 = load i32, i32* %eax.global-to-local, align 8
  %v1_20788 = icmp eq i32 %v0_20788, 0
  br i1 %v1_20788, label %dec_label_pc_207a3, label %dec_label_pc_2078c

dec_label_pc_2078c:                               ; preds = %dec_label_pc_2076c
  %v0_2078c = load i32, i32* %edx.global-to-local, align 4
  %v2_20797 = call i32 @unknown_40e20(i32 %v0_20788, i32 %v0_2078c)
  store i32 %v2_20797, i32* %eax.global-to-local, align 8
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_20797, i32* %v2_20772, align 4
  br label %dec_label_pc_207a3

dec_label_pc_207a3:                               ; preds = %dec_label_pc_2078c, %dec_label_pc_2076c
  %v0_207a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_207a3 = add i32 %v0_207a3, 8
  %v2_207a3 = inttoptr i32 %v1_207a3 to i32*
  %v3_207a3 = load i32, i32* %v2_207a3, align 4
  store i32 %v3_207a3, i32* %esi.global-to-local, align 4
  %v1_207aa = icmp eq i32 %v3_207a3, 0
  %v1_207ac = icmp eq i1 %v1_207aa, false
  br i1 %v1_207ac, label %dec_label_pc_207b2, label %dec_label_pc_207ae

dec_label_pc_207ae:                               ; preds = %dec_label_pc_207a3
  %v0_207ae = call i32 @function_2081e()
  store i32 %v0_207ae, i32* %eax.global-to-local, align 8
  ret i32 %v0_207ae

dec_label_pc_207b2:                               ; preds = %dec_label_pc_207a3
  %v2_207b2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_207b2

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_207c2() local_unnamed_addr {
dec_label_pc_207c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_207c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_207c2
}

define i32 @function_2081e() local_unnamed_addr {
dec_label_pc_2081e:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_20822 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20822 = icmp eq i32 %v1_20822, %tmp7
  %v1_2082d = icmp eq i1 %v3_20822, false
  br i1 %v1_2082d, label %dec_label_pc_20837, label %dec_label_pc_2082f

dec_label_pc_2082f:                               ; preds = %dec_label_pc_2081e
  ret i32 %tmp6

dec_label_pc_20837:                               ; preds = %dec_label_pc_2081e
  ret i32 %tmp6

; uselistorder directives
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @__cxa_begin_catch.2394(i32 %arg1) local_unnamed_addr {
dec_label_pc_20840:
  %v0_20840 = load i32, i32* @eax, align 8
  ret i32 %v0_20840
}

define i32 @function_2085a() local_unnamed_addr {
dec_label_pc_2085a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2085a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2085a
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20870:
  ret i32 0
}

define i32 @function_20907() local_unnamed_addr {
dec_label_pc_20907:
  %eax.global-to-local = alloca i32, align 4
  %v0_20907 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20907
}

define i32 @function_20910() local_unnamed_addr {
dec_label_pc_20910:
  %eax.global-to-local = alloca i32, align 4
  %v0_20910 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20910
}

define i32 @function_20930(i32 %arg1) local_unnamed_addr {
dec_label_pc_20930:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v0_20935 = load i32, i32* @eax, align 8
  %v11_20935 = and i32 %v0_20935, -248
  store i32 %v11_20935, i32* %eax.global-to-local, align 8
  %v0_2093b = load i32, i32* @edx, align 4
  %v2_2093e = call i32 @unknown_40f80(i32 %v0_2093b, i32 %v11_20935)
  store i32 %v2_2093e, i32* %eax.global-to-local, align 8
  store i32 %v2_2093e, i32* %ebp.global-to-local, align 4
  %v2_20949 = add i32 %tmp8, 16
  %v3_20949 = inttoptr i32 %v2_20949 to i32*
  store i32 %v2_2093e, i32* %v3_20949, align 4
  %v0_20952.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_2095218 = add i32 %v0_20952.pre, 8
  %v2_2095219 = inttoptr i32 %v1_2095218 to i32*
  %v3_2095220 = load i32, i32* %v2_2095219, align 4
  store i32 %v3_2095220, i32* %edx.global-to-local, align 4
  %v1_2095521 = icmp eq i32 %v3_2095220, 0
  %v1_2095722 = icmp eq i1 %v1_2095521, false
  br i1 %v1_2095722, label %dec_label_pc_20950, label %dec_label_pc_20959

dec_label_pc_20950:                               ; preds = %dec_label_pc_20930, %dec_label_pc_20950
  %v3_2095223 = phi i32 [ %v3_20952, %dec_label_pc_20950 ], [ %v3_2095220, %dec_label_pc_20930 ]
  store i32 %v3_2095223, i32* %ebp.global-to-local, align 4
  %v1_20952 = add i32 %v3_2095223, 8
  %v2_20952 = inttoptr i32 %v1_20952 to i32*
  %v3_20952 = load i32, i32* %v2_20952, align 4
  store i32 %v3_20952, i32* %edx.global-to-local, align 4
  %v1_20955 = icmp eq i32 %v3_20952, 0
  %v1_20957 = icmp eq i1 %v1_20955, false
  br i1 %v1_20957, label %dec_label_pc_20950, label %dec_label_pc_20959

dec_label_pc_20959:                               ; preds = %dec_label_pc_20950, %dec_label_pc_20930
  %v0_2095d.lcssa = phi i32 [ %v0_20952.pre, %dec_label_pc_20930 ], [ %v3_2095223, %dec_label_pc_20950 ]
  %v2_2095d = add i32 %tmp8, 20
  %v3_2095d = inttoptr i32 %v2_2095d to i32*
  store i32 %v0_2095d.lcssa, i32* %v3_2095d, align 4
  %v0_2096a.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_2096a12 = add i32 %v0_2096a.pre, 12
  %v2_2096a13 = inttoptr i32 %v1_2096a12 to i32*
  %v3_2096a14 = load i32, i32* %v2_2096a13, align 4
  store i32 %v3_2096a14, i32* %edx.global-to-local, align 4
  %v1_2096d15 = icmp eq i32 %v3_2096a14, 0
  %v1_2096f16 = icmp eq i1 %v1_2096d15, false
  br i1 %v1_2096f16, label %dec_label_pc_20968, label %dec_label_pc_20971

dec_label_pc_20968:                               ; preds = %dec_label_pc_20959, %dec_label_pc_20968
  %v3_2096a17 = phi i32 [ %v3_2096a, %dec_label_pc_20968 ], [ %v3_2096a14, %dec_label_pc_20959 ]
  store i32 %v3_2096a17, i32* %eax.global-to-local, align 8
  %v1_2096a = add i32 %v3_2096a17, 12
  %v2_2096a = inttoptr i32 %v1_2096a to i32*
  %v3_2096a = load i32, i32* %v2_2096a, align 4
  store i32 %v3_2096a, i32* %edx.global-to-local, align 4
  %v1_2096d = icmp eq i32 %v3_2096a, 0
  %v1_2096f = icmp eq i1 %v1_2096d, false
  br i1 %v1_2096f, label %dec_label_pc_20968, label %dec_label_pc_20971

dec_label_pc_20971:                               ; preds = %dec_label_pc_20968, %dec_label_pc_20959
  %v0_20979.lcssa = phi i32 [ %v0_2096a.pre, %dec_label_pc_20959 ], [ %v3_2096a17, %dec_label_pc_20968 ]
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_20979 = add i32 %tmp8, 24
  %v3_20979 = inttoptr i32 %v2_20979 to i32*
  store i32 %v0_20979.lcssa, i32* %v3_20979, align 4
  %v0_2097c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2097c = add i32 %v0_2097c, 28
  %v2_2097c = inttoptr i32 %v1_2097c to i32*
  %v3_2097c = load i32, i32* %v2_2097c, align 4
  %v1_2097f = load i32, i32* %edx.global-to-local, align 4
  %v2_2097f = add i32 %v1_2097f, 28
  %v3_2097f = inttoptr i32 %v2_2097f to i32*
  store i32 %v3_2097c, i32* %v3_2097f, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_2098a = add i32 %arg1, 20
  %v2_2098a = inttoptr i32 %v1_2098a to i32*
  %v3_2098a = load i32, i32* %v2_2098a, align 4
  store i32 %v3_2098a, i32* %edi.global-to-local, align 4
  %v1_2098d = add i32 %arg1, 12
  store i32 %v1_2098d, i32* @edx, align 4
  %v1_20990 = inttoptr i32 %tmp8 to i32*
  %v2_20990 = load i32, i32* %v1_20990, align 4
  store i32 %v2_20990, i32* @esi, align 4
  %v12_20996 = icmp eq i32 %v3_2098a, %v1_2098d
  br i1 %v12_20996, label %bb, label %dec_label_pc_2099a

bb:                                               ; preds = %dec_label_pc_20971
  %v2_20998 = call i32 @function_209f0(i32 %v1_2098d)
  store i32 %v2_20998, i32* @eax, align 8
  br label %dec_label_pc_2099a

dec_label_pc_2099a:                               ; preds = %bb, %dec_label_pc_20971
  %v4_209a0 = load i32, i32* %ebp.global-to-local, align 4
  %v15_209a0 = icmp eq i32 %tmp5, %v4_209a0
  br i1 %v15_209a0, label %bb11, label %dec_label_pc_209aa

bb11:                                             ; preds = %dec_label_pc_2099a
  %v1_209a4 = call i32 @function_20a9c()
  store i32 %v1_209a4, i32* @eax, align 8
  %v1_209ae.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_209aa

dec_label_pc_209aa:                               ; preds = %bb11, %dec_label_pc_2099a
  %v1_209ae = phi i32 [ %v1_209ae.pre, %bb11 ], [ %v4_209a0, %dec_label_pc_2099a ]
  %v0_209aa = load i32, i32* %edi.global-to-local, align 4
  %v15_209aa = icmp eq i32 %v0_209aa, %v1_2098d
  %v0_209ae = load i32, i32* @esi, align 4
  %v2_209ae = add i32 %v1_209ae, 28
  %v3_209ae = inttoptr i32 %v2_209ae to i32*
  store i32 %v0_209ae, i32* %v3_209ae, align 4
  br i1 %v15_209aa, label %dec_label_pc_209ba, label %dec_label_pc_209b7

dec_label_pc_209b7:                               ; preds = %dec_label_pc_209aa
  br label %dec_label_pc_209ba

dec_label_pc_209ba:                               ; preds = %dec_label_pc_209b7, %dec_label_pc_209aa
  %v3_209ba = load i32, i32* @eax, align 8
  ret i32 %v3_209ba

; uselistorder directives
  uselistorder i32 %v4_209a0, { 1, 0 }
  uselistorder i32 %v1_2098d, { 0, 2, 1, 3 }
  uselistorder i32 %v3_2096a, { 1, 2, 0 }
  uselistorder i32 %v3_20952, { 1, 2, 0 }
  uselistorder i32 %v11_20935, { 1, 0 }
  uselistorder i32 %tmp8, { 0, 3, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_20968, { 1, 0 }
  uselistorder label %dec_label_pc_20950, { 1, 0 }
}

define i32 @function_209c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_209c2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_209c2 = load i32, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v15_209c8 = icmp eq i32 %v0_209c2, %arg1
  br i1 %v15_209c8, label %dec_label_pc_209dc.preheader, label %dec_label_pc_209ce

dec_label_pc_209ce:                               ; preds = %dec_label_pc_209c2
  %v1_209ce = add i32 %v0_209c2, 28
  %v2_209ce = inttoptr i32 %v1_209ce to i32*
  %v3_209ce = load i32, i32* %v2_209ce, align 4
  store i32 %v3_209ce, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_209dc.preheader

dec_label_pc_209dc.preheader:                     ; preds = %dec_label_pc_209c2, %dec_label_pc_209ce
  %v0_209ec = phi i32 [ %arg2, %dec_label_pc_209c2 ], [ %v3_209ce, %dec_label_pc_209ce ]
  %v0_209dc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_209dc102 = icmp eq i32 %v0_209dc.pre, %v0_209ec
  %v1_209de103 = icmp eq i1 %v12_209dc102, false
  br i1 %v1_209de103, label %dec_label_pc_209d8.lr.ph, label %dec_label_pc_209e0

dec_label_pc_209d8.lr.ph:                         ; preds = %dec_label_pc_209dc.preheader
  %v0_209da.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_209d8

dec_label_pc_209d8:                               ; preds = %dec_label_pc_209d8.lr.ph, %dec_label_pc_209d8
  %v0_209da = phi i32 [ %v0_209da.pre, %dec_label_pc_209d8.lr.ph ], [ %v2_209da, %dec_label_pc_209d8 ]
  %v0_209d8104 = phi i32 [ %v0_209dc.pre, %dec_label_pc_209d8.lr.ph ], [ %v2_209d8, %dec_label_pc_209d8 ]
  %v1_209d8 = inttoptr i32 %v0_209d8104 to i32*
  %v2_209d8 = load i32, i32* %v1_209d8, align 4
  store i32 %v2_209d8, i32* %ebx.global-to-local, align 4
  %v1_209da = inttoptr i32 %v0_209da to i32*
  %v2_209da = load i32, i32* %v1_209da, align 4
  store i32 %v2_209da, i32* %esi.global-to-local, align 4
  %v12_209dc = icmp eq i32 %v2_209d8, %v0_209ec
  %v1_209de = icmp eq i1 %v12_209dc, false
  br i1 %v1_209de, label %dec_label_pc_209d8, label %dec_label_pc_209e0

dec_label_pc_209e0:                               ; preds = %dec_label_pc_209d8, %dec_label_pc_209dc.preheader
  ret i32 %v0_209ec

; uselistorder directives
  uselistorder i32 %v2_209da, { 1, 0 }
  uselistorder i32 %v2_209d8, { 0, 2, 1 }
  uselistorder i32 %v0_209ec, { 2, 1, 0 }
  uselistorder i32 %v0_209c2, { 1, 0 }
  uselistorder label %dec_label_pc_209d8, { 1, 0 }
  uselistorder label %dec_label_pc_209dc.preheader, { 1, 0 }
}

define i32 @function_209f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_209f0:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_209f8 = add i32 %tmp2, 4
  %v2_209f8 = inttoptr i32 %v1_209f8 to i32*
  store i32 0, i32* %v2_209f8, align 4
  %v0_209ff = load i32, i32* %eax.global-to-local, align 8
  %v1_209ff = load i32, i32* @edx, align 4
  %v2_209ff = inttoptr i32 %v1_209ff to i32*
  store i32 %v0_209ff, i32* %v2_209ff, align 4
  %v2_20a01 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_20a01
}

define i32 @function_20a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a00:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20a0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_20a0c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_20a0c = load i32, i32* %ebx.global-to-local, align 4
  %v1_20a0c = add i32 %v0_20a0c, -1960565676
  %v2_20a0c = inttoptr i32 %v1_20a0c to i32*
  %v3_20a0c = load i32, i32* %v2_20a0c, align 4
  %v4_20a0c = sub i32 %v3_20a0c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_20a0c, i32* %v2_20a0c, align 4
  %v0_20a13 = load i32, i32* %eax.global-to-local, align 8
  %v11_20a13 = and i32 %v0_20a13, -216
  store i32 %v11_20a13, i32* %eax.global-to-local, align 8
  %v1_20a15 = or i32 %v11_20a13, 4
  %v2_20a15 = inttoptr i32 %v1_20a15 to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_20a15, align 4
  %v0_20a1c = load i32, i32* %eax.global-to-local, align 8
  %v1_20a1c = add i32 %v0_20a1c, 8
  %v2_20a1c = inttoptr i32 %v1_20a1c to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_20a1c, align 4
  %v0_20a23 = load i32, i32* %edx.global-to-local, align 4
  %v1_20a23 = load i32, i32* %eax.global-to-local, align 8
  %v2_20a23 = add i32 %v1_20a23, 12
  %v3_20a23 = inttoptr i32 %v2_20a23 to i32*
  store i32 %v0_20a23, i32* %v3_20a23, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_20a2a = load i32, i32* %eax.global-to-local, align 8
  %v1_20a2a = inttoptr i32 %v0_20a2a to i32*
  store i32 ptrtoint (%vtable_31548_type* @global_var_31548.2742 to i32), i32* %v1_20a2a, align 4
  %v0_20a30 = load i32, i32* %eax.global-to-local, align 8
  %v1_20a30 = load i32, i32* %ecx.global-to-local, align 4
  %v2_20a30 = add i32 %v1_20a30, 4
  %v3_20a30 = inttoptr i32 %v2_20a30 to i32*
  store i32 %v0_20a30, i32* %v3_20a30, align 4
  %v0_20a33 = load i32, i32* %edx.global-to-local, align 4
  %v1_20a33 = add i32 %v0_20a33, 8
  %v2_20a33 = inttoptr i32 %v1_20a33 to i32*
  %v3_20a33 = load i32, i32* %v2_20a33, align 4
  store i32 %v3_20a33, i32* %eax.global-to-local, align 8
  %v1_20a36 = load i32, i32* %ecx.global-to-local, align 4
  %v2_20a36 = add i32 %v1_20a36, 8
  %v3_20a36 = inttoptr i32 %v2_20a36 to i32*
  store i32 %v3_20a33, i32* %v3_20a36, align 4
  %v0_20a39 = load i32, i32* %edx.global-to-local, align 4
  %v1_20a39 = add i32 %v0_20a39, 12
  %v2_20a39 = inttoptr i32 %v1_20a39 to i32*
  %v3_20a39 = load i32, i32* %v2_20a39, align 4
  store i32 %v3_20a39, i32* @eax, align 8
  %v1_20a3c = icmp eq i32 %v3_20a39, 0
  %v1_20a3e = load i32, i32* %ecx.global-to-local, align 4
  %v2_20a3e = add i32 %v1_20a3e, 12
  %v3_20a3e = inttoptr i32 %v2_20a3e to i32*
  store i32 %v3_20a39, i32* %v3_20a3e, align 4
  br i1 %v1_20a3c, label %dec_label_pc_20a47, label %dec_label_pc_20a43

dec_label_pc_20a43:                               ; preds = %dec_label_pc_20a0c
  %v0_20a43 = load i32, i32* @eax, align 8
  %v1_20a43 = add i32 %v0_20a43, 4
  %v2_20a43 = inttoptr i32 %v1_20a43 to i32*
  %v3_20a43 = load i32, i32* %v2_20a43, align 4
  %v4_20a43 = add i32 %v3_20a43, 1
  store i32 %v4_20a43, i32* %v2_20a43, align 4
  br label %dec_label_pc_20a47

dec_label_pc_20a47:                               ; preds = %dec_label_pc_20a43, %dec_label_pc_20a0c
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_20a4b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20a4b = xor i32 %v1_20a4b, %arg2
  %v3_20a4b = icmp eq i32 %v2_20a4b, 0
  store i32 %v2_20a4b, i32* %edx.global-to-local, align 4
  %v1_20a52 = icmp eq i1 %v3_20a4b, false
  br i1 %v1_20a52, label %bb, label %dec_label_pc_20a47.dec_label_pc_20a54_crit_edge

dec_label_pc_20a47.dec_label_pc_20a54_crit_edge:  ; preds = %dec_label_pc_20a47
  %v0_20a5b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_20a54

bb:                                               ; preds = %dec_label_pc_20a47
  %v2_20a52 = call i32 @function_20a7e()
  store i32 %v2_20a52, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20a54

dec_label_pc_20a54:                               ; preds = %dec_label_pc_20a47.dec_label_pc_20a54_crit_edge, %bb
  %v0_20a5b = phi i32 [ %v0_20a5b.pre, %dec_label_pc_20a47.dec_label_pc_20a54_crit_edge ], [ %v2_20a52, %bb ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_20a5b

; uselistorder directives
  uselistorder i32 %v11_20a13, { 1, 0 }
  uselistorder label %dec_label_pc_20a54, { 1, 0 }
}

define i32 @function_20a5d() local_unnamed_addr {
dec_label_pc_20a5d:
  %eax.global-to-local = alloca i32, align 4
  %v0_20a5d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20a5d
}

define i32 @function_20a6a() local_unnamed_addr {
dec_label_pc_20a6a:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_20a7e() local_unnamed_addr {
dec_label_pc_20a7e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20a9c() local_unnamed_addr {
dec_label_pc_20a9c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v7_20ac9 = call i32 @unknown_3ef50(i32 %tmp, i32 ptrtoint ([51 x i8]* @global_var_dd74.2726 to i32), i32 80, i32 ptrtoint ([917 x i8]* @global_var_30680.2743 to i32))
  %v0_20ace = call i32 @function_20a6a()
  ret i32 %v0_20ace
}

define i32 @function_20ad1() local_unnamed_addr {
dec_label_pc_20ad1:
  %eax.global-to-local = alloca i32, align 4
  %v0_20ad1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20ad1
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ae0:
  %eax.global-to-local = alloca i32, align 4
  %v4_20ae7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_20ae7
}

define i32 @function_20b2e() local_unnamed_addr {
dec_label_pc_20b2e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20b39(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20b39:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_20b39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20b39 = add i32 %v0_20b39, 1697391684
  %v2_20b39 = inttoptr i32 %v1_20b39 to i32*
  %v3_20b39 = load i32, i32* %v2_20b39, align 4
  %v4_20b39 = add i32 %v3_20b39, -1
  store i32 %v4_20b39, i32* %v2_20b39, align 4
  %v0_20b3f = load i32, i32* %eax.global-to-local, align 8
  %v1_20b3f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20b3f = xor i32 %v1_20b3f, %v0_20b3f
  %v3_20b3f = icmp eq i32 %v2_20b3f, 0
  store i32 %v2_20b3f, i32* @eax, align 8
  %v1_20b45 = icmp eq i1 %v3_20b3f, false
  br i1 %v1_20b45, label %bb, label %dec_label_pc_20b4b

bb:                                               ; preds = %dec_label_pc_20b39
  %v2_20b45 = call i32 @function_20c35()
  store i32 %v2_20b45, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20b4b

dec_label_pc_20b4b:                               ; preds = %bb, %dec_label_pc_20b39
  %v0_20b5e = phi i32 [ %v2_20b45, %bb ], [ %v2_20b3f, %dec_label_pc_20b39 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_20b5e
}

define i32 @function_20b90(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b90:
  %v0_20b90 = load i32, i32* @ebp, align 4
  %v1_20b90 = add i32 %v0_20b90, 990409965
  %v2_20b90 = inttoptr i32 %v1_20b90 to i8*
  %v3_20b90 = load i8, i8* %v2_20b90, align 1
  %v4_20b90 = load i32, i32* @eax, align 8
  %v5_20b90 = trunc i32 %v4_20b90 to i8
  %v6_20b90 = add i8 %v5_20b90, %v3_20b90
  store i8 %v6_20b90, i8* %v2_20b90, align 1
  %v0_20b9e = load i32, i32* @edx, align 4
  %v1_20b9e = trunc i32 %v0_20b9e to i16
  %v2_20b9e = call i8 @__asm_insb(i16 %v1_20b9e)
  %v3_20b9e = load i32, i32* @edi, align 4
  %v4_20b9e = inttoptr i32 %v3_20b9e to i8*
  store i8 %v2_20b9e, i8* %v4_20b9e, align 1
  %v0_20b9f = load i32, i32* @eax, align 8
  %v11_20b9f = and i32 %v0_20b9f, -228
  ret i32 %v11_20b9f

; uselistorder directives
  uselistorder i8 (i16)* @__asm_insb, { 3, 0, 1, 2, 4, 5 }
}

define i32 @function_20bb4() local_unnamed_addr {
dec_label_pc_20bb4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_40 = alloca i32, align 4
  %stack_var_32 = alloca i32, align 4
  %v0_20bb4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20bb4 = add i32 %v0_20bb4, -954457004
  %v2_20bb4 = inttoptr i32 %v1_20bb4 to i32*
  %v3_20bb4 = load i32, i32* %v2_20bb4, align 4
  %v4_20bb4 = sub i32 %v3_20bb4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_20bb4, i32* %v2_20bb4, align 4
  %v0_20bba = load i32, i32* %eax.global-to-local, align 8
  %v1_20bba = add i32 %v0_20bba, 21
  %v2_20bba = inttoptr i32 %v1_20bba to i8*
  %v3_20bba = load i8, i8* %v2_20bba, align 1
  %v4_20bba = load i32, i32* %ecx.global-to-local, align 4
  %v5_20bba = udiv i32 %v4_20bba, 256
  %v6_20bba = trunc i32 %v5_20bba to i8
  %v7_20bba = add i8 %v6_20bba, %v3_20bba
  store i8 %v7_20bba, i8* %v2_20bba, align 1
  %v0_20bbd = load i32, i32* %eax.global-to-local, align 8
  %v4_20bbd = mul i32 %v0_20bbd, 2
  store i32 %v4_20bbd, i32* %eax.global-to-local, align 8
  %v1_20bbf = add i32 %v4_20bbd, 4
  %v2_20bbf = inttoptr i32 %v1_20bbf to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_20bbf, align 4
  %v0_20bc6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_20bc6 = load i32, i32* %eax.global-to-local, align 8
  %v2_20bc6 = add i32 %v1_20bc6, 12
  %v3_20bc6 = inttoptr i32 %v2_20bc6 to i32*
  store i32 %v0_20bc6, i32* %v3_20bc6, align 4
  %v2_20bc9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_20bc9, i32* %ecx.global-to-local, align 4
  %v0_20bcb = load i32, i32* %eax.global-to-local, align 8
  %v1_20bcb = add i32 %v0_20bcb, 8
  %v2_20bcb = inttoptr i32 %v1_20bcb to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_20bcb, align 4
  %v0_20bd2 = load i32, i32* %edx.global-to-local, align 4
  %v1_20bd2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_20bd2 = inttoptr i32 %v1_20bd2 to i32*
  store i32 %v0_20bd2, i32* %v2_20bd2, align 4
  %v0_20bd4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20bd4 = add i32 %v0_20bd4, 4
  %v2_20bd4 = inttoptr i32 %v1_20bd4 to i32*
  %v3_20bd4 = load i32, i32* %v2_20bd4, align 4
  store i32 %v3_20bd4, i32* %edx.global-to-local, align 4
  %v0_20bd7 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_20bd7, i32* %v2_20bd4, align 4
  %v2_20bda = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_20bda, i32* @eax, align 8
  %v0_20be5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_20be5, i32* %stack_var_32, align 4
  %v1_20be9 = call i32 @function_31020(i32 %v2_20bda)
  %v2_20bee = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_20bee, i32* %eax.global-to-local, align 8
  %v1_20bf0 = icmp eq i32 %v2_20bee, 0
  br i1 %v1_20bf0, label %dec_label_pc_20c2a, label %dec_label_pc_20bfa

dec_label_pc_20bfa:                               ; preds = %dec_label_pc_20bb4
  store i32 %v2_20bee, i32* %stack_var_40, align 4
  %v2_20c13 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_20c13, i32* %eax.global-to-local, align 8
  %v4_20c1b = call i32 @unknown_40c70(i32 %v2_20bee, i32 0, i32 %v2_20c13, i32 0)
  store i32 %v4_20c1b, i32* @eax, align 8
  %v0_20c20 = call i32 @function_20b2e()
  store i32 %v0_20c20, i32* %eax.global-to-local, align 8
  ret i32 %v0_20c20

dec_label_pc_20c2a:                               ; preds = %dec_label_pc_20bb4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_20bee, { 1, 0, 2, 3 }
  uselistorder i32 %v4_20bbd, { 1, 0 }
  uselistorder i32 21, { 1, 0 }
}

define i32 @function_20c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c30:
  %v0_20c30 = call i32 @function_2ecf2()
  ret i32 %v0_20c30
}

define i32 @function_20c32() local_unnamed_addr {
dec_label_pc_20c32:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20c35() local_unnamed_addr {
dec_label_pc_20c35:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20c74() local_unnamed_addr {
dec_label_pc_20c74:
  %eax.global-to-local = alloca i32, align 4
  %v0_20c74 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20c74
}

define i32 @function_20c75() local_unnamed_addr {
dec_label_pc_20c75:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20c8a() local_unnamed_addr {
dec_label_pc_20c8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_20c8a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20c8a
}

define i32 @function_20c93() local_unnamed_addr {
dec_label_pc_20c93:
  %v0_20c93 = call i32 @function_20c75()
  ret i32 %v0_20c93
}

define i32 @function_20c95() local_unnamed_addr {
dec_label_pc_20c95:
  %v0_20ca0 = call i32 @function_20c75()
  ret i32 %v0_20ca0

; uselistorder directives
  uselistorder i32 ()* @function_20c75, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE10_M_insert_EPKSt18_Rb_tree_node_baseSW_RKSL_() local_unnamed_addr {
dec_label_pc_20cb0:
  %v0_20cb8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_20cb8
}

define i32 @function_20cc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_20cc0:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v1_20ce0 = icmp eq i32 %tmp12, 0
  %v1_20ce2 = add i32 %tmp10, 4
  store i32 %v1_20ce2, i32* @ecx, align 4
  br i1 %v1_20ce0, label %bb, label %dec_label_pc_20cf7

bb:                                               ; preds = %dec_label_pc_20cc0
  %v2_20cf1 = call i32 @function_20d80(i32 %v1_20ce2)
  br label %dec_label_pc_20cf7

dec_label_pc_20cf7:                               ; preds = %bb, %dec_label_pc_20cc0
  %v2_20cfb = phi i32 [ %v2_20cf1, %bb ], [ %tmp12, %dec_label_pc_20cc0 ]
  ret i32 %v2_20cfb
}

define i32 @function_20d50(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d50:
  %v0_20d51 = load i32, i32* @eax, align 8
  %v2_20d51 = load i1, i1* @cf, align 1
  %v3_20d51 = zext i1 %v2_20d51 to i32
  %v4_20d51 = add i32 %v0_20d51, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_20d51 = add i32 %v4_20d51, %v3_20d51
  %v25_20d51 = urem i32 %v5_20d51, 256
  %v27_20d51 = and i32 %v0_20d51, -256
  %v28_20d51 = or i32 %v25_20d51, %v27_20d51
  %v1_20d57 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20d57 = icmp eq i32 %v1_20d57, %arg1
  %v1_20d5e = load i32, i32* @edi, align 4
  %v2_20d5e = inttoptr i32 %v1_20d5e to i32*
  store i32 %v28_20d51, i32* %v2_20d5e, align 4
  %v0_20d60 = load i32, i32* @edi, align 4
  store i32 %v0_20d60, i32* @eax, align 8
  %v1_20d62 = icmp eq i1 %v3_20d57, false
  br i1 %v1_20d62, label %bb, label %dec_label_pc_20d64

bb:                                               ; preds = %dec_label_pc_20d50
  %v2_20d62 = call i32 @function_20d9a()
  br label %dec_label_pc_20d64

dec_label_pc_20d64:                               ; preds = %bb, %dec_label_pc_20d50
  %v0_20d77 = phi i32 [ %v2_20d62, %bb ], [ %v0_20d60, %dec_label_pc_20d50 ]
  %v0_20d74 = load i32, i32* @esp, align 4
  %v5_20d74 = icmp ugt i32 %v0_20d74, -77
  store i1 %v5_20d74, i1* @cf, align 1
  ret i32 %v0_20d77

; uselistorder directives
  uselistorder i32 %v0_20d51, { 1, 0 }
  uselistorder i1* @cf, { 8, 9, 12, 13, 10, 11, 2, 4, 3, 5, 6, 7, 0, 1 }
}

define i32 @function_20d80(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d80:
  %v0_20d80 = load i32, i32* @ebp, align 4
  %v1_20d88 = add i32 %v0_20d80, 16
  store i32 %v1_20d88, i32* @edx, align 4
  %v0_20d8b = load i32, i32* @esi, align 4
  store i32 %v0_20d8b, i32* @eax, align 8
  %v2_20d8d = call i32 @function_21090(i8 ptrtoint (i32* @1 to i8))
  ret i32 %v2_20d8d

; uselistorder directives
  uselistorder i32 (i8)* @function_21090, { 1, 0 }
}

define i32 @function_20d9a() local_unnamed_addr {
dec_label_pc_20d9a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE16_M_insert_uniqueERKSL_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20da0:
  store i32 %arg2, i32* @eax, align 8
  %v1_20dc0 = add i32 %arg2, 8
  %v2_20dc0 = inttoptr i32 %v1_20dc0 to i32*
  %v3_20dc0 = load i32, i32* %v2_20dc0, align 4
  %v1_20dc7 = icmp eq i32 %v3_20dc0, 0
  %v1_20dc9 = icmp eq i1 %v1_20dc7, false
  br i1 %v1_20dc9, label %dec_label_pc_20dd9, label %dec_label_pc_20dcb

dec_label_pc_20dcb:                               ; preds = %dec_label_pc_20da0
  %v1_20dcb = call i32 @function_20e7b(i32 %arg2)
  ret i32 %v1_20dcb

dec_label_pc_20dd9:                               ; preds = %dec_label_pc_20da0
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_20de0(i32 %arg1) local_unnamed_addr {
dec_label_pc_20de0:
  %eax.global-to-local = alloca i32, align 4
  %v0_20de0 = load i32, i32* @eax, align 8
  %v4_20de0 = mul i32 %v0_20de0, 2
  %v16_20de0 = trunc i32 %v4_20de0 to i8
  store i32 %v4_20de0, i32* %eax.global-to-local, align 8
  %v2_20de2 = mul i32 %v0_20de0, 16
  %v3_20de2 = add i32 %v4_20de0, 1468787061
  %v4_20de2 = add i32 %v3_20de2, %v2_20de2
  %v5_20de2 = inttoptr i32 %v4_20de2 to i8*
  %v6_20de2 = load i8, i8* %v5_20de2, align 1
  %v9_20de2 = add i8 %v6_20de2, %v16_20de0
  store i8 %v9_20de2, i8* %v5_20de2, align 1
  %v0_20de9 = load i32, i32* %eax.global-to-local, align 8
  %v11_20de9 = or i32 %v0_20de9, 133
  store i32 %v11_20de9, i32* %eax.global-to-local, align 8
  %v4_20deb = load i32, i32* @ecx, align 4
  %v5_20deb = trunc i32 %v4_20deb to i8
  %v6_20deb = and i8 %v5_20deb, ptrtoint (i64* @global_var_1f.2426 to i8)
  %v8_20deb = icmp eq i8 %v6_20deb, 0
  br i1 %v8_20deb, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_20de0
  %v0_20dee.pre = load i32, i32* %eax.global-to-local, align 8
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_20de0, %bb
  %v0_20dee = phi i32 [ %v11_20de9, %dec_label_pc_20de0 ], [ %v0_20dee.pre, %bb ]
  %v4_20dee = trunc i32 %v0_20dee to i8
  %v5_20dee = icmp eq i8 %v4_20dee, 0
  br i1 %v5_20dee, label %bb6, label %dec_label_pc_20df2

bb6:                                              ; preds = %bb5
  %v1_20df0 = call i32 @function_20e38()
  store i32 %v1_20df0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20df2

dec_label_pc_20df2:                               ; preds = %bb6, %bb5
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v0_20df6 = load i32, i32* @edi, align 4
  %v2_20df6 = add i32 %arg1, 12
  %v3_20df6 = inttoptr i32 %v2_20df6 to i32*
  %v4_20df6 = load i32, i32* %v3_20df6, align 4
  %v15_20df6 = icmp eq i32 %v0_20df6, %v4_20df6
  br i1 %v15_20df6, label %bb7, label %dec_label_pc_20dfb

bb7:                                              ; preds = %dec_label_pc_20df2
  %v1_20df9 = call i32 @function_20e48()
  store i32 %v1_20df9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20dfb

dec_label_pc_20dfb:                               ; preds = %bb7, %dec_label_pc_20df2
  %v3_20dfb = phi i32 [ %v1_20df9, %bb7 ], [ %arg1, %dec_label_pc_20df2 ]
  ret i32 %v3_20dfb

; uselistorder directives
  uselistorder i32 %v11_20de9, { 1, 0 }
  uselistorder i32 %v4_20de0, { 2, 0, 1 }
  uselistorder i32 %v0_20de0, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i8 ptrtoint (i64* @global_var_1f.2426 to i8), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_20e13() local_unnamed_addr {
dec_label_pc_20e13:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_20e19() local_unnamed_addr {
dec_label_pc_20e19:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_20e1d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20e1d = icmp eq i32 %v1_20e1d, %tmp10
  %v0_20e24 = load i32, i32* @esi, align 4
  store i32 %v0_20e24, i32* @eax, align 8
  %v1_20e26 = icmp eq i1 %v3_20e1d, false
  br i1 %v1_20e26, label %bb, label %dec_label_pc_20e28

bb:                                               ; preds = %dec_label_pc_20e19
  %v2_20e26 = call i32 @function_20e85()
  br label %dec_label_pc_20e28

dec_label_pc_20e28:                               ; preds = %bb, %dec_label_pc_20e19
  %v0_20e2f = phi i32 [ %v2_20e26, %bb ], [ %v0_20e24, %dec_label_pc_20e19 ]
  ret i32 %v0_20e2f
}

define i32 @function_20e38() local_unnamed_addr {
dec_label_pc_20e38:
  %v0_20e38 = load i32, i32* @edi, align 4
  store i32 %v0_20e38, i32* @ebp, align 4
  %v1_20e3c = add i32 %v0_20e38, 16
  ret i32 %v1_20e3c
}

define i32 @function_20e48() local_unnamed_addr {
dec_label_pc_20e48:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v2_20e4c = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_20e4c, i32* %eax.global-to-local, align 8
  %v0_20e53 = load i32, i32* @ebx, align 4
  %v0_20e57 = load i32, i32* @edi, align 4
  %v5_20e67 = call i32 @unknown_41a50(i32 %v2_20e4c, i32 %tmp7, i32 0, i32 %v0_20e57, i32 %v0_20e53)
  %v0_20e73 = load i32, i32* @esi, align 4
  %v1_20e73 = add i32 %v0_20e73, 4
  %v2_20e73 = inttoptr i32 %v1_20e73 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_20e73, align 1
  %v0_20e77 = load i32, i32* %eax.global-to-local, align 8
  %v1_20e77 = load i32, i32* @esi, align 4
  %v2_20e77 = inttoptr i32 %v1_20e77 to i32*
  store i32 %v0_20e77, i32* %v2_20e77, align 4
  %v0_20e79 = call i32 @function_20e19()
  store i32 %v0_20e79, i32* %eax.global-to-local, align 8
  ret i32 %v0_20e79
}

define i32 @function_20e7b(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e7b:
  %v0_20e7b = load i32, i32* @eax, align 8
  ret i32 %v0_20e7b
}

define i32 @function_20e85() local_unnamed_addr {
dec_label_pc_20e85:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISL_ERKSL_(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_20e90:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_20ea3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_20eb7 = add i32 %arg2, 4
  %v12_20eba = icmp eq i32 %v1_20eb7, %arg3
  %v4_20ec0 = sext i8 %arg4 to i32
  store i32 %v4_20ec0, i32* @ebp, align 4
  br i1 %v12_20eba, label %bb, label %dec_label_pc_20eca

bb:                                               ; preds = %dec_label_pc_20e90
  %v2_20ec4 = call i32 @function_20fd0(i32 %v0_20ea3)
  %v0_20eca.pre = load i32, i32* @ebx, align 4
  %v0_20ed3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_20eca

dec_label_pc_20eca:                               ; preds = %bb, %dec_label_pc_20e90
  %v0_20ed3 = phi i32 [ %v0_20ed3.pre, %bb ], [ %v4_20ec0, %dec_label_pc_20e90 ]
  %v0_20eca = phi i32 [ %v0_20eca.pre, %bb ], [ %arg3, %dec_label_pc_20e90 ]
  %v4_20eda = trunc i32 %v0_20ed3 to i8
  %v5_20eda = icmp eq i8 %v4_20eda, 0
  br i1 %v5_20eda, label %bb114, label %dec_label_pc_20ee2

bb114:                                            ; preds = %dec_label_pc_20eca
  %v1_20eca = add i32 %v0_20eca, 16
  %v2_20edc = trunc i32 %v1_20eca to i8
  %v3_20edc = call i32 @function_20f60(i8 %v2_20edc)
  %v1_20ee5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_20ee2

dec_label_pc_20ee2:                               ; preds = %bb114, %dec_label_pc_20eca
  %v1_20ee5 = phi i32 [ %v1_20ee5.pre, %bb114 ], [ %v0_20eca, %dec_label_pc_20eca ]
  %v0_20ee2 = load i32, i32* @edi, align 4
  %v1_20ee2 = add i32 %v0_20ee2, 12
  %v2_20ee2 = inttoptr i32 %v1_20ee2 to i32*
  %v3_20ee2 = load i32, i32* %v2_20ee2, align 4
  store i32 %v3_20ee2, i32* @eax, align 8
  %v12_20ee5 = icmp eq i32 %v3_20ee2, %v1_20ee5
  br i1 %v12_20ee5, label %bb115, label %dec_label_pc_20eed

bb115:                                            ; preds = %dec_label_pc_20ee2
  %v1_20ee7 = call i32 @function_21048()
  br label %dec_label_pc_20eed

dec_label_pc_20eed:                               ; preds = %bb115, %dec_label_pc_20ee2
  %v3_20eed = phi i32 [ %v1_20ee7, %bb115 ], [ %v3_20ee2, %dec_label_pc_20ee2 ]
  ret i32 %v3_20eed

; uselistorder directives
  uselistorder i32 %v3_20ee2, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_20ef6() local_unnamed_addr {
dec_label_pc_20ef6:
  %v0_20ef6 = call i32 @function_408dc189()
  ret i32 %v0_20ef6
}

define i32 @function_20f10() local_unnamed_addr {
dec_label_pc_20f10:
  %v0_20f10 = load i32, i32* @ebx, align 4
  %v1_20f10 = add i32 %v0_20f10, 1820920897
  %v2_20f10 = inttoptr i32 %v1_20f10 to i8*
  %v3_20f10 = load i8, i8* %v2_20f10, align 1
  %v4_20f10 = load i32, i32* @ecx, align 4
  %v5_20f10 = trunc i32 %v4_20f10 to i8
  %v6_20f10 = add i8 %v5_20f10, %v3_20f10
  store i8 %v6_20f10, i8* %v2_20f10, align 1
  %v0_20f16 = load i32, i32* @eax, align 8
  %v11_20f16 = and i32 %v0_20f16, -240
  store i32 %v11_20f16, i32* @eax, align 8
  %v1_20f18 = icmp eq i32 %v11_20f16, 0
  br i1 %v1_20f18, label %bb, label %dec_label_pc_20f20

bb:                                               ; preds = %dec_label_pc_20f10
  %v1_20f1a = call i32 @function_21028()
  br label %dec_label_pc_20f20

dec_label_pc_20f20:                               ; preds = %bb, %dec_label_pc_20f10
  %v0_20f24 = load i32, i32* @ebx, align 4
  %v0_20f28 = load i32, i32* @edi, align 4
  %v0_20f2c = load i32, i32* @esi, align 4
  %v3_20f2f = call i32 @unknown_41b40(i32 %v0_20f2c, i32 %v0_20f28, i32 %v0_20f24)
  ret i32 %v3_20f2f

; uselistorder directives
  uselistorder i32 %v11_20f16, { 1, 0 }
  uselistorder i32 -240, { 3, 0, 4, 1, 5, 6, 2, 7 }
}

define i32 @function_20f37() local_unnamed_addr {
dec_label_pc_20f37:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_20f3b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20f3b = icmp eq i32 %v1_20f3b, %tmp6
  %v0_20f42 = load i32, i32* @esi, align 4
  store i32 %v0_20f42, i32* @eax, align 8
  %v1_20f44 = icmp eq i1 %v3_20f3b, false
  br i1 %v1_20f44, label %bb, label %dec_label_pc_20f4a

bb:                                               ; preds = %dec_label_pc_20f37
  %v2_20f44 = call i32 @function_21078()
  br label %dec_label_pc_20f4a

dec_label_pc_20f4a:                               ; preds = %bb, %dec_label_pc_20f37
  %v0_20f5d = phi i32 [ %v2_20f44, %bb ], [ %v0_20f42, %dec_label_pc_20f37 ]
  ret i32 %v0_20f5d
}

define i32 @function_20f60(i8 %arg1) local_unnamed_addr {
dec_label_pc_20f60:
  %v5_20f6b = icmp eq i8 %arg1, 0
  br i1 %v5_20f6b, label %bb, label %dec_label_pc_20f73

bb:                                               ; preds = %dec_label_pc_20f60
  %v1_20f6d = call i32 @function_21000()
  br label %dec_label_pc_20f73

dec_label_pc_20f73:                               ; preds = %bb, %dec_label_pc_20f60
  %v0_20f73 = load i32, i32* @edi, align 4
  %v1_20f73 = add i32 %v0_20f73, 16
  %v2_20f73 = inttoptr i32 %v1_20f73 to i32*
  %v3_20f73 = load i32, i32* %v2_20f73, align 4
  store i32 %v3_20f73, i32* @eax, align 8
  %v1_20f76 = load i32, i32* @ebx, align 4
  %v12_20f76 = icmp eq i32 %v3_20f73, %v1_20f76
  br i1 %v12_20f76, label %bb4, label %dec_label_pc_20f7e

bb4:                                              ; preds = %dec_label_pc_20f73
  %v1_20f78 = call i32 @function_2106e()
  br label %dec_label_pc_20f7e

dec_label_pc_20f7e:                               ; preds = %bb4, %dec_label_pc_20f73
  %v3_20f7e = phi i32 [ %v1_20f78, %bb4 ], [ %v3_20f73, %dec_label_pc_20f73 ]
  ret i32 %v3_20f7e

; uselistorder directives
  uselistorder i32 %v3_20f73, { 1, 0, 2 }
}

define i32 @function_20f85() local_unnamed_addr {
dec_label_pc_20f85:
  %ecx.global-to-local = alloca i32, align 4
  %v0_20f85 = load i32, i32* %ecx.global-to-local, align 4
  %v1_20f85 = add i32 %v0_20f85, 273714625
  %v2_20f85 = inttoptr i32 %v1_20f85 to i32*
  %v3_20f85 = load i32, i32* %v2_20f85, align 4
  %v4_20f85 = add i32 %v3_20f85, -1
  store i32 %v4_20f85, i32* %v2_20f85, align 4
  %v0_20f8d = load i32, i32* %ecx.global-to-local, align 4
  %v0_20f9e = load i32, i32* @ebx, align 4
  %v1_20f9e = add i32 %v0_20f9e, 12
  %v2_20f9e = inttoptr i32 %v1_20f9e to i32*
  %v3_20f9e = load i32, i32* %v2_20f9e, align 4
  %v1_20fa5 = icmp eq i32 %v3_20f9e, 0
  br i1 %v1_20fa5, label %bb, label %dec_label_pc_20fad

bb:                                               ; preds = %dec_label_pc_20f85
  %v2_20fa7 = call i32 @function_21068(i32 %v0_20f8d)
  %v0_20fb1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_20fad

dec_label_pc_20fad:                               ; preds = %bb, %dec_label_pc_20f85
  %v0_20fb1 = phi i32 [ %v0_20fb1.pre, %bb ], [ %v0_20f8d, %dec_label_pc_20f85 ]
  %v0_20fb5 = load i32, i32* @edi, align 4
  %v0_20fb9 = load i32, i32* @esi, align 4
  %v3_20fbc = call i32 @unknown_41b40(i32 %v0_20fb9, i32 %v0_20fb5, i32 %v0_20fb1)
  %v0_20fc4 = call i32 @function_20f37()
  ret i32 %v0_20fc4
}

define i32 @function_20fd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_20fd0:
  %stack_var_40 = alloca i32, align 4
  %v0_20fd0 = load i32, i32* @edi, align 4
  %v1_20fd0 = add i32 %v0_20fd0, 20
  %v2_20fd0 = inttoptr i32 %v1_20fd0 to i32*
  %v3_20fd0 = load i32, i32* %v2_20fd0, align 4
  %v1_20fd3 = icmp eq i32 %v3_20fd0, 0
  %v1_20fd5 = icmp eq i1 %v1_20fd3, false
  br i1 %v1_20fd5, label %bb, label %dec_label_pc_20fd7

bb:                                               ; preds = %dec_label_pc_20fd0
  %v2_20fd5 = call i32 @function_21008()
  %v0_20fe2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_20fd7

dec_label_pc_20fd7:                               ; preds = %bb, %dec_label_pc_20fd0
  %v0_20fe2 = phi i32 [ %v0_20fe2.pre, %bb ], [ %v0_20fd0, %dec_label_pc_20fd0 ]
  %v2_20fd7 = ptrtoint i32* %stack_var_40 to i32
  %v2_20fe6 = call i32 @unknown_41c30(i32 %v2_20fd7, i32 %v0_20fe2)
  %v1_20ff2 = load i32, i32* @esi, align 4
  %v2_20ff2 = inttoptr i32 %v1_20ff2 to i32*
  store i32 %arg1, i32* %v2_20ff2, align 4
  %v0_20ff4 = call i32 @function_20f37()
  ret i32 %v0_20ff4
}

define i32 @function_21000() local_unnamed_addr {
dec_label_pc_21000:
  %v0_21000 = load i32, i32* @ebx, align 4
  %v1_21000 = load i32, i32* @esi, align 4
  %v2_21000 = inttoptr i32 %v1_21000 to i32*
  store i32 %v0_21000, i32* %v2_21000, align 4
  %v0_21002 = call i32 @function_20f37()
  ret i32 %v0_21002
}

define i32 @function_21008() local_unnamed_addr {
dec_label_pc_21008:
  %v0_21008 = load i32, i32* @edi, align 4
  %v1_21008 = add i32 %v0_21008, 16
  %v2_21008 = inttoptr i32 %v1_21008 to i32*
  %v3_21008 = load i32, i32* %v2_21008, align 4
  %v1_21021 = call i32 @function_2102c(i32 %v3_21008)
  ret i32 %v1_21021
}

define i32 @function_21028() local_unnamed_addr {
dec_label_pc_21028:
  %v4_21028 = load i32, i32* @eax, align 8
  ret i32 %v4_21028
}

define i32 @function_2102c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2102c:
  %v0_21034 = load i32, i32* @edi, align 4
  %v0_21038 = load i32, i32* @esi, align 4
  %v3_2103b = call i32 @unknown_41b40(i32 %v0_21038, i32 %v0_21034, i32 0)
  %v0_21043 = call i32 @function_20f37()
  ret i32 %v0_21043
}

define i32 @function_21048() local_unnamed_addr {
dec_label_pc_21048:
  %v0_21050 = load i32, i32* @eax, align 8
  %v0_21054 = load i32, i32* @edi, align 4
  %v0_21058 = load i32, i32* @esi, align 4
  %v3_2105b = call i32 @unknown_41b40(i32 %v0_21058, i32 %v0_21054, i32 %v0_21050)
  %v0_21063 = call i32 @function_20f37()
  ret i32 %v0_21063

; uselistorder directives
  uselistorder i32 ()* @function_20f37, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_41b40, { 1, 0, 3, 2 }
}

define i32 @function_21068(i32 %arg1) local_unnamed_addr {
dec_label_pc_21068:
  %v0_21068 = load i32, i32* @ebx, align 4
  %v1_2106c = call i32 @function_2102c(i32 %v0_21068)
  ret i32 %v1_2106c
}

define i32 @function_2106e() local_unnamed_addr {
dec_label_pc_2106e:
  %v0_21072 = load i32, i32* @eax, align 8
  %v1_21076 = call i32 @function_2102c(i32 %v0_21072)
  ret i32 %v1_21076

; uselistorder directives
  uselistorder i32 (i32)* @function_2102c, { 1, 2, 0 }
}

define i32 @function_21078() local_unnamed_addr {
dec_label_pc_21078:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_21080:
  ret i32 %arg1
}

define i32 @function_21090(i8 %arg1) local_unnamed_addr {
dec_label_pc_21090:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_84 = alloca i32, align 4
  %stack_var_91 = alloca i32, align 4
  %v0_21090 = load i32, i32* @eax, align 8
  %v1_21090 = trunc i32 %v0_21090 to i8
  %v2_21090 = and i8 %v1_21090, -100
  %v8_21090 = zext i8 %v2_21090 to i32
  %v10_21090 = and i32 %v0_21090, -256
  %v11_21090 = or i32 %v8_21090, %v10_21090
  store i32 %v11_21090, i32* %eax.global-to-local, align 8
  %v1_21092 = inttoptr i32 %v11_21090 to i8*
  %v2_21092 = load i8, i8* %v1_21092, align 4
  %v5_21092 = add i8 %v2_21092, %v2_21090
  store i8 %v5_21092, i8* %v1_21092, align 4
  %v0_21094 = load i32, i32* @ebx, align 4
  %v1_21094 = add i32 %v0_21094, 9970836
  %v2_21094 = inttoptr i32 %v1_21094 to i8*
  %v3_21094 = load i8, i8* %v2_21094, align 1
  %v4_21094 = load i32, i32* @ecx, align 4
  %v5_21094 = trunc i32 %v4_21094 to i8
  %v6_21094 = add i8 %v5_21094, %v3_21094
  store i8 %v6_21094, i8* %v2_21094, align 1
  %v0_2109a = load i32, i32* %eax.global-to-local, align 8
  %v1_2109a = inttoptr i32 %v0_2109a to i8*
  %v2_2109a = load i8, i8* %v1_2109a, align 1
  %v4_2109a = trunc i32 %v0_2109a to i8
  %v5_2109a = add i8 %v2_2109a, %v4_2109a
  store i8 %v5_2109a, i8* %v1_2109a, align 1
  %v0_2109c = load i32, i32* %eax.global-to-local, align 8
  %v4_210a0 = zext i8 %arg1 to i32
  store i32 %v4_210a0, i32* %eax.global-to-local, align 8
  %v0_210a8 = load i32, i32* @ecx, align 4
  %v1_210c1 = add i32 %v0_2109c, 4
  %v2_210c1 = inttoptr i32 %v1_210c1 to i32*
  %v3_210c1 = load i32, i32* %v2_210c1, align 4
  store i32 %v3_210c1, i32* @eax, align 8
  %v1_210c4 = icmp eq i32 %v3_210c1, 0
  br i1 %v1_210c4, label %bb, label %dec_label_pc_210cc

bb:                                               ; preds = %dec_label_pc_21090
  %v2_210c6 = call i32 @function_2149a(i32 %v0_2109c)
  store i32 %v2_210c6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_210cc

dec_label_pc_210cc:                               ; preds = %bb, %dec_label_pc_21090
  %v0_210cc = phi i32 [ %v2_210c6, %bb ], [ %v3_210c1, %dec_label_pc_21090 ]
  %v1_210cc = add i32 %v0_210cc, 4
  %v2_210cc = inttoptr i32 %v1_210cc to i32*
  %v3_210cc = load i32, i32* %v2_210cc, align 4
  store i32 %v3_210cc, i32* @eax, align 8
  %v10_210cf = icmp eq i32 %v3_210cc, 1
  %v1_210d2 = icmp eq i1 %v10_210cf, false
  br i1 %v1_210d2, label %bb48, label %dec_label_pc_210d8

bb48:                                             ; preds = %dec_label_pc_210cc
  %v3_210d2 = sext i8 %arg1 to i32
  %v4_210d2 = call i32 @function_2149a(i32 %v3_210d2)
  store i32 %v4_210d2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_210d8

dec_label_pc_210d8:                               ; preds = %bb48, %dec_label_pc_210cc
  %v2_210d8 = load i32, i32* @edx, align 4
  store i32 %v2_210d8, i32* @esi, align 4
  %v1_210de = inttoptr i32 %v0_2109c to i32*
  %v2_210de = load i32, i32* %v1_210de, align 4
  store i32 %v2_210de, i32* @eax, align 8
  %v1_210e0 = icmp eq i32 %v2_210de, 0
  br i1 %v1_210e0, label %bb49, label %dec_label_pc_210e8

bb49:                                             ; preds = %dec_label_pc_210d8
  %v1_210e2 = call i32 @function_21486()
  store i32 %v1_210e2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_210e8

dec_label_pc_210e8:                               ; preds = %bb49, %dec_label_pc_210d8
  %v0_210e8 = phi i32 [ %v1_210e2, %bb49 ], [ %v2_210de, %dec_label_pc_210d8 ]
  %v1_210e8 = inttoptr i32 %v0_210e8 to i32*
  %v2_210e8 = load i32, i32* %v1_210e8, align 4
  store i32 %v2_210e8, i32* @eax, align 8
  %v1_210ea = icmp eq i32 %v2_210e8, 0
  br i1 %v1_210ea, label %bb50, label %dec_label_pc_210f2

bb50:                                             ; preds = %dec_label_pc_210e8
  %v2_210ec = sext i8 %arg1 to i32
  %v3_210ec = call i32 @function_21490(i32 %v2_210ec)
  store i32 %v3_210ec, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_210f2

dec_label_pc_210f2:                               ; preds = %bb50, %dec_label_pc_210e8
  %v1_210f2 = phi i32 [ %v3_210ec, %bb50 ], [ %v2_210e8, %dec_label_pc_210e8 ]
  %v0_210f2 = load i32, i32* @esi, align 4
  %v12_210f2 = icmp eq i32 %v0_210f2, %v1_210f2
  br i1 %v12_210f2, label %bb51, label %dec_label_pc_210fa

bb51:                                             ; preds = %dec_label_pc_210f2
  %v2_210f4 = sext i8 %arg1 to i32
  %v3_210f4 = call i32 @function_21238(i32 %v2_210f4)
  store i32 %v3_210f4, i32* %eax.global-to-local, align 8
  %v0_210fe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_210fa

dec_label_pc_210fa:                               ; preds = %bb51, %dec_label_pc_210f2
  %v0_210fe = phi i32 [ %v0_210fe.pre, %bb51 ], [ %v0_210f2, %dec_label_pc_210f2 ]
  store i32 %v0_210a8, i32* %eax.global-to-local, align 8
  %v1_210fe = add i32 %v0_210fe, 8
  %v2_210fe = inttoptr i32 %v1_210fe to i32*
  %v3_210fe = load i32, i32* %v2_210fe, align 4
  store i32 %v3_210fe, i32* %ebp.global-to-local, align 4
  %v1_21108 = icmp eq i32 %v3_210fe, 0
  br i1 %v1_21108, label %dec_label_pc_21211, label %dec_label_pc_21118.preheader

dec_label_pc_21118.preheader:                     ; preds = %dec_label_pc_210fa
  %v1_21101 = icmp eq i32 %v0_210a8, 0
  %v10_21121 = icmp eq i8 %arg1, 0
  %v10_211ff = icmp eq i1 %v1_21101, false
  %v2_21162 = ptrtoint i32* %stack_var_91 to i32
  %v2_21171 = ptrtoint i32* %stack_var_84 to i32
  br label %dec_label_pc_21118

dec_label_pc_21118:                               ; preds = %dec_label_pc_21118.preheader, %dec_label_pc_21206
  %v0_2112c = phi i32 [ %v0_21206, %dec_label_pc_21206 ], [ %v0_210fe, %dec_label_pc_21118.preheader ]
  %v0_21118 = phi i32 [ %v3_21206, %dec_label_pc_21206 ], [ %v3_210fe, %dec_label_pc_21118.preheader ]
  %stack_var_36.0 = phi i1 [ %v23_211f0, %dec_label_pc_21206 ], [ false, %dec_label_pc_21118.preheader ]
  %v1_21118 = inttoptr i32 %v0_21118 to i32*
  %v2_21118 = load i32, i32* %v1_21118, align 4
  store i32 %v2_21118, i32* @eax, align 8
  br i1 %v10_21121, label %dec_label_pc_211b2, label %dec_label_pc_2112c

dec_label_pc_2112c:                               ; preds = %dec_label_pc_21118
  %v1_2112c = add i32 %v0_2112c, 8
  %v2_2112c = inttoptr i32 %v1_2112c to i32*
  %v3_2112c = load i32, i32* %v2_2112c, align 4
  %v1_2112f = icmp eq i32 %v3_2112c, 0
  br i1 %v1_2112f, label %bb52, label %dec_label_pc_2113b

bb52:                                             ; preds = %dec_label_pc_2112c
  %v2_21135 = call i32 @function_2148b(i32 0)
  store i32 %v2_21135, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2113b

dec_label_pc_2113b:                               ; preds = %bb52, %dec_label_pc_2112c
  store i32 %v3_2112c, i32* %eax.global-to-local, align 8
  store i32 %v3_2112c, i32* %edi.global-to-local, align 4
  %v1_21143 = add i32 %v3_2112c, 16
  %v2_21143 = inttoptr i32 %v1_21143 to i32*
  %v3_21143 = load i32, i32* %v2_21143, align 4
  store i32 %v3_21143, i32* %ebx.global-to-local, align 4
  store i32 %v1_21143, i32* %edi.global-to-local, align 4
  %v1_21149 = add i32 %v3_2112c, 20
  %v2_21149 = inttoptr i32 %v1_21149 to i32*
  %v3_21149 = load i32, i32* %v2_21149, align 4
  %v15_21149 = icmp eq i32 %v3_21149, %v3_21143
  %v1_2114c = icmp eq i1 %v15_21149, false
  br i1 %v1_2114c, label %dec_label_pc_21160, label %dec_label_pc_2114e

dec_label_pc_2114e:                               ; preds = %dec_label_pc_2113b
  %v0_2114e = call i32 @function_2144a()
  store i32 %v0_2114e, i32* %eax.global-to-local, align 8
  ret i32 %v0_2114e

dec_label_pc_21158:                               ; preds = %dec_label_pc_21160
  %v0_21158 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21158 = add i32 %v0_21158, 12
  store i32 %v1_21158, i32* %ebx.global-to-local, align 4
  %v1_2115b = load i32, i32* %edi.global-to-local, align 4
  %v2_2115b = add i32 %v1_2115b, 4
  %v3_2115b = inttoptr i32 %v2_2115b to i32*
  %v4_2115b = load i32, i32* %v3_2115b, align 4
  %v15_2115b = icmp eq i32 %v1_21158, %v4_2115b
  br i1 %v15_2115b, label %dec_label_pc_211b2, label %dec_label_pc_21160

dec_label_pc_21160:                               ; preds = %dec_label_pc_2113b, %dec_label_pc_21158
  %v0_21160 = phi i32 [ %v1_21158, %dec_label_pc_21158 ], [ %v3_21143, %dec_label_pc_2113b ]
  %v1_21160 = inttoptr i32 %v0_21160 to i32*
  %v2_21160 = load i32, i32* %v1_21160, align 4
  store i32 %v2_21160, i32* %eax.global-to-local, align 8
  store i32 %v2_21162, i32* %stack_var_84, align 4
  %v1_2116a = add i32 %v0_21160, 4
  %v2_2117f = ashr i32 %v2_21160, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_21182 = xor i32 %v2_2117f, %v2_21160
  %v13_211a1 = call i32 @unknown_3ce60(i32 %v2_21160, i32 %v2_21182, i32 %v2_21171, i32 %v1_2116a, i32 0, i32 0, i32 0, i32 0)
  store i32 %v13_211a1, i32* %eax.global-to-local, align 8
  %v4_211a6 = trunc i32 %v13_211a1 to i8
  %v5_211a6 = icmp eq i8 %v4_211a6, 0
  br i1 %v5_211a6, label %dec_label_pc_21158, label %dec_label_pc_211aa

dec_label_pc_211aa:                               ; preds = %dec_label_pc_21160
  store i32 %v3_2112c, i32* %eax.global-to-local, align 8
  %v1_211ae = add i32 %v3_2112c, 4
  %v2_211ae = inttoptr i32 %v1_211ae to i8*
  store i8 0, i8* %v2_211ae, align 1
  br label %dec_label_pc_211b2

dec_label_pc_211b2:                               ; preds = %dec_label_pc_21158, %dec_label_pc_211aa, %dec_label_pc_21118
  %stack_var_0.0.in = phi i32 [ %v0_21118, %dec_label_pc_21118 ], [ %v2_21160, %dec_label_pc_211aa ], [ %v2_21160, %dec_label_pc_21158 ]
  %v0_211b2 = load i32, i32* @esi, align 4
  %v1_211b2 = add i32 %v0_211b2, 8
  %v2_211b2 = inttoptr i32 %v1_211b2 to i32*
  %v3_211b2 = load i32, i32* %v2_211b2, align 4
  store i32 %v3_211b2, i32* @eax, align 8
  %v1_211b5 = icmp eq i32 %v3_211b2, 0
  br i1 %v1_211b5, label %bb53, label %dec_label_pc_211bd

bb53:                                             ; preds = %dec_label_pc_211b2
  %v3_211b7 = call i32 @function_2148b(i32 %stack_var_0.0.in)
  store i32 %v3_211b7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_211bd

dec_label_pc_211bd:                               ; preds = %bb53, %dec_label_pc_211b2
  %v0_211bd = phi i32 [ %v3_211b7, %bb53 ], [ %v3_211b2, %dec_label_pc_211b2 ]
  %v1_211bd = add i32 %v0_211bd, 4
  %v2_211bd = inttoptr i32 %v1_211bd to i8*
  %v3_211bd = load i8, i8* %v2_211bd, align 1
  %v4_211bd = zext i8 %v3_211bd to i32
  store i32 %v4_211bd, i32* %ebx.global-to-local, align 4
  %v0_211c1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_211c1 = inttoptr i32 %v0_211c1 to i32*
  %v2_211c1 = load i32, i32* %v1_211c1, align 4
  store i32 %v2_211c1, i32* @eax, align 8
  %v5_211ca = icmp eq i8 %v3_211bd, 0
  br i1 %v5_211ca, label %bb54, label %dec_label_pc_211d2

bb54:                                             ; preds = %dec_label_pc_211bd
  %v1_211cc = call i32 @function_21258()
  store i32 %v1_211cc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_211d2

dec_label_pc_211d2:                               ; preds = %bb54, %dec_label_pc_211bd
  %v0_211d2 = load i32, i32* @esi, align 4
  %v1_211d2 = inttoptr i32 %v0_211d2 to i32*
  %v2_211d2 = load i32, i32* %v1_211d2, align 4
  store i32 %v2_211d2, i32* @esi, align 4
  %v2_211d8 = load i32, i32* %v1_210de, align 4
  store i32 %v2_211d8, i32* @eax, align 8
  %v1_211da = icmp eq i32 %v2_211d8, 0
  br i1 %v1_211da, label %bb55, label %dec_label_pc_211e2

bb55:                                             ; preds = %dec_label_pc_211d2
  %v1_211dc = call i32 @function_21486()
  store i32 %v1_211dc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_211e2

dec_label_pc_211e2:                               ; preds = %bb55, %dec_label_pc_211d2
  %v0_211e2 = phi i32 [ %v1_211dc, %bb55 ], [ %v2_211d8, %dec_label_pc_211d2 ]
  %v1_211e2 = inttoptr i32 %v0_211e2 to i32*
  %v2_211e2 = load i32, i32* %v1_211e2, align 4
  store i32 %v2_211e2, i32* @eax, align 8
  %v1_211e4 = icmp eq i32 %v2_211e2, 0
  br i1 %v1_211e4, label %bb56, label %dec_label_pc_211ec

bb56:                                             ; preds = %dec_label_pc_211e2
  %v3_211e6 = call i32 @function_21490(i32 %v0_211c1)
  store i32 %v3_211e6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_211ec

dec_label_pc_211ec:                               ; preds = %bb56, %dec_label_pc_211e2
  %v0_211ec = phi i32 [ %v3_211e6, %bb56 ], [ %v2_211e2, %dec_label_pc_211e2 ]
  %v1_211ec = load i32, i32* @esi, align 4
  %v12_211ec = icmp eq i32 %v0_211ec, %v1_211ec
  br i1 %v12_211ec, label %bb57, label %dec_label_pc_211f0

bb57:                                             ; preds = %dec_label_pc_211ec
  %v3_211ee = call i32 @function_21238(i32 %v0_211c1)
  store i32 %v3_211ee, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_211f0

dec_label_pc_211f0:                               ; preds = %bb57, %dec_label_pc_211ec
  %v3_2122923 = phi i32 [ %v3_211ee, %bb57 ], [ %v0_211ec, %dec_label_pc_211ec ]
  %v4_211f024 = zext i1 %stack_var_36.0 to i32
  %v5_211f0 = add i32 %v4_211f024, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp58 = urem i32 %v5_211f0, 2
  %v23_211f0 = icmp ne i32 %tmp58, 0
  %v4_211f5 = sext i1 %v23_211f0 to i32
  %tmp62 = icmp ugt i32 %v0_210a8, %v4_211f5
  br i1 %tmp62, label %dec_label_pc_21206, label %dec_label_pc_211ff

dec_label_pc_211ff:                               ; preds = %dec_label_pc_211f0
  br i1 %v10_211ff, label %bb59, label %dec_label_pc_21206

bb59:                                             ; preds = %dec_label_pc_211ff
  %v3_21204 = call i32 @function_21238(i32 %v4_211f5)
  store i32 %v3_21204, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21206

dec_label_pc_21206:                               ; preds = %dec_label_pc_211f0, %bb59, %dec_label_pc_211ff
  %v3_2122922 = phi i32 [ %v3_2122923, %dec_label_pc_211f0 ], [ %v3_21204, %bb59 ], [ %v3_2122923, %dec_label_pc_211ff ]
  %v0_21206 = load i32, i32* @esi, align 4
  %v1_21206 = add i32 %v0_21206, 8
  %v2_21206 = inttoptr i32 %v1_21206 to i32*
  %v3_21206 = load i32, i32* %v2_21206, align 4
  store i32 %v3_21206, i32* %ebp.global-to-local, align 4
  %v1_21209 = icmp eq i32 %v3_21206, 0
  %v1_2120b = icmp eq i1 %v1_21209, false
  br i1 %v1_2120b, label %dec_label_pc_21118, label %dec_label_pc_21211

dec_label_pc_21211:                               ; preds = %dec_label_pc_21206, %dec_label_pc_210fa
  %v3_21229 = phi i32 [ %v0_210a8, %dec_label_pc_210fa ], [ %v3_2122922, %dec_label_pc_21206 ]
  ret i32 %v3_21229

; uselistorder directives
  uselistorder i32 %v3_21206, { 1, 2, 0 }
  uselistorder i32 %v0_21206, { 1, 0 }
  uselistorder i32 %v4_211f5, { 1, 0 }
  uselistorder i1 %v23_211f0, { 1, 0 }
  uselistorder i32 %v0_211ec, { 1, 0 }
  uselistorder i32 %v0_211c1, { 1, 0, 2 }
  uselistorder i32 %v2_21160, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_21160, { 1, 0 }
  uselistorder i32 %v1_21158, { 1, 0, 2 }
  uselistorder i32 %v3_21143, { 1, 0, 2 }
  uselistorder i32 %v3_2112c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32 %v0_21118, { 1, 0 }
  uselistorder i32 %v0_210f2, { 1, 0 }
  uselistorder i32 %v0_210a8, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_84, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 4, 7, 9, 0, 2, 12, 13, 14, 15, 16, 1, 17, 3, 6, 8, 11, 10, 18, 19, 20, 21 }
  uselistorder i32 (i32)* @function_21238, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2149a, { 1, 0 }
  uselistorder i8 %arg1, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_21206, { 1, 2, 0 }
  uselistorder label %dec_label_pc_211b2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21160, { 1, 0 }
  uselistorder label %dec_label_pc_21118, { 1, 0 }
}

define i32 @function_21238(i32 %arg1) local_unnamed_addr {
dec_label_pc_21238:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_2123c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2123c = icmp eq i32 %v1_2123c, %tmp7
  store i32 %arg1, i32* @eax, align 8
  %v0_21247 = load i32, i32* @esi, align 4
  %v2_21247 = add i32 %arg1, 8
  %v3_21247 = inttoptr i32 %v2_21247 to i32*
  store i32 %v0_21247, i32* %v3_21247, align 4
  %v1_2124a = icmp eq i1 %v3_2123c, false
  br i1 %v1_2124a, label %bb, label %dec_label_pc_21238.dec_label_pc_21250_crit_edge

dec_label_pc_21238.dec_label_pc_21250_crit_edge:  ; preds = %dec_label_pc_21238
  %v0_21257.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_21250

bb:                                               ; preds = %dec_label_pc_21238
  %v2_2124a = call i32 @function_21495()
  br label %dec_label_pc_21250

dec_label_pc_21250:                               ; preds = %dec_label_pc_21238.dec_label_pc_21250_crit_edge, %bb
  %v0_21257 = phi i32 [ %v0_21257.pre, %dec_label_pc_21238.dec_label_pc_21250_crit_edge ], [ %v2_2124a, %bb ]
  ret i32 %v0_21257

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_21250, { 1, 0 }
}

define i32 @function_21258() local_unnamed_addr {
dec_label_pc_21258:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %v0_21258 = load i32, i32* @esi, align 4
  %v1_21258 = add i32 %v0_21258, 8
  %v2_21258 = inttoptr i32 %v1_21258 to i32*
  %v3_21258 = load i32, i32* %v2_21258, align 4
  store i32 %v3_21258, i32* %ecx.global-to-local, align 4
  %v1_2125b = icmp eq i32 %v3_21258, 0
  br i1 %v1_2125b, label %bb, label %dec_label_pc_21267

bb:                                               ; preds = %dec_label_pc_21258
  %v2_21261 = call i32 @function_2148b(i32 0)
  br label %dec_label_pc_21267

dec_label_pc_21267:                               ; preds = %bb, %dec_label_pc_21258
  %v1_2126f = inttoptr i32 %tmp29 to i32*
  %v2_2126f = load i32, i32* %v1_2126f, align 4
  store i32 %v2_2126f, i32* @eax, align 8
  %v1_21271 = add i32 %v3_21258, 68
  store i32 %v1_21271, i32* @edi, align 4
  %v1_21274 = icmp eq i32 %v2_2126f, 0
  br i1 %v1_21274, label %bb31, label %dec_label_pc_2127c

bb31:                                             ; preds = %dec_label_pc_21267
  %v1_21276 = call i32 @function_21486()
  br label %dec_label_pc_2127c

dec_label_pc_2127c:                               ; preds = %bb31, %dec_label_pc_21267
  %v0_2127c = phi i32 [ %v1_21276, %bb31 ], [ %v2_2126f, %dec_label_pc_21267 ]
  %v1_2127c = inttoptr i32 %v0_2127c to i32*
  %v2_2127c = load i32, i32* %v1_2127c, align 4
  store i32 %v2_2127c, i32* @eax, align 8
  %v1_2127e = icmp eq i32 %v2_2127c, 0
  br i1 %v1_2127e, label %bb32, label %dec_label_pc_2128a

bb32:                                             ; preds = %dec_label_pc_2127c
  %v2_21284 = call i32 @function_21490(i32 0)
  store i32 %v2_21284, i32* @eax, align 8
  br label %dec_label_pc_2128a

dec_label_pc_2128a:                               ; preds = %bb32, %dec_label_pc_2127c
  store i32 %v2_2127c, i32* %ecx.global-to-local, align 4
  %v1_2128e = load i32, i32* @esi, align 4
  %v12_2128e = icmp eq i32 %v2_2127c, %v1_2128e
  br i1 %v12_2128e, label %bb33, label %dec_label_pc_2129a

bb33:                                             ; preds = %dec_label_pc_2128a
  %v2_21294 = call i32 @function_214f5(i32 %v2_2127c)
  store i32 %v2_21294, i32* @eax, align 8
  br label %dec_label_pc_2129a

dec_label_pc_2129a:                               ; preds = %bb33, %dec_label_pc_2128a
  store i32 %v2_2127c, i32* %ecx.global-to-local, align 4
  %v1_2129e = add i32 %v2_2127c, 16
  %v2_2129e = inttoptr i32 %v1_2129e to i32*
  %v3_2129e = load i32, i32* %v2_2129e, align 4
  store i32 %v3_2129e, i32* @ebp, align 4
  %v1_212a1 = icmp eq i32 %v3_2129e, 0
  br i1 %v1_212a1, label %bb34, label %dec_label_pc_212a9

bb34:                                             ; preds = %dec_label_pc_2129a
  %v1_212a3 = call i32 @function_214be()
  %v0_212a9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_212a9

dec_label_pc_212a9:                               ; preds = %bb34, %dec_label_pc_2129a
  %v0_212a9 = phi i32 [ %v0_212a9.pre, %bb34 ], [ %v2_2127c, %dec_label_pc_2129a ]
  %v1_212a9 = add i32 %v0_212a9, 12
  store i32 %v1_212a9, i32* %ecx.global-to-local, align 4
  store i32 %v3_2129e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_212c3.outer

dec_label_pc_212b8:                               ; preds = %dec_label_pc_212c3
  %v1_212bc = add i32 %v0_212b8, 8
  %v2_212bc = inttoptr i32 %v1_212bc to i32*
  %v3_212bc = load i32, i32* %v2_212bc, align 4
  store i32 %v3_212bc, i32* %ebx.global-to-local, align 4
  %v1_212bf = icmp eq i32 %v3_212bc, 0
  br i1 %v1_212bf, label %dec_label_pc_212d8, label %dec_label_pc_212c3.outer

dec_label_pc_212c3.outer:                         ; preds = %dec_label_pc_212b8, %dec_label_pc_212a9
  %v0_212c314 = phi i32 [ %v3_212bc, %dec_label_pc_212b8 ], [ %v3_2129e, %dec_label_pc_212a9 ]
  %stack_var_32.0.ph = phi i32 [ %v0_212b8, %dec_label_pc_212b8 ], [ %v1_212a9, %dec_label_pc_212a9 ]
  br label %dec_label_pc_212c3

dec_label_pc_212c3:                               ; preds = %dec_label_pc_212c3.outer, %dec_label_pc_212d1
  %v0_212c3 = phi i32 [ %v0_212c314, %dec_label_pc_212c3.outer ], [ %v3_212d1, %dec_label_pc_212d1 ]
  %v1_212c3 = add i32 %v0_212c3, 16
  store i32 %v1_212c3, i32* @eax, align 8
  %v0_212c8 = call i32 @function_21460()
  store i32 %v0_212c8, i32* @eax, align 8
  %v4_212cd = trunc i32 %v0_212c8 to i8
  %v5_212cd = icmp eq i8 %v4_212cd, 0
  %v0_212b8 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v5_212cd, label %dec_label_pc_212b8, label %dec_label_pc_212d1

dec_label_pc_212d1:                               ; preds = %dec_label_pc_212c3
  %v1_212d1 = add i32 %v0_212b8, 12
  %v2_212d1 = inttoptr i32 %v1_212d1 to i32*
  %v3_212d1 = load i32, i32* %v2_212d1, align 4
  store i32 %v3_212d1, i32* %ebx.global-to-local, align 4
  %v1_212d4 = icmp eq i32 %v3_212d1, 0
  %v1_212d6 = icmp eq i1 %v1_212d4, false
  br i1 %v1_212d6, label %dec_label_pc_212c3, label %dec_label_pc_212d8

dec_label_pc_212d8:                               ; preds = %dec_label_pc_212b8, %dec_label_pc_212d1
  %stack_var_32.1 = phi i32 [ %stack_var_32.0.ph, %dec_label_pc_212d1 ], [ %v0_212b8, %dec_label_pc_212b8 ]
  store i32 %v1_212a9, i32* %ecx.global-to-local, align 4
  %v15_212dc = icmp eq i32 %stack_var_32.1, %v1_212a9
  br i1 %v15_212dc, label %bb36, label %dec_label_pc_212e6

bb36:                                             ; preds = %dec_label_pc_212d8
  %v1_212e0 = call i32 @function_214be()
  br label %dec_label_pc_212e6

dec_label_pc_212e6:                               ; preds = %bb36, %dec_label_pc_212d8
  %v1_212ec = add i32 %stack_var_32.1, 16
  store i32 %v1_212ec, i32* @ebx, align 4
  store i32 %v1_212ec, i32* @eax, align 8
  %v0_212f1 = call i32 @function_21460()
  %v4_212f6 = trunc i32 %v0_212f1 to i8
  %v5_212f6 = icmp eq i8 %v4_212f6, 0
  br i1 %v5_212f6, label %bb38, label %dec_label_pc_212fa

bb38:                                             ; preds = %dec_label_pc_212e6
  %v1_212f8 = call i32 @function_21320()
  br label %dec_label_pc_212fa

dec_label_pc_212fa:                               ; preds = %bb38, %dec_label_pc_212e6
  %v3_21312 = phi i32 [ %v1_212f8, %bb38 ], [ %v0_212f1, %dec_label_pc_212e6 ]
  ret i32 %v3_21312

; uselistorder directives
  uselistorder i32 %stack_var_32.1, { 1, 0 }
  uselistorder i32 %v3_212d1, { 1, 2, 0 }
  uselistorder i32 %v0_212b8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_212a9, { 0, 2, 1, 3 }
  uselistorder i32 %v2_2127c, { 1, 4, 3, 2, 0, 5, 6, 7 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_214be, { 1, 0 }
  uselistorder i32 (i32)* @function_21490, { 2, 1, 0 }
  uselistorder i32 ()* @function_21486, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2148b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_212d8, { 1, 0 }
  uselistorder label %dec_label_pc_212c3, { 1, 0 }
}

define i32 @function_2131d() local_unnamed_addr {
dec_label_pc_2131d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2131d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2131d
}

define i32 @function_21320() local_unnamed_addr {
dec_label_pc_21320:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_21322 = load i32, i32* @edi, align 4
  store i32 %v0_21322, i32* @eax, align 8
  %v0_21324 = call i32 @function_21460()
  %v1_21331 = add i32 %tmp3, 28
  %v2_21331 = inttoptr i32 %v1_21331 to i32*
  %v3_21331 = load i32, i32* %v2_21331, align 4
  %v4_21331 = load i32, i32* @esi, align 4
  %v15_21331 = icmp eq i32 %v3_21331, %v4_21331
  br i1 %v15_21331, label %bb, label %dec_label_pc_21336

bb:                                               ; preds = %dec_label_pc_21320
  %v1_21334 = call i32 @function_2135a()
  %v2_21336.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_21336

dec_label_pc_21336:                               ; preds = %bb, %dec_label_pc_21320
  %v2_21336 = phi i32 [ %v2_21336.pre, %bb ], [ %v4_21331, %dec_label_pc_21320 ]
  %v1_21340 = add i32 %v2_21336, 12
  store i32 %v1_21340, i32* @eax, align 8
  %v1_21346 = call i32 @function_315c0(i32 %v1_21340)
  store i32 %v2_21336, i32* @esi, align 4
  ret i32 %v1_21346

; uselistorder directives
  uselistorder i32 %v4_21331, { 1, 0 }
}

define i32 @function_21355() local_unnamed_addr {
dec_label_pc_21355:
  %eax.global-to-local = alloca i32, align 4
  %v0_21355 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21355
}

define i32 @function_2135a() local_unnamed_addr {
dec_label_pc_2135a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_92 = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %v2_2135a = load i32, i32* @esi, align 4
  %v0_2135c = load i32, i32* @ebp, align 4
  store i32 %v0_2135c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2137b.outer

dec_label_pc_21370:                               ; preds = %dec_label_pc_2137b
  %v1_21374 = add i32 %v0_21370, 8
  %v2_21374 = inttoptr i32 %v1_21374 to i32*
  %v3_21374 = load i32, i32* %v2_21374, align 4
  store i32 %v3_21374, i32* %ebx.global-to-local, align 4
  %v1_21377 = icmp eq i32 %v3_21374, 0
  br i1 %v1_21377, label %dec_label_pc_21390, label %dec_label_pc_2137b.outer

dec_label_pc_2137b.outer:                         ; preds = %dec_label_pc_21370, %dec_label_pc_2135a
  %stack_var_68.0.ph = phi i32 [ %v0_21370, %dec_label_pc_21370 ], [ %tmp30, %dec_label_pc_2135a ]
  br label %dec_label_pc_2137b

dec_label_pc_2137b:                               ; preds = %dec_label_pc_2137b.outer, %dec_label_pc_21389
  %v0_2137e = load i32, i32* @edi, align 4
  store i32 %v0_2137e, i32* @eax, align 8
  %v0_21380 = call i32 @function_21460()
  store i32 %v0_21380, i32* @eax, align 8
  %v4_21385 = trunc i32 %v0_21380 to i8
  %v5_21385 = icmp eq i8 %v4_21385, 0
  %v1_21387 = icmp eq i1 %v5_21385, false
  %v0_21370 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v1_21387, label %dec_label_pc_21370, label %dec_label_pc_21389

dec_label_pc_21389:                               ; preds = %dec_label_pc_2137b
  %v1_21389 = add i32 %v0_21370, 12
  %v2_21389 = inttoptr i32 %v1_21389 to i32*
  %v3_21389 = load i32, i32* %v2_21389, align 4
  store i32 %v3_21389, i32* %ebx.global-to-local, align 4
  %v1_2138c = icmp eq i32 %v3_21389, 0
  %v1_2138e = icmp eq i1 %v1_2138c, false
  br i1 %v1_2138e, label %dec_label_pc_2137b, label %dec_label_pc_21390

dec_label_pc_21390:                               ; preds = %dec_label_pc_21370, %dec_label_pc_21389
  %v0_2139a = phi i32 [ %stack_var_68.0.ph, %dec_label_pc_21389 ], [ %v0_21370, %dec_label_pc_21370 ]
  %v15_21394 = icmp eq i32 %tmp30, %v0_2139a
  br i1 %v15_21394, label %dec_label_pc_213a1, label %dec_label_pc_2139a

dec_label_pc_2139a:                               ; preds = %dec_label_pc_21390
  %v1_2139a = add i32 %v0_2139a, 28
  %v2_2139a = inttoptr i32 %v1_2139a to i32*
  %v3_2139a = load i32, i32* %v2_2139a, align 4
  br label %dec_label_pc_213a1

dec_label_pc_213a1:                               ; preds = %dec_label_pc_2139a, %dec_label_pc_21390
  %stack_var_64.0 = phi i32 [ %tmp28, %dec_label_pc_21390 ], [ %v3_2139a, %dec_label_pc_2139a ]
  %v15_213a5 = icmp eq i32 %v2_2135a, %stack_var_64.0
  br i1 %v15_213a5, label %bb, label %dec_label_pc_213af

bb:                                               ; preds = %dec_label_pc_213a1
  %v1_213a9 = call i32 @function_21453()
  store i32 %v1_213a9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_213af

dec_label_pc_213af:                               ; preds = %bb, %dec_label_pc_213a1
  %v0_213c1.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_213c1

dec_label_pc_213b8:                               ; preds = %dec_label_pc_213c1
  store i32 %v0_213b8, i32* %ebx.global-to-local, align 4
  %v1_213ba = add i32 %v0_213b8, 8
  %v2_213ba = inttoptr i32 %v1_213ba to i32*
  %v3_213ba = load i32, i32* %v2_213ba, align 4
  store i32 %v3_213ba, i32* @ebp, align 4
  %v1_213bd = icmp eq i32 %v3_213ba, 0
  br i1 %v1_213bd, label %dec_label_pc_213d6, label %dec_label_pc_213c1

dec_label_pc_213c1:                               ; preds = %dec_label_pc_213b8, %dec_label_pc_213cf, %dec_label_pc_213af
  %v0_213c1 = phi i32 [ %v0_213c1.pre, %dec_label_pc_213af ], [ %v3_213cf, %dec_label_pc_213cf ], [ %v3_213ba, %dec_label_pc_213b8 ]
  %v1_213c1 = add i32 %v0_213c1, 16
  store i32 %v1_213c1, i32* @eax, align 8
  %v0_213c6 = call i32 @function_21460()
  store i32 %v0_213c6, i32* %eax.global-to-local, align 8
  %v4_213cb = trunc i32 %v0_213c6 to i8
  %v5_213cb = icmp eq i8 %v4_213cb, 0
  %v0_213b8 = load i32, i32* @ebp, align 4
  br i1 %v5_213cb, label %dec_label_pc_213b8, label %dec_label_pc_213cf

dec_label_pc_213cf:                               ; preds = %dec_label_pc_213c1
  %v1_213cf = add i32 %v0_213b8, 12
  %v2_213cf = inttoptr i32 %v1_213cf to i32*
  %v3_213cf = load i32, i32* %v2_213cf, align 4
  store i32 %v3_213cf, i32* @ebp, align 4
  %v1_213d2 = icmp eq i32 %v3_213cf, 0
  %v1_213d4 = icmp eq i1 %v1_213d2, false
  br i1 %v1_213d4, label %dec_label_pc_213c1, label %dec_label_pc_213cf.dec_label_pc_213d6_crit_edge

dec_label_pc_213cf.dec_label_pc_213d6_crit_edge:  ; preds = %dec_label_pc_213cf
  %v0_213d6.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_213d6

dec_label_pc_213d6:                               ; preds = %dec_label_pc_213b8, %dec_label_pc_213cf.dec_label_pc_213d6_crit_edge
  %v0_213dc = phi i32 [ %v0_213d6.pre, %dec_label_pc_213cf.dec_label_pc_213d6_crit_edge ], [ %v0_213b8, %dec_label_pc_213b8 ]
  %v15_213d6 = icmp eq i32 %v0_213dc, %tmp30
  br i1 %v15_213d6, label %dec_label_pc_213ea, label %dec_label_pc_213dc

dec_label_pc_213dc:                               ; preds = %dec_label_pc_213d6
  %v0_213df = load i32, i32* @edi, align 4
  store i32 %v0_213df, i32* @eax, align 8
  %v0_213e1 = call i32 @function_21460()
  store i32 %v0_213e1, i32* %eax.global-to-local, align 8
  %v4_213e6 = trunc i32 %v0_213e1 to i8
  %v5_213e6 = icmp eq i8 %v4_213e6, 0
  br i1 %v5_213e6, label %dec_label_pc_213dc.dec_label_pc_2143e_crit_edge, label %dec_label_pc_213ea

dec_label_pc_213dc.dec_label_pc_2143e_crit_edge:  ; preds = %dec_label_pc_213dc
  %v1_21442.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2143e

dec_label_pc_213ea:                               ; preds = %dec_label_pc_213dc, %dec_label_pc_213d6
  %v1_213f3 = add i32 %tmp27, 68
  %v2_213f3 = inttoptr i32 %v1_213f3 to i32*
  %v3_213f3 = load i32, i32* %v2_213f3, align 4
  store i32 %v3_213f3, i32* %eax.global-to-local, align 8
  %v1_213f6 = add i32 %tmp27, 72
  %v2_213f6 = inttoptr i32 %v1_213f6 to i8*
  %v3_213f6 = load i8, i8* %v2_213f6, align 1
  %v10_213f6 = icmp eq i8 %v3_213f6, 0
  store i32 %v3_213f3, i32* %stack_var_92, align 4
  br i1 %v10_213f6, label %dec_label_pc_2140c, label %dec_label_pc_21400

dec_label_pc_21400:                               ; preds = %dec_label_pc_213ea
  %v1_21400 = add i32 %tmp27, 76
  %v2_21400 = inttoptr i32 %v1_21400 to i32*
  %v3_21400 = load i32, i32* %v2_21400, align 4
  store i32 %v3_21400, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2140c

dec_label_pc_2140c:                               ; preds = %dec_label_pc_21400, %dec_label_pc_213ea
  %v2_2140c = ptrtoint i32* %stack_var_92 to i32
  %v2_21418 = ptrtoint i32* %stack_var_76 to i32
  %v0_2141c = load i32, i32* %ebx.global-to-local, align 4
  %v1_2142b = add i32 %tmp21, 8
  store i32 %v1_2142b, i32* %eax.global-to-local, align 8
  %v4_21432 = call i32 @unknown_41f10(i32 %v2_21418, i32 %v1_2142b, i32 %v0_2141c, i32 %v2_2140c)
  store i32 %v4_21432, i32* %eax.global-to-local, align 8
  store i32 %v2_2135a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2143e

dec_label_pc_2143e:                               ; preds = %dec_label_pc_213dc.dec_label_pc_2143e_crit_edge, %dec_label_pc_2140c
  %v1_21442 = phi i32 [ %v1_21442.pre, %dec_label_pc_213dc.dec_label_pc_2143e_crit_edge ], [ %v2_2135a, %dec_label_pc_2140c ]
  %v2_21442 = add i32 %v1_21442, 28
  %v3_21442 = inttoptr i32 %v2_21442 to i32*
  store i32 %v0_2139a, i32* %v3_21442, align 4
  %v0_21445 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21445

; uselistorder directives
  uselistorder i32 %v3_213cf, { 1, 2, 0 }
  uselistorder i32 %v0_213b8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2139a, { 2, 1, 0 }
  uselistorder i32 %v0_21370, { 0, 3, 2, 1 }
  uselistorder i32 %v2_2135a, { 1, 2, 0 }
  uselistorder i32 %tmp27, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 4, 1, 6, 7, 5, 8 }
  uselistorder i32* %eax.global-to-local, { 5, 1, 2, 3, 4, 6, 7, 0 }
  uselistorder i32 ()* @function_21460, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2143e, { 1, 0 }
  uselistorder label %dec_label_pc_213d6, { 1, 0 }
  uselistorder label %dec_label_pc_213c1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21390, { 1, 0 }
  uselistorder label %dec_label_pc_2137b, { 1, 0 }
}

define i32 @function_2144a() local_unnamed_addr {
dec_label_pc_2144a:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_21453() local_unnamed_addr {
dec_label_pc_21453:
  %v4_2145b = load i32, i32* @eax, align 8
  ret i32 %v4_2145b
}

define i32 @function_21460() local_unnamed_addr {
dec_label_pc_21460:
  %v0_21460 = load i32, i32* @eax, align 8
  %v11_21460 = or i32 %v0_21460, 36
  ret i32 %v11_21460
}

define i32 @function_21479(i32 %arg1) local_unnamed_addr {
dec_label_pc_21479:
  %eax.global-to-local = alloca i32, align 4
  %v1_2147d = add i32 %arg1, 28
  %v2_2147d = inttoptr i32 %v1_2147d to i32*
  %v3_2147d = load i32, i32* %v2_2147d, align 4
  %v4_2147d = add i32 %v3_2147d, -1
  store i32 %v4_2147d, i32* %v2_2147d, align 4
  %v0_21481 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21481
}

define i32 @function_21486() local_unnamed_addr {
dec_label_pc_21486:
  %v0_21486 = call i32 @function_2f2c6()
  ret i32 %v0_21486
}

define i32 @function_2148b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2148b:
  %v0_2148b = call i32 @function_2f4ce()
  ret i32 %v0_2148b
}

define i32 @function_21490(i32 %arg1) local_unnamed_addr {
dec_label_pc_21490:
  %v0_21490 = call i32 @function_2f3fe()
  ret i32 %v0_21490
}

define i32 @function_21495() local_unnamed_addr {
dec_label_pc_21495:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2149a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2149a:
  %v3_214b2 = load i32, i32* @eax, align 8
  ret i32 %v3_214b2
}

define i32 @function_214be() local_unnamed_addr {
dec_label_pc_214be:
  %v3_214d6 = load i32, i32* @eax, align 8
  ret i32 %v3_214d6
}

define i32 @function_214e3() local_unnamed_addr {
dec_label_pc_214e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_214e3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_214e3
}

define i32 @function_214f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_214f5:
  %v3_2150d = load i32, i32* @eax, align 8
  ret i32 %v3_2150d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21520:
  ret i32 0
}

define i32 @function_2154a(i32* %arg1) local_unnamed_addr {
dec_label_pc_2154a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_2154a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2154a = add i32 %v0_2154a, 1149890808
  %v2_2154a = inttoptr i32 %v1_2154a to i32*
  %v3_2154a = load i32, i32* %v2_2154a, align 4
  %v4_2154a = add i32 %v3_2154a, 1
  store i32 %v4_2154a, i32* %v2_2154a, align 4
  %v0_21550 = load i32, i32* %eax.global-to-local, align 8
  %v1_21550 = trunc i32 %v0_21550 to i8
  %v2_21550 = and i8 %v1_21550, 28
  %v3_21550 = icmp eq i8 %v2_21550, 0
  %v8_21550 = zext i8 %v2_21550 to i32
  %v10_21550 = and i32 %v0_21550, -256
  %v11_21550 = or i32 %v8_21550, %v10_21550
  store i32 %v11_21550, i32* %eax.global-to-local, align 8
  br i1 %v3_21550, label %dec_label_pc_2157c, label %dec_label_pc_21554

dec_label_pc_21554:                               ; preds = %dec_label_pc_2154a
  %v0_21554 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21554 = add i32 %v0_21554, 16
  %v2_21554 = inttoptr i32 %v1_21554 to i32*
  %v3_21554 = load i32, i32* %v2_21554, align 4
  store i32 %v3_21554, i32* %eax.global-to-local, align 8
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2155b = add i32 %tmp102, 16
  %v3_2155b = inttoptr i32 %v2_2155b to i32*
  store i32 %v3_21554, i32* %v3_2155b, align 4
  %v0_2155e = load i32, i32* %edx.global-to-local, align 4
  %v1_2155e = add i32 %v0_2155e, 20
  %v2_2155e = inttoptr i32 %v1_2155e to i8*
  store i8 0, i8* %v2_2155e, align 1
  %v0_21562 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21562 = add i32 %v0_21562, 20
  %v2_21562 = inttoptr i32 %v1_21562 to i8*
  %v3_21562 = load i8, i8* %v2_21562, align 1
  %v10_21562 = icmp eq i8 %v3_21562, 0
  br i1 %v10_21562, label %dec_label_pc_21572, label %dec_label_pc_21568

dec_label_pc_21568:                               ; preds = %dec_label_pc_21554
  %v1_21568 = add i32 %v0_21562, 24
  %v2_21568 = inttoptr i32 %v1_21568 to i32*
  %v3_21568 = load i32, i32* %v2_21568, align 4
  store i32 %v3_21568, i32* %eax.global-to-local, align 8
  %v0_2156b = load i32, i32* %edx.global-to-local, align 4
  %v1_2156b = add i32 %v0_2156b, 20
  %v2_2156b = inttoptr i32 %v1_2156b to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_2156b, align 1
  %v0_2156f = load i32, i32* %eax.global-to-local, align 8
  %v1_2156f = load i32, i32* %edx.global-to-local, align 4
  %v2_2156f = add i32 %v1_2156f, 24
  %v3_2156f = inttoptr i32 %v2_2156f to i32*
  store i32 %v0_2156f, i32* %v3_2156f, align 4
  %v0_21572.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_21572

dec_label_pc_21572:                               ; preds = %dec_label_pc_21568, %dec_label_pc_21554
  %v0_21572 = phi i32 [ %v0_21572.pre, %dec_label_pc_21568 ], [ %v0_21562, %dec_label_pc_21554 ]
  %v1_21572 = add i32 %v0_21572, 28
  %v2_21572 = inttoptr i32 %v1_21572 to i32*
  %v3_21572 = load i32, i32* %v2_21572, align 4
  store i32 %v3_21572, i32* %eax.global-to-local, align 8
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_21579 = add i32 %tmp102, 28
  %v3_21579 = inttoptr i32 %v2_21579 to i32*
  store i32 %v3_21572, i32* %v3_21579, align 4
  br label %dec_label_pc_2157c

dec_label_pc_2157c:                               ; preds = %dec_label_pc_21572, %dec_label_pc_2154a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_21580 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_21580, i32* %eax.global-to-local, align 8
  %v1_21582 = add i32 %tmp102, 12
  %v2_21582 = inttoptr i32 %v1_21582 to i32*
  store i32 0, i32* %v2_21582, align 4
  %v0_21589 = load i32, i32* %eax.global-to-local, align 8
  %v1_21589 = load i32, i32* %edx.global-to-local, align 4
  %v2_21589 = inttoptr i32 %v1_21589 to i32*
  store i32 %v0_21589, i32* %v2_21589, align 4
  %v0_2158b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2158b = add i32 %v0_2158b, 12
  %v2_2158b = inttoptr i32 %v1_2158b to i32*
  %v3_2158b = load i32, i32* %v2_2158b, align 4
  store i32 %v3_2158b, i32* %eax.global-to-local, align 8
  %v0_2158e = load i32, i32* %edx.global-to-local, align 4
  %v1_2158e = add i32 %v0_2158e, 8
  %v2_2158e = inttoptr i32 %v1_2158e to i32*
  store i32 0, i32* %v2_2158e, align 4
  %v0_21595 = load i32, i32* %esi.global-to-local, align 4
  %v1_21595 = load i32, i32* %edx.global-to-local, align 4
  %v2_21595 = add i32 %v1_21595, 4
  %v3_21595 = inttoptr i32 %v2_21595 to i32*
  store i32 %v0_21595, i32* %v3_21595, align 4
  %v0_21598 = load i32, i32* %eax.global-to-local, align 8
  %v1_21598 = icmp eq i32 %v0_21598, 0
  br i1 %v1_21598, label %dec_label_pc_215b3, label %dec_label_pc_2159c

dec_label_pc_2159c:                               ; preds = %dec_label_pc_2157c
  %v0_2159c = load i32, i32* %edx.global-to-local, align 4
  %v2_215a7 = call i32 @unknown_42a40(i32 %v0_21598, i32 %v0_2159c)
  store i32 %v2_215a7, i32* %eax.global-to-local, align 8
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_215a7, i32* %v2_21582, align 4
  br label %dec_label_pc_215b3

dec_label_pc_215b3:                               ; preds = %dec_label_pc_2159c, %dec_label_pc_2157c
  %v0_215b3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_215b3 = add i32 %v0_215b3, 8
  %v2_215b3 = inttoptr i32 %v1_215b3 to i32*
  %v3_215b3 = load i32, i32* %v2_215b3, align 4
  store i32 %v3_215b3, i32* %esi.global-to-local, align 4
  %v1_215ba = icmp eq i32 %v3_215b3, 0
  %v1_215bc = icmp eq i1 %v1_215ba, false
  br i1 %v1_215bc, label %dec_label_pc_215c2, label %dec_label_pc_215be

dec_label_pc_215be:                               ; preds = %dec_label_pc_215b3
  %v0_215be = call i32 @function_2162e()
  store i32 %v0_215be, i32* %eax.global-to-local, align 8
  ret i32 %v0_215be

dec_label_pc_215c2:                               ; preds = %dec_label_pc_215b3
  %v2_215c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_215c2

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 1, 6, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_215d2() local_unnamed_addr {
dec_label_pc_215d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_215d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_215d2
}

define i32 @function_2162e() local_unnamed_addr {
dec_label_pc_2162e:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_21632 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21632 = icmp eq i32 %v1_21632, %tmp8
  %v1_2163d = icmp eq i1 %v3_21632, false
  br i1 %v1_2163d, label %dec_label_pc_21647, label %dec_label_pc_2163f

dec_label_pc_2163f:                               ; preds = %dec_label_pc_2162e
  ret i32 %tmp7

dec_label_pc_21647:                               ; preds = %dec_label_pc_2162e
  %v1_2165f = call i32 @unknown_410d0(i32 %tmp7)
  ret i32 %v1_2165f

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_2166a() local_unnamed_addr {
dec_label_pc_2166a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2166a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2166a
}

define i32 @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_stateC1ERKSH_RKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21680:
  ret i32 0
}

define i32 @function_21700() local_unnamed_addr {
dec_label_pc_21700:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_21700 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21700 = add i32 %v0_21700, 1977563419
  %v2_21700 = inttoptr i32 %v1_21700 to i32*
  %v3_21700 = load i32, i32* %v2_21700, align 4
  %v4_21700 = add i32 %v3_21700, -1
  store i32 %v4_21700, i32* %v2_21700, align 4
  %v0_21706 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21707 = add i32 %v0_21706, 40
  %v2_21707 = inttoptr i32 %v1_21707 to i32*
  %v3_21707 = load i32, i32* %v2_21707, align 4
  store i32 %v3_21707, i32* %eax.global-to-local, align 8
  %v3_2170b = load i32, i32* %v2_21707, align 4
  store i32 %v3_2170b, i32* %ecx.global-to-local, align 4
  %v1_2170f = add i32 %v3_21707, 12
  %v2_2170f = inttoptr i32 %v1_2170f to i32*
  store i32 0, i32* %v2_2170f, align 4
  %v0_21716 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_21716, i32* %edx.global-to-local, align 4
  %v1_21718 = add i32 %v0_21716, 16
  %v2_21718 = inttoptr i32 %v1_21718 to i32*
  store i32 0, i32* %v2_21718, align 4
  %v0_2171f = load i32, i32* %edx.global-to-local, align 4
  %v1_2171f = add i32 %v0_2171f, 8
  store i32 %v1_2171f, i32* %edx.global-to-local, align 4
  %v0_21722 = load i32, i32* %eax.global-to-local, align 8
  %v1_21722 = add i32 %v0_21722, 28
  %v2_21722 = inttoptr i32 %v1_21722 to i32*
  store i32 0, i32* %v2_21722, align 4
  %v0_21729 = load i32, i32* %eax.global-to-local, align 8
  %v1_21729 = add i32 %v0_21729, 12
  store i32 %v1_21729, i32* %eax.global-to-local, align 8
  %v1_2172c = load i32, i32* %ecx.global-to-local, align 4
  %v2_2172c = add i32 %v1_2172c, 20
  %v3_2172c = inttoptr i32 %v2_2172c to i32*
  store i32 %v1_21729, i32* %v3_2172c, align 4
  %v0_2172f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2172f, i32* %ebp.global-to-local, align 4
  %v1_21731 = load i32, i32* %ecx.global-to-local, align 4
  %v2_21731 = add i32 %v1_21731, 24
  %v3_21731 = inttoptr i32 %v2_21731 to i32*
  store i32 %v0_2172f, i32* %v3_21731, align 4
  %v0_21734 = load i32, i32* @esp, align 4
  %v1_21734 = add i32 %v0_21734, 28
  %v2_21734 = inttoptr i32 %v1_21734 to i32*
  %v3_21734 = load i32, i32* %v2_21734, align 4
  store i32 %v3_21734, i32* %ecx.global-to-local, align 4
  %v0_21738 = load i32, i32* %eax.global-to-local, align 8
  %v2_21738 = add i32 %v0_21734, 32
  %v3_21738 = inttoptr i32 %v2_21738 to i32*
  store i32 %v0_21738, i32* %v3_21738, align 4
  %v0_2173c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2173c = add i32 %v0_2173c, 16
  %v2_2173c = inttoptr i32 %v1_2173c to i32*
  %v3_2173c = load i32, i32* %v2_2173c, align 4
  store i32 %v3_2173c, i32* %eax.global-to-local, align 8
  %v1_2173f = icmp eq i32 %v3_2173c, 0
  br i1 %v1_2173f, label %dec_label_pc_21792, label %dec_label_pc_21743

dec_label_pc_21743:                               ; preds = %dec_label_pc_21700
  %v0_21743 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21743 = load i32, i32* @esp, align 4
  %v2_21743 = add i32 %v1_21743, 8
  %v3_21743 = inttoptr i32 %v2_21743 to i32*
  store i32 %v0_21743, i32* %v3_21743, align 4
  %v1_21747 = load i32, i32* @esp, align 4
  %v2_21747 = add i32 %v1_21747, 4
  %v3_21747 = inttoptr i32 %v2_21747 to i32*
  store i32 %v3_2173c, i32* %v3_21747, align 4
  %v0_2174b = load i32, i32* %edx.global-to-local, align 4
  %v1_2174b = load i32, i32* @esp, align 4
  %v2_2174b = inttoptr i32 %v1_2174b to i32*
  store i32 %v0_2174b, i32* %v2_2174b, align 4
  %v0_2174e = call i32 @unknown_42ba0()
  store i32 %v0_2174e, i32* %eax.global-to-local, align 8
  %v0_21753 = load i32, i32* @esp, align 4
  %v1_21753 = add i32 %v0_21753, 36
  %v2_21753 = inttoptr i32 %v1_21753 to i32*
  %v3_21753 = load i32, i32* %v2_21753, align 4
  store i32 %v3_21753, i32* %edx.global-to-local, align 4
  store i32 %v0_2174e, i32* %ebp.global-to-local, align 4
  %v2_21759 = add i32 %v3_21753, 16
  %v3_21759 = inttoptr i32 %v2_21759 to i32*
  store i32 %v0_2174e, i32* %v3_21759, align 4
  %v0_21762.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_21762113 = add i32 %v0_21762.pre, 8
  %v2_21762114 = inttoptr i32 %v1_21762113 to i32*
  %v3_21762115 = load i32, i32* %v2_21762114, align 4
  store i32 %v3_21762115, i32* %edx.global-to-local, align 4
  %v1_21765116 = icmp eq i32 %v3_21762115, 0
  %v1_21767117 = icmp eq i1 %v1_21765116, false
  br i1 %v1_21767117, label %dec_label_pc_21760, label %dec_label_pc_21769

dec_label_pc_21760:                               ; preds = %dec_label_pc_21743, %dec_label_pc_21760
  %v3_21762118 = phi i32 [ %v3_21762, %dec_label_pc_21760 ], [ %v3_21762115, %dec_label_pc_21743 ]
  store i32 %v3_21762118, i32* %ebp.global-to-local, align 4
  %v1_21762 = add i32 %v3_21762118, 8
  %v2_21762 = inttoptr i32 %v1_21762 to i32*
  %v3_21762 = load i32, i32* %v2_21762, align 4
  store i32 %v3_21762, i32* %edx.global-to-local, align 4
  %v1_21765 = icmp eq i32 %v3_21762, 0
  %v1_21767 = icmp eq i1 %v1_21765, false
  br i1 %v1_21767, label %dec_label_pc_21760, label %dec_label_pc_21769

dec_label_pc_21769:                               ; preds = %dec_label_pc_21760, %dec_label_pc_21743
  %v0_2176d.lcssa = phi i32 [ %v0_21762.pre, %dec_label_pc_21743 ], [ %v3_21762118, %dec_label_pc_21760 ]
  %v0_21769 = load i32, i32* @esp, align 4
  %v1_21769 = add i32 %v0_21769, 36
  %v2_21769 = inttoptr i32 %v1_21769 to i32*
  %v3_21769 = load i32, i32* %v2_21769, align 4
  store i32 %v3_21769, i32* %ecx.global-to-local, align 4
  %v2_2176d = add i32 %v3_21769, 20
  %v3_2176d = inttoptr i32 %v2_2176d to i32*
  store i32 %v0_2176d.lcssa, i32* %v3_2176d, align 4
  %v0_2177a.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_2177a105 = add i32 %v0_2177a.pre, 12
  %v2_2177a106 = inttoptr i32 %v1_2177a105 to i32*
  %v3_2177a107 = load i32, i32* %v2_2177a106, align 4
  store i32 %v3_2177a107, i32* %edx.global-to-local, align 4
  %v1_2177d108 = icmp eq i32 %v3_2177a107, 0
  %v1_2177f109 = icmp eq i1 %v1_2177d108, false
  br i1 %v1_2177f109, label %dec_label_pc_21778, label %dec_label_pc_21781

dec_label_pc_21778:                               ; preds = %dec_label_pc_21769, %dec_label_pc_21778
  %v3_2177a110 = phi i32 [ %v3_2177a, %dec_label_pc_21778 ], [ %v3_2177a107, %dec_label_pc_21769 ]
  store i32 %v3_2177a110, i32* %eax.global-to-local, align 8
  %v1_2177a = add i32 %v3_2177a110, 12
  %v2_2177a = inttoptr i32 %v1_2177a to i32*
  %v3_2177a = load i32, i32* %v2_2177a, align 4
  store i32 %v3_2177a, i32* %edx.global-to-local, align 4
  %v1_2177d = icmp eq i32 %v3_2177a, 0
  %v1_2177f = icmp eq i1 %v1_2177d, false
  br i1 %v1_2177f, label %dec_label_pc_21778, label %dec_label_pc_21781

dec_label_pc_21781:                               ; preds = %dec_label_pc_21778, %dec_label_pc_21769
  %v0_21789.lcssa = phi i32 [ %v0_2177a.pre, %dec_label_pc_21769 ], [ %v3_2177a110, %dec_label_pc_21778 ]
  %v0_21781 = load i32, i32* @esp, align 4
  %v1_21781 = add i32 %v0_21781, 36
  %v2_21781 = inttoptr i32 %v1_21781 to i32*
  %v3_21781 = load i32, i32* %v2_21781, align 4
  store i32 %v3_21781, i32* %edx.global-to-local, align 4
  %v1_21785 = add i32 %v0_21781, 28
  %v2_21785 = inttoptr i32 %v1_21785 to i32*
  %v3_21785 = load i32, i32* %v2_21785, align 4
  store i32 %v3_21785, i32* %ecx.global-to-local, align 4
  %v2_21789 = add i32 %v3_21781, 24
  %v3_21789 = inttoptr i32 %v2_21789 to i32*
  store i32 %v0_21789.lcssa, i32* %v3_21789, align 4
  %v0_2178c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2178c = add i32 %v0_2178c, 28
  %v2_2178c = inttoptr i32 %v1_2178c to i32*
  %v3_2178c = load i32, i32* %v2_2178c, align 4
  store i32 %v3_2178c, i32* %eax.global-to-local, align 8
  %v1_2178f = load i32, i32* %edx.global-to-local, align 4
  %v2_2178f = add i32 %v1_2178f, 28
  %v3_2178f = inttoptr i32 %v2_2178f to i32*
  store i32 %v3_2178c, i32* %v3_2178f, align 4
  br label %dec_label_pc_21792

dec_label_pc_21792:                               ; preds = %dec_label_pc_21781, %dec_label_pc_21700
  %v0_21792 = load i32, i32* @esp, align 4
  %v1_21792 = add i32 %v0_21792, 28
  %v2_21792 = inttoptr i32 %v1_21792 to i32*
  %v3_21792 = load i32, i32* %v2_21792, align 4
  store i32 %v3_21792, i32* %edx.global-to-local, align 4
  %v1_21796 = add i32 %v0_21792, 36
  %v2_21796 = inttoptr i32 %v1_21796 to i32*
  %v3_21796 = load i32, i32* %v2_21796, align 4
  store i32 %v3_21796, i32* @eax, align 8
  %v1_2179a = add i32 %v3_21792, 20
  %v2_2179a = inttoptr i32 %v1_2179a to i32*
  %v3_2179a = load i32, i32* %v2_2179a, align 4
  store i32 %v3_2179a, i32* %edi.global-to-local, align 4
  %v1_2179d = add i32 %v3_21792, 12
  store i32 %v1_2179d, i32* %edx.global-to-local, align 4
  %v1_217a0 = inttoptr i32 %v3_21796 to i32*
  %v2_217a0 = load i32, i32* %v1_217a0, align 4
  store i32 %v2_217a0, i32* %esi.global-to-local, align 4
  %v2_217a2 = add i32 %v0_21792, 24
  %v3_217a2 = inttoptr i32 %v2_217a2 to i32*
  store i32 %v1_2179d, i32* %v3_217a2, align 4
  %v0_217a6 = load i32, i32* %edi.global-to-local, align 4
  %v1_217a6 = load i32, i32* %edx.global-to-local, align 4
  %v12_217a6 = icmp eq i32 %v0_217a6, %v1_217a6
  br i1 %v12_217a6, label %bb, label %dec_label_pc_217aa

bb:                                               ; preds = %dec_label_pc_21792
  %v1_217a8 = call i32 @function_21800()
  store i32 %v1_217a8, i32* @eax, align 8
  br label %dec_label_pc_217aa

dec_label_pc_217aa:                               ; preds = %bb, %dec_label_pc_21792
  %v0_217b0 = load i32, i32* @esp, align 4
  %v1_217b0 = add i32 %v0_217b0, 32
  %v2_217b0 = inttoptr i32 %v1_217b0 to i32*
  %v3_217b0 = load i32, i32* %v2_217b0, align 4
  %v4_217b0 = load i32, i32* %ebp.global-to-local, align 4
  %v15_217b0 = icmp eq i32 %v3_217b0, %v4_217b0
  br i1 %v15_217b0, label %bb104, label %dec_label_pc_217ba

bb104:                                            ; preds = %dec_label_pc_217aa
  %v1_217b4 = call i32 @function_218ac()
  store i32 %v1_217b4, i32* @eax, align 8
  %v1_217ba.pre = load i32, i32* @esp, align 4
  %v1_217be.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_217ba

dec_label_pc_217ba:                               ; preds = %bb104, %dec_label_pc_217aa
  %v1_217be = phi i32 [ %v1_217be.pre, %bb104 ], [ %v4_217b0, %dec_label_pc_217aa ]
  %v1_217ba = phi i32 [ %v1_217ba.pre, %bb104 ], [ %v0_217b0, %dec_label_pc_217aa ]
  %v0_217ba = load i32, i32* %edi.global-to-local, align 4
  %v2_217ba = add i32 %v1_217ba, 24
  %v3_217ba = inttoptr i32 %v2_217ba to i32*
  %v4_217ba = load i32, i32* %v3_217ba, align 4
  %v15_217ba = icmp eq i32 %v0_217ba, %v4_217ba
  %v0_217be = load i32, i32* %esi.global-to-local, align 4
  %v2_217be = add i32 %v1_217be, 28
  %v3_217be = inttoptr i32 %v2_217be to i32*
  store i32 %v0_217be, i32* %v3_217be, align 4
  %v0_217c1 = load i32, i32* @esp, align 4
  %v1_217c1 = add i32 %v0_217c1, 28
  %v2_217c1 = inttoptr i32 %v1_217c1 to i32*
  %v3_217c1 = load i32, i32* %v2_217c1, align 4
  store i32 %v3_217c1, i32* %ebx.global-to-local, align 4
  %v0_217ca.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v15_217ba, label %dec_label_pc_217ca, label %dec_label_pc_217c7

dec_label_pc_217c7:                               ; preds = %dec_label_pc_217ba
  %v1_217c7 = add i32 %v0_217ca.pre, 28
  %v2_217c7 = inttoptr i32 %v1_217c7 to i32*
  %v3_217c7 = load i32, i32* %v2_217c7, align 4
  store i32 %v3_217c7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_217ca

dec_label_pc_217ca:                               ; preds = %dec_label_pc_217ba, %dec_label_pc_217c7
  %v2_217ca = inttoptr i32 %v0_217c1 to i32*
  store i32 %v0_217ca.pre, i32* %v2_217ca, align 4
  %v3_217ca = load i32, i32* @eax, align 8
  ret i32 %v3_217ca

; uselistorder directives
  uselistorder i32 %v4_217b0, { 1, 0 }
  uselistorder i32 %v3_2177a, { 1, 2, 0 }
  uselistorder i32 %v3_21762, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 12, 7, 8, 9, 10, 11 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 40, { 5, 0, 6, 7, 12, 19, 9, 10, 13, 14, 8, 3, 4, 15, 11, 16, 1, 2, 17, 18 }
  uselistorder label %dec_label_pc_217ca, { 1, 0 }
  uselistorder label %dec_label_pc_21778, { 1, 0 }
  uselistorder label %dec_label_pc_21760, { 1, 0 }
}

define i32 @function_217d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_217d2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_217d2 = load i32, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v15_217d8 = icmp eq i32 %v0_217d2, %arg1
  br i1 %v15_217d8, label %dec_label_pc_217ec.preheader, label %dec_label_pc_217de

dec_label_pc_217de:                               ; preds = %dec_label_pc_217d2
  %v1_217de = add i32 %v0_217d2, 28
  %v2_217de = inttoptr i32 %v1_217de to i32*
  %v3_217de = load i32, i32* %v2_217de, align 4
  store i32 %v3_217de, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_217ec.preheader

dec_label_pc_217ec.preheader:                     ; preds = %dec_label_pc_217d2, %dec_label_pc_217de
  %v0_217fc = phi i32 [ %arg2, %dec_label_pc_217d2 ], [ %v3_217de, %dec_label_pc_217de ]
  %v0_217ec.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_217ec102 = icmp eq i32 %v0_217ec.pre, %v0_217fc
  %v1_217ee103 = icmp eq i1 %v12_217ec102, false
  br i1 %v1_217ee103, label %dec_label_pc_217e8.lr.ph, label %dec_label_pc_217f0

dec_label_pc_217e8.lr.ph:                         ; preds = %dec_label_pc_217ec.preheader
  %v0_217ea.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_217e8

dec_label_pc_217e8:                               ; preds = %dec_label_pc_217e8.lr.ph, %dec_label_pc_217e8
  %v0_217ea = phi i32 [ %v0_217ea.pre, %dec_label_pc_217e8.lr.ph ], [ %v2_217ea, %dec_label_pc_217e8 ]
  %v0_217e8104 = phi i32 [ %v0_217ec.pre, %dec_label_pc_217e8.lr.ph ], [ %v2_217e8, %dec_label_pc_217e8 ]
  %v1_217e8 = inttoptr i32 %v0_217e8104 to i32*
  %v2_217e8 = load i32, i32* %v1_217e8, align 4
  store i32 %v2_217e8, i32* %ebx.global-to-local, align 4
  %v1_217ea = inttoptr i32 %v0_217ea to i32*
  %v2_217ea = load i32, i32* %v1_217ea, align 4
  store i32 %v2_217ea, i32* %esi.global-to-local, align 4
  %v12_217ec = icmp eq i32 %v2_217e8, %v0_217fc
  %v1_217ee = icmp eq i1 %v12_217ec, false
  br i1 %v1_217ee, label %dec_label_pc_217e8, label %dec_label_pc_217f0

dec_label_pc_217f0:                               ; preds = %dec_label_pc_217e8, %dec_label_pc_217ec.preheader
  ret i32 %v0_217fc

; uselistorder directives
  uselistorder i32 %v2_217ea, { 1, 0 }
  uselistorder i32 %v2_217e8, { 0, 2, 1 }
  uselistorder i32 %v0_217fc, { 2, 1, 0 }
  uselistorder i32 %v0_217d2, { 1, 0 }
  uselistorder label %dec_label_pc_217e8, { 1, 0 }
  uselistorder label %dec_label_pc_217ec.preheader, { 1, 0 }
}

define i32 @function_21800() local_unnamed_addr {
dec_label_pc_21800:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_21808 = add i32 %tmp2, 4
  %v2_21808 = inttoptr i32 %v1_21808 to i32*
  store i32 0, i32* %v2_21808, align 4
  %v0_2180f = load i32, i32* %eax.global-to-local, align 8
  %v1_2180f = load i32, i32* %edx.global-to-local, align 4
  %v2_2180f = inttoptr i32 %v1_2180f to i32*
  store i32 %v0_2180f, i32* %v2_2180f, align 4
  %v2_21811 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_21811
}

define i32 @function_2181c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2181c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2181c = load i32, i32* %ebx.global-to-local, align 4
  %v1_2181c = add i32 %v0_2181c, -1960565676
  %v2_2181c = inttoptr i32 %v1_2181c to i32*
  %v3_2181c = load i32, i32* %v2_2181c, align 4
  %v4_2181c = sub i32 %v3_2181c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_2181c, i32* %v2_2181c, align 4
  %v0_21823 = load i32, i32* %eax.global-to-local, align 8
  %v11_21823 = and i32 %v0_21823, -216
  store i32 %v11_21823, i32* %eax.global-to-local, align 8
  %v1_21825 = or i32 %v11_21823, 4
  %v2_21825 = inttoptr i32 %v1_21825 to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_21825, align 4
  %v0_2182c = load i32, i32* %eax.global-to-local, align 8
  %v1_2182c = add i32 %v0_2182c, 8
  %v2_2182c = inttoptr i32 %v1_2182c to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_2182c, align 4
  %v0_21833 = load i32, i32* %edx.global-to-local, align 4
  %v1_21833 = load i32, i32* %eax.global-to-local, align 8
  %v2_21833 = add i32 %v1_21833, 12
  %v3_21833 = inttoptr i32 %v2_21833 to i32*
  store i32 %v0_21833, i32* %v3_21833, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_2183a = load i32, i32* %eax.global-to-local, align 8
  %v1_2183a = inttoptr i32 %v0_2183a to i32*
  store i32 ptrtoint (%vtable_31448_type* @global_var_31448.2747 to i32), i32* %v1_2183a, align 4
  %v0_21840 = load i32, i32* %eax.global-to-local, align 8
  %v1_21840 = load i32, i32* %ecx.global-to-local, align 4
  %v2_21840 = add i32 %v1_21840, 4
  %v3_21840 = inttoptr i32 %v2_21840 to i32*
  store i32 %v0_21840, i32* %v3_21840, align 4
  %v0_21843 = load i32, i32* %edx.global-to-local, align 4
  %v1_21843 = add i32 %v0_21843, 8
  %v2_21843 = inttoptr i32 %v1_21843 to i32*
  %v3_21843 = load i32, i32* %v2_21843, align 4
  store i32 %v3_21843, i32* %eax.global-to-local, align 8
  %v1_21846 = load i32, i32* %ecx.global-to-local, align 4
  %v2_21846 = add i32 %v1_21846, 8
  %v3_21846 = inttoptr i32 %v2_21846 to i32*
  store i32 %v3_21843, i32* %v3_21846, align 4
  %v0_21849 = load i32, i32* %edx.global-to-local, align 4
  %v1_21849 = add i32 %v0_21849, 12
  %v2_21849 = inttoptr i32 %v1_21849 to i32*
  %v3_21849 = load i32, i32* %v2_21849, align 4
  store i32 %v3_21849, i32* @eax, align 8
  %v1_2184c = icmp eq i32 %v3_21849, 0
  %v1_2184e = load i32, i32* %ecx.global-to-local, align 4
  %v2_2184e = add i32 %v1_2184e, 12
  %v3_2184e = inttoptr i32 %v2_2184e to i32*
  store i32 %v3_21849, i32* %v3_2184e, align 4
  br i1 %v1_2184c, label %dec_label_pc_21857, label %dec_label_pc_21853

dec_label_pc_21853:                               ; preds = %dec_label_pc_2181c
  %v0_21853 = load i32, i32* @eax, align 8
  %v1_21853 = add i32 %v0_21853, 4
  %v2_21853 = inttoptr i32 %v1_21853 to i32*
  %v3_21853 = load i32, i32* %v2_21853, align 4
  %v4_21853 = add i32 %v3_21853, 1
  store i32 %v4_21853, i32* %v2_21853, align 4
  br label %dec_label_pc_21857

dec_label_pc_21857:                               ; preds = %dec_label_pc_21853, %dec_label_pc_2181c
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_2185b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2185b = xor i32 %v1_2185b, %arg2
  %v3_2185b = icmp eq i32 %v2_2185b, 0
  store i32 %v2_2185b, i32* %edx.global-to-local, align 4
  %v1_21862 = icmp eq i1 %v3_2185b, false
  br i1 %v1_21862, label %bb, label %dec_label_pc_21857.dec_label_pc_21864_crit_edge

dec_label_pc_21857.dec_label_pc_21864_crit_edge:  ; preds = %dec_label_pc_21857
  %v0_2186b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_21864

bb:                                               ; preds = %dec_label_pc_21857
  %v2_21862 = call i32 @function_2188e()
  store i32 %v2_21862, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21864

dec_label_pc_21864:                               ; preds = %dec_label_pc_21857.dec_label_pc_21864_crit_edge, %bb
  %v0_2186b = phi i32 [ %v0_2186b.pre, %dec_label_pc_21857.dec_label_pc_21864_crit_edge ], [ %v2_21862, %bb ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2186b

; uselistorder directives
  uselistorder i32 %v11_21823, { 1, 0 }
  uselistorder i32 -216, { 1, 2, 0 }
  uselistorder label %dec_label_pc_21864, { 1, 0 }
}

define i32 @function_2186d() local_unnamed_addr {
dec_label_pc_2186d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2186d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2186d
}

define i32 @function_2187a() local_unnamed_addr {
dec_label_pc_2187a:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_2188e() local_unnamed_addr {
dec_label_pc_2188e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_218ac() local_unnamed_addr {
dec_label_pc_218ac:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v7_218d9 = call i32 @unknown_3fee0(i32 %tmp, i32 ptrtoint ([51 x i8]* @global_var_dd74.2726 to i32), i32 80, i32 ptrtoint ([809 x i8]* @global_var_2b2a0.2748 to i32))
  %v0_218de = call i32 @function_2187a()
  ret i32 %v0_218de
}

define i32 @function_218e1() local_unnamed_addr {
dec_label_pc_218e1:
  %eax.global-to-local = alloca i32, align 4
  %v0_218e1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_218e1
}

define i32 @_ZNK5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_218f0:
  %v1_21913 = add i32 %arg1, 12
  ret i32 %v1_21913
}

define i32 @function_2193e() local_unnamed_addr {
dec_label_pc_2193e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21949(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21949:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_21949 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21949 = add i32 %v0_21949, 1697391684
  %v2_21949 = inttoptr i32 %v1_21949 to i32*
  %v3_21949 = load i32, i32* %v2_21949, align 4
  %v4_21949 = add i32 %v3_21949, -1
  store i32 %v4_21949, i32* %v2_21949, align 4
  %v0_2194f = load i32, i32* %eax.global-to-local, align 8
  %v1_2194f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2194f = xor i32 %v1_2194f, %v0_2194f
  %v3_2194f = icmp eq i32 %v2_2194f, 0
  store i32 %v2_2194f, i32* @eax, align 8
  %v1_21955 = icmp eq i1 %v3_2194f, false
  br i1 %v1_21955, label %bb, label %dec_label_pc_2195b

bb:                                               ; preds = %dec_label_pc_21949
  %v2_21955 = call i32 @function_21a45()
  store i32 %v2_21955, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2195b

dec_label_pc_2195b:                               ; preds = %bb, %dec_label_pc_21949
  %v0_2196e = phi i32 [ %v2_21955, %bb ], [ %v2_2194f, %dec_label_pc_21949 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2196e
}

define i32 @function_219c4() local_unnamed_addr {
dec_label_pc_219c4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_40 = alloca i32, align 4
  %stack_var_32 = alloca i32, align 4
  %v0_219c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_219c4 = add i32 %v0_219c4, -954457004
  %v2_219c4 = inttoptr i32 %v1_219c4 to i32*
  %v3_219c4 = load i32, i32* %v2_219c4, align 4
  %v4_219c4 = sub i32 %v3_219c4, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_219c4, i32* %v2_219c4, align 4
  %v0_219ca = load i32, i32* %eax.global-to-local, align 8
  %v1_219ca = add i32 %v0_219ca, 20
  %v2_219ca = inttoptr i32 %v1_219ca to i8*
  %v3_219ca = load i8, i8* %v2_219ca, align 1
  %v4_219ca = load i32, i32* %ecx.global-to-local, align 4
  %v5_219ca = udiv i32 %v4_219ca, 256
  %v6_219ca = trunc i32 %v5_219ca to i8
  %v7_219ca = add i8 %v6_219ca, %v3_219ca
  store i8 %v7_219ca, i8* %v2_219ca, align 1
  %v0_219cd = load i32, i32* %eax.global-to-local, align 8
  %v4_219cd = mul i32 %v0_219cd, 2
  store i32 %v4_219cd, i32* %eax.global-to-local, align 8
  %v1_219cf = add i32 %v4_219cd, 4
  %v2_219cf = inttoptr i32 %v1_219cf to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_219cf, align 4
  %v0_219d6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_219d6 = load i32, i32* %eax.global-to-local, align 8
  %v2_219d6 = add i32 %v1_219d6, 12
  %v3_219d6 = inttoptr i32 %v2_219d6 to i32*
  store i32 %v0_219d6, i32* %v3_219d6, align 4
  %v2_219d9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_219d9, i32* %ecx.global-to-local, align 4
  %v0_219db = load i32, i32* %eax.global-to-local, align 8
  %v1_219db = add i32 %v0_219db, 8
  %v2_219db = inttoptr i32 %v1_219db to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_219db, align 4
  %v0_219e2 = load i32, i32* %edx.global-to-local, align 4
  %v1_219e2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_219e2 = inttoptr i32 %v1_219e2 to i32*
  store i32 %v0_219e2, i32* %v2_219e2, align 4
  %v0_219e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_219e4 = add i32 %v0_219e4, 4
  %v2_219e4 = inttoptr i32 %v1_219e4 to i32*
  %v3_219e4 = load i32, i32* %v2_219e4, align 4
  store i32 %v3_219e4, i32* %edx.global-to-local, align 4
  %v0_219e7 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_219e7, i32* %v2_219e4, align 4
  %v2_219ea = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_219ea, i32* @eax, align 8
  %v0_219f5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_219f5, i32* %stack_var_32, align 4
  %v1_219f9 = call i32 @function_31e30(i32 %v2_219ea)
  %v2_219fe = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_219fe, i32* @eax, align 8
  %v1_21a00 = icmp eq i32 %v2_219fe, 0
  br i1 %v1_21a00, label %dec_label_pc_21a3a, label %dec_label_pc_21a0a

dec_label_pc_21a0a:                               ; preds = %dec_label_pc_219c4
  store i32 %v2_219fe, i32* %stack_var_40, align 4
  %v2_21a23 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_21a23, i32* %eax.global-to-local, align 8
  %v4_21a2b = call i32 @unknown_42970(i32 %v2_219fe, i32 0, i32 %v2_21a23, i32 0)
  store i32 %v4_21a2b, i32* @eax, align 8
  %v0_21a30 = call i32 @function_2193e()
  store i32 %v0_21a30, i32* %eax.global-to-local, align 8
  ret i32 %v0_21a30

dec_label_pc_21a3a:                               ; preds = %dec_label_pc_219c4
  %v0_21a40 = call i32 @function_2fb36()
  store i32 %v0_21a40, i32* %eax.global-to-local, align 8
  ret i32 %v0_21a40

; uselistorder directives
  uselistorder i32 %v2_219fe, { 1, 0, 2, 3 }
  uselistorder i32 %v4_219cd, { 1, 0 }
}

define i32 @function_21a45() local_unnamed_addr {
dec_label_pc_21a45:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21a84() local_unnamed_addr {
dec_label_pc_21a84:
  %eax.global-to-local = alloca i32, align 4
  %v0_21a84 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21a84
}

define i32 @function_21a85() local_unnamed_addr {
dec_label_pc_21a85:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21a9a() local_unnamed_addr {
dec_label_pc_21a9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_21a9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21a9a
}

define i32 @function_21aa3() local_unnamed_addr {
dec_label_pc_21aa3:
  %v0_21aa3 = call i32 @function_21a85()
  ret i32 %v0_21aa3
}

define i32 @function_21aa5() local_unnamed_addr {
dec_label_pc_21aa5:
  %v0_21ab0 = call i32 @function_21a85()
  ret i32 %v0_21ab0

; uselistorder directives
  uselistorder i32 ()* @function_21a85, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_21ac0:
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg5, i32* @esi, align 4
  %v1_21af0 = icmp eq i32 %arg3, 0
  %v1_21af2 = add i32 %arg2, 4
  store i32 %v1_21af2, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_21af0, label %bb, label %dec_label_pc_21b07

bb:                                               ; preds = %dec_label_pc_21ac0
  %v2_21b01 = call i32 @function_21b90(i32 %v1_21af2)
  br label %dec_label_pc_21b07

dec_label_pc_21b07:                               ; preds = %bb, %dec_label_pc_21ac0
  %v2_21b0b = phi i32 [ %v2_21b01, %bb ], [ %arg3, %dec_label_pc_21ac0 ]
  ret i32 %v2_21b0b
}

define i32 @function_21b5a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_21b5a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_21b5a = load i32, i32* %ebx.global-to-local, align 4
  %v1_21b5a = add i32 %v0_21b5a, -2095569852
  %v2_21b5a = inttoptr i32 %v1_21b5a to i32*
  %v3_21b5a = load i32, i32* %v2_21b5a, align 4
  %v4_21b5a = sub i32 %v3_21b5a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_21b5a, i32* %v2_21b5a, align 4
  %v0_21b60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21b60 = add i32 %v0_21b60, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_21b60, i32* %ebx.global-to-local, align 4
  %v0_21b61 = load i32, i32* %eax.global-to-local, align 8
  %v2_21b61 = load i1, i1* %cf.global-to-local, align 1
  %v3_21b61 = zext i1 %v2_21b61 to i32
  %v4_21b61 = add i32 %v0_21b61, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_21b61 = add i32 %v4_21b61, %v3_21b61
  %v25_21b61 = urem i32 %v5_21b61, 256
  %v27_21b61 = and i32 %v0_21b61, -256
  %v28_21b61 = or i32 %v25_21b61, %v27_21b61
  store i32 %v28_21b61, i32* %eax.global-to-local, align 8
  %v1_21b67 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_21b67 = icmp eq i32 %v1_21b67, %arg1
  %v1_21b6e = load i32, i32* %edi.global-to-local, align 4
  %v2_21b6e = inttoptr i32 %v1_21b6e to i32*
  store i32 %v28_21b61, i32* %v2_21b6e, align 4
  %v0_21b70 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_21b70, i32* @eax, align 8
  %v1_21b72 = icmp eq i1 %v3_21b67, false
  br i1 %v1_21b72, label %bb, label %dec_label_pc_21b74

bb:                                               ; preds = %dec_label_pc_21b5a
  %v2_21b72 = call i32 @function_21baa()
  store i32 %v2_21b72, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21b74

dec_label_pc_21b74:                               ; preds = %bb, %dec_label_pc_21b5a
  %v0_21b87 = phi i32 [ %v2_21b72, %bb ], [ %v0_21b70, %dec_label_pc_21b5a ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_21b84 = load i32, i32* @esp, align 4
  %v5_21b84 = icmp ugt i32 %v0_21b84, -77
  store i1 %v5_21b84, i1* %cf.global-to-local, align 1
  ret i32 %v0_21b87

; uselistorder directives
  uselistorder i32 %v0_21b61, { 1, 0 }
}

define i32 @function_21b90(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b90:
  %v0_21b90 = load i32, i32* @ebp, align 4
  %v1_21b98 = add i32 %v0_21b90, 16
  store i32 %v1_21b98, i32* @edx, align 4
  %v0_21b9b = load i32, i32* @esi, align 4
  store i32 %v0_21b9b, i32* @eax, align 8
  %v0_21b9d = call i32 @function_21ea0()
  ret i32 %v0_21b9d
}

define i32 @function_21baa() local_unnamed_addr {
dec_label_pc_21baa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_21bb0:
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg1, i32* @esi, align 4
  %v4_21bcc = sext i8 %arg3 to i32
  store i32 %v4_21bcc, i32* @ebx, align 4
  %v1_21bd0 = add i32 %arg2, 8
  %v2_21bd0 = inttoptr i32 %v1_21bd0 to i32*
  %v3_21bd0 = load i32, i32* %v2_21bd0, align 4
  store i32 %v3_21bd0, i32* @edi, align 4
  %v1_21bd7 = icmp eq i32 %v3_21bd0, 0
  %v1_21bd9 = icmp eq i1 %v1_21bd7, false
  br i1 %v1_21bd9, label %dec_label_pc_21be9.preheader, label %dec_label_pc_21bdb

dec_label_pc_21be9.preheader:                     ; preds = %dec_label_pc_21bb0
  %v5_21bf3 = icmp eq i8 %arg3, 0
  %v1_21bf5 = icmp eq i1 %v5_21bf3, false
  br label %dec_label_pc_21be9

dec_label_pc_21bdb:                               ; preds = %dec_label_pc_21bb0
  %v1_21bdb = call i32 @function_21c8b(i32 %arg2)
  ret i32 %v1_21bdb

dec_label_pc_21be0:                               ; preds = %dec_label_pc_21be9
  %v1_21be0 = add i32 %v0_21be0, 8
  %v2_21be0 = inttoptr i32 %v1_21be0 to i32*
  %v3_21be0 = load i32, i32* %v2_21be0, align 4
  %v1_21be3 = icmp eq i32 %v3_21be0, 0
  br i1 %v1_21be3, label %dec_label_pc_21bfe.thread120, label %dec_label_pc_21be7

dec_label_pc_21bfe.thread120:                     ; preds = %dec_label_pc_21be0
  br label %dec_label_pc_21c02

dec_label_pc_21be7:                               ; preds = %dec_label_pc_21be0, %dec_label_pc_21bf7
  %v0_21be7 = phi i32 [ %v3_21be0, %dec_label_pc_21be0 ], [ %v3_21bf7, %dec_label_pc_21bf7 ]
  store i32 %v0_21be7, i32* @edi, align 4
  br label %dec_label_pc_21be9

dec_label_pc_21be9:                               ; preds = %dec_label_pc_21be9.preheader, %dec_label_pc_21be7
  %v0_21be0 = phi i32 [ %v0_21be7, %dec_label_pc_21be7 ], [ %v3_21bd0, %dec_label_pc_21be9.preheader ]
  br i1 %v1_21bf5, label %dec_label_pc_21be0, label %dec_label_pc_21bf7

dec_label_pc_21bf7:                               ; preds = %dec_label_pc_21be9
  %v1_21bf7 = add i32 %v0_21be0, 12
  %v2_21bf7 = inttoptr i32 %v1_21bf7 to i32*
  %v3_21bf7 = load i32, i32* %v2_21bf7, align 4
  %v1_21bfa = icmp eq i32 %v3_21bf7, 0
  %v1_21bfc = icmp eq i1 %v1_21bfa, false
  br i1 %v1_21bfc, label %dec_label_pc_21be7, label %bb

bb:                                               ; preds = %dec_label_pc_21bf7
  %v1_21c00 = call i32 @function_21c48()
  %v0_21c06.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_21c02

dec_label_pc_21c02:                               ; preds = %dec_label_pc_21bfe.thread120, %bb
  %v0_21c06 = phi i32 [ %v0_21c06.pre, %bb ], [ %v0_21be0, %dec_label_pc_21bfe.thread120 ]
  %v2_21c06 = add i32 %arg2, 12
  %v3_21c06 = inttoptr i32 %v2_21c06 to i32*
  %v4_21c06 = load i32, i32* %v3_21c06, align 4
  %v15_21c06 = icmp eq i32 %v0_21c06, %v4_21c06
  br i1 %v15_21c06, label %bb118, label %dec_label_pc_21c0b

bb118:                                            ; preds = %dec_label_pc_21c02
  %v1_21c09 = call i32 @function_21c58()
  br label %dec_label_pc_21c0b

dec_label_pc_21c0b:                               ; preds = %bb118, %dec_label_pc_21c02
  %v3_21c0b = phi i32 [ %v1_21c09, %bb118 ], [ %arg2, %dec_label_pc_21c02 ]
  ret i32 %v3_21c0b

; uselistorder directives
  uselistorder i32 %v3_21bf7, { 1, 0 }
  uselistorder i32 %v0_21be0, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_21c02, { 1, 0 }
  uselistorder label %dec_label_pc_21be9, { 1, 0 }
  uselistorder label %dec_label_pc_21be7, { 1, 0 }
}

define i32 @function_21c23() local_unnamed_addr {
dec_label_pc_21c23:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_21c29() local_unnamed_addr {
dec_label_pc_21c29:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_21c2d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21c2d = icmp eq i32 %v1_21c2d, %tmp10
  %v0_21c34 = load i32, i32* @esi, align 4
  store i32 %v0_21c34, i32* @eax, align 8
  %v1_21c36 = icmp eq i1 %v3_21c2d, false
  br i1 %v1_21c36, label %bb, label %dec_label_pc_21c38

bb:                                               ; preds = %dec_label_pc_21c29
  %v2_21c36 = call i32 @function_21c95()
  br label %dec_label_pc_21c38

dec_label_pc_21c38:                               ; preds = %bb, %dec_label_pc_21c29
  %v0_21c3f = phi i32 [ %v2_21c36, %bb ], [ %v0_21c34, %dec_label_pc_21c29 ]
  ret i32 %v0_21c3f
}

define i32 @function_21c48() local_unnamed_addr {
dec_label_pc_21c48:
  %v0_21c48 = load i32, i32* @edi, align 4
  %v1_21c4c = add i32 %v0_21c48, 16
  ret i32 %v1_21c4c
}

define i32 @function_21c58() local_unnamed_addr {
dec_label_pc_21c58:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v2_21c5c = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_21c5c, i32* %eax.global-to-local, align 8
  %v0_21c63 = load i32, i32* @ebx, align 4
  %v0_21c67 = load i32, i32* @edi, align 4
  %v5_21c77 = call i32 @unknown_43670(i32 %v2_21c5c, i32 %tmp7, i32 0, i32 %v0_21c67, i32 %v0_21c63)
  %v0_21c83 = load i32, i32* @esi, align 4
  %v1_21c83 = add i32 %v0_21c83, 4
  %v2_21c83 = inttoptr i32 %v1_21c83 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_21c83, align 1
  %v0_21c87 = load i32, i32* %eax.global-to-local, align 8
  %v1_21c87 = load i32, i32* @esi, align 4
  %v2_21c87 = inttoptr i32 %v1_21c87 to i32*
  store i32 %v0_21c87, i32* %v2_21c87, align 4
  %v0_21c89 = call i32 @function_21c29()
  store i32 %v0_21c89, i32* %eax.global-to-local, align 8
  ret i32 %v0_21c89
}

define i32 @function_21c8b(i32 %arg1) local_unnamed_addr {
dec_label_pc_21c8b:
  %v0_21c8b = load i32, i32* @eax, align 8
  ret i32 %v0_21c8b
}

define i32 @function_21c95() local_unnamed_addr {
dec_label_pc_21c95:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_21ca0:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_21cb3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_21cc7 = add i32 %arg2, 4
  %v12_21cca = icmp eq i32 %v1_21cc7, %arg3
  %v4_21cd0 = sext i8 %arg4 to i32
  store i32 %v4_21cd0, i32* @ebp, align 4
  br i1 %v12_21cca, label %bb, label %dec_label_pc_21cda

bb:                                               ; preds = %dec_label_pc_21ca0
  %v2_21cd4 = call i32 @function_21de0(i32 %v0_21cb3)
  %v0_21cda.pre = load i32, i32* @ebx, align 4
  %v0_21ce3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_21cda

dec_label_pc_21cda:                               ; preds = %bb, %dec_label_pc_21ca0
  %v0_21ce3 = phi i32 [ %v0_21ce3.pre, %bb ], [ %v4_21cd0, %dec_label_pc_21ca0 ]
  %v0_21cda = phi i32 [ %v0_21cda.pre, %bb ], [ %arg3, %dec_label_pc_21ca0 ]
  %v4_21cea = trunc i32 %v0_21ce3 to i8
  %v5_21cea = icmp eq i8 %v4_21cea, 0
  br i1 %v5_21cea, label %bb114, label %dec_label_pc_21cf2

bb114:                                            ; preds = %dec_label_pc_21cda
  %v1_21cda = add i32 %v0_21cda, 16
  %v2_21cec = trunc i32 %v1_21cda to i8
  %v3_21cec = call i32 @function_21d70(i8 %v2_21cec)
  %v1_21cf5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_21cf2

dec_label_pc_21cf2:                               ; preds = %bb114, %dec_label_pc_21cda
  %v1_21cf5 = phi i32 [ %v1_21cf5.pre, %bb114 ], [ %v0_21cda, %dec_label_pc_21cda ]
  %v0_21cf2 = load i32, i32* @edi, align 4
  %v1_21cf2 = add i32 %v0_21cf2, 12
  %v2_21cf2 = inttoptr i32 %v1_21cf2 to i32*
  %v3_21cf2 = load i32, i32* %v2_21cf2, align 4
  store i32 %v3_21cf2, i32* @eax, align 8
  %v12_21cf5 = icmp eq i32 %v3_21cf2, %v1_21cf5
  br i1 %v12_21cf5, label %bb115, label %dec_label_pc_21cfd

bb115:                                            ; preds = %dec_label_pc_21cf2
  %v1_21cf7 = call i32 @function_21e58()
  br label %dec_label_pc_21cfd

dec_label_pc_21cfd:                               ; preds = %bb115, %dec_label_pc_21cf2
  %v3_21cfd = phi i32 [ %v1_21cf7, %bb115 ], [ %v3_21cf2, %dec_label_pc_21cf2 ]
  ret i32 %v3_21cfd

; uselistorder directives
  uselistorder i32 %v3_21cf2, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_21d06() local_unnamed_addr {
dec_label_pc_21d06:
  %v0_21d06 = call i32 @function_408dc189()
  ret i32 %v0_21d06
}

define i32 @function_21d2a() local_unnamed_addr {
dec_label_pc_21d2a:
  %v0_21d2a = load i1, i1* @zf, align 1
  br i1 %v0_21d2a, label %bb, label %dec_label_pc_21d30

bb:                                               ; preds = %dec_label_pc_21d2a
  %v1_21d2a = call i32 @function_21e38()
  br label %dec_label_pc_21d30

dec_label_pc_21d30:                               ; preds = %bb, %dec_label_pc_21d2a
  %v0_21d34 = load i32, i32* @ebx, align 4
  %v0_21d38 = load i32, i32* @edi, align 4
  %v0_21d3c = load i32, i32* @esi, align 4
  %v3_21d3f = call i32 @unknown_43760(i32 %v0_21d3c, i32 %v0_21d38, i32 %v0_21d34)
  ret i32 %v3_21d3f

; uselistorder directives
  uselistorder i1* @zf, { 3, 9, 11, 2, 10, 12, 13, 4, 5, 6, 7, 8, 0, 1 }
}

define i32 @function_21d47() local_unnamed_addr {
dec_label_pc_21d47:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_21d4b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21d4b = icmp eq i32 %v1_21d4b, %tmp6
  %v0_21d52 = load i32, i32* @esi, align 4
  store i32 %v0_21d52, i32* @eax, align 8
  %v1_21d54 = icmp eq i1 %v3_21d4b, false
  br i1 %v1_21d54, label %bb, label %dec_label_pc_21d5a

bb:                                               ; preds = %dec_label_pc_21d47
  %v2_21d54 = call i32 @function_21e88()
  br label %dec_label_pc_21d5a

dec_label_pc_21d5a:                               ; preds = %bb, %dec_label_pc_21d47
  %v0_21d6d = phi i32 [ %v2_21d54, %bb ], [ %v0_21d52, %dec_label_pc_21d47 ]
  ret i32 %v0_21d6d
}

define i32 @function_21d70(i8 %arg1) local_unnamed_addr {
dec_label_pc_21d70:
  %v5_21d7b = icmp eq i8 %arg1, 0
  br i1 %v5_21d7b, label %bb, label %dec_label_pc_21d83

bb:                                               ; preds = %dec_label_pc_21d70
  %v1_21d7d = call i32 @function_21e10()
  br label %dec_label_pc_21d83

dec_label_pc_21d83:                               ; preds = %bb, %dec_label_pc_21d70
  %v0_21d83 = load i32, i32* @edi, align 4
  %v1_21d83 = add i32 %v0_21d83, 16
  %v2_21d83 = inttoptr i32 %v1_21d83 to i32*
  %v3_21d83 = load i32, i32* %v2_21d83, align 4
  store i32 %v3_21d83, i32* @eax, align 8
  %v1_21d86 = load i32, i32* @ebx, align 4
  %v12_21d86 = icmp eq i32 %v3_21d83, %v1_21d86
  br i1 %v12_21d86, label %bb4, label %dec_label_pc_21d8e

bb4:                                              ; preds = %dec_label_pc_21d83
  %v1_21d88 = call i32 @function_21e7e()
  br label %dec_label_pc_21d8e

dec_label_pc_21d8e:                               ; preds = %bb4, %dec_label_pc_21d83
  %v3_21d8e = phi i32 [ %v1_21d88, %bb4 ], [ %v3_21d83, %dec_label_pc_21d83 ]
  ret i32 %v3_21d8e

; uselistorder directives
  uselistorder i32 %v3_21d83, { 1, 0, 2 }
}

define i32 @function_21d95() local_unnamed_addr {
dec_label_pc_21d95:
  %ecx.global-to-local = alloca i32, align 4
  %v0_21d95 = load i32, i32* %ecx.global-to-local, align 4
  %v1_21d95 = add i32 %v0_21d95, 273714625
  %v2_21d95 = inttoptr i32 %v1_21d95 to i32*
  %v3_21d95 = load i32, i32* %v2_21d95, align 4
  %v4_21d95 = add i32 %v3_21d95, -1
  store i32 %v4_21d95, i32* %v2_21d95, align 4
  %v0_21d9d = load i32, i32* %ecx.global-to-local, align 4
  %v0_21dae = load i32, i32* @ebx, align 4
  %v1_21dae = add i32 %v0_21dae, 12
  %v2_21dae = inttoptr i32 %v1_21dae to i32*
  %v3_21dae = load i32, i32* %v2_21dae, align 4
  %v1_21db5 = icmp eq i32 %v3_21dae, 0
  br i1 %v1_21db5, label %bb, label %dec_label_pc_21dbd

bb:                                               ; preds = %dec_label_pc_21d95
  %v2_21db7 = call i32 @function_21e78(i32 %v0_21d9d)
  %v0_21dc1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_21dbd

dec_label_pc_21dbd:                               ; preds = %bb, %dec_label_pc_21d95
  %v0_21dc1 = phi i32 [ %v0_21dc1.pre, %bb ], [ %v0_21d9d, %dec_label_pc_21d95 ]
  %v0_21dc5 = load i32, i32* @edi, align 4
  %v0_21dc9 = load i32, i32* @esi, align 4
  %v3_21dcc = call i32 @unknown_43760(i32 %v0_21dc9, i32 %v0_21dc5, i32 %v0_21dc1)
  %v0_21dd4 = call i32 @function_21d47()
  ret i32 %v0_21dd4
}

define i32 @function_21de0(i32 %arg1) local_unnamed_addr {
dec_label_pc_21de0:
  %stack_var_40 = alloca i32, align 4
  %v0_21de0 = load i32, i32* @edi, align 4
  %v1_21de0 = add i32 %v0_21de0, 20
  %v2_21de0 = inttoptr i32 %v1_21de0 to i32*
  %v3_21de0 = load i32, i32* %v2_21de0, align 4
  %v1_21de3 = icmp eq i32 %v3_21de0, 0
  %v1_21de5 = icmp eq i1 %v1_21de3, false
  br i1 %v1_21de5, label %bb, label %dec_label_pc_21de7

bb:                                               ; preds = %dec_label_pc_21de0
  %v2_21de5 = call i32 @function_21e18()
  %v0_21df2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_21de7

dec_label_pc_21de7:                               ; preds = %bb, %dec_label_pc_21de0
  %v0_21df2 = phi i32 [ %v0_21df2.pre, %bb ], [ %v0_21de0, %dec_label_pc_21de0 ]
  %v2_21de7 = ptrtoint i32* %stack_var_40 to i32
  %v2_21df6 = call i32 @unknown_43850(i32 %v2_21de7, i32 %v0_21df2)
  %v1_21e02 = load i32, i32* @esi, align 4
  %v2_21e02 = inttoptr i32 %v1_21e02 to i32*
  store i32 %arg1, i32* %v2_21e02, align 4
  %v0_21e04 = call i32 @function_21d47()
  ret i32 %v0_21e04
}

define i32 @function_21e10() local_unnamed_addr {
dec_label_pc_21e10:
  %v0_21e10 = load i32, i32* @ebx, align 4
  %v1_21e10 = load i32, i32* @esi, align 4
  %v2_21e10 = inttoptr i32 %v1_21e10 to i32*
  store i32 %v0_21e10, i32* %v2_21e10, align 4
  %v0_21e12 = call i32 @function_21d47()
  ret i32 %v0_21e12
}

define i32 @function_21e18() local_unnamed_addr {
dec_label_pc_21e18:
  %v0_21e18 = load i32, i32* @edi, align 4
  %v1_21e18 = add i32 %v0_21e18, 16
  %v2_21e18 = inttoptr i32 %v1_21e18 to i32*
  %v3_21e18 = load i32, i32* %v2_21e18, align 4
  %v1_21e31 = call i32 @function_21e3c(i32 %v3_21e18)
  ret i32 %v1_21e31
}

define i32 @function_21e38() local_unnamed_addr {
dec_label_pc_21e38:
  %v4_21e38 = load i32, i32* @eax, align 8
  ret i32 %v4_21e38
}

define i32 @function_21e3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e3c:
  %v0_21e44 = load i32, i32* @edi, align 4
  %v0_21e48 = load i32, i32* @esi, align 4
  %v3_21e4b = call i32 @unknown_43760(i32 %v0_21e48, i32 %v0_21e44, i32 0)
  %v0_21e53 = call i32 @function_21d47()
  ret i32 %v0_21e53
}

define i32 @function_21e58() local_unnamed_addr {
dec_label_pc_21e58:
  %v0_21e60 = load i32, i32* @eax, align 8
  %v0_21e64 = load i32, i32* @edi, align 4
  %v0_21e68 = load i32, i32* @esi, align 4
  %v3_21e6b = call i32 @unknown_43760(i32 %v0_21e68, i32 %v0_21e64, i32 %v0_21e60)
  %v0_21e73 = call i32 @function_21d47()
  ret i32 %v0_21e73

; uselistorder directives
  uselistorder i32 ()* @function_21d47, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_43760, { 1, 0, 3, 2 }
}

define i32 @function_21e78(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e78:
  %v0_21e78 = load i32, i32* @ebx, align 4
  %v1_21e7c = call i32 @function_21e3c(i32 %v0_21e78)
  ret i32 %v1_21e7c
}

define i32 @function_21e7e() local_unnamed_addr {
dec_label_pc_21e7e:
  %v0_21e82 = load i32, i32* @eax, align 8
  %v1_21e86 = call i32 @function_21e3c(i32 %v0_21e82)
  ret i32 %v1_21e86

; uselistorder directives
  uselistorder i32 (i32)* @function_21e3c, { 1, 2, 0 }
}

define i32 @function_21e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e80:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21e88() local_unnamed_addr {
dec_label_pc_21e88:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS4_SB_EESH_EEEEEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e90:
  ret i32 %arg1
}

define i32 @function_21ea0() local_unnamed_addr {
dec_label_pc_21ea0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_84 = alloca i32, align 4
  %stack_var_91 = alloca i32, align 4
  %tmp49 = call i8 @__decompiler_undefined_function_3()
  %v0_21ea0 = load i32, i32* @eax, align 8
  %v1_21ea0 = trunc i32 %v0_21ea0 to i8
  %v2_21ea0 = and i8 %v1_21ea0, -100
  %v8_21ea0 = zext i8 %v2_21ea0 to i32
  %v10_21ea0 = and i32 %v0_21ea0, -256
  %v11_21ea0 = or i32 %v8_21ea0, %v10_21ea0
  store i32 %v11_21ea0, i32* %eax.global-to-local, align 8
  %v1_21ea2 = inttoptr i32 %v11_21ea0 to i8*
  %v2_21ea2 = load i8, i8* %v1_21ea2, align 4
  %v5_21ea2 = add i8 %v2_21ea2, %v2_21ea0
  store i8 %v5_21ea2, i8* %v1_21ea2, align 4
  %v0_21ea4 = load i32, i32* @ebx, align 4
  %v1_21ea4 = add i32 %v0_21ea4, 9970836
  %v2_21ea4 = inttoptr i32 %v1_21ea4 to i8*
  %v3_21ea4 = load i8, i8* %v2_21ea4, align 1
  %v4_21ea4 = load i32, i32* @ecx, align 4
  %v5_21ea4 = trunc i32 %v4_21ea4 to i8
  %v6_21ea4 = add i8 %v5_21ea4, %v3_21ea4
  store i8 %v6_21ea4, i8* %v2_21ea4, align 1
  %v0_21eaa = load i32, i32* %eax.global-to-local, align 8
  %v1_21eaa = inttoptr i32 %v0_21eaa to i8*
  %v2_21eaa = load i8, i8* %v1_21eaa, align 1
  %v4_21eaa = trunc i32 %v0_21eaa to i8
  %v5_21eaa = add i8 %v2_21eaa, %v4_21eaa
  store i8 %v5_21eaa, i8* %v1_21eaa, align 1
  %v0_21eac = load i32, i32* %eax.global-to-local, align 8
  %v4_21eb0 = zext i8 %tmp49 to i32
  store i32 %v4_21eb0, i32* %eax.global-to-local, align 8
  %v0_21eb8 = load i32, i32* @ecx, align 4
  %v1_21ed1 = add i32 %v0_21eac, 4
  %v2_21ed1 = inttoptr i32 %v1_21ed1 to i32*
  %v3_21ed1 = load i32, i32* %v2_21ed1, align 4
  store i32 %v3_21ed1, i32* @eax, align 8
  %v1_21ed4 = icmp eq i32 %v3_21ed1, 0
  br i1 %v1_21ed4, label %bb, label %dec_label_pc_21edc

bb:                                               ; preds = %dec_label_pc_21ea0
  %v2_21ed6 = call i32 @function_222aa(i32 %v0_21eac)
  store i32 %v2_21ed6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21edc

dec_label_pc_21edc:                               ; preds = %bb, %dec_label_pc_21ea0
  %v0_21edc = phi i32 [ %v2_21ed6, %bb ], [ %v3_21ed1, %dec_label_pc_21ea0 ]
  %v1_21edc = add i32 %v0_21edc, 4
  %v2_21edc = inttoptr i32 %v1_21edc to i32*
  %v3_21edc = load i32, i32* %v2_21edc, align 4
  store i32 %v3_21edc, i32* @eax, align 8
  %v10_21edf = icmp eq i32 %v3_21edc, 1
  %v1_21ee2 = icmp eq i1 %v10_21edf, false
  br i1 %v1_21ee2, label %bb52, label %dec_label_pc_21ee8

bb52:                                             ; preds = %dec_label_pc_21edc
  %v3_21ee2 = sext i8 %tmp49 to i32
  %v4_21ee2 = call i32 @function_222aa(i32 %v3_21ee2)
  store i32 %v4_21ee2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21ee8

dec_label_pc_21ee8:                               ; preds = %bb52, %dec_label_pc_21edc
  %v2_21ee8 = load i32, i32* @edx, align 4
  store i32 %v2_21ee8, i32* @esi, align 4
  %v1_21eee = inttoptr i32 %v0_21eac to i32*
  %v2_21eee = load i32, i32* %v1_21eee, align 4
  store i32 %v2_21eee, i32* @eax, align 8
  %v1_21ef0 = icmp eq i32 %v2_21eee, 0
  br i1 %v1_21ef0, label %bb53, label %dec_label_pc_21ef8

bb53:                                             ; preds = %dec_label_pc_21ee8
  %v1_21ef2 = call i32 @function_22296()
  store i32 %v1_21ef2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21ef8

dec_label_pc_21ef8:                               ; preds = %bb53, %dec_label_pc_21ee8
  %v0_21ef8 = phi i32 [ %v1_21ef2, %bb53 ], [ %v2_21eee, %dec_label_pc_21ee8 ]
  %v1_21ef8 = inttoptr i32 %v0_21ef8 to i32*
  %v2_21ef8 = load i32, i32* %v1_21ef8, align 4
  store i32 %v2_21ef8, i32* @eax, align 8
  %v1_21efa = icmp eq i32 %v2_21ef8, 0
  br i1 %v1_21efa, label %bb54, label %dec_label_pc_21f02

bb54:                                             ; preds = %dec_label_pc_21ef8
  %v2_21efc = sext i8 %tmp49 to i32
  %v3_21efc = call i32 @function_222a0(i32 %v2_21efc)
  store i32 %v3_21efc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21f02

dec_label_pc_21f02:                               ; preds = %bb54, %dec_label_pc_21ef8
  %v1_21f02 = phi i32 [ %v3_21efc, %bb54 ], [ %v2_21ef8, %dec_label_pc_21ef8 ]
  %v0_21f02 = load i32, i32* @esi, align 4
  %v12_21f02 = icmp eq i32 %v0_21f02, %v1_21f02
  br i1 %v12_21f02, label %bb55, label %dec_label_pc_21f0a

bb55:                                             ; preds = %dec_label_pc_21f02
  %v2_21f04 = sext i8 %tmp49 to i32
  %v3_21f04 = call i32 @function_22048(i32 %v2_21f04)
  store i32 %v3_21f04, i32* %eax.global-to-local, align 8
  %v0_21f0e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_21f0a

dec_label_pc_21f0a:                               ; preds = %bb55, %dec_label_pc_21f02
  %v0_21f0e = phi i32 [ %v0_21f0e.pre, %bb55 ], [ %v0_21f02, %dec_label_pc_21f02 ]
  store i32 %v0_21eb8, i32* %eax.global-to-local, align 8
  %v1_21f0e = add i32 %v0_21f0e, 8
  %v2_21f0e = inttoptr i32 %v1_21f0e to i32*
  %v3_21f0e = load i32, i32* %v2_21f0e, align 4
  store i32 %v3_21f0e, i32* %ebp.global-to-local, align 4
  %v1_21f18 = icmp eq i32 %v3_21f0e, 0
  br i1 %v1_21f18, label %dec_label_pc_22021, label %dec_label_pc_21f28.preheader

dec_label_pc_21f28.preheader:                     ; preds = %dec_label_pc_21f0a
  %v1_21f11 = icmp eq i32 %v0_21eb8, 0
  %v10_21f31 = icmp eq i8 %tmp49, 0
  %v10_2200f = icmp eq i1 %v1_21f11, false
  %v2_21f72 = ptrtoint i32* %stack_var_91 to i32
  %v2_21f81 = ptrtoint i32* %stack_var_84 to i32
  br label %dec_label_pc_21f28

dec_label_pc_21f28:                               ; preds = %dec_label_pc_21f28.preheader, %dec_label_pc_22016
  %v0_21f3c = phi i32 [ %v0_22016, %dec_label_pc_22016 ], [ %v0_21f0e, %dec_label_pc_21f28.preheader ]
  %v0_21f28 = phi i32 [ %v3_22016, %dec_label_pc_22016 ], [ %v3_21f0e, %dec_label_pc_21f28.preheader ]
  %stack_var_36.0 = phi i1 [ %v23_22000, %dec_label_pc_22016 ], [ false, %dec_label_pc_21f28.preheader ]
  %v1_21f28 = inttoptr i32 %v0_21f28 to i32*
  %v2_21f28 = load i32, i32* %v1_21f28, align 4
  store i32 %v2_21f28, i32* @eax, align 8
  br i1 %v10_21f31, label %dec_label_pc_21fc2, label %dec_label_pc_21f3c

dec_label_pc_21f3c:                               ; preds = %dec_label_pc_21f28
  %v1_21f3c = add i32 %v0_21f3c, 8
  %v2_21f3c = inttoptr i32 %v1_21f3c to i32*
  %v3_21f3c = load i32, i32* %v2_21f3c, align 4
  %v1_21f3f = icmp eq i32 %v3_21f3c, 0
  br i1 %v1_21f3f, label %bb56, label %dec_label_pc_21f4b

bb56:                                             ; preds = %dec_label_pc_21f3c
  %v2_21f45 = call i32 @function_2229b(i32 0)
  store i32 %v2_21f45, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21f4b

dec_label_pc_21f4b:                               ; preds = %bb56, %dec_label_pc_21f3c
  store i32 %v3_21f3c, i32* %eax.global-to-local, align 8
  store i32 %v3_21f3c, i32* %edi.global-to-local, align 4
  %v1_21f53 = add i32 %v3_21f3c, 16
  %v2_21f53 = inttoptr i32 %v1_21f53 to i32*
  %v3_21f53 = load i32, i32* %v2_21f53, align 4
  store i32 %v3_21f53, i32* %ebx.global-to-local, align 4
  store i32 %v1_21f53, i32* %edi.global-to-local, align 4
  %v1_21f59 = add i32 %v3_21f3c, 20
  %v2_21f59 = inttoptr i32 %v1_21f59 to i32*
  %v3_21f59 = load i32, i32* %v2_21f59, align 4
  %v15_21f59 = icmp eq i32 %v3_21f59, %v3_21f53
  %v1_21f5c = icmp eq i1 %v15_21f59, false
  br i1 %v1_21f5c, label %dec_label_pc_21f70, label %dec_label_pc_21f5e

dec_label_pc_21f5e:                               ; preds = %dec_label_pc_21f4b
  %v0_21f5e = call i32 @function_2225a()
  store i32 %v0_21f5e, i32* %eax.global-to-local, align 8
  ret i32 %v0_21f5e

dec_label_pc_21f68:                               ; preds = %dec_label_pc_21f70
  %v0_21f68 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21f68 = add i32 %v0_21f68, 12
  store i32 %v1_21f68, i32* %ebx.global-to-local, align 4
  %v1_21f6b = load i32, i32* %edi.global-to-local, align 4
  %v2_21f6b = add i32 %v1_21f6b, 4
  %v3_21f6b = inttoptr i32 %v2_21f6b to i32*
  %v4_21f6b = load i32, i32* %v3_21f6b, align 4
  %v15_21f6b = icmp eq i32 %v1_21f68, %v4_21f6b
  br i1 %v15_21f6b, label %dec_label_pc_21fc2, label %dec_label_pc_21f70

dec_label_pc_21f70:                               ; preds = %dec_label_pc_21f4b, %dec_label_pc_21f68
  %v0_21f70 = phi i32 [ %v1_21f68, %dec_label_pc_21f68 ], [ %v3_21f53, %dec_label_pc_21f4b ]
  %v1_21f70 = inttoptr i32 %v0_21f70 to i32*
  %v2_21f70 = load i32, i32* %v1_21f70, align 4
  store i32 %v2_21f70, i32* %eax.global-to-local, align 8
  store i32 %v2_21f72, i32* %stack_var_84, align 4
  %v1_21f7a = add i32 %v0_21f70, 4
  %v2_21f8f = ashr i32 %v2_21f70, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_21f92 = xor i32 %v2_21f8f, %v2_21f70
  %v13_21fb1 = call i32 @unknown_3dc70(i32 %v2_21f70, i32 %v2_21f92, i32 %v2_21f81, i32 %v1_21f7a, i32 0, i32 0, i32 0, i32 0)
  store i32 %v13_21fb1, i32* %eax.global-to-local, align 8
  %v4_21fb6 = trunc i32 %v13_21fb1 to i8
  %v5_21fb6 = icmp eq i8 %v4_21fb6, 0
  br i1 %v5_21fb6, label %dec_label_pc_21f68, label %dec_label_pc_21fba

dec_label_pc_21fba:                               ; preds = %dec_label_pc_21f70
  store i32 %v3_21f3c, i32* %eax.global-to-local, align 8
  %v1_21fbe = add i32 %v3_21f3c, 4
  %v2_21fbe = inttoptr i32 %v1_21fbe to i8*
  store i8 0, i8* %v2_21fbe, align 1
  br label %dec_label_pc_21fc2

dec_label_pc_21fc2:                               ; preds = %dec_label_pc_21f68, %dec_label_pc_21fba, %dec_label_pc_21f28
  %stack_var_0.0.in = phi i32 [ %v0_21f28, %dec_label_pc_21f28 ], [ %v2_21f70, %dec_label_pc_21fba ], [ %v2_21f70, %dec_label_pc_21f68 ]
  %v0_21fc2 = load i32, i32* @esi, align 4
  %v1_21fc2 = add i32 %v0_21fc2, 8
  %v2_21fc2 = inttoptr i32 %v1_21fc2 to i32*
  %v3_21fc2 = load i32, i32* %v2_21fc2, align 4
  store i32 %v3_21fc2, i32* @eax, align 8
  %v1_21fc5 = icmp eq i32 %v3_21fc2, 0
  br i1 %v1_21fc5, label %bb57, label %dec_label_pc_21fcd

bb57:                                             ; preds = %dec_label_pc_21fc2
  %v3_21fc7 = call i32 @function_2229b(i32 %stack_var_0.0.in)
  store i32 %v3_21fc7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21fcd

dec_label_pc_21fcd:                               ; preds = %bb57, %dec_label_pc_21fc2
  %v0_21fcd = phi i32 [ %v3_21fc7, %bb57 ], [ %v3_21fc2, %dec_label_pc_21fc2 ]
  %v1_21fcd = add i32 %v0_21fcd, 4
  %v2_21fcd = inttoptr i32 %v1_21fcd to i8*
  %v3_21fcd = load i8, i8* %v2_21fcd, align 1
  %v4_21fcd = zext i8 %v3_21fcd to i32
  store i32 %v4_21fcd, i32* %ebx.global-to-local, align 4
  %v0_21fd1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21fd1 = inttoptr i32 %v0_21fd1 to i32*
  %v2_21fd1 = load i32, i32* %v1_21fd1, align 4
  store i32 %v2_21fd1, i32* @eax, align 8
  %v5_21fda = icmp eq i8 %v3_21fcd, 0
  br i1 %v5_21fda, label %bb58, label %dec_label_pc_21fe2

bb58:                                             ; preds = %dec_label_pc_21fcd
  %v1_21fdc = call i32 @function_22068()
  store i32 %v1_21fdc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21fe2

dec_label_pc_21fe2:                               ; preds = %bb58, %dec_label_pc_21fcd
  %v0_21fe2 = load i32, i32* @esi, align 4
  %v1_21fe2 = inttoptr i32 %v0_21fe2 to i32*
  %v2_21fe2 = load i32, i32* %v1_21fe2, align 4
  store i32 %v2_21fe2, i32* @esi, align 4
  %v2_21fe8 = load i32, i32* %v1_21eee, align 4
  store i32 %v2_21fe8, i32* @eax, align 8
  %v1_21fea = icmp eq i32 %v2_21fe8, 0
  br i1 %v1_21fea, label %bb59, label %dec_label_pc_21ff2

bb59:                                             ; preds = %dec_label_pc_21fe2
  %v1_21fec = call i32 @function_22296()
  store i32 %v1_21fec, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21ff2

dec_label_pc_21ff2:                               ; preds = %bb59, %dec_label_pc_21fe2
  %v0_21ff2 = phi i32 [ %v1_21fec, %bb59 ], [ %v2_21fe8, %dec_label_pc_21fe2 ]
  %v1_21ff2 = inttoptr i32 %v0_21ff2 to i32*
  %v2_21ff2 = load i32, i32* %v1_21ff2, align 4
  store i32 %v2_21ff2, i32* @eax, align 8
  %v1_21ff4 = icmp eq i32 %v2_21ff2, 0
  br i1 %v1_21ff4, label %bb60, label %dec_label_pc_21ffc

bb60:                                             ; preds = %dec_label_pc_21ff2
  %v3_21ff6 = call i32 @function_222a0(i32 %v0_21fd1)
  store i32 %v3_21ff6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21ffc

dec_label_pc_21ffc:                               ; preds = %bb60, %dec_label_pc_21ff2
  %v0_21ffc = phi i32 [ %v3_21ff6, %bb60 ], [ %v2_21ff2, %dec_label_pc_21ff2 ]
  %v1_21ffc = load i32, i32* @esi, align 4
  %v12_21ffc = icmp eq i32 %v0_21ffc, %v1_21ffc
  br i1 %v12_21ffc, label %bb61, label %dec_label_pc_22000

bb61:                                             ; preds = %dec_label_pc_21ffc
  %v3_21ffe = call i32 @function_22048(i32 %v0_21fd1)
  store i32 %v3_21ffe, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22000

dec_label_pc_22000:                               ; preds = %bb61, %dec_label_pc_21ffc
  %v3_2203927 = phi i32 [ %v3_21ffe, %bb61 ], [ %v0_21ffc, %dec_label_pc_21ffc ]
  %v4_2200028 = zext i1 %stack_var_36.0 to i32
  %v5_22000 = add i32 %v4_2200028, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp62 = urem i32 %v5_22000, 2
  %v23_22000 = icmp ne i32 %tmp62, 0
  %v4_22005 = sext i1 %v23_22000 to i32
  %tmp66 = icmp ugt i32 %v0_21eb8, %v4_22005
  br i1 %tmp66, label %dec_label_pc_22016, label %dec_label_pc_2200f

dec_label_pc_2200f:                               ; preds = %dec_label_pc_22000
  br i1 %v10_2200f, label %bb63, label %dec_label_pc_22016

bb63:                                             ; preds = %dec_label_pc_2200f
  %v3_22014 = call i32 @function_22048(i32 %v4_22005)
  store i32 %v3_22014, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22016

dec_label_pc_22016:                               ; preds = %dec_label_pc_22000, %bb63, %dec_label_pc_2200f
  %v3_2203926 = phi i32 [ %v3_2203927, %dec_label_pc_22000 ], [ %v3_22014, %bb63 ], [ %v3_2203927, %dec_label_pc_2200f ]
  %v0_22016 = load i32, i32* @esi, align 4
  %v1_22016 = add i32 %v0_22016, 8
  %v2_22016 = inttoptr i32 %v1_22016 to i32*
  %v3_22016 = load i32, i32* %v2_22016, align 4
  store i32 %v3_22016, i32* %ebp.global-to-local, align 4
  %v1_22019 = icmp eq i32 %v3_22016, 0
  %v1_2201b = icmp eq i1 %v1_22019, false
  br i1 %v1_2201b, label %dec_label_pc_21f28, label %dec_label_pc_22021

dec_label_pc_22021:                               ; preds = %dec_label_pc_22016, %dec_label_pc_21f0a
  %v3_22039 = phi i32 [ %v0_21eb8, %dec_label_pc_21f0a ], [ %v3_2203926, %dec_label_pc_22016 ]
  ret i32 %v3_22039

; uselistorder directives
  uselistorder i32 %v3_22016, { 1, 2, 0 }
  uselistorder i32 %v0_22016, { 1, 0 }
  uselistorder i32 %v4_22005, { 1, 0 }
  uselistorder i1 %v23_22000, { 1, 0 }
  uselistorder i32 %v0_21ffc, { 1, 0 }
  uselistorder i32 %v0_21fd1, { 1, 0, 2 }
  uselistorder i32 %v2_21f70, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_21f70, { 1, 0 }
  uselistorder i32 %v1_21f68, { 1, 0, 2 }
  uselistorder i32 %v3_21f53, { 1, 0, 2 }
  uselistorder i32 %v3_21f3c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32 %v0_21f28, { 1, 0 }
  uselistorder i32 %v0_21f02, { 1, 0 }
  uselistorder i32 %v0_21eb8, { 1, 0, 3, 2 }
  uselistorder i8 %tmp49, { 3, 2, 1, 0, 4 }
  uselistorder i32* %stack_var_84, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 4, 7, 9, 0, 2, 12, 13, 14, 15, 16, 1, 17, 3, 6, 8, 11, 10, 18, 19, 20, 21 }
  uselistorder i32 (i32)* @function_22048, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_222aa, { 1, 0 }
  uselistorder label %dec_label_pc_22016, { 1, 2, 0 }
  uselistorder label %dec_label_pc_21fc2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21f70, { 1, 0 }
  uselistorder label %dec_label_pc_21f28, { 1, 0 }
}

define i32 @function_22048(i32 %arg1) local_unnamed_addr {
dec_label_pc_22048:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_2204c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2204c = icmp eq i32 %v1_2204c, %tmp7
  store i32 %arg1, i32* @eax, align 8
  %v0_22057 = load i32, i32* @esi, align 4
  %v2_22057 = add i32 %arg1, 8
  %v3_22057 = inttoptr i32 %v2_22057 to i32*
  store i32 %v0_22057, i32* %v3_22057, align 4
  %v1_2205a = icmp eq i1 %v3_2204c, false
  br i1 %v1_2205a, label %bb, label %dec_label_pc_22048.dec_label_pc_22060_crit_edge

dec_label_pc_22048.dec_label_pc_22060_crit_edge:  ; preds = %dec_label_pc_22048
  %v0_22067.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_22060

bb:                                               ; preds = %dec_label_pc_22048
  %v2_2205a = call i32 @function_222a5()
  br label %dec_label_pc_22060

dec_label_pc_22060:                               ; preds = %dec_label_pc_22048.dec_label_pc_22060_crit_edge, %bb
  %v0_22067 = phi i32 [ %v0_22067.pre, %dec_label_pc_22048.dec_label_pc_22060_crit_edge ], [ %v2_2205a, %bb ]
  ret i32 %v0_22067

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_22060, { 1, 0 }
}

define i32 @function_22068() local_unnamed_addr {
dec_label_pc_22068:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %v0_22068 = load i32, i32* @esi, align 4
  %v1_22068 = add i32 %v0_22068, 8
  %v2_22068 = inttoptr i32 %v1_22068 to i32*
  %v3_22068 = load i32, i32* %v2_22068, align 4
  store i32 %v3_22068, i32* %ecx.global-to-local, align 4
  %v1_2206b = icmp eq i32 %v3_22068, 0
  br i1 %v1_2206b, label %bb, label %dec_label_pc_22077

bb:                                               ; preds = %dec_label_pc_22068
  %v2_22071 = call i32 @function_2229b(i32 0)
  br label %dec_label_pc_22077

dec_label_pc_22077:                               ; preds = %bb, %dec_label_pc_22068
  %v1_2207f = inttoptr i32 %tmp29 to i32*
  %v2_2207f = load i32, i32* %v1_2207f, align 4
  store i32 %v2_2207f, i32* @eax, align 8
  %v1_22081 = add i32 %v3_22068, 68
  store i32 %v1_22081, i32* @edi, align 4
  %v1_22084 = icmp eq i32 %v2_2207f, 0
  br i1 %v1_22084, label %bb31, label %dec_label_pc_2208c

bb31:                                             ; preds = %dec_label_pc_22077
  %v1_22086 = call i32 @function_22296()
  br label %dec_label_pc_2208c

dec_label_pc_2208c:                               ; preds = %bb31, %dec_label_pc_22077
  %v0_2208c = phi i32 [ %v1_22086, %bb31 ], [ %v2_2207f, %dec_label_pc_22077 ]
  %v1_2208c = inttoptr i32 %v0_2208c to i32*
  %v2_2208c = load i32, i32* %v1_2208c, align 4
  store i32 %v2_2208c, i32* @eax, align 8
  %v1_2208e = icmp eq i32 %v2_2208c, 0
  br i1 %v1_2208e, label %bb32, label %dec_label_pc_2209a

bb32:                                             ; preds = %dec_label_pc_2208c
  %v2_22094 = call i32 @function_222a0(i32 0)
  store i32 %v2_22094, i32* @eax, align 8
  br label %dec_label_pc_2209a

dec_label_pc_2209a:                               ; preds = %bb32, %dec_label_pc_2208c
  store i32 %v2_2208c, i32* %ecx.global-to-local, align 4
  %v1_2209e = load i32, i32* @esi, align 4
  %v12_2209e = icmp eq i32 %v2_2208c, %v1_2209e
  br i1 %v12_2209e, label %bb33, label %dec_label_pc_220aa

bb33:                                             ; preds = %dec_label_pc_2209a
  %v2_220a4 = call i32 @function_22305(i32 %v2_2208c)
  store i32 %v2_220a4, i32* @eax, align 8
  br label %dec_label_pc_220aa

dec_label_pc_220aa:                               ; preds = %bb33, %dec_label_pc_2209a
  store i32 %v2_2208c, i32* %ecx.global-to-local, align 4
  %v1_220ae = add i32 %v2_2208c, 16
  %v2_220ae = inttoptr i32 %v1_220ae to i32*
  %v3_220ae = load i32, i32* %v2_220ae, align 4
  store i32 %v3_220ae, i32* @ebp, align 4
  %v1_220b1 = icmp eq i32 %v3_220ae, 0
  br i1 %v1_220b1, label %bb34, label %dec_label_pc_220b9

bb34:                                             ; preds = %dec_label_pc_220aa
  %v1_220b3 = call i32 @function_222ce()
  %v0_220b9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_220b9

dec_label_pc_220b9:                               ; preds = %bb34, %dec_label_pc_220aa
  %v0_220b9 = phi i32 [ %v0_220b9.pre, %bb34 ], [ %v2_2208c, %dec_label_pc_220aa ]
  %v1_220b9 = add i32 %v0_220b9, 12
  store i32 %v1_220b9, i32* %ecx.global-to-local, align 4
  store i32 %v3_220ae, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_220d3.outer

dec_label_pc_220c8:                               ; preds = %dec_label_pc_220d3
  %v1_220cc = add i32 %v0_220c8, 8
  %v2_220cc = inttoptr i32 %v1_220cc to i32*
  %v3_220cc = load i32, i32* %v2_220cc, align 4
  store i32 %v3_220cc, i32* %ebx.global-to-local, align 4
  %v1_220cf = icmp eq i32 %v3_220cc, 0
  br i1 %v1_220cf, label %dec_label_pc_220e8, label %dec_label_pc_220d3.outer

dec_label_pc_220d3.outer:                         ; preds = %dec_label_pc_220c8, %dec_label_pc_220b9
  %v0_220d314 = phi i32 [ %v3_220cc, %dec_label_pc_220c8 ], [ %v3_220ae, %dec_label_pc_220b9 ]
  %stack_var_32.0.ph = phi i32 [ %v0_220c8, %dec_label_pc_220c8 ], [ %v1_220b9, %dec_label_pc_220b9 ]
  br label %dec_label_pc_220d3

dec_label_pc_220d3:                               ; preds = %dec_label_pc_220d3.outer, %dec_label_pc_220e1
  %v0_220d3 = phi i32 [ %v0_220d314, %dec_label_pc_220d3.outer ], [ %v3_220e1, %dec_label_pc_220e1 ]
  %v1_220d3 = add i32 %v0_220d3, 16
  store i32 %v1_220d3, i32* @eax, align 8
  %v0_220d8 = call i32 @function_22270()
  store i32 %v0_220d8, i32* @eax, align 8
  %v4_220dd = trunc i32 %v0_220d8 to i8
  %v5_220dd = icmp eq i8 %v4_220dd, 0
  %v0_220c8 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v5_220dd, label %dec_label_pc_220c8, label %dec_label_pc_220e1

dec_label_pc_220e1:                               ; preds = %dec_label_pc_220d3
  %v1_220e1 = add i32 %v0_220c8, 12
  %v2_220e1 = inttoptr i32 %v1_220e1 to i32*
  %v3_220e1 = load i32, i32* %v2_220e1, align 4
  store i32 %v3_220e1, i32* %ebx.global-to-local, align 4
  %v1_220e4 = icmp eq i32 %v3_220e1, 0
  %v1_220e6 = icmp eq i1 %v1_220e4, false
  br i1 %v1_220e6, label %dec_label_pc_220d3, label %dec_label_pc_220e8

dec_label_pc_220e8:                               ; preds = %dec_label_pc_220c8, %dec_label_pc_220e1
  %stack_var_32.1 = phi i32 [ %stack_var_32.0.ph, %dec_label_pc_220e1 ], [ %v0_220c8, %dec_label_pc_220c8 ]
  store i32 %v1_220b9, i32* %ecx.global-to-local, align 4
  %v15_220ec = icmp eq i32 %stack_var_32.1, %v1_220b9
  br i1 %v15_220ec, label %bb36, label %dec_label_pc_220f6

bb36:                                             ; preds = %dec_label_pc_220e8
  %v1_220f0 = call i32 @function_222ce()
  br label %dec_label_pc_220f6

dec_label_pc_220f6:                               ; preds = %bb36, %dec_label_pc_220e8
  %v1_220fc = add i32 %stack_var_32.1, 16
  store i32 %v1_220fc, i32* @ebx, align 4
  store i32 %v1_220fc, i32* @eax, align 8
  %v0_22101 = call i32 @function_22270()
  %v4_22106 = trunc i32 %v0_22101 to i8
  %v5_22106 = icmp eq i8 %v4_22106, 0
  br i1 %v5_22106, label %bb38, label %dec_label_pc_2210a

bb38:                                             ; preds = %dec_label_pc_220f6
  %v1_22108 = call i32 @function_22130()
  br label %dec_label_pc_2210a

dec_label_pc_2210a:                               ; preds = %bb38, %dec_label_pc_220f6
  %v3_22122 = phi i32 [ %v1_22108, %bb38 ], [ %v0_22101, %dec_label_pc_220f6 ]
  ret i32 %v3_22122

; uselistorder directives
  uselistorder i32 %stack_var_32.1, { 1, 0 }
  uselistorder i32 %v3_220e1, { 1, 2, 0 }
  uselistorder i32 %v0_220c8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_220b9, { 0, 2, 1, 3 }
  uselistorder i32 %v2_2208c, { 1, 4, 3, 2, 0, 5, 6, 7 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_222ce, { 1, 0 }
  uselistorder i32 (i32)* @function_222a0, { 2, 1, 0 }
  uselistorder i32 ()* @function_22296, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2229b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_220e8, { 1, 0 }
  uselistorder label %dec_label_pc_220d3, { 1, 0 }
}

define i32 @function_2212d() local_unnamed_addr {
dec_label_pc_2212d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2212d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2212d
}

define i32 @function_22130() local_unnamed_addr {
dec_label_pc_22130:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_22132 = load i32, i32* @edi, align 4
  store i32 %v0_22132, i32* @eax, align 8
  %v0_22134 = call i32 @function_22270()
  %v1_22141 = add i32 %tmp3, 28
  %v2_22141 = inttoptr i32 %v1_22141 to i32*
  %v3_22141 = load i32, i32* %v2_22141, align 4
  %v4_22141 = load i32, i32* @esi, align 4
  %v15_22141 = icmp eq i32 %v3_22141, %v4_22141
  br i1 %v15_22141, label %bb, label %dec_label_pc_22146

bb:                                               ; preds = %dec_label_pc_22130
  %v1_22144 = call i32 @function_2216a()
  %v2_22146.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_22146

dec_label_pc_22146:                               ; preds = %bb, %dec_label_pc_22130
  %v2_22146 = phi i32 [ %v2_22146.pre, %bb ], [ %v4_22141, %dec_label_pc_22130 ]
  %v1_22150 = add i32 %v2_22146, 12
  store i32 %v1_22150, i32* @eax, align 8
  %v1_22156 = call i32 @function_323d0(i32 %v1_22150)
  store i32 %v2_22146, i32* @esi, align 4
  ret i32 %v1_22156

; uselistorder directives
  uselistorder i32 %v4_22141, { 1, 0 }
}

define i32 @function_22165() local_unnamed_addr {
dec_label_pc_22165:
  %eax.global-to-local = alloca i32, align 4
  %v0_22165 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22165
}

define i32 @function_2216a() local_unnamed_addr {
dec_label_pc_2216a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_92 = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %v2_2216a = load i32, i32* @esi, align 4
  %v0_2216c = load i32, i32* @ebp, align 4
  store i32 %v0_2216c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2218b.outer

dec_label_pc_22180:                               ; preds = %dec_label_pc_2218b
  %v1_22184 = add i32 %v0_22180, 8
  %v2_22184 = inttoptr i32 %v1_22184 to i32*
  %v3_22184 = load i32, i32* %v2_22184, align 4
  store i32 %v3_22184, i32* %ebx.global-to-local, align 4
  %v1_22187 = icmp eq i32 %v3_22184, 0
  br i1 %v1_22187, label %dec_label_pc_221a0, label %dec_label_pc_2218b.outer

dec_label_pc_2218b.outer:                         ; preds = %dec_label_pc_22180, %dec_label_pc_2216a
  %stack_var_68.0.ph = phi i32 [ %v0_22180, %dec_label_pc_22180 ], [ %tmp30, %dec_label_pc_2216a ]
  br label %dec_label_pc_2218b

dec_label_pc_2218b:                               ; preds = %dec_label_pc_2218b.outer, %dec_label_pc_22199
  %v0_2218e = load i32, i32* @edi, align 4
  store i32 %v0_2218e, i32* @eax, align 8
  %v0_22190 = call i32 @function_22270()
  store i32 %v0_22190, i32* @eax, align 8
  %v4_22195 = trunc i32 %v0_22190 to i8
  %v5_22195 = icmp eq i8 %v4_22195, 0
  %v1_22197 = icmp eq i1 %v5_22195, false
  %v0_22180 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v1_22197, label %dec_label_pc_22180, label %dec_label_pc_22199

dec_label_pc_22199:                               ; preds = %dec_label_pc_2218b
  %v1_22199 = add i32 %v0_22180, 12
  %v2_22199 = inttoptr i32 %v1_22199 to i32*
  %v3_22199 = load i32, i32* %v2_22199, align 4
  store i32 %v3_22199, i32* %ebx.global-to-local, align 4
  %v1_2219c = icmp eq i32 %v3_22199, 0
  %v1_2219e = icmp eq i1 %v1_2219c, false
  br i1 %v1_2219e, label %dec_label_pc_2218b, label %dec_label_pc_221a0

dec_label_pc_221a0:                               ; preds = %dec_label_pc_22180, %dec_label_pc_22199
  %v0_221aa = phi i32 [ %stack_var_68.0.ph, %dec_label_pc_22199 ], [ %v0_22180, %dec_label_pc_22180 ]
  %v15_221a4 = icmp eq i32 %tmp30, %v0_221aa
  br i1 %v15_221a4, label %dec_label_pc_221b1, label %dec_label_pc_221aa

dec_label_pc_221aa:                               ; preds = %dec_label_pc_221a0
  %v1_221aa = add i32 %v0_221aa, 28
  %v2_221aa = inttoptr i32 %v1_221aa to i32*
  %v3_221aa = load i32, i32* %v2_221aa, align 4
  br label %dec_label_pc_221b1

dec_label_pc_221b1:                               ; preds = %dec_label_pc_221aa, %dec_label_pc_221a0
  %stack_var_64.0 = phi i32 [ %tmp28, %dec_label_pc_221a0 ], [ %v3_221aa, %dec_label_pc_221aa ]
  %v15_221b5 = icmp eq i32 %v2_2216a, %stack_var_64.0
  br i1 %v15_221b5, label %bb, label %dec_label_pc_221bf

bb:                                               ; preds = %dec_label_pc_221b1
  %v1_221b9 = call i32 @function_22263()
  store i32 %v1_221b9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_221bf

dec_label_pc_221bf:                               ; preds = %bb, %dec_label_pc_221b1
  %v0_221d1.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_221d1

dec_label_pc_221c8:                               ; preds = %dec_label_pc_221d1
  store i32 %v0_221c8, i32* %ebx.global-to-local, align 4
  %v1_221ca = add i32 %v0_221c8, 8
  %v2_221ca = inttoptr i32 %v1_221ca to i32*
  %v3_221ca = load i32, i32* %v2_221ca, align 4
  store i32 %v3_221ca, i32* @ebp, align 4
  %v1_221cd = icmp eq i32 %v3_221ca, 0
  br i1 %v1_221cd, label %dec_label_pc_221e6, label %dec_label_pc_221d1

dec_label_pc_221d1:                               ; preds = %dec_label_pc_221c8, %dec_label_pc_221df, %dec_label_pc_221bf
  %v0_221d1 = phi i32 [ %v0_221d1.pre, %dec_label_pc_221bf ], [ %v3_221df, %dec_label_pc_221df ], [ %v3_221ca, %dec_label_pc_221c8 ]
  %v1_221d1 = add i32 %v0_221d1, 16
  store i32 %v1_221d1, i32* @eax, align 8
  %v0_221d6 = call i32 @function_22270()
  store i32 %v0_221d6, i32* %eax.global-to-local, align 8
  %v4_221db = trunc i32 %v0_221d6 to i8
  %v5_221db = icmp eq i8 %v4_221db, 0
  %v0_221c8 = load i32, i32* @ebp, align 4
  br i1 %v5_221db, label %dec_label_pc_221c8, label %dec_label_pc_221df

dec_label_pc_221df:                               ; preds = %dec_label_pc_221d1
  %v1_221df = add i32 %v0_221c8, 12
  %v2_221df = inttoptr i32 %v1_221df to i32*
  %v3_221df = load i32, i32* %v2_221df, align 4
  store i32 %v3_221df, i32* @ebp, align 4
  %v1_221e2 = icmp eq i32 %v3_221df, 0
  %v1_221e4 = icmp eq i1 %v1_221e2, false
  br i1 %v1_221e4, label %dec_label_pc_221d1, label %dec_label_pc_221df.dec_label_pc_221e6_crit_edge

dec_label_pc_221df.dec_label_pc_221e6_crit_edge:  ; preds = %dec_label_pc_221df
  %v0_221e6.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_221e6

dec_label_pc_221e6:                               ; preds = %dec_label_pc_221c8, %dec_label_pc_221df.dec_label_pc_221e6_crit_edge
  %v0_221ec = phi i32 [ %v0_221e6.pre, %dec_label_pc_221df.dec_label_pc_221e6_crit_edge ], [ %v0_221c8, %dec_label_pc_221c8 ]
  %v15_221e6 = icmp eq i32 %v0_221ec, %tmp30
  br i1 %v15_221e6, label %dec_label_pc_221fa, label %dec_label_pc_221ec

dec_label_pc_221ec:                               ; preds = %dec_label_pc_221e6
  %v0_221ef = load i32, i32* @edi, align 4
  store i32 %v0_221ef, i32* @eax, align 8
  %v0_221f1 = call i32 @function_22270()
  store i32 %v0_221f1, i32* %eax.global-to-local, align 8
  %v4_221f6 = trunc i32 %v0_221f1 to i8
  %v5_221f6 = icmp eq i8 %v4_221f6, 0
  br i1 %v5_221f6, label %dec_label_pc_221ec.dec_label_pc_2224e_crit_edge, label %dec_label_pc_221fa

dec_label_pc_221ec.dec_label_pc_2224e_crit_edge:  ; preds = %dec_label_pc_221ec
  %v1_22252.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2224e

dec_label_pc_221fa:                               ; preds = %dec_label_pc_221ec, %dec_label_pc_221e6
  %v1_22203 = add i32 %tmp27, 68
  %v2_22203 = inttoptr i32 %v1_22203 to i32*
  %v3_22203 = load i32, i32* %v2_22203, align 4
  store i32 %v3_22203, i32* %eax.global-to-local, align 8
  %v1_22206 = add i32 %tmp27, 72
  %v2_22206 = inttoptr i32 %v1_22206 to i8*
  %v3_22206 = load i8, i8* %v2_22206, align 1
  %v10_22206 = icmp eq i8 %v3_22206, 0
  store i32 %v3_22203, i32* %stack_var_92, align 4
  br i1 %v10_22206, label %dec_label_pc_2221c, label %dec_label_pc_22210

dec_label_pc_22210:                               ; preds = %dec_label_pc_221fa
  %v1_22210 = add i32 %tmp27, 76
  %v2_22210 = inttoptr i32 %v1_22210 to i32*
  %v3_22210 = load i32, i32* %v2_22210, align 4
  store i32 %v3_22210, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2221c

dec_label_pc_2221c:                               ; preds = %dec_label_pc_22210, %dec_label_pc_221fa
  %v2_2221c = ptrtoint i32* %stack_var_92 to i32
  %v2_22228 = ptrtoint i32* %stack_var_76 to i32
  %v0_2222c = load i32, i32* %ebx.global-to-local, align 4
  %v1_2223b = add i32 %tmp21, 8
  store i32 %v1_2223b, i32* %eax.global-to-local, align 8
  %v4_22242 = call i32 @unknown_43b30(i32 %v2_22228, i32 %v1_2223b, i32 %v0_2222c, i32 %v2_2221c)
  store i32 %v4_22242, i32* %eax.global-to-local, align 8
  store i32 %v2_2216a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2224e

dec_label_pc_2224e:                               ; preds = %dec_label_pc_221ec.dec_label_pc_2224e_crit_edge, %dec_label_pc_2221c
  %v1_22252 = phi i32 [ %v1_22252.pre, %dec_label_pc_221ec.dec_label_pc_2224e_crit_edge ], [ %v2_2216a, %dec_label_pc_2221c ]
  %v2_22252 = add i32 %v1_22252, 28
  %v3_22252 = inttoptr i32 %v2_22252 to i32*
  store i32 %v0_221aa, i32* %v3_22252, align 4
  %v0_22255 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22255

; uselistorder directives
  uselistorder i32 %v3_221df, { 1, 2, 0 }
  uselistorder i32 %v0_221c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_221aa, { 2, 1, 0 }
  uselistorder i32 %v0_22180, { 0, 3, 2, 1 }
  uselistorder i32 %v2_2216a, { 1, 2, 0 }
  uselistorder i32 %tmp27, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 4, 1, 6, 7, 5, 8 }
  uselistorder i32* %eax.global-to-local, { 5, 1, 2, 3, 4, 6, 7, 0 }
  uselistorder i32 ()* @function_22270, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2224e, { 1, 0 }
  uselistorder label %dec_label_pc_221e6, { 1, 0 }
  uselistorder label %dec_label_pc_221d1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_221a0, { 1, 0 }
  uselistorder label %dec_label_pc_2218b, { 1, 0 }
}

define i32 @function_2225a() local_unnamed_addr {
dec_label_pc_2225a:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_22263() local_unnamed_addr {
dec_label_pc_22263:
  %v4_2226b = load i32, i32* @eax, align 8
  ret i32 %v4_2226b
}

define i32 @function_22270() local_unnamed_addr {
dec_label_pc_22270:
  %v0_22270 = load i32, i32* @eax, align 8
  %v11_22270 = or i32 %v0_22270, 36
  ret i32 %v11_22270
}

define i32 @function_22289(i32 %arg1) local_unnamed_addr {
dec_label_pc_22289:
  %eax.global-to-local = alloca i32, align 4
  %v1_2228d = add i32 %arg1, 28
  %v2_2228d = inttoptr i32 %v1_2228d to i32*
  %v3_2228d = load i32, i32* %v2_2228d, align 4
  %v4_2228d = add i32 %v3_2228d, -1
  store i32 %v4_2228d, i32* %v2_2228d, align 4
  %v0_22291 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22291
}

define i32 @function_22296() local_unnamed_addr {
dec_label_pc_22296:
  %v0_22296 = call i32 @function_3010a()
  ret i32 %v0_22296
}

define i32 @function_2229b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2229b:
  %v0_2229b = call i32 @function_301a6()
  ret i32 %v0_2229b
}

define i32 @function_222a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_222a0:
  %v0_222a0 = call i32 @function_30242()
  ret i32 %v0_222a0
}

define i32 @function_222a5() local_unnamed_addr {
dec_label_pc_222a5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_222aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_222aa:
  %v3_222c2 = load i32, i32* @eax, align 8
  ret i32 %v3_222c2
}

define i32 @function_222ce() local_unnamed_addr {
dec_label_pc_222ce:
  %v3_222e6 = load i32, i32* @eax, align 8
  ret i32 %v3_222e6
}

define i32 @function_222f3() local_unnamed_addr {
dec_label_pc_222f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_222f3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_222f3
}

define i32 @function_22305(i32 %arg1) local_unnamed_addr {
dec_label_pc_22305:
  %v3_2231d = load i32, i32* @eax, align 8
  ret i32 %v3_2231d
}

define i32 @_ZNK5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22330:
  %v1_22353 = add i32 %arg1, 12
  ret i32 %v1_22353
}

define i32 @function_2237e() local_unnamed_addr {
dec_label_pc_2237e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22389(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22389:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22389 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22389 = add i32 %v0_22389, 1698440276
  %v2_22389 = inttoptr i32 %v1_22389 to i32*
  %v3_22389 = load i32, i32* %v2_22389, align 4
  %v4_22389 = add i32 %v3_22389, -1
  store i32 %v4_22389, i32* %v2_22389, align 4
  %v0_2238f = load i32, i32* %edx.global-to-local, align 4
  %v1_2238f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2238f = xor i32 %v1_2238f, %v0_2238f
  %v3_2238f = icmp eq i32 %v2_2238f, 0
  store i32 %v2_2238f, i32* %edx.global-to-local, align 4
  %v1_22395 = icmp eq i1 %v3_2238f, false
  br i1 %v1_22395, label %bb, label %dec_label_pc_22389.dec_label_pc_2239b_crit_edge

dec_label_pc_22389.dec_label_pc_2239b_crit_edge:  ; preds = %dec_label_pc_22389
  %v0_223ae.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2239b

bb:                                               ; preds = %dec_label_pc_22389
  %v2_22395 = call i32 @function_224d5()
  br label %dec_label_pc_2239b

dec_label_pc_2239b:                               ; preds = %dec_label_pc_22389.dec_label_pc_2239b_crit_edge, %bb
  %v0_223ae = phi i32 [ %v0_223ae.pre, %dec_label_pc_22389.dec_label_pc_2239b_crit_edge ], [ %v2_22395, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_223ae

; uselistorder directives
  uselistorder label %dec_label_pc_2239b, { 1, 0 }
}

define i32 @function_22458() local_unnamed_addr {
dec_label_pc_22458:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_56 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v0_22458 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22458 = add i32 %v0_22458, -953408428
  %v2_22458 = inttoptr i32 %v1_22458 to i32*
  %v3_22458 = load i32, i32* %v2_22458, align 4
  %v4_22458 = sub i32 %v3_22458, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_22458, i32* %v2_22458, align 4
  %v0_2245e = load i32, i32* %eax.global-to-local, align 8
  %v1_2245e = trunc i32 %v0_2245e to i8
  %v2_2245e = load i32, i32* %ecx.global-to-local, align 4
  %v3_2245e = udiv i32 %v2_2245e, 256
  %v4_2245e = trunc i32 %v3_2245e to i8
  %v5_2245e = add i8 %v4_2245e, %v1_2245e
  %v10_2245e = icmp ult i8 %v5_2245e, %v1_2245e
  %v3_22460 = zext i1 %v10_2245e to i8
  %v4_22460 = add i8 %v5_2245e, 3
  %v5_22460 = add i8 %v4_22460, %v3_22460
  %v25_22460 = zext i8 %v5_22460 to i32
  %v27_22460 = and i32 %v0_2245e, -256
  %v28_22460 = or i32 %v25_22460, %v27_22460
  %v0_22462 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22462 = udiv i32 %v0_22462, 256
  %v2_22462 = trunc i32 %v1_22462 to i8
  %v5_22462 = add i8 %v5_22460, %v2_22462
  %v20_22462 = zext i8 %v5_22462 to i32
  %v22_22462 = mul nuw nsw i32 %v20_22462, 256
  %v23_22462 = and i32 %v0_22462, -65281
  %v24_22462 = or i32 %v22_22462, %v23_22462
  store i32 %v24_22462, i32* %ebx.global-to-local, align 4
  %v1_22464 = add i32 %v28_22460, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_22464 = trunc i32 %v1_22464 to i8
  %v2_22465 = add i8 %v11_22464, 1
  %v16_22465 = zext i8 %v2_22465 to i32
  %v18_22465 = and i32 %v1_22464, -256
  %v19_22465 = or i32 %v16_22465, %v18_22465
  store i32 %v19_22465, i32* %eax.global-to-local, align 8
  %v1_22467 = inttoptr i32 %v19_22465 to i8*
  %v2_22467 = load i8, i8* %v1_22467, align 1
  %v5_22467 = add i8 %v2_22465, %v2_22467
  store i8 %v5_22467, i8* %v1_22467, align 1
  %v0_22469 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22469 = add i32 %v0_22469, 193662056
  %v2_22469 = inttoptr i32 %v1_22469 to i8*
  %v3_22469 = load i8, i8* %v2_22469, align 1
  %v5_22469 = trunc i32 %v0_22469 to i8
  %v6_22469 = add i8 %v3_22469, %v5_22469
  store i8 %v6_22469, i8* %v2_22469, align 1
  %v0_2246f = load i32, i32* %eax.global-to-local, align 8
  %v1_2246f = add i32 %v0_2246f, 8
  %v2_2246f = inttoptr i32 %v1_2246f to i32*
  store i32 ptrtoint (i1* @global_var_1.2399 to i32), i32* %v2_2246f, align 4
  %v0_22476 = load i32, i32* %edx.global-to-local, align 4
  %v1_22476 = load i32, i32* %ebx.global-to-local, align 4
  %v2_22476 = inttoptr i32 %v1_22476 to i32*
  store i32 %v0_22476, i32* %v2_22476, align 4
  %v0_22478 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22478 = add i32 %v0_22478, 4
  %v2_22478 = inttoptr i32 %v1_22478 to i32*
  %v3_22478 = load i32, i32* %v2_22478, align 4
  store i32 %v3_22478, i32* %edx.global-to-local, align 4
  %v0_2247b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2247b, i32* %v2_22478, align 4
  %v2_2247e = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_2247e, i32* @eax, align 8
  %v0_22489 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_22489, i32* %stack_var_48, align 4
  %v1_2248d = call i32 @function_32870(i32 %v2_2247e)
  store i32 %v1_2248d, i32* %eax.global-to-local, align 8
  %v0_22492 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22492 = inttoptr i32 %v0_22492 to i32*
  %v2_22492 = load i32, i32* %v1_22492, align 4
  store i32 %v2_22492, i32* @eax, align 8
  %v1_22494 = icmp eq i32 %v2_22492, 0
  br i1 %v1_22494, label %dec_label_pc_224ce, label %dec_label_pc_22498

dec_label_pc_22498:                               ; preds = %dec_label_pc_22458
  %v1_22498 = inttoptr i32 %v2_22492 to i32*
  %v2_22498 = load i32, i32* %v1_22498, align 4
  %v1_2249a = icmp eq i32 %v2_22498, 0
  br i1 %v1_2249a, label %dec_label_pc_224c9, label %dec_label_pc_2249e

dec_label_pc_2249e:                               ; preds = %dec_label_pc_22498
  %v1_2249e = inttoptr i32 %v2_22498 to i32*
  %v2_2249e = load i32, i32* %v1_2249e, align 4
  store i32 %v2_2249e, i32* %stack_var_56, align 4
  %v2_224b7 = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_224b7, i32* %eax.global-to-local, align 8
  %v4_224bf = call i32 @unknown_441c0(i32 %v0_22492, i32 0, i32 %v2_224b7, i32 0)
  store i32 %v4_224bf, i32* @eax, align 8
  %v0_224c4 = call i32 @function_2237e()
  store i32 %v0_224c4, i32* %eax.global-to-local, align 8
  ret i32 %v0_224c4

dec_label_pc_224c9:                               ; preds = %dec_label_pc_22498
  %v0_224c9 = call i32 @function_306e2()
  store i32 %v0_224c9, i32* @eax, align 8
  br label %dec_label_pc_224ce

dec_label_pc_224ce:                               ; preds = %dec_label_pc_224c9, %dec_label_pc_22458
  %v0_224d0 = call i32 @function_305aa()
  store i32 %v0_224d0, i32* %eax.global-to-local, align 8
  ret i32 %v0_224d0

; uselistorder directives
  uselistorder i32 %v0_22462, { 1, 0 }
  uselistorder i8 %v1_2245e, { 1, 0 }
  uselistorder i8 1, { 1, 2, 0 }
}

define i32 @function_224d5() local_unnamed_addr {
dec_label_pc_224d5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22514() local_unnamed_addr {
dec_label_pc_22514:
  %eax.global-to-local = alloca i32, align 4
  %v0_22514 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22514
}

define i32 @function_22521() local_unnamed_addr {
dec_label_pc_22521:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22529() local_unnamed_addr {
dec_label_pc_22529:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2253c() local_unnamed_addr {
dec_label_pc_2253c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2253c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2253c = add i32 %v0_2253c, -1981223997
  %v2_2253c = inttoptr i32 %v1_2253c to i32*
  %v3_2253c = load i32, i32* %v2_2253c, align 4
  %v4_2253c = sub i32 %v3_2253c, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_2253c, i32* %v2_2253c, align 4
  %v0_22542 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22542
}

define i32 @function_22543() local_unnamed_addr {
dec_label_pc_22543:
  %v0_22543 = call i32 @function_22521()
  ret i32 %v0_22543
}

define i32 @function_2255f() local_unnamed_addr {
dec_label_pc_2255f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2255f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2255f
}

define i32 @function_22565() local_unnamed_addr {
dec_label_pc_22565:
  %v0_22565 = call i32 @function_22529()
  ret i32 %v0_22565
}

define i32 @function_22568() local_unnamed_addr {
dec_label_pc_22568:
  %eax.global-to-local = alloca i32, align 4
  %v0_22568 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22568
}

define i32 @function_2256d() local_unnamed_addr {
dec_label_pc_2256d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2256d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2256d
}

define i32 @function_22570() local_unnamed_addr {
dec_label_pc_22570:
  %v0_22570 = call i32 @function_22521()
  ret i32 %v0_22570

; uselistorder directives
  uselistorder i32 ()* @function_22521, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_22580:
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg5, i32* @esi, align 4
  %v1_225b0 = icmp eq i32 %arg3, 0
  %v1_225b2 = add i32 %arg2, 4
  store i32 %v1_225b2, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_225b0, label %bb, label %dec_label_pc_225c7

bb:                                               ; preds = %dec_label_pc_22580
  %v2_225c1 = call i32 @function_22650(i32 %v1_225b2)
  br label %dec_label_pc_225c7

dec_label_pc_225c7:                               ; preds = %bb, %dec_label_pc_22580
  %v2_225cb = phi i32 [ %v2_225c1, %bb ], [ %arg3, %dec_label_pc_22580 ]
  ret i32 %v2_225cb
}

define i32 @function_2261a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2261a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_2261a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2261a = add i32 %v0_2261a, -2095569852
  %v2_2261a = inttoptr i32 %v1_2261a to i32*
  %v3_2261a = load i32, i32* %v2_2261a, align 4
  %v4_2261a = sub i32 %v3_2261a, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_2261a, i32* %v2_2261a, align 4
  %v0_22620 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22620 = add i32 %v0_22620, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_22620, i32* %ebx.global-to-local, align 4
  %v0_22621 = load i32, i32* %eax.global-to-local, align 8
  %v2_22621 = load i1, i1* %cf.global-to-local, align 1
  %v3_22621 = zext i1 %v2_22621 to i32
  %v4_22621 = add i32 %v0_22621, zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32)
  %v5_22621 = add i32 %v4_22621, %v3_22621
  %v25_22621 = urem i32 %v5_22621, 256
  %v27_22621 = and i32 %v0_22621, -256
  %v28_22621 = or i32 %v25_22621, %v27_22621
  store i32 %v28_22621, i32* %eax.global-to-local, align 8
  %v1_22627 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_22627 = icmp eq i32 %v1_22627, %arg1
  %v1_2262e = load i32, i32* %edi.global-to-local, align 4
  %v2_2262e = inttoptr i32 %v1_2262e to i32*
  store i32 %v28_22621, i32* %v2_2262e, align 4
  %v0_22630 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_22630, i32* @eax, align 8
  %v1_22632 = icmp eq i1 %v3_22627, false
  br i1 %v1_22632, label %bb, label %dec_label_pc_22634

bb:                                               ; preds = %dec_label_pc_2261a
  %v2_22632 = call i32 @function_2266a()
  store i32 %v2_22632, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22634

dec_label_pc_22634:                               ; preds = %bb, %dec_label_pc_2261a
  %v0_22647 = phi i32 [ %v2_22632, %bb ], [ %v0_22630, %dec_label_pc_2261a ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_22644 = load i32, i32* @esp, align 4
  %v5_22644 = icmp ugt i32 %v0_22644, -77
  store i1 %v5_22644, i1* %cf.global-to-local, align 1
  ret i32 %v0_22647

; uselistorder directives
  uselistorder i32 %v0_22621, { 1, 0 }
  uselistorder i32 zext (i8 ptrtoint (i1* @global_var_1.2399 to i8) to i32), { 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 1, 2 }
}

define i32 @function_22650(i32 %arg1) local_unnamed_addr {
dec_label_pc_22650:
  %v0_22650 = load i32, i32* @ebp, align 4
  %v1_22658 = add i32 %v0_22650, 16
  store i32 %v1_22658, i32* @edx, align 4
  %v0_2265b = load i32, i32* @esi, align 4
  store i32 %v0_2265b, i32* @eax, align 8
  %v0_2265d = call i32 @function_22960()
  ret i32 %v0_2265d
}

define i32 @function_2266a() local_unnamed_addr {
dec_label_pc_2266a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_22670:
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg1, i32* @esi, align 4
  %v4_2268c = sext i8 %arg3 to i32
  store i32 %v4_2268c, i32* @ebx, align 4
  %v1_22690 = add i32 %arg2, 8
  %v2_22690 = inttoptr i32 %v1_22690 to i32*
  %v3_22690 = load i32, i32* %v2_22690, align 4
  store i32 %v3_22690, i32* @edi, align 4
  %v1_22697 = icmp eq i32 %v3_22690, 0
  %v1_22699 = icmp eq i1 %v1_22697, false
  br i1 %v1_22699, label %dec_label_pc_226a9.preheader, label %dec_label_pc_2269b

dec_label_pc_226a9.preheader:                     ; preds = %dec_label_pc_22670
  %v5_226b3 = icmp eq i8 %arg3, 0
  %v1_226b5 = icmp eq i1 %v5_226b3, false
  br label %dec_label_pc_226a9

dec_label_pc_2269b:                               ; preds = %dec_label_pc_22670
  %v1_2269b = call i32 @function_2274b(i32 %arg2)
  ret i32 %v1_2269b

dec_label_pc_226a0:                               ; preds = %dec_label_pc_226a9
  %v1_226a0 = add i32 %v0_226a0, 8
  %v2_226a0 = inttoptr i32 %v1_226a0 to i32*
  %v3_226a0 = load i32, i32* %v2_226a0, align 4
  %v1_226a3 = icmp eq i32 %v3_226a0, 0
  br i1 %v1_226a3, label %dec_label_pc_226be.thread120, label %dec_label_pc_226a7

dec_label_pc_226be.thread120:                     ; preds = %dec_label_pc_226a0
  br label %dec_label_pc_226c2

dec_label_pc_226a7:                               ; preds = %dec_label_pc_226a0, %dec_label_pc_226b7
  %v0_226a7 = phi i32 [ %v3_226a0, %dec_label_pc_226a0 ], [ %v3_226b7, %dec_label_pc_226b7 ]
  store i32 %v0_226a7, i32* @edi, align 4
  br label %dec_label_pc_226a9

dec_label_pc_226a9:                               ; preds = %dec_label_pc_226a9.preheader, %dec_label_pc_226a7
  %v0_226a0 = phi i32 [ %v0_226a7, %dec_label_pc_226a7 ], [ %v3_22690, %dec_label_pc_226a9.preheader ]
  br i1 %v1_226b5, label %dec_label_pc_226a0, label %dec_label_pc_226b7

dec_label_pc_226b7:                               ; preds = %dec_label_pc_226a9
  %v1_226b7 = add i32 %v0_226a0, 12
  %v2_226b7 = inttoptr i32 %v1_226b7 to i32*
  %v3_226b7 = load i32, i32* %v2_226b7, align 4
  %v1_226ba = icmp eq i32 %v3_226b7, 0
  %v1_226bc = icmp eq i1 %v1_226ba, false
  br i1 %v1_226bc, label %dec_label_pc_226a7, label %bb

bb:                                               ; preds = %dec_label_pc_226b7
  %v1_226c0 = call i32 @function_22708()
  %v0_226c6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_226c2

dec_label_pc_226c2:                               ; preds = %dec_label_pc_226be.thread120, %bb
  %v0_226c6 = phi i32 [ %v0_226c6.pre, %bb ], [ %v0_226a0, %dec_label_pc_226be.thread120 ]
  %v2_226c6 = add i32 %arg2, 12
  %v3_226c6 = inttoptr i32 %v2_226c6 to i32*
  %v4_226c6 = load i32, i32* %v3_226c6, align 4
  %v15_226c6 = icmp eq i32 %v0_226c6, %v4_226c6
  br i1 %v15_226c6, label %bb118, label %dec_label_pc_226cb

bb118:                                            ; preds = %dec_label_pc_226c2
  %v1_226c9 = call i32 @function_22718()
  br label %dec_label_pc_226cb

dec_label_pc_226cb:                               ; preds = %bb118, %dec_label_pc_226c2
  %v3_226cb = phi i32 [ %v1_226c9, %bb118 ], [ %arg2, %dec_label_pc_226c2 ]
  ret i32 %v3_226cb

; uselistorder directives
  uselistorder i32 %v3_226b7, { 1, 0 }
  uselistorder i32 %v0_226a0, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_226c2, { 1, 0 }
  uselistorder label %dec_label_pc_226a9, { 1, 0 }
  uselistorder label %dec_label_pc_226a7, { 1, 0 }
}

define i32 @function_226e3() local_unnamed_addr {
dec_label_pc_226e3:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_226e9() local_unnamed_addr {
dec_label_pc_226e9:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_226ed = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_226ed = icmp eq i32 %v1_226ed, %tmp10
  %v0_226f4 = load i32, i32* @esi, align 4
  store i32 %v0_226f4, i32* @eax, align 8
  %v1_226f6 = icmp eq i1 %v3_226ed, false
  br i1 %v1_226f6, label %bb, label %dec_label_pc_226f8

bb:                                               ; preds = %dec_label_pc_226e9
  %v2_226f6 = call i32 @function_22755()
  br label %dec_label_pc_226f8

dec_label_pc_226f8:                               ; preds = %bb, %dec_label_pc_226e9
  %v0_226ff = phi i32 [ %v2_226f6, %bb ], [ %v0_226f4, %dec_label_pc_226e9 ]
  ret i32 %v0_226ff
}

define i32 @function_22708() local_unnamed_addr {
dec_label_pc_22708:
  %v0_22708 = load i32, i32* @edi, align 4
  %v1_2270c = add i32 %v0_22708, 16
  ret i32 %v1_2270c
}

define i32 @function_22718() local_unnamed_addr {
dec_label_pc_22718:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v2_2271c = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_2271c, i32* %eax.global-to-local, align 8
  %v0_22723 = load i32, i32* @ebx, align 4
  %v0_22727 = load i32, i32* @edi, align 4
  %v5_22737 = call i32 @unknown_44bf0(i32 %v2_2271c, i32 %tmp7, i32 0, i32 %v0_22727, i32 %v0_22723)
  %v0_22743 = load i32, i32* @esi, align 4
  %v1_22743 = add i32 %v0_22743, 4
  %v2_22743 = inttoptr i32 %v1_22743 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v2_22743, align 1
  %v0_22747 = load i32, i32* %eax.global-to-local, align 8
  %v1_22747 = load i32, i32* @esi, align 4
  %v2_22747 = inttoptr i32 %v1_22747 to i32*
  store i32 %v0_22747, i32* %v2_22747, align 4
  %v0_22749 = call i32 @function_226e9()
  store i32 %v0_22749, i32* %eax.global-to-local, align 8
  ret i32 %v0_22749
}

define i32 @function_2274b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2274b:
  %v0_2274b = load i32, i32* @eax, align 8
  ret i32 %v0_2274b
}

define i32 @function_22755() local_unnamed_addr {
dec_label_pc_22755:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_22760:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_22773 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_22787 = add i32 %arg2, 4
  %v12_2278a = icmp eq i32 %v1_22787, %arg3
  %v4_22790 = sext i8 %arg4 to i32
  store i32 %v4_22790, i32* @ebp, align 4
  br i1 %v12_2278a, label %bb, label %dec_label_pc_2279a

bb:                                               ; preds = %dec_label_pc_22760
  %v2_22794 = call i32 @function_228a0(i32 %v0_22773)
  %v0_2279a.pre = load i32, i32* @ebx, align 4
  %v0_227a3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2279a

dec_label_pc_2279a:                               ; preds = %bb, %dec_label_pc_22760
  %v0_227a3 = phi i32 [ %v0_227a3.pre, %bb ], [ %v4_22790, %dec_label_pc_22760 ]
  %v0_2279a = phi i32 [ %v0_2279a.pre, %bb ], [ %arg3, %dec_label_pc_22760 ]
  %v4_227aa = trunc i32 %v0_227a3 to i8
  %v5_227aa = icmp eq i8 %v4_227aa, 0
  br i1 %v5_227aa, label %bb114, label %dec_label_pc_227b2

bb114:                                            ; preds = %dec_label_pc_2279a
  %v1_2279a = add i32 %v0_2279a, 16
  %v2_227ac = trunc i32 %v1_2279a to i8
  %v3_227ac = call i32 @function_22830(i8 %v2_227ac)
  %v1_227b5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_227b2

dec_label_pc_227b2:                               ; preds = %bb114, %dec_label_pc_2279a
  %v1_227b5 = phi i32 [ %v1_227b5.pre, %bb114 ], [ %v0_2279a, %dec_label_pc_2279a ]
  %v0_227b2 = load i32, i32* @edi, align 4
  %v1_227b2 = add i32 %v0_227b2, 12
  %v2_227b2 = inttoptr i32 %v1_227b2 to i32*
  %v3_227b2 = load i32, i32* %v2_227b2, align 4
  store i32 %v3_227b2, i32* @eax, align 8
  %v12_227b5 = icmp eq i32 %v3_227b2, %v1_227b5
  br i1 %v12_227b5, label %bb115, label %dec_label_pc_227bd

bb115:                                            ; preds = %dec_label_pc_227b2
  %v1_227b7 = call i32 @function_22918()
  br label %dec_label_pc_227bd

dec_label_pc_227bd:                               ; preds = %bb115, %dec_label_pc_227b2
  %v3_227bd = phi i32 [ %v1_227b7, %bb115 ], [ %v3_227b2, %dec_label_pc_227b2 ]
  ret i32 %v3_227bd

; uselistorder directives
  uselistorder i32 %v3_227b2, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_227c6() local_unnamed_addr {
dec_label_pc_227c6:
  %v0_227c6 = call i32 @function_408dc189()
  ret i32 %v0_227c6

; uselistorder directives
  uselistorder i32 ()* @function_408dc189, { 3, 2, 1, 0 }
}

define i32 @function_227d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_227d0:
  %v1_227e1 = add i32 %arg1, 12
  %v2_227e1 = inttoptr i32 %v1_227e1 to i32*
  %v3_227e1 = load i32, i32* %v2_227e1, align 4
  store i32 %v3_227e1, i32* @eax, align 8
  %v1_227e8 = icmp eq i32 %v3_227e1, 0
  br i1 %v1_227e8, label %bb, label %dec_label_pc_227f0

bb:                                               ; preds = %dec_label_pc_227d0
  %v1_227ea = call i32 @function_228f8()
  br label %dec_label_pc_227f0

dec_label_pc_227f0:                               ; preds = %bb, %dec_label_pc_227d0
  %v0_227f4 = load i32, i32* @ebx, align 4
  %v0_227f8 = load i32, i32* @edi, align 4
  %v0_227fc = load i32, i32* @esi, align 4
  %v3_227ff = call i32 @unknown_44ce0(i32 %v0_227fc, i32 %v0_227f8, i32 %v0_227f4)
  ret i32 %v3_227ff
}

define i32 @function_22807() local_unnamed_addr {
dec_label_pc_22807:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_2280b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2280b = icmp eq i32 %v1_2280b, %tmp6
  %v0_22812 = load i32, i32* @esi, align 4
  store i32 %v0_22812, i32* @eax, align 8
  %v1_22814 = icmp eq i1 %v3_2280b, false
  br i1 %v1_22814, label %bb, label %dec_label_pc_2281a

bb:                                               ; preds = %dec_label_pc_22807
  %v2_22814 = call i32 @function_22948()
  br label %dec_label_pc_2281a

dec_label_pc_2281a:                               ; preds = %bb, %dec_label_pc_22807
  %v0_2282d = phi i32 [ %v2_22814, %bb ], [ %v0_22812, %dec_label_pc_22807 ]
  ret i32 %v0_2282d
}

define i32 @function_22830(i8 %arg1) local_unnamed_addr {
dec_label_pc_22830:
  %v5_2283b = icmp eq i8 %arg1, 0
  br i1 %v5_2283b, label %bb, label %dec_label_pc_22843

bb:                                               ; preds = %dec_label_pc_22830
  %v1_2283d = call i32 @function_228d0()
  br label %dec_label_pc_22843

dec_label_pc_22843:                               ; preds = %bb, %dec_label_pc_22830
  %v0_22843 = load i32, i32* @edi, align 4
  %v1_22843 = add i32 %v0_22843, 16
  %v2_22843 = inttoptr i32 %v1_22843 to i32*
  %v3_22843 = load i32, i32* %v2_22843, align 4
  store i32 %v3_22843, i32* @eax, align 8
  %v1_22846 = load i32, i32* @ebx, align 4
  %v12_22846 = icmp eq i32 %v3_22843, %v1_22846
  br i1 %v12_22846, label %bb4, label %dec_label_pc_2284e

bb4:                                              ; preds = %dec_label_pc_22843
  %v1_22848 = call i32 @function_2293e()
  br label %dec_label_pc_2284e

dec_label_pc_2284e:                               ; preds = %bb4, %dec_label_pc_22843
  %v3_2284e = phi i32 [ %v1_22848, %bb4 ], [ %v3_22843, %dec_label_pc_22843 ]
  ret i32 %v3_2284e

; uselistorder directives
  uselistorder i32 %v3_22843, { 1, 0, 2 }
}

define i32 @function_22855() local_unnamed_addr {
dec_label_pc_22855:
  %ecx.global-to-local = alloca i32, align 4
  %v0_22855 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22855 = add i32 %v0_22855, 273714625
  %v2_22855 = inttoptr i32 %v1_22855 to i32*
  %v3_22855 = load i32, i32* %v2_22855, align 4
  %v4_22855 = add i32 %v3_22855, -1
  store i32 %v4_22855, i32* %v2_22855, align 4
  %v0_2285d = load i32, i32* %ecx.global-to-local, align 4
  %v0_2286e = load i32, i32* @ebx, align 4
  %v1_2286e = add i32 %v0_2286e, 12
  %v2_2286e = inttoptr i32 %v1_2286e to i32*
  %v3_2286e = load i32, i32* %v2_2286e, align 4
  %v1_22875 = icmp eq i32 %v3_2286e, 0
  br i1 %v1_22875, label %bb, label %dec_label_pc_2287d

bb:                                               ; preds = %dec_label_pc_22855
  %v2_22877 = call i32 @function_22938(i32 %v0_2285d)
  %v0_22881.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_2287d

dec_label_pc_2287d:                               ; preds = %bb, %dec_label_pc_22855
  %v0_22881 = phi i32 [ %v0_22881.pre, %bb ], [ %v0_2285d, %dec_label_pc_22855 ]
  %v0_22885 = load i32, i32* @edi, align 4
  %v0_22889 = load i32, i32* @esi, align 4
  %v3_2288c = call i32 @unknown_44ce0(i32 %v0_22889, i32 %v0_22885, i32 %v0_22881)
  %v0_22894 = call i32 @function_22807()
  ret i32 %v0_22894
}

define i32 @function_228a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_228a0:
  %stack_var_40 = alloca i32, align 4
  %v0_228a0 = load i32, i32* @edi, align 4
  %v1_228a0 = add i32 %v0_228a0, 20
  %v2_228a0 = inttoptr i32 %v1_228a0 to i32*
  %v3_228a0 = load i32, i32* %v2_228a0, align 4
  %v1_228a3 = icmp eq i32 %v3_228a0, 0
  %v1_228a5 = icmp eq i1 %v1_228a3, false
  br i1 %v1_228a5, label %bb, label %dec_label_pc_228a7

bb:                                               ; preds = %dec_label_pc_228a0
  %v2_228a5 = call i32 @function_228d8()
  %v0_228b2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_228a7

dec_label_pc_228a7:                               ; preds = %bb, %dec_label_pc_228a0
  %v0_228b2 = phi i32 [ %v0_228b2.pre, %bb ], [ %v0_228a0, %dec_label_pc_228a0 ]
  %v2_228a7 = ptrtoint i32* %stack_var_40 to i32
  %v2_228b6 = call i32 @unknown_44dd0(i32 %v2_228a7, i32 %v0_228b2)
  %v1_228c2 = load i32, i32* @esi, align 4
  %v2_228c2 = inttoptr i32 %v1_228c2 to i32*
  store i32 %arg1, i32* %v2_228c2, align 4
  %v0_228c4 = call i32 @function_22807()
  ret i32 %v0_228c4
}

define i32 @function_228c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_228c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_228d0() local_unnamed_addr {
dec_label_pc_228d0:
  %v0_228d0 = load i32, i32* @ebx, align 4
  %v1_228d0 = load i32, i32* @esi, align 4
  %v2_228d0 = inttoptr i32 %v1_228d0 to i32*
  store i32 %v0_228d0, i32* %v2_228d0, align 4
  %v0_228d2 = call i32 @function_22807()
  ret i32 %v0_228d2
}

define i32 @function_228d8() local_unnamed_addr {
dec_label_pc_228d8:
  %v0_228d8 = load i32, i32* @edi, align 4
  %v1_228d8 = add i32 %v0_228d8, 16
  %v2_228d8 = inttoptr i32 %v1_228d8 to i32*
  %v3_228d8 = load i32, i32* %v2_228d8, align 4
  %v1_228f1 = call i32 @function_228fc(i32 %v3_228d8)
  ret i32 %v1_228f1
}

define i32 @function_228f8() local_unnamed_addr {
dec_label_pc_228f8:
  %v4_228f8 = load i32, i32* @eax, align 8
  ret i32 %v4_228f8
}

define i32 @function_228fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_228fc:
  %v0_22904 = load i32, i32* @edi, align 4
  %v0_22908 = load i32, i32* @esi, align 4
  %v3_2290b = call i32 @unknown_44ce0(i32 %v0_22908, i32 %v0_22904, i32 0)
  %v0_22913 = call i32 @function_22807()
  ret i32 %v0_22913
}

define i32 @function_22918() local_unnamed_addr {
dec_label_pc_22918:
  %v0_22920 = load i32, i32* @eax, align 8
  %v0_22924 = load i32, i32* @edi, align 4
  %v0_22928 = load i32, i32* @esi, align 4
  %v3_2292b = call i32 @unknown_44ce0(i32 %v0_22928, i32 %v0_22924, i32 %v0_22920)
  %v0_22933 = call i32 @function_22807()
  ret i32 %v0_22933

; uselistorder directives
  uselistorder i32 ()* @function_22807, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_44ce0, { 1, 0, 3, 2 }
}

define i32 @function_22938(i32 %arg1) local_unnamed_addr {
dec_label_pc_22938:
  %v0_22938 = load i32, i32* @ebx, align 4
  %v1_2293c = call i32 @function_228fc(i32 %v0_22938)
  ret i32 %v1_2293c
}

define i32 @function_2293e() local_unnamed_addr {
dec_label_pc_2293e:
  %v0_22942 = load i32, i32* @eax, align 8
  %v1_22946 = call i32 @function_228fc(i32 %v0_22942)
  ret i32 %v1_22946

; uselistorder directives
  uselistorder i32 (i32)* @function_228fc, { 1, 2, 0 }
}

define i32 @function_22948() local_unnamed_addr {
dec_label_pc_22948:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS4_bSB_EESH_EEEEEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_22950:
  ret i32 %arg1
}

define i32 @function_22960() local_unnamed_addr {
dec_label_pc_22960:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %v0_22960 = load i32, i32* @eax, align 8
  %v1_22960 = trunc i32 %v0_22960 to i8
  %v2_22960 = and i8 %v1_22960, -100
  %v8_22960 = zext i8 %v2_22960 to i32
  %v10_22960 = and i32 %v0_22960, -256
  %v11_22960 = or i32 %v8_22960, %v10_22960
  store i32 %v11_22960, i32* %eax.global-to-local, align 8
  %v1_22962 = inttoptr i32 %v11_22960 to i8*
  %v2_22962 = load i8, i8* %v1_22962, align 4
  %v5_22962 = add i8 %v2_22962, %v2_22960
  store i8 %v5_22962, i8* %v1_22962, align 4
  %v0_22964 = load i32, i32* @ebx, align 4
  %v1_22964 = add i32 %v0_22964, 9970836
  %v2_22964 = inttoptr i32 %v1_22964 to i8*
  %v3_22964 = load i8, i8* %v2_22964, align 1
  %v4_22964 = load i32, i32* @ecx, align 4
  %v5_22964 = trunc i32 %v4_22964 to i8
  %v6_22964 = add i8 %v5_22964, %v3_22964
  store i8 %v6_22964, i8* %v2_22964, align 1
  %v0_2296a = load i32, i32* %eax.global-to-local, align 8
  %v1_2296a = inttoptr i32 %v0_2296a to i8*
  %v2_2296a = load i8, i8* %v1_2296a, align 1
  %v4_2296a = trunc i32 %v0_2296a to i8
  %v5_2296a = add i8 %v2_2296a, %v4_2296a
  store i8 %v5_2296a, i8* %v1_2296a, align 1
  %v0_2296c = load i32, i32* %eax.global-to-local, align 8
  %v4_22970 = zext i8 %tmp4 to i32
  store i32 %v4_22970, i32* %eax.global-to-local, align 8
  %v1_22991 = add i32 %v0_2296c, 4
  %v2_22991 = inttoptr i32 %v1_22991 to i32*
  %v3_22991 = load i32, i32* %v2_22991, align 4
  store i32 %v3_22991, i32* @eax, align 8
  %v1_22994 = icmp eq i32 %v3_22991, 0
  br i1 %v1_22994, label %bb, label %dec_label_pc_2299c

bb:                                               ; preds = %dec_label_pc_22960
  %v2_22996 = call i32 @function_22d6a(i32 %v0_2296c)
  store i32 %v2_22996, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2299c

dec_label_pc_2299c:                               ; preds = %bb, %dec_label_pc_22960
  %v0_2299c = phi i32 [ %v2_22996, %bb ], [ %v3_22991, %dec_label_pc_22960 ]
  %v1_2299c = add i32 %v0_2299c, 4
  %v2_2299c = inttoptr i32 %v1_2299c to i32*
  %v3_2299c = load i32, i32* %v2_2299c, align 4
  store i32 %v3_2299c, i32* @eax, align 8
  %v10_2299f = icmp eq i32 %v3_2299c, 1
  %v1_229a2 = icmp eq i1 %v10_2299f, false
  br i1 %v1_229a2, label %bb7, label %dec_label_pc_229a8

bb7:                                              ; preds = %dec_label_pc_2299c
  %v3_229a2 = sext i8 %tmp4 to i32
  %v4_229a2 = call i32 @function_22d6a(i32 %v3_229a2)
  store i32 %v4_229a2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_229a8

dec_label_pc_229a8:                               ; preds = %bb7, %dec_label_pc_2299c
  %v1_229ae = inttoptr i32 %v0_2296c to i32*
  %v2_229ae = load i32, i32* %v1_229ae, align 4
  store i32 %v2_229ae, i32* %eax.global-to-local, align 8
  ret i32 %v2_229ae

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 1, 0, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_22d6a, { 1, 0 }
  uselistorder i8 -100, { 1, 2, 3, 0 }
}

define i32 @function_229b0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_229b0:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_84 = alloca i32, align 4
  %stack_var_91 = alloca i32, align 4
  %tmp38 = call i8 @__decompiler_undefined_function_3()
  %v0_229b0 = load i32, i32* @eax, align 8
  %v1_229b0 = icmp eq i32 %v0_229b0, 0
  br i1 %v1_229b0, label %dec_label_pc_229b8, label %dec_label_pc_229b8.thread

dec_label_pc_229b8.thread:                        ; preds = %dec_label_pc_229b0
  br label %dec_label_pc_229c2

dec_label_pc_229b8:                               ; preds = %dec_label_pc_229b0
  %v1_229b2 = call i32 @function_22d56()
  store i32 %v1_229b2, i32* @eax, align 8
  %v1_229ba = icmp eq i32 %v1_229b2, 0
  br i1 %v1_229ba, label %bb45, label %dec_label_pc_229c2

bb45:                                             ; preds = %dec_label_pc_229b8
  %v2_229bc = call i32 @function_22d60(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_229c2

dec_label_pc_229c2:                               ; preds = %dec_label_pc_229b8.thread, %bb45, %dec_label_pc_229b8
  %v1_229c2 = phi i32 [ %v2_229bc, %bb45 ], [ %v1_229b2, %dec_label_pc_229b8 ], [ %v0_229b0, %dec_label_pc_229b8.thread ]
  %v0_229c2 = load i32, i32* @esi, align 4
  %v12_229c2 = icmp eq i32 %v0_229c2, %v1_229c2
  br i1 %v12_229c2, label %bb46, label %dec_label_pc_229ca

bb46:                                             ; preds = %dec_label_pc_229c2
  %v2_229c4 = call i32 @function_22b08(i32 ptrtoint (i32* @1 to i32))
  %v0_229ce.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_229ca

dec_label_pc_229ca:                               ; preds = %bb46, %dec_label_pc_229c2
  %v3_22af919 = phi i32 [ %v2_229c4, %bb46 ], [ %v1_229c2, %dec_label_pc_229c2 ]
  %v0_229ce = phi i32 [ %v0_229ce.pre, %bb46 ], [ %v0_229c2, %dec_label_pc_229c2 ]
  %v1_229ce = add i32 %v0_229ce, 8
  %v2_229ce = inttoptr i32 %v1_229ce to i32*
  %v3_229ce = load i32, i32* %v2_229ce, align 4
  store i32 %v3_229ce, i32* %ebp.global-to-local, align 4
  %v1_229d8 = icmp eq i32 %v3_229ce, 0
  br i1 %v1_229d8, label %dec_label_pc_22ae1, label %dec_label_pc_229e8.preheader

dec_label_pc_229e8.preheader:                     ; preds = %dec_label_pc_229ca
  %v1_229d1 = icmp eq i32 %arg2, 0
  %v10_229f1 = icmp eq i8 %tmp38, 0
  %v10_22acf = icmp eq i1 %v1_229d1, false
  %v2_22a32 = ptrtoint i32* %stack_var_91 to i32
  %v2_22a41 = ptrtoint i32* %stack_var_84 to i32
  br label %dec_label_pc_229e8

dec_label_pc_229e8:                               ; preds = %dec_label_pc_229e8.preheader, %dec_label_pc_22ad6
  %v0_229fc = phi i32 [ %v0_22ad6, %dec_label_pc_22ad6 ], [ %v0_229ce, %dec_label_pc_229e8.preheader ]
  %v0_229e8 = phi i32 [ %v3_22ad6, %dec_label_pc_22ad6 ], [ %v3_229ce, %dec_label_pc_229e8.preheader ]
  %stack_var_36.0 = phi i1 [ %v23_22ac0, %dec_label_pc_22ad6 ], [ false, %dec_label_pc_229e8.preheader ]
  %v1_229e8 = inttoptr i32 %v0_229e8 to i32*
  %v2_229e8 = load i32, i32* %v1_229e8, align 4
  store i32 %v2_229e8, i32* @eax, align 8
  br i1 %v10_229f1, label %dec_label_pc_22a82, label %dec_label_pc_229fc

dec_label_pc_229fc:                               ; preds = %dec_label_pc_229e8
  %v1_229fc = add i32 %v0_229fc, 8
  %v2_229fc = inttoptr i32 %v1_229fc to i32*
  %v3_229fc = load i32, i32* %v2_229fc, align 4
  %v1_229ff = icmp eq i32 %v3_229fc, 0
  br i1 %v1_229ff, label %bb47, label %dec_label_pc_22a0b

bb47:                                             ; preds = %dec_label_pc_229fc
  %v2_22a05 = call i32 @function_22d5b(i32 0)
  br label %dec_label_pc_22a0b

dec_label_pc_22a0b:                               ; preds = %bb47, %dec_label_pc_229fc
  store i32 %v3_229fc, i32* %edi.global-to-local, align 4
  %v1_22a13 = add i32 %v3_229fc, 16
  %v2_22a13 = inttoptr i32 %v1_22a13 to i32*
  %v3_22a13 = load i32, i32* %v2_22a13, align 4
  store i32 %v3_22a13, i32* @ebx, align 4
  store i32 %v1_22a13, i32* %edi.global-to-local, align 4
  %v1_22a19 = add i32 %v3_229fc, 20
  %v2_22a19 = inttoptr i32 %v1_22a19 to i32*
  %v3_22a19 = load i32, i32* %v2_22a19, align 4
  %v15_22a19 = icmp eq i32 %v3_22a19, %v3_22a13
  %v1_22a1c = icmp eq i1 %v15_22a19, false
  br i1 %v1_22a1c, label %dec_label_pc_22a30, label %dec_label_pc_22a1e

dec_label_pc_22a1e:                               ; preds = %dec_label_pc_22a0b
  %v0_22a1e = call i32 @function_22d1a()
  ret i32 %v0_22a1e

dec_label_pc_22a28:                               ; preds = %dec_label_pc_22a30
  %v0_22a28 = load i32, i32* @ebx, align 4
  %v1_22a28 = add i32 %v0_22a28, 12
  store i32 %v1_22a28, i32* @ebx, align 4
  %v1_22a2b = load i32, i32* %edi.global-to-local, align 4
  %v2_22a2b = add i32 %v1_22a2b, 4
  %v3_22a2b = inttoptr i32 %v2_22a2b to i32*
  %v4_22a2b = load i32, i32* %v3_22a2b, align 4
  %v15_22a2b = icmp eq i32 %v1_22a28, %v4_22a2b
  br i1 %v15_22a2b, label %dec_label_pc_22a82, label %dec_label_pc_22a30

dec_label_pc_22a30:                               ; preds = %dec_label_pc_22a0b, %dec_label_pc_22a28
  %v0_22a30 = phi i32 [ %v1_22a28, %dec_label_pc_22a28 ], [ %v3_22a13, %dec_label_pc_22a0b ]
  %v1_22a30 = inttoptr i32 %v0_22a30 to i32*
  %v2_22a30 = load i32, i32* %v1_22a30, align 4
  store i32 %v2_22a32, i32* %stack_var_84, align 4
  %v1_22a3a = add i32 %v0_22a30, 4
  %v2_22a4f = ashr i32 %v2_22a30, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_22a52 = xor i32 %v2_22a4f, %v2_22a30
  %v13_22a71 = call i32 @unknown_3e730(i32 %v2_22a30, i32 %v2_22a52, i32 %v2_22a41, i32 %v1_22a3a, i32 0, i32 0, i32 0, i32 0)
  %v4_22a76 = trunc i32 %v13_22a71 to i8
  %v5_22a76 = icmp eq i8 %v4_22a76, 0
  br i1 %v5_22a76, label %dec_label_pc_22a28, label %dec_label_pc_22a7a

dec_label_pc_22a7a:                               ; preds = %dec_label_pc_22a30
  %v1_22a7e = add i32 %v3_229fc, 4
  %v2_22a7e = inttoptr i32 %v1_22a7e to i8*
  store i8 0, i8* %v2_22a7e, align 1
  br label %dec_label_pc_22a82

dec_label_pc_22a82:                               ; preds = %dec_label_pc_22a28, %dec_label_pc_22a7a, %dec_label_pc_229e8
  %stack_var_0.0.in = phi i32 [ %v0_229e8, %dec_label_pc_229e8 ], [ %v2_22a30, %dec_label_pc_22a7a ], [ %v2_22a30, %dec_label_pc_22a28 ]
  %v0_22a82 = load i32, i32* @esi, align 4
  %v1_22a82 = add i32 %v0_22a82, 8
  %v2_22a82 = inttoptr i32 %v1_22a82 to i32*
  %v3_22a82 = load i32, i32* %v2_22a82, align 4
  store i32 %v3_22a82, i32* @eax, align 8
  %v1_22a85 = icmp eq i32 %v3_22a82, 0
  br i1 %v1_22a85, label %bb48, label %dec_label_pc_22a8d

bb48:                                             ; preds = %dec_label_pc_22a82
  %v3_22a87 = call i32 @function_22d5b(i32 %stack_var_0.0.in)
  br label %dec_label_pc_22a8d

dec_label_pc_22a8d:                               ; preds = %bb48, %dec_label_pc_22a82
  %v0_22a8d = phi i32 [ %v3_22a87, %bb48 ], [ %v3_22a82, %dec_label_pc_22a82 ]
  %v1_22a8d = add i32 %v0_22a8d, 4
  %v2_22a8d = inttoptr i32 %v1_22a8d to i8*
  %v3_22a8d = load i8, i8* %v2_22a8d, align 1
  %v4_22a8d = zext i8 %v3_22a8d to i32
  store i32 %v4_22a8d, i32* @ebx, align 4
  %v0_22a91 = load i32, i32* %ebp.global-to-local, align 4
  %v1_22a91 = inttoptr i32 %v0_22a91 to i32*
  %v2_22a91 = load i32, i32* %v1_22a91, align 4
  store i32 %v2_22a91, i32* @eax, align 8
  %v5_22a9a = icmp eq i8 %v3_22a8d, 0
  br i1 %v5_22a9a, label %bb49, label %dec_label_pc_22aa2

bb49:                                             ; preds = %dec_label_pc_22a8d
  %v1_22a9c = call i32 @function_22b28()
  br label %dec_label_pc_22aa2

dec_label_pc_22aa2:                               ; preds = %bb49, %dec_label_pc_22a8d
  %v0_22aa2 = load i32, i32* @esi, align 4
  %v1_22aa2 = inttoptr i32 %v0_22aa2 to i32*
  %v2_22aa2 = load i32, i32* %v1_22aa2, align 4
  store i32 %v2_22aa2, i32* @esi, align 4
  %v2_22aa8 = load i32, i32* %arg1, align 4
  store i32 %v2_22aa8, i32* @eax, align 8
  %v1_22aaa = icmp eq i32 %v2_22aa8, 0
  br i1 %v1_22aaa, label %bb50, label %dec_label_pc_22ab2

bb50:                                             ; preds = %dec_label_pc_22aa2
  %v1_22aac = call i32 @function_22d56()
  br label %dec_label_pc_22ab2

dec_label_pc_22ab2:                               ; preds = %bb50, %dec_label_pc_22aa2
  %v0_22ab2 = phi i32 [ %v1_22aac, %bb50 ], [ %v2_22aa8, %dec_label_pc_22aa2 ]
  %v1_22ab2 = inttoptr i32 %v0_22ab2 to i32*
  %v2_22ab2 = load i32, i32* %v1_22ab2, align 4
  store i32 %v2_22ab2, i32* @eax, align 8
  %v1_22ab4 = icmp eq i32 %v2_22ab2, 0
  br i1 %v1_22ab4, label %bb51, label %dec_label_pc_22abc

bb51:                                             ; preds = %dec_label_pc_22ab2
  %v3_22ab6 = call i32 @function_22d60(i32 %v0_22a91)
  br label %dec_label_pc_22abc

dec_label_pc_22abc:                               ; preds = %bb51, %dec_label_pc_22ab2
  %v0_22abc = phi i32 [ %v3_22ab6, %bb51 ], [ %v2_22ab2, %dec_label_pc_22ab2 ]
  %v1_22abc = load i32, i32* @esi, align 4
  %v12_22abc = icmp eq i32 %v0_22abc, %v1_22abc
  br i1 %v12_22abc, label %bb52, label %dec_label_pc_22ac0

bb52:                                             ; preds = %dec_label_pc_22abc
  %v3_22abe = call i32 @function_22b08(i32 %v0_22a91)
  br label %dec_label_pc_22ac0

dec_label_pc_22ac0:                               ; preds = %bb52, %dec_label_pc_22abc
  %v3_22af921 = phi i32 [ %v3_22abe, %bb52 ], [ %v0_22abc, %dec_label_pc_22abc ]
  %v4_22ac022 = zext i1 %stack_var_36.0 to i32
  %v5_22ac0 = add i32 %v4_22ac022, ptrtoint (i1* @global_var_1.2399 to i32)
  %tmp53 = urem i32 %v5_22ac0, 2
  %v23_22ac0 = icmp ne i32 %tmp53, 0
  %v4_22ac5 = sext i1 %v23_22ac0 to i32
  %tmp59 = icmp ult i32 %v4_22ac5, %arg2
  br i1 %tmp59, label %dec_label_pc_22ad6, label %dec_label_pc_22acf

dec_label_pc_22acf:                               ; preds = %dec_label_pc_22ac0
  br i1 %v10_22acf, label %bb54, label %dec_label_pc_22ad6

bb54:                                             ; preds = %dec_label_pc_22acf
  %v3_22ad4 = call i32 @function_22b08(i32 %v4_22ac5)
  br label %dec_label_pc_22ad6

dec_label_pc_22ad6:                               ; preds = %dec_label_pc_22ac0, %bb54, %dec_label_pc_22acf
  %v3_22af920 = phi i32 [ %v3_22af921, %dec_label_pc_22ac0 ], [ %v3_22ad4, %bb54 ], [ %v3_22af921, %dec_label_pc_22acf ]
  %v0_22ad6 = load i32, i32* @esi, align 4
  %v1_22ad6 = add i32 %v0_22ad6, 8
  %v2_22ad6 = inttoptr i32 %v1_22ad6 to i32*
  %v3_22ad6 = load i32, i32* %v2_22ad6, align 4
  store i32 %v3_22ad6, i32* %ebp.global-to-local, align 4
  %v1_22ad9 = icmp eq i32 %v3_22ad6, 0
  %v1_22adb = icmp eq i1 %v1_22ad9, false
  br i1 %v1_22adb, label %dec_label_pc_229e8, label %dec_label_pc_22ae1

dec_label_pc_22ae1:                               ; preds = %dec_label_pc_22ad6, %dec_label_pc_229ca
  %v3_22af9 = phi i32 [ %v3_22af919, %dec_label_pc_229ca ], [ %v3_22af920, %dec_label_pc_22ad6 ]
  ret i32 %v3_22af9

; uselistorder directives
  uselistorder i32 %v3_22ad6, { 1, 2, 0 }
  uselistorder i32 %v0_22ad6, { 1, 0 }
  uselistorder i32 %v4_22ac5, { 1, 0 }
  uselistorder i1 %v23_22ac0, { 1, 0 }
  uselistorder i32 %v0_22abc, { 1, 0 }
  uselistorder i32 %v0_22a91, { 1, 0, 2 }
  uselistorder i32 %v2_22a30, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_22a30, { 1, 0 }
  uselistorder i32 %v1_22a28, { 1, 0, 2 }
  uselistorder i32 %v3_22a13, { 1, 0, 2 }
  uselistorder i32 %v3_229fc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_229e8, { 1, 0 }
  uselistorder i32 %v0_229c2, { 1, 0 }
  uselistorder i32 %v1_229c2, { 1, 0 }
  uselistorder i32 %v1_229b2, { 1, 0, 2 }
  uselistorder i32* %stack_var_84, { 1, 0 }
  uselistorder i32 (i32)* @function_22b08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_22ad6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_22a82, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22a30, { 1, 0 }
  uselistorder label %dec_label_pc_229e8, { 1, 0 }
  uselistorder label %dec_label_pc_229c2, { 1, 2, 0 }
}

define i32 @function_22b08(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b08:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_22b0c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22b0c = icmp eq i32 %v1_22b0c, %tmp7
  store i32 %arg1, i32* @eax, align 8
  %v0_22b17 = load i32, i32* @esi, align 4
  %v2_22b17 = add i32 %arg1, 8
  %v3_22b17 = inttoptr i32 %v2_22b17 to i32*
  store i32 %v0_22b17, i32* %v3_22b17, align 4
  %v1_22b1a = icmp eq i1 %v3_22b0c, false
  br i1 %v1_22b1a, label %bb, label %dec_label_pc_22b08.dec_label_pc_22b20_crit_edge

dec_label_pc_22b08.dec_label_pc_22b20_crit_edge:  ; preds = %dec_label_pc_22b08
  %v0_22b27.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_22b20

bb:                                               ; preds = %dec_label_pc_22b08
  %v2_22b1a = call i32 @function_22d65()
  br label %dec_label_pc_22b20

dec_label_pc_22b20:                               ; preds = %dec_label_pc_22b08.dec_label_pc_22b20_crit_edge, %bb
  %v0_22b27 = phi i32 [ %v0_22b27.pre, %dec_label_pc_22b08.dec_label_pc_22b20_crit_edge ], [ %v2_22b1a, %bb ]
  ret i32 %v0_22b27

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_22b20, { 1, 0 }
}

define i32 @function_22b28() local_unnamed_addr {
dec_label_pc_22b28:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %v0_22b28 = load i32, i32* @esi, align 4
  %v1_22b28 = add i32 %v0_22b28, 8
  %v2_22b28 = inttoptr i32 %v1_22b28 to i32*
  %v3_22b28 = load i32, i32* %v2_22b28, align 4
  store i32 %v3_22b28, i32* %ecx.global-to-local, align 4
  %v1_22b2b = icmp eq i32 %v3_22b28, 0
  br i1 %v1_22b2b, label %bb, label %dec_label_pc_22b37

bb:                                               ; preds = %dec_label_pc_22b28
  %v2_22b31 = call i32 @function_22d5b(i32 0)
  br label %dec_label_pc_22b37

dec_label_pc_22b37:                               ; preds = %bb, %dec_label_pc_22b28
  %v1_22b3f = inttoptr i32 %tmp29 to i32*
  %v2_22b3f = load i32, i32* %v1_22b3f, align 4
  store i32 %v2_22b3f, i32* @eax, align 8
  %v1_22b41 = add i32 %v3_22b28, 68
  store i32 %v1_22b41, i32* @edi, align 4
  %v1_22b44 = icmp eq i32 %v2_22b3f, 0
  br i1 %v1_22b44, label %bb31, label %dec_label_pc_22b4c

bb31:                                             ; preds = %dec_label_pc_22b37
  %v1_22b46 = call i32 @function_22d56()
  br label %dec_label_pc_22b4c

dec_label_pc_22b4c:                               ; preds = %bb31, %dec_label_pc_22b37
  %v0_22b4c = phi i32 [ %v1_22b46, %bb31 ], [ %v2_22b3f, %dec_label_pc_22b37 ]
  %v1_22b4c = inttoptr i32 %v0_22b4c to i32*
  %v2_22b4c = load i32, i32* %v1_22b4c, align 4
  store i32 %v2_22b4c, i32* @eax, align 8
  %v1_22b4e = icmp eq i32 %v2_22b4c, 0
  br i1 %v1_22b4e, label %bb32, label %dec_label_pc_22b5a

bb32:                                             ; preds = %dec_label_pc_22b4c
  %v2_22b54 = call i32 @function_22d60(i32 0)
  store i32 %v2_22b54, i32* @eax, align 8
  br label %dec_label_pc_22b5a

dec_label_pc_22b5a:                               ; preds = %bb32, %dec_label_pc_22b4c
  store i32 %v2_22b4c, i32* %ecx.global-to-local, align 4
  %v1_22b5e = load i32, i32* @esi, align 4
  %v12_22b5e = icmp eq i32 %v2_22b4c, %v1_22b5e
  br i1 %v12_22b5e, label %bb33, label %dec_label_pc_22b6a

bb33:                                             ; preds = %dec_label_pc_22b5a
  %v2_22b64 = call i32 @function_22dc5(i32 %v2_22b4c)
  store i32 %v2_22b64, i32* @eax, align 8
  br label %dec_label_pc_22b6a

dec_label_pc_22b6a:                               ; preds = %bb33, %dec_label_pc_22b5a
  store i32 %v2_22b4c, i32* %ecx.global-to-local, align 4
  %v1_22b6e = add i32 %v2_22b4c, 16
  %v2_22b6e = inttoptr i32 %v1_22b6e to i32*
  %v3_22b6e = load i32, i32* %v2_22b6e, align 4
  store i32 %v3_22b6e, i32* @ebp, align 4
  %v1_22b71 = icmp eq i32 %v3_22b6e, 0
  br i1 %v1_22b71, label %bb34, label %dec_label_pc_22b79

bb34:                                             ; preds = %dec_label_pc_22b6a
  %v1_22b73 = call i32 @function_22d8e()
  %v0_22b79.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_22b79

dec_label_pc_22b79:                               ; preds = %bb34, %dec_label_pc_22b6a
  %v0_22b79 = phi i32 [ %v0_22b79.pre, %bb34 ], [ %v2_22b4c, %dec_label_pc_22b6a ]
  %v1_22b79 = add i32 %v0_22b79, 12
  store i32 %v1_22b79, i32* %ecx.global-to-local, align 4
  store i32 %v3_22b6e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22b93.outer

dec_label_pc_22b88:                               ; preds = %dec_label_pc_22b93
  %v1_22b8c = add i32 %v0_22b88, 8
  %v2_22b8c = inttoptr i32 %v1_22b8c to i32*
  %v3_22b8c = load i32, i32* %v2_22b8c, align 4
  store i32 %v3_22b8c, i32* %ebx.global-to-local, align 4
  %v1_22b8f = icmp eq i32 %v3_22b8c, 0
  br i1 %v1_22b8f, label %dec_label_pc_22ba8, label %dec_label_pc_22b93.outer

dec_label_pc_22b93.outer:                         ; preds = %dec_label_pc_22b88, %dec_label_pc_22b79
  %v0_22b9314 = phi i32 [ %v3_22b8c, %dec_label_pc_22b88 ], [ %v3_22b6e, %dec_label_pc_22b79 ]
  %stack_var_32.0.ph = phi i32 [ %v0_22b88, %dec_label_pc_22b88 ], [ %v1_22b79, %dec_label_pc_22b79 ]
  br label %dec_label_pc_22b93

dec_label_pc_22b93:                               ; preds = %dec_label_pc_22b93.outer, %dec_label_pc_22ba1
  %v0_22b93 = phi i32 [ %v0_22b9314, %dec_label_pc_22b93.outer ], [ %v3_22ba1, %dec_label_pc_22ba1 ]
  %v1_22b93 = add i32 %v0_22b93, 16
  store i32 %v1_22b93, i32* @eax, align 8
  %v0_22b98 = call i32 @function_22d30()
  store i32 %v0_22b98, i32* @eax, align 8
  %v4_22b9d = trunc i32 %v0_22b98 to i8
  %v5_22b9d = icmp eq i8 %v4_22b9d, 0
  %v0_22b88 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v5_22b9d, label %dec_label_pc_22b88, label %dec_label_pc_22ba1

dec_label_pc_22ba1:                               ; preds = %dec_label_pc_22b93
  %v1_22ba1 = add i32 %v0_22b88, 12
  %v2_22ba1 = inttoptr i32 %v1_22ba1 to i32*
  %v3_22ba1 = load i32, i32* %v2_22ba1, align 4
  store i32 %v3_22ba1, i32* %ebx.global-to-local, align 4
  %v1_22ba4 = icmp eq i32 %v3_22ba1, 0
  %v1_22ba6 = icmp eq i1 %v1_22ba4, false
  br i1 %v1_22ba6, label %dec_label_pc_22b93, label %dec_label_pc_22ba8

dec_label_pc_22ba8:                               ; preds = %dec_label_pc_22b88, %dec_label_pc_22ba1
  %stack_var_32.1 = phi i32 [ %stack_var_32.0.ph, %dec_label_pc_22ba1 ], [ %v0_22b88, %dec_label_pc_22b88 ]
  store i32 %v1_22b79, i32* %ecx.global-to-local, align 4
  %v15_22bac = icmp eq i32 %stack_var_32.1, %v1_22b79
  br i1 %v15_22bac, label %bb36, label %dec_label_pc_22bb6

bb36:                                             ; preds = %dec_label_pc_22ba8
  %v1_22bb0 = call i32 @function_22d8e()
  br label %dec_label_pc_22bb6

dec_label_pc_22bb6:                               ; preds = %bb36, %dec_label_pc_22ba8
  %v1_22bbc = add i32 %stack_var_32.1, 16
  store i32 %v1_22bbc, i32* @ebx, align 4
  store i32 %v1_22bbc, i32* @eax, align 8
  %v0_22bc1 = call i32 @function_22d30()
  %v4_22bc6 = trunc i32 %v0_22bc1 to i8
  %v5_22bc6 = icmp eq i8 %v4_22bc6, 0
  br i1 %v5_22bc6, label %bb38, label %dec_label_pc_22bca

bb38:                                             ; preds = %dec_label_pc_22bb6
  %v1_22bc8 = call i32 @function_22bf0()
  br label %dec_label_pc_22bca

dec_label_pc_22bca:                               ; preds = %bb38, %dec_label_pc_22bb6
  %v3_22be2 = phi i32 [ %v1_22bc8, %bb38 ], [ %v0_22bc1, %dec_label_pc_22bb6 ]
  ret i32 %v3_22be2

; uselistorder directives
  uselistorder i32 %stack_var_32.1, { 1, 0 }
  uselistorder i32 %v3_22ba1, { 1, 2, 0 }
  uselistorder i32 %v0_22b88, { 0, 3, 2, 1 }
  uselistorder i32 %v1_22b79, { 0, 2, 1, 3 }
  uselistorder i32 %v2_22b4c, { 1, 4, 3, 2, 0, 5, 6, 7 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_22d8e, { 1, 0 }
  uselistorder i32 (i32)* @function_22d60, { 2, 1, 0 }
  uselistorder i32 ()* @function_22d56, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_22d5b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_22ba8, { 1, 0 }
  uselistorder label %dec_label_pc_22b93, { 1, 0 }
}

define i32 @function_22bed() local_unnamed_addr {
dec_label_pc_22bed:
  %eax.global-to-local = alloca i32, align 4
  %v0_22bed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22bed
}

define i32 @function_22bf0() local_unnamed_addr {
dec_label_pc_22bf0:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_22bf2 = load i32, i32* @edi, align 4
  store i32 %v0_22bf2, i32* @eax, align 8
  %v0_22bf4 = call i32 @function_22d30()
  %v1_22c01 = add i32 %tmp3, 28
  %v2_22c01 = inttoptr i32 %v1_22c01 to i32*
  %v3_22c01 = load i32, i32* %v2_22c01, align 4
  %v4_22c01 = load i32, i32* @esi, align 4
  %v15_22c01 = icmp eq i32 %v3_22c01, %v4_22c01
  br i1 %v15_22c01, label %bb, label %dec_label_pc_22c06

bb:                                               ; preds = %dec_label_pc_22bf0
  %v1_22c04 = call i32 @function_22c2a()
  %v2_22c06.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_22c06

dec_label_pc_22c06:                               ; preds = %bb, %dec_label_pc_22bf0
  %v2_22c06 = phi i32 [ %v2_22c06.pre, %bb ], [ %v4_22c01, %dec_label_pc_22bf0 ]
  store i32 %v2_22c06, i32* @ebx, align 4
  %v1_22c10 = add i32 %v2_22c06, 12
  store i32 %v1_22c10, i32* @eax, align 8
  %v1_22c16 = call i32 @function_32e90(i32 %v1_22c10)
  %v0_22c1e = load i32, i32* @ebx, align 4
  store i32 %v0_22c1e, i32* @esi, align 4
  ret i32 %v1_22c16

; uselistorder directives
  uselistorder i32 %v2_22c06, { 1, 0 }
  uselistorder i32 %v4_22c01, { 1, 0 }
}

define i32 @function_22c25() local_unnamed_addr {
dec_label_pc_22c25:
  %eax.global-to-local = alloca i32, align 4
  %v0_22c25 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22c25
}

define i32 @function_22c2a() local_unnamed_addr {
dec_label_pc_22c2a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_92 = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %v2_22c2a = load i32, i32* @esi, align 4
  %v0_22c2c = load i32, i32* @ebp, align 4
  store i32 %v0_22c2c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22c4b.outer

dec_label_pc_22c40:                               ; preds = %dec_label_pc_22c4b
  %v1_22c44 = add i32 %v0_22c40, 8
  %v2_22c44 = inttoptr i32 %v1_22c44 to i32*
  %v3_22c44 = load i32, i32* %v2_22c44, align 4
  store i32 %v3_22c44, i32* %ebx.global-to-local, align 4
  %v1_22c47 = icmp eq i32 %v3_22c44, 0
  br i1 %v1_22c47, label %dec_label_pc_22c60, label %dec_label_pc_22c4b.outer

dec_label_pc_22c4b.outer:                         ; preds = %dec_label_pc_22c40, %dec_label_pc_22c2a
  %stack_var_68.0.ph = phi i32 [ %v0_22c40, %dec_label_pc_22c40 ], [ %tmp30, %dec_label_pc_22c2a ]
  br label %dec_label_pc_22c4b

dec_label_pc_22c4b:                               ; preds = %dec_label_pc_22c4b.outer, %dec_label_pc_22c59
  %v0_22c4e = load i32, i32* @edi, align 4
  store i32 %v0_22c4e, i32* @eax, align 8
  %v0_22c50 = call i32 @function_22d30()
  store i32 %v0_22c50, i32* @eax, align 8
  %v4_22c55 = trunc i32 %v0_22c50 to i8
  %v5_22c55 = icmp eq i8 %v4_22c55, 0
  %v1_22c57 = icmp eq i1 %v5_22c55, false
  %v0_22c40 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v1_22c57, label %dec_label_pc_22c40, label %dec_label_pc_22c59

dec_label_pc_22c59:                               ; preds = %dec_label_pc_22c4b
  %v1_22c59 = add i32 %v0_22c40, 12
  %v2_22c59 = inttoptr i32 %v1_22c59 to i32*
  %v3_22c59 = load i32, i32* %v2_22c59, align 4
  store i32 %v3_22c59, i32* %ebx.global-to-local, align 4
  %v1_22c5c = icmp eq i32 %v3_22c59, 0
  %v1_22c5e = icmp eq i1 %v1_22c5c, false
  br i1 %v1_22c5e, label %dec_label_pc_22c4b, label %dec_label_pc_22c60

dec_label_pc_22c60:                               ; preds = %dec_label_pc_22c40, %dec_label_pc_22c59
  %v0_22c6a = phi i32 [ %stack_var_68.0.ph, %dec_label_pc_22c59 ], [ %v0_22c40, %dec_label_pc_22c40 ]
  %v15_22c64 = icmp eq i32 %tmp30, %v0_22c6a
  br i1 %v15_22c64, label %dec_label_pc_22c71, label %dec_label_pc_22c6a

dec_label_pc_22c6a:                               ; preds = %dec_label_pc_22c60
  %v1_22c6a = add i32 %v0_22c6a, 28
  %v2_22c6a = inttoptr i32 %v1_22c6a to i32*
  %v3_22c6a = load i32, i32* %v2_22c6a, align 4
  br label %dec_label_pc_22c71

dec_label_pc_22c71:                               ; preds = %dec_label_pc_22c6a, %dec_label_pc_22c60
  %stack_var_64.0 = phi i32 [ %tmp28, %dec_label_pc_22c60 ], [ %v3_22c6a, %dec_label_pc_22c6a ]
  %v15_22c75 = icmp eq i32 %v2_22c2a, %stack_var_64.0
  br i1 %v15_22c75, label %bb, label %dec_label_pc_22c7f

bb:                                               ; preds = %dec_label_pc_22c71
  %v1_22c79 = call i32 @function_22d23()
  store i32 %v1_22c79, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22c7f

dec_label_pc_22c7f:                               ; preds = %bb, %dec_label_pc_22c71
  %v0_22c91.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_22c91

dec_label_pc_22c88:                               ; preds = %dec_label_pc_22c91
  store i32 %v0_22c88, i32* %ebx.global-to-local, align 4
  %v1_22c8a = add i32 %v0_22c88, 8
  %v2_22c8a = inttoptr i32 %v1_22c8a to i32*
  %v3_22c8a = load i32, i32* %v2_22c8a, align 4
  store i32 %v3_22c8a, i32* @ebp, align 4
  %v1_22c8d = icmp eq i32 %v3_22c8a, 0
  br i1 %v1_22c8d, label %dec_label_pc_22ca6, label %dec_label_pc_22c91

dec_label_pc_22c91:                               ; preds = %dec_label_pc_22c88, %dec_label_pc_22c9f, %dec_label_pc_22c7f
  %v0_22c91 = phi i32 [ %v0_22c91.pre, %dec_label_pc_22c7f ], [ %v3_22c9f, %dec_label_pc_22c9f ], [ %v3_22c8a, %dec_label_pc_22c88 ]
  %v1_22c91 = add i32 %v0_22c91, 16
  store i32 %v1_22c91, i32* @eax, align 8
  %v0_22c96 = call i32 @function_22d30()
  store i32 %v0_22c96, i32* %eax.global-to-local, align 8
  %v4_22c9b = trunc i32 %v0_22c96 to i8
  %v5_22c9b = icmp eq i8 %v4_22c9b, 0
  %v0_22c88 = load i32, i32* @ebp, align 4
  br i1 %v5_22c9b, label %dec_label_pc_22c88, label %dec_label_pc_22c9f

dec_label_pc_22c9f:                               ; preds = %dec_label_pc_22c91
  %v1_22c9f = add i32 %v0_22c88, 12
  %v2_22c9f = inttoptr i32 %v1_22c9f to i32*
  %v3_22c9f = load i32, i32* %v2_22c9f, align 4
  store i32 %v3_22c9f, i32* @ebp, align 4
  %v1_22ca2 = icmp eq i32 %v3_22c9f, 0
  %v1_22ca4 = icmp eq i1 %v1_22ca2, false
  br i1 %v1_22ca4, label %dec_label_pc_22c91, label %dec_label_pc_22c9f.dec_label_pc_22ca6_crit_edge

dec_label_pc_22c9f.dec_label_pc_22ca6_crit_edge:  ; preds = %dec_label_pc_22c9f
  %v0_22ca6.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22ca6

dec_label_pc_22ca6:                               ; preds = %dec_label_pc_22c88, %dec_label_pc_22c9f.dec_label_pc_22ca6_crit_edge
  %v0_22cac = phi i32 [ %v0_22ca6.pre, %dec_label_pc_22c9f.dec_label_pc_22ca6_crit_edge ], [ %v0_22c88, %dec_label_pc_22c88 ]
  %v15_22ca6 = icmp eq i32 %v0_22cac, %tmp30
  br i1 %v15_22ca6, label %dec_label_pc_22cba, label %dec_label_pc_22cac

dec_label_pc_22cac:                               ; preds = %dec_label_pc_22ca6
  %v0_22caf = load i32, i32* @edi, align 4
  store i32 %v0_22caf, i32* @eax, align 8
  %v0_22cb1 = call i32 @function_22d30()
  store i32 %v0_22cb1, i32* %eax.global-to-local, align 8
  %v4_22cb6 = trunc i32 %v0_22cb1 to i8
  %v5_22cb6 = icmp eq i8 %v4_22cb6, 0
  br i1 %v5_22cb6, label %dec_label_pc_22cac.dec_label_pc_22d0e_crit_edge, label %dec_label_pc_22cba

dec_label_pc_22cac.dec_label_pc_22d0e_crit_edge:  ; preds = %dec_label_pc_22cac
  %v1_22d12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22d0e

dec_label_pc_22cba:                               ; preds = %dec_label_pc_22cac, %dec_label_pc_22ca6
  %v1_22cc3 = add i32 %tmp27, 68
  %v2_22cc3 = inttoptr i32 %v1_22cc3 to i32*
  %v3_22cc3 = load i32, i32* %v2_22cc3, align 4
  store i32 %v3_22cc3, i32* %eax.global-to-local, align 8
  %v1_22cc6 = add i32 %tmp27, 72
  %v2_22cc6 = inttoptr i32 %v1_22cc6 to i8*
  %v3_22cc6 = load i8, i8* %v2_22cc6, align 1
  %v10_22cc6 = icmp eq i8 %v3_22cc6, 0
  store i32 %v3_22cc3, i32* %stack_var_92, align 4
  br i1 %v10_22cc6, label %dec_label_pc_22cdc, label %dec_label_pc_22cd0

dec_label_pc_22cd0:                               ; preds = %dec_label_pc_22cba
  %v1_22cd0 = add i32 %tmp27, 76
  %v2_22cd0 = inttoptr i32 %v1_22cd0 to i32*
  %v3_22cd0 = load i32, i32* %v2_22cd0, align 4
  store i32 %v3_22cd0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22cdc

dec_label_pc_22cdc:                               ; preds = %dec_label_pc_22cd0, %dec_label_pc_22cba
  %v2_22cdc = ptrtoint i32* %stack_var_92 to i32
  %v2_22ce8 = ptrtoint i32* %stack_var_76 to i32
  %v0_22cec = load i32, i32* %ebx.global-to-local, align 4
  %v1_22cfb = add i32 %tmp21, 8
  store i32 %v1_22cfb, i32* %eax.global-to-local, align 8
  %v4_22d02 = call i32 @unknown_450b0(i32 %v2_22ce8, i32 %v1_22cfb, i32 %v0_22cec, i32 %v2_22cdc)
  store i32 %v4_22d02, i32* %eax.global-to-local, align 8
  store i32 %v2_22c2a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22d0e

dec_label_pc_22d0e:                               ; preds = %dec_label_pc_22cac.dec_label_pc_22d0e_crit_edge, %dec_label_pc_22cdc
  %v1_22d12 = phi i32 [ %v1_22d12.pre, %dec_label_pc_22cac.dec_label_pc_22d0e_crit_edge ], [ %v2_22c2a, %dec_label_pc_22cdc ]
  %v2_22d12 = add i32 %v1_22d12, 28
  %v3_22d12 = inttoptr i32 %v2_22d12 to i32*
  store i32 %v0_22c6a, i32* %v3_22d12, align 4
  %v0_22d15 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22d15

; uselistorder directives
  uselistorder i32 %v3_22c9f, { 1, 2, 0 }
  uselistorder i32 %v0_22c88, { 0, 1, 3, 2 }
  uselistorder i32 %v0_22c6a, { 2, 1, 0 }
  uselistorder i32 %v0_22c40, { 0, 3, 2, 1 }
  uselistorder i32 %v2_22c2a, { 1, 2, 0 }
  uselistorder i32 %tmp27, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 4, 1, 6, 7, 5, 8 }
  uselistorder i32* %eax.global-to-local, { 5, 1, 2, 3, 4, 6, 7, 0 }
  uselistorder i32 ()* @function_22d30, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_22d0e, { 1, 0 }
  uselistorder label %dec_label_pc_22ca6, { 1, 0 }
  uselistorder label %dec_label_pc_22c91, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22c60, { 1, 0 }
  uselistorder label %dec_label_pc_22c4b, { 1, 0 }
}

define i32 @function_22d1a() local_unnamed_addr {
dec_label_pc_22d1a:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_22d23() local_unnamed_addr {
dec_label_pc_22d23:
  %v4_22d2b = load i32, i32* @eax, align 8
  ret i32 %v4_22d2b
}

define i32 @function_22d30() local_unnamed_addr {
dec_label_pc_22d30:
  %v0_22d30 = load i32, i32* @eax, align 8
  %v11_22d30 = or i32 %v0_22d30, 36
  ret i32 %v11_22d30
}

define i32 @function_22d3a() local_unnamed_addr {
dec_label_pc_22d3a:
  %cf.global-to-local = alloca i1, align 1
  %v0_22d3a = load i32, i32* @esp, align 4
  %v1_22d3a = load i32, i32* @eax, align 8
  %v2_22d3a = mul i32 %v1_22d3a, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_22d3a = add i32 %v0_22d3a, -58
  %v4_22d3a = add i32 %v3_22d3a, %v2_22d3a
  %v5_22d3a = inttoptr i32 %v4_22d3a to i8*
  %v6_22d3a = load i8, i8* %v5_22d3a, align 1
  %v7_22d3a = load i32, i32* @edx, align 4
  %v8_22d3a = udiv i32 %v7_22d3a, 256
  %v9_22d3a = trunc i32 %v8_22d3a to i8
  %v10_22d3a = add i8 %v9_22d3a, %v6_22d3a
  %v15_22d3a = icmp ult i8 %v10_22d3a, %v6_22d3a
  store i1 %v15_22d3a, i1* %cf.global-to-local, align 1
  store i8 %v10_22d3a, i8* %v5_22d3a, align 1
  %v0_22d3e = load i32, i32* @eax, align 8
  %v1_22d3e = add i32 %v0_22d3e, ptrtoint (i1* @global_var_1.2399 to i32)
  %v11_22d3e = trunc i32 %v1_22d3e to i8
  %v2_22d3f = load i1, i1* %cf.global-to-local, align 1
  %v3_22d3f = zext i1 %v2_22d3f to i8
  %v4_22d3f = add i8 %v3_22d3f, %v11_22d3e
  %v19_22d3f = icmp ule i8 %v4_22d3f, %v11_22d3e
  %v21_22d3f = icmp eq i1 %v2_22d3f, %v19_22d3f
  store i1 %v21_22d3f, i1* %cf.global-to-local, align 1
  %v22_22d3f = zext i8 %v4_22d3f to i32
  %v24_22d3f = and i32 %v1_22d3e, -256
  %v25_22d3f = or i32 %v22_22d3f, %v24_22d3f
  ret i32 %v25_22d3f

; uselistorder directives
  uselistorder i8 %v4_22d3f, { 1, 0 }
  uselistorder i8 %v11_22d3e, { 1, 0 }
  uselistorder i8 %v6_22d3a, { 1, 0 }
}

define i32 @function_22d49(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d49:
  %eax.global-to-local = alloca i32, align 4
  %v1_22d4d = add i32 %arg1, 28
  %v2_22d4d = inttoptr i32 %v1_22d4d to i32*
  %v3_22d4d = load i32, i32* %v2_22d4d, align 4
  %v4_22d4d = add i32 %v3_22d4d, -1
  store i32 %v4_22d4d, i32* %v2_22d4d, align 4
  %v0_22d51 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22d51
}

define i32 @function_22d56() local_unnamed_addr {
dec_label_pc_22d56:
  %v0_22d56 = call i32 @function_30bfe()
  ret i32 %v0_22d56
}

define i32 @function_22d5b(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d5b:
  %v0_22d5b = call i32 @function_30c9a()
  ret i32 %v0_22d5b
}

define i32 @function_22d60(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d60:
  %v0_22d60 = call i32 @function_30d36()
  ret i32 %v0_22d60
}

define i32 @function_22d65() local_unnamed_addr {
dec_label_pc_22d65:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22d6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d6a:
  %v3_22d82 = load i32, i32* @eax, align 8
  ret i32 %v3_22d82
}

define i32 @function_22d8e() local_unnamed_addr {
dec_label_pc_22d8e:
  %v3_22da6 = load i32, i32* @eax, align 8
  ret i32 %v3_22da6
}

define i32 @function_22db3() local_unnamed_addr {
dec_label_pc_22db3:
  %eax.global-to-local = alloca i32, align 4
  %v0_22db3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22db3
}

define i32 @function_22dc5(i32 %arg1) local_unnamed_addr {
dec_label_pc_22dc5:
  %v3_22ddd = load i32, i32* @eax, align 8
  ret i32 %v3_22ddd
}

define i32 @_ZNK5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS4_bSB_EESH_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22df0:
  %v1_22e13 = add i32 %arg1, 12
  ret i32 %v1_22e13
}

define i32 @function_22e3e() local_unnamed_addr {
dec_label_pc_22e3e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_22e49(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22e49:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22e49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22e49 = add i32 %v0_22e49, 1698440276
  %v2_22e49 = inttoptr i32 %v1_22e49 to i32*
  %v3_22e49 = load i32, i32* %v2_22e49, align 4
  %v4_22e49 = add i32 %v3_22e49, -1
  store i32 %v4_22e49, i32* %v2_22e49, align 4
  %v0_22e4f = load i32, i32* %edx.global-to-local, align 4
  %v1_22e4f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22e4f = xor i32 %v1_22e4f, %v0_22e4f
  %v3_22e4f = icmp eq i32 %v2_22e4f, 0
  store i32 %v2_22e4f, i32* %edx.global-to-local, align 4
  %v1_22e55 = icmp eq i1 %v3_22e4f, false
  br i1 %v1_22e55, label %bb, label %dec_label_pc_22e49.dec_label_pc_22e5b_crit_edge

dec_label_pc_22e49.dec_label_pc_22e5b_crit_edge:  ; preds = %dec_label_pc_22e49
  %v0_22e6e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_22e5b

bb:                                               ; preds = %dec_label_pc_22e49
  %v2_22e55 = call i32 @function_22f95()
  br label %dec_label_pc_22e5b

dec_label_pc_22e5b:                               ; preds = %dec_label_pc_22e49.dec_label_pc_22e5b_crit_edge, %bb
  %v0_22e6e = phi i32 [ %v0_22e6e.pre, %dec_label_pc_22e49.dec_label_pc_22e5b_crit_edge ], [ %v2_22e55, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22e6e

; uselistorder directives
  uselistorder label %dec_label_pc_22e5b, { 1, 0 }
}

define i32 @function_22e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_22e80:
  %eax.global-to-local = alloca i32, align 4
  %v2_22e80 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_22e80 = load i32, i32* @eax, align 8
  %v4_22e80 = trunc i32 %v3_22e80 to i8
  %v5_22e80 = add i8 %v4_22e80, %v2_22e80
  %v21_22e80 = inttoptr i32 %v3_22e80 to i8*
  store i8 %v5_22e80, i8* %v21_22e80, align 1
  %v0_22e82 = load i32, i32* @ebx, align 4
  %v3_22e82 = load i32, i32* @eax, align 8
  %v4_22e82 = trunc i32 %v3_22e82 to i8
  %v5_22e821 = mul i32 %v3_22e82, 256
  %v1_22e822 = add i32 %v5_22e821, %v0_22e82
  %v22_22e82 = and i32 %v1_22e822, 65280
  %v23_22e82 = and i32 %v0_22e82, -65281
  %v24_22e82 = or i32 %v22_22e82, %v23_22e82
  store i32 %v24_22e82, i32* @ebx, align 4
  %v2_22e84 = add i8 %v4_22e82, 36
  %v6_22e84 = icmp ugt i8 %v4_22e82, -37
  %v16_22e84 = zext i8 %v2_22e84 to i32
  %v18_22e84 = and i32 %v3_22e82, -256
  %v19_22e84 = or i32 %v16_22e84, %v18_22e84
  store i32 %v19_22e84, i32* %eax.global-to-local, align 8
  %v1_22e86 = inttoptr i32 %v19_22e84 to i8*
  %v2_22e86 = load i8, i8* %v1_22e86, align 1
  %v6_22e86 = zext i1 %v6_22e84 to i8
  %v7_22e86 = add i8 %v2_22e86, %v2_22e84
  %v8_22e86 = add i8 %v7_22e86, %v6_22e86
  store i8 %v8_22e86, i8* %v1_22e86, align 1
  %v0_22e88 = load i32, i32* %eax.global-to-local, align 8
  %v1_22e88 = inttoptr i32 %v0_22e88 to i8*
  %v2_22e88 = load i8, i8* %v1_22e88, align 1
  %v4_22e88 = trunc i32 %v0_22e88 to i8
  %v5_22e88 = add i8 %v2_22e88, %v4_22e88
  store i8 %v5_22e88, i8* %v1_22e88, align 1
  %v22_22e88 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_22e88

; uselistorder directives
  uselistorder i8 %v4_22e82, { 1, 0 }
  uselistorder i32 %v3_22e82, { 1, 0, 2 }
  uselistorder i32 %v0_22e82, { 1, 0 }
}

define i32 @function_22e8a() local_unnamed_addr {
dec_label_pc_22e8a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22f6a() local_unnamed_addr {
dec_label_pc_22f6a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_56 = alloca i32, align 4
  %v0_22f6a = load i32, i32* @eax, align 8
  %v1_22f6a = trunc i32 %v0_22f6a to i8
  %v2_22f6a = and i8 %v1_22f6a, 4
  %v8_22f6a = zext i8 %v2_22f6a to i32
  %v10_22f6a = and i32 %v0_22f6a, -256
  %v11_22f6a = or i32 %v8_22f6a, %v10_22f6a
  store i32 %v11_22f6a, i32* %eax.global-to-local, align 8
  %v1_22f6c = inttoptr i32 %v11_22f6a to i8*
  %v2_22f6c = load i8, i8* %v1_22f6c, align 4
  %v5_22f6c = add i8 %v2_22f6c, %v2_22f6a
  store i8 %v5_22f6c, i8* %v1_22f6c, align 4
  %v0_22f6e = load i32, i32* %eax.global-to-local, align 8
  %v1_22f6e = inttoptr i32 %v0_22f6e to i8*
  %v2_22f6e = load i8, i8* %v1_22f6e, align 1
  %v4_22f6e = trunc i32 %v0_22f6e to i8
  %v5_22f6e = add i8 %v2_22f6e, %v4_22f6e
  store i8 %v5_22f6e, i8* %v1_22f6e, align 1
  %v0_22f70 = load i32, i32* @ebx, align 4
  %v0_22f73 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_22f73, i32* %stack_var_56, align 4
  %v2_22f77 = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_22f77, i32* %eax.global-to-local, align 8
  %v2_22f7f = call i32 @unknown_45740(i32 %v0_22f70, i32 %v2_22f77)
  store i32 %v2_22f7f, i32* %eax.global-to-local, align 8
  %v0_22f84 = call i32 @function_22e3e()
  store i32 %v0_22f84, i32* %eax.global-to-local, align 8
  ret i32 %v0_22f84

; uselistorder directives
  uselistorder i8 4, { 2, 0, 1 }
}

define i32 @function_22f95() local_unnamed_addr {
dec_label_pc_22f95:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22fd4() local_unnamed_addr {
dec_label_pc_22fd4:
  %eax.global-to-local = alloca i32, align 4
  %v0_22fd4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22fd4
}

define i32 @function_22fe1() local_unnamed_addr {
dec_label_pc_22fe1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22fe9() local_unnamed_addr {
dec_label_pc_22fe9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22ffc() local_unnamed_addr {
dec_label_pc_22ffc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22ffc = load i32, i32* %ecx.global-to-local, align 4
  %v1_22ffc = add i32 %v0_22ffc, -1981223997
  %v2_22ffc = inttoptr i32 %v1_22ffc to i32*
  %v3_22ffc = load i32, i32* %v2_22ffc, align 4
  %v4_22ffc = sub i32 %v3_22ffc, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_22ffc, i32* %v2_22ffc, align 4
  %v0_23002 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23002
}

define i32 @function_23003() local_unnamed_addr {
dec_label_pc_23003:
  %v0_23003 = call i32 @function_22fe1()
  ret i32 %v0_23003
}

define i32 @function_2301f() local_unnamed_addr {
dec_label_pc_2301f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2301f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2301f
}

define i32 @function_23025() local_unnamed_addr {
dec_label_pc_23025:
  %v0_23025 = call i32 @function_22fe9()
  ret i32 %v0_23025
}

define i32 @function_23028() local_unnamed_addr {
dec_label_pc_23028:
  %eax.global-to-local = alloca i32, align 4
  %v0_23028 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23028
}

define i32 @function_2302d() local_unnamed_addr {
dec_label_pc_2302d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2302d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2302d
}

define i32 @function_23030() local_unnamed_addr {
dec_label_pc_23030:
  %v0_23030 = call i32 @function_22fe1()
  ret i32 %v0_23030

; uselistorder directives
  uselistorder i32 ()* @function_22fe1, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23040:
  %of.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 0, i32* @eax, align 8
  %tmp110 = sub i32 9, %arg2
  %v8_23063 = and i32 %tmp110, %arg2
  %v9_23063 = icmp slt i32 %v8_23063, 0
  store i1 %v9_23063, i1* %of.global-to-local, align 1
  %tmp113 = icmp ult i32 %arg2, 11
  br i1 %tmp113, label %bb, label %dec_label_pc_23070

bb:                                               ; preds = %dec_label_pc_23040
  %v4_2306e = inttoptr i32 %arg1 to i32*
  %v5_2306e = call i32 @function_2308f(i32* %v4_2306e)
  store i32 %v5_2306e, i32* @eax, align 8
  %v0_23070.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_23070

dec_label_pc_23070:                               ; preds = %bb, %dec_label_pc_23040
  %v0_23070 = phi i32 [ %v0_23070.pre, %bb ], [ %arg2, %dec_label_pc_23040 ]
  %tmp111 = sub i32 357913940, %v0_23070
  %v8_23070 = and i32 %tmp111, %v0_23070
  %v9_23070 = icmp slt i32 %v8_23070, 0
  store i1 %v9_23070, i1* %of.global-to-local, align 1
  %tmp114 = icmp ult i32 %v0_23070, 357913942
  br i1 %tmp114, label %dec_label_pc_2307c, label %bb112

bb112:                                            ; preds = %dec_label_pc_23070
  %v4_23076 = call i32 @function_23185()
  %v0_2307c.pre = load i32, i32* @ebp, align 4
  %v1_23080.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_2307c

dec_label_pc_2307c:                               ; preds = %dec_label_pc_23070, %bb112
  %v1_23080 = phi i1 [ %v9_23070, %dec_label_pc_23070 ], [ %v1_23080.pre, %bb112 ]
  %v0_2307c = phi i32 [ %v0_23070, %dec_label_pc_23070 ], [ %v0_2307c.pre, %bb112 ]
  %v3_2307c = mul i32 %v0_2307c, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_23080 = shl i32 %v3_2307c, ptrtoint (i64* @global_var_2.2539 to i32)
  store i1 %v1_23080, i1* %of.global-to-local, align 1
  ret i32 %v2_23080

; uselistorder directives
  uselistorder i32 %v0_23070, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_2307c, { 1, 0 }
}

define i32 @function_2308f(i32* %arg1) local_unnamed_addr {
dec_label_pc_2308f:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = ptrtoint i32* %arg1 to i32
  %v0_2308f = load i32, i32* @ebx, align 4
  %v1_2308f = add i32 %v0_2308f, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_2308f = inttoptr i32 %v1_2308f to i32*
  %v3_2308f = load i32, i32* %v2_2308f, align 4
  store i32 %v3_2308f, i32* %eax.global-to-local, align 8
  %v1_23095 = add i32 %v0_2308f, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_23095 = inttoptr i32 %v1_23095 to i32*
  %v3_23095 = load i32, i32* %v2_23095, align 4
  store i32 %v3_23095, i32* %esi.global-to-local, align 4
  %v2_2309b = mul i32 %v3_2308f, mul (i32 add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1), i32 4)
  %v3_2309b = add i32 %v3_23095, %v2_2309b
  store i32 %v3_2309b, i32* %eax.global-to-local, align 8
  %v12_2309e = icmp eq i32 %v2_2309b, 0
  br i1 %v12_2309e, label %dec_label_pc_2310c, label %dec_label_pc_230a6

dec_label_pc_230a6:                               ; preds = %dec_label_pc_2308f
  store i32 %tmp23, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_230aa

dec_label_pc_230aa:                               ; preds = %dec_label_pc_23100, %dec_label_pc_230a6
  %v0_230e2 = phi i32 [ %v1_23100, %dec_label_pc_23100 ], [ %v3_23095, %dec_label_pc_230a6 ]
  %v1_230ef = phi i32 [ %v1_23103, %dec_label_pc_23100 ], [ %tmp23, %dec_label_pc_230a6 ]
  %v1_230aa = icmp eq i32 %v1_230ef, 0
  br i1 %v1_230aa, label %dec_label_pc_23100, label %dec_label_pc_230ae

dec_label_pc_230ae:                               ; preds = %dec_label_pc_230aa
  %v1_230ae = inttoptr i32 %v0_230e2 to i32*
  %v2_230ae = load i32, i32* %v1_230ae, align 4
  %v2_230b2 = ashr i32 %v2_230ae, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_230b5 = xor i32 %v2_230b2, %v2_230ae
  store i32 %v2_230b5, i32* @eax, align 8
  store i32 %v2_230b5, i32* @0, align 4
  switch i32 %v2_230b5, label %dec_label_pc_230e0 [
    i32 0, label %dec_label_pc_23148
    i32 19, label %dec_label_pc_23140
    i32 2, label %dec_label_pc_23140
    i32 3, label %dec_label_pc_23140
    i32 4, label %dec_label_pc_23140
    i32 5, label %dec_label_pc_23140
    i32 6, label %dec_label_pc_23140
    i32 7, label %dec_label_pc_23140
    i32 8, label %dec_label_pc_23140
    i32 9, label %dec_label_pc_23140
    i32 10, label %dec_label_pc_23140
    i32 11, label %dec_label_pc_23140
    i32 12, label %dec_label_pc_23140
    i32 13, label %dec_label_pc_23140
    i32 14, label %dec_label_pc_23140
    i32 15, label %dec_label_pc_23140
    i32 16, label %dec_label_pc_23140
    i32 17, label %dec_label_pc_23140
    i32 18, label %dec_label_pc_23140
  ]

dec_label_pc_230e0:                               ; preds = %dec_label_pc_230ae
  %v2_230e0 = icmp slt i32 %v2_230ae, 0
  %v1_230e2 = add i32 %v0_230e2, 4
  %v2_230e2 = inttoptr i32 %v1_230e2 to i32*
  %v3_230e2 = load i32, i32* %v2_230e2, align 4
  store i32 %v3_230e2, i32* %eax.global-to-local, align 8
  br i1 %v2_230e0, label %dec_label_pc_23165, label %dec_label_pc_230e7

dec_label_pc_230e7:                               ; preds = %dec_label_pc_23165, %dec_label_pc_230e0
  %v0_230e7 = phi i32 [ %v2_23165, %dec_label_pc_23165 ], [ %v3_230e2, %dec_label_pc_230e0 ]
  %v2_230ef = add i32 %v1_230ef, 4
  %v3_230ef = inttoptr i32 %v2_230ef to i32*
  store i32 %v0_230e7, i32* %v3_230ef, align 4
  br label %dec_label_pc_230f2

dec_label_pc_230f2:                               ; preds = %dec_label_pc_2316c, %dec_label_pc_2315f, %dec_label_pc_23152, %dec_label_pc_230e7
  %v0_230f2 = load i32, i32* %esi.global-to-local, align 4
  %v1_230f2 = inttoptr i32 %v0_230f2 to i32*
  %v2_230f2 = load i32, i32* %v1_230f2, align 4
  %v2_230f6 = ashr i32 %v2_230f2, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_230f9 = xor i32 %v2_230f6, %v2_230f2
  store i32 %v2_230f9, i32* %eax.global-to-local, align 8
  %v1_230fb = load i32, i32* %edi.global-to-local, align 4
  %v2_230fb = inttoptr i32 %v1_230fb to i32*
  store i32 %v2_230f9, i32* %v2_230fb, align 4
  %v0_23100.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_23103.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_23100

dec_label_pc_23100:                               ; preds = %dec_label_pc_230f2, %dec_label_pc_230aa
  %v0_23103 = phi i32 [ %v0_23103.pre, %dec_label_pc_230f2 ], [ 0, %dec_label_pc_230aa ]
  %v0_23100 = phi i32 [ %v0_23100.pre, %dec_label_pc_230f2 ], [ %v0_230e2, %dec_label_pc_230aa ]
  %v1_23100 = add i32 %v0_23100, 12
  store i32 %v1_23100, i32* %esi.global-to-local, align 4
  %v1_23103 = add i32 %v0_23103, 12
  store i32 %v1_23103, i32* %edi.global-to-local, align 4
  %v15_23106 = icmp eq i32 %v3_2309b, %v1_23100
  %v1_2310a = icmp eq i1 %v15_23106, false
  br i1 %v1_2310a, label %dec_label_pc_230aa, label %dec_label_pc_2310c

dec_label_pc_2310c:                               ; preds = %dec_label_pc_23100, %dec_label_pc_2308f
  %v1_23110 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23110 = icmp eq i32 %v1_23110, %tmp14
  store i32 %tmp23, i32* %eax.global-to-local, align 8
  %v1_2311b = icmp eq i1 %v3_23110, false
  br i1 %v1_2311b, label %dec_label_pc_23180, label %dec_label_pc_2311d

dec_label_pc_2311d:                               ; preds = %dec_label_pc_2310c
  ret i32 %tmp23

dec_label_pc_23140:                               ; preds = %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae, %dec_label_pc_230ae
  %v0_23140 = call i32 @function_23190()
  store i32 %v0_23140, i32* %eax.global-to-local, align 8
  %v0_2314a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_23148

dec_label_pc_23148:                               ; preds = %dec_label_pc_23140, %dec_label_pc_230ae
  %v0_2314a = phi i32 [ %v0_2314a.pre, %dec_label_pc_23140 ], [ %v0_230e2, %dec_label_pc_230ae ]
  %v2_23148 = icmp slt i32 %v2_230ae, 0
  %v1_2314a = add i32 %v0_2314a, 4
  %v2_2314a = inttoptr i32 %v1_2314a to i32*
  %v3_2314a = load i32, i32* %v2_2314a, align 4
  store i32 %v3_2314a, i32* %eax.global-to-local, align 8
  store i32 %v0_2314a, i32* %esi.global-to-local, align 4
  br i1 %v2_23148, label %dec_label_pc_2316c, label %dec_label_pc_23152

dec_label_pc_23152:                               ; preds = %dec_label_pc_23148
  %v1_23152 = load i32, i32* %edi.global-to-local, align 4
  %v2_23152 = add i32 %v1_23152, 4
  %v3_23152 = inttoptr i32 %v2_23152 to i32*
  store i32 %v3_2314a, i32* %v3_23152, align 4
  %v0_23155 = load i32, i32* %esi.global-to-local, align 4
  %v1_23155 = add i32 %v0_23155, 8
  %v2_23155 = inttoptr i32 %v1_23155 to i32*
  %v3_23155 = load i32, i32* %v2_23155, align 4
  store i32 %v3_23155, i32* %eax.global-to-local, align 8
  %v1_23158 = icmp eq i32 %v3_23155, 0
  %v1_2315a = load i32, i32* %edi.global-to-local, align 4
  %v2_2315a = add i32 %v1_2315a, 8
  %v3_2315a = inttoptr i32 %v2_2315a to i32*
  store i32 %v3_23155, i32* %v3_2315a, align 4
  br i1 %v1_23158, label %dec_label_pc_230f2, label %dec_label_pc_2315f

dec_label_pc_2315f:                               ; preds = %dec_label_pc_2316c, %dec_label_pc_23152
  %v0_2315f = load i32, i32* %eax.global-to-local, align 8
  %v1_2315f = add i32 %v0_2315f, 4
  %v2_2315f = inttoptr i32 %v1_2315f to i32*
  %v3_2315f = load i32, i32* %v2_2315f, align 4
  %v4_2315f = add i32 %v3_2315f, 1
  store i32 %v4_2315f, i32* %v2_2315f, align 4
  br label %dec_label_pc_230f2

dec_label_pc_23165:                               ; preds = %dec_label_pc_230e0
  %v1_23165 = inttoptr i32 %v3_230e2 to i32*
  %v2_23165 = load i32, i32* %v1_23165, align 4
  store i32 %v2_23165, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_230e7

dec_label_pc_2316c:                               ; preds = %dec_label_pc_23148
  %v1_2316c = inttoptr i32 %v3_2314a to i32*
  %v2_2316c = load i32, i32* %v1_2316c, align 4
  %v1_2316e = load i32, i32* %edi.global-to-local, align 4
  %v2_2316e = add i32 %v1_2316e, 4
  %v3_2316e = inttoptr i32 %v2_2316e to i32*
  store i32 %v2_2316c, i32* %v3_2316e, align 4
  %v0_23171 = load i32, i32* %eax.global-to-local, align 8
  %v1_23171 = add i32 %v0_23171, 4
  %v2_23171 = inttoptr i32 %v1_23171 to i32*
  %v3_23171 = load i32, i32* %v2_23171, align 4
  store i32 %v3_23171, i32* %eax.global-to-local, align 8
  %v1_23174 = icmp eq i32 %v3_23171, 0
  %v1_23176 = load i32, i32* %edi.global-to-local, align 4
  %v2_23176 = add i32 %v1_23176, 8
  %v3_23176 = inttoptr i32 %v2_23176 to i32*
  store i32 %v3_23171, i32* %v3_23176, align 4
  %v1_23179 = icmp eq i1 %v1_23174, false
  br i1 %v1_23179, label %dec_label_pc_2315f, label %dec_label_pc_230f2

dec_label_pc_23180:                               ; preds = %dec_label_pc_2310c
  ret i32 %tmp23

; uselistorder directives
  uselistorder i32 %v2_23165, { 1, 0 }
  uselistorder i32 %v0_2314a, { 1, 0 }
  uselistorder i32 %v1_23103, { 1, 0 }
  uselistorder i32 %v1_23100, { 0, 2, 1 }
  uselistorder i32 %v3_230e2, { 1, 0, 2 }
  uselistorder i32 %v2_230b5, { 1, 0, 2 }
  uselistorder i32 %v2_230ae, { 1, 2, 0, 3 }
  uselistorder i32 %v0_230e2, { 2, 0, 1, 3 }
  uselistorder i32 %v2_2309b, { 1, 0 }
  uselistorder i32 %v3_23095, { 1, 0, 2 }
  uselistorder i32 %tmp23, { 4, 0, 3, 1, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 4, 0, 6, 5, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 6, 1, 2, 4, 5, 7, 8, 9, 10, 11 }
  uselistorder i32 18, { 2, 0, 1 }
  uselistorder i32 15, { 2, 0, 1 }
  uselistorder i32 14, { 3, 0, 1, 2 }
  uselistorder i32 7, { 11, 0, 1, 2, 3, 4, 5, 10, 6, 7, 8, 9 }
  uselistorder i32 6, { 1, 0 }
  uselistorder i32 5, { 1, 0 }
  uselistorder label %dec_label_pc_23140, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
}

define i32 @function_23185() local_unnamed_addr {
dec_label_pc_23185:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23190() local_unnamed_addr {
dec_label_pc_23190:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23191() local_unnamed_addr {
dec_label_pc_23191:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23191 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23191 = add i32 %v0_23191, 958145652
  %v2_23191 = inttoptr i32 %v1_23191 to i32*
  %v3_23191 = load i32, i32* %v2_23191, align 4
  %v4_23191 = add i32 %v3_23191, -1
  store i32 %v4_23191, i32* %v2_23191, align 4
  %v0_23197 = load i32, i32* %ebp.global-to-local, align 4
  %v1_23197 = load i32, i32* %ecx.global-to-local, align 4
  %v2_23197 = mul i32 %v1_23197, ptrtoint (i1* @global_var_1.2399 to i32)
  %v3_23197 = add i32 %v0_23197, -119
  %v4_23197 = add i32 %v3_23197, %v2_23197
  %v5_23197 = inttoptr i32 %v4_23197 to i32*
  %v6_23197 = load i32, i32* %v5_23197, align 4
  %v7_23197 = load i32, i32* %eax.global-to-local, align 8
  %v8_23197 = zext i32 %v7_23197 to i64
  %v9_23197 = load i32, i32* %edx.global-to-local, align 4
  %v10_23197 = zext i32 %v9_23197 to i64
  %v11_23197 = mul nuw i64 %v10_23197, 4294967296
  %v12_23197 = or i64 %v11_23197, %v8_23197
  %v13_23197 = zext i32 %v6_23197 to i64
  %v14_23197 = udiv i64 %v12_23197, %v13_23197
  %v15_23197 = trunc i64 %v14_23197 to i32
  %v16_23197 = urem i64 %v12_23197, %v13_23197
  %v17_23197 = trunc i64 %v16_23197 to i32
  store i32 %v17_23197, i32* %edx.global-to-local, align 4
  %v1_2319b = trunc i64 %v14_23197 to i32
  %v2_2319b = and i32 %v1_2319b, 255
  %v10_2319b = and i32 %v15_23197, -256
  %v8_2319b = or i32 %v2_2319b, %v10_2319b
  %v11_2319b = xor i32 %v8_2319b, 36
  store i32 %v11_2319b, i32* %eax.global-to-local, align 8
  %v0_2319d = call i32 @unknown_357b0()
  store i32 %v0_2319d, i32* %eax.global-to-local, align 8
  %v0_231a2 = load i32, i32* %esi.global-to-local, align 4
  %v1_231a2 = add i32 %v0_231a2, 12
  store i32 %v1_231a2, i32* %esi.global-to-local, align 4
  ret i32 %v0_2319d

; uselistorder directives
  uselistorder i32 36, { 0, 1, 2, 21, 22, 23, 24, 3, 4, 5, 17, 18, 6, 7, 25, 38, 39, 40, 41, 26, 42, 43, 44, 27, 28, 29, 45, 46, 47, 30, 48, 49, 50, 67, 51, 52, 53, 54, 16, 68, 69, 70, 71, 72, 31, 32, 33, 19, 34, 35, 55, 20, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 8, 9, 10, 11, 12, 13, 14, 15, 36, 37 }
  uselistorder i32 -119, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEaSERKSB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23220:
  %tmp112 = ptrtoint i32* %arg1 to i32
  store i32 %tmp112, i32* @esi, align 4
  %v0_2322f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_23243 = load i32, i32* %arg1, align 4
  store i32 %v2_23243, i32* @ebx, align 4
  %v1_23249 = add i32 %v2_23243, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_23249 = inttoptr i32 %v1_23249 to i32*
  %v3_23249 = load i32, i32* %v2_23249, align 4
  store i32 %v3_23249, i32* @eax, align 8
  %v2_2324f = add i32 %v2_23243, ptrtoint (i32* @global_var_78.2756 to i32)
  %v3_2324f = inttoptr i32 %v2_2324f to i32*
  %v4_2324f = load i32, i32* %v3_2324f, align 4
  %v15_2324f = icmp eq i32 %v3_23249, %v4_2324f
  br i1 %v15_2324f, label %bb, label %dec_label_pc_23254

bb:                                               ; preds = %dec_label_pc_23220
  %v2_23252 = call i32 @function_232a8(i32 %v0_2322f)
  store i32 %v2_23252, i32* @eax, align 8
  %v1_2325a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_23254

dec_label_pc_23254:                               ; preds = %bb, %dec_label_pc_23220
  %v1_2325a = phi i32 [ %v1_2325a.pre, %bb ], [ %v2_23243, %dec_label_pc_23220 ]
  %v0_23254 = phi i32 [ %v2_23252, %bb ], [ %v3_23249, %dec_label_pc_23220 ]
  %v3_23254 = mul i32 %v0_23254, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_23257 = shl i32 %v3_23254, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_2325a = add i32 %v1_2325a, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v3_2325a = inttoptr i32 %v2_2325a to i32*
  %v4_2325a = load i32, i32* %v3_2325a, align 4
  %v5_2325a = sub i32 0, %v2_23257
  %v15_2325a = icmp eq i32 %v4_2325a, %v5_2325a
  br i1 %v15_2325a, label %bb116, label %dec_label_pc_23263

bb116:                                            ; preds = %dec_label_pc_23254
  %v1_2325d = call i32 @function_23390()
  br label %dec_label_pc_23263

dec_label_pc_23263:                               ; preds = %bb116, %dec_label_pc_23254
  %v0_23263 = load i32, i32* @edi, align 4
  %v1_23263 = inttoptr i32 %v0_23263 to i32*
  %v2_23263 = load i32, i32* %v1_23263, align 4
  %v2_23267 = ashr i32 %v2_23263, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_2326a = xor i32 %v2_23267, %v2_23263
  store i32 %v2_2326a, i32* @eax, align 8
  %tmp119 = icmp ult i32 %v2_2326a, 20
  br i1 %tmp119, label %bb118, label %dec_label_pc_23271

bb118:                                            ; preds = %dec_label_pc_23263
  %v3_2326f = call i32 @function_23298()
  br label %dec_label_pc_23271

dec_label_pc_23271:                               ; preds = %bb118, %dec_label_pc_23263
  %v3_23289 = phi i32 [ %v3_2326f, %bb118 ], [ %v2_2326a, %dec_label_pc_23263 ]
  ret i32 %v3_23289

; uselistorder directives
  uselistorder i32 %v2_2326a, { 1, 0, 2 }
  uselistorder i32 %v3_23249, { 1, 0, 2 }
}

define i32 @function_23298() local_unnamed_addr {
dec_label_pc_23298:
  %v0_23298 = load i32, i32* @eax, align 8
  ret i32 %v0_23298
}

define i32 @function_232a1(i16 %arg1) local_unnamed_addr {
dec_label_pc_232a1:
  %eax.global-to-local = alloca i32, align 4
  %v6_232a1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_232a1
}

define i32 @function_232a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_232a8:
  %stack_var_43 = alloca i32, align 4
  %v0_232a8 = load i32, i32* @eax, align 8
  %tmp31 = icmp ult i32 %v0_232a8, 10
  br i1 %tmp31, label %bb, label %dec_label_pc_232b6

bb:                                               ; preds = %dec_label_pc_232a8
  %v3_232b0 = call i32 @function_23471()
  store i32 %v3_232b0, i32* @eax, align 8
  br label %dec_label_pc_232b6

dec_label_pc_232b6:                               ; preds = %bb, %dec_label_pc_232a8
  %v0_232b6 = phi i32 [ %v3_232b0, %bb ], [ %v0_232a8, %dec_label_pc_232a8 ]
  %v1_232b6 = add i32 %v0_232b6, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_232b6, i32* @ebp, align 4
  %v7_232b9 = icmp ult i32 %v0_232b6, %v1_232b6
  %v1_232bb = icmp eq i1 %v7_232b9, false
  br i1 %v1_232bb, label %bb22, label %dec_label_pc_232c1

bb22:                                             ; preds = %dec_label_pc_232b6
  %v2_232bb = call i32 @function_2335f()
  %v1_232c4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_232c1

dec_label_pc_232c1:                               ; preds = %bb22, %dec_label_pc_232b6
  %v2_232c6 = phi i32 [ %v1_232c4.pre, %bb22 ], [ %v1_232b6, %dec_label_pc_232b6 ]
  %v0_232c1 = phi i32 [ %v2_232bb, %bb22 ], [ %v0_232b6, %dec_label_pc_232b6 ]
  %v2_232c1 = shl i32 %v0_232c1, ptrtoint (i64* @global_var_2.2539 to i32)
  %v7_232c4 = icmp ult i32 %v2_232c1, %v2_232c6
  %v3_232c6 = select i1 %v7_232c4, i32 %v2_232c6, i32 %v2_232c1
  store i32 %v3_232c6, i32* @edx, align 4
  %v2_232d1 = ptrtoint i32* %stack_var_43 to i32
  %v0_232d9 = load i32, i32* @ebx, align 4
  %v4_232e0 = call i32 @unknown_46260(i32 %v0_232d9, i32 %v3_232c6, i32 %v2_232d1, i32 %v3_232c6)
  %v0_232e5 = load i32, i32* @ebx, align 4
  %v1_232e5 = add i32 %v0_232e5, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v2_232e5 = inttoptr i32 %v1_232e5 to i32*
  %v3_232e5 = load i32, i32* %v2_232e5, align 4
  store i32 %v3_232e5, i32* @ecx, align 4
  %v1_232e8 = icmp eq i32 %v3_232e5, 0
  br i1 %v1_232e8, label %bb23, label %dec_label_pc_232f0

bb23:                                             ; preds = %dec_label_pc_232c1
  %v2_232ee = call i32 @function_2332f(i32 %v4_232e0)
  %v0_232f0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_232f0

dec_label_pc_232f0:                               ; preds = %bb23, %dec_label_pc_232c1
  %v0_232f0 = phi i32 [ %v0_232f0.pre, %bb23 ], [ %v0_232e5, %dec_label_pc_232c1 ]
  %v1_232f0 = add i32 %v0_232f0, ptrtoint (i32* @global_var_78.2756 to i32)
  %v2_232f0 = inttoptr i32 %v1_232f0 to i32*
  %v3_232f0 = load i32, i32* %v2_232f0, align 4
  store i32 %v3_232f0, i32* @eax, align 8
  %tmp32 = icmp ult i32 %v3_232f0, 10
  br i1 %tmp32, label %bb25, label %dec_label_pc_23300

bb25:                                             ; preds = %dec_label_pc_232f0
  %v4_232fa = call i32 @function_23429(i32 %v3_232f0)
  store i32 %v4_232fa, i32* @eax, align 8
  %v1_23300.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_23300

dec_label_pc_23300:                               ; preds = %bb25, %dec_label_pc_232f0
  %v3_2332712 = phi i32 [ %v4_232fa, %bb25 ], [ %v3_232f0, %dec_label_pc_232f0 ]
  %v1_23300 = phi i32 [ %v1_23300.pre, %bb25 ], [ %v0_232f0, %dec_label_pc_232f0 ]
  %v12_23300 = icmp eq i32 %v3_232e5, %v1_23300
  br i1 %v12_23300, label %bb26, label %dec_label_pc_23308

bb26:                                             ; preds = %dec_label_pc_23300
  %v1_23302 = call i32 @function_23420()
  store i32 %v1_23302, i32* @eax, align 8
  %v0_23308.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_23308

dec_label_pc_23308:                               ; preds = %bb26, %dec_label_pc_23300
  %v3_2332711 = phi i32 [ %v1_23302, %bb26 ], [ %v3_2332712, %dec_label_pc_23300 ]
  %v0_23308 = phi i32 [ %v0_23308.pre, %bb26 ], [ %v1_23300, %dec_label_pc_23300 ]
  %v1_23308 = add i32 %v0_23308, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_23308 = inttoptr i32 %v1_23308 to i32*
  %v3_23308 = load i32, i32* %v2_23308, align 4
  store i32 %v3_23308, i32* @edx, align 4
  %v10_2330e = icmp ult i32 %v3_232f0, %v3_23308
  br i1 %v10_2330e, label %bb27, label %dec_label_pc_23318

bb27:                                             ; preds = %dec_label_pc_23308
  %v2_23312 = call i32 @function_23429(i32 %v3_232f0)
  br label %dec_label_pc_23318

dec_label_pc_23318:                               ; preds = %bb27, %dec_label_pc_23308
  %v3_2332710 = phi i32 [ %v2_23312, %bb27 ], [ %v3_2332711, %dec_label_pc_23308 ]
  %v1_23318 = icmp eq i32 %v3_23308, 0
  %v1_2331a = icmp eq i1 %v1_23318, false
  br i1 %v1_2331a, label %bb28, label %dec_label_pc_23320

bb28:                                             ; preds = %dec_label_pc_23318
  %v2_2331a = call i32 @function_233c0()
  br label %dec_label_pc_23320

dec_label_pc_23320:                               ; preds = %bb28, %dec_label_pc_23318
  %v3_233279 = phi i32 [ %v2_2331a, %bb28 ], [ %v3_2332710, %dec_label_pc_23318 ]
  %tmp33 = icmp ult i32 %v3_232f0, 11
  br i1 %tmp33, label %bb30, label %dec_label_pc_23327

bb30:                                             ; preds = %dec_label_pc_23320
  %v4_23325 = call i32 @function_2332f(i32 %v3_232f0)
  br label %dec_label_pc_23327

dec_label_pc_23327:                               ; preds = %bb30, %dec_label_pc_23320
  %v3_23327 = phi i32 [ %v4_23325, %bb30 ], [ %v3_233279, %dec_label_pc_23320 ]
  ret i32 %v3_23327

; uselistorder directives
  uselistorder i32 %v1_23300, { 1, 0 }
  uselistorder i32 %v3_232f0, { 6, 0, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %v0_232b6, { 0, 2, 1 }
  uselistorder i32 %v0_232a8, { 1, 0 }
  uselistorder i32 (i32)* @function_23429, { 1, 0 }
  uselistorder i32 (i32)* @function_2332f, { 1, 0 }
}

define i32 @function_2332f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2332f:
  store i32 %arg1, i32* @edx, align 4
  %v1_23337 = load i32, i32* @ebx, align 4
  %v2_23337 = add i32 %v1_23337, ptrtoint (i32* @global_var_7c.2696 to i32)
  %v3_23337 = inttoptr i32 %v2_23337 to i32*
  %v0_2333a = load i32, i32* @ebx, align 4
  %v1_2333a = add i32 %v0_2333a, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_2333a = inttoptr i32 %v1_2333a to i32*
  %v3_2333a = load i32, i32* %v2_2333a, align 4
  store i32 %v3_2333a, i32* @eax, align 8
  %v0_23340 = load i32, i32* @edx, align 4
  %v2_23340 = add i32 %v0_2333a, ptrtoint (i32* @global_var_78.2756 to i32)
  %v3_23340 = inttoptr i32 %v2_23340 to i32*
  store i32 %v0_23340, i32* %v3_23340, align 4
  %v0_23343 = load i32, i32* @eax, align 8
  %v1_23343 = load i32, i32* @edx, align 4
  %tmp5 = icmp ugt i32 %v0_23343, %v1_23343
  br i1 %tmp5, label %bb, label %dec_label_pc_2334b

bb:                                               ; preds = %dec_label_pc_2332f
  %v4_23345 = call i32 @function_23495()
  store i32 %v4_23345, i32* @eax, align 8
  br label %dec_label_pc_2334b

dec_label_pc_2334b:                               ; preds = %dec_label_pc_2332f, %bb
  %v0_233552 = phi i32 [ %v0_23343, %dec_label_pc_2332f ], [ %v4_23345, %bb ]
  %v0_2334b = load i32, i32* @ebp, align 4
  %tmp6 = icmp ugt i32 %v0_2334b, %arg1
  br i1 %tmp6, label %bb4, label %dec_label_pc_23355

bb4:                                              ; preds = %dec_label_pc_2334b
  %v4_2334f = call i32 @function_234b9()
  br label %dec_label_pc_23355

dec_label_pc_23355:                               ; preds = %dec_label_pc_2334b, %bb4
  %v0_23359 = phi i32 [ %v0_233552, %dec_label_pc_2334b ], [ %v4_2334f, %bb4 ]
  ret i32 %v0_23359

; uselistorder directives
  uselistorder i32 %v0_23343, { 1, 0 }
  uselistorder label %dec_label_pc_23355, { 1, 0 }
  uselistorder label %dec_label_pc_2334b, { 1, 0 }
}

define i32 @function_2335f() local_unnamed_addr {
dec_label_pc_2335f:
  %v0_2335f = call i32 @function_3180e()
  %v0_23368 = load i32, i32* @edx, align 4
  %v2_23368 = icmp slt i32 %v0_23368, 0
  %v0_2336a = load i32, i32* @edi, align 4
  %v1_2336a = add i32 %v0_2336a, 4
  %v2_2336a = inttoptr i32 %v1_2336a to i32*
  %v3_2336a = load i32, i32* %v2_2336a, align 4
  store i32 %v3_2336a, i32* @eax, align 8
  br i1 %v2_23368, label %bb, label %dec_label_pc_23373

bb:                                               ; preds = %dec_label_pc_2335f
  %v1_2336d = call i32 @function_23451()
  br label %dec_label_pc_23373

dec_label_pc_23373:                               ; preds = %bb, %dec_label_pc_2335f
  %v0_23373 = phi i32 [ %v1_2336d, %bb ], [ %v3_2336a, %dec_label_pc_2335f ]
  %v1_2337b = load i32, i32* @ebp, align 4
  %v2_2337b = add i32 %v1_2337b, 4
  %v3_2337b = inttoptr i32 %v2_2337b to i32*
  store i32 %v0_23373, i32* %v3_2337b, align 4
  %v2_2337e = load i32, i32* @edi, align 4
  %v2_23382 = ashr i32 %v2_2337e, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_23385 = xor i32 %v2_23382, %v2_2337e
  %v1_23387 = load i32, i32* @ebp, align 4
  %v2_23387 = inttoptr i32 %v1_23387 to i32*
  store i32 %v2_23385, i32* %v2_23387, align 4
  %v0_2338a = load i32, i32* @ebx, align 4
  %v1_2338a = add i32 %v0_2338a, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_2338a = inttoptr i32 %v1_2338a to i32*
  %v3_2338a = load i32, i32* %v2_2338a, align 4
  ret i32 %v3_2338a
}

define i32 @function_23390() local_unnamed_addr {
dec_label_pc_23390:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_23390 = load i32, i32* @eax, align 8
  %v1_23390 = add i32 %v0_23390, ptrtoint (i1* @global_var_1.2399 to i32)
  %v1_23397 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23397 = icmp eq i32 %v1_23397, %tmp6
  %v1_2339e = load i32, i32* @ebx, align 4
  %v2_2339e = add i32 %v1_2339e, ptrtoint (i32* @global_var_80.2697 to i32)
  %v3_2339e = inttoptr i32 %v2_2339e to i32*
  store i32 %v1_23390, i32* %v3_2339e, align 4
  %v0_233a4 = load i32, i32* @esi, align 4
  store i32 %v0_233a4, i32* @eax, align 8
  %v1_233a6 = icmp eq i1 %v3_23397, false
  br i1 %v1_233a6, label %bb, label %dec_label_pc_233ac

bb:                                               ; preds = %dec_label_pc_23390
  %v2_233a6 = call i32 @function_2346c()
  br label %dec_label_pc_233ac

dec_label_pc_233ac:                               ; preds = %bb, %dec_label_pc_23390
  %v0_233bf = phi i32 [ %v2_233a6, %bb ], [ %v0_233a4, %dec_label_pc_23390 ]
  ret i32 %v0_233bf
}

define i32 @function_233c0() local_unnamed_addr {
dec_label_pc_233c0:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_233c0 = load i32, i32* @edx, align 4
  %v2_233c0 = mul i32 %v0_233c0, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_233c0 = add i32 %v0_233c0, -3
  %v4_233c0 = add i32 %v3_233c0, %v2_233c0
  %v3_233c4 = mul i32 %v0_233c0, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_233c7 = shl i32 %v3_233c4, ptrtoint (i64* @global_var_2.2539 to i32)
  %v0_233ca = load i32, i32* @ecx, align 4
  %v2_233ca = mul i32 %v4_233c0, 4
  %v3_233ca = add i32 %v2_233ca, %v0_233ca
  %v6_233d3 = sub i32 %v3_233ca, %v2_233c7
  store i32 %v6_233d3, i32* %esi.global-to-local, align 4
  %v0_233ed = load i32, i32* @ebx, align 4
  store i32 %v0_233ed, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_233f8

dec_label_pc_233f8:                               ; preds = %dec_label_pc_233f8, %dec_label_pc_233c0
  %v0_233f8 = phi i32 [ %v1_233fb, %dec_label_pc_233f8 ], [ %v3_233ca, %dec_label_pc_233c0 ]
  %v1_233fb = add i32 %v0_233f8, -12
  %v1_233fe = call i32 @unknown_35990(i32 %v0_233f8)
  %v0_23403 = load i32, i32* %esi.global-to-local, align 4
  %v7_23403 = icmp ult i32 %v0_23403, %v1_233fb
  br i1 %v7_23403, label %dec_label_pc_233f8, label %dec_label_pc_23407

dec_label_pc_23407:                               ; preds = %dec_label_pc_233f8
  %v0_23407 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_23407, i32* @ebx, align 4
  %v1_2340d = add i32 %v0_23407, ptrtoint (i32* @global_var_78.2756 to i32)
  %v2_2340d = inttoptr i32 %v1_2340d to i32*
  %v3_2340d = load i32, i32* %v2_2340d, align 4
  ret i32 %v3_2340d

; uselistorder directives
  uselistorder i32 %v0_233f8, { 1, 0 }
  uselistorder i32 %v0_233c0, { 0, 2, 1 }
}

define i32 @function_23420() local_unnamed_addr {
dec_label_pc_23420:
  %v0_23420 = load i32, i32* @eax, align 8
  ret i32 %v0_23420
}

define i32 @function_23429(i32 %arg1) local_unnamed_addr {
dec_label_pc_23429:
  %v0_23429 = call i32 @function_317da()
  %v0_23430 = load i32, i32* @edx, align 4
  %v2_23430 = icmp slt i32 %v0_23430, 0
  %v0_23432 = load i32, i32* @edi, align 4
  %v1_23432 = add i32 %v0_23432, 4
  %v2_23432 = inttoptr i32 %v1_23432 to i32*
  %v3_23432 = load i32, i32* %v2_23432, align 4
  store i32 %v3_23432, i32* @eax, align 8
  br i1 %v2_23430, label %bb, label %dec_label_pc_23437

bb:                                               ; preds = %dec_label_pc_23429
  %v1_23435 = call i32 @function_23458()
  br label %dec_label_pc_23437

dec_label_pc_23437:                               ; preds = %bb, %dec_label_pc_23429
  %v0_23437 = phi i32 [ %v1_23435, %bb ], [ %v3_23432, %dec_label_pc_23429 ]
  %v1_23437 = load i32, i32* @ebp, align 4
  %v2_23437 = add i32 %v1_23437, 4
  %v3_23437 = inttoptr i32 %v2_23437 to i32*
  store i32 %v0_23437, i32* %v3_23437, align 4
  %v0_2343a = load i32, i32* @edi, align 4
  %v1_2343a = add i32 %v0_2343a, 8
  %v2_2343a = inttoptr i32 %v1_2343a to i32*
  %v3_2343a = load i32, i32* %v2_2343a, align 4
  %v1_2343f = load i32, i32* @ebp, align 4
  %v2_2343f = add i32 %v1_2343f, 8
  %v3_2343f = inttoptr i32 %v2_2343f to i32*
  store i32 %v3_2343a, i32* %v3_2343f, align 4
  %v1_23448 = add i32 %v3_2343a, 4
  %v2_23448 = inttoptr i32 %v1_23448 to i32*
  %v3_23448 = load i32, i32* %v2_23448, align 4
  %v4_23448 = add i32 %v3_23448, 1
  store i32 %v4_23448, i32* %v2_23448, align 4
  ret i32 %v3_2343a
}

define i32 @function_23448() local_unnamed_addr {
dec_label_pc_23448:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23451() local_unnamed_addr {
dec_label_pc_23451:
  %v0_23453 = load i32, i32* @eax, align 8
  ret i32 %v0_23453
}

define i32 @function_23458() local_unnamed_addr {
dec_label_pc_23458:
  %v2_23458 = load i32, i32* @eax, align 8
  store i32 %v2_23458, i32* @edx, align 4
  %v1_2345a = load i32, i32* @ebp, align 4
  %v2_2345a = add i32 %v1_2345a, 4
  %v3_2345a = inttoptr i32 %v2_2345a to i32*
  store i32 %v2_23458, i32* %v3_2345a, align 4
  %v0_2345d = load i32, i32* @eax, align 8
  %v1_2345d = add i32 %v0_2345d, 4
  %v2_2345d = inttoptr i32 %v1_2345d to i32*
  %v3_2345d = load i32, i32* %v2_2345d, align 4
  store i32 %v3_2345d, i32* @eax, align 8
  %v1_23460 = icmp eq i32 %v3_2345d, 0
  %v1_23462 = load i32, i32* @ebp, align 4
  %v2_23462 = add i32 %v1_23462, 8
  %v3_23462 = inttoptr i32 %v2_23462 to i32*
  store i32 %v3_2345d, i32* %v3_23462, align 4
  %v1_23465 = icmp eq i1 %v1_23460, false
  br i1 %v1_23465, label %bb, label %dec_label_pc_23458.dec_label_pc_23467_crit_edge

dec_label_pc_23458.dec_label_pc_23467_crit_edge:  ; preds = %dec_label_pc_23458
  %v0_23467.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_23467

bb:                                               ; preds = %dec_label_pc_23458
  %v2_23465 = call i32 @function_23448()
  br label %dec_label_pc_23467

dec_label_pc_23467:                               ; preds = %dec_label_pc_23458.dec_label_pc_23467_crit_edge, %bb
  %v0_23467 = phi i32 [ %v0_23467.pre, %dec_label_pc_23458.dec_label_pc_23467_crit_edge ], [ %v2_23465, %bb ]
  ret i32 %v0_23467

; uselistorder directives
  uselistorder label %dec_label_pc_23467, { 1, 0 }
}

define i32 @function_2346c() local_unnamed_addr {
dec_label_pc_2346c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23471() local_unnamed_addr {
dec_label_pc_23471:
  %v3_23489 = load i32, i32* @eax, align 8
  ret i32 %v3_23489
}

define i32 @function_23495() local_unnamed_addr {
dec_label_pc_23495:
  %v3_234ad = load i32, i32* @eax, align 8
  ret i32 %v3_234ad
}

define i32 @function_234b9() local_unnamed_addr {
dec_label_pc_234b9:
  %v3_234d1 = load i32, i32* @eax, align 8
  ret i32 %v3_234d1
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23530:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %tmp119 = ptrtoint i32* %arg1 to i32
  %stack_var_-124 = alloca i32, align 4
  %v16_23534 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %tmp119, i32* %eax.global-to-local, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %tmp119, i32* %ecx.global-to-local, align 4
  %v2_23551 = load i32, i32* %arg1, align 4
  store i32 %v2_23551, i32* @eax, align 8
  %v2_23553 = add i32 %tmp119, 12
  %v3_23553 = inttoptr i32 %v2_23553 to i32*
  %v4_23553 = load i32, i32* %v3_23553, align 4
  %v15_23553 = icmp eq i32 %v2_23551, %v4_23553
  br i1 %v15_23553, label %dec_label_pc_236e7, label %dec_label_pc_2355c

dec_label_pc_2355c:                               ; preds = %dec_label_pc_23530
  %v1_2355c = add i32 %tmp119, 4
  %v2_2355c = inttoptr i32 %v1_2355c to i32*
  %v3_2355c = load i32, i32* %v2_2355c, align 4
  %v15_2355c = icmp eq i32 %v3_2355c, %v2_23551
  br i1 %v15_2355c, label %bb, label %dec_label_pc_23565

bb:                                               ; preds = %dec_label_pc_2355c
  %v2_2355f = call i32 @function_237b3(i32 %tmp119)
  store i32 %v2_2355f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23565

dec_label_pc_23565:                               ; preds = %bb, %dec_label_pc_2355c
  %v0_23565 = phi i32 [ %v2_2355f, %bb ], [ %v2_23551, %dec_label_pc_2355c ]
  %v1_23565 = add i32 %v0_23565, 8
  %v2_23565 = inttoptr i32 %v1_23565 to i32*
  %v3_23565 = load i32, i32* %v2_23565, align 4
  store i32 %v3_23565, i32* %eax.global-to-local, align 8
  %v1_23568 = icmp eq i32 %v3_23565, 0
  br i1 %v1_23568, label %dec_label_pc_23735, label %dec_label_pc_23574

dec_label_pc_23574:                               ; preds = %dec_label_pc_23565
  %v2_23574 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_23578

dec_label_pc_23578:                               ; preds = %dec_label_pc_23726, %dec_label_pc_23574
  %v0_23578 = load i32, i32* @esp, align 4
  %v1_23578 = add i32 %v0_23578, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_23578 = inttoptr i32 %v1_23578 to i32*
  %v3_23578 = load i32, i32* %v2_23578, align 4
  store i32 %v3_23578, i32* %edx.global-to-local, align 4
  %v1_2357c = inttoptr i32 %v3_23578 to i32*
  %v2_2357c = load i32, i32* %v1_2357c, align 4
  store i32 %v2_2357c, i32* %eax.global-to-local, align 8
  %v2_2357e = inttoptr i32 %v0_23578 to i32*
  store i32 %v3_23578, i32* %v2_2357e, align 4
  %v0_23584 = load i32, i32* @esp, align 4
  %v1_23584 = add i32 %v0_23584, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23584 = inttoptr i32 %v1_23584 to i32*
  %v3_23584 = load i32, i32* %v2_23584, align 4
  store i32 %v3_23584, i32* %ecx.global-to-local, align 4
  %v1_23588 = add i32 %v3_23584, 8
  %v2_23588 = inttoptr i32 %v1_23588 to i32*
  %v3_23588 = load i32, i32* %v2_23588, align 4
  store i32 %v3_23588, i32* @esi, align 4
  %v1_2358b = add i32 %v3_23588, 136
  %v2_2358b = inttoptr i32 %v1_2358b to i32*
  %v3_2358b = load i32, i32* %v2_2358b, align 4
  store i32 %v3_2358b, i32* @ebp, align 4
  %v1_23591 = icmp eq i32 %v3_2358b, 0
  %v1_23593 = icmp eq i1 %v1_23591, false
  br i1 %v1_23593, label %bb125, label %dec_label_pc_23599

bb125:                                            ; preds = %dec_label_pc_23578
  %v2_23593 = call i32 @function_23760()
  store i32 %v2_23593, i32* %eax.global-to-local, align 8
  %v0_23599.pre = load i32, i32* @esp, align 4
  %v0_2359d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_23599

dec_label_pc_23599:                               ; preds = %bb125, %dec_label_pc_23578
  %v0_2359d = phi i32 [ %v0_2359d.pre, %bb125 ], [ %v3_23588, %dec_label_pc_23578 ]
  %v1_235a0 = phi i32 [ %v0_23599.pre, %bb125 ], [ %v0_23584, %dec_label_pc_23578 ]
  %v1_23599 = add i32 %v1_235a0, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23599 = inttoptr i32 %v1_23599 to i32*
  %v3_23599 = load i32, i32* %v2_23599, align 4
  store i32 %v3_23599, i32* %edx.global-to-local, align 4
  %v1_2359d = add i32 %v0_2359d, 8
  store i32 %v1_2359d, i32* %eax.global-to-local, align 8
  %v2_235a0 = add i32 %v1_235a0, 52
  %v3_235a0 = inttoptr i32 %v2_235a0 to i32*
  store i32 %v1_2359d, i32* %v3_235a0, align 4
  %v0_235a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_235a4 = inttoptr i32 %v0_235a4 to i32*
  %v2_235a4 = load i32, i32* %v1_235a4, align 4
  store i32 %v2_235a4, i32* @eax, align 8
  %v1_235a6 = add i32 %v2_235a4, 8
  %v2_235a6 = inttoptr i32 %v1_235a6 to i32*
  %v3_235a6 = load i32, i32* %v2_235a6, align 4
  store i32 %v3_235a6, i32* %ebp.global-to-local, align 4
  %v1_235a9 = icmp eq i32 %v3_235a6, 0
  br i1 %v1_235a9, label %bb126, label %dec_label_pc_235b1

bb126:                                            ; preds = %dec_label_pc_23599
  %v1_235ab = call i32 @function_237e5()
  store i32 %v1_235ab, i32* %eax.global-to-local, align 8
  %v0_235b1.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_235b1

dec_label_pc_235b1:                               ; preds = %bb126, %dec_label_pc_23599
  %v0_235b1 = phi i32 [ %v0_235b1.pre, %bb126 ], [ %v3_235a6, %dec_label_pc_23599 ]
  %v1_235b1 = add i32 %v0_235b1, 16
  %v2_235b1 = inttoptr i32 %v1_235b1 to i32*
  %v3_235b1 = load i32, i32* %v2_235b1, align 4
  store i32 %v3_235b1, i32* %ebx.global-to-local, align 4
  %v2_235b4 = add i32 %v0_235b1, 20
  %v3_235b4 = inttoptr i32 %v2_235b4 to i32*
  %v4_235b4 = load i32, i32* %v3_235b4, align 4
  %v15_235b4 = icmp eq i32 %v3_235b1, %v4_235b4
  %v1_235b7 = icmp eq i1 %v15_235b4, false
  br i1 %v1_235b7, label %dec_label_pc_235ec, label %dec_label_pc_236a8

dec_label_pc_235c0:                               ; preds = %dec_label_pc_235ec
  %v0_235c0 = load i32, i32* @esp, align 4
  %v1_235c0 = add i32 %v0_235c0, 52
  %v2_235c0 = inttoptr i32 %v1_235c0 to i32*
  %v3_235c0 = load i32, i32* %v2_235c0, align 4
  store i32 %v3_235c0, i32* %eax.global-to-local, align 8
  %v2_235c4 = add i32 %v0_235c0, 4
  %v3_235c4 = inttoptr i32 %v2_235c4 to i32*
  store i32 %v2_23574, i32* %v3_235c4, align 4
  %v0_235c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_235c8 = load i32, i32* @esp, align 4
  %v2_235c8 = add i32 %v1_235c8, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_235c8 = inttoptr i32 %v2_235c8 to i32*
  store i32 %v0_235c8, i32* %v3_235c8, align 4
  %v0_235cc = load i32, i32* @esp, align 4
  %v1_235cc = add i32 %v0_235cc, ptrtoint (i32* @global_var_40.2433 to i32)
  store i32 %v1_235cc, i32* %eax.global-to-local, align 8
  %v2_235d0 = inttoptr i32 %v0_235cc to i32*
  store i32 %v1_235cc, i32* %v2_235d0, align 4
  %v0_235d3 = call i32 @unknown_46750()
  store i32 %v0_235d3, i32* %eax.global-to-local, align 8
  %v1_235d8 = load i32, i32* @esp, align 4
  %v2_235d8 = inttoptr i32 %v1_235d8 to i32*
  store i32 %v2_23574, i32* %v2_235d8, align 4
  %v1_235db = call i32 @unknown_35ca0(i32 %v3_23565)
  store i32 %v1_235db, i32* %eax.global-to-local, align 8
  %v0_235e0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_235e0 = add i32 %v0_235e0, 12
  store i32 %v1_235e0, i32* %ebx.global-to-local, align 4
  %v1_235e3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_235e3 = add i32 %v1_235e3, 20
  %v3_235e3 = inttoptr i32 %v2_235e3 to i32*
  %v4_235e3 = load i32, i32* %v3_235e3, align 4
  %v15_235e3 = icmp eq i32 %v1_235e0, %v4_235e3
  br i1 %v15_235e3, label %dec_label_pc_23690, label %dec_label_pc_235ec

dec_label_pc_235ec:                               ; preds = %dec_label_pc_235b1, %dec_label_pc_235c0
  %v0_235ec = phi i32 [ %v1_235e0, %dec_label_pc_235c0 ], [ %v3_235b1, %dec_label_pc_235b1 ]
  %v1_235ec = inttoptr i32 %v0_235ec to i32*
  %v2_235ec = load i32, i32* %v1_235ec, align 4
  store i32 %v2_235ec, i32* %eax.global-to-local, align 8
  %v0_235ee = load i32, i32* @esp, align 4
  %v1_235ee = add i32 %v0_235ee, ptrtoint (i32* @global_var_4f.2762 to i32)
  %v2_235f2 = add i32 %v0_235ee, 68
  %v3_235f2 = inttoptr i32 %v2_235f2 to i32*
  store i32 %v1_235ee, i32* %v3_235f2, align 4
  %v0_235f6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_235f6 = add i32 %v0_235f6, 4
  store i32 %v1_235f6, i32* %esi.global-to-local, align 4
  %v0_235f9 = load i32, i32* @esp, align 4
  %v1_235f9 = add i32 %v0_235f9, 68
  store i32 %v1_235f9, i32* %ecx.global-to-local, align 4
  %v1_235fd = add i32 %v0_235f9, 32
  %v2_235fd = inttoptr i32 %v1_235fd to i32*
  store i32 0, i32* %v2_235fd, align 4
  %v0_23605 = load i32, i32* %eax.global-to-local, align 8
  %v2_23607 = ashr i32 %v0_23605, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_2360a = xor i32 %v2_23607, %v0_23605
  store i32 %v2_2360a, i32* %edx.global-to-local, align 4
  %v0_2360c = load i32, i32* @esp, align 4
  %v1_2360c = add i32 %v0_2360c, 28
  %v2_2360c = inttoptr i32 %v1_2360c to i32*
  store i32 0, i32* %v2_2360c, align 4
  %v0_23614 = load i32, i32* @esp, align 4
  %v1_23614 = add i32 %v0_23614, 24
  %v2_23614 = inttoptr i32 %v1_23614 to i8*
  store i8 0, i8* %v2_23614, align 1
  %v0_23619 = load i32, i32* @esp, align 4
  %v1_23619 = add i32 %v0_23619, 20
  %v2_23619 = inttoptr i32 %v1_23619 to i8*
  store i8 0, i8* %v2_23619, align 1
  %v0_2361e = load i32, i32* %esi.global-to-local, align 4
  %v1_2361e = load i32, i32* @esp, align 4
  %v2_2361e = add i32 %v1_2361e, 16
  %v3_2361e = inttoptr i32 %v2_2361e to i32*
  store i32 %v0_2361e, i32* %v3_2361e, align 4
  %v0_23622 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23622 = load i32, i32* @esp, align 4
  %v2_23622 = add i32 %v1_23622, 12
  %v3_23622 = inttoptr i32 %v2_23622 to i32*
  store i32 %v0_23622, i32* %v3_23622, align 4
  %v0_23626 = load i32, i32* %edx.global-to-local, align 4
  %v1_23626 = load i32, i32* @esp, align 4
  %v2_23626 = add i32 %v1_23626, 8
  %v3_23626 = inttoptr i32 %v2_23626 to i32*
  store i32 %v0_23626, i32* %v3_23626, align 4
  %v0_2362a = load i32, i32* %eax.global-to-local, align 8
  %v1_2362a = load i32, i32* @esp, align 4
  %v2_2362a = add i32 %v1_2362a, 4
  %v3_2362a = inttoptr i32 %v2_2362a to i32*
  store i32 %v0_2362a, i32* %v3_2362a, align 4
  %v1_2362e = load i32, i32* @esp, align 4
  %v2_2362e = inttoptr i32 %v1_2362e to i32*
  store i32 %v2_23574, i32* %v2_2362e, align 4
  %v0_23631 = call i32 @unknown_41f60()
  %v0_23636 = load i32, i32* @esp, align 4
  %v1_23639 = add i32 %v0_23636, add (i32 ptrtoint (i16** @global_var_4e.2713 to i32), i32 -4)
  store i32 %v1_23639, i32* %eax.global-to-local, align 8
  %v2_2363d = add i32 %v0_23636, 68
  %v3_2363d = inttoptr i32 %v2_2363d to i32*
  store i32 %v1_23639, i32* %v3_2363d, align 4
  %v0_23641 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23641 = inttoptr i32 %v0_23641 to i32*
  %v2_23641 = load i32, i32* %v1_23641, align 4
  store i32 %v2_23641, i32* %eax.global-to-local, align 8
  %v0_23643 = load i32, i32* @esp, align 4
  %v1_23643 = add i32 %v0_23643, 72
  store i32 %v1_23643, i32* %ecx.global-to-local, align 4
  %v1_23647 = add i32 %v0_23643, 28
  %v2_23647 = inttoptr i32 %v1_23647 to i32*
  store i32 0, i32* %v2_23647, align 4
  %v0_2364f = load i32, i32* @esp, align 4
  %v1_2364f = add i32 %v0_2364f, 24
  %v2_2364f = inttoptr i32 %v1_2364f to i32*
  store i32 0, i32* %v2_2364f, align 4
  %v0_23657 = load i32, i32* @esp, align 4
  %v1_23657 = add i32 %v0_23657, 20
  %v2_23657 = inttoptr i32 %v1_23657 to i8*
  store i8 0, i8* %v2_23657, align 1
  %v0_2365c = load i32, i32* %eax.global-to-local, align 8
  %v2_2365e = ashr i32 %v0_2365c, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_23661 = xor i32 %v2_2365e, %v0_2365c
  store i32 %v2_23661, i32* %edx.global-to-local, align 4
  %v0_23663 = load i32, i32* @esp, align 4
  %v1_23663 = add i32 %v0_23663, 16
  %v2_23663 = inttoptr i32 %v1_23663 to i8*
  store i8 0, i8* %v2_23663, align 1
  %v0_23668 = load i32, i32* %esi.global-to-local, align 4
  %v1_23668 = load i32, i32* @esp, align 4
  %v2_23668 = add i32 %v1_23668, 12
  %v3_23668 = inttoptr i32 %v2_23668 to i32*
  store i32 %v0_23668, i32* %v3_23668, align 4
  %v0_2366c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2366c = load i32, i32* @esp, align 4
  %v2_2366c = add i32 %v1_2366c, 8
  %v3_2366c = inttoptr i32 %v2_2366c to i32*
  store i32 %v0_2366c, i32* %v3_2366c, align 4
  %v0_23670 = load i32, i32* %edx.global-to-local, align 4
  %v1_23670 = load i32, i32* @esp, align 4
  %v2_23670 = add i32 %v1_23670, 4
  %v3_23670 = inttoptr i32 %v2_23670 to i32*
  store i32 %v0_23670, i32* %v3_23670, align 4
  %v0_23674 = load i32, i32* %eax.global-to-local, align 8
  %v1_23674 = load i32, i32* @esp, align 4
  %v2_23674 = inttoptr i32 %v1_23674 to i32*
  store i32 %v0_23674, i32* %v2_23674, align 4
  %v0_23677 = call i32 @unknown_3f310()
  store i32 %v0_23677, i32* %eax.global-to-local, align 8
  %v4_2367c = trunc i32 %v0_23677 to i8
  %v5_2367c = icmp eq i8 %v4_2367c, 0
  br i1 %v5_2367c, label %dec_label_pc_235c0, label %dec_label_pc_23684

dec_label_pc_23684:                               ; preds = %dec_label_pc_235ec
  %v0_23684 = load i32, i32* %ebp.global-to-local, align 4
  %v1_23684 = add i32 %v0_23684, 4
  %v2_23684 = inttoptr i32 %v1_23684 to i8*
  store i8 0, i8* %v2_23684, align 1
  %v1_23688 = load i32, i32* @esp, align 4
  %v2_23688 = inttoptr i32 %v1_23688 to i32*
  store i32 %v2_23574, i32* %v2_23688, align 4
  %v1_2368b = call i32 @unknown_35ca0(i32 %v3_23565)
  store i32 %v1_2368b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23690

dec_label_pc_23690:                               ; preds = %dec_label_pc_235c0, %dec_label_pc_23684
  %v0_23690 = load i32, i32* @esp, align 4
  %v1_23690 = add i32 %v0_23690, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23690 = inttoptr i32 %v1_23690 to i32*
  %v3_23690 = load i32, i32* %v2_23690, align 4
  store i32 %v3_23690, i32* %edx.global-to-local, align 4
  %v1_23694 = inttoptr i32 %v3_23690 to i32*
  %v2_23694 = load i32, i32* %v1_23694, align 4
  store i32 %v2_23694, i32* @eax, align 8
  %v1_23696 = add i32 %v2_23694, 8
  %v2_23696 = inttoptr i32 %v1_23696 to i32*
  %v3_23696 = load i32, i32* %v2_23696, align 4
  store i32 %v3_23696, i32* %ebp.global-to-local, align 4
  %v1_23699 = icmp eq i32 %v3_23696, 0
  br i1 %v1_23699, label %bb127, label %dec_label_pc_236a1

bb127:                                            ; preds = %dec_label_pc_23690
  %v1_2369b = call i32 @function_237e5()
  store i32 %v1_2369b, i32* %eax.global-to-local, align 8
  %v0_236a1.pre = load i32, i32* @esp, align 4
  %v0_236a8.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_236a1

dec_label_pc_236a1:                               ; preds = %bb127, %dec_label_pc_23690
  %v0_236a8.pre = phi i32 [ %v0_236a8.pre.pre, %bb127 ], [ %v3_23696, %dec_label_pc_23690 ]
  %v0_236a1 = phi i32 [ %v0_236a1.pre, %bb127 ], [ %v0_23690, %dec_label_pc_23690 ]
  %v1_236a1 = add i32 %v0_236a1, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_236a1 = inttoptr i32 %v1_236a1 to i32*
  %v3_236a1 = load i32, i32* %v2_236a1, align 4
  store i32 %v3_236a1, i32* %ecx.global-to-local, align 4
  %v1_236a5 = add i32 %v3_236a1, 8
  %v2_236a5 = inttoptr i32 %v1_236a5 to i32*
  %v3_236a5 = load i32, i32* %v2_236a5, align 4
  store i32 %v3_236a5, i32* @esi, align 4
  br label %dec_label_pc_236a8

dec_label_pc_236a8:                               ; preds = %dec_label_pc_235b1, %dec_label_pc_236a1
  %v0_236ae = phi i32 [ %v0_235b1, %dec_label_pc_235b1 ], [ %v0_236a8.pre, %dec_label_pc_236a1 ]
  %v1_236a8 = add i32 %v0_236ae, 4
  %v2_236a8 = inttoptr i32 %v1_236a8 to i8*
  %v3_236a8 = load i8, i8* %v2_236a8, align 1
  %v10_236a8 = icmp eq i8 %v3_236a8, 0
  br i1 %v10_236a8, label %dec_label_pc_23700, label %dec_label_pc_236ae

dec_label_pc_236ae:                               ; preds = %dec_label_pc_236a8
  %v1_236ae = add i32 %v0_236ae, 12
  %v2_236ae = inttoptr i32 %v1_236ae to i32*
  %v3_236ae = load i32, i32* %v2_236ae, align 4
  store i32 %v3_236ae, i32* %eax.global-to-local, align 8
  %v0_236b1 = load i32, i32* @esi, align 4
  %v1_236b1 = add i32 %v0_236b1, 144
  %v2_236b1 = inttoptr i32 %v1_236b1 to i32*
  %v3_236b1 = load i32, i32* %v2_236b1, align 4
  %v4_236b1 = add i32 %v3_236b1, 1
  store i32 %v4_236b1, i32* %v2_236b1, align 4
  %v1_236b8 = icmp eq i32 %v3_236ae, 0
  br i1 %v1_236b8, label %dec_label_pc_236c3, label %dec_label_pc_236bc

dec_label_pc_236bc:                               ; preds = %dec_label_pc_236ae
  %v1_236bc = add i32 %v3_236ae, 4
  %v2_236bc = inttoptr i32 %v1_236bc to i32*
  %v3_236bc = load i32, i32* %v2_236bc, align 4
  store i32 %v3_236bc, i32* %eax.global-to-local, align 8
  %v1_236bf = icmp eq i32 %v3_236bc, 0
  %v1_236c1 = icmp eq i1 %v1_236bf, false
  br i1 %v1_236c1, label %dec_label_pc_23707, label %dec_label_pc_236c3

dec_label_pc_236c3:                               ; preds = %dec_label_pc_236bc, %dec_label_pc_236ae
  %v0_236c3 = load i32, i32* @esp, align 4
  %v1_236c3 = add i32 %v0_236c3, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_236c3 = inttoptr i32 %v1_236c3 to i32*
  %v3_236c3 = load i32, i32* %v2_236c3, align 4
  store i32 %v3_236c3, i32* %edx.global-to-local, align 4
  %v1_236c7 = add i32 %v0_236c3, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_236c7 = inttoptr i32 %v1_236c7 to i32*
  %v3_236c7 = load i32, i32* %v2_236c7, align 4
  store i32 %v3_236c7, i32* %ecx.global-to-local, align 4
  %v1_236cb = inttoptr i32 %v3_236c3 to i32*
  %v2_236cb = load i32, i32* %v1_236cb, align 4
  store i32 %v2_236cb, i32* %eax.global-to-local, align 8
  %v2_236cd = add i32 %v3_236c3, 12
  %v3_236cd = inttoptr i32 %v2_236cd to i32*
  store i32 %v2_236cb, i32* %v3_236cd, align 4
  %v0_236d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_236d0 = inttoptr i32 %v0_236d0 to i32*
  %v2_236d0 = load i32, i32* %v1_236d0, align 4
  store i32 %v2_236d0, i32* %eax.global-to-local, align 8
  %v1_236d2 = load i32, i32* @esp, align 4
  %v2_236d2 = inttoptr i32 %v1_236d2 to i32*
  store i32 %v0_236d0, i32* %v2_236d2, align 4
  %v0_236d8 = load i32, i32* @esp, align 4
  %v1_236d8 = add i32 %v0_236d8, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_236d8 = inttoptr i32 %v1_236d8 to i32*
  %v3_236d8 = load i32, i32* %v2_236d8, align 4
  store i32 %v3_236d8, i32* @eax, align 8
  %v1_236dc = add i32 %v3_236d8, 4
  %v2_236dc = inttoptr i32 %v1_236dc to i32*
  %v3_236dc = load i32, i32* %v2_236dc, align 4
  store i32 %v3_236dc, i32* %edx.global-to-local, align 4
  %v1_236df = inttoptr i32 %v3_236d8 to i32*
  %v2_236df = load i32, i32* %v1_236df, align 4
  %v14_236df = icmp eq i32 %v2_236df, %v3_236dc
  br i1 %v14_236df, label %bb128, label %dec_label_pc_236e7

bb128:                                            ; preds = %dec_label_pc_236c3
  %v2_236e1 = call i32 @function_237b3(i32 %v3_23565)
  store i32 %v2_236e1, i32* @eax, align 8
  %v0_236e7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_236e7

dec_label_pc_236e7:                               ; preds = %bb128, %dec_label_pc_236c3, %dec_label_pc_23530
  %v0_236ff14 = phi i32 [ %v2_23551, %dec_label_pc_23530 ], [ %v2_236e1, %bb128 ], [ %v3_236d8, %dec_label_pc_236c3 ]
  %v0_236e7 = phi i32 [ %v16_23534, %dec_label_pc_23530 ], [ %v0_236e7.pre, %bb128 ], [ %v0_236d8, %dec_label_pc_236c3 ]
  %stack_var_-64.0 = phi i32 [ %tmp115, %dec_label_pc_23530 ], [ %v3_23565, %bb128 ], [ %v3_23565, %dec_label_pc_236c3 ]
  %v1_236e7 = add i32 %v0_236e7, ptrtoint (i32* @global_var_5c.2559 to i32)
  %v2_236e7 = inttoptr i32 %v1_236e7 to i32*
  %v3_236e7 = load i32, i32* %v2_236e7, align 4
  store i32 %v3_236e7, i32* %ecx.global-to-local, align 4
  %v1_236eb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_236eb = xor i32 %v1_236eb, %v3_236e7
  %v3_236eb = icmp eq i32 %v2_236eb, 0
  store i32 %v2_236eb, i32* %ecx.global-to-local, align 4
  %v1_236f2 = icmp eq i1 %v3_236eb, false
  br i1 %v1_236f2, label %bb129, label %dec_label_pc_236f8

bb129:                                            ; preds = %dec_label_pc_236e7
  %v3_236f2 = call i32 @function_237e0(i32 %stack_var_-64.0)
  store i32 %v3_236f2, i32* %eax.global-to-local, align 8
  %v0_236f8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_236f8

dec_label_pc_236f8:                               ; preds = %bb129, %dec_label_pc_236e7
  %v0_236ff = phi i32 [ %v3_236f2, %bb129 ], [ %v0_236ff14, %dec_label_pc_236e7 ]
  %v0_236f8 = phi i32 [ %v0_236f8.pre, %bb129 ], [ %v0_236e7, %dec_label_pc_236e7 ]
  %v1_236f8 = add i32 %v0_236f8, 108
  %v1_236fb = inttoptr i32 %v1_236f8 to i32*
  %v2_236fb = load i32, i32* %v1_236fb, align 4
  store i32 %v2_236fb, i32* %ebx.global-to-local, align 4
  %v3_236fb = add i32 %v0_236f8, 112
  %v1_236fc = inttoptr i32 %v3_236fb to i32*
  %v2_236fc = load i32, i32* %v1_236fc, align 4
  store i32 %v2_236fc, i32* %esi.global-to-local, align 4
  %v3_236fd = add i32 %v0_236f8, 120
  %v1_236fe = inttoptr i32 %v3_236fd to i32*
  %v2_236fe = load i32, i32* %v1_236fe, align 4
  store i32 %v2_236fe, i32* %ebp.global-to-local, align 4
  ret i32 %v0_236ff

dec_label_pc_23700:                               ; preds = %dec_label_pc_236a8
  %v0_23700 = load i32, i32* @esi, align 4
  %v1_23700 = add i32 %v0_23700, 148
  %v2_23700 = inttoptr i32 %v1_23700 to i32*
  %v3_23700 = load i32, i32* %v2_23700, align 4
  %v4_23700 = add i32 %v3_23700, 1
  store i32 %v4_23700, i32* %v2_23700, align 4
  br label %dec_label_pc_23707

dec_label_pc_23707:                               ; preds = %dec_label_pc_23700, %dec_label_pc_236bc
  %v0_23707 = load i32, i32* @esp, align 4
  %v1_23707 = add i32 %v0_23707, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_23707 = inttoptr i32 %v1_23707 to i32*
  %v3_23707 = load i32, i32* %v2_23707, align 4
  store i32 %v3_23707, i32* %ecx.global-to-local, align 4
  %v1_2370b = inttoptr i32 %v3_23707 to i32*
  %v2_2370b = load i32, i32* %v1_2370b, align 4
  store i32 %v2_2370b, i32* %eax.global-to-local, align 8
  %v2_2370d = inttoptr i32 %v0_23707 to i32*
  store i32 %v3_23707, i32* %v2_2370d, align 4
  %v0_23713 = load i32, i32* @esp, align 4
  %v1_23713 = add i32 %v0_23713, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23713 = inttoptr i32 %v1_23713 to i32*
  %v3_23713 = load i32, i32* %v2_23713, align 4
  store i32 %v3_23713, i32* %edx.global-to-local, align 4
  %v1_23717 = inttoptr i32 %v3_23713 to i32*
  %v2_23717 = load i32, i32* %v1_23717, align 4
  store i32 %v2_23717, i32* %eax.global-to-local, align 8
  %v1_23719 = inttoptr i32 %v2_23717 to i32*
  %v2_23719 = load i32, i32* %v1_23719, align 4
  store i32 %v2_23719, i32* %eax.global-to-local, align 8
  %v2_2371b = add i32 %v3_23713, 4
  %v3_2371b = inttoptr i32 %v2_2371b to i32*
  %v4_2371b = load i32, i32* %v3_2371b, align 4
  %v15_2371b = icmp eq i32 %v2_23719, %v4_2371b
  store i32 %v2_23719, i32* %v1_23717, align 4
  br i1 %v15_2371b, label %bb132, label %dec_label_pc_23707.dec_label_pc_23726_crit_edge

dec_label_pc_23707.dec_label_pc_23726_crit_edge:  ; preds = %dec_label_pc_23707
  %v0_23726.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23726

bb132:                                            ; preds = %dec_label_pc_23707
  %v2_23720 = call i32 @function_237b3(i32 %v3_23565)
  store i32 %v2_23720, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23726

dec_label_pc_23726:                               ; preds = %dec_label_pc_23707.dec_label_pc_23726_crit_edge, %bb132
  %v0_23726 = phi i32 [ %v0_23726.pre, %dec_label_pc_23707.dec_label_pc_23726_crit_edge ], [ %v2_23720, %bb132 ]
  %v1_23726 = add i32 %v0_23726, 8
  %v2_23726 = inttoptr i32 %v1_23726 to i32*
  %v3_23726 = load i32, i32* %v2_23726, align 4
  store i32 %v3_23726, i32* %eax.global-to-local, align 8
  %v1_23729 = icmp eq i32 %v3_23726, 0
  %v1_2372b = load i32, i32* @esp, align 4
  %v2_2372b = add i32 %v1_2372b, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_2372b = inttoptr i32 %v2_2372b to i32*
  store i32 %v3_23726, i32* %v3_2372b, align 4
  %v1_2372f = icmp eq i1 %v1_23729, false
  br i1 %v1_2372f, label %dec_label_pc_23578, label %dec_label_pc_23735

dec_label_pc_23735:                               ; preds = %dec_label_pc_23726, %dec_label_pc_23565
  %v0_23735 = load i32, i32* @esp, align 4
  %v1_23735 = add i32 %v0_23735, 12
  %v2_23735 = inttoptr i32 %v1_23735 to i32*
  store i32 ptrtoint ([637 x i8]* @global_var_2f9c0.2732 to i32), i32* %v2_23735, align 4
  %v0_2373d = load i32, i32* @esp, align 4
  %v1_2373d = add i32 %v0_2373d, 8
  %v2_2373d = inttoptr i32 %v1_2373d to i32*
  store i32 412, i32* %v2_2373d, align 4
  %v0_23745 = load i32, i32* @esp, align 4
  %v1_23745 = add i32 %v0_23745, 4
  %v2_23745 = inttoptr i32 %v1_23745 to i32*
  store i32 ptrtoint ([44 x i8]* @global_var_d5d0.2572 to i32), i32* %v2_23745, align 4
  %v0_2374d = load i32, i32* @esp, align 4
  %v1_2374d = inttoptr i32 %v0_2374d to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_9f6e.2573 to i32), i32* %v1_2374d, align 4
  %v2_2374d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2374d

; uselistorder directives
  uselistorder i32 %v2_23719, { 1, 0, 2 }
  uselistorder i32 %v0_236f8, { 2, 1, 0 }
  uselistorder i32 %v1_235e0, { 1, 0, 2 }
  uselistorder i32 %v3_235b1, { 1, 0, 2 }
  uselistorder i32 %v0_235b1, { 0, 2, 1 }
  uselistorder i32 %v2_23574, { 0, 3, 1, 2 }
  uselistorder i32 %v3_23565, { 1, 4, 3, 2, 5, 0, 6, 7 }
  uselistorder i32 %v2_23551, { 2, 3, 0, 1, 4 }
  uselistorder i32 %tmp119, { 3, 0, 2, 1, 4 }
  uselistorder i32* %ebx.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 31, 6, 4, 7, 8, 9, 10, 5, 11, 12, 13, 14, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 16, 17, 18, 19, 0, 29, 2, 30, 32, 3, 33 }
  uselistorder i32 (i32)* @function_237e0, { 1, 0 }
  uselistorder i32 ()* @function_237e5, { 1, 0 }
  uselistorder i32 (i32)* @function_237b3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_23726, { 1, 0 }
  uselistorder label %dec_label_pc_236a8, { 1, 0 }
  uselistorder label %dec_label_pc_23690, { 1, 0 }
  uselistorder label %dec_label_pc_235ec, { 1, 0 }
}

define i32 @function_23760() local_unnamed_addr {
dec_label_pc_23760:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_23760 = load i32, i32* @esi, align 4
  %v1_23760 = add i32 %v0_23760, 132
  %v2_23760 = inttoptr i32 %v1_23760 to i32*
  %v3_23760 = load i32, i32* %v2_23760, align 4
  %v0_23766 = load i32, i32* @ebp, align 4
  %v2_23766 = mul i32 %v0_23766, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_23766 = add i32 %v0_23766, -3
  %v4_23766 = add i32 %v3_23766, %v2_23766
  %v2_2376a = mul i32 %v4_23766, 4
  %v3_2376a = add i32 %v2_2376a, %v3_23760
  store i32 %v3_2376a, i32* %ebx.global-to-local, align 4
  %v3_2376d = mul i32 %v0_23766, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_23773 = shl i32 %v3_2376d, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_23773 = icmp eq i32 %v2_23773, 0
  store i32 %v2_23773, i32* %eax.global-to-local, align 8
  %v2_23776 = sub i32 %v3_2376a, %v2_23773
  store i32 %v2_23776, i32* %edx.global-to-local, align 4
  %v7_23778 = icmp ult i32 %v3_2376a, %v2_23776
  %v2_2377e = or i1 %v3_23773, %v7_23778
  br i1 %v2_2377e, label %dec_label_pc_237ad, label %dec_label_pc_23780

dec_label_pc_23780:                               ; preds = %dec_label_pc_23760, %dec_label_pc_23780
  %v0_23780 = phi i32 [ %v1_23788, %dec_label_pc_23780 ], [ %v3_2376a, %dec_label_pc_23760 ]
  %v1_23783 = call i32 @unknown_35ca0(i32 %v0_23780)
  store i32 %v1_23783, i32* %eax.global-to-local, align 8
  %v0_23788 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23788 = add i32 %v0_23788, -12
  store i32 %v1_23788, i32* %ebx.global-to-local, align 4
  %v11_2378b = icmp ult i32 %v2_23776, %v1_23788
  br i1 %v11_2378b, label %dec_label_pc_23780, label %dec_label_pc_23791

dec_label_pc_23791:                               ; preds = %dec_label_pc_23780
  %v0_23795 = load i32, i32* @esi, align 4
  %v1_23795 = add i32 %v0_23795, 136
  %v2_23795 = inttoptr i32 %v1_23795 to i32*
  %v3_23795 = load i32, i32* %v2_23795, align 4
  store i32 %v3_23795, i32* %eax.global-to-local, align 8
  %v1_2379b = add i32 %tmp, 8
  %v2_2379b = inttoptr i32 %v1_2379b to i32*
  %v3_2379b = load i32, i32* %v2_2379b, align 4
  store i32 %v3_2379b, i32* %edx.global-to-local, align 4
  %v1_2379e = load i32, i32* @ebp, align 4
  %v2_2379e = sub i32 %v3_23795, %v1_2379e
  br label %dec_label_pc_237a0

dec_label_pc_237a0:                               ; preds = %dec_label_pc_237ad, %dec_label_pc_23791
  %v1_237a0 = phi i32 [ %v0_23760, %dec_label_pc_237ad ], [ %v0_23795, %dec_label_pc_23791 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_237ad ], [ %v2_2379e, %dec_label_pc_23791 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v2_237a0 = add i32 %v1_237a0, 136
  %v3_237a0 = inttoptr i32 %v2_237a0 to i32*
  store i32 %storemerge, i32* %v3_237a0, align 4
  %v0_237a6 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_237a6, i32* @esi, align 4
  %v0_237a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_237a8

dec_label_pc_237ad:                               ; preds = %dec_label_pc_23760
  store i32 %v0_23760, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_237a0

; uselistorder directives
  uselistorder i32 %v1_23788, { 1, 2, 0 }
  uselistorder i32 %v0_23766, { 0, 2, 1 }
  uselistorder i32 %v0_23760, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32)* @unknown_35ca0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23780, { 1, 0 }
}

define i32 @function_237b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_237b3:
  %eax.global-to-local = alloca i32, align 4
  %v1_237b7 = add i32 %arg1, 4
  %v2_237b7 = inttoptr i32 %v1_237b7 to i32*
  %v3_237b7 = load i32, i32* %v2_237b7, align 4
  store i32 %v3_237b7, i32* %eax.global-to-local, align 8
  %v2_237ba = add i32 %arg1, 12
  %v3_237ba = inttoptr i32 %v2_237ba to i32*
  store i32 %v3_237b7, i32* %v3_237ba, align 4
  %v0_237bd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_237bd
}

define i32 @function_237c3() local_unnamed_addr {
dec_label_pc_237c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_237c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_237c3
}

define i32 @function_237cc() local_unnamed_addr {
dec_label_pc_237cc:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_237d0 = inttoptr i32 %tmp1 to i32*
  %v2_237d0 = load i32, i32* %v1_237d0, align 4
  ret i32 %v2_237d0
}

define i32 @function_237e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_237e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_237e5() local_unnamed_addr {
dec_label_pc_237e5:
  %v0_237e5 = call i32 @function_3194a()
  %v0_237ec = call i32 @function_237cc()
  ret i32 %v0_237ec
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_237f0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg1 to i32
  %stack_var_-124 = alloca i32, align 4
  %v16_237f4 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %tmp119, i32* %eax.global-to-local, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %tmp119, i32* %ecx.global-to-local, align 4
  %v2_23811 = load i32, i32* %arg1, align 4
  store i32 %v2_23811, i32* @eax, align 8
  %v2_23813 = add i32 %tmp119, 12
  %v3_23813 = inttoptr i32 %v2_23813 to i32*
  %v4_23813 = load i32, i32* %v3_23813, align 4
  %v15_23813 = icmp eq i32 %v2_23811, %v4_23813
  br i1 %v15_23813, label %dec_label_pc_239a7, label %dec_label_pc_2381c

dec_label_pc_2381c:                               ; preds = %dec_label_pc_237f0
  %v1_2381c = add i32 %tmp119, 4
  %v2_2381c = inttoptr i32 %v1_2381c to i32*
  %v3_2381c = load i32, i32* %v2_2381c, align 4
  %v15_2381c = icmp eq i32 %v3_2381c, %v2_23811
  br i1 %v15_2381c, label %bb, label %dec_label_pc_23825

bb:                                               ; preds = %dec_label_pc_2381c
  %v2_2381f = call i32 @function_23a73(i32 %tmp119)
  store i32 %v2_2381f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23825

dec_label_pc_23825:                               ; preds = %bb, %dec_label_pc_2381c
  %v0_23825 = phi i32 [ %v2_2381f, %bb ], [ %v2_23811, %dec_label_pc_2381c ]
  %v1_23825 = add i32 %v0_23825, 8
  %v2_23825 = inttoptr i32 %v1_23825 to i32*
  %v3_23825 = load i32, i32* %v2_23825, align 4
  store i32 %v3_23825, i32* %eax.global-to-local, align 8
  %v1_23828 = icmp eq i32 %v3_23825, 0
  br i1 %v1_23828, label %dec_label_pc_239f5, label %dec_label_pc_23834

dec_label_pc_23834:                               ; preds = %dec_label_pc_23825
  %v2_23834 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_23838

dec_label_pc_23838:                               ; preds = %dec_label_pc_23834, %dec_label_pc_239e6
  %v0_23838 = load i32, i32* @esp, align 4
  %v1_23838 = add i32 %v0_23838, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_23838 = inttoptr i32 %v1_23838 to i32*
  %v3_23838 = load i32, i32* %v2_23838, align 4
  store i32 %v3_23838, i32* %edx.global-to-local, align 4
  %v1_2383c = inttoptr i32 %v3_23838 to i32*
  %v2_2383c = load i32, i32* %v1_2383c, align 4
  store i32 %v2_2383c, i32* %eax.global-to-local, align 8
  %v2_2383e = inttoptr i32 %v0_23838 to i32*
  store i32 %v3_23838, i32* %v2_2383e, align 4
  %v0_23844 = load i32, i32* @esp, align 4
  %v1_23844 = add i32 %v0_23844, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23844 = inttoptr i32 %v1_23844 to i32*
  %v3_23844 = load i32, i32* %v2_23844, align 4
  store i32 %v3_23844, i32* %ecx.global-to-local, align 4
  %v1_23848 = add i32 %v3_23844, 8
  %v2_23848 = inttoptr i32 %v1_23848 to i32*
  %v3_23848 = load i32, i32* %v2_23848, align 4
  store i32 %v3_23848, i32* @esi, align 4
  %v1_2384b = add i32 %v3_23848, 132
  %v2_2384b = inttoptr i32 %v1_2384b to i32*
  %v3_2384b = load i32, i32* %v2_2384b, align 4
  store i32 %v3_2384b, i32* @ebp, align 4
  %v1_23851 = icmp eq i32 %v3_2384b, 0
  %v1_23853 = icmp eq i1 %v1_23851, false
  br i1 %v1_23853, label %bb125, label %dec_label_pc_23859

bb125:                                            ; preds = %dec_label_pc_23838
  %v2_23853 = call i32 @function_23a20()
  store i32 %v2_23853, i32* %eax.global-to-local, align 8
  %v0_23859.pre = load i32, i32* @esp, align 4
  %v0_2385d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_23859

dec_label_pc_23859:                               ; preds = %bb125, %dec_label_pc_23838
  %v0_2385d = phi i32 [ %v0_2385d.pre, %bb125 ], [ %v3_23848, %dec_label_pc_23838 ]
  %v1_23860 = phi i32 [ %v0_23859.pre, %bb125 ], [ %v0_23844, %dec_label_pc_23838 ]
  %v1_23859 = add i32 %v1_23860, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23859 = inttoptr i32 %v1_23859 to i32*
  %v3_23859 = load i32, i32* %v2_23859, align 4
  store i32 %v3_23859, i32* %edx.global-to-local, align 4
  %v1_2385d = add i32 %v0_2385d, 4
  store i32 %v1_2385d, i32* %eax.global-to-local, align 8
  %v2_23860 = add i32 %v1_23860, 52
  %v3_23860 = inttoptr i32 %v2_23860 to i32*
  store i32 %v1_2385d, i32* %v3_23860, align 4
  %v0_23864 = load i32, i32* %edx.global-to-local, align 4
  %v1_23864 = inttoptr i32 %v0_23864 to i32*
  %v2_23864 = load i32, i32* %v1_23864, align 4
  store i32 %v2_23864, i32* @eax, align 8
  %v1_23866 = add i32 %v2_23864, 8
  %v2_23866 = inttoptr i32 %v1_23866 to i32*
  %v3_23866 = load i32, i32* %v2_23866, align 4
  store i32 %v3_23866, i32* %ebp.global-to-local, align 4
  %v1_23869 = icmp eq i32 %v3_23866, 0
  br i1 %v1_23869, label %bb126, label %dec_label_pc_23871

bb126:                                            ; preds = %dec_label_pc_23859
  %v1_2386b = call i32 @function_23aa5()
  store i32 %v1_2386b, i32* %eax.global-to-local, align 8
  %v0_23871.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_23871

dec_label_pc_23871:                               ; preds = %bb126, %dec_label_pc_23859
  %v0_23871 = phi i32 [ %v0_23871.pre, %bb126 ], [ %v3_23866, %dec_label_pc_23859 ]
  %v1_23871 = add i32 %v0_23871, 16
  %v2_23871 = inttoptr i32 %v1_23871 to i32*
  %v3_23871 = load i32, i32* %v2_23871, align 4
  store i32 %v3_23871, i32* %ebx.global-to-local, align 4
  %v2_23874 = add i32 %v0_23871, 20
  %v3_23874 = inttoptr i32 %v2_23874 to i32*
  %v4_23874 = load i32, i32* %v3_23874, align 4
  %v15_23874 = icmp eq i32 %v3_23871, %v4_23874
  %v1_23877 = icmp eq i1 %v15_23874, false
  br i1 %v1_23877, label %dec_label_pc_238ac, label %dec_label_pc_23968

dec_label_pc_23880:                               ; preds = %dec_label_pc_238ac
  %v0_23880 = load i32, i32* @esp, align 4
  %v1_23880 = add i32 %v0_23880, 52
  %v2_23880 = inttoptr i32 %v1_23880 to i32*
  %v3_23880 = load i32, i32* %v2_23880, align 4
  store i32 %v3_23880, i32* %eax.global-to-local, align 8
  %v2_23884 = add i32 %v0_23880, 4
  %v3_23884 = inttoptr i32 %v2_23884 to i32*
  store i32 %v2_23834, i32* %v3_23884, align 4
  %v0_23888 = load i32, i32* %eax.global-to-local, align 8
  %v1_23888 = load i32, i32* @esp, align 4
  %v2_23888 = add i32 %v1_23888, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_23888 = inttoptr i32 %v2_23888 to i32*
  store i32 %v0_23888, i32* %v3_23888, align 4
  %v0_2388c = load i32, i32* @esp, align 4
  %v1_2388c = add i32 %v0_2388c, ptrtoint (i32* @global_var_40.2433 to i32)
  store i32 %v1_2388c, i32* %eax.global-to-local, align 8
  %v2_23890 = inttoptr i32 %v0_2388c to i32*
  store i32 %v1_2388c, i32* %v2_23890, align 4
  %v0_23893 = call i32 @unknown_46a10()
  store i32 %v0_23893, i32* %eax.global-to-local, align 8
  %v1_23898 = load i32, i32* @esp, align 4
  %v2_23898 = inttoptr i32 %v1_23898 to i32*
  store i32 %v2_23834, i32* %v2_23898, align 4
  %v1_2389b = call i32 @unknown_35f60(i32 %v3_23825)
  store i32 %v1_2389b, i32* %eax.global-to-local, align 8
  %v0_238a0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_238a0 = add i32 %v0_238a0, 12
  store i32 %v1_238a0, i32* %ebx.global-to-local, align 4
  %v1_238a3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_238a3 = add i32 %v1_238a3, 20
  %v3_238a3 = inttoptr i32 %v2_238a3 to i32*
  %v4_238a3 = load i32, i32* %v3_238a3, align 4
  %v15_238a3 = icmp eq i32 %v1_238a0, %v4_238a3
  br i1 %v15_238a3, label %dec_label_pc_23950, label %dec_label_pc_238ac

dec_label_pc_238ac:                               ; preds = %dec_label_pc_23871, %dec_label_pc_23880
  %v0_238ac = phi i32 [ %v1_238a0, %dec_label_pc_23880 ], [ %v3_23871, %dec_label_pc_23871 ]
  %v1_238ac = inttoptr i32 %v0_238ac to i32*
  %v2_238ac = load i32, i32* %v1_238ac, align 4
  store i32 %v2_238ac, i32* %eax.global-to-local, align 8
  %v0_238ae = load i32, i32* @esp, align 4
  %v1_238ae = add i32 %v0_238ae, ptrtoint (i32* @global_var_4f.2762 to i32)
  %v2_238b2 = add i32 %v0_238ae, 68
  %v3_238b2 = inttoptr i32 %v2_238b2 to i32*
  store i32 %v1_238ae, i32* %v3_238b2, align 4
  %v0_238b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_238b6 = add i32 %v0_238b6, 4
  store i32 %v1_238b6, i32* %esi.global-to-local, align 4
  %v0_238b9 = load i32, i32* @esp, align 4
  %v1_238b9 = add i32 %v0_238b9, 68
  store i32 %v1_238b9, i32* %ecx.global-to-local, align 4
  %v1_238bd = add i32 %v0_238b9, 32
  %v2_238bd = inttoptr i32 %v1_238bd to i32*
  store i32 0, i32* %v2_238bd, align 4
  %v0_238c5 = load i32, i32* %eax.global-to-local, align 8
  %v2_238c7 = ashr i32 %v0_238c5, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_238ca = xor i32 %v2_238c7, %v0_238c5
  store i32 %v2_238ca, i32* %edx.global-to-local, align 4
  %v0_238cc = load i32, i32* @esp, align 4
  %v1_238cc = add i32 %v0_238cc, 28
  %v2_238cc = inttoptr i32 %v1_238cc to i32*
  store i32 0, i32* %v2_238cc, align 4
  %v0_238d4 = load i32, i32* @esp, align 4
  %v1_238d4 = add i32 %v0_238d4, 24
  %v2_238d4 = inttoptr i32 %v1_238d4 to i8*
  store i8 0, i8* %v2_238d4, align 1
  %v0_238d9 = load i32, i32* @esp, align 4
  %v1_238d9 = add i32 %v0_238d9, 20
  %v2_238d9 = inttoptr i32 %v1_238d9 to i8*
  store i8 0, i8* %v2_238d9, align 1
  %v0_238de = load i32, i32* %esi.global-to-local, align 4
  %v1_238de = load i32, i32* @esp, align 4
  %v2_238de = add i32 %v1_238de, 16
  %v3_238de = inttoptr i32 %v2_238de to i32*
  store i32 %v0_238de, i32* %v3_238de, align 4
  %v0_238e2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_238e2 = load i32, i32* @esp, align 4
  %v2_238e2 = add i32 %v1_238e2, 12
  %v3_238e2 = inttoptr i32 %v2_238e2 to i32*
  store i32 %v0_238e2, i32* %v3_238e2, align 4
  %v0_238e6 = load i32, i32* %edx.global-to-local, align 4
  %v1_238e6 = load i32, i32* @esp, align 4
  %v2_238e6 = add i32 %v1_238e6, 8
  %v3_238e6 = inttoptr i32 %v2_238e6 to i32*
  store i32 %v0_238e6, i32* %v3_238e6, align 4
  %v0_238ea = load i32, i32* %eax.global-to-local, align 8
  %v1_238ea = load i32, i32* @esp, align 4
  %v2_238ea = add i32 %v1_238ea, 4
  %v3_238ea = inttoptr i32 %v2_238ea to i32*
  store i32 %v0_238ea, i32* %v3_238ea, align 4
  %v1_238ee = load i32, i32* @esp, align 4
  %v2_238ee = inttoptr i32 %v1_238ee to i32*
  store i32 %v2_23834, i32* %v2_238ee, align 4
  %v0_238f1 = call i32 @unknown_42220()
  %v0_238f6 = load i32, i32* @esp, align 4
  %v1_238f9 = add i32 %v0_238f6, add (i32 ptrtoint (i16** @global_var_4e.2713 to i32), i32 -4)
  store i32 %v1_238f9, i32* %eax.global-to-local, align 8
  %v2_238fd = add i32 %v0_238f6, 68
  %v3_238fd = inttoptr i32 %v2_238fd to i32*
  store i32 %v1_238f9, i32* %v3_238fd, align 4
  %v0_23901 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23901 = inttoptr i32 %v0_23901 to i32*
  %v2_23901 = load i32, i32* %v1_23901, align 4
  store i32 %v2_23901, i32* %eax.global-to-local, align 8
  %v0_23903 = load i32, i32* @esp, align 4
  %v1_23903 = add i32 %v0_23903, 72
  store i32 %v1_23903, i32* %ecx.global-to-local, align 4
  %v1_23907 = add i32 %v0_23903, 28
  %v2_23907 = inttoptr i32 %v1_23907 to i32*
  store i32 0, i32* %v2_23907, align 4
  %v0_2390f = load i32, i32* @esp, align 4
  %v1_2390f = add i32 %v0_2390f, 24
  %v2_2390f = inttoptr i32 %v1_2390f to i32*
  store i32 0, i32* %v2_2390f, align 4
  %v0_23917 = load i32, i32* @esp, align 4
  %v1_23917 = add i32 %v0_23917, 20
  %v2_23917 = inttoptr i32 %v1_23917 to i8*
  store i8 0, i8* %v2_23917, align 1
  %v0_2391c = load i32, i32* %eax.global-to-local, align 8
  %v2_2391e = ashr i32 %v0_2391c, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_23921 = xor i32 %v2_2391e, %v0_2391c
  store i32 %v2_23921, i32* %edx.global-to-local, align 4
  %v0_23923 = load i32, i32* @esp, align 4
  %v1_23923 = add i32 %v0_23923, 16
  %v2_23923 = inttoptr i32 %v1_23923 to i8*
  store i8 0, i8* %v2_23923, align 1
  %v0_23928 = load i32, i32* %esi.global-to-local, align 4
  %v1_23928 = load i32, i32* @esp, align 4
  %v2_23928 = add i32 %v1_23928, 12
  %v3_23928 = inttoptr i32 %v2_23928 to i32*
  store i32 %v0_23928, i32* %v3_23928, align 4
  %v0_2392c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2392c = load i32, i32* @esp, align 4
  %v2_2392c = add i32 %v1_2392c, 8
  %v3_2392c = inttoptr i32 %v2_2392c to i32*
  store i32 %v0_2392c, i32* %v3_2392c, align 4
  %v0_23930 = load i32, i32* %edx.global-to-local, align 4
  %v1_23930 = load i32, i32* @esp, align 4
  %v2_23930 = add i32 %v1_23930, 4
  %v3_23930 = inttoptr i32 %v2_23930 to i32*
  store i32 %v0_23930, i32* %v3_23930, align 4
  %v0_23934 = load i32, i32* %eax.global-to-local, align 8
  %v1_23934 = load i32, i32* @esp, align 4
  %v2_23934 = inttoptr i32 %v1_23934 to i32*
  store i32 %v0_23934, i32* %v2_23934, align 4
  %v0_23937 = call i32 @unknown_3f5d0()
  store i32 %v0_23937, i32* %eax.global-to-local, align 8
  %v4_2393c = trunc i32 %v0_23937 to i8
  %v5_2393c = icmp eq i8 %v4_2393c, 0
  br i1 %v5_2393c, label %dec_label_pc_23880, label %dec_label_pc_23944

dec_label_pc_23944:                               ; preds = %dec_label_pc_238ac
  %v0_23944 = load i32, i32* %ebp.global-to-local, align 4
  %v1_23944 = add i32 %v0_23944, 4
  %v2_23944 = inttoptr i32 %v1_23944 to i8*
  store i8 0, i8* %v2_23944, align 1
  %v1_23948 = load i32, i32* @esp, align 4
  %v2_23948 = inttoptr i32 %v1_23948 to i32*
  store i32 %v2_23834, i32* %v2_23948, align 4
  %v1_2394b = call i32 @unknown_35f60(i32 %v3_23825)
  store i32 %v1_2394b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23950

dec_label_pc_23950:                               ; preds = %dec_label_pc_23880, %dec_label_pc_23944
  %v0_23950 = load i32, i32* @esp, align 4
  %v1_23950 = add i32 %v0_23950, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23950 = inttoptr i32 %v1_23950 to i32*
  %v3_23950 = load i32, i32* %v2_23950, align 4
  store i32 %v3_23950, i32* %edx.global-to-local, align 4
  %v1_23954 = inttoptr i32 %v3_23950 to i32*
  %v2_23954 = load i32, i32* %v1_23954, align 4
  store i32 %v2_23954, i32* @eax, align 8
  %v1_23956 = add i32 %v2_23954, 8
  %v2_23956 = inttoptr i32 %v1_23956 to i32*
  %v3_23956 = load i32, i32* %v2_23956, align 4
  store i32 %v3_23956, i32* %ebp.global-to-local, align 4
  %v1_23959 = icmp eq i32 %v3_23956, 0
  br i1 %v1_23959, label %bb127, label %dec_label_pc_23961

bb127:                                            ; preds = %dec_label_pc_23950
  %v1_2395b = call i32 @function_23aa5()
  store i32 %v1_2395b, i32* %eax.global-to-local, align 8
  %v0_23961.pre = load i32, i32* @esp, align 4
  %v0_23968.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_23961

dec_label_pc_23961:                               ; preds = %bb127, %dec_label_pc_23950
  %v0_23968.pre = phi i32 [ %v0_23968.pre.pre, %bb127 ], [ %v3_23956, %dec_label_pc_23950 ]
  %v0_23961 = phi i32 [ %v0_23961.pre, %bb127 ], [ %v0_23950, %dec_label_pc_23950 ]
  %v1_23961 = add i32 %v0_23961, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23961 = inttoptr i32 %v1_23961 to i32*
  %v3_23961 = load i32, i32* %v2_23961, align 4
  store i32 %v3_23961, i32* %ecx.global-to-local, align 4
  %v1_23965 = add i32 %v3_23961, 8
  %v2_23965 = inttoptr i32 %v1_23965 to i32*
  %v3_23965 = load i32, i32* %v2_23965, align 4
  store i32 %v3_23965, i32* @esi, align 4
  br label %dec_label_pc_23968

dec_label_pc_23968:                               ; preds = %dec_label_pc_23871, %dec_label_pc_23961
  %v0_2396e = phi i32 [ %v0_23871, %dec_label_pc_23871 ], [ %v0_23968.pre, %dec_label_pc_23961 ]
  %v1_23968 = add i32 %v0_2396e, 4
  %v2_23968 = inttoptr i32 %v1_23968 to i8*
  %v3_23968 = load i8, i8* %v2_23968, align 1
  %v10_23968 = icmp eq i8 %v3_23968, 0
  br i1 %v10_23968, label %dec_label_pc_239c0, label %dec_label_pc_2396e

dec_label_pc_2396e:                               ; preds = %dec_label_pc_23968
  %v1_2396e = add i32 %v0_2396e, 12
  %v2_2396e = inttoptr i32 %v1_2396e to i32*
  %v3_2396e = load i32, i32* %v2_2396e, align 4
  store i32 %v3_2396e, i32* %eax.global-to-local, align 8
  %v0_23971 = load i32, i32* @esi, align 4
  %v1_23971 = add i32 %v0_23971, 140
  %v2_23971 = inttoptr i32 %v1_23971 to i32*
  %v3_23971 = load i32, i32* %v2_23971, align 4
  %v4_23971 = add i32 %v3_23971, 1
  store i32 %v4_23971, i32* %v2_23971, align 4
  %v1_23978 = icmp eq i32 %v3_2396e, 0
  br i1 %v1_23978, label %dec_label_pc_23983, label %dec_label_pc_2397c

dec_label_pc_2397c:                               ; preds = %dec_label_pc_2396e
  %v1_2397c = add i32 %v3_2396e, 4
  %v2_2397c = inttoptr i32 %v1_2397c to i32*
  %v3_2397c = load i32, i32* %v2_2397c, align 4
  store i32 %v3_2397c, i32* %eax.global-to-local, align 8
  %v1_2397f = icmp eq i32 %v3_2397c, 0
  %v1_23981 = icmp eq i1 %v1_2397f, false
  br i1 %v1_23981, label %dec_label_pc_239c7, label %dec_label_pc_23983

dec_label_pc_23983:                               ; preds = %dec_label_pc_2397c, %dec_label_pc_2396e
  %v0_23983 = load i32, i32* @esp, align 4
  %v1_23983 = add i32 %v0_23983, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23983 = inttoptr i32 %v1_23983 to i32*
  %v3_23983 = load i32, i32* %v2_23983, align 4
  store i32 %v3_23983, i32* %edx.global-to-local, align 4
  %v1_23987 = add i32 %v0_23983, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_23987 = inttoptr i32 %v1_23987 to i32*
  %v3_23987 = load i32, i32* %v2_23987, align 4
  store i32 %v3_23987, i32* %ecx.global-to-local, align 4
  %v1_2398b = inttoptr i32 %v3_23983 to i32*
  %v2_2398b = load i32, i32* %v1_2398b, align 4
  store i32 %v2_2398b, i32* %eax.global-to-local, align 8
  %v2_2398d = add i32 %v3_23983, 12
  %v3_2398d = inttoptr i32 %v2_2398d to i32*
  store i32 %v2_2398b, i32* %v3_2398d, align 4
  %v0_23990 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23990 = inttoptr i32 %v0_23990 to i32*
  %v2_23990 = load i32, i32* %v1_23990, align 4
  store i32 %v2_23990, i32* %eax.global-to-local, align 8
  %v1_23992 = load i32, i32* @esp, align 4
  %v2_23992 = inttoptr i32 %v1_23992 to i32*
  store i32 %v0_23990, i32* %v2_23992, align 4
  %v0_23998 = load i32, i32* @esp, align 4
  %v1_23998 = add i32 %v0_23998, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_23998 = inttoptr i32 %v1_23998 to i32*
  %v3_23998 = load i32, i32* %v2_23998, align 4
  store i32 %v3_23998, i32* @eax, align 8
  %v1_2399c = add i32 %v3_23998, 4
  %v2_2399c = inttoptr i32 %v1_2399c to i32*
  %v3_2399c = load i32, i32* %v2_2399c, align 4
  store i32 %v3_2399c, i32* %edx.global-to-local, align 4
  %v1_2399f = inttoptr i32 %v3_23998 to i32*
  %v2_2399f = load i32, i32* %v1_2399f, align 4
  %v14_2399f = icmp eq i32 %v2_2399f, %v3_2399c
  br i1 %v14_2399f, label %bb128, label %dec_label_pc_239a7

bb128:                                            ; preds = %dec_label_pc_23983
  %v2_239a1 = call i32 @function_23a73(i32 %v3_23825)
  store i32 %v2_239a1, i32* @eax, align 8
  %v0_239a7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_239a7

dec_label_pc_239a7:                               ; preds = %dec_label_pc_237f0, %bb128, %dec_label_pc_23983
  %v0_239bf14 = phi i32 [ %v2_23811, %dec_label_pc_237f0 ], [ %v2_239a1, %bb128 ], [ %v3_23998, %dec_label_pc_23983 ]
  %v0_239a7 = phi i32 [ %v16_237f4, %dec_label_pc_237f0 ], [ %v0_239a7.pre, %bb128 ], [ %v0_23998, %dec_label_pc_23983 ]
  %v1_239a7 = add i32 %v0_239a7, ptrtoint (i32* @global_var_5c.2559 to i32)
  %v2_239a7 = inttoptr i32 %v1_239a7 to i32*
  %v3_239a7 = load i32, i32* %v2_239a7, align 4
  store i32 %v3_239a7, i32* %ecx.global-to-local, align 4
  %v1_239ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_239ab = xor i32 %v1_239ab, %v3_239a7
  %v3_239ab = icmp eq i32 %v2_239ab, 0
  store i32 %v2_239ab, i32* %ecx.global-to-local, align 4
  %v1_239b2 = icmp eq i1 %v3_239ab, false
  br i1 %v1_239b2, label %bb129, label %dec_label_pc_239b8

bb129:                                            ; preds = %dec_label_pc_239a7
  %v2_239b2 = call i32 @function_23aa0()
  store i32 %v2_239b2, i32* %eax.global-to-local, align 8
  %v0_239b8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_239b8

dec_label_pc_239b8:                               ; preds = %bb129, %dec_label_pc_239a7
  %v0_239bf = phi i32 [ %v2_239b2, %bb129 ], [ %v0_239bf14, %dec_label_pc_239a7 ]
  %v0_239b8 = phi i32 [ %v0_239b8.pre, %bb129 ], [ %v0_239a7, %dec_label_pc_239a7 ]
  %v1_239b8 = add i32 %v0_239b8, 108
  %v1_239bb = inttoptr i32 %v1_239b8 to i32*
  %v2_239bb = load i32, i32* %v1_239bb, align 4
  store i32 %v2_239bb, i32* %ebx.global-to-local, align 4
  %v3_239bb = add i32 %v0_239b8, 112
  %v1_239bc = inttoptr i32 %v3_239bb to i32*
  %v2_239bc = load i32, i32* %v1_239bc, align 4
  store i32 %v2_239bc, i32* %esi.global-to-local, align 4
  %v3_239bd = add i32 %v0_239b8, 120
  %v1_239be = inttoptr i32 %v3_239bd to i32*
  %v2_239be = load i32, i32* %v1_239be, align 4
  store i32 %v2_239be, i32* %ebp.global-to-local, align 4
  ret i32 %v0_239bf

dec_label_pc_239c0:                               ; preds = %dec_label_pc_23968
  %v0_239c0 = load i32, i32* @esi, align 4
  %v1_239c0 = add i32 %v0_239c0, 144
  %v2_239c0 = inttoptr i32 %v1_239c0 to i32*
  %v3_239c0 = load i32, i32* %v2_239c0, align 4
  %v4_239c0 = add i32 %v3_239c0, 1
  store i32 %v4_239c0, i32* %v2_239c0, align 4
  br label %dec_label_pc_239c7

dec_label_pc_239c7:                               ; preds = %dec_label_pc_239c0, %dec_label_pc_2397c
  %v0_239c7 = load i32, i32* @esp, align 4
  %v1_239c7 = add i32 %v0_239c7, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_239c7 = inttoptr i32 %v1_239c7 to i32*
  %v3_239c7 = load i32, i32* %v2_239c7, align 4
  store i32 %v3_239c7, i32* %ecx.global-to-local, align 4
  %v1_239cb = inttoptr i32 %v3_239c7 to i32*
  %v2_239cb = load i32, i32* %v1_239cb, align 4
  store i32 %v2_239cb, i32* %eax.global-to-local, align 8
  %v2_239cd = inttoptr i32 %v0_239c7 to i32*
  store i32 %v3_239c7, i32* %v2_239cd, align 4
  %v0_239d3 = load i32, i32* @esp, align 4
  %v1_239d3 = add i32 %v0_239d3, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_239d3 = inttoptr i32 %v1_239d3 to i32*
  %v3_239d3 = load i32, i32* %v2_239d3, align 4
  store i32 %v3_239d3, i32* %edx.global-to-local, align 4
  %v1_239d7 = inttoptr i32 %v3_239d3 to i32*
  %v2_239d7 = load i32, i32* %v1_239d7, align 4
  store i32 %v2_239d7, i32* %eax.global-to-local, align 8
  %v1_239d9 = inttoptr i32 %v2_239d7 to i32*
  %v2_239d9 = load i32, i32* %v1_239d9, align 4
  store i32 %v2_239d9, i32* %eax.global-to-local, align 8
  %v2_239db = add i32 %v3_239d3, 4
  %v3_239db = inttoptr i32 %v2_239db to i32*
  %v4_239db = load i32, i32* %v3_239db, align 4
  %v15_239db = icmp eq i32 %v2_239d9, %v4_239db
  store i32 %v2_239d9, i32* %v1_239d7, align 4
  br i1 %v15_239db, label %bb132, label %dec_label_pc_239c7.dec_label_pc_239e6_crit_edge

dec_label_pc_239c7.dec_label_pc_239e6_crit_edge:  ; preds = %dec_label_pc_239c7
  %v0_239e6.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_239e6

bb132:                                            ; preds = %dec_label_pc_239c7
  %v2_239e0 = call i32 @function_23a73(i32 %v3_23825)
  store i32 %v2_239e0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_239e6

dec_label_pc_239e6:                               ; preds = %dec_label_pc_239c7.dec_label_pc_239e6_crit_edge, %bb132
  %v0_239e6 = phi i32 [ %v0_239e6.pre, %dec_label_pc_239c7.dec_label_pc_239e6_crit_edge ], [ %v2_239e0, %bb132 ]
  %v1_239e6 = add i32 %v0_239e6, 8
  %v2_239e6 = inttoptr i32 %v1_239e6 to i32*
  %v3_239e6 = load i32, i32* %v2_239e6, align 4
  store i32 %v3_239e6, i32* %eax.global-to-local, align 8
  %v1_239e9 = icmp eq i32 %v3_239e6, 0
  %v1_239eb = load i32, i32* @esp, align 4
  %v2_239eb = add i32 %v1_239eb, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v3_239eb = inttoptr i32 %v2_239eb to i32*
  store i32 %v3_239e6, i32* %v3_239eb, align 4
  %v1_239ef = icmp eq i1 %v1_239e9, false
  br i1 %v1_239ef, label %dec_label_pc_23838, label %dec_label_pc_239f5

dec_label_pc_239f5:                               ; preds = %dec_label_pc_239e6, %dec_label_pc_23825
  %v0_239f5 = load i32, i32* @esp, align 4
  %v1_239f5 = add i32 %v0_239f5, 12
  %v2_239f5 = inttoptr i32 %v1_239f5 to i32*
  store i32 ptrtoint ([541 x i8]* @global_var_2c560.2749 to i32), i32* %v2_239f5, align 4
  %v0_239fd = load i32, i32* @esp, align 4
  %v1_239fd = add i32 %v0_239fd, 8
  %v2_239fd = inttoptr i32 %v1_239fd to i32*
  store i32 412, i32* %v2_239fd, align 4
  %v0_23a05 = load i32, i32* @esp, align 4
  %v1_23a05 = add i32 %v0_23a05, 4
  %v2_23a05 = inttoptr i32 %v1_23a05 to i32*
  store i32 ptrtoint ([44 x i8]* @global_var_d5d0.2572 to i32), i32* %v2_23a05, align 4
  %v0_23a0d = load i32, i32* @esp, align 4
  %v1_23a0d = inttoptr i32 %v0_23a0d to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_9f6e.2573 to i32), i32* %v1_23a0d, align 4
  %v2_23a0d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_23a0d

; uselistorder directives
  uselistorder i32 %v2_239d9, { 1, 0, 2 }
  uselistorder i32 %v0_239b8, { 2, 1, 0 }
  uselistorder i32 %v1_238a0, { 1, 0, 2 }
  uselistorder i32 %v3_23871, { 1, 0, 2 }
  uselistorder i32 %v0_23871, { 0, 2, 1 }
  uselistorder i32 %v2_23834, { 0, 3, 1, 2 }
  uselistorder i32 %v3_23825, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_23811, { 2, 3, 0, 1, 4 }
  uselistorder i32 %tmp119, { 3, 0, 2, 1, 4 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 9, 10, 2, 11, 12, 13, 14, 1, 15, 16, 17, 18, 5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 19, 20, 21, 22, 23, 4, 33, 0, 8, 6, 3, 7 }
  uselistorder i32 412, { 1, 0 }
  uselistorder i32 108, { 2, 0, 1 }
  uselistorder i32 3, { 16, 0, 1, 2, 3, 4, 5, 6, 11, 12, 13, 17, 18, 19, 20, 21, 7, 8, 9, 10, 14, 15 }
  uselistorder i32 ptrtoint (i32* @global_var_5c.2559 to i32), { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 -4, { 9, 0, 22, 24, 25, 26, 23, 27, 28, 1, 29, 2, 30, 3, 31, 4, 32, 33, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 5, 8, 34, 6, 35, 36, 7, 10, 38, 37, 39, 40, 41, 42, 11, 43, 44, 45, 46, 47 }
  uselistorder i32 ptrtoint (i16** @global_var_4e.2713 to i32), { 0, 2, 1 }
  uselistorder i32 ()* @function_23aa5, { 1, 0 }
  uselistorder i32 (i32)* @function_23a73, { 1, 0, 2 }
  uselistorder label %dec_label_pc_239e6, { 1, 0 }
  uselistorder label %dec_label_pc_239a7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_23968, { 1, 0 }
  uselistorder label %dec_label_pc_23950, { 1, 0 }
  uselistorder label %dec_label_pc_238ac, { 1, 0 }
  uselistorder label %dec_label_pc_23838, { 1, 0 }
}

define i32 @function_23a20() local_unnamed_addr {
dec_label_pc_23a20:
  %v0_23a20 = load i32, i32* @esi, align 4
  %v1_23a20 = add i32 %v0_23a20, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_23a20 = inttoptr i32 %v1_23a20 to i32*
  %v3_23a20 = load i32, i32* %v2_23a20, align 4
  ret i32 %v3_23a20
}

define i32 @function_23a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_23a30:
  %eax.global-to-local = alloca i32, align 4
  %v0_23a30 = load i32, i32* @ecx, align 4
  %v1_23a30 = add i32 %v0_23a30, 48284122
  %v2_23a30 = inttoptr i32 %v1_23a30 to i8*
  %v3_23a30 = load i8, i8* %v2_23a30, align 1
  %v5_23a30 = trunc i32 %v0_23a30 to i8
  %v6_23a30 = add i8 %v3_23a30, %v5_23a30
  store i8 %v6_23a30, i8* %v2_23a30, align 1
  %v0_23a36 = load i32, i32* @edx, align 4
  %v1_23a36 = load i32, i32* @eax, align 8
  %v2_23a36 = sub i32 %v0_23a36, %v1_23a36
  %v0_23a38 = load i32, i32* @ebx, align 4
  %tmp7 = icmp ugt i32 %v0_23a38, %v2_23a36
  br i1 %tmp7, label %dec_label_pc_23a40, label %dec_label_pc_23a6d

dec_label_pc_23a40:                               ; preds = %dec_label_pc_23a30, %dec_label_pc_23a40
  %v0_23a40 = phi i32 [ %v1_23a48, %dec_label_pc_23a40 ], [ %v0_23a38, %dec_label_pc_23a30 ]
  %v1_23a43 = call i32 @unknown_35f60(i32 %v0_23a40)
  store i32 %v1_23a43, i32* %eax.global-to-local, align 8
  %v0_23a48 = load i32, i32* @ebx, align 4
  %v1_23a48 = add i32 %v0_23a48, -12
  store i32 %v1_23a48, i32* @ebx, align 4
  %v10_23a4b = icmp ult i32 %v2_23a36, %v1_23a48
  br i1 %v10_23a4b, label %dec_label_pc_23a40, label %dec_label_pc_23a51

dec_label_pc_23a51:                               ; preds = %dec_label_pc_23a40
  %v0_23a55 = load i32, i32* @esi, align 4
  %v1_23a55 = add i32 %v0_23a55, 132
  %v2_23a55 = inttoptr i32 %v1_23a55 to i32*
  %v3_23a55 = load i32, i32* %v2_23a55, align 4
  store i32 %v3_23a55, i32* %eax.global-to-local, align 8
  %v1_23a5e = load i32, i32* @ebp, align 4
  %v2_23a5e = sub i32 %v3_23a55, %v1_23a5e
  br label %dec_label_pc_23a60

dec_label_pc_23a60:                               ; preds = %dec_label_pc_23a6d, %dec_label_pc_23a51
  %v1_23a60 = phi i32 [ %v0_23a6d, %dec_label_pc_23a6d ], [ %v0_23a55, %dec_label_pc_23a51 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_23a6d ], [ %v2_23a5e, %dec_label_pc_23a51 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v2_23a60 = add i32 %v1_23a60, 132
  %v3_23a60 = inttoptr i32 %v2_23a60 to i32*
  store i32 %storemerge, i32* %v3_23a60, align 4
  %v0_23a68 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23a68

dec_label_pc_23a6d:                               ; preds = %dec_label_pc_23a30
  %v0_23a6d = load i32, i32* @esi, align 4
  br label %dec_label_pc_23a60

; uselistorder directives
  uselistorder i32 %v1_23a48, { 1, 2, 0 }
  uselistorder i32 %v0_23a38, { 1, 0 }
  uselistorder i32 %v2_23a36, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_23a40, { 1, 0 }
}

define i32 @function_23a73(i32 %arg1) local_unnamed_addr {
dec_label_pc_23a73:
  %eax.global-to-local = alloca i32, align 4
  %v1_23a77 = add i32 %arg1, 4
  %v2_23a77 = inttoptr i32 %v1_23a77 to i32*
  %v3_23a77 = load i32, i32* %v2_23a77, align 4
  store i32 %v3_23a77, i32* %eax.global-to-local, align 8
  %v2_23a7a = add i32 %arg1, 12
  %v3_23a7a = inttoptr i32 %v2_23a7a to i32*
  store i32 %v3_23a77, i32* %v3_23a7a, align 4
  %v0_23a7d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23a7d
}

define i32 @function_23a83() local_unnamed_addr {
dec_label_pc_23a83:
  %eax.global-to-local = alloca i32, align 4
  %v0_23a83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23a83
}

define i32 @function_23a8c() local_unnamed_addr {
dec_label_pc_23a8c:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_23a90 = inttoptr i32 %tmp1 to i32*
  %v2_23a90 = load i32, i32* %v1_23a90, align 4
  ret i32 %v2_23a90
}

define i32 @function_23aa0() local_unnamed_addr {
dec_label_pc_23aa0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23aa5() local_unnamed_addr {
dec_label_pc_23aa5:
  %v0_23aa5 = call i32 @function_31b06()
  %v0_23aac = call i32 @function_23a8c()
  ret i32 %v0_23aac
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS5_bSC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23ab0:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %tmp118 = ptrtoint i32* %arg1 to i32
  store i32 %tmp118, i32* @esi, align 4
  %v2_23aca = load i32, i32* %arg1, align 4
  %v2_23acc = add i32 %tmp118, 12
  %v3_23acc = inttoptr i32 %v2_23acc to i32*
  %v4_23acc = load i32, i32* %v3_23acc, align 4
  %v15_23acc = icmp eq i32 %v2_23aca, %v4_23acc
  br i1 %v15_23acc, label %bb, label %dec_label_pc_23ad5

bb:                                               ; preds = %dec_label_pc_23ab0
  %v0_23abe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23acf = call i32 @function_23cb0(i32 %v0_23abe)
  %v1_23ad5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_23ad5

dec_label_pc_23ad5:                               ; preds = %bb, %dec_label_pc_23ab0
  %v1_23ad5 = phi i32 [ %v1_23ad5.pre, %bb ], [ %tmp118, %dec_label_pc_23ab0 ]
  %v0_23ad5 = phi i32 [ %v2_23acf, %bb ], [ %v2_23aca, %dec_label_pc_23ab0 ]
  %v2_23ad5 = add i32 %v1_23ad5, 4
  %v3_23ad5 = inttoptr i32 %v2_23ad5 to i32*
  %v4_23ad5 = load i32, i32* %v3_23ad5, align 4
  %v15_23ad5 = icmp eq i32 %v0_23ad5, %v4_23ad5
  br i1 %v15_23ad5, label %bb125, label %dec_label_pc_23ade

bb125:                                            ; preds = %dec_label_pc_23ad5
  %v1_23ad8 = call i32 @function_23ca3()
  br label %dec_label_pc_23ade

dec_label_pc_23ade:                               ; preds = %bb125, %dec_label_pc_23ad5
  %v0_23ade = phi i32 [ %v1_23ad8, %bb125 ], [ %v0_23ad5, %dec_label_pc_23ad5 ]
  %v1_23ade = add i32 %v0_23ade, 8
  %v2_23ade = inttoptr i32 %v1_23ade to i32*
  %v3_23ade = load i32, i32* %v2_23ade, align 4
  store i32 %v3_23ade, i32* @eax, align 8
  %v1_23ae1 = icmp eq i32 %v3_23ade, 0
  br i1 %v1_23ae1, label %bb126, label %dec_label_pc_23aed

bb126:                                            ; preds = %dec_label_pc_23ade
  %v2_23ae7 = call i32 @function_23e36(i32 0)
  br label %dec_label_pc_23aed

dec_label_pc_23aed:                               ; preds = %bb126, %dec_label_pc_23ade
  %v0_23af9 = load i32, i32* @esi, align 4
  %v1_23af9 = add i32 %v0_23af9, 8
  %v2_23af9 = inttoptr i32 %v1_23af9 to i32*
  %v3_23af9 = load i32, i32* %v2_23af9, align 4
  store i32 %v3_23af9, i32* @edi, align 4
  %v1_23afc = add i32 %v3_23af9, 132
  %v2_23afc = inttoptr i32 %v1_23afc to i32*
  %v3_23afc = load i32, i32* %v2_23afc, align 4
  store i32 %v3_23afc, i32* @ebp, align 4
  %v1_23b02 = icmp eq i32 %v3_23afc, 0
  %v1_23b04 = icmp eq i1 %v1_23b02, false
  br i1 %v1_23b04, label %bb127, label %dec_label_pc_23b0a

bb127:                                            ; preds = %dec_label_pc_23aed
  %v1_23af1 = inttoptr i32 %v3_23ade to i32*
  %v5_23b04 = call i32 @function_23ce8(i32* %v1_23af1)
  %v0_23b0a.pre = load i32, i32* @edi, align 4
  %v0_23b11.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_23b0a

dec_label_pc_23b0a:                               ; preds = %bb127, %dec_label_pc_23aed
  %v0_23b11 = phi i32 [ %v0_23b11.pre, %bb127 ], [ %v0_23af9, %dec_label_pc_23aed ]
  %v0_23b0a = phi i32 [ %v0_23b0a.pre, %bb127 ], [ %v3_23af9, %dec_label_pc_23aed ]
  %v1_23b11 = inttoptr i32 %v0_23b11 to i32*
  %v2_23b11 = load i32, i32* %v1_23b11, align 4
  store i32 %v2_23b11, i32* @eax, align 8
  %v1_23b13 = add i32 %v2_23b11, 8
  %v2_23b13 = inttoptr i32 %v1_23b13 to i32*
  %v3_23b13 = load i32, i32* %v2_23b13, align 4
  store i32 %v3_23b13, i32* @ebx, align 4
  %v1_23b16 = icmp eq i32 %v3_23b13, 0
  br i1 %v1_23b16, label %bb129, label %dec_label_pc_23b1e

bb129:                                            ; preds = %dec_label_pc_23b0a
  %v1_23b0a = add i32 %v0_23b0a, 4
  %v2_23b18 = call i32 @function_23e5a(i32 %v1_23b0a)
  store i32 %v2_23b18, i32* @eax, align 8
  br label %dec_label_pc_23b1e

dec_label_pc_23b1e:                               ; preds = %bb129, %dec_label_pc_23b0a
  %v1_23b1e = add i32 %v3_23b13, 16
  %v2_23b1e = inttoptr i32 %v1_23b1e to i32*
  %v3_23b1e = load i32, i32* %v2_23b1e, align 4
  store i32 %v3_23b1e, i32* %ebp.global-to-local, align 4
  %v2_23b21 = add i32 %v3_23b13, 20
  %v3_23b21 = inttoptr i32 %v2_23b21 to i32*
  %v4_23b21 = load i32, i32* %v3_23b21, align 4
  %v15_23b21 = icmp eq i32 %v3_23b1e, %v4_23b21
  br i1 %v15_23b21, label %bb130, label %dec_label_pc_23b2a

bb130:                                            ; preds = %dec_label_pc_23b1e
  %v1_23b24 = call i32 @function_23c68()
  %v0_23b2a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_23b2a

dec_label_pc_23b2a:                               ; preds = %bb130, %dec_label_pc_23b1e
  %v0_23b2a = phi i32 [ %v0_23b2a.pre, %bb130 ], [ %v3_23b1e, %dec_label_pc_23b1e ]
  %v1_23b34 = inttoptr i32 %v0_23b2a to i32*
  %v2_23b34 = load i32, i32* %v1_23b34, align 4
  %v2_23b38 = ashr i32 %v2_23b34, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_23b3b = xor i32 %v2_23b38, %v2_23b34
  store i32 %v2_23b3b, i32* @eax, align 8
  %tmp133 = icmp ult i32 %v2_23b3b, 20
  br i1 %tmp133, label %bb132, label %dec_label_pc_23b46

bb132:                                            ; preds = %dec_label_pc_23b2a
  %v2_23b2c = ptrtoint i32* %stack_var_-45 to i32
  %v4_23b40 = call i32 @function_23cd0(i32 %v2_23b2c)
  br label %dec_label_pc_23b46

dec_label_pc_23b46:                               ; preds = %bb132, %dec_label_pc_23b2a
  %v3_23b5e = phi i32 [ %v4_23b40, %bb132 ], [ %v2_23b3b, %dec_label_pc_23b2a ]
  ret i32 %v3_23b5e

; uselistorder directives
  uselistorder i32 %v2_23b3b, { 1, 0, 2 }
  uselistorder i32 %v3_23b1e, { 1, 0, 2 }
  uselistorder i32 %v3_23b13, { 1, 0, 2, 3 }
  uselistorder i32 %v0_23ad5, { 1, 0 }
  uselistorder i32 %v2_23aca, { 1, 0 }
}

define i32 @function_23b78() local_unnamed_addr {
dec_label_pc_23b78:
  %v0_23b78 = call i32 @function_442444c7()
  ret i32 %v0_23b78
}

define i32 @function_23b99() local_unnamed_addr {
dec_label_pc_23b99:
  %eax.global-to-local = alloca i32, align 4
  %v0_23b99 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23b99
}

define i32 @function_23bc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_23bc2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23bd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_23bd6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23c58() local_unnamed_addr {
dec_label_pc_23c58:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23c68() local_unnamed_addr {
dec_label_pc_23c68:
  %v0_23c68 = load i32, i32* @ebx, align 4
  %v1_23c68 = add i32 %v0_23c68, 4
  %v2_23c68 = inttoptr i32 %v1_23c68 to i8*
  %v3_23c68 = load i8, i8* %v2_23c68, align 1
  %v10_23c68 = icmp eq i8 %v3_23c68, 0
  br i1 %v10_23c68, label %bb, label %dec_label_pc_23c72

bb:                                               ; preds = %dec_label_pc_23c68
  %v1_23c6c = call i32 @function_23d96()
  %v0_23c72.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_23c72

dec_label_pc_23c72:                               ; preds = %bb, %dec_label_pc_23c68
  %v0_23c72 = phi i32 [ %v0_23c72.pre, %bb ], [ %v0_23c68, %dec_label_pc_23c68 ]
  %v1_23c72 = add i32 %v0_23c72, 12
  %v2_23c72 = inttoptr i32 %v1_23c72 to i32*
  %v3_23c72 = load i32, i32* %v2_23c72, align 4
  %v0_23c75 = load i32, i32* @edi, align 4
  %v1_23c75 = add i32 %v0_23c75, 144
  %v2_23c75 = inttoptr i32 %v1_23c75 to i32*
  %v3_23c75 = load i32, i32* %v2_23c75, align 4
  %v4_23c75 = add i32 %v3_23c75, 1
  store i32 %v4_23c75, i32* %v2_23c75, align 4
  %v1_23c7c = icmp eq i32 %v3_23c72, 0
  br i1 %v1_23c7c, label %dec_label_pc_23c8b, label %dec_label_pc_23c80

dec_label_pc_23c80:                               ; preds = %dec_label_pc_23c72
  %v1_23c80 = add i32 %v3_23c72, 4
  %v2_23c80 = inttoptr i32 %v1_23c80 to i32*
  %v3_23c80 = load i32, i32* %v2_23c80, align 4
  %v1_23c83 = icmp eq i32 %v3_23c80, 0
  %v1_23c85 = icmp eq i1 %v1_23c83, false
  br i1 %v1_23c85, label %bb5, label %dec_label_pc_23c8b

bb5:                                              ; preds = %dec_label_pc_23c80
  %v2_23c85 = call i32 @function_23d9d()
  br label %dec_label_pc_23c8b

dec_label_pc_23c8b:                               ; preds = %bb5, %dec_label_pc_23c80, %dec_label_pc_23c72
  %v2_23c8b = load i32, i32* @esi, align 4
  %v2_23c91 = add i32 %v2_23c8b, 12
  %v3_23c91 = inttoptr i32 %v2_23c91 to i32*
  store i32 %v2_23c8b, i32* %v3_23c91, align 4
  %v0_23c9c = load i32, i32* @esi, align 4
  %v1_23c9c = add i32 %v0_23c9c, 4
  %v2_23c9c = inttoptr i32 %v1_23c9c to i32*
  %v3_23c9c = load i32, i32* %v2_23c9c, align 4
  ret i32 %v3_23c9c

; uselistorder directives
  uselistorder i32 %v2_23c8b, { 1, 0 }
}

define i32 @function_23ca3() local_unnamed_addr {
dec_label_pc_23ca3:
  %eax.global-to-local = alloca i32, align 4
  %v0_23ca3 = load i32, i32* @esi, align 4
  %v1_23ca3 = add i32 %v0_23ca3, 4
  %v2_23ca3 = inttoptr i32 %v1_23ca3 to i32*
  %v3_23ca3 = load i32, i32* %v2_23ca3, align 4
  store i32 %v3_23ca3, i32* %eax.global-to-local, align 8
  %v2_23ca6 = add i32 %v0_23ca3, 12
  %v3_23ca6 = inttoptr i32 %v2_23ca6 to i32*
  store i32 %v3_23ca3, i32* %v3_23ca6, align 4
  %v1_23ca9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v1_23ca9
}

define i32 @function_23cb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_23cb0:
  %v1_23cb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23cb4 = xor i32 %v1_23cb4, %arg1
  %v3_23cb4 = icmp eq i32 %v2_23cb4, 0
  store i32 %v2_23cb4, i32* @eax, align 8
  %v1_23cbb = icmp eq i1 %v3_23cb4, false
  br i1 %v1_23cbb, label %bb, label %dec_label_pc_23cc1

bb:                                               ; preds = %dec_label_pc_23cb0
  %v2_23cbb = call i32 @function_23e5f()
  br label %dec_label_pc_23cc1

dec_label_pc_23cc1:                               ; preds = %bb, %dec_label_pc_23cb0
  %v0_23cc8 = phi i32 [ %v2_23cbb, %bb ], [ %v2_23cb4, %dec_label_pc_23cb0 ]
  ret i32 %v0_23cc8
}

define i32 @function_23cd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_23cd0:
  %v0_23cd0 = load i32, i32* @eax, align 8
  ret i32 %v0_23cd0
}

define i32 @function_23ce8(i32* %arg1) local_unnamed_addr {
dec_label_pc_23ce8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_23ce8 = load i32, i32* @edi, align 4
  %v1_23ce8 = add i32 %v0_23ce8, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_23ce8 = inttoptr i32 %v1_23ce8 to i32*
  %v3_23ce8 = load i32, i32* %v2_23ce8, align 4
  %v0_23cee = load i32, i32* @ebp, align 4
  %v2_23cee = mul i32 %v0_23cee, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_23cee = add i32 %v0_23cee, -3
  %v4_23cee = add i32 %v3_23cee, %v2_23cee
  %v2_23cf2 = mul i32 %v4_23cee, 4
  %v3_23cf2 = add i32 %v2_23cf2, %v3_23ce8
  store i32 %v3_23cf2, i32* %ebx.global-to-local, align 4
  %v3_23cf5 = mul i32 %v0_23cee, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_23cfb = shl i32 %v3_23cf5, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_23cfb = icmp eq i32 %v2_23cfb, 0
  store i32 %v2_23cfb, i32* %eax.global-to-local, align 8
  %v2_23cfe = sub i32 %v3_23cf2, %v2_23cfb
  store i32 %v2_23cfe, i32* %edx.global-to-local, align 4
  %v7_23d00 = icmp ult i32 %v3_23cf2, %v2_23cfe
  %v2_23d06 = or i1 %v3_23cfb, %v7_23d00
  br i1 %v2_23d06, label %dec_label_pc_23d90, label %dec_label_pc_23d10

dec_label_pc_23d10:                               ; preds = %dec_label_pc_23ce8, %dec_label_pc_23d10
  %v0_23d10 = phi i32 [ %v1_23d18, %dec_label_pc_23d10 ], [ %v3_23cf2, %dec_label_pc_23ce8 ]
  %v1_23d13 = call i32 @unknown_36220(i32 %v0_23d10)
  store i32 %v1_23d13, i32* %eax.global-to-local, align 8
  %v0_23d18 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23d18 = add i32 %v0_23d18, -12
  store i32 %v1_23d18, i32* %ebx.global-to-local, align 4
  %v11_23d1b = icmp ult i32 %v2_23cfe, %v1_23d18
  br i1 %v11_23d1b, label %dec_label_pc_23d10, label %dec_label_pc_23d21

dec_label_pc_23d21:                               ; preds = %dec_label_pc_23d10
  %v0_23d21 = load i32, i32* @edi, align 4
  %v1_23d21 = add i32 %v0_23d21, 132
  %v2_23d21 = inttoptr i32 %v1_23d21 to i32*
  %v3_23d21 = load i32, i32* %v2_23d21, align 4
  store i32 %v3_23d21, i32* %eax.global-to-local, align 8
  %v0_23d27 = load i32, i32* @esi, align 4
  %v1_23d27 = add i32 %v0_23d27, 8
  %v2_23d27 = inttoptr i32 %v1_23d27 to i32*
  %v3_23d27 = load i32, i32* %v2_23d27, align 4
  store i32 %v3_23d27, i32* %edx.global-to-local, align 4
  %v1_23d2a = load i32, i32* @ebp, align 4
  %v2_23d2a = sub i32 %v3_23d21, %v1_23d2a
  br label %dec_label_pc_23d2c

dec_label_pc_23d2c:                               ; preds = %dec_label_pc_23d90, %dec_label_pc_23d21
  %v1_23d2c = phi i32 [ %v0_23ce8, %dec_label_pc_23d90 ], [ %v0_23d21, %dec_label_pc_23d21 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_23d90 ], [ %v2_23d2a, %dec_label_pc_23d21 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v2_23d2c = add i32 %v1_23d2c, 132
  %v3_23d2c = inttoptr i32 %v2_23d2c to i32*
  store i32 %storemerge, i32* %v3_23d2c, align 4
  %v0_23d32 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_23d32, i32* @edi, align 4
  %v0_23d34 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23d34

dec_label_pc_23d90:                               ; preds = %dec_label_pc_23ce8
  store i32 %v0_23ce8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_23d2c

; uselistorder directives
  uselistorder i32 %v1_23d18, { 1, 2, 0 }
  uselistorder i32 %v0_23cee, { 0, 2, 1 }
  uselistorder i32 %v0_23ce8, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_23d10, { 1, 0 }
}

define i32 @function_23d96() local_unnamed_addr {
dec_label_pc_23d96:
  %v0_23d96 = load i32, i32* @edi, align 4
  %v1_23d96 = add i32 %v0_23d96, 148
  %v2_23d96 = inttoptr i32 %v1_23d96 to i32*
  %v3_23d96 = load i32, i32* %v2_23d96, align 4
  %v4_23d96 = add i32 %v3_23d96, 1
  store i32 %v4_23d96, i32* %v2_23d96, align 4
  %v22_23d96 = load i32, i32* @eax, align 8
  ret i32 %v22_23d96
}

define i32 @function_23d9d() local_unnamed_addr {
dec_label_pc_23d9d:
  %eax.global-to-local = alloca i32, align 4
  %v2_23da9 = load i32, i32* @esi, align 4
  store i32 %v2_23da9, i32* %eax.global-to-local, align 8
  %v2_23dad = inttoptr i32 %v2_23da9 to i32*
  store i32 %v2_23da9, i32* %v2_23dad, align 4
  %v0_23daf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23daf

; uselistorder directives
  uselistorder i32 %v2_23da9, { 1, 0, 2 }
}

define i32 @function_23db4(i32 %arg1) local_unnamed_addr {
dec_label_pc_23db4:
  store i32 %arg1, i32* @eax, align 8
  %v1_23dcc = call i32 @function_23bc2(i32 0)
  ret i32 %v1_23dcc
}

define i32 @function_23df4() local_unnamed_addr {
dec_label_pc_23df4:
  %v1_23df7 = call i32 @function_23bd6(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_23df7
}

define i32 @function_23dfc() local_unnamed_addr {
dec_label_pc_23dfc:
  %stack_var_80 = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %v0_23e04 = load i32, i32* @edi, align 4
  %v1_23e04 = add i32 %v0_23e04, 4
  %v2_23e04 = inttoptr i32 %v1_23e04 to i32*
  %v3_23e04 = load i32, i32* %v2_23e04, align 4
  %v2_23e07 = ptrtoint i32* %stack_var_96 to i32
  %v2_23e12 = ptrtoint i32* %stack_var_80 to i32
  %v5_23e1a = call i32 @unknown_42420(i32 %v2_23e07, i32 %v2_23e12, i32 %v3_23e04, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  store i32 %v5_23e1a, i32* @eax, align 8
  %v0_23e1f = call i32 @function_23df4()
  ret i32 %v0_23e1f
}

define i32 @function_23e21() local_unnamed_addr {
dec_label_pc_23e21:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %v0_23e21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23e21 = add i32 %v0_23e21, 4
  %v2_23e21 = inttoptr i32 %v1_23e21 to i8*
  store i8 0, i8* %v2_23e21, align 1
  %v2_23e25 = ptrtoint i32* %stack_var_96 to i32
  %v1_23e2c = call i32 @unknown_36220(i32 %v2_23e25)
  store i32 %v1_23e2c, i32* @eax, align 8
  %v0_23e31 = call i32 @function_23c58()
  ret i32 %v0_23e31
}

define i32 @function_23e36(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e36:
  %v3_23e4e = load i32, i32* @eax, align 8
  ret i32 %v3_23e4e
}

define i32 @function_23e5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e5a:
  %v0_23e5a = call i32 @unknown_31dfa()
  ret i32 %v0_23e5a
}

define i32 @function_23e5f() local_unnamed_addr {
dec_label_pc_23e5f:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_23e6a = inttoptr i32 %tmp1 to i32*
  %v2_23e6a = load i32, i32* %v1_23e6a, align 4
  ret i32 %v2_23e6a
}

define i32 @function_23e79() local_unnamed_addr {
dec_label_pc_23e79:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_23e79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23e79 = add i32 %v0_23e79, -1990974380
  %v2_23e79 = inttoptr i32 %v1_23e79 to i32*
  %v3_23e79 = load i32, i32* %v2_23e79, align 4
  %v4_23e79 = sub i32 %v3_23e79, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_23e79, i32* %v2_23e79, align 4
  %v0_23e7f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23e7f
}

define i32 @function_23e80() local_unnamed_addr {
dec_label_pc_23e80:
  %edx.global-to-local = alloca i32, align 4
  %v0_23e80 = load i32, i32* %edx.global-to-local, align 4
  ret i32 %v0_23e80
}

define i32 @function_23e8e() local_unnamed_addr {
dec_label_pc_23e8e:
  %stack_var_96 = alloca i32, align 4
  %v2_23e90 = ptrtoint i32* %stack_var_96 to i32
  %v1_23e97 = call i32 @unknown_36220(i32 %v2_23e90)
  ret i32 %v1_23e97

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36220, { 2, 1, 0 }
}

define i32 @function_23e9e() local_unnamed_addr {
dec_label_pc_23e9e:
  %v3_23eb6 = load i32, i32* @eax, align 8
  ret i32 %v3_23eb6
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviSA_EESG_EEEEEST_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23f20:
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %tmp117, i32* @esi, align 4
  %v2_23f3d = load i32, i32* %arg1, align 4
  %v2_23f3f = add i32 %tmp117, 12
  %v3_23f3f = inttoptr i32 %v2_23f3f to i32*
  %v4_23f3f = load i32, i32* %v3_23f3f, align 4
  %v15_23f3f = icmp eq i32 %v2_23f3d, %v4_23f3f
  br i1 %v15_23f3f, label %bb, label %dec_label_pc_23f48

bb:                                               ; preds = %dec_label_pc_23f20
  %v0_23f31 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23f42 = call i32 @function_24118(i32 %v0_23f31)
  %v1_23f48.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_23f48

dec_label_pc_23f48:                               ; preds = %bb, %dec_label_pc_23f20
  %v1_23f48 = phi i32 [ %v1_23f48.pre, %bb ], [ %tmp117, %dec_label_pc_23f20 ]
  %v0_23f48 = phi i32 [ %v2_23f42, %bb ], [ %v2_23f3d, %dec_label_pc_23f20 ]
  %v2_23f48 = add i32 %v1_23f48, 4
  %v3_23f48 = inttoptr i32 %v2_23f48 to i32*
  %v4_23f48 = load i32, i32* %v3_23f48, align 4
  %v15_23f48 = icmp eq i32 %v0_23f48, %v4_23f48
  br i1 %v15_23f48, label %bb124, label %dec_label_pc_23f51

bb124:                                            ; preds = %dec_label_pc_23f48
  %v1_23f4b = call i32 @function_24110()
  br label %dec_label_pc_23f51

dec_label_pc_23f51:                               ; preds = %bb124, %dec_label_pc_23f48
  %v0_23f51 = phi i32 [ %v1_23f4b, %bb124 ], [ %v0_23f48, %dec_label_pc_23f48 ]
  %v1_23f51 = add i32 %v0_23f51, 8
  %v2_23f51 = inttoptr i32 %v1_23f51 to i32*
  %v3_23f51 = load i32, i32* %v2_23f51, align 4
  store i32 %v3_23f51, i32* @eax, align 8
  %v1_23f54 = icmp eq i32 %v3_23f51, 0
  br i1 %v1_23f54, label %bb125, label %dec_label_pc_23f60

bb125:                                            ; preds = %dec_label_pc_23f51
  %v2_23f5a = call i32 @function_24315(i32 0)
  br label %dec_label_pc_23f60

dec_label_pc_23f60:                               ; preds = %bb125, %dec_label_pc_23f51
  %v0_23f6c = load i32, i32* @esi, align 4
  %v1_23f6c = add i32 %v0_23f6c, 8
  %v2_23f6c = inttoptr i32 %v1_23f6c to i32*
  %v3_23f6c = load i32, i32* %v2_23f6c, align 4
  store i32 %v3_23f6c, i32* @edi, align 4
  %v1_23f6f = add i32 %v3_23f6c, 132
  %v2_23f6f = inttoptr i32 %v1_23f6f to i32*
  %v3_23f6f = load i32, i32* %v2_23f6f, align 4
  store i32 %v3_23f6f, i32* @ebp, align 4
  %v1_23f75 = icmp eq i32 %v3_23f6f, 0
  %v1_23f77 = icmp eq i1 %v1_23f75, false
  br i1 %v1_23f77, label %bb126, label %dec_label_pc_23f7d

bb126:                                            ; preds = %dec_label_pc_23f60
  %v1_23f64 = inttoptr i32 %v3_23f51 to i32*
  %v5_23f77 = call i32 @function_24150(i32* %v1_23f64)
  %v0_23f7d.pre = load i32, i32* @edi, align 4
  %v0_23f84.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_23f7d

dec_label_pc_23f7d:                               ; preds = %bb126, %dec_label_pc_23f60
  %v0_23f84 = phi i32 [ %v0_23f84.pre, %bb126 ], [ %v0_23f6c, %dec_label_pc_23f60 ]
  %v0_23f7d = phi i32 [ %v0_23f7d.pre, %bb126 ], [ %v3_23f6c, %dec_label_pc_23f60 ]
  %v1_23f84 = inttoptr i32 %v0_23f84 to i32*
  %v2_23f84 = load i32, i32* %v1_23f84, align 4
  store i32 %v2_23f84, i32* @eax, align 8
  %v1_23f86 = add i32 %v2_23f84, 8
  %v2_23f86 = inttoptr i32 %v1_23f86 to i32*
  %v3_23f86 = load i32, i32* %v2_23f86, align 4
  store i32 %v3_23f86, i32* @ebp, align 4
  %v1_23f89 = icmp eq i32 %v3_23f86, 0
  br i1 %v1_23f89, label %bb128, label %dec_label_pc_23f91

bb128:                                            ; preds = %dec_label_pc_23f7d
  %v1_23f7d = add i32 %v0_23f7d, 4
  %v2_23f8b = call i32 @function_24308(i32 %v1_23f7d)
  store i32 %v2_23f8b, i32* @eax, align 8
  br label %dec_label_pc_23f91

dec_label_pc_23f91:                               ; preds = %bb128, %dec_label_pc_23f7d
  %v1_23f91 = add i32 %v3_23f86, 16
  %v2_23f91 = inttoptr i32 %v1_23f91 to i32*
  %v3_23f91 = load i32, i32* %v2_23f91, align 4
  %v2_23f94 = add i32 %v3_23f86, 20
  %v3_23f94 = inttoptr i32 %v2_23f94 to i32*
  %v4_23f94 = load i32, i32* %v3_23f94, align 4
  %v15_23f94 = icmp eq i32 %v3_23f91, %v4_23f94
  br i1 %v15_23f94, label %bb129, label %dec_label_pc_23fa1

bb129:                                            ; preds = %dec_label_pc_23f91
  %v2_23f9b = inttoptr i32 %v3_23f91 to i32*
  %v3_23f9b = call i32 @function_240d5(i32* %v2_23f9b)
  %v0_23fa1.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_23fa1

dec_label_pc_23fa1:                               ; preds = %bb129, %dec_label_pc_23f91
  %v0_23fa1 = phi i32 [ %v0_23fa1.pre, %bb129 ], [ %v3_23f91, %dec_label_pc_23f91 ]
  %v1_23fa3 = inttoptr i32 %v0_23fa1 to i32*
  %v2_23fa3 = load i32, i32* %v1_23fa3, align 4
  %v2_23fa7 = ashr i32 %v2_23fa3, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_23faa = xor i32 %v2_23fa7, %v2_23fa3
  store i32 %v2_23faa, i32* @eax, align 8
  %tmp132 = icmp ult i32 %v2_23faa, 20
  br i1 %tmp132, label %bb131, label %dec_label_pc_23fb5

bb131:                                            ; preds = %dec_label_pc_23fa1
  %v3_23faf = call i32 @function_24138()
  br label %dec_label_pc_23fb5

dec_label_pc_23fb5:                               ; preds = %bb131, %dec_label_pc_23fa1
  %v3_23fcd = phi i32 [ %v3_23faf, %bb131 ], [ %v2_23faa, %dec_label_pc_23fa1 ]
  ret i32 %v3_23fcd

; uselistorder directives
  uselistorder i32 %v2_23faa, { 1, 0, 2 }
  uselistorder i32 %v3_23f91, { 1, 2, 0 }
  uselistorder i32 %v3_23f86, { 1, 0, 2, 3 }
  uselistorder i32 %v0_23f48, { 1, 0 }
  uselistorder i32 %v2_23f3d, { 1, 0 }
}

define i32 @function_24006() local_unnamed_addr {
dec_label_pc_24006:
  %eax.global-to-local = alloca i32, align 4
  %v0_24006 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24006
}

define i32 @function_2402f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2402f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24043(i32 %arg1) local_unnamed_addr {
dec_label_pc_24043:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_240c5() local_unnamed_addr {
dec_label_pc_240c5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_240d5(i32* %arg1) local_unnamed_addr {
dec_label_pc_240d5:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v0_240d5 = load i32, i32* @ebp, align 4
  %v1_240d5 = add i32 %v0_240d5, 4
  %v2_240d5 = inttoptr i32 %v1_240d5 to i8*
  %v3_240d5 = load i8, i8* %v2_240d5, align 1
  %v10_240d5 = icmp eq i8 %v3_240d5, 0
  br i1 %v10_240d5, label %bb, label %dec_label_pc_240df

bb:                                               ; preds = %dec_label_pc_240d5
  %v1_240d9 = call i32 @function_241fe()
  %v0_240df.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_240df

dec_label_pc_240df:                               ; preds = %bb, %dec_label_pc_240d5
  %v0_240df = phi i32 [ %v0_240df.pre, %bb ], [ %v0_240d5, %dec_label_pc_240d5 ]
  %v1_240df = add i32 %v0_240df, 12
  %v2_240df = inttoptr i32 %v1_240df to i32*
  %v3_240df = load i32, i32* %v2_240df, align 4
  %v0_240e2 = load i32, i32* @edi, align 4
  %v1_240e2 = add i32 %v0_240e2, 140
  %v2_240e2 = inttoptr i32 %v1_240e2 to i32*
  %v3_240e2 = load i32, i32* %v2_240e2, align 4
  %v4_240e2 = add i32 %v3_240e2, 1
  store i32 %v4_240e2, i32* %v2_240e2, align 4
  %v1_240e9 = icmp eq i32 %v3_240df, 0
  br i1 %v1_240e9, label %dec_label_pc_240f8, label %dec_label_pc_240ed

dec_label_pc_240ed:                               ; preds = %dec_label_pc_240df
  %v1_240ed = add i32 %v3_240df, 4
  %v2_240ed = inttoptr i32 %v1_240ed to i32*
  %v3_240ed = load i32, i32* %v2_240ed, align 4
  %v1_240f0 = icmp eq i32 %v3_240ed, 0
  %v1_240f2 = icmp eq i1 %v1_240f0, false
  br i1 %v1_240f2, label %bb6, label %dec_label_pc_240f8

bb6:                                              ; preds = %dec_label_pc_240ed
  %v2_240f2 = call i32 @function_24205()
  br label %dec_label_pc_240f8

dec_label_pc_240f8:                               ; preds = %bb6, %dec_label_pc_240ed, %dec_label_pc_240df
  %v2_240f8 = load i32, i32* @esi, align 4
  store i32 %tmp5, i32* @edx, align 4
  %v2_240fe = add i32 %v2_240f8, 12
  %v3_240fe = inttoptr i32 %v2_240fe to i32*
  store i32 %v2_240f8, i32* %v3_240fe, align 4
  %v0_24109 = load i32, i32* @esi, align 4
  %v1_24109 = add i32 %v0_24109, 4
  %v2_24109 = inttoptr i32 %v1_24109 to i32*
  %v3_24109 = load i32, i32* %v2_24109, align 4
  ret i32 %v3_24109

; uselistorder directives
  uselistorder i32 %v2_240f8, { 1, 0 }
}

define i32 @function_24110() local_unnamed_addr {
dec_label_pc_24110:
  %eax.global-to-local = alloca i32, align 4
  %v0_24110 = load i32, i32* @esi, align 4
  %v1_24110 = add i32 %v0_24110, 4
  %v2_24110 = inttoptr i32 %v1_24110 to i32*
  %v3_24110 = load i32, i32* %v2_24110, align 4
  store i32 %v3_24110, i32* %eax.global-to-local, align 8
  %v2_24113 = add i32 %v0_24110, 12
  %v3_24113 = inttoptr i32 %v2_24113 to i32*
  store i32 %v3_24110, i32* %v3_24113, align 4
  %v0_24116 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24116
}

define i32 @function_24118(i32 %arg1) local_unnamed_addr {
dec_label_pc_24118:
  %v1_2411c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2411c = xor i32 %v1_2411c, %arg1
  %v3_2411c = icmp eq i32 %v2_2411c, 0
  store i32 %v2_2411c, i32* @eax, align 8
  %v1_24123 = icmp eq i1 %v3_2411c, false
  br i1 %v1_24123, label %bb, label %dec_label_pc_24129

bb:                                               ; preds = %dec_label_pc_24118
  %v2_24123 = call i32 @function_2430d()
  br label %dec_label_pc_24129

dec_label_pc_24129:                               ; preds = %bb, %dec_label_pc_24118
  %v0_24133 = phi i32 [ %v2_24123, %bb ], [ %v2_2411c, %dec_label_pc_24118 ]
  ret i32 %v0_24133
}

define i32 @function_24138() local_unnamed_addr {
dec_label_pc_24138:
  %v0_24138 = load i32, i32* @eax, align 8
  ret i32 %v0_24138
}

define i32 @function_24150(i32* %arg1) local_unnamed_addr {
dec_label_pc_24150:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_24150 = load i32, i32* @edi, align 4
  %v1_24150 = add i32 %v0_24150, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_24150 = inttoptr i32 %v1_24150 to i32*
  %v3_24150 = load i32, i32* %v2_24150, align 4
  %v0_24156 = load i32, i32* @ebp, align 4
  %v2_24156 = mul i32 %v0_24156, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_24156 = add i32 %v0_24156, -3
  %v4_24156 = add i32 %v3_24156, %v2_24156
  %v2_2415a = mul i32 %v4_24156, 4
  %v3_2415a = add i32 %v2_2415a, %v3_24150
  store i32 %v3_2415a, i32* %ebx.global-to-local, align 4
  %v3_2415d = mul i32 %v0_24156, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_24163 = shl i32 %v3_2415d, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_24163 = icmp eq i32 %v2_24163, 0
  store i32 %v2_24163, i32* %eax.global-to-local, align 8
  %v2_24166 = sub i32 %v3_2415a, %v2_24163
  store i32 %v2_24166, i32* %edx.global-to-local, align 4
  %v7_24168 = icmp ult i32 %v3_2415a, %v2_24166
  %v2_2416e = or i1 %v3_24163, %v7_24168
  br i1 %v2_2416e, label %dec_label_pc_241f8, label %dec_label_pc_24178

dec_label_pc_24178:                               ; preds = %dec_label_pc_24150, %dec_label_pc_24178
  %v0_24178 = phi i32 [ %v1_24180, %dec_label_pc_24178 ], [ %v3_2415a, %dec_label_pc_24150 ]
  %v1_2417b = call i32 @unknown_36690(i32 %v0_24178)
  store i32 %v1_2417b, i32* %eax.global-to-local, align 8
  %v0_24180 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24180 = add i32 %v0_24180, -12
  store i32 %v1_24180, i32* %ebx.global-to-local, align 4
  %v11_24183 = icmp ult i32 %v2_24166, %v1_24180
  br i1 %v11_24183, label %dec_label_pc_24178, label %dec_label_pc_24189

dec_label_pc_24189:                               ; preds = %dec_label_pc_24178
  %v0_24189 = load i32, i32* @edi, align 4
  %v1_24189 = add i32 %v0_24189, 132
  %v2_24189 = inttoptr i32 %v1_24189 to i32*
  %v3_24189 = load i32, i32* %v2_24189, align 4
  store i32 %v3_24189, i32* %eax.global-to-local, align 8
  %v0_2418f = load i32, i32* @esi, align 4
  %v1_2418f = add i32 %v0_2418f, 8
  %v2_2418f = inttoptr i32 %v1_2418f to i32*
  %v3_2418f = load i32, i32* %v2_2418f, align 4
  store i32 %v3_2418f, i32* %edx.global-to-local, align 4
  %v1_24192 = load i32, i32* @ebp, align 4
  %v2_24192 = sub i32 %v3_24189, %v1_24192
  br label %dec_label_pc_24194

dec_label_pc_24194:                               ; preds = %dec_label_pc_241f8, %dec_label_pc_24189
  %v1_24194 = phi i32 [ %v0_24150, %dec_label_pc_241f8 ], [ %v0_24189, %dec_label_pc_24189 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_241f8 ], [ %v2_24192, %dec_label_pc_24189 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v2_24194 = add i32 %v1_24194, 132
  %v3_24194 = inttoptr i32 %v2_24194 to i32*
  store i32 %storemerge, i32* %v3_24194, align 4
  %v0_2419a = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_2419a, i32* @edi, align 4
  %v0_2419c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2419c

dec_label_pc_241f8:                               ; preds = %dec_label_pc_24150
  store i32 %v0_24150, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_24194

; uselistorder directives
  uselistorder i32 %v1_24180, { 1, 2, 0 }
  uselistorder i32 %v0_24156, { 0, 2, 1 }
  uselistorder i32 %v0_24150, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_24178, { 1, 0 }
}

define i32 @function_241fe() local_unnamed_addr {
dec_label_pc_241fe:
  %v0_241fe = load i32, i32* @edi, align 4
  %v1_241fe = add i32 %v0_241fe, 144
  %v2_241fe = inttoptr i32 %v1_241fe to i32*
  %v3_241fe = load i32, i32* %v2_241fe, align 4
  %v4_241fe = add i32 %v3_241fe, 1
  store i32 %v4_241fe, i32* %v2_241fe, align 4
  %v22_241fe = load i32, i32* @eax, align 8
  ret i32 %v22_241fe
}

define i32 @function_24205() local_unnamed_addr {
dec_label_pc_24205:
  %eax.global-to-local = alloca i32, align 4
  %v2_24211 = load i32, i32* @esi, align 4
  store i32 %v2_24211, i32* %eax.global-to-local, align 8
  %v2_24215 = inttoptr i32 %v2_24211 to i32*
  store i32 %v2_24211, i32* %v2_24215, align 4
  %v0_24217 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24217

; uselistorder directives
  uselistorder i32 %v2_24211, { 1, 0, 2 }
}

define i32 @function_2421c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2421c:
  store i32 %arg1, i32* @eax, align 8
  %v1_24234 = call i32 @function_2402f(i32 0)
  ret i32 %v1_24234
}

define i32 @function_24239() local_unnamed_addr {
dec_label_pc_24239:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_88 = alloca i32, align 4
  %v0_24239 = load i32, i32* %edi.global-to-local, align 4
  %v1_24239 = add i32 %v0_24239, 4
  %v2_24239 = inttoptr i32 %v1_24239 to i32*
  %v3_24239 = load i32, i32* %v2_24239, align 4
  %v1_24244 = add i32 %v3_24239, 4
  %v2_24244 = inttoptr i32 %v1_24244 to i32*
  %v3_24244 = load i32, i32* %v2_24244, align 4
  %v1_24247 = icmp eq i32 %v3_24244, 0
  store i32 %v3_24244, i32* %stack_var_88, align 4
  br i1 %v1_24247, label %bb, label %dec_label_pc_24253

bb:                                               ; preds = %dec_label_pc_24239
  %v3_2424d = call i32 @function_242e1(i32 0, i32 0)
  br label %dec_label_pc_24253

dec_label_pc_24253:                               ; preds = %bb, %dec_label_pc_24239
  %v1_24253 = add i32 %v3_24244, 4
  %v2_24253 = inttoptr i32 %v1_24253 to i32*
  %v3_24253 = load i32, i32* %v2_24253, align 4
  store i32 %v3_24253, i32* @eax, align 8
  br label %dec_label_pc_24256

dec_label_pc_24256:                               ; preds = %dec_label_pc_2425a, %dec_label_pc_24253
  %v0_2425a = phi i32 [ %v3_2425d, %dec_label_pc_2425a ], [ %v3_24253, %dec_label_pc_24253 ]
  %v1_24256 = icmp eq i32 %v0_2425a, 0
  br i1 %v1_24256, label %bb111, label %dec_label_pc_2425a

dec_label_pc_2425a:                               ; preds = %dec_label_pc_24256
  %v1_2425c = add i32 %v0_2425a, 1
  %v3_2425d = load i32, i32* %v2_24253, align 4
  %v16_2425d = icmp eq i32 %v0_2425a, %v3_2425d
  %v23_2425d = select i1 %v16_2425d, i32 %v1_2425c, i32 %v3_2425d
  store i32 %v23_2425d, i32* %v2_24253, align 4
  store i32 %v3_2425d, i32* @eax, align 8
  %v1_24262 = icmp eq i1 %v16_2425d, false
  br i1 %v1_24262, label %dec_label_pc_24256, label %dec_label_pc_24264

dec_label_pc_24264:                               ; preds = %dec_label_pc_2425a
  br label %dec_label_pc_24268

bb111:                                            ; preds = %dec_label_pc_24256
  %v1_24266 = call i32 @function_242d9()
  br label %dec_label_pc_24268

dec_label_pc_24268:                               ; preds = %dec_label_pc_24264, %bb111
  %v3_24276 = load i32, i32* %v2_24253, align 4
  %v4_24276 = add i32 %v3_24276, 1
  store i32 %v4_24276, i32* %v2_24253, align 4
  %v2_2427a = ptrtoint i32* %stack_var_88 to i32
  %v1_24289 = call i32 @unknown_34460(i32 %v2_2427a)
  store i32 %v1_24289, i32* @eax, align 8
  %v1_2428e = call i32 @function_24043(i32 %v2_2427a)
  ret i32 %v1_2428e

; uselistorder directives
  uselistorder i32 %v2_2427a, { 1, 0 }
  uselistorder i32 %v3_2425d, { 0, 3, 1, 2 }
  uselistorder i32* %v2_24253, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_24268, { 1, 0 }
}

define i32 @function_24293() local_unnamed_addr {
dec_label_pc_24293:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_24295 = load i32, i32* @eax, align 8
  %v1_24295 = icmp eq i32 %v0_24295, 0
  br i1 %v1_24295, label %bb, label %dec_label_pc_2429d

bb:                                               ; preds = %dec_label_pc_24293
  %v1_24297 = call i32 @function_2435f()
  br label %dec_label_pc_2429d

dec_label_pc_2429d:                               ; preds = %bb, %dec_label_pc_24293
  %v1_242d4 = call i32 @function_24043(i32 %tmp6)
  ret i32 %v1_242d4
}

define i32 @function_242d9() local_unnamed_addr {
dec_label_pc_242d9:
  %v3_242d9 = load i32, i32* @eax, align 8
  ret i32 %v3_242d9
}

define i32 @function_242e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242e1:
  ret i32 %arg1
}

define i32 @function_242f3() local_unnamed_addr {
dec_label_pc_242f3:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_112 = alloca i32, align 4
  %v0_242f3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_242f3 = add i32 %v0_242f3, 4
  %v2_242f3 = inttoptr i32 %v1_242f3 to i8*
  store i8 0, i8* %v2_242f3, align 1
  %v2_242f7 = ptrtoint i32* %stack_var_112 to i32
  %v1_242fe = call i32 @unknown_36690(i32 %v2_242f7)
  store i32 %v1_242fe, i32* @eax, align 8
  %v0_24303 = call i32 @function_240c5()
  ret i32 %v0_24303
}

define i32 @function_24308(i32 %arg1) local_unnamed_addr {
dec_label_pc_24308:
  %v0_24308 = call i32 @function_3236e()
  ret i32 %v0_24308
}

define i32 @function_2430d() local_unnamed_addr {
dec_label_pc_2430d:
  %v1_2430d = load i32, i32* @eax, align 8
  ret i32 %v1_2430d
}

define i32 @function_24315(i32 %arg1) local_unnamed_addr {
dec_label_pc_24315:
  %v3_2432d = load i32, i32* @eax, align 8
  ret i32 %v3_2432d
}

define i32 @function_24338() local_unnamed_addr {
dec_label_pc_24338:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_24338 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24338 = add i32 %v0_24338, -1989925804
  %v2_24338 = inttoptr i32 %v1_24338 to i32*
  %v3_24338 = load i32, i32* %v2_24338, align 4
  %v4_24338 = sub i32 %v3_24338, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_24338, i32* %v2_24338, align 4
  %v0_2433e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2433e
}

define i32 @function_2434b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2434b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2435f() local_unnamed_addr {
dec_label_pc_2435f:
  %v3_24377 = load i32, i32* @eax, align 8
  ret i32 %v3_24377
}

define i32 @function_24382() local_unnamed_addr {
dec_label_pc_24382:
  %ecx.global-to-local = alloca i32, align 4
  %v0_24382 = load i32, i32* %ecx.global-to-local, align 4
  %v1_24382 = add i32 %v0_24382, 605850054
  %v2_24382 = inttoptr i32 %v1_24382 to i32*
  %v3_24382 = load i32, i32* %v2_24382, align 4
  %v4_24382 = add i32 %v3_24382, -1
  store i32 %v4_24382, i32* %v2_24382, align 4
  %v1_2438a = call i32 @unknown_36690(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_2438a, i32* @eax, align 8
  %v1_2438f = call i32 @function_2434b(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_2438f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36690, { 2, 1, 0 }
}

define i32 @function_24391() local_unnamed_addr {
dec_label_pc_24391:
  %v1_24393 = call i32 @function_2434b(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_24393
}

define i32 @function_24395(i32* %arg1) local_unnamed_addr {
dec_label_pc_24395:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_2439b = icmp eq i32* %arg1, null
  br i1 %v1_2439b, label %bb, label %dec_label_pc_2439f

bb:                                               ; preds = %dec_label_pc_24395
  %v2_2439d = call i32 @function_2434b(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_2439f

dec_label_pc_2439f:                               ; preds = %bb, %dec_label_pc_24395
  %v2_2439f = load i32, i32* %arg1, align 4
  store i32 %v2_2439f, i32* @eax, align 8
  %v1_243a7 = call i32 @function_2434b(i32 %tmp99)
  ret i32 %v1_243a7

; uselistorder directives
  uselistorder i32 (i32)* @function_2434b, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24400:
  %v1_2444d = add i32 %arg2, 12
  ret i32 %v1_2444d
}

define i32 @function_24487(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24487:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24499() local_unnamed_addr {
dec_label_pc_24499:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_245e8() local_unnamed_addr {
dec_label_pc_245e8:
  %v0_245e8 = call i32 @function_8b0245f4()
  ret i32 %v0_245e8
}

define i32 @function_24600(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24600:
  %v0_24600 = load i32, i32* @ebx, align 4
  %v1_24600 = add i32 %v0_24600, 8398012
  %v2_24600 = inttoptr i32 %v1_24600 to i8*
  %v3_24600 = load i8, i8* %v2_24600, align 1
  %v4_24600 = load i32, i32* @ecx, align 4
  %v5_24600 = trunc i32 %v4_24600 to i8
  %v6_24600 = add i8 %v5_24600, %v3_24600
  store i8 %v6_24600, i8* %v2_24600, align 1
  %v2_24606 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_24606 = load i32, i32* @eax, align 8
  %v4_24606 = trunc i32 %v3_24606 to i8
  %v5_24606 = add i8 %v4_24606, %v2_24606
  %v21_24606 = inttoptr i32 %v3_24606 to i8*
  store i8 %v5_24606, i8* %v21_24606, align 1
  %v0_24608 = load i32, i32* @eax, align 8
  %v4_2460c = ptrtoint i8* %arg1 to i32
  %v0_24610 = load i32, i32* @edx, align 4
  store i8 0, i8* %arg1, align 1
  %v1_2461e = add i32 %v4_2460c, 4
  %v4_24629 = load i32, i32* @edi, align 4
  %v15_24629 = icmp eq i32 %v0_24610, %v4_24629
  br i1 %v15_24629, label %bb, label %dec_label_pc_24633

bb:                                               ; preds = %dec_label_pc_24600
  %v2_2462d = call i32 @function_24bd6(i32 %arg2)
  br label %dec_label_pc_24633

dec_label_pc_24633:                               ; preds = %bb, %dec_label_pc_24600
  %v2_24633 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_24633 = icmp eq i8 %v2_24633, 0
  br i1 %v9_24633, label %bb29, label %dec_label_pc_2463f

bb29:                                             ; preds = %dec_label_pc_24633
  %v1_24639 = call i32 @function_24778()
  br label %dec_label_pc_2463f

dec_label_pc_2463f:                               ; preds = %bb29, %dec_label_pc_24633
  store i32 %v4_2460c, i32* @eax, align 8
  %v2_24643 = load i8, i8* %arg1, align 1
  %v9_24643 = icmp eq i8 %v2_24643, 0
  %v1_24646 = icmp eq i1 %v9_24643, false
  br i1 %v1_24646, label %bb30, label %dec_label_pc_2464c

bb30:                                             ; preds = %dec_label_pc_2463f
  %v2_24646 = call i32 @function_248a0()
  br label %dec_label_pc_2464c

dec_label_pc_2464c:                               ; preds = %bb30, %dec_label_pc_2463f
  store i32 %v4_2460c, i32* @eax, align 8
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %arg1, align 1
  %v0_24665 = load i32, i32* @edi, align 4
  %v15_24665 = icmp eq i32 %v0_24665, %arg2
  br i1 %v15_24665, label %bb31, label %dec_label_pc_2466f

bb31:                                             ; preds = %dec_label_pc_2464c
  %v3_24669 = call i32 @function_248c0(i32 %v1_2461e)
  store i32 %v3_24669, i32* @eax, align 8
  %v4_2466f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_2466f

dec_label_pc_2466f:                               ; preds = %bb31, %dec_label_pc_2464c
  %v4_2466f = phi i32 [ %v4_2466f.pre, %bb31 ], [ %v0_24665, %dec_label_pc_2464c ]
  %v15_2466f = icmp eq i32 %v0_24608, %v4_2466f
  br i1 %v15_2466f, label %bb32, label %dec_label_pc_24679

bb32:                                             ; preds = %dec_label_pc_2466f
  %v3_24673 = call i32 @function_24ac8(i32 %v1_2461e)
  store i32 %v3_24673, i32* @eax, align 8
  %v0_24679.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_24679

dec_label_pc_24679:                               ; preds = %bb32, %dec_label_pc_2466f
  %v0_24679 = phi i32 [ %v0_24679.pre, %bb32 ], [ %v4_2466f, %dec_label_pc_2466f ]
  %v1_24679 = add i32 %v0_24679, 8
  %v2_24679 = inttoptr i32 %v1_24679 to i32*
  %v3_24679 = load i32, i32* %v2_24679, align 4
  %v1_2467c = icmp eq i32 %v3_24679, 0
  br i1 %v1_2467c, label %bb33, label %dec_label_pc_24688

bb33:                                             ; preds = %dec_label_pc_24679
  %v2_24682 = call i32 @function_24cb6(i32 0)
  br label %dec_label_pc_24688

dec_label_pc_24688:                               ; preds = %bb33, %dec_label_pc_24679
  %v0_2469b = load i32, i32* @esi, align 4
  %v1_2469b = add i32 %v0_2469b, 136
  %v2_2469b = inttoptr i32 %v1_2469b to i32*
  %v3_2469b = load i32, i32* %v2_2469b, align 4
  store i32 %v3_2469b, i32* @eax, align 8
  %v1_246a1 = icmp eq i32 %v3_2469b, 0
  %v1_246a7 = icmp eq i1 %v1_246a1, false
  br i1 %v1_246a7, label %bb34, label %dec_label_pc_246a9

bb34:                                             ; preds = %dec_label_pc_24688
  %v4_246a7 = call i32 @function_24728(i32 %v3_24679)
  br label %dec_label_pc_246a9

dec_label_pc_246a9:                               ; preds = %bb34, %dec_label_pc_24688
  %v0_246a9 = load i32, i32* @edi, align 4
  %v1_246a9 = add i32 %v0_246a9, 8
  %v2_246a9 = inttoptr i32 %v1_246a9 to i32*
  %v3_246a9 = load i32, i32* %v2_246a9, align 4
  store i32 %v3_246a9, i32* @eax, align 8
  %v1_246ac = icmp eq i32 %v3_246a9, 0
  br i1 %v1_246ac, label %bb35, label %dec_label_pc_246b8

bb35:                                             ; preds = %dec_label_pc_246a9
  %v2_246b2 = call i32 @function_24df9(i32 0)
  br label %dec_label_pc_246b8

dec_label_pc_246b8:                               ; preds = %bb35, %dec_label_pc_246a9
  store i32 %v3_246a9, i32* @eax, align 8
  %v1_246c0 = add i32 %v3_246a9, 16
  %v2_246c0 = inttoptr i32 %v1_246c0 to i32*
  %v3_246c0 = load i32, i32* %v2_246c0, align 4
  %v2_246c3 = add i32 %v3_246a9, 20
  %v3_246c3 = inttoptr i32 %v2_246c3 to i32*
  %v4_246c3 = load i32, i32* %v3_246c3, align 4
  %v15_246c3 = icmp eq i32 %v3_246c0, %v4_246c3
  br i1 %v15_246c3, label %bb36, label %dec_label_pc_246d0

bb36:                                             ; preds = %dec_label_pc_246b8
  %v2_246ca = call i32 @function_24a87(i32 %v3_246c0)
  %v0_246d0.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_246d0

dec_label_pc_246d0:                               ; preds = %bb36, %dec_label_pc_246b8
  %v0_246d0 = phi i32 [ %v0_246d0.pre, %bb36 ], [ %v3_246c0, %dec_label_pc_246b8 ]
  %v1_246d8 = inttoptr i32 %v0_246d0 to i32*
  %v2_246d8 = load i32, i32* %v1_246d8, align 4
  %v2_246dc = ashr i32 %v2_246d8, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_246df = xor i32 %v2_246dc, %v2_246d8
  store i32 %v2_246df, i32* @eax, align 8
  %tmp39 = icmp ult i32 %v2_246df, 20
  br i1 %tmp39, label %bb38, label %dec_label_pc_246e6

bb38:                                             ; preds = %dec_label_pc_246d0
  %v4_246e4 = call i32 @function_24710(i32 %v0_246d0)
  br label %dec_label_pc_246e6

dec_label_pc_246e6:                               ; preds = %bb38, %dec_label_pc_246d0
  %v3_246fe = phi i32 [ %v4_246e4, %bb38 ], [ %v2_246df, %dec_label_pc_246d0 ]
  ret i32 %v3_246fe

; uselistorder directives
  uselistorder i32 %v2_246df, { 1, 0, 2 }
  uselistorder i32 %v0_246d0, { 1, 0 }
  uselistorder i32 %v3_246c0, { 1, 2, 0 }
  uselistorder i32 %v3_246a9, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_2466f, { 1, 0 }
  uselistorder i32 %v0_24665, { 1, 0 }
  uselistorder i32 %v1_2461e, { 1, 0 }
  uselistorder i32 %v4_2460c, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
}

define i32 @function_24710(i32 %arg1) local_unnamed_addr {
dec_label_pc_24710:
  %v0_24710 = load i32, i32* @eax, align 8
  ret i32 %v0_24710
}

define i32 @function_24728(i32 %arg1) local_unnamed_addr {
dec_label_pc_24728:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_24728 = load i32, i32* @esi, align 4
  %v1_24728 = add i32 %v0_24728, 132
  %v2_24728 = inttoptr i32 %v1_24728 to i32*
  %v3_24728 = load i32, i32* %v2_24728, align 4
  %v0_2472e = load i32, i32* @eax, align 8
  %v2_2472e = mul i32 %v0_2472e, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_2472e = add i32 %v0_2472e, -3
  %v4_2472e = add i32 %v3_2472e, %v2_2472e
  %v3_24732 = mul i32 %v0_2472e, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_24735 = shl i32 %v3_24732, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_24735 = icmp eq i32 %v2_24735, 0
  store i32 %v2_24735, i32* %eax.global-to-local, align 8
  %v2_24738 = mul i32 %v4_2472e, 4
  %v3_24738 = add i32 %v2_24738, %v3_24728
  store i32 %v3_24738, i32* %ebx.global-to-local, align 4
  %v2_2473d = sub i32 %v3_24738, %v2_24735
  %v7_2473f = icmp ult i32 %v3_24738, %v2_2473d
  %v2_24745 = or i1 %v3_24735, %v7_2473f
  br i1 %v2_24745, label %bb, label %dec_label_pc_24750

bb:                                               ; preds = %dec_label_pc_24728
  %v5_24745 = call i32 @function_24bcf(i32 %v2_2473d)
  store i32 %v5_24745, i32* %eax.global-to-local, align 8
  %v0_24750.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_24750

dec_label_pc_24750:                               ; preds = %dec_label_pc_24728, %bb, %dec_label_pc_24750
  %v0_24750 = phi i32 [ %v1_24758, %dec_label_pc_24750 ], [ %v3_24738, %dec_label_pc_24728 ], [ %v0_24750.pre.pre, %bb ]
  %v1_24753 = call i32 @unknown_36b70(i32 %v0_24750)
  store i32 %v1_24753, i32* %eax.global-to-local, align 8
  %v0_24758 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24758 = add i32 %v0_24758, -12
  store i32 %v1_24758, i32* %ebx.global-to-local, align 4
  %v11_2475b = icmp ult i32 %v2_2473d, %v1_24758
  br i1 %v11_2475b, label %dec_label_pc_24750, label %dec_label_pc_24761

dec_label_pc_24761:                               ; preds = %dec_label_pc_24750
  %v0_24761 = load i32, i32* @esi, align 4
  %v1_24761 = add i32 %v0_24761, 136
  %v2_24761 = inttoptr i32 %v1_24761 to i32*
  %v3_24761 = load i32, i32* %v2_24761, align 4
  %v5_24767 = sub i32 %v3_24761, %arg1
  store i32 %v5_24767, i32* %eax.global-to-local, align 8
  store i32 %v5_24767, i32* %v2_24761, align 4
  %v0_24771 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24771

; uselistorder directives
  uselistorder i32 %v1_24758, { 1, 2, 0 }
  uselistorder i32 %v0_2472e, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_24750, { 2, 1, 0 }
}

define i32 @function_24778() local_unnamed_addr {
dec_label_pc_24778:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_204 = alloca i32, align 4
  %stack_var_208 = alloca i32, align 4
  %v0_24778 = load i32, i32* @esi, align 4
  %v1_24778 = add i32 %v0_24778, 140
  %v2_24778 = inttoptr i32 %v1_24778 to i32*
  %v3_24778 = load i32, i32* %v2_24778, align 4
  %v1_2477e = inttoptr i32 %v3_24778 to i32*
  %v2_2477e = load i32, i32* %v1_2477e, align 4
  store i32 %v2_2477e, i32* %ecx.global-to-local, align 4
  %v0_24780 = load i32, i32* @edi, align 4
  %v1_24780 = add i32 %v0_24780, 8
  %v2_24780 = inttoptr i32 %v1_24780 to i32*
  %v3_24780 = load i32, i32* %v2_24780, align 4
  store i32 %v3_24780, i32* @eax, align 8
  %v1_24783 = icmp eq i32 %v3_24780, 0
  br i1 %v1_24783, label %bb, label %dec_label_pc_2478b

bb:                                               ; preds = %dec_label_pc_24778
  %v2_24785 = call i32 @function_24df9(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_2478b

dec_label_pc_2478b:                               ; preds = %bb, %dec_label_pc_24778
  %v0_2478b = phi i32 [ %v2_24785, %bb ], [ %v3_24780, %dec_label_pc_24778 ]
  %v1_2478b = add i32 %v0_2478b, 28
  %v2_2478b = inttoptr i32 %v1_2478b to i32*
  %v3_2478b = load i32, i32* %v2_2478b, align 4
  %v1_2478e = icmp eq i32 %v3_2478b, 0
  br i1 %v1_2478e, label %bb9, label %dec_label_pc_24796

bb9:                                              ; preds = %dec_label_pc_2478b
  %v1_24790 = call i32 @function_24fa5()
  br label %dec_label_pc_24796

dec_label_pc_24796:                               ; preds = %bb9, %dec_label_pc_2478b
  %v0_24796 = phi i32 [ %v1_24790, %bb9 ], [ %v0_2478b, %dec_label_pc_2478b ]
  %v2_247a0 = ptrtoint i32* %stack_var_208 to i32
  store i32 %v2_247a0, i32* @eax, align 8
  %v2_247b4 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_247b4 = icmp eq i8 %v2_247b4, 0
  %v1_247b7 = icmp eq i1 %v9_247b4, false
  br i1 %v1_247b7, label %bb10, label %dec_label_pc_247bd

bb10:                                             ; preds = %dec_label_pc_24796
  %v0_247a7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_24796 = add i32 %v0_24796, 32
  %v5_247b7 = call i32 @function_24ae8(i32 %v2_247a0, i32 %v1_24796, i32 %v0_247a7)
  br label %dec_label_pc_247bd

dec_label_pc_247bd:                               ; preds = %bb10, %dec_label_pc_24796
  %v2_247bd = ptrtoint i32* %stack_var_204 to i32
  ret i32 %v2_247bd

; uselistorder directives
  uselistorder i32 (i32)* @function_24df9, { 1, 0 }
}

define i32 @function_247d6() local_unnamed_addr {
dec_label_pc_247d6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24811() local_unnamed_addr {
dec_label_pc_24811:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_204 = alloca i32, align 4
  %v0_24811 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24811 = add i32 %v0_24811, 182
  %v2_24811 = inttoptr i32 %v1_24811 to i32*
  %v3_24811 = load i32, i32* %v2_24811, align 4
  %v4_24811 = add i32 %v3_24811, -1
  store i32 %v4_24811, i32* %v2_24811, align 4
  %v0_24817 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24817 = add i32 %v0_24817, -125631424
  %v2_24817 = inttoptr i32 %v1_24817 to i8*
  %v3_24817 = load i8, i8* %v2_24817, align 1
  %v4_24817 = load i32, i32* %ecx.global-to-local, align 4
  %v5_24817 = trunc i32 %v4_24817 to i8
  %v6_24817 = add i8 %v5_24817, %v3_24817
  store i8 %v6_24817, i8* %v2_24817, align 1
  %v2_2481d = load i32, i32* %edi.global-to-local, align 4
  %v3_2481d = load i32, i32* %ecx.global-to-local, align 4
  %v4_2481d = add i32 %v3_2481d, %v2_2481d
  %v21_2481d = inttoptr i32 %v2_2481d to i32*
  store i32 %v4_2481d, i32* %v21_2481d, align 4
  %v0_2481f = load i32, i32* %eax.global-to-local, align 8
  %v0_24825 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24825 = add i32 %v0_24825, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v1_24825, i32* %ebp.global-to-local, align 4
  %v0_24826 = load i32, i32* %ebx.global-to-local, align 4
  %v4_24826 = trunc i32 %v0_2481f to i8
  %v5_248264 = mul i32 %v0_2481f, 256
  %v1_248265 = add i32 %v0_24826, %v5_248264
  %v22_24826 = and i32 %v1_248265, 65280
  %v23_24826 = and i32 %v0_24826, -65281
  %v24_24826 = or i32 %v22_24826, %v23_24826
  store i32 %v24_24826, i32* %ebx.global-to-local, align 4
  %v5_2482b = mul i8 %v4_24826, 2
  %v21_2482b = inttoptr i32 %v0_2481f to i8*
  store i8 %v5_2482b, i8* %v21_2482b, align 1
  %v2_2482d = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2482d = load i32, i32* %eax.global-to-local, align 8
  %v4_2482d = trunc i32 %v3_2482d to i8
  %v5_2482d = add i8 %v4_2482d, %v2_2482d
  %v21_2482d = inttoptr i32 %v3_2482d to i8*
  store i8 %v5_2482d, i8* %v21_2482d, align 1
  %v2_2482f = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2482f = load i32, i32* %eax.global-to-local, align 8
  %v4_2482f = trunc i32 %v3_2482f to i8
  %v5_2482f = add i8 %v4_2482f, %v2_2482f
  %v21_2482f = inttoptr i32 %v3_2482f to i8*
  store i8 %v5_2482f, i8* %v21_2482f, align 1
  %v0_24831 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24831 = add i32 %v0_24831, -1903947840
  %v2_24831 = inttoptr i32 %v1_24831 to i8*
  %v3_24831 = load i8, i8* %v2_24831, align 1
  %v4_24831 = load i32, i32* %eax.global-to-local, align 8
  %v5_24831 = trunc i32 %v4_24831 to i8
  %v6_24831 = add i8 %v5_24831, %v3_24831
  store i8 %v6_24831, i8* %v2_24831, align 1
  %v0_24837 = load i32, i32* %eax.global-to-local, align 8
  %v1_24837 = add i32 %v0_24837, 9109504
  store i32 %v1_24837, i32* @eax, align 8
  %v1_24844 = load i32, i32* %ebp.global-to-local, align 4
  %v2_24844 = add i32 %v1_24844, 8
  %v3_24844 = inttoptr i32 %v2_24844 to i32*
  %v4_24844 = load i32, i32* %v3_24844, align 4
  %v15_24844 = icmp eq i32 %v1_24837, %v4_24844
  br i1 %v15_24844, label %bb, label %dec_label_pc_2484d

bb:                                               ; preds = %dec_label_pc_24811
  %v1_24847 = call i32 @function_24ce0()
  store i32 %v1_24847, i32* %eax.global-to-local, align 8
  %v0_2484d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2484d

dec_label_pc_2484d:                               ; preds = %bb, %dec_label_pc_24811
  %v0_2484d = phi i32 [ %v0_2484d.pre, %bb ], [ %v1_24844, %dec_label_pc_24811 ]
  %v1_2484d = add i32 %v0_2484d, 8
  %v2_2484d = inttoptr i32 %v1_2484d to i32*
  %v3_2484d = load i32, i32* %v2_2484d, align 4
  store i32 %v3_2484d, i32* %stack_var_204, align 4
  %v2_24857 = ptrtoint i32* %stack_var_204 to i32
  store i32 %v2_24857, i32* %eax.global-to-local, align 8
  %v4_24875 = call i32 @unknown_44590(i32 0, i32 %v2_24857, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  store i32 %v4_24875, i32* %eax.global-to-local, align 8
  %v0_2487a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2487a = add i32 %v0_2487a, 4
  %v2_2487a = inttoptr i32 %v1_2487a to i32*
  %v3_2487a = load i32, i32* %v2_2487a, align 4
  store i32 %v3_2487a, i32* @eax, align 8
  %v1_24880 = icmp eq i32 %v3_2487a, 0
  %v1_24890 = icmp eq i1 %v1_24880, false
  br i1 %v1_24890, label %bb113, label %dec_label_pc_24896

bb113:                                            ; preds = %dec_label_pc_2484d
  %v1_2487d = inttoptr i32 %v0_2487a to i32*
  %v2_2487d = load i32, i32* %v1_2487d, align 4
  %v4_24890 = call i32 @function_24487(i32 %v2_2487d, i32 %v3_2487a)
  store i32 %v4_24890, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_24896

dec_label_pc_24896:                               ; preds = %bb113, %dec_label_pc_2484d
  store i32 0, i32* @eax, align 8
  %v0_24898 = call i32 @function_24499()
  store i32 %v0_24898, i32* %eax.global-to-local, align 8
  ret i32 %v0_24898

; uselistorder directives
  uselistorder i32 %v0_24826, { 1, 0 }
  uselistorder i32 %v2_2481d, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 3, 4, 1, 5, 6, 7, 8, 9 }
}

define i32 @function_248a0() local_unnamed_addr {
dec_label_pc_248a0:
  %v1_248bc = load i32, i32* @eax, align 8
  ret i32 %v1_248bc
}

define i32 @function_248c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_248c0:
  %v0_248c9 = load i32, i32* @esi, align 4
  %v1_248d4 = inttoptr i32 %v0_248c9 to i8*
  store i8 0, i8* %v1_248d4, align 1
  %v0_248d7 = load i32, i32* @eax, align 8
  ret i32 %v0_248d7
}

define i32 @function_248dc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_248dc:
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg2 to i32
  %stack_var_216 = alloca i32, align 4
  %v0_248dc = load i32, i32* %edx.global-to-local, align 4
  %v2_248dc = icmp slt i32 %v0_248dc, 0
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_248e2 = add i32 %arg1, 4
  %v2_248e2 = inttoptr i32 %v1_248e2 to i32*
  %v3_248e2 = load i32, i32* %v2_248e2, align 4
  store i32 %v3_248e2, i32* @eax, align 8
  br i1 %v2_248dc, label %bb, label %dec_label_pc_248eb

bb:                                               ; preds = %dec_label_pc_248dc
  %v1_248e5 = call i32 @function_24b03()
  store i32 %v1_248e5, i32* @eax, align 8
  br label %dec_label_pc_248eb

dec_label_pc_248eb:                               ; preds = %bb, %dec_label_pc_248dc
  %v0_248eb = phi i32 [ %v1_248e5, %bb ], [ %v3_248e2, %dec_label_pc_248dc ]
  %v1_248eb = icmp eq i32 %v0_248eb, 0
  br i1 %v1_248eb, label %bb109, label %dec_label_pc_248f3

bb109:                                            ; preds = %dec_label_pc_248eb
  %v1_248ed = call i32 @function_24f42()
  br label %dec_label_pc_248f3

dec_label_pc_248f3:                               ; preds = %bb109, %dec_label_pc_248eb
  %v0_248f3 = phi i32 [ %v1_248ed, %bb109 ], [ %v0_248eb, %dec_label_pc_248eb ]
  %v1_248f3 = inttoptr i32 %v0_248f3 to i32*
  %v2_248f3 = load i32, i32* %v1_248f3, align 4
  store i32 %v2_248f3, i32* %edx.global-to-local, align 4
  %v2_24910 = load i32, i32* %arg2, align 4
  store i32 %v2_24910, i32* %edx.global-to-local, align 4
  %v1_24931 = icmp eq i32* %arg2, null
  br i1 %v1_24931, label %bb110, label %dec_label_pc_24939

bb110:                                            ; preds = %dec_label_pc_248f3
  %v5_24933 = call i32 @function_249cb(i32 %tmp103, i32* nonnull %stack_var_216, i32 %v0_248f3)
  br label %dec_label_pc_24939

dec_label_pc_24939:                               ; preds = %bb110, %dec_label_pc_248f3
  %v0_24939 = phi i32 [ %v5_24933, %bb110 ], [ %tmp103, %dec_label_pc_248f3 ]
  %v1_24939 = inttoptr i32 %v0_24939 to i32*
  %v2_24939 = load i32, i32* %v1_24939, align 4
  store i32 %v2_24939, i32* %edx.global-to-local, align 4
  %v4_24941 = call i32 @function_249cb(i32 %v0_24939, i32* nonnull %stack_var_216, i32 %v0_248f3)
  ret i32 %v4_24941

; uselistorder directives
  uselistorder i32 %v0_24939, { 1, 0 }
  uselistorder i32 %v0_248f3, { 2, 1, 0 }
  uselistorder i32* %stack_var_216, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2497f() local_unnamed_addr {
dec_label_pc_2497f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2497f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2497f
}

define i32 @function_249b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_249b1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_249cb(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_249cb:
  %stack_var_212 = alloca i32, align 4
  %stack_var_384 = alloca i32, align 4
  %stack_var_224 = alloca i32, align 4
  %tmp16 = ptrtoint i32* %arg2 to i32
  %stack_var_231 = alloca i32, align 4
  %v2_249cb = ptrtoint i32* %stack_var_231 to i32
  store i32 %v2_249cb, i32* %stack_var_224, align 4
  %v2_249e1 = ptrtoint i32* %stack_var_384 to i32
  %v1_249e8 = add i32 %tmp16, 4
  %v2_249eb = load i32, i32* %arg2, align 4
  %v2_249f1 = ptrtoint i32* %stack_var_224 to i32
  %v2_24a0a = ashr i32 %v2_249eb, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_24a0d = xor i32 %v2_24a0a, %v2_249eb
  %v10_24a24 = call i32 @unknown_401e0(i32 %v2_249eb, i32 %v2_24a0d, i32 %v2_249f1, i32 %v1_249e8, i32 0, i32 0, i32 0, i32 0)
  %v4_24a29 = trunc i32 %v10_24a24 to i8
  %v5_24a29 = icmp eq i8 %v4_24a29, 0
  %v1_24a2b = icmp eq i1 %v5_24a29, false
  br i1 %v1_24a2b, label %bb, label %dec_label_pc_24a31

bb:                                               ; preds = %dec_label_pc_249cb
  %v2_24a2b = call i32 @function_24d93()
  br label %dec_label_pc_24a31

dec_label_pc_24a31:                               ; preds = %bb, %dec_label_pc_249cb
  %v2_24a3c = ptrtoint i32* %stack_var_212 to i32
  store i32 %arg3, i32* %stack_var_212, align 4
  %v2_24a51 = call i32 @unknown_47620(i32 %v2_24a3c, i32 %v2_249e1)
  %v1_24a59 = call i32 @unknown_36b70(i32 %v2_249e1)
  %v0_24a74 = load i32, i32* @edi, align 4
  %v1_24a74 = add i32 %v0_24a74, 8
  %v2_24a74 = inttoptr i32 %v1_24a74 to i32*
  %v3_24a74 = load i32, i32* %v2_24a74, align 4
  ret i32 %v3_24a74

; uselistorder directives
  uselistorder i32 %v2_249eb, { 1, 0, 2 }
}

define i32 @function_24a74() local_unnamed_addr {
dec_label_pc_24a74:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24a87(i32 %arg1) local_unnamed_addr {
dec_label_pc_24a87:
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_24a8b = add i32 %arg1, 4
  %v2_24a8b = inttoptr i32 %v1_24a8b to i8*
  %v3_24a8b = load i8, i8* %v2_24a8b, align 1
  %v10_24a8b = icmp eq i8 %v3_24a8b, 0
  br i1 %v10_24a8b, label %bb, label %dec_label_pc_24a95

bb:                                               ; preds = %dec_label_pc_24a87
  %v1_24a8f = call i32 @function_24c88()
  %v0_24a95.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_24a95

dec_label_pc_24a95:                               ; preds = %bb, %dec_label_pc_24a87
  %v0_24a95 = phi i32 [ %v0_24a95.pre, %bb ], [ %arg1, %dec_label_pc_24a87 ]
  %v1_24a95 = add i32 %v0_24a95, 12
  %v2_24a95 = inttoptr i32 %v1_24a95 to i32*
  %v3_24a95 = load i32, i32* %v2_24a95, align 4
  %v0_24a98 = load i32, i32* @esi, align 4
  %v1_24a98 = add i32 %v0_24a98, 144
  %v2_24a98 = inttoptr i32 %v1_24a98 to i32*
  %v3_24a98 = load i32, i32* %v2_24a98, align 4
  %v4_24a98 = add i32 %v3_24a98, 1
  store i32 %v4_24a98, i32* %v2_24a98, align 4
  %v1_24a9f = icmp eq i32 %v3_24a95, 0
  br i1 %v1_24a9f, label %dec_label_pc_24aae, label %dec_label_pc_24aa3

dec_label_pc_24aa3:                               ; preds = %dec_label_pc_24a95
  %v1_24aa3 = add i32 %v3_24a95, 4
  %v2_24aa3 = inttoptr i32 %v1_24aa3 to i32*
  %v3_24aa3 = load i32, i32* %v2_24aa3, align 4
  %v1_24aa6 = icmp eq i32 %v3_24aa3, 0
  %v1_24aa8 = icmp eq i1 %v1_24aa6, false
  br i1 %v1_24aa8, label %bb7, label %dec_label_pc_24aae

bb7:                                              ; preds = %dec_label_pc_24aa3
  %v2_24aa8 = call i32 @function_24c8f()
  br label %dec_label_pc_24aae

dec_label_pc_24aae:                               ; preds = %bb7, %dec_label_pc_24aa3, %dec_label_pc_24a95
  %v1_24ab2 = inttoptr i32 %tmp5 to i32*
  %v2_24ab2 = load i32, i32* %v1_24ab2, align 4
  ret i32 %v2_24ab2
}

define i32 @function_24ac8(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ac8:
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg1, i32* @edi, align 4
  %v1_24ad2 = call i32 @function_248c0(i32 %arg1)
  ret i32 %v1_24ad2

; uselistorder directives
  uselistorder i32 (i32)* @function_248c0, { 1, 0 }
}

define i32 @function_24ad8() local_unnamed_addr {
dec_label_pc_24ad8:
  store i32 0, i32* @eax, align 8
  %v0_24add = call i32 @function_24499()
  ret i32 %v0_24add

; uselistorder directives
  uselistorder i32 ()* @function_24499, { 1, 0 }
}

define i32 @function_24ae8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24ae8:
  %v3_24af6 = load i32, i32* @eax, align 8
  ret i32 %v3_24af6
}

define i32 @function_24afe() local_unnamed_addr {
dec_label_pc_24afe:
  %v0_24afe = call i32 @function_247d6()
  ret i32 %v0_24afe
}

define i32 @function_24b03() local_unnamed_addr {
dec_label_pc_24b03:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_220 = alloca i32, align 4
  %v0_24b05 = load i32, i32* @eax, align 8
  %v1_24b05 = icmp eq i32 %v0_24b05, 0
  br i1 %v1_24b05, label %bb, label %dec_label_pc_24b0d

bb:                                               ; preds = %dec_label_pc_24b03
  %v1_24b07 = call i32 @function_24f42()
  br label %dec_label_pc_24b0d

dec_label_pc_24b0d:                               ; preds = %bb, %dec_label_pc_24b03
  %v2_24b0d = phi i32 [ %v1_24b07, %bb ], [ %v0_24b05, %dec_label_pc_24b03 ]
  %v4_24b53 = call i32 @function_249cb(i32 %tmp6, i32* nonnull %stack_var_220, i32 %v2_24b0d)
  ret i32 %v4_24b53

; uselistorder directives
  uselistorder i32 ()* @function_24f42, { 1, 0 }
}

define i32 @function_24b7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_24b7a:
  %stack_var_196 = alloca i32, align 4
  %v2_24b7a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_24b7a = load i32, i32* @eax, align 8
  %v4_24b7a = trunc i32 %v3_24b7a to i8
  %v5_24b7a = add i8 %v4_24b7a, %v2_24b7a
  %v21_24b7a = inttoptr i32 %v3_24b7a to i8*
  store i8 %v5_24b7a, i8* %v21_24b7a, align 1
  %v0_24b7c = load i32, i32* @ecx, align 4
  %v1_24b7c = add i32 %v0_24b7c, 4
  %v2_24b7c = inttoptr i32 %v1_24b7c to i32*
  %v3_24b7c = load i32, i32* %v2_24b7c, align 4
  br label %dec_label_pc_24b7f

dec_label_pc_24b7f:                               ; preds = %dec_label_pc_24b83, %dec_label_pc_24b7a
  %v5_24b86 = phi i32 [ %v3_24b86, %dec_label_pc_24b83 ], [ %v3_24b7c, %dec_label_pc_24b7a ]
  %v1_24b7f = icmp eq i32 %v5_24b86, 0
  br i1 %v1_24b7f, label %bb, label %dec_label_pc_24b83

dec_label_pc_24b83:                               ; preds = %dec_label_pc_24b7f
  %v1_24b85 = add i32 %v5_24b86, 1
  %v0_24b86 = load i32, i32* @ecx, align 4
  %v1_24b86 = add i32 %v0_24b86, 4
  %v2_24b86 = inttoptr i32 %v1_24b86 to i32*
  %v3_24b86 = load i32, i32* %v2_24b86, align 4
  %v16_24b86 = icmp eq i32 %v5_24b86, %v3_24b86
  %v23_24b86 = select i1 %v16_24b86, i32 %v1_24b85, i32 %v3_24b86
  store i32 %v23_24b86, i32* %v2_24b86, align 4
  %v1_24b8b = icmp eq i1 %v16_24b86, false
  br i1 %v1_24b8b, label %dec_label_pc_24b7f, label %dec_label_pc_24b8d

dec_label_pc_24b8d:                               ; preds = %dec_label_pc_24b83
  br label %dec_label_pc_24b95

bb:                                               ; preds = %dec_label_pc_24b7f
  %v1_24b8f = call i32 @function_24d6a()
  br label %dec_label_pc_24b95

dec_label_pc_24b95:                               ; preds = %dec_label_pc_24b8d, %bb
  %v0_24bac = load i32, i32* @ecx, align 4
  %v1_24bac = add i32 %v0_24bac, 4
  %v2_24bac = inttoptr i32 %v1_24bac to i32*
  %v3_24bac = load i32, i32* %v2_24bac, align 4
  %v4_24bac = add i32 %v3_24bac, 1
  store i32 %v4_24bac, i32* %v2_24bac, align 4
  %v2_24bb0 = ptrtoint i32* %stack_var_196 to i32
  %v1_24bc5 = call i32 @unknown_34940(i32 %v2_24bb0)
  %v4_24bca = call i32 @function_249cb(i32 %v2_24bb0, i32* nonnull @1, i32 ptrtoint (i32* @1 to i32))
  ret i32 %v4_24bca

; uselistorder directives
  uselistorder i32 %v2_24bb0, { 1, 0 }
  uselistorder i1 %v16_24b86, { 1, 0 }
  uselistorder i32 %v3_24b86, { 2, 0, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_249cb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_24b95, { 1, 0 }
}

define i32 @function_24bcf(i32 %arg1) local_unnamed_addr {
dec_label_pc_24bcf:
  ret i32 0
}

define i32 @function_24bd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_24bd6:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = icmp ugt i32 %tmp12, %tmp13
  br i1 %tmp22, label %bb, label %dec_label_pc_24bea

bb:                                               ; preds = %dec_label_pc_24bd6
  %v4_24be4 = call i32 @function_24d17()
  br label %dec_label_pc_24bea

dec_label_pc_24bea:                               ; preds = %dec_label_pc_24bd6, %bb
  %v1_24bf1 = icmp eq i32 %tmp11, 0
  br i1 %v1_24bf1, label %bb14, label %dec_label_pc_24bf5

bb14:                                             ; preds = %dec_label_pc_24bea
  %v1_24bf3 = call i32 @function_24c33()
  br label %dec_label_pc_24bf5

dec_label_pc_24bf5:                               ; preds = %bb14, %dec_label_pc_24bea
  %tmp23 = icmp ult i32 %tmp10, 10
  br i1 %tmp23, label %bb16, label %dec_label_pc_24c05

bb16:                                             ; preds = %dec_label_pc_24bf5
  %v3_24bff = call i32 @function_24db8()
  store i32 %v3_24bff, i32* @eax, align 8
  br label %dec_label_pc_24c05

dec_label_pc_24c05:                               ; preds = %bb16, %dec_label_pc_24bf5
  %v0_24c162 = phi i32 [ %v3_24bff, %bb16 ], [ %tmp10, %dec_label_pc_24bf5 ]
  %v15_24c05 = icmp eq i32 %tmp11, %arg1
  br i1 %v15_24c05, label %bb17, label %dec_label_pc_24c0f

bb17:                                             ; preds = %dec_label_pc_24c05
  %v1_24c09 = call i32 @function_24daf()
  store i32 %v1_24c09, i32* @eax, align 8
  br label %dec_label_pc_24c0f

dec_label_pc_24c0f:                               ; preds = %bb17, %dec_label_pc_24c05
  %v0_24c16 = phi i32 [ %v1_24c09, %bb17 ], [ %v0_24c162, %dec_label_pc_24c05 ]
  %v7_24c16 = icmp ult i32 %v0_24c16, %tmp8
  br i1 %v7_24c16, label %bb18, label %dec_label_pc_24c1e

bb18:                                             ; preds = %dec_label_pc_24c0f
  %v1_24c18 = call i32 @function_24db8()
  br label %dec_label_pc_24c1e

dec_label_pc_24c1e:                               ; preds = %bb18, %dec_label_pc_24c0f
  %v0_24c264 = phi i32 [ %v1_24c18, %bb18 ], [ %v0_24c16, %dec_label_pc_24c0f ]
  %v1_24c1e = icmp eq i32 %tmp8, 0
  %v1_24c20 = icmp eq i1 %v1_24c1e, false
  br i1 %v1_24c20, label %bb19, label %dec_label_pc_24c26

bb19:                                             ; preds = %dec_label_pc_24c1e
  %v2_24c20 = call i32 @function_24d2c()
  br label %dec_label_pc_24c26

dec_label_pc_24c26:                               ; preds = %bb19, %dec_label_pc_24c1e
  %v0_24c26 = phi i32 [ %v2_24c20, %bb19 ], [ %v0_24c264, %dec_label_pc_24c1e ]
  %tmp24 = icmp ult i32 %v0_24c26, 11
  br i1 %tmp24, label %bb21, label %dec_label_pc_24c2b

bb21:                                             ; preds = %dec_label_pc_24c26
  %v3_24c29 = call i32 @function_24c33()
  br label %dec_label_pc_24c2b

dec_label_pc_24c2b:                               ; preds = %bb21, %dec_label_pc_24c26
  %v3_24c2b = phi i32 [ %v3_24c29, %bb21 ], [ %v0_24c26, %dec_label_pc_24c26 ]
  ret i32 %v3_24c2b

; uselistorder directives
  uselistorder i32 %v0_24c26, { 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 ()* @function_24db8, { 1, 0 }
  uselistorder i32 ()* @function_24c33, { 1, 0 }
  uselistorder label %dec_label_pc_24bea, { 1, 0 }
}

define i32 @function_24c33() local_unnamed_addr {
dec_label_pc_24c33:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_164 = alloca i32, align 4
  %tmp15 = call i8 @__decompiler_undefined_function_3()
  %v10_24c33 = icmp eq i8 %tmp15, 0
  br i1 %v10_24c33, label %dec_label_pc_24c54, label %dec_label_pc_24c3d

dec_label_pc_24c3d:                               ; preds = %dec_label_pc_24c33
  br label %dec_label_pc_24c54

dec_label_pc_24c54:                               ; preds = %dec_label_pc_24c3d, %dec_label_pc_24c33
  %v2_24c54 = ptrtoint i32* %stack_var_164 to i32
  %v1_24c5e = call i32 @unknown_34940(i32 %v2_24c54)
  %v1_24c6e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24c6e = xor i32 %v1_24c6e, %tmp10
  %v3_24c6e = icmp eq i32 %v2_24c6e, 0
  store i32 %v2_24c6e, i32* @edx, align 4
  %v1_24c75 = icmp eq i1 %v3_24c6e, false
  br i1 %v1_24c75, label %bb, label %dec_label_pc_24c7b

bb:                                               ; preds = %dec_label_pc_24c54
  %v2_24c75 = call i32 @function_24dfe()
  br label %dec_label_pc_24c7b

dec_label_pc_24c7b:                               ; preds = %bb, %dec_label_pc_24c54
  %v0_24c85 = phi i32 [ %v2_24c75, %bb ], [ %tmp11, %dec_label_pc_24c54 ]
  ret i32 %v0_24c85
}

define i32 @function_24c88() local_unnamed_addr {
dec_label_pc_24c88:
  %v0_24c88 = load i32, i32* @esi, align 4
  %v1_24c88 = add i32 %v0_24c88, 148
  %v2_24c88 = inttoptr i32 %v1_24c88 to i32*
  %v3_24c88 = load i32, i32* %v2_24c88, align 4
  %v4_24c88 = add i32 %v3_24c88, 1
  store i32 %v4_24c88, i32* %v2_24c88, align 4
  %v22_24c88 = load i32, i32* @eax, align 8
  ret i32 %v22_24c88
}

define i32 @function_24c8f() local_unnamed_addr {
dec_label_pc_24c8f:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v4_24c9d = load i32, i32* @edi, align 4
  %v15_24c9d = icmp eq i32 %tmp2, %v4_24c9d
  br i1 %v15_24c9d, label %bb, label %dec_label_pc_24ca7

bb:                                               ; preds = %dec_label_pc_24c8f
  %v2_24ca1 = call i32 @function_24ac8(i32 %tmp4)
  %v0_24ca7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_24ca7

dec_label_pc_24ca7:                               ; preds = %bb, %dec_label_pc_24c8f
  %v0_24ca7 = phi i32 [ %v0_24ca7.pre, %bb ], [ %v4_24c9d, %dec_label_pc_24c8f ]
  %v1_24ca7 = add i32 %v0_24ca7, 8
  %v2_24ca7 = inttoptr i32 %v1_24ca7 to i32*
  %v3_24ca7 = load i32, i32* %v2_24ca7, align 4
  ret i32 %v3_24ca7

; uselistorder directives
  uselistorder i32 %v4_24c9d, { 1, 0 }
  uselistorder i32 (i32)* @function_24ac8, { 1, 0 }
}

define i32 @function_24cb2() local_unnamed_addr {
dec_label_pc_24cb2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24cb6(i32 %arg1) local_unnamed_addr {
dec_label_pc_24cb6:
  %v3_24cce = load i32, i32* @eax, align 8
  ret i32 %v3_24cce
}

define i32 @function_24ce0() local_unnamed_addr {
dec_label_pc_24ce0:
  %v0_24ce9 = load i32, i32* @eax, align 8
  ret i32 %v0_24ce9
}

define i32 @function_24cee(i32 %arg1) local_unnamed_addr {
dec_label_pc_24cee:
  store i32 %arg1, i32* @eax, align 8
  %v1_24d12 = call i32 @function_249b1(i32 0)
  ret i32 %v1_24d12
}

define i32 @function_24d17() local_unnamed_addr {
dec_label_pc_24d17:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_24d22 = call i32 @unknown_44ee0(i32 %tmp2)
  ret i32 %v1_24d22
}

define i32 @function_24d2c() local_unnamed_addr {
dec_label_pc_24d2c:
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_24d2c = load i32, i32* @ecx, align 4
  %v2_24d2c = mul i32 %v0_24d2c, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_24d2c = add i32 %v0_24d2c, -3
  %v4_24d2c = add i32 %v3_24d2c, %v2_24d2c
  %v0_24d30 = load i32, i32* @edx, align 4
  %v2_24d30 = mul i32 %v4_24d2c, 4
  %v3_24d30 = add i32 %v2_24d30, %v0_24d30
  store i32 %v3_24d30, i32* %ebx.global-to-local, align 4
  %v3_24d33 = mul i32 %v0_24d2c, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_24d38 = shl i32 %v3_24d33, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_24d3b = sub i32 %v3_24d30, %v2_24d38
  store i32 %v2_24d3b, i32* @esi, align 4
  br label %dec_label_pc_24d48

dec_label_pc_24d48:                               ; preds = %dec_label_pc_24d48, %dec_label_pc_24d2c
  %v0_24d48 = phi i32 [ %v1_24d50, %dec_label_pc_24d48 ], [ %v3_24d30, %dec_label_pc_24d2c ]
  %v1_24d4b = call i32 @unknown_36b70(i32 %v0_24d48)
  %v0_24d50 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24d50 = add i32 %v0_24d50, -12
  store i32 %v1_24d50, i32* %ebx.global-to-local, align 4
  %v0_24d53 = load i32, i32* @esi, align 4
  %v7_24d53 = icmp ult i32 %v0_24d53, %v1_24d50
  br i1 %v7_24d53, label %dec_label_pc_24d48, label %dec_label_pc_24d57

dec_label_pc_24d57:                               ; preds = %dec_label_pc_24d48
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v1_24d50, { 1, 2, 0 }
  uselistorder i32 %v0_24d2c, { 0, 2, 1 }
}

define i32 @function_24d6a() local_unnamed_addr {
dec_label_pc_24d6a:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp2
}

define i32 @function_24d93() local_unnamed_addr {
dec_label_pc_24d93:
  %stack_var_384 = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_24d97 = ptrtoint i32* %stack_var_384 to i32
  %v1_24d9e = add i32 %tmp2, 4
  %v2_24d9e = inttoptr i32 %v1_24d9e to i8*
  store i8 0, i8* %v2_24d9e, align 1
  %v1_24da5 = call i32 @unknown_36b70(i32 %v2_24d97)
  store i32 %v1_24da5, i32* @eax, align 8
  %v0_24daa = call i32 @function_24a74()
  ret i32 %v0_24daa
}

define i32 @function_24daf() local_unnamed_addr {
dec_label_pc_24daf:
  %v0_24daf = load i32, i32* @eax, align 8
  ret i32 %v0_24daf
}

define i32 @function_24db8() local_unnamed_addr {
dec_label_pc_24db8:
  %v0_24dc0 = call i32 @function_329ba()
  %v0_24dc8 = call i32 @unknown_32612()
  store i32 %v0_24dc8, i32* @eax, align 8
  %v0_24dd0 = call i32 @function_326e2()
  ret i32 %v0_24dd0
}

define i32 @function_24df9(i32 %arg1) local_unnamed_addr {
dec_label_pc_24df9:
  %v0_24df9 = call i32 @function_3281a()
  ret i32 %v0_24df9
}

define i32 @function_24dfe() local_unnamed_addr {
dec_label_pc_24dfe:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24e04() local_unnamed_addr {
dec_label_pc_24e04:
  %eax.global-to-local = alloca i32, align 4
  %v0_24e04 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24e04
}

define i32 @function_24e1e() local_unnamed_addr {
dec_label_pc_24e1e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24e1f() local_unnamed_addr {
dec_label_pc_24e1f:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_24e20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24e20 = load i32, i32* %ebp.global-to-local, align 4
  %v2_24e20 = mul i32 %v1_24e20, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_24e20 = add i32 %v0_24e20, -125
  %v4_24e20 = add i32 %v3_24e20, %v2_24e20
  %v5_24e20 = inttoptr i32 %v4_24e20 to i32*
  %v6_24e20 = load i32, i32* %v5_24e20, align 4
  %v7_24e20 = load i32, i32* %esi.global-to-local, align 4
  %v8_24e20 = add i32 %v7_24e20, %v6_24e20
  store i32 %v8_24e20, i32* %v5_24e20, align 4
  %v0_24e24 = call i32 @function_89547401()
  ret i32 %v0_24e24

; uselistorder directives
  uselistorder i32 -125, { 3, 4, 5, 0, 1, 2 }
}

define i32 @function_24e36() local_unnamed_addr {
dec_label_pc_24e36:
  %stack_var_232 = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = icmp ugt i32 %tmp4, %tmp5
  br i1 %tmp6, label %dec_label_pc_24e46, label %dec_label_pc_24e56

dec_label_pc_24e46:                               ; preds = %dec_label_pc_24e36
  %v1_24e51 = call i32 @unknown_44ee0(i32 %tmp3)
  br label %dec_label_pc_24e56

dec_label_pc_24e56:                               ; preds = %dec_label_pc_24e36, %dec_label_pc_24e46
  %v2_24e56 = ptrtoint i32* %stack_var_232 to i32
  %v1_24e60 = call i32 @unknown_388d0(i32 %v2_24e56)
  ret i32 %v1_24e60

; uselistorder directives
  uselistorder i32 (i32)* @unknown_44ee0, { 1, 0 }
  uselistorder label %dec_label_pc_24e56, { 1, 0 }
}

define i32 @function_24e65() local_unnamed_addr {
dec_label_pc_24e65:
  %stack_var_164 = alloca i32, align 4
  %v2_24e65 = ptrtoint i32* %stack_var_164 to i32
  %v1_24e6f = call i32 @unknown_34940(i32 %v2_24e65)
  ret i32 %v1_24e6f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_34940, { 1, 0, 2 }
}

define i32 @function_24e89() local_unnamed_addr {
dec_label_pc_24e89:
  %eax.global-to-local = alloca i32, align 4
  %v0_24e89 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24e89
}

define i32 @function_24eba() local_unnamed_addr {
dec_label_pc_24eba:
  %eax.global-to-local = alloca i32, align 4
  %v0_24eba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24eba
}

define i32 @function_24ebe(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ebe:
  %v0_24ebe = load i32, i32* @eax, align 8
  ret i32 %v0_24ebe
}

define i32 @function_24ec9(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ec9:
  %ebx.global-to-local = alloca i32, align 4
  %v0_24ec9 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_24ec9
}

define i32 @function_24ef2() local_unnamed_addr {
dec_label_pc_24ef2:
  %v0_24ef2 = load i32, i32* @eax, align 8
  %v2_24ef2 = load i32, i32* @ecx, align 4
  %v3_24ef2 = udiv i32 %v2_24ef2, 256
  %v5_24ef2 = add i32 %v3_24ef2, %v0_24ef2
  %v20_24ef2 = and i32 %v5_24ef2, 255
  %v22_24ef2 = and i32 %v0_24ef2, -256
  %v23_24ef2 = or i32 %v20_24ef2, %v22_24ef2
  ret i32 %v23_24ef2

; uselistorder directives
  uselistorder i32 %v0_24ef2, { 1, 0 }
  uselistorder i32 -256, { 87, 13, 88, 47, 89, 84, 14, 15, 4, 85, 16, 17, 93, 92, 18, 94, 19, 20, 5, 21, 6, 22, 7, 23, 95, 96, 97, 105, 24, 25, 26, 27, 28, 29, 30, 31, 8, 12, 1, 32, 33, 34, 35, 36, 37, 38, 39, 86, 40, 41, 42, 43, 44, 45, 46, 90, 91, 48, 49, 50, 51, 52, 53, 54, 2, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 3, 67, 68, 69, 70, 9, 71, 72, 73, 74, 75, 0, 76, 77, 78, 79, 80, 81, 82, 98, 99, 100, 83, 101, 102, 10, 11, 103, 104 }
}

define i32 @function_24ef7() local_unnamed_addr {
dec_label_pc_24ef7:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_24ef7 = add i32 %tmp91, 15213716
  %v2_24ef7 = inttoptr i32 %v1_24ef7 to i32*
  %v3_24ef7 = load i32, i32* %v2_24ef7, align 4
  %v4_24ef7 = add i32 %v3_24ef7, -1
  store i32 %v4_24ef7, i32* %v2_24ef7, align 4
  %v2_24efd = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_24efd = load i32, i32* %eax.global-to-local, align 8
  %v4_24efd = trunc i32 %v3_24efd to i8
  %v5_24efd = add i8 %v4_24efd, %v2_24efd
  %v21_24efd = inttoptr i32 %v3_24efd to i8*
  store i8 %v5_24efd, i8* %v21_24efd, align 1
  %v0_24f01 = load i32, i32* %edx.global-to-local, align 4
  %v1_24f04 = call i32 @unknown_37140(i32 %v0_24f01)
  store i32 %v1_24f04, i32* %eax.global-to-local, align 8
  %v0_24f09 = call i32 @function_24e65()
  store i32 %v0_24f09, i32* %eax.global-to-local, align 8
  ret i32 %v0_24f09
}

define i32 @function_24f0e(i32* %arg1) local_unnamed_addr {
dec_label_pc_24f0e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_24f0e = load i32, i32* %eax.global-to-local, align 8
  %v0_24f10 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_24f0e, i32* %ebx.global-to-local, align 4
  %v1_24f15 = call i32 @unknown_36b70(i32 %v0_24f10)
  store i32 %v1_24f15, i32* %eax.global-to-local, align 8
  %v2_24f1e = load i32, i32* %arg1, align 4
  store i32 %v2_24f1e, i32* %eax.global-to-local, align 8
  ret i32 %v2_24f1e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36b70, { 4, 3, 1, 2, 0 }
}

define i32 @function_24f2b(i32* %arg1) local_unnamed_addr {
dec_label_pc_24f2b:
  %tmp99 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp99
}

define i32 @function_24f42() local_unnamed_addr {
dec_label_pc_24f42:
  %v4_24f52 = load i32, i32* @eax, align 8
  ret i32 %v4_24f52
}

define i32 @function_24f5a() local_unnamed_addr {
dec_label_pc_24f5a:
  %v3_24f5a = load i32, i32* @eax, align 8
  ret i32 %v3_24f5a
}

define i32 @function_24f65() local_unnamed_addr {
dec_label_pc_24f65:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_24f65 = load i32, i32* %ecx.global-to-local, align 4
  %v1_24f65 = add i32 %v0_24f65, 612666307
  %v2_24f65 = inttoptr i32 %v1_24f65 to i32*
  %v3_24f65 = load i32, i32* %v2_24f65, align 4
  %v4_24f65 = add i32 %v3_24f65, -1
  store i32 %v4_24f65, i32* %v2_24f65, align 4
  %v3_24f6b = load double, double* bitcast (i32* @eax to double*), align 8
  %v4_24f6b = fpext double %v3_24f6b to x86_fp80
  %v5_24f6b = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_24f6b = fadd x86_fp80 %v4_24f6b, %v5_24f6b
  store x86_fp80 %v6_24f6b, x86_fp80* %st0.global-to-local, align 4
  %tmp97 = bitcast double %v3_24f6b to i64
  %tmp98 = trunc i64 %tmp97 to i8
  %tmp99 = trunc i64 %tmp97 to i32
  %v5_24f6d = mul i8 %tmp98, 2
  %v21_24f6d = inttoptr i32 %tmp99 to i8*
  store i8 %v5_24f6d, i8* %v21_24f6d, align 1
  %v0_24f6f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24f6f

; uselistorder directives
  uselistorder x86_fp80* %st0.global-to-local, { 1, 0 }
}

define i32 @function_24f82(i32 %arg1) local_unnamed_addr {
dec_label_pc_24f82:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24f90() local_unnamed_addr {
dec_label_pc_24f90:
  %eax.global-to-local = alloca i32, align 4
  %v0_24f90 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24f90
}

define i32 @function_24f95() local_unnamed_addr {
dec_label_pc_24f95:
  %eax.global-to-local = alloca i32, align 4
  %v0_24f95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24f95
}

define i32 @function_24fa5() local_unnamed_addr {
dec_label_pc_24fa5:
  %stack_var_200 = alloca i32, align 4
  %stack_var_176 = alloca i32, align 4
  %v2_24fa5 = ptrtoint i32* %stack_var_176 to i32
  %v1_24faf = call i32 @unknown_34e00(i32 %v2_24fa5)
  %v1_24fb7 = call i32 @unknown_37a40(i32 %v2_24fa5)
  %v2_24fbe = ptrtoint i32* %stack_var_200 to i32
  %v1_24fc8 = call i32 @unknown_3a730(i32 %v2_24fbe)
  %v0_24fcd = call i32 @function_24e65()
  ret i32 %v0_24fcd
}

define i32 @function_24fd2() local_unnamed_addr {
dec_label_pc_24fd2:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_24fd2 = load i32, i32* @eax, align 8
  %v0_24fd6 = load i32, i32* %edx.global-to-local, align 4
  %v0_24fda = load i32, i32* %ebx.global-to-local, align 4
  %v1_24fdd = call i32 @_ZZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEdeEvE19__PRETTY_FUNCTION__(i32 %v0_24fda)
  store i32 %v0_24fd2, i32* @eax, align 8
  store i32 %v0_24fd6, i32* %edx.global-to-local, align 4
  %v0_24fea = call i32 @function_24e1e()
  ret i32 %v0_24fea
}

define i32 @function_24fef() local_unnamed_addr {
dec_label_pc_24fef:
  %eax.global-to-local = alloca i32, align 4
  %v0_24fef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24fef
}

define i32 @function_24ff5() local_unnamed_addr {
dec_label_pc_24ff5:
  %eax.global-to-local = alloca i32, align 4
  %v0_24ff5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24ff5
}

define i32 @function_24ff6() local_unnamed_addr {
dec_label_pc_24ff6:
  %v0_24ff6 = call i32 @function_24e36()
  ret i32 %v0_24ff6
}

define i32 @function_25002() local_unnamed_addr {
dec_label_pc_25002:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_Z1_PKc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25050:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp99 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-24 = alloca i32, align 4
  %v0_25053 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_2505f = load i32, i32* inttoptr (i32 52 to i32*), align 4
  store i32 %v0_2505f, i32* @eax, align 8
  %v0_25064 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v0_2506c = load i32, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_25078 = icmp eq i32 %v0_2505f, 0
  br i1 %v1_25078, label %bb, label %dec_label_pc_25080

bb:                                               ; preds = %dec_label_pc_25050
  %v0_25074 = load i32, i32* %esi.global-to-local, align 4
  %v5_2507a = call i32 @function_2510b(i32 %v0_25053, i32 %v0_25064, i32 %v0_25074, i32 %v0_2506c)
  %v0_25084.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_25080

dec_label_pc_25080:                               ; preds = %bb, %dec_label_pc_25050
  %v0_25088 = phi i32 [ %v5_2507a, %bb ], [ %v0_2505f, %dec_label_pc_25050 ]
  %v0_25084 = phi i32 [ %v0_25084.pre, %bb ], [ %arg2, %dec_label_pc_25050 ]
  %v2_25080 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_25080, i32* %esi.global-to-local, align 4
  %v3_2508f = call i32 @unknown_49450(i32 %v2_25080, i32 %v0_25088, i32 %v0_25084)
  %v10_25097 = icmp eq i8 %tmp99, 0
  br i1 %v10_25097, label %bb111, label %dec_label_pc_2509e

bb111:                                            ; preds = %dec_label_pc_25080
  %v1_2509c = call i32 @function_250f0()
  br label %dec_label_pc_2509e

dec_label_pc_2509e:                               ; preds = %bb111, %dec_label_pc_25080
  ret i32 %v2_25080

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
}

define i32 @function_250b7(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_250b7:
  %stack_var_24 = alloca i32, align 4
  %v10_250b7 = icmp eq i8 %arg1, 0
  br i1 %v10_250b7, label %bb, label %dec_label_pc_250be

bb:                                               ; preds = %dec_label_pc_250b7
  %v1_250bc = call i32 @function_250ca()
  br label %dec_label_pc_250be

dec_label_pc_250be:                               ; preds = %bb, %dec_label_pc_250b7
  %v2_250be = ptrtoint i32* %stack_var_24 to i32
  ret i32 %v2_250be
}

define i32 @function_250ca() local_unnamed_addr {
dec_label_pc_250ca:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_250ce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_250ce = icmp eq i32 %v1_250ce, %tmp5
  %v0_250d5 = load i32, i32* @ebx, align 4
  store i32 %v0_250d5, i32* @eax, align 8
  %v1_250d7 = icmp eq i1 %v3_250ce, false
  br i1 %v1_250d7, label %bb, label %dec_label_pc_250d9

bb:                                               ; preds = %dec_label_pc_250ca
  %v2_250d7 = call i32 @function_25106()
  br label %dec_label_pc_250d9

dec_label_pc_250d9:                               ; preds = %bb, %dec_label_pc_250ca
  %v0_250e8 = phi i32 [ %v2_250d7, %bb ], [ %v0_250d5, %dec_label_pc_250ca ]
  ret i32 %v0_250e8
}

define i32 @function_250f0() local_unnamed_addr {
dec_label_pc_250f0:
  %stack_var_19 = alloca i32, align 4
  %v2_250f0 = ptrtoint i32* %stack_var_19 to i32
  %v0_250f8 = load i32, i32* @edi, align 4
  %v0_250fc = load i32, i32* @ebx, align 4
  %v3_25104 = trunc i32 %v0_250fc to i8
  %v4_25104 = call i32 @function_250b7(i8 %v3_25104, i32 %v0_250f8, i32 %v2_250f0)
  ret i32 %v4_25104

; uselistorder directives
  uselistorder i32* @edi, { 142, 0, 143, 1, 92, 93, 88, 94, 95, 2, 3, 96, 97, 144, 145, 146, 147, 148, 4, 149, 58, 150, 151, 152, 153, 154, 5, 155, 156, 157, 46, 158, 159, 160, 360, 361, 362, 363, 161, 162, 163, 6, 164, 59, 165, 101, 166, 167, 168, 169, 7, 170, 171, 183, 184, 185, 186, 172, 173, 174, 8, 175, 60, 176, 89, 177, 178, 179, 180, 9, 181, 182, 369, 370, 371, 372, 187, 188, 189, 10, 190, 61, 191, 91, 192, 193, 364, 365, 366, 367, 368, 100, 11, 47, 12, 48, 376, 377, 378, 379, 13, 380, 62, 381, 382, 194, 195, 14, 196, 197, 373, 49, 374, 375, 383, 385, 384, 386, 414, 387, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 213, 214, 224, 221, 222, 223, 225, 226, 227, 63, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 15, 241, 64, 66, 243, 65, 67, 242, 244, 245, 246, 247, 248, 249, 251, 250, 68, 252, 70, 69, 253, 71, 72, 254, 256, 257, 255, 258, 260, 259, 73, 75, 74, 261, 76, 77, 262, 264, 265, 263, 266, 400, 267, 268, 269, 78, 80, 271, 79, 81, 270, 272, 273, 274, 50, 275, 276, 277, 278, 279, 280, 16, 281, 282, 17, 401, 82, 83, 84, 44, 85, 86, 18, 87, 45, 284, 285, 283, 286, 288, 289, 287, 290, 405, 406, 415, 416, 417, 418, 291, 292, 293, 294, 295, 296, 297, 430, 431, 432, 19, 433, 434, 20, 435, 436, 437, 298, 299, 300, 301, 21, 22, 51, 302, 303, 304, 305, 306, 307, 308, 309, 310, 52, 311, 312, 318, 313, 314, 315, 316, 23, 317, 319, 320, 324, 321, 322, 323, 325, 326, 24, 327, 328, 25, 329, 333, 26, 334, 27, 330, 331, 332, 28, 29, 53, 54, 335, 30, 31, 336, 337, 339, 340, 341, 338, 345, 346, 347, 55, 349, 350, 351, 348, 342, 343, 344, 32, 352, 421, 419, 420, 90, 353, 33, 354, 355, 356, 357, 358, 98, 99, 359, 388, 389, 390, 34, 427, 428, 425, 426, 35, 102, 429, 391, 36, 56, 392, 393, 37, 394, 395, 396, 397, 38, 104, 103, 105, 106, 107, 108, 109, 110, 111, 118, 119, 112, 113, 120, 121, 39, 122, 123, 114, 115, 40, 116, 117, 124, 125, 41, 126, 127, 128, 129, 130, 131, 42, 132, 133, 398, 399, 57, 134, 402, 403, 404, 439, 135, 136, 438, 440, 422, 423, 424, 137, 407, 408, 138, 139, 140, 141, 409, 43, 410, 411, 412, 413 }
}

define i32 @function_25106() local_unnamed_addr {
dec_label_pc_25106:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2510b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2510b:
  %v3_25123 = load i32, i32* @eax, align 8
  ret i32 %v3_25123
}

define i32 @function_25130() local_unnamed_addr {
dec_label_pc_25130:
  %eax.global-to-local = alloca i32, align 4
  %v0_25130 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25130
}

define i32 @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEEclEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25150:
  %stack_var_-228 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_2519a = add i32 %tmp108, 12
  %v1_251b0 = add i32 %tmp108, 4
  %v2_251b0 = inttoptr i32 %v1_251b0 to i32*
  %v3_251b0 = load i32, i32* %v2_251b0, align 4
  store i32 %v3_251b0, i32* @eax, align 8
  %v1_251b3 = icmp eq i32 %v3_251b0, 0
  br i1 %v1_251b3, label %bb, label %dec_label_pc_251bb

bb:                                               ; preds = %dec_label_pc_25150
  %v2_251b5 = inttoptr i32 %v1_2519a to i32*
  %v3_251b5 = call i32 @function_2579d(i32* %v2_251b5)
  store i32 %v3_251b5, i32* @eax, align 8
  br label %dec_label_pc_251bb

dec_label_pc_251bb:                               ; preds = %bb, %dec_label_pc_25150
  %v0_251bb = phi i32 [ %v3_251b5, %bb ], [ %v3_251b0, %dec_label_pc_25150 ]
  %v1_251bb = add i32 %v0_251bb, 4
  %v2_251bb = inttoptr i32 %v1_251bb to i32*
  %v3_251bb = load i32, i32* %v2_251bb, align 4
  %v10_251be = icmp eq i32 %v3_251bb, 1
  br i1 %v10_251be, label %bb115, label %dec_label_pc_251c7

bb115:                                            ; preds = %dec_label_pc_251bb
  %v1_251c1 = call i32 @function_258bb()
  br label %dec_label_pc_251c7

dec_label_pc_251c7:                               ; preds = %bb115, %dec_label_pc_251bb
  %v18_251db = phi i32 [ %v1_251c1, %bb115 ], [ %v0_251bb, %dec_label_pc_251bb ]
  store i32 %v18_251db, i32* %stack_var_-228, align 4
  %v1_251db = add i32 %v18_251db, 4
  %v2_251db = inttoptr i32 %v1_251db to i32*
  %v3_251db = load i32, i32* %v2_251db, align 4
  %v4_251db = add i32 %v3_251db, 1
  store i32 %v4_251db, i32* %v2_251db, align 4
  %v2_25209 = ptrtoint i32* %stack_var_-228 to i32
  store i32 0, i32* %stack_var_-228, align 4
  %v1_25221 = call i32 @unknown_35690(i32 %v2_25209)
  ret i32 %v1_2519a

; uselistorder directives
  uselistorder i32 %v18_251db, { 1, 0 }
  uselistorder i32 %v1_2519a, { 1, 0 }
  uselistorder i32 %tmp108, { 1, 0 }
}

define i32 @function_25236(i32* %arg1) local_unnamed_addr {
dec_label_pc_25236:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_108 = alloca i32, align 4
  %tmp43 = ptrtoint i32* %arg1 to i32
  %stack_var_124 = alloca i32, align 4
  %stack_var_188 = alloca i8, align 1
  %v0_25236 = load i32, i32* @eax, align 8
  %tmp55 = trunc i32 %v0_25236 to i8
  %v5_25239 = mul i8 %tmp55, 2
  %v15_25239 = icmp eq i8 %v5_25239, 0
  store i1 %v15_25239, i1* %zf.global-to-local, align 1
  %v21_25239 = inttoptr i32 %v0_25236 to i8*
  store i8 %v5_25239, i8* %v21_25239, align 1
  %v0_2523b = load i32, i32* @ecx, align 4
  %v1_2523b = add i32 %v0_2523b, -1992809404
  %v2_2523b = inttoptr i32 %v1_2523b to i8*
  %v3_2523b = load i8, i8* %v2_2523b, align 1
  %v5_2523b = trunc i32 %v0_2523b to i8
  %v6_2523b = add i8 %v3_2523b, %v5_2523b
  store i8 %v6_2523b, i8* %v2_2523b, align 1
  %v6_25241 = load i32, i32* @eax, align 8
  %v4_25244 = mul i32 %v6_25241, 2
  %v14_25244 = icmp eq i32 %v4_25244, 0
  store i1 %v14_25244, i1* %zf.global-to-local, align 1
  %v21_25244 = inttoptr i32 %v6_25241 to i32*
  store i32 %v4_25244, i32* %v21_25244, align 4
  %v0_25246 = load i32, i32* @ebp, align 4
  %v1_25246 = add i32 %v0_25246, -1990450108
  %v2_25246 = inttoptr i32 %v1_25246 to i8*
  %v3_25246 = load i8, i8* %v2_25246, align 1
  %v4_25246 = load i32, i32* @ecx, align 4
  %v5_25246 = trunc i32 %v4_25246 to i8
  %v6_25246 = add i8 %v5_25246, %v3_25246
  store i8 %v6_25246, i8* %v2_25246, align 1
  %v1_2524c = load i32, i32* @eax, align 8
  %v4_2524f = mul i32 %v1_2524c, 2
  %v14_2524f = icmp eq i32 %v4_2524f, 0
  store i1 %v14_2524f, i1* %zf.global-to-local, align 1
  %v21_2524f = inttoptr i32 %v1_2524c to i32*
  store i32 %v4_2524f, i32* %v21_2524f, align 4
  %v0_25251 = load i32, i32* @ebx, align 4
  %v1_25251 = add i32 %v0_25251, 9184388
  %v2_25251 = inttoptr i32 %v1_25251 to i8*
  %v3_25251 = load i8, i8* %v2_25251, align 1
  %v4_25251 = load i32, i32* @ecx, align 4
  %v5_25251 = trunc i32 %v4_25251 to i8
  %v6_25251 = add i8 %v5_25251, %v3_25251
  store i8 %v6_25251, i8* %v2_25251, align 1
  %v2_25257 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_25257 = load i32, i32* @eax, align 8
  %v4_25257 = trunc i32 %v3_25257 to i8
  %v5_25257 = add i8 %v4_25257, %v2_25257
  %v21_25257 = inttoptr i32 %v3_25257 to i8*
  store i8 %v5_25257, i8* %v21_25257, align 1
  store i8 0, i8* %stack_var_188, align 1
  %v0_25277 = load i32, i32* @eax, align 8
  %v1_25277 = icmp eq i32 %v0_25277, 0
  store i1 %v1_25277, i1* %zf.global-to-local, align 1
  br i1 %v1_25277, label %dec_label_pc_25295, label %dec_label_pc_25295.thread

dec_label_pc_25295.thread:                        ; preds = %dec_label_pc_25236
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_252a3

dec_label_pc_25295:                               ; preds = %dec_label_pc_25236
  %v3_2528f = call i32 @function_2589e(i32 0)
  store i32 %v3_2528f, i32* %eax.global-to-local, align 8
  %v1_25297 = icmp eq i32 %v3_2528f, 0
  store i1 %v1_25297, i1* %zf.global-to-local, align 1
  br i1 %v1_25297, label %bb56, label %dec_label_pc_252a3

bb56:                                             ; preds = %dec_label_pc_25295
  %v2_2529d = call i32 @function_25899(i32 0)
  store i32 %v2_2529d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_252a3

dec_label_pc_252a3:                               ; preds = %dec_label_pc_25295.thread, %bb56, %dec_label_pc_25295
  %v2_2529582 = phi i32 [ %v0_25277, %dec_label_pc_25295.thread ], [ 0, %bb56 ], [ %v3_2528f, %dec_label_pc_25295 ]
  store i32 %v2_2529582, i32* %edx.global-to-local, align 4
  %v2_252a7 = ptrtoint i8* %stack_var_188 to i32
  store i32 %v2_252a7, i32* %ecx.global-to-local, align 4
  %v2_252ae = ptrtoint i32* %stack_var_124 to i32
  store i32 %v2_252ae, i32* %eax.global-to-local, align 8
  store i32 %v2_2529582, i32* %stack_var_124, align 4
  %v1_252ce = call i32 @unknown_49070(i32 %v2_252ae)
  store i32 %tmp43, i32* %eax.global-to-local, align 8
  %v1_252da = icmp eq i32* %arg1, null
  store i1 %v1_252da, i1* %zf.global-to-local, align 1
  br i1 %v1_252da, label %bb57, label %dec_label_pc_252e2

bb57:                                             ; preds = %dec_label_pc_252a3
  %v2_252dc = call i32 @function_2589e(i32 %v2_2529582)
  store i32 %v2_252dc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_252e2

dec_label_pc_252e2:                               ; preds = %bb57, %dec_label_pc_252a3
  %v0_252e2 = phi i32 [ %v2_252dc, %bb57 ], [ %tmp43, %dec_label_pc_252a3 ]
  %v1_252e2 = inttoptr i32 %v0_252e2 to i32*
  %v2_252e2 = load i32, i32* %v1_252e2, align 4
  store i32 %v2_252e2, i32* %eax.global-to-local, align 8
  %v1_252e4 = icmp eq i32 %v2_252e2, 0
  store i1 %v1_252e4, i1* %zf.global-to-local, align 1
  br i1 %v1_252e4, label %bb58, label %dec_label_pc_252ec

bb58:                                             ; preds = %dec_label_pc_252e2
  %v2_252e6 = call i32 @function_25899(i32 %v2_2529582)
  store i32 %v2_252e6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_252ec

dec_label_pc_252ec:                               ; preds = %bb58, %dec_label_pc_252e2
  %v0_252ec = phi i32 [ %v2_252e6, %bb58 ], [ %v2_252e2, %dec_label_pc_252e2 ]
  %v1_252ec = inttoptr i32 %v0_252ec to i32*
  %v2_252ec = load i32, i32* %v1_252ec, align 4
  %v2_252f6 = ptrtoint i32* %stack_var_108 to i32
  store i32 %v2_252f6, i32* %eax.global-to-local, align 8
  store i32 %v2_252ec, i32* %stack_var_108, align 4
  store i32 %v2_252a7, i32* %edx.global-to-local, align 4
  %v1_2530c = call i32 @unknown_49070(i32 %v2_252f6)
  store i32 %tmp43, i32* @eax, align 8
  store i1 %v1_252da, i1* %zf.global-to-local, align 1
  br i1 %v1_252da, label %bb59, label %dec_label_pc_25320

bb59:                                             ; preds = %dec_label_pc_252ec
  %v2_2531a = call i32 @function_2589e(i32 %v2_252a7)
  store i32 %v2_2531a, i32* @eax, align 8
  br label %dec_label_pc_25320

dec_label_pc_25320:                               ; preds = %bb59, %dec_label_pc_252ec
  %v0_25320 = phi i32 [ %v2_2531a, %bb59 ], [ %tmp43, %dec_label_pc_252ec ]
  %v1_25320 = add i32 %v0_25320, 8
  %v2_25320 = inttoptr i32 %v1_25320 to i32*
  %v3_25320 = load i32, i32* %v2_25320, align 4
  store i32 %v3_25320, i32* %ebp.global-to-local, align 4
  %v1_25323 = icmp eq i32 %v3_25320, 0
  store i1 %v1_25323, i1* %zf.global-to-local, align 1
  br i1 %v1_25323, label %bb60, label %dec_label_pc_2532b

bb60:                                             ; preds = %dec_label_pc_25320
  %v1_25325 = call i32 @function_25870()
  store i32 %v1_25325, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2532b

dec_label_pc_2532b:                               ; preds = %bb60, %dec_label_pc_25320
  store i32 %v0_252ec, i32* @eax, align 8
  store i32 %v0_252ec, i32* %esi.global-to-local, align 4
  %v3_2533f = load i32, i32* %stack_var_108, align 4
  store i32 %v3_2533f, i32* %ecx.global-to-local, align 4
  %v1_25347 = add i32 %v2_252a7, 4
  %v10_25347 = icmp eq i32 %v1_25347, 0
  store i1 %v10_25347, i1* %zf.global-to-local, align 1
  store i32 %v1_25347, i32* %edx.global-to-local, align 4
  %v0_25356.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25356

dec_label_pc_25356:                               ; preds = %dec_label_pc_25524, %dec_label_pc_2532b
  %v0_25356 = phi i32 [ %v0_25356.pre, %dec_label_pc_2532b ], [ %v0_25531, %dec_label_pc_25524 ]
  %v1_25356 = add i32 %v0_25356, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25356 = inttoptr i32 %v1_25356 to i32*
  %v3_25356 = load i32, i32* %v2_25356, align 4
  store i32 %v3_25356, i32* %edx.global-to-local, align 4
  %v1_2535a = add i32 %v0_25356, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_2535a = inttoptr i32 %v1_2535a to i32*
  %v3_2535a = load i32, i32* %v2_2535a, align 4
  %v15_2535a = icmp eq i32 %v3_2535a, %v3_25356
  store i1 %v15_2535a, i1* %zf.global-to-local, align 1
  br i1 %v15_2535a, label %dec_label_pc_25542, label %dec_label_pc_25364

dec_label_pc_25364:                               ; preds = %dec_label_pc_25356, %dec_label_pc_25531
  %v0_25364 = phi i32 [ %v0_25364.pre, %dec_label_pc_25531 ], [ %v0_25356, %dec_label_pc_25356 ]
  %v1_25364 = add i32 %v0_25364, 72
  %v2_25364 = inttoptr i32 %v1_25364 to i32*
  %v3_25364 = load i32, i32* %v2_25364, align 4
  store i32 %v3_25364, i32* @eax, align 8
  %v1_25368 = inttoptr i32 %v3_25364 to i8*
  %v2_25368 = load i8, i8* %v1_25368, align 1
  %v9_25368 = icmp eq i8 %v2_25368, 0
  store i1 %v9_25368, i1* %zf.global-to-local, align 1
  br i1 %v9_25368, label %bb62, label %dec_label_pc_25371

bb62:                                             ; preds = %dec_label_pc_25364
  %v1_2536b = call i32 @function_256ac()
  store i32 %v1_2536b, i32* @eax, align 8
  %v0_25371.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25371

dec_label_pc_25371:                               ; preds = %bb62, %dec_label_pc_25364
  %v1_25379 = phi i32 [ %v0_25371.pre, %bb62 ], [ %v0_25364, %dec_label_pc_25364 ]
  %v1_25371 = add i32 %v1_25379, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25371 = inttoptr i32 %v1_25371 to i32*
  %v3_25371 = load i32, i32* %v2_25371, align 4
  store i32 %v3_25371, i32* %edx.global-to-local, align 4
  %v1_25375 = inttoptr i32 %v3_25371 to i32*
  %v2_25375 = load i32, i32* %v1_25375, align 4
  store i32 %v2_25375, i32* %edx.global-to-local, align 4
  %v1_25377 = load i32, i32* %esi.global-to-local, align 4
  %v12_25377 = icmp eq i32 %v2_25375, %v1_25377
  store i1 %v12_25377, i1* %zf.global-to-local, align 1
  store i32 %v2_25375, i32* %v2_25371, align 4
  %v0_25524.pre = load i32, i32* @esp, align 4
  br i1 %v12_25377, label %dec_label_pc_25524, label %dec_label_pc_25383

dec_label_pc_25383:                               ; preds = %dec_label_pc_25371
  %v1_25383 = add i32 %v0_25524.pre, 76
  %v2_25383 = inttoptr i32 %v1_25383 to i32*
  %v3_25383 = load i32, i32* %v2_25383, align 4
  %v4_25383 = load i32, i32* %edx.global-to-local, align 4
  %v15_25383 = icmp eq i32 %v3_25383, %v4_25383
  store i1 %v15_25383, i1* %zf.global-to-local, align 1
  br i1 %v15_25383, label %bb63, label %dec_label_pc_2538d

bb63:                                             ; preds = %dec_label_pc_25383
  %v2_25387 = call i32 @function_256ef(i32 %v3_2533f)
  store i32 %v2_25387, i32* @eax, align 8
  %v0_2538d.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_25392.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_2538d

dec_label_pc_2538d:                               ; preds = %bb63, %dec_label_pc_25383
  %v1_25392 = phi i32 [ %v1_25392.pre, %bb63 ], [ %v0_25524.pre, %dec_label_pc_25383 ]
  %v0_2538d = phi i32 [ %v0_2538d.pre, %bb63 ], [ %v4_25383, %dec_label_pc_25383 ]
  %v1_2538d = add i32 %v0_2538d, 8
  %v2_2538d = inttoptr i32 %v1_2538d to i32*
  %v3_2538d = load i32, i32* %v2_2538d, align 4
  store i32 %v3_2538d, i32* %ecx.global-to-local, align 4
  %v1_25390 = icmp eq i32 %v3_2538d, 0
  store i1 %v1_25390, i1* %zf.global-to-local, align 1
  %v2_25392 = add i32 %v1_25392, 68
  %v3_25392 = inttoptr i32 %v2_25392 to i32*
  store i32 %v3_2538d, i32* %v3_25392, align 4
  br i1 %v1_25390, label %bb64, label %dec_label_pc_2539c

bb64:                                             ; preds = %dec_label_pc_2538d
  %v1_25396 = call i32 @function_2561e()
  store i32 %v1_25396, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2539c

dec_label_pc_2539c:                               ; preds = %bb64, %dec_label_pc_2538d
  %v0_253a0 = load i32, i32* @esp, align 4
  %v1_253a0 = add i32 %v0_253a0, 68
  %v2_253a0 = inttoptr i32 %v1_253a0 to i32*
  %v3_253a0 = load i32, i32* %v2_253a0, align 4
  store i32 %v3_253a0, i32* %edx.global-to-local, align 4
  %v1_253a4 = inttoptr i32 %v3_253a0 to i32*
  %v2_253a4 = load i32, i32* %v1_253a4, align 4
  store i32 %v2_253a4, i32* %eax.global-to-local, align 8
  %v2_253a6 = inttoptr i32 %v0_253a0 to i32*
  store i32 %v3_253a0, i32* %v2_253a6, align 4
  %v0_253ac = load i32, i32* @esp, align 4
  %v1_253ac = add i32 %v0_253ac, 72
  %v2_253ac = inttoptr i32 %v1_253ac to i32*
  %v3_253ac = load i32, i32* %v2_253ac, align 4
  store i32 %v3_253ac, i32* @ecx, align 4
  %v1_253b0 = add i32 %v3_253ac, 132
  %v2_253b0 = inttoptr i32 %v1_253b0 to i32*
  %v3_253b0 = load i32, i32* %v2_253b0, align 4
  store i32 %v3_253b0, i32* @esi, align 4
  %v1_253b6 = icmp eq i32 %v3_253b0, 0
  store i1 %v1_253b6, i1* %zf.global-to-local, align 1
  %v1_253b8 = icmp eq i1 %v1_253b6, false
  br i1 %v1_253b8, label %bb65, label %dec_label_pc_253be

bb65:                                             ; preds = %dec_label_pc_2539c
  %v2_253b8 = call i32 @function_25648()
  store i32 %v2_253b8, i32* %eax.global-to-local, align 8
  %v0_253be.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_253be

dec_label_pc_253be:                               ; preds = %bb65, %dec_label_pc_2539c
  %v0_253be = phi i32 [ %v0_253be.pre, %bb65 ], [ %v0_253ac, %dec_label_pc_2539c ]
  %v1_253be = add i32 %v0_253be, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_253be = inttoptr i32 %v1_253be to i32*
  %v3_253be = load i32, i32* %v2_253be, align 4
  store i32 %v3_253be, i32* %eax.global-to-local, align 8
  %v1_253c2 = add i32 %v3_253be, 8
  %v2_253c2 = inttoptr i32 %v1_253c2 to i32*
  %v3_253c2 = load i32, i32* %v2_253c2, align 4
  store i32 %v3_253c2, i32* %ebp.global-to-local, align 4
  %v1_253c5 = icmp eq i32 %v3_253c2, 0
  store i1 %v1_253c5, i1* %zf.global-to-local, align 1
  br i1 %v1_253c5, label %bb66, label %dec_label_pc_253cd

bb66:                                             ; preds = %dec_label_pc_253be
  %v1_253c7 = call i32 @function_2569c()
  store i32 %v1_253c7, i32* %eax.global-to-local, align 8
  %v0_253cd.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_253cd

dec_label_pc_253cd:                               ; preds = %bb66, %dec_label_pc_253be
  %v0_253cd = phi i32 [ %v0_253cd.pre, %bb66 ], [ %v3_253c2, %dec_label_pc_253be ]
  %v1_253cd = add i32 %v0_253cd, 16
  %v2_253cd = inttoptr i32 %v1_253cd to i32*
  %v3_253cd = load i32, i32* %v2_253cd, align 4
  store i32 %v3_253cd, i32* %ebx.global-to-local, align 4
  %v2_253d0 = add i32 %v0_253cd, 20
  %v3_253d0 = inttoptr i32 %v2_253d0 to i32*
  %v4_253d0 = load i32, i32* %v3_253d0, align 4
  %v15_253d0 = icmp eq i32 %v3_253cd, %v4_253d0
  store i1 %v15_253d0, i1* %zf.global-to-local, align 1
  br i1 %v15_253d0, label %dec_label_pc_254df, label %dec_label_pc_253d9

dec_label_pc_253d9:                               ; preds = %dec_label_pc_253cd
  %v0_253d9 = load i32, i32* @esp, align 4
  %v1_253d9 = add i32 %v0_253d9, ptrtoint (i32* @global_var_150.2766 to i32)
  store i32 %v1_253d9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_2541a

dec_label_pc_253e8:                               ; preds = %dec_label_pc_2541a
  %v0_253e8 = load i32, i32* @esp, align 4
  %v1_253e8 = add i32 %v0_253e8, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_253e8 = inttoptr i32 %v1_253e8 to i32*
  %v3_253e8 = load i32, i32* %v2_253e8, align 4
  store i32 %v3_253e8, i32* %eax.global-to-local, align 8
  %v0_253ec = load i32, i32* %esi.global-to-local, align 4
  %v2_253ec = add i32 %v0_253e8, 4
  %v3_253ec = inttoptr i32 %v2_253ec to i32*
  store i32 %v0_253ec, i32* %v3_253ec, align 4
  %v0_253f0 = load i32, i32* %eax.global-to-local, align 8
  %v1_253f0 = load i32, i32* @esp, align 4
  %v2_253f0 = add i32 %v1_253f0, 172
  %v3_253f0 = inttoptr i32 %v2_253f0 to i32*
  store i32 %v0_253f0, i32* %v3_253f0, align 4
  %v0_253f7 = load i32, i32* @esp, align 4
  %v1_253f7 = add i32 %v0_253f7, 172
  store i32 %v1_253f7, i32* %eax.global-to-local, align 8
  %v2_253fe = inttoptr i32 %v0_253f7 to i32*
  store i32 %v1_253f7, i32* %v2_253fe, align 4
  %v0_25401 = call i32 @unknown_48370()
  store i32 %v0_25401, i32* %eax.global-to-local, align 8
  %v0_25406 = load i32, i32* %esi.global-to-local, align 4
  %v1_25406 = load i32, i32* @esp, align 4
  %v2_25406 = inttoptr i32 %v1_25406 to i32*
  store i32 %v0_25406, i32* %v2_25406, align 4
  %v1_25409 = call i32 @unknown_378c0(i32 %v3_2533f)
  store i32 %v1_25409, i32* %eax.global-to-local, align 8
  %v0_2540e = load i32, i32* %ebx.global-to-local, align 4
  %v1_2540e = add i32 %v0_2540e, 12
  store i32 %v1_2540e, i32* %ebx.global-to-local, align 4
  %v1_25411 = load i32, i32* %ebp.global-to-local, align 4
  %v2_25411 = add i32 %v1_25411, 20
  %v3_25411 = inttoptr i32 %v2_25411 to i32*
  %v4_25411 = load i32, i32* %v3_25411, align 4
  %v15_25411 = icmp eq i32 %v1_2540e, %v4_25411
  store i1 %v15_25411, i1* %zf.global-to-local, align 1
  br i1 %v15_25411, label %dec_label_pc_254d0, label %dec_label_pc_253e8.dec_label_pc_2541a_crit_edge

dec_label_pc_253e8.dec_label_pc_2541a_crit_edge:  ; preds = %dec_label_pc_253e8
  %v0_2541c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_2541a

dec_label_pc_2541a:                               ; preds = %dec_label_pc_253e8.dec_label_pc_2541a_crit_edge, %dec_label_pc_253d9
  %v0_2541c = phi i32 [ %v0_2541c.pre, %dec_label_pc_253e8.dec_label_pc_2541a_crit_edge ], [ %v0_253d9, %dec_label_pc_253d9 ]
  %v0_2541a = phi i32 [ %v1_2540e, %dec_label_pc_253e8.dec_label_pc_2541a_crit_edge ], [ %v3_253cd, %dec_label_pc_253d9 ]
  %v1_2541a = inttoptr i32 %v0_2541a to i32*
  %v2_2541a = load i32, i32* %v1_2541a, align 4
  store i32 %v2_2541a, i32* %eax.global-to-local, align 8
  %v1_2541c = add i32 %v0_2541c, 187
  %v2_25423 = add i32 %v0_2541c, 176
  %v3_25423 = inttoptr i32 %v2_25423 to i32*
  store i32 %v1_2541c, i32* %v3_25423, align 4
  %v0_2542a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2542a = add i32 %v0_2542a, 4
  store i32 %v1_2542a, i32* %edi.global-to-local, align 4
  %v0_2542d = load i32, i32* @esp, align 4
  %v1_2542d = add i32 %v0_2542d, 176
  store i32 %v1_2542d, i32* %ecx.global-to-local, align 4
  %v1_25434 = add i32 %v0_2542d, 32
  %v2_25434 = inttoptr i32 %v1_25434 to i32*
  store i32 0, i32* %v2_25434, align 4
  %v0_2543c = load i32, i32* %eax.global-to-local, align 8
  %v2_2543e = ashr i32 %v0_2543c, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_25441 = xor i32 %v2_2543e, %v0_2543c
  %v3_25441 = icmp eq i32 %v2_25441, 0
  store i1 %v3_25441, i1* %zf.global-to-local, align 1
  store i32 %v2_25441, i32* %edx.global-to-local, align 4
  %v0_25443 = load i32, i32* @esp, align 4
  %v1_25443 = add i32 %v0_25443, 28
  %v2_25443 = inttoptr i32 %v1_25443 to i32*
  store i32 0, i32* %v2_25443, align 4
  %v0_2544b = load i32, i32* @esp, align 4
  %v1_2544b = add i32 %v0_2544b, 24
  %v2_2544b = inttoptr i32 %v1_2544b to i8*
  store i8 0, i8* %v2_2544b, align 1
  %v0_25450 = load i32, i32* @esp, align 4
  %v1_25450 = add i32 %v0_25450, 20
  %v2_25450 = inttoptr i32 %v1_25450 to i8*
  store i8 0, i8* %v2_25450, align 1
  %v0_25455 = load i32, i32* %edi.global-to-local, align 4
  %v1_25455 = load i32, i32* @esp, align 4
  %v2_25455 = add i32 %v1_25455, 16
  %v3_25455 = inttoptr i32 %v2_25455 to i32*
  store i32 %v0_25455, i32* %v3_25455, align 4
  %v0_25459 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25459 = load i32, i32* @esp, align 4
  %v2_25459 = add i32 %v1_25459, 12
  %v3_25459 = inttoptr i32 %v2_25459 to i32*
  store i32 %v0_25459, i32* %v3_25459, align 4
  %v0_2545d = load i32, i32* %edx.global-to-local, align 4
  %v1_2545d = load i32, i32* @esp, align 4
  %v2_2545d = add i32 %v1_2545d, 8
  %v3_2545d = inttoptr i32 %v2_2545d to i32*
  store i32 %v0_2545d, i32* %v3_2545d, align 4
  %v0_25461 = load i32, i32* %eax.global-to-local, align 8
  %v1_25461 = load i32, i32* @esp, align 4
  %v2_25461 = add i32 %v1_25461, 4
  %v3_25461 = inttoptr i32 %v2_25461 to i32*
  store i32 %v0_25461, i32* %v3_25461, align 4
  %v0_25465 = load i32, i32* %esi.global-to-local, align 4
  %v1_25465 = load i32, i32* @esp, align 4
  %v2_25465 = inttoptr i32 %v1_25465 to i32*
  store i32 %v0_25465, i32* %v2_25465, align 4
  %v0_25468 = call i32 @unknown_43b80()
  %v0_2546d = load i32, i32* @esp, align 4
  %v1_25470 = add i32 %v0_2546d, 182
  store i32 %v1_25470, i32* %eax.global-to-local, align 8
  %v2_25477 = add i32 %v0_2546d, 176
  %v3_25477 = inttoptr i32 %v2_25477 to i32*
  store i32 %v1_25470, i32* %v3_25477, align 4
  %v0_2547e = load i32, i32* %ebx.global-to-local, align 4
  %v1_2547e = inttoptr i32 %v0_2547e to i32*
  %v2_2547e = load i32, i32* %v1_2547e, align 4
  store i32 %v2_2547e, i32* %eax.global-to-local, align 8
  %v0_25480 = load i32, i32* @esp, align 4
  %v1_25480 = add i32 %v0_25480, 180
  store i32 %v1_25480, i32* %ecx.global-to-local, align 4
  %v1_25487 = add i32 %v0_25480, 28
  %v2_25487 = inttoptr i32 %v1_25487 to i32*
  store i32 0, i32* %v2_25487, align 4
  %v0_2548f = load i32, i32* @esp, align 4
  %v1_2548f = add i32 %v0_2548f, 24
  %v2_2548f = inttoptr i32 %v1_2548f to i32*
  store i32 0, i32* %v2_2548f, align 4
  %v0_25497 = load i32, i32* @esp, align 4
  %v1_25497 = add i32 %v0_25497, 20
  %v2_25497 = inttoptr i32 %v1_25497 to i8*
  store i8 0, i8* %v2_25497, align 1
  %v0_2549c = load i32, i32* %eax.global-to-local, align 8
  %v2_2549e = ashr i32 %v0_2549c, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_254a1 = xor i32 %v2_2549e, %v0_2549c
  %v3_254a1 = icmp eq i32 %v2_254a1, 0
  store i1 %v3_254a1, i1* %zf.global-to-local, align 1
  store i32 %v2_254a1, i32* %edx.global-to-local, align 4
  %v0_254a3 = load i32, i32* @esp, align 4
  %v1_254a3 = add i32 %v0_254a3, 16
  %v2_254a3 = inttoptr i32 %v1_254a3 to i8*
  store i8 0, i8* %v2_254a3, align 1
  %v0_254a8 = load i32, i32* %edi.global-to-local, align 4
  %v1_254a8 = load i32, i32* @esp, align 4
  %v2_254a8 = add i32 %v1_254a8, 12
  %v3_254a8 = inttoptr i32 %v2_254a8 to i32*
  store i32 %v0_254a8, i32* %v3_254a8, align 4
  %v0_254ac = load i32, i32* %ecx.global-to-local, align 4
  %v1_254ac = load i32, i32* @esp, align 4
  %v2_254ac = add i32 %v1_254ac, 8
  %v3_254ac = inttoptr i32 %v2_254ac to i32*
  store i32 %v0_254ac, i32* %v3_254ac, align 4
  %v0_254b0 = load i32, i32* %edx.global-to-local, align 4
  %v1_254b0 = load i32, i32* @esp, align 4
  %v2_254b0 = add i32 %v1_254b0, 4
  %v3_254b0 = inttoptr i32 %v2_254b0 to i32*
  store i32 %v0_254b0, i32* %v3_254b0, align 4
  %v0_254b4 = load i32, i32* %eax.global-to-local, align 8
  %v1_254b4 = load i32, i32* @esp, align 4
  %v2_254b4 = inttoptr i32 %v1_254b4 to i32*
  store i32 %v0_254b4, i32* %v2_254b4, align 4
  %v0_254b7 = call i32 @unknown_40f30()
  store i32 %v0_254b7, i32* %eax.global-to-local, align 8
  %v4_254bc = trunc i32 %v0_254b7 to i8
  %v5_254bc = icmp eq i8 %v4_254bc, 0
  store i1 %v5_254bc, i1* %zf.global-to-local, align 1
  br i1 %v5_254bc, label %dec_label_pc_253e8, label %dec_label_pc_254c4

dec_label_pc_254c4:                               ; preds = %dec_label_pc_2541a
  %v0_254c4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_254c4 = add i32 %v0_254c4, 4
  %v2_254c4 = inttoptr i32 %v1_254c4 to i8*
  store i8 0, i8* %v2_254c4, align 1
  %v0_254c8 = load i32, i32* %esi.global-to-local, align 4
  %v1_254c8 = load i32, i32* @esp, align 4
  %v2_254c8 = inttoptr i32 %v1_254c8 to i32*
  store i32 %v0_254c8, i32* %v2_254c8, align 4
  %v1_254cb = call i32 @unknown_378c0(i32 %v3_2533f)
  store i32 %v1_254cb, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_254d0

dec_label_pc_254d0:                               ; preds = %dec_label_pc_253e8, %dec_label_pc_254c4
  %v0_254d0 = load i32, i32* @esp, align 4
  %v1_254d0 = add i32 %v0_254d0, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_254d0 = inttoptr i32 %v1_254d0 to i32*
  %v3_254d0 = load i32, i32* %v2_254d0, align 4
  store i32 %v3_254d0, i32* %edx.global-to-local, align 4
  %v1_254d4 = add i32 %v3_254d0, 8
  %v2_254d4 = inttoptr i32 %v1_254d4 to i32*
  %v3_254d4 = load i32, i32* %v2_254d4, align 4
  store i32 %v3_254d4, i32* %ebp.global-to-local, align 4
  %v1_254d7 = icmp eq i32 %v3_254d4, 0
  store i1 %v1_254d7, i1* %zf.global-to-local, align 1
  br i1 %v1_254d7, label %bb67, label %dec_label_pc_254df

bb67:                                             ; preds = %dec_label_pc_254d0
  %v1_254d9 = call i32 @function_2569c()
  store i32 %v1_254d9, i32* %eax.global-to-local, align 8
  %v0_254df.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_254df

dec_label_pc_254df:                               ; preds = %bb67, %dec_label_pc_254d0, %dec_label_pc_253cd
  %v0_254df = phi i32 [ %v0_254df.pre, %bb67 ], [ %v3_254d4, %dec_label_pc_254d0 ], [ %v0_253cd, %dec_label_pc_253cd ]
  %v1_254df = add i32 %v0_254df, 4
  %v2_254df = inttoptr i32 %v1_254df to i8*
  %v3_254df = load i8, i8* %v2_254df, align 1
  %v10_254df = icmp eq i8 %v3_254df, 0
  store i1 %v10_254df, i1* %zf.global-to-local, align 1
  br i1 %v10_254df, label %bb68, label %dec_label_pc_254e9

bb68:                                             ; preds = %dec_label_pc_254df
  %v1_254e3 = call i32 @function_255e0()
  store i32 %v1_254e3, i32* %eax.global-to-local, align 8
  %v0_254ed.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_254e9

dec_label_pc_254e9:                               ; preds = %bb68, %dec_label_pc_254df
  %v0_254ed = phi i32 [ %v0_254ed.pre, %bb68 ], [ %v0_254df, %dec_label_pc_254df ]
  %v0_254e9 = load i32, i32* @esp, align 4
  %v1_254e9 = add i32 %v0_254e9, 72
  %v2_254e9 = inttoptr i32 %v1_254e9 to i32*
  %v3_254e9 = load i32, i32* %v2_254e9, align 4
  store i32 %v3_254e9, i32* %ecx.global-to-local, align 4
  %v1_254ed = add i32 %v0_254ed, 12
  %v2_254ed = inttoptr i32 %v1_254ed to i32*
  %v3_254ed = load i32, i32* %v2_254ed, align 4
  store i32 %v3_254ed, i32* %eax.global-to-local, align 8
  %v1_254f0 = add i32 %v3_254e9, 140
  %v2_254f0 = inttoptr i32 %v1_254f0 to i32*
  %v3_254f0 = load i32, i32* %v2_254f0, align 4
  %v4_254f0 = add i32 %v3_254f0, 1
  store i32 %v4_254f0, i32* %v2_254f0, align 4
  %v1_254f7 = icmp eq i32 %v3_254ed, 0
  store i1 %v1_254f7, i1* %zf.global-to-local, align 1
  br i1 %v1_254f7, label %dec_label_pc_25506, label %dec_label_pc_254fb

dec_label_pc_254fb:                               ; preds = %dec_label_pc_254e9
  %v1_254fb = add i32 %v3_254ed, 4
  %v2_254fb = inttoptr i32 %v1_254fb to i32*
  %v3_254fb = load i32, i32* %v2_254fb, align 4
  store i32 %v3_254fb, i32* %eax.global-to-local, align 8
  %v1_254fe = icmp eq i32 %v3_254fb, 0
  store i1 %v1_254fe, i1* %zf.global-to-local, align 1
  %v1_25500 = icmp eq i1 %v1_254fe, false
  br i1 %v1_25500, label %bb69, label %dec_label_pc_25506

bb69:                                             ; preds = %dec_label_pc_254fb
  %v2_25500 = call i32 @function_255eb()
  store i32 %v2_25500, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25506

dec_label_pc_25506:                               ; preds = %bb69, %dec_label_pc_254fb, %dec_label_pc_254e9
  %v0_25506 = load i32, i32* @esp, align 4
  %v1_25506 = add i32 %v0_25506, 68
  %v2_25506 = inttoptr i32 %v1_25506 to i32*
  %v3_25506 = load i32, i32* %v2_25506, align 4
  store i32 %v3_25506, i32* %edx.global-to-local, align 4
  %v1_2550a = inttoptr i32 %v3_25506 to i32*
  %v2_2550a = load i32, i32* %v1_2550a, align 4
  store i32 %v2_2550a, i32* @eax, align 8
  %v2_2550c = inttoptr i32 %v0_25506 to i32*
  store i32 %v3_25506, i32* %v2_2550c, align 4
  %v0_25512 = load i32, i32* @esp, align 4
  %v1_25512 = add i32 %v0_25512, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25512 = inttoptr i32 %v1_25512 to i32*
  %v3_25512 = load i32, i32* %v2_25512, align 4
  store i32 %v3_25512, i32* %edx.global-to-local, align 4
  %v1_25516 = add i32 %v0_25512, 76
  %v2_25516 = inttoptr i32 %v1_25516 to i32*
  %v3_25516 = load i32, i32* %v2_25516, align 4
  %v15_25516 = icmp eq i32 %v3_25516, %v3_25512
  store i1 %v15_25516, i1* %zf.global-to-local, align 1
  br i1 %v15_25516, label %bb70, label %dec_label_pc_25520

bb70:                                             ; preds = %dec_label_pc_25506
  %v2_2551a = call i32 @function_256ef(i32 %v3_2533f)
  store i32 %v2_2551a, i32* %eax.global-to-local, align 8
  %v0_25520.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25520

dec_label_pc_25520:                               ; preds = %bb70, %dec_label_pc_25506
  %v0_25520 = phi i32 [ %v0_25520.pre, %bb70 ], [ %v0_25512, %dec_label_pc_25506 ]
  %v1_25520 = add i32 %v0_25520, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25520 = inttoptr i32 %v1_25520 to i32*
  %v3_25520 = load i32, i32* %v2_25520, align 4
  store i32 %v3_25520, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_25524

dec_label_pc_25524:                               ; preds = %dec_label_pc_25371, %dec_label_pc_25520
  %v0_25531 = phi i32 [ %v0_25520, %dec_label_pc_25520 ], [ %v0_25524.pre, %dec_label_pc_25371 ]
  %v1_25524 = add i32 %v0_25531, 72
  %v2_25524 = inttoptr i32 %v1_25524 to i32*
  %v3_25524 = load i32, i32* %v2_25524, align 4
  store i32 %v3_25524, i32* @eax, align 8
  %v1_25528 = inttoptr i32 %v3_25524 to i8*
  %v2_25528 = load i8, i8* %v1_25528, align 1
  %v9_25528 = icmp eq i8 %v2_25528, 0
  store i1 %v9_25528, i1* %zf.global-to-local, align 1
  br i1 %v9_25528, label %dec_label_pc_25356, label %dec_label_pc_25531

dec_label_pc_25531:                               ; preds = %dec_label_pc_25524
  %v1_25531 = add i32 %v0_25531, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25531 = inttoptr i32 %v1_25531 to i32*
  %v3_25531 = load i32, i32* %v2_25531, align 4
  store i32 %v3_25531, i32* %edx.global-to-local, align 4
  %v1_25535 = add i32 %v0_25531, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_25535 = inttoptr i32 %v1_25535 to i32*
  %v3_25535 = load i32, i32* %v2_25535, align 4
  %v15_25535 = icmp eq i32 %v3_25535, %v3_25531
  store i1 %v15_25535, i1* %zf.global-to-local, align 1
  store i8 0, i8* %v1_25528, align 1
  %v0_2553c = load i1, i1* %zf.global-to-local, align 1
  %v1_2553c = icmp eq i1 %v0_2553c, false
  %v0_25364.pre = load i32, i32* @esp, align 4
  br i1 %v1_2553c, label %dec_label_pc_25364, label %dec_label_pc_25542

dec_label_pc_25542:                               ; preds = %dec_label_pc_25356, %dec_label_pc_25531
  %v0_25542 = phi i32 [ %v0_25364.pre, %dec_label_pc_25531 ], [ %v0_25356, %dec_label_pc_25356 ]
  %v1_25542 = add i32 %v0_25542, ptrtoint (i32* @global_var_148.2707 to i32)
  %v2_25542 = inttoptr i32 %v1_25542 to i32*
  %v3_25542 = load i32, i32* %v2_25542, align 4
  store i32 %v3_25542, i32* %ecx.global-to-local, align 4
  %v1_25549 = add i32 %v0_25542, ptrtoint (i32* @global_var_14c.2767 to i32)
  %v2_25549 = inttoptr i32 %v1_25549 to i32*
  %v3_25549 = load i32, i32* %v2_25549, align 4
  %v15_25549 = icmp eq i32 %v3_25549, %v3_25542
  store i1 %v15_25549, i1* %zf.global-to-local, align 1
  %tmp88 = icmp ugt i32 %v3_25549, %v3_25542
  br i1 %tmp88, label %bb71, label %dec_label_pc_25556

bb71:                                             ; preds = %dec_label_pc_25542
  %v4_25550 = call i32 @function_25771()
  store i32 %v4_25550, i32* @eax, align 8
  %v0_25556.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25556

dec_label_pc_25556:                               ; preds = %dec_label_pc_25542, %bb71
  %v0_25556 = phi i32 [ %v0_25542, %dec_label_pc_25542 ], [ %v0_25556.pre, %bb71 ]
  %v1_25556 = add i32 %v0_25556, 316
  %v2_25556 = inttoptr i32 %v1_25556 to i32*
  %v3_25556 = load i32, i32* %v2_25556, align 4
  store i32 %v3_25556, i32* @edx, align 4
  %v1_2555d = icmp eq i32 %v3_25556, 0
  store i1 %v1_2555d, i1* %zf.global-to-local, align 1
  br i1 %v1_2555d, label %bb72, label %dec_label_pc_25561

bb72:                                             ; preds = %dec_label_pc_25556
  %v1_2555f = call i32 @function_2559f()
  store i32 %v1_2555f, i32* @eax, align 8
  %v0_25561.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25561

dec_label_pc_25561:                               ; preds = %bb72, %dec_label_pc_25556
  %v0_25561 = phi i32 [ %v0_25561.pre, %bb72 ], [ %v0_25556, %dec_label_pc_25556 ]
  %v1_25561 = add i32 %v0_25561, 312
  %v2_25561 = inttoptr i32 %v1_25561 to i32*
  %v3_25561 = load i32, i32* %v2_25561, align 4
  store i32 %v3_25561, i32* @ecx, align 4
  %v10_25568 = icmp eq i32 %v3_25561, 9
  store i1 %v10_25568, i1* %zf.global-to-local, align 1
  %tmp89 = icmp ult i32 %v3_25561, 10
  br i1 %tmp89, label %bb74, label %dec_label_pc_25571

bb74:                                             ; preds = %dec_label_pc_25561
  %v3_2556b = call i32 @function_2573c()
  store i32 %v3_2556b, i32* @eax, align 8
  %v1_25571.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25571

dec_label_pc_25571:                               ; preds = %bb74, %dec_label_pc_25561
  %v1_25571 = phi i32 [ %v1_25571.pre, %bb74 ], [ %v0_25561, %dec_label_pc_25561 ]
  %v2_25571 = add i32 %v1_25571, ptrtoint (i32* @global_var_38.2432 to i32)
  %v3_25571 = inttoptr i32 %v2_25571 to i32*
  %v4_25571 = load i32, i32* %v3_25571, align 4
  %v15_25571 = icmp eq i32 %v3_25556, %v4_25571
  store i1 %v15_25571, i1* %zf.global-to-local, align 1
  br i1 %v15_25571, label %bb75, label %dec_label_pc_2557b

bb75:                                             ; preds = %dec_label_pc_25571
  %v1_25575 = call i32 @function_25733()
  store i32 %v1_25575, i32* %eax.global-to-local, align 8
  %v0_2557b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_2557b

dec_label_pc_2557b:                               ; preds = %bb75, %dec_label_pc_25571
  %v0_2557b = phi i32 [ %v0_2557b.pre, %bb75 ], [ %v1_25571, %dec_label_pc_25571 ]
  %v1_2557b = add i32 %v0_2557b, ptrtoint (i32* @global_var_140.2708 to i32)
  %v2_2557b = inttoptr i32 %v1_2557b to i32*
  %v3_2557b = load i32, i32* %v2_2557b, align 4
  store i32 %v3_2557b, i32* @eax, align 8
  %v0_25582 = load i32, i32* @ecx, align 4
  %v7_25582 = icmp ult i32 %v0_25582, %v3_2557b
  %v12_25582 = icmp eq i32 %v0_25582, %v3_2557b
  store i1 %v12_25582, i1* %zf.global-to-local, align 1
  br i1 %v7_25582, label %bb76, label %dec_label_pc_2558a

bb76:                                             ; preds = %dec_label_pc_2557b
  %v1_25584 = call i32 @function_2573c()
  store i32 %v1_25584, i32* @eax, align 8
  br label %dec_label_pc_2558a

dec_label_pc_2558a:                               ; preds = %bb76, %dec_label_pc_2557b
  %v0_2558a = phi i32 [ %v1_25584, %bb76 ], [ %v3_2557b, %dec_label_pc_2557b ]
  %v1_2558a = icmp eq i32 %v0_2558a, 0
  store i1 %v1_2558a, i1* %zf.global-to-local, align 1
  %v1_2558c = icmp eq i1 %v1_2558a, false
  br i1 %v1_2558c, label %bb77, label %dec_label_pc_25592

bb77:                                             ; preds = %dec_label_pc_2558a
  %v2_2558c = call i32 @function_256f8()
  store i32 %v2_2558c, i32* @eax, align 8
  br label %dec_label_pc_25592

dec_label_pc_25592:                               ; preds = %bb77, %dec_label_pc_2558a
  %v0_25592 = load i32, i32* @ecx, align 4
  %v10_25592 = icmp eq i32 %v0_25592, 10
  store i1 %v10_25592, i1* %zf.global-to-local, align 1
  %tmp90 = icmp ult i32 %v0_25592, 11
  br i1 %tmp90, label %bb79, label %dec_label_pc_25597

bb79:                                             ; preds = %dec_label_pc_25592
  %v3_25595 = call i32 @function_2559f()
  store i32 %v3_25595, i32* @eax, align 8
  br label %dec_label_pc_25597

dec_label_pc_25597:                               ; preds = %bb79, %dec_label_pc_25592
  %v1_25597 = load i32, i32* @esp, align 4
  %v2_25597 = inttoptr i32 %v1_25597 to i32*
  store i32 %v3_25556, i32* %v2_25597, align 4
  %v3_25597 = load i32, i32* @eax, align 8
  ret i32 %v3_25597

; uselistorder directives
  uselistorder i32 %v3_2557b, { 1, 0, 2, 3 }
  uselistorder i1 %v15_25571, { 1, 0 }
  uselistorder i32 %v3_25556, { 1, 0, 2, 3 }
  uselistorder i32 %v0_25542, { 0, 2, 1 }
  uselistorder i32 %v0_25531, { 2, 1, 3, 0 }
  uselistorder i1 %v15_25516, { 1, 0 }
  uselistorder i32 %v0_2541c, { 1, 0 }
  uselistorder i1 %v15_25411, { 1, 0 }
  uselistorder i32 %v1_2540e, { 1, 0, 2 }
  uselistorder i1 %v15_253d0, { 1, 0 }
  uselistorder i32 %v3_253cd, { 1, 0, 2 }
  uselistorder i32 %v0_253cd, { 0, 2, 1 }
  uselistorder i1 %v15_25383, { 1, 0 }
  uselistorder i32 %v4_25383, { 1, 0 }
  uselistorder i32 %v0_25524.pre, { 0, 2, 1 }
  uselistorder i1 %v12_25377, { 1, 0 }
  uselistorder i32 %v2_25375, { 1, 0, 2 }
  uselistorder i1 %v15_2535a, { 1, 0 }
  uselistorder i32 %v0_25356, { 0, 1, 3, 2 }
  uselistorder i32 %v3_2533f, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_252ec, { 2, 1, 0 }
  uselistorder i1 %v1_252da, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2529582, { 1, 2, 3, 0 }
  uselistorder i32 %v3_2528f, { 1, 0, 2 }
  uselistorder i32 %v1_2524c, { 1, 0 }
  uselistorder i32 %v6_25241, { 1, 0 }
  uselistorder i32 %tmp43, { 0, 3, 1, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 33, 34, 35, 36 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 1, 18, 19, 2, 4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 13, 14, 15, 16, 17, 3, 29, 5, 30, 6, 8, 31, 10, 32, 12, 33, 34, 9, 11 }
  uselistorder i32 ()* @function_2573c, { 1, 0 }
  uselistorder i32 ()* @function_2559f, { 1, 0 }
  uselistorder i32 76, { 11, 12, 13, 5, 14, 6, 7, 8, 0, 1, 9, 10, 2, 3, 4, 15 }
  uselistorder i32 (i32)* @unknown_49070, { 1, 0 }
  uselistorder i32* @ebp, { 171, 71, 72, 0, 73, 74, 75, 76, 77, 78, 234, 233, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 1, 89, 2, 3, 90, 237, 236, 235, 4, 238, 239, 5, 91, 92, 93, 97, 96, 95, 6, 98, 99, 7, 94, 100, 101, 243, 242, 241, 8, 244, 245, 9, 102, 240, 246, 52, 251, 252, 253, 250, 48, 10, 103, 247, 248, 249, 255, 256, 11, 254, 290, 104, 105, 106, 107, 113, 114, 117, 12, 118, 115, 13, 116, 108, 109, 110, 14, 111, 112, 124, 45, 119, 15, 120, 121, 122, 123, 125, 16, 126, 127, 49, 17, 128, 129, 18, 130, 131, 135, 132, 133, 134, 19, 136, 137, 20, 138, 21, 139, 22, 140, 141, 23, 142, 143, 24, 144, 146, 145, 147, 148, 149, 150, 151, 153, 152, 154, 155, 156, 25, 157, 158, 26, 159, 27, 160, 161, 28, 162, 164, 163, 165, 167, 166, 168, 169, 170, 261, 262, 263, 279, 291, 292, 29, 293, 30, 172, 173, 174, 31, 175, 32, 176, 300, 301, 302, 303, 304, 181, 177, 178, 179, 180, 186, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 46, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 47, 209, 210, 212, 213, 214, 33, 211, 215, 216, 34, 35, 36, 217, 218, 219, 220, 221, 222, 223, 37, 224, 225, 226, 294, 295, 296, 297, 50, 227, 228, 229, 38, 230, 231, 232, 51, 53, 54, 257, 39, 258, 259, 260, 55, 299, 264, 265, 266, 40, 267, 268, 269, 270, 271, 41, 42, 43, 44, 272, 273, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 274, 275, 69, 276, 70, 277, 278, 280, 298, 281, 282, 283, 284, 285, 286, 287, 288, 289 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_25556, { 1, 0 }
  uselistorder label %dec_label_pc_25542, { 1, 0 }
  uselistorder label %dec_label_pc_25524, { 1, 0 }
  uselistorder label %dec_label_pc_254d0, { 1, 0 }
  uselistorder label %dec_label_pc_25364, { 1, 0 }
  uselistorder label %dec_label_pc_252a3, { 1, 2, 0 }
}

define i32 @function_2559f() local_unnamed_addr {
dec_label_pc_2559f:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_144 = alloca i32, align 4
  %v2_255b1 = ptrtoint i32* %stack_var_144 to i32
  %v1_255bb = call i32 @unknown_35690(i32 %v2_255b1)
  store i32 %v1_255bb, i32* @eax, align 8
  %v1_255c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_255c7 = icmp eq i32 %v1_255c7, %tmp10
  %v1_255ce = icmp eq i1 %v3_255c7, false
  br i1 %v1_255ce, label %bb, label %dec_label_pc_255d4

bb:                                               ; preds = %dec_label_pc_2559f
  %v2_255ce = call i32 @function_25741()
  br label %dec_label_pc_255d4

dec_label_pc_255d4:                               ; preds = %bb, %dec_label_pc_2559f
  %v0_255de = phi i32 [ %v2_255ce, %bb ], [ %v1_255bb, %dec_label_pc_2559f ]
  ret i32 %v0_255de
}

define i32 @function_255e0() local_unnamed_addr {
dec_label_pc_255e0:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_255e4 = add i32 %tmp, 144
  %v2_255e4 = inttoptr i32 %v1_255e4 to i32*
  %v3_255e4 = load i32, i32* %v2_255e4, align 4
  %v4_255e4 = add i32 %v3_255e4, 1
  store i32 %v4_255e4, i32* %v2_255e4, align 4
  %v22_255e4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_255e4
}

define i32 @function_255eb() local_unnamed_addr {
dec_label_pc_255eb:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_255fb = inttoptr i32 %tmp2 to i32*
  %v2_255fb = load i32, i32* %v1_255fb, align 4
  store i32 %v2_255fb, i32* @eax, align 8
  %v15_255fd = icmp eq i32 %tmp1, %v2_255fb
  br i1 %v15_255fd, label %bb, label %dec_label_pc_2560b

bb:                                               ; preds = %dec_label_pc_255eb
  %v2_25605 = call i32 @function_256ef(i32 %tmp4)
  br label %dec_label_pc_2560b

dec_label_pc_2560b:                               ; preds = %bb, %dec_label_pc_255eb
  %v1_2560f = add i32 %v2_255fb, 8
  %v2_2560f = inttoptr i32 %v1_2560f to i32*
  %v3_2560f = load i32, i32* %v2_2560f, align 4
  ret i32 %v3_2560f

; uselistorder directives
  uselistorder i32 %v2_255fb, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_256ef, { 2, 1, 0 }
}

define i32 @function_2561e() local_unnamed_addr {
dec_label_pc_2561e:
  %v3_25636 = load i32, i32* @eax, align 8
  ret i32 %v3_25636
}

define i32 @function_25648() local_unnamed_addr {
dec_label_pc_25648:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_25648 = load i32, i32* @ecx, align 4
  %v1_25648 = add i32 %v0_25648, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_25648 = inttoptr i32 %v1_25648 to i32*
  %v3_25648 = load i32, i32* %v2_25648, align 4
  %v0_2564e = load i32, i32* @esi, align 4
  %v2_2564e = mul i32 %v0_2564e, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_2564e = add i32 %v0_2564e, -3
  %v4_2564e = add i32 %v3_2564e, %v2_2564e
  %v3_25652 = mul i32 %v0_2564e, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_25655 = shl i32 %v3_25652, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_25655 = icmp eq i32 %v2_25655, 0
  %v2_25658 = mul i32 %v4_2564e, 4
  %v3_25658 = add i32 %v2_25658, %v3_25648
  store i32 %v3_25658, i32* %ebx.global-to-local, align 4
  %v2_2565d = sub i32 %v3_25658, %v2_25655
  store i32 %v2_2565d, i32* %edi.global-to-local, align 4
  %v7_2565f = icmp ult i32 %v3_25658, %v2_2565d
  %v2_25661 = or i1 %v3_25655, %v7_2565f
  br i1 %v2_25661, label %bb, label %dec_label_pc_25668

bb:                                               ; preds = %dec_label_pc_25648
  %v3_25661 = call i32 @function_256a8()
  %v0_25668.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_25668

dec_label_pc_25668:                               ; preds = %dec_label_pc_25648, %bb, %dec_label_pc_25668
  %v0_25668 = phi i32 [ %v1_25670, %dec_label_pc_25668 ], [ %v3_25658, %dec_label_pc_25648 ], [ %v0_25668.pre.pre, %bb ]
  %v1_2566b = call i32 @unknown_378c0(i32 %v0_25668)
  %v0_25670 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25670 = add i32 %v0_25670, -12
  store i32 %v1_25670, i32* %ebx.global-to-local, align 4
  %v0_25673 = load i32, i32* %edi.global-to-local, align 4
  %v7_25673 = icmp ult i32 %v0_25673, %v1_25670
  br i1 %v7_25673, label %dec_label_pc_25668, label %dec_label_pc_25677

dec_label_pc_25677:                               ; preds = %dec_label_pc_25668
  %v1_2567b = add i32 %tmp4, 132
  %v2_2567b = inttoptr i32 %v1_2567b to i32*
  %v3_2567b = load i32, i32* %v2_2567b, align 4
  %v1_25681 = load i32, i32* @esi, align 4
  %v2_25681 = sub i32 %v3_2567b, %v1_25681
  store i32 %v2_25681, i32* %v2_2567b, align 4
  ret i32 %tmp3

; uselistorder directives
  uselistorder i32 %v1_25670, { 1, 2, 0 }
  uselistorder i32 %v0_2564e, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_25668, { 2, 1, 0 }
}

define i32 @function_2569c() local_unnamed_addr {
dec_label_pc_2569c:
  %v0_2569c = call i32 @unknown_3359e()
  ret i32 %v0_2569c
}

define i32 @function_256a8() local_unnamed_addr {
dec_label_pc_256a8:
  ret i32 0
}

define i32 @function_256ac() local_unnamed_addr {
dec_label_pc_256ac:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_256b8 = add i32 %tmp8, 8
  %v2_256b8 = inttoptr i32 %v1_256b8 to i32*
  %v3_256b8 = load i32, i32* %v2_256b8, align 4
  %v1_256bb = icmp eq i32 %v3_256b8, 0
  br i1 %v1_256bb, label %bb, label %dec_label_pc_256bf

bb:                                               ; preds = %dec_label_pc_256ac
  %v1_256bd = call i32 @function_2569c()
  br label %dec_label_pc_256bf

dec_label_pc_256bf:                               ; preds = %bb, %dec_label_pc_256ac
  %v0_256bf = phi i32 [ %v1_256bd, %bb ], [ %v3_256b8, %dec_label_pc_256ac ]
  %v1_256bf = add i32 %v0_256bf, 28
  %v2_256bf = inttoptr i32 %v1_256bf to i32*
  %v3_256bf = load i32, i32* %v2_256bf, align 4
  store i32 %v3_256bf, i32* @edx, align 4
  %v1_256c2 = icmp eq i32 %v3_256bf, 0
  br i1 %v1_256c2, label %bb9, label %dec_label_pc_256ca

bb9:                                              ; preds = %dec_label_pc_256bf
  %v1_256c4 = call i32 @function_257dc()
  br label %dec_label_pc_256ca

dec_label_pc_256ca:                               ; preds = %bb9, %dec_label_pc_256bf
  %v0_256ca = phi i32 [ %v1_256c4, %bb9 ], [ %v0_256bf, %dec_label_pc_256bf ]
  %v1_256ca = add i32 %v0_256ca, 32
  ret i32 %v1_256ca

; uselistorder directives
  uselistorder i32 ()* @function_2569c, { 2, 1, 0 }
}

define i32 @function_256ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_256ef:
  %v0_256f3 = load i32, i32* @eax, align 8
  ret i32 %v0_256f3
}

define i32 @function_256f8() local_unnamed_addr {
dec_label_pc_256f8:
  %v0_256f8 = load i32, i32* @eax, align 8
  %v2_256f8 = mul i32 %v0_256f8, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_256f8 = add i32 %v0_256f8, -3
  %v4_256f8 = add i32 %v3_256f8, %v2_256f8
  %v0_256fc = load i32, i32* @edx, align 4
  %v2_256fc = mul i32 %v4_256f8, 4
  %v3_256fc = add i32 %v2_256fc, %v0_256fc
  %v3_256ff = mul i32 %v0_256f8, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_25704 = shl i32 %v3_256ff, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_25707 = sub i32 %v3_256fc, %v2_25704
  %v1_25714 = call i32 @unknown_378c0(i32 %v3_256fc)
  %v1_25719 = add i32 %v3_256fc, -12
  %v7_2571c = icmp ult i32 %v2_25707, %v1_25719
  br i1 %v7_2571c, label %dec_label_pc_25711, label %dec_label_pc_25720

dec_label_pc_25711:                               ; preds = %dec_label_pc_256f8
  ret i32 %v1_25714

dec_label_pc_25720:                               ; preds = %dec_label_pc_256f8
  ret i32 %v1_25714

; uselistorder directives
  uselistorder i32 %v1_25714, { 1, 0 }
  uselistorder i32 %v0_256f8, { 0, 2, 1 }
}

define i32 @function_25730() local_unnamed_addr {
dec_label_pc_25730:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25733() local_unnamed_addr {
dec_label_pc_25733:
  %v0_25736 = load i32, i32* @eax, align 8
  ret i32 %v0_25736
}

define i32 @function_2573c() local_unnamed_addr {
dec_label_pc_2573c:
  %v0_2573c = call i32 @unknown_3370a()
  ret i32 %v0_2573c
}

define i32 @function_25741() local_unnamed_addr {
dec_label_pc_25741:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25759() local_unnamed_addr {
dec_label_pc_25759:
  %eax.global-to-local = alloca i32, align 4
  %v0_25759 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25759
}

define i32 @function_2575a() local_unnamed_addr {
dec_label_pc_2575a:
  %stack_var_144 = alloca i32, align 4
  %v2_2575a = ptrtoint i32* %stack_var_144 to i32
  %v1_25764 = call i32 @unknown_35690(i32 %v2_2575a)
  ret i32 %v1_25764

; uselistorder directives
  uselistorder i32 (i32)* @unknown_35690, { 1, 2, 0 }
}

define i32 @function_25771() local_unnamed_addr {
dec_label_pc_25771:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_25780 = call i32 @unknown_46a40(i32 %tmp2, i32 %tmp3)
  ret i32 %v2_25780
}

define i32 @function_2578b() local_unnamed_addr {
dec_label_pc_2578b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2578b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2578b
}

define i32 @function_2578c() local_unnamed_addr {
dec_label_pc_2578c:
  %stack_var_188 = alloca i32, align 4
  %v2_2578c = ptrtoint i32* %stack_var_188 to i32
  %v1_25796 = call i32 @unknown_398d0(i32 %v2_2578c)
  %v0_2579b = call i32 @function_2575a()
  ret i32 %v0_2579b
}

define i32 @function_2579d(i32* %arg1) local_unnamed_addr {
dec_label_pc_2579d:
  ret i32 0
}

define i32 @function_257aa() local_unnamed_addr {
dec_label_pc_257aa:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_257aa = load i32, i32* @edx, align 4
  %v10_257aa = icmp eq i32 %v0_257aa, 1
  br i1 %v10_257aa, label %bb, label %dec_label_pc_257af

bb:                                               ; preds = %dec_label_pc_257aa
  %v1_257ad = call i32 @function_25825()
  store i32 %v1_257ad, i32* @eax, align 8
  %v0_257af.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_257af

dec_label_pc_257af:                               ; preds = %bb, %dec_label_pc_257aa
  %v0_257af = phi i32 [ %v0_257af.pre, %bb ], [ %v0_257aa, %dec_label_pc_257aa ]
  %v10_257af = icmp eq i32 %v0_257af, 1
  br i1 %v10_257af, label %bb5, label %dec_label_pc_257af.dec_label_pc_257b4_crit_edge

dec_label_pc_257af.dec_label_pc_257b4_crit_edge:  ; preds = %dec_label_pc_257af
  br label %dec_label_pc_257b4

bb5:                                              ; preds = %dec_label_pc_257af
  %v1_257b2 = call i32 @function_25813()
  br label %dec_label_pc_257b4

dec_label_pc_257b4:                               ; preds = %dec_label_pc_257af.dec_label_pc_257b4_crit_edge, %bb5
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_257aa, { 1, 0 }
  uselistorder label %dec_label_pc_257b4, { 1, 0 }
}

define i32 @function_257c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_257c0:
  %v2_257c1 = load i32, i32* @eax, align 8
  %v4_257c1 = mul i32 %v2_257c1, 2
  %v21_257c1 = inttoptr i32 %v2_257c1 to i32*
  store i32 %v4_257c1, i32* %v21_257c1, align 4
  %v0_257c3 = load i32, i32* @esi, align 4
  %v1_257c3 = add i32 %v0_257c3, -58
  %v2_257c3 = inttoptr i32 %v1_257c3 to i8*
  %v3_257c3 = load i8, i8* %v2_257c3, align 1
  %v4_257c3 = load i32, i32* @edx, align 4
  %v5_257c3 = udiv i32 %v4_257c3, 256
  %v6_257c3 = trunc i32 %v5_257c3 to i8
  %v7_257c3 = add i8 %v6_257c3, %v3_257c3
  store i8 %v7_257c3, i8* %v2_257c3, align 1
  %v2_257d5 = call i32 @unknown_46a40(i32 %arg1, i32 %arg2)
  %v0_257da = call i32 @function_2578c()
  ret i32 %v0_257da

; uselistorder directives
  uselistorder i32 %v2_257c1, { 1, 0 }
  uselistorder i32 -58, { 1, 0 }
  uselistorder i32 2, { 3, 4, 5, 88, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 87, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 1, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 2, 83, 84, 85, 86 }
}

define i32 @function_257dc() local_unnamed_addr {
dec_label_pc_257dc:
  %stack_var_156 = alloca i32, align 4
  %v2_257dc = ptrtoint i32* %stack_var_156 to i32
  %v1_257e6 = call i32 @unknown_35b50(i32 %v2_257dc)
  %v1_257f5 = call i32 @unknown_38790(i32 %v2_257dc)
  store i32 %v1_257f5, i32* @eax, align 8
  %v0_257fc = load i32, i32* @edx, align 4
  %v1_25808 = call i32 @function_30710(i32 %v2_257dc)
  store i32 %v1_257f5, i32* @eax, align 8
  store i32 %v0_257fc, i32* @edx, align 4
  %v0_25811 = call i32 @function_257aa()
  ret i32 %v0_25811
}

define i32 @function_25813() local_unnamed_addr {
dec_label_pc_25813:
  %v3_25813 = load i32, i32* @eax, align 8
  ret i32 %v3_25813
}

define i32 @function_2581b() local_unnamed_addr {
dec_label_pc_2581b:
  %eax.global-to-local = alloca i32, align 4
  %v0_25820 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25820
}

define i32 @function_25825() local_unnamed_addr {
dec_label_pc_25825:
  %v3_25825 = load i32, i32* @eax, align 8
  ret i32 %v3_25825
}

define i32 @function_25854(i32* %arg1) local_unnamed_addr {
dec_label_pc_25854:
  %ecx.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_25854 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25854 = add i32 %v0_25854, 607422915
  %v2_25854 = inttoptr i32 %v1_25854 to i32*
  %v3_25854 = load i32, i32* %v2_25854, align 4
  %v4_25854 = add i32 %v3_25854, -1
  store i32 %v4_25854, i32* %v2_25854, align 4
  %v1_2585a = call i32 @unknown_378c0(i32 ptrtoint (i32* @1 to i32))
  store i32 %tmp98, i32* %ecx.global-to-local, align 4
  %v2_25863 = load i32, i32* %arg1, align 4
  ret i32 %v2_25863

; uselistorder directives
  uselistorder i32 (i32)* @unknown_378c0, { 4, 3, 2, 0, 1 }
}

define i32 @function_25870() local_unnamed_addr {
dec_label_pc_25870:
  %v0_25894 = load i32, i32* @eax, align 8
  ret i32 %v0_25894
}

define i32 @function_25899(i32 %arg1) local_unnamed_addr {
dec_label_pc_25899:
  %v0_25899 = call i32 @unknown_334ce()
  ret i32 %v0_25899
}

define i32 @function_2589e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2589e:
  %stack_var_164 = alloca i32, align 4
  %v0_258a0 = call i32 @unknown_33396()
  %v2_258a7 = ptrtoint i32* %stack_var_164 to i32
  %v1_258b1 = call i32 @unknown_3b480(i32 %v2_258a7)
  %v0_258b6 = call i32 @function_2575a()
  ret i32 %v0_258b6
}

define i32 @function_258bb() local_unnamed_addr {
dec_label_pc_258bb:
  %stack_var_168 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_258bb = load i32, i32* @eax, align 8
  %v1_258bb = add i32 %v0_258bb, 4
  %v2_258bb = inttoptr i32 %v1_258bb to i32*
  %v3_258bb = load i32, i32* %v2_258bb, align 4
  store i32 %v3_258bb, i32* @eax, align 8
  %v10_258be = icmp eq i32 %v3_258bb, 1
  %v1_258c1 = icmp eq i1 %v10_258be, false
  br i1 %v1_258c1, label %bb, label %dec_label_pc_258c7

bb:                                               ; preds = %dec_label_pc_258bb
  %v2_258c1 = call i32 @function_2596a()
  br label %dec_label_pc_258c7

dec_label_pc_258c7:                               ; preds = %bb, %dec_label_pc_258bb
  store i32 0, i32* %stack_var_168, align 4
  %v1_258d6 = inttoptr i32 %tmp12 to i32*
  %v2_258d6 = load i32, i32* %v1_258d6, align 4
  %v1_258d8 = icmp eq i32 %v2_258d6, 0
  br i1 %v1_258d8, label %bb14, label %dec_label_pc_258dc

bb14:                                             ; preds = %dec_label_pc_258c7
  %v2_258da = call i32 @function_2589e(i32 0)
  br label %dec_label_pc_258dc

dec_label_pc_258dc:                               ; preds = %bb14, %dec_label_pc_258c7
  %v0_258dc = phi i32 [ %v2_258da, %bb14 ], [ %v2_258d6, %dec_label_pc_258c7 ]
  %v1_258dc = inttoptr i32 %v0_258dc to i32*
  %v2_258dc = load i32, i32* %v1_258dc, align 4
  store i32 %v2_258dc, i32* @eax, align 8
  %v1_258de = icmp eq i32 %v2_258dc, 0
  br i1 %v1_258de, label %bb15, label %dec_label_pc_258e2

bb15:                                             ; preds = %dec_label_pc_258dc
  %v1_258e0 = load i32, i32* %stack_var_168, align 4
  %v2_258e0 = call i32 @function_25899(i32 %v1_258e0)
  store i32 %v2_258e0, i32* @eax, align 8
  br label %dec_label_pc_258e2

dec_label_pc_258e2:                               ; preds = %bb15, %dec_label_pc_258dc
  %v0_258e6 = phi i32 [ %v2_258e0, %bb15 ], [ %v2_258dc, %dec_label_pc_258dc ]
  %v2_258e6 = add i32 %tmp12, 8
  %v3_258e6 = inttoptr i32 %v2_258e6 to i32*
  %v4_258e6 = load i32, i32* %v3_258e6, align 4
  %v15_258e6 = icmp eq i32 %v0_258e6, %v4_258e6
  br i1 %v15_258e6, label %bb16, label %dec_label_pc_258eb

bb16:                                             ; preds = %dec_label_pc_258e2
  %v1_258e9 = call i32 @function_2595f()
  br label %dec_label_pc_258eb

dec_label_pc_258eb:                               ; preds = %bb16, %dec_label_pc_258e2
  %v3_258ef = load i32, i32* %v3_258e6, align 4
  store i32 %v3_258ef, i32* %stack_var_168, align 4
  %v2_258fd = ptrtoint i32* %stack_var_168 to i32
  %v5_2591b = call i32 @unknown_461d0(i32 %tmp12, i32 0, i32 %v2_258fd, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp12, { 2, 1, 0 }
  uselistorder i32* %stack_var_168, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @function_25899, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_2589e, { 0, 3, 2, 1 }
}

define i32 @function_25946() local_unnamed_addr {
dec_label_pc_25946:
  %eax.global-to-local = alloca i32, align 4
  %v0_25946 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25946
}

define i32 @function_2594e() local_unnamed_addr {
dec_label_pc_2594e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2594e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2594e
}

define i32 @function_25956() local_unnamed_addr {
dec_label_pc_25956:
  %ebx.global-to-local = alloca i32, align 4
  %v0_25956 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_25956
}

define i32 @function_2595f() local_unnamed_addr {
dec_label_pc_2595f:
  %v0_25968 = load i32, i32* @eax, align 8
  ret i32 %v0_25968
}

define i32 @function_2596a() local_unnamed_addr {
dec_label_pc_2596a:
  %v3_25982 = load i32, i32* @eax, align 8
  ret i32 %v3_25982
}

define i32 @_ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25990:
  %v1_259e3 = add i32 %arg2, 12
  ret i32 %v1_259e3
}

define i32 @function_25a24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25a24:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25a36(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25a36:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25a7d(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25a7d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_108 = alloca i32, align 4
  %stack_var_124 = alloca i32, align 4
  %stack_var_188 = alloca i8, align 1
  %v0_25a7d = load i32, i32* %ebp.global-to-local, align 4
  %v1_25a7d = add i32 %v0_25a7d, 12592260
  %v2_25a7d = inttoptr i32 %v1_25a7d to i32*
  %v3_25a7d = load i32, i32* %v2_25a7d, align 4
  %v4_25a7d = add i32 %v3_25a7d, -1
  store i32 %v4_25a7d, i32* %v2_25a7d, align 4
  %v2_25a83 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_25a83 = load i32, i32* %eax.global-to-local, align 8
  %v4_25a83 = trunc i32 %v3_25a83 to i8
  %v5_25a83 = add i8 %v4_25a83, %v2_25a83
  %v21_25a83 = inttoptr i32 %v3_25a83 to i8*
  store i8 %v5_25a83, i8* %v21_25a83, align 1
  %v0_25a85 = load i32, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i8 0, i8* %stack_var_188, align 1
  %v1_25ac0 = icmp eq i32 %arg2, 0
  store i1 %v1_25ac0, i1* %zf.global-to-local, align 1
  br i1 %v1_25ac0, label %bb, label %dec_label_pc_25ade

bb:                                               ; preds = %dec_label_pc_25a7d
  %v2_25ad8 = call i32 @function_26268(i32 %v0_25a85)
  store i32 %v2_25ad8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25ade

dec_label_pc_25ade:                               ; preds = %bb, %dec_label_pc_25a7d
  %v0_25ade = phi i32 [ %v2_25ad8, %bb ], [ %arg2, %dec_label_pc_25a7d ]
  %v1_25ade = inttoptr i32 %v0_25ade to i32*
  %v2_25ade = load i32, i32* %v1_25ade, align 4
  store i32 %v2_25ade, i32* %eax.global-to-local, align 8
  %v1_25ae0 = icmp eq i32 %v2_25ade, 0
  store i1 %v1_25ae0, i1* %zf.global-to-local, align 1
  br i1 %v1_25ae0, label %bb158, label %dec_label_pc_25aec

bb158:                                            ; preds = %dec_label_pc_25ade
  %v2_25ae6 = call i32 @function_26263(i32 0)
  store i32 %v2_25ae6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25aec

dec_label_pc_25aec:                               ; preds = %bb158, %dec_label_pc_25ade
  store i32 %v2_25ade, i32* %edx.global-to-local, align 4
  %v2_25af0 = ptrtoint i8* %stack_var_188 to i32
  store i32 %v2_25af0, i32* %ecx.global-to-local, align 4
  %v2_25af7 = ptrtoint i32* %stack_var_124 to i32
  store i32 %v2_25af7, i32* %eax.global-to-local, align 8
  store i32 %v2_25ade, i32* %stack_var_124, align 4
  %v1_25b17 = call i32 @unknown_49180(i32 %v2_25af7)
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i1 %v1_25ac0, i1* %zf.global-to-local, align 1
  br i1 %v1_25ac0, label %bb159, label %dec_label_pc_25b2b

bb159:                                            ; preds = %dec_label_pc_25aec
  %v2_25b25 = call i32 @function_26268(i32 %v2_25ade)
  store i32 %v2_25b25, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25b2b

dec_label_pc_25b2b:                               ; preds = %bb159, %dec_label_pc_25aec
  %v0_25b2b = phi i32 [ %v2_25b25, %bb159 ], [ %arg2, %dec_label_pc_25aec ]
  %v1_25b2b = inttoptr i32 %v0_25b2b to i32*
  %v2_25b2b = load i32, i32* %v1_25b2b, align 4
  store i32 %v2_25b2b, i32* %eax.global-to-local, align 8
  %v1_25b2d = icmp eq i32 %v2_25b2b, 0
  store i1 %v1_25b2d, i1* %zf.global-to-local, align 1
  br i1 %v1_25b2d, label %bb160, label %dec_label_pc_25b35

bb160:                                            ; preds = %dec_label_pc_25b2b
  %v2_25b2f = call i32 @function_26263(i32 %v2_25ade)
  store i32 %v2_25b2f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25b35

dec_label_pc_25b35:                               ; preds = %bb160, %dec_label_pc_25b2b
  %v0_25b35 = phi i32 [ %v2_25b2f, %bb160 ], [ %v2_25b2b, %dec_label_pc_25b2b ]
  %v1_25b35 = inttoptr i32 %v0_25b35 to i32*
  %v2_25b35 = load i32, i32* %v1_25b35, align 4
  %v2_25b3f = ptrtoint i32* %stack_var_108 to i32
  store i32 %v2_25b3f, i32* %eax.global-to-local, align 8
  store i32 %v2_25b35, i32* %stack_var_108, align 4
  store i32 %v2_25af0, i32* %edx.global-to-local, align 4
  %v1_25b55 = call i32 @unknown_49180(i32 %v2_25b3f)
  store i32 %arg2, i32* @eax, align 8
  store i1 %v1_25ac0, i1* %zf.global-to-local, align 1
  br i1 %v1_25ac0, label %bb161, label %dec_label_pc_25b69

bb161:                                            ; preds = %dec_label_pc_25b35
  %v2_25b63 = call i32 @function_26268(i32 %v2_25af0)
  store i32 %v2_25b63, i32* @eax, align 8
  br label %dec_label_pc_25b69

dec_label_pc_25b69:                               ; preds = %bb161, %dec_label_pc_25b35
  %v0_25b69 = phi i32 [ %v2_25b63, %bb161 ], [ %arg2, %dec_label_pc_25b35 ]
  %v1_25b69 = add i32 %v0_25b69, 8
  %v2_25b69 = inttoptr i32 %v1_25b69 to i32*
  %v3_25b69 = load i32, i32* %v2_25b69, align 4
  store i32 %v3_25b69, i32* %ebx.global-to-local, align 4
  %v1_25b6c = icmp eq i32 %v3_25b69, 0
  store i1 %v1_25b6c, i1* %zf.global-to-local, align 1
  br i1 %v1_25b6c, label %bb162, label %dec_label_pc_25b74

bb162:                                            ; preds = %dec_label_pc_25b69
  %v1_25b6e = call i32 @function_2623a()
  store i32 %v1_25b6e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25b74

dec_label_pc_25b74:                               ; preds = %bb162, %dec_label_pc_25b69
  store i32 %v0_25b35, i32* %esi.global-to-local, align 4
  %v4_25b94 = ptrtoint i8* %arg1 to i32
  store i32 %v4_25b94, i32* %eax.global-to-local, align 8
  %v3_25b98 = load i32, i32* %stack_var_108, align 4
  store i32 %v3_25b98, i32* %edx.global-to-local, align 4
  %v1_25b9c = add i32 %v2_25af0, 4
  %v10_25b9c = icmp eq i32 %v1_25b9c, 0
  store i1 %v10_25b9c, i1* %zf.global-to-local, align 1
  store i32 %v1_25b9c, i32* %ecx.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_25baa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25baa

dec_label_pc_25baa:                               ; preds = %dec_label_pc_25d94, %dec_label_pc_25b74
  %v0_25baa = phi i32 [ %v0_25baa.pre, %dec_label_pc_25b74 ], [ %v0_25da1, %dec_label_pc_25d94 ]
  %v1_25baa = add i32 %v0_25baa, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25baa = inttoptr i32 %v1_25baa to i32*
  %v3_25baa = load i32, i32* %v2_25baa, align 4
  store i32 %v3_25baa, i32* %edx.global-to-local, align 4
  %v1_25bae = add i32 %v0_25baa, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_25bae = inttoptr i32 %v1_25bae to i32*
  %v3_25bae = load i32, i32* %v2_25bae, align 4
  %v15_25bae = icmp eq i32 %v3_25bae, %v3_25baa
  store i1 %v15_25bae, i1* %zf.global-to-local, align 1
  br i1 %v15_25bae, label %dec_label_pc_25db2, label %dec_label_pc_25bb8

dec_label_pc_25bb8:                               ; preds = %dec_label_pc_25baa, %dec_label_pc_25da1
  %v0_25bb8 = phi i32 [ %v0_25bb8.pre, %dec_label_pc_25da1 ], [ %v0_25baa, %dec_label_pc_25baa ]
  %v1_25bb8 = add i32 %v0_25bb8, 68
  %v2_25bb8 = inttoptr i32 %v1_25bb8 to i32*
  %v3_25bb8 = load i32, i32* %v2_25bb8, align 4
  store i32 %v3_25bb8, i32* @eax, align 8
  %v1_25bbc = inttoptr i32 %v3_25bb8 to i8*
  %v2_25bbc = load i8, i8* %v1_25bbc, align 1
  %v9_25bbc = icmp eq i8 %v2_25bbc, 0
  store i1 %v9_25bbc, i1* %zf.global-to-local, align 1
  br i1 %v9_25bbc, label %bb164, label %dec_label_pc_25bc5

bb164:                                            ; preds = %dec_label_pc_25bb8
  %v1_25bbf = call i32 @function_25f3b()
  store i32 %v1_25bbf, i32* %eax.global-to-local, align 8
  %v0_25bc5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25bc5

dec_label_pc_25bc5:                               ; preds = %bb164, %dec_label_pc_25bb8
  %v0_25bc5 = phi i32 [ %v0_25bc5.pre, %bb164 ], [ %v0_25bb8, %dec_label_pc_25bb8 ]
  %v1_25bc5 = add i32 %v0_25bc5, 80
  %v2_25bc5 = inttoptr i32 %v1_25bc5 to i32*
  %v3_25bc5 = load i32, i32* %v2_25bc5, align 4
  store i32 %v3_25bc5, i32* %eax.global-to-local, align 8
  %v1_25bc9 = inttoptr i32 %v3_25bc5 to i8*
  %v2_25bc9 = load i8, i8* %v1_25bc9, align 1
  %v9_25bc9 = icmp eq i8 %v2_25bc9, 0
  store i1 %v9_25bc9, i1* %zf.global-to-local, align 1
  br i1 %v9_25bc9, label %bb165, label %dec_label_pc_25bd2

bb165:                                            ; preds = %dec_label_pc_25bc5
  %v1_25bcc = call i32 @function_25f24()
  store i32 %v1_25bcc, i32* %eax.global-to-local, align 8
  %v0_25bd2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25bd2

dec_label_pc_25bd2:                               ; preds = %bb165, %dec_label_pc_25bc5
  %v0_25bd2 = phi i32 [ %v0_25bd2.pre, %bb165 ], [ %v0_25bc5, %dec_label_pc_25bc5 ]
  %v1_25bd2 = add i32 %v0_25bd2, 68
  %v2_25bd2 = inttoptr i32 %v1_25bd2 to i32*
  %v3_25bd2 = load i32, i32* %v2_25bd2, align 4
  store i32 %v3_25bd2, i32* %ecx.global-to-local, align 4
  %v1_25bd6 = add i32 %v0_25bd2, 80
  %v2_25bd6 = inttoptr i32 %v1_25bd6 to i32*
  %v3_25bd6 = load i32, i32* %v2_25bd6, align 4
  store i32 %v3_25bd6, i32* %edx.global-to-local, align 4
  %v1_25bda = add i32 %v3_25bd2, 1
  %v2_25bda = inttoptr i32 %v1_25bda to i8*
  %v3_25bda = load i8, i8* %v2_25bda, align 1
  %v4_25bda = zext i8 %v3_25bda to i32
  store i32 %v4_25bda, i32* @eax, align 8
  %v3_25bde = add i32 %v3_25bd6, 1
  %v4_25bde = inttoptr i32 %v3_25bde to i8*
  store i8 %v3_25bda, i8* %v4_25bde, align 1
  %v0_25be1 = load i32, i32* @esp, align 4
  %v1_25be1 = add i32 %v0_25be1, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25be1 = inttoptr i32 %v1_25be1 to i32*
  %v3_25be1 = load i32, i32* %v2_25be1, align 4
  store i32 %v3_25be1, i32* %ecx.global-to-local, align 4
  %v1_25be5 = inttoptr i32 %v3_25be1 to i32*
  %v2_25be5 = load i32, i32* %v1_25be5, align 4
  store i32 %v2_25be5, i32* %ecx.global-to-local, align 4
  %v1_25be7 = load i32, i32* %esi.global-to-local, align 4
  %v12_25be7 = icmp eq i32 %v2_25be5, %v1_25be7
  store i1 %v12_25be7, i1* %zf.global-to-local, align 1
  store i32 %v2_25be5, i32* %v2_25be1, align 4
  %v0_25d94.pre = load i32, i32* @esp, align 4
  br i1 %v12_25be7, label %dec_label_pc_25d94, label %dec_label_pc_25bf3

dec_label_pc_25bf3:                               ; preds = %dec_label_pc_25bd2
  %v1_25bf3 = add i32 %v0_25d94.pre, 72
  %v2_25bf3 = inttoptr i32 %v1_25bf3 to i32*
  %v3_25bf3 = load i32, i32* %v2_25bf3, align 4
  %v4_25bf3 = load i32, i32* %ecx.global-to-local, align 4
  %v15_25bf3 = icmp eq i32 %v3_25bf3, %v4_25bf3
  store i1 %v15_25bf3, i1* %zf.global-to-local, align 1
  br i1 %v15_25bf3, label %bb166, label %dec_label_pc_25bfd

bb166:                                            ; preds = %dec_label_pc_25bf3
  %v2_25bf7 = call i32 @function_25f7e(i32 %v1_25b9c)
  store i32 %v2_25bf7, i32* %eax.global-to-local, align 8
  %v0_25bfd.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_25c02.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25bfd

dec_label_pc_25bfd:                               ; preds = %bb166, %dec_label_pc_25bf3
  %v1_25c02 = phi i32 [ %v1_25c02.pre, %bb166 ], [ %v0_25d94.pre, %dec_label_pc_25bf3 ]
  %v0_25bfd = phi i32 [ %v0_25bfd.pre, %bb166 ], [ %v4_25bf3, %dec_label_pc_25bf3 ]
  %v1_25bfd = add i32 %v0_25bfd, 8
  %v2_25bfd = inttoptr i32 %v1_25bfd to i32*
  %v3_25bfd = load i32, i32* %v2_25bfd, align 4
  store i32 %v3_25bfd, i32* @eax, align 8
  %v1_25c00 = icmp eq i32 %v3_25bfd, 0
  store i1 %v1_25c00, i1* %zf.global-to-local, align 1
  %v2_25c02 = add i32 %v1_25c02, ptrtoint (i32* @global_var_40.2433 to i32)
  %v3_25c02 = inttoptr i32 %v2_25c02 to i32*
  store i32 %v3_25bfd, i32* %v3_25c02, align 4
  br i1 %v1_25c00, label %bb167, label %dec_label_pc_25c0c

bb167:                                            ; preds = %dec_label_pc_25bfd
  %v1_25c06 = call i32 @function_25e96()
  store i32 %v1_25c06, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25c0c

dec_label_pc_25c0c:                               ; preds = %bb167, %dec_label_pc_25bfd
  %v0_25c10 = load i32, i32* @esp, align 4
  %v1_25c10 = add i32 %v0_25c10, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25c10 = inttoptr i32 %v1_25c10 to i32*
  %v3_25c10 = load i32, i32* %v2_25c10, align 4
  store i32 %v3_25c10, i32* %ecx.global-to-local, align 4
  %v1_25c14 = inttoptr i32 %v3_25c10 to i32*
  %v2_25c14 = load i32, i32* %v1_25c14, align 4
  store i32 %v2_25c14, i32* %eax.global-to-local, align 8
  %v2_25c16 = inttoptr i32 %v0_25c10 to i32*
  store i32 %v3_25c10, i32* %v2_25c16, align 4
  %v0_25c1c = load i32, i32* @esp, align 4
  %v1_25c1c = add i32 %v0_25c1c, 68
  %v2_25c1c = inttoptr i32 %v1_25c1c to i32*
  %v3_25c1c = load i32, i32* %v2_25c1c, align 4
  store i32 %v3_25c1c, i32* @eax, align 8
  %v1_25c20 = add i32 %v3_25c1c, 132
  %v2_25c20 = inttoptr i32 %v1_25c20 to i32*
  %v3_25c20 = load i32, i32* %v2_25c20, align 4
  store i32 %v3_25c20, i32* @esi, align 4
  %v1_25c26 = icmp eq i32 %v3_25c20, 0
  store i1 %v1_25c26, i1* %zf.global-to-local, align 1
  %v1_25c28 = icmp eq i1 %v1_25c26, false
  br i1 %v1_25c28, label %bb168, label %dec_label_pc_25c2e

bb168:                                            ; preds = %dec_label_pc_25c0c
  %v2_25c28 = call i32 @function_25ec0()
  store i32 %v2_25c28, i32* %eax.global-to-local, align 8
  %v0_25c2e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25c2e

dec_label_pc_25c2e:                               ; preds = %bb168, %dec_label_pc_25c0c
  %v0_25c2e = phi i32 [ %v0_25c2e.pre, %bb168 ], [ %v0_25c1c, %dec_label_pc_25c0c ]
  %v1_25c2e = add i32 %v0_25c2e, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25c2e = inttoptr i32 %v1_25c2e to i32*
  %v3_25c2e = load i32, i32* %v2_25c2e, align 4
  store i32 %v3_25c2e, i32* %eax.global-to-local, align 8
  %v1_25c32 = add i32 %v3_25c2e, 8
  %v2_25c32 = inttoptr i32 %v1_25c32 to i32*
  %v3_25c32 = load i32, i32* %v2_25c32, align 4
  store i32 %v3_25c32, i32* %ebp.global-to-local, align 4
  %v1_25c35 = icmp eq i32 %v3_25c32, 0
  store i1 %v1_25c35, i1* %zf.global-to-local, align 1
  br i1 %v1_25c35, label %bb169, label %dec_label_pc_25c3d

bb169:                                            ; preds = %dec_label_pc_25c2e
  %v1_25c37 = call i32 @function_25f14()
  store i32 %v1_25c37, i32* %eax.global-to-local, align 8
  %v0_25c3d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_25c3d

dec_label_pc_25c3d:                               ; preds = %bb169, %dec_label_pc_25c2e
  %v0_25c3d = phi i32 [ %v0_25c3d.pre, %bb169 ], [ %v3_25c32, %dec_label_pc_25c2e ]
  %v1_25c3d = add i32 %v0_25c3d, 16
  %v2_25c3d = inttoptr i32 %v1_25c3d to i32*
  %v3_25c3d = load i32, i32* %v2_25c3d, align 4
  store i32 %v3_25c3d, i32* %ebx.global-to-local, align 4
  %v2_25c40 = add i32 %v0_25c3d, 20
  %v3_25c40 = inttoptr i32 %v2_25c40 to i32*
  %v4_25c40 = load i32, i32* %v3_25c40, align 4
  %v15_25c40 = icmp eq i32 %v3_25c3d, %v4_25c40
  store i1 %v15_25c40, i1* %zf.global-to-local, align 1
  br i1 %v15_25c40, label %dec_label_pc_25d4f, label %dec_label_pc_25c49

dec_label_pc_25c49:                               ; preds = %dec_label_pc_25c3d
  %v0_25c49 = load i32, i32* @esp, align 4
  %v1_25c49 = add i32 %v0_25c49, ptrtoint (i32* @global_var_150.2766 to i32)
  store i32 %v1_25c49, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_25c8a

dec_label_pc_25c58:                               ; preds = %dec_label_pc_25c8a
  %v0_25c58 = load i32, i32* @esp, align 4
  %v1_25c58 = add i32 %v0_25c58, ptrtoint (i32* @global_var_38.2432 to i32)
  %v2_25c58 = inttoptr i32 %v1_25c58 to i32*
  %v3_25c58 = load i32, i32* %v2_25c58, align 4
  store i32 %v3_25c58, i32* %eax.global-to-local, align 8
  %v0_25c5c = load i32, i32* %esi.global-to-local, align 4
  %v2_25c5c = add i32 %v0_25c58, 4
  %v3_25c5c = inttoptr i32 %v2_25c5c to i32*
  store i32 %v0_25c5c, i32* %v3_25c5c, align 4
  %v0_25c60 = load i32, i32* %eax.global-to-local, align 8
  %v1_25c60 = load i32, i32* @esp, align 4
  %v2_25c60 = add i32 %v1_25c60, 172
  %v3_25c60 = inttoptr i32 %v2_25c60 to i32*
  store i32 %v0_25c60, i32* %v3_25c60, align 4
  %v0_25c67 = load i32, i32* @esp, align 4
  %v1_25c67 = add i32 %v0_25c67, 172
  store i32 %v1_25c67, i32* %eax.global-to-local, align 8
  %v2_25c6e = inttoptr i32 %v0_25c67 to i32*
  store i32 %v1_25c67, i32* %v2_25c6e, align 4
  %v0_25c71 = call i32 @unknown_48bb0()
  store i32 %v0_25c71, i32* %eax.global-to-local, align 8
  %v0_25c76 = load i32, i32* %esi.global-to-local, align 4
  %v1_25c76 = load i32, i32* @esp, align 4
  %v2_25c76 = inttoptr i32 %v1_25c76 to i32*
  store i32 %v0_25c76, i32* %v2_25c76, align 4
  %v1_25c79 = call i32 @unknown_38100(i32 %v1_25b9c)
  store i32 %v1_25c79, i32* %eax.global-to-local, align 8
  %v0_25c7e = load i32, i32* %ebx.global-to-local, align 4
  %v1_25c7e = add i32 %v0_25c7e, 12
  store i32 %v1_25c7e, i32* %ebx.global-to-local, align 4
  %v1_25c81 = load i32, i32* %ebp.global-to-local, align 4
  %v2_25c81 = add i32 %v1_25c81, 20
  %v3_25c81 = inttoptr i32 %v2_25c81 to i32*
  %v4_25c81 = load i32, i32* %v3_25c81, align 4
  %v15_25c81 = icmp eq i32 %v1_25c7e, %v4_25c81
  store i1 %v15_25c81, i1* %zf.global-to-local, align 1
  br i1 %v15_25c81, label %dec_label_pc_25d40, label %dec_label_pc_25c58.dec_label_pc_25c8a_crit_edge

dec_label_pc_25c58.dec_label_pc_25c8a_crit_edge:  ; preds = %dec_label_pc_25c58
  %v0_25c8c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25c8a

dec_label_pc_25c8a:                               ; preds = %dec_label_pc_25c58.dec_label_pc_25c8a_crit_edge, %dec_label_pc_25c49
  %v0_25c8c = phi i32 [ %v0_25c8c.pre, %dec_label_pc_25c58.dec_label_pc_25c8a_crit_edge ], [ %v0_25c49, %dec_label_pc_25c49 ]
  %v0_25c8a = phi i32 [ %v1_25c7e, %dec_label_pc_25c58.dec_label_pc_25c8a_crit_edge ], [ %v3_25c3d, %dec_label_pc_25c49 ]
  %v1_25c8a = inttoptr i32 %v0_25c8a to i32*
  %v2_25c8a = load i32, i32* %v1_25c8a, align 4
  store i32 %v2_25c8a, i32* %eax.global-to-local, align 8
  %v1_25c8c = add i32 %v0_25c8c, 187
  %v2_25c93 = add i32 %v0_25c8c, 176
  %v3_25c93 = inttoptr i32 %v2_25c93 to i32*
  store i32 %v1_25c8c, i32* %v3_25c93, align 4
  %v0_25c9a = load i32, i32* %ebx.global-to-local, align 4
  %v1_25c9a = add i32 %v0_25c9a, 4
  store i32 %v1_25c9a, i32* %edi.global-to-local, align 4
  %v0_25c9d = load i32, i32* @esp, align 4
  %v1_25c9d = add i32 %v0_25c9d, 176
  store i32 %v1_25c9d, i32* %ecx.global-to-local, align 4
  %v1_25ca4 = add i32 %v0_25c9d, 32
  %v2_25ca4 = inttoptr i32 %v1_25ca4 to i32*
  store i32 0, i32* %v2_25ca4, align 4
  %v0_25cac = load i32, i32* %eax.global-to-local, align 8
  %v2_25cae = ashr i32 %v0_25cac, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_25cb1 = xor i32 %v2_25cae, %v0_25cac
  %v3_25cb1 = icmp eq i32 %v2_25cb1, 0
  store i1 %v3_25cb1, i1* %zf.global-to-local, align 1
  store i32 %v2_25cb1, i32* %edx.global-to-local, align 4
  %v0_25cb3 = load i32, i32* @esp, align 4
  %v1_25cb3 = add i32 %v0_25cb3, 28
  %v2_25cb3 = inttoptr i32 %v1_25cb3 to i32*
  store i32 0, i32* %v2_25cb3, align 4
  %v0_25cbb = load i32, i32* @esp, align 4
  %v1_25cbb = add i32 %v0_25cbb, 24
  %v2_25cbb = inttoptr i32 %v1_25cbb to i8*
  store i8 0, i8* %v2_25cbb, align 1
  %v0_25cc0 = load i32, i32* @esp, align 4
  %v1_25cc0 = add i32 %v0_25cc0, 20
  %v2_25cc0 = inttoptr i32 %v1_25cc0 to i8*
  store i8 0, i8* %v2_25cc0, align 1
  %v0_25cc5 = load i32, i32* %edi.global-to-local, align 4
  %v1_25cc5 = load i32, i32* @esp, align 4
  %v2_25cc5 = add i32 %v1_25cc5, 16
  %v3_25cc5 = inttoptr i32 %v2_25cc5 to i32*
  store i32 %v0_25cc5, i32* %v3_25cc5, align 4
  %v0_25cc9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25cc9 = load i32, i32* @esp, align 4
  %v2_25cc9 = add i32 %v1_25cc9, 12
  %v3_25cc9 = inttoptr i32 %v2_25cc9 to i32*
  store i32 %v0_25cc9, i32* %v3_25cc9, align 4
  %v0_25ccd = load i32, i32* %edx.global-to-local, align 4
  %v1_25ccd = load i32, i32* @esp, align 4
  %v2_25ccd = add i32 %v1_25ccd, 8
  %v3_25ccd = inttoptr i32 %v2_25ccd to i32*
  store i32 %v0_25ccd, i32* %v3_25ccd, align 4
  %v0_25cd1 = load i32, i32* %eax.global-to-local, align 8
  %v1_25cd1 = load i32, i32* @esp, align 4
  %v2_25cd1 = add i32 %v1_25cd1, 4
  %v3_25cd1 = inttoptr i32 %v2_25cd1 to i32*
  store i32 %v0_25cd1, i32* %v3_25cd1, align 4
  %v0_25cd5 = load i32, i32* %esi.global-to-local, align 4
  %v1_25cd5 = load i32, i32* @esp, align 4
  %v2_25cd5 = inttoptr i32 %v1_25cd5 to i32*
  store i32 %v0_25cd5, i32* %v2_25cd5, align 4
  %v0_25cd8 = call i32 @unknown_443c0()
  %v0_25cdd = load i32, i32* @esp, align 4
  %v1_25ce0 = add i32 %v0_25cdd, 182
  store i32 %v1_25ce0, i32* %eax.global-to-local, align 8
  %v2_25ce7 = add i32 %v0_25cdd, 176
  %v3_25ce7 = inttoptr i32 %v2_25ce7 to i32*
  store i32 %v1_25ce0, i32* %v3_25ce7, align 4
  %v0_25cee = load i32, i32* %ebx.global-to-local, align 4
  %v1_25cee = inttoptr i32 %v0_25cee to i32*
  %v2_25cee = load i32, i32* %v1_25cee, align 4
  store i32 %v2_25cee, i32* %eax.global-to-local, align 8
  %v0_25cf0 = load i32, i32* @esp, align 4
  %v1_25cf0 = add i32 %v0_25cf0, 180
  store i32 %v1_25cf0, i32* %ecx.global-to-local, align 4
  %v1_25cf7 = add i32 %v0_25cf0, 28
  %v2_25cf7 = inttoptr i32 %v1_25cf7 to i32*
  store i32 0, i32* %v2_25cf7, align 4
  %v0_25cff = load i32, i32* @esp, align 4
  %v1_25cff = add i32 %v0_25cff, 24
  %v2_25cff = inttoptr i32 %v1_25cff to i32*
  store i32 0, i32* %v2_25cff, align 4
  %v0_25d07 = load i32, i32* @esp, align 4
  %v1_25d07 = add i32 %v0_25d07, 20
  %v2_25d07 = inttoptr i32 %v1_25d07 to i8*
  store i8 0, i8* %v2_25d07, align 1
  %v0_25d0c = load i32, i32* %eax.global-to-local, align 8
  %v2_25d0e = ashr i32 %v0_25d0c, ptrtoint (i64* @global_var_1f.2426 to i32)
  %v2_25d11 = xor i32 %v2_25d0e, %v0_25d0c
  %v3_25d11 = icmp eq i32 %v2_25d11, 0
  store i1 %v3_25d11, i1* %zf.global-to-local, align 1
  store i32 %v2_25d11, i32* %edx.global-to-local, align 4
  %v0_25d13 = load i32, i32* @esp, align 4
  %v1_25d13 = add i32 %v0_25d13, 16
  %v2_25d13 = inttoptr i32 %v1_25d13 to i8*
  store i8 0, i8* %v2_25d13, align 1
  %v0_25d18 = load i32, i32* %edi.global-to-local, align 4
  %v1_25d18 = load i32, i32* @esp, align 4
  %v2_25d18 = add i32 %v1_25d18, 12
  %v3_25d18 = inttoptr i32 %v2_25d18 to i32*
  store i32 %v0_25d18, i32* %v3_25d18, align 4
  %v0_25d1c = load i32, i32* %ecx.global-to-local, align 4
  %v1_25d1c = load i32, i32* @esp, align 4
  %v2_25d1c = add i32 %v1_25d1c, 8
  %v3_25d1c = inttoptr i32 %v2_25d1c to i32*
  store i32 %v0_25d1c, i32* %v3_25d1c, align 4
  %v0_25d20 = load i32, i32* %edx.global-to-local, align 4
  %v1_25d20 = load i32, i32* @esp, align 4
  %v2_25d20 = add i32 %v1_25d20, 4
  %v3_25d20 = inttoptr i32 %v2_25d20 to i32*
  store i32 %v0_25d20, i32* %v3_25d20, align 4
  %v0_25d24 = load i32, i32* %eax.global-to-local, align 8
  %v1_25d24 = load i32, i32* @esp, align 4
  %v2_25d24 = inttoptr i32 %v1_25d24 to i32*
  store i32 %v0_25d24, i32* %v2_25d24, align 4
  %v0_25d27 = call i32 @unknown_41770()
  store i32 %v0_25d27, i32* %eax.global-to-local, align 8
  %v4_25d2c = trunc i32 %v0_25d27 to i8
  %v5_25d2c = icmp eq i8 %v4_25d2c, 0
  store i1 %v5_25d2c, i1* %zf.global-to-local, align 1
  br i1 %v5_25d2c, label %dec_label_pc_25c58, label %dec_label_pc_25d34

dec_label_pc_25d34:                               ; preds = %dec_label_pc_25c8a
  %v0_25d34 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25d34 = add i32 %v0_25d34, 4
  %v2_25d34 = inttoptr i32 %v1_25d34 to i8*
  store i8 0, i8* %v2_25d34, align 1
  %v0_25d38 = load i32, i32* %esi.global-to-local, align 4
  %v1_25d38 = load i32, i32* @esp, align 4
  %v2_25d38 = inttoptr i32 %v1_25d38 to i32*
  store i32 %v0_25d38, i32* %v2_25d38, align 4
  %v1_25d3b = call i32 @unknown_38100(i32 %v1_25b9c)
  store i32 %v1_25d3b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25d40

dec_label_pc_25d40:                               ; preds = %dec_label_pc_25c58, %dec_label_pc_25d34
  %v0_25d40 = load i32, i32* @esp, align 4
  %v1_25d40 = add i32 %v0_25d40, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25d40 = inttoptr i32 %v1_25d40 to i32*
  %v3_25d40 = load i32, i32* %v2_25d40, align 4
  store i32 %v3_25d40, i32* %edx.global-to-local, align 4
  %v1_25d44 = add i32 %v3_25d40, 8
  %v2_25d44 = inttoptr i32 %v1_25d44 to i32*
  %v3_25d44 = load i32, i32* %v2_25d44, align 4
  store i32 %v3_25d44, i32* %ebp.global-to-local, align 4
  %v1_25d47 = icmp eq i32 %v3_25d44, 0
  store i1 %v1_25d47, i1* %zf.global-to-local, align 1
  br i1 %v1_25d47, label %bb170, label %dec_label_pc_25d4f

bb170:                                            ; preds = %dec_label_pc_25d40
  %v1_25d49 = call i32 @function_25f14()
  store i32 %v1_25d49, i32* %eax.global-to-local, align 8
  %v0_25d4f.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_25d4f

dec_label_pc_25d4f:                               ; preds = %bb170, %dec_label_pc_25d40, %dec_label_pc_25c3d
  %v0_25d4f = phi i32 [ %v0_25d4f.pre, %bb170 ], [ %v3_25d44, %dec_label_pc_25d40 ], [ %v0_25c3d, %dec_label_pc_25c3d ]
  %v1_25d4f = add i32 %v0_25d4f, 4
  %v2_25d4f = inttoptr i32 %v1_25d4f to i8*
  %v3_25d4f = load i8, i8* %v2_25d4f, align 1
  %v10_25d4f = icmp eq i8 %v3_25d4f, 0
  store i1 %v10_25d4f, i1* %zf.global-to-local, align 1
  br i1 %v10_25d4f, label %bb171, label %dec_label_pc_25d59

bb171:                                            ; preds = %dec_label_pc_25d4f
  %v1_25d53 = call i32 @function_25e58()
  store i32 %v1_25d53, i32* %eax.global-to-local, align 8
  %v0_25d5d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_25d59

dec_label_pc_25d59:                               ; preds = %bb171, %dec_label_pc_25d4f
  %v0_25d5d = phi i32 [ %v0_25d5d.pre, %bb171 ], [ %v0_25d4f, %dec_label_pc_25d4f ]
  %v0_25d59 = load i32, i32* @esp, align 4
  %v1_25d59 = add i32 %v0_25d59, 68
  %v2_25d59 = inttoptr i32 %v1_25d59 to i32*
  %v3_25d59 = load i32, i32* %v2_25d59, align 4
  store i32 %v3_25d59, i32* %ecx.global-to-local, align 4
  %v1_25d5d = add i32 %v0_25d5d, 12
  %v2_25d5d = inttoptr i32 %v1_25d5d to i32*
  %v3_25d5d = load i32, i32* %v2_25d5d, align 4
  store i32 %v3_25d5d, i32* %eax.global-to-local, align 8
  %v1_25d60 = add i32 %v3_25d59, 140
  %v2_25d60 = inttoptr i32 %v1_25d60 to i32*
  %v3_25d60 = load i32, i32* %v2_25d60, align 4
  %v4_25d60 = add i32 %v3_25d60, 1
  store i32 %v4_25d60, i32* %v2_25d60, align 4
  %v1_25d67 = icmp eq i32 %v3_25d5d, 0
  store i1 %v1_25d67, i1* %zf.global-to-local, align 1
  br i1 %v1_25d67, label %dec_label_pc_25d76, label %dec_label_pc_25d6b

dec_label_pc_25d6b:                               ; preds = %dec_label_pc_25d59
  %v1_25d6b = add i32 %v3_25d5d, 4
  %v2_25d6b = inttoptr i32 %v1_25d6b to i32*
  %v3_25d6b = load i32, i32* %v2_25d6b, align 4
  store i32 %v3_25d6b, i32* %eax.global-to-local, align 8
  %v1_25d6e = icmp eq i32 %v3_25d6b, 0
  store i1 %v1_25d6e, i1* %zf.global-to-local, align 1
  %v1_25d70 = icmp eq i1 %v1_25d6e, false
  br i1 %v1_25d70, label %bb172, label %dec_label_pc_25d76

bb172:                                            ; preds = %dec_label_pc_25d6b
  %v2_25d70 = call i32 @function_25e63()
  store i32 %v2_25d70, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25d76

dec_label_pc_25d76:                               ; preds = %bb172, %dec_label_pc_25d6b, %dec_label_pc_25d59
  %v0_25d76 = load i32, i32* @esp, align 4
  %v1_25d76 = add i32 %v0_25d76, ptrtoint (i32* @global_var_40.2433 to i32)
  %v2_25d76 = inttoptr i32 %v1_25d76 to i32*
  %v3_25d76 = load i32, i32* %v2_25d76, align 4
  store i32 %v3_25d76, i32* %edx.global-to-local, align 4
  %v1_25d7a = inttoptr i32 %v3_25d76 to i32*
  %v2_25d7a = load i32, i32* %v1_25d7a, align 4
  store i32 %v2_25d7a, i32* @eax, align 8
  %v2_25d7c = inttoptr i32 %v0_25d76 to i32*
  store i32 %v3_25d76, i32* %v2_25d7c, align 4
  %v0_25d82 = load i32, i32* @esp, align 4
  %v1_25d82 = add i32 %v0_25d82, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25d82 = inttoptr i32 %v1_25d82 to i32*
  %v3_25d82 = load i32, i32* %v2_25d82, align 4
  store i32 %v3_25d82, i32* %edx.global-to-local, align 4
  %v1_25d86 = add i32 %v0_25d82, 72
  %v2_25d86 = inttoptr i32 %v1_25d86 to i32*
  %v3_25d86 = load i32, i32* %v2_25d86, align 4
  %v15_25d86 = icmp eq i32 %v3_25d86, %v3_25d82
  store i1 %v15_25d86, i1* %zf.global-to-local, align 1
  br i1 %v15_25d86, label %bb173, label %dec_label_pc_25d90

bb173:                                            ; preds = %dec_label_pc_25d76
  %v2_25d8a = call i32 @function_25f7e(i32 %v1_25b9c)
  store i32 %v2_25d8a, i32* %eax.global-to-local, align 8
  %v0_25d90.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25d90

dec_label_pc_25d90:                               ; preds = %bb173, %dec_label_pc_25d76
  %v0_25d90 = phi i32 [ %v0_25d90.pre, %bb173 ], [ %v0_25d82, %dec_label_pc_25d76 ]
  %v1_25d90 = add i32 %v0_25d90, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25d90 = inttoptr i32 %v1_25d90 to i32*
  %v3_25d90 = load i32, i32* %v2_25d90, align 4
  store i32 %v3_25d90, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_25d94

dec_label_pc_25d94:                               ; preds = %dec_label_pc_25bd2, %dec_label_pc_25d90
  %v0_25da1 = phi i32 [ %v0_25d90, %dec_label_pc_25d90 ], [ %v0_25d94.pre, %dec_label_pc_25bd2 ]
  %v1_25d94 = add i32 %v0_25da1, 68
  %v2_25d94 = inttoptr i32 %v1_25d94 to i32*
  %v3_25d94 = load i32, i32* %v2_25d94, align 4
  store i32 %v3_25d94, i32* %eax.global-to-local, align 8
  %v1_25d98 = inttoptr i32 %v3_25d94 to i8*
  %v2_25d98 = load i8, i8* %v1_25d98, align 1
  %v9_25d98 = icmp eq i8 %v2_25d98, 0
  store i1 %v9_25d98, i1* %zf.global-to-local, align 1
  br i1 %v9_25d98, label %dec_label_pc_25baa, label %dec_label_pc_25da1

dec_label_pc_25da1:                               ; preds = %dec_label_pc_25d94
  %v1_25da1 = add i32 %v0_25da1, ptrtoint (i32* @global_var_3c.2406 to i32)
  %v2_25da1 = inttoptr i32 %v1_25da1 to i32*
  %v3_25da1 = load i32, i32* %v2_25da1, align 4
  store i32 %v3_25da1, i32* %edx.global-to-local, align 4
  %v1_25da5 = add i32 %v0_25da1, ptrtoint (i32* @global_var_58.2405 to i32)
  %v2_25da5 = inttoptr i32 %v1_25da5 to i32*
  %v3_25da5 = load i32, i32* %v2_25da5, align 4
  %v15_25da5 = icmp eq i32 %v3_25da5, %v3_25da1
  store i1 %v15_25da5, i1* %zf.global-to-local, align 1
  store i8 0, i8* %v1_25d98, align 1
  %v0_25dac = load i1, i1* %zf.global-to-local, align 1
  %v1_25dac = icmp eq i1 %v0_25dac, false
  %v0_25bb8.pre = load i32, i32* @esp, align 4
  br i1 %v1_25dac, label %dec_label_pc_25bb8, label %dec_label_pc_25db2

dec_label_pc_25db2:                               ; preds = %dec_label_pc_25baa, %dec_label_pc_25da1
  %v0_25db2 = phi i32 [ %v0_25bb8.pre, %dec_label_pc_25da1 ], [ %v0_25baa, %dec_label_pc_25baa ]
  %v1_25db2 = add i32 %v0_25db2, ptrtoint (i32* @global_var_148.2707 to i32)
  %v2_25db2 = inttoptr i32 %v1_25db2 to i32*
  %v3_25db2 = load i32, i32* %v2_25db2, align 4
  store i32 %v3_25db2, i32* @eax, align 8
  %v1_25db9 = add i32 %v0_25db2, ptrtoint (i32* @global_var_14c.2767 to i32)
  %v2_25db9 = inttoptr i32 %v1_25db9 to i32*
  %v3_25db9 = load i32, i32* %v2_25db9, align 4
  %v15_25db9 = icmp eq i32 %v3_25db9, %v3_25db2
  store i1 %v15_25db9, i1* %zf.global-to-local, align 1
  %tmp188 = icmp ugt i32 %v3_25db9, %v3_25db2
  br i1 %tmp188, label %bb174, label %dec_label_pc_25dc6

bb174:                                            ; preds = %dec_label_pc_25db2
  %v4_25dc0 = call i32 @function_260fb()
  store i32 %v4_25dc0, i32* @eax, align 8
  %v0_25dc6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25dc6

dec_label_pc_25dc6:                               ; preds = %dec_label_pc_25db2, %bb174
  %v0_25dc6 = phi i32 [ %v0_25db2, %dec_label_pc_25db2 ], [ %v0_25dc6.pre, %bb174 ]
  %v1_25dc6 = add i32 %v0_25dc6, 316
  %v2_25dc6 = inttoptr i32 %v1_25dc6 to i32*
  %v3_25dc6 = load i32, i32* %v2_25dc6, align 4
  store i32 %v3_25dc6, i32* @edx, align 4
  %v1_25dcd = icmp eq i32 %v3_25dc6, 0
  store i1 %v1_25dcd, i1* %zf.global-to-local, align 1
  br i1 %v1_25dcd, label %bb175, label %dec_label_pc_25dd1

bb175:                                            ; preds = %dec_label_pc_25dc6
  %v1_25dcf = call i32 @function_25e0f()
  store i32 %v1_25dcf, i32* @eax, align 8
  %v0_25dd1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25dd1

dec_label_pc_25dd1:                               ; preds = %bb175, %dec_label_pc_25dc6
  %v0_25dd1 = phi i32 [ %v0_25dd1.pre, %bb175 ], [ %v0_25dc6, %dec_label_pc_25dc6 ]
  %v1_25dd1 = add i32 %v0_25dd1, 312
  %v2_25dd1 = inttoptr i32 %v1_25dd1 to i32*
  %v3_25dd1 = load i32, i32* %v2_25dd1, align 4
  store i32 %v3_25dd1, i32* @ecx, align 4
  %v10_25dd8 = icmp eq i32 %v3_25dd1, 9
  store i1 %v10_25dd8, i1* %zf.global-to-local, align 1
  %tmp189 = icmp ult i32 %v3_25dd1, 10
  br i1 %tmp189, label %bb177, label %dec_label_pc_25de1

bb177:                                            ; preds = %dec_label_pc_25dd1
  %v3_25ddb = call i32 @function_26097()
  store i32 %v3_25ddb, i32* @eax, align 8
  %v1_25de1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25de1

dec_label_pc_25de1:                               ; preds = %bb177, %dec_label_pc_25dd1
  %v1_25de1 = phi i32 [ %v1_25de1.pre, %bb177 ], [ %v0_25dd1, %dec_label_pc_25dd1 ]
  %v2_25de1 = add i32 %v1_25de1, 52
  %v3_25de1 = inttoptr i32 %v2_25de1 to i32*
  %v4_25de1 = load i32, i32* %v3_25de1, align 4
  %v15_25de1 = icmp eq i32 %v3_25dc6, %v4_25de1
  store i1 %v15_25de1, i1* %zf.global-to-local, align 1
  br i1 %v15_25de1, label %bb178, label %dec_label_pc_25deb

bb178:                                            ; preds = %dec_label_pc_25de1
  %v1_25de5 = call i32 @function_2608e()
  store i32 %v1_25de5, i32* %eax.global-to-local, align 8
  %v0_25deb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_25deb

dec_label_pc_25deb:                               ; preds = %bb178, %dec_label_pc_25de1
  %v0_25deb = phi i32 [ %v0_25deb.pre, %bb178 ], [ %v1_25de1, %dec_label_pc_25de1 ]
  %v1_25deb = add i32 %v0_25deb, ptrtoint (i32* @global_var_140.2708 to i32)
  %v2_25deb = inttoptr i32 %v1_25deb to i32*
  %v3_25deb = load i32, i32* %v2_25deb, align 4
  store i32 %v3_25deb, i32* @eax, align 8
  %v0_25df2 = load i32, i32* @ecx, align 4
  %v7_25df2 = icmp ult i32 %v0_25df2, %v3_25deb
  %v12_25df2 = icmp eq i32 %v0_25df2, %v3_25deb
  store i1 %v12_25df2, i1* %zf.global-to-local, align 1
  br i1 %v7_25df2, label %bb179, label %dec_label_pc_25dfa

bb179:                                            ; preds = %dec_label_pc_25deb
  %v1_25df4 = call i32 @function_26097()
  store i32 %v1_25df4, i32* @eax, align 8
  br label %dec_label_pc_25dfa

dec_label_pc_25dfa:                               ; preds = %bb179, %dec_label_pc_25deb
  %v0_25dfa = phi i32 [ %v1_25df4, %bb179 ], [ %v3_25deb, %dec_label_pc_25deb ]
  %v1_25dfa = icmp eq i32 %v0_25dfa, 0
  store i1 %v1_25dfa, i1* %zf.global-to-local, align 1
  %v1_25dfc = icmp eq i1 %v1_25dfa, false
  br i1 %v1_25dfc, label %bb180, label %dec_label_pc_25e02

bb180:                                            ; preds = %dec_label_pc_25dfa
  %v2_25dfc = call i32 @function_260c0()
  store i32 %v2_25dfc, i32* @eax, align 8
  br label %dec_label_pc_25e02

dec_label_pc_25e02:                               ; preds = %bb180, %dec_label_pc_25dfa
  %v0_25e02 = load i32, i32* @ecx, align 4
  %v10_25e02 = icmp eq i32 %v0_25e02, 10
  store i1 %v10_25e02, i1* %zf.global-to-local, align 1
  %tmp190 = icmp ult i32 %v0_25e02, 11
  br i1 %tmp190, label %bb182, label %dec_label_pc_25e07

bb182:                                            ; preds = %dec_label_pc_25e02
  %v3_25e05 = call i32 @function_25e0f()
  store i32 %v3_25e05, i32* @eax, align 8
  br label %dec_label_pc_25e07

dec_label_pc_25e07:                               ; preds = %bb182, %dec_label_pc_25e02
  %v1_25e07 = load i32, i32* @esp, align 4
  %v2_25e07 = inttoptr i32 %v1_25e07 to i32*
  store i32 %v3_25dc6, i32* %v2_25e07, align 4
  %v3_25e07 = load i32, i32* @eax, align 8
  ret i32 %v3_25e07

; uselistorder directives
  uselistorder i32 %v3_25deb, { 1, 0, 2, 3 }
  uselistorder i1 %v15_25de1, { 1, 0 }
  uselistorder i32 %v3_25dc6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_25db2, { 0, 2, 1 }
  uselistorder i32 %v0_25da1, { 2, 1, 3, 0 }
  uselistorder i1 %v15_25d86, { 1, 0 }
  uselistorder i32 %v0_25c8c, { 1, 0 }
  uselistorder i1 %v15_25c81, { 1, 0 }
  uselistorder i32 %v1_25c7e, { 1, 0, 2 }
  uselistorder i1 %v15_25c40, { 1, 0 }
  uselistorder i32 %v3_25c3d, { 1, 0, 2 }
  uselistorder i32 %v0_25c3d, { 0, 2, 1 }
  uselistorder i1 %v15_25bf3, { 1, 0 }
  uselistorder i32 %v4_25bf3, { 1, 0 }
  uselistorder i32 %v0_25d94.pre, { 0, 2, 1 }
  uselistorder i1 %v12_25be7, { 1, 0 }
  uselistorder i32 %v2_25be5, { 1, 0, 2 }
  uselistorder i32 %v0_25bd2, { 1, 0 }
  uselistorder i1 %v15_25bae, { 1, 0 }
  uselistorder i32 %v0_25baa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_25b9c, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_25b35, { 1, 0 }
  uselistorder i32 %v2_25ade, { 2, 1, 0, 3, 4, 5 }
  uselistorder i1 %v1_25ac0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 16, 8, 1, 22, 23, 2, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 17, 18, 19, 20, 21, 3, 33, 5, 34, 6, 7, 9, 35, 10, 36, 11, 37, 13, 38, 15, 39, 40, 12, 41, 14, 42, 43, 44 }
  uselistorder i32 11, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 52, { 0, 3, 8, 9, 4, 5, 6, 11, 7, 10, 1, 2 }
  uselistorder i32 ()* @function_26097, { 1, 0 }
  uselistorder i32 10, { 0, 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10 }
  uselistorder i32 9, { 0, 1, 4, 3, 2 }
  uselistorder i32 ()* @function_25e0f, { 1, 0 }
  uselistorder i32 140, { 0, 3, 1, 2, 4 }
  uselistorder i32 182, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 24, { 4, 5, 72, 73, 91, 92, 61, 62, 6, 7, 8, 9, 10, 11, 33, 12, 13, 100, 98, 14, 15, 63, 64, 102, 65, 66, 67, 68, 69, 70, 71, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 105, 106, 26, 74, 27, 75, 28, 29, 76, 30, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 31, 32, 93, 94, 95, 96, 34, 35, 36, 37, 97, 99, 101, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 103, 3, 54, 104, 55, 56, 58, 57, 59, 60, 0, 2, 107, 108 }
  uselistorder i64* @global_var_1f.2426, { 1, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_1f.2426 to i32), { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 7, 8, 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 176, { 7, 9, 10, 8, 13, 14, 0, 1, 2, 3, 4, 5, 6, 11, 12 }
  uselistorder i32 172, { 0, 1, 3, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_38.2432 to i32), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29 }
  uselistorder i32 16, { 6, 7, 8, 150, 151, 152, 37, 75, 76, 167, 168, 169, 77, 78, 79, 80, 170, 171, 172, 173, 174, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 86, 87, 88, 89, 95, 9, 10, 11, 12, 13, 183, 184, 185, 186, 187, 96, 97, 98, 182, 5, 188, 38, 14, 15, 193, 194, 195, 196, 197, 198, 199, 200, 99, 100, 101, 189, 190, 191, 192, 16, 17, 102, 103, 104, 105, 106, 202, 203, 201, 4, 107, 108, 109, 110, 111, 112, 113, 114, 220, 221, 222, 115, 116, 117, 118, 119, 120, 18, 19, 121, 122, 20, 123, 124, 125, 126, 21, 127, 22, 128, 129, 130, 131, 23, 132, 24, 133, 134, 135, 136, 137, 25, 138, 139, 140, 141, 142, 143, 1, 26, 27, 28, 29, 144, 2, 145, 146, 147, 148, 208, 0, 3, 211, 212, 213, 149, 30, 31, 153, 32, 33, 154, 34, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 35, 36, 166, 175, 176, 177, 178, 39, 40, 41, 42, 179, 180, 181, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 204, 53, 54, 55, 56, 57, 58, 205, 206, 207, 59, 209, 60, 223, 224, 225, 226, 227, 228, 63, 64, 61, 62, 65, 66, 67, 210, 68, 69, 70, 71, 72, 73, 74, 214, 215, 216, 217, 218, 219 }
  uselistorder i32 72, { 0, 1, 15, 16, 17, 18, 19, 12, 20, 13, 21, 14, 2, 3, 22, 23, 24, 25, 26, 4, 5, 6, 7, 8, 9, 10, 27, 11 }
  uselistorder i32 80, { 4, 5, 1, 2, 3, 12, 6, 7, 13, 14, 15, 16, 8, 9, 10, 11, 0, 17 }
  uselistorder i32 68, { 2, 3, 4, 5, 6, 13, 14, 15, 0, 17, 18, 1, 8, 9, 19, 20, 10, 11, 21, 22, 12, 7, 23, 24, 25, 26, 27, 29, 30, 31, 32, 16, 28 }
  uselistorder i32 ptrtoint (i32* @global_var_58.2405 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_3c.2406 to i32), { 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* @esp, { 38, 0, 1, 2, 3, 11, 5, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 6, 39, 40, 41, 42, 66, 7, 67, 68, 8, 4, 69, 9, 10, 12, 153, 13, 14, 15, 16, 23, 18, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 19, 154, 155, 156, 157, 181, 20, 182, 183, 21, 17, 22, 24, 187, 188, 189, 190, 191, 192, 193, 25, 26, 194, 195, 196, 27, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 197, 198, 199, 200, 28, 185, 186, 109, 110, 111, 112, 113, 114, 115, 29, 30, 116, 117, 118, 31, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 119, 120, 121, 122, 32, 144, 145, 184, 70, 71, 72, 33, 73, 74, 75, 76, 77, 78, 79, 80, 81, 225, 227, 82, 262, 146, 147, 148, 34, 83, 149, 84, 150, 85, 151, 86, 87, 152, 88, 89, 90, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 36, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 229, 35, 258, 91, 92, 93, 94, 95, 37, 222, 223, 224, 96, 226, 97, 98, 99, 100, 101, 102, 103, 104, 105, 259, 106, 107, 260, 261, 108 }
  uselistorder i32 (i32)* @unknown_49180, { 1, 0 }
  uselistorder i32 %arg2, { 0, 6, 1, 5, 2, 4, 3 }
  uselistorder label %dec_label_pc_25dc6, { 1, 0 }
  uselistorder label %dec_label_pc_25db2, { 1, 0 }
  uselistorder label %dec_label_pc_25d94, { 1, 0 }
  uselistorder label %dec_label_pc_25d40, { 1, 0 }
  uselistorder label %dec_label_pc_25bb8, { 1, 0 }
}

define i32 @function_25e0f() local_unnamed_addr {
dec_label_pc_25e0f:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_144 = alloca i32, align 4
  %v2_25e21 = ptrtoint i32* %stack_var_144 to i32
  %v1_25e2b = call i32 @unknown_35ed0(i32 %v2_25e21)
  %v1_25e3b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25e3b = xor i32 %v1_25e3b, %tmp10
  %v3_25e3b = icmp eq i32 %v2_25e3b, 0
  store i32 %v2_25e3b, i32* @edx, align 4
  %v1_25e42 = icmp eq i1 %v3_25e3b, false
  br i1 %v1_25e42, label %bb, label %dec_label_pc_25e48

bb:                                               ; preds = %dec_label_pc_25e0f
  %v2_25e42 = call i32 @function_260bb()
  br label %dec_label_pc_25e48

dec_label_pc_25e48:                               ; preds = %bb, %dec_label_pc_25e0f
  %v0_25e52 = phi i32 [ %v2_25e42, %bb ], [ %tmp11, %dec_label_pc_25e0f ]
  ret i32 %v0_25e52
}

define i32 @function_25e58() local_unnamed_addr {
dec_label_pc_25e58:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_25e5c = add i32 %tmp, 144
  %v2_25e5c = inttoptr i32 %v1_25e5c to i32*
  %v3_25e5c = load i32, i32* %v2_25e5c, align 4
  %v4_25e5c = add i32 %v3_25e5c, 1
  store i32 %v4_25e5c, i32* %v2_25e5c, align 4
  %v22_25e5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_25e5c

; uselistorder directives
  uselistorder i32 144, { 0, 5, 1, 2, 3, 6, 4 }
}

define i32 @function_25e63() local_unnamed_addr {
dec_label_pc_25e63:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_25e73 = inttoptr i32 %tmp3 to i32*
  %v2_25e73 = load i32, i32* %v1_25e73, align 4
  store i32 %v2_25e73, i32* @eax, align 8
  %v15_25e75 = icmp eq i32 %tmp2, %v2_25e73
  br i1 %v15_25e75, label %bb, label %dec_label_pc_25e83

bb:                                               ; preds = %dec_label_pc_25e63
  %v2_25e7d = call i32 @function_25f7e(i32 %tmp5)
  br label %dec_label_pc_25e83

dec_label_pc_25e83:                               ; preds = %bb, %dec_label_pc_25e63
  %v0_25e90 = phi i32 [ %v2_25e7d, %bb ], [ %v2_25e73, %dec_label_pc_25e63 ]
  ret i32 %v0_25e90

; uselistorder directives
  uselistorder i32 %v2_25e73, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_25f7e, { 2, 1, 0 }
}

define i32 @function_25e96() local_unnamed_addr {
dec_label_pc_25e96:
  %v3_25eae = load i32, i32* @eax, align 8
  ret i32 %v3_25eae
}

define i32 @function_25ec0() local_unnamed_addr {
dec_label_pc_25ec0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_25ec0 = load i32, i32* @eax, align 8
  %v1_25ec0 = add i32 %v0_25ec0, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_25ec0 = inttoptr i32 %v1_25ec0 to i32*
  %v3_25ec0 = load i32, i32* %v2_25ec0, align 4
  %v0_25ec6 = load i32, i32* @esi, align 4
  %v2_25ec6 = mul i32 %v0_25ec6, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_25ec6 = add i32 %v0_25ec6, -3
  %v4_25ec6 = add i32 %v3_25ec6, %v2_25ec6
  %v3_25eca = mul i32 %v0_25ec6, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_25ecd = shl i32 %v3_25eca, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_25ecd = icmp eq i32 %v2_25ecd, 0
  %v2_25ed0 = mul i32 %v4_25ec6, 4
  %v3_25ed0 = add i32 %v2_25ed0, %v3_25ec0
  store i32 %v3_25ed0, i32* %ebx.global-to-local, align 4
  %v2_25ed5 = sub i32 %v3_25ed0, %v2_25ecd
  store i32 %v2_25ed5, i32* %edi.global-to-local, align 4
  %v7_25ed7 = icmp ult i32 %v3_25ed0, %v2_25ed5
  %v2_25ed9 = or i1 %v3_25ecd, %v7_25ed7
  br i1 %v2_25ed9, label %bb, label %dec_label_pc_25ee0

bb:                                               ; preds = %dec_label_pc_25ec0
  %v3_25ed9 = call i32 @function_25f20()
  %v0_25ee0.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_25ee0

dec_label_pc_25ee0:                               ; preds = %dec_label_pc_25ec0, %bb, %dec_label_pc_25ee0
  %v0_25ee0 = phi i32 [ %v1_25ee8, %dec_label_pc_25ee0 ], [ %v3_25ed0, %dec_label_pc_25ec0 ], [ %v0_25ee0.pre.pre, %bb ]
  %v1_25ee3 = call i32 @unknown_38100(i32 %v0_25ee0)
  %v0_25ee8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25ee8 = add i32 %v0_25ee8, -12
  store i32 %v1_25ee8, i32* %ebx.global-to-local, align 4
  %v0_25eeb = load i32, i32* %edi.global-to-local, align 4
  %v7_25eeb = icmp ult i32 %v0_25eeb, %v1_25ee8
  br i1 %v7_25eeb, label %dec_label_pc_25ee0, label %dec_label_pc_25eef

dec_label_pc_25eef:                               ; preds = %dec_label_pc_25ee0
  %v1_25ef3 = add i32 %tmp4, 132
  %v2_25ef3 = inttoptr i32 %v1_25ef3 to i32*
  %v3_25ef3 = load i32, i32* %v2_25ef3, align 4
  %v1_25ef9 = load i32, i32* @esi, align 4
  %v2_25ef9 = sub i32 %v3_25ef3, %v1_25ef9
  store i32 %v2_25ef9, i32* %v2_25ef3, align 4
  ret i32 %tmp3

; uselistorder directives
  uselistorder i32 %v1_25ee8, { 1, 2, 0 }
  uselistorder i32 %v0_25ec6, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_25ee0, { 2, 1, 0 }
}

define i32 @function_25f14() local_unnamed_addr {
dec_label_pc_25f14:
  %v0_25f14 = call i32 @unknown_33ca6()
  ret i32 %v0_25f14
}

define i32 @function_25f20() local_unnamed_addr {
dec_label_pc_25f20:
  ret i32 0
}

define i32 @function_25f24() local_unnamed_addr {
dec_label_pc_25f24:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_1()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v4_25f28 = ptrtoint i8* %tmp to i32
  store i32 %v4_25f28, i32* %edx.global-to-local, align 4
  %v1_25f2c = add i32 %tmp3, ptrtoint (i1* @global_var_1.2399 to i32)
  %v2_25f2c = inttoptr i32 %v1_25f2c to i8*
  %v3_25f2c = load i8, i8* %v2_25f2c, align 1
  %v4_25f2c = zext i8 %v3_25f2c to i32
  store i32 %v4_25f2c, i32* %eax.global-to-local, align 8
  %v2_25f33 = load i32, i32* %edx.global-to-local, align 4
  %v3_25f33 = add i32 %v2_25f33, ptrtoint (i1* @global_var_1.2399 to i32)
  %v4_25f33 = inttoptr i32 %v3_25f33 to i8*
  store i8 %v3_25f2c, i8* %v4_25f33, align 1
  %v0_25f36 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25f36
}

define i32 @function_25f3b() local_unnamed_addr {
dec_label_pc_25f3b:
  %tmp5 = call i8* @__decompiler_undefined_function_1()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v0_25f3b = load i32, i32* @eax, align 8
  %v1_25f3b = add i32 %v0_25f3b, 136
  %v2_25f3b = inttoptr i32 %v1_25f3b to i32*
  %v3_25f3b = load i32, i32* %v2_25f3b, align 4
  %v1_25f45 = inttoptr i32 %v3_25f3b to i32*
  %v2_25f45 = load i32, i32* %v1_25f45, align 4
  store i32 %v2_25f45, i32* @ecx, align 4
  %v1_25f47 = add i32 %tmp9, 8
  %v2_25f47 = inttoptr i32 %v1_25f47 to i32*
  %v3_25f47 = load i32, i32* %v2_25f47, align 4
  %v1_25f4a = icmp eq i32 %v3_25f47, 0
  br i1 %v1_25f4a, label %bb, label %dec_label_pc_25f4e

bb:                                               ; preds = %dec_label_pc_25f3b
  %v1_25f4c = call i32 @function_25f14()
  br label %dec_label_pc_25f4e

dec_label_pc_25f4e:                               ; preds = %bb, %dec_label_pc_25f3b
  %v0_25f4e = phi i32 [ %v1_25f4c, %bb ], [ %v3_25f47, %dec_label_pc_25f3b ]
  %v1_25f4e = add i32 %v0_25f4e, 28
  %v2_25f4e = inttoptr i32 %v1_25f4e to i32*
  %v3_25f4e = load i32, i32* %v2_25f4e, align 4
  store i32 %v3_25f4e, i32* @edx, align 4
  %v1_25f51 = icmp eq i32 %v3_25f4e, 0
  br i1 %v1_25f51, label %bb10, label %dec_label_pc_25f59

bb10:                                             ; preds = %dec_label_pc_25f4e
  %v1_25f53 = call i32 @function_2603d()
  br label %dec_label_pc_25f59

dec_label_pc_25f59:                               ; preds = %bb10, %dec_label_pc_25f4e
  %v0_25f59 = phi i32 [ %v1_25f53, %bb10 ], [ %v0_25f4e, %dec_label_pc_25f4e ]
  %v1_25f59 = add i32 %v0_25f59, 32
  store i32 %v1_25f59, i32* @eax, align 8
  %v4_25f69 = ptrtoint i8* %tmp5 to i32
  %v2_25f6d = load i8, i8* %tmp5, align 1
  %v9_25f6d = icmp eq i8 %v2_25f6d, 0
  br i1 %v9_25f6d, label %bb11, label %dec_label_pc_25f72

bb11:                                             ; preds = %dec_label_pc_25f59
  %v0_25f5f = load i32, i32* @ecx, align 4
  %v3_25f70 = inttoptr i32 %v1_25f59 to i8*
  %v4_25f70 = call i32 @function_25f87(i8* %v3_25f70, i32 %v0_25f5f)
  store i32 %v4_25f70, i32* @eax, align 8
  br label %dec_label_pc_25f72

dec_label_pc_25f72:                               ; preds = %bb11, %dec_label_pc_25f59
  %v0_25f76 = phi i32 [ %v4_25f70, %bb11 ], [ %v1_25f59, %dec_label_pc_25f59 ]
  %v1_25f76 = trunc i32 %v0_25f76 to i8
  %v3_25f76 = add i32 %v4_25f69, ptrtoint (i1* @global_var_1.2399 to i32)
  %v4_25f76 = inttoptr i32 %v3_25f76 to i8*
  store i8 %v1_25f76, i8* %v4_25f76, align 1
  %v0_25f79 = load i32, i32* @eax, align 8
  ret i32 %v0_25f79

; uselistorder directives
  uselistorder i8* %tmp5, { 1, 0 }
  uselistorder i32 28, { 3, 4, 5, 78, 79, 80, 37, 93, 94, 58, 59, 6, 95, 96, 97, 7, 60, 61, 62, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 99, 100, 101, 21, 38, 39, 40, 22, 23, 110, 111, 112, 118, 119, 120, 121, 122, 108, 24, 25, 127, 125, 126, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 26, 73, 27, 28, 29, 74, 30, 75, 31, 76, 77, 2, 1, 0, 129, 130, 131, 32, 33, 81, 34, 35, 82, 36, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 123, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 128, 56, 55, 57, 132, 133 }
  uselistorder i32 ()* @function_25f14, { 2, 1, 0 }
}

define i32 @function_25f7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f7e:
  %v0_25f82 = load i32, i32* @eax, align 8
  ret i32 %v0_25f82
}

define i32 @function_25f87(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25f87:
  %ecx.global-to-local = alloca i32, align 4
  %v4_25f87 = ptrtoint i8* %arg1 to i32
  store i32 %v4_25f87, i32* %ecx.global-to-local, align 4
  %v0_25f8b = load i32, i32* @eax, align 8
  %v1_25f8b = trunc i32 %v0_25f8b to i8
  %v3_25f8b = add i32 %v4_25f87, ptrtoint (i1* @global_var_1.2399 to i32)
  %v4_25f8b = inttoptr i32 %v3_25f8b to i8*
  store i8 %v1_25f8b, i8* %v4_25f8b, align 1
  %v0_25f8e = load i32, i32* %ecx.global-to-local, align 4
  %v1_25f8e = inttoptr i32 %v0_25f8e to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v1_25f8e, align 1
  %v0_25f91 = load i32, i32* @eax, align 8
  ret i32 %v0_25f91
}

define i32 @function_25f96() local_unnamed_addr {
dec_label_pc_25f96:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25f9b() local_unnamed_addr {
dec_label_pc_25f9b:
  %stack_var_144 = alloca i32, align 4
  %stack_var_188 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i8* @__decompiler_undefined_function_1()
  %v0_25f9b = load i32, i32* @edx, align 4
  %v10_25f9b = icmp eq i32 %v0_25f9b, 1
  br i1 %v10_25f9b, label %dec_label_pc_25f9b.dec_label_pc_25ff8_crit_edge, label %dec_label_pc_25fa0

dec_label_pc_25f9b.dec_label_pc_25ff8_crit_edge:  ; preds = %dec_label_pc_25f9b
  %v0_25ffb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_25ff8

dec_label_pc_25fa0:                               ; preds = %dec_label_pc_25f9b
  %v2_25fa4 = load i8, i8* %tmp10, align 1
  %v9_25fa4 = icmp eq i8 %v2_25fa4, 0
  br i1 %v9_25fa4, label %dec_label_pc_25fac, label %dec_label_pc_25fa9

dec_label_pc_25fa9:                               ; preds = %dec_label_pc_25fa0
  br label %dec_label_pc_25fac

dec_label_pc_25fac:                               ; preds = %dec_label_pc_25fa9, %dec_label_pc_25fa0
  %tmp13 = icmp ugt i32 %tmp8, %tmp9
  br i1 %tmp13, label %dec_label_pc_25fbe, label %dec_label_pc_25fd2

dec_label_pc_25fbe:                               ; preds = %dec_label_pc_25fac
  %v2_25fcd = call i32 @unknown_47cc0(i32 %tmp6, i32 %tmp7)
  br label %dec_label_pc_25fd2

dec_label_pc_25fd2:                               ; preds = %dec_label_pc_25fac, %dec_label_pc_25fbe
  %v2_25fd2 = ptrtoint i32* %stack_var_188 to i32
  store i32 %v2_25fd2, i32* @ecx, align 4
  %v1_25fdc = call i32 @unknown_3a260(i32 %v2_25fd2)
  %v2_25fe1 = ptrtoint i32* %stack_var_144 to i32
  %v1_25feb = call i32 @unknown_35ed0(i32 %v2_25fe1)
  br label %dec_label_pc_25ff8

dec_label_pc_25ff8:                               ; preds = %dec_label_pc_25f9b.dec_label_pc_25ff8_crit_edge, %dec_label_pc_25fd2
  %v0_25ffb = phi i32 [ %v0_25ffb.pre, %dec_label_pc_25f9b.dec_label_pc_25ff8_crit_edge ], [ %v1_25feb, %dec_label_pc_25fd2 ]
  ret i32 %v0_25ffb

; uselistorder directives
  uselistorder i32 (i32)* @unknown_35ed0, { 1, 0 }
  uselistorder label %dec_label_pc_25ff8, { 1, 0 }
  uselistorder label %dec_label_pc_25fd2, { 1, 0 }
}

define i32 @function_26005() local_unnamed_addr {
dec_label_pc_26005:
  %eax.global-to-local = alloca i32, align 4
  %v0_26005 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26005
}

define i32 @function_2603d() local_unnamed_addr {
dec_label_pc_2603d:
  %stack_var_156 = alloca i32, align 4
  %v2_2603d = ptrtoint i32* %stack_var_156 to i32
  store i32 %v2_2603d, i32* @ecx, align 4
  %v1_26047 = call i32 @unknown_36390(i32 %v2_2603d)
  %v1_26056 = call i32 @unknown_38fd0(i32 %v2_2603d)
  store i32 %v1_26056, i32* @eax, align 8
  %v0_26068 = call i32 @function_25f9b()
  ret i32 %v0_26068
}

define i32 @function_2606d() local_unnamed_addr {
dec_label_pc_2606d:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_156 = alloca i32, align 4
  %v0_2606d = load i32, i32* @eax, align 8
  %v0_2606f = load i32, i32* %edx.global-to-local, align 4
  %v2_26071 = ptrtoint i32* %stack_var_156 to i32
  %v1_2607b = call i32 @function_30f50(i32 %v2_26071)
  store i32 %v0_2606d, i32* @eax, align 8
  store i32 %v0_2606f, i32* %edx.global-to-local, align 4
  %v0_26084 = call i32 @function_25f96()
  ret i32 %v0_26084
}

define i32 @function_26089() local_unnamed_addr {
dec_label_pc_26089:
  %eax.global-to-local = alloca i32, align 4
  %v0_26089 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26089
}

define i32 @function_2608e() local_unnamed_addr {
dec_label_pc_2608e:
  %v0_26091 = load i32, i32* @eax, align 8
  ret i32 %v0_26091
}

define i32 @function_26097() local_unnamed_addr {
dec_label_pc_26097:
  %v3_260af = load i32, i32* @eax, align 8
  ret i32 %v3_260af
}

define i32 @function_260bb() local_unnamed_addr {
dec_label_pc_260bb:
  %v0_260bb = load i32, i32* @eax, align 8
  ret i32 %v0_260bb
}

define i32 @function_260c0() local_unnamed_addr {
dec_label_pc_260c0:
  %v0_260c0 = load i32, i32* @eax, align 8
  %v2_260c0 = mul i32 %v0_260c0, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_260c0 = add i32 %v0_260c0, -3
  %v4_260c0 = add i32 %v3_260c0, %v2_260c0
  %v0_260c4 = load i32, i32* @edx, align 4
  %v2_260c4 = mul i32 %v4_260c0, 4
  %v3_260c4 = add i32 %v2_260c4, %v0_260c4
  %v3_260c7 = mul i32 %v0_260c0, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_260cc = shl i32 %v3_260c7, ptrtoint (i64* @global_var_2.2539 to i32)
  %v2_260cf = sub i32 %v3_260c4, %v2_260cc
  %v1_260dc = call i32 @unknown_38100(i32 %v3_260c4)
  %v1_260e1 = add i32 %v3_260c4, -12
  %v7_260e4 = icmp ult i32 %v2_260cf, %v1_260e1
  br i1 %v7_260e4, label %dec_label_pc_260d9, label %dec_label_pc_260e8

dec_label_pc_260d9:                               ; preds = %dec_label_pc_260c0
  ret i32 %v1_260dc

dec_label_pc_260e8:                               ; preds = %dec_label_pc_260c0
  ret i32 %v1_260dc

; uselistorder directives
  uselistorder i32 %v1_260dc, { 1, 0 }
  uselistorder i32 %v0_260c0, { 0, 2, 1 }
}

define i32 @function_260fb() local_unnamed_addr {
dec_label_pc_260fb:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_2610a = call i32 @unknown_47cc0(i32 %tmp2, i32 %tmp3)
  ret i32 %v2_2610a

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_47cc0, { 1, 0 }
}

define i32 @function_26114() local_unnamed_addr {
dec_label_pc_26114:
  %stack_var_164 = alloca i32, align 4
  %v2_26116 = ptrtoint i32* %stack_var_164 to i32
  %v1_26120 = call i32 @unknown_3bcc0(i32 %v2_26116)
  ret i32 %v1_26120
}

define i32 @function_2612a(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2612a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_168 = alloca i32, align 4
  %tmp112 = ptrtoint i32* %arg1 to i32
  %v0_2612a = load i32, i32* %eax.global-to-local, align 8
  %v1_2612a = add i32 %v0_2612a, 4
  %v2_2612a = inttoptr i32 %v1_2612a to i32*
  %v3_2612a = load i32, i32* %v2_2612a, align 4
  store i32 %v3_2612a, i32* %eax.global-to-local, align 8
  %v10_2612d = icmp eq i32 %v3_2612a, 1
  %v1_26130 = icmp eq i1 %v10_2612d, false
  br i1 %v1_26130, label %dec_label_pc_261e8, label %dec_label_pc_26136

dec_label_pc_26136:                               ; preds = %dec_label_pc_2612a
  store i32 0, i32* %stack_var_168, align 4
  %v2_26145 = load i32, i32* %arg1, align 4
  store i32 %v2_26145, i32* %eax.global-to-local, align 8
  %v1_26147 = icmp eq i32 %v2_26145, 0
  br i1 %v1_26147, label %bb, label %dec_label_pc_2614f

bb:                                               ; preds = %dec_label_pc_26136
  %v2_26149 = call i32 @function_26268(i32 0)
  store i32 %v2_26149, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2614f

dec_label_pc_2614f:                               ; preds = %bb, %dec_label_pc_26136
  %v0_2614f = phi i32 [ %v2_26149, %bb ], [ %v2_26145, %dec_label_pc_26136 ]
  %v1_2614f = inttoptr i32 %v0_2614f to i32*
  %v2_2614f = load i32, i32* %v1_2614f, align 4
  store i32 %v2_2614f, i32* %eax.global-to-local, align 8
  %v1_26151 = icmp eq i32 %v2_2614f, 0
  br i1 %v1_26151, label %bb114, label %dec_label_pc_26159

bb114:                                            ; preds = %dec_label_pc_2614f
  %v1_26153 = load i32, i32* %stack_var_168, align 4
  %v2_26153 = call i32 @function_26263(i32 %v1_26153)
  store i32 %v2_26153, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26159

dec_label_pc_26159:                               ; preds = %bb114, %dec_label_pc_2614f
  %v0_261dd = phi i32 [ %v2_26153, %bb114 ], [ %v2_2614f, %dec_label_pc_2614f ]
  %v2_2615d = add i32 %tmp112, 8
  %v3_2615d = inttoptr i32 %v2_2615d to i32*
  %v4_2615d = load i32, i32* %v3_2615d, align 4
  %v15_2615d = icmp eq i32 %v0_261dd, %v4_2615d
  br i1 %v15_2615d, label %dec_label_pc_26170, label %dec_label_pc_26162

dec_label_pc_26162:                               ; preds = %dec_label_pc_26159
  br label %dec_label_pc_26170

dec_label_pc_26170:                               ; preds = %dec_label_pc_26159, %dec_label_pc_26162
  %storemerge1.in.in = phi i32 [ %v2_2615d, %dec_label_pc_26162 ], [ %v0_261dd, %dec_label_pc_26159 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* %stack_var_168, align 4
  %v2_26170 = ptrtoint i32* %stack_var_168 to i32
  store i32 %tmp112, i32* %eax.global-to-local, align 8
  %v7_26192 = call i32 @unknown_47820(i32 %tmp112, i32 0, i32 %v2_26170, i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32))
  store i32 %v7_26192, i32* %eax.global-to-local, align 8
  %v1_2619b = add i32 %tmp112, 4
  %v2_2619b = inttoptr i32 %v1_2619b to i32*
  %v3_2619b = load i32, i32* %v2_2619b, align 4
  store i32 %v3_2619b, i32* @eax, align 8
  %v1_261a0 = icmp eq i32 %v3_2619b, 0
  %v1_261b0 = icmp eq i1 %v1_261a0, false
  br i1 %v1_261b0, label %bb115, label %dec_label_pc_261b6

bb115:                                            ; preds = %dec_label_pc_26170
  %v2_2619e = load i32, i32* %arg1, align 4
  %v4_261b0 = call i32 @function_25a24(i32 %v2_2619e, i32 %v3_2619b)
  store i32 %v4_261b0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_261b6

dec_label_pc_261b6:                               ; preds = %bb115, %dec_label_pc_26170
  store i32 0, i32* @eax, align 8
  %v4_261b8 = call i32 @function_25a36(i32 %v3_2619b, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  store i32 %v4_261b8, i32* %eax.global-to-local, align 8
  ret i32 %v4_261b8

dec_label_pc_261e8:                               ; preds = %dec_label_pc_2612a
  store i32 %tmp112, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  %v7_26214 = call i32 @function_25a36(i32 ptrtoint ([23 x i8]* @global_var_a390.2738 to i32), i32 ptrtoint ([55 x i8]* @global_var_ddc8.2737 to i32), i32 ptrtoint (i32* @global_var_1c9.2770 to i32), i32 sext (i1 ptrtoint ([474 x i8]* @global_var_2bea0.2771 to i1) to i32))
  store i32 %v7_26214, i32* %eax.global-to-local, align 8
  ret i32 %v7_26214

; uselistorder directives
  uselistorder i32 %v0_261dd, { 1, 0 }
  uselistorder i32 %tmp112, { 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_168, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 0, 6, 7, 1, 8, 2, 9, 10, 11 }
  uselistorder i32 (i32, i32, i32, i32)* @function_25a36, { 1, 0 }
  uselistorder i1 ptrtoint (i1* @global_var_1.2399 to i1), { 3, 2, 0, 5, 1, 6, 4 }
  uselistorder i32 sext (i1 ptrtoint (i1* @global_var_1.2399 to i1) to i32), { 4, 5, 6, 0, 1, 3, 7, 8, 9, 10, 11, 12, 2 }
  uselistorder i32 8, { 32, 33, 34, 35, 36, 37, 38, 39, 460, 252, 253, 254, 255, 256, 257, 258, 259, 89, 79, 40, 41, 90, 91, 92, 135, 136, 137, 138, 139, 140, 141, 142, 333, 334, 335, 336, 337, 338, 339, 332, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 162, 163, 42, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 164, 165, 43, 44, 45, 46, 47, 19, 48, 49, 50, 51, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 176, 52, 53, 54, 55, 94, 20, 56, 57, 395, 396, 28, 21, 397, 381, 383, 382, 177, 178, 179, 180, 181, 372, 377, 411, 388, 389, 29, 391, 58, 59, 402, 182, 183, 414, 184, 185, 426, 427, 428, 425, 429, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 60, 454, 455, 198, 199, 200, 201, 202, 203, 204, 205, 1, 2, 207, 208, 206, 209, 210, 211, 212, 213, 214, 215, 61, 217, 216, 62, 63, 218, 219, 220, 221, 222, 64, 223, 224, 65, 225, 226, 227, 228, 229, 66, 67, 68, 69, 230, 231, 232, 233, 234, 235, 70, 71, 72, 236, 73, 74, 75, 76, 77, 237, 238, 239, 433, 439, 440, 3, 441, 4, 442, 443, 444, 445, 446, 240, 241, 5, 242, 243, 6, 244, 7, 245, 8, 246, 247, 248, 249, 250, 251, 260, 261, 78, 262, 263, 264, 80, 265, 266, 81, 22, 267, 268, 269, 270, 9, 82, 23, 271, 272, 273, 274, 275, 276, 434, 277, 456, 83, 24, 278, 279, 84, 25, 280, 281, 282, 283, 284, 285, 286, 287, 85, 26, 288, 289, 290, 291, 462, 463, 464, 10, 292, 293, 294, 11, 295, 296, 297, 298, 299, 300, 301, 302, 303, 12, 13, 304, 305, 306, 14, 15, 307, 308, 16, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 86, 87, 323, 325, 324, 326, 327, 457, 458, 328, 88, 329, 330, 331, 350, 351, 352, 17, 93, 353, 354, 355, 95, 96, 97, 356, 357, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 384, 385, 386, 387, 390, 392, 393, 394, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 430, 431, 432, 112, 113, 461, 435, 436, 437, 116, 27, 114, 115, 117, 118, 119, 120, 121, 0, 125, 122, 123, 124, 126, 127, 438, 128, 459, 130, 129, 131, 132, 133, 134, 447, 448, 449, 450, 451, 452, 453, 30, 18, 31 }
  uselistorder i32 (i32)* @function_26263, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_26268, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_26170, { 1, 0 }
}

define i32 @function_26219(i32* %arg1) local_unnamed_addr {
dec_label_pc_26219:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_26219 = load i32, i32* %eax.global-to-local, align 8
  %v0_2621b = load i32, i32* %esi.global-to-local, align 4
  %v1_2621e = call i32 @unknown_38100(i32 %v0_2621b)
  store i32 %v0_26219, i32* %eax.global-to-local, align 8
  ret i32 %v0_26219

; uselistorder directives
  uselistorder i32 %v0_26219, { 1, 0 }
  uselistorder i32 (i32)* @unknown_38100, { 4, 3, 2, 0, 1 }
}

define i32 @function_26236() local_unnamed_addr {
dec_label_pc_26236:
  %eax.global-to-local = alloca i32, align 4
  %v0_26236 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26236
}

define i32 @function_2623a() local_unnamed_addr {
dec_label_pc_2623a:
  %v3_26252 = load i32, i32* @eax, align 8
  ret i32 %v3_26252
}

define i32 @function_2625e() local_unnamed_addr {
dec_label_pc_2625e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2625e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2625e
}

define i32 @function_26263(i32 %arg1) local_unnamed_addr {
dec_label_pc_26263:
  %v0_26263 = call i32 @unknown_33d42()
  ret i32 %v0_26263
}

define i32 @function_26268(i32 %arg1) local_unnamed_addr {
dec_label_pc_26268:
  %v0_26270 = call i32 @unknown_33c0a()
  ret i32 %v0_26270
}

define i32 @_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEclES4_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_26280:
  %v1_262d8 = add i32 %arg2, 12
  ret i32 %v1_262d8

; uselistorder directives
  uselistorder i32 12, { 89, 19, 20, 21, 18, 327, 211, 212, 213, 210, 335, 62, 90, 91, 92, 93, 94, 95, 96, 97, 98, 242, 243, 244, 245, 247, 248, 246, 99, 100, 101, 102, 103, 105, 106, 104, 107, 22, 109, 110, 108, 111, 249, 250, 251, 252, 253, 254, 23, 63, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 24, 116, 117, 118, 25, 125, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 267, 268, 269, 270, 271, 272, 35, 126, 262, 36, 37, 38, 39, 64, 65, 1, 40, 41, 291, 5, 285, 292, 293, 294, 42, 295, 127, 128, 129, 130, 131, 132, 133, 43, 44, 45, 282, 283, 284, 296, 297, 2, 286, 287, 288, 289, 290, 46, 47, 48, 134, 135, 3, 136, 137, 298, 138, 139, 140, 141, 300, 4, 301, 302, 303, 304, 299, 142, 6, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 325, 326, 160, 161, 162, 163, 164, 165, 166, 167, 7, 169, 170, 171, 172, 168, 178, 173, 174, 175, 176, 177, 179, 180, 181, 49, 50, 51, 182, 183, 184, 52, 185, 186, 187, 188, 189, 190, 191, 53, 192, 193, 194, 195, 196, 8, 54, 55, 197, 198, 199, 309, 312, 313, 314, 10, 9, 11, 315, 316, 317, 318, 200, 201, 202, 12, 203, 13, 14, 204, 205, 206, 15, 207, 319, 208, 209, 214, 56, 215, 216, 57, 217, 218, 328, 329, 330, 331, 332, 333, 334, 58, 59, 219, 220, 221, 222, 16, 60, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 61, 241, 255, 256, 257, 258, 66, 67, 259, 260, 261, 263, 264, 265, 266, 273, 274, 275, 276, 277, 278, 279, 280, 281, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 305, 306, 307, 308, 310, 81, 79, 80, 82, 85, 83, 84, 86, 87, 311, 17, 88, 320, 321, 322, 323, 324 }
}

define i32 @function_26312(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26312:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26324() local_unnamed_addr {
dec_label_pc_26324:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26390() local_unnamed_addr {
dec_label_pc_26390:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_264a6() local_unnamed_addr {
dec_label_pc_264a6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_264b9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_264b9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_264d1() local_unnamed_addr {
dec_label_pc_264d1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_264db() local_unnamed_addr {
dec_label_pc_264db:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_264f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_264f4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26512() local_unnamed_addr {
dec_label_pc_26512:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2653d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2653d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26572(i8* %arg1) local_unnamed_addr {
dec_label_pc_26572:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_2657a = load i32, i32* %esi.global-to-local, align 4
  %v1_2657a = add i32 %v0_2657a, ptrtoint (i1* @global_var_1.2399 to i32)
  %v2_2657a = inttoptr i32 %v1_2657a to i8*
  %v3_2657a = load i8, i8* %v2_2657a, align 1
  %v4_2657a = zext i8 %v3_2657a to i32
  store i32 %v4_2657a, i32* @eax, align 8
  %v4_2657e = ptrtoint i8* %arg1 to i32
  store i32 %v4_2657e, i32* %edx.global-to-local, align 4
  %v0_26582 = load i32, i32* %edi.global-to-local, align 4
  %v1_26582 = load i32, i32* %ebx.global-to-local, align 4
  %v12_26582 = icmp eq i32 %v0_26582, %v1_26582
  store i1 %v12_26582, i1* %zf.global-to-local, align 1
  %v3_26584 = add i32 %v4_2657e, ptrtoint (i1* @global_var_1.2399 to i32)
  %v4_26584 = inttoptr i32 %v3_26584 to i8*
  store i8 %v3_2657a, i8* %v4_26584, align 1
  %v0_26587 = load i32, i32* %edx.global-to-local, align 4
  %v1_26587 = inttoptr i32 %v0_26587 to i8*
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* %v1_26587, align 1
  %v0_2658a = load i1, i1* %zf.global-to-local, align 1
  %v1_2658a = icmp eq i1 %v0_2658a, false
  br i1 %v1_2658a, label %bb, label %dec_label_pc_26590

bb:                                               ; preds = %dec_label_pc_26572
  %v2_2658a = call i32 @function_264db()
  store i32 %v2_2658a, i32* @eax, align 8
  br label %dec_label_pc_26590

dec_label_pc_26590:                               ; preds = %bb, %dec_label_pc_26572
  %v2_26590 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_26590 = icmp eq i8 %v2_26590, 0
  store i1 %v9_26590, i1* %zf.global-to-local, align 1
  br i1 %v9_26590, label %bb99, label %dec_label_pc_26599

bb99:                                             ; preds = %dec_label_pc_26590
  %v1_26593 = call i32 @function_264a6()
  store i32 %v1_26593, i32* @eax, align 8
  br label %dec_label_pc_26599

dec_label_pc_26599:                               ; preds = %bb99, %dec_label_pc_26590
  %v0_26599 = load i32, i32* %esi.global-to-local, align 4
  %v1_26599 = inttoptr i32 %v0_26599 to i8*
  store i8 0, i8* %v1_26599, align 1
  %v0_2659c = call i32 @function_264a6()
  ret i32 %v0_2659c

; uselistorder directives
  uselistorder i32 ()* @function_264a6, { 1, 0 }
  uselistorder i32* @esi, { 79, 80, 81, 374, 316, 317, 318, 120, 121, 122, 123, 124, 125, 126, 127, 128, 53, 161, 162, 163, 54, 6, 164, 7, 165, 55, 166, 167, 168, 56, 8, 169, 9, 170, 391, 397, 392, 394, 395, 396, 10, 393, 171, 172, 173, 174, 175, 176, 11, 177, 178, 179, 57, 398, 12, 399, 400, 401, 402, 403, 404, 405, 406, 407, 13, 408, 180, 181, 182, 184, 82, 183, 130, 185, 187, 188, 186, 189, 190, 191, 58, 202, 14, 203, 204, 205, 206, 207, 208, 209, 210, 211, 15, 212, 213, 192, 193, 194, 196, 83, 195, 113, 197, 199, 200, 198, 201, 214, 215, 59, 414, 16, 415, 416, 417, 418, 419, 420, 421, 422, 423, 17, 424, 425, 216, 217, 218, 220, 84, 219, 118, 221, 412, 413, 411, 426, 131, 132, 445, 444, 446, 447, 448, 52, 449, 452, 453, 451, 450, 454, 60, 455, 456, 457, 459, 85, 458, 460, 223, 224, 222, 225, 226, 227, 428, 429, 430, 431, 432, 433, 434, 461, 462, 0, 463, 464, 465, 466, 435, 436, 437, 438, 439, 440, 441, 442, 443, 467, 468, 1, 469, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 470, 471, 472, 61, 86, 87, 239, 240, 241, 242, 243, 244, 245, 18, 246, 247, 248, 249, 19, 250, 251, 252, 253, 254, 255, 256, 257, 62, 63, 258, 259, 260, 261, 262, 263, 88, 89, 90, 91, 264, 265, 266, 64, 267, 268, 20, 269, 270, 271, 2, 272, 65, 273, 274, 275, 276, 277, 66, 278, 279, 21, 280, 281, 282, 3, 283, 92, 284, 93, 285, 67, 286, 287, 22, 288, 289, 290, 4, 291, 68, 94, 95, 293, 96, 97, 292, 294, 295, 296, 69, 297, 98, 99, 299, 100, 101, 298, 300, 301, 302, 482, 303, 70, 304, 305, 23, 306, 307, 308, 5, 309, 102, 310, 103, 24, 25, 104, 105, 106, 107, 108, 109, 110, 111, 112, 311, 312, 313, 314, 71, 315, 487, 490, 319, 320, 26, 27, 321, 505, 506, 28, 507, 508, 29, 509, 510, 323, 324, 30, 322, 325, 326, 327, 328, 329, 31, 32, 33, 330, 331, 332, 333, 34, 35, 36, 334, 335, 336, 337, 37, 38, 39, 338, 341, 342, 339, 340, 343, 344, 347, 348, 345, 40, 41, 346, 349, 350, 351, 72, 352, 73, 353, 42, 354, 355, 356, 357, 358, 74, 359, 360, 361, 362, 363, 43, 364, 371, 365, 366, 367, 368, 369, 370, 44, 372, 373, 376, 377, 378, 375, 381, 382, 383, 384, 385, 379, 380, 386, 45, 499, 500, 114, 115, 116, 117, 503, 504, 387, 388, 389, 390, 119, 129, 409, 410, 133, 427, 134, 135, 136, 473, 474, 475, 476, 501, 502, 480, 46, 477, 478, 47, 479, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 148, 48, 481, 150, 151, 75, 49, 483, 484, 485, 486, 512, 76, 77, 511, 488, 50, 489, 152, 153, 154, 155, 156, 157, 158, 51, 159, 491, 160, 492, 493, 494, 495, 496, 497, 78, 498 }
}

define i32 @function_265a8() local_unnamed_addr {
dec_label_pc_265a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_265a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_265a8
}

define i32 @function_265b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %arg15, i32 %arg16, i32 %arg17, i32 %arg18, i32 %arg19, i32 %arg20, i32 %arg21, i32 %arg22, i32 %arg23, i32 %arg24) local_unnamed_addr {
dec_label_pc_265b0:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_80 = alloca i32, align 4
  %v2_265b0 = ptrtoint i32* %stack_var_80 to i32
  store i32 %v2_265b0, i32* @eax, align 8
  %v0_265b4 = call i32 @function_26390()
  %v0_265c0 = load i32, i32* %esi.global-to-local, align 4
  %v1_265c0 = add i32 %v0_265c0, ptrtoint (i32* @global_var_80.2697 to i32)
  %v2_265c0 = inttoptr i32 %v1_265c0 to i32*
  %v3_265c0 = load i32, i32* %v2_265c0, align 4
  %v0_265c6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_265c6 = mul i32 %v0_265c6, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_265c6 = add i32 %v0_265c6, -3
  %v4_265c6 = add i32 %v3_265c6, %v2_265c6
  %v2_265ca = mul i32 %v4_265c6, 4
  %v3_265ca = add i32 %v2_265ca, %v3_265c0
  store i32 %v3_265ca, i32* %ebx.global-to-local, align 4
  %v3_265cd = mul i32 %v0_265c6, add (i32 ptrtoint (i64* @global_var_2.2539 to i32), i32 1)
  %v2_265d2 = shl i32 %v3_265cd, ptrtoint (i64* @global_var_2.2539 to i32)
  %v3_265d2 = icmp eq i32 %v2_265d2, 0
  %v2_265d5 = sub i32 %v3_265ca, %v2_265d2
  %v7_265d7 = icmp ult i32 %v3_265ca, %v2_265d5
  %v2_265dd = or i1 %v3_265d2, %v7_265d7
  br i1 %v2_265dd, label %dec_label_pc_269d0, label %dec_label_pc_265e8

dec_label_pc_265e8:                               ; preds = %dec_label_pc_265b0, %dec_label_pc_265e8
  %v0_265e8 = phi i32 [ %v1_265f0, %dec_label_pc_265e8 ], [ %v3_265ca, %dec_label_pc_265b0 ]
  %v2_265eb = call i32 @unknown_389f0(i32 %v0_265e8)
  %v0_265f0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_265f0 = add i32 %v0_265f0, -12
  store i32 %v1_265f0, i32* %ebx.global-to-local, align 4
  %v11_265f3 = icmp ult i32 %v2_265d5, %v1_265f0
  br i1 %v11_265f3, label %dec_label_pc_265e8, label %dec_label_pc_265f9

dec_label_pc_265f9:                               ; preds = %dec_label_pc_265e8
  %v0_265f9 = load i32, i32* %esi.global-to-local, align 4
  %v1_265f9 = add i32 %v0_265f9, 132
  %v2_265f9 = inttoptr i32 %v1_265f9 to i32*
  %v3_265f9 = load i32, i32* %v2_265f9, align 4
  %v5_265ff = sub i32 %v3_265f9, %arg3
  br label %dec_label_pc_26603

dec_label_pc_26603:                               ; preds = %dec_label_pc_269d0, %dec_label_pc_265f9
  %v1_26603 = phi i32 [ %v0_265c0, %dec_label_pc_269d0 ], [ %v0_265f9, %dec_label_pc_265f9 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_269d0 ], [ %v5_265ff, %dec_label_pc_265f9 ]
  store i32 %storemerge, i32* @eax, align 8
  %v2_26603 = add i32 %v1_26603, 132
  %v3_26603 = inttoptr i32 %v2_26603 to i32*
  store i32 %storemerge, i32* %v3_26603, align 4
  %v0_26609 = call i32 @function_26512()
  ret i32 %v0_26609

dec_label_pc_269d0:                               ; preds = %dec_label_pc_265b0
  br label %dec_label_pc_26603

; uselistorder directives
  uselistorder i32 %v1_265f0, { 1, 2, 0 }
  uselistorder i32 %v0_265c6, { 0, 2, 1 }
  uselistorder i32 132, { 0, 1, 2, 3, 12, 13, 4, 5, 6, 7, 8, 9, 10, 20, 21, 19, 11, 14, 15, 16, 17, 18 }
  uselistorder i32 -12, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 15, 16, 32, 17, 18, 33, 34, 19, 35, 27, 28, 36, 29, 30, 20, 21, 22, 23, 24, 25, 26, 38, 37, 39, 40, 41, 42, 43, 46, 47, 48, 44, 45 }
  uselistorder i32 4, { 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 62, 69, 617, 365, 366, 368, 369, 370, 371, 372, 373, 367, 374, 618, 619, 620, 113, 130, 115, 116, 117, 131, 132, 114, 70, 71, 133, 134, 72, 73, 74, 75, 178, 179, 180, 181, 182, 183, 184, 76, 77, 185, 186, 187, 188, 189, 190, 191, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 483, 488, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 219, 490, 492, 493, 491, 224, 225, 222, 223, 226, 78, 229, 231, 232, 230, 233, 234, 227, 228, 235, 79, 80, 81, 82, 53, 83, 84, 85, 513, 515, 516, 514, 517, 518, 236, 510, 519, 86, 87, 88, 89, 54, 137, 90, 91, 532, 528, 529, 530, 531, 535, 237, 238, 239, 524, 525, 526, 527, 533, 534, 92, 240, 241, 536, 242, 243, 55, 244, 245, 246, 247, 248, 249, 250, 93, 94, 0, 1, 2, 594, 595, 596, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 261, 268, 263, 264, 265, 266, 267, 269, 3, 4, 5, 6, 7, 270, 271, 95, 96, 97, 98, 99, 272, 8, 9, 273, 274, 275, 10, 276, 277, 278, 279, 283, 280, 11, 281, 282, 100, 101, 102, 284, 12, 285, 286, 287, 13, 288, 289, 290, 291, 292, 293, 294, 295, 296, 103, 104, 297, 14, 298, 299, 300, 15, 301, 302, 303, 304, 305, 307, 306, 308, 309, 310, 312, 311, 313, 569, 16, 314, 315, 316, 17, 317, 318, 319, 320, 321, 322, 323, 324, 325, 105, 326, 327, 328, 329, 330, 18, 331, 332, 333, 334, 19, 335, 336, 624, 625, 626, 627, 628, 629, 630, 106, 20, 107, 108, 109, 337, 338, 340, 339, 110, 341, 342, 344, 343, 345, 346, 111, 347, 348, 558, 559, 21, 560, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 22, 23, 24, 25, 26, 27, 581, 582, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 56, 361, 356, 362, 363, 364, 375, 376, 112, 377, 378, 379, 380, 118, 119, 28, 381, 29, 382, 383, 384, 385, 386, 387, 120, 597, 598, 599, 600, 601, 602, 603, 30, 31, 388, 32, 33, 389, 390, 391, 34, 35, 392, 121, 393, 394, 631, 632, 633, 634, 635, 636, 637, 638, 639, 395, 396, 397, 36, 398, 45, 46, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 37, 410, 411, 412, 413, 414, 47, 48, 415, 416, 417, 418, 419, 420, 421, 422, 38, 423, 424, 39, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 442, 443, 448, 449, 450, 451, 122, 452, 455, 456, 457, 458, 459, 461, 462, 463, 40, 464, 460, 453, 454, 41, 465, 123, 124, 604, 125, 605, 606, 607, 42, 608, 43, 44, 609, 466, 467, 126, 621, 622, 468, 469, 470, 623, 127, 128, 129, 471, 472, 473, 474, 475, 476, 135, 136, 489, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 520, 521, 522, 523, 537, 538, 138, 139, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 614, 616, 615, 613, 141, 142, 50, 51, 140, 143, 144, 145, 146, 561, 562, 563, 564, 565, 566, 567, 568, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 162, 164, 165, 166, 167, 168, 570, 583, 610, 611, 612, 169, 584, 170, 171, 172, 173, 174, 175, 176, 49, 52, 585, 586, 587, 588, 177, 589, 590, 591, 592, 593 }
  uselistorder i32 -3, { 1, 2, 3, 10, 11, 4, 5, 6, 7, 8, 9, 0, 12, 13, 14, 15 }
  uselistorder i64* @global_var_2.2539, { 1, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_2.2539 to i32), { 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 34, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2 }
  uselistorder label %dec_label_pc_265e8, { 1, 0 }
}

define i32 @function_26be9(i32 %arg1) local_unnamed_addr {
dec_label_pc_26be9:
  %v0_26be9 = call i32 @unknown_345ca()
  ret i32 %v0_26be9
}

define i32 @function_26bee() local_unnamed_addr {
dec_label_pc_26bee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26bf4() local_unnamed_addr {
dec_label_pc_26bf4:
  %eax.global-to-local = alloca i32, align 4
  %v0_26bf4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26bf4
}

define i32 @function_26c08(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c08:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26c16() local_unnamed_addr {
dec_label_pc_26c16:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_1()
  %v2_26c1a = load i8, i8* %tmp6, align 1
  %v9_26c1a = icmp eq i8 %v2_26c1a, 0
  br i1 %v9_26c1a, label %dec_label_pc_26c22, label %dec_label_pc_26c1f

dec_label_pc_26c1f:                               ; preds = %dec_label_pc_26c16
  br label %dec_label_pc_26c22

dec_label_pc_26c22:                               ; preds = %dec_label_pc_26c1f, %dec_label_pc_26c16
  ret i32 %tmp3

; uselistorder directives
  uselistorder i8 0, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 7, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 8, 143, 91, 92, 45, 52, 53, 46, 54, 55, 56, 57, 58, 26, 93, 27, 94, 152, 153, 154, 155, 156, 157, 158, 95, 96, 97, 98, 99, 100, 101, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 105, 106, 107, 28, 29, 30, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 118, 119, 175, 176, 31, 32, 33, 190, 191, 192, 193, 194, 187, 188, 189, 195, 196, 120, 121, 122, 34, 35, 36, 197, 198, 123, 124, 221, 222, 125, 126, 127, 128, 37, 38, 39, 40, 41, 129, 130, 131, 132, 42, 43, 44, 47, 48, 144, 145, 146, 147, 148, 149, 150, 151, 228, 229, 49, 50, 51, 230, 159, 170, 171, 172, 173, 59, 60, 61, 62, 63, 64, 65, 66, 67, 174, 68, 199, 69, 70, 224, 225, 226, 0, 71, 1, 2, 227, 72, 200, 201, 202, 203, 204, 205, 73, 74, 3, 75, 78, 76, 77, 79, 80, 81, 82, 83, 84, 206, 85, 207, 86, 87, 208, 209, 88, 210, 89, 231, 223, 211, 90, 212, 213, 214, 4, 215, 216, 217, 218, 219, 220, 5, 6 }
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 1, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 2, 224, 225, 226, 227, 228, 229, 230, 231, 232, 3, 4, 233, 234, 235, 5, 6, 236, 7, 237, 238, 239, 240, 241, 242, 8, 9, 243, 244, 245, 246, 247, 10, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 11, 258, 12, 259, 260, 13, 261, 262, 263, 264, 265, 14, 15, 16, 266, 267, 17, 268, 269, 270, 18, 19, 271, 20, 21, 272, 273, 274, 275, 276, 277, 278, 279, 22, 23, 280, 281, 282, 283, 284, 24, 285, 286, 287, 288, 25, 289, 290, 291, 26, 292, 293, 294, 295, 296, 297, 27, 298, 28, 299, 300, 301, 302, 303, 304, 305, 306, 29, 30, 307, 308, 309, 31, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 32, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 33, 340, 341, 342, 34, 35, 36, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 37, 38, 356, 39, 357, 40, 41, 358, 42, 43, 44 }
}

define i32 @function_26c40(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c40:
  %stack_var_152 = alloca i32, align 4
  %stack_var_216 = alloca i32, align 4
  %v2_26c44 = ptrtoint i32* %stack_var_216 to i32
  store i32 %v2_26c44, i32* @edx, align 4
  %v1_26c4e = call i32 @unknown_3ac30(i32 %v2_26c44)
  %v2_26c53 = ptrtoint i32* %stack_var_152 to i32
  %v1_26c5d = call i32 @unknown_367c0(i32 %v2_26c53)
  ret i32 %v1_26c5d
}

define i32 @function_26c6a() local_unnamed_addr {
dec_label_pc_26c6a:
  %v3_26c82 = load i32, i32* @eax, align 8
  ret i32 %v3_26c82
}

define i32 @function_26c8d() local_unnamed_addr {
dec_label_pc_26c8d:
  %ecx.global-to-local = alloca i32, align 4
  %v0_26c8d = load i32, i32* %ecx.global-to-local, align 4
  %v1_26c8d = add i32 %v0_26c8d, 605850054
  %v2_26c8d = inttoptr i32 %v1_26c8d to i32*
  %v3_26c8d = load i32, i32* %v2_26c8d, align 4
  %v4_26c8d = add i32 %v3_26c8d, -1
  store i32 %v4_26c8d, i32* %v2_26c8d, align 4
  %v1_26c95 = call i32 @unknown_389f0(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_26c95, i32* @eax, align 8
  %v1_26c9a = call i32 @function_26c08(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_26c9a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_389f0, { 1, 0 }
}

define i32 @function_26c9f(i8 %arg1) local_unnamed_addr {
dec_label_pc_26c9f:
  %eax.global-to-local = alloca i32, align 4
  %v0_26cb1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26cb1
}

define i32 @function_26cb5(i32* %arg1) local_unnamed_addr {
dec_label_pc_26cb5:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  %v1_26cbe = icmp eq i32* %arg1, null
  br i1 %v1_26cbe, label %bb, label %dec_label_pc_26cc6

bb:                                               ; preds = %dec_label_pc_26cb5
  %v2_26cc0 = call i32 @function_26c08(i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_26cc0, i32* @eax, align 8
  br label %dec_label_pc_26cc6

dec_label_pc_26cc6:                               ; preds = %bb, %dec_label_pc_26cb5
  %v0_26cc6 = phi i32 [ %v2_26cc0, %bb ], [ %tmp99, %dec_label_pc_26cb5 ]
  %v1_26cce = call i32 @function_26c08(i32 %v0_26cc6)
  ret i32 %v1_26cce

; uselistorder directives
  uselistorder i32* null, { 9, 2, 3, 10, 4, 0, 5, 6, 7, 8, 1, 11 }
}

define i32 @function_26cd3() local_unnamed_addr {
dec_label_pc_26cd3:
  %eax.global-to-local = alloca i32, align 4
  %v0_26cd3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26cd3
}

define i32 @function_26cda() local_unnamed_addr {
dec_label_pc_26cda:
  %stack_var_164 = alloca i32, align 4
  %v2_26cda = ptrtoint i32* %stack_var_164 to i32
  %v1_26ce4 = call i32 @unknown_36c80(i32 %v2_26cda)
  %v1_26cf3 = call i32 @unknown_398c0(i32 %v2_26cda)
  store i32 %v1_26cf3, i32* @eax, align 8
  %v0_26cf8 = load i32, i32* @edx, align 4
  %v10_26cf8 = icmp eq i32 %v0_26cf8, 1
  br i1 %v10_26cf8, label %bb, label %dec_label_pc_26cfd

bb:                                               ; preds = %dec_label_pc_26cda
  %v1_26cfb = call i32 @function_26d39()
  store i32 %v1_26cfb, i32* @eax, align 8
  %v0_26cfd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_26cfd

dec_label_pc_26cfd:                               ; preds = %bb, %dec_label_pc_26cda
  %v3_26d063 = phi i32 [ %v1_26cfb, %bb ], [ %v1_26cf3, %dec_label_pc_26cda ]
  %v0_26cfd = phi i32 [ %v0_26cfd.pre, %bb ], [ %v0_26cf8, %dec_label_pc_26cda ]
  %v10_26cfd = icmp eq i32 %v0_26cfd, ptrtoint (i1* @global_var_1.2399 to i32)
  %v1_26d00 = icmp eq i1 %v10_26cfd, false
  br i1 %v1_26d00, label %bb7, label %dec_label_pc_26d06

bb7:                                              ; preds = %dec_label_pc_26cfd
  %v2_26d00 = call i32 @function_26c16()
  br label %dec_label_pc_26d06

dec_label_pc_26d06:                               ; preds = %bb7, %dec_label_pc_26cfd
  %v3_26d06 = phi i32 [ %v2_26d00, %bb7 ], [ %v3_26d063, %dec_label_pc_26cfd ]
  ret i32 %v3_26d06

; uselistorder directives
  uselistorder i32 %v0_26cf8, { 1, 0 }
}

define i32 @function_26d13() local_unnamed_addr {
dec_label_pc_26d13:
  %v0_26d13 = call i32 @function_264d1()
  ret i32 %v0_26d13
}

define i32 @function_26d18() local_unnamed_addr {
dec_label_pc_26d18:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_164 = alloca i32, align 4
  %v2_26d18 = ptrtoint i32* %stack_var_164 to i32
  %v0_26d1f = load i32, i32* @eax, align 8
  %v0_26d23 = load i32, i32* %edx.global-to-local, align 4
  %v1_26d2a = call i32 @function_31840(i32 %v2_26d18)
  store i32 %v0_26d23, i32* %edx.global-to-local, align 4
  ret i32 %v0_26d1f
}

define i32 @function_26d39() local_unnamed_addr {
dec_label_pc_26d39:
  %v3_26d39 = load i32, i32* @eax, align 8
  ret i32 %v3_26d39
}

define i32 @function_26d65() local_unnamed_addr {
dec_label_pc_26d65:
  %eax.global-to-local = alloca i32, align 4
  %v0_26d65 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26d65
}

define i32 @function_26d73() local_unnamed_addr {
dec_label_pc_26d73:
  %v1_26d75 = call i32 @function_26c08(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_26d75

; uselistorder directives
  uselistorder i32 (i32)* @function_26c08, { 3, 2, 1, 0 }
  uselistorder i32* @1, { 5, 6, 7, 8, 1, 9, 10, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @1 to i32), { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 2, 60, 61, 1, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79 }
}

define i32 @function_26d86() local_unnamed_addr {
dec_label_pc_26d86:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_26d86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_26d86 = add i32 %v0_26d86, -1960565692
  %v2_26d86 = inttoptr i32 %v1_26d86 to i32*
  %v3_26d86 = load i32, i32* %v2_26d86, align 4
  %v4_26d86 = sub i32 %v3_26d86, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_26d86, i32* %v2_26d86, align 4
  %v0_26d8d = load i32, i32* %eax.global-to-local, align 8
  %v11_26d8d = and i32 %v0_26d8d, -224
  store i32 %v11_26d8d, i32* %eax.global-to-local, align 8
  ret i32 %v11_26d8d

; uselistorder directives
  uselistorder i32 %v11_26d8d, { 1, 0 }
  uselistorder i32 -224, { 0, 2, 1 }
}

define i32 @function_26d94() local_unnamed_addr {
dec_label_pc_26d94:
  %stack_var_188 = alloca i32, align 4
  %v2_26d96 = ptrtoint i32* %stack_var_188 to i32
  %v1_26da0 = call i32 @unknown_3c5b0(i32 %v2_26d96)
  ret i32 %v1_26da0
}

define i32 @function_26daa() local_unnamed_addr {
dec_label_pc_26daa:
  %eax.global-to-local = alloca i32, align 4
  %v0_26daa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26daa
}

define i32 @function_26db0() local_unnamed_addr {
dec_label_pc_26db0:
  %v0_26db0 = call i32 @function_26c16()
  ret i32 %v0_26db0

; uselistorder directives
  uselistorder i32 ()* @function_26c16, { 1, 0 }
}

define i32 @function_26db5() local_unnamed_addr {
dec_label_pc_26db5:
  %v3_26dcd = load i32, i32* @eax, align 8
  ret i32 %v3_26dcd
}

define i32 @_GLOBAL__sub_I_fDiscover() local_unnamed_addr {
dec_label_pc_26e30:
  ret i32 0
}

define i32 @function_26e79() local_unnamed_addr {
dec_label_pc_26e79:
  %eax.global-to-local = alloca i32, align 4
  %v0_26e79 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26e79
}

define i32 @function_26e83() local_unnamed_addr {
dec_label_pc_26e83:
  %eax.global-to-local = alloca i32, align 4
  %v0_26e83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26e83
}

define i32 @function_26ef0(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ef0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26f10(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f10:
  %eax.global-to-local = alloca i32, align 4
  %v2_26f10 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_26f10 = load i32, i32* @eax, align 8
  %v4_26f10 = trunc i32 %v3_26f10 to i8
  %v5_26f10 = add i8 %v4_26f10, %v2_26f10
  %v21_26f10 = inttoptr i32 %v3_26f10 to i8*
  store i8 %v5_26f10, i8* %v21_26f10, align 1
  %v0_26f12 = load i32, i32* @ebx, align 4
  %v3_26f12 = load i32, i32* @eax, align 8
  %v5_26f121 = mul i32 %v3_26f12, 256
  %v1_26f122 = add i32 %v5_26f121, %v0_26f12
  %v22_26f12 = and i32 %v1_26f122, 65280
  %v23_26f12 = and i32 %v0_26f12, -65281
  %v24_26f12 = or i32 %v22_26f12, %v23_26f12
  store i32 %v24_26f12, i32* @ebx, align 4
  %v1_26f14 = add i32 %v3_26f12, ptrtoint (i8** @global_var_a324.2561 to i32)
  %v12_26f14 = trunc i32 %v1_26f14 to i8
  store i32 %v1_26f14, i32* %eax.global-to-local, align 8
  %v1_26f19 = inttoptr i32 %v1_26f14 to i8*
  %v2_26f19 = load i8, i8* %v1_26f19, align 1
  %v5_26f19 = add i8 %v2_26f19, %v12_26f14
  store i8 %v5_26f19, i8* %v1_26f19, align 1
  %v0_26f1b = load i32, i32* %eax.global-to-local, align 8
  %v1_26f1b = inttoptr i32 %v0_26f1b to i8*
  %v2_26f1b = load i8, i8* %v1_26f1b, align 1
  %v4_26f1b = trunc i32 %v0_26f1b to i8
  %v5_26f1b = add i8 %v2_26f1b, %v4_26f1b
  store i8 %v5_26f1b, i8* %v1_26f1b, align 1
  store i32 0, i32* bitcast ([5 x i8]* @global_var_a328.2775 to i32*), align 4
  %v0_26f1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26f1d

; uselistorder directives
  uselistorder i32 %v3_26f12, { 1, 0 }
  uselistorder i32 %v0_26f12, { 1, 0 }
  uselistorder i32 -65281, { 21, 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23 }
}

define i32 @function_26fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fb0:
  %stack_var_60 = alloca i32, align 4
  store i32 0, i32* bitcast ([11 x i8]* @global_var_a204.2776 to i32*), align 4
  store i32 0, i32* bitcast ([9 x i8]* @global_var_a210.2777 to i32*), align 4
  store i32 ptrtoint ([15 x i8]* @global_var_a200.2778 to i32), i32* bitcast ([7 x i8]* @global_var_a208.2779 to i32*), align 4
  store i32 ptrtoint ([15 x i8]* @global_var_a200.2778 to i32), i32* bitcast ([3 x i8]* @global_var_a20c.2780 to i32*), align 4
  %v2_26fe2 = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_26fe2, i32* @ebx, align 4
  store i8* inttoptr (i32 1835627630 to i8*), i8** @global_var_a218.2782, align 4
  store i32 0, i32* bitcast ([26 x i8]* @global_var_a224.2783 to i32*), align 16
  store i32 0, i32* bitcast ([22 x i8]* @global_var_a228.2784 to i32*), align 16
  store i32 0, i32* bitcast ([18 x i8]* @global_var_a22c.2785 to i32*), align 16
  ret i32 %arg1
}

define i32 @function_27040(i32 %arg1) local_unnamed_addr {
dec_label_pc_2711f:
  %stack_var_36 = alloca i32, align 4
  %stack_var_6184 = alloca i32, align 4
  %stack_var_40 = alloca i32, align 4
  %v0_27048 = load i32, i32* @eax, align 8
  %v3_2704b = call i32 @unknown_42d70(i32 %v0_27048, i32 ptrtoint (i32* @global_var_40.2433 to i32))
  %v0_27055 = load i32, i32* @ebx, align 4
  store i32 622869095, i32* bitcast ([22 x i8]* @global_var_a228.2784 to i32*), align 16
  %v2_2705d = call i32 @unknown_397a0(i32 %v0_27055)
  %v2_27062 = ptrtoint i32* %stack_var_40 to i32
  store i32 0, i32* %stack_var_40, align 4
  store i32 0, i32* bitcast ([10 x i8]* @global_var_a234.2786 to i32*), align 4
  store i32 0, i32* bitcast ([6 x i8]* @global_var_a238.2787 to i32*), align 4
  store i32 0, i32* @global_var_a23c.2788, align 4
  %v2_270b0 = ptrtoint i32* %stack_var_6184 to i32
  %v2_270b6 = ptrtoint i32* %stack_var_36 to i32
  store i32 %v2_270b6, i32* @ebx, align 4
  store i32 %v2_27062, i32* bitcast ([10 x i8]* @global_var_a234.2786 to i32*), align 4
  store i32 %v2_27062, i32* bitcast ([6 x i8]* @global_var_a238.2787 to i32*), align 4
  store i32 %v2_270b0, i32* @global_var_a23c.2788, align 4
  %v4_270d9 = call i32 @unknown_45b00(i32 %v2_27062, i32 256, i32 %v2_270b6)
  store i32 1935867914, i32* bitcast ([6 x i8]* @global_var_a238.2787 to i32*), align 4
  %v3_270f3 = call i32 @unknown_3a810(i32 %v2_270b6, i32 0)
  store i32 1701995620, i32* @edx, align 4
  store i32 -676458737, i32* @eax, align 8
  %v2_27119 = call i32 @function_275f4()
  store i32 0, i32* @global_var_a1e0.2791, align 4
  store i32 0, i32* @global_var_a220.2543, align 4
  store i32 0, i32* bitcast ([14 x i8]* @global_var_a230.2542 to i32*), align 4
  ret i32 1701995620

; uselistorder directives
  uselistorder i32 256, { 75, 63, 0, 1, 64, 65, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 66, 15, 14, 16, 67, 17, 68, 69, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 76, 35, 36, 37, 38, 39, 40, 41, 42, 70, 43, 44, 71, 72, 45, 46, 47, 48, 50, 49, 51, 52, 73, 74, 77, 78, 79, 53, 56, 54, 55, 57, 58, 59, 60, 61, 62 }
  uselistorder i32* @ebx, { 367, 368, 340, 342, 343, 333, 202, 201, 203, 97, 5, 204, 205, 463, 464, 465, 206, 207, 208, 209, 210, 211, 6, 7, 8, 212, 213, 9, 214, 215, 216, 364, 87, 88, 467, 468, 469, 470, 471, 472, 473, 222, 62, 217, 63, 218, 102, 10, 11, 219, 220, 221, 223, 229, 230, 64, 224, 65, 225, 86, 12, 13, 226, 227, 228, 231, 483, 484, 66, 232, 67, 233, 94, 95, 14, 15, 234, 480, 53, 506, 507, 508, 52, 509, 16, 54, 490, 492, 493, 491, 68, 510, 511, 512, 69, 513, 514, 17, 235, 236, 485, 486, 488, 494, 495, 496, 498, 18, 527, 520, 523, 538, 539, 540, 541, 542, 543, 544, 545, 546, 536, 537, 547, 548, 549, 531, 532, 104, 70, 71, 72, 73, 19, 74, 610, 611, 612, 613, 614, 615, 616, 617, 618, 237, 238, 239, 240, 241, 242, 20, 243, 244, 21, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 261, 262, 258, 259, 260, 252, 253, 266, 263, 264, 265, 267, 268, 75, 76, 77, 78, 269, 270, 271, 272, 273, 274, 275, 0, 276, 283, 284, 22, 285, 277, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 1, 294, 55, 295, 296, 297, 298, 299, 300, 301, 2, 302, 303, 79, 80, 81, 304, 307, 305, 306, 308, 82, 83, 84, 309, 312, 310, 311, 578, 579, 580, 313, 314, 315, 316, 317, 318, 3, 319, 583, 584, 585, 586, 322, 320, 321, 325, 323, 324, 590, 595, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 85, 554, 555, 556, 619, 23, 620, 621, 622, 623, 24, 624, 625, 25, 626, 627, 628, 629, 630, 26, 347, 348, 349, 27, 350, 28, 351, 352, 353, 354, 355, 29, 356, 357, 661, 30, 662, 358, 359, 360, 31, 361, 56, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 57, 375, 58, 59, 376, 32, 377, 378, 379, 380, 385, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 33, 395, 396, 397, 400, 401, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 34, 413, 414, 415, 416, 35, 417, 418, 419, 420, 421, 422, 423, 427, 428, 424, 425, 36, 426, 429, 430, 431, 432, 433, 434, 89, 436, 437, 438, 435, 441, 442, 443, 37, 444, 445, 446, 439, 440, 447, 631, 632, 633, 60, 634, 38, 635, 4, 636, 637, 448, 39, 449, 655, 656, 657, 90, 91, 92, 93, 40, 450, 451, 41, 452, 658, 659, 660, 453, 454, 455, 456, 457, 458, 459, 460, 461, 96, 98, 99, 462, 100, 466, 42, 474, 475, 476, 477, 478, 101, 103, 479, 481, 482, 487, 489, 497, 499, 500, 501, 502, 503, 504, 505, 515, 516, 517, 518, 519, 521, 522, 524, 525, 526, 528, 529, 530, 533, 534, 535, 105, 106, 107, 108, 109, 110, 111, 43, 550, 551, 552, 553, 44, 557, 558, 559, 112, 647, 650, 651, 652, 653, 654, 648, 649, 113, 114, 115, 120, 116, 117, 118, 119, 45, 121, 560, 46, 561, 562, 563, 566, 564, 565, 567, 568, 569, 570, 571, 122, 123, 124, 125, 126, 129, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 48, 150, 151, 47, 152, 153, 61, 154, 155, 156, 663, 157, 664, 665, 666, 667, 668, 158, 159, 160, 165, 166, 161, 163, 162, 49, 164, 167, 168, 169, 170, 171, 172, 173, 174, 572, 573, 574, 175, 575, 577, 576, 176, 177, 581, 582, 178, 587, 179, 588, 589, 669, 180, 591, 592, 593, 594, 638, 639, 640, 641, 642, 643, 644, 645, 646, 181, 182, 189, 183, 184, 185, 186, 187, 188, 190, 50, 191, 192, 193, 194, 195, 196, 197, 596, 597, 598, 600, 599, 602, 601, 198, 603, 604, 199, 605, 606, 200, 607, 608, 609, 51 }
  uselistorder i32 ptrtoint (i32* @global_var_40.2433 to i32), { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
}

define i32 @function_27120(i32 %arg1) local_unnamed_addr {
dec_label_pc_27120:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27150(i32 %arg1) local_unnamed_addr {
dec_label_pc_27150:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27220(i32 %arg1) local_unnamed_addr {
dec_label_pc_27220:
  %v2_27222 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27222 = load i32, i32* @eax, align 8
  %v4_27222 = trunc i32 %v3_27222 to i8
  %v5_27222 = add i8 %v4_27222, %v2_27222
  %v21_27222 = inttoptr i32 %v3_27222 to i8*
  store i8 %v5_27222, i8* %v21_27222, align 1
  %v2_27224 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27224 = load i32, i32* @eax, align 8
  %v4_27224 = trunc i32 %v3_27224 to i8
  %v5_27224 = add i8 %v4_27224, %v2_27224
  %v21_27224 = inttoptr i32 %v3_27224 to i8*
  store i8 %v5_27224, i8* %v21_27224, align 1
  %v2_27226 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27226 = load i32, i32* @eax, align 8
  %v4_27226 = trunc i32 %v3_27226 to i8
  %v5_27226 = add i8 %v4_27226, %v2_27226
  %v21_27226 = inttoptr i32 %v3_27226 to i8*
  store i8 %v5_27226, i8* %v21_27226, align 1
  store i32 0, i32* bitcast ([7 x i8]* @global_var_a0e4.2792 to i32*), align 4
  store i32 0, i32* bitcast ([3 x i8]* @global_var_a0e8.2488 to i32*), align 4
  store i32 0, i32* bitcast ([21 x i8]* @global_var_a0ec.2505 to i32*), align 16
  store i32 0, i32* bitcast ([17 x i8]* @global_var_a0f0.2490 to i32*), align 16
  store i32 0, i32* bitcast ([13 x i8]* @global_var_a0f4.2506 to i32*), align 4
  store i32 0, i32* bitcast ([9 x i8]* @global_var_a0f8.2492 to i32*), align 4
  store i32 0, i32* bitcast ([5 x i8]* @global_var_a0fc.2494 to i32*), align 4
  store i32 0, i32* @global_var_a100.2493, align 4
  store i32 0, i32* bitcast ([13 x i8]* @global_var_a104.2495 to i32*), align 4
  %v3_27291 = call i32 @unknown_3d310(i32 ptrtoint ([11 x i8]* @global_var_a0e0.2507 to i32), i32 0)
  ret i32 %v3_27291

; uselistorder directives
  uselistorder [17 x i8]* @global_var_a0f0.2490, { 1, 0 }
}

define i32 @function_27271() local_unnamed_addr {
dec_label_pc_27271:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_272c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_272c0:
  %v0_272c0 = load i32, i32* @eax, align 8
  %v11_272c0 = and i32 %v0_272c0, -248
  ret i32 %v11_272c0
}

define i32 @function_272e2() local_unnamed_addr {
dec_label_pc_272e2:
  %v2_272e2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_272e2 = load i32, i32* @eax, align 8
  %v4_272e2 = trunc i32 %v3_272e2 to i8
  %v5_272e2 = add i8 %v4_272e2, %v2_272e2
  %v21_272e2 = inttoptr i32 %v3_272e2 to i8*
  store i8 %v5_272e2, i8* %v21_272e2, align 1
  store i32 0, i32* bitcast ([14 x i8]* @global_var_a048.2793 to i32*), align 4
  store i32 0, i32* @global_var_a054.2794, align 4
  store i32 ptrtoint (i32* @global_var_a044.2795 to i32), i32* bitcast ([10 x i8]* @global_var_a04c.2796 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_a044.2795 to i32), i32* bitcast ([6 x i8]* @global_var_a050.2797 to i32*), align 4
  store i32 0, i32* @global_var_a05c.2798, align 4
  store i32 0, i32* bitcast ([11 x i8]* @global_var_a060.2799 to i32*), align 4
  store i32 0, i32* bitcast ([22 x i8]* @global_var_a06c.2800 to i32*), align 16
  store i32 ptrtoint (i32* @global_var_a05c.2798 to i32), i32* bitcast ([7 x i8]* @global_var_a064.2801 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_a05c.2798 to i32), i32* bitcast ([3 x i8]* @global_var_a068.2802 to i32*), align 4
  %v0_27334 = load i32, i32* @eax, align 8
  ret i32 %v0_27334
}

define i32 @function_272f9() local_unnamed_addr {
dec_label_pc_272f9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27340(i32 %arg1) local_unnamed_addr {
dec_label_pc_27340:
  %v0_27340 = load i1, i1* @of, align 1
  br i1 %v0_27340, label %bb, label %dec_label_pc_27340.dec_label_pc_27342_crit_edge

dec_label_pc_27340.dec_label_pc_27342_crit_edge:  ; preds = %dec_label_pc_27340
  %v2_27342.pre = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27342.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27342

bb:                                               ; preds = %dec_label_pc_27340
  %v1_27340 = call i32 @function_272e2()
  store i32 %v1_27340, i32* @eax, align 8
  %tmp3 = trunc i32 %v1_27340 to i8
  br label %dec_label_pc_27342

dec_label_pc_27342:                               ; preds = %dec_label_pc_27340.dec_label_pc_27342_crit_edge, %bb
  %v20_27342 = phi i32 [ %v3_27342.pre, %dec_label_pc_27340.dec_label_pc_27342_crit_edge ], [ %v1_27340, %bb ]
  %v2_27342 = phi i8 [ %v2_27342.pre, %dec_label_pc_27340.dec_label_pc_27342_crit_edge ], [ %tmp3, %bb ]
  %v4_27342 = trunc i32 %v20_27342 to i8
  %v5_27342 = add i8 %v4_27342, %v2_27342
  %v21_27342 = inttoptr i32 %v20_27342 to i8*
  store i8 %v5_27342, i8* %v21_27342, align 1
  %v0_27344 = load i32, i32* @eax, align 8
  ret i32 %v0_27344

; uselistorder directives
  uselistorder i1* @of, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder label %dec_label_pc_27342, { 1, 0 }
}

define i32 @function_27381() local_unnamed_addr {
dec_label_pc_27381:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_273c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_273c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_273d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_273d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27460(i32 %arg1) local_unnamed_addr {
dec_label_pc_27460:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27560(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27560:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_275e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_275e1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_275e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_275e1 = add i32 %v0_275e1, 1699488836
  %v2_275e1 = inttoptr i32 %v1_275e1 to i32*
  %v3_275e1 = load i32, i32* %v2_275e1, align 4
  %v4_275e1 = add i32 %v3_275e1, -1
  store i32 %v4_275e1, i32* %v2_275e1, align 4
  %v0_275e7 = load i32, i32* %eax.global-to-local, align 8
  %v1_275e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_275e7 = xor i32 %v1_275e7, %v0_275e7
  %v3_275e7 = icmp eq i32 %v2_275e7, 0
  store i32 %v2_275e7, i32* @eax, align 8
  %v1_275ed = icmp eq i1 %v3_275e7, false
  br i1 %v1_275ed, label %bb, label %dec_label_pc_275ef

bb:                                               ; preds = %dec_label_pc_275e1
  %v2_275ed = call i32 @function_2765f()
  store i32 %v2_275ed, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_275ef

dec_label_pc_275ef:                               ; preds = %bb, %dec_label_pc_275e1
  %v0_275f3 = phi i32 [ %v2_275ed, %bb ], [ %v2_275e7, %dec_label_pc_275e1 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_275f3

; uselistorder directives
  uselistorder i32 20, { 12, 13, 11, 14, 118, 119, 117, 120, 0, 45, 1, 74, 2, 75, 135, 136, 134, 137, 77, 78, 76, 79, 3, 138, 80, 82, 81, 15, 16, 17, 18, 19, 20, 21, 144, 83, 46, 47, 22, 23, 24, 147, 84, 25, 145, 151, 152, 146, 26, 27, 28, 85, 86, 87, 155, 156, 4, 88, 89, 90, 168, 169, 170, 91, 92, 93, 94, 95, 96, 97, 5, 29, 30, 98, 99, 100, 31, 101, 102, 103, 104, 105, 106, 107, 32, 108, 109, 110, 111, 112, 113, 114, 8, 33, 34, 35, 36, 37, 115, 7, 161, 162, 163, 164, 116, 38, 39, 40, 41, 42, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 43, 44, 133, 6, 139, 140, 141, 142, 48, 49, 50, 51, 143, 148, 149, 150, 153, 154, 157, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 158, 159, 160, 67, 69, 68, 70, 9, 71, 72, 73, 165, 166, 167, 171, 10 }
  uselistorder i32* inttoptr (i32 20 to i32*), {}
  uselistorder i32 -1, { 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 60, 1, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 2, 71, 72, 73, 157, 3, 4, 74, 75, 76, 5, 6, 8, 7, 9, 10, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 11, 93, 94, 12, 95, 96, 97, 98, 13, 26, 27, 14, 99, 100, 25, 28, 15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 160, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 16, 17, 129, 130, 18, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 19, 20, 21, 22, 158, 23, 24, 148, 159, 149, 150, 151, 152, 153, 154, 155, 161, 156 }
}

define i32 @function_275f4() local_unnamed_addr {
dec_label_pc_275f4:
  %v0_275f4 = load i32, i32* @edx, align 4
  %v1_275f4 = add i32 %v0_275f4, 32
  store i32 %v1_275f4, i32* bitcast ([9 x i8]* @global_var_a1d8.2789 to i32*), align 4
  %v0_275fd = load i32, i32* @eax, align 8
  ret i32 %v0_275fd

; uselistorder directives
  uselistorder i32* @edx, { 136, 137, 1, 21, 156, 22, 23, 24, 25, 26, 108, 109, 185, 2, 107, 110, 111, 112, 35, 36, 3, 37, 60, 4, 190, 61, 62, 63, 64, 65, 66, 67, 68, 69, 142, 70, 18, 71, 19, 191, 38, 39, 40, 41, 5, 192, 193, 194, 195, 196, 27, 28, 0, 72, 73, 74, 75, 76, 77, 86, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 93, 89, 90, 91, 92, 94, 95, 96, 97, 6, 29, 30, 98, 99, 31, 32, 100, 101, 102, 206, 207, 103, 104, 105, 106, 211, 212, 213, 214, 113, 219, 220, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 123, 128, 124, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 144, 145, 146, 151, 152, 153, 154, 147, 148, 149, 150, 155, 157, 7, 158, 162, 159, 160, 161, 165, 166, 167, 168, 163, 164, 169, 170, 177, 171, 8, 172, 173, 9, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 10, 187, 188, 189, 11, 221, 33, 34, 224, 197, 12, 13, 222, 14, 223, 198, 199, 200, 201, 202, 20, 42, 43, 203, 225, 226, 47, 15, 44, 45, 46, 48, 49, 204, 205, 210, 208, 209, 50, 215, 16, 216, 51, 54, 55, 56, 17, 52, 53, 57, 58, 59, 217, 218 }
}

define i32 @function_27602(i32 %arg1) local_unnamed_addr {
dec_label_pc_27602:
  %stack_var_75 = alloca i32, align 4
  %v2_27602 = ptrtoint i32* %stack_var_75 to i32
  %v1_2760f = load i32, i32* @eax, align 8
  %v2_2760f = sub i32 32, %v1_2760f
  %v0_27615 = load i32, i32* @ecx, align 4
  %v5_27620 = call i32 @unknown_3bd80(i32 ptrtoint ([13 x i8]* @global_var_a1d4.2790 to i32), i32 %v0_27615, i32 %v2_2760f, i32 %v2_27602)
  ret i32 %v5_27620

; uselistorder directives
  uselistorder i32* @ecx, { 112, 13, 12, 14, 15, 16, 17, 18, 96, 97, 98, 99, 100, 101, 102, 103, 104, 30, 23, 24, 25, 31, 129, 51, 52, 53, 54, 55, 56, 57, 131, 132, 28, 130, 133, 135, 136, 19, 20, 58, 134, 137, 138, 139, 59, 60, 61, 62, 66, 1, 67, 72, 68, 69, 70, 10, 71, 63, 64, 65, 2, 3, 73, 74, 0, 75, 76, 77, 78, 79, 80, 81, 21, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 22, 94, 143, 144, 145, 146, 150, 95, 105, 106, 107, 151, 152, 153, 154, 4, 155, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 119, 120, 127, 125, 126, 128, 26, 27, 29, 32, 5, 33, 140, 34, 35, 41, 36, 37, 38, 39, 40, 141, 6, 7, 142, 148, 147, 42, 43, 8, 46, 47, 44, 45, 48, 49, 50, 11, 9, 149 }
  uselistorder i32 32, { 7, 51, 8, 9, 46, 47, 23, 62, 31, 10, 11, 32, 33, 34, 35, 36, 37, 38, 39, 12, 40, 13, 14, 15, 41, 16, 42, 43, 44, 17, 45, 1, 2, 63, 64, 18, 48, 19, 49, 20, 21, 50, 22, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 6, 3, 24, 4, 25, 5, 27, 26, 28, 29, 30, 65, 66, 67 }
}

define i32 @function_2762a() local_unnamed_addr {
dec_label_pc_2762a:
  store i8 ptrtoint (i1* @global_var_1.2399 to i8), i8* bitcast (i32* @global_var_315b8.2803 to i8*), align 4
  %v1_27638 = call i32 @unknown_38c30(i32 ptrtoint (i32* @global_var_315b8.2803 to i32))
  ret i32 %v1_27638

; uselistorder directives
  uselistorder i8 ptrtoint (i1* @global_var_1.2399 to i8), { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_27630(i32 %arg1) local_unnamed_addr {
dec_label_pc_27630:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27640(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27640:
  %v0_27640 = load i32, i32* @eax, align 8
  %v11_27640 = and i32 %v0_27640, -248
  ret i32 %v11_27640
}

define i32 @function_2765a() local_unnamed_addr {
dec_label_pc_2765a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2765a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2765a
}

define i32 @function_2765f() local_unnamed_addr {
dec_label_pc_2765f:
  %v2_2766d = call i32 @unknown_3a870(i32 ptrtoint ([10 x i8]* @global_var_a234.2786 to i32))
  %v2_27679 = call i32 @unknown_39800(i32 ptrtoint ([26 x i8]* @global_var_a224.2783 to i32))
  %v2_27685 = call i32 @unknown_397a0(i32 ptrtoint ([5 x i8]* @global_var_a214.2804 to i32))
  %v4_2769a = call i32 @unknown_3a950(i32 ptrtoint ([19 x i8]* @global_var_a1fc.2805 to i32), i32 544425031)
  ret i32 %v4_2769a
}

define i32 @function_276a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_276a0:
  %v0_276af = call i32 @unknown_3a8f0()
  ret i32 1701995620
}

define i32 @function_276c5() local_unnamed_addr {
dec_label_pc_276c5:
  %v2_276cc = call i32 @unknown_355f0(i32 ptrtoint ([5 x i8]* @global_var_a180.2806 to i32))
  ret i32 %v2_276cc
}

define i32 @function_276ee() local_unnamed_addr {
dec_label_pc_276ee:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_276ee = load i32, i32* %ebx.global-to-local, align 4
  %v1_276ee = add i32 %v0_276ee, -1961089980
  %v2_276ee = inttoptr i32 %v1_276ee to i32*
  %v3_276ee = load i32, i32* %v2_276ee, align 4
  %v4_276ee = sub i32 %v3_276ee, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_276ee, i32* %v2_276ee, align 4
  %v0_276f5 = load i32, i32* %eax.global-to-local, align 8
  %v11_276f5 = and i32 %v0_276f5, -212
  store i32 %v11_276f5, i32* %eax.global-to-local, align 8
  %v0_276f7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_276fe = load i32, i32* %edx.global-to-local, align 4
  %v2_27702 = call i32 @unknown_3a810(i32 %v0_276f7, i32 %v0_276fe)
  store i32 %v11_276f5, i32* %eax.global-to-local, align 8
  store i32 %v11_276f5, i32* %ebx.global-to-local, align 4
  ret i32 %v11_276f5

; uselistorder directives
  uselistorder i32 %v11_276f5, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3a810, { 1, 0 }
}

define i32 @function_27712() local_unnamed_addr {
dec_label_pc_27712:
  %eax.global-to-local = alloca i32, align 4
  %v0_27712 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27712
}

define i32 @function_27719() local_unnamed_addr {
dec_label_pc_27719:
  %eax.global-to-local = alloca i32, align 4
  %v0_2771d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2771d
}

define i32 @function_27734(i32 %arg1) local_unnamed_addr {
dec_label_pc_27734:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_27734 = load i32, i32* %ebx.global-to-local, align 4
  %v1_27734 = add i32 %v0_27734, -1994644412
  %v2_27734 = inttoptr i32 %v1_27734 to i32*
  %v3_27734 = load i32, i32* %v2_27734, align 4
  %v4_27734 = sub i32 %v3_27734, ptrtoint (i1* @global_var_1.2399 to i32)
  store i32 %v4_27734, i32* %v2_27734, align 4
  %v0_2773b = load i32, i32* %eax.global-to-local, align 8
  %v11_2773b = and i32 %v0_2773b, -228
  store i32 %v11_2773b, i32* %eax.global-to-local, align 8
  %v0_2773d = load i32, i32* %ebx.global-to-local, align 4
  %v1_27740 = call i32 @unknown_397a0(i32 %v0_2773d)
  store i32 %arg1, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_397a0, { 2, 1, 0 }
  uselistorder i1 false, { 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 815, 592, 593, 594, 595, 596, 181, 437, 327, 328, 307, 329, 306, 226, 330, 331, 332, 227, 438, 439, 440, 441, 442, 443, 688, 689, 690, 691, 687, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 228, 693, 694, 695, 696, 697, 698, 699, 190, 193, 462, 457, 456, 458, 459, 460, 461, 229, 230, 231, 469, 470, 471, 472, 473, 474, 475, 191, 194, 476, 464, 463, 465, 466, 467, 468, 232, 233, 234, 235, 236, 169, 237, 171, 238, 170, 239, 240, 708, 709, 710, 711, 712, 713, 714, 192, 195, 715, 478, 477, 703, 479, 705, 241, 242, 243, 172, 342, 174, 343, 173, 244, 245, 246, 724, 722, 200, 725, 721, 727, 726, 480, 481, 482, 483, 247, 248, 484, 0, 485, 486, 487, 488, 489, 490, 491, 492, 249, 250, 251, 252, 253, 728, 729, 730, 176, 731, 175, 732, 733, 723, 254, 255, 256, 736, 737, 738, 177, 493, 178, 494, 734, 735, 1, 2, 739, 740, 495, 496, 497, 741, 742, 743, 179, 744, 805, 498, 349, 499, 3, 500, 501, 4, 502, 503, 504, 5, 505, 506, 507, 6, 508, 509, 7, 510, 511, 512, 8, 513, 9, 514, 515, 516, 517, 518, 519, 520, 521, 522, 10, 523, 11, 524, 525, 526, 527, 528, 529, 257, 258, 259, 260, 530, 531, 532, 533, 534, 535, 261, 262, 263, 264, 536, 537, 538, 539, 540, 265, 266, 267, 541, 542, 543, 544, 545, 268, 269, 546, 547, 270, 271, 272, 273, 548, 549, 550, 551, 553, 552, 554, 555, 274, 275, 556, 558, 557, 559, 560, 276, 277, 278, 561, 562, 563, 564, 565, 566, 567, 279, 280, 568, 569, 281, 570, 571, 282, 572, 573, 574, 575, 576, 819, 778, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 577, 578, 295, 296, 297, 579, 580, 581, 298, 299, 582, 300, 301, 302, 755, 12, 756, 757, 13, 782, 14, 583, 196, 584, 585, 15, 586, 197, 587, 588, 589, 590, 16, 785, 786, 17, 18, 303, 19, 591, 20, 21, 304, 305, 22, 23, 24, 25, 308, 309, 26, 597, 598, 310, 27, 599, 600, 601, 602, 311, 28, 603, 604, 29, 605, 606, 30, 607, 31, 608, 609, 610, 611, 612, 613, 312, 32, 806, 807, 313, 314, 33, 614, 615, 315, 316, 616, 617, 618, 619, 620, 34, 621, 823, 820, 821, 822, 824, 35, 825, 826, 36, 827, 828, 829, 830, 622, 623, 37, 624, 625, 626, 627, 628, 629, 630, 631, 632, 38, 633, 634, 635, 39, 636, 40, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 41, 317, 649, 650, 651, 652, 653, 654, 42, 655, 656, 657, 661, 662, 663, 201, 664, 658, 659, 660, 665, 666, 43, 667, 668, 669, 318, 319, 320, 672, 673, 670, 671, 674, 675, 808, 44, 809, 676, 677, 817, 321, 322, 323, 678, 679, 680, 681, 682, 45, 46, 818, 324, 325, 326, 683, 684, 685, 686, 333, 334, 335, 692, 336, 337, 47, 700, 48, 338, 339, 49, 340, 341, 50, 344, 345, 346, 347, 701, 51, 702, 348, 350, 351, 704, 52, 706, 53, 707, 716, 54, 717, 55, 718, 719, 56, 57, 720, 58, 59, 60, 61, 62, 63, 64, 352, 65, 353, 66, 67, 68, 69, 70, 71, 72, 73, 354, 74, 745, 355, 356, 357, 358, 359, 75, 360, 361, 362, 746, 747, 748, 749, 750, 76, 77, 78, 363, 364, 79, 80, 81, 82, 83, 84, 85, 751, 752, 86, 88, 87, 753, 89, 758, 759, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 754, 149, 150, 151, 152, 153, 154, 155, 156, 813, 365, 814, 180, 812, 366, 367, 816, 368, 369, 760, 761, 762, 763, 183, 184, 764, 185, 765, 766, 202, 767, 768, 370, 157, 371, 372, 373, 375, 374, 376, 377, 199, 378, 379, 380, 198, 381, 203, 382, 383, 204, 384, 385, 386, 205, 206, 207, 387, 388, 389, 390, 770, 208, 769, 391, 392, 393, 394, 395, 396, 771, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 186, 187, 209, 210, 405, 772, 773, 774, 409, 775, 410, 776, 411, 412, 211, 413, 414, 415, 158, 416, 777, 417, 159, 418, 781, 779, 780, 212, 182, 832, 833, 213, 834, 214, 831, 160, 161, 783, 784, 162, 810, 811, 163, 787, 788, 419, 420, 421, 422, 188, 423, 189, 424, 789, 790, 791, 792, 425, 426, 164, 165, 427, 166, 428, 429, 430, 431, 432, 793, 167, 794, 795, 796, 433, 797, 798, 434, 435, 799, 800, 168, 801, 436, 802, 803, 804, 215, 835, 836, 837, 838 }
  uselistorder i1* @global_var_1.2399, { 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i1* @global_var_1.2399 to i32), { 295, 294, 293, 0, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 1, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 2, 3, 14, 193, 13, 192, 191, 190, 189, 188, 187, 186, 4, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 15, 156, 155, 154, 153, 152, 5, 6, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 16, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 8, 18, 17, 85, 84, 83, 82, 81, 9, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 10, 52, 19, 51, 50, 20, 49, 48, 47, 46, 45, 44, 7, 43, 11, 42, 12, 21, 41, 22, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23 }
  uselistorder i32 -1994644412, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_27750() local_unnamed_addr {
dec_label_pc_27750:
  %eax.global-to-local = alloca i32, align 4
  %v0_27750 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27750
}

define i32 @function_27752() local_unnamed_addr {
dec_label_pc_27752:
  %eax.global-to-local = alloca i32, align 4
  %v0_27752 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27752

; uselistorder directives
  uselistorder i32 1, { 1039, 1040, 398, 399, 1041, 1042, 1044, 1043, 1045, 1046, 2050, 400, 401, 2053, 2052, 2051, 2054, 806, 1047, 1048, 1049, 2055, 1050, 1051, 1052, 2056, 1053, 0, 2057, 1054, 23, 1055, 2059, 2058, 1056, 2060, 24, 26, 25, 1057, 31, 28, 30, 27, 29, 1058, 1059, 32, 33, 1, 2061, 34, 2062, 1060, 2063, 1061, 2064, 1062, 2, 2066, 2065, 35, 1067, 1066, 1064, 1065, 2354, 1063, 2067, 2355, 2356, 2357, 2070, 2069, 2068, 43, 37, 40, 36, 41, 39, 38, 42, 1068, 1069, 1070, 3, 2071, 2072, 44, 1071, 2073, 4, 5, 2074, 1072, 2075, 1073, 1908, 1909, 2408, 1907, 2076, 2409, 2079, 2078, 2077, 52, 47, 51, 45, 50, 46, 48, 49, 2420, 6, 2080, 1074, 2081, 2082, 2083, 852, 850, 851, 1075, 1076, 1078, 1077, 2085, 2084, 1079, 1080, 1083, 1081, 1082, 53, 54, 1084, 1085, 402, 1086, 1087, 2086, 2087, 1088, 1090, 1089, 1091, 2088, 1452, 2378, 2089, 2373, 2374, 2090, 2091, 2379, 618, 2095, 2094, 2093, 2092, 1092, 2096, 55, 2097, 1093, 1096, 1095, 1094, 1097, 2099, 2098, 1453, 619, 620, 1098, 1099, 1100, 2100, 1101, 2358, 2359, 2101, 1102, 1863, 2398, 56, 58, 57, 1864, 2399, 1103, 2102, 1104, 1105, 1106, 2103, 1107, 2105, 2104, 1865, 2400, 59, 61, 60, 1866, 2401, 1108, 2106, 62, 1109, 816, 817, 2413, 2414, 2108, 2107, 64, 68, 63, 65, 66, 67, 1110, 782, 1867, 1869, 1868, 2402, 2403, 2110, 2109, 69, 73, 72, 70, 71, 74, 2404, 1871, 1870, 2111, 75, 1111, 1114, 1115, 1113, 1112, 1116, 2405, 77, 76, 78, 853, 1117, 1118, 1119, 1120, 1121, 1122, 2112, 1911, 604, 404, 403, 1123, 405, 1915, 2114, 2113, 1928, 1927, 1124, 1125, 1930, 1929, 2116, 2115, 79, 80, 7, 1874, 2117, 1126, 2118, 1873, 1872, 406, 407, 408, 409, 1127, 1128, 1129, 1130, 1131, 1132, 2120, 2119, 1134, 1135, 1133, 1136, 411, 410, 1137, 412, 2122, 2121, 1878, 1877, 1138, 1139, 1880, 1879, 8, 2124, 2123, 1882, 1881, 1883, 1884, 2125, 1140, 2126, 1876, 1875, 413, 414, 415, 416, 1141, 1142, 2128, 2127, 1145, 1146, 1144, 1143, 1147, 417, 418, 1148, 1149, 2360, 420, 421, 419, 422, 1151, 1150, 423, 424, 425, 1153, 1158, 1152, 1156, 1155, 1154, 1157, 1159, 1160, 2361, 81, 83, 82, 84, 1161, 426, 2130, 2129, 1962, 1961, 1162, 1163, 1964, 1963, 9, 2132, 2131, 86, 85, 87, 88, 2133, 1164, 2134, 1960, 1959, 827, 1165, 1166, 2136, 2135, 1169, 1170, 1168, 1167, 1171, 427, 428, 854, 1172, 1173, 2362, 430, 431, 429, 432, 652, 433, 434, 435, 657, 653, 654, 655, 656, 1174, 1175, 1176, 1177, 2363, 89, 91, 90, 92, 1178, 1179, 1180, 1181, 2138, 2137, 436, 437, 1182, 1183, 2139, 1184, 2140, 1889, 1888, 438, 439, 440, 441, 1185, 2142, 2141, 855, 93, 95, 94, 856, 858, 857, 859, 860, 862, 861, 443, 442, 445, 444, 446, 2143, 828, 1186, 1187, 1188, 1189, 1190, 447, 448, 2144, 97, 96, 98, 99, 829, 2146, 2145, 1191, 836, 834, 835, 831, 832, 830, 2415, 833, 1192, 1193, 2364, 100, 102, 101, 103, 1194, 449, 450, 2147, 104, 106, 105, 107, 2148, 785, 784, 783, 108, 1195, 1196, 837, 838, 1197, 2150, 2149, 949, 948, 953, 954, 956, 955, 1198, 840, 1965, 845, 841, 839, 1199, 110, 109, 111, 1200, 1202, 1201, 1203, 950, 952, 951, 1204, 1205, 2152, 2151, 112, 113, 2406, 2407, 2153, 117, 114, 118, 115, 116, 119, 121, 120, 2155, 2154, 122, 124, 123, 2157, 2156, 125, 127, 126, 128, 130, 129, 1206, 2159, 2158, 1969, 1207, 2161, 2160, 1970, 2006, 2008, 2007, 2009, 2010, 2012, 2011, 2163, 2162, 2013, 957, 959, 958, 2014, 2015, 2017, 2016, 1208, 2164, 1211, 1210, 1209, 1212, 1213, 1214, 1215, 453, 452, 451, 1216, 1217, 2165, 2166, 1218, 1219, 1220, 1221, 455, 454, 1222, 2167, 456, 1224, 1225, 1223, 1226, 1228, 1227, 1229, 1230, 131, 132, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1239, 1242, 1240, 1243, 459, 458, 457, 460, 1244, 134, 133, 135, 1245, 1247, 1246, 1248, 1249, 1250, 1251, 1252, 1254, 1253, 2168, 789, 1890, 787, 786, 788, 2169, 2022, 2023, 2171, 2170, 1893, 1891, 1892, 2172, 137, 136, 2175, 2174, 2173, 793, 790, 792, 791, 794, 2176, 798, 797, 796, 795, 1255, 1259, 1260, 1258, 1257, 1256, 10, 11, 1261, 1262, 468, 462, 465, 461, 466, 464, 463, 467, 1897, 799, 138, 1263, 469, 470, 471, 1264, 472, 475, 476, 474, 473, 477, 478, 12, 13, 1898, 800, 139, 801, 1265, 1266, 2177, 1267, 1268, 1269, 480, 479, 481, 482, 2178, 2179, 1270, 1271, 483, 484, 2180, 1899, 1273, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 141, 140, 142, 143, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 486, 489, 485, 490, 488, 487, 491, 1291, 144, 14, 15, 1900, 802, 145, 2182, 2181, 1292, 1293, 1294, 2365, 1295, 2183, 1296, 1297, 146, 147, 148, 1298, 1299, 2184, 1901, 1301, 1300, 1302, 493, 492, 494, 495, 496, 2186, 2185, 1303, 1304, 1305, 2366, 1306, 2187, 1307, 1308, 149, 150, 151, 1309, 1310, 2188, 1902, 1312, 1311, 1313, 498, 497, 499, 500, 501, 1314, 2189, 503, 502, 504, 16, 17, 1903, 803, 152, 153, 155, 154, 156, 158, 157, 1315, 1316, 506, 505, 507, 508, 2190, 2191, 1317, 1318, 509, 510, 2192, 1904, 1320, 1319, 1321, 1322, 1323, 1324, 1325, 511, 512, 1326, 515, 516, 514, 513, 1327, 804, 2193, 2367, 160, 161, 159, 2368, 1328, 1329, 2196, 2195, 2194, 162, 165, 164, 163, 2203, 2202, 2201, 2200, 2199, 2198, 2197, 960, 2204, 1330, 1331, 517, 518, 1332, 1333, 1334, 2205, 519, 520, 166, 1338, 1337, 1336, 1335, 167, 1339, 2210, 2209, 2208, 2207, 2206, 169, 172, 168, 173, 171, 170, 174, 2211, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 521, 523, 522, 524, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 525, 526, 527, 2212, 1905, 1357, 1356, 1358, 2369, 2370, 1359, 1360, 175, 176, 177, 178, 1361, 1362, 2371, 180, 181, 179, 2372, 1363, 1364, 2213, 1906, 1366, 1365, 1367, 529, 528, 530, 531, 532, 2214, 805, 535, 536, 534, 533, 537, 182, 183, 184, 1368, 1369, 1370, 539, 538, 540, 541, 1371, 18, 185, 2024, 2025, 2220, 2219, 2218, 2217, 2216, 2215, 189, 190, 187, 192, 188, 186, 191, 2026, 2036, 193, 199, 194, 198, 197, 195, 196, 2027, 2037, 978, 984, 980, 981, 979, 983, 982, 543, 542, 544, 546, 545, 547, 200, 201, 549, 548, 550, 202, 552, 551, 553, 203, 555, 554, 556, 204, 205, 558, 557, 559, 206, 1372, 2221, 207, 208, 561, 560, 209, 563, 562, 564, 210, 211, 566, 565, 567, 212, 569, 568, 570, 213, 1373, 214, 215, 963, 964, 965, 1374, 1375, 1376, 573, 576, 572, 577, 575, 574, 571, 1377, 1378, 1379, 865, 866, 867, 868, 869, 870, 871, 872, 1380, 1381, 1382, 218, 221, 217, 222, 220, 219, 216, 1383, 1384, 223, 224, 873, 874, 875, 225, 226, 579, 578, 1385, 1386, 2410, 229, 231, 227, 228, 230, 1387, 878, 879, 1388, 233, 232, 1389, 1390, 581, 580, 1392, 1391, 1393, 2223, 2222, 1005, 1004, 1007, 1006, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 236, 239, 235, 240, 238, 237, 234, 1401, 241, 242, 1402, 1403, 1404, 584, 587, 583, 588, 586, 585, 582, 1405, 970, 971, 2225, 2224, 967, 966, 969, 968, 1406, 1407, 591, 594, 590, 595, 593, 592, 589, 1408, 961, 962, 596, 598, 597, 599, 600, 807, 1409, 1410, 1411, 1412, 243, 1022, 1023, 1982, 848, 846, 849, 847, 2421, 2422, 2423, 247, 244, 246, 245, 601, 1413, 1910, 808, 1414, 1912, 1913, 1009, 1008, 1914, 973, 972, 974, 1010, 1011, 1012, 1916, 1917, 1014, 1013, 1015, 1918, 2038, 2039, 1415, 248, 1416, 1921, 2040, 1919, 1920, 1002, 1001, 1003, 2028, 249, 250, 251, 1922, 2029, 252, 254, 253, 255, 1019, 1020, 1021, 1018, 1016, 1017, 989, 990, 991, 992, 993, 994, 998, 999, 1000, 257, 258, 256, 259, 602, 603, 1417, 943, 1885, 1886, 1887, 1894, 1895, 1896, 261, 262, 260, 995, 996, 997, 1418, 1419, 2411, 265, 264, 263, 1923, 811, 810, 809, 1924, 2412, 266, 267, 268, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 605, 606, 607, 1427, 1428, 1429, 608, 609, 610, 611, 1430, 2226, 1431, 1432, 2030, 1433, 2031, 1926, 1925, 269, 1434, 1435, 1436, 1437, 1972, 1438, 1439, 1440, 1441, 2375, 270, 1442, 612, 613, 2376, 614, 615, 2377, 1443, 1444, 272, 273, 271, 275, 274, 276, 1445, 616, 1446, 617, 1447, 815, 814, 813, 812, 277, 1448, 877, 876, 1449, 1450, 1451, 621, 622, 1454, 1455, 1456, 1457, 1458, 2380, 627, 625, 624, 623, 626, 1459, 2227, 631, 629, 628, 630, 1460, 1461, 1462, 633, 632, 634, 2230, 2229, 2228, 635, 636, 1463, 278, 279, 280, 281, 282, 637, 638, 1996, 1997, 863, 864, 1998, 2000, 1999, 2001, 2002, 2003, 285, 284, 283, 2231, 2232, 2004, 2005, 2233, 2234, 641, 639, 642, 640, 1464, 288, 287, 286, 289, 647, 645, 644, 643, 646, 892, 891, 1465, 1466, 651, 649, 648, 650, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 291, 292, 290, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 658, 659, 660, 661, 662, 1482, 1483, 664, 663, 665, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 666, 667, 668, 1492, 976, 975, 977, 293, 1971, 1493, 1494, 1497, 1495, 1496, 1498, 886, 885, 669, 670, 671, 2235, 673, 672, 1499, 1500, 1501, 294, 1502, 898, 295, 1503, 897, 296, 1504, 896, 297, 1505, 895, 19, 298, 889, 300, 299, 301, 303, 302, 305, 304, 307, 306, 309, 308, 311, 310, 312, 888, 883, 313, 314, 315, 317, 316, 319, 318, 320, 322, 321, 674, 675, 324, 323, 325, 327, 326, 328, 677, 676, 330, 329, 331, 333, 332, 334, 335, 894, 336, 337, 887, 338, 893, 339, 890, 340, 678, 679, 341, 1506, 342, 680, 681, 682, 683, 684, 685, 1507, 686, 688, 687, 689, 690, 691, 692, 693, 694, 695, 1508, 1509, 1510, 1511, 1512, 1036, 1034, 1035, 696, 698, 697, 699, 700, 702, 701, 703, 1514, 1513, 1515, 704, 705, 1516, 343, 2236, 2237, 344, 2238, 1517, 1518, 1519, 20, 707, 706, 708, 345, 2018, 347, 348, 346, 349, 2416, 350, 2417, 351, 352, 353, 1520, 1521, 1522, 1523, 1524, 354, 1974, 355, 356, 2239, 1527, 1525, 1526, 1528, 2043, 2419, 2240, 1975, 1977, 1976, 1978, 2044, 358, 359, 357, 360, 1529, 1530, 2241, 1531, 1532, 1533, 1534, 1535, 2243, 2242, 361, 1536, 1537, 2244, 1538, 1539, 1540, 1541, 2245, 1560, 1561, 1542, 362, 363, 364, 365, 366, 1543, 1544, 1546, 1545, 1547, 1549, 1548, 1550, 1551, 2246, 1552, 2381, 2247, 709, 710, 2383, 2249, 2248, 1562, 1553, 1554, 2251, 2250, 1555, 1556, 1557, 1558, 1559, 2041, 2382, 2252, 711, 1563, 1564, 1565, 2253, 1566, 1567, 1568, 2255, 2254, 1571, 1569, 1570, 2045, 368, 369, 367, 370, 1573, 1572, 1574, 2256, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 2384, 1591, 1587, 1589, 1588, 1590, 2257, 2259, 2258, 843, 2260, 842, 2261, 1966, 1592, 2264, 2263, 2262, 1968, 1967, 2265, 1028, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 2266, 1603, 371, 372, 1604, 713, 712, 714, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 2267, 1613, 1614, 1615, 2269, 2268, 1616, 1617, 1618, 715, 716, 1620, 1619, 1621, 1622, 1623, 1624, 1625, 2046, 375, 374, 373, 376, 2032, 2019, 2271, 2270, 377, 380, 381, 379, 378, 382, 2048, 1626, 1627, 1628, 1629, 1630, 1631, 718, 717, 2273, 2272, 1632, 1633, 1634, 1635, 2274, 1636, 2033, 2020, 2385, 2276, 2275, 719, 722, 723, 721, 720, 724, 1637, 1638, 1639, 1641, 1640, 1642, 2277, 1643, 2279, 2278, 1645, 1648, 1644, 1647, 1646, 1649, 1650, 1651, 1652, 2280, 1653, 2281, 1654, 2282, 383, 384, 385, 1655, 2284, 2283, 2285, 2386, 1660, 1656, 1658, 1657, 1659, 2387, 1664, 1661, 1662, 1663, 386, 387, 1667, 1665, 1666, 1668, 1669, 2388, 2286, 726, 725, 727, 2389, 1670, 1671, 2390, 1672, 1673, 1674, 1675, 1676, 1677, 2034, 2021, 2287, 1679, 1678, 1680, 1980, 2288, 1681, 1682, 1683, 1684, 728, 1685, 1686, 1688, 1689, 1687, 1979, 1690, 1693, 1691, 1692, 1986, 1695, 1694, 1696, 1697, 1698, 1700, 1699, 1701, 1702, 2289, 1981, 1703, 1704, 1705, 1706, 729, 730, 2047, 389, 388, 390, 1707, 1708, 1709, 1710, 391, 392, 734, 733, 731, 732, 1711, 1712, 1713, 2290, 1714, 2391, 736, 735, 2418, 2292, 2291, 394, 393, 395, 1715, 1717, 1716, 1718, 1719, 1720, 1721, 2294, 2293, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 2295, 1734, 1735, 1736, 1737, 2296, 737, 1738, 2297, 1739, 1740, 1741, 2392, 2299, 2298, 1988, 2301, 2300, 1987, 1742, 2302, 1743, 2304, 2303, 2306, 2305, 1985, 1984, 1983, 1744, 1745, 739, 738, 1746, 1747, 2393, 1749, 1751, 1748, 1752, 1750, 396, 397, 740, 741, 1753, 1754, 2309, 2308, 2307, 2310, 1755, 1756, 1757, 1758, 2311, 1759, 1761, 1760, 2312, 2313, 2314, 2315, 2317, 2316, 743, 742, 744, 2318, 1764, 1765, 1766, 1767, 1768, 1762, 1763, 1769, 1770, 2319, 747, 748, 745, 746, 1771, 1772, 1774, 1773, 1775, 1776, 1777, 1778, 1780, 1779, 2321, 2320, 1782, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 880, 1789, 1790, 1791, 1792, 2322, 749, 750, 1794, 1793, 1795, 751, 752, 1796, 2394, 2324, 2323, 2395, 1797, 2325, 1798, 1799, 1800, 1801, 753, 1802, 1803, 1804, 818, 1931, 1932, 1933, 1934, 1935, 819, 820, 1936, 1937, 1938, 1939, 1940, 2396, 2326, 821, 822, 1941, 1942, 2327, 1943, 1944, 1945, 1946, 824, 823, 1947, 1948, 2328, 1949, 1950, 825, 826, 1951, 881, 21, 2330, 2329, 2042, 2331, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 2332, 1805, 1989, 1991, 1992, 1993, 1806, 2035, 1990, 2335, 2334, 2333, 1807, 1808, 1973, 2338, 2337, 2336, 882, 884, 1809, 1813, 1810, 1811, 1812, 2397, 1814, 2340, 2339, 1815, 1816, 2341, 2342, 756, 755, 754, 757, 1820, 1817, 1819, 1818, 1821, 758, 759, 1822, 1823, 1824, 1825, 760, 761, 1826, 1828, 1827, 1829, 2343, 1830, 1831, 2344, 763, 764, 762, 765, 1832, 1994, 2345, 766, 1833, 2346, 914, 913, 2347, 916, 915, 917, 1834, 1835, 1836, 2348, 922, 768, 769, 767, 770, 771, 2349, 773, 772, 774, 775, 1838, 1837, 2350, 1839, 1842, 1840, 1841, 1843, 2351, 1025, 1024, 1027, 1026, 1844, 1846, 1845, 2352, 2049, 1847, 2353, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 911, 910, 912, 776, 777, 908, 907, 909, 899, 900, 901, 902, 903, 905, 904, 906, 1038, 1037, 778, 779, 780, 781, 940, 941, 985, 22, 946, 945, 947, 942, 1857, 1858, 944, 1859, 1033, 1032, 918, 919, 920, 1860, 1861, 1862, 921, 934, 986, 987, 988, 929, 930, 928, 931, 932, 933, 923, 924, 925, 926, 927, 1029, 1030, 1031, 844, 936, 938, 937, 939, 935, 1995 }
}

define i32 @function_2799a() local_unnamed_addr {
dec_label_pc_2799a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEEEEdeEvE19__PRETTY_FUNCTION__(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27b40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27c00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27c00:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27cc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27cc0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27d20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27d20:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27e80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27e80:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_281d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_281d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28470(i32 %arg1) local_unnamed_addr {
dec_label_pc_28470:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_288e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_290c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29120(i32 %arg1) local_unnamed_addr {
dec_label_pc_29120:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29700(i32 %arg1) local_unnamed_addr {
dec_label_pc_29700:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29750() local_unnamed_addr {
dec_label_pc_29750:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_297c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_297c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_299e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a430(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a430:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a580(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a580:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a5e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a790(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a790:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b190(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b190:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ba00(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ba00:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2bbb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2bdb0() local_unnamed_addr {
dec_label_pc_2bdb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c6e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c6e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c740(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c740:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c820(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c820:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c8b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c8b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c990(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c990:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cc40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cc40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cd00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cd00:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cd60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cd60:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZZN5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d0c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d120(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d120:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d240(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d240:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d2d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d370(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d370:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d400(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d400:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d480(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d480:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d53a() local_unnamed_addr {
dec_label_pc_2d53a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d550(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d550:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d650(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d650:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d672() local_unnamed_addr {
dec_label_pc_2d672:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d820(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d820:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d8f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d8f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d990(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d990:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2da10(i32 %arg1) local_unnamed_addr {
dec_label_pc_2da10:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2da9e() local_unnamed_addr {
dec_label_pc_2da9e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2daa0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2daa0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2db30(i32 %arg1) local_unnamed_addr {
dec_label_pc_2db30:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dbd6() local_unnamed_addr {
dec_label_pc_2dbd6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dfa0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2dfa0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e000(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e000:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e060(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e060:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e0f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2e0f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e3a2() local_unnamed_addr {
dec_label_pc_2e3a2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e472() local_unnamed_addr {
dec_label_pc_2e472:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e5aa() local_unnamed_addr {
dec_label_pc_2e5aa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e710(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_2e710:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e760(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e760:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e7d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e7d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZZN5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e840:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e8d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e9b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e9b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ea20(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ea20:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2eb20(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb20:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2eba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eba0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ec20(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec20:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ec80(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec80:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ecf2() local_unnamed_addr {
dec_label_pc_2ecf2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ed10(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed10:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2eda0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eda0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2edc2() local_unnamed_addr {
dec_label_pc_2edc2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZZN5boost8optionalISsE3getEvE19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee00:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f2c6() local_unnamed_addr {
dec_label_pc_2f2c6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f360() local_unnamed_addr {
dec_label_pc_2f360:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f3b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f3f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f3fe() local_unnamed_addr {
dec_label_pc_2f3fe:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f480(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f480:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f490() local_unnamed_addr {
dec_label_pc_2f490:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f4ce() local_unnamed_addr {
dec_label_pc_2f4ce:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f800(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f800:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEdeEvE19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f9c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fb36() local_unnamed_addr {
dec_label_pc_2fb36:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fc6e() local_unnamed_addr {
dec_label_pc_2fc6e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fd30(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fd30:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fe40(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fe40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ffa0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2ffa0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3010a() local_unnamed_addr {
dec_label_pc_3010a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30160(i32 %arg1) local_unnamed_addr {
dec_label_pc_30160:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_301a6() local_unnamed_addr {
dec_label_pc_301a6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_301f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_301f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30242() local_unnamed_addr {
dec_label_pc_30242:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30280(i32 %arg1) local_unnamed_addr {
dec_label_pc_30280:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30570(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30570:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_305aa() local_unnamed_addr {
dec_label_pc_305aa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_306d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_306d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_306e2() local_unnamed_addr {
dec_label_pc_306e2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30710(i32 %arg1) local_unnamed_addr {
dec_label_pc_30710:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30bfe() local_unnamed_addr {
dec_label_pc_30bfe:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30c40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30c40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30c9a() local_unnamed_addr {
dec_label_pc_30c9a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30d36() local_unnamed_addr {
dec_label_pc_30d36:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f50:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31020(i32 %arg1) local_unnamed_addr {
dec_label_pc_31020:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31250(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31250:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZTVN5boost17bad_function_callE(i32 %arg1) local_unnamed_addr {
dec_label_pc_31330:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_315c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_315c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_317da() local_unnamed_addr {
dec_label_pc_317da:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3180e() local_unnamed_addr {
dec_label_pc_3180e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31840(i32 %arg1) local_unnamed_addr {
dec_label_pc_31840:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3194a() local_unnamed_addr {
dec_label_pc_3194a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31b06() local_unnamed_addr {
dec_label_pc_31b06:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_31dfa() local_unnamed_addr

define i32 @function_31e30(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e30:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31e80:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_31ed0(i32, i32) local_unnamed_addr

define i32 @function_321b0() local_unnamed_addr {
dec_label_pc_321b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3236e() local_unnamed_addr {
dec_label_pc_3236e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_323d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_323d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_325d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_325d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_32612() local_unnamed_addr

define i32 @function_32670(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32670:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_326e2() local_unnamed_addr {
dec_label_pc_326e2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32810(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32810:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3281a() local_unnamed_addr {
dec_label_pc_3281a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32870(i32 %arg1) local_unnamed_addr {
dec_label_pc_32870:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_329ba() local_unnamed_addr {
dec_label_pc_329ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32dd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dd0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32e90(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e90:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32ec0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32ec0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_33310(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33396() local_unnamed_addr

declare i32 @unknown_33490(i32, i32) local_unnamed_addr

declare i32 @unknown_334ce() local_unnamed_addr

declare i32 @unknown_33570(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3359e() local_unnamed_addr

declare i32 @unknown_335e0(i32, i32) local_unnamed_addr

declare i32 @unknown_3370a() local_unnamed_addr

declare i32 @unknown_33880(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33bd0() local_unnamed_addr

declare i32 @unknown_33c0a() local_unnamed_addr

declare i32 @unknown_33ca6() local_unnamed_addr

declare i32 @unknown_33d42() local_unnamed_addr

declare i32 @unknown_343a0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34460(i32) local_unnamed_addr

declare i32 @unknown_345ca() local_unnamed_addr

declare i32 @unknown_34820(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34910(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34940(i32) local_unnamed_addr

declare i32 @unknown_34a10(i32, i32) local_unnamed_addr

declare i32 @unknown_34d10(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34e00(i32) local_unnamed_addr

declare i32 @unknown_351e0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_352d0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_353d0(i32, i32) local_unnamed_addr

declare i32 @unknown_355f0(i32) local_unnamed_addr

declare i32 @unknown_35690(i32) local_unnamed_addr

declare i32 @unknown_356d0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_357b0() local_unnamed_addr

declare i32 @unknown_35990(i32) local_unnamed_addr

declare i32 @unknown_35b50(i32) local_unnamed_addr

declare i32 @unknown_35c40(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35ca0(i32) local_unnamed_addr

declare i32 @unknown_35ed0(i32) local_unnamed_addr

declare i32 @unknown_35f60(i32) local_unnamed_addr

declare i32 @unknown_36220(i32) local_unnamed_addr

declare i32 @unknown_36390(i32) local_unnamed_addr

declare i32 @unknown_364e0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36660(i32, i32) local_unnamed_addr

declare i32 @unknown_36690(i32) local_unnamed_addr

declare i32 @unknown_367c0(i32) local_unnamed_addr

declare i32 @unknown_36880(i32, i32) local_unnamed_addr

declare i32 @unknown_36b70(i32) local_unnamed_addr

declare i32 @unknown_36be0(i32, i32) local_unnamed_addr

declare i32 @unknown_36c80(i32) local_unnamed_addr

declare i32 @unknown_37140(i32) local_unnamed_addr

declare i32 @unknown_37860(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_378c0(i32) local_unnamed_addr

declare i32 @unknown_37a40(i32) local_unnamed_addr

declare i32 @unknown_38100(i32) local_unnamed_addr

declare i32 @unknown_38280(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38400(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_386e0(i32, i32) local_unnamed_addr

declare i32 @unknown_38790(i32) local_unnamed_addr

declare i32 @unknown_38860(i32, i32) local_unnamed_addr

declare i32 @unknown_388d0(i32) local_unnamed_addr

declare i32 @unknown_389f0(i32) local_unnamed_addr

declare i32 @unknown_38c30(i32) local_unnamed_addr

declare i32 @unknown_38ef0(i32) local_unnamed_addr

declare i32 @unknown_38fd0(i32) local_unnamed_addr

declare i32 @unknown_39070(i32) local_unnamed_addr

declare i32 @unknown_39160(i32) local_unnamed_addr

declare i32 @unknown_391b0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_396f0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_397a0(i32) local_unnamed_addr

declare i32 @unknown_39800(i32) local_unnamed_addr

declare i32 @unknown_398c0(i32) local_unnamed_addr

declare i32 @unknown_398d0(i32) local_unnamed_addr

declare i32 @unknown_3a260(i32) local_unnamed_addr

declare i32 @unknown_3a730(i32) local_unnamed_addr

declare i32 @unknown_3a810(i32, i32) local_unnamed_addr

declare i32 @unknown_3a870(i32) local_unnamed_addr

declare i32 @unknown_3a8f0() local_unnamed_addr

declare i32 @unknown_3a950(i32, i32) local_unnamed_addr

declare i32 @unknown_3ac30(i32) local_unnamed_addr

declare i32 @unknown_3b480(i32) local_unnamed_addr

declare i32 @unknown_3bcc0(i32) local_unnamed_addr

declare i32 @unknown_3bd80(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c440(i32, i32) local_unnamed_addr

declare i32 @unknown_3c4b0(i32, i32) local_unnamed_addr

declare i32 @unknown_3c520(i32, i32) local_unnamed_addr

declare i32 @unknown_3c5b0(i32) local_unnamed_addr

declare i32 @unknown_3c800(i32, i32) local_unnamed_addr

declare i32 @unknown_3c870(i32, i32) local_unnamed_addr

declare i32 @unknown_3c8e0(i32, i32) local_unnamed_addr

declare i32 @unknown_3c960(i32, i32) local_unnamed_addr

declare i32 @unknown_3cbd0(i32, i32) local_unnamed_addr

declare i32 @unknown_3ce60(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d2f0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d310(i32, i32) local_unnamed_addr

declare i32 @unknown_3d4e0(i32, i32) local_unnamed_addr

declare i32 @unknown_3d740(i32, i32) local_unnamed_addr

declare i32 @unknown_3d870(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d8a0() local_unnamed_addr

declare i32 @unknown_3d8f0(i32) local_unnamed_addr

declare i32 @unknown_3db60(i32, i32) local_unnamed_addr

declare i32 @unknown_3dbd0(i32, i32) local_unnamed_addr

declare i32 @unknown_3dbf0(i32, i32) local_unnamed_addr

declare i32 @unknown_3dc60(i32) local_unnamed_addr

declare i32 @unknown_3dc70(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3df80(i32, i32) local_unnamed_addr

declare i32 @unknown_3e0e0(i32, i32) local_unnamed_addr

declare i32 @unknown_3e730(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e9e0(i32, i32) local_unnamed_addr

declare i32 @unknown_3eb40(i32, i32) local_unnamed_addr

declare i32 @unknown_3ee40() local_unnamed_addr

declare i32 @unknown_3ef50(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f210(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f310() local_unnamed_addr

declare i32 @unknown_3f5d0() local_unnamed_addr

declare i32 @unknown_3f760(i32, i32) local_unnamed_addr

declare i32 @unknown_3f7d0(i32, i32) local_unnamed_addr

declare i32 @unknown_3f860(i32, i32) local_unnamed_addr

declare i32 @unknown_3fc70(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fd60(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fe50(i32, i32) local_unnamed_addr

declare i32 @unknown_3fee0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40130(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_401e0(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40c70(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40e20(i32, i32) local_unnamed_addr

declare i32 @unknown_40f30() local_unnamed_addr

declare i32 @unknown_40f80(i32, i32) local_unnamed_addr

declare i32 @unknown_410d0(i32) local_unnamed_addr

declare i32 @unknown_41770() local_unnamed_addr

declare i32 @unknown_41a50(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41b40(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41c30(i32, i32) local_unnamed_addr

declare i32 @unknown_41f10(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41f60() local_unnamed_addr

declare i32 @unknown_42220() local_unnamed_addr

declare i32 @unknown_42420(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42970(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42a40(i32, i32) local_unnamed_addr

declare i32 @unknown_42ba0() local_unnamed_addr

declare i32 @unknown_42d70(i32, i32) local_unnamed_addr

declare i32 @unknown_43670(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43760(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43850(i32, i32) local_unnamed_addr

declare i32 @unknown_43b30(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43b80() local_unnamed_addr

declare i32 @unknown_441c0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_443c0() local_unnamed_addr

declare i32 @unknown_44590(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44bf0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44ce0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44dd0(i32, i32) local_unnamed_addr

declare i32 @unknown_44ee0(i32) local_unnamed_addr

declare i32 @unknown_450b0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45740(i32, i32) local_unnamed_addr

declare i32 @unknown_45b00(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_461d0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46260(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46750() local_unnamed_addr

declare i32 @unknown_46a10() local_unnamed_addr

declare i32 @unknown_46a40(i32, i32) local_unnamed_addr

declare i32 @unknown_47620(i32, i32) local_unnamed_addr

declare i32 @unknown_47820(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47cc0(i32, i32) local_unnamed_addr

declare i32 @unknown_48370() local_unnamed_addr

declare i32 @unknown_48bb0() local_unnamed_addr

declare i32 @unknown_49070(i32) local_unnamed_addr

declare i32 @unknown_49180(i32) local_unnamed_addr

declare i32 @unknown_49450(i32, i32, i32) local_unnamed_addr

define i32 @function_fc2068e() local_unnamed_addr {
dec_label_pc_fc2068e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_14258596() local_unnamed_addr {
dec_label_pc_14258596:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c89ef65() local_unnamed_addr {
dec_label_pc_1c89ef65:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c89f025() local_unnamed_addr {
dec_label_pc_1c89f025:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c8aba34() local_unnamed_addr {
dec_label_pc_1c8aba34:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24048901() local_unnamed_addr {
dec_label_pc_24048901:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_348a12e1() local_unnamed_addr {
dec_label_pc_348a12e1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_348a1901() local_unnamed_addr {
dec_label_pc_348a1901:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_348a1b87() local_unnamed_addr {
dec_label_pc_348a1b87:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_348a1c22() local_unnamed_addr {
dec_label_pc_348a1c22:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_348a1dbb() local_unnamed_addr {
dec_label_pc_348a1dbb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_408dc189() local_unnamed_addr {
dec_label_pc_408dc189:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_442444c7() local_unnamed_addr {
dec_label_pc_442444c7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_448c1522() local_unnamed_addr {
dec_label_pc_448c1522:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_57892f89() local_unnamed_addr {
dec_label_pc_57892f89:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_800074ed() local_unnamed_addr {
dec_label_pc_800074ed:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_85005adc() local_unnamed_addr {
dec_label_pc_85005adc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89000000() local_unnamed_addr {
dec_label_pc_89000000:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89547401() local_unnamed_addr {
dec_label_pc_89547401:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89c0f75a() local_unnamed_addr {
dec_label_pc_89c0f75a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89d03904(i32 %arg1) local_unnamed_addr {
dec_label_pc_89d03904:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8b015cf4() local_unnamed_addr {
dec_label_pc_8b015cf4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8b0245f4() local_unnamed_addr {
dec_label_pc_8b0245f4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8b0578f6() local_unnamed_addr {
dec_label_pc_8b0578f6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8b087501() local_unnamed_addr {
dec_label_pc_8b087501:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8d0000b8() local_unnamed_addr {
dec_label_pc_8d0000b8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8d242c89() local_unnamed_addr {
dec_label_pc_8d242c89:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8d902c8d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8d902c8d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_96ebc689(i32) local_unnamed_addr

define i32 @function_a10000cb() local_unnamed_addr {
dec_label_pc_a10000cb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_db31da01() local_unnamed_addr {
dec_label_pc_db31da01:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 682, 1222, 1223, 1224, 1225, 1226, 439, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1311, 1312, 1313, 402, 1314, 1315, 1316, 584, 1265, 1266, 1267, 1268, 1269, 1271, 0, 299, 683, 590, 591, 684, 440, 685, 306, 686, 585, 687, 688, 1, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 307, 708, 709, 2, 441, 1637, 308, 1638, 586, 3, 1228, 1229, 4, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 298, 309, 1248, 310, 1249, 1250, 1251, 389, 1639, 960, 442, 838, 839, 840, 5, 814, 710, 592, 841, 842, 403, 404, 443, 444, 711, 712, 593, 713, 445, 843, 844, 845, 311, 846, 847, 312, 848, 716, 714, 313, 405, 715, 446, 300, 961, 962, 963, 964, 965, 966, 314, 967, 447, 301, 968, 969, 970, 971, 972, 973, 315, 974, 302, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1423, 975, 594, 303, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 595, 989, 990, 991, 992, 993, 6, 994, 995, 996, 316, 998, 997, 999, 448, 1000, 1001, 596, 717, 1435, 1434, 1437, 1436, 1439, 1438, 1440, 317, 1441, 1442, 318, 1443, 1444, 449, 1445, 1446, 1447, 406, 407, 390, 391, 319, 1448, 1450, 1449, 1451, 1452, 1006, 450, 1002, 718, 863, 451, 1004, 1003, 1005, 1007, 452, 453, 719, 720, 721, 1013, 1012, 1015, 1014, 1017, 1016, 1018, 320, 1019, 1020, 321, 1021, 1022, 454, 1023, 1024, 1025, 408, 409, 392, 393, 322, 1026, 1028, 1027, 1029, 1030, 1031, 455, 1008, 722, 456, 1010, 1009, 1011, 1032, 457, 458, 723, 724, 725, 726, 727, 728, 291, 729, 290, 730, 731, 732, 733, 7, 734, 735, 736, 737, 8, 1471, 1470, 1473, 1472, 1475, 1474, 1476, 323, 1477, 1478, 324, 1479, 1480, 459, 1481, 1482, 1483, 410, 411, 394, 395, 325, 1484, 1486, 1485, 1487, 1488, 1489, 460, 1033, 738, 837, 461, 1034, 1490, 9, 462, 463, 739, 740, 741, 742, 866, 867, 293, 868, 292, 10, 743, 744, 745, 746, 11, 1519, 1520, 747, 748, 1511, 1512, 1522, 1521, 326, 1523, 327, 1505, 1506, 328, 1507, 464, 1508, 1509, 1510, 465, 466, 1524, 749, 750, 467, 1036, 1035, 1037, 1038, 183, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 597, 751, 1501, 12, 752, 1502, 1503, 1504, 1526, 1527, 294, 1528, 1513, 1514, 1515, 1516, 1517, 1518, 329, 753, 754, 755, 13, 756, 1525, 1530, 330, 1048, 295, 1049, 1050, 1051, 1052, 1053, 1529, 14, 184, 1054, 185, 15, 1055, 1531, 1532, 1056, 1057, 598, 1536, 1537, 296, 1538, 1539, 1534, 1535, 16, 331, 1540, 1533, 1058, 333, 1059, 1060, 1061, 332, 757, 599, 1062, 1063, 1064, 1065, 1066, 412, 413, 587, 1067, 334, 1068, 1069, 600, 601, 186, 17, 187, 1070, 188, 1071, 189, 18, 190, 1072, 1073, 191, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 602, 192, 1084, 1085, 1086, 19, 193, 1087, 1088, 1089, 1090, 603, 758, 759, 335, 468, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 604, 1104, 760, 1619, 1620, 1621, 1622, 336, 1105, 469, 337, 1106, 470, 414, 1107, 1108, 1109, 1110, 1111, 605, 606, 20, 471, 1113, 338, 1112, 1117, 1118, 1119, 1120, 1121, 1114, 1115, 472, 473, 339, 1116, 474, 341, 1122, 1123, 1124, 1125, 1126, 340, 1127, 342, 1128, 607, 475, 608, 761, 343, 762, 763, 764, 344, 765, 766, 1129, 1130, 1131, 1132, 345, 1133, 609, 610, 1134, 1135, 1136, 1137, 611, 1138, 612, 767, 768, 769, 770, 476, 771, 1139, 1140, 1141, 1142, 346, 1143, 1144, 1145, 772, 1146, 477, 1148, 773, 774, 775, 1147, 478, 1149, 613, 479, 347, 1150, 480, 776, 348, 777, 1151, 1152, 1153, 1154, 349, 1155, 1156, 481, 1158, 778, 1157, 482, 1159, 614, 1160, 1161, 1162, 483, 1164, 779, 1163, 484, 1165, 615, 1166, 485, 780, 1167, 1168, 1169, 1170, 350, 1171, 1172, 781, 1173, 486, 1175, 782, 783, 784, 1174, 487, 1176, 616, 785, 786, 1177, 488, 1178, 1179, 787, 1180, 1181, 398, 399, 1182, 1183, 493, 489, 415, 396, 397, 1184, 1185, 491, 492, 351, 416, 490, 1641, 1642, 1590, 1591, 1592, 788, 789, 617, 790, 352, 353, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 417, 801, 802, 354, 803, 494, 495, 21, 22, 804, 805, 496, 497, 23, 24, 806, 807, 498, 1186, 618, 1187, 808, 1188, 499, 1189, 619, 1190, 418, 355, 1191, 809, 1192, 1561, 26, 25, 194, 1594, 1595, 620, 27, 28, 195, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 29, 30, 1204, 196, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 197, 31, 1599, 1600, 32, 198, 1219, 1220, 621, 199, 1221, 200, 1227, 201, 1252, 622, 33, 202, 1262, 812, 810, 811, 813, 34, 203, 1263, 204, 1264, 623, 205, 1270, 35, 206, 1272, 817, 815, 816, 818, 36, 207, 37, 1273, 1274, 819, 208, 38, 1275, 1276, 1277, 1278, 820, 209, 39, 1279, 1280, 1281, 210, 40, 1282, 1283, 356, 1284, 1285, 1286, 1287, 1288, 1289, 500, 821, 1562, 1563, 211, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 822, 823, 212, 1290, 1291, 1292, 1293, 824, 825, 1294, 1295, 357, 1296, 1297, 624, 1298, 1299, 213, 41, 435, 1647, 1643, 358, 1644, 359, 1645, 360, 1646, 214, 361, 1648, 362, 1649, 215, 1650, 363, 1651, 1652, 1653, 625, 1303, 626, 1300, 364, 1301, 1302, 1304, 1305, 42, 216, 1306, 1307, 1308, 1309, 1310, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1329, 627, 1326, 628, 1327, 629, 1328, 1330, 1331, 43, 217, 1332, 1333, 630, 1334, 1335, 1336, 288, 1339, 631, 1337, 1338, 1340, 1341, 1342, 365, 632, 1343, 633, 289, 1346, 634, 1344, 1345, 1347, 1348, 218, 1349, 366, 635, 1350, 636, 637, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 219, 1364, 826, 1365, 1366, 1367, 1368, 1369, 367, 638, 1370, 1371, 1372, 1373, 1374, 44, 220, 1375, 1376, 1377, 419, 436, 1383, 1384, 368, 1385, 369, 1386, 501, 1387, 1378, 370, 1379, 371, 1380, 1381, 372, 1382, 221, 1388, 373, 1389, 1390, 639, 502, 503, 45, 46, 827, 828, 829, 640, 1392, 1393, 1391, 641, 1395, 1396, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 420, 642, 1631, 1632, 1633, 374, 643, 1403, 644, 1404, 1640, 645, 830, 47, 831, 48, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 49, 222, 646, 832, 833, 834, 835, 836, 1413, 375, 1414, 1415, 1416, 1417, 1418, 647, 648, 1419, 1420, 1421, 1422, 849, 850, 851, 852, 50, 853, 649, 504, 650, 854, 51, 223, 224, 52, 855, 53, 856, 505, 54, 55, 226, 56, 225, 1453, 651, 506, 857, 858, 859, 860, 861, 862, 1454, 1455, 864, 865, 57, 507, 58, 59, 228, 60, 227, 1456, 652, 508, 509, 61, 62, 869, 870, 871, 872, 510, 63, 64, 873, 874, 1457, 1458, 1459, 1460, 400, 1461, 421, 1462, 229, 1463, 65, 1464, 1465, 653, 875, 876, 66, 877, 1466, 67, 230, 1467, 1468, 68, 231, 1469, 1491, 69, 232, 1492, 1493, 70, 233, 1494, 1495, 1496, 1497, 1498, 71, 1499, 1500, 72, 234, 654, 235, 236, 237, 238, 239, 878, 240, 879, 73, 241, 242, 243, 244, 245, 74, 246, 247, 248, 880, 249, 1541, 75, 1542, 881, 76, 882, 77, 883, 884, 78, 885, 79, 886, 80, 81, 1543, 887, 82, 888, 83, 84, 1544, 1545, 1546, 1547, 1548, 1549, 376, 85, 86, 1550, 1551, 87, 88, 89, 90, 91, 92, 93, 889, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 890, 123, 124, 1552, 1553, 125, 250, 1554, 1555, 1564, 1556, 1557, 274, 126, 127, 1558, 251, 128, 275, 129, 276, 130, 277, 131, 132, 1559, 252, 133, 278, 134, 279, 135, 280, 136, 137, 1560, 281, 138, 282, 139, 283, 140, 284, 141, 285, 142, 286, 143, 287, 144, 253, 145, 254, 146, 255, 147, 256, 148, 257, 149, 258, 150, 259, 151, 260, 152, 261, 153, 262, 154, 263, 155, 264, 156, 265, 157, 266, 158, 267, 159, 377, 378, 268, 160, 161, 269, 162, 270, 163, 511, 512, 513, 1636, 422, 588, 891, 423, 424, 514, 401, 379, 425, 589, 380, 381, 655, 892, 893, 179, 180, 894, 656, 1565, 1566, 1567, 1568, 1569, 1570, 382, 1571, 657, 1572, 1573, 1575, 1574, 1576, 1577, 1578, 1579, 515, 516, 1580, 517, 1581, 1582, 518, 895, 519, 520, 896, 521, 897, 898, 522, 899, 523, 900, 901, 426, 906, 907, 181, 902, 903, 904, 182, 905, 908, 524, 525, 526, 909, 527, 910, 911, 912, 913, 528, 914, 915, 916, 917, 164, 1584, 658, 1583, 1585, 659, 918, 919, 529, 530, 531, 532, 533, 1654, 1655, 920, 660, 921, 661, 662, 663, 926, 927, 922, 924, 923, 925, 928, 929, 934, 935, 936, 534, 535, 383, 937, 427, 428, 429, 536, 165, 384, 938, 664, 537, 166, 385, 939, 665, 437, 430, 431, 930, 931, 932, 933, 538, 539, 666, 167, 1586, 168, 940, 386, 169, 942, 941, 540, 1588, 1587, 943, 944, 304, 387, 945, 667, 541, 542, 946, 668, 1589, 543, 947, 388, 1593, 669, 305, 432, 544, 670, 671, 1656, 1657, 1658, 170, 545, 433, 434, 546, 1596, 1597, 1598, 1601, 1602, 1634, 1635, 948, 949, 271, 950, 951, 438, 171, 952, 953, 172, 672, 1604, 1603, 673, 547, 1606, 1605, 954, 955, 548, 581, 582, 272, 674, 1607, 956, 549, 550, 957, 551, 958, 174, 173, 175, 176, 675, 676, 177, 178, 1609, 1608, 1610, 959, 297, 1611, 1612, 1613, 677, 273, 1616, 1614, 1615, 678, 1617, 679, 1618, 680, 681, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666 }
  uselistorder i32* @eax, {}
}

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare void @__asm_rep_stosd_memset(i8*, i32, i32) local_unnamed_addr

declare void @__asm_outsb(i16, i8) local_unnamed_addr

declare void @__asm_outsd(i16, i32) local_unnamed_addr

declare i8 @__asm_insb(i16) local_unnamed_addr

declare void @__asm_rep_movsd_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i1 @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }

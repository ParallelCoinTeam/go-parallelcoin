;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-09 23:53:46
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS3_ESC_RS2_.isra.334 at 0x0 -- 0x4
0x0:       55                                 	push ebp
0x1:       89 cd                              	mov ebp, ecx
0x3:       57                                 	push edi
; data inside code section at 0x4 -- 0x10
0x4:       56 89 d6 53 89 c3 83 ec  2c 65 a1 14               |V..S....,e..    |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x10 -- 0x1f
0x10:      00 00                              	add byte ptr [eax], al
0x12:      00 89 44 24 1c 31                  	add byte ptr [ecx + 0x311c2444], cl
0x18:      c0 8b 7c 24 40 8d 76               	ror byte ptr [ebx - 0x72bfdb84], 0x76
; data inside code section at 0x1f -- 0x20
0x1f:      00                                                 |.               |
; function: ~clone_impl at 0x20 -- 0x2e
0x20:      85 f6                              	test esi, esi
0x22:      74 1c                              	je 0x40 <function_40>
0x24:      8d 46 10                           	lea eax, [esi + 0x10]
0x27:      89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x2b:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2e -- 0x2f
0x2e:      e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x2f -- 0x30
; data inside code section at 0x30 -- 0x40
0x30:      ff ff ff 84 c0 75 29 89  f5 8b 76 08 85 f6 75 e4   |.....u)...v...u.|
; function: function_40 at 0x40 -- 0x59
0x40:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x44:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4b:      89 d8                              	mov eax, ebx
0x4d:      89 2b                              	mov dword ptr [ebx], ebp
0x4f:      75 14                              	jne 0x65 <function_40+0x18>
0x51:      83 c4 2c                           	add esp, 0x2c
0x54:      5b                                 	pop ebx
0x55:      5e                                 	pop esi
0x56:      5f                                 	pop edi
0x57:      5d                                 	pop ebp
0x58:      c3                                 	ret 
; data inside code section at 0x59 -- 0x5c
0x59:      8d b4 26                                           |..&             |
; function: function_5c at 0x5c -- 0x65
0x5c:      00 00                              	add byte ptr [eax], al
0x5e:      00 00                              	add byte ptr [eax], al
0x60:      8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0x63:      eb bb                              	jmp 0x20 <~clone_impl>
; data inside code section at 0x65 -- 0x66
0x65:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x66 -- 0x67
; data inside code section at 0x67 -- 0x70
0x67:      ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: __uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> > at 0x70 -- 0x102
0x70:      55                                 	push ebp
0x71:      57                                 	push edi
0x72:      56                                 	push esi
0x73:      53                                 	push ebx
0x74:      89 c3                              	mov ebx, eax
0x76:      83 ec 1c                           	sub esp, 0x1c
0x79:      89 c8                              	mov eax, ecx
0x7b:      65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x82:      89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x86:      31 c9                              	xor ecx, ecx
0x88:      39 da                              	cmp edx, ebx
0x8a:      74 61                              	je 0xed <__uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> >+0x7d>
0x8c:      89 de                              	mov esi, ebx
0x8e:      89 c7                              	mov edi, eax
0x90:      85 ff                              	test edi, edi
0x92:      74 3a                              	je 0xce <__uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> >+0x5e>
0x94:      8b 0e                              	mov ecx, dword ptr [esi]
0x96:      89 0f                              	mov dword ptr [edi], ecx
0x98:      8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0x9b:      89 4f 04                           	mov dword ptr [edi + 4], ecx
0x9e:      8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0xa1:      89 4f 08                           	mov dword ptr [edi + 8], ecx
0xa4:      8b 4e 0c                           	mov ecx, dword ptr [esi + 0xc]
0xa7:      89 4f 0c                           	mov dword ptr [edi + 0xc], ecx
0xaa:      8b 4e 10                           	mov ecx, dword ptr [esi + 0x10]
0xad:      89 4f 10                           	mov dword ptr [edi + 0x10], ecx
0xb0:      8b 4e 14                           	mov ecx, dword ptr [esi + 0x14]
0xb3:      89 4f 14                           	mov dword ptr [edi + 0x14], ecx
0xb6:      8b 4e 18                           	mov ecx, dword ptr [esi + 0x18]
0xb9:      89 4f 18                           	mov dword ptr [edi + 0x18], ecx
0xbc:      8b 4e 1c                           	mov ecx, dword ptr [esi + 0x1c]
0xbf:      89 4f 1c                           	mov dword ptr [edi + 0x1c], ecx
0xc2:      8b 6e 20                           	mov ebp, dword ptr [esi + 0x20]
0xc5:      89 6f 20                           	mov dword ptr [edi + 0x20], ebp
0xc8:      8b 6e 24                           	mov ebp, dword ptr [esi + 0x24]
0xcb:      89 6f 24                           	mov dword ptr [edi + 0x24], ebp
0xce:      83 c6 28                           	add esi, 0x28
0xd1:      83 c7 28                           	add edi, 0x28
0xd4:      39 d6                              	cmp esi, edx
0xd6:      75 b8                              	jne 0x90 <__uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> >+0x20>
0xd8:      83 c3 28                           	add ebx, 0x28
0xdb:      29 de                              	sub esi, ebx
0xdd:      c1 ee 03                           	shr esi, 3
0xe0:      69 f6 cd cc cc 0c                  	imul esi, esi, 0xccccccd
0xe6:      8d 14 b6                           	lea edx, [esi + esi*4]
0xe9:      8d 44 d0 28                        	lea eax, [eax + edx*8 + 0x28]
0xed:      8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xf1:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf8:      75 08                              	jne 0x102 <__uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> >+0x91>
0xfa:      83 c4 1c                           	add esp, 0x1c
0xfd:      5b                                 	pop ebx
0xfe:      5e                                 	pop esi
0xff:      5f                                 	pop edi
0x100:     5d                                 	pop ebp
0x101:     c3                                 	ret 
; data inside code section at 0x102 -- 0x103
0x102:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x103 -- 0x104
; data inside code section at 0x104 -- 0x110
0x104:     ff ff ff 90 90 8d b4 26  00 00 00 00               |.......&....    |
; function: _ZNK9CAddrInfo10IsTerribleEx at 0x110 -- 0x227
0x110:     83 ec 3c                           	sub esp, 0x3c
0x113:     89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x117:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x11b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x121:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x125:     31 c0                              	xor eax, eax
0x127:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x12b:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x12f:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x133:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x137:     8b 46 24                           	mov eax, dword ptr [esi + 0x24]
0x13a:     8b 56 20                           	mov edx, dword ptr [esi + 0x20]
0x13d:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x141:     89 c1                              	mov ecx, eax
0x143:     09 d1                              	or ecx, edx
0x145:     74 21                              	je 0x168 <_ZNK9CAddrInfo10IsTerribleEx+0x58>
0x147:     89 f9                              	mov ecx, edi
0x149:     89 eb                              	mov ebx, ebp
0x14b:     83 c1 c4                           	add ecx, -0x3c
0x14e:     83 d3 ff                           	adc ebx, -1
0x151:     39 d8                              	cmp eax, ebx
0x153:     7e 0b                              	jle 0x160 <_ZNK9CAddrInfo10IsTerribleEx+0x50>
0x155:     31 c0                              	xor eax, eax
0x157:     eb 37                              	jmp 0x190 <_ZNK9CAddrInfo10IsTerribleEx+0x80>
; data inside code section at 0x159 -- 0x160
0x159:     8d b4 26 00 00 00 00                               |..&....         |
0x160:     7c 06                              	jl 0x168 <_ZNK9CAddrInfo10IsTerribleEx+0x58>
0x162:     39 ca                              	cmp edx, ecx
0x164:     73 ef                              	jae 0x155 <_ZNK9CAddrInfo10IsTerribleEx+0x45>
0x166:     66 90                              	nop 
0x168:     8b 46 1c                           	mov eax, dword ptr [esi + 0x1c]
0x16b:     31 db                              	xor ebx, ebx
0x16d:     89 ea                              	mov edx, ebp
0x16f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x173:     89 c1                              	mov ecx, eax
0x175:     89 f8                              	mov eax, edi
0x177:     05 58 02 00 00                     	add eax, 0x258
0x17c:     83 d2 00                           	adc edx, 0
0x17f:     39 d3                              	cmp ebx, edx
0x181:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x185:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x189:     7e 2d                              	jle 0x1b8 <_ZNK9CAddrInfo10IsTerribleEx+0xa8>
0x18b:     b8 01 00 00 00                     	mov eax, 1
0x190:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x194:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x19b:     0f 85 86 00 00 00                  	jne 0x227 <_ZNK9CAddrInfo10IsTerribleEx+0x112>
0x1a1:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x1a5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1a9:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x1ad:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x1b1:     83 c4 3c                           	add esp, 0x3c
0x1b4:     c3                                 	ret 
; data inside code section at 0x1b5 -- 0x1b8
0x1b5:     8d 76 00                                           |.v.             |
0x1b8:     7c 06                              	jl 0x1c0 <_ZNK9CAddrInfo10IsTerribleEx+0xb0>
0x1ba:     39 44 24 04                        	cmp dword ptr [esp + 4], eax
0x1be:     77 cb                              	ja 0x18b <_ZNK9CAddrInfo10IsTerribleEx+0x7b>
0x1c0:     8b 54 24 04                        	mov edx, dword ptr [esp + 4]
0x1c4:     b8 01 00 00 00                     	mov eax, 1
0x1c9:     85 d2                              	test edx, edx
0x1cb:     74 c3                              	je 0x190 <_ZNK9CAddrInfo10IsTerribleEx+0x80>
0x1cd:     89 f8                              	mov eax, edi
0x1cf:     89 ea                              	mov edx, ebp
0x1d1:     29 c8                              	sub eax, ecx
0x1d3:     19 da                              	sbb edx, ebx
0x1d5:     83 fa 00                           	cmp edx, 0
0x1d8:     7f b1                              	jg 0x18b <_ZNK9CAddrInfo10IsTerribleEx+0x7b>
0x1da:     7c 07                              	jl 0x1e3 <_ZNK9CAddrInfo10IsTerribleEx+0xd3>
0x1dc:     3d 00 1a 4f 00                     	cmp eax, 0x4f1a00
0x1e1:     77 a8                              	ja 0x18b <_ZNK9CAddrInfo10IsTerribleEx+0x7b>
0x1e3:     8b 5e 3c                           	mov ebx, dword ptr [esi + 0x3c]
0x1e6:     8b 4e 38                           	mov ecx, dword ptr [esi + 0x38]
0x1e9:     89 da                              	mov edx, ebx
0x1eb:     09 ca                              	or edx, ecx
0x1ed:     75 0b                              	jne 0x1fa <_ZNK9CAddrInfo10IsTerribleEx+0xea>
0x1ef:     83 7e 40 02                        	cmp dword ptr [esi + 0x40], 2
0x1f3:     b8 01 00 00 00                     	mov eax, 1
0x1f8:     7f 96                              	jg 0x190 <_ZNK9CAddrInfo10IsTerribleEx+0x80>
0x1fa:     29 cf                              	sub edi, ecx
0x1fc:     19 dd                              	sbb ebp, ebx
0x1fe:     83 fd 00                           	cmp ebp, 0
0x201:     0f 8c 4e ff ff ff                  	jl 0x155 <_ZNK9CAddrInfo10IsTerribleEx+0x45>
0x207:     7e 0f                              	jle 0x218 <_ZNK9CAddrInfo10IsTerribleEx+0x108>
0x209:     83 7e 40 13                        	cmp dword ptr [esi + 0x40], 0x13
0x20d:     0f 9f c0                           	setg al
0x210:     e9 7b ff ff ff                     	jmp 0x190 <_ZNK9CAddrInfo10IsTerribleEx+0x80>
; data inside code section at 0x215 -- 0x218
0x215:     8d 76 00                                           |.v.             |
0x218:     81 ff 80 3a 09 00                  	cmp edi, 0x93a80
0x21e:     77 e9                              	ja 0x209 <_ZNK9CAddrInfo10IsTerribleEx+0xf9>
0x220:     31 c0                              	xor eax, eax
0x222:     e9 69 ff ff ff                     	jmp 0x190 <_ZNK9CAddrInfo10IsTerribleEx+0x80>
; data inside code section at 0x227 -- 0x228
0x227:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x228 -- 0x229
; data inside code section at 0x229 -- 0x230
0x229:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: _ZNK9CAddrInfo9GetChanceEx at 0x230 -- 0x2ea
0x230:     55                                 	push ebp
0x231:     31 d2                              	xor edx, edx
0x233:     57                                 	push edi
0x234:     56                                 	push esi
0x235:     53                                 	push ebx
0x236:     83 ec 2c                           	sub esp, 0x2c
0x239:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x23d:     8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x241:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x245:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x24b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x24f:     31 c0                              	xor eax, eax
0x251:     8b 46 1c                           	mov eax, dword ptr [esi + 0x1c]
0x254:     89 cf                              	mov edi, ecx
0x256:     89 dd                              	mov ebp, ebx
0x258:     29 c7                              	sub edi, eax
0x25a:     89 c8                              	mov eax, ecx
0x25c:     19 d5                              	sbb ebp, edx
0x25e:     89 da                              	mov edx, ebx
0x260:     2b 46 20                           	sub eax, dword ptr [esi + 0x20]
0x263:     89 eb                              	mov ebx, ebp
0x265:     1b 56 24                           	sbb edx, dword ptr [esi + 0x24]
0x268:     89 f9                              	mov ecx, edi
0x26a:     c1 fb 1f                           	sar ebx, 0x1f
0x26d:     89 04 24                           	mov dword ptr [esp], eax
0x270:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x274:     89 da                              	mov edx, ebx
0x276:     89 eb                              	mov ebx, ebp
0x278:     f7 d2                              	not edx
0x27a:     c1 fa 1f                           	sar edx, 0x1f
0x27d:     21 d1                              	and ecx, edx
0x27f:     21 d3                              	and ebx, edx
0x281:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x285:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x289:     df 6c 24 08                        	fild qword ptr [esp + 8]
0x28d:     d9 05 9c 58 00 00                  	fld dword ptr [0x589c]
0x293:     dc c1                              	fadd st(1), st(0)
0x295:     83 7c 24 04 00                     	cmp dword ptr [esp + 4], 0
0x29a:     de f1                              	fdivrp st(1)
0x29c:     7c 42                              	jl 0x2e0 <_ZNK9CAddrInfo9GetChanceEx+0xb0>
0x29e:     7e 30                              	jle 0x2d0 <_ZNK9CAddrInfo9GetChanceEx+0xa0>
0x2a0:     8b 56 40                           	mov edx, dword ptr [esi + 0x40]
0x2a3:     85 d2                              	test edx, edx
0x2a5:     7e 14                              	jle 0x2bb <_ZNK9CAddrInfo9GetChanceEx+0x8b>
0x2a7:     31 c0                              	xor eax, eax
0x2a9:     d9 05 a0 58 00 00                  	fld dword ptr [0x58a0]
0x2af:     90                                 	nop 
0x2b0:     83 c0 01                           	add eax, 1
0x2b3:     39 d0                              	cmp eax, edx
0x2b5:     dc f9                              	fdiv st(1), st(0)
0x2b7:     75 f7                              	jne 0x2b0 <_ZNK9CAddrInfo9GetChanceEx+0x80>
0x2b9:     dd d8                              	fstp st(0)
0x2bb:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2bf:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2c6:     75 20                              	jne 0x2e8 <_ZNK9CAddrInfo9GetChanceEx+0xb8>
0x2c8:     83 c4 2c                           	add esp, 0x2c
0x2cb:     5b                                 	pop ebx
0x2cc:     5e                                 	pop esi
0x2cd:     5f                                 	pop edi
0x2ce:     5d                                 	pop ebp
0x2cf:     c3                                 	ret 
0x2d0:     7c 0e                              	jl 0x2e0 <_ZNK9CAddrInfo9GetChanceEx+0xb0>
0x2d2:     81 3c 24 57 02 00 00               	cmp dword ptr [esp], 0x257
0x2d9:     77 c5                              	ja 0x2a0 <_ZNK9CAddrInfo9GetChanceEx+0x70>
0x2db:     90                                 	nop 
0x2dc:     8d 74 26 00                        	lea esi, [esi]
0x2e0:     dc 0d b0 58 00 00                  	fmul qword ptr [0x58b0]
0x2e6:     eb b8                              	jmp 0x2a0 <_ZNK9CAddrInfo9GetChanceEx+0x70>
0x2e8:     dd d8                              	fstp st(0)
; data inside code section at 0x2ea -- 0x2eb
0x2ea:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2eb -- 0x2ec
; data inside code section at 0x2ec -- 0x2f0
0x2ec:     ff ff ff 90                                        |....            |
; function: _ZN8CAddrMan4FindERK8CNetAddrPi at 0x2f0 -- 0x346
0x2f0:     55                                 	push ebp
0x2f1:     31 ed                              	xor ebp, ebp
0x2f3:     57                                 	push edi
0x2f4:     56                                 	push esi
0x2f5:     53                                 	push ebx
0x2f6:     83 ec 3c                           	sub esp, 0x3c
0x2f9:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x2fd:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x301:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x308:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x30c:     31 d2                              	xor edx, edx
0x30e:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x312:     8b 93 84 00 00 00                  	mov edx, dword ptr [ebx + 0x84]
0x318:     8d bb 80 00 00 00                  	lea edi, [ebx + 0x80]
0x31e:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x322:     89 f9                              	mov ecx, edi
0x324:     8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x328:     89 34 24                           	mov dword ptr [esp], esi
0x32b:     e8 d0 fc ff ff                     	call 0
0x330:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x334:     39 d7                              	cmp edi, edx
0x336:     74 64                              	je 0x39c <function_39c>
0x338:     8d 42 10                           	lea eax, [edx + 0x10]
0x33b:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x33f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x343:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x346 -- 0x347
0x346:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x347 -- 0x348
; data inside code section at 0x348 -- 0x34a
0x348:     ff ff                                              |..              |
; function: function_34a at 0x34a -- 0x39c
0x34a:     ff 8b 54 24 14 84                  	dec dword ptr [ebx - 0x7bebdbac]
0x350:     c0 75 49 8b                        	sal byte ptr [ebp + 0x49], 0x8b
0x354:     74 24                              	je 0x37a <function_34a+0x30>
0x356:     18 85 f6 74 09 8b                  	sbb byte ptr [ebp - 0x74f68b0a], al
0x35c:     42                                 	inc edx
0x35d:     20 8b 4c 24 18 89                  	and byte ptr [ebx - 0x76e7dbb4], cl
0x363:     01 8b 43 6c 31 ed                  	add dword ptr [ebx - 0x12ce93bd], ecx
0x369:     85 c0                              	test eax, eax
0x36b:     74 2f                              	je 0x39c <function_39c>
0x36d:     83 c3 68                           	add ebx, 0x68
0x370:     8b 52 20                           	mov edx, dword ptr [edx + 0x20]
0x373:     89 d9                              	mov ecx, ebx
0x375:     eb 0a                              	jmp 0x381 <function_34a+0x37>
; data inside code section at 0x377 -- 0x378
0x377:     90                                                 |.               |
0x378:     89 c1                              	mov ecx, eax
0x37a:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0x37d:     85 c0                              	test eax, eax
0x37f:     74 0c                              	je 0x38d <function_34a+0x43>
0x381:     39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x384:     7d f2                              	jge 0x378 <function_34a+0x2e>
0x386:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x389:     85 c0                              	test eax, eax
0x38b:     75 f4                              	jne 0x381 <function_34a+0x37>
0x38d:     31 ed                              	xor ebp, ebp
0x38f:     39 cb                              	cmp ebx, ecx
0x391:     74 09                              	je 0x39c <function_39c>
0x393:     39 51 10                           	cmp dword ptr [ecx + 0x10], edx
0x396:     8d 41 14                           	lea eax, [ecx + 0x14]
0x399:     0f 4e e8                           	cmovle ebp, eax
; function: function_39c at 0x39c -- 0x3c0
0x39c:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x3a0:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3a7:     89 e8                              	mov eax, ebp
0x3a9:     75 08                              	jne 0x3b3 <function_39c+0x17>
0x3ab:     83 c4 3c                           	add esp, 0x3c
0x3ae:     5b                                 	pop ebx
0x3af:     5e                                 	pop esi
0x3b0:     5f                                 	pop edi
0x3b1:     5d                                 	pop ebp
0x3b2:     c3                                 	ret 
0x3b3:     e8 fc ff ff ff                     	call 0x3b4
0x3b8:     90                                 	nop 
0x3b9:     8d b4 26 00 00 00 00               	lea esi, [esi]
; function: _ZN8CAddrMan8Attempt_ERK8CServicex at 0x3c0 -- 0x410
0x3c0:     83 ec 3c                           	sub esp, 0x3c
0x3c3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3c9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3cd:     31 c0                              	xor eax, eax
0x3cf:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x3d3:     89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x3d7:     8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x3db:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x3df:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x3e3:     8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x3e7:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x3eb:     8b 6c 24 4c                        	mov ebp, dword ptr [esp + 0x4c]
0x3ef:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x3f7:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3fb:     89 04 24                           	mov dword ptr [esp], eax
0x3fe:     e8 ed fe ff ff                     	call 0x2f0 <_ZN8CAddrMan4FindERK8CNetAddrPi>
0x403:     85 c0                              	test eax, eax
0x405:     89 c3                              	mov ebx, eax
0x407:     74 1a                              	je 0x423 <function_423>
0x409:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x40d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x410 -- 0x411
0x410:     e8                                                 |.               |
; dynamically linked function: _ZneRK8CServiceS1_ at 0x411 -- 0x412
; data inside code section at 0x412 -- 0x423
0x412:     ff ff ff 84 c0 75 0a 83  43 40 01 89 7b 20 89 6b   |.....u..C@..{ .k|
0x422:     24                                                 |$               |
; function: function_423 at 0x423 -- 0x444
0x423:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x427:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x42e:     75 14                              	jne 0x444 <function_423+0x20>
0x430:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x434:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x438:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x43c:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x440:     83 c4 3c                           	add esp, 0x3c
0x443:     c3                                 	ret 
; data inside code section at 0x444 -- 0x445
0x444:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x445 -- 0x446
; data inside code section at 0x446 -- 0x450
0x446:     ff ff ff 90 8d b6 00 00  00 00                     |..........      |
; function: _ZN8CAddrMan10Connected_ERK8CServicex at 0x450 -- 0x4a0
0x450:     83 ec 4c                           	sub esp, 0x4c
0x453:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x459:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x45d:     31 c0                              	xor eax, eax
0x45f:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x463:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x467:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x46b:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x46f:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x473:     8b 7c 24 58                        	mov edi, dword ptr [esp + 0x58]
0x477:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x47b:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x47f:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x487:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x48b:     89 04 24                           	mov dword ptr [esp], eax
0x48e:     e8 5d fe ff ff                     	call 0x2f0 <_ZN8CAddrMan4FindERK8CNetAddrPi>
0x493:     85 c0                              	test eax, eax
0x495:     89 c3                              	mov ebx, eax
0x497:     74 3b                              	je 0x4d4 <function_4d4>
0x499:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x49d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x4a0 -- 0x4a1
0x4a0:     e8                                                 |.               |
; dynamically linked function: _ZneRK8CServiceS1_ at 0x4a1 -- 0x4a2
; data inside code section at 0x4a2 -- 0x4a4
0x4a2:     ff ff                                              |..              |
; function: function_4a4 at 0x4a4 -- 0x4ba
0x4a4:     ff 84 c0 75 2b 8b 43               	inc dword ptr [eax + eax*8 + 0x438b2b75]
0x4ab:     1c 31                              	sbb al, 0x31
0x4ad:     d2 89 54 24 1c 89                  	ror byte ptr [ecx - 0x76e3dbac], cl
0x4b3:     ea 89 44 24 18 89 f8               	ljmp 0xf889:0x18244489 <function_18244489>
; data inside code section at 0x4ba -- 0x4d1
0x4ba:     2b 44 24 18 1b 54 24 1c  89 44 24 18 83 fa 00 89   |+D$..T$..D$.....|
0x4ca:     54 24 1c 7c 05 7e 27                               |T$.|.~'         |
; function: function_4d1 at 0x4d1 -- 0x4d2
; data inside code section at 0x4d2 -- 0x4d4
0x4d2:     7b 1c                                              |{.              |
; function: function_4d4 at 0x4d4 -- 0x4f5
0x4d4:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x4d8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4df:     75 20                              	jne 0x501 <function_4d4+0x20>
0x4e1:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x4e5:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x4e9:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x4ed:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x4f1:     83 c4 4c                           	add esp, 0x4c
0x4f4:     c3                                 	ret 
; data inside code section at 0x4f5 -- 0x4f8
0x4f5:     8d 76 00                                           |.v.             |
; function: function_4f8 at 0x4f8 -- 0x501
0x4f8:     3d b0 04 00 00                     	cmp eax, 0x4b0
0x4fd:     76 d5                              	jbe 0x4d4 <function_4d4>
0x4ff:     eb d0                              	jmp 0x4d1 <function_4d1>
; data inside code section at 0x501 -- 0x502
0x501:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x502 -- 0x503
; data inside code section at 0x503 -- 0x510
0x503:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZN8CAddrMan7Select_Ei at 0x510 -- 0x5a6
0x510:     55                                 	push ebp
0x511:     57                                 	push edi
0x512:     56                                 	push esi
0x513:     53                                 	push ebx
0x514:     83 ec 6c                           	sub esp, 0x6c
0x517:     8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x51e:     8b 9c 24 84 00 00 00               	mov ebx, dword ptr [esp + 0x84]
0x525:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x52c:     89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x530:     31 d2                              	xor edx, edx
0x532:     8b b4 24 88 00 00 00               	mov esi, dword ptr [esp + 0x88]
0x539:     89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x53d:     8b 83 98 00 00 00                  	mov eax, dword ptr [ebx + 0x98]
0x543:     2b 83 94 00 00 00                  	sub eax, dword ptr [ebx + 0x94]
0x549:     c1 f8 02                           	sar eax, 2
0x54c:     85 c0                              	test eax, eax
0x54e:     0f 84 b8 02 00 00                  	je 0x80c <function_80c>
0x554:     db 83 a0 00 00 00                  	fild dword ptr [ebx + 0xa0]
0x55a:     d9 c0                              	fld st(0)
0x55c:     d9 fa                              	fsqrt 
0x55e:     db e8                              	fucomi st(0)
0x560:     0f 8a 35 03 00 00                  	jp 0x89b <function_89b>
0x566:     dd d9                              	fstp st(1)
0x568:     89 74 24 4c                        	mov dword ptr [esp + 0x4c], esi
0x56c:     db 44 24 4c                        	fild dword ptr [esp + 0x4c]
0x570:     d9 c0                              	fld st(0)
0x572:     d8 2d a4 58 00 00                  	fsubr dword ptr [0x58a4]
0x578:     de ca                              	fmulp st(2)
0x57a:     db 83 b0 00 00 00                  	fild dword ptr [ebx + 0xb0]
0x580:     d9 c0                              	fld st(0)
0x582:     d9 fa                              	fsqrt 
0x584:     db e8                              	fucomi st(0)
0x586:     0f 8a ec 02 00 00                  	jp 0x878 <function_878>
0x58c:     dd d9                              	fstp st(1)
0x58e:     de c9                              	fmulp st(1)
0x590:     c7 04 24 00 00 00 40               	mov dword ptr [esp], 0x40000000
0x597:     8d 73 68                           	lea esi, [ebx + 0x68]
0x59a:     d8 c1                              	fadd st(1)
0x59c:     d9 c9                              	fxch st(1)
0x59e:     dd 5c 24 10                        	fstp qword ptr [esp + 0x10]
0x5a2:     dd 5c 24 20                        	fstp qword ptr [esp + 0x20]
; data inside code section at 0x5a6 -- 0x5a7
0x5a6:     e8                                                 |.               |
; dynamically linked function: _Z10GetRandInti at 0x5a7 -- 0x5a8
; data inside code section at 0x5a8 -- 0x5cf
0x5a8:     ff ff ff 89 44 24 4c 8d  43 64 db 44 24 4c dd 44   |....D$L.Cd.D$L.D|
0x5b8:     24 20 de c9 89 44 24 44  d8 0d a8 58 00 00 dd 44   |$ ...D$D...X...D|
0x5c8:     24 10 d9 e8 dd 5c 24                               |$....\$         |
; function: function_5cf at 0x5cf -- 0x5d6
0x5cf:     38 df                              	cmp bh, bl
0x5d1:     e9 dd d8 0f 86                     	jmp 0x860fdeb3 <function_860fdeb3>
; data inside code section at 0x5d6 -- 0x5e0
0x5d6:     63 01 00 00 8d b6 00 00  00 00                     |c.........      |
; function: function_5e0 at 0x5e0 -- 0x5e1
; data inside code section at 0x5e1 -- 0x5fb
0x5e1:     93 a4 00 00 00 8b 83 a8  00 00 00 29 d0 c1 f8 02   |...........)....|
0x5f1:     69 c0 ab aa aa aa 89 04  24 e8                     |i.......$.      |
; dynamically linked function: _Z10GetRandInti at 0x5fb -- 0x5fc
; data inside code section at 0x5fc -- 0x61b
0x5fc:     ff ff ff 8b 93 a4 00 00  00 8d 04 40 8d 3c 82 8b   |...........@.<..|
0x60c:     47 04 2b 07 c1 f8 02 85  c0 74 cf 89 04 24 e8      |G.+......t...$. |
; dynamically linked function: _Z10GetRandInti at 0x61b -- 0x61c
; data inside code section at 0x61c -- 0x61e
0x61c:     ff ff                                              |..              |
; function: function_61e at 0x61e -- 0x67e
0x61e:     ff 8b 53 6c 8b 0f                  	dec dword ptr [ebx + 0xf8b6c53]
0x624:     85 d2                              	test edx, edx
0x626:     0f 84 bc 01 00 00                  	je 0x7e8 <function_7e8>
0x62c:     8d 3c 81                           	lea edi, [ecx + eax*4]
0x62f:     89 f1                              	mov ecx, esi
0x631:     8b 07                              	mov eax, dword ptr [edi]
0x633:     eb 0c                              	jmp 0x641 <function_61e+0x23>
; data inside code section at 0x635 -- 0x638
0x635:     8d 76 00                                           |.v.             |
0x638:     89 d1                              	mov ecx, edx
0x63a:     8b 52 08                           	mov edx, dword ptr [edx + 8]
0x63d:     85 d2                              	test edx, edx
0x63f:     74 0c                              	je 0x64d <function_61e+0x2f>
0x641:     39 42 10                           	cmp dword ptr [edx + 0x10], eax
0x644:     7d f2                              	jge 0x638 <function_61e+0x1a>
0x646:     8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x649:     85 d2                              	test edx, edx
0x64b:     75 f4                              	jne 0x641 <function_61e+0x23>
0x64d:     39 ce                              	cmp esi, ecx
0x64f:     0f 84 93 01 00 00                  	je 0x7e8 <function_7e8>
0x655:     39 41 10                           	cmp dword ptr [ecx + 0x10], eax
0x658:     0f 8f 8a 01 00 00                  	jg 0x7e8 <function_7e8>
0x65e:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x662:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x666:     89 14 24                           	mov dword ptr [esp], edx
0x669:     e8 52 45 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x66e:     c7 04 24 00 00 00 40               	mov dword ptr [esp], 0x40000000
0x675:     89 c7                              	mov edi, eax
0x677:     e8 fc ff ff ff                     	call 0x678
0x67c:     89 c5                              	mov ebp, eax
; data inside code section at 0x67e -- 0x67f
0x67e:     e8                                                 |.               |
; dynamically linked function: _Z15GetAdjustedTimev at 0x67f -- 0x680
; data inside code section at 0x680 -- 0x682
0x680:     ff ff                                              |..              |
; function: function_682 at 0x682 -- 0x6c4
0x682:     ff 89 3c 24 89 44                  	dec dword ptr [ecx + 0x4489243c]
0x688:     24 04                              	and al, 4
0x68a:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x68e:     e8 9d fb ff ff                     	call 0x230 <_ZNK9CAddrInfo9GetChanceEx>
0x693:     89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x697:     db 44 24 4c                        	fild dword ptr [esp + 0x4c]
0x69b:     d9 c9                              	fxch st(1)
0x69d:     dc 4c 24 38                        	fmul qword ptr [esp + 0x38]
0x6a1:     d8 0d ac 58 00 00                  	fmul dword ptr [0x58ac]
0x6a7:     df e9                              	fucomip st(1)
0x6a9:     dd d8                              	fstp st(0)
0x6ab:     0f 87 82 01 00 00                  	ja 0x833 <function_833>
0x6b1:     dd 44 24 38                        	fld qword ptr [esp + 0x38]
0x6b5:     dc 0d b8 58 00 00                  	fmul qword ptr [0x58b8]
0x6bb:     dd 5c 24 38                        	fstp qword ptr [esp + 0x38]
0x6bf:     e9 1c ff ff ff                     	jmp 0x5e0 <function_5e0>
; data inside code section at 0x6c4 -- 0x6c8
0x6c4:     8d 74 26 00                                        |.t&.            |
; function: function_6c8 at 0x6c8 -- 0x6c9
; data inside code section at 0x6c9 -- 0x6f6
0x6c9:     fe 0f 84 f0 00 00 00 39  4f 10 0f 8f e7 00 00 00   |.......9O.......|
0x6d9:     83 c0 10 89 44 24 04 8b  44 24 44 89 04 24 e8 d4   |....D$..D$D..$..|
0x6e9:     44 00 00 c7 04 24 00 00  00 40 89 c7 e8            |D....$...@...   |
; dynamically linked function: _Z10GetRandInti at 0x6f6 -- 0x6f7
; data inside code section at 0x6f7 -- 0x6fd
0x6f7:     ff ff ff 89 c5 e8                                  |......          |
; dynamically linked function: _Z15GetAdjustedTimev at 0x6fd -- 0x6fe
; data inside code section at 0x6fe -- 0x724
0x6fe:     ff ff ff 89 3c 24 89 44  24 04 89 54 24 08 e8 1f   |....<$.D$..T$...|
0x70e:     fb ff ff 89 6c 24 4c db  44 24 4c d9 c9 dc 4c 24   |....l$L.D$L...L$|
0x71e:     38 d8 0d ac 58 00                                  |8...X.          |
; function: function_724 at 0x724 -- 0x72b
0x724:     00 df                              	add bh, bl
0x726:     e9 dd d8 0f 87                     	jmp 0x870fe008 <function_870fe008>
; data inside code section at 0x72b -- 0x758
0x72b:     04 01 00 00 dd 44 24 38  dc 0d b8 58 00 00 dd 5c   |.....D$8...X...\|
0x73b:     24 38 8b 93 b4 00 00 00  8b 83 b8 00 00 00 29 d0   |$8............).|
0x74b:     c1 f8 03 69 c0 ab aa aa  aa 89 04 24 e8            |...i.......$.   |
; dynamically linked function: _Z10GetRandInti at 0x758 -- 0x759
; data inside code section at 0x759 -- 0x75b
0x759:     ff ff                                              |..              |
; function: function_75b at 0x75b -- 0x76a
0x75b:     ff 8b 93 b4 00 00                  	dec dword ptr [ebx + 0xb493]
0x761:     00 8d 04 40 8d 2c                  	add byte ptr [ebp + 0x2c8d4004], cl
0x767:     c2 8b 45                           	ret 0x458b
; data inside code section at 0x76a -- 0x773
0x76a:     14 85 c0 74 d4 89 04 24  e8                        |...t...$.       |
; dynamically linked function: _Z10GetRandInti at 0x773 -- 0x774
; data inside code section at 0x774 -- 0x78f
0x774:     ff ff ff 89 c7 8b 45 0c  85 ff 74 18 83 ef 01 90   |......E...t.....|
0x784:     8d 74 26 00 89 04 24 83  ef 01 e8                  |.t&...$....     |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x78f -- 0x790
; data inside code section at 0x790 -- 0x792
0x790:     ff ff                                              |..              |
; function: function_792 at 0x792 -- 0x7df
0x792:     ff 83 ff ff 75 f0                  	inc dword ptr [ebx - 0xf8a0001]
0x798:     8b 53 6c                           	mov edx, dword ptr [ebx + 0x6c]
0x79b:     85 d2                              	test edx, edx
0x79d:     74 21                              	je 0x7c0 <function_792+0x2e>
0x79f:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0x7a2:     89 f7                              	mov edi, esi
0x7a4:     eb 0f                              	jmp 0x7b5 <function_792+0x23>
; data inside code section at 0x7a6 -- 0x7a8
0x7a6:     66 90                                              |f.              |
0x7a8:     89 d7                              	mov edi, edx
0x7aa:     8b 52 08                           	mov edx, dword ptr [edx + 8]
0x7ad:     85 d2                              	test edx, edx
0x7af:     0f 84 13 ff ff ff                  	je 0x6c8 <function_6c8>
0x7b5:     39 4a 10                           	cmp dword ptr [edx + 0x10], ecx
0x7b8:     7d ee                              	jge 0x7a8 <function_792+0x16>
0x7ba:     8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x7bd:     eb ee                              	jmp 0x7ad <function_792+0x1b>
; data inside code section at 0x7bf -- 0x7c0
0x7bf:     90                                                 |.               |
0x7c0:     c7 44 24 0c 80 54 00 00            	mov dword ptr [esp + 0xc], 0x5480 ; "CAddress CAddrMan::Select_(int)"
0x7c8:     c7 44 24 08 a9 01 00 00            	mov dword ptr [esp + 8], 0x1a9
0x7d0:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x7d8:     c7 04 24 78 2c 00 00               	mov dword ptr [esp], 0x2c78 ; "mapInfo.count(*it) == 1"
; data inside code section at 0x7df -- 0x7e0
0x7df:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x7e0 -- 0x7e1
; data inside code section at 0x7e1 -- 0x7e8
0x7e1:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_7e8 at 0x7e8 -- 0x807
0x7e8:     c7 44 24 0c 80 54 00 00            	mov dword ptr [esp + 0xc], 0x5480 ; "CAddress CAddrMan::Select_(int)"
0x7f0:     c7 44 24 08 97 01 00 00            	mov dword ptr [esp + 8], 0x197
0x7f8:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x800:     c7 04 24 64 35 00 00               	mov dword ptr [esp], 0x3564 ; "mapInfo.count(vTried[nPos]) == 1"
; data inside code section at 0x807 -- 0x808
0x807:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x808 -- 0x809
; data inside code section at 0x809 -- 0x80c
0x809:     ff ff ff                                           |...             |
; function: function_80c at 0x80c -- 0x813
0x80c:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x810:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x813 -- 0x814
0x813:     e8                                                 |.               |
; dynamically linked function: _ZN8CAddressC1Ev at 0x814 -- 0x815
; data inside code section at 0x815 -- 0x818
0x815:     ff ff ff                                           |...             |
; function: function_818 at 0x818 -- 0x833
0x818:     8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x81c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x823:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x827:     75 4a                              	jne 0x873 <function_873>
0x829:     83 c4 6c                           	add esp, 0x6c
0x82c:     5b                                 	pop ebx
0x82d:     5e                                 	pop esi
0x82e:     5f                                 	pop edi
0x82f:     5d                                 	pop ebp
0x830:     c2 04 00                           	ret 4
; function: function_833 at 0x833 -- 0x873
0x833:     8b 07                              	mov eax, dword ptr [edi]
0x835:     8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x839:     89 02                              	mov dword ptr [edx], eax
0x83b:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0x83e:     89 42 04                           	mov dword ptr [edx + 4], eax
0x841:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0x844:     89 42 08                           	mov dword ptr [edx + 8], eax
0x847:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x84a:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x84d:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x850:     89 42 10                           	mov dword ptr [edx + 0x10], eax
0x853:     8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x856:     89 42 14                           	mov dword ptr [edx + 0x14], eax
0x859:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0x85c:     89 42 18                           	mov dword ptr [edx + 0x18], eax
0x85f:     8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x862:     89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x865:     8b 47 20                           	mov eax, dword ptr [edi + 0x20]
0x868:     89 42 20                           	mov dword ptr [edx + 0x20], eax
0x86b:     8b 47 24                           	mov eax, dword ptr [edi + 0x24]
0x86e:     89 42 24                           	mov dword ptr [edx + 0x24], eax
0x871:     eb a5                              	jmp 0x818 <function_818>
; function: function_873 at 0x873 -- 0x874
; dynamically linked function: __stack_chk_fail at 0x874 -- 0x875
; data inside code section at 0x875 -- 0x878
0x875:     ff ff ff                                           |...             |
; function: function_878 at 0x878 -- 0x887
0x878:     dd d8                              	fstp st(0)
0x87a:     dd 1c 24                           	fstp qword ptr [esp]
0x87d:     d9 c9                              	fxch st(1)
0x87f:     dd 5c 24 10                        	fstp qword ptr [esp + 0x10]
0x883:     dd 5c 24 20                        	fstp qword ptr [esp + 0x20]
; data inside code section at 0x887 -- 0x888
0x887:     e8                                                 |.               |
; dynamically linked function: sqrt at 0x888 -- 0x889
; data inside code section at 0x889 -- 0x88c
0x889:     ff ff ff                                           |...             |
; function: function_88c at 0x88c -- 0x89b
0x88c:     dd 44 24 20                        	fld qword ptr [esp + 0x20]
0x890:     dd 44 24 10                        	fld qword ptr [esp + 0x10]
0x894:     d9 ca                              	fxch st(2)
0x896:     e9 f3 fc ff ff                     	jmp 0x58e
; function: function_89b at 0x89b -- 0x8a0
0x89b:     dd d8                              	fstp st(0)
0x89d:     dd 1c 24                           	fstp qword ptr [esp]
; data inside code section at 0x8a0 -- 0x8a1
0x8a0:     e8                                                 |.               |
; dynamically linked function: sqrt at 0x8a1 -- 0x8a2
; data inside code section at 0x8a2 -- 0x8a5
0x8a2:     ff ff ff                                           |...             |
; function: function_8a5 at 0x8a5 -- 0x8aa
0x8a5:     e9 be fc ff ff                     	jmp 0x568
; data inside code section at 0x8aa -- 0x8b0
0x8aa:     8d b6 00 00 00 00                                  |......          |
; function: _ZN8CAddrMan11SelectTriedEi at 0x8b0 -- 0x911
0x8b0:     55                                 	push ebp
0x8b1:     57                                 	push edi
0x8b2:     56                                 	push esi
0x8b3:     53                                 	push ebx
0x8b4:     31 db                              	xor ebx, ebx
0x8b6:     83 ec 4c                           	sub esp, 0x4c
0x8b9:     8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x8bd:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x8c1:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x8c8:     89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x8cc:     31 c9                              	xor ecx, ecx
0x8ce:     c7 44 24 18 ff ff ff ff            	mov dword ptr [esp + 0x18], 0xffffffff
0x8d6:     8b ba a4 00 00 00                  	mov edi, dword ptr [edx + 0xa4]
0x8dc:     89 d5                              	mov ebp, edx
0x8de:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x8e2:     8d 34 40                           	lea esi, [eax + eax*2]
0x8e5:     83 c2 64                           	add edx, 0x64
0x8e8:     c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x8f0:     83 c5 68                           	add ebp, 0x68
0x8f3:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x8f7:     8d 34 b7                           	lea esi, [edi + esi*4]
0x8fa:     bf ff ff ff ff                     	mov edi, 0xffffffff
0x8ff:     90                                 	nop 
0x900:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x903:     2b 06                              	sub eax, dword ptr [esi]
0x905:     c1 f8 02                           	sar eax, 2
0x908:     39 d8                              	cmp eax, ebx
0x90a:     76 56                              	jbe 0x962 <function_962>
0x90c:     29 d8                              	sub eax, ebx
0x90e:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x911 -- 0x912
0x911:     e8                                                 |.               |
; dynamically linked function: _Z10GetRandInti at 0x912 -- 0x913
; data inside code section at 0x913 -- 0x945
0x913:     ff ff ff 01 d8 89 44 24  20 8b 06 8b 4c 24 20 8d   |......D$ ...L$ .|
0x923:     14 88 8b 0a 8d 04 98 89  4c 24 34 8b 08 89 0a 8b   |........L$4.....|
0x933:     54 24 34 89 10 8b 44 24  18 23 44 24 1c 83 f8 ff   |T$4...D$.#D$....|
0x943:     75 3b                                              |u;              |
; function: function_945 at 0x945 -- 0x946
; data inside code section at 0x946 -- 0x955
0x946:     44 24 34 8b 7c 24 20 89  c1 c1 f9 1f 89 44 24      |D$4.|$ ......D$ |
; function: function_955 at 0x955 -- 0x95c
0x955:     18 89 4c 24 1c 83                  	sbb byte ptr [ecx - 0x7ce3dbb4], cl
0x95b:     c3                                 	ret 
; data inside code section at 0x95c -- 0x962
0x95c:     01 83 fb 04 75 9e                                  |....u.          |
; function: function_962 at 0x962 -- 0x97d
0x962:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x966:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x96d:     89 f8                              	mov eax, edi
0x96f:     0f 85 cf 00 00 00                  	jne 0xa44 <function_962+0x1a>
0x975:     83 c4 4c                           	add esp, 0x4c
0x978:     5b                                 	pop ebx
0x979:     5e                                 	pop esi
0x97a:     5f                                 	pop edi
0x97b:     5d                                 	pop ebp
0x97c:     c3                                 	ret 
; data inside code section at 0x97d -- 0x980
0x97d:     8d 76 00                                           |.v.             |
; function: function_980 at 0x980 -- 0xa44
0x980:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x984:     8b 42 6c                           	mov eax, dword ptr [edx + 0x6c]
0x987:     85 c0                              	test eax, eax
0x989:     0f 84 91 00 00 00                  	je 0xa20 <function_980+0xa0>
0x98f:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x993:     89 e9                              	mov ecx, ebp
0x995:     eb 0a                              	jmp 0x9a1 <function_980+0x21>
; data inside code section at 0x997 -- 0x998
0x997:     90                                                 |.               |
0x998:     89 c1                              	mov ecx, eax
0x99a:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0x99d:     85 c0                              	test eax, eax
0x99f:     74 0c                              	je 0x9ad <function_980+0x2d>
0x9a1:     39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x9a4:     7d f2                              	jge 0x998 <function_980+0x18>
0x9a6:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x9a9:     85 c0                              	test eax, eax
0x9ab:     75 f4                              	jne 0x9a1 <function_980+0x21>
0x9ad:     39 e9                              	cmp ecx, ebp
0x9af:     74 6f                              	je 0xa20 <function_980+0xa0>
0x9b1:     3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0x9b4:     7c 6a                              	jl 0xa20 <function_980+0xa0>
0x9b6:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x9ba:     8d 44 24 34                        	lea eax, [esp + 0x34]
0x9be:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9c2:     89 0c 24                           	mov dword ptr [esp], ecx
0x9c5:     e8 f6 41 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x9ca:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x9ce:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x9d2:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x9d6:     8b 50 38                           	mov edx, dword ptr [eax + 0x38]
0x9d9:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x9dd:     8b 50 3c                           	mov edx, dword ptr [eax + 0x3c]
0x9e0:     8d 44 24 38                        	lea eax, [esp + 0x38]
0x9e4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9e8:     89 0c 24                           	mov dword ptr [esp], ecx
0x9eb:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x9ef:     e8 cc 41 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x9f4:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x9f8:     3b 50 3c                           	cmp edx, dword ptr [eax + 0x3c]
0x9fb:     0f 8f 59 ff ff ff                  	jg 0x95a
0xa01:     0f 8c 3e ff ff ff                  	jl 0x945 <function_945>
0xa07:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa0b:     3b 50 38                           	cmp edx, dword ptr [eax + 0x38]
0xa0e:     0f 83 46 ff ff ff                  	jae 0x95a
0xa14:     e9 2c ff ff ff                     	jmp 0x945 <function_945>
; data inside code section at 0xa19 -- 0xa20
0xa19:     8d b4 26 00 00 00 00                               |..&....         |
0xa20:     c7 44 24 0c f8 53 00 00            	mov dword ptr [esp + 0xc], 0x53f8 ; "int CAddrMan::SelectTried(int)"
0xa28:     c7 44 24 08 8c 00 00 00            	mov dword ptr [esp + 8], 0x8c
0xa30:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0xa38:     c7 04 24 88 35 00 00               	mov dword ptr [esp], 0x3588 ; "nOldest == -1 || mapInfo.count(nTemp) == 1"
0xa3f:     e8 fc ff ff ff                     	call 0xa40
; data inside code section at 0xa44 -- 0xa45
0xa44:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa45 -- 0xa46
; data inside code section at 0xa46 -- 0xa50
0xa46:     ff ff ff 90 8d b6 00 00  00 00                     |..........      |
; function: _ZN8CAddrMan10SwapRandomEjj at 0xa50 -- 0xbc7
0xa50:     55                                 	push ebp
0xa51:     57                                 	push edi
0xa52:     56                                 	push esi
0xa53:     53                                 	push ebx
0xa54:     83 ec 3c                           	sub esp, 0x3c
0xa57:     8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0xa5b:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xa5f:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xa66:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xa6a:     31 c9                              	xor ecx, ecx
0xa6c:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xa70:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xa74:     39 d6                              	cmp esi, edx
0xa76:     0f 84 11 01 00 00                  	je 0xb8d <_ZN8CAddrMan10SwapRandomEjj+0x13d>
0xa7c:     8b 93 94 00 00 00                  	mov edx, dword ptr [ebx + 0x94]
0xa82:     8b 83 98 00 00 00                  	mov eax, dword ptr [ebx + 0x98]
0xa88:     29 d0                              	sub eax, edx
0xa8a:     c1 f8 02                           	sar eax, 2
0xa8d:     39 c6                              	cmp esi, eax
0xa8f:     0f 83 37 01 00 00                  	jae 0xbcc <function_bcc>
0xa95:     39 44 24 18                        	cmp dword ptr [esp + 0x18], eax
0xa99:     0f 83 2d 01 00 00                  	jae 0xbcc <function_bcc>
0xa9f:     8b 0c b2                           	mov ecx, dword ptr [edx + esi*4]
0xaa2:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xaa6:     89 4c 24 24                        	mov dword ptr [esp + 0x24], ecx
0xaaa:     8b 3c 82                           	mov edi, dword ptr [edx + eax*4]
0xaad:     8b 43 6c                           	mov eax, dword ptr [ebx + 0x6c]
0xab0:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0xab4:     85 c0                              	test eax, eax
0xab6:     0f 84 ec 00 00 00                  	je 0xba8 <_ZN8CAddrMan10SwapRandomEjj+0x158>
0xabc:     8d 53 68                           	lea edx, [ebx + 0x68]
0xabf:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xac3:     89 d5                              	mov ebp, edx
0xac5:     89 c2                              	mov edx, eax
0xac7:     eb 10                              	jmp 0xad9 <_ZN8CAddrMan10SwapRandomEjj+0x89>
; data inside code section at 0xac9 -- 0xad0
0xac9:     8d b4 26 00 00 00 00                               |..&....         |
0xad0:     89 d5                              	mov ebp, edx
0xad2:     8b 52 08                           	mov edx, dword ptr [edx + 8]
0xad5:     85 d2                              	test edx, edx
0xad7:     74 0c                              	je 0xae5 <_ZN8CAddrMan10SwapRandomEjj+0x95>
0xad9:     3b 4a 10                           	cmp ecx, dword ptr [edx + 0x10]
0xadc:     7e f2                              	jle 0xad0 <_ZN8CAddrMan10SwapRandomEjj+0x80>
0xade:     8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0xae1:     85 d2                              	test edx, edx
0xae3:     75 f4                              	jne 0xad9 <_ZN8CAddrMan10SwapRandomEjj+0x89>
0xae5:     39 6c 24 1c                        	cmp dword ptr [esp + 0x1c], ebp
0xae9:     0f 84 b9 00 00 00                  	je 0xba8 <_ZN8CAddrMan10SwapRandomEjj+0x158>
0xaef:     3b 4d 10                           	cmp ecx, dword ptr [ebp + 0x10]
0xaf2:     0f 8c b0 00 00 00                  	jl 0xba8 <_ZN8CAddrMan10SwapRandomEjj+0x158>
0xaf8:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xafc:     eb 0b                              	jmp 0xb09 <_ZN8CAddrMan10SwapRandomEjj+0xb9>
; data inside code section at 0xafe -- 0xb00
0xafe:     66 90                                              |f.              |
0xb00:     89 c2                              	mov edx, eax
0xb02:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xb05:     85 c0                              	test eax, eax
0xb07:     74 0c                              	je 0xb15 <_ZN8CAddrMan10SwapRandomEjj+0xc5>
0xb09:     3b 78 10                           	cmp edi, dword ptr [eax + 0x10]
0xb0c:     7e f2                              	jle 0xb00 <_ZN8CAddrMan10SwapRandomEjj+0xb0>
0xb0e:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xb11:     85 c0                              	test eax, eax
0xb13:     75 f4                              	jne 0xb09 <_ZN8CAddrMan10SwapRandomEjj+0xb9>
0xb15:     39 54 24 1c                        	cmp dword ptr [esp + 0x1c], edx
0xb19:     74 05                              	je 0xb20 <_ZN8CAddrMan10SwapRandomEjj+0xd0>
0xb1b:     3b 7a 10                           	cmp edi, dword ptr [edx + 0x10]
0xb1e:     7d 28                              	jge 0xb48 <_ZN8CAddrMan10SwapRandomEjj+0xf8>
0xb20:     c7 44 24 0c c0 53 00 00            	mov dword ptr [esp + 0xc], 0x53c0 ; "void CAddrMan::SwapRandom(unsigned int, unsigned int)"
0xb28:     c7 44 24 08 75 00 00 00            	mov dword ptr [esp + 8], 0x75
0xb30:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0xb38:     c7 04 24 a9 2c 00 00               	mov dword ptr [esp], 0x2ca9 ; "mapInfo.count(nId2) == 1"
0xb3f:     e8 fc ff ff ff                     	call 0xb40
0xb44:     8d 74 26 00                        	lea esi, [esi]
0xb48:     8d 7b 64                           	lea edi, [ebx + 0x64]
0xb4b:     8d 44 24 24                        	lea eax, [esp + 0x24]
0xb4f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb53:     89 3c 24                           	mov dword ptr [esp], edi
0xb56:     e8 65 40 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0xb5b:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0xb5f:     89 48 4c                           	mov dword ptr [eax + 0x4c], ecx
0xb62:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xb66:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb6a:     89 3c 24                           	mov dword ptr [esp], edi
0xb6d:     e8 4e 40 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0xb72:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xb76:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0xb7a:     89 70 4c                           	mov dword ptr [eax + 0x4c], esi
0xb7d:     8b 83 94 00 00 00                  	mov eax, dword ptr [ebx + 0x94]
0xb83:     89 14 b0                           	mov dword ptr [eax + esi*4], edx
0xb86:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xb8a:     89 14 88                           	mov dword ptr [eax + ecx*4], edx
0xb8d:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xb91:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb98:     75 56                              	jne 0xbf0 <function_bf0>
0xb9a:     83 c4 3c                           	add esp, 0x3c
0xb9d:     5b                                 	pop ebx
0xb9e:     5e                                 	pop esi
0xb9f:     5f                                 	pop edi
0xba0:     5d                                 	pop ebp
0xba1:     c3                                 	ret 
; data inside code section at 0xba2 -- 0xba8
0xba2:     8d b6 00 00 00 00                                  |......          |
0xba8:     c7 44 24 0c c0 53 00 00            	mov dword ptr [esp + 0xc], 0x53c0 ; "void CAddrMan::SwapRandom(unsigned int, unsigned int)"
0xbb0:     c7 44 24 08 74 00 00 00            	mov dword ptr [esp + 8], 0x74
0xbb8:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0xbc0:     c7 04 24 90 2c 00 00               	mov dword ptr [esp], 0x2c90 ; "mapInfo.count(nId1) == 1"
; data inside code section at 0xbc7 -- 0xbc8
0xbc7:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xbc8 -- 0xbc9
; data inside code section at 0xbc9 -- 0xbcc
0xbc9:     ff ff ff                                           |...             |
; function: function_bcc at 0xbcc -- 0xbf0
0xbcc:     c7 44 24 0c c0 53 00 00            	mov dword ptr [esp + 0xc], 0x53c0 ; "void CAddrMan::SwapRandom(unsigned int, unsigned int)"
0xbd4:     c7 44 24 08 6f 00 00 00            	mov dword ptr [esp + 8], 0x6f
0xbdc:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0xbe4:     c7 04 24 b4 35 00 00               	mov dword ptr [esp], 0x35b4 ; "nRndPos1 < vRandom.size() && nRndPos2 < vRandom.size()"
0xbeb:     e8 fc ff ff ff                     	call 0xbec
; function: function_bf0 at 0xbf0 -- 0xbf1
; dynamically linked function: __stack_chk_fail at 0xbf1 -- 0xbf2
; data inside code section at 0xbf2 -- 0xc00
0xbf2:     ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN8CAddrMan8GetAddr_ERSt6vectorI8CAddressSaIS1_EE at 0xc00 -- 0xc7a
0xc00:     55                                 	push ebp
0xc01:     ba 1f 85 eb 51                     	mov edx, 0x51eb851f
0xc06:     57                                 	push edi
0xc07:     56                                 	push esi
0xc08:     53                                 	push ebx
0xc09:     83 ec 3c                           	sub esp, 0x3c
0xc0c:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xc10:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc16:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xc1a:     31 c0                              	xor eax, eax
0xc1c:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xc20:     c7 44 24 18 c4 09 00 00            	mov dword ptr [esp + 0x18], 0x9c4
0xc28:     8b 8b 98 00 00 00                  	mov ecx, dword ptr [ebx + 0x98]
0xc2e:     8b bb 94 00 00 00                  	mov edi, dword ptr [ebx + 0x94]
0xc34:     89 c8                              	mov eax, ecx
0xc36:     29 f8                              	sub eax, edi
0xc38:     c1 f8 02                           	sar eax, 2
0xc3b:     6b c0 17                           	imul eax, eax, 0x17
0xc3e:     f7 e2                              	mul edx
0xc40:     c1 ea 05                           	shr edx, 5
0xc43:     81 fa c4 09 00 00                  	cmp edx, 0x9c4
0xc49:     0f 4f 54 24 18                     	cmovg edx, dword ptr [esp + 0x18]
0xc4e:     85 d2                              	test edx, edx
0xc50:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xc54:     0f 84 3b 01 00 00                  	je 0xd95 <function_d95>
0xc5a:     8d 43 68                           	lea eax, [ebx + 0x68]
0xc5d:     31 ed                              	xor ebp, ebp
0xc5f:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xc63:     8d 43 64                           	lea eax, [ebx + 0x64]
0xc66:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xc6a:     8d b6 00 00 00 00                  	lea esi, [esi]
0xc70:     29 f9                              	sub ecx, edi
0xc72:     c1 f9 02                           	sar ecx, 2
0xc75:     29 e9                              	sub ecx, ebp
0xc77:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xc7a -- 0xc7b
0xc7a:     e8                                                 |.               |
; dynamically linked function: _Z10GetRandInti at 0xc7b -- 0xc7c
; data inside code section at 0xc7c -- 0xc7e
0xc7c:     ff ff                                              |..              |
; function: function_c7e at 0xc7e -- 0xd95
0xc7e:     ff 89 6c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb94]
0xc84:     1c 24                              	sbb al, 0x24
0xc86:     01 e8                              	add eax, ebp
0xc88:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xc8c:     e8 bf fd ff ff                     	call 0xa50 <_ZN8CAddrMan10SwapRandomEjj>
0xc91:     8b 43 6c                           	mov eax, dword ptr [ebx + 0x6c]
0xc94:     8b 93 94 00 00 00                  	mov edx, dword ptr [ebx + 0x94]
0xc9a:     85 c0                              	test eax, eax
0xc9c:     0f 84 b6 00 00 00                  	je 0xd58 <function_c7e+0xda>
0xca2:     8d 3c aa                           	lea edi, [edx + ebp*4]
0xca5:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xca9:     8b 17                              	mov edx, dword ptr [edi]
0xcab:     eb 0c                              	jmp 0xcb9 <function_c7e+0x3b>
; data inside code section at 0xcad -- 0xcb0
0xcad:     8d 76 00                                           |.v.             |
0xcb0:     89 c1                              	mov ecx, eax
0xcb2:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xcb5:     85 c0                              	test eax, eax
0xcb7:     74 0c                              	je 0xcc5 <function_c7e+0x47>
0xcb9:     3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0xcbc:     7e f2                              	jle 0xcb0 <function_c7e+0x32>
0xcbe:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xcc1:     85 c0                              	test eax, eax
0xcc3:     75 f4                              	jne 0xcb9 <function_c7e+0x3b>
0xcc5:     39 4c 24 14                        	cmp dword ptr [esp + 0x14], ecx
0xcc9:     0f 84 89 00 00 00                  	je 0xd58 <function_c7e+0xda>
0xccf:     3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0xcd2:     0f 8c 80 00 00 00                  	jl 0xd58 <function_c7e+0xda>
0xcd8:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xcdc:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xce0:     89 04 24                           	mov dword ptr [esp], eax
0xce3:     e8 d8 3e 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0xce8:     8b 56 04                           	mov edx, dword ptr [esi + 4]
0xceb:     3b 56 08                           	cmp edx, dword ptr [esi + 8]
0xcee:     0f 84 88 00 00 00                  	je 0xd7c <function_c7e+0xfe>
0xcf4:     31 c9                              	xor ecx, ecx
0xcf6:     85 d2                              	test edx, edx
0xcf8:     74 3d                              	je 0xd37 <function_c7e+0xb9>
0xcfa:     8b 08                              	mov ecx, dword ptr [eax]
0xcfc:     89 0a                              	mov dword ptr [edx], ecx
0xcfe:     8b 48 04                           	mov ecx, dword ptr [eax + 4]
0xd01:     89 4a 04                           	mov dword ptr [edx + 4], ecx
0xd04:     8b 48 08                           	mov ecx, dword ptr [eax + 8]
0xd07:     89 4a 08                           	mov dword ptr [edx + 8], ecx
0xd0a:     8b 48 0c                           	mov ecx, dword ptr [eax + 0xc]
0xd0d:     89 4a 0c                           	mov dword ptr [edx + 0xc], ecx
0xd10:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0xd13:     89 4a 10                           	mov dword ptr [edx + 0x10], ecx
0xd16:     8b 48 14                           	mov ecx, dword ptr [eax + 0x14]
0xd19:     89 4a 14                           	mov dword ptr [edx + 0x14], ecx
0xd1c:     8b 48 18                           	mov ecx, dword ptr [eax + 0x18]
0xd1f:     89 4a 18                           	mov dword ptr [edx + 0x18], ecx
0xd22:     8b 48 1c                           	mov ecx, dword ptr [eax + 0x1c]
0xd25:     89 4a 1c                           	mov dword ptr [edx + 0x1c], ecx
0xd28:     8b 48 20                           	mov ecx, dword ptr [eax + 0x20]
0xd2b:     89 4a 20                           	mov dword ptr [edx + 0x20], ecx
0xd2e:     8b 40 24                           	mov eax, dword ptr [eax + 0x24]
0xd31:     89 42 24                           	mov dword ptr [edx + 0x24], eax
0xd34:     8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0xd37:     83 c1 28                           	add ecx, 0x28
0xd3a:     83 c5 01                           	add ebp, 1
0xd3d:     3b 6c 24 18                        	cmp ebp, dword ptr [esp + 0x18]
0xd41:     89 4e 04                           	mov dword ptr [esi + 4], ecx
0xd44:     74 4f                              	je 0xd95 <function_d95>
0xd46:     8b bb 94 00 00 00                  	mov edi, dword ptr [ebx + 0x94]
0xd4c:     8b 8b 98 00 00 00                  	mov ecx, dword ptr [ebx + 0x98]
0xd52:     e9 19 ff ff ff                     	jmp 0xc70
; data inside code section at 0xd57 -- 0xd58
0xd57:     90                                                 |.               |
0xd58:     c7 44 24 0c a0 54 00 00            	mov dword ptr [esp + 0xc], 0x54a0 ; "void CAddrMan::GetAddr_(std::vector<CAddress>&)"
0xd60:     c7 44 24 08 f9 01 00 00            	mov dword ptr [esp + 8], 0x1f9
0xd68:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0xd70:     c7 04 24 ec 35 00 00               	mov dword ptr [esp], 0x35ec ; "mapInfo.count(vRandom[n]) == 1"
0xd77:     e8 fc ff ff ff                     	call 0xd78
0xd7c:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xd80:     83 c5 01                           	add ebp, 1
0xd83:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xd87:     89 34 24                           	mov dword ptr [esp], esi
0xd8a:     e8 d1 31 00 00                     	call 0x3f60 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0xd8f:     3b 6c 24 18                        	cmp ebp, dword ptr [esp + 0x18]
0xd93:     75 b1                              	jne 0xd46
; function: function_d95 at 0xd95 -- 0xdaa
0xd95:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xd99:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xda0:     75 08                              	jne 0xdaa <function_d95+0x14>
0xda2:     83 c4 3c                           	add esp, 0x3c
0xda5:     5b                                 	pop ebx
0xda6:     5e                                 	pop esi
0xda7:     5f                                 	pop edi
0xda8:     5d                                 	pop ebp
0xda9:     c3                                 	ret 
; data inside code section at 0xdaa -- 0xdab
0xdaa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdab -- 0xdac
; data inside code section at 0xdac -- 0xdb0
0xdac:     ff ff ff 90                                        |....            |
; function: _ZN8CAddrMan9ShrinkNewEi at 0xdb0 -- 0xe71
0xdb0:     55                                 	push ebp
0xdb1:     57                                 	push edi
0xdb2:     56                                 	push esi
0xdb3:     53                                 	push ebx
0xdb4:     83 ec 4c                           	sub esp, 0x4c
0xdb7:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xdbb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xdc1:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xdc5:     31 c0                              	xor eax, eax
0xdc7:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xdcb:     85 d2                              	test edx, edx
0xdcd:     0f 88 eb 03 00 00                  	js 0x11be <function_11be>
0xdd3:     8b 8e b4 00 00 00                  	mov ecx, dword ptr [esi + 0xb4]
0xdd9:     8b 86 b8 00 00 00                  	mov eax, dword ptr [esi + 0xb8]
0xddf:     29 c8                              	sub eax, ecx
0xde1:     c1 f8 03                           	sar eax, 3
0xde4:     69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0xdea:     39 c2                              	cmp edx, eax
0xdec:     0f 83 cc 03 00 00                  	jae 0x11be <function_11be>
0xdf2:     8d 04 52                           	lea eax, [edx + edx*2]
0xdf5:     8d 04 c1                           	lea eax, [ecx + eax*8]
0xdf8:     8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0xdfb:     89 c5                              	mov ebp, eax
0xdfd:     83 c5 04                           	add ebp, 4
0xe00:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xe04:     39 eb                              	cmp ebx, ebp
0xe06:     0f 84 98 00 00 00                  	je 0xea4 <function_ea4>
0xe0c:     8d 4e 64                           	lea ecx, [esi + 0x64]
0xe0f:     8d 7e 68                           	lea edi, [esi + 0x68]
0xe12:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0xe16:     66 90                              	nop 
0xe18:     8b 46 6c                           	mov eax, dword ptr [esi + 0x6c]
0xe1b:     85 c0                              	test eax, eax
0xe1d:     0f 84 45 01 00 00                  	je 0xf68 <function_f68>
0xe23:     8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0xe26:     89 f9                              	mov ecx, edi
0xe28:     eb 0f                              	jmp 0xe39 <_ZN8CAddrMan9ShrinkNewEi+0x89>
; data inside code section at 0xe2a -- 0xe30
0xe2a:     8d b6 00 00 00 00                                  |......          |
0xe30:     89 c1                              	mov ecx, eax
0xe32:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xe35:     85 c0                              	test eax, eax
0xe37:     74 0c                              	je 0xe45 <_ZN8CAddrMan9ShrinkNewEi+0x95>
0xe39:     39 50 10                           	cmp dword ptr [eax + 0x10], edx
0xe3c:     7d f2                              	jge 0xe30 <_ZN8CAddrMan9ShrinkNewEi+0x80>
0xe3e:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xe41:     85 c0                              	test eax, eax
0xe43:     75 f4                              	jne 0xe39 <_ZN8CAddrMan9ShrinkNewEi+0x89>
0xe45:     39 cf                              	cmp edi, ecx
0xe47:     0f 84 1b 01 00 00                  	je 0xf68 <function_f68>
0xe4d:     39 51 10                           	cmp dword ptr [ecx + 0x10], edx
0xe50:     0f 8f 12 01 00 00                  	jg 0xf68 <function_f68>
0xe56:     8d 4b 10                           	lea ecx, [ebx + 0x10]
0xe59:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0xe5d:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xe61:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0xe65:     89 0c 24                           	mov dword ptr [esp], ecx
0xe68:     e8 53 3d 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0xe6d:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
; data inside code section at 0xe71 -- 0xe72
0xe71:     e8                                                 |.               |
; dynamically linked function: _Z15GetAdjustedTimev at 0xe72 -- 0xe73
; data inside code section at 0xe73 -- 0xe96
0xe73:     ff ff ff 89 44 24 04 8b  44 24 14 89 54 24 08 89   |....D$..D$..T$..|
0xe83:     04 24 e8 86 f2 ff ff 84  c0 0f 85 4c 02 00 00 89   |.$.........L....|
0xe93:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xe96 -- 0xe97
; data inside code section at 0xe97 -- 0xe9d
0xe97:     ff ff ff 39 e8 89                                  |...9..          |
; function: function_e9d at 0xe9d -- 0xe9e
0xe9d:     c3                                 	ret 
; data inside code section at 0xe9e -- 0xea4
0xe9e:     0f 85 74 ff ff ff                                  |..t...          |
; function: function_ea4 at 0xea4 -- 0xeae
0xea4:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xea8:     8b 41 14                           	mov eax, dword ptr [ecx + 0x14]
0xeab:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xeae -- 0xeaf
0xeae:     e8                                                 |.               |
; dynamically linked function: _Z10GetRandInti at 0xeaf -- 0xeb0
; data inside code section at 0xeb0 -- 0xeb2
0xeb0:     ff ff                                              |..              |
; function: function_eb2 at 0xeb2 -- 0xebb
0xeb2:     ff 8b 4c 24 20 89                  	dec dword ptr [ebx - 0x76dfdbb4]
0xeb8:     c2 8b 41                           	ret 0x418b
; data inside code section at 0xebb -- 0xec4
0xebb:     14 89 54 24 10 89 04 24  e8                        |..T$...$.       |
; dynamically linked function: _Z10GetRandInti at 0xec4 -- 0xec5
; data inside code section at 0xec5 -- 0xed7
0xec5:     ff ff ff 8b 4c 24 20 89  44 24 14 8b 41 14 89 04   |....L$ .D$..A...|
0xed5:     24 e8                                              |$.              |
; dynamically linked function: _Z10GetRandInti at 0xed7 -- 0xed8
; data inside code section at 0xed8 -- 0xeea
0xed8:     ff ff ff 8b 4c 24 20 89  44 24 1c 8b 41 14 89 04   |....L$ .D$..A...|
0xee8:     24 e8                                              |$.              |
; dynamically linked function: _Z10GetRandInti at 0xeea -- 0xeeb
; data inside code section at 0xeeb -- 0xeee
0xeeb:     ff ff ff                                           |...             |
; function: function_eee at 0xeee -- 0xf25
0xeee:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xef2:     c7 44 24 38 ff ff ff ff            	mov dword ptr [esp + 0x38], 0xffffffff
0xefa:     8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0xefe:     8b 79 0c                           	mov edi, dword ptr [ecx + 0xc]
0xf01:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xf05:     39 ef                              	cmp edi, ebp
0xf07:     0f 84 23 01 00 00                  	je 0x1030 <function_1030>
0xf0d:     8d 4e 68                           	lea ecx, [esi + 0x68]
0xf10:     31 db                              	xor ebx, ebx
0xf12:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0xf16:     8d 4e 64                           	lea ecx, [esi + 0x64]
0xf19:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0xf1d:     89 d6                              	mov esi, edx
0xf1f:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xf23:     eb 2a                              	jmp 0xf4f <function_f4f>
; data inside code section at 0xf25 -- 0xf28
0xf25:     8d 76 00                                           |.v.             |
; function: function_f28 at 0xf28 -- 0xf3a
0xf28:     3b 5c 24 14                        	cmp ebx, dword ptr [esp + 0x14]
0xf2c:     74 25                              	je 0xf53
0xf2e:     3b 5c 24 1c                        	cmp ebx, dword ptr [esp + 0x1c]
0xf32:     74 1f                              	je 0xf53
0xf34:     3b 5c 24 28                        	cmp ebx, dword ptr [esp + 0x28]
0xf38:     74 19                              	je 0xf53
; function: function_f3a at 0xf3a -- 0xf40
0xf3a:     89 3c 24                           	mov dword ptr [esp], edi
0xf3d:     83 c3 01                           	add ebx, 1
; data inside code section at 0xf40 -- 0xf41
0xf40:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xf41 -- 0xf42
; data inside code section at 0xf42 -- 0xf4f
0xf42:     ff ff ff 39 e8 89 c7 0f  84 dd 00 00 00            |...9.........   |
; function: function_f4f at 0xf4f -- 0xf63
0xf4f:     39 f3                              	cmp ebx, esi
0xf51:     75 d5                              	jne 0xf28 <function_f28>
0xf53:     83 7c 24 38 ff                     	cmp dword ptr [esp + 0x38], -1
0xf58:     75 36                              	jne 0xf90 <function_f90>
0xf5a:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xf5d:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0xf61:     eb d7                              	jmp 0xf3a <function_f3a>
; data inside code section at 0xf63 -- 0xf68
0xf63:     90 8d 74 26 00                                     |..t&.           |
; function: function_f68 at 0xf68 -- 0xf87
0xf68:     c7 44 24 0c 17 54 00 00            	mov dword ptr [esp + 0xc], 0x5417 ; "int CAddrMan::ShrinkNew(int)"
0xf70:     c7 44 24 08 9e 00 00 00            	mov dword ptr [esp + 8], 0x9e
0xf78:     c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0xf80:     c7 04 24 c2 2c 00 00               	mov dword ptr [esp], 0x2cc2 ; "mapInfo.count(*it)"
; data inside code section at 0xf87 -- 0xf88
0xf87:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xf88 -- 0xf89
; data inside code section at 0xf89 -- 0xf90
0xf89:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_f90 at 0xf90 -- 0x1027
0xf90:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf94:     8b 42 6c                           	mov eax, dword ptr [edx + 0x6c]
0xf97:     85 c0                              	test eax, eax
0xf99:     74 6d                              	je 0x1008 <function_f90+0x78>
0xf9b:     8b 57 10                           	mov edx, dword ptr [edi + 0x10]
0xf9e:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0xfa2:     eb 0d                              	jmp 0xfb1 <function_f90+0x21>
; data inside code section at 0xfa4 -- 0xfa8
0xfa4:     8d 74 26 00                                        |.t&.            |
0xfa8:     89 c1                              	mov ecx, eax
0xfaa:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xfad:     85 c0                              	test eax, eax
0xfaf:     74 0c                              	je 0xfbd <function_f90+0x2d>
0xfb1:     3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0xfb4:     7e f2                              	jle 0xfa8 <function_f90+0x18>
0xfb6:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xfb9:     85 c0                              	test eax, eax
0xfbb:     75 f4                              	jne 0xfb1 <function_f90+0x21>
0xfbd:     39 4c 24 18                        	cmp dword ptr [esp + 0x18], ecx
0xfc1:     74 45                              	je 0x1008 <function_f90+0x78>
0xfc3:     3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0xfc6:     7c 40                              	jl 0x1008 <function_f90+0x78>
0xfc8:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xfcc:     8d 47 10                           	lea eax, [edi + 0x10]
0xfcf:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xfd3:     89 0c 24                           	mov dword ptr [esp], ecx
0xfd6:     e8 e5 3b 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0xfdb:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xfdf:     8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0xfe2:     8d 44 24 38                        	lea eax, [esp + 0x38]
0xfe6:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xfea:     89 0c 24                           	mov dword ptr [esp], ecx
0xfed:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xff1:     e8 ca 3b 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0xff6:     8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0xffa:     3b 50 1c                           	cmp edx, dword ptr [eax + 0x1c]
0xffd:     0f 83 37 ff ff ff                  	jae 0xf3a <function_f3a>
0x1003:    e9 52 ff ff ff                     	jmp 0xf5a
0x1008:    c7 44 24 0c 17 54 00 00            	mov dword ptr [esp + 0xc], 0x5417 ; "int CAddrMan::ShrinkNew(int)"
0x1010:    c7 44 24 08 b7 00 00 00            	mov dword ptr [esp + 8], 0xb7
0x1018:    c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x1020:    c7 04 24 44 36 00 00               	mov dword ptr [esp], 0x3644 ; "nOldest == -1 || mapInfo.count(*it) == 1"
; data inside code section at 0x1027 -- 0x1028
0x1027:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1028 -- 0x1029
; data inside code section at 0x1029 -- 0x1030
0x1029:    ff ff ff 8b 74 24 24                               |....t$$         |
; function: function_1030 at 0x1030 -- 0x10d9
0x1030:    8b 46 6c                           	mov eax, dword ptr [esi + 0x6c]
0x1033:    85 c0                              	test eax, eax
0x1035:    0f 84 7f 00 00 00                  	je 0x10ba <function_1030+0x8a>
0x103b:    8d 5e 68                           	lea ebx, [esi + 0x68]
0x103e:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x1042:    89 d9                              	mov ecx, ebx
0x1044:    eb 0b                              	jmp 0x1051 <function_1030+0x21>
; data inside code section at 0x1046 -- 0x1048
0x1046:    66 90                                              |f.              |
0x1048:    89 c1                              	mov ecx, eax
0x104a:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x104d:    85 c0                              	test eax, eax
0x104f:    74 0c                              	je 0x105d <function_1030+0x2d>
0x1051:    3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0x1054:    7e f2                              	jle 0x1048 <function_1030+0x18>
0x1056:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x1059:    85 c0                              	test eax, eax
0x105b:    75 f4                              	jne 0x1051 <function_1030+0x21>
0x105d:    39 cb                              	cmp ebx, ecx
0x105f:    74 59                              	je 0x10ba <function_1030+0x8a>
0x1061:    3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0x1064:    7c 54                              	jl 0x10ba <function_1030+0x8a>
0x1066:    8d 5c 24 38                        	lea ebx, [esp + 0x38]
0x106a:    8d 7e 64                           	lea edi, [esi + 0x64]
0x106d:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1071:    89 3c 24                           	mov dword ptr [esp], edi
0x1074:    e8 47 3b 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x1079:    89 c5                              	mov ebp, eax
0x107b:    8b 40 44                           	mov eax, dword ptr [eax + 0x44]
0x107e:    83 e8 01                           	sub eax, 1
0x1081:    85 c0                              	test eax, eax
0x1083:    89 45 44                           	mov dword ptr [ebp + 0x44], eax
0x1086:    0f 84 df 00 00 00                  	je 0x116b <function_116b>
0x108c:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x1090:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1094:    89 0c 24                           	mov dword ptr [esp], ecx
0x1097:    e8 44 2d 00 00                     	call 0x3de0 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi>
0x109c:    b8 01 00 00 00                     	mov eax, 1
0x10a1:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x10a5:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10ac:    0f 85 30 01 00 00                  	jne 0x11e2 <function_11e2>
0x10b2:    83 c4 4c                           	add esp, 0x4c
0x10b5:    5b                                 	pop ebx
0x10b6:    5e                                 	pop esi
0x10b7:    5f                                 	pop edi
0x10b8:    5d                                 	pop ebp
0x10b9:    c3                                 	ret 
0x10ba:    c7 44 24 0c 17 54 00 00            	mov dword ptr [esp + 0xc], 0x5417 ; "int CAddrMan::ShrinkNew(int)"
0x10c2:    c7 44 24 08 bd 00 00 00            	mov dword ptr [esp + 8], 0xbd
0x10ca:    c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x10d2:    c7 04 24 d5 2c 00 00               	mov dword ptr [esp], 0x2cd5 ; "mapInfo.count(nOldest) == 1"
; data inside code section at 0x10d9 -- 0x10da
0x10d9:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x10da -- 0x10db
; data inside code section at 0x10db -- 0x10ef
0x10db:    ff ff ff 8b 54 24 14 8b  42 44 83 e8 01 85 c0 89   |....T$..BD......|
0x10eb:    42 44 74 20                                        |BDt             |
; function: function_10ef at 0x10ef -- 0x10f0
; data inside code section at 0x10f0 -- 0x10f7
0x10f0:    6c 24 04 89 1c 24 e8                               |l$...$.         |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x10f7 -- 0x10f8
; data inside code section at 0x10f8 -- 0x10ff
0x10f8:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x10ff -- 0x1100
; data inside code section at 0x1100 -- 0x1102
0x1100:    ff ff                                              |..              |
; function: function_1102 at 0x1102 -- 0x116b
0x1102:    ff 8b 4c 24 20 31                  	dec dword ptr [ebx + 0x3120244c]
0x1108:    c0 83 69 14 01 eb 92               	rol byte ptr [ebx - 0x14feeb97], 0x92
0x110f:    8b 86 98 00 00 00                  	mov eax, dword ptr [esi + 0x98]
0x1115:    2b 86 94 00 00 00                  	sub eax, dword ptr [esi + 0x94]
0x111b:    c1 f8 02                           	sar eax, 2
0x111e:    83 e8 01                           	sub eax, 1
0x1121:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1125:    8b 42 4c                           	mov eax, dword ptr [edx + 0x4c]
0x1128:    89 34 24                           	mov dword ptr [esp], esi
0x112b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x112f:    e8 1c f9 ff ff                     	call 0xa50 <_ZN8CAddrMan10SwapRandomEjj>
0x1134:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x1138:    83 ae 98 00 00 00 04               	sub dword ptr [esi + 0x98], 4
0x113f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1143:    8d 46 7c                           	lea eax, [esi + 0x7c]
0x1146:    89 04 24                           	mov dword ptr [esp], eax
0x1149:    e8 22 36 00 00                     	call 0x4770 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE5eraseERS2_>
0x114e:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x1152:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1156:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x115a:    89 0c 24                           	mov dword ptr [esp], ecx
0x115d:    e8 fe 2a 00 00                     	call 0x3c60 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_>
0x1162:    83 ae b0 00 00 00 01               	sub dword ptr [esi + 0xb0], 1
0x1169:    eb 84                              	jmp 0x10ef <function_10ef>
; function: function_116b at 0x116b -- 0x11be
0x116b:    8b 96 98 00 00 00                  	mov edx, dword ptr [esi + 0x98]
0x1171:    2b 96 94 00 00 00                  	sub edx, dword ptr [esi + 0x94]
0x1177:    c1 fa 02                           	sar edx, 2
0x117a:    83 ea 01                           	sub edx, 1
0x117d:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1181:    8b 45 4c                           	mov eax, dword ptr [ebp + 0x4c]
0x1184:    89 34 24                           	mov dword ptr [esp], esi
0x1187:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x118b:    e8 c0 f8 ff ff                     	call 0xa50 <_ZN8CAddrMan10SwapRandomEjj>
0x1190:    8d 46 7c                           	lea eax, [esi + 0x7c]
0x1193:    83 ae 98 00 00 00 04               	sub dword ptr [esi + 0x98], 4
0x119a:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x119e:    89 04 24                           	mov dword ptr [esp], eax
0x11a1:    e8 ca 35 00 00                     	call 0x4770 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE5eraseERS2_>
0x11a6:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x11aa:    89 3c 24                           	mov dword ptr [esp], edi
0x11ad:    e8 ae 2a 00 00                     	call 0x3c60 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_>
0x11b2:    83 ae b0 00 00 00 01               	sub dword ptr [esi + 0xb0], 1
0x11b9:    e9 ce fe ff ff                     	jmp 0x108c
; function: function_11be at 0x11be -- 0x11dd
0x11be:    c7 44 24 0c 17 54 00 00            	mov dword ptr [esp + 0xc], 0x5417 ; "int CAddrMan::ShrinkNew(int)"
0x11c6:    c7 44 24 08 98 00 00 00            	mov dword ptr [esp + 8], 0x98
0x11ce:    c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x11d6:    c7 04 24 0c 36 00 00               	mov dword ptr [esp], 0x360c ; "nUBucket >= 0 && (unsigned int)nUBucket < vvNew.size()"
; data inside code section at 0x11dd -- 0x11de
0x11dd:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11de -- 0x11df
; data inside code section at 0x11df -- 0x11e2
0x11df:    ff ff ff                                           |...             |
; function: function_11e2 at 0x11e2 -- 0x11e3
; dynamically linked function: __stack_chk_fail at 0x11e3 -- 0x11e4
; data inside code section at 0x11e4 -- 0x11f0
0x11e4:    ff ff ff 90 90 8d b4 26  00 00 00 00               |.......&....    |
; function: _ZN8CAddrMan6CreateERK8CAddressRK8CNetAddrPi at 0x11f0 -- 0x1320
0x11f0:    55                                 	push ebp
0x11f1:    57                                 	push edi
0x11f2:    56                                 	push esi
0x11f3:    53                                 	push ebx
0x11f4:    81 ec 9c 00 00 00                  	sub esp, 0x9c
0x11fa:    8b ac 24 b0 00 00 00               	mov ebp, dword ptr [esp + 0xb0]
0x1201:    8b 84 24 bc 00 00 00               	mov eax, dword ptr [esp + 0xbc]
0x1208:    8b 9c 24 b4 00 00 00               	mov ebx, dword ptr [esp + 0xb4]
0x120f:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1216:    89 94 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], edx
0x121d:    31 d2                              	xor edx, edx
0x121f:    8d 54 24 24                        	lea edx, [esp + 0x24]
0x1223:    8b b4 24 b8 00 00 00               	mov esi, dword ptr [esp + 0xb8]
0x122a:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x122e:    8b 45 60                           	mov eax, dword ptr [ebp + 0x60]
0x1231:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1235:    83 c0 01                           	add eax, 1
0x1238:    89 45 60                           	mov dword ptr [ebp + 0x60], eax
0x123b:    8d 45 64                           	lea eax, [ebp + 0x64]
0x123e:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1242:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x1246:    89 04 24                           	mov dword ptr [esp], eax
0x1249:    e8 72 39 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x124e:    8b 13                              	mov edx, dword ptr [ebx]
0x1250:    b9 14 00 00 00                     	mov ecx, 0x14
0x1255:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x1259:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x125c:    89 c7                              	mov edi, eax
0x125e:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1262:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x1265:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x1269:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x126c:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x1270:    8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x1273:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x1277:    8b 53 14                           	mov edx, dword ptr [ebx + 0x14]
0x127a:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x127e:    8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x1281:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x1285:    8b 53 1c                           	mov edx, dword ptr [ebx + 0x1c]
0x1288:    89 54 24 44                        	mov dword ptr [esp + 0x44], edx
0x128c:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x128f:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x1293:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x1296:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x129a:    8b 16                              	mov edx, dword ptr [esi]
0x129c:    89 54 24 50                        	mov dword ptr [esp + 0x50], edx
0x12a0:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x12a3:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x12a7:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x12aa:    89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x12ae:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x12b1:    8d 74 24 28                        	lea esi, [esp + 0x28]
0x12b5:    89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x12b9:    f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x12bb:    8d b5 80 00 00 00                  	lea esi, [ebp + 0x80]
0x12c1:    c7 40 20 00 00 00 00               	mov dword ptr [eax + 0x20], 0
0x12c8:    89 f1                              	mov ecx, esi
0x12ca:    c7 40 24 00 00 00 00               	mov dword ptr [eax + 0x24], 0
0x12d1:    c7 40 38 00 00 00 00               	mov dword ptr [eax + 0x38], 0
0x12d8:    c7 40 3c 00 00 00 00               	mov dword ptr [eax + 0x3c], 0
0x12df:    c7 40 40 00 00 00 00               	mov dword ptr [eax + 0x40], 0
0x12e6:    c7 40 44 00 00 00 00               	mov dword ptr [eax + 0x44], 0
0x12ed:    c7 40 4c ff ff ff ff               	mov dword ptr [eax + 0x4c], 0xffffffff
0x12f4:    8b 95 84 00 00 00                  	mov edx, dword ptr [ebp + 0x84]
0x12fa:    c6 40 48 00                        	mov byte ptr [eax + 0x48], 0
0x12fe:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1302:    89 1c 24                           	mov dword ptr [esp], ebx
0x1305:    e8 f6 ec ff ff                     	call 0
0x130a:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x130e:    39 fe                              	cmp esi, edi
0x1310:    0f 84 aa 00 00 00                  	je 0x13c0 <function_13c0>
0x1316:    8d 47 10                           	lea eax, [edi + 0x10]
0x1319:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x131d:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1320 -- 0x1321
0x1320:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1321 -- 0x1322
; data inside code section at 0x1322 -- 0x132d
0x1322:    ff ff ff 84 c0 0f 85 93  00 00 00                  |...........     |
; function: function_132d at 0x132d -- 0x13c0
0x132d:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1331:    8d 54 24 24                        	lea edx, [esp + 0x24]
0x1335:    89 47 20                           	mov dword ptr [edi + 0x20], eax
0x1338:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x133c:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1340:    89 04 24                           	mov dword ptr [esp], eax
0x1343:    e8 78 38 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x1348:    8b 95 98 00 00 00                  	mov edx, dword ptr [ebp + 0x98]
0x134e:    89 d1                              	mov ecx, edx
0x1350:    2b 8d 94 00 00 00                  	sub ecx, dword ptr [ebp + 0x94]
0x1356:    c1 f9 02                           	sar ecx, 2
0x1359:    3b 95 9c 00 00 00                  	cmp edx, dword ptr [ebp + 0x9c]
0x135f:    89 48 4c                           	mov dword ptr [eax + 0x4c], ecx
0x1362:    0f 84 b0 00 00 00                  	je 0x1418 <function_1418>
0x1368:    85 d2                              	test edx, edx
0x136a:    74 06                              	je 0x1372 <function_132d+0x45>
0x136c:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1370:    89 02                              	mov dword ptr [edx], eax
0x1372:    83 c2 04                           	add edx, 4
0x1375:    89 95 98 00 00 00                  	mov dword ptr [ebp + 0x98], edx
0x137b:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x137f:    85 c0                              	test eax, eax
0x1381:    74 0a                              	je 0x138d <function_132d+0x60>
0x1383:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1387:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x138b:    89 02                              	mov dword ptr [edx], eax
0x138d:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x1391:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x1395:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1399:    89 14 24                           	mov dword ptr [esp], edx
0x139c:    e8 1f 38 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x13a1:    8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0x13a8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13af:    0f 85 82 00 00 00                  	jne 0x1437 <function_1437>
0x13b5:    81 c4 9c 00 00 00                  	add esp, 0x9c
0x13bb:    5b                                 	pop ebx
0x13bc:    5e                                 	pop esi
0x13bd:    5f                                 	pop edi
0x13be:    5d                                 	pop ebp
0x13bf:    c3                                 	ret 
; function: function_13c0 at 0x13c0 -- 0x1417
0x13c0:    8b 03                              	mov eax, dword ptr [ebx]
0x13c2:    c7 84 24 88 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x88], 0
0x13cd:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x13d1:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x13d4:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x13d8:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x13db:    89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x13e2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13e5:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x13e9:    89 84 24 84 00 00 00               	mov dword ptr [esp + 0x84], eax
0x13f0:    8d 44 24 78                        	lea eax, [esp + 0x78]
0x13f4:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x13f8:    8d 45 7c                           	lea eax, [ebp + 0x7c]
0x13fb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13ff:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1403:    89 04 24                           	mov dword ptr [esp], eax
0x1406:    e8 c5 3a 00 00                     	call 0x4ed0 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_>
0x140b:    83 ec 04                           	sub esp, 4
0x140e:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x1412:    e9 16 ff ff ff                     	jmp 0x132d <function_132d>
; data inside code section at 0x1417 -- 0x1418
0x1417:    90                                                 |.               |
; function: function_1418 at 0x1418 -- 0x1437
0x1418:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x141c:    81 c5 94 00 00 00                  	add ebp, 0x94
0x1422:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1426:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x142a:    89 2c 24                           	mov dword ptr [esp], ebp
0x142d:    e8 be 25 00 00                     	call 0x39f0 <_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi>
0x1432:    e9 44 ff ff ff                     	jmp 0x137b
; function: function_1437 at 0x1437 -- 0x1438
; dynamically linked function: __stack_chk_fail at 0x1438 -- 0x1439
; data inside code section at 0x1439 -- 0x1440
0x1439:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: _ZNK9CAddrInfo12GetNewBucketERKSt6vectorIhSaIhEERK8CNetAddr at 0x1440 -- 0x14ca
0x1440:    55                                 	push ebp
0x1441:    57                                 	push edi
0x1442:    56                                 	push esi
0x1443:    53                                 	push ebx
0x1444:    81 ec fc 00 00 00                  	sub esp, 0xfc
0x144a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1450:    89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0x1457:    31 c0                              	xor eax, eax
0x1459:    8b 84 24 10 01 00 00               	mov eax, dword ptr [esp + 0x110]
0x1460:    8d 54 24 68                        	lea edx, [esp + 0x68]
0x1464:    8b 9c 24 14 01 00 00               	mov ebx, dword ptr [esp + 0x114]
0x146b:    8b b4 24 18 01 00 00               	mov esi, dword ptr [esp + 0x118]
0x1472:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x147a:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1482:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x148a:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x1492:    c7 44 24 44 04 00 00 00            	mov dword ptr [esp + 0x44], 4
0x149a:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x14a2:    66 c7 44 24 40 00 00               	mov word ptr [esp + 0x40], 0
0x14a9:    66 c7 44 24 42 05 00               	mov word ptr [esp + 0x42], 5
0x14b0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14b4:    89 14 24                           	mov dword ptr [esp], edx
0x14b7:    e8 fc ff ff ff                     	call 0x14b8
0x14bc:    83 ec 04                           	sub esp, 4
0x14bf:    8d 44 24 74                        	lea eax, [esp + 0x74]
0x14c3:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x14c7:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14ca -- 0x14cb
0x14ca:    e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr8GetGroupEv at 0x14cb -- 0x14cc
; data inside code section at 0x14cc -- 0x14f0
0x14cc:    ff ff ff 8b 43 04 83 ec  04 2b 03 8d 74 24 30 c7   |....C....+..t$0.|
0x14dc:    44 24 08 00 00 00 00 89  44 24 04 89 34 24 e8 f1   |D$......D$..4$..|
0x14ec:    3b 00 00 8b                                        |;...            |
; function: function_14f0 at 0x14f0 -- 0x14f8
0x14f0:    53                                 	push ebx
0x14f1:    04 8b                              	add al, 0x8b
0x14f3:    03 39                              	add edi, dword ptr [ecx]
0x14f5:    c2 74 27                           	ret 0x2774
; data inside code section at 0x14f8 -- 0x14f9
0x14f8:    29                                                 |)               |
; function: function_14f9 at 0x14f9 -- 0x14fc
0x14f9:    c2 0f 88                           	ret 0x880f
; function: function_14fc at 0x14fc -- 0x1504
0x14fc:    9b                                 	wait 
0x14fd:    04 00                              	add al, 0
0x14ff:    00 01                              	add byte ptr [ecx], al
0x1501:    c2 89 44                           	ret 0x4489
; data inside code section at 0x1504 -- 0x1544
0x1504:    24 08 8b 44 24 34 c6 44  24 10 00 89 54 24 0c 89   |$..D$4.D$...T$..|
0x1514:    34 24 89 44 24 04 e8 f1  2c 00 00 8b 44 24 6c 2b   |4$.D$...,...D$l+|
0x1524:    44 24 68 c7 44 24 08 00  00 00 00 89 34 24 89 44   |D$h.D$......4$.D|
0x1534:    24 04 e8 a5 3b 00 00 8b  54 24 6c 8b 44 24 68 39   |$...;...T$l.D$h9|
; function: function_1544 at 0x1544 -- 0x1547
0x1544:    c2 74 27                           	ret 0x2774
; data inside code section at 0x1547 -- 0x1548
0x1547:    29                                                 |)               |
; function: function_1548 at 0x1548 -- 0x154b
0x1548:    c2 0f 88                           	ret 0x880f
; function: function_154b at 0x154b -- 0x1553
0x154b:    4c                                 	dec esp
0x154c:    04 00                              	add al, 0
0x154e:    00 01                              	add byte ptr [ecx], al
0x1550:    c2 89 44                           	ret 0x4489
; data inside code section at 0x1553 -- 0x1591
0x1553:    24 08 8b 44 24 34 c6 44  24 10 00 89 54 24 0c 89   |$..D$4.D$...T$..|
0x1563:    34 24 89 44 24 04 e8 a2  2c 00 00 8b 44 24 78 2b   |4$.D$...,...D$x+|
0x1573:    44 24 74 c7 44 24 08 00  00 00 00 89 34 24 89 44   |D$t.D$......4$.D|
0x1583:    24 04 e8 56 3b 00 00 8b  54 24 78 8b 44 24         |$..V;...T$x.D$  |
; function: function_1591 at 0x1591 -- 0x1641
0x1591:    74 39                              	je 0x15cc <function_1591+0x3b>
0x1593:    c2 74 27                           	ret 0x2774
0x1596:    29 c2                              	sub edx, eax
0x1598:    0f 88 fd 03 00 00                  	js 0x199b <function_199b>
0x159e:    01 c2                              	add edx, eax
0x15a0:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x15a4:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x15a8:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x15ad:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x15b1:    89 34 24                           	mov dword ptr [esp], esi
0x15b4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15b8:    e8 53 2c 00 00                     	call 0x4210 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x15bd:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x15c1:    8d ac 24 cc 00 00 00               	lea ebp, [esp + 0xcc]
0x15c8:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x15cc:    03 44 24 3c                        	add eax, dword ptr [esp + 0x3c]
0x15d0:    c7 84 24 cc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xcc], 0
0x15db:    89 ca                              	mov edx, ecx
0x15dd:    29 c2                              	sub edx, eax
0x15df:    39 c1                              	cmp ecx, eax
0x15e1:    b9 89 55 00 00                     	mov ecx, 0x5589
0x15e6:    0f 44 c1                           	cmove eax, ecx
0x15e9:    c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x15f4:    c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x15ff:    c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x160a:    c7 84 24 dc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xdc], 0
0x1615:    c7 84 24 e0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe0], 0
0x1620:    c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x162b:    c7 84 24 e8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe8], 0
0x1636:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x163a:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x163e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1641 -- 0x1642
0x1641:    e8                                                 |.               |
; dynamically linked function: SHA256 at 0x1642 -- 0x1643
; data inside code section at 0x1643 -- 0x16b5
0x1643:    ff ff ff 8d 84 24 8c 00  00 00 c7 84 24 8c 00 00   |.....$......$...|
0x1653:    00 00 00 00 00 c7 84 24  90 00 00 00 00 00 00 00   |.......$........|
0x1663:    c7 84 24 94 00 00 00 00  00 00 00 c7 84 24 98 00   |..$..........$..|
0x1673:    00 00 00 00 00 00 c7 84  24 9c 00 00 00 00 00 00   |........$.......|
0x1683:    00 c7 84 24 a0 00 00 00  00 00 00 00 c7 84 24 a4   |...$..........$.|
0x1693:    00 00 00 00 00 00 00 c7  84 24 a8 00 00 00 00 00   |.........$......|
0x16a3:    00 00 89 44 24 08 c7 44  24 04 20 00 00 00 89 2c   |...D$..D$. ....,|
0x16b3:    24 e8                                              |$.              |
; dynamically linked function: SHA256 at 0x16b5 -- 0x16b6
; data inside code section at 0x16b6 -- 0x1772
0x16b6:    ff ff ff 8b 43 04 8d 7c  24 4c 8b 94 24 8c 00 00   |....C..|$L..$...|
0x16c6:    00 2b 03 c7 44 24 4c 00  00 00 00 c7 44 24 50 00   |.+..D$L.....D$P.|
0x16d6:    00 00 00 89 54 24 2c c7  44 24 54 00 00 00 00 c7   |....T$,.D$T.....|
0x16e6:    44 24 58 00 00 00 00 c7  44 24 60 04 00 00 00 c7   |D$X.....D$`.....|
0x16f6:    44 24 64 00 00 00 00 66  c7 44 24 5c 00 00 66 c7   |D$d....f.D$\..f.|
0x1706:    44 24 5e 05 00 89 44 24  04 c7 44 24 08 00 00 00   |D$^...D$..D$....|
0x1716:    00 89 3c 24 e8 c1 39 00  00 8b 43 04 8b 13 39 d0   |..<$..9...C...9.|
0x1726:    74 27 29 d0 0f 88 6b 02  00 00 01 d0 89 44 24 0c   |t')...k......D$.|
0x1736:    8b 44 24 50 c6 44 24 10  00 89 54 24 08 89 3c 24   |.D$P.D$...T$..<$|
0x1746:    89 44 24 04 e8 c1 2a 00  00 8b 44 24 78 2b 44 24   |.D$...*...D$x+D$|
0x1756:    74 c7 44 24 08 00 00 00  00 89 3c 24 89 44 24 04   |t.D$......<$.D$.|
0x1766:    e8 75 39 00 00 8b 54 24  78 8b 44 24               |.u9...T$x.D$    |
; function: function_1772 at 0x1772 -- 0x18d2
0x1772:    74 39                              	je 0x17ad <function_1772+0x3b>
0x1774:    c2 74 27                           	ret 0x2774
; data inside code section at 0x1777 -- 0x1778
0x1777:    29                                                 |)               |
0x1778:    c2 0f 88                           	ret 0x880f
; data inside code section at 0x177b -- 0x177c
0x177b:    1c                                                 |.               |
0x177c:    02 00                              	add al, byte ptr [eax]
0x177e:    00 01                              	add byte ptr [ecx], al
0x1780:    c2 89 44                           	ret 0x4489
; data inside code section at 0x1783 -- 0x179b
0x1783:    24 08 8b 44 24 50 c6 44  24 10 00 89 54 24 0c 89   |$..D$P.D$...T$..|
0x1793:    3c 24 89 44 24 04 e8 72                            |<$.D$..r        |
0x179b:    2a 00                              	sub al, byte ptr [eax]
0x179d:    00 8b 44 24 2c 8d                  	add byte ptr [ebx - 0x72d3dbbc], cl
0x17a3:    94                                 	xchg eax, esp
0x17a4:    24 88                              	and al, 0x88
0x17a6:    00 00                              	add byte ptr [eax], al
0x17a8:    00 c7                              	add bh, al
0x17aa:    84 24 84                           	test byte ptr [esp + eax*4], ah
0x17ad:    00 00                              	add byte ptr [eax], al
0x17af:    00 00                              	add byte ptr [eax], al
0x17b1:    00 00                              	add byte ptr [eax], al
0x17b3:    00 c6                              	add dh, al
0x17b5:    44                                 	inc esp
0x17b6:    24 10                              	and al, 0x10
0x17b8:    00 89 54 24 0c 83                  	add byte ptr [ecx - 0x7cf3dbac], cl
0x17be:    e0 1f                              	loopne 0x17df <function_1772+0x6d>
0x17c0:    89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x17c7:    8d 84 24 80 00 00 00               	lea eax, [esp + 0x80]
0x17ce:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x17d2:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x17d6:    89 3c 24                           	mov dword ptr [esp], edi
0x17d9:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x17dd -- 0x17df
0x17dd:    e8 2e                                              |..              |
0x17df:    2a 00                              	sub al, byte ptr [eax]
0x17e1:    00 8b 54 24 50 8b                  	add byte ptr [ebx - 0x74afdbac], cl
0x17e7:    44                                 	inc esp
0x17e8:    24 4c                              	and al, 0x4c
0x17ea:    03 44 24 58                        	add eax, dword ptr [esp + 0x58]
0x17ee:    c7 84 24 cc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xcc], 0
0x17f9:    89 d1                              	mov ecx, edx
0x17fb:    29 c1                              	sub ecx, eax
0x17fd:    39 c2                              	cmp edx, eax
0x17ff:    ba 89 55 00 00                     	mov edx, 0x5589
0x1804:    0f 44 c2                           	cmove eax, edx
0x1807:    c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x1812:    c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x181d:    c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x1828:    c7 84 24 dc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xdc], 0
0x1833:    c7 84 24 e0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe0], 0
0x183e:    c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x1849:    c7 84 24 e8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe8], 0
0x1854:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1858:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x185c:    89 04 24                           	mov dword ptr [esp], eax
0x185f:    e8 fc ff ff ff                     	call 0x1860
0x1864:    8d 84 24 ac 00 00 00               	lea eax, [esp + 0xac]
0x186b:    c7 84 24 ac 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xac], 0
0x1876:    c7 84 24 b0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb0], 0
0x1881:    c7 84 24 b4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb4], 0
0x188c:    c7 84 24 b8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb8], 0
0x1897:    c7 84 24 bc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xbc], 0
0x18a2:    c7 84 24 c0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc0], 0
0x18ad:    c7 84 24 c4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc4], 0
0x18b8:    c7 84 24 c8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc8], 0
0x18c3:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x18c7:    c7 44 24 04 20 00 00 00            	mov dword ptr [esp + 4], 0x20
0x18cf:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x18d2 -- 0x18d3
0x18d2:    e8                                                 |.               |
; dynamically linked function: SHA256 at 0x18d3 -- 0x18d4
; data inside code section at 0x18d4 -- 0x18f4
0x18d4:    ff ff ff 8b 5c 24 4c 8b  bc 24 ac 00 00 00 8b 44   |....\$L..$.....D|
0x18e4:    24 54 85 db 74 16 29 d8  89 44 24 04 89 1c 24 e8   |$T..t.)..D$...$.|
; dynamically linked function: OPENSSL_cleanse at 0x18f4 -- 0x18f5
; data inside code section at 0x18f5 -- 0x18fc
0x18f5:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x18fc -- 0x18fd
; data inside code section at 0x18fd -- 0x190c
0x18fd:    ff ff ff 8b 44 24 74 85  c0 74 08 89 04 24 e8      |....D$t..t...$. |
; dynamically linked function: _ZdlPv at 0x190c -- 0x190d
; data inside code section at 0x190d -- 0x191c
0x190d:    ff ff ff 8b 44 24 68 85  c0 74 08 89 04 24 e8      |....D$h..t...$. |
; dynamically linked function: _ZdlPv at 0x191c -- 0x191d
; data inside code section at 0x191d -- 0x1936
0x191d:    ff ff ff 8b 5c 24 30 8b  44 24 38 85 db 74 16 29   |....\$0.D$8..t.)|
0x192d:    d8 89 44 24 04 89 1c 24  e8                        |..D$...$.       |
; dynamically linked function: OPENSSL_cleanse at 0x1936 -- 0x1937
; data inside code section at 0x1937 -- 0x193e
0x1937:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x193e -- 0x193f
; data inside code section at 0x193f -- 0x1941
0x193f:    ff ff                                              |..              |
; function: function_1941 at 0x1941 -- 0x1964
0x1941:    ff 89 f8 25 ff 00                  	dec dword ptr [ecx + 0xff25f8]
0x1947:    00 00                              	add byte ptr [eax], al
0x1949:    8b 94 24 ec 00 00 00               	mov edx, dword ptr [esp + 0xec]
0x1950:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1957:    75 0b                              	jne 0x1964 <function_1941+0x22>
0x1959:    81 c4 fc 00 00 00                  	add esp, 0xfc
0x195f:    5b                                 	pop ebx
0x1960:    5e                                 	pop esi
0x1961:    5f                                 	pop edi
0x1962:    5d                                 	pop ebp
0x1963:    c3                                 	ret 
; data inside code section at 0x1964 -- 0x1965
0x1964:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1965 -- 0x1966
; data inside code section at 0x1966 -- 0x196a
0x1966:    ff ff ff 89                                        |....            |
; function: function_196a at 0x196a -- 0x196b
0x196a:    c3                                 	ret 
; data inside code section at 0x196b -- 0x1973
0x196b:    89 3c 24 e8 cd 19 00 00                            |.<$.....        |
; function: function_1973 at 0x1973 -- 0x1996
0x1973:    8d 44 24 74                        	lea eax, [esp + 0x74]
0x1977:    89 04 24                           	mov dword ptr [esp], eax
0x197a:    e8 b1 1f 00 00                     	call 0x3930 <_ZNSt6vectorIhSaIhEED1Ev>
0x197f:    8d 54 24 68                        	lea edx, [esp + 0x68]
0x1983:    89 14 24                           	mov dword ptr [esp], edx
0x1986:    e8 a5 1f 00 00                     	call 0x3930 <_ZNSt6vectorIhSaIhEED1Ev>
0x198b:    89 34 24                           	mov dword ptr [esp], esi
0x198e:    e8 ad 19 00 00                     	call 0x3340 <_ZN11CDataStreamD1Ev>
0x1993:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1996 -- 0x1997
0x1996:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1997 -- 0x1998
; data inside code section at 0x1998 -- 0x199b
0x1998:    ff ff ff                                           |...             |
; function: function_199b at 0x199b -- 0x19a4
0x199b:    e8 7a 13 00 00                     	call 0x2d1a <_ZN11CDataStream5writeEPKci.part.346>
0x19a0:    89 c3                              	mov ebx, eax
0x19a2:    eb cf                              	jmp 0x1973 <function_1973>
; function: function_19a4 at 0x19a4 -- 0x19ac
0x19a4:    89 c3                              	mov ebx, eax
0x19a6:    8d 74 24 30                        	lea esi, [esp + 0x30]
0x19aa:    eb d3                              	jmp 0x197f
; function: function_19ac at 0x19ac -- 0x19b4
0x19ac:    89 c3                              	mov ebx, eax
0x19ae:    8d 74 24 30                        	lea esi, [esp + 0x30]
0x19b2:    eb d7                              	jmp 0x198b
; data inside code section at 0x19b4 -- 0x19c0
0x19b4:    8d b6 00 00 00 00 8d bf  00 00 00 00               |............    |
; function: _ZN8CAddrMan4Add_ERK8CAddressRK8CNetAddrx at 0x19c0 -- 0x1a08
0x19c0:    83 ec 6c                           	sub esp, 0x6c
0x19c3:    8b 94 24 80 00 00 00               	mov edx, dword ptr [esp + 0x80]
0x19ca:    89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x19ce:    8b 4c 24 70                        	mov ecx, dword ptr [esp + 0x70]
0x19d2:    8b 74 24 74                        	mov esi, dword ptr [esp + 0x74]
0x19d6:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x19da:    89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x19de:    31 db                              	xor ebx, ebx
0x19e0:    89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x19e4:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x19e8:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x19ec:    89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x19f0:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x19f7:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x19fb:    31 d2                              	xor edx, edx
0x19fd:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x1a01:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1a05:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1a08 -- 0x1a09
0x1a08:    e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10IsRoutableEv at 0x1a09 -- 0x1a0a
; data inside code section at 0x1a0a -- 0x1a0c
0x1a0a:    ff ff                                              |..              |
; function: function_1a0c at 0x1a0c -- 0x1a38
0x1a0c:    ff 84 c0 75 27 8b 4c               	inc dword ptr [eax + eax*8 + 0x4c8b2775]
0x1a13:    24 4c                              	and al, 0x4c
0x1a15:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1a1c:    89 d8                              	mov eax, ebx
0x1a1e:    0f 85 f0 02 00 00                  	jne 0x1d14 <function_1d14>
0x1a24:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x1a28:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x1a2c:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x1a30:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x1a34:    83 c4 6c                           	add esp, 0x6c
0x1a37:    c3                                 	ret 
; data inside code section at 0x1a38 -- 0x1a5b
0x1a38:    8d 4c 24 48 89 4c 24 08  8b 4c 24 2c 89 74 24 04   |.L$H.L$..L$,.t$.|
0x1a48:    89 0c 24 e8 a0 e8 ff ff  85 c0 89 c7 0f 84 2e 02   |..$.............|
0x1a58:    00 00 e8                                           |...             |
; dynamically linked function: _Z15GetAdjustedTimev at 0x1a5b -- 0x1a5c
; data inside code section at 0x1a5c -- 0x1a5e
0x1a5c:    ff ff                                              |..              |
; function: function_1a5e at 0x1a5e -- 0x1ba6
0x1a5e:    ff 8b 4e 1c c7 44                  	dec dword ptr [ebx + 0x44c71c4e]
0x1a64:    24 24                              	and al, 0x24
0x1a66:    00 00                              	add byte ptr [eax], al
0x1a68:    00 00                              	add byte ptr [eax], al
0x1a6a:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x1a6e:    2b 44 24 20                        	sub eax, dword ptr [esp + 0x20]
0x1a72:    1b 54 24 24                        	sbb edx, dword ptr [esp + 0x24]
0x1a76:    83 fa 00                           	cmp edx, 0
0x1a79:    0f 8e d9 01 00 00                  	jle 0x1c58 <function_1c58>
0x1a7f:    85 c9                              	test ecx, ecx
0x1a81:    c7 44 24 30 80 51 01 00            	mov dword ptr [esp + 0x30], 0x15180
0x1a89:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1a91:    74 55                              	je 0x1ae8 <function_1a5e+0x8a>
0x1a93:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x1a96:    85 c0                              	test eax, eax
0x1a98:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x1a9c:    74 62                              	je 0x1b00 <function_1a5e+0xa2>
0x1a9e:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1aa2:    2b 44 24 30                        	sub eax, dword ptr [esp + 0x30]
0x1aa6:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x1aaa:    1b 54 24 34                        	sbb edx, dword ptr [esp + 0x34]
0x1aae:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1ab2:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1ab6:    29 44 24 30                        	sub dword ptr [esp + 0x30], eax
0x1aba:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x1abe:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1ac2:    19 54 24 34                        	sbb dword ptr [esp + 0x34], edx
0x1ac6:    31 d2                              	xor edx, edx
0x1ac8:    3b 54 24 34                        	cmp edx, dword ptr [esp + 0x34]
0x1acc:    7f 0c                              	jg 0x1ada <function_1a5e+0x7c>
0x1ace:    7c 30                              	jl 0x1b00 <function_1a5e+0xa2>
0x1ad0:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x1ad4:    39 54 24 14                        	cmp dword ptr [esp + 0x14], edx
0x1ad8:    72 26                              	jb 0x1b00 <function_1a5e+0xa2>
0x1ada:    8b 56 14                           	mov edx, dword ptr [esi + 0x14]
0x1add:    09 57 14                           	or dword ptr [edi + 0x14], edx
0x1ae0:    8b 56 18                           	mov edx, dword ptr [esi + 0x18]
0x1ae3:    09 57 18                           	or dword ptr [edi + 0x18], edx
0x1ae6:    eb 76                              	jmp 0x1b5e <function_1a5e+0x100>
0x1ae8:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x1aeb:    31 db                              	xor ebx, ebx
0x1aed:    09 47 14                           	or dword ptr [edi + 0x14], eax
0x1af0:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x1af3:    09 47 18                           	or dword ptr [edi + 0x18], eax
0x1af6:    e9 16 ff ff ff                     	jmp 0x1a11
; data inside code section at 0x1afb -- 0x1b00
0x1afb:    90 8d 74 26 00                                     |..t&.           |
0x1b00:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1b04:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x1b08:    2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0x1b0c:    1b 54 24 1c                        	sbb edx, dword ptr [esp + 0x1c]
0x1b10:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1b14:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x1b18:    89 d3                              	mov ebx, edx
0x1b1a:    c1 fb 1f                           	sar ebx, 0x1f
0x1b1d:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1b21:    89 da                              	mov edx, ebx
0x1b23:    f7 d2                              	not edx
0x1b25:    c1 fa 1f                           	sar edx, 0x1f
0x1b28:    21 d1                              	and ecx, edx
0x1b2a:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x1b2e:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x1b32:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1b36:    21 d1                              	and ecx, edx
0x1b38:    89 47 1c                           	mov dword ptr [edi + 0x1c], eax
0x1b3b:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x1b3e:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1b42:    8b 4e 1c                           	mov ecx, dword ptr [esi + 0x1c]
0x1b45:    09 47 14                           	or dword ptr [edi + 0x14], eax
0x1b48:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x1b4b:    09 47 18                           	or dword ptr [edi + 0x18], eax
0x1b4e:    85 c9                              	test ecx, ecx
0x1b50:    0f 84 c3 01 00 00                  	je 0x1d19 <function_1d19>
0x1b56:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1b5a:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1b5e:    8b 5c 24 14                        	mov ebx, dword ptr [esp + 0x14]
0x1b62:    85 db                              	test ebx, ebx
0x1b64:    74 0c                              	je 0x1b72 <function_1a5e+0x114>
0x1b66:    31 db                              	xor ebx, ebx
0x1b68:    39 4c 24 14                        	cmp dword ptr [esp + 0x14], ecx
0x1b6c:    0f 83 9f fe ff ff                  	jae 0x1a11
0x1b72:    31 db                              	xor ebx, ebx
0x1b74:    80 7f 48 00                        	cmp byte ptr [edi + 0x48], 0
0x1b78:    0f 85 93 fe ff ff                  	jne 0x1a11
0x1b7e:    8b 57 44                           	mov edx, dword ptr [edi + 0x44]
0x1b81:    83 fa 04                           	cmp edx, 4
0x1b84:    0f 84 87 fe ff ff                  	je 0x1a11
0x1b8a:    85 d2                              	test edx, edx
0x1b8c:    7e 25                              	jle 0x1bb3 <function_1bb3>
0x1b8e:    31 c0                              	xor eax, eax
0x1b90:    b9 01 00 00 00                     	mov ecx, 1
0x1b95:    8d 76 00                           	lea esi, [esi]
0x1b98:    83 c0 01                           	add eax, 1
0x1b9b:    01 c9                              	add ecx, ecx
0x1b9d:    39 d0                              	cmp eax, edx
0x1b9f:    75 f7                              	jne 0x1b98 <function_1a5e+0x13a>
0x1ba1:    89 0c 24                           	mov dword ptr [esp], ecx
0x1ba4:    31 db                              	xor ebx, ebx
; data inside code section at 0x1ba6 -- 0x1ba7
0x1ba6:    e8                                                 |.               |
; dynamically linked function: _Z10GetRandInti at 0x1ba7 -- 0x1ba8
; data inside code section at 0x1ba8 -- 0x1bb3
0x1ba8:    ff ff ff 85 c0 0f 85 5e  fe ff ff                  |.......^...     |
; function: function_1bb3 at 0x1bb3 -- 0x1c55
0x1bb3:    31 db                              	xor ebx, ebx
0x1bb5:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1bb9:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1bbd:    89 3c 24                           	mov dword ptr [esp], edi
0x1bc0:    83 c0 54                           	add eax, 0x54
0x1bc3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1bc7:    e8 74 f8 ff ff                     	call 0x1440 <_ZNK9CAddrInfo12GetNewBucketERKSt6vectorIhSaIhEERK8CNetAddr>
0x1bcc:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1bd0:    8d 14 40                           	lea edx, [eax + eax*2]
0x1bd3:    c1 e2 03                           	shl edx, 3
0x1bd6:    89 d5                              	mov ebp, edx
0x1bd8:    03 a9 b4 00 00 00                  	add ebp, dword ptr [ecx + 0xb4]
0x1bde:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1be2:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x1be5:    85 d2                              	test edx, edx
0x1be7:    74 3e                              	je 0x1c27 <function_1bb3+0x74>
0x1be9:    8d 4d 04                           	lea ecx, [ebp + 4]
0x1bec:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x1bf0:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x1bf4:    8b 74 24 20                        	mov esi, dword ptr [esp + 0x20]
0x1bf8:    eb 0f                              	jmp 0x1c09 <function_1bb3+0x56>
; data inside code section at 0x1bfa -- 0x1c00
0x1bfa:    8d b6 00 00 00 00                                  |......          |
0x1c00:    89 d6                              	mov esi, edx
0x1c02:    8b 52 08                           	mov edx, dword ptr [edx + 8]
0x1c05:    85 d2                              	test edx, edx
0x1c07:    74 0f                              	je 0x1c18 <function_1bb3+0x65>
0x1c09:    3b 4a 10                           	cmp ecx, dword ptr [edx + 0x10]
0x1c0c:    7e f2                              	jle 0x1c00 <function_1bb3+0x4d>
0x1c0e:    8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x1c11:    eb f2                              	jmp 0x1c05 <function_1bb3+0x52>
; data inside code section at 0x1c13 -- 0x1c18
0x1c13:    90 8d 74 26 00                                     |..t&.           |
0x1c18:    3b 74 24 20                        	cmp esi, dword ptr [esp + 0x20]
0x1c1c:    74 09                              	je 0x1c27 <function_1bb3+0x74>
0x1c1e:    3b 4e 10                           	cmp ecx, dword ptr [esi + 0x10]
0x1c21:    0f 8d ea fd ff ff                  	jge 0x1a11
0x1c27:    83 47 44 01                        	add dword ptr [edi + 0x44], 1
0x1c2b:    83 7d 14 40                        	cmp dword ptr [ebp + 0x14], 0x40
0x1c2f:    0f 84 bc 00 00 00                  	je 0x1cf1 <function_1cf1>
0x1c35:    8d 44 24 38                        	lea eax, [esp + 0x38]
0x1c39:    8d 54 24 48                        	lea edx, [esp + 0x48]
0x1c3d:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1c41:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1c45:    89 04 24                           	mov dword ptr [esp], eax
0x1c48:    e8 43 29 00 00                     	call 0x4590 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi>
0x1c4d:    83 ec 04                           	sub esp, 4
0x1c50:    e9 bc fd ff ff                     	jmp 0x1a11
; data inside code section at 0x1c55 -- 0x1c58
0x1c55:    8d 76 00                                           |.v.             |
; function: function_1c58 at 0x1c58 -- 0x1c83
0x1c58:    7c 0c                              	jl 0x1c66 <function_1c58+0xe>
0x1c5a:    3d 7f 51 01 00                     	cmp eax, 0x1517f
0x1c5f:    90                                 	nop 
0x1c60:    0f 87 19 fe ff ff                  	ja 0x1a7f
0x1c66:    85 c9                              	test ecx, ecx
0x1c68:    c7 44 24 30 10 0e 00 00            	mov dword ptr [esp + 0x30], 0xe10
0x1c70:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1c78:    0f 84 6a fe ff ff                  	je 0x1ae8
0x1c7e:    e9 10 fe ff ff                     	jmp 0x1a93
; data inside code section at 0x1c83 -- 0x1c88
0x1c83:    90 8d 74 26 00                                     |..t&.           |
; function: function_1c88 at 0x1c88 -- 0x1cf1
0x1c88:    8d 4c 24 48                        	lea ecx, [esp + 0x48]
0x1c8c:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x1c90:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1c94:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1c98:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1c9c:    89 0c 24                           	mov dword ptr [esp], ecx
0x1c9f:    e8 4c f5 ff ff                     	call 0x11f0 <_ZN8CAddrMan6CreateERK8CAddressRK8CNetAddrPi>
0x1ca4:    31 d2                              	xor edx, edx
0x1ca6:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1caa:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1cae:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1cb2:    89 c7                              	mov edi, eax
0x1cb4:    8b 40 1c                           	mov eax, dword ptr [eax + 0x1c]
0x1cb7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1cbb:    29 54 24 20                        	sub dword ptr [esp + 0x20], edx
0x1cbf:    19 4c 24 24                        	sbb dword ptr [esp + 0x24], ecx
0x1cc3:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x1cc7:    89 cb                              	mov ebx, ecx
0x1cc9:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x1ccd:    c1 fb 1f                           	sar ebx, 0x1f
0x1cd0:    89 da                              	mov edx, ebx
0x1cd2:    bb 01 00 00 00                     	mov ebx, 1
0x1cd7:    f7 d2                              	not edx
0x1cd9:    c1 fa 1f                           	sar edx, 0x1f
0x1cdc:    21 d1                              	and ecx, edx
0x1cde:    89 4f 1c                           	mov dword ptr [edi + 0x1c], ecx
0x1ce1:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1ce5:    83 81 b0 00 00 00 01               	add dword ptr [ecx + 0xb0], 1
0x1cec:    e9 c4 fe ff ff                     	jmp 0x1bb5
; function: function_1cf1 at 0x1cf1 -- 0x1d14
0x1cf1:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1cf5:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1cf9:    89 0c 24                           	mov dword ptr [esp], ecx
0x1cfc:    e8 af f0 ff ff                     	call 0xdb0 <_ZN8CAddrMan9ShrinkNewEi>
0x1d01:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1d05:    8b 6c 24 18                        	mov ebp, dword ptr [esp + 0x18]
0x1d09:    03 a9 b4 00 00 00                  	add ebp, dword ptr [ecx + 0xb4]
0x1d0f:    e9 21 ff ff ff                     	jmp 0x1c35
; function: function_1d14 at 0x1d14 -- 0x1d15
; dynamically linked function: __stack_chk_fail at 0x1d15 -- 0x1d16
; data inside code section at 0x1d16 -- 0x1d19
0x1d16:    ff ff ff                                           |...             |
; function: function_1d19 at 0x1d19 -- 0x1d20
0x1d19:    31 db                              	xor ebx, ebx
0x1d1b:    e9 f1 fc ff ff                     	jmp 0x1a11
; function: _ZNK9CAddrInfo14GetTriedBucketERKSt6vectorIhSaIhEE at 0x1d20 -- 0x1d90
0x1d20:    55                                 	push ebp
0x1d21:    57                                 	push edi
0x1d22:    56                                 	push esi
0x1d23:    53                                 	push ebx
0x1d24:    81 ec fc 00 00 00                  	sub esp, 0xfc
0x1d2a:    8b b4 24 10 01 00 00               	mov esi, dword ptr [esp + 0x110]
0x1d31:    8d 54 24 68                        	lea edx, [esp + 0x68]
0x1d35:    8b 9c 24 14 01 00 00               	mov ebx, dword ptr [esp + 0x114]
0x1d3c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1d42:    89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0x1d49:    31 c0                              	xor eax, eax
0x1d4b:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x1d53:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1d5b:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x1d63:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x1d6b:    c7 44 24 44 04 00 00 00            	mov dword ptr [esp + 0x44], 4
0x1d73:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x1d7b:    66 c7 44 24 40 00 00               	mov word ptr [esp + 0x40], 0
0x1d82:    66 c7 44 24 42 05 00               	mov word ptr [esp + 0x42], 5
0x1d89:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1d8d:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x1d90 -- 0x1d91
0x1d90:    e8                                                 |.               |
; dynamically linked function: _ZNK8CService6GetKeyEv at 0x1d91 -- 0x1d92
; data inside code section at 0x1d92 -- 0x1db6
0x1d92:    ff ff ff 8b 43 04 83 ec  04 2b 03 8d 6c 24 30 c7   |....C....+..l$0.|
0x1da2:    44 24 08 00 00 00 00 89  44 24 04 89 2c 24 e8 2b   |D$......D$..,$.+|
0x1db2:    33 00 00 8b                                        |3...            |
; function: function_1db6 at 0x1db6 -- 0x1dbe
0x1db6:    53                                 	push ebx
0x1db7:    04 8b                              	add al, 0x8b
0x1db9:    03 39                              	add edi, dword ptr [ecx]
0x1dbb:    c2 74 27                           	ret 0x2774
; data inside code section at 0x1dbe -- 0x1dbf
0x1dbe:    29                                                 |)               |
; function: function_1dbf at 0x1dbf -- 0x1dc2
0x1dbf:    c2 0f 88                           	ret 0x880f
; function: function_1dc2 at 0x1dc2 -- 0x1dca
0x1dc2:    65 04 00                           	add al, 0
0x1dc5:    00 01                              	add byte ptr [ecx], al
0x1dc7:    c2 89 44                           	ret 0x4489
; data inside code section at 0x1dca -- 0x1e0a
0x1dca:    24 08 8b 44 24 34 c6 44  24 10 00 89 54 24 0c 89   |$..D$4.D$...T$..|
0x1dda:    2c 24 89 44 24 04 e8 2b  24 00 00 8b 44 24 6c 2b   |,$.D$..+$...D$l+|
0x1dea:    44 24 68 c7 44 24 08 00  00 00 00 89 2c 24 89 44   |D$h.D$......,$.D|
0x1dfa:    24 04 e8 df 32 00 00 8b  54 24 6c 8b 44 24 68 39   |$...2...T$l.D$h9|
; function: function_1e0a at 0x1e0a -- 0x1e0d
0x1e0a:    c2 74 27                           	ret 0x2774
; data inside code section at 0x1e0d -- 0x1e0e
0x1e0d:    29                                                 |)               |
; function: function_1e0e at 0x1e0e -- 0x1e11
0x1e0e:    c2 0f 88                           	ret 0x880f
; function: function_1e11 at 0x1e11 -- 0x1e19
0x1e11:    16                                 	push ss
0x1e12:    04 00                              	add al, 0
0x1e14:    00 01                              	add byte ptr [ecx], al
0x1e16:    c2 89 44                           	ret 0x4489
; data inside code section at 0x1e19 -- 0x1e53
0x1e19:    24 08 8b 44 24 34 c6 44  24 10 00 89 54 24 0c 89   |$..D$4.D$...T$..|
0x1e29:    2c 24 89 44 24 04 e8 dc  23 00 00 8b 4c 24 34 8d   |,$.D$...#...L$4.|
0x1e39:    bc 24 cc 00 00 00 8b 44  24 30 03 44 24 3c c7 84   |.$.....D$0.D$<..|
0x1e49:    24 cc 00 00 00 00 00 00  00 89                     |$.........      |
; function: function_1e53 at 0x1e53 -- 0x1e56
0x1e53:    ca 29 c2                           	retf -0x3dd7
; data inside code section at 0x1e56 -- 0x1eb9
0x1e56:    39 c1 b9 89 55 00 00 0f  44 c1 c7 84 24 d0 00 00   |9...U...D...$...|
0x1e66:    00 00 00 00 00 c7 84 24  d4 00 00 00 00 00 00 00   |.......$........|
0x1e76:    c7 84 24 d8 00 00 00 00  00 00 00 c7 84 24 dc 00   |..$..........$..|
0x1e86:    00 00 00 00 00 00 c7 84  24 e0 00 00 00 00 00 00   |........$.......|
0x1e96:    00 c7 84 24 e4 00 00 00  00 00 00 00 c7 84 24 e8   |...$..........$.|
0x1ea6:    00 00 00 00 00 00 00 89  7c 24 08 89 54 24 04 89   |........|$..T$..|
0x1eb6:    04 24 e8                                           |.$.             |
; dynamically linked function: SHA256 at 0x1eb9 -- 0x1eba
; data inside code section at 0x1eba -- 0x1f2c
0x1eba:    ff ff ff 8d 84 24 8c 00  00 00 c7 84 24 8c 00 00   |.....$......$...|
0x1eca:    00 00 00 00 00 c7 84 24  90 00 00 00 00 00 00 00   |.......$........|
0x1eda:    c7 84 24 94 00 00 00 00  00 00 00 c7 84 24 98 00   |..$..........$..|
0x1eea:    00 00 00 00 00 00 c7 84  24 9c 00 00 00 00 00 00   |........$.......|
0x1efa:    00 c7 84 24 a0 00 00 00  00 00 00 00 c7 84 24 a4   |...$..........$.|
0x1f0a:    00 00 00 00 00 00 00 c7  84 24 a8 00 00 00 00 00   |.........$......|
0x1f1a:    00 00 89 44 24 08 c7 44  24 04 20 00 00 00 89 3c   |...D$..D$. ....<|
0x1f2a:    24 e8                                              |$.              |
; dynamically linked function: SHA256 at 0x1f2c -- 0x1f2d
; data inside code section at 0x1f2d -- 0x1f85
0x1f2d:    ff ff ff 8b 84 24 8c 00  00 00 8d 54 24 74 c7 44   |.....$.....T$t.D|
0x1f3d:    24 4c 00 00 00 00 c7 44  24 50 00 00 00 00 c7 44   |$L.....D$P.....D|
0x1f4d:    24 54 00 00 00 00 89 44  24 2c c7 44 24 58 00 00   |$T.....D$,.D$X..|
0x1f5d:    00 00 c7 44 24 60 04 00  00 00 c7 44 24 64 00 00   |...D$`.....D$d..|
0x1f6d:    00 00 66 c7 44 24 5c 00  00 66 c7 44 24 5e 05 00   |..f.D$\..f.D$^..|
0x1f7d:    89 74 24 04 89 14 24 e8                            |.t$...$.        |
; dynamically linked function: _ZNK8CNetAddr8GetGroupEv at 0x1f85 -- 0x1f86
; data inside code section at 0x1f86 -- 0x1fef
0x1f86:    ff ff ff 8b 43 04 83 ec  04 2b 03 8d 74 24 4c c7   |....C....+..t$L.|
0x1f96:    44 24 08 00 00 00 00 89  44 24 04 89 34 24 e8 37   |D$......D$..4$.7|
0x1fa6:    31 00 00 8b 43 04 8b 13  39 d0 74 27 29 d0 0f 88   |1...C...9.t')...|
0x1fb6:    71 02 00 00 01 d0 89 44  24 0c 8b 44 24 50 c6 44   |q......D$..D$P.D|
0x1fc6:    24 10 00 89 54 24 08 89  34 24 89 44 24 04 e8 37   |$...T$..4$.D$..7|
0x1fd6:    22 00 00 8b 44 24 78 2b  44 24 74 c7 44 24 08 00   |"...D$x+D$t.D$..|
0x1fe6:    00 00 00 89 34 24 89 44  24                        |....4$.D$       |
; function: function_1fef at 0x1fef -- 0x1ff3
0x1fef:    04 e8                              	add al, 0xe8
0x1ff1:    eb 30                              	jmp 0x2023 <function_2023>
; function: function_1ff3 at 0x1ff3 -- 0x2023
0x1ff3:    00 00                              	add byte ptr [eax], al
0x1ff5:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x1ff9:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x1ffd:    39 c2                              	cmp edx, eax
0x1fff:    74 27                              	je 0x2028
0x2001:    29 c2                              	sub edx, eax
0x2003:    0f 88 22 02 00 00                  	js 0x222b <function_222b>
0x2009:    01 c2                              	add edx, eax
0x200b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x200f:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x2013:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x2018:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x201c:    89 34 24                           	mov dword ptr [esp], esi
0x201f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; function: function_2023 at 0x2023 -- 0x20e9
0x2023:    e8 e8 21 00 00                     	call 0x4210 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x2028:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x202c:    8d 94 24 88 00 00 00               	lea edx, [esp + 0x88]
0x2033:    c7 84 24 84 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x84], 0
0x203e:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x2043:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2047:    83 e0 03                           	and eax, 3
0x204a:    89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x2051:    8d 84 24 80 00 00 00               	lea eax, [esp + 0x80]
0x2058:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x205c:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x2060:    89 34 24                           	mov dword ptr [esp], esi
0x2063:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2067:    e8 a4 21 00 00                     	call 0x4210 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x206c:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x2070:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x2074:    03 44 24 58                        	add eax, dword ptr [esp + 0x58]
0x2078:    c7 84 24 cc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xcc], 0
0x2083:    89 d1                              	mov ecx, edx
0x2085:    29 c1                              	sub ecx, eax
0x2087:    39 c2                              	cmp edx, eax
0x2089:    ba 89 55 00 00                     	mov edx, 0x5589
0x208e:    0f 44 c2                           	cmove eax, edx
0x2091:    c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x209c:    c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x20a7:    c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x20b2:    c7 84 24 dc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xdc], 0
0x20bd:    c7 84 24 e0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe0], 0
0x20c8:    c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x20d3:    c7 84 24 e8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe8], 0
0x20de:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x20e2:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x20e6:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x20e9 -- 0x20ea
0x20e9:    e8                                                 |.               |
; dynamically linked function: SHA256 at 0x20ea -- 0x20eb
; data inside code section at 0x20eb -- 0x215d
0x20eb:    ff ff ff 8d 84 24 ac 00  00 00 c7 84 24 ac 00 00   |.....$......$...|
0x20fb:    00 00 00 00 00 c7 84 24  b0 00 00 00 00 00 00 00   |.......$........|
0x210b:    c7 84 24 b4 00 00 00 00  00 00 00 c7 84 24 b8 00   |..$..........$..|
0x211b:    00 00 00 00 00 00 c7 84  24 bc 00 00 00 00 00 00   |........$.......|
0x212b:    00 c7 84 24 c0 00 00 00  00 00 00 00 c7 84 24 c4   |...$..........$.|
0x213b:    00 00 00 00 00 00 00 c7  84 24 c8 00 00 00 00 00   |.........$......|
0x214b:    00 00 89 44 24 08 c7 44  24 04 20 00 00 00 89 3c   |...D$..D$. ....<|
0x215b:    24 e8                                              |$.              |
; dynamically linked function: SHA256 at 0x215d -- 0x215e
; data inside code section at 0x215e -- 0x2174
0x215e:    ff ff ff 8b 44 24 74 8b  b4 24 ac 00 00 00 85 c0   |....D$t..$......|
0x216e:    74 08 89 04 24 e8                                  |t...$.          |
; dynamically linked function: _ZdlPv at 0x2174 -- 0x2175
; data inside code section at 0x2175 -- 0x218e
0x2175:    ff ff ff 8b 5c 24 4c 8b  44 24 54 85 db 74 16 29   |....\$L.D$T..t.)|
0x2185:    d8 89 44 24 04 89 1c 24  e8                        |..D$...$.       |
; dynamically linked function: OPENSSL_cleanse at 0x218e -- 0x218f
; data inside code section at 0x218f -- 0x2196
0x218f:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x2196 -- 0x2197
; data inside code section at 0x2197 -- 0x21a6
0x2197:    ff ff ff 8b 44 24 68 85  c0 74 08 89 04 24 e8      |....D$h..t...$. |
; dynamically linked function: _ZdlPv at 0x21a6 -- 0x21a7
; data inside code section at 0x21a7 -- 0x21c0
0x21a7:    ff ff ff 8b 5c 24 30 8b  44 24 38 85 db 74 16 29   |....\$0.D$8..t.)|
0x21b7:    d8 89 44 24 04 89 1c 24  e8                        |..D$...$.       |
; dynamically linked function: OPENSSL_cleanse at 0x21c0 -- 0x21c1
; data inside code section at 0x21c1 -- 0x21c8
0x21c1:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x21c8 -- 0x21c9
; data inside code section at 0x21c9 -- 0x21cb
0x21c9:    ff ff                                              |..              |
; function: function_21cb at 0x21cb -- 0x21ec
0x21cb:    ff 89 f0 83 e0 3f                  	dec dword ptr [ecx + 0x3fe083f0]
0x21d1:    8b 94 24 ec 00 00 00               	mov edx, dword ptr [esp + 0xec]
0x21d8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21df:    75 0b                              	jne 0x21ec <function_21cb+0x20>
0x21e1:    81 c4 fc 00 00 00                  	add esp, 0xfc
0x21e7:    5b                                 	pop ebx
0x21e8:    5e                                 	pop esi
0x21e9:    5f                                 	pop edi
0x21ea:    5d                                 	pop ebp
0x21eb:    c3                                 	ret 
; data inside code section at 0x21ec -- 0x21ed
0x21ec:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x21ed -- 0x21ee
; data inside code section at 0x21ee -- 0x21f2
0x21ee:    ff ff ff 89                                        |....            |
; function: function_21f2 at 0x21f2 -- 0x21f3
0x21f2:    c3                                 	ret 
; data inside code section at 0x21f3 -- 0x21ff
0x21f3:    8d 44 24 74 89 04 24 e8  31 17 00 00               |.D$t..$.1...    |
; function: function_21ff at 0x21ff -- 0x2200
; data inside code section at 0x2200 -- 0x2207
0x2200:    34 24 e8 39 11 00 00                               |4$.9...         |
; function: function_2207 at 0x2207 -- 0x221e
0x2207:    8d 54 24 68                        	lea edx, [esp + 0x68]
0x220b:    89 14 24                           	mov dword ptr [esp], edx
0x220e:    e8 1d 17 00 00                     	call 0x3930 <_ZNSt6vectorIhSaIhEED1Ev>
0x2213:    89 2c 24                           	mov dword ptr [esp], ebp
0x2216:    e8 25 11 00 00                     	call 0x3340 <_ZN11CDataStreamD1Ev>
0x221b:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x221e -- 0x221f
0x221e:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x221f -- 0x2220
; data inside code section at 0x2220 -- 0x2222
0x2220:    ff ff                                              |..              |
; function: function_2222 at 0x2222 -- 0x222b
0x2222:    ff 89 c3 8d 74 24                  	dec dword ptr [ecx + 0x24748dc3]
0x2228:    4c                                 	dec esp
0x2229:    eb d4                              	jmp 0x21ff <function_21ff>
; function: function_222b at 0x222b -- 0x2234
0x222b:    e8 ea 0a 00 00                     	call 0x2d1a <_ZN11CDataStream5writeEPKci.part.346>
0x2230:    89 c3                              	mov ebx, eax
0x2232:    eb d3                              	jmp 0x2207 <function_2207>
; function: function_2234 at 0x2234 -- 0x223c
0x2234:    89 c3                              	mov ebx, eax
0x2236:    8d 6c 24 30                        	lea ebp, [esp + 0x30]
0x223a:    eb d7                              	jmp 0x2213
; data inside code section at 0x223c -- 0x2240
0x223c:    8d 74 26 00                                        |.t&.            |
; function: _ZN8CAddrMan9MakeTriedER9CAddrInfoii at 0x2240 -- 0x23a7
0x2240:    55                                 	push ebp
0x2241:    57                                 	push edi
0x2242:    56                                 	push esi
0x2243:    53                                 	push ebx
0x2244:    83 ec 5c                           	sub esp, 0x5c
0x2247:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x224b:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x224f:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x2253:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x225a:    89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0x225e:    31 c9                              	xor ecx, ecx
0x2260:    8b 74 24 74                        	mov esi, dword ptr [esp + 0x74]
0x2264:    8b bb b4 00 00 00                  	mov edi, dword ptr [ebx + 0xb4]
0x226a:    8d 04 40                           	lea eax, [eax + eax*2]
0x226d:    c1 e0 03                           	shl eax, 3
0x2270:    89 c5                              	mov ebp, eax
0x2272:    01 fd                              	add ebp, edi
0x2274:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2278:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x227b:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x227f:    85 c0                              	test eax, eax
0x2281:    0f 84 29 01 00 00                  	je 0x23b0 <function_23b0>
0x2287:    83 c5 04                           	add ebp, 4
0x228a:    89 e9                              	mov ecx, ebp
0x228c:    eb 0b                              	jmp 0x2299 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x59>
; data inside code section at 0x228e -- 0x2290
0x228e:    66 90                                              |f.              |
0x2290:    89 c1                              	mov ecx, eax
0x2292:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x2295:    85 c0                              	test eax, eax
0x2297:    74 0c                              	je 0x22a5 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x65>
0x2299:    39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x229c:    7d f2                              	jge 0x2290 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x50>
0x229e:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x22a1:    85 c0                              	test eax, eax
0x22a3:    75 f4                              	jne 0x2299 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x59>
0x22a5:    39 cd                              	cmp ebp, ecx
0x22a7:    0f 84 03 01 00 00                  	je 0x23b0 <function_23b0>
0x22ad:    3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0x22b0:    0f 8c fa 00 00 00                  	jl 0x23b0 <function_23b0>
0x22b6:    3b bb b8 00 00 00                  	cmp edi, dword ptr [ebx + 0xb8]
0x22bc:    74 29                              	je 0x22e7 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0xa7>
0x22be:    8d 6c 24 3c                        	lea ebp, [esp + 0x3c]
0x22c2:    8d b6 00 00 00 00                  	lea esi, [esi]
0x22c8:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x22cc:    89 3c 24                           	mov dword ptr [esp], edi
0x22cf:    e8 0c 1b 00 00                     	call 0x3de0 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi>
0x22d4:    85 c0                              	test eax, eax
0x22d6:    74 04                              	je 0x22dc <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x9c>
0x22d8:    83 6e 44 01                        	sub dword ptr [esi + 0x44], 1
0x22dc:    83 c7 18                           	add edi, 0x18
0x22df:    3b bb b8 00 00 00                  	cmp edi, dword ptr [ebx + 0xb8]
0x22e5:    75 e1                              	jne 0x22c8 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x88>
0x22e7:    8b 4e 44                           	mov ecx, dword ptr [esi + 0x44]
0x22ea:    83 ab b0 00 00 00 01               	sub dword ptr [ebx + 0xb0], 1
0x22f1:    85 c9                              	test ecx, ecx
0x22f3:    0f 85 e8 01 00 00                  	jne 0x24e1 <function_24e1>
0x22f9:    8d 6b 54                           	lea ebp, [ebx + 0x54]
0x22fc:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x2300:    89 34 24                           	mov dword ptr [esp], esi
0x2303:    e8 18 fa ff ff                     	call 0x1d20 <_ZNK9CAddrInfo14GetTriedBucketERKSt6vectorIhSaIhEE>
0x2308:    8b 93 a4 00 00 00                  	mov edx, dword ptr [ebx + 0xa4]
0x230e:    8d 3c 40                           	lea edi, [eax + eax*2]
0x2311:    8d 3c ba                           	lea edi, [edx + edi*4]
0x2314:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x2317:    89 d1                              	mov ecx, edx
0x2319:    2b 0f                              	sub ecx, dword ptr [edi]
0x231b:    81 f9 ff 00 00 00                  	cmp ecx, 0xff
0x2321:    0f 86 81 01 00 00                  	jbe 0x24a8 <function_24a8>
0x2327:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x232b:    89 1c 24                           	mov dword ptr [esp], ebx
0x232e:    e8 7d e5 ff ff                     	call 0x8b0 <_ZN8CAddrMan11SelectTriedEi>
0x2333:    8b 17                              	mov edx, dword ptr [edi]
0x2335:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x2339:    8b 43 6c                           	mov eax, dword ptr [ebx + 0x6c]
0x233c:    85 c0                              	test eax, eax
0x233e:    74 48                              	je 0x2388 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x148>
0x2340:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x2344:    c1 e1 02                           	shl ecx, 2
0x2347:    01 ca                              	add edx, ecx
0x2349:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x234d:    8d 53 68                           	lea edx, [ebx + 0x68]
0x2350:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x2354:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x2358:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x235c:    8b 11                              	mov edx, dword ptr [ecx]
0x235e:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x2362:    eb 0d                              	jmp 0x2371 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x131>
; data inside code section at 0x2364 -- 0x2368
0x2364:    8d 74 26 00                                        |.t&.            |
0x2368:    89 c1                              	mov ecx, eax
0x236a:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x236d:    85 c0                              	test eax, eax
0x236f:    74 0c                              	je 0x237d <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x13d>
0x2371:    39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x2374:    7d f2                              	jge 0x2368 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x128>
0x2376:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x2379:    85 c0                              	test eax, eax
0x237b:    75 f4                              	jne 0x2371 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x131>
0x237d:    39 4c 24 28                        	cmp dword ptr [esp + 0x28], ecx
0x2381:    74 05                              	je 0x2388 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii+0x148>
0x2383:    39 51 10                           	cmp dword ptr [ecx + 0x10], edx
0x2386:    7e 50                              	jle 0x23d8 <function_23d8>
0x2388:    c7 44 24 0c 40 54 00 00            	mov dword ptr [esp + 0xc], 0x5440 ; "void CAddrMan::MakeTried(CAddrInfo&, int, int)"
0x2390:    c7 44 24 08 eb 00 00 00            	mov dword ptr [esp + 8], 0xeb
0x2398:    c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x23a0:    c7 04 24 64 35 00 00               	mov dword ptr [esp], 0x3564 ; "mapInfo.count(vTried[nPos]) == 1"
; data inside code section at 0x23a7 -- 0x23a8
0x23a7:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23a8 -- 0x23a9
; data inside code section at 0x23a9 -- 0x23b0
0x23a9:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_23b0 at 0x23b0 -- 0x23cf
0x23b0:    c7 44 24 0c 40 54 00 00            	mov dword ptr [esp + 0xc], 0x5440 ; "void CAddrMan::MakeTried(CAddrInfo&, int, int)"
0x23b8:    c7 44 24 08 ce 00 00 00            	mov dword ptr [esp + 8], 0xce
0x23c0:    c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x23c8:    c7 04 24 70 36 00 00               	mov dword ptr [esp], 0x3670 ; "vvNew[nOrigin].count(nId) == 1"
; data inside code section at 0x23cf -- 0x23d0
0x23cf:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23d0 -- 0x23d1
; data inside code section at 0x23d1 -- 0x23d8
0x23d1:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_23d8 at 0x23d8 -- 0x24a7
0x23d8:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x23dc:    8d 4b 64                           	lea ecx, [ebx + 0x64]
0x23df:    89 0c 24                           	mov dword ptr [esp], ecx
0x23e2:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x23e6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x23ea:    e8 d1 27 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x23ef:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x23f3:    8d 50 28                           	lea edx, [eax + 0x28]
0x23f6:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x23fa:    89 04 24                           	mov dword ptr [esp], eax
0x23fd:    e8 3e f0 ff ff                     	call 0x1440 <_ZNK9CAddrInfo12GetNewBucketERKSt6vectorIhSaIhEERK8CNetAddr>
0x2402:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x2406:    8d 2c 40                           	lea ebp, [eax + eax*2]
0x2409:    8b 83 b4 00 00 00                  	mov eax, dword ptr [ebx + 0xb4]
0x240f:    8d 2c e8                           	lea ebp, [eax + ebp*8]
0x2412:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2416:    03 07                              	add eax, dword ptr [edi]
0x2418:    89 0c 24                           	mov dword ptr [esp], ecx
0x241b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x241f:    e8 9c 27 00 00                     	call 0x4bc0 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_>
0x2424:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x2428:    c7 40 44 01 00 00 00               	mov dword ptr [eax + 0x44], 1
0x242f:    83 7d 14 3f                        	cmp dword ptr [ebp + 0x14], 0x3f
0x2433:    c6 40 48 00                        	mov byte ptr [eax + 0x48], 0
0x2437:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x243b:    76 53                              	jbe 0x2490 <function_23d8+0xb8>
0x243d:    03 17                              	add edx, dword ptr [edi]
0x243f:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x2443:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2447:    03 93 b4 00 00 00                  	add edx, dword ptr [ebx + 0xb4]
0x244d:    89 04 24                           	mov dword ptr [esp], eax
0x2450:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x2454:    e8 37 21 00 00                     	call 0x4590 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi>
0x2459:    83 ec 04                           	sub esp, 4
0x245c:    8b 07                              	mov eax, dword ptr [edi]
0x245e:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2462:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x2466:    83 83 b0 00 00 00 01               	add dword ptr [ebx + 0xb0], 1
0x246d:    89 14 88                           	mov dword ptr [eax + ecx*4], edx
0x2470:    c6 46 48 01                        	mov byte ptr [esi + 0x48], 1
0x2474:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x2478:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x247f:    0f 85 80 00 00 00                  	jne 0x2505 <function_2505>
0x2485:    83 c4 5c                           	add esp, 0x5c
0x2488:    5b                                 	pop ebx
0x2489:    5e                                 	pop esi
0x248a:    5f                                 	pop edi
0x248b:    5d                                 	pop ebp
0x248c:    c3                                 	ret 
; data inside code section at 0x248d -- 0x2490
0x248d:    8d 76 00                                           |.v.             |
0x2490:    03 17                              	add edx, dword ptr [edi]
0x2492:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x2496:    89 04 24                           	mov dword ptr [esp], eax
0x2499:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x249d:    e8 ee 20 00 00                     	call 0x4590 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi>
0x24a2:    83 ec 04                           	sub esp, 4
0x24a5:    eb b5                              	jmp 0x245c <function_23d8+0x84>
; data inside code section at 0x24a7 -- 0x24a8
0x24a7:    90                                                 |.               |
; function: function_24a8 at 0x24a8 -- 0x24e1
0x24a8:    3b 57 08                           	cmp edx, dword ptr [edi + 8]
0x24ab:    74 1e                              	je 0x24cb <function_24a8+0x23>
0x24ad:    85 d2                              	test edx, edx
0x24af:    90                                 	nop 
0x24b0:    74 06                              	je 0x24b8 <function_24a8+0x10>
0x24b2:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x24b6:    89 02                              	mov dword ptr [edx], eax
0x24b8:    83 c2 04                           	add edx, 4
0x24bb:    89 57 04                           	mov dword ptr [edi + 4], edx
0x24be:    83 83 a0 00 00 00 01               	add dword ptr [ebx + 0xa0], 1
0x24c5:    c6 46 48 01                        	mov byte ptr [esi + 0x48], 1
0x24c9:    eb a9                              	jmp 0x2474
0x24cb:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x24cf:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x24d3:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x24d7:    89 3c 24                           	mov dword ptr [esp], edi
0x24da:    e8 11 15 00 00                     	call 0x39f0 <_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi>
0x24df:    eb dd                              	jmp 0x24be <function_24a8+0x16>
; function: function_24e1 at 0x24e1 -- 0x2500
0x24e1:    c7 44 24 0c 40 54 00 00            	mov dword ptr [esp + 0xc], 0x5440 ; "void CAddrMan::MakeTried(CAddrInfo&, int, int)"
0x24e9:    c7 44 24 08 d8 00 00 00            	mov dword ptr [esp + 8], 0xd8
0x24f1:    c7 44 24 04 6c 2c 00 00            	mov dword ptr [esp + 4], 0x2c6c ; "addrman.cpp"
0x24f9:    c7 04 24 f1 2c 00 00               	mov dword ptr [esp], 0x2cf1 ; "info.nRefCount == 0"
; data inside code section at 0x2500 -- 0x2501
0x2500:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2501 -- 0x2502
; data inside code section at 0x2502 -- 0x2505
0x2502:    ff ff ff                                           |...             |
; function: function_2505 at 0x2505 -- 0x2506
; dynamically linked function: __stack_chk_fail at 0x2506 -- 0x2507
; data inside code section at 0x2507 -- 0x2510
0x2507:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZN8CAddrMan5Good_ERK8CServicex at 0x2510 -- 0x2564
0x2510:    55                                 	push ebp
0x2511:    57                                 	push edi
0x2512:    56                                 	push esi
0x2513:    53                                 	push ebx
0x2514:    83 ec 4c                           	sub esp, 0x4c
0x2517:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x251b:    8b 4c 24 64                        	mov ecx, dword ptr [esp + 0x64]
0x251f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2525:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2529:    31 c0                              	xor eax, eax
0x252b:    8d 44 24 34                        	lea eax, [esp + 0x34]
0x252f:    8b 7c 24 6c                        	mov edi, dword ptr [esp + 0x6c]
0x2533:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2537:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x253b:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x253f:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x2543:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x2547:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x254b:    89 14 24                           	mov dword ptr [esp], edx
0x254e:    e8 9d dd ff ff                     	call 0x2f0 <_ZN8CAddrMan4FindERK8CNetAddrPi>
0x2553:    85 c0                              	test eax, eax
0x2555:    89 c6                              	mov esi, eax
0x2557:    74 30                              	je 0x2589 <function_2589>
0x2559:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x255d:    89 04 24                           	mov dword ptr [esp], eax
0x2560:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
; data inside code section at 0x2564 -- 0x2565
0x2564:    e8                                                 |.               |
; dynamically linked function: _ZneRK8CServiceS1_ at 0x2565 -- 0x2566
; data inside code section at 0x2566 -- 0x2589
0x2566:    ff ff ff 84 c0 75 1c 80  7e 48 00 89 5e 38 89 7e   |.....u..~H..^8.~|
0x2576:    3c 89 5e 20 89 7e 24 89  5e 1c c7 46 40 00 00 00   |<.^ .~$.^..F@...|
0x2586:    00 74 19                                           |.t.             |
; function: function_2589 at 0x2589 -- 0x25a2
0x2589:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x258d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2594:    0f 85 2d 01 00 00                  	jne 0x26c7 <function_26c7>
0x259a:    83 c4 4c                           	add esp, 0x4c
0x259d:    5b                                 	pop ebx
0x259e:    5e                                 	pop esi
0x259f:    5f                                 	pop edi
0x25a0:    5d                                 	pop ebp
0x25a1:    c3                                 	ret 
; data inside code section at 0x25a2 -- 0x25bf
0x25a2:    8b 5c 24 24 8b 83 b8 00  00 00 2b 83 b4 00 00 00   |.\$$......+.....|
0x25b2:    c1 f8 03 69 c0 ab aa aa  aa 89 04 24 e8            |...i.......$.   |
; dynamically linked function: _Z10GetRandInti at 0x25bf -- 0x25c0
; data inside code section at 0x25c0 -- 0x25c2
0x25c0:    ff ff                                              |..              |
; function: function_25c2 at 0x25c2 -- 0x25d7
0x25c2:    ff 8b 8b b4 00 00                  	dec dword ptr [ebx + 0xb48b]
0x25c8:    00 8b 93 b8 00 00                  	add byte ptr [ebx + 0xb893], cl
0x25ce:    00 89 4c 24 28 29                  	add byte ptr [ecx + 0x2928244c], cl
0x25d4:    ca c1 fa                           	retf -0x53f
; function: function_25d7 at 0x25d7 -- 0x2658
0x25d7:    03 69 d2                           	add ebp, dword ptr [ecx - 0x2e]
0x25da:    ab                                 	stosd dword ptr es:[edi], eax
0x25db:    aa                                 	stosb byte ptr es:[edi], al
0x25dc:    aa                                 	stosb byte ptr es:[edi], al
0x25dd:    aa                                 	stosb byte ptr es:[edi], al
0x25de:    85 d2                              	test edx, edx
0x25e0:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x25e4:    74 a3                              	je 0x2589 <function_2589>
0x25e6:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x25ea:    01 c2                              	add edx, eax
0x25ec:    89 c7                              	mov edi, eax
0x25ee:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x25f2:    8d b6 00 00 00 00                  	lea esi, [esi]
0x25f8:    31 d2                              	xor edx, edx
0x25fa:    89 f8                              	mov eax, edi
0x25fc:    8b 5c 24 28                        	mov ebx, dword ptr [esp + 0x28]
0x2600:    f7 74 24 1c                        	div dword ptr [esp + 0x1c]
0x2604:    8d 04 52                           	lea eax, [edx + edx*2]
0x2607:    8d 2c c3                           	lea ebp, [ebx + eax*8]
0x260a:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x260d:    85 c0                              	test eax, eax
0x260f:    0f 84 8b 00 00 00                  	je 0x26a0 <function_26a0>
0x2615:    83 c5 04                           	add ebp, 4
0x2618:    89 eb                              	mov ebx, ebp
0x261a:    eb 0d                              	jmp 0x2629 <function_25d7+0x52>
; data inside code section at 0x261c -- 0x2620
0x261c:    8d 74 26 00                                        |.t&.            |
0x2620:    89 c3                              	mov ebx, eax
0x2622:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x2625:    85 c0                              	test eax, eax
0x2627:    74 0c                              	je 0x2635 <function_25d7+0x5e>
0x2629:    3b 48 10                           	cmp ecx, dword ptr [eax + 0x10]
0x262c:    7e f2                              	jle 0x2620 <function_25d7+0x49>
0x262e:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x2631:    85 c0                              	test eax, eax
0x2633:    75 f4                              	jne 0x2629 <function_25d7+0x52>
0x2635:    39 eb                              	cmp ebx, ebp
0x2637:    74 67                              	je 0x26a0 <function_26a0>
0x2639:    3b 4b 10                           	cmp ecx, dword ptr [ebx + 0x10]
0x263c:    7c 62                              	jl 0x26a0 <function_26a0>
0x263e:    83 fa ff                           	cmp edx, -1
0x2641:    89 d3                              	mov ebx, edx
0x2643:    0f 84 40 ff ff ff                  	je 0x2589 <function_2589>
0x2649:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x264d:    8d 7c 24 38                        	lea edi, [esp + 0x38]
0x2651:    89 3c 24                           	mov dword ptr [esp], edi
0x2654:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
; data inside code section at 0x2658 -- 0x2659
0x2658:    e8                                                 |.               |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x2659 -- 0x265a
; data inside code section at 0x265a -- 0x2670
0x265a:    ff ff ff 83 ec 04 8b 44  24 38 c7 04 24 05 2d 00   |.......D$8..$.-.|
0x266a:    00 89 44 24 04 e8                                  |..D$..          |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2670 -- 0x2671
; data inside code section at 0x2671 -- 0x2678
0x2671:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2678 -- 0x2679
; data inside code section at 0x2679 -- 0x267b
0x2679:    ff ff                                              |..              |
; function: function_267b at 0x267b -- 0x269d
0x267b:    ff 8b 44 24 34 89                  	dec dword ptr [ebx - 0x76cbdbbc]
0x2681:    5c                                 	pop esp
0x2682:    24 0c                              	and al, 0xc
0x2684:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x2688:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x268c:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2690:    89 1c 24                           	mov dword ptr [esp], ebx
0x2693:    e8 a8 fb ff ff                     	call 0x2240 <_ZN8CAddrMan9MakeTriedER9CAddrInfoii>
0x2698:    e9 ec fe ff ff                     	jmp 0x2589 <function_2589>
; data inside code section at 0x269d -- 0x26a0
0x269d:    8d 76 00                                           |.v.             |
; function: function_26a0 at 0x26a0 -- 0x26b5
0x26a0:    83 c7 01                           	add edi, 1
0x26a3:    3b 7c 24 2c                        	cmp edi, dword ptr [esp + 0x2c]
0x26a7:    0f 85 4b ff ff ff                  	jne 0x25f8
0x26ad:    8d 76 00                           	lea esi, [esi]
0x26b0:    e9 d4 fe ff ff                     	jmp 0x2589 <function_2589>
; data inside code section at 0x26b5 -- 0x26b6
0x26b5:    89                                                 |.               |
; function: function_26b6 at 0x26b6 -- 0x26b7
0x26b6:    c3                                 	ret 
; data inside code section at 0x26b7 -- 0x26bb
0x26b7:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x26bb -- 0x26bc
; data inside code section at 0x26bc -- 0x26c3
0x26bc:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x26c3 -- 0x26c4
; data inside code section at 0x26c4 -- 0x26c7
0x26c4:    ff ff ff                                           |...             |
; function: function_26c7 at 0x26c7 -- 0x26c8
; dynamically linked function: __stack_chk_fail at 0x26c8 -- 0x26c9
; data inside code section at 0x26c9 -- 0x26cc
0x26c9:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x26d0 -- 0x26fa
0x26d0:    83 ec 1c                           	sub esp, 0x1c
0x26d3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x26d9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x26dd:    31 c0                              	xor eax, eax
0x26df:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x26e3:    c7 00 d0 55 00 00                  	mov dword ptr [eax], 0x55d0
0x26e9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x26ed:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x26f4:    75 04                              	jne 0x26fa <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0x26f6:    83 c4 1c                           	add esp, 0x1c
0x26f9:    c3                                 	ret 
; data inside code section at 0x26fa -- 0x26fb
0x26fa:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x26fb -- 0x26fc
; data inside code section at 0x26fc -- 0x26ff
0x26fc:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0x2700 -- 0x272a
0x2700:    83 ec 1c                           	sub esp, 0x1c
0x2703:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2709:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x270d:    31 c0                              	xor eax, eax
0x270f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2713:    c7 00 30 56 00 00                  	mov dword ptr [eax], 0x5630
0x2719:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x271d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2724:    75 04                              	jne 0x272a <_ZN5boost6detail15sp_counted_baseD1Ev+0x29>
0x2726:    83 c4 1c                           	add esp, 0x1c
0x2729:    c3                                 	ret 
; data inside code section at 0x272a -- 0x272b
0x272a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x272b -- 0x272c
; data inside code section at 0x272c -- 0x272f
0x272c:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0x2730 -- 0x2780
0x2730:    83 ec 1c                           	sub esp, 0x1c
0x2733:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2737:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x273e:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2742:    31 d2                              	xor edx, edx
0x2744:    85 c0                              	test eax, eax
0x2746:    74 20                              	je 0x2768 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0x2748:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x274c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2753:    75 24                              	jne 0x2779 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2755:    8b 10                              	mov edx, dword ptr [eax]
0x2757:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x275b:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x275e:    83 c4 1c                           	add esp, 0x1c
0x2761:    ff e0                              	jmp eax
; data inside code section at 0x2763 -- 0x2768
0x2763:    90 8d 74 26 00                                     |..t&.           |
0x2768:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x276c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2773:    75 04                              	jne 0x2779 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2775:    83 c4 1c                           	add esp, 0x1c
0x2778:    c3                                 	ret 
0x2779:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x2780 -- 0x2781
0x2780:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2781 -- 0x2782
; data inside code section at 0x2782 -- 0x2785
0x2782:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0x2790 -- 0x27ba
0x2790:    83 ec 1c                           	sub esp, 0x1c
0x2793:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2799:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x279d:    31 c0                              	xor eax, eax
0x279f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x27a3:    c7 00 48 53 00 00                  	mov dword ptr [eax], 0x5348
0x27a9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x27ad:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x27b4:    75 04                              	jne 0x27ba <_ZN5boost6system14error_categoryD1Ev+0x29>
0x27b6:    83 c4 1c                           	add esp, 0x1c
0x27b9:    c3                                 	ret 
; data inside code section at 0x27ba -- 0x27bb
0x27ba:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x27bb -- 0x27bc
; data inside code section at 0x27bc -- 0x27bf
0x27bc:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0x27c0 -- 0x27f4
0x27c0:    83 ec 1c                           	sub esp, 0x1c
0x27c3:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x27c7:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x27ce:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x27d2:    31 d2                              	xor edx, edx
0x27d4:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x27d8:    89 10                              	mov dword ptr [eax], edx
0x27da:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x27de:    89 50 04                           	mov dword ptr [eax + 4], edx
0x27e1:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x27e5:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x27ec:    75 06                              	jne 0x27f4 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0x27ee:    83 c4 1c                           	add esp, 0x1c
0x27f1:    c2 04 00                           	ret 4
; data inside code section at 0x27f4 -- 0x27f5
0x27f4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x27f5 -- 0x27f6
; data inside code section at 0x27f6 -- 0x27f9
0x27f6:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0x2800 -- 0x2864
0x2800:    56                                 	push esi
0x2801:    53                                 	push ebx
0x2802:    83 ec 34                           	sub esp, 0x34
0x2805:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2809:    8d 4c 24 18                        	lea ecx, [esp + 0x18]
0x280d:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2814:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x2818:    31 d2                              	xor edx, edx
0x281a:    8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x281e:    8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x2822:    8b 10                              	mov edx, dword ptr [eax]
0x2824:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2828:    89 0c 24                           	mov dword ptr [esp], ecx
0x282b:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x282f:    ff 52 10                           	call dword ptr [edx + 0x10]
0x2832:    31 c0                              	xor eax, eax
0x2834:    83 ec 04                           	sub esp, 4
0x2837:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x283b:    39 4b 04                           	cmp dword ptr [ebx + 4], ecx
0x283e:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x2842:    74 14                              	je 0x2858 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0x2844:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2848:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x284f:    75 0e                              	jne 0x285f <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5f>
0x2851:    83 c4 34                           	add esp, 0x34
0x2854:    5b                                 	pop ebx
0x2855:    5e                                 	pop esi
0x2856:    c3                                 	ret 
; data inside code section at 0x2857 -- 0x2858
0x2857:    90                                                 |.               |
0x2858:    39 13                              	cmp dword ptr [ebx], edx
0x285a:    0f 94 c0                           	sete al
0x285d:    eb e5                              	jmp 0x2844 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
0x285f:    e8 fc ff ff ff                     	call 0x2860
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0x2870 -- 0x28b4
0x2870:    53                                 	push ebx
0x2871:    83 ec 18                           	sub esp, 0x18
0x2874:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x2878:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x287c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2882:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2886:    31 c0                              	xor eax, eax
0x2888:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x288c:    39 5a 04                           	cmp dword ptr [edx + 4], ebx
0x288f:    74 17                              	je 0x28a8 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0x2891:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2895:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x289c:    75 11                              	jne 0x28af <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3f>
0x289e:    83 c4 18                           	add esp, 0x18
0x28a1:    5b                                 	pop ebx
0x28a2:    c3                                 	ret 
; data inside code section at 0x28a3 -- 0x28a8
0x28a3:    90 8d 74 26 00                                     |..t&.           |
0x28a8:    39 0a                              	cmp dword ptr [edx], ecx
0x28aa:    0f 94 c0                           	sete al
0x28ad:    eb e2                              	jmp 0x2891 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
0x28af:    e8 fc ff ff ff                     	call 0x28b0
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0x28c0 -- 0x28ea
0x28c0:    83 ec 1c                           	sub esp, 0x1c
0x28c3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x28c9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x28cd:    31 c0                              	xor eax, eax
0x28cf:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x28d3:    c7 00 30 56 00 00                  	mov dword ptr [eax], 0x5630
0x28d9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x28dd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x28e4:    75 04                              	jne 0x28ea <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0x28e6:    83 c4 1c                           	add esp, 0x1c
0x28e9:    c3                                 	ret 
; data inside code section at 0x28ea -- 0x28eb
0x28ea:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x28eb -- 0x28ec
; data inside code section at 0x28ec -- 0x28ef
0x28ec:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0x28f0 -- 0x2940
0x28f0:    83 ec 1c                           	sub esp, 0x1c
0x28f3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x28f9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x28fd:    31 c0                              	xor eax, eax
0x28ff:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2903:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x2906:    85 c0                              	test eax, eax
0x2908:    74 1e                              	je 0x2928 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0x290a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x290e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2915:    75 22                              	jne 0x2939 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x2917:    8b 10                              	mov edx, dword ptr [eax]
0x2919:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x291d:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x2920:    83 c4 1c                           	add esp, 0x1c
0x2923:    ff e0                              	jmp eax
; data inside code section at 0x2925 -- 0x2928
0x2925:    8d 76 00                                           |.v.             |
0x2928:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x292c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2933:    75 04                              	jne 0x2939 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x2935:    83 c4 1c                           	add esp, 0x1c
0x2938:    c3                                 	ret 
0x2939:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x2940 -- 0x2941
0x2940:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2941 -- 0x2942
; data inside code section at 0x2942 -- 0x2945
0x2942:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0x2950 -- 0x2970
0x2950:    83 ec 1c                           	sub esp, 0x1c
0x2953:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2959:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x295d:    31 c0                              	xor eax, eax
0x295f:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2963:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x296a:    75 04                              	jne 0x2970 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x1f>
0x296c:    83 c4 1c                           	add esp, 0x1c
0x296f:    c3                                 	ret 
; data inside code section at 0x2970 -- 0x2971
0x2970:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2971 -- 0x2972
; data inside code section at 0x2972 -- 0x2975
0x2972:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0x2980 -- 0x29ae
0x2980:    83 ec 1c                           	sub esp, 0x1c
0x2983:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x298a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x298e:    31 d2                              	xor edx, edx
0x2990:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2994:    c7 00 30 56 00 00                  	mov dword ptr [eax], 0x5630
0x299a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x299e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x29a5:    75 0c                              	jne 0x29b3 <function_29b3>
0x29a7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x29ab:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x29ae -- 0x29af
0x29ae:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x29af -- 0x29b0
; data inside code section at 0x29b0 -- 0x29b3
0x29b0:    ff ff ff                                           |...             |
; function: function_29b3 at 0x29b3 -- 0x29b8
0x29b3:    e8 fc ff ff ff                     	call 0x29b4
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0x29c0 -- 0x29ee
0x29c0:    83 ec 1c                           	sub esp, 0x1c
0x29c3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x29ca:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x29ce:    31 d2                              	xor edx, edx
0x29d0:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x29d4:    c7 00 30 56 00 00                  	mov dword ptr [eax], 0x5630
0x29da:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x29de:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x29e5:    75 0c                              	jne 0x29f3 <function_29f3>
0x29e7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x29eb:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x29ee -- 0x29ef
0x29ee:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x29ef -- 0x29f0
; data inside code section at 0x29f0 -- 0x29f3
0x29f0:    ff ff ff                                           |...             |
; function: function_29f3 at 0x29f3 -- 0x29f4
; dynamically linked function: __stack_chk_fail at 0x29f4 -- 0x29f5
; data inside code section at 0x29f5 -- 0x29f8
0x29f5:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x2a00 -- 0x2a2e
0x2a00:    83 ec 1c                           	sub esp, 0x1c
0x2a03:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2a0a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2a0e:    31 d2                              	xor edx, edx
0x2a10:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2a14:    c7 00 d0 55 00 00                  	mov dword ptr [eax], 0x55d0
0x2a1a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2a1e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a25:    75 0c                              	jne 0x2a33 <function_2a33>
0x2a27:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2a2b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2a2e -- 0x2a2f
0x2a2e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2a2f -- 0x2a30
; data inside code section at 0x2a30 -- 0x2a33
0x2a30:    ff ff ff                                           |...             |
; function: function_2a33 at 0x2a33 -- 0x2a38
0x2a33:    e8 fc ff ff ff                     	call 0x2a34
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0x2a40 -- 0x2a6e
0x2a40:    83 ec 1c                           	sub esp, 0x1c
0x2a43:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2a4a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2a4e:    31 d2                              	xor edx, edx
0x2a50:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2a54:    c7 00 48 53 00 00                  	mov dword ptr [eax], 0x5348
0x2a5a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2a5e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a65:    75 0c                              	jne 0x2a73 <function_2a73>
0x2a67:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2a6b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2a6e -- 0x2a6f
0x2a6e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2a6f -- 0x2a70
; data inside code section at 0x2a70 -- 0x2a73
0x2a70:    ff ff ff                                           |...             |
; function: function_2a73 at 0x2a73 -- 0x2a78
0x2a73:    e8 fc ff ff ff                     	call 0x2a74
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2a80 -- 0x2a87
0x2a80:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x2a85:    eb 09                              	jmp 0x2a90 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0x2a87 -- 0x2a90
0x2a87:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2a90 -- 0x2aac
0x2a90:    56                                 	push esi
0x2a91:    53                                 	push ebx
0x2a92:    83 ec 24                           	sub esp, 0x24
0x2a95:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x2a99:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2a9f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2aa3:    31 c0                              	xor eax, eax
0x2aa5:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x2aac -- 0x2aad
0x2aac:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x2aad -- 0x2aae
; data inside code section at 0x2aae -- 0x2ab2
0x2aae:    ff ff ff 89                                        |....            |
; function: function_2ab2 at 0x2ab2 -- 0x2ab3
0x2ab2:    c3                                 	ret 
; data inside code section at 0x2ab3 -- 0x2b05
0x2ab3:    c7 00 98 55 00 00 8b 46  04 85 c0 89 43 04 74 08   |...U...F....C.t.|
0x2ac3:    8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 e8 55 00   |....$.R..F....U.|
0x2ad3:    00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0x2ae3:    00 56 00 00 c7 43 18 14  56 00 00 89 43 10 c7 44   |.V...C..V...C..D|
0x2af3:    24 08 b0 31 00 00 c7 44  24 04 80 56 00 00 89 1c   |$..1...D$..V....|
0x2b03:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x2b05 -- 0x2b06
; data inside code section at 0x2b06 -- 0x2b0f
0x2b06:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x2b0f -- 0x2b10
; data inside code section at 0x2b10 -- 0x2b17
0x2b10:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x2b17 -- 0x2b18
; data inside code section at 0x2b18 -- 0x2b1b
0x2b18:    ff ff ff                                           |...             |
; section: .text.unlikely
; function: _ZN11CDataStream5writeEPKci.part.346 at 0x2d1a -- 0x2d48
0x2d1a:    83 ec 2c                           	sub esp, 0x2c
0x2d1d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2d23:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2d27:    31 c0                              	xor eax, eax
0x2d29:    c7 44 24 0c 80 53 00 00            	mov dword ptr [esp + 0xc], 0x5380 ; "CDataStream& CDataStream::write(const char*, int)"
0x2d31:    c7 44 24 08 1b 04 00 00            	mov dword ptr [esp + 8], 0x41b
0x2d39:    c7 44 24 04 3a 2c 00 00            	mov dword ptr [esp + 4], 0x2c3a ; "serialize.h"
0x2d41:    c7 04 24 46 2c 00 00               	mov dword ptr [esp], 0x2c46 ; "nSize >= 0"
; data inside code section at 0x2d48 -- 0x2d49
0x2d48:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2d49 -- 0x2d4a
; data inside code section at 0x2d4a -- 0x2d4d
0x2d4a:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x2d50 -- 0x2d57
0x2d50:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x2d55:    eb 09                              	jmp 0x2d60 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0x2d57 -- 0x2d60
0x2d57:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x2d60 -- 0x2de1
0x2d60:    56                                 	push esi
0x2d61:    53                                 	push ebx
0x2d62:    83 ec 24                           	sub esp, 0x24
0x2d65:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x2d69:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2d6f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2d73:    31 c0                              	xor eax, eax
0x2d75:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
0x2d7c:    e8 fc ff ff ff                     	call 0x2d7d
0x2d81:    89 c3                              	mov ebx, eax
0x2d83:    c7 00 98 55 00 00                  	mov dword ptr [eax], 0x5598
0x2d89:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x2d8c:    85 c0                              	test eax, eax
0x2d8e:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x2d91:    74 08                              	je 0x2d9b <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv+0x3b>
0x2d93:    8b 10                              	mov edx, dword ptr [eax]
0x2d95:    89 04 24                           	mov dword ptr [esp], eax
0x2d98:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x2d9b:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x2d9e:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2da2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2da9:    c7 03 e8 55 00 00                  	mov dword ptr [ebx], 0x55e8
0x2daf:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x2db2:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x2db5:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x2db8:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x2dbb:    c7 43 14 00 56 00 00               	mov dword ptr [ebx + 0x14], 0x5600
0x2dc2:    c7 43 18 14 56 00 00               	mov dword ptr [ebx + 0x18], 0x5614
0x2dc9:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x2dcc:    8d 43 18                           	lea eax, [ebx + 0x18]
0x2dcf:    75 06                              	jne 0x2dd7 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv+0x77>
0x2dd1:    83 c4 24                           	add esp, 0x24
0x2dd4:    5b                                 	pop ebx
0x2dd5:    5e                                 	pop esi
0x2dd6:    c3                                 	ret 
0x2dd7:    e8 fc ff ff ff                     	call 0x2dd8
0x2ddc:    89 c6                              	mov esi, eax
0x2dde:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2de1 -- 0x2de2
0x2de1:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2de2 -- 0x2de3
; data inside code section at 0x2de3 -- 0x2dea
0x2de3:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x2dea -- 0x2deb
; data inside code section at 0x2deb -- 0x2dee
0x2deb:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x2df0 -- 0x2e46
0x2df0:    83 ec 2c                           	sub esp, 0x2c
0x2df3:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x2df7:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x2dfb:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x2dff:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2e05:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2e09:    31 c0                              	xor eax, eax
0x2e0b:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x2e0f:    8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x2e12:    8b 53 f4                           	mov edx, dword ptr [ebx - 0xc]
0x2e15:    85 d2                              	test edx, edx
0x2e17:    74 27                              	je 0x2e40 <_ZNK5boost6system12system_error4whatEv+0x50>
0x2e19:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2e1d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2e24:    89 d8                              	mov eax, ebx
0x2e26:    0f 85 96 00 00 00                  	jne 0x2ec2 <function_2ec2>
0x2e2c:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x2e30:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x2e34:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x2e38:    83 c4 2c                           	add esp, 0x2c
0x2e3b:    c3                                 	ret 
; data inside code section at 0x2e3c -- 0x2e40
0x2e3c:    8d 74 26 00                                        |.t&.            |
0x2e40:    89 34 24                           	mov dword ptr [esp], esi
0x2e43:    8d 7e 10                           	lea edi, [esi + 0x10]
; data inside code section at 0x2e46 -- 0x2e47
0x2e46:    e8                                                 |.               |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x2e47 -- 0x2e48
; data inside code section at 0x2e48 -- 0x2e4d
0x2e48:    ff ff ff 89 04                                     |.....           |
; function: function_2e4d at 0x2e4d -- 0x2e50
0x2e4d:    24 89                              	and al, 0x89
0x2e4f:    c3                                 	ret 
; data inside code section at 0x2e50 -- 0x2e51
0x2e50:    e8                                                 |.               |
; dynamically linked function: strlen at 0x2e51 -- 0x2e52
; data inside code section at 0x2e52 -- 0x2e61
0x2e52:    ff ff ff 89 5c 24 04 89  3c 24 89 44 24 08 e8      |....\$..<$.D$.. |
; dynamically linked function: _ZNSs6assignEPKcj at 0x2e61 -- 0x2e62
; data inside code section at 0x2e62 -- 0x2e6f
0x2e62:    ff ff ff 8b 46 10 8b 40  f4 85 c0 75 39            |....F..@...u9   |
; function: function_2e6f at 0x2e6f -- 0x2e70
; data inside code section at 0x2e70 -- 0x2e94
0x2e70:    46 0c 8d 5c 24 18 8b 4e  08 8b 10 89 4c 24 08 89   |F..\$..N....L$..|
0x2e80:    44 24 04 89 1c 24 ff 52  0c 83 ec 04 89 5c 24 04   |D$...$.R.....\$.|
0x2e90:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendERKSs at 0x2e94 -- 0x2e95
; data inside code section at 0x2e95 -- 0x2e98
0x2e95:    ff ff ff                                           |...             |
; function: function_2e98 at 0x2e98 -- 0x2ea8
0x2e98:    89 1c 24                           	mov dword ptr [esp], ebx
0x2e9b:    e8 fc ff ff ff                     	call 0x2e9c
0x2ea0:    8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x2ea3:    e9 71 ff ff ff                     	jmp 0x2e19
; data inside code section at 0x2ea8 -- 0x2ebc
0x2ea8:    c7 44 24 08 02 00 00 00  c7 44 24 04 51 2c 00 00   |.D$......D$.Q,..|
0x2eb8:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendEPKcj at 0x2ebc -- 0x2ebd
; data inside code section at 0x2ebd -- 0x2ec0
0x2ebd:    ff ff ff                                           |...             |
; function: function_2ec0 at 0x2ec0 -- 0x2ec2
0x2ec0:    eb ad                              	jmp 0x2e6f <function_2e6f>
; function: function_2ec2 at 0x2ec2 -- 0x2ec3
; dynamically linked function: __stack_chk_fail at 0x2ec3 -- 0x2ec4
; data inside code section at 0x2ec4 -- 0x2ecd
0x2ec4:    ff ff ff 89 c7 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x2ecd -- 0x2ece
; data inside code section at 0x2ece -- 0x2ed3
0x2ece:    ff ff ff 89 f8                                     |.....           |
; function: function_2ed3 at 0x2ed3 -- 0x2ed4
; data inside code section at 0x2ed4 -- 0x2ed7
0x2ed4:    04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x2ed7 -- 0x2ed8
; data inside code section at 0x2ed8 -- 0x2edf
0x2ed8:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x2edf -- 0x2ee0
; data inside code section at 0x2ee0 -- 0x2ee4
0x2ee0:    ff ff ff 89                                        |....            |
; function: function_2ee4 at 0x2ee4 -- 0x2ee5
0x2ee4:    c3                                 	ret 
; data inside code section at 0x2ee5 -- 0x2ee6
0x2ee5:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x2ee6 -- 0x2ee7
; data inside code section at 0x2ee7 -- 0x2eea
0x2ee7:    ff ff ff                                           |...             |
; function: function_2eea at 0x2eea -- 0x2eef
0x2eea:    e9 2a ff ff ff                     	jmp 0x2e19
; data inside code section at 0x2eef -- 0x2ef0
0x2eef:    90                                                 |.               |
; function: function_2ef0 at 0x2ef0 -- 0x2ef2
0x2ef0:    eb e1                              	jmp 0x2ed3 <function_2ed3>
; data inside code section at 0x2ef2 -- 0x2ef3
0x2ef2:    83                                                 |.               |
; function: function_2ef3 at 0x2ef3 -- 0x2ef6
0x2ef3:    c2 01 89                           	ret 0x8901
; data inside code section at 0x2ef6 -- 0x2efb
0x2ef6:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x2efb -- 0x2efc
; data inside code section at 0x2efc -- 0x2f04
0x2efc:    ff ff ff e8 fc ff ff ff                            |........        |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x2f10 -- 0x2f95
0x2f10:    83 ec 2c                           	sub esp, 0x2c
0x2f13:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2f19:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2f1d:    31 c0                              	xor eax, eax
0x2f1f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x2f23:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x2f27:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x2f2b:    8b 58 04                           	mov ebx, dword ptr [eax + 4]
0x2f2e:    85 db                              	test ebx, ebx
0x2f30:    74 11                              	je 0x2f43 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x2f32:    be ff ff ff ff                     	mov esi, 0xffffffff
0x2f37:    89 f0                              	mov eax, esi
0x2f39:    f0 0f c1 43 04                     	lock xadd dword ptr [ebx + 4], eax
0x2f3e:    83 f8 01                           	cmp eax, 1
0x2f41:    74 1d                              	je 0x2f60 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x50>
0x2f43:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2f47:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2f4e:    75 45                              	jne 0x2f95 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x83>
0x2f50:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x2f54:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x2f58:    83 c4 2c                           	add esp, 0x2c
0x2f5b:    c3                                 	ret 
; data inside code section at 0x2f5c -- 0x2f60
0x2f5c:    8d 74 26 00                                        |.t&.            |
0x2f60:    8b 03                              	mov eax, dword ptr [ebx]
0x2f62:    89 1c 24                           	mov dword ptr [esp], ebx
0x2f65:    ff 50 08                           	call dword ptr [eax + 8]
0x2f68:    f0 0f c1 73 08                     	lock xadd dword ptr [ebx + 8], esi
0x2f6d:    83 fe 01                           	cmp esi, 1
0x2f70:    75 d1                              	jne 0x2f43 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x2f72:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2f76:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2f7d:    75 16                              	jne 0x2f95 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x83>
0x2f7f:    8b 03                              	mov eax, dword ptr [ebx]
0x2f81:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x2f85:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x2f89:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x2f8d:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x2f90:    83 c4 2c                           	add esp, 0x2c
0x2f93:    ff e0                              	jmp eax
; data inside code section at 0x2f95 -- 0x2f96
0x2f95:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2f96 -- 0x2f97
; data inside code section at 0x2f97 -- 0x2f9a
0x2f97:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x2fa0 -- 0x2fc7
0x2fa0:    83 ec 2c                           	sub esp, 0x2c
0x2fa3:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x2fa7:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x2fab:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2fb1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2fb5:    31 c0                              	xor eax, eax
0x2fb7:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x2fbb:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x2fbe:    c7 03 70 53 00 00                  	mov dword ptr [ebx], 0x5370
0x2fc4:    8d 50 f4                           	lea edx, [eax - 0xc]
; data inside code section at 0x2fc7 -- 0x2fc9
0x2fc7:    81 fa                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x2fc9 -- 0x2fd2
; data inside code section at 0x2fd2 -- 0x2fd3
0x2fd2:    e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x2fd3 -- 0x2fd4
; data inside code section at 0x2fd4 -- 0x2fd6
0x2fd4:    ff ff                                              |..              |
; function: function_2fd6 at 0x2fd6 -- 0x2ff0
0x2fd6:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x2fdc:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x2fe2:    75 33                              	jne 0x3017 <function_3017>
0x2fe4:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x2fe8:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x2fec:    83 c4 2c                           	add esp, 0x2c
0x2fef:    c3                                 	ret 
; function: function_2ff0 at 0x2ff0 -- 0x2ff1
; dynamically linked function: pthread_cancel at 0x2ff1 -- 0x3010
; data inside code section at 0x3010 -- 0x3011
0x3010:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x3011 -- 0x3012
; data inside code section at 0x3012 -- 0x3015
0x3012:    ff ff ff                                           |...             |
; function: function_3015 at 0x3015 -- 0x3017
0x3015:    eb b8                              	jmp 0x2fcf
; function: function_3017 at 0x3017 -- 0x3018
; dynamically linked function: __stack_chk_fail at 0x3018 -- 0x3019
; data inside code section at 0x3019 -- 0x301c
0x3019:    ff ff ff                                           |...             |
; function: function_301c at 0x301c -- 0x3027
0x301c:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x301f:    8d 71 ff                           	lea esi, [ecx - 1]
0x3022:    89 70 fc                           	mov dword ptr [eax - 4], esi
0x3025:    eb da                              	jmp 0x3001
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x3030 -- 0x3057
0x3030:    83 ec 2c                           	sub esp, 0x2c
0x3033:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x3037:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x303b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3041:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3045:    31 c0                              	xor eax, eax
0x3047:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x304b:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x304e:    c7 03 70 53 00 00                  	mov dword ptr [ebx], 0x5370
0x3054:    8d 50 f4                           	lea edx, [eax - 0xc]
; data inside code section at 0x3057 -- 0x3059
0x3057:    81 fa                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3059 -- 0x3062
; data inside code section at 0x3062 -- 0x3063
0x3062:    e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x3063 -- 0x3064
; data inside code section at 0x3064 -- 0x306b
0x3064:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x306b -- 0x306c
; data inside code section at 0x306c -- 0x306e
0x306c:    ff ff                                              |..              |
; function: function_306e at 0x306e -- 0x3088
0x306e:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3074:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x307a:    75 33                              	jne 0x30af <function_30af>
0x307c:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x3080:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x3084:    83 c4 2c                           	add esp, 0x2c
0x3087:    c3                                 	ret 
; function: function_3088 at 0x3088 -- 0x3089
; dynamically linked function: pthread_cancel at 0x3089 -- 0x30a8
; data inside code section at 0x30a8 -- 0x30a9
0x30a8:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x30a9 -- 0x30aa
; data inside code section at 0x30aa -- 0x30ad
0x30aa:    ff ff ff                                           |...             |
; function: function_30ad at 0x30ad -- 0x30af
0x30ad:    eb b0                              	jmp 0x305f
; function: function_30af at 0x30af -- 0x30b0
; dynamically linked function: __stack_chk_fail at 0x30b0 -- 0x30b1
; data inside code section at 0x30b1 -- 0x30b4
0x30b1:    ff ff ff                                           |...             |
; function: function_30b4 at 0x30b4 -- 0x30bf
0x30b4:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x30b7:    8d 71 ff                           	lea esi, [ecx - 1]
0x30ba:    89 70 fc                           	mov dword ptr [eax - 4], esi
0x30bd:    eb da                              	jmp 0x3099
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x30c0 -- 0x3111
0x30c0:    53                                 	push ebx
0x30c1:    83 ec 28                           	sub esp, 0x28
0x30c4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x30c8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x30ce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x30d2:    31 c0                              	xor eax, eax
0x30d4:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x30d7:    c7 03 98 55 00 00                  	mov dword ptr [ebx], 0x5598
0x30dd:    85 c0                              	test eax, eax
0x30df:    74 0c                              	je 0x30ed <_ZN5boost9exceptionD1Ev+0x2d>
0x30e1:    8b 10                              	mov edx, dword ptr [eax]
0x30e3:    89 04 24                           	mov dword ptr [esp], eax
0x30e6:    ff 52 10                           	call dword ptr [edx + 0x10]
0x30e9:    84 c0                              	test al, al
0x30eb:    75 1b                              	jne 0x3108 <_ZN5boost9exceptionD1Ev+0x48>
0x30ed:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x30f1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x30f8:    75 17                              	jne 0x3111 <_ZN5boost9exceptionD1Ev+0x4f>
0x30fa:    83 c4 28                           	add esp, 0x28
0x30fd:    5b                                 	pop ebx
0x30fe:    66 90                              	nop 
0x3100:    c3                                 	ret 
; data inside code section at 0x3101 -- 0x3108
0x3101:    8d b4 26 00 00 00 00                               |..&....         |
0x3108:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x310f:    eb dc                              	jmp 0x30ed <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0x3111 -- 0x3112
0x3111:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3112 -- 0x3113
; data inside code section at 0x3113 -- 0x3117
0x3113:    ff ff ff 83                                        |....            |
; function: function_3117 at 0x3117 -- 0x311a
0x3117:    c2 01 89                           	ret 0x8901
; data inside code section at 0x311a -- 0x311f
0x311a:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x311f -- 0x3120
; data inside code section at 0x3120 -- 0x3124
0x3120:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x3124 -- 0x3125
; data inside code section at 0x3125 -- 0x3128
0x3125:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x3130 -- 0x313a
0x3130:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x3135:    e9 36 31 00 00                     	jmp 0x6270 <function_6270>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x3140 -- 0x3167
0x3140:    53                                 	push ebx
0x3141:    83 ec 28                           	sub esp, 0x28
0x3144:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3148:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x314e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3152:    31 c0                              	xor eax, eax
0x3154:    c7 03 a8 55 00 00                  	mov dword ptr [ebx], 0x55a8
0x315a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x315d:    c7 43 14 b8 55 00 00               	mov dword ptr [ebx + 0x14], 0x55b8
0x3164:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3167 -- 0x3168
0x3167:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x3168 -- 0x3169
; data inside code section at 0x3169 -- 0x316b
0x3169:    ff ff                                              |..              |
; function: function_316b at 0x316b -- 0x3186
0x316b:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3171:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x3177:    75 0d                              	jne 0x3186 <function_316b+0x16>
0x3179:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x317d:    83 c4 28                           	add esp, 0x28
0x3180:    5b                                 	pop ebx
0x3181:    e9 7a 30 00 00                     	jmp 0x6200 <function_6200>
; data inside code section at 0x3186 -- 0x3187
0x3186:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3187 -- 0x3188
; data inside code section at 0x3188 -- 0x318b
0x3188:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x3190 -- 0x319a
0x3190:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x3195:    e9 a6 31 00 00                     	jmp 0x6340 <function_6340>
; data inside code section at 0x319a -- 0x31a0
0x319a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x31a0 -- 0x31aa
0x31a0:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x31a5:    e9 96 31 00 00                     	jmp 0x6340 <function_6340>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x31b0 -- 0x31de
0x31b0:    53                                 	push ebx
0x31b1:    83 ec 28                           	sub esp, 0x28
0x31b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x31b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x31be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x31c2:    31 c0                              	xor eax, eax
0x31c4:    c7 43 18 d0 55 00 00               	mov dword ptr [ebx + 0x18], 0x55d0
0x31cb:    8d 43 14                           	lea eax, [ebx + 0x14]
0x31ce:    c7 03 a8 55 00 00                  	mov dword ptr [ebx], 0x55a8
0x31d4:    c7 43 14 b8 55 00 00               	mov dword ptr [ebx + 0x14], 0x55b8
0x31db:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x31de -- 0x31df
0x31de:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x31df -- 0x31e0
; data inside code section at 0x31e0 -- 0x31e2
0x31e0:    ff ff                                              |..              |
; function: function_31e2 at 0x31e2 -- 0x31fd
0x31e2:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x31e8:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x31ee:    75 0d                              	jne 0x31fd <function_31e2+0x16>
0x31f0:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x31f4:    83 c4 28                           	add esp, 0x28
0x31f7:    5b                                 	pop ebx
0x31f8:    e9 73 30 00 00                     	jmp 0x6270 <function_6270>
; data inside code section at 0x31fd -- 0x31fe
0x31fd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x31fe -- 0x31ff
; data inside code section at 0x31ff -- 0x3202
0x31ff:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x3210 -- 0x3217
0x3210:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x3215:    eb 09                              	jmp 0x3220 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x3217 -- 0x3220
0x3217:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x3220 -- 0x3247
0x3220:    53                                 	push ebx
0x3221:    83 ec 28                           	sub esp, 0x28
0x3224:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3228:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x322e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3232:    31 c0                              	xor eax, eax
0x3234:    c7 03 a8 55 00 00                  	mov dword ptr [ebx], 0x55a8
0x323a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x323d:    c7 43 14 b8 55 00 00               	mov dword ptr [ebx + 0x14], 0x55b8
0x3244:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3247 -- 0x3248
0x3247:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x3248 -- 0x3249
; data inside code section at 0x3249 -- 0x326a
0x3249:    ff ff ff 89 1c 24 e8 7c  30 00 00 8b 44 24 1c 65   |.....$.|0...D$.e|
0x3259:    33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x3269:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x326a -- 0x326b
; data inside code section at 0x326b -- 0x326f
0x326b:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x326f -- 0x3270
; data inside code section at 0x3270 -- 0x3273
0x3270:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x3280 -- 0x3287
0x3280:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x3285:    eb 19                              	jmp 0x32a0 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x3287 -- 0x3290
0x3287:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x3290 -- 0x3297
0x3290:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x3295:    eb 09                              	jmp 0x32a0 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x3297 -- 0x32a0
0x3297:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x32a0 -- 0x32ce
0x32a0:    53                                 	push ebx
0x32a1:    83 ec 28                           	sub esp, 0x28
0x32a4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x32a8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x32ae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x32b2:    31 c0                              	xor eax, eax
0x32b4:    c7 43 18 d0 55 00 00               	mov dword ptr [ebx + 0x18], 0x55d0
0x32bb:    8d 43 14                           	lea eax, [ebx + 0x14]
0x32be:    c7 03 a8 55 00 00                  	mov dword ptr [ebx], 0x55a8
0x32c4:    c7 43 14 b8 55 00 00               	mov dword ptr [ebx + 0x14], 0x55b8
0x32cb:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x32ce -- 0x32cf
0x32ce:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x32cf -- 0x32d0
; data inside code section at 0x32d0 -- 0x32f1
0x32d0:    ff ff ff 89 1c 24 e8 65  30 00 00 8b 44 24 1c 65   |.....$.e0...D$.e|
0x32e0:    33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x32f0:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x32f1 -- 0x32f2
; data inside code section at 0x32f2 -- 0x32f6
0x32f2:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x32f6 -- 0x32f7
; data inside code section at 0x32f7 -- 0x32fa
0x32f7:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x3300 -- 0x3331
0x3300:    53                                 	push ebx
0x3301:    83 ec 28                           	sub esp, 0x28
0x3304:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3308:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x330e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3312:    31 c0                              	xor eax, eax
0x3314:    89 1c 24                           	mov dword ptr [esp], ebx
0x3317:    e8 a4 30 00 00                     	call 0x63c0 <unknown_63c0>
0x331c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3320:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3327:    75 0d                              	jne 0x3336 <function_3336>
0x3329:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x332d:    83 c4 28                           	add esp, 0x28
0x3330:    5b                                 	pop ebx
; data inside code section at 0x3331 -- 0x3332
0x3331:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3332 -- 0x3333
; data inside code section at 0x3333 -- 0x3336
0x3333:    ff ff ff                                           |...             |
; function: function_3336 at 0x3336 -- 0x3337
; dynamically linked function: __stack_chk_fail at 0x3337 -- 0x3338
; data inside code section at 0x3338 -- 0x333b
0x3338:    ff ff ff                                           |...             |
; section: .text._ZN11CDataStreamD2Ev
; function: _ZN11CDataStreamD1Ev at 0x3340 -- 0x3367
0x3340:    53                                 	push ebx
0x3341:    83 ec 28                           	sub esp, 0x28
0x3344:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x3348:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x334f:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x3353:    31 d2                              	xor edx, edx
0x3355:    8b 18                              	mov ebx, dword ptr [eax]
0x3357:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x335a:    85 db                              	test ebx, ebx
0x335c:    74 2a                              	je 0x3388 <function_3388>
0x335e:    29 d8                              	sub eax, ebx
0x3360:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3364:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3367 -- 0x3368
0x3367:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x3368 -- 0x3369
; data inside code section at 0x3369 -- 0x3382
0x3369:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 21   |....D$.e3.....u!|
0x3379:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3382 -- 0x3383
; data inside code section at 0x3383 -- 0x3385
0x3383:    ff ff                                              |..              |
; function: function_3385 at 0x3385 -- 0x3388
0x3385:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_3388 at 0x3388 -- 0x33a0
0x3388:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x338c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3393:    75 05                              	jne 0x339a <function_3388+0x12>
0x3395:    83 c4 28                           	add esp, 0x28
0x3398:    5b                                 	pop ebx
0x3399:    c3                                 	ret 
0x339a:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x33a0 -- 0x33a1
0x33a0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x33a1 -- 0x33a2
; data inside code section at 0x33a2 -- 0x33a5
0x33a2:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x33b0 -- 0x33f0
0x33b0:    53                                 	push ebx
0x33b1:    83 ec 28                           	sub esp, 0x28
0x33b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x33b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x33be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x33c2:    31 c0                              	xor eax, eax
0x33c4:    8b 03                              	mov eax, dword ptr [ebx]
0x33c6:    85 c0                              	test eax, eax
0x33c8:    74 0c                              	je 0x33d6 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x33ca:    8b 10                              	mov edx, dword ptr [eax]
0x33cc:    89 04 24                           	mov dword ptr [esp], eax
0x33cf:    ff 52 10                           	call dword ptr [edx + 0x10]
0x33d2:    84 c0                              	test al, al
0x33d4:    75 12                              	jne 0x33e8 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x33d6:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x33da:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x33e1:    75 0d                              	jne 0x33f0 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x3e>
0x33e3:    83 c4 28                           	add esp, 0x28
0x33e6:    5b                                 	pop ebx
0x33e7:    c3                                 	ret 
0x33e8:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x33ee:    eb e6                              	jmp 0x33d6 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x33f0 -- 0x33f1
0x33f0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x33f1 -- 0x33f2
; data inside code section at 0x33f2 -- 0x33f5
0x33f2:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
; function: _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ at 0x3400 -- 0x3504
0x3400:    83 ec 3c                           	sub esp, 0x3c
0x3403:    89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x3407:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x340b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3411:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3415:    31 c0                              	xor eax, eax
0x3417:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x341b:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x341f:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x3423:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x3426:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x342a:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x3432:    85 c0                              	test eax, eax
0x3434:    0f 84 c6 00 00 00                  	je 0x3500 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x100>
0x343a:    8b 10                              	mov edx, dword ptr [eax]
0x343c:    8d 6c 24 18                        	lea ebp, [esp + 0x18]
0x3440:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3444:    89 2c 24                           	mov dword ptr [esp], ebp
0x3447:    ff 52 14                           	call dword ptr [edx + 0x14]
0x344a:    83 ec 04                           	sub esp, 4
0x344d:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x3451:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x3455:    85 c0                              	test eax, eax
0x3457:    74 08                              	je 0x3461 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x61>
0x3459:    8b 10                              	mov edx, dword ptr [eax]
0x345b:    89 04 24                           	mov dword ptr [esp], eax
0x345e:    ff 52 10                           	call dword ptr [edx + 0x10]
0x3461:    85 ff                              	test edi, edi
0x3463:    89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x3467:    74 08                              	je 0x3471 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x71>
0x3469:    8b 07                              	mov eax, dword ptr [edi]
0x346b:    89 3c 24                           	mov dword ptr [esp], edi
0x346e:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x3471:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3475:    85 c0                              	test eax, eax
0x3477:    74 0c                              	je 0x3485 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
0x3479:    8b 10                              	mov edx, dword ptr [eax]
0x347b:    89 04 24                           	mov dword ptr [esp], eax
0x347e:    ff 52 10                           	call dword ptr [edx + 0x10]
0x3481:    84 c0                              	test al, al
0x3483:    75 6b                              	jne 0x34f0 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xf0>
0x3485:    8b 7c 24 14                        	mov edi, dword ptr [esp + 0x14]
0x3489:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x348c:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x348f:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x3492:    89 46 10                           	mov dword ptr [esi + 0x10], eax
0x3495:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x3498:    89 46 08                           	mov dword ptr [esi + 8], eax
0x349b:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x349e:    85 c0                              	test eax, eax
0x34a0:    74 08                              	je 0x34aa <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xaa>
0x34a2:    8b 10                              	mov edx, dword ptr [eax]
0x34a4:    89 04 24                           	mov dword ptr [esp], eax
0x34a7:    ff 52 10                           	call dword ptr [edx + 0x10]
0x34aa:    85 ff                              	test edi, edi
0x34ac:    89 7e 04                           	mov dword ptr [esi + 4], edi
0x34af:    74 08                              	je 0x34b9 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xb9>
0x34b1:    8b 07                              	mov eax, dword ptr [edi]
0x34b3:    89 3c 24                           	mov dword ptr [esp], edi
0x34b6:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x34b9:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x34bd:    85 c0                              	test eax, eax
0x34bf:    74 08                              	je 0x34c9 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xc9>
0x34c1:    8b 10                              	mov edx, dword ptr [eax]
0x34c3:    89 04 24                           	mov dword ptr [esp], eax
0x34c6:    ff 52 10                           	call dword ptr [edx + 0x10]
0x34c9:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x34cd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x34d4:    75 2e                              	jne 0x3504 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x102>
0x34d6:    8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x34da:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x34de:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x34e2:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x34e6:    83 c4 3c                           	add esp, 0x3c
0x34e9:    c3                                 	ret 
; data inside code section at 0x34ea -- 0x34f0
0x34ea:    8d b6 00 00 00 00                                  |......          |
0x34f0:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x34f8:    eb 8b                              	jmp 0x3485 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
; data inside code section at 0x34fa -- 0x3500
0x34fa:    8d b6 00 00 00 00                                  |......          |
0x3500:    31 ff                              	xor edi, edi
0x3502:    eb 85                              	jmp 0x3489 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x89>
; data inside code section at 0x3504 -- 0x3505
0x3504:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3505 -- 0x3506
; data inside code section at 0x3506 -- 0x350a
0x3506:    ff ff ff 89                                        |....            |
; function: function_350a at 0x350a -- 0x350b
0x350a:    c3                                 	ret 
; data inside code section at 0x350b -- 0x3513
0x350b:    89 2c 24 e8 9d 32 00 00                            |.,$..2..        |
; function: function_3513 at 0x3513 -- 0x3514
; data inside code section at 0x3514 -- 0x3523
0x3514:    44 24 14 89 04 24 e8 91  32 00 00 89 1c 24 e8      |D$...$..2....$. |
; dynamically linked function: _Unwind_Resume at 0x3523 -- 0x3524
; data inside code section at 0x3524 -- 0x3527
0x3524:    ff ff ff                                           |...             |
; function: function_3527 at 0x3527 -- 0x352b
0x3527:    89 c3                              	mov ebx, eax
0x3529:    eb e8                              	jmp 0x3513 <function_3513>
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x3690 -- 0x378a
0x3690:    83 ec 6c                           	sub esp, 0x6c
0x3693:    89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x3697:    8d 74 24 18                        	lea esi, [esp + 0x18]
0x369b:    89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x369f:    8d 7c 24 34                        	lea edi, [esp + 0x34]
0x36a3:    89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x36a7:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x36ab:    89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x36af:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x36b5:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x36b9:    31 c0                              	xor eax, eax
0x36bb:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x36c3:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x36cb:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x36d3:    c7 44 24 44 ff ff ff ff            	mov dword ptr [esp + 0x44], 0xffffffff
0x36db:    c7 44 24 34 a8 55 00 00            	mov dword ptr [esp + 0x34], 0x55a8
0x36e3:    c7 44 24 48 b8 55 00 00            	mov dword ptr [esp + 0x48], 0x55b8
0x36eb:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x36f3:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x36fb:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x3703:    c7 44 24 28 ff ff ff ff            	mov dword ptr [esp + 0x28], 0xffffffff
0x370b:    c7 44 24 18 e8 55 00 00            	mov dword ptr [esp + 0x18], 0x55e8
0x3713:    c7 44 24 2c 00 56 00 00            	mov dword ptr [esp + 0x2c], 0x5600
0x371b:    c7 44 24 30 14 56 00 00            	mov dword ptr [esp + 0x30], 0x5614
0x3723:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x3727:    89 34 24                           	mov dword ptr [esp], esi
0x372a:    e8 61 33 00 00                     	call 0x6a90 <unknown_6a90>
0x372f:    80 3d 28 56 00 00 00               	cmp byte ptr [0x5628], 0
0x3736:    c7 44 24 20 e0 54 00 00            	mov dword ptr [esp + 0x20], 0x54e0 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x373e:    c7 44 24 24 2c 35 00 00            	mov dword ptr [esp + 0x24], 0x352c ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x3746:    c7 44 24 28 51 00 00 00            	mov dword ptr [esp + 0x28], 0x51
0x374e:    0f 84 94 00 00 00                  	je 0x37e8 <function_37e8>
0x3754:    a1 28 56 00 00                     	mov eax, dword ptr [0x5628]
0x3759:    89 03                              	mov dword ptr [ebx], eax
0x375b:    a1 2c 56 00 00                     	mov eax, dword ptr [0x562c]
0x3760:    85 c0                              	test eax, eax
0x3762:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3765:    74 04                              	je 0x376b <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xdb>
0x3767:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x376b:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x376f:    89 04 24                           	mov dword ptr [esp], eax
0x3772:    c7 44 24 30 d0 55 00 00            	mov dword ptr [esp + 0x30], 0x55d0
0x377a:    c7 44 24 18 a8 55 00 00            	mov dword ptr [esp + 0x18], 0x55a8
0x3782:    c7 44 24 2c b8 55 00 00            	mov dword ptr [esp + 0x2c], 0x55b8
; data inside code section at 0x378a -- 0x378b
0x378a:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x378b -- 0x378c
; data inside code section at 0x378c -- 0x37af
0x378c:    ff ff ff 89 34 24 e8 b9  2f 00 00 8d 44 24 48 89   |....4$../...D$H.|
0x379c:    04 24 c7 44 24 34 a8 55  00 00 c7 44 24 48 b8 55   |.$.D$4.U...D$H.U|
0x37ac:    00 00 e8                                           |...             |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x37af -- 0x37b0
; data inside code section at 0x37b0 -- 0x37b2
0x37b0:    ff ff                                              |..              |
; function: function_37b2 at 0x37b2 -- 0x37e4
0x37b2:    ff 89 3c 24 e8 95                  	dec dword ptr [ecx - 0x6a17dbc4]
0x37b8:    2f                                 	das 
0x37b9:    00 00                              	add byte ptr [eax], al
0x37bb:    89 d8                              	mov eax, ebx
0x37bd:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x37c1:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x37c8:    0f 85 e6 00 00 00                  	jne 0x38b4 <function_38b4>
0x37ce:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x37d2:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x37d6:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x37da:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x37de:    83 c4 6c                           	add esp, 0x6c
0x37e1:    c2 04 00                           	ret 4
; data inside code section at 0x37e4 -- 0x37e8
0x37e4:    8d 74 26 00                                        |.t&.            |
; function: function_37e8 at 0x37e8 -- 0x37ef
0x37e8:    c7 04 24 28 56 00 00               	mov dword ptr [esp], 0x5628
; data inside code section at 0x37ef -- 0x37f0
0x37ef:    e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x37f0 -- 0x37f1
; data inside code section at 0x37f1 -- 0x3804
0x37f1:    ff ff ff 85 c0 0f 84 58  ff ff ff c7 04 24 1c 00   |.......X.....$..|
0x3801:    00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x3804 -- 0x3805
; data inside code section at 0x3805 -- 0x3867
0x3805:    ff ff ff 89 c5 c7 00 98  55 00 00 8b 44 24 1c 85   |........U...D$..|
0x3815:    c0 89 45 04 74 08 8b 10  89 04 24 ff 52 0c 8b 44   |..E.t.....$.R..D|
0x3825:    24 20 c7 45 00 e8 55 00  00 c7 45 14 00 56 00 00   |$ .E..U...E..V..|
0x3835:    c7 45 18 14 56 00 00 89  45 08 8b 44 24 24 c7 05   |.E..V...E..D$$..|
0x3845:    2c 56 00 00 00 00 00 00  89 45 0c 8b 44 24 28 89   |,V.......E..D$(.|
0x3855:    45 10 8d 45 18 a3 28 56  00 00 c7 04 24 10 00 00   |E..E..(V....$...|
0x3865:    00 e8                                              |..              |
; dynamically linked function: _Znwj at 0x3867 -- 0x3868
; data inside code section at 0x3868 -- 0x388f
0x3868:    ff ff ff c7 40 04 01 00  00 00 c7 00 50 56 00 00   |....@.......PV..|
0x3878:    89 68 0c c7 40 08 01 00  00 00 a3 2c 56 00 00 c7   |.h..@......,V...|
0x3888:    04 24 28 56 00 00 e8                               |.$(V...         |
; dynamically linked function: __cxa_guard_release at 0x388f -- 0x3890
; data inside code section at 0x3890 -- 0x3897
0x3890:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x3897 -- 0x38aa
; data inside code section at 0x38aa -- 0x38ab
0x38aa:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x38ab -- 0x38ac
; data inside code section at 0x38ac -- 0x38af
0x38ac:    ff ff ff                                           |...             |
; function: function_38af at 0x38af -- 0x38b4
0x38af:    e9 a0 fe ff ff                     	jmp 0x3754
; function: function_38b4 at 0x38b4 -- 0x38b5
; dynamically linked function: __stack_chk_fail at 0x38b5 -- 0x38b6
; data inside code section at 0x38b6 -- 0x38c1
0x38b6:    ff ff ff 89 04 24 8d 74  26 00 e8                  |.....$.t&..     |
; dynamically linked function: __cxa_begin_catch at 0x38c1 -- 0x38c2
; data inside code section at 0x38c2 -- 0x38cf
0x38c2:    ff ff ff 8b 45 00 89 2c  24 ff 50 04 e8            |....E..,$.P..   |
; dynamically linked function: __cxa_rethrow at 0x38cf -- 0x38d0
; data inside code section at 0x38d0 -- 0x38d4
0x38d0:    ff ff ff 89                                        |....            |
; function: function_38d4 at 0x38d4 -- 0x38d5
0x38d4:    c3                                 	ret 
; data inside code section at 0x38d5 -- 0x38d9
0x38d5:    89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZdlPv at 0x38d9 -- 0x38da
; data inside code section at 0x38da -- 0x38dd
0x38da:    ff ff ff                                           |...             |
; function: function_38dd at 0x38dd -- 0x38de
; data inside code section at 0x38de -- 0x38e5
0x38de:    04 24 28 56 00 00 e8                               |.$(V...         |
; dynamically linked function: __cxa_guard_abort at 0x38e5 -- 0x38e6
; data inside code section at 0x38e6 -- 0x38f1
0x38e6:    ff ff ff 89 34 24 e8 4f  2f 00 00                  |....4$.O/..     |
; function: function_38f1 at 0x38f1 -- 0x38f2
; data inside code section at 0x38f2 -- 0x38fd
0x38f2:    3c 24 e8 d7 2e 00 00 89  1c 24 e8                  |<$.......$.     |
; dynamically linked function: _Unwind_Resume at 0x38fd -- 0x38fe
; data inside code section at 0x38fe -- 0x3902
0x38fe:    ff ff ff 89                                        |....            |
; function: function_3902 at 0x3902 -- 0x3903
0x3902:    c3                                 	ret 
; data inside code section at 0x3903 -- 0x3904
0x3903:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x3904 -- 0x3905
; data inside code section at 0x3905 -- 0x3908
0x3905:    ff ff ff                                           |...             |
; function: function_3908 at 0x3908 -- 0x390a
0x3908:    eb d3                              	jmp 0x38dd <function_38dd>
; function: function_390a at 0x390a -- 0x3912
0x390a:    89 c3                              	mov ebx, eax
0x390c:    8d 74 26 00                        	lea esi, [esi]
0x3910:    eb cb                              	jmp 0x38dd <function_38dd>
; function: function_3912 at 0x3912 -- 0x3926
0x3912:    89 c3                              	mov ebx, eax
0x3914:    c7 44 24 30 d0 55 00 00            	mov dword ptr [esp + 0x30], 0x55d0
0x391c:    89 34 24                           	mov dword ptr [esp], esi
0x391f:    e8 ac 2e 00 00                     	call 0x67d0 <unknown_67d0>
0x3924:    eb cb                              	jmp 0x38f1 <function_38f1>
; section: .text._ZNSt6vectorIhSaIhEED2Ev
; function: _ZNSt6vectorIhSaIhEED1Ev at 0x3930 -- 0x395d
0x3930:    83 ec 1c                           	sub esp, 0x1c
0x3933:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3939:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x393d:    31 c0                              	xor eax, eax
0x393f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x3943:    8b 00                              	mov eax, dword ptr [eax]
0x3945:    85 c0                              	test eax, eax
0x3947:    74 1f                              	je 0x3968 <function_3968>
0x3949:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x394d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3954:    75 23                              	jne 0x3979 <function_3979>
0x3956:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x395a:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x395d -- 0x395e
0x395d:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x395e -- 0x395f
; data inside code section at 0x395f -- 0x3968
0x395f:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_3968 at 0x3968 -- 0x3979
0x3968:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x396c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3973:    75 04                              	jne 0x3979 <function_3979>
0x3975:    83 c4 1c                           	add esp, 0x1c
0x3978:    c3                                 	ret 
; function: function_3979 at 0x3979 -- 0x3980
0x3979:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x3980 -- 0x3981
0x3980:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3981 -- 0x3982
; data inside code section at 0x3982 -- 0x3985
0x3982:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE at 0x3990 -- 0x39c7
0x3990:    57                                 	push edi
0x3991:    56                                 	push esi
0x3992:    53                                 	push ebx
0x3993:    83 ec 20                           	sub esp, 0x20
0x3996:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x399a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x39a0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x39a4:    31 c0                              	xor eax, eax
0x39a6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x39aa:    85 db                              	test ebx, ebx
0x39ac:    75 04                              	jne 0x39b2 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE+0x22>
0x39ae:    eb 20                              	jmp 0x39d0 <function_39d0>
0x39b0:    89 f3                              	mov ebx, esi
0x39b2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x39b5:    89 3c 24                           	mov dword ptr [esp], edi
0x39b8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x39bc:    e8 5f 39 00 00                     	call 0x7320 <unknown_7320>
0x39c1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x39c4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x39c7 -- 0x39c8
0x39c7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x39c8 -- 0x39c9
; data inside code section at 0x39c9 -- 0x39d0
0x39c9:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_39d0 at 0x39d0 -- 0x39e4
0x39d0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x39d4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x39db:    75 07                              	jne 0x39e4 <function_39d0+0x13>
0x39dd:    83 c4 20                           	add esp, 0x20
0x39e0:    5b                                 	pop ebx
0x39e1:    5e                                 	pop esi
0x39e2:    5f                                 	pop edi
0x39e3:    c3                                 	ret 
; data inside code section at 0x39e4 -- 0x39e5
0x39e4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x39e5 -- 0x39e6
; data inside code section at 0x39e6 -- 0x39e9
0x39e6:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi
; function: _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi at 0x39f0 -- 0x3a78
0x39f0:    83 ec 4c                           	sub esp, 0x4c
0x39f3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x39f7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x39fb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3a01:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x3a05:    31 c0                              	xor eax, eax
0x3a07:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x3a0b:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x3a0f:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x3a13:    8b 7c 24 58                        	mov edi, dword ptr [esp + 0x58]
0x3a17:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x3a1a:    3b 53 08                           	cmp edx, dword ptr [ebx + 8]
0x3a1d:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x3a21:    74 5d                              	je 0x3a80 <function_3a80>
0x3a23:    85 d2                              	test edx, edx
0x3a25:    74 05                              	je 0x3a2c <_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi+0x3c>
0x3a27:    8b 42 fc                           	mov eax, dword ptr [edx - 4]
0x3a2a:    89 02                              	mov dword ptr [edx], eax
0x3a2c:    8d 42 04                           	lea eax, [edx + 4]
0x3a2f:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3a32:    8d 42 fc                           	lea eax, [edx - 4]
0x3a35:    8b 1f                              	mov ebx, dword ptr [edi]
0x3a37:    29 f0                              	sub eax, esi
0x3a39:    c1 f8 02                           	sar eax, 2
0x3a3c:    85 c0                              	test eax, eax
0x3a3e:    75 28                              	jne 0x3a68 <_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi+0x78>
0x3a40:    89 1e                              	mov dword ptr [esi], ebx
0x3a42:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x3a46:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3a4d:    0f 85 19 01 00 00                  	jne 0x3b6c <function_3b6c>
0x3a53:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x3a57:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x3a5b:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x3a5f:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x3a63:    83 c4 4c                           	add esp, 0x4c
0x3a66:    c3                                 	ret 
; data inside code section at 0x3a67 -- 0x3a68
0x3a67:    90                                                 |.               |
0x3a68:    c1 e0 02                           	shl eax, 2
0x3a6b:    29 c2                              	sub edx, eax
0x3a6d:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3a71:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3a75:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x3a78 -- 0x3a79
0x3a78:    e8                                                 |.               |
; dynamically linked function: memmove at 0x3a79 -- 0x3a7a
; data inside code section at 0x3a7a -- 0x3a7d
0x3a7a:    ff ff ff                                           |...             |
; function: function_3a7d at 0x3a7d -- 0x3a7f
0x3a7d:    eb c1                              	jmp 0x3a40
; data inside code section at 0x3a7f -- 0x3a80
0x3a7f:    90                                                 |.               |
; function: function_3a80 at 0x3a80 -- 0x3ab4
0x3a80:    8b 03                              	mov eax, dword ptr [ebx]
0x3a82:    29 c2                              	sub edx, eax
0x3a84:    c1 fa 02                           	sar edx, 2
0x3a87:    85 d2                              	test edx, edx
0x3a89:    0f 84 81 00 00 00                  	je 0x3b10 <function_3b10>
0x3a8f:    8d 0c 12                           	lea ecx, [edx + edx]
0x3a92:    39 ca                              	cmp edx, ecx
0x3a94:    0f 86 d7 00 00 00                  	jbe 0x3b71 <function_3b71>
0x3a9a:    89 f2                              	mov edx, esi
0x3a9c:    29 c2                              	sub edx, eax
0x3a9e:    c1 fa 02                           	sar edx, 2
0x3aa1:    c7 44 24 1c fc ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffffc
0x3aa9:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3aad:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x3ab1:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3ab4 -- 0x3ab5
0x3ab4:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3ab5 -- 0x3ab6
; data inside code section at 0x3ab6 -- 0x3ac1
0x3ab6:    ff ff ff 8b 54 24 18 89  c5 8b 03                  |....T$.....     |
; function: function_3ac1 at 0x3ac1 -- 0x3af7
0x3ac1:    8d 54 95 00                        	lea edx, [ebp + edx*4]
0x3ac5:    85 d2                              	test edx, edx
0x3ac7:    74 04                              	je 0x3acd <function_3ac1+0xc>
0x3ac9:    8b 0f                              	mov ecx, dword ptr [edi]
0x3acb:    89 0a                              	mov dword ptr [edx], ecx
0x3acd:    89 f2                              	mov edx, esi
0x3acf:    31 ff                              	xor edi, edi
0x3ad1:    29 c2                              	sub edx, eax
0x3ad3:    c1 fa 02                           	sar edx, 2
0x3ad6:    85 d2                              	test edx, edx
0x3ad8:    75 4e                              	jne 0x3b28 <function_3b28>
0x3ada:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x3add:    8d 54 3d 04                        	lea edx, [ebp + edi + 4]
0x3ae1:    31 ff                              	xor edi, edi
0x3ae3:    29 f0                              	sub eax, esi
0x3ae5:    c1 f8 02                           	sar eax, 2
0x3ae8:    85 c0                              	test eax, eax
0x3aea:    75 5c                              	jne 0x3b48 <function_3b48>
0x3aec:    8b 03                              	mov eax, dword ptr [ebx]
0x3aee:    01 d7                              	add edi, edx
0x3af0:    85 c0                              	test eax, eax
0x3af2:    74 08                              	je 0x3afc <function_3afc>
0x3af4:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3af7 -- 0x3af8
0x3af7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3af8 -- 0x3af9
; data inside code section at 0x3af9 -- 0x3afc
0x3af9:    ff ff ff                                           |...             |
; function: function_3afc at 0x3afc -- 0x3b0d
0x3afc:    89 2b                              	mov dword ptr [ebx], ebp
0x3afe:    03 6c 24 1c                        	add ebp, dword ptr [esp + 0x1c]
0x3b02:    89 7b 04                           	mov dword ptr [ebx + 4], edi
0x3b05:    89 6b 08                           	mov dword ptr [ebx + 8], ebp
0x3b08:    e9 35 ff ff ff                     	jmp 0x3a42
; data inside code section at 0x3b0d -- 0x3b10
0x3b0d:    8d 76 00                                           |.v.             |
; function: function_3b10 at 0x3b10 -- 0x3b21
0x3b10:    89 f2                              	mov edx, esi
0x3b12:    29 c2                              	sub edx, eax
0x3b14:    c1 fa 02                           	sar edx, 2
0x3b17:    c7 44 24 1c 04 00 00 00            	mov dword ptr [esp + 0x1c], 4
0x3b1f:    eb 88                              	jmp 0x3aa9
; data inside code section at 0x3b21 -- 0x3b28
0x3b21:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_3b28 at 0x3b28 -- 0x3b41
0x3b28:    8d 3c 95 00 00 00 00               	lea edi, [edx*4]
0x3b2f:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x3b33:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3b37:    89 2c 24                           	mov dword ptr [esp], ebp
0x3b3a:    e8 fc ff ff ff                     	call 0x3b3b
0x3b3f:    eb 99                              	jmp 0x3ada
; data inside code section at 0x3b41 -- 0x3b48
0x3b41:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_3b48 at 0x3b48 -- 0x3b5e
0x3b48:    8d 3c 85 00 00 00 00               	lea edi, [eax*4]
0x3b4f:    89 14 24                           	mov dword ptr [esp], edx
0x3b52:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x3b56:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x3b5a:    89 74 24 04                        	mov dword ptr [esp + 4], esi
; data inside code section at 0x3b5e -- 0x3b5f
0x3b5e:    e8                                                 |.               |
; dynamically linked function: memmove at 0x3b5f -- 0x3b60
; data inside code section at 0x3b60 -- 0x3b63
0x3b60:    ff ff ff                                           |...             |
; function: function_3b63 at 0x3b63 -- 0x3b6c
0x3b63:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x3b67:    e9 80 ff ff ff                     	jmp 0x3aec
; function: function_3b6c at 0x3b6c -- 0x3b6d
; dynamically linked function: __stack_chk_fail at 0x3b6d -- 0x3b6e
; data inside code section at 0x3b6e -- 0x3b71
0x3b6e:    ff ff ff                                           |...             |
; function: function_3b71 at 0x3b71 -- 0x3b9a
0x3b71:    81 f9 ff ff ff 3f                  	cmp ecx, 0x3fffffff
0x3b77:    0f 87 1d ff ff ff                  	ja 0x3a9a
0x3b7d:    c1 e2 03                           	shl edx, 3
0x3b80:    31 ed                              	xor ebp, ebp
0x3b82:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x3b86:    89 f2                              	mov edx, esi
0x3b88:    29 c2                              	sub edx, eax
0x3b8a:    c1 fa 02                           	sar edx, 2
0x3b8d:    85 c9                              	test ecx, ecx
0x3b8f:    0f 84 2c ff ff ff                  	je 0x3ac1 <function_3ac1>
0x3b95:    e9 0f ff ff ff                     	jmp 0x3aa9
; section: .text._ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x3ba0 -- 0x3bd7
0x3ba0:    57                                 	push edi
0x3ba1:    56                                 	push esi
0x3ba2:    53                                 	push ebx
0x3ba3:    83 ec 20                           	sub esp, 0x20
0x3ba6:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x3baa:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3bb0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3bb4:    31 c0                              	xor eax, eax
0x3bb6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x3bba:    85 db                              	test ebx, ebx
0x3bbc:    75 04                              	jne 0x3bc2 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x3bbe:    eb 20                              	jmp 0x3be0 <function_3be0>
0x3bc0:    89 f3                              	mov ebx, esi
0x3bc2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x3bc5:    89 3c 24                           	mov dword ptr [esp], edi
0x3bc8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3bcc:    e8 6f 3b 00 00                     	call 0x7740 <unknown_7740>
0x3bd1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x3bd4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3bd7 -- 0x3bd8
0x3bd7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3bd8 -- 0x3bd9
; data inside code section at 0x3bd9 -- 0x3be0
0x3bd9:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_3be0 at 0x3be0 -- 0x3bf4
0x3be0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3be4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3beb:    75 07                              	jne 0x3bf4 <function_3be0+0x13>
0x3bed:    83 c4 20                           	add esp, 0x20
0x3bf0:    5b                                 	pop ebx
0x3bf1:    5e                                 	pop esi
0x3bf2:    5f                                 	pop edi
0x3bf3:    c3                                 	ret 
; data inside code section at 0x3bf4 -- 0x3bf5
0x3bf4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3bf5 -- 0x3bf6
; data inside code section at 0x3bf6 -- 0x3bf9
0x3bf6:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x3c00 -- 0x3c37
0x3c00:    57                                 	push edi
0x3c01:    56                                 	push esi
0x3c02:    53                                 	push ebx
0x3c03:    83 ec 20                           	sub esp, 0x20
0x3c06:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x3c0a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3c10:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3c14:    31 c0                              	xor eax, eax
0x3c16:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x3c1a:    85 db                              	test ebx, ebx
0x3c1c:    75 04                              	jne 0x3c22 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x3c1e:    eb 20                              	jmp 0x3c40 <function_3c40>
0x3c20:    89 f3                              	mov ebx, esi
0x3c22:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x3c25:    89 3c 24                           	mov dword ptr [esp], edi
0x3c28:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3c2c:    e8 cf 3b 00 00                     	call 0x7800 <unknown_7800>
0x3c31:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x3c34:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3c37 -- 0x3c38
0x3c37:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3c38 -- 0x3c39
; data inside code section at 0x3c39 -- 0x3c40
0x3c39:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_3c40 at 0x3c40 -- 0x3c54
0x3c40:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3c44:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3c4b:    75 07                              	jne 0x3c54 <function_3c40+0x13>
0x3c4d:    83 c4 20                           	add esp, 0x20
0x3c50:    5b                                 	pop ebx
0x3c51:    5e                                 	pop esi
0x3c52:    5f                                 	pop edi
0x3c53:    c3                                 	ret 
; data inside code section at 0x3c54 -- 0x3c55
0x3c54:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3c55 -- 0x3c56
; data inside code section at 0x3c56 -- 0x3c59
0x3c56:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_
; function: _ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_ at 0x3c60 -- 0x3cdd
0x3c60:    55                                 	push ebp
0x3c61:    57                                 	push edi
0x3c62:    56                                 	push esi
0x3c63:    53                                 	push ebx
0x3c64:    83 ec 3c                           	sub esp, 0x3c
0x3c67:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x3c6b:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x3c72:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x3c76:    31 d2                              	xor edx, edx
0x3c78:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x3c7c:    8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0x3c7f:    8d 6f 04                           	lea ebp, [edi + 4]
0x3c82:    89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0x3c86:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x3c8a:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3c8e:    89 eb                              	mov ebx, ebp
0x3c90:    85 d2                              	test edx, edx
0x3c92:    74 27                              	je 0x3cbb <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_+0x5b>
0x3c94:    8b 10                              	mov edx, dword ptr [eax]
0x3c96:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3c9a:    eb 0b                              	jmp 0x3ca7 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_+0x47>
; data inside code section at 0x3c9c -- 0x3ca0
0x3c9c:    8d 74 26 00                                        |.t&.            |
0x3ca0:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x3ca3:    85 c0                              	test eax, eax
0x3ca5:    74 10                              	je 0x3cb7 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_+0x57>
0x3ca7:    39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x3caa:    7c f4                              	jl 0x3ca0 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_+0x40>
0x3cac:    7e 7a                              	jle 0x3d28 <function_3d28>
0x3cae:    89 c3                              	mov ebx, eax
0x3cb0:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x3cb3:    85 c0                              	test eax, eax
0x3cb5:    75 f0                              	jne 0x3ca7 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_+0x47>
0x3cb7:    89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x3cbb:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x3cbe:    39 5f 0c                           	cmp dword ptr [edi + 0xc], ebx
0x3cc1:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x3cc5:    0f 84 ca 00 00 00                  	je 0x3d95 <function_3d95>
0x3ccb:    3b 5c 24 14                        	cmp ebx, dword ptr [esp + 0x14]
0x3ccf:    75 09                              	jne 0x3cda <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE5eraseERS1_+0x7a>
0x3cd1:    e9 f2 00 00 00                     	jmp 0x3dc8 <function_3dc8>
; data inside code section at 0x3cd6 -- 0x3cd8
0x3cd6:    66 90                                              |f.              |
0x3cd8:    89 f3                              	mov ebx, esi
0x3cda:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3cdd -- 0x3cde
0x3cdd:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x3cde -- 0x3cdf
; data inside code section at 0x3cdf -- 0x3d0b
0x3cdf:    ff ff ff 89 6c 24 04 89  1c 24 89 c6 e8 fc ff ff   |....l$...$......|
0x3cef:    ff 89 04 24 e8 fc ff ff  ff 8b 47 14 83 e8 01 3b   |...$......G....;|
0x3cff:    74 24 14 89 47 14 75 d1  29 44 24 18               |t$..G.u.)D$.    |
; function: function_3d0b at 0x3d0b -- 0x3d28
0x3d0b:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x3d0f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3d16:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3d1a:    0f 85 b5 00 00 00                  	jne 0x3dd5 <function_3dd5>
0x3d20:    83 c4 3c                           	add esp, 0x3c
0x3d23:    5b                                 	pop ebx
0x3d24:    5e                                 	pop esi
0x3d25:    5f                                 	pop edi
0x3d26:    5d                                 	pop ebp
0x3d27:    c3                                 	ret 
; function: function_3d28 at 0x3d28 -- 0x3d95
0x3d28:    8b 70 0c                           	mov esi, dword ptr [eax + 0xc]
0x3d2b:    8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x3d2e:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x3d32:    85 f6                              	test esi, esi
0x3d34:    75 0b                              	jne 0x3d41 <function_3d28+0x19>
0x3d36:    eb 19                              	jmp 0x3d51 <function_3d28+0x29>
0x3d38:    89 f3                              	mov ebx, esi
0x3d3a:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x3d3d:    85 f6                              	test esi, esi
0x3d3f:    74 0c                              	je 0x3d4d <function_3d28+0x25>
0x3d41:    39 56 10                           	cmp dword ptr [esi + 0x10], edx
0x3d44:    7f f2                              	jg 0x3d38 <function_3d28+0x10>
0x3d46:    8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0x3d49:    85 f6                              	test esi, esi
0x3d4b:    75 f4                              	jne 0x3d41 <function_3d28+0x19>
0x3d4d:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x3d51:    8b 5c 24 18                        	mov ebx, dword ptr [esp + 0x18]
0x3d55:    85 c9                              	test ecx, ecx
0x3d57:    89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x3d5b:    89 c3                              	mov ebx, eax
0x3d5d:    75 12                              	jne 0x3d71 <function_3d28+0x49>
0x3d5f:    e9 57 ff ff ff                     	jmp 0x3cbb
; data inside code section at 0x3d64 -- 0x3d68
0x3d64:    8d 74 26 00                                        |.t&.            |
0x3d68:    89 cb                              	mov ebx, ecx
0x3d6a:    8b 49 08                           	mov ecx, dword ptr [ecx + 8]
0x3d6d:    85 c9                              	test ecx, ecx
0x3d6f:    74 0c                              	je 0x3d7d <function_3d28+0x55>
0x3d71:    39 51 10                           	cmp dword ptr [ecx + 0x10], edx
0x3d74:    7d f2                              	jge 0x3d68 <function_3d28+0x40>
0x3d76:    8b 49 0c                           	mov ecx, dword ptr [ecx + 0xc]
0x3d79:    85 c9                              	test ecx, ecx
0x3d7b:    75 f4                              	jne 0x3d71 <function_3d28+0x49>
0x3d7d:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3d81:    39 5f 0c                           	cmp dword ptr [edi + 0xc], ebx
0x3d84:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x3d88:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x3d8b:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x3d8f:    0f 85 36 ff ff ff                  	jne 0x3ccb
; function: function_3d95 at 0x3d95 -- 0x3dc8
0x3d95:    3b 6c 24 14                        	cmp ebp, dword ptr [esp + 0x14]
0x3d99:    0f 85 2c ff ff ff                  	jne 0x3ccb
0x3d9f:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x3da3:    89 3c 24                           	mov dword ptr [esp], edi
0x3da6:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x3daa:    e8 51 3a 00 00                     	call 0x7800 <unknown_7800>
0x3daf:    89 6f 0c                           	mov dword ptr [edi + 0xc], ebp
0x3db2:    c7 47 08 00 00 00 00               	mov dword ptr [edi + 8], 0
0x3db9:    89 6f 10                           	mov dword ptr [edi + 0x10], ebp
0x3dbc:    c7 47 14 00 00 00 00               	mov dword ptr [edi + 0x14], 0
0x3dc3:    e9 43 ff ff ff                     	jmp 0x3d0b <function_3d0b>
; function: function_3dc8 at 0x3dc8 -- 0x3dd5
0x3dc8:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x3dd0:    e9 36 ff ff ff                     	jmp 0x3d0b <function_3d0b>
; function: function_3dd5 at 0x3dd5 -- 0x3dd6
; dynamically linked function: __stack_chk_fail at 0x3dd6 -- 0x3dd7
; data inside code section at 0x3dd7 -- 0x3dda
0x3dd7:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi at 0x3de0 -- 0x3e5d
0x3de0:    55                                 	push ebp
0x3de1:    57                                 	push edi
0x3de2:    56                                 	push esi
0x3de3:    53                                 	push ebx
0x3de4:    83 ec 3c                           	sub esp, 0x3c
0x3de7:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x3deb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x3df2:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x3df6:    31 d2                              	xor edx, edx
0x3df8:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x3dfc:    8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0x3dff:    8d 6f 04                           	lea ebp, [edi + 4]
0x3e02:    89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0x3e06:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x3e0a:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x3e0e:    89 eb                              	mov ebx, ebp
0x3e10:    85 c9                              	test ecx, ecx
0x3e12:    74 27                              	je 0x3e3b <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi+0x5b>
0x3e14:    8b 10                              	mov edx, dword ptr [eax]
0x3e16:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3e1a:    eb 0b                              	jmp 0x3e27 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi+0x47>
; data inside code section at 0x3e1c -- 0x3e20
0x3e1c:    8d 74 26 00                                        |.t&.            |
0x3e20:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x3e23:    85 c0                              	test eax, eax
0x3e25:    74 10                              	je 0x3e37 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi+0x57>
0x3e27:    39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x3e2a:    7c f4                              	jl 0x3e20 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi+0x40>
0x3e2c:    7e 7a                              	jle 0x3ea8 <function_3ea8>
0x3e2e:    89 c3                              	mov ebx, eax
0x3e30:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x3e33:    85 c0                              	test eax, eax
0x3e35:    75 f0                              	jne 0x3e27 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi+0x47>
0x3e37:    89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x3e3b:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x3e3e:    39 5f 0c                           	cmp dword ptr [edi + 0xc], ebx
0x3e41:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x3e45:    0f 84 ca 00 00 00                  	je 0x3f15 <function_3f15>
0x3e4b:    3b 5c 24 14                        	cmp ebx, dword ptr [esp + 0x14]
0x3e4f:    75 09                              	jne 0x3e5a <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi+0x7a>
0x3e51:    e9 f2 00 00 00                     	jmp 0x3f48 <function_3f48>
; data inside code section at 0x3e56 -- 0x3e58
0x3e56:    66 90                                              |f.              |
0x3e58:    89 f3                              	mov ebx, esi
0x3e5a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3e5d -- 0x3e5e
0x3e5d:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x3e5e -- 0x3e5f
; data inside code section at 0x3e5f -- 0x3e8b
0x3e5f:    ff ff ff 89 6c 24 04 89  1c 24 89 c6 e8 fc ff ff   |....l$...$......|
0x3e6f:    ff 89 04 24 e8 fc ff ff  ff 8b 47 14 83 e8 01 3b   |...$......G....;|
0x3e7f:    74 24 14 89 47 14 75 d1  29 44 24 18               |t$..G.u.)D$.    |
; function: function_3e8b at 0x3e8b -- 0x3ea8
0x3e8b:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x3e8f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3e96:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3e9a:    0f 85 b5 00 00 00                  	jne 0x3f55 <function_3f55>
0x3ea0:    83 c4 3c                           	add esp, 0x3c
0x3ea3:    5b                                 	pop ebx
0x3ea4:    5e                                 	pop esi
0x3ea5:    5f                                 	pop edi
0x3ea6:    5d                                 	pop ebp
0x3ea7:    c3                                 	ret 
; function: function_3ea8 at 0x3ea8 -- 0x3f15
0x3ea8:    8b 70 0c                           	mov esi, dword ptr [eax + 0xc]
0x3eab:    8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x3eae:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x3eb2:    85 f6                              	test esi, esi
0x3eb4:    75 0b                              	jne 0x3ec1 <function_3ea8+0x19>
0x3eb6:    eb 19                              	jmp 0x3ed1 <function_3ea8+0x29>
0x3eb8:    89 f3                              	mov ebx, esi
0x3eba:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x3ebd:    85 f6                              	test esi, esi
0x3ebf:    74 0c                              	je 0x3ecd <function_3ea8+0x25>
0x3ec1:    39 56 10                           	cmp dword ptr [esi + 0x10], edx
0x3ec4:    7f f2                              	jg 0x3eb8 <function_3ea8+0x10>
0x3ec6:    8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0x3ec9:    85 f6                              	test esi, esi
0x3ecb:    75 f4                              	jne 0x3ec1 <function_3ea8+0x19>
0x3ecd:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x3ed1:    8b 5c 24 18                        	mov ebx, dword ptr [esp + 0x18]
0x3ed5:    85 c9                              	test ecx, ecx
0x3ed7:    89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x3edb:    89 c3                              	mov ebx, eax
0x3edd:    75 12                              	jne 0x3ef1 <function_3ea8+0x49>
0x3edf:    e9 57 ff ff ff                     	jmp 0x3e3b
; data inside code section at 0x3ee4 -- 0x3ee8
0x3ee4:    8d 74 26 00                                        |.t&.            |
0x3ee8:    89 cb                              	mov ebx, ecx
0x3eea:    8b 49 08                           	mov ecx, dword ptr [ecx + 8]
0x3eed:    85 c9                              	test ecx, ecx
0x3eef:    74 0c                              	je 0x3efd <function_3ea8+0x55>
0x3ef1:    39 51 10                           	cmp dword ptr [ecx + 0x10], edx
0x3ef4:    7d f2                              	jge 0x3ee8 <function_3ea8+0x40>
0x3ef6:    8b 49 0c                           	mov ecx, dword ptr [ecx + 0xc]
0x3ef9:    85 c9                              	test ecx, ecx
0x3efb:    75 f4                              	jne 0x3ef1 <function_3ea8+0x49>
0x3efd:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3f01:    39 5f 0c                           	cmp dword ptr [edi + 0xc], ebx
0x3f04:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x3f08:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x3f0b:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x3f0f:    0f 85 36 ff ff ff                  	jne 0x3e4b
; function: function_3f15 at 0x3f15 -- 0x3f48
0x3f15:    3b 6c 24 14                        	cmp ebp, dword ptr [esp + 0x14]
0x3f19:    0f 85 2c ff ff ff                  	jne 0x3e4b
0x3f1f:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x3f23:    89 3c 24                           	mov dword ptr [esp], edi
0x3f26:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x3f2a:    e8 41 38 00 00                     	call 0x7770 <unknown_7770>
0x3f2f:    89 6f 0c                           	mov dword ptr [edi + 0xc], ebp
0x3f32:    c7 47 08 00 00 00 00               	mov dword ptr [edi + 8], 0
0x3f39:    89 6f 10                           	mov dword ptr [edi + 0x10], ebp
0x3f3c:    c7 47 14 00 00 00 00               	mov dword ptr [edi + 0x14], 0
0x3f43:    e9 43 ff ff ff                     	jmp 0x3e8b <function_3e8b>
; function: function_3f48 at 0x3f48 -- 0x3f55
0x3f48:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x3f50:    e9 36 ff ff ff                     	jmp 0x3e8b <function_3e8b>
; function: function_3f55 at 0x3f55 -- 0x3f56
; dynamically linked function: __stack_chk_fail at 0x3f56 -- 0x3f57
; data inside code section at 0x3f57 -- 0x3f5a
0x3f57:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_
; function: _ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_ at 0x3f60 -- 0x418d
0x3f60:    55                                 	push ebp
0x3f61:    57                                 	push edi
0x3f62:    56                                 	push esi
0x3f63:    53                                 	push ebx
0x3f64:    83 ec 5c                           	sub esp, 0x5c
0x3f67:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x3f6b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3f71:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x3f75:    31 c0                              	xor eax, eax
0x3f77:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
0x3f7b:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x3f7f:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x3f82:    3b 46 08                           	cmp eax, dword ptr [esi + 8]
0x3f85:    0f 84 65 01 00 00                  	je 0x40f0 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x190>
0x3f8b:    31 d2                              	xor edx, edx
0x3f8d:    85 c0                              	test eax, eax
0x3f8f:    74 3e                              	je 0x3fcf <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x6f>
0x3f91:    8b 50 d8                           	mov edx, dword ptr [eax - 0x28]
0x3f94:    89 10                              	mov dword ptr [eax], edx
0x3f96:    8b 50 dc                           	mov edx, dword ptr [eax - 0x24]
0x3f99:    89 50 04                           	mov dword ptr [eax + 4], edx
0x3f9c:    8b 50 e0                           	mov edx, dword ptr [eax - 0x20]
0x3f9f:    89 50 08                           	mov dword ptr [eax + 8], edx
0x3fa2:    8b 50 e4                           	mov edx, dword ptr [eax - 0x1c]
0x3fa5:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x3fa8:    8b 50 e8                           	mov edx, dword ptr [eax - 0x18]
0x3fab:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x3fae:    8b 50 ec                           	mov edx, dword ptr [eax - 0x14]
0x3fb1:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x3fb4:    8b 50 f0                           	mov edx, dword ptr [eax - 0x10]
0x3fb7:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x3fba:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x3fbd:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x3fc0:    8b 50 f8                           	mov edx, dword ptr [eax - 8]
0x3fc3:    89 50 20                           	mov dword ptr [eax + 0x20], edx
0x3fc6:    8b 50 fc                           	mov edx, dword ptr [eax - 4]
0x3fc9:    89 50 24                           	mov dword ptr [eax + 0x24], edx
0x3fcc:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x3fcf:    8d 42 28                           	lea eax, [edx + 0x28]
0x3fd2:    89 46 04                           	mov dword ptr [esi + 4], eax
0x3fd5:    8b 45 00                           	mov eax, dword ptr [ebp]
0x3fd8:    8d 4a d8                           	lea ecx, [edx - 0x28]
0x3fdb:    89 ce                              	mov esi, ecx
0x3fdd:    29 de                              	sub esi, ebx
0x3fdf:    c1 fe 03                           	sar esi, 3
0x3fe2:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x3fe6:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x3fe9:    69 f6 cd cc cc cc                  	imul esi, esi, 0xcccccccd
0x3fef:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x3ff3:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x3ff6:    85 f6                              	test esi, esi
0x3ff8:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x3ffc:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x3fff:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x4003:    8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0x4006:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x400a:    8b 45 14                           	mov eax, dword ptr [ebp + 0x14]
0x400d:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x4011:    8b 45 18                           	mov eax, dword ptr [ebp + 0x18]
0x4014:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x4018:    8b 45 1c                           	mov eax, dword ptr [ebp + 0x1c]
0x401b:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x401f:    8b 45 20                           	mov eax, dword ptr [ebp + 0x20]
0x4022:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x4026:    8b 45 24                           	mov eax, dword ptr [ebp + 0x24]
0x4029:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x402d:    7e 61                              	jle 0x4090 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x130>
0x402f:    31 c0                              	xor eax, eax
0x4031:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x4038:    8b 7c 01 d8                        	mov edi, dword ptr [ecx + eax - 0x28]
0x403c:    89 7c 02 d8                        	mov dword ptr [edx + eax - 0x28], edi
0x4040:    8b 7c 01 dc                        	mov edi, dword ptr [ecx + eax - 0x24]
0x4044:    89 7c 02 dc                        	mov dword ptr [edx + eax - 0x24], edi
0x4048:    8b 7c 01 e0                        	mov edi, dword ptr [ecx + eax - 0x20]
0x404c:    89 7c 02 e0                        	mov dword ptr [edx + eax - 0x20], edi
0x4050:    8b 7c 01 e4                        	mov edi, dword ptr [ecx + eax - 0x1c]
0x4054:    89 7c 02 e4                        	mov dword ptr [edx + eax - 0x1c], edi
0x4058:    8b 7c 01 e8                        	mov edi, dword ptr [ecx + eax - 0x18]
0x405c:    89 7c 02 e8                        	mov dword ptr [edx + eax - 0x18], edi
0x4060:    8b 7c 01 ec                        	mov edi, dword ptr [ecx + eax - 0x14]
0x4064:    89 7c 02 ec                        	mov dword ptr [edx + eax - 0x14], edi
0x4068:    8b 7c 01 f0                        	mov edi, dword ptr [ecx + eax - 0x10]
0x406c:    89 7c 02 f0                        	mov dword ptr [edx + eax - 0x10], edi
0x4070:    8b 7c 01 f4                        	mov edi, dword ptr [ecx + eax - 0xc]
0x4074:    89 7c 02 f4                        	mov dword ptr [edx + eax - 0xc], edi
0x4078:    8b 7c 01 f8                        	mov edi, dword ptr [ecx + eax - 8]
0x407c:    89 7c 02 f8                        	mov dword ptr [edx + eax - 8], edi
0x4080:    8b 7c 01 fc                        	mov edi, dword ptr [ecx + eax - 4]
0x4084:    89 7c 02 fc                        	mov dword ptr [edx + eax - 4], edi
0x4088:    83 e8 28                           	sub eax, 0x28
0x408b:    83 ee 01                           	sub esi, 1
0x408e:    75 a8                              	jne 0x4038 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xd8>
0x4090:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x4094:    89 03                              	mov dword ptr [ebx], eax
0x4096:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x409a:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x409d:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x40a1:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x40a4:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x40a8:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x40ab:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x40af:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x40b2:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x40b6:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x40b9:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x40bd:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x40c0:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x40c4:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x40c7:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x40cb:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x40ce:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x40d2:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x40d5:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x40d9:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x40e0:    0f 85 21 01 00 00                  	jne 0x4207 <function_4207>
0x40e6:    83 c4 5c                           	add esp, 0x5c
0x40e9:    5b                                 	pop ebx
0x40ea:    5e                                 	pop esi
0x40eb:    5f                                 	pop edi
0x40ec:    5d                                 	pop ebp
0x40ed:    c3                                 	ret 
; data inside code section at 0x40ee -- 0x40f0
0x40ee:    66 90                                              |f.              |
0x40f0:    8b 16                              	mov edx, dword ptr [esi]
0x40f2:    29 d0                              	sub eax, edx
0x40f4:    c1 f8 03                           	sar eax, 3
0x40f7:    69 c8 cd cc cc cc                  	imul ecx, eax, 0xcccccccd
0x40fd:    85 c9                              	test ecx, ecx
0x40ff:    0f 84 b6 00 00 00                  	je 0x41bb <function_41bb>
0x4105:    8d 04 09                           	lea eax, [ecx + ecx]
0x4108:    39 c1                              	cmp ecx, eax
0x410a:    0f 86 c7 00 00 00                  	jbe 0x41d7 <function_41d7>
0x4110:    89 d9                              	mov ecx, ebx
0x4112:    29 d1                              	sub ecx, edx
0x4114:    89 ca                              	mov edx, ecx
0x4116:    c1 fa 03                           	sar edx, 3
0x4119:    69 d2 cd cc cc cc                  	imul edx, edx, 0xcccccccd
0x411f:    c7 44 24 1c f0 ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffff0
0x4127:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x412b:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x412f:    89 04 24                           	mov dword ptr [esp], eax
0x4132:    e8 fc ff ff ff                     	call 0x4133
0x4137:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x413b:    89 c7                              	mov edi, eax
0x413d:    8d 04 92                           	lea eax, [edx + edx*4]
0x4140:    8d 04 c7                           	lea eax, [edi + eax*8]
0x4143:    85 c0                              	test eax, eax
0x4145:    74 3b                              	je 0x4182 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x222>
0x4147:    8b 55 00                           	mov edx, dword ptr [ebp]
0x414a:    89 10                              	mov dword ptr [eax], edx
0x414c:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x414f:    89 50 04                           	mov dword ptr [eax + 4], edx
0x4152:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x4155:    89 50 08                           	mov dword ptr [eax + 8], edx
0x4158:    8b 55 0c                           	mov edx, dword ptr [ebp + 0xc]
0x415b:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x415e:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x4161:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x4164:    8b 55 14                           	mov edx, dword ptr [ebp + 0x14]
0x4167:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x416a:    8b 55 18                           	mov edx, dword ptr [ebp + 0x18]
0x416d:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x4170:    8b 55 1c                           	mov edx, dword ptr [ebp + 0x1c]
0x4173:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x4176:    8b 55 20                           	mov edx, dword ptr [ebp + 0x20]
0x4179:    89 50 20                           	mov dword ptr [eax + 0x20], edx
0x417c:    8b 55 24                           	mov edx, dword ptr [ebp + 0x24]
0x417f:    89 50 24                           	mov dword ptr [eax + 0x24], edx
0x4182:    8b 06                              	mov eax, dword ptr [esi]
0x4184:    89 da                              	mov edx, ebx
0x4186:    89 f9                              	mov ecx, edi
0x4188:    e8 43 fe ff ff                     	call 0x3fd0 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xcd>
; data inside code section at 0x418d -- 0x4199
0x418d:    8b 56 04 8d 48 28 89 d8  e8 36 fe ff               |.V..H(...6..    |
; function: function_4199 at 0x4199 -- 0x41a0
0x4199:    ff 8b 16 85 d2 89                  	dec dword ptr [ebx - 0x762d7aea]
0x419f:    c3                                 	ret 
; data inside code section at 0x41a0 -- 0x41a6
0x41a0:    74 08 89 14 24 e8                                  |t...$.          |
; dynamically linked function: _ZdlPv at 0x41a6 -- 0x41a7
; data inside code section at 0x41a7 -- 0x41a9
0x41a7:    ff ff                                              |..              |
; function: function_41a9 at 0x41a9 -- 0x41bb
0x41a9:    ff 89 3e 03 7c 24                  	dec dword ptr [ecx + 0x247c033e]
0x41af:    1c 89                              	sbb al, 0x89
0x41b1:    5e                                 	pop esi
0x41b2:    04 89                              	add al, 0x89
0x41b4:    7e 08                              	jle 0x41be
0x41b6:    e9 1a ff ff ff                     	jmp 0x40d5
; function: function_41bb at 0x41bb -- 0x41d7
0x41bb:    89 d8                              	mov eax, ebx
0x41bd:    29 d0                              	sub eax, edx
0x41bf:    89 c2                              	mov edx, eax
0x41c1:    c1 fa 03                           	sar edx, 3
0x41c4:    69 d2 cd cc cc cc                  	imul edx, edx, 0xcccccccd
0x41ca:    c7 44 24 1c 28 00 00 00            	mov dword ptr [esp + 0x1c], 0x28
0x41d2:    e9 50 ff ff ff                     	jmp 0x4127
; function: function_41d7 at 0x41d7 -- 0x4207
0x41d7:    3d 66 66 66 06                     	cmp eax, 0x6666666
0x41dc:    0f 87 2e ff ff ff                  	ja 0x4110
0x41e2:    6b c8 28                           	imul ecx, eax, 0x28
0x41e5:    31 ff                              	xor edi, edi
0x41e7:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x41eb:    89 d9                              	mov ecx, ebx
0x41ed:    29 d1                              	sub ecx, edx
0x41ef:    89 ca                              	mov edx, ecx
0x41f1:    c1 fa 03                           	sar edx, 3
0x41f4:    69 d2 cd cc cc cc                  	imul edx, edx, 0xcccccccd
0x41fa:    85 c0                              	test eax, eax
0x41fc:    0f 84 3b ff ff ff                  	je 0x413d
0x4202:    e9 20 ff ff ff                     	jmp 0x4127
; function: function_4207 at 0x4207 -- 0x4208
; dynamically linked function: __stack_chk_fail at 0x4208 -- 0x4209
; data inside code section at 0x4209 -- 0x420c
0x4209:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag at 0x4210 -- 0x42f0
0x4210:    55                                 	push ebp
0x4211:    57                                 	push edi
0x4212:    56                                 	push esi
0x4213:    53                                 	push ebx
0x4214:    83 ec 3c                           	sub esp, 0x3c
0x4217:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x421b:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x421f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4225:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4229:    31 c0                              	xor eax, eax
0x422b:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x422f:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x4233:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x4237:    39 da                              	cmp edx, ebx
0x4239:    74 65                              	je 0x42a0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x90>
0x423b:    8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0x423e:    89 dd                              	mov ebp, ebx
0x4240:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x4243:    29 d5                              	sub ebp, edx
0x4245:    29 c8                              	sub eax, ecx
0x4247:    39 c5                              	cmp ebp, eax
0x4249:    77 75                              	ja 0x42c0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xb0>
0x424b:    89 ca                              	mov edx, ecx
0x424d:    29 f2                              	sub edx, esi
0x424f:    39 d5                              	cmp ebp, edx
0x4251:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x4255:    0f 83 75 01 00 00                  	jae 0x43d0 <function_43d0>
0x425b:    89 c8                              	mov eax, ecx
0x425d:    29 e8                              	sub eax, ebp
0x425f:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x4263:    89 c8                              	mov eax, ecx
0x4265:    3b 4c 24 10                        	cmp ecx, dword ptr [esp + 0x10]
0x4269:    74 1b                              	je 0x4286 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x76>
0x426b:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x426f:    90                                 	nop 
0x4270:    85 c0                              	test eax, eax
0x4272:    74 05                              	je 0x4279 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x69>
0x4274:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x4277:    88 18                              	mov byte ptr [eax], bl
0x4279:    83 c2 01                           	add edx, 1
0x427c:    83 c0 01                           	add eax, 1
0x427f:    39 ca                              	cmp edx, ecx
0x4281:    75 ed                              	jne 0x4270 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x60>
0x4283:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x4286:    01 e8                              	add eax, ebp
0x4288:    89 47 04                           	mov dword ptr [edi + 4], eax
0x428b:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x428f:    29 f0                              	sub eax, esi
0x4291:    0f 85 f1 01 00 00                  	jne 0x4488 <function_4488>
0x4297:    85 ed                              	test ebp, ebp
0x4299:    0f 85 d1 01 00 00                  	jne 0x4470 <function_4470>
0x429f:    90                                 	nop 
0x42a0:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x42a4:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x42ab:    0f 85 ee 01 00 00                  	jne 0x449f <function_449f>
0x42b1:    83 c4 3c                           	add esp, 0x3c
0x42b4:    5b                                 	pop ebx
0x42b5:    5e                                 	pop esi
0x42b6:    5f                                 	pop edi
0x42b7:    5d                                 	pop ebp
0x42b8:    c3                                 	ret 
; data inside code section at 0x42b9 -- 0x42c0
0x42b9:    8d b4 26 00 00 00 00                               |..&....         |
0x42c0:    8b 07                              	mov eax, dword ptr [edi]
0x42c2:    29 c1                              	sub ecx, eax
0x42c4:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x42c8:    89 c8                              	mov eax, ecx
0x42ca:    f7 d0                              	not eax
0x42cc:    39 c5                              	cmp ebp, eax
0x42ce:    0f 87 d0 01 00 00                  	ja 0x44a4 <function_44a4>
0x42d4:    39 cd                              	cmp ebp, ecx
0x42d6:    0f 42 e9                           	cmovb ebp, ecx
0x42d9:    01 e9                              	add ecx, ebp
0x42db:    c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x42e3:    0f 83 c7 00 00 00                  	jae 0x43b0 <function_43b0>
0x42e9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x42ed:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x42f0 -- 0x42f1
0x42f0:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x42f1 -- 0x42f2
; data inside code section at 0x42f2 -- 0x42ff
0x42f2:    ff ff ff 89 44 24 10 8b  07 89 44 24 18            |....D$....D$.   |
; function: function_42ff at 0x42ff -- 0x4389
0x42ff:    39 74 24 18                        	cmp dword ptr [esp + 0x18], esi
0x4303:    8b 6c 24 10                        	mov ebp, dword ptr [esp + 0x10]
0x4307:    74 24                              	je 0x432d <function_42ff+0x2e>
0x4309:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x430d:    89 e8                              	mov eax, ebp
0x430f:    90                                 	nop 
0x4310:    85 c0                              	test eax, eax
0x4312:    74 05                              	je 0x4319 <function_42ff+0x1a>
0x4314:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x4317:    88 08                              	mov byte ptr [eax], cl
0x4319:    83 c2 01                           	add edx, 1
0x431c:    83 c0 01                           	add eax, 1
0x431f:    39 f2                              	cmp edx, esi
0x4321:    75 ed                              	jne 0x4310 <function_42ff+0x11>
0x4323:    89 f5                              	mov ebp, esi
0x4325:    2b 6c 24 18                        	sub ebp, dword ptr [esp + 0x18]
0x4329:    03 6c 24 10                        	add ebp, dword ptr [esp + 0x10]
0x432d:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x4331:    89 ea                              	mov edx, ebp
0x4333:    90                                 	nop 
0x4334:    8d 74 26 00                        	lea esi, [esi]
0x4338:    85 d2                              	test edx, edx
0x433a:    74 05                              	je 0x4341 <function_42ff+0x42>
0x433c:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x433f:    88 0a                              	mov byte ptr [edx], cl
0x4341:    83 c0 01                           	add eax, 1
0x4344:    83 c2 01                           	add edx, 1
0x4347:    39 d8                              	cmp eax, ebx
0x4349:    75 ed                              	jne 0x4338 <function_42ff+0x39>
0x434b:    2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0x434f:    01 c5                              	add ebp, eax
0x4351:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x4354:    39 f0                              	cmp eax, esi
0x4356:    74 1f                              	je 0x4377 <function_42ff+0x78>
0x4358:    89 f2                              	mov edx, esi
0x435a:    89 e9                              	mov ecx, ebp
0x435c:    8d 74 26 00                        	lea esi, [esi]
0x4360:    85 c9                              	test ecx, ecx
0x4362:    74 05                              	je 0x4369 <function_42ff+0x6a>
0x4364:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x4367:    88 19                              	mov byte ptr [ecx], bl
0x4369:    83 c2 01                           	add edx, 1
0x436c:    83 c1 01                           	add ecx, 1
0x436f:    39 c2                              	cmp edx, eax
0x4371:    75 ed                              	jne 0x4360 <function_42ff+0x61>
0x4373:    29 f2                              	sub edx, esi
0x4375:    01 d5                              	add ebp, edx
0x4377:    8b 1f                              	mov ebx, dword ptr [edi]
0x4379:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x437c:    85 db                              	test ebx, ebx
0x437e:    74 16                              	je 0x4396 <function_4396>
0x4380:    29 d8                              	sub eax, ebx
0x4382:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4386:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4389 -- 0x438a
0x4389:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x438a -- 0x438b
; data inside code section at 0x438b -- 0x4392
0x438b:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x4392 -- 0x4393
; data inside code section at 0x4393 -- 0x4396
0x4393:    ff ff ff                                           |...             |
; function: function_4396 at 0x4396 -- 0x43ab
0x4396:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x439a:    89 6f 04                           	mov dword ptr [edi + 4], ebp
0x439d:    89 07                              	mov dword ptr [edi], eax
0x439f:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x43a3:    89 47 08                           	mov dword ptr [edi + 8], eax
0x43a6:    e9 f5 fe ff ff                     	jmp 0x42a0
; data inside code section at 0x43ab -- 0x43b0
0x43ab:    90 8d 74 26 00                                     |..t&.           |
; function: function_43b0 at 0x43b0 -- 0x43cd
0x43b0:    85 c9                              	test ecx, ecx
0x43b2:    0f 85 f8 00 00 00                  	jne 0x44b0 <function_44b0>
0x43b8:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x43c0:    c7 44 24 10 00 00 00 00            	mov dword ptr [esp + 0x10], 0
0x43c8:    e9 32 ff ff ff                     	jmp 0x42ff <function_42ff>
; data inside code section at 0x43cd -- 0x43d0
0x43cd:    8d 76 00                                           |.v.             |
; function: function_43d0 at 0x43d0 -- 0x4468
0x43d0:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x43d4:    89 c8                              	mov eax, ecx
0x43d6:    03 54 24 10                        	add edx, dword ptr [esp + 0x10]
0x43da:    39 d3                              	cmp ebx, edx
0x43dc:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x43e0:    74 20                              	je 0x4402 <function_43d0+0x32>
0x43e2:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x43e6:    66 90                              	nop 
0x43e8:    85 c0                              	test eax, eax
0x43ea:    74 05                              	je 0x43f1 <function_43d0+0x21>
0x43ec:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x43ef:    88 08                              	mov byte ptr [eax], cl
0x43f1:    83 c2 01                           	add edx, 1
0x43f4:    83 c0 01                           	add eax, 1
0x43f7:    39 da                              	cmp edx, ebx
0x43f9:    75 ed                              	jne 0x43e8 <function_43d0+0x18>
0x43fb:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x43ff:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x4402:    2b 6c 24 10                        	sub ebp, dword ptr [esp + 0x10]
0x4406:    01 c5                              	add ebp, eax
0x4408:    39 f1                              	cmp ecx, esi
0x440a:    89 6f 04                           	mov dword ptr [edi + 4], ebp
0x440d:    74 20                              	je 0x442f <function_43d0+0x5f>
0x440f:    89 f0                              	mov eax, esi
0x4411:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x4418:    85 ed                              	test ebp, ebp
0x441a:    74 06                              	je 0x4422 <function_43d0+0x52>
0x441c:    0f b6 10                           	movzx edx, byte ptr [eax]
0x441f:    88 55 00                           	mov byte ptr [ebp], dl
0x4422:    83 c0 01                           	add eax, 1
0x4425:    83 c5 01                           	add ebp, 1
0x4428:    39 c8                              	cmp eax, ecx
0x442a:    75 ec                              	jne 0x4418 <function_43d0+0x48>
0x442c:    8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x442f:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x4433:    03 6c 24 10                        	add ebp, dword ptr [esp + 0x10]
0x4437:    2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0x443b:    89 6f 04                           	mov dword ptr [edi + 4], ebp
0x443e:    0f 84 5c fe ff ff                  	je 0x42a0
0x4444:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x4448:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x444f:    75 4e                              	jne 0x449f <function_449f>
0x4451:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x4455:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x4459:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x445d:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x4461:    83 c4 3c                           	add esp, 0x3c
0x4464:    5b                                 	pop ebx
0x4465:    5e                                 	pop esi
0x4466:    5f                                 	pop edi
0x4467:    5d                                 	pop ebp
; data inside code section at 0x4468 -- 0x4469
0x4468:    e9                                                 |.               |
; dynamically linked function: memmove at 0x4469 -- 0x446a
; data inside code section at 0x446a -- 0x4470
0x446a:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_4470 at 0x4470 -- 0x4483
0x4470:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x4474:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x447b:    75 22                              	jne 0x449f <function_449f>
0x447d:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x4481:    eb d2                              	jmp 0x4455
; data inside code section at 0x4483 -- 0x4488
0x4483:    90 8d 74 26 00                                     |..t&.           |
; function: function_4488 at 0x4488 -- 0x4495
0x4488:    29 c1                              	sub ecx, eax
0x448a:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x448e:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x4492:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x4495 -- 0x4496
0x4495:    e8                                                 |.               |
; dynamically linked function: memmove at 0x4496 -- 0x4497
; data inside code section at 0x4497 -- 0x449a
0x4497:    ff ff ff                                           |...             |
; function: function_449a at 0x449a -- 0x449f
0x449a:    e9 f8 fd ff ff                     	jmp 0x4297
; function: function_449f at 0x449f -- 0x44a0
; dynamically linked function: __stack_chk_fail at 0x44a0 -- 0x44a1
; data inside code section at 0x44a1 -- 0x44a4
0x44a1:    ff ff ff                                           |...             |
; function: function_44a4 at 0x44a4 -- 0x44ab
0x44a4:    c7 04 24 54 2c 00 00               	mov dword ptr [esp], 0x2c54 ; "vector::_M_range_insert"
; data inside code section at 0x44ab -- 0x44ac
0x44ab:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x44ac -- 0x44ad
; data inside code section at 0x44ad -- 0x44b0
0x44ad:    ff ff ff                                           |...             |
; function: function_44b0 at 0x44b0 -- 0x44b9
0x44b0:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x44b4:    e9 30 fe ff ff                     	jmp 0x42e9
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi at 0x44c0 -- 0x450e
0x44c0:    83 ec 4c                           	sub esp, 0x4c
0x44c3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x44c9:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x44cd:    31 c0                              	xor eax, eax
0x44cf:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x44d3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x44d7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x44db:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x44df:    8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x44e3:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x44e7:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x44eb:    85 c0                              	test eax, eax
0x44ed:    8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0x44f1:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x44f5:    8d 4b 04                           	lea ecx, [ebx + 4]
0x44f8:    bd 01 00 00 00                     	mov ebp, 1
0x44fd:    74 71                              	je 0x4570 <function_4570>
0x44ff:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x4503:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x4507:    c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0x450e -- 0x450f
0x450e:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x450f -- 0x4510
; data inside code section at 0x4510 -- 0x4539
0x4510:    ff ff ff 8b 54 24 1c 8b  4c 24 18 83 f8 f0 74 05   |....T$..L$....t.|
0x4520:    8b 12 89 50 10 89 44 24  04 89 44 24 1c 89 4c 24   |...P..D$..D$..L$|
0x4530:    0c 89 7c 24 08 89 2c 24  e8                        |..|$..,$.       |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x4539 -- 0x453a
; data inside code section at 0x453a -- 0x453c
0x453a:    ff ff                                              |..              |
; function: function_453c at 0x453c -- 0x456c
0x453c:    ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0x4542:    43                                 	inc ebx
0x4543:    14 01                              	adc al, 1
0x4545:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x4549:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4550:    89 06                              	mov dword ptr [esi], eax
0x4552:    89 f0                              	mov eax, esi
0x4554:    75 30                              	jne 0x4586 <function_4586>
0x4556:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x455a:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x455e:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x4562:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x4566:    83 c4 4c                           	add esp, 0x4c
0x4569:    c2 04 00                           	ret 4
; data inside code section at 0x456c -- 0x4570
0x456c:    8d 74 26 00                                        |.t&.            |
; function: function_4570 at 0x4570 -- 0x4586
0x4570:    39 cf                              	cmp edi, ecx
0x4572:    74 8b                              	je 0x44ff
0x4574:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x4577:    39 02                              	cmp dword ptr [edx], eax
0x4579:    0f 9c c0                           	setl al
0x457c:    0f b6 c0                           	movzx eax, al
0x457f:    89 c5                              	mov ebp, eax
0x4581:    e9 79 ff ff ff                     	jmp 0x44ff
; function: function_4586 at 0x4586 -- 0x4587
; dynamically linked function: __stack_chk_fail at 0x4587 -- 0x4588
; data inside code section at 0x4588 -- 0x458b
0x4588:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi at 0x4590 -- 0x4628
0x4590:    55                                 	push ebp
0x4591:    57                                 	push edi
0x4592:    56                                 	push esi
0x4593:    53                                 	push ebx
0x4594:    83 ec 4c                           	sub esp, 0x4c
0x4597:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x459b:    8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x459f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x45a5:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x45a9:    31 c0                              	xor eax, eax
0x45ab:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x45af:    8b 77 08                           	mov esi, dword ptr [edi + 8]
0x45b2:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x45b6:    85 f6                              	test esi, esi
0x45b8:    74 5d                              	je 0x4617 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x87>
0x45ba:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x45be:    8b 0a                              	mov ecx, dword ptr [edx]
0x45c0:    eb 14                              	jmp 0x45d6 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x46>
; data inside code section at 0x45c2 -- 0x45c8
0x45c2:    8d b6 00 00 00 00                                  |......          |
0x45c8:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x45cb:    bd 01 00 00 00                     	mov ebp, 1
0x45d0:    85 c0                              	test eax, eax
0x45d2:    74 12                              	je 0x45e6 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x56>
0x45d4:    89 c6                              	mov esi, eax
0x45d6:    8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0x45d9:    39 ca                              	cmp edx, ecx
0x45db:    7f eb                              	jg 0x45c8 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x38>
0x45dd:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x45e0:    31 ed                              	xor ebp, ebp
0x45e2:    85 c0                              	test eax, eax
0x45e4:    75 ee                              	jne 0x45d4 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x44>
0x45e6:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x45ea:    89 ea                              	mov edx, ebp
0x45ec:    89 f0                              	mov eax, esi
0x45ee:    84 d2                              	test dl, dl
0x45f0:    75 2e                              	jne 0x4620 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x90>
0x45f2:    39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0x45f6:    7c 48                              	jl 0x4640 <function_4640>
0x45f8:    89 03                              	mov dword ptr [ebx], eax
0x45fa:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x45fe:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x4602:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4609:    89 d8                              	mov eax, ebx
0x460b:    75 66                              	jne 0x4673 <function_4673>
0x460d:    83 c4 4c                           	add esp, 0x4c
0x4610:    5b                                 	pop ebx
0x4611:    5e                                 	pop esi
0x4612:    5f                                 	pop edi
0x4613:    5d                                 	pop ebp
0x4614:    c2 04 00                           	ret 4
0x4617:    8d 77 04                           	lea esi, [edi + 4]
0x461a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x4620:    3b 77 0c                           	cmp esi, dword ptr [edi + 0xc]
0x4623:    74 1b                              	je 0x4640 <function_4640>
0x4625:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x4628 -- 0x4629
0x4628:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x4629 -- 0x462a
; data inside code section at 0x462a -- 0x4640
0x462a:    ff ff ff 8b 54 24 28 8b  0a 8b 50 10 89 54 24 24   |....T$(...P..T$$|
0x463a:    39 4c 24 24 7d b8                                  |9L$$}.          |
; function: function_4640 at 0x4640 -- 0x4673
0x4640:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x4644:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x4648:    89 04 24                           	mov dword ptr [esp], eax
0x464b:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x464f:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x4657:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x465b:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x465f:    e8 ec 43 00 00                     	call 0x8a50 <unknown_8a50>
0x4664:    83 ec 04                           	sub esp, 4
0x4667:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x466b:    c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x466f:    89 03                              	mov dword ptr [ebx], eax
0x4671:    eb 8b                              	jmp 0x45fe
; function: function_4673 at 0x4673 -- 0x4678
0x4673:    e8 fc ff ff ff                     	call 0x4674
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11equal_rangeERS2_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11equal_rangeERS2_ at 0x4680 -- 0x46ba
0x4680:    55                                 	push ebp
0x4681:    57                                 	push edi
0x4682:    56                                 	push esi
0x4683:    53                                 	push ebx
0x4684:    83 ec 3c                           	sub esp, 0x3c
0x4687:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x468d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4691:    31 c0                              	xor eax, eax
0x4693:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x4697:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x469b:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x469f:    8b 7e 08                           	mov edi, dword ptr [esi + 8]
0x46a2:    83 c6 04                           	add esi, 4
0x46a5:    8d 76 00                           	lea esi, [esi]
0x46a8:    85 ff                              	test edi, edi
0x46aa:    74 22                              	je 0x46ce <function_46ce>
0x46ac:    8d 57 10                           	lea edx, [edi + 0x10]
0x46af:    89 14 24                           	mov dword ptr [esp], edx
0x46b2:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x46b6:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
; data inside code section at 0x46ba -- 0x46bb
0x46ba:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x46bb -- 0x46bc
; data inside code section at 0x46bc -- 0x46ce
0x46bc:    ff ff ff 8b 54 24 14 84  c0 74 29 8b 7f 0c 85 ff   |....T$...t).....|
0x46cc:    75 de                                              |u.              |
; function: function_46ce at 0x46ce -- 0x46f0
0x46ce:    89 33                              	mov dword ptr [ebx], esi
0x46d0:    89 73 04                           	mov dword ptr [ebx + 4], esi
0x46d3:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x46d7:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x46de:    89 d8                              	mov eax, ebx
0x46e0:    0f 85 7f 00 00 00                  	jne 0x4765 <function_4765>
0x46e6:    83 c4 3c                           	add esp, 0x3c
0x46e9:    5b                                 	pop ebx
0x46ea:    5e                                 	pop esi
0x46eb:    5f                                 	pop edi
0x46ec:    5d                                 	pop ebp
0x46ed:    c2 04 00                           	ret 4
; data inside code section at 0x46f0 -- 0x46f8
0x46f0:    89 54 24 04 89 2c 24 e8                            |.T$..,$.        |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x46f8 -- 0x46f9
; data inside code section at 0x46f9 -- 0x46fb
0x46f9:    ff ff                                              |..              |
; function: function_46fb at 0x46fb -- 0x4707
0x46fb:    ff 84 c0 74 08 89 fe               	inc dword ptr [eax + eax*8 - 0x176f78c]
0x4702:    8b 7f 08                           	mov edi, dword ptr [edi + 8]
0x4705:    eb a1                              	jmp 0x46a8
; data inside code section at 0x4707 -- 0x4718
0x4707:    90 8b 57 08 89 54 24 18  8b 57 0c 8d b6 00 00 00   |..W..T$..W......|
0x4717:    00                                                 |.               |
; function: function_4718 at 0x4718 -- 0x4719
; data inside code section at 0x4719 -- 0x471c
0x4719:    d2 74 24                                           |.t$             |
; function: function_471c at 0x471c -- 0x471d
; data inside code section at 0x471d -- 0x472b
0x471d:    42 10 89 54 24 14 89 44  24 04 89 2c 24 e8         |B..T$..D$..,$.  |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x472b -- 0x472c
; data inside code section at 0x472c -- 0x472e
0x472c:    ff ff                                              |..              |
; function: function_472e at 0x472e -- 0x4760
0x472e:    ff 8b 54 24 14 84                  	dec dword ptr [ebx - 0x7bebdbac]
0x4734:    c0 74 29 89 d6                     	sal byte ptr [ecx + ebp - 0x77], 0xd6
0x4739:    8b 52 08                           	mov edx, dword ptr [edx + 8]
0x473c:    85 d2                              	test edx, edx
0x473e:    75 dc                              	jne 0x471c <function_471c>
0x4740:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x4744:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x4748:    89 f9                              	mov ecx, edi
0x474a:    89 2c 24                           	mov dword ptr [esp], ebp
0x474d:    e8 2e ff ff ff                     	call 0x4680 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11equal_rangeERS2_>
0x4752:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4756:    89 73 04                           	mov dword ptr [ebx + 4], esi
0x4759:    89 03                              	mov dword ptr [ebx], eax
0x475b:    e9 73 ff ff ff                     	jmp 0x46d3
; function: function_4760 at 0x4760 -- 0x4765
0x4760:    8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x4763:    eb b3                              	jmp 0x4718 <function_4718>
; function: function_4765 at 0x4765 -- 0x4766
; dynamically linked function: __stack_chk_fail at 0x4766 -- 0x4767
; data inside code section at 0x4767 -- 0x476a
0x4767:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE5eraseERS2_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE5eraseERS2_ at 0x4770 -- 0x47cd
0x4770:    55                                 	push ebp
0x4771:    57                                 	push edi
0x4772:    56                                 	push esi
0x4773:    53                                 	push ebx
0x4774:    83 ec 3c                           	sub esp, 0x3c
0x4777:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x477b:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x477f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4785:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4789:    31 c0                              	xor eax, eax
0x478b:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x478f:    89 04 24                           	mov dword ptr [esp], eax
0x4792:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4796:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x479a:    e8 51 46 00 00                     	call 0x8df0 <unknown_8df0>
0x479f:    8b 57 14                           	mov edx, dword ptr [edi + 0x14]
0x47a2:    83 ec 04                           	sub esp, 4
0x47a5:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x47a9:    39 47 0c                           	cmp dword ptr [edi + 0xc], eax
0x47ac:    8b 6c 24 1c                        	mov ebp, dword ptr [esp + 0x1c]
0x47b0:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x47b4:    89 c3                              	mov ebx, eax
0x47b6:    74 60                              	je 0x4818 <function_4818>
0x47b8:    8d 57 04                           	lea edx, [edi + 4]
0x47bb:    39 c5                              	cmp ebp, eax
0x47bd:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x47c1:    75 07                              	jne 0x47ca <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE5eraseERS2_+0x5a>
0x47c3:    e9 86 00 00 00                     	jmp 0x484e <function_484e>
0x47c8:    89 f3                              	mov ebx, esi
0x47ca:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x47cd -- 0x47ce
0x47cd:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x47ce -- 0x47cf
; data inside code section at 0x47cf -- 0x47e0
0x47cf:    ff ff ff 8b 54 24 10 89  1c 24 89 54 24 04 89 c6   |....T$...$.T$...|
0x47df:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x47e0 -- 0x47e1
; data inside code section at 0x47e1 -- 0x47e8
0x47e1:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x47e8 -- 0x47e9
; data inside code section at 0x47e9 -- 0x47fd
0x47e9:    ff ff ff 8b 47 14 83 e8  01 39 ee 89 47 14 75 cf   |....G....9..G.u.|
0x47f9:    29 44 24 14                                        |)D$.            |
; function: function_47fd at 0x47fd -- 0x4816
0x47fd:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x4801:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4808:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x480c:    75 4a                              	jne 0x4858 <function_4858>
0x480e:    83 c4 3c                           	add esp, 0x3c
0x4811:    5b                                 	pop ebx
0x4812:    5e                                 	pop esi
0x4813:    5f                                 	pop edi
0x4814:    5d                                 	pop ebp
0x4815:    c3                                 	ret 
; data inside code section at 0x4816 -- 0x4818
0x4816:    66 90                                              |f.              |
; function: function_4818 at 0x4818 -- 0x484e
0x4818:    8d 57 04                           	lea edx, [edi + 4]
0x481b:    89 c3                              	mov ebx, eax
0x481d:    39 ea                              	cmp edx, ebp
0x481f:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x4823:    75 93                              	jne 0x47b8
0x4825:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x4828:    89 3c 24                           	mov dword ptr [esp], edi
0x482b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x482f:    e8 3c 3b 00 00                     	call 0x8370 <unknown_8370>
0x4834:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x4838:    c7 47 08 00 00 00 00               	mov dword ptr [edi + 8], 0
0x483f:    c7 47 14 00 00 00 00               	mov dword ptr [edi + 0x14], 0
0x4846:    89 57 0c                           	mov dword ptr [edi + 0xc], edx
0x4849:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x484c:    eb af                              	jmp 0x47fd <function_47fd>
; function: function_484e at 0x484e -- 0x4858
0x484e:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x4856:    eb a5                              	jmp 0x47fd <function_47fd>
; function: function_4858 at 0x4858 -- 0x4859
; dynamically linked function: __stack_chk_fail at 0x4859 -- 0x485a
; data inside code section at 0x485a -- 0x485d
0x485a:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_
; function: _ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_ at 0x4860 -- 0x48b5
0x4860:    83 ec 4c                           	sub esp, 0x4c
0x4863:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x4867:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x486b:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x486f:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x4873:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x4877:    8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x487b:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x487f:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x4883:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4889:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x488d:    31 c0                              	xor eax, eax
0x488f:    85 c9                              	test ecx, ecx
0x4891:    8d 45 04                           	lea eax, [ebp + 4]
0x4894:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x4898:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x489c:    c7 44 24 1c 01 00 00 00            	mov dword ptr [esp + 0x1c], 1
0x48a4:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x48a8:    74 6e                              	je 0x4918 <function_4918>
0x48aa:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x48ae:    c7 04 24 64 00 00 00               	mov dword ptr [esp], 0x64
; data inside code section at 0x48b5 -- 0x48b6
0x48b5:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x48b6 -- 0x48b7
; data inside code section at 0x48b7 -- 0x48b9
0x48b7:    ff ff                                              |..              |
; function: function_48b9 at 0x48b9 -- 0x48c0
0x48b9:    ff 8b 54 24 10 89                  	dec dword ptr [ebx - 0x76efdbac]
0x48bf:    c3                                 	ret 
; data inside code section at 0x48c0 -- 0x48e6
0x48c0:    83 c0 10 74 09 b9 15 00  00 00 89 c7 f3 a5 8b 44   |...t...........D|
0x48d0:    24 18 89 54 24 08 8b 54  24 1c 89 5c 24 04 89 44   |$..T$..T$..\$..D|
0x48e0:    24 0c 89 14 24 e8                                  |$...$.          |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x48e6 -- 0x48e7
; data inside code section at 0x48e7 -- 0x48e9
0x48e7:    ff ff                                              |..              |
; function: function_48e9 at 0x48e9 -- 0x4917
0x48e9:    ff 8b 44 24 14 83                  	dec dword ptr [ebx - 0x7cebdbbc]
0x48ef:    45                                 	inc ebp
0x48f0:    14 01                              	adc al, 1
0x48f2:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x48f6:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x48fd:    89 18                              	mov dword ptr [eax], ebx
0x48ff:    75 2f                              	jne 0x4930 <function_4930>
0x4901:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x4905:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x4909:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x490d:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x4911:    83 c4 4c                           	add esp, 0x4c
0x4914:    c2 04 00                           	ret 4
; data inside code section at 0x4917 -- 0x4918
0x4917:    90                                                 |.               |
; function: function_4918 at 0x4918 -- 0x4930
0x4918:    39 c2                              	cmp edx, eax
0x491a:    74 8e                              	je 0x48aa
0x491c:    8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0x491f:    39 06                              	cmp dword ptr [esi], eax
0x4921:    0f 9c c0                           	setl al
0x4924:    0f b6 c0                           	movzx eax, al
0x4927:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x492b:    e9 7a ff ff ff                     	jmp 0x48aa
; function: function_4930 at 0x4930 -- 0x4931
; dynamically linked function: __stack_chk_fail at 0x4931 -- 0x4932
; data inside code section at 0x4932 -- 0x4935
0x4932:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_
; function: _ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_ at 0x4940 -- 0x4a23
0x4940:    55                                 	push ebp
0x4941:    57                                 	push edi
0x4942:    56                                 	push esi
0x4943:    53                                 	push ebx
0x4944:    83 ec 4c                           	sub esp, 0x4c
0x4947:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x494b:    8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x494f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4955:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x4959:    31 c0                              	xor eax, eax
0x495b:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x495f:    8b 77 08                           	mov esi, dword ptr [edi + 8]
0x4962:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x4966:    85 f6                              	test esi, esi
0x4968:    74 5d                              	je 0x49c7 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x87>
0x496a:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x496e:    8b 0a                              	mov ecx, dword ptr [edx]
0x4970:    eb 14                              	jmp 0x4986 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x46>
; data inside code section at 0x4972 -- 0x4978
0x4972:    8d b6 00 00 00 00                                  |......          |
0x4978:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x497b:    bd 01 00 00 00                     	mov ebp, 1
0x4980:    85 c0                              	test eax, eax
0x4982:    74 12                              	je 0x4996 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x56>
0x4984:    89 c6                              	mov esi, eax
0x4986:    8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0x4989:    39 ca                              	cmp edx, ecx
0x498b:    7f eb                              	jg 0x4978 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x38>
0x498d:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x4990:    31 ed                              	xor ebp, ebp
0x4992:    85 c0                              	test eax, eax
0x4994:    75 ee                              	jne 0x4984 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x44>
0x4996:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x499a:    89 ea                              	mov edx, ebp
0x499c:    89 f0                              	mov eax, esi
0x499e:    84 d2                              	test dl, dl
0x49a0:    75 2e                              	jne 0x49d0 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x90>
0x49a2:    39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0x49a6:    7c 48                              	jl 0x49f0 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0xb0>
0x49a8:    89 03                              	mov dword ptr [ebx], eax
0x49aa:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x49ae:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x49b2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x49b9:    89 d8                              	mov eax, ebx
0x49bb:    75 66                              	jne 0x4a23 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0xe1>
0x49bd:    83 c4 4c                           	add esp, 0x4c
0x49c0:    5b                                 	pop ebx
0x49c1:    5e                                 	pop esi
0x49c2:    5f                                 	pop edi
0x49c3:    5d                                 	pop ebp
0x49c4:    c2 04 00                           	ret 4
0x49c7:    8d 77 04                           	lea esi, [edi + 4]
0x49ca:    8d b6 00 00 00 00                  	lea esi, [esi]
0x49d0:    3b 77 0c                           	cmp esi, dword ptr [edi + 0xc]
0x49d3:    74 1b                              	je 0x49f0 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0xb0>
0x49d5:    89 34 24                           	mov dword ptr [esp], esi
0x49d8:    e8 fc ff ff ff                     	call 0x49d9
0x49dd:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x49e1:    8b 0a                              	mov ecx, dword ptr [edx]
0x49e3:    8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0x49e6:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x49ea:    39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0x49ee:    7d b8                              	jge 0x49a8 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x68>
0x49f0:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x49f4:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x49f8:    89 04 24                           	mov dword ptr [esp], eax
0x49fb:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x49ff:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x4a07:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x4a0b:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4a0f:    e8 8c 47 00 00                     	call 0x91a0 <unknown_91a0>
0x4a14:    83 ec 04                           	sub esp, 4
0x4a17:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x4a1b:    c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x4a1f:    89 03                              	mov dword ptr [ebx], eax
0x4a21:    eb 8b                              	jmp 0x49ae <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE16_M_insert_uniqueERKS3_+0x6e>
; data inside code section at 0x4a23 -- 0x4a24
0x4a23:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4a24 -- 0x4a25
; data inside code section at 0x4a25 -- 0x4a28
0x4a25:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_
; function: _ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_ at 0x4a30 -- 0x4a84
0x4a30:    83 ec 5c                           	sub esp, 0x5c
0x4a33:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x4a37:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x4a3b:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x4a3f:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x4a43:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4a49:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x4a4d:    31 c0                              	xor eax, eax
0x4a4f:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x4a53:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x4a57:    8d 47 04                           	lea eax, [edi + 4]
0x4a5a:    39 c3                              	cmp ebx, eax
0x4a5c:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x4a60:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x4a64:    0f 84 ce 00 00 00                  	je 0x4b38 <function_4b38>
0x4a6a:    8b 55 00                           	mov edx, dword ptr [ebp]
0x4a6d:    3b 53 10                           	cmp edx, dword ptr [ebx + 0x10]
0x4a70:    7d 76                              	jge 0x4ae8 <function_4ae8>
0x4a72:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x4a75:    39 d8                              	cmp eax, ebx
0x4a77:    0f 84 31 01 00 00                  	je 0x4bae <function_4bae>
0x4a7d:    89 1c 24                           	mov dword ptr [esp], ebx
0x4a80:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
; data inside code section at 0x4a84 -- 0x4a85
0x4a84:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x4a85 -- 0x4a86
; data inside code section at 0x4a86 -- 0x4abc
0x4a86:    ff ff ff 8b 54 24 24 3b  50 10 0f 8e ba 00 00 00   |....T$$;P.......|
0x4a96:    8b 48 0c 89 6c 24 10 85  c9 0f 84 df 00 00 00 89   |.H..l$..........|
0x4aa6:    5c 24 0c 89 5c 24 08 89  7c 24 04 89 34 24 e8 d7   |\$..\$..|$..4$..|
0x4ab6:    47 00 00 83 ec 04                                  |G.....          |
; function: function_4abc at 0x4abc -- 0x4ae5
0x4abc:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x4ac0:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4ac7:    89 f0                              	mov eax, esi
0x4ac9:    0f 85 e8 00 00 00                  	jne 0x4bb7 <function_4bb7>
0x4acf:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x4ad3:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x4ad7:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x4adb:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x4adf:    83 c4 5c                           	add esp, 0x5c
0x4ae2:    c2 04 00                           	ret 4
; data inside code section at 0x4ae5 -- 0x4ae8
0x4ae5:    8d 76 00                                           |.v.             |
; function: function_4ae8 at 0x4ae8 -- 0x4b00
0x4ae8:    0f 8e 8a 00 00 00                  	jle 0x4b78 <function_4b78>
0x4aee:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x4af1:    39 d8                              	cmp eax, ebx
0x4af3:    0f 84 87 00 00 00                  	je 0x4b80 <function_4b80>
0x4af9:    89 1c 24                           	mov dword ptr [esp], ebx
0x4afc:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
; data inside code section at 0x4b00 -- 0x4b01
0x4b00:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x4b01 -- 0x4b02
; data inside code section at 0x4b02 -- 0x4b1d
0x4b02:    ff ff ff 8b 54 24 24 3b  50 10 7d 42 8b 53 0c 89   |....T$$;P.}B.S..|
0x4b12:    6c 24 10 85 d2 0f 84 8b  00 00 00                  |l$.........     |
; function: function_4b1d at 0x4b1d -- 0x4b36
0x4b1d:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x4b21:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x4b25:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4b29:    89 34 24                           	mov dword ptr [esp], esi
0x4b2c:    e8 5f 47 00 00                     	call 0x9290 <unknown_9290>
0x4b31:    83 ec 04                           	sub esp, 4
0x4b34:    eb 86                              	jmp 0x4abc <function_4abc>
; data inside code section at 0x4b36 -- 0x4b38
0x4b36:    66 90                                              |f.              |
; function: function_4b38 at 0x4b38 -- 0x4b72
0x4b38:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x4b3b:    85 db                              	test ebx, ebx
0x4b3d:    74 11                              	je 0x4b50 <function_4b38+0x18>
0x4b3f:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x4b42:    8b 55 00                           	mov edx, dword ptr [ebp]
0x4b45:    39 50 10                           	cmp dword ptr [eax + 0x10], edx
0x4b48:    7c 36                              	jl 0x4b80 <function_4b80>
0x4b4a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x4b50:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x4b54:    89 04 24                           	mov dword ptr [esp], eax
0x4b57:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x4b5b:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4b5f:    e8 0c 48 00 00                     	call 0x9370 <unknown_9370>
0x4b64:    83 ec 04                           	sub esp, 4
0x4b67:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x4b6b:    89 06                              	mov dword ptr [esi], eax
0x4b6d:    e9 4a ff ff ff                     	jmp 0x4abc <function_4abc>
; data inside code section at 0x4b72 -- 0x4b78
0x4b72:    8d b6 00 00 00 00                                  |......          |
; function: function_4b78 at 0x4b78 -- 0x4b7f
0x4b78:    89 1e                              	mov dword ptr [esi], ebx
0x4b7a:    e9 3d ff ff ff                     	jmp 0x4abc <function_4abc>
; data inside code section at 0x4b7f -- 0x4b80
0x4b7f:    90                                                 |.               |
; function: function_4b80 at 0x4b80 -- 0x4ba4
0x4b80:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x4b84:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x4b88:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x4b90:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4b94:    89 34 24                           	mov dword ptr [esp], esi
0x4b97:    e8 f4 46 00 00                     	call 0x9290 <unknown_9290>
0x4b9c:    83 ec 04                           	sub esp, 4
0x4b9f:    e9 18 ff ff ff                     	jmp 0x4abc <function_4abc>
; data inside code section at 0x4ba4 -- 0x4ba8
0x4ba4:    8d 74 26 00                                        |.t&.            |
; function: function_4ba8 at 0x4ba8 -- 0x4bae
0x4ba8:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x4bac:    eb da                              	jmp 0x4b88
; function: function_4bae at 0x4bae -- 0x4bb7
0x4bae:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x4bb2:    e9 66 ff ff ff                     	jmp 0x4b1d <function_4b1d>
; function: function_4bb7 at 0x4bb7 -- 0x4bb8
; dynamically linked function: __stack_chk_fail at 0x4bb8 -- 0x4bb9
; data inside code section at 0x4bb9 -- 0x4bbc
0x4bb9:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_
; function: _ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_ at 0x4bc0 -- 0x4c47
0x4bc0:    55                                 	push ebp
0x4bc1:    57                                 	push edi
0x4bc2:    56                                 	push esi
0x4bc3:    53                                 	push ebx
0x4bc4:    81 ec dc 00 00 00                  	sub esp, 0xdc
0x4bca:    8b ac 24 f0 00 00 00               	mov ebp, dword ptr [esp + 0xf0]
0x4bd1:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4bd7:    89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x4bde:    31 c0                              	xor eax, eax
0x4be0:    8b bc 24 f4 00 00 00               	mov edi, dword ptr [esp + 0xf4]
0x4be7:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x4bea:    8d 4d 04                           	lea ecx, [ebp + 4]
0x4bed:    85 c0                              	test eax, eax
0x4bef:    74 47                              	je 0x4c38 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x78>
0x4bf1:    8b 17                              	mov edx, dword ptr [edi]
0x4bf3:    89 cb                              	mov ebx, ecx
0x4bf5:    eb 0a                              	jmp 0x4c01 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x41>
; data inside code section at 0x4bf7 -- 0x4bf8
0x4bf7:    90                                                 |.               |
0x4bf8:    89 c3                              	mov ebx, eax
0x4bfa:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x4bfd:    85 c0                              	test eax, eax
0x4bff:    74 0c                              	je 0x4c0d <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x4d>
0x4c01:    3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0x4c04:    7e f2                              	jle 0x4bf8 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x38>
0x4c06:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x4c09:    85 c0                              	test eax, eax
0x4c0b:    75 f4                              	jne 0x4c01 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x41>
0x4c0d:    39 d9                              	cmp ecx, ebx
0x4c0f:    74 2f                              	je 0x4c40 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x80>
0x4c11:    39 53 10                           	cmp dword ptr [ebx + 0x10], edx
0x4c14:    7f 2a                              	jg 0x4c40 <_ZNSt3mapIi9CAddrInfoSt4lessIiESaISt4pairIKiS0_EEEixERS4_+0x80>
0x4c16:    8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0x4c1d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4c24:    8d 43 14                           	lea eax, [ebx + 0x14]
0x4c27:    0f 85 bc 00 00 00                  	jne 0x4ce9 <function_4ce9>
0x4c2d:    81 c4 dc 00 00 00                  	add esp, 0xdc
0x4c33:    5b                                 	pop ebx
0x4c34:    5e                                 	pop esi
0x4c35:    5f                                 	pop edi
0x4c36:    5d                                 	pop ebp
0x4c37:    c3                                 	ret 
0x4c38:    89 cb                              	mov ebx, ecx
0x4c3a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x4c40:    8d 74 24 7c                        	lea esi, [esp + 0x7c]
0x4c44:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x4c47 -- 0x4c48
0x4c47:    e8                                                 |.               |
; dynamically linked function: _ZN8CAddressC2Ev at 0x4c48 -- 0x4c49
; data inside code section at 0x4c49 -- 0x4c57
0x4c49:    ff ff ff 8d 84 24 a4 00  00 00 89 04 24 e8         |.....$......$.  |
; dynamically linked function: _ZN8CNetAddrC1Ev at 0x4c57 -- 0x4c58
; data inside code section at 0x4c58 -- 0x4c5a
0x4c58:    ff ff                                              |..              |
; function: function_4c5a at 0x4c5a -- 0x4ce9
0x4c5a:    ff 8b 07 b9 14 00                  	dec dword ptr [ebx + 0x14b907]
0x4c60:    00 00                              	add byte ptr [eax], al
0x4c62:    c7 84 24 b4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb4], 0
0x4c6d:    8d 7c 24 2c                        	lea edi, [esp + 0x2c]
0x4c71:    c7 84 24 b8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb8], 0
0x4c7c:    8d 54 24 28                        	lea edx, [esp + 0x28]
0x4c80:    c7 84 24 9c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x9c], 0
0x4c8b:    c7 84 24 a0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa0], 0
0x4c96:    c7 84 24 bc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xbc], 0
0x4ca1:    c7 84 24 c0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc0], 0
0x4cac:    c6 84 24 c4 00 00 00 00            	mov byte ptr [esp + 0xc4], 0
0x4cb4:    c7 84 24 c8 00 00 00 ff ff ff ff   	mov dword ptr [esp + 0xc8], 0xffffffff
0x4cbf:    f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x4cc1:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x4cc5:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x4cc9:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x4ccd:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x4cd1:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x4cd5:    89 04 24                           	mov dword ptr [esp], eax
0x4cd8:    e8 13 49 00 00                     	call 0x95f0 <unknown_95f0>
0x4cdd:    83 ec 04                           	sub esp, 4
0x4ce0:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x4ce4:    e9 2d ff ff ff                     	jmp 0x4c16
; function: function_4ce9 at 0x4ce9 -- 0x4cea
; dynamically linked function: __stack_chk_fail at 0x4cea -- 0x4ceb
; data inside code section at 0x4ceb -- 0x4cee
0x4ceb:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_ at 0x4cf0 -- 0x4d84
0x4cf0:    83 ec 4c                           	sub esp, 0x4c
0x4cf3:    ba 01 00 00 00                     	mov edx, 1
0x4cf8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4cfe:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4d02:    31 c0                              	xor eax, eax
0x4d04:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x4d08:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x4d0c:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x4d10:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x4d14:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x4d18:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x4d1c:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x4d20:    85 c0                              	test eax, eax
0x4d22:    8d 4e 04                           	lea ecx, [esi + 4]
0x4d25:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x4d29:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x4d2d:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x4d31:    0f 84 81 00 00 00                  	je 0x4db8 <function_4db8>
0x4d37:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x4d3b:    c7 04 24 24 00 00 00               	mov dword ptr [esp], 0x24
0x4d42:    e8 fc ff ff ff                     	call 0x4d43
0x4d47:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x4d4b:    83 f8 f0                           	cmp eax, -0x10
0x4d4e:    74 1d                              	je 0x4d6d <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_+0x7d>
0x4d50:    8b 0b                              	mov ecx, dword ptr [ebx]
0x4d52:    89 48 10                           	mov dword ptr [eax + 0x10], ecx
0x4d55:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x4d58:    89 48 14                           	mov dword ptr [eax + 0x14], ecx
0x4d5b:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x4d5e:    89 48 18                           	mov dword ptr [eax + 0x18], ecx
0x4d61:    8b 4b 0c                           	mov ecx, dword ptr [ebx + 0xc]
0x4d64:    89 48 1c                           	mov dword ptr [eax + 0x1c], ecx
0x4d67:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x4d6a:    89 48 20                           	mov dword ptr [eax + 0x20], ecx
0x4d6d:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x4d71:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4d75:    89 14 24                           	mov dword ptr [esp], edx
0x4d78:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x4d7c:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x4d80:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
; data inside code section at 0x4d84 -- 0x4d85
0x4d84:    e8                                                 |.               |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x4d85 -- 0x4d86
; data inside code section at 0x4d86 -- 0x4d88
0x4d86:    ff ff                                              |..              |
; function: function_4d88 at 0x4d88 -- 0x4db8
0x4d88:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x4d8e:    46                                 	inc esi
0x4d8f:    14 01                              	adc al, 1
0x4d91:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x4d95:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4d9c:    89 07                              	mov dword ptr [edi], eax
0x4d9e:    89 f8                              	mov eax, edi
0x4da0:    75 39                              	jne 0x4ddb <function_4ddb>
0x4da2:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x4da6:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x4daa:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x4dae:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x4db2:    83 c4 4c                           	add esp, 0x4c
0x4db5:    c2 04 00                           	ret 4
; function: function_4db8 at 0x4db8 -- 0x4dca
0x4db8:    39 cd                              	cmp ebp, ecx
0x4dba:    0f 84 77 ff ff ff                  	je 0x4d37
0x4dc0:    8d 45 10                           	lea eax, [ebp + 0x10]
0x4dc3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4dc7:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4dca -- 0x4dcb
0x4dca:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4dcb -- 0x4dcc
; data inside code section at 0x4dcc -- 0x4dcf
0x4dcc:    ff ff ff                                           |...             |
; function: function_4dcf at 0x4dcf -- 0x4ddb
0x4dcf:    31 d2                              	xor edx, edx
0x4dd1:    84 c0                              	test al, al
0x4dd3:    0f 95 c2                           	setne dl
0x4dd6:    e9 5c ff ff ff                     	jmp 0x4d37
; function: function_4ddb at 0x4ddb -- 0x4ddc
; dynamically linked function: __stack_chk_fail at 0x4ddc -- 0x4ddd
; data inside code section at 0x4ddd -- 0x4de0
0x4ddd:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_ at 0x4de0 -- 0x4e23
0x4de0:    55                                 	push ebp
0x4de1:    57                                 	push edi
0x4de2:    56                                 	push esi
0x4de3:    53                                 	push ebx
0x4de4:    83 ec 4c                           	sub esp, 0x4c
0x4de7:    8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x4deb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4df1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x4df5:    31 c0                              	xor eax, eax
0x4df7:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x4dfb:    8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x4dff:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x4e02:    85 db                              	test ebx, ebx
0x4e04:    75 13                              	jne 0x4e19 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_+0x39>
0x4e06:    e9 ac 00 00 00                     	jmp 0x4eb7 <function_4eb7>
; data inside code section at 0x4e0b -- 0x4e10
0x4e0b:    90 8d 74 26 00                                     |..t&.           |
0x4e10:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x4e13:    85 d2                              	test edx, edx
0x4e15:    74 1c                              	je 0x4e33 <function_4e33>
0x4e17:    89 d3                              	mov ebx, edx
0x4e19:    8d 43 10                           	lea eax, [ebx + 0x10]
0x4e1c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4e20:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x4e23 -- 0x4e24
0x4e23:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4e24 -- 0x4e25
; data inside code section at 0x4e25 -- 0x4e33
0x4e25:    ff ff ff 84 c0 75 e4 8b  53 0c 85 d2 75 e4         |.....u..S...u.  |
; function: function_4e33 at 0x4e33 -- 0x4e37
0x4e33:    84 c0                              	test al, al
0x4e35:    74 49                              	je 0x4e80
; function: function_4e37 at 0x4e37 -- 0x4e3f
0x4e37:    3b 5d 0c                           	cmp ebx, dword ptr [ebp + 0xc]
0x4e3a:    74 4c                              	je 0x4e88 <function_4e88>
0x4e3c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4e3f -- 0x4e40
0x4e3f:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x4e40 -- 0x4e41
; data inside code section at 0x4e41 -- 0x4e45
0x4e41:    ff ff ff 89                                        |....            |
; function: function_4e45 at 0x4e45 -- 0x4e48
0x4e45:    c2 8d 42                           	ret 0x428d
; data inside code section at 0x4e48 -- 0x4e55
0x4e48:    10 89 54 24 28 89 74 24  04 89 04 24 e8            |..T$(.t$...$.   |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4e55 -- 0x4e56
; data inside code section at 0x4e56 -- 0x4e67
0x4e56:    ff ff ff 8b 54 24 28 84  c0 75 27 89 17 c6 47 04   |....T$(..u'...G.|
0x4e66:    00                                                 |.               |
; function: function_4e67 at 0x4e67 -- 0x4e80
0x4e67:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x4e6b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4e72:    89 f8                              	mov eax, edi
0x4e74:    75 49                              	jne 0x4ebf <function_4ebf>
0x4e76:    83 c4 4c                           	add esp, 0x4c
0x4e79:    5b                                 	pop ebx
0x4e7a:    5e                                 	pop esi
0x4e7b:    5f                                 	pop edi
0x4e7c:    5d                                 	pop ebp
0x4e7d:    c2 04 00                           	ret 4
; function: function_4e80 at 0x4e80 -- 0x4e84
0x4e80:    89 da                              	mov edx, ebx
0x4e82:    eb c2                              	jmp 0x4e46
; data inside code section at 0x4e84 -- 0x4e88
0x4e84:    8d 74 26 00                                        |.t&.            |
; function: function_4e88 at 0x4e88 -- 0x4eb7
0x4e88:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x4e8c:    89 04 24                           	mov dword ptr [esp], eax
0x4e8f:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x4e93:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x4e97:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x4e9f:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x4ea3:    e8 28 4c 00 00                     	call 0x9ad0 <unknown_9ad0>
0x4ea8:    83 ec 04                           	sub esp, 4
0x4eab:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x4eaf:    c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x4eb3:    89 07                              	mov dword ptr [edi], eax
0x4eb5:    eb b0                              	jmp 0x4e67 <function_4e67>
; function: function_4eb7 at 0x4eb7 -- 0x4ebf
0x4eb7:    8d 5d 04                           	lea ebx, [ebp + 4]
0x4eba:    e9 78 ff ff ff                     	jmp 0x4e37 <function_4e37>
; function: function_4ebf at 0x4ebf -- 0x4ec4
0x4ebf:    e8 fc ff ff ff                     	call 0x4ec0
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_ at 0x4ed0 -- 0x4f18
0x4ed0:    83 ec 5c                           	sub esp, 0x5c
0x4ed3:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x4ed7:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x4edb:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x4edf:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x4ee3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4ee9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x4eed:    31 c0                              	xor eax, eax
0x4eef:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x4ef3:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x4ef7:    8d 47 04                           	lea eax, [edi + 4]
0x4efa:    39 c3                              	cmp ebx, eax
0x4efc:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x4f00:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x4f04:    0f 84 16 01 00 00                  	je 0x5020 <function_5020>
0x4f0a:    8d 53 10                           	lea edx, [ebx + 0x10]
0x4f0d:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x4f11:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x4f15:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x4f18 -- 0x4f19
0x4f18:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4f19 -- 0x4f1a
; data inside code section at 0x4f1a -- 0x4f38
0x4f1a:    ff ff ff 8b 54 24 24 84  c0 0f 84 87 00 00 00 8b   |....T$$.........|
0x4f2a:    47 0c 39 d8 0f 84 6c 01  00 00 89 1c 24 e8         |G.9...l.....$.  |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x4f38 -- 0x4f39
; data inside code section at 0x4f39 -- 0x4f3b
0x4f39:    ff ff                                              |..              |
; function: function_4f3b at 0x4f3b -- 0x4f44
0x4f3b:    ff 89 6c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb94]
0x4f41:    c2 8d 40                           	ret 0x408d
; data inside code section at 0x4f44 -- 0x4f4d
0x4f44:    10 89 54 24 24 89 04 24  e8                        |..T$$..$.       |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4f4d -- 0x4f4e
; data inside code section at 0x4f4e -- 0x4f50
0x4f4e:    ff ff                                              |..              |
; function: function_4f50 at 0x4f50 -- 0x4f5c
0x4f50:    ff 8b 54 24 24 84                  	dec dword ptr [ebx - 0x7bdbdbac]
0x4f56:    c0 0f 84                           	ror byte ptr [edi], 0x84
0x4f59:    ca 00 00                           	retf 0
; data inside code section at 0x4f5c -- 0x4f83
0x4f5c:    00 8b 42 0c 89 6c 24 10  85 c0 0f 84 14 01 00 00   |..B..l$.........|
0x4f6c:    89 5c 24 0c 89 5c 24 08  89 7c 24 04 89 34 24 e8   |.\$..\$..|$..4$.|
0x4f7c:    40 4c 00 00 83 ec 04                               |@L.....         |
; function: function_4f83 at 0x4f83 -- 0x4fac
0x4f83:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x4f87:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4f8e:    89 f0                              	mov eax, esi
0x4f90:    0f 85 3a 01 00 00                  	jne 0x50d0 <function_50d0>
0x4f96:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x4f9a:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x4f9e:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x4fa2:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x4fa6:    83 c4 5c                           	add esp, 0x5c
0x4fa9:    c2 04 00                           	ret 4
; data inside code section at 0x4fac -- 0x4fb8
0x4fac:    8d 74 26 00 89 6c 24 04  89 14 24 e8               |.t&..l$...$.    |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4fb8 -- 0x4fb9
; data inside code section at 0x4fb9 -- 0x4fd3
0x4fb9:    ff ff ff 84 c0 0f 84 8c  00 00 00 8b 47 10 39 d8   |............G.9.|
0x4fc9:    0f 84 f7 00 00 00 89 1c  24 e8                     |........$.      |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x4fd3 -- 0x4fd4
; data inside code section at 0x4fd4 -- 0x4fd9
0x4fd4:    ff ff ff 89 2c                                     |....,           |
; function: function_4fd9 at 0x4fd9 -- 0x4fde
0x4fd9:    24 89                              	and al, 0x89
0x4fdb:    c2 8d 40                           	ret 0x408d
; data inside code section at 0x4fde -- 0x4fe8
0x4fde:    10 89 54 24 24 89 44 24  04 e8                     |..T$$.D$..      |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x4fe8 -- 0x4fe9
; data inside code section at 0x4fe9 -- 0x4feb
0x4fe9:    ff ff                                              |..              |
; function: function_4feb at 0x4feb -- 0x501f
0x4feb:    ff 8b 54 24 24 84                  	dec dword ptr [ebx - 0x7bdbdbac]
0x4ff1:    c0 74 33 8b 43                     	sal byte ptr [ebx + esi - 0x75], 0x43
0x4ff6:    0c 89                              	or al, 0x89
0x4ff8:    6c                                 	insb byte ptr es:[edi], dx
0x4ff9:    24 10                              	and al, 0x10
0x4ffb:    85 c0                              	test eax, eax
0x4ffd:    0f 84 bd 00 00 00                  	je 0x50c0 <function_50c0>
0x5003:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5007:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x500b:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x500f:    89 34 24                           	mov dword ptr [esp], esi
0x5012:    e8 a9 4b 00 00                     	call 0x9bc0 <unknown_9bc0>
0x5017:    83 ec 04                           	sub esp, 4
0x501a:    e9 64 ff ff ff                     	jmp 0x4f83 <function_4f83>
; data inside code section at 0x501f -- 0x5020
0x501f:    90                                                 |.               |
; function: function_5020 at 0x5020 -- 0x5065
0x5020:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x5023:    85 c0                              	test eax, eax
0x5025:    75 31                              	jne 0x5058 <function_5020+0x38>
0x5027:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x502b:    89 04 24                           	mov dword ptr [esp], eax
0x502e:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x5032:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x5036:    e8 75 4c 00 00                     	call 0x9cb0 <unknown_9cb0>
0x503b:    83 ec 04                           	sub esp, 4
0x503e:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x5042:    89 06                              	mov dword ptr [esi], eax
0x5044:    e9 3a ff ff ff                     	jmp 0x4f83 <function_4f83>
; data inside code section at 0x5049 -- 0x5050
0x5049:    8d b4 26 00 00 00 00                               |..&....         |
0x5050:    89 1e                              	mov dword ptr [esi], ebx
0x5052:    e9 2c ff ff ff                     	jmp 0x4f83 <function_4f83>
; data inside code section at 0x5057 -- 0x5058
0x5057:    90                                                 |.               |
0x5058:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x505c:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x505f:    83 c0 10                           	add eax, 0x10
0x5062:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x5065 -- 0x5066
0x5065:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x5066 -- 0x5067
; data inside code section at 0x5067 -- 0x5069
0x5067:    ff ff                                              |..              |
; function: function_5069 at 0x5069 -- 0x507b
0x5069:    ff 84 c0 74 b9 89 6c               	inc dword ptr [eax + eax*8 + 0x6c89b974]
0x5070:    24 10                              	and al, 0x10
0x5072:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x5075:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x5079:    eb 09                              	jmp 0x5084 <function_5084>
; data inside code section at 0x507b -- 0x5084
0x507b:    90 8d 74 26 00 89 54 24  0c                        |..t&..T$.       |
; function: function_5084 at 0x5084 -- 0x50a0
0x5084:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x508c:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x5090:    89 34 24                           	mov dword ptr [esp], esi
0x5093:    e8 28 4b 00 00                     	call 0x9bc0 <unknown_9bc0>
0x5098:    83 ec 04                           	sub esp, 4
0x509b:    e9 e3 fe ff ff                     	jmp 0x4f83 <function_4f83>
; function: function_50a0 at 0x50a0 -- 0x50c0
0x50a0:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x50a4:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x50a8:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x50ac:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x50b0:    89 34 24                           	mov dword ptr [esp], esi
0x50b3:    e8 08 4b 00 00                     	call 0x9bc0 <unknown_9bc0>
0x50b8:    83 ec 04                           	sub esp, 4
0x50bb:    e9 c3 fe ff ff                     	jmp 0x4f83 <function_4f83>
; function: function_50c0 at 0x50c0 -- 0x50c6
0x50c0:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x50c4:    eb be                              	jmp 0x5084 <function_5084>
; function: function_50c6 at 0x50c6 -- 0x50d0
0x50c6:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x50ca:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x50ce:    eb b4                              	jmp 0x5084 <function_5084>
; function: function_50d0 at 0x50d0 -- 0x50d1
; dynamically linked function: __stack_chk_fail at 0x50d1 -- 0x50d2
; data inside code section at 0x50d2 -- 0x50d5
0x50d2:    ff ff ff                                           |...             |
; section: .text._Z16WriteCompactSizeI11CDataStreamEvRT_y
; function: _Z16WriteCompactSizeI11CDataStreamEvRT_y at 0x50e0 -- 0x5223
0x50e0:    53                                 	push ebx
0x50e1:    83 ec 48                           	sub esp, 0x48
0x50e4:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x50e8:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x50ef:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x50f3:    31 c9                              	xor ecx, ecx
0x50f5:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x50f9:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x50fd:    83 fa 00                           	cmp edx, 0
0x5100:    76 6e                              	jbe 0x5170 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x90>
0x5102:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x5106:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x5109:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x510d:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x5111:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x5115:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x5119:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x511d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5121:    c6 44 24 3b ff                     	mov byte ptr [esp + 0x3b], 0xff
0x5126:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x512b:    89 1c 24                           	mov dword ptr [esp], ebx
0x512e:    e8 bd 41 00 00                     	call 0x92f0 <unknown_92f0>
0x5133:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x5136:    8d 54 24 28                        	lea edx, [esp + 0x28]
0x513a:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x513f:    8d 4c 24 30                        	lea ecx, [esp + 0x30]
0x5143:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5147:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x514b:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x514f:    89 1c 24                           	mov dword ptr [esp], ebx
0x5152:    e8 99 41 00 00                     	call 0x92f0 <unknown_92f0>
0x5157:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x515b:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x5162:    0f 85 bb 00 00 00                  	jne 0x5223 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x13e>
0x5168:    83 c4 48                           	add esp, 0x48
0x516b:    5b                                 	pop ebx
0x516c:    c3                                 	ret 
; data inside code section at 0x516d -- 0x5170
0x516d:    8d 76 00                                           |.v.             |
0x5170:    3d fc 00 00 00                     	cmp eax, 0xfc
0x5175:    76 49                              	jbe 0x51c0 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0xe0>
0x5177:    3d ff ff 00 00                     	cmp eax, 0xffff
0x517c:    76 62                              	jbe 0x51e0 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x100>
0x517e:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x5182:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x5185:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x5189:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x518d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x5191:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x5195:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5199:    c6 44 24 3b fe                     	mov byte ptr [esp + 0x3b], 0xfe
0x519e:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x51a3:    89 1c 24                           	mov dword ptr [esp], ebx
0x51a6:    e8 45 41 00 00                     	call 0x92f0 <unknown_92f0>
0x51ab:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x51ae:    8d 54 24 34                        	lea edx, [esp + 0x34]
0x51b2:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x51b7:    8d 4c 24 38                        	lea ecx, [esp + 0x38]
0x51bb:    eb 86                              	jmp 0x5143 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0x51bd -- 0x51c0
0x51bd:    8d 76 00                                           |.v.             |
0x51c0:    88 44 24 3b                        	mov byte ptr [esp + 0x3b], al
0x51c4:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x51c8:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x51cb:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x51cf:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x51d4:    e9 6a ff ff ff                     	jmp 0x5143 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0x51d9 -- 0x51e0
0x51d9:    8d b4 26 00 00 00 00                               |..&....         |
0x51e0:    66 89 44 24 38                     	mov word ptr [esp + 0x38], ax
0x51e5:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x51e8:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x51ec:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x51f0:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x51f4:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x51f8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x51fc:    c6 44 24 3b fd                     	mov byte ptr [esp + 0x3b], 0xfd
0x5201:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x5206:    89 1c 24                           	mov dword ptr [esp], ebx
0x5209:    e8 e2 40 00 00                     	call 0x92f0 <unknown_92f0>
0x520e:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x5211:    8d 54 24 38                        	lea edx, [esp + 0x38]
0x5215:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x521a:    8d 4c 24 3a                        	lea ecx, [esp + 0x3a]
0x521e:    e9 20 ff ff ff                     	jmp 0x5143 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0x5223 -- 0x5224
0x5223:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5224 -- 0x5225
; data inside code section at 0x5225 -- 0x5228
0x5225:    ff ff ff                                           |...             |
; section: .text.startup
; function: _GLOBAL__sub_I__ZNK9CAddrInfo14GetTriedBucketERKSt6vectorIhSaIhEE at 0x5230 -- 0x5246
0x5230:    83 ec 2c                           	sub esp, 0x2c
0x5233:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5239:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x523d:    31 c0                              	xor eax, eax
0x523f:    c7 04 24 cc 26 00 00               	mov dword ptr [esp], 0x26cc
; data inside code section at 0x5246 -- 0x5247
0x5246:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x5247 -- 0x5248
; data inside code section at 0x5248 -- 0x524f
0x5248:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x524f -- 0x525b
; data inside code section at 0x525b -- 0x525e
0x525b:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x525e -- 0x5262
; data inside code section at 0x5262 -- 0x5263
0x5262:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x5263 -- 0x5264
; data inside code section at 0x5264 -- 0x5288
0x5264:    ff ff ff 80 3d 90 55 00  00 00 75 30 c6 05 90 55   |....=.U...u0...U|
0x5274:    00 00 01 c7 04 24 90 55  00 00 e8 3d 36 00 00 50   |.....$.U...=6..P|
0x5284:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x5288 -- 0x529b
; data inside code section at 0x529b -- 0x529c
0x529b:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x529c -- 0x529d
; data inside code section at 0x529d -- 0x52a1
0x529d:    ff ff ff e8                                        |....            |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x52a1 -- 0x52a2
; data inside code section at 0x52a2 -- 0x52a4
0x52a2:    ff ff                                              |..              |
; function: function_52a4 at 0x52a4 -- 0x52aa
0x52a4:    ff a3 d0 26 00 00                  	jmp dword ptr [ebx + 0x26d0]
; data inside code section at 0x52aa -- 0x52ab
0x52aa:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x52ab -- 0x52ac
; data inside code section at 0x52ac -- 0x52ae
0x52ac:    ff ff                                              |..              |
; function: function_52ae at 0x52ae -- 0x52b4
0x52ae:    ff a3 d4 26 00 00                  	jmp dword ptr [ebx + 0x26d4]
; data inside code section at 0x52b4 -- 0x52b5
0x52b4:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x52b5 -- 0x52b6
; data inside code section at 0x52b6 -- 0x52b8
0x52b6:    ff ff                                              |..              |
; function: function_52b8 at 0x52b8 -- 0x52be
0x52b8:    ff a3 d8 26 00 00                  	jmp dword ptr [ebx + 0x26d8]
; function: function_52be at 0x52be -- 0x52cf
0x52be:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x52c2:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x52c9:    75 04                              	jne 0x52cf <function_52be+0x10>
0x52cb:    83 c4 2c                           	add esp, 0x2c
0x52ce:    c3                                 	ret 
; data inside code section at 0x52cf -- 0x52d0
0x52cf:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x52d0 -- 0x52d1
; data inside code section at 0x52d1 -- 0x52d4
0x52d1:    ff ff ff                                           |...             |

;;
;; Data Segment
;;

; section: .gcc_except_table
0x2b1c:    ff ff 01 08 38 03 79 00  74 17 00 00 ff ff 01 0d   |....8.y.t.......|
0x2b2c:    1c 05 00 00 38 03 7c 00  89 01 05 00 00 00 00 00   |....8.|.........|
0x2b3c:    ff 00 29 01 1c 70 29 ff  01 01 a3 01 05 d7 01 03   |..)..p).........|
0x2b4c:    cb 01 05 ff 01 01 f5 01  05 82 02 05 8a 02 0a 00   |................|
0x2b5c:    00 01 00 00 7d 7f 00 00  00 00 00 00 00 00 00 00   |....}...........|
0x2b6c:    ff 00 0d 01 08 26 03 56  01 5e 0a 00 00 7f 00 00   |.....&.V.^......|
0x2b7c:    00 ff ff 01 19 47 03 a7  02 00 5e 13 89 02 00 7e   |.....G....^....~|
0x2b8c:    3b a7 02 00 c6 01 03 00  00 a2 02 05 00 00 00 00   |;...............|
0x2b9c:    ff 00 2d 01 23 9a 01 05  82 05 00 f3 02 05 fa 04   |..-.#...........|
0x2bac:    00 90 03 03 c3 04 00 d6  03 05 a9 04 01 be 04 05   |................|
0x2bbc:    f1 04 00 ec 04 05 00 00  01 00 00 00 00 00 00 00   |................|
0x2bcc:    ff ff 01 29 77 05 ec 0a  00 8a 01 05 e4 0a 00 aa   |...)w...........|
0x2bdc:    01 cf 03 e0 0a 00 da 05  bd 03 a9 0a 00 b3 09 05   |................|
0x2bec:    e0 0a 00 f5 09 05 00 00  d6 0a 05 00 00 ff ff 01   |................|
0x2bfc:    29 70 05 94 0a 00 90 01  80 03 90 0a 00 e4 04 05   |)p..............|
0x2c0c:    83 0a 00 84 05 bd 03 d1  09 00 ed 08 05 90 0a 00   |................|
0x2c1c:    9f 09 05 00 00 fe 09 05  00 00 ff ff 01 10 3e 8f   |..............>.|
0x2c2c:    02 00 00 df 02 05 a5 03  00 83 03 34 00 00         |...........4..  |
0x2c3a:    73 65 72 69 61 6c 69 7a  65 2e 68 00               |serialize.h.    |   "serialize.h"
; section: .rodata.str1.1
0x2c3a:    73 65 72 69 61 6c 69 7a  65 2e 68 00               |serialize.h.    |   "serialize.h"
0x2c46:    6e 53 69 7a 65 20 3e 3d  20 30 00                  |nSize >= 0.     |   "nSize >= 0"
0x2c51:    3a 20 00                                           |: .             |
0x2c54:    76 65 63 74 6f 72 3a 3a  5f 4d 5f 72 61 6e 67 65   |vector::_M_range|   "vector::_M_range_insert"
0x2c64:    5f 69 6e 73 65 72 74 00                            |_insert.        |
0x2c6c:    61 64 64 72 6d 61 6e 2e  63 70 70 00               |addrman.cpp.    |   "addrman.cpp"
0x2c78:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 2a 69   |mapInfo.count(*i|   "mapInfo.count(*it) == 1"
0x2c88:    74 29 20 3d 3d 20 31 00                            |t) == 1.        |
0x2c90:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 6e 49   |mapInfo.count(nI|   "mapInfo.count(nId1) == 1"
0x2ca0:    64 31 29 20 3d 3d 20 31  00                        |d1) == 1.       |
0x2ca9:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 6e 49   |mapInfo.count(nI|   "mapInfo.count(nId2) == 1"
0x2cb9:    64 32 29 20 3d 3d 20 31  00                        |d2) == 1.       |
0x2cc2:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 2a 69   |mapInfo.count(*i|   "mapInfo.count(*it)"
0x2cd2:    74 29 00                                           |t).             |
0x2cd5:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 6e 4f   |mapInfo.count(nO|   "mapInfo.count(nOldest) == 1"
0x2ce5:    6c 64 65 73 74 29 20 3d  3d 20 31 00               |ldest) == 1.    |
0x2cf1:    69 6e 66 6f 2e 6e 52 65  66 43 6f 75 6e 74 20 3d   |info.nRefCount =|   "info.nRefCount == 0"
0x2d01:    3d 20 30 00                                        |= 0.            |
0x2d05:    4d 6f 76 69 6e 67 20 25  73 20 74 6f 20 74 72 69   |Moving %s to tri|
0x2d15:    65 64 0a 00 ??                                     |ed..?           |
; section: .rodata.str1.4
0x352c:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x353c:    73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x354c:    61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x355c:    72 2e 68 70 70 00                                  |r.hpp.          |
0x3562:    00 00                                              |..              |
0x3564:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 76 54   |mapInfo.count(vT|   "mapInfo.count(vTried[nPos]) == 1"
0x3574:    72 69 65 64 5b 6e 50 6f  73 5d 29 20 3d 3d 20 31   |ried[nPos]) == 1|
0x3584:    00                                                 |.               |
0x3585:    00 00 00                                           |...             |
0x3588:    6e 4f 6c 64 65 73 74 20  3d 3d 20 2d 31 20 7c 7c   |nOldest == -1 |||   "nOldest == -1 || mapInfo.count(nTemp) == 1"
0x3598:    20 6d 61 70 49 6e 66 6f  2e 63 6f 75 6e 74 28 6e   | mapInfo.count(n|
0x35a8:    54 65 6d 70 29 20 3d 3d  20 31 00                  |Temp) == 1.     |
0x35b3:    00                                                 |.               |
0x35b4:    6e 52 6e 64 50 6f 73 31  20 3c 20 76 52 61 6e 64   |nRndPos1 < vRand|   "nRndPos1 < vRandom.size() && nRndPos2 < vRandom.size()"
0x35c4:    6f 6d 2e 73 69 7a 65 28  29 20 26 26 20 6e 52 6e   |om.size() && nRn|
0x35d4:    64 50 6f 73 32 20 3c 20  76 52 61 6e 64 6f 6d 2e   |dPos2 < vRandom.|
0x35e4:    73 69 7a 65 28 29 00                               |size().         |
0x35eb:    00                                                 |.               |
0x35ec:    6d 61 70 49 6e 66 6f 2e  63 6f 75 6e 74 28 76 52   |mapInfo.count(vR|   "mapInfo.count(vRandom[n]) == 1"
0x35fc:    61 6e 64 6f 6d 5b 6e 5d  29 20 3d 3d 20 31 00      |andom[n]) == 1. |
0x360b:    00                                                 |.               |
0x360c:    6e 55 42 75 63 6b 65 74  20 3e 3d 20 30 20 26 26   |nUBucket >= 0 &&|   "nUBucket >= 0 && (unsigned int)nUBucket < vvNew.size()"
0x361c:    20 28 75 6e 73 69 67 6e  65 64 20 69 6e 74 29 6e   | (unsigned int)n|
0x362c:    55 42 75 63 6b 65 74 20  3c 20 76 76 4e 65 77 2e   |UBucket < vvNew.|
0x363c:    73 69 7a 65 28 29 00                               |size().         |
0x3643:    00                                                 |.               |
0x3644:    6e 4f 6c 64 65 73 74 20  3d 3d 20 2d 31 20 7c 7c   |nOldest == -1 |||   "nOldest == -1 || mapInfo.count(*it) == 1"
0x3654:    20 6d 61 70 49 6e 66 6f  2e 63 6f 75 6e 74 28 2a   | mapInfo.count(*|
0x3664:    69 74 29 20 3d 3d 20 31  00                        |it) == 1.       |
0x366d:    00 00 00                                           |...             |
0x3670:    76 76 4e 65 77 5b 6e 4f  72 69 67 69 6e 5d 2e 63   |vvNew[nOrigin].c|   "vvNew[nOrigin].count(nId) == 1"
0x3680:    6f 75 6e 74 28 6e 49 64  29 20 3d 3d 20 31 00      |ount(nId) == 1. |
0x368f:    ??                                                 |?               |
; section: .ctors
0x52d4:    30 52 00 00 ??                                     |0R..?           |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x52e0:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x52f0:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x5300:    08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x5300:    08 00 00 00 e0 52 00 00  a0 56 00 00 4e            |.....R...V..N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x530c:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x531c:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0x532c:    08 00 00 00 0c 53 00 00  00 00 00 00 ??            |.....S......?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x5340:    00 00 00 00 00 53 00 00  90 27 00 00 40 2a 00 00   |.....S...'..@*..|
0x5350:    00 00 00 00 00 00 00 00  c0 27 00 00 00 28 00 00   |.........'...(..|
0x5360:    70 28 00 00 ??                                     |p(..?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0x5368:    00 00 00 00 2c 53 00 00  a0 2f 00 00 30 30 00 00   |....,S.../..00..|
0x5378:    f0 2d 00 00 ??                                     |.-..?           |
; section: .rodata
0x5380:    43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::write(const char*, int)"
0x5390:    74 61 53 74 72 65 61 6d  3a 3a 77 72 69 74 65 28   |taStream::write(|
0x53a0:    63 6f 6e 73 74 20 63 68  61 72 2a 2c 20 69 6e 74   |const char*, int|
0x53b0:    29 00                                              |).              |
0x53b2:    00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x53c0:    76 6f 69 64 20 43 41 64  64 72 4d 61 6e 3a 3a 53   |void CAddrMan::S|   "void CAddrMan::SwapRandom(unsigned int, unsigned int)"
0x53d0:    77 61 70 52 61 6e 64 6f  6d 28 75 6e 73 69 67 6e   |wapRandom(unsign|
0x53e0:    65 64 20 69 6e 74 2c 20  75 6e 73 69 67 6e 65 64   |ed int, unsigned|
0x53f0:    20 69 6e 74 29 00                                  | int).          |
0x53f6:    00 00                                              |..              |
0x53f8:    69 6e 74 20 43 41 64 64  72 4d 61 6e 3a 3a 53 65   |int CAddrMan::Se|   "int CAddrMan::SelectTried(int)"
0x5408:    6c 65 63 74 54 72 69 65  64 28 69 6e 74 29 00      |lectTried(int). |
0x5417:    69 6e 74 20 43 41 64 64  72 4d 61 6e 3a 3a 53 68   |int CAddrMan::Sh|   "int CAddrMan::ShrinkNew(int)"
0x5427:    72 69 6e 6b 4e 65 77 28  69 6e 74 29 00            |rinkNew(int).   |
0x5434:    00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x5440:    76 6f 69 64 20 43 41 64  64 72 4d 61 6e 3a 3a 4d   |void CAddrMan::M|   "void CAddrMan::MakeTried(CAddrInfo&, int, int)"
0x5450:    61 6b 65 54 72 69 65 64  28 43 41 64 64 72 49 6e   |akeTried(CAddrIn|
0x5460:    66 6f 26 2c 20 69 6e 74  2c 20 69 6e 74 29 00      |fo&, int, int). |
0x546f:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x547f:    00                                                 |.               |
0x5480:    43 41 64 64 72 65 73 73  20 43 41 64 64 72 4d 61   |CAddress CAddrMa|   "CAddress CAddrMan::Select_(int)"
0x5490:    6e 3a 3a 53 65 6c 65 63  74 5f 28 69 6e 74 29 00   |n::Select_(int).|
0x54a0:    76 6f 69 64 20 43 41 64  64 72 4d 61 6e 3a 3a 47   |void CAddrMan::G|   "void CAddrMan::GetAddr_(std::vector<CAddress>&)"
0x54b0:    65 74 41 64 64 72 5f 28  73 74 64 3a 3a 76 65 63   |etAddr_(std::vec|
0x54c0:    74 6f 72 3c 43 41 64 64  72 65 73 73 3e 26 29 00   |tor<CAddress>&).|
0x54d0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54e0:    62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x54f0:    5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x5500:    70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x5510:    74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x5520:    69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x5530:    34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x5540:    74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x5550:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x5560:    73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x5570:    69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x5580:    65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x5589:    00                                                 |.               |
; section: .rodata._ZTVN5boost9exceptionE
0x5590:    00 00 00 00 a8 56 00 00  00 00 00 00 00 00 00 00   |.....V..........|
0x55a0:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x55a0:    00 00 00 00 c0 56 00 00  40 31 00 00 20 32 00 00   |.....V..@1.. 2..|
0x55b0:    ec ff ff ff c0 56 00 00  30 31 00 00 10 32 00 00   |.....V..01...2..|
0x55c0:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x55c8:    00 00 00 00 e0 56 00 00  00 00 00 00 00 00 00 00   |.....V..........|
0x55d8:    d0 26 00 00 00 2a 00 00  00                        |.&...*...       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x55e0:    00 00 00 00 80 56 00 00  b0 31 00 00 a0 32 00 00   |.....V...1...2..|
0x55f0:    60 2d 00 00 90 2a 00 00  ec ff ff ff 80 56 00 00   |`-...*.......V..|
0x5600:    a0 31 00 00 90 32 00 00  00 00 00 00 e8 ff ff ff   |.1...2..........|
0x5610:    80 56 00 00 50 2d 00 00  80 2a 00 00 90 31 00 00   |.V..P-...*...1..|
0x5620:    80 32 00 00 ??                                     |.2..?           |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x5628:    00 00 00 00 e8 56 00 00  00 27 00 00 c0 29 00 00   |.....V...'...)..|
0x5638:    00 00 00 00 30 27 00 00  00 00 00 00 ??            |....0'......?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x5648:    00 00 00 00 f0 56 00 00  c0 28 00 00 80 29 00 00   |.....V...(...)..|
0x5658:    f0 28 00 00 30 27 00 00  50 29 00 00 ??            |.(..0'..P)..?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x5680:    08 00 00 00 00 57 00 00  00 00 00 00 02 00 00 00   |.....W..........|
0x5690:    c0 56 00 00 02 00 00 00  e0 56 00 00 02 18 00 00   |.V.......V......|
0x56a0:    08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x56a0:    08 00 00 00 40 57 00 00  08                        |....@W...       |
; section: .rodata._ZTIN5boost9exceptionE
0x56a8:    08 00 00 00 64 57 00 00  ??                        |....dW..?       |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x56c0:    08 00 00 00 80 57 00 00  00 00 00 00 02 00 00 00   |.....W..........|
0x56d0:    a8 56 00 00 02 00 00 00  00 00 00 00 02 14 00 00   |.V..............|
0x56e0:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x56e0:    08 00 00 00 c0 57 00 00  08                        |.....W...       |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x56e8:    08 00 00 00 00 58 00 00  08                        |.....X...       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x56f0:    08 00 00 00 40 58 00 00  e8 56 00 00 ??            |....@X...V..?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x5700:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x5710:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x5720:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x5730:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x5740:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x5750:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x5760:    6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost9exceptionE
0x5764:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x5774:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x5780:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x5790:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x57a0:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x57c0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x57d0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x57e0:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x5800:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|   "N5boost6detail15sp_counted_baseE"
0x5810:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x5820:    00                                                 |.               |
0x5821:    ??                                                 |?               |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x5840:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x5850:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x5860:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x5870:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x5880:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x5890:    6c 6f 63 5f 45 45 45 45  45 00 ??                  |loc_EEEEE.?     |
; section: .rodata.cst4
0x589c:    00 00 16 44 00 00 c0 3f  00 00 c8 42 00 00 80 30   |...D...?...B...0|
0x58ac:    00 00 80 4e 7b                                     |...N{           |
; section: .rodata.cst8
0x58b0:    7b 14 ae 47 e1 7a 84 3f  33 33 33 33 33 33 f3 3f   |{..G.z.?333333.?|
0x58c0:    ??                                                 |?               |
; section: .eh_frame
0xf6c88:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0xf6c98:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0xf6ca8:   b0 26 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |.&../....C. f...|
0xf6cb8:   41 0b 00 00 18 00 00 00  38 00 00 00 c4 26 00 00   |A.......8....&..|
0xf6cc8:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0xf6cd8:   1c 00 00 00 54 00 00 00  d8 26 00 00 55 00 00 00   |....T....&..U...|
0xf6ce8:   00 43 0e 20 6e 0a 0e 04  47 0b 50 0a 0e 04 41 0b   |.C. n...G.P...A.|
0xf6cf8:   18 00 00 00 74 00 00 00  18 27 00 00 2f 00 00 00   |....t....'../...|
0xf6d08:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0xf6d18:   90 00 00 00 2c 27 00 00  39 00 00 00 00 43 0e 20   |....,'..9....C. |
0xf6d28:   6e 0a 0e 04 43 0b 00 00  2c 00 00 00 ac 00 00 00   |n...C...,.......|
0xf6d38:   50 27 00 00 64 00 00 00  00 41 0e 08 86 02 41 0e   |P'..d....A....A.|
0xf6d48:   0c 83 03 43 0e 40 02 4f  0a 0e 0c 41 0e 08 c3 41   |...C.@.O...A...A|
0xf6d58:   0e 04 c6 42 0b 00 00 00  20 00 00 00 dc 00 00 00   |...B.... .......|
0xf6d68:   90 27 00 00 44 00 00 00  00 41 0e 08 83 02 43 0e   |.'..D....A....C.|
0xf6d78:   20 6d 0a 0e 08 41 0e 04  c3 46 0b 00 18 00 00 00   | m...A...F......|
0xf6d88:   00 01 00 00 bc 27 00 00  2f 00 00 00 00 43 0e 20   |.....'../....C. |
0xf6d98:   66 0a 0e 04 41 0b 00 00  1c 00 00 00 1c 01 00 00   |f...A...........|
0xf6da8:   d0 27 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |.'..U....C. p...|
0xf6db8:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 3c 01 00 00   |E.P...A.....<...|
0xf6dc8:   10 28 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |.(..%....C. \...|
0xf6dd8:   41 0b 00 00 18 00 00 00  58 01 00 00 24 28 00 00   |A.......X...$(..|
0xf6de8:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0xf6df8:   18 00 00 00 74 01 00 00  48 28 00 00 38 00 00 00   |....t...H(..8...|
0xf6e08:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0xf6e18:   90 01 00 00 6c 28 00 00  38 00 00 00 00 43 0e 20   |....l(..8....C. |
0xf6e28:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 ac 01 00 00   |k...E...........|
0xf6e38:   90 28 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |.(..8....C. k...|
0xf6e48:   45 0b 00 00 10 00 00 00  c8 01 00 00 b4 28 00 00   |E............(..|
0xf6e58:   07 00 00 00 00 00 00 00  1c 00 00 00 00 00 00 00   |................|
0xf6e68:   01 7a 50 4c 52 00 01 7c  08 07 00 00 00 00 00 00   |.zPLR..|........|
0xf6e78:   1b 0c 04 04 88 01 00 00  20 00 00 00 24 00 00 00   |........ ...$...|
0xf6e88:   90 28 00 00 8b 00 00 00  04 1c 2b 00 00 41 0e 08   |.(........+..A..|
0xf6e98:   86 02 41 0e 0c 83 03 43  0e 30 00 00 3c 00 00 00   |..A....C.0..<...|
0xf6ea8:   20 02 00 00 dc fd ff ff  6a 00 00 00 00 41 0e 08   | .......j....A..|
0xf6eb8:   85 02 43 0e 0c 87 03 41  0e 10 86 04 43 0e 14 83   |..C....A....C...|
0xf6ec8:   05 45 0e 40 02 47 0a 0e  14 41 0e 10 c3 41 0e 0c   |.E.@.G...A...A..|
0xf6ed8:   c6 41 0e 08 c7 41 0e 04  c5 48 0b 00 10 00 00 00   |.A...A...H......|
0xf6ee8:   60 02 00 00 b6 2a 00 00  33 00 00 00 00 43 0e 30   |`....*..3....C.0|
0xf6ef8:   3c 00 00 00 74 02 00 00  f8 fd ff ff 97 00 00 00   |<...t...........|
0xf6f08:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xf6f18:   41 0e 14 83 05 45 0e 30  02 84 0a 0e 14 41 0e 10   |A....E.0.....A..|
0xf6f28:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0xf6f38:   10 00 00 00 b4 02 00 00  98 2a 00 00 07 00 00 00   |.........*......|
0xf6f48:   00 00 00 00 30 00 00 00  f0 00 00 00 94 2a 00 00   |....0........*..|
0xf6f58:   8e 00 00 00 04 28 2b 00  00 41 0e 08 86 02 41 0e   |.....(+..A....A.|
0xf6f68:   0c 83 03 43 0e 30 02 6f  0a 0e 0c 41 0e 08 c3 41   |...C.0.o...A...A|
0xf6f78:   0e 04 c6 41 0b 00 00 00  28 00 00 00 24 01 00 00   |...A....(...$...|
0xf6f88:   f0 2a 00 00 14 01 00 00  04 3c 2b 00 00 43 0e 30   |.*.......<+..C.0|
0xf6f98:   48 86 03 57 87 02 83 04  69 0a 0e 04 c7 c6 c3 45   |H..W....i......E|
0xf6fa8:   0b 00 00 00 28 00 00 00  28 03 00 00 e4 2b 00 00   |....(...(....+..|
0xf6fb8:   8a 00 00 00 00 43 0e 30  5b 86 02 83 03 6d 0a 0e   |.....C.0[....m..|
0xf6fc8:   04 c6 c3 45 0b 73 0a 0e  04 c6 c3 42 0b 00 00 00   |...E.s.....B....|
0xf6fd8:   20 00 00 00 54 03 00 00  48 2c 00 00 87 00 00 00   | ...T...H,......|
0xf6fe8:   00 43 0e 30 48 83 03 64  86 02 60 0a 0e 04 c6 c3   |.C.0H..d..`.....|
0xf6ff8:   41 0b 00 00 20 00 00 00  78 03 00 00 b4 2c 00 00   |A... ...x....,..|
0xf7008:   8f 00 00 00 00 43 0e 30  48 83 03 64 86 02 68 0a   |.....C.0H..d..h.|
0xf7018:   0e 04 c6 c3 41 0b 00 00  24 00 00 00 c4 01 00 00   |....A...$.......|
0xf7028:   20 2d 00 00 68 00 00 00  04 6c 2b 00 00 41 0e 08   | -..h....l+..A..|
0xf7038:   83 02 43 0e 30 79 0a 0e  08 41 0e 04 c3 4a 0b 00   |..C.0y...A...J..|
0xf7048:   10 00 00 00 c4 03 00 00  68 2d 00 00 0a 00 00 00   |........h-......|
0xf7058:   00 00 00 00 20 00 00 00  d8 03 00 00 64 2d 00 00   |.... .......d-..|
0xf7068:   4b 00 00 00 00 41 0e 08  83 02 43 0e 30 7c 0a 0e   |K....A....C.0|..|
0xf7078:   08 41 0e 04 c3 45 0b 00  10 00 00 00 fc 03 00 00   |.A...E..........|
0xf7088:   90 2d 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   |.-..............|
0xf7098:   10 04 00 00 8c 2d 00 00  0a 00 00 00 00 00 00 00   |.....-..........|
0xf70a8:   20 00 00 00 24 04 00 00  88 2d 00 00 52 00 00 00   | ...$....-..R...|
0xf70b8:   00 41 0e 08 83 02 43 0e  30 02 43 0a 0e 08 41 0e   |.A....C.0.C...A.|
0xf70c8:   04 c3 45 0b 10 00 00 00  48 04 00 00 c4 2d 00 00   |..E.....H....-..|
0xf70d8:   07 00 00 00 00 00 00 00  20 00 00 00 5c 04 00 00   |........ ...\...|
0xf70e8:   c0 2d 00 00 53 00 00 00  00 41 0e 08 83 02 43 0e   |.-..S....A....C.|
0xf70f8:   30 02 44 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.D...A...E.....|
0xf7108:   80 04 00 00 fc 2d 00 00  07 00 00 00 00 00 00 00   |.....-..........|
0xf7118:   10 00 00 00 94 04 00 00  f8 2d 00 00 07 00 00 00   |.........-......|
0xf7128:   00 00 00 00 20 00 00 00  a8 04 00 00 f4 2d 00 00   |.... ........-..|
0xf7138:   5a 00 00 00 00 41 0e 08  83 02 43 0e 30 02 4b 0a   |Z....A....C.0.K.|
0xf7148:   0e 08 41 0e 04 c3 45 0b  20 00 00 00 cc 04 00 00   |..A...E. .......|
0xf7158:   30 2e 00 00 3b 00 00 00  00 41 0e 08 83 02 43 0e   |0...;....A....C.|
0xf7168:   30 6c 0a 0e 08 41 0e 04  c3 45 0b 00 2c 00 00 00   |0l...A...E..,...|
0xf7178:   f0 04 00 00 4c 2e 00 00  65 00 00 00 00 41 0e 08   |....L...e....A..|
0xf7188:   83 02 43 0e 30 7c 0a 0e  08 41 0e 04 c3 47 0b 50   |..C.0|...A...G.P|
0xf7198:   0a 0e 08 41 0e 04 c3 41  0b 00 00 00 28 00 00 00   |...A...A....(...|
0xf71a8:   20 05 00 00 ec fb ff ff  1c 01 00 00 00 43 0e 40   | ............C.@|
0xf71b8:   48 86 04 54 87 03 48 85  02 50 83 05 02 6d 0a 0e   |H..T..H..P...m..|
0xf71c8:   04 c5 c7 c6 c3 44 0b 00  3c 00 00 00 4c 05 00 00   |.....D..<...L...|
0xf71d8:   e0 fc ff ff bf 00 00 00  00 41 0e 08 85 02 43 0e   |.........A....C.|
0xf71e8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 40   |...A....A....C.@|
0xf71f8:   02 92 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7208:   c7 41 0e 04 c5 41 0b 00  3c 00 00 00 8c 05 00 00   |.A...A..<.......|
0xf7218:   60 fd ff ff c8 00 00 00  00 41 0e 08 85 02 43 0e   |`........A....C.|
0xf7228:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0xf7238:   02 b5 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7248:   c7 41 0e 04 c5 41 0b 00  28 00 00 00 cc 05 00 00   |.A...A..(.......|
0xf7258:   f0 fd ff ff 89 00 00 00  00 43 0e 40 58 86 04 4c   |.........C.@X..L|
0xf7268:   87 03 83 05 48 85 02 02  54 0a 0e 04 c5 c7 c6 c3   |....H...T.......|
0xf7278:   41 0b 00 00 28 00 00 00  f8 05 00 00 54 fe ff ff   |A...(.......T...|
0xf7288:   b6 00 00 00 00 43 0e 50  58 86 04 4c 87 03 83 05   |.....C.PX..L....|
0xf7298:   48 85 02 02 75 0a 0e 04  c5 c7 c6 c3 44 0b 00 00   |H...u.......D...|
0xf72a8:   20 00 00 00 24 06 00 00  88 2d 00 00 45 00 00 00   | ...$....-..E...|
0xf72b8:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0xf72c8:   c3 41 0b 00 2c 00 00 00  70 04 00 00 b4 2d 00 00   |.A..,...p....-..|
0xf72d8:   2b 01 00 00 04 7d 2b 00  00 43 0e 40 48 83 05 54   |+....}+..C.@H..T|
0xf72e8:   86 04 5b 85 02 87 03 02  af 0a 0e 04 c5 c7 c6 c3   |..[.............|
0xf72f8:   47 0b 00 00 2c 00 00 00  a0 04 00 00 14 30 00 00   |G...,........0..|
0xf7308:   96 02 00 00 04 9c 2b 00  00 43 0e 70 48 86 04 48   |......+..C.pH..H|
0xf7318:   87 03 48 83 05 02 7f 85  02 02 b7 0a 0e 04 c5 c7   |..H.............|
0xf7328:   c6 c3 47 0b 1c 00 00 00  a8 06 00 00 84 32 00 00   |..G..........2..|
0xf7338:   55 00 00 00 00 43 0e 20  6a 0a 0e 04 4b 0b 50 0a   |U....C. j...K.P.|
0xf7348:   0e 04 41 0b 34 00 00 00  c8 06 00 00 c4 32 00 00   |..A.4........2..|
0xf7358:   59 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |Y....A....A....A|
0xf7368:   0e 10 83 04 43 0e 30 02  4a 0a 0e 10 41 0e 0c c3   |....C.0.J...A...|
0xf7378:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 28 00 00 00   |A...A...A...(...|
0xf7388:   00 07 00 00 ec 32 00 00  aa 01 00 00 00 43 0e 50   |.....2.......C.P|
0xf7398:   48 83 05 54 86 04 48 87  03 4c 85 02 02 43 0a 0e   |H..T..H..L...C..|
0xf73a8:   04 c5 c7 c6 c3 42 0b 00  34 00 00 00 2c 07 00 00   |.....B..4...,...|
0xf73b8:   70 34 00 00 59 00 00 00  00 41 0e 08 87 02 41 0e   |p4..Y....A....A.|
0xf73c8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 4a 0a 0e 10   |...A....C.0.J...|
0xf73d8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0xf73e8:   34 00 00 00 64 07 00 00  98 34 00 00 59 00 00 00   |4...d....4..Y...|
0xf73f8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0xf7408:   43 0e 30 02 4a 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.J...A...A...|
0xf7418:   41 0e 04 c7 41 0b 00 00  3c 00 00 00 9c 07 00 00   |A...A...<.......|
0xf7428:   c0 34 00 00 7a 01 00 00  00 41 0e 08 85 02 41 0e   |.4..z....A....A.|
0xf7438:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0xf7448:   02 bc 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7458:   c7 41 0e 04 c5 41 0b 00  3c 00 00 00 dc 07 00 00   |.A...A..<.......|
0xf7468:   00 36 00 00 7a 01 00 00  00 41 0e 08 85 02 41 0e   |.6..z....A....A.|
0xf7478:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0xf7488:   02 bc 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7498:   c7 41 0e 04 c5 41 0b 00  3c 00 00 00 1c 08 00 00   |.A...A..<.......|
0xf74a8:   40 37 00 00 ac 02 00 00  00 41 0e 08 85 02 41 0e   |@7.......A....A.|
0xf74b8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0xf74c8:   03 82 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0xf74d8:   08 c7 41 0e 04 c5 43 0b  54 00 00 00 5c 08 00 00   |..A...C.T...\...|
0xf74e8:   b0 39 00 00 a9 02 00 00  00 41 0e 08 85 02 41 0e   |.9.......A....A.|
0xf74f8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0xf7508:   02 9d 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7518:   c7 41 0e 04 c5 48 0b 03  a4 01 0a 0e 14 41 0e 10   |.A...H.......A..|
0xf7528:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 48 0b 00   |.A...A...A...H..|
0xf7538:   28 00 00 00 b4 08 00 00  08 3c 00 00 cb 00 00 00   |(........<......|
0xf7548:   00 43 0e 50 58 83 05 50  87 03 86 04 52 85 02 02   |.C.PX..P....R...|
0xf7558:   6c 0a 0e 04 c5 c7 c6 c3  47 0b 00 00 3c 00 00 00   |l.......G...<...|
0xf7568:   e0 08 00 00 ac 3c 00 00  e8 00 00 00 00 41 0e 08   |.....<.......A..|
0xf7578:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xf7588:   05 43 0e 60 02 79 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.y...A...A..|
0xf7598:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 3c 00 00 00   |.A...A...C..<...|
0xf75a8:   20 09 00 00 5c 3d 00 00  ea 00 00 00 00 41 0e 08   | ...\=.......A..|
0xf75b8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xf75c8:   05 43 0e 50 02 62 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.b...A...A..|
0xf75d8:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 3c 00 00 00   |.A...A...C..<...|
0xf75e8:   60 09 00 00 0c 3e 00 00  ed 00 00 00 00 41 0e 08   |`....>.......A..|
0xf75f8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xf7608:   05 43 0e 50 02 9a 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0xf7618:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 28 00 00 00   |.A...A...C..(...|
0xf7628:   a0 09 00 00 bc 3e 00 00  d5 00 00 00 00 43 0e 50   |.....>.......C.P|
0xf7638:   50 85 02 50 86 04 67 87  03 83 05 02 6a 0a 0e 04   |P..P..g.....j...|
0xf7648:   c5 c7 c6 c3 44 0b 00 00  3c 00 00 00 cc 09 00 00   |....D...<.......|
0xf7658:   70 3f 00 00 e8 00 00 00  00 41 0e 08 85 02 41 0e   |p?.......A....A.|
0xf7668:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0xf7678:   02 79 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.y...A...A...A..|
0xf7688:   c7 41 0e 04 c5 43 0b 00  28 00 00 00 0c 0a 00 00   |.A...C..(.......|
0xf7698:   20 40 00 00 8c 01 00 00  00 43 0e 60 48 87 03 48   | @.......C.`H..H|
0xf76a8:   83 05 54 86 04 4d 85 02  02 7e 0a 0e 04 c5 c7 c6   |..T..M...~......|
0xf76b8:   c3 46 0b 00 3c 00 00 00  38 0a 00 00 84 41 00 00   |.F..<...8....A..|
0xf76c8:   2e 01 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0xf76d8:   0e 10 86 04 41 0e 14 83  05 46 0e f0 01 02 69 0a   |....A....F....i.|
0xf76e8:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0xf76f8:   04 c5 41 0b 40 00 00 00  78 0a 00 00 94 fa ff ff   |..A.@...x.......|
0xf7708:   9a 03 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0xf7718:   0e 10 86 04 41 0e 14 83  05 43 0e 80 01 03 15 03   |....A....C......|
0xf7728:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0xf7738:   0e 04 c5 43 0b 00 00 00  3c 00 00 00 bc 0a 00 00   |...C....<.......|
0xf7748:   f0 fd ff ff 99 01 00 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0xf7758:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 45 0e 60   |...A....A....E.`|
0xf7768:   02 bf 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7778:   c7 41 0e 04 c5 44 0b 00  3c 00 00 00 fc 0a 00 00   |.A...D..<.......|
0xf7788:   50 ff ff ff a5 01 00 00  00 41 0e 08 85 02 41 0e   |P........A....A.|
0xf7798:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0xf77a8:   03 46 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |.F....A...A...A.|
0xf77b8:   08 c7 41 0e 04 c5 47 0b  3c 00 00 00 3c 0b 00 00   |..A...G.<...<...|
0xf77c8:   c0 00 00 00 af 01 00 00  00 41 0e 08 85 02 46 0e   |.........A....F.|
0xf77d8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0xf77e8:   03 99 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0xf77f8:   08 c7 41 0e 04 c5 41 0b  3c 00 00 00 7c 0b 00 00   |..A...A.<...|...|
0xf7808:   30 02 00 00 37 04 00 00  00 41 0e 08 85 02 41 0e   |0...7....A....A.|
0xf7818:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0xf7828:   03 fe 02 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0xf7838:   08 c7 41 0e 04 c5 41 0b  28 00 00 00 bc 0b 00 00   |..A...A.(.......|
0xf7848:   30 41 00 00 f0 00 00 00  00 43 0e 50 5d 86 04 48   |0A.......C.P]..H|
0xf7858:   83 05 48 87 03 4d 85 02  02 88 0a 0e 04 c5 c7 c6   |..H..M..........|
0xf7868:   c3 43 0b 00 3c 00 00 00  e8 0b 00 00 f4 41 00 00   |.C..<........A..|
0xf7878:   e4 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0xf7888:   0e 10 86 04 41 0e 14 83  05 43 0e 60 02 92 0a 0e   |....A....C.`....|
0xf7898:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0xf78a8:   c5 43 0b 00 28 00 00 00  28 0c 00 00 a4 42 00 00   |.C..(...(....B..|
0xf78b8:   05 02 00 00 00 43 0e 60  48 87 03 48 83 05 54 86   |.....C.`H..H..T.|
0xf78c8:   04 4d 85 02 02 a5 0a 0e  04 c5 c7 c6 c3 47 0b 00   |.M...........G..|
0xf78d8:   40 00 00 00 54 0c 00 00  98 05 00 00 4c 02 00 00   |@...T.......L...|
0xf78e8:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xf78f8:   41 0e 14 83 05 46 0e b0  01 03 c1 01 0a 0e 14 41   |A....F.........A|
0xf7908:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0xf7918:   0b 00 00 00 20 00 00 00  98 0c 00 00 44 44 00 00   |.... .......DD..|
0xf7928:   48 01 00 00 00 41 0e 08  83 02 43 0e 50 02 87 0a   |H....A....C.P...|
0xf7938:   0e 08 41 0e 04 c3 44 0b  44 00 00 00 e4 0a 00 00   |..A...D.D.......|
0xf7948:   80 07 00 00 74 05 00 00  04 cc 2b 00 00 41 0e 08   |....t.....+..A..|
0xf7958:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xf7968:   05 46 0e 90 02 03 15 05  0a 0e 14 41 0e 10 c3 41   |.F.........A...A|
0xf7978:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 41 0b 00 00 00   |...A...A...A....|
0xf7988:   28 00 00 00 04 0d 00 00  b8 0c 00 00 60 03 00 00   |(...........`...|
0xf7998:   00 43 0e 70 53 86 04 4a  83 05 48 85 02 60 87 03   |.C.pS..J..H..`..|
0xf79a8:   6f 0a 0e 04 c5 c7 c6 c3  41 0b 00 00 44 00 00 00   |o.......A...D...|
0xf79b8:   58 0b 00 00 ec 0f 00 00  1c 05 00 00 04 f9 2b 00   |X.............+.|
0xf79c8:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xf79d8:   41 0e 14 83 05 46 0e 90  02 03 bd 04 0a 0e 14 41   |A....F.........A|
0xf79e8:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0xf79f8:   0b 00 00 00 3c 00 00 00  78 0d 00 00 c4 14 00 00   |....<...x.......|
0xf7a08:   ca 02 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0xf7a18:   0e 10 86 04 41 0e 14 83  05 43 0e 70 03 41 02 0a   |....A....C.p.A..|
0xf7a28:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0xf7a38:   04 c5 44 0b 40 00 00 00  e0 0b 00 00 54 17 00 00   |..D.@.......T...|
0xf7a48:   bc 01 00 00 04 26 2c 00  00 41 0e 08 85 02 41 0e   |.....&,..A....A.|
0xf7a58:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0xf7a68:   02 86 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xf7a78:   c7 41 0e 04 c5 41 0b 00  18 00 00 00 fc 0d 00 00   |.A...A..........|
0xf7a88:   30 44 00 00 a4 00 00 00  00 43 0e 30 02 9b 0a 0e   |0D.......C.0....|
0xf7a98:   04 41 0b 00 ??                                     |.A..?           |

;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:05:07
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: _ZN8CCrypter20SetKeyFromPassphraseERKSbIcSt11char_traitsIcE16secure_allocatorIcEERKSt6vectorIhSaIhEEjj at 0x0 -- 0x3
0x0:       83 ec 5c                           	sub esp, 0x5c
; data inside code section at 0x3 -- 0x10
0x3:       89 5c 24 4c 8b 5c 24 6c  65 a1 14 00 00            |.\$L.\$le....   |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x10 -- 0x11
; data inside code section at 0x11 -- 0x20
0x11:      89 44 24 3c 31 c0 8b 4c  24 64 89 74 24 50 8b      |.D$<1..L$d.t$P. |
; function: ~clone_impl at 0x20 -- 0x21
; data inside code section at 0x21 -- 0x64
0x21:      24 68 89 6c 24 58 8b 74  24 60 85 db 8b 6c 24 70   |$h.l$X.t$`...l$p|
0x31:      89 7c 24 54 74 0c 8b 3a  8b 52 04 29 fa 83 fa 08   |.|$Tt..:.R.)....|
0x41:      74 25 8b 54 24 3c 65 33  15 14 00 00 00 0f 85 a5   |t%.T$<e3........|
0x51:      00 00 00 8b 5c 24 4c 8b  74 24 50 8b 7c 24 54 8b   |....\$L.t$P.|$T.|
0x61:      6c 24 58                                           |l$X             |
; function: function_64 at 0x64 -- 0x68
0x64:      83 c4 5c                           	add esp, 0x5c
0x67:      c3                                 	ret 
; data inside code section at 0x68 -- 0x7b
0x68:      85 ed 74 2c 8d 6e 20 c7  44 24 04 20 00 00 00 89   |..t,.n .D$. ....|
0x78:      34 24 e8                                           |4$.             |
; dynamically linked function: OPENSSL_cleanse at 0x7b -- 0x7c
; data inside code section at 0x7c -- 0x8b
0x7c:      ff ff ff c7 44 24 04 20  00 00 00 89 2c 24 e8      |....D$. ....,$. |
; dynamically linked function: OPENSSL_cleanse at 0x8b -- 0x8c
; data inside code section at 0x8c -- 0x8f
0x8c:      ff ff ff                                           |...             |
; function: function_8f at 0x8f -- 0x93
0x8f:      31 c0                              	xor eax, eax
0x91:      eb b0                              	jmp 0x43
; data inside code section at 0x93 -- 0xa9
0x93:      90 8d 74 26 00 8b 11 8d  6e 20 8b 4a f4 89 54 24   |..t&....n .J..T$|
0xa3:      24 89 4c 24 28 e8                                  |$.L$(.          |
; dynamically linked function: EVP_sha512 at 0xa9 -- 0xaa
; data inside code section at 0xaa -- 0xb2
0xaa:      ff ff ff 89 44 24 2c e8                            |....D$,.        |
; dynamically linked function: EVP_aes_256_cbc at 0xb2 -- 0xb3
; data inside code section at 0xb3 -- 0xe2
0xb3:      ff ff ff 8b 54 24 24 8b  4c 24 28 89 6c 24 1c 89   |....T$$.L$(.l$..|
0xc3:      74 24 18 89 54 24 0c 8b  54 24 2c 89 5c 24 14 89   |t$..T$..T$,.\$..|
0xd3:      4c 24 10 89 7c 24 08 89  54 24 04 89 04 24 e8      |L$..|$..T$...$. |
; dynamically linked function: EVP_BytesToKey at 0xe2 -- 0xe3
; data inside code section at 0xe3 -- 0xe5
0xe3:      ff ff                                              |..              |
; function: function_e5 at 0xe5 -- 0xf9
0xe5:      ff 83 f8 20 75 84                  	inc dword ptr [ebx - 0x7b8adf08]
0xeb:      c6 46 40 01                        	mov byte ptr [esi + 0x40], 1
0xef:      b8 01 00 00 00                     	mov eax, 1
0xf4:      e9 4a ff ff ff                     	jmp 0x43
; data inside code section at 0xf9 -- 0xfa
0xf9:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xfa -- 0xfb
; data inside code section at 0xfb -- 0xfd
0xfb:      ff ff                                              |..              |
; function: function_fd at 0xfd -- 0x100
0xfd:      ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _ZN8CCrypter6SetKeyERKSt6vectorIh16secure_allocatorIhEERKS0_IhSaIhEE at 0x100 -- 0x1d0
0x100:     83 ec 1c                           	sub esp, 0x1c
0x103:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x107:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x10e:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x112:     31 d2                              	xor edx, edx
0x114:     89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x118:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x11c:     89 74 24 18                        	mov dword ptr [esp + 0x18], esi
0x120:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x124:     8b 08                              	mov ecx, dword ptr [eax]
0x126:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0x129:     31 c0                              	xor eax, eax
0x12b:     29 ca                              	sub edx, ecx
0x12d:     83 fa 20                           	cmp edx, 0x20
0x130:     74 1e                              	je 0x150 <_ZN8CCrypter6SetKeyERKSt6vectorIh16secure_allocatorIhEERKS0_IhSaIhEE+0x50>
0x132:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x136:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13d:     0f 85 84 00 00 00                  	jne 0x1c7 <_ZN8CCrypter6SetKeyERKSt6vectorIh16secure_allocatorIhEERKS0_IhSaIhEE+0xc7>
0x143:     8b 5c 24 14                        	mov ebx, dword ptr [esp + 0x14]
0x147:     8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0x14b:     83 c4 1c                           	add esp, 0x1c
0x14e:     c3                                 	ret 
; data inside code section at 0x14f -- 0x150
0x14f:     90                                                 |.               |
0x150:     8b 56 04                           	mov edx, dword ptr [esi + 4]
0x153:     2b 16                              	sub edx, dword ptr [esi]
0x155:     83 fa 20                           	cmp edx, 0x20
0x158:     75 d8                              	jne 0x132 <_ZN8CCrypter6SetKeyERKSt6vectorIh16secure_allocatorIhEERKS0_IhSaIhEE+0x32>
0x15a:     8b 01                              	mov eax, dword ptr [ecx]
0x15c:     89 03                              	mov dword ptr [ebx], eax
0x15e:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x161:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x164:     8b 41 08                           	mov eax, dword ptr [ecx + 8]
0x167:     89 43 08                           	mov dword ptr [ebx + 8], eax
0x16a:     8b 41 0c                           	mov eax, dword ptr [ecx + 0xc]
0x16d:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x170:     8b 41 10                           	mov eax, dword ptr [ecx + 0x10]
0x173:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x176:     8b 41 14                           	mov eax, dword ptr [ecx + 0x14]
0x179:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x17c:     8b 41 18                           	mov eax, dword ptr [ecx + 0x18]
0x17f:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x182:     8b 41 1c                           	mov eax, dword ptr [ecx + 0x1c]
0x185:     89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x188:     8b 06                              	mov eax, dword ptr [esi]
0x18a:     8b 08                              	mov ecx, dword ptr [eax]
0x18c:     89 4b 20                           	mov dword ptr [ebx + 0x20], ecx
0x18f:     8b 48 04                           	mov ecx, dword ptr [eax + 4]
0x192:     89 4b 24                           	mov dword ptr [ebx + 0x24], ecx
0x195:     8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x198:     89 4b 28                           	mov dword ptr [ebx + 0x28], ecx
0x19b:     8b 48 0c                           	mov ecx, dword ptr [eax + 0xc]
0x19e:     89 4b 2c                           	mov dword ptr [ebx + 0x2c], ecx
0x1a1:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0x1a4:     89 4b 30                           	mov dword ptr [ebx + 0x30], ecx
0x1a7:     8b 48 14                           	mov ecx, dword ptr [eax + 0x14]
0x1aa:     89 4b 34                           	mov dword ptr [ebx + 0x34], ecx
0x1ad:     8b 48 18                           	mov ecx, dword ptr [eax + 0x18]
0x1b0:     89 4b 38                           	mov dword ptr [ebx + 0x38], ecx
0x1b3:     8b 40 1c                           	mov eax, dword ptr [eax + 0x1c]
0x1b6:     89 43 3c                           	mov dword ptr [ebx + 0x3c], eax
0x1b9:     b8 01 00 00 00                     	mov eax, 1
0x1be:     c6 43 40 01                        	mov byte ptr [ebx + 0x40], 1
0x1c2:     e9 6b ff ff ff                     	jmp 0x132 <_ZN8CCrypter6SetKeyERKSt6vectorIh16secure_allocatorIhEERKS0_IhSaIhEE+0x32>
0x1c7:     e8 fc ff ff ff                     	call 0x1c8
0x1cc:     8d 74 26 00                        	lea esi, [esi]
; function: _ZN8CCrypter7EncryptERKSt6vectorIh16secure_allocatorIhEERS0_IhSaIhEE at 0x1d0 -- 0x299
0x1d0:     81 ec fc 00 00 00                  	sub esp, 0xfc
0x1d6:     89 9c 24 ec 00 00 00               	mov dword ptr [esp + 0xec], ebx
0x1dd:     8b 9c 24 00 01 00 00               	mov ebx, dword ptr [esp + 0x100]
0x1e4:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ea:     89 84 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], eax
0x1f1:     31 c0                              	xor eax, eax
0x1f3:     89 b4 24 f0 00 00 00               	mov dword ptr [esp + 0xf0], esi
0x1fa:     8b b4 24 08 01 00 00               	mov esi, dword ptr [esp + 0x108]
0x201:     89 bc 24 f4 00 00 00               	mov dword ptr [esp + 0xf4], edi
0x208:     8b bc 24 04 01 00 00               	mov edi, dword ptr [esp + 0x104]
0x20f:     80 7b 40 00                        	cmp byte ptr [ebx + 0x40], 0
0x213:     89 ac 24 f8 00 00 00               	mov dword ptr [esp + 0xf8], ebp
0x21a:     75 3c                              	jne 0x258 <_ZN8CCrypter7EncryptERKSt6vectorIh16secure_allocatorIhEERS0_IhSaIhEE+0x88>
0x21c:     8b 8c 24 dc 00 00 00               	mov ecx, dword ptr [esp + 0xdc]
0x223:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x22a:     0f 85 c4 01 00 00                  	jne 0x3f4 <function_3f4>
0x230:     8b 9c 24 ec 00 00 00               	mov ebx, dword ptr [esp + 0xec]
0x237:     8b b4 24 f0 00 00 00               	mov esi, dword ptr [esp + 0xf0]
0x23e:     8b bc 24 f4 00 00 00               	mov edi, dword ptr [esp + 0xf4]
0x245:     8b ac 24 f8 00 00 00               	mov ebp, dword ptr [esp + 0xf8]
0x24c:     81 c4 fc 00 00 00                  	add esp, 0xfc
0x252:     c3                                 	ret 
; data inside code section at 0x253 -- 0x258
0x253:     90 8d 74 26 00                                     |..t&.           |
0x258:     8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x25b:     31 c0                              	xor eax, eax
0x25d:     2b 2f                              	sub ebp, dword ptr [edi]
0x25f:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x267:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x26f:     8d 55 10                           	lea edx, [ebp + 0x10]
0x272:     85 d2                              	test edx, edx
0x274:     89 54 24 44                        	mov dword ptr [esp + 0x44], edx
0x278:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x280:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x288:     c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x290:     74 14                              	je 0x2a6 <function_2a6>
0x292:     89 14 24                           	mov dword ptr [esp], edx
0x295:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
; data inside code section at 0x299 -- 0x29a
0x299:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x29a -- 0x29b
; data inside code section at 0x29b -- 0x2a6
0x29b:     ff ff ff 8b 54 24 2c 89  44 24 28                  |....T$,.D$(     |
; function: function_2a6 at 0x2a6 -- 0x2c9
0x2a6:     01 c2                              	add edx, eax
0x2a8:     89 d1                              	mov ecx, edx
0x2aa:     2b 4c 24 28                        	sub ecx, dword ptr [esp + 0x28]
0x2ae:     89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x2b2:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x2b6:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x2ba:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x2be:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x2c6:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2c9 -- 0x2ca
0x2c9:     e8                                                 |.               |
; dynamically linked function: memset at 0x2ca -- 0x2cb
; data inside code section at 0x2cb -- 0x2fe
0x2cb:     ff ff ff 8b 54 24 2c 8d  44 24 38 89 44 24 04 89   |....T$,.D$8.D$..|
0x2db:     34 24 89 54 24 3c e8 4a  1e 00 00 8b 44 24 38 85   |4$.T$<.J....D$8.|
0x2eb:     c0 74 08 89 04 24 e8 fc  ff ff ff 8d 44 24 50 89   |.t...$......D$P.|
0x2fb:     04 24 e8                                           |.$.             |
; dynamically linked function: EVP_CIPHER_CTX_init at 0x2fe -- 0x2ff
; data inside code section at 0x2ff -- 0x303
0x2ff:     ff ff ff e8                                        |....            |
; dynamically linked function: EVP_aes_256_cbc at 0x303 -- 0x304
; data inside code section at 0x304 -- 0x326
0x304:     ff ff ff 8d 53 20 89 54  24 10 8d 54 24 50 89 5c   |....S .T$..T$P.\|
0x314:     24 0c c7 44 24 08 00 00  00 00 89 14 24 89 44 24   |$..D$.......$.D$|
0x324:     04 e8                                              |..              |
; dynamically linked function: EVP_EncryptInit_ex at 0x326 -- 0x327
; data inside code section at 0x327 -- 0x336
0x327:     ff ff ff 85 c0 75 1a 8d  44 24 50 89 04 24 e8      |.....u..D$P..$. |
; dynamically linked function: EVP_CIPHER_CTX_cleanup at 0x336 -- 0x337
; data inside code section at 0x337 -- 0x33a
0x337:     ff ff ff                                           |...             |
; function: function_33a at 0x33a -- 0x341
0x33a:     31 c0                              	xor eax, eax
0x33c:     e9 db fe ff ff                     	jmp 0x21c
; data inside code section at 0x341 -- 0x368
0x341:     8d b4 26 00 00 00 00 89  6c 24 10 8b 07 8d 4c 24   |..&.....l$....L$|
0x351:     50 89 44 24 0c 8d 44 24  44 89 44 24 08 8b 06 89   |P.D$..D$D.D$....|
0x361:     0c 24 89 44 24 04 e8                               |.$.D$..         |
; dynamically linked function: EVP_EncryptUpdate at 0x368 -- 0x369
; data inside code section at 0x369 -- 0x38a
0x369:     ff ff ff 85 c0 74 be 8d  44 24 48 89 44 24 08 8b   |.....t..D$H.D$..|
0x379:     06 03 44 24 44 89 44 24  04 8d 44 24 50 89 04 24   |..D$D.D$..D$P..$|
0x389:     e8                                                 |.               |
; dynamically linked function: EVP_EncryptFinal_ex at 0x38a -- 0x38b
; data inside code section at 0x38b -- 0x394
0x38b:     ff ff ff 8d 54 24 50 89  14                        |....T$P..       |
; function: function_394 at 0x394 -- 0x397
0x394:     24 89                              	and al, 0x89
0x396:     c3                                 	ret 
; data inside code section at 0x397 -- 0x398
0x397:     e8                                                 |.               |
; dynamically linked function: EVP_CIPHER_CTX_cleanup at 0x398 -- 0x399
; data inside code section at 0x399 -- 0x39b
0x399:     ff ff                                              |..              |
; function: function_39b at 0x39b -- 0x3f4
0x39b:     ff 85 db 74 59 8b                  	inc dword ptr [ebp - 0x74a68b25]
0x3a1:     46                                 	inc esi
0x3a2:     04 8b                              	add al, 0x8b
0x3a4:     0e                                 	push cs
0x3a5:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x3a9:     03 54 24 48                        	add edx, dword ptr [esp + 0x48]
0x3ad:     89 c3                              	mov ebx, eax
0x3af:     29 cb                              	sub ebx, ecx
0x3b1:     39 da                              	cmp edx, ebx
0x3b3:     c6 44 24 4f 00                     	mov byte ptr [esp + 0x4f], 0
0x3b8:     77 16                              	ja 0x3d0 <function_39b+0x35>
0x3ba:     b8 01 00 00 00                     	mov eax, 1
0x3bf:     0f 83 57 fe ff ff                  	jae 0x21c
0x3c5:     01 ca                              	add edx, ecx
0x3c7:     89 56 04                           	mov dword ptr [esi + 4], edx
0x3ca:     e9 4d fe ff ff                     	jmp 0x21c
; data inside code section at 0x3cf -- 0x3d0
0x3cf:     90                                                 |.               |
0x3d0:     8d 4c 24 4f                        	lea ecx, [esp + 0x4f]
0x3d4:     29 da                              	sub edx, ebx
0x3d6:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3da:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x3de:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x3e2:     89 34 24                           	mov dword ptr [esp], esi
0x3e5:     e8 e6 1f 00 00                     	call 0x23d0 <_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh>
0x3ea:     b8 01 00 00 00                     	mov eax, 1
0x3ef:     e9 28 fe ff ff                     	jmp 0x21c
; function: function_3f4 at 0x3f4 -- 0x3f5
; dynamically linked function: __stack_chk_fail at 0x3f5 -- 0x3f6
; data inside code section at 0x3f6 -- 0x3f9
0x3f6:     ff ff ff                                           |...             |
; function: function_3f9 at 0x3f9 -- 0x400
0x3f9:     31 c0                              	xor eax, eax
0x3fb:     e9 1c fe ff ff                     	jmp 0x21c
; data inside code section at 0x400 -- 0x405
0x400:     8b 54 24 38 89                                     |.T$8.           |
; function: function_405 at 0x405 -- 0x406
0x405:     c3                                 	ret 
; data inside code section at 0x406 -- 0x40e
0x406:     85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x40e -- 0x40f
; data inside code section at 0x40f -- 0x416
0x40f:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x416 -- 0x417
; data inside code section at 0x417 -- 0x420
0x417:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _Z13EncryptSecretRKSt6vectorIh16secure_allocatorIhEES4_RK7uint256RS_IhSaIhEE at 0x420 -- 0x475
0x420:     55                                 	push ebp
0x421:     57                                 	push edi
0x422:     56                                 	push esi
0x423:     53                                 	push ebx
0x424:     81 ec dc 00 00 00                  	sub esp, 0xdc
0x42a:     8b 84 24 f0 00 00 00               	mov eax, dword ptr [esp + 0xf0]
0x431:     8b 94 24 f4 00 00 00               	mov edx, dword ptr [esp + 0xf4]
0x438:     8b 8c 24 f8 00 00 00               	mov ecx, dword ptr [esp + 0xf8]
0x43f:     c6 84 24 cb 00 00 00 00            	mov byte ptr [esp + 0xcb], 0
0x447:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x44b:     8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0x452:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x456:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0x45a:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x461:     89 94 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], edx
0x468:     31 d2                              	xor edx, edx
0x46a:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x46e:     c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0x475 -- 0x476
0x475:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x476 -- 0x477
; data inside code section at 0x477 -- 0x484
0x477:     ff ff ff 85 c0 0f 85 af  04 00 00 8b 35            |............5   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x484 -- 0x4b0
; function: function_4b0 at 0x4b0 -- 0x4b1
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x4b1 -- 0x4bd
; data inside code section at 0x4bd -- 0x4be
0x4bd:     ba                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x4be -- 0x4dd
; data inside code section at 0x4dd -- 0x4df
0x4dd:     81 fa                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x4df -- 0x500
; function: function_500 at 0x500 -- 0x501
; data inside code section at 0x501 -- 0x503
0x501:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x503 -- 0x507
; data inside code section at 0x507 -- 0x508
0x507:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x508 -- 0x509
; data inside code section at 0x509 -- 0x517
0x509:     ff ff ff 85 c0 0f 85 ec  04 00 00 c7 04 24         |.............$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x517 -- 0x51b
; data inside code section at 0x51b -- 0x51c
0x51b:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x51c -- 0x51d
; data inside code section at 0x51d -- 0x52a
0x51d:     ff ff ff 85 c0 0f 85 c0  04 00 00 8b 35            |............5   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x52a -- 0x558
; function: function_558 at 0x558 -- 0x559
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x559 -- 0x565
; data inside code section at 0x565 -- 0x566
0x565:     ba                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x566 -- 0x585
; data inside code section at 0x585 -- 0x587
0x585:     81 fa                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x587 -- 0x59e
; function: function_59e at 0x59e -- 0x59f
; data inside code section at 0x59f -- 0x5a0
0x59f:     1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x5a0 -- 0x5a8
; function: function_5a8 at 0x5a8 -- 0x5a9
; data inside code section at 0x5a9 -- 0x5ab
0x5a9:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x5ab -- 0x5af
; data inside code section at 0x5af -- 0x5b0
0x5af:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x5b0 -- 0x5b1
; data inside code section at 0x5b1 -- 0x5dc
0x5b1:     ff ff ff 85 c0 0f 85 44  04 00 00 c7 44 24 4c 00   |.......D....D$L.|
0x5c1:     00 00 00 c7 44 24 50 00  00 00 00 c7 44 24 54 00   |....D$P.....D$T.|
0x5d1:     00 00 00 c7 04 24 20 00  00 00 e8                  |.....$ ....     |
; dynamically linked function: _Znwj at 0x5dc -- 0x5dd
; data inside code section at 0x5dd -- 0x5e4
0x5dd:     ff ff ff 8d 70 20 89                               |....p .         |
; function: function_5e4 at 0x5e4 -- 0x5e5
0x5e4:     c3                                 	ret 
; data inside code section at 0x5e5 -- 0x601
0x5e5:     89 74 24 54 89 44 24 4c  c7 44 24 08 20 00 00 00   |.t$T.D$L.D$. ...|
0x5f5:     c7 44 24 04 00 00 00 00  89 04 24 e8               |.D$.......$.    |
; dynamically linked function: memset at 0x601 -- 0x602
; data inside code section at 0x602 -- 0x68d
0x602:     ff ff ff 8b 4c 24 28 8d  44 24 4c 89 74 24 50 31   |....L$(.D$L.t$P1|
0x612:     f6 8b 11 89 13 8b 51 04  89 53 04 8b 51 08 89 53   |......Q..S..Q..S|
0x622:     08 8b 51 0c 89 53 0c 8b  51 10 89 53 10 8b 51 14   |..Q..S..Q..S..Q.|
0x632:     89 53 14 8b 51 18 89 53  18 8b 51 1c 89 53 1c 8d   |.S..Q..S..Q..S..|
0x642:     94 24 8b 00 00 00 89 44  24 08 8b 44 24 2c 89 14   |.$.....D$..D$,..|
0x652:     24 89 44 24 04 e8 a4 fa  ff ff 84 c0 74 21 8b 4c   |$.D$........t!.L|
0x662:     24 34 8d 94 24 8b 00 00  00 8b 44 24 30 89 14 24   |$4..$.....D$0..$|
0x672:     89 4c 24 08 89 44 24 04  e8 51 fb ff ff 89 c6 8b   |.L$..D$..Q......|
0x682:     44 24 4c 85 c0 74 08 89  04 24 e8                  |D$L..t...$.     |
; dynamically linked function: _ZdlPv at 0x68d -- 0x68e
; data inside code section at 0x68e -- 0x6a4
0x68e:     ff ff ff 8d 8c 24 8b 00  00 00 89 0c 24 c7 44 24   |.....$......$.D$|
0x69e:     04 20 00 00 00 e8                                  |. ....          |
; dynamically linked function: OPENSSL_cleanse at 0x6a4 -- 0x6a5
; data inside code section at 0x6a5 -- 0x6bb
0x6a5:     ff ff ff 8d 84 24 ab 00  00 00 89 04 24 c7 44 24   |.....$......$.D$|
0x6b5:     04 20 00 00 00 e8                                  |. ....          |
; dynamically linked function: OPENSSL_cleanse at 0x6bb -- 0x6bc
; data inside code section at 0x6bc -- 0x6c2
0x6bc:     ff ff ff c6 84 24                                  |.....$          |
; function: function_6c2 at 0x6c2 -- 0x6c3
0x6c2:     cb                                 	retf 
; data inside code section at 0x6c3 -- 0x6ca
0x6c3:     00 00 00 00 c7 04 24                               |......$         |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x6ca -- 0x6ce
; data inside code section at 0x6ce -- 0x6cf
0x6ce:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x6cf -- 0x6d0
; data inside code section at 0x6d0 -- 0x6dd
0x6d0:     ff ff ff 85 c0 0f 85 c7  02 00 00 8b 2d            |............-   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x6dd -- 0x6f8
; function: function_6f8 at 0x6f8 -- 0x6f9
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x6f9 -- 0x705
; data inside code section at 0x705 -- 0x706
0x705:     bf                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x706 -- 0x725
; data inside code section at 0x725 -- 0x727
0x725:     81 ff                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x727 -- 0x770
; data inside code section at 0x770 -- 0x772
0x770:     83 2d                                              |.-              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x772 -- 0x776
; data inside code section at 0x776 -- 0x777
0x776:     01                                                 |.               |
; function: function_777 at 0x777 -- 0x778
; data inside code section at 0x778 -- 0x779
0x778:     1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x779 -- 0x785
; function: function_785 at 0x785 -- 0x78c
0x785:     c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0x78c -- 0x78d
0x78c:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x78d -- 0x78e
; data inside code section at 0x78e -- 0x79c
0x78e:     ff ff ff 85 c0 0f 85 04  02 00 00 c7 04 24         |.............$  |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x79c -- 0x7a0
; data inside code section at 0x7a0 -- 0x7a1
0x7a0:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x7a1 -- 0x7a2
; data inside code section at 0x7a2 -- 0x7af
0x7a2:     ff ff ff 85 c0 0f 85 cf  01 00 00 8b 2d            |............-   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x7af -- 0x7c8
; function: function_7c8 at 0x7c8 -- 0x7c9
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x7c9 -- 0x7d5
; data inside code section at 0x7d5 -- 0x7d6
0x7d5:     bf                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x7d6 -- 0x7f5
; data inside code section at 0x7f5 -- 0x7f7
0x7f5:     81 ff                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x7f7 -- 0x817
; data inside code section at 0x817 -- 0x818
0x817:     a1                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x818 -- 0x823
; data inside code section at 0x823 -- 0x824
0x823:     e8                                                 |.               |
; dynamically linked function: munlock at 0x824 -- 0x825
; data inside code section at 0x825 -- 0x82c
0x825:     ff ff ff c7 44 24 04                               |....D$.         |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x82c -- 0x833
; data inside code section at 0x833 -- 0x834
0x833:     e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x834 -- 0x835
; data inside code section at 0x835 -- 0x83c
0x835:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x83c -- 0x83d
; data inside code section at 0x83d -- 0x842
0x83d:     ff ff ff 83 2d                                     |....-           |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x842 -- 0x846
; data inside code section at 0x846 -- 0x847
0x846:     01                                                 |.               |
; function: function_847 at 0x847 -- 0x848
; data inside code section at 0x848 -- 0x849
0x848:     1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x849 -- 0x855
; function: function_855 at 0x855 -- 0x856
; data inside code section at 0x856 -- 0x858
0x856:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x858 -- 0x85c
; data inside code section at 0x85c -- 0x85d
0x85c:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x85d -- 0x85e
; data inside code section at 0x85e -- 0x860
0x85e:     ff ff                                              |..              |
; function: function_860 at 0x860 -- 0x88a
0x860:     ff 85 c0 0f 85 34                  	inc dword ptr [ebp + 0x34850fc0]
0x866:     01 00                              	add dword ptr [eax], eax
0x868:     00 8b 94 24 cc 00                  	add byte ptr [ebx + 0xcc2494], cl
0x86e:     00 00                              	add byte ptr [eax], al
0x870:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x877:     89 f0                              	mov eax, esi
0x879:     0f 85 f8 00 00 00                  	jne 0x977 <function_977>
0x87f:     81 c4 dc 00 00 00                  	add esp, 0xdc
0x885:     5b                                 	pop ebx
0x886:     5e                                 	pop esi
0x887:     5f                                 	pop edi
0x888:     5d                                 	pop ebp
0x889:     c3                                 	ret 
; data inside code section at 0x88a -- 0x890
0x88a:     8d b6 00 00 00 00                                  |......          |
; function: function_890 at 0x890 -- 0x8af
0x890:     c7 44 24 0c 90 2f 00 00            	mov dword ptr [esp + 0xc], 0x2f90 ; "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x898:     c7 44 24 08 5a 00 00 00            	mov dword ptr [esp + 8], 0x5a
0x8a0:     c7 44 24 04 7b 14 00 00            	mov dword ptr [esp + 4], 0x147b ; "allocators.h"
0x8a8:     c7 04 24 88 14 00 00               	mov dword ptr [esp], 0x1488 ; "it != histogram.end()"
; data inside code section at 0x8af -- 0x8b0
0x8af:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x8b0 -- 0x8b1
; data inside code section at 0x8b1 -- 0x8b8
0x8b1:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_8b8 at 0x8b8 -- 0x8b9
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x8b9 -- 0x8c4
; data inside code section at 0x8c4 -- 0x8c5
0x8c4:     e8                                                 |.               |
; dynamically linked function: mlock at 0x8c5 -- 0x8c6
; data inside code section at 0x8c6 -- 0x8dd
0x8c6:     ff ff ff 89 5c 24 58 c7  44 24 5c 01 00 00 00 89   |....\$X.D$\.....|
0x8d6:     6c 24 08 c7 44 24 04                               |l$..D$.         |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x8dd -- 0x8f1
; data inside code section at 0x8f1 -- 0x8f8
0x8f1:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_8f8 at 0x8f8 -- 0x8f9
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x8f9 -- 0x904
; data inside code section at 0x904 -- 0x905
0x904:     e8                                                 |.               |
; dynamically linked function: mlock at 0x905 -- 0x906
; data inside code section at 0x906 -- 0x91d
0x906:     ff ff ff 89 5c 24 68 c7  44 24 6c 01 00 00 00 89   |....\$h.D$l.....|
0x916:     6c 24 08 c7 44 24 04                               |l$..D$.         |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x91d -- 0x931
; data inside code section at 0x931 -- 0x949
0x931:     8d 5c 24 60 89 44 24 64  c7 44 24 60 28 30 00 00   |.\$`.D$d.D$`(0..|
0x941:     89 1c 24 e8 17 14 00 00                            |..$.....        |
; function: function_949 at 0x949 -- 0x94a
; function: function_94a at 0x94a -- 0x94b
0x94a:     c3                                 	ret 
; data inside code section at 0x94b -- 0x94e
0x94b:     c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x94e -- 0x952
; data inside code section at 0x952 -- 0x953
0x952:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x953 -- 0x954
; data inside code section at 0x954 -- 0x95b
0x954:     ff ff ff 85 c0 75 42                               |.....uB         |
; function: function_95b at 0x95b -- 0x95c
; data inside code section at 0x95c -- 0x95f
0x95c:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x95f -- 0x960
; data inside code section at 0x960 -- 0x963
0x960:     ff ff ff                                           |...             |
; function: function_963 at 0x963 -- 0x965
0x963:     eb e4                              	jmp 0x949 <function_949>
; function: function_965 at 0x965 -- 0x966
; data inside code section at 0x966 -- 0x973
0x966:     c6 89 1c 24 e8 61 0c 00  00 89 34 24 e8            |...$.a....4$.   |
; dynamically linked function: _Unwind_Resume at 0x973 -- 0x974
; data inside code section at 0x974 -- 0x977
0x974:     ff ff ff                                           |...             |
; function: function_977 at 0x977 -- 0x978
; dynamically linked function: __stack_chk_fail at 0x978 -- 0x979
; data inside code section at 0x979 -- 0x97b
0x979:     ff ff                                              |..              |
; function: function_97b at 0x97b -- 0x9bc
0x97b:     ff 8d 9c 24 80 00                  	dec dword ptr [ebp + 0x80249c]
0x981:     00 00                              	add byte ptr [eax], al
0x983:     89 84 24 84 00 00 00               	mov dword ptr [esp + 0x84], eax
0x98a:     c7 84 24 80 00 00 00 28 30 00 00   	mov dword ptr [esp + 0x80], 0x3028
0x995:     89 1c 24                           	mov dword ptr [esp], ebx
0x998:     e8 c3 13 00 00                     	call 0x1d60 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x99d:     e8 f2 0b 00 00                     	call 0x1594 <_ZN5boost11unique_lockINS_5mutexEED2Ev.part.36>
0x9a2:     8d 5c 24 78                        	lea ebx, [esp + 0x78]
0x9a6:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x9aa:     c7 44 24 78 28 30 00 00            	mov dword ptr [esp + 0x78], 0x3028
0x9b2:     89 1c 24                           	mov dword ptr [esp], ebx
0x9b5:     e8 a6 13 00 00                     	call 0x1d60 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x9ba:     eb a9                              	jmp 0x965 <function_965>
; function: function_9bc at 0x9bc -- 0x9be
0x9bc:     eb a7                              	jmp 0x965 <function_965>
; data inside code section at 0x9be -- 0x9c3
0x9be:     8b 54 24 4c 89                                     |.T$L.           |
; function: function_9c3 at 0x9c3 -- 0x9c4
0x9c3:     c3                                 	ret 
; data inside code section at 0x9c4 -- 0x9cc
0x9c4:     85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x9cc -- 0x9cd
; data inside code section at 0x9cd -- 0x9cf
0x9cd:     ff ff                                              |..              |
; function: function_9cf at 0x9cf -- 0x9e4
0x9cf:     ff 8d 8c 24 8b 00                  	dec dword ptr [ebp + 0x8b248c]
0x9d5:     00 00                              	add byte ptr [eax], al
0x9d7:     89 0c 24                           	mov dword ptr [esp], ecx
0x9da:     e8 e1 14 00 00                     	call 0x1ec0 <_ZN8CCrypterD1Ev>
0x9df:     e9 77 ff ff ff                     	jmp 0x95b <function_95b>
; function: function_9e4 at 0x9e4 -- 0x9e8
0x9e4:     89 c3                              	mov ebx, eax
0x9e6:     eb e8                              	jmp 0x9d0
; data inside code section at 0x9e8 -- 0xa20
0x9e8:     8d 5c 24 70 89 44 24 74  c7 44 24 70 28 30 00 00   |.\$p.D$t.D$p(0..|
0x9f8:     89 1c 24 e8 60 13 00 00  c7 44 24 0c 70 2f 00 00   |..$.`....D$.p/..|
0xa08:     c7 44 24 08 3d 00 00 00  c7 44 24 04 68 15 00 00   |.D$.=....D$.h...|
0xa18:     c7 04 24 61 14 00 00 e8                            |..$a....        |
; dynamically linked function: __assert_fail at 0xa20 -- 0xa21
; data inside code section at 0xa21 -- 0xa24
0xa21:     ff ff ff                                           |...             |
; function: function_a24 at 0xa24 -- 0xa29
0xa24:     e9 3c ff ff ff                     	jmp 0x965 <function_965>
; data inside code section at 0xa29 -- 0xa30
0xa29:     90 8d b6 00 00 00 00                               |.......         |
; function: _ZN8CCrypter7DecryptERKSt6vectorIhSaIhEERS0_Ih16secure_allocatorIhEE at 0xa30 -- 0xadc
0xa30:     55                                 	push ebp
0xa31:     57                                 	push edi
0xa32:     56                                 	push esi
0xa33:     53                                 	push ebx
0xa34:     81 ec 0c 01 00 00                  	sub esp, 0x10c
0xa3a:     8b 9c 24 20 01 00 00               	mov ebx, dword ptr [esp + 0x120]
0xa41:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa47:     89 84 24 fc 00 00 00               	mov dword ptr [esp + 0xfc], eax
0xa4e:     31 c0                              	xor eax, eax
0xa50:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0xa54:     8b 9c 24 24 01 00 00               	mov ebx, dword ptr [esp + 0x124]
0xa5b:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0xa5f:     8b 9c 24 28 01 00 00               	mov ebx, dword ptr [esp + 0x128]
0xa66:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xa6a:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0xa6e:     80 7b 40 00                        	cmp byte ptr [ebx + 0x40], 0
0xa72:     75 24                              	jne 0xa98 <_ZN8CCrypter7DecryptERKSt6vectorIhSaIhEERS0_Ih16secure_allocatorIhEE+0x68>
0xa74:     8b 94 24 fc 00 00 00               	mov edx, dword ptr [esp + 0xfc]
0xa7b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa82:     0f 85 09 03 00 00                  	jne 0xd91 <function_d91>
0xa88:     81 c4 0c 01 00 00                  	add esp, 0x10c
0xa8e:     5b                                 	pop ebx
0xa8f:     5e                                 	pop esi
0xa90:     5f                                 	pop edi
0xa91:     5d                                 	pop ebp
0xa92:     c3                                 	ret 
; data inside code section at 0xa93 -- 0xa98
0xa93:     90 8d 74 26 00                                     |..t&.           |
0xa98:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xa9c:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xaa0:     c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0xaa8:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0xab0:     8b 5b 04                           	mov ebx, dword ptr [ebx + 4]
0xab3:     8b 00                              	mov eax, dword ptr [eax]
0xab5:     c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0xabd:     c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0xac5:     29 c3                              	sub ebx, eax
0xac7:     85 db                              	test ebx, ebx
0xac9:     89 df                              	mov edi, ebx
0xacb:     89 5c 24 28                        	mov dword ptr [esp + 0x28], ebx
0xacf:     89 5c 24 64                        	mov dword ptr [esp + 0x64], ebx
0xad3:     0f 84 43 02 00 00                  	je 0xd1c <function_d1c>
0xad9:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xadc -- 0xadd
0xadc:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xadd -- 0xade
; data inside code section at 0xade -- 0xaee
0xade:     ff ff ff 85 c0 89 c6 0f  84 91 00 00 00 c7 04 24   |...............$|
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xaee -- 0xaf2
; data inside code section at 0xaf2 -- 0xaf3
0xaf2:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xaf3 -- 0xaf4
; data inside code section at 0xaf4 -- 0xb06
0xaf4:     ff ff ff 85 c0 0f 85 de  02 00 00 8b 54 24 28 89   |............T$(.|
0xb04:     f3 a1                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb06 -- 0xb18
; function: function_b18 at 0xb18 -- 0xb19
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb19 -- 0xb25
; data inside code section at 0xb25 -- 0xb26
0xb25:     ba                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb26 -- 0xb45
; data inside code section at 0xb45 -- 0xb47
0xb45:     81 fa                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb47 -- 0xb5e
; function: function_b5e at 0xb5e -- 0xb5f
; data inside code section at 0xb5f -- 0xb60
0xb5f:     1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb60 -- 0xb68
; function: function_b68 at 0xb68 -- 0xb69
; data inside code section at 0xb69 -- 0xb6b
0xb69:     04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xb6b -- 0xb6f
; data inside code section at 0xb6f -- 0xb70
0xb6f:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0xb70 -- 0xb71
; data inside code section at 0xb71 -- 0xba3
0xb71:     ff ff ff 85 c0 0f 85 d7  01 00 00 8b 44 24 28 89   |............D$(.|
0xb81:     74 24 48 01 f0 89 44 24  50 8d b6 00 00 00 00 85   |t$H...D$P.......|
0xb91:     f6 74 03 c6 06 00 83 c6  01 83 ef 01 75 f1 8b 44   |.t..........u..D|
0xba1:     24 50                                              |$P              |
; function: function_ba3 at 0xba3 -- 0xbd0
0xba3:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xba7:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xbab:     8d 44 24 48                        	lea eax, [esp + 0x48]
0xbaf:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xbb3:     89 1c 24                           	mov dword ptr [esp], ebx
0xbb6:     e8 65 1c 00 00                     	call 0x2820 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_>
0xbbb:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0xbbf:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xbc3:     85 db                              	test ebx, ebx
0xbc5:     74 2a                              	je 0xbf1 <function_bf1>
0xbc7:     29 de                              	sub esi, ebx
0xbc9:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xbcd:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbd0 -- 0xbd1
0xbd0:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xbd1 -- 0xbd2
; data inside code section at 0xbd2 -- 0xbed
0xbd2:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24 00 00   |....t$..\$...$..|
0xbe2:     00 00 e8 97 16 00 00 89  1c 24 e8                  |.........$.     |
; dynamically linked function: _ZdlPv at 0xbed -- 0xbee
; data inside code section at 0xbee -- 0xbf1
0xbee:     ff ff ff                                           |...             |
; function: function_bf1 at 0xbf1 -- 0xbf8
0xbf1:     8d 5c 24 70                        	lea ebx, [esp + 0x70]
0xbf5:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbf8 -- 0xbf9
0xbf8:     e8                                                 |.               |
; dynamically linked function: EVP_CIPHER_CTX_init at 0xbf9 -- 0xbfa
; data inside code section at 0xbfa -- 0xbfe
0xbfa:     ff ff ff e8                                        |....            |
; dynamically linked function: EVP_aes_256_cbc at 0xbfe -- 0xbff
; data inside code section at 0xbff -- 0xc10
0xbff:     ff ff ff 8b 54 24 2c c7  44 24 08 00 00 00 00 89   |....T$,.D$......|
0xc0f:     1c                                                 |.               |
; function: function_c10 at 0xc10 -- 0xc15
0xc10:     24 83                              	and al, 0x83
0xc12:     c2 20 89                           	ret 0x8920
; data inside code section at 0xc15 -- 0xc25
0xc15:     54 24 10 8b 54 24 2c 89  44 24 04 89 54 24 0c e8   |T$..T$,.D$..T$..|
; dynamically linked function: EVP_DecryptInit_ex at 0xc25 -- 0xc26
; data inside code section at 0xc26 -- 0xc31
0xc26:     ff ff ff 85 c0 75 54 89  1c 24 e8                  |.....uT..$.     |
; dynamically linked function: EVP_CIPHER_CTX_cleanup at 0xc31 -- 0xc32
; data inside code section at 0xc32 -- 0xc35
0xc32:     ff ff ff                                           |...             |
; function: function_c35 at 0xc35 -- 0xc3c
0xc35:     31 c0                              	xor eax, eax
0xc37:     e9 38 fe ff ff                     	jmp 0xa74
; data inside code section at 0xc3c -- 0xc40
0xc3c:     8d 74 26 00                                        |.t&.            |
; function: function_c40 at 0xc40 -- 0xc41
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xc41 -- 0xc4c
; data inside code section at 0xc4c -- 0xc4d
0xc4c:     e8                                                 |.               |
; dynamically linked function: mlock at 0xc4d -- 0xc4e
; data inside code section at 0xc4e -- 0xc6d
0xc4e:     ff ff ff 8d 4c 24 54 8d  44 24 38 89 5c 24 54 c7   |....L$T.D$8.\$T.|
0xc5e:     44 24 58 01 00 00 00 89  4c 24 08 c7 44 24 04      |D$X.....L$..D$. |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xc6d -- 0xc81
; data inside code section at 0xc81 -- 0xca9
0xc81:     8b 4c 24 28 8b 54 24 34  89 4c 24 10 8b 4c 24 30   |.L$(.T$4.L$..L$0|
0xc91:     8b 02 89 44 24 0c 8d 44  24 64 89 44 24 08 8b 01   |...D$..D$d.D$...|
0xca1:     89 1c 24 89 44 24 04 e8                            |..$.D$..        |
; dynamically linked function: EVP_DecryptUpdate at 0xca9 -- 0xcaa
; data inside code section at 0xcaa -- 0xccf
0xcaa:     ff ff ff 85 c0 0f 84 78  ff ff ff 8b 54 24 30 8d   |.......x....T$0.|
0xcba:     44 24 68 89 44 24 08 8b  02 03 44 24 64 89 1c 24   |D$h.D$....D$d..$|
0xcca:     89 44 24 04 e8                                     |.D$..           |
; dynamically linked function: EVP_DecryptFinal_ex at 0xccf -- 0xcd0
; data inside code section at 0xcd0 -- 0xcd9
0xcd0:     ff ff ff 89 1c 24 89 c6  e8                        |.....$...       |
; dynamically linked function: EVP_CIPHER_CTX_cleanup at 0xcd9 -- 0xcda
; data inside code section at 0xcda -- 0xcdc
0xcda:     ff ff                                              |..              |
; function: function_cdc at 0xcdc -- 0xd1c
0xcdc:     ff 85 f6 0f 84 b1                  	inc dword ptr [ebp - 0x4e7bf00a]
0xce2:     00 00                              	add byte ptr [eax], al
0xce4:     00 8b 5c 24 30 8b                  	add byte ptr [ebx - 0x74cfdba4], cl
0xcea:     54                                 	push esp
0xceb:     24 64                              	and al, 0x64
0xced:     03 54 24 68                        	add edx, dword ptr [esp + 0x68]
0xcf1:     c6 44 24 6f 00                     	mov byte ptr [esp + 0x6f], 0
0xcf6:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xcf9:     8b 0b                              	mov ecx, dword ptr [ebx]
0xcfb:     89 c3                              	mov ebx, eax
0xcfd:     29 cb                              	sub ebx, ecx
0xcff:     39 da                              	cmp edx, ebx
0xd01:     77 28                              	ja 0xd2b <function_d2b>
0xd03:     b8 01 00 00 00                     	mov eax, 1
0xd08:     0f 83 66 fd ff ff                  	jae 0xa74
0xd0e:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xd12:     01 ca                              	add edx, ecx
0xd14:     89 53 04                           	mov dword ptr [ebx + 4], edx
0xd17:     e9 58 fd ff ff                     	jmp 0xa74
; function: function_d1c at 0xd1c -- 0xd2b
0xd1c:     c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0xd24:     31 c0                              	xor eax, eax
0xd26:     e9 78 fe ff ff                     	jmp 0xba3 <function_ba3>
; function: function_d2b at 0xd2b -- 0xd53
0xd2b:     29 da                              	sub edx, ebx
0xd2d:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xd31:     8d 4c 24 6f                        	lea ecx, [esp + 0x6f]
0xd35:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xd39:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xd3d:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xd41:     89 1c 24                           	mov dword ptr [esp], ebx
0xd44:     e8 c7 1d 00 00                     	call 0x2b10 <_ZNSt6vectorIh16secure_allocatorIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS2_EEjRKh>
0xd49:     b8 01 00 00 00                     	mov eax, 1
0xd4e:     e9 21 fd ff ff                     	jmp 0xa74
; data inside code section at 0xd53 -- 0xd73
0xd53:     c7 44 24 0c 70 2f 00 00  c7 44 24 08 3d 00 00 00   |.D$.p/...D$.=...|
0xd63:     c7 44 24 04 68 15 00 00  c7 04 24 61 14 00 00 e8   |.D$.h.....$a....|
; dynamically linked function: __assert_fail at 0xd73 -- 0xd74
; data inside code section at 0xd74 -- 0xd78
0xd74:     ff ff ff 89                                        |....            |
; function: function_d78 at 0xd78 -- 0xd79
0xd78:     c3                                 	ret 
; data inside code section at 0xd79 -- 0xd7c
0xd79:     c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xd7c -- 0xd8c
; data inside code section at 0xd8c -- 0xd8d
0xd8c:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xd8d -- 0xd8e
; data inside code section at 0xd8e -- 0xd91
0xd8e:     ff ff ff                                           |...             |
; function: function_d91 at 0xd91 -- 0xd92
; dynamically linked function: __stack_chk_fail at 0xd92 -- 0xd93
; data inside code section at 0xd93 -- 0xd96
0xd93:     ff ff ff                                           |...             |
; function: function_d96 at 0xd96 -- 0xd9d
0xd96:     31 c0                              	xor eax, eax
0xd98:     e9 d7 fc ff ff                     	jmp 0xa74
; data inside code section at 0xd9d -- 0xdb5
0xd9d:     8b 5c 24 48 89 c7 8b 74  24 50 85 db 74 2a 29 de   |.\$H...t$P..t*).|
0xdad:     89 74 24 04 89 1c 24 e8                            |.t$...$.        |
; dynamically linked function: OPENSSL_cleanse at 0xdb5 -- 0xdb6
; data inside code section at 0xdb6 -- 0xdd9
0xdb6:     ff ff ff 89 74 24 08 89  5c 24 04 c7 04 24 00 00   |....t$..\$...$..|
0xdc6:     00 00 e8 b3 14 00 00 89  1c 24 e8 fc ff ff ff 89   |.........$......|
0xdd6:     3c 24 e8                                           |<$.             |
; dynamically linked function: _Unwind_Resume at 0xdd9 -- 0xdda
; data inside code section at 0xdda -- 0xdf5
0xdda:     ff ff ff 8d 5c 24 5c 89  44 24 60 c7 44 24 5c 28   |....\$\.D$`.D$\(|
0xdea:     30 00 00 89 1c 24 e8 6b  0f 00 00                  |0....$.k...     |
; function: function_df5 at 0xdf5 -- 0xe07
0xdf5:     e8 9a 07 00 00                     	call 0x1594 <_ZN5boost11unique_lockINS_5mutexEED2Ev.part.36>
0xdfa:     89 c6                              	mov esi, eax
0xdfc:     89 1c 24                           	mov dword ptr [esp], ebx
0xdff:     e8 cc 07 00 00                     	call 0x15d0 <_ZN5boost10lock_errorD1Ev>
0xe04:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xe07 -- 0xe08
0xe07:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xe08 -- 0xe09
; data inside code section at 0xe09 -- 0xe10
0xe09:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: _Z13DecryptSecretRKSt6vectorIh16secure_allocatorIhEERKS_IhSaIhEERK7uint256RS2_ at 0xe10 -- 0xe65
0xe10:     55                                 	push ebp
0xe11:     57                                 	push edi
0xe12:     56                                 	push esi
0xe13:     53                                 	push ebx
0xe14:     81 ec dc 00 00 00                  	sub esp, 0xdc
0xe1a:     8b 84 24 f0 00 00 00               	mov eax, dword ptr [esp + 0xf0]
0xe21:     8b 94 24 f4 00 00 00               	mov edx, dword ptr [esp + 0xf4]
0xe28:     8b 8c 24 f8 00 00 00               	mov ecx, dword ptr [esp + 0xf8]
0xe2f:     c6 84 24 cb 00 00 00 00            	mov byte ptr [esp + 0xcb], 0
0xe37:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xe3b:     8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0xe42:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xe46:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0xe4a:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xe51:     89 94 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], edx
0xe58:     31 d2                              	xor edx, edx
0xe5a:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xe5e:     c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0xe65 -- 0xe66
0xe65:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xe66 -- 0xe67
; data inside code section at 0xe67 -- 0xe74
0xe67:     ff ff ff 85 c0 0f 85 af  04 00 00 8b 35            |............5   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xe74 -- 0xea0
; function: function_ea0 at 0xea0 -- 0xea1
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xea1 -- 0xead
; data inside code section at 0xead -- 0xeae
0xead:     ba                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0xeae -- 0xef0
; function: function_ef0 at 0xef0 -- 0xef7
0xef0:     c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0xef7 -- 0xef8
0xef7:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0xef8 -- 0xef9
; data inside code section at 0xef9 -- 0xf0c
0xef9:     ff ff ff 85 c0 0f 85 ec  04 00 00 c7 04 24 04 00   |.............$..|
0xf09:     00 00 e8                                           |...             |
; dynamically linked function: pthread_mutex_lock at 0xf0c -- 0xf0d
; data inside code section at 0xf0d -- 0xf0f
0xf0d:     ff ff                                              |..              |
; function: function_f0f at 0xf0f -- 0xf9f
0xf0f:     ff 85 c0 0f 85 c0                  	inc dword ptr [ebp - 0x3f7af040]
0xf15:     04 00                              	add al, 0
0xf17:     00 8b 35 20 00 00                  	add byte ptr [ebx + 0x2035], cl
0xf1d:     00 8d 94 24 ab 00                  	add byte ptr [ebp + 0xab2494], cl
0xf23:     00 00                              	add byte ptr [eax], al
0xf25:     8d 8c 24 ca 00 00 00               	lea ecx, [esp + 0xca]
0xf2c:     89 d3                              	mov ebx, edx
0xf2e:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xf32:     89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0xf36:     21 f3                              	and ebx, esi
0xf38:     21 ce                              	and esi, ecx
0xf3a:     39 f3                              	cmp ebx, esi
0xf3c:     77 5a                              	ja 0xf98 <function_f0f+0x89>
0xf3e:     8d 7c 24 38                        	lea edi, [esp + 0x38]
0xf42:     8d 6c 24 68                        	lea ebp, [esp + 0x68]
0xf46:     66 90                              	nop 
0xf48:     a1 2c 00 00 00                     	mov eax, dword ptr [0x2c]
0xf4d:     85 c0                              	test eax, eax
0xf4f:     0f 84 93 03 00 00                  	je 0x12e8 <function_12e8>
0xf55:     ba 28 00 00 00                     	mov edx, 0x28
0xf5a:     eb 0d                              	jmp 0xf69 <function_f0f+0x5a>
; data inside code section at 0xf5c -- 0xf60
0xf5c:     8d 74 26 00                                        |.t&.            |
0xf60:     89 c2                              	mov edx, eax
0xf62:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xf65:     85 c0                              	test eax, eax
0xf67:     74 0c                              	je 0xf75 <function_f0f+0x66>
0xf69:     39 58 10                           	cmp dword ptr [eax + 0x10], ebx
0xf6c:     73 f2                              	jae 0xf60 <function_f0f+0x51>
0xf6e:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xf71:     85 c0                              	test eax, eax
0xf73:     75 f4                              	jne 0xf69 <function_f0f+0x5a>
0xf75:     81 fa 28 00 00 00                  	cmp edx, 0x28
0xf7b:     0f 84 67 03 00 00                  	je 0x12e8 <function_12e8>
0xf81:     39 5a 10                           	cmp dword ptr [edx + 0x10], ebx
0xf84:     0f 87 5e 03 00 00                  	ja 0x12e8 <function_12e8>
0xf8a:     83 42 14 01                        	add dword ptr [edx + 0x14], 1
0xf8e:     03 1d 1c 00 00 00                  	add ebx, dword ptr [0x1c]
0xf94:     39 de                              	cmp esi, ebx
0xf96:     73 b0                              	jae 0xf48 <function_f0f+0x39>
0xf98:     c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0xf9f -- 0xfa0
0xf9f:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0xfa0 -- 0xfa1
; data inside code section at 0xfa1 -- 0xfcc
0xfa1:     ff ff ff 85 c0 0f 85 44  04 00 00 c7 44 24 4c 00   |.......D....D$L.|
0xfb1:     00 00 00 c7 44 24 50 00  00 00 00 c7 44 24 54 00   |....D$P.....D$T.|
0xfc1:     00 00 00 c7 04 24 20 00  00 00 e8                  |.....$ ....     |
; dynamically linked function: _Znwj at 0xfcc -- 0xfcd
; data inside code section at 0xfcd -- 0xfd4
0xfcd:     ff ff ff 8d 70 20 89                               |....p .         |
; function: function_fd4 at 0xfd4 -- 0xfd5
0xfd4:     c3                                 	ret 
; data inside code section at 0xfd5 -- 0xff1
0xfd5:     89 74 24 54 89 44 24 4c  c7 44 24 08 20 00 00 00   |.t$T.D$L.D$. ...|
0xfe5:     c7 44 24 04 00 00 00 00  89 04 24 e8               |.D$.......$.    |
; dynamically linked function: memset at 0xff1 -- 0xff2
; data inside code section at 0xff2 -- 0x107d
0xff2:     ff ff ff 8b 4c 24 28 8d  44 24 4c 89 74 24 50 31   |....L$(.D$L.t$P1|
0x1002:    f6 8b 11 89 13 8b 51 04  89 53 04 8b 51 08 89 53   |......Q..S..Q..S|
0x1012:    08 8b 51 0c 89 53 0c 8b  51 10 89 53 10 8b 51 14   |..Q..S..Q..S..Q.|
0x1022:    89 53 14 8b 51 18 89 53  18 8b 51 1c 89 53 1c 8d   |.S..Q..S..Q..S..|
0x1032:    94 24 8b 00 00 00 89 44  24 08 8b 44 24 2c 89 14   |.$.....D$..D$,..|
0x1042:    24 89 44 24 04 e8 b4 f0  ff ff 84 c0 74 21 8b 4c   |$.D$........t!.L|
0x1052:    24 34 8d 94 24 8b 00 00  00 8b 44 24 30 89 14 24   |$4..$.....D$0..$|
0x1062:    89 4c 24 08 89 44 24 04  e8 c1 f9 ff ff 89 c6 8b   |.L$..D$.........|
0x1072:    44 24 4c 85 c0 74 08 89  04 24 e8                  |D$L..t...$.     |
; dynamically linked function: _ZdlPv at 0x107d -- 0x107e
; data inside code section at 0x107e -- 0x1094
0x107e:    ff ff ff 8d 8c 24 8b 00  00 00 89 0c 24 c7 44 24   |.....$......$.D$|
0x108e:    04 20 00 00 00 e8                                  |. ....          |
; dynamically linked function: OPENSSL_cleanse at 0x1094 -- 0x1095
; data inside code section at 0x1095 -- 0x10ab
0x1095:    ff ff ff 8d 84 24 ab 00  00 00 89 04 24 c7 44 24   |.....$......$.D$|
0x10a5:    04 20 00 00 00 e8                                  |. ....          |
; dynamically linked function: OPENSSL_cleanse at 0x10ab -- 0x10ac
; data inside code section at 0x10ac -- 0x10b2
0x10ac:    ff ff ff c6 84 24                                  |.....$          |
; function: function_10b2 at 0x10b2 -- 0x10b3
0x10b2:    cb                                 	retf 
; data inside code section at 0x10b3 -- 0x10bf
0x10b3:    00 00 00 00 c7 04 24 04  00 00 00 e8               |......$.....    |
; dynamically linked function: pthread_mutex_lock at 0x10bf -- 0x10c0
; data inside code section at 0x10c0 -- 0x10c2
0x10c0:    ff ff                                              |..              |
; function: function_10c2 at 0x10c2 -- 0x10d8
0x10c2:    ff 85 c0 0f 85 c7                  	inc dword ptr [ebp - 0x387af040]
0x10c8:    02 00                              	add al, byte ptr [eax]
0x10ca:    00 8b 2d 20 00 00                  	add byte ptr [ebx + 0x202d], cl
0x10d0:    00 8b 5c 24 1c 21                  	add byte ptr [ebx + 0x211c245c], cl
0x10d6:    eb 23                              	jmp 0x10fb <function_10fb>
; data inside code section at 0x10d8 -- 0x10da
0x10d8:    6c 24                                              |l$              |
; function: function_10da at 0x10da -- 0x10de
0x10da:    24 39                              	and al, 0x39
0x10dc:    eb 0f                              	jmp 0x10ed
; data inside code section at 0x10de -- 0x10e8
0x10de:    87 92 00 00 00 90 8d 74  26 00                     |.......t&.      |
; function: function_10e8 at 0x10e8 -- 0x10fa
0x10e8:    a1 2c 00 00 00                     	mov eax, dword ptr [0x2c]
0x10ed:    85 c0                              	test eax, eax
0x10ef:    0f 84 8b 01 00 00                  	je 0x1280 <function_1280>
0x10f5:    bf 28 00 00 00                     	mov edi, 0x28
; data inside code section at 0x10fa -- 0x10fb
0x10fa:    eb                                                 |.               |
; function: function_10fb at 0x10fb -- 0x1143
0x10fb:    0d 8d 74 26 00                     	or eax, 0x26748d
0x1100:    89 c7                              	mov edi, eax
0x1102:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x1105:    85 c0                              	test eax, eax
0x1107:    74 0c                              	je 0x1115 <function_10fb+0x1a>
0x1109:    39 58 10                           	cmp dword ptr [eax + 0x10], ebx
0x110c:    73 f2                              	jae 0x1100 <function_10fb+0x5>
0x110e:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x1111:    85 c0                              	test eax, eax
0x1113:    75 f4                              	jne 0x1109 <function_10fb+0xe>
0x1115:    81 ff 28 00 00 00                  	cmp edi, 0x28
0x111b:    0f 84 5f 01 00 00                  	je 0x1280 <function_1280>
0x1121:    39 5f 10                           	cmp dword ptr [edi + 0x10], ebx
0x1124:    0f 87 56 01 00 00                  	ja 0x1280 <function_1280>
0x112a:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x112d:    83 e8 01                           	sub eax, 1
0x1130:    85 c0                              	test eax, eax
0x1132:    89 47 14                           	mov dword ptr [edi + 0x14], eax
0x1135:    75 30                              	jne 0x1167 <function_1167>
0x1137:    a1 1c 00 00 00                     	mov eax, dword ptr [0x1c]
0x113c:    89 1c 24                           	mov dword ptr [esp], ebx
0x113f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1143 -- 0x1144
0x1143:    e8                                                 |.               |
; dynamically linked function: munlock at 0x1144 -- 0x1145
; data inside code section at 0x1145 -- 0x1154
0x1145:    ff ff ff c7 44 24 04 28  00 00 00 89 3c 24 e8      |....D$.(....<$. |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x1154 -- 0x1155
; data inside code section at 0x1155 -- 0x115c
0x1155:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x115c -- 0x115d
; data inside code section at 0x115d -- 0x1167
0x115d:    ff ff ff 83 2d 38 00 00  00 01                     |....-8....      |
; function: function_1167 at 0x1167 -- 0x117c
0x1167:    03 1d 1c 00 00 00                  	add ebx, dword ptr [0x1c]
0x116d:    39 dd                              	cmp ebp, ebx
0x116f:    0f 83 73 ff ff ff                  	jae 0x10e8 <function_10e8>
0x1175:    c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0x117c -- 0x117d
0x117c:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x117d -- 0x117e
; data inside code section at 0x117e -- 0x1191
0x117e:    ff ff ff 85 c0 0f 85 04  02 00 00 c7 04 24 04 00   |.............$..|
0x118e:    00 00 e8                                           |...             |
; dynamically linked function: pthread_mutex_lock at 0x1191 -- 0x1192
; data inside code section at 0x1192 -- 0x1194
0x1192:    ff ff                                              |..              |
; function: function_1194 at 0x1194 -- 0x11aa
0x1194:    ff 85 c0 0f 85 cf                  	inc dword ptr [ebp - 0x307af040]
0x119a:    01 00                              	add dword ptr [eax], eax
0x119c:    00 8b 2d 20 00 00                  	add byte ptr [ebx + 0x202d], cl
0x11a2:    00 8b 5c 24 18 21                  	add byte ptr [ebx + 0x2118245c], cl
0x11a8:    eb 23                              	jmp 0x11cd <function_11cd>
; function: function_11aa at 0x11aa -- 0x11cc
0x11aa:    6c                                 	insb byte ptr es:[edi], dx
0x11ab:    24 20                              	and al, 0x20
0x11ad:    39 eb                              	cmp ebx, ebp
0x11af:    0f 87 90 00 00 00                  	ja 0x1245 <function_1245>
0x11b5:    8d 76 00                           	lea esi, [esi]
0x11b8:    a1 2c 00 00 00                     	mov eax, dword ptr [0x2c]
0x11bd:    85 c0                              	test eax, eax
0x11bf:    0f 84 bb 00 00 00                  	je 0x1280 <function_1280>
0x11c5:    bf 28 00 00 00                     	mov edi, 0x28
0x11ca:    eb 0d                              	jmp 0x11d9
; data inside code section at 0x11cc -- 0x11cd
0x11cc:    8d                                                 |.               |
; function: function_11cd at 0x11cd -- 0x1213
0x11cd:    74 26                              	je 0x11f5 <function_11cd+0x28>
0x11cf:    00 89 c7 8b 40 08                  	add byte ptr [ecx + 0x8408bc7], cl
0x11d5:    85 c0                              	test eax, eax
0x11d7:    74 0c                              	je 0x11e5 <function_11cd+0x18>
0x11d9:    3b 58 10                           	cmp ebx, dword ptr [eax + 0x10]
0x11dc:    76 f2                              	jbe 0x11d0
0x11de:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x11e1:    85 c0                              	test eax, eax
0x11e3:    75 f4                              	jne 0x11d9 <function_11cd+0xc>
0x11e5:    81 ff 28 00 00 00                  	cmp edi, 0x28
0x11eb:    0f 84 8f 00 00 00                  	je 0x1280 <function_1280>
0x11f1:    3b 5f 10                           	cmp ebx, dword ptr [edi + 0x10]
; data inside code section at 0x11f4 -- 0x11f5
0x11f4:    0f                                                 |.               |
0x11f5:    82 86 00 00 00 8b 47               	add byte ptr [esi - 0x75000000], 0x47
0x11fc:    14 83                              	adc al, 0x83
0x11fe:    e8 01 85 c0 89                     	call 0x89c09704 <unknown_89c09704>
0x1203:    47                                 	inc edi
0x1204:    14 75                              	adc al, 0x75
0x1206:    30 a1 1c 00 00 00                  	xor byte ptr [ecx + 0x1c], ah
0x120c:    89 1c 24                           	mov dword ptr [esp], ebx
0x120f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1213 -- 0x1214
0x1213:    e8                                                 |.               |
; dynamically linked function: munlock at 0x1214 -- 0x1215
; data inside code section at 0x1215 -- 0x1224
0x1215:    ff ff ff c7 44 24 04 28  00 00 00 89 3c 24 e8      |....D$.(....<$. |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x1224 -- 0x1225
; data inside code section at 0x1225 -- 0x122c
0x1225:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x122c -- 0x122d
; data inside code section at 0x122d -- 0x1245
0x122d:    ff ff ff 83 2d 38 00 00  00 01 03 1d 1c 00 00 00   |....-8..........|
0x123d:    39 dd 0f 83 73 ff ff ff                            |9...s...        |
; function: function_1245 at 0x1245 -- 0x124c
0x1245:    c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0x124c -- 0x124d
0x124c:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x124d -- 0x124e
; data inside code section at 0x124e -- 0x1250
0x124e:    ff ff                                              |..              |
; function: function_1250 at 0x1250 -- 0x127a
0x1250:    ff 85 c0 0f 85 34                  	inc dword ptr [ebp + 0x34850fc0]
0x1256:    01 00                              	add dword ptr [eax], eax
0x1258:    00 8b 94 24 cc 00                  	add byte ptr [ebx + 0xcc2494], cl
0x125e:    00 00                              	add byte ptr [eax], al
0x1260:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1267:    89 f0                              	mov eax, esi
0x1269:    0f 85 f8 00 00 00                  	jne 0x1367 <function_1367>
0x126f:    81 c4 dc 00 00 00                  	add esp, 0xdc
0x1275:    5b                                 	pop ebx
0x1276:    5e                                 	pop esi
0x1277:    5f                                 	pop edi
0x1278:    5d                                 	pop ebp
0x1279:    c3                                 	ret 
; data inside code section at 0x127a -- 0x1280
0x127a:    8d b6 00 00 00 00                                  |......          |
; function: function_1280 at 0x1280 -- 0x129f
0x1280:    c7 44 24 0c 90 2f 00 00            	mov dword ptr [esp + 0xc], 0x2f90 ; "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x1288:    c7 44 24 08 5a 00 00 00            	mov dword ptr [esp + 8], 0x5a
0x1290:    c7 44 24 04 7b 14 00 00            	mov dword ptr [esp + 4], 0x147b ; "allocators.h"
0x1298:    c7 04 24 88 14 00 00               	mov dword ptr [esp], 0x1488 ; "it != histogram.end()"
; data inside code section at 0x129f -- 0x12a0
0x129f:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x12a0 -- 0x12a1
; data inside code section at 0x12a1 -- 0x12a8
0x12a1:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_12a8 at 0x12a8 -- 0x12b4
0x12a8:    a1 1c 00 00 00                     	mov eax, dword ptr [0x1c]
0x12ad:    89 1c 24                           	mov dword ptr [esp], ebx
0x12b0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x12b4 -- 0x12b5
0x12b4:    e8                                                 |.               |
; dynamically linked function: mlock at 0x12b5 -- 0x12b6
; data inside code section at 0x12b6 -- 0x12b8
0x12b6:    ff ff                                              |..              |
; function: function_12b8 at 0x12b8 -- 0x12e1
0x12b8:    ff 89 5c 24 58 c7                  	dec dword ptr [ecx - 0x38a7dba4]
0x12be:    44                                 	inc esp
0x12bf:    24 5c                              	and al, 0x5c
0x12c1:    01 00                              	add dword ptr [eax], eax
0x12c3:    00 00                              	add byte ptr [eax], al
0x12c5:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x12c9:    c7 44 24 04 24 00 00 00            	mov dword ptr [esp + 4], 0x24
0x12d1:    89 3c 24                           	mov dword ptr [esp], edi
0x12d4:    e8 57 14 00 00                     	call 0x2730 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_>
0x12d9:    83 ec 04                           	sub esp, 4
0x12dc:    e9 05 fc ff ff                     	jmp 0xee6
; data inside code section at 0x12e1 -- 0x12e8
0x12e1:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_12e8 at 0x12e8 -- 0x12f4
0x12e8:    a1 1c 00 00 00                     	mov eax, dword ptr [0x1c]
0x12ed:    89 1c 24                           	mov dword ptr [esp], ebx
0x12f0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x12f4 -- 0x12f5
0x12f4:    e8                                                 |.               |
; dynamically linked function: mlock at 0x12f5 -- 0x12f6
; data inside code section at 0x12f6 -- 0x12f8
0x12f6:    ff ff                                              |..              |
; function: function_12f8 at 0x12f8 -- 0x1321
0x12f8:    ff 89 5c 24 68 c7                  	dec dword ptr [ecx - 0x3897dba4]
0x12fe:    44                                 	inc esp
0x12ff:    24 6c                              	and al, 0x6c
0x1301:    01 00                              	add dword ptr [eax], eax
0x1303:    00 00                              	add byte ptr [eax], al
0x1305:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1309:    c7 44 24 04 24 00 00 00            	mov dword ptr [esp + 4], 0x24
0x1311:    89 3c 24                           	mov dword ptr [esp], edi
0x1314:    e8 17 14 00 00                     	call 0x2730 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_>
0x1319:    83 ec 04                           	sub esp, 4
0x131c:    e9 6d fc ff ff                     	jmp 0xf8e
; data inside code section at 0x1321 -- 0x1339
0x1321:    8d 5c 24 60 89 44 24 64  c7 44 24 60 28 30 00 00   |.\$`.D$d.D$`(0..|
0x1331:    89 1c 24 e8 27 0a 00 00                            |..$.'...        |
; function: function_1339 at 0x1339 -- 0x133a
; function: function_133a at 0x133a -- 0x133b
0x133a:    c3                                 	ret 
; data inside code section at 0x133b -- 0x1343
0x133b:    c7 04 24 04 00 00 00 e8                            |..$.....        |
; dynamically linked function: pthread_mutex_unlock at 0x1343 -- 0x1344
; data inside code section at 0x1344 -- 0x134b
0x1344:    ff ff ff 85 c0 75 42                               |.....uB         |
; function: function_134b at 0x134b -- 0x134c
; data inside code section at 0x134c -- 0x134f
0x134c:    1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x134f -- 0x1350
; data inside code section at 0x1350 -- 0x1353
0x1350:    ff ff ff                                           |...             |
; function: function_1353 at 0x1353 -- 0x1355
0x1353:    eb e4                              	jmp 0x1339 <function_1339>
; function: function_1355 at 0x1355 -- 0x1356
; data inside code section at 0x1356 -- 0x1363
0x1356:    c6 89 1c 24 e8 71 02 00  00 89 34 24 e8            |...$.q....4$.   |
; dynamically linked function: _Unwind_Resume at 0x1363 -- 0x1364
; data inside code section at 0x1364 -- 0x1367
0x1364:    ff ff ff                                           |...             |
; function: function_1367 at 0x1367 -- 0x1368
; dynamically linked function: __stack_chk_fail at 0x1368 -- 0x1369
; data inside code section at 0x1369 -- 0x136b
0x1369:    ff ff                                              |..              |
; function: function_136b at 0x136b -- 0x13ac
0x136b:    ff 8d 9c 24 80 00                  	dec dword ptr [ebp + 0x80249c]
0x1371:    00 00                              	add byte ptr [eax], al
0x1373:    89 84 24 84 00 00 00               	mov dword ptr [esp + 0x84], eax
0x137a:    c7 84 24 80 00 00 00 28 30 00 00   	mov dword ptr [esp + 0x80], 0x3028
0x1385:    89 1c 24                           	mov dword ptr [esp], ebx
0x1388:    e8 d3 09 00 00                     	call 0x1d60 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x138d:    e8 02 02 00 00                     	call 0x1594 <_ZN5boost11unique_lockINS_5mutexEED2Ev.part.36>
0x1392:    8d 5c 24 78                        	lea ebx, [esp + 0x78]
0x1396:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x139a:    c7 44 24 78 28 30 00 00            	mov dword ptr [esp + 0x78], 0x3028
0x13a2:    89 1c 24                           	mov dword ptr [esp], ebx
0x13a5:    e8 b6 09 00 00                     	call 0x1d60 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x13aa:    eb a9                              	jmp 0x1355 <function_1355>
; function: function_13ac at 0x13ac -- 0x13ae
0x13ac:    eb a7                              	jmp 0x1355 <function_1355>
; data inside code section at 0x13ae -- 0x13b3
0x13ae:    8b 54 24 4c 89                                     |.T$L.           |
; function: function_13b3 at 0x13b3 -- 0x13b4
0x13b3:    c3                                 	ret 
; data inside code section at 0x13b4 -- 0x13bc
0x13b4:    85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x13bc -- 0x13bd
; data inside code section at 0x13bd -- 0x13bf
0x13bd:    ff ff                                              |..              |
; function: function_13bf at 0x13bf -- 0x13d4
0x13bf:    ff 8d 8c 24 8b 00                  	dec dword ptr [ebp + 0x8b248c]
0x13c5:    00 00                              	add byte ptr [eax], al
0x13c7:    89 0c 24                           	mov dword ptr [esp], ecx
0x13ca:    e8 f1 0a 00 00                     	call 0x1ec0 <_ZN8CCrypterD1Ev>
0x13cf:    e9 77 ff ff ff                     	jmp 0x134b <function_134b>
; function: function_13d4 at 0x13d4 -- 0x13d8
0x13d4:    89 c3                              	mov ebx, eax
0x13d6:    eb e8                              	jmp 0x13c0
; data inside code section at 0x13d8 -- 0x1410
0x13d8:    8d 5c 24 70 89 44 24 74  c7 44 24 70 28 30 00 00   |.\$p.D$t.D$p(0..|
0x13e8:    89 1c 24 e8 70 09 00 00  c7 44 24 0c 70 2f 00 00   |..$.p....D$.p/..|
0x13f8:    c7 44 24 08 3d 00 00 00  c7 44 24 04 68 15 00 00   |.D$.=....D$.h...|
0x1408:    c7 04 24 61 14 00 00 e8                            |..$a....        |
; dynamically linked function: __assert_fail at 0x1410 -- 0x1411
; data inside code section at 0x1411 -- 0x1414
0x1411:    ff ff ff                                           |...             |
; function: function_1414 at 0x1414 -- 0x1419
0x1414:    e9 3c ff ff ff                     	jmp 0x1355 <function_1355>
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x1420 -- 0x144a
0x1420:    83 ec 1c                           	sub esp, 0x1c
0x1423:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1429:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x142d:    31 c0                              	xor eax, eax
0x142f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1433:    c7 00 80 30 00 00                  	mov dword ptr [eax], 0x3080
0x1439:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x143d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1444:    75 04                              	jne 0x144a <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0x1446:    83 c4 1c                           	add esp, 0x1c
0x1449:    c3                                 	ret 
; data inside code section at 0x144a -- 0x144b
0x144a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x144b -- 0x144c
; data inside code section at 0x144c -- 0x144f
0x144c:    ff ff ff                                           |...             |
; section: .text._ZNK5boost10lock_error4whatEv
; function: _ZNK5boost10lock_error4whatEv at 0x14c0 -- 0x14e5
0x14c0:    83 ec 1c                           	sub esp, 0x1c
0x14c3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14c9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x14cd:    31 c0                              	xor eax, eax
0x14cf:    b8 4f 14 00 00                     	mov eax, 0x144f ; "boost::lock_error"
0x14d4:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x14d8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x14df:    75 04                              	jne 0x14e5 <_ZNK5boost10lock_error4whatEv+0x24>
0x14e1:    83 c4 1c                           	add esp, 0x1c
0x14e4:    c3                                 	ret 
; data inside code section at 0x14e5 -- 0x14e6
0x14e5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14e6 -- 0x14e7
; data inside code section at 0x14e7 -- 0x14ea
0x14e7:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x14f0 -- 0x151e
0x14f0:    83 ec 1c                           	sub esp, 0x1c
0x14f3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x14fa:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x14fe:    31 d2                              	xor edx, edx
0x1500:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1504:    c7 00 80 30 00 00                  	mov dword ptr [eax], 0x3080
0x150a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x150e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1515:    75 0c                              	jne 0x1523 <function_1523>
0x1517:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x151b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x151e -- 0x151f
0x151e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x151f -- 0x1520
; data inside code section at 0x1520 -- 0x1523
0x1520:    ff ff ff                                           |...             |
; function: function_1523 at 0x1523 -- 0x1524
; dynamically linked function: __stack_chk_fail at 0x1524 -- 0x1525
; data inside code section at 0x1525 -- 0x1528
0x1525:    ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD2Ev
; function: _ZN5boost16thread_exceptionD1Ev at 0x1530 -- 0x155e
0x1530:    83 ec 1c                           	sub esp, 0x1c
0x1533:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x153a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x153e:    31 d2                              	xor edx, edx
0x1540:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1544:    c7 00 10 30 00 00                  	mov dword ptr [eax], 0x3010
0x154a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x154e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1555:    75 0c                              	jne 0x1563 <function_1563>
0x1557:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x155b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x155e -- 0x155f
0x155e:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x155f -- 0x1560
; data inside code section at 0x1560 -- 0x1563
0x1560:    ff ff ff                                           |...             |
; function: function_1563 at 0x1563 -- 0x1564
; dynamically linked function: __stack_chk_fail at 0x1564 -- 0x1565
; data inside code section at 0x1565 -- 0x1568
0x1565:    ff ff ff                                           |...             |
; section: .text.unlikely
; function: _ZN5boost11unique_lockINS_5mutexEED2Ev.part.36 at 0x1594 -- 0x15c2
0x1594:    83 ec 2c                           	sub esp, 0x2c
0x1597:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x159d:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x15a1:    31 c0                              	xor eax, eax
0x15a3:    c7 44 24 0c 70 2f 00 00            	mov dword ptr [esp + 0xc], 0x2f70 ; "void boost::mutex::unlock()"
0x15ab:    c7 44 24 08 3d 00 00 00            	mov dword ptr [esp + 8], 0x3d
0x15b3:    c7 44 24 04 68 15 00 00            	mov dword ptr [esp + 4], 0x1568 ; "/usr/include/boost/thread/pthread/mutex.hpp"
0x15bb:    c7 04 24 61 14 00 00               	mov dword ptr [esp], 0x1461 ; "!pthread_mutex_unlock(&m)"
; data inside code section at 0x15c2 -- 0x15c3
0x15c2:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x15c3 -- 0x15c4
; data inside code section at 0x15c4 -- 0x15c7
0x15c4:    ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD2Ev
; function: _ZN5boost10lock_errorD1Ev at 0x15d0 -- 0x15fe
0x15d0:    83 ec 1c                           	sub esp, 0x1c
0x15d3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x15da:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x15de:    31 d2                              	xor edx, edx
0x15e0:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x15e4:    c7 00 10 30 00 00                  	mov dword ptr [eax], 0x3010
0x15ea:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x15ee:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x15f5:    75 0c                              	jne 0x1603 <function_1603>
0x15f7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x15fb:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x15fe -- 0x15ff
0x15fe:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x15ff -- 0x1600
; data inside code section at 0x1600 -- 0x1603
0x1600:    ff ff ff                                           |...             |
; function: function_1603 at 0x1603 -- 0x1604
; dynamically linked function: __stack_chk_fail at 0x1604 -- 0x1605
; data inside code section at 0x1605 -- 0x1608
0x1605:    ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD0Ev
; function: _ZN5boost16thread_exceptionD0Ev at 0x1610 -- 0x162d
0x1610:    53                                 	push ebx
0x1611:    83 ec 28                           	sub esp, 0x28
0x1614:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1618:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x161e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1622:    31 c0                              	xor eax, eax
0x1624:    c7 03 10 30 00 00                  	mov dword ptr [ebx], 0x3010
0x162a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x162d -- 0x162e
0x162d:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x162e -- 0x162f
; data inside code section at 0x162f -- 0x1648
0x162f:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x163f:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x1648 -- 0x1649
; data inside code section at 0x1649 -- 0x164d
0x1649:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x164d -- 0x164e
; data inside code section at 0x164e -- 0x1651
0x164e:    ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD0Ev
; function: _ZN5boost10lock_errorD0Ev at 0x1660 -- 0x167d
0x1660:    53                                 	push ebx
0x1661:    83 ec 28                           	sub esp, 0x28
0x1664:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1668:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x166e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1672:    31 c0                              	xor eax, eax
0x1674:    c7 03 10 30 00 00                  	mov dword ptr [ebx], 0x3010
0x167a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x167d -- 0x167e
0x167d:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x167e -- 0x167f
; data inside code section at 0x167f -- 0x1698
0x167f:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x168f:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x1698 -- 0x1699
; data inside code section at 0x1699 -- 0x169d
0x1699:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x169d -- 0x169e
; data inside code section at 0x169e -- 0x16a1
0x169e:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x16b0 -- 0x16b7
0x16b0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x16b5:    eb 09                              	jmp 0x16c0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv>
; data inside code section at 0x16b7 -- 0x16c0
0x16b7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x16c0 -- 0x16dc
0x16c0:    56                                 	push esi
0x16c1:    53                                 	push ebx
0x16c2:    83 ec 24                           	sub esp, 0x24
0x16c5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x16c9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16cf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16d3:    31 c0                              	xor eax, eax
0x16d5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x16dc -- 0x16dd
0x16dc:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x16dd -- 0x16de
; data inside code section at 0x16de -- 0x16e0
0x16de:    ff ff                                              |..              |
; function: function_16e0 at 0x16e0 -- 0x1744
0x16e0:    ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0x16e6:    c7 03 28 30 00 00                  	mov dword ptr [ebx], 0x3028
0x16ec:    c7 43 08 40 30 00 00               	mov dword ptr [ebx + 8], 0x3040
0x16f3:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x16f6:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x16f9:    85 c0                              	test eax, eax
0x16fb:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x16fe:    74 08                              	je 0x1708 <function_16e0+0x28>
0x1700:    8b 10                              	mov edx, dword ptr [eax]
0x1702:    89 04 24                           	mov dword ptr [esp], eax
0x1705:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x1708:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x170b:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x170f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1716:    c7 43 08 b4 30 00 00               	mov dword ptr [ebx + 8], 0x30b4
0x171d:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1720:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x1723:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x1726:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x1729:    c7 03 98 30 00 00                  	mov dword ptr [ebx], 0x3098
0x172f:    c7 43 1c c4 30 00 00               	mov dword ptr [ebx + 0x1c], 0x30c4
0x1736:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1739:    8d 43 1c                           	lea eax, [ebx + 0x1c]
0x173c:    75 06                              	jne 0x1744 <function_16e0+0x63>
0x173e:    83 c4 24                           	add esp, 0x24
0x1741:    5b                                 	pop ebx
0x1742:    5e                                 	pop esi
0x1743:    c3                                 	ret 
; data inside code section at 0x1744 -- 0x1745
0x1744:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1745 -- 0x1746
; data inside code section at 0x1746 -- 0x1757
0x1746:    ff ff ff 89 c6 89 1c 24  e8 2d 15 00 00 89 1c 24   |.......$.-.....$|
0x1756:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1757 -- 0x1758
; data inside code section at 0x1758 -- 0x175f
0x1758:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x175f -- 0x1760
; data inside code section at 0x1760 -- 0x1763
0x1760:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x1930 -- 0x193a
0x1930:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x1935:    e9 36 19 00 00                     	jmp 0x3270 <_ZTSN5boost16exception_detail10clone_baseE>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x1940 -- 0x198f
0x1940:    53                                 	push ebx
0x1941:    83 ec 28                           	sub esp, 0x28
0x1944:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1948:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x194e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1952:    31 c0                              	xor eax, eax
0x1954:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1957:    c7 03 58 30 00 00                  	mov dword ptr [ebx], 0x3058
0x195d:    c7 43 08 40 30 00 00               	mov dword ptr [ebx + 8], 0x3040
0x1964:    85 c0                              	test eax, eax
0x1966:    74 0c                              	je 0x1974 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev+0x34>
0x1968:    8b 10                              	mov edx, dword ptr [eax]
0x196a:    89 04 24                           	mov dword ptr [esp], eax
0x196d:    ff 52 10                           	call dword ptr [edx + 0x10]
0x1970:    84 c0                              	test al, al
0x1972:    75 24                              	jne 0x1998 <function_1998>
0x1974:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1978:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x197f:    c7 03 10 30 00 00                  	mov dword ptr [ebx], 0x3010
0x1985:    75 1a                              	jne 0x19a1 <function_19a1>
0x1987:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x198b:    83 c4 28                           	add esp, 0x28
0x198e:    5b                                 	pop ebx
; data inside code section at 0x198f -- 0x1990
0x198f:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1990 -- 0x1991
; data inside code section at 0x1991 -- 0x1998
0x1991:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_1998 at 0x1998 -- 0x19a1
0x1998:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x199f:    eb d3                              	jmp 0x1974
; function: function_19a1 at 0x19a1 -- 0x19a2
; dynamically linked function: __stack_chk_fail at 0x19a2 -- 0x19a3
; data inside code section at 0x19a3 -- 0x19a7
0x19a3:    ff ff ff 83                                        |....            |
; function: function_19a7 at 0x19a7 -- 0x19aa
0x19a7:    c2 01 89                           	ret 0x8901
; data inside code section at 0x19aa -- 0x19af
0x19aa:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x19af -- 0x19b0
; data inside code section at 0x19b0 -- 0x19b4
0x19b0:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x19b4 -- 0x19b5
; data inside code section at 0x19b5 -- 0x19b8
0x19b5:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x19c0 -- 0x19c7
0x19c0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x19c5:    eb 09                              	jmp 0x19d0 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev>
; data inside code section at 0x19c7 -- 0x19d0
0x19c7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x19d0 -- 0x1a0d
0x19d0:    53                                 	push ebx
0x19d1:    83 ec 28                           	sub esp, 0x28
0x19d4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x19d8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19de:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x19e2:    31 c0                              	xor eax, eax
0x19e4:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x19e7:    c7 03 58 30 00 00                  	mov dword ptr [ebx], 0x3058
0x19ed:    c7 43 08 40 30 00 00               	mov dword ptr [ebx + 8], 0x3040
0x19f4:    85 c0                              	test eax, eax
0x19f6:    74 0c                              	je 0x1a04 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev+0x34>
0x19f8:    8b 10                              	mov edx, dword ptr [eax]
0x19fa:    89 04 24                           	mov dword ptr [esp], eax
0x19fd:    ff 52 10                           	call dword ptr [edx + 0x10]
0x1a00:    84 c0                              	test al, al
0x1a02:    75 2c                              	jne 0x1a30 <function_1a30>
0x1a04:    c7 03 10 30 00 00                  	mov dword ptr [ebx], 0x3010
0x1a0a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a0d -- 0x1a0e
0x1a0d:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1a0e -- 0x1a0f
; data inside code section at 0x1a0f -- 0x1a28
0x1a0f:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 1a   |....D$.e3.....u.|
0x1a1f:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x1a28 -- 0x1a29
; data inside code section at 0x1a29 -- 0x1a30
0x1a29:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_1a30 at 0x1a30 -- 0x1a39
0x1a30:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x1a37:    eb cb                              	jmp 0x1a04
; data inside code section at 0x1a39 -- 0x1a3a
0x1a39:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a3a -- 0x1a3b
; data inside code section at 0x1a3b -- 0x1a3f
0x1a3b:    ff ff ff 83                                        |....            |
; function: function_1a3f at 0x1a3f -- 0x1a42
0x1a3f:    c2 01 89                           	ret 0x8901
; data inside code section at 0x1a42 -- 0x1a47
0x1a42:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x1a47 -- 0x1a48
; data inside code section at 0x1a48 -- 0x1a4c
0x1a48:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x1a4c -- 0x1a4d
; data inside code section at 0x1a4d -- 0x1a50
0x1a4d:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x1a50 -- 0x1a5a
0x1a50:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x1a55:    e9 66 1a 00 00                     	jmp 0x34c0 <function_34c0>
; data inside code section at 0x1a5a -- 0x1a60
0x1a5a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x1a60 -- 0x1a6a
0x1a60:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x1a65:    e9 56 1a 00 00                     	jmp 0x34c0 <function_34c0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x1a70 -- 0x1ac6
0x1a70:    53                                 	push ebx
0x1a71:    83 ec 28                           	sub esp, 0x28
0x1a74:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1a78:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a7e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1a82:    31 c0                              	xor eax, eax
0x1a84:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1a87:    c7 43 1c 80 30 00 00               	mov dword ptr [ebx + 0x1c], 0x3080
0x1a8e:    c7 03 58 30 00 00                  	mov dword ptr [ebx], 0x3058
0x1a94:    c7 43 08 40 30 00 00               	mov dword ptr [ebx + 8], 0x3040
0x1a9b:    85 c0                              	test eax, eax
0x1a9d:    74 0c                              	je 0x1aab <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev+0x3b>
0x1a9f:    8b 10                              	mov edx, dword ptr [eax]
0x1aa1:    89 04 24                           	mov dword ptr [esp], eax
0x1aa4:    ff 52 10                           	call dword ptr [edx + 0x10]
0x1aa7:    84 c0                              	test al, al
0x1aa9:    75 25                              	jne 0x1ad0 <function_1ad0>
0x1aab:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1aaf:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ab6:    c7 03 10 30 00 00                  	mov dword ptr [ebx], 0x3010
0x1abc:    75 1b                              	jne 0x1ad9 <function_1ad9>
0x1abe:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1ac2:    83 c4 28                           	add esp, 0x28
0x1ac5:    5b                                 	pop ebx
; data inside code section at 0x1ac6 -- 0x1ac7
0x1ac6:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1ac7 -- 0x1ac8
; data inside code section at 0x1ac8 -- 0x1ad0
0x1ac8:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_1ad0 at 0x1ad0 -- 0x1ad9
0x1ad0:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x1ad7:    eb d2                              	jmp 0x1aab
; function: function_1ad9 at 0x1ad9 -- 0x1ada
; dynamically linked function: __stack_chk_fail at 0x1ada -- 0x1adb
; data inside code section at 0x1adb -- 0x1adf
0x1adb:    ff ff ff 83                                        |....            |
; function: function_1adf at 0x1adf -- 0x1ae2
0x1adf:    c2 01 89                           	ret 0x8901
; data inside code section at 0x1ae2 -- 0x1ae7
0x1ae2:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x1ae7 -- 0x1ae8
; data inside code section at 0x1ae8 -- 0x1aec
0x1ae8:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x1aec -- 0x1aed
; data inside code section at 0x1aed -- 0x1af0
0x1aed:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x1af0 -- 0x1af7
0x1af0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x1af5:    eb 19                              	jmp 0x1b10 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x1af7 -- 0x1b00
0x1af7:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x1b00 -- 0x1b07
0x1b00:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x1b05:    eb 09                              	jmp 0x1b10 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x1b07 -- 0x1b10
0x1b07:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x1b10 -- 0x1b54
0x1b10:    53                                 	push ebx
0x1b11:    83 ec 28                           	sub esp, 0x28
0x1b14:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1b18:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1b1e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1b22:    31 c0                              	xor eax, eax
0x1b24:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1b27:    c7 43 1c 80 30 00 00               	mov dword ptr [ebx + 0x1c], 0x3080
0x1b2e:    c7 03 58 30 00 00                  	mov dword ptr [ebx], 0x3058
0x1b34:    c7 43 08 40 30 00 00               	mov dword ptr [ebx + 8], 0x3040
0x1b3b:    85 c0                              	test eax, eax
0x1b3d:    74 0c                              	je 0x1b4b <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev+0x3b>
0x1b3f:    8b 10                              	mov edx, dword ptr [eax]
0x1b41:    89 04 24                           	mov dword ptr [esp], eax
0x1b44:    ff 52 10                           	call dword ptr [edx + 0x10]
0x1b47:    84 c0                              	test al, al
0x1b49:    75 2d                              	jne 0x1b78 <function_1b78>
0x1b4b:    c7 03 10 30 00 00                  	mov dword ptr [ebx], 0x3010
0x1b51:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1b54 -- 0x1b55
0x1b54:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1b55 -- 0x1b56
; data inside code section at 0x1b56 -- 0x1b6f
0x1b56:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 1b   |....D$.e3.....u.|
0x1b66:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x1b6f -- 0x1b70
; data inside code section at 0x1b70 -- 0x1b78
0x1b70:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_1b78 at 0x1b78 -- 0x1b81
0x1b78:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x1b7f:    eb ca                              	jmp 0x1b4b
; data inside code section at 0x1b81 -- 0x1b82
0x1b81:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b82 -- 0x1b83
; data inside code section at 0x1b83 -- 0x1b87
0x1b83:    ff ff ff 83                                        |....            |
; function: function_1b87 at 0x1b87 -- 0x1b8a
0x1b87:    c2 01 89                           	ret 0x8901
; data inside code section at 0x1b8a -- 0x1b8f
0x1b8a:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x1b8f -- 0x1b90
; data inside code section at 0x1b90 -- 0x1b94
0x1b90:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x1b94 -- 0x1b95
; data inside code section at 0x1b95 -- 0x1b98
0x1b95:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x1ba0 -- 0x1be0
0x1ba0:    53                                 	push ebx
0x1ba1:    83 ec 28                           	sub esp, 0x28
0x1ba4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1ba8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1bae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1bb2:    31 c0                              	xor eax, eax
0x1bb4:    8b 03                              	mov eax, dword ptr [ebx]
0x1bb6:    85 c0                              	test eax, eax
0x1bb8:    74 0c                              	je 0x1bc6 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x1bba:    8b 10                              	mov edx, dword ptr [eax]
0x1bbc:    89 04 24                           	mov dword ptr [esp], eax
0x1bbf:    ff 52 10                           	call dword ptr [edx + 0x10]
0x1bc2:    84 c0                              	test al, al
0x1bc4:    75 12                              	jne 0x1bd8 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x1bc6:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1bca:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1bd1:    75 0d                              	jne 0x1be0 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x3e>
0x1bd3:    83 c4 28                           	add esp, 0x28
0x1bd6:    5b                                 	pop ebx
0x1bd7:    c3                                 	ret 
0x1bd8:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x1bde:    eb e6                              	jmp 0x1bc6 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x1be0 -- 0x1be1
0x1be0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1be1 -- 0x1be2
; data inside code section at 0x1be2 -- 0x1be5
0x1be2:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_ at 0x1bf0 -- 0x1c48
0x1bf0:    83 ec 2c                           	sub esp, 0x2c
0x1bf3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1bf9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1bfd:    31 c0                              	xor eax, eax
0x1bff:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1c03:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1c07:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1c0b:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1c0f:    8b 18                              	mov ebx, dword ptr [eax]
0x1c11:    8b 06                              	mov eax, dword ptr [esi]
0x1c13:    85 c0                              	test eax, eax
0x1c15:    74 08                              	je 0x1c1f <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_+0x2f>
0x1c17:    8b 10                              	mov edx, dword ptr [eax]
0x1c19:    89 04 24                           	mov dword ptr [esp], eax
0x1c1c:    ff 52 10                           	call dword ptr [edx + 0x10]
0x1c1f:    85 db                              	test ebx, ebx
0x1c21:    89 1e                              	mov dword ptr [esi], ebx
0x1c23:    74 08                              	je 0x1c2d <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_+0x3d>
0x1c25:    8b 03                              	mov eax, dword ptr [ebx]
0x1c27:    89 1c 24                           	mov dword ptr [esp], ebx
0x1c2a:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x1c2d:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1c31:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1c38:    89 f0                              	mov eax, esi
0x1c3a:    75 0c                              	jne 0x1c48 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_+0x57>
0x1c3c:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1c40:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x1c44:    83 c4 2c                           	add esp, 0x2c
0x1c47:    c3                                 	ret 
; data inside code section at 0x1c48 -- 0x1c49
0x1c48:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1c49 -- 0x1c4a
; data inside code section at 0x1c4a -- 0x1c4d
0x1c4a:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_ at 0x1c50 -- 0x1cc0
0x1c50:    56                                 	push esi
0x1c51:    53                                 	push ebx
0x1c52:    83 ec 24                           	sub esp, 0x24
0x1c55:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x1c59:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1c5d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1c63:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1c67:    31 c0                              	xor eax, eax
0x1c69:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1c6c:    c7 03 28 30 00 00                  	mov dword ptr [ebx], 0x3028
0x1c72:    c7 43 08 40 30 00 00               	mov dword ptr [ebx + 8], 0x3040
0x1c79:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1c7c:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1c7f:    85 c0                              	test eax, eax
0x1c81:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1c84:    74 08                              	je 0x1c8e <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x3e>
0x1c86:    8b 10                              	mov edx, dword ptr [eax]
0x1c88:    89 04 24                           	mov dword ptr [esp], eax
0x1c8b:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x1c8e:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x1c91:    c7 43 08 6c 30 00 00               	mov dword ptr [ebx + 8], 0x306c
0x1c98:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1c9b:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x1c9e:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x1ca1:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x1ca4:    c7 03 58 30 00 00                  	mov dword ptr [ebx], 0x3058
0x1caa:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1cad:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1cb1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1cb8:    75 06                              	jne 0x1cc0 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x6f>
0x1cba:    83 c4 24                           	add esp, 0x24
0x1cbd:    5b                                 	pop ebx
0x1cbe:    5e                                 	pop esi
0x1cbf:    c3                                 	ret 
; data inside code section at 0x1cc0 -- 0x1cc1
0x1cc0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1cc1 -- 0x1cc2
; data inside code section at 0x1cc2 -- 0x1cd3
0x1cc2:    ff ff ff 89 c6 89 1c 24  e8 51 15 00 00 89 34 24   |.......$.Q....4$|
0x1cd2:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1cd3 -- 0x1cd4
; data inside code section at 0x1cd4 -- 0x1cd7
0x1cd4:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x1ce0 -- 0x1ce7
0x1ce0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x1ce5:    eb 09                              	jmp 0x1cf0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv>
; data inside code section at 0x1ce7 -- 0x1cf0
0x1ce7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x1cf0 -- 0x1d0c
0x1cf0:    56                                 	push esi
0x1cf1:    53                                 	push ebx
0x1cf2:    83 ec 24                           	sub esp, 0x24
0x1cf5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1cf9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1cff:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1d03:    31 c0                              	xor eax, eax
0x1d05:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1d0c -- 0x1d0d
0x1d0c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1d0d -- 0x1d0e
; data inside code section at 0x1d0e -- 0x1d10
0x1d0e:    ff ff                                              |..              |
; function: function_1d10 at 0x1d10 -- 0x1d17
0x1d10:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x1d16:    c3                                 	ret 
; data inside code section at 0x1d17 -- 0x1d47
0x1d17:    89 04 24 e8 11 1c 00 00  c7 03 98 30 00 00 c7 43   |..$........0...C|
0x1d27:    08 b4 30 00 00 c7 43 1c  c4 30 00 00 c7 44 24 08   |..0...C..0...D$.|
0x1d37:    70 1a 00 00 c7 44 24 04  f0 30 00 00 89 1c 24 e8   |p....D$..0....$.|
; dynamically linked function: __cxa_throw at 0x1d47 -- 0x1d48
; data inside code section at 0x1d48 -- 0x1d51
0x1d48:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x1d51 -- 0x1d52
; data inside code section at 0x1d52 -- 0x1d59
0x1d52:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x1d59 -- 0x1d5a
; data inside code section at 0x1d5a -- 0x1d5d
0x1d5a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_ at 0x1d60 -- 0x1d82
0x1d60:    55                                 	push ebp
0x1d61:    57                                 	push edi
0x1d62:    56                                 	push esi
0x1d63:    53                                 	push ebx
0x1d64:    83 ec 5c                           	sub esp, 0x5c
0x1d67:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x1d6b:    8d 6c 24 28                        	lea ebp, [esp + 0x28]
0x1d6f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1d75:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1d79:    31 c0                              	xor eax, eax
0x1d7b:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1d82 -- 0x1d83
0x1d82:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1d83 -- 0x1d84
; data inside code section at 0x1d84 -- 0x1db0
0x1d84:    ff ff ff c7 44 24 34 00  00 00 00 c7 44 24 38 00   |....D$4.....D$8.|
0x1d94:    00 00 00 c7 44 24 3c 00  00 00 00 c7 44 24 40 ff   |....D$<.....D$@.|
0x1da4:    ff ff ff c7 44 24 28 58  30 00 00 89               |....D$(X0...    |
; function: function_1db0 at 0x1db0 -- 0x1db1
0x1db0:    c3                                 	ret 
; data inside code section at 0x1db1 -- 0x1e6b
0x1db1:    8b 46 04 c7 44 24 30 6c  30 00 00 89 6c 24 04 89   |.F..D$0l0...l$..|
0x1dc1:    1c 24 89 44 24 2c e8 e4  1b 00 00 8b 44 24 34 8d   |.$.D$,......D$4.|
0x1dd1:    74 24 44 c7 03 98 30 00  00 c7 43 08 b4 30 00 00   |t$D...0...C..0..|
0x1de1:    c7 43 1c c4 30 00 00 85  c0 c7 44 24 44 00 00 00   |.C..0.....D$D...|
0x1df1:    00 74 2f 8b 10 8d 7c 24  48 89 44 24 04 8d 74 24   |.t/...|$H.D$..t$|
0x1e01:    44 89 3c 24 ff 52 14 83  ec 04 8d 74 24 44 89 7c   |D.<$.R.....t$D.||
0x1e11:    24 04 89 34 24 e8 35 1b  00 00 89 3c 24 e8 dd 1a   |$..4$.5....<$...|
0x1e21:    00 00 8b 44 24 3c 89 43  14 8b 44 24 40 89 43 18   |...D$<.C..D$@.C.|
0x1e31:    8b 44 24 38 89 43 10 8d  43 0c 89 74 24 04 89 04   |.D$8.C..C..t$...|
0x1e41:    24 e8 09 1b 00 00 89 34  24 e8 b1 1a 00 00 89 2c   |$......4$......,|
0x1e51:    24 e8 49 18 00 00 c7 44  24 08 70 1a 00 00 c7 44   |$.I....D$.p....D|
0x1e61:    24 04 f0 30 00 00 89 1c  24 e8                     |$..0....$.      |
; dynamically linked function: __cxa_throw at 0x1e6b -- 0x1e6c
; data inside code section at 0x1e6c -- 0x1e7d
0x1e6c:    ff ff ff 89 c6 89 2c 24  e8 27 18 00 00 89 1c 24   |......,$.'.....$|
0x1e7c:    e8                                                 |.               |
; dynamically linked function: __cxa_free_exception at 0x1e7d -- 0x1e7e
; data inside code section at 0x1e7e -- 0x1e85
0x1e7e:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x1e85 -- 0x1e86
; data inside code section at 0x1e86 -- 0x1e88
0x1e86:    ff ff                                              |..              |
; function: function_1e88 at 0x1e88 -- 0x1eba
0x1e88:    ff 89 c6 c7 43 1c                  	dec dword ptr [ecx + 0x1c43c7c6]
0x1e8e:    80 30 00                           	xor byte ptr [eax], 0
0x1e91:    00 89 1c 24 e8 06                  	add byte ptr [ecx + 0x6e8241c], cl
0x1e97:    18 00                              	sbb byte ptr [eax], al
0x1e99:    00 eb                              	add bl, ch
0x1e9b:    d5 89                              	aad 0x89
0x1e9d:    3c 24                              	cmp al, 0x24
0x1e9f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1ea3:    e8 58 1a 00 00                     	call 0x3900 <unknown_3900>
0x1ea8:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1eac:    89 c7                              	mov edi, eax
0x1eae:    89 34 24                           	mov dword ptr [esp], esi
0x1eb1:    89 fe                              	mov esi, edi
0x1eb3:    e8 48 1a 00 00                     	call 0x3900 <unknown_3900>
0x1eb8:    eb d1                              	jmp 0x1e8b
; function: function_1eba at 0x1eba -- 0x1ebe
0x1eba:    89 c7                              	mov edi, eax
0x1ebc:    eb f0                              	jmp 0x1eae
; section: .text._ZN8CCrypterD2Ev
; function: _ZN8CCrypterD1Ev at 0x1ec0 -- 0x1ee2
0x1ec0:    55                                 	push ebp
0x1ec1:    57                                 	push edi
0x1ec2:    56                                 	push esi
0x1ec3:    53                                 	push ebx
0x1ec4:    83 ec 4c                           	sub esp, 0x4c
0x1ec7:    8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x1ecb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ed1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1ed5:    31 c0                              	xor eax, eax
0x1ed7:    c7 44 24 04 20 00 00 00            	mov dword ptr [esp + 4], 0x20
0x1edf:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1ee2 -- 0x1ee3
0x1ee2:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1ee3 -- 0x1ee4
; data inside code section at 0x1ee4 -- 0x1efa
0x1ee4:    ff ff ff 8d 45 20 89 44  24 1c 89 04 24 c7 44 24   |....E .D$...$.D$|
0x1ef4:    04 20 00 00 00 e8                                  |. ....          |
; dynamically linked function: OPENSSL_cleanse at 0x1efa -- 0x1efb
; data inside code section at 0x1efb -- 0x1f05
0x1efb:    ff ff ff c6 45 40 00 c7  04 24                     |....E@...$      |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1f05 -- 0x1f09
; data inside code section at 0x1f09 -- 0x1f0a
0x1f09:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x1f0a -- 0x1f0b
; data inside code section at 0x1f0b -- 0x1f17
0x1f0b:    ff ff ff 85 c0 0f 85 be  01 00 00 a1               |............    |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1f17 -- 0x1f30
; function: function_1f30 at 0x1f30 -- 0x1f31
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1f31 -- 0x1f3d
; data inside code section at 0x1f3d -- 0x1f3e
0x1f3d:    be                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1f3e -- 0x1f5d
; data inside code section at 0x1f5d -- 0x1f5f
0x1f5d:    81 fe                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1f5f -- 0x1f7f
; data inside code section at 0x1f7f -- 0x1f80
0x1f7f:    a1                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1f80 -- 0x1f9b
; data inside code section at 0x1f9b -- 0x1f9c
0x1f9b:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x1f9c -- 0x1f9d
; data inside code section at 0x1f9d -- 0x1faa
0x1f9d:    ff ff ff 89 04 24 e8 fc  ff ff ff 83 2d            |.....$......-   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1faa -- 0x1fae
; data inside code section at 0x1fae -- 0x1faf
0x1fae:    01                                                 |.               |
; function: function_1faf at 0x1faf -- 0x1fb0
; data inside code section at 0x1fb0 -- 0x1fb1
0x1fb0:    1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1fb1 -- 0x1fbd
; function: function_1fbd at 0x1fbd -- 0x1fd8
0x1fbd:    c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
0x1fc4:    e8 fc ff ff ff                     	call 0x1fc5
0x1fc9:    85 c0                              	test eax, eax
0x1fcb:    0f 85 4a 01 00 00                  	jne 0x211b <function_211b>
0x1fd1:    c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0x1fd8 -- 0x1fd9
0x1fd8:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x1fd9 -- 0x1fda
; data inside code section at 0x1fda -- 0x1fe6
0x1fda:    ff ff ff 85 c0 0f 85 1e  01 00 00 a1               |............    |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x1fe6 -- 0x2000
; function: function_2000 at 0x2000 -- 0x2001
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2001 -- 0x200d
; data inside code section at 0x200d -- 0x200e
0x200d:    be                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x200e -- 0x202d
; data inside code section at 0x202d -- 0x202f
0x202d:    81 fe                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x202f -- 0x2047
; data inside code section at 0x2047 -- 0x2048
0x2047:    a1                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2048 -- 0x2063
; data inside code section at 0x2063 -- 0x2064
0x2063:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x2064 -- 0x2065
; data inside code section at 0x2065 -- 0x2072
0x2065:    ff ff ff 89 04 24 e8 fc  ff ff ff 83 2d            |.....$......-   |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2072 -- 0x2076
; data inside code section at 0x2076 -- 0x2077
0x2076:    01                                                 |.               |
; function: function_2077 at 0x2077 -- 0x2078
; data inside code section at 0x2078 -- 0x2079
0x2078:    1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2079 -- 0x2085
; function: function_2085 at 0x2085 -- 0x208c
0x2085:    c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
; data inside code section at 0x208c -- 0x208d
0x208c:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x208d -- 0x208e
; data inside code section at 0x208e -- 0x2090
0x208e:    ff ff                                              |..              |
; function: function_2090 at 0x2090 -- 0x20ae
0x2090:    ff 85 c0 0f 85 82                  	inc dword ptr [ebp - 0x7d7af040]
0x2096:    00 00                              	add byte ptr [eax], al
0x2098:    00 8b 44 24 3c 65                  	add byte ptr [ebx + 0x653c2444], cl
0x209e:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x20a4:    75 46                              	jne 0x20ec <function_20ec>
0x20a6:    83 c4 4c                           	add esp, 0x4c
0x20a9:    5b                                 	pop ebx
0x20aa:    5e                                 	pop esi
0x20ab:    5f                                 	pop edi
0x20ac:    5d                                 	pop ebp
0x20ad:    c3                                 	ret 
; data inside code section at 0x20ae -- 0x20b0
0x20ae:    66 90                                              |f.              |
; function: function_20b0 at 0x20b0 -- 0x20ec
0x20b0:    c7 44 24 0c 90 2f 00 00            	mov dword ptr [esp + 0xc], 0x2f90 ; "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x20b8:    c7 44 24 08 5a 00 00 00            	mov dword ptr [esp + 8], 0x5a
0x20c0:    c7 44 24 04 7b 14 00 00            	mov dword ptr [esp + 4], 0x147b ; "allocators.h"
0x20c8:    c7 04 24 88 14 00 00               	mov dword ptr [esp], 0x1488 ; "it != histogram.end()"
0x20cf:    e8 fc ff ff ff                     	call 0x20d0
0x20d4:    8d 5c 24 2c                        	lea ebx, [esp + 0x2c]
0x20d8:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x20dc:    c7 44 24 2c 28 30 00 00            	mov dword ptr [esp + 0x2c], 0x3028
0x20e4:    89 1c 24                           	mov dword ptr [esp], ebx
0x20e7:    e8 34 1b 00 00                     	call 0x3c20 <unknown_3c20>
; function: function_20ec at 0x20ec -- 0x20ed
; dynamically linked function: __stack_chk_fail at 0x20ed -- 0x20ee
; data inside code section at 0x20ee -- 0x20f1
0x20ee:    ff ff ff                                           |...             |
; function: function_20f1 at 0x20f1 -- 0x20fe
0x20f1:    89 c6                              	mov esi, eax
0x20f3:    89 1c 24                           	mov dword ptr [esp], ebx
0x20f6:    e8 95 13 00 00                     	call 0x3490 <unknown_3490>
0x20fb:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x20fe -- 0x20ff
0x20fe:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x20ff -- 0x2100
; data inside code section at 0x2100 -- 0x211b
0x2100:    ff ff ff 8d 5c 24 34 89  44 24 38 c7 44 24 34 28   |....\$4.D$8.D$4(|
0x2110:    30 00 00 89 1c 24 e8 05  1b 00 00                  |0....$.....     |
; function: function_211b at 0x211b -- 0x2122
0x211b:    e8 34 13 00 00                     	call 0x3454 <unknown_3454>
0x2120:    eb cf                              	jmp 0x20f1 <function_20f1>
; section: .text._ZNSt6vectorIhSaIhEEaSERKS1_
; function: _ZNSt6vectorIhSaIhEEaSERKS1_ at 0x2130 -- 0x2172
0x2130:    83 ec 4c                           	sub esp, 0x4c
0x2133:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x2137:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x213b:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x213f:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x2143:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2149:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x214d:    31 c0                              	xor eax, eax
0x214f:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x2153:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x2157:    39 df                              	cmp edi, ebx
0x2159:    74 4b                              	je 0x21a6 <function_21a6>
0x215b:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x215e:    8b 2f                              	mov ebp, dword ptr [edi]
0x2160:    8b 03                              	mov eax, dword ptr [ebx]
0x2162:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x2165:    89 d6                              	mov esi, edx
0x2167:    29 ee                              	sub esi, ebp
0x2169:    29 c1                              	sub ecx, eax
0x216b:    39 ce                              	cmp esi, ecx
0x216d:    76 61                              	jbe 0x21d0 <function_21d0>
0x216f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x2172 -- 0x2173
0x2172:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x2173 -- 0x2174
; data inside code section at 0x2174 -- 0x2189
0x2174:    ff ff ff 85 f6 89 c7 74  10 89 74 24 08 89 6c 24   |.......t..t$..l$|
0x2184:    04 89 04 24 e8                                     |...$.           |
; dynamically linked function: memmove at 0x2189 -- 0x218a
; data inside code section at 0x218a -- 0x2197
0x218a:    ff ff ff 8b 03 85 c0 74  08 89 04 24 e8            |.......t...$.   |
; dynamically linked function: _ZdlPv at 0x2197 -- 0x2198
; data inside code section at 0x2198 -- 0x21a3
0x2198:    ff ff ff 8d 04 37 89 3b  89 43 08                  |.....7.;.C.     |
; function: function_21a3 at 0x21a3 -- 0x21a6
0x21a3:    89 43 04                           	mov dword ptr [ebx + 4], eax
; function: function_21a6 at 0x21a6 -- 0x21cd
0x21a6:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x21aa:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x21b1:    89 d8                              	mov eax, ebx
0x21b3:    0f 85 bb 00 00 00                  	jne 0x2274 <function_2274>
0x21b9:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x21bd:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x21c1:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x21c5:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x21c9:    83 c4 4c                           	add esp, 0x4c
0x21cc:    c3                                 	ret 
; data inside code section at 0x21cd -- 0x21d0
0x21cd:    8d 76 00                                           |.v.             |
; function: function_21d0 at 0x21d0 -- 0x21f0
0x21d0:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x21d3:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x21d7:    29 c1                              	sub ecx, eax
0x21d9:    39 ce                              	cmp esi, ecx
0x21db:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x21df:    77 1f                              	ja 0x2200 <function_2200>
0x21e1:    85 f6                              	test esi, esi
0x21e3:    74 be                              	je 0x21a3 <function_21a3>
0x21e5:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x21e9:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x21ed:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x21f0 -- 0x21f1
0x21f0:    e8                                                 |.               |
; dynamically linked function: memmove at 0x21f1 -- 0x21f2
; data inside code section at 0x21f2 -- 0x21f5
0x21f2:    ff ff ff                                           |...             |
; function: function_21f5 at 0x21f5 -- 0x21fb
0x21f5:    8b 03                              	mov eax, dword ptr [ebx]
0x21f7:    01 f0                              	add eax, esi
0x21f9:    eb a8                              	jmp 0x21a3 <function_21a3>
; data inside code section at 0x21fb -- 0x2200
0x21fb:    90 8d 74 26 00                                     |..t&.           |
; function: function_2200 at 0x2200 -- 0x2253
0x2200:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x2204:    01 e9                              	add ecx, ebp
0x2206:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x220a:    29 e9                              	sub ecx, ebp
0x220c:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x2210:    75 36                              	jne 0x2248 <function_2200+0x48>
0x2212:    2b 54 24 18                        	sub edx, dword ptr [esp + 0x18]
0x2216:    75 08                              	jne 0x2220 <function_2200+0x20>
0x2218:    01 f0                              	add eax, esi
0x221a:    eb 87                              	jmp 0x21a3 <function_21a3>
; data inside code section at 0x221c -- 0x2220
0x221c:    8d 74 26 00                                        |.t&.            |
0x2220:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x2224:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x2228:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x222c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2230:    89 14 24                           	mov dword ptr [esp], edx
0x2233:    e8 fc ff ff ff                     	call 0x2234
0x2238:    8b 03                              	mov eax, dword ptr [ebx]
0x223a:    01 f0                              	add eax, esi
0x223c:    e9 62 ff ff ff                     	jmp 0x21a3 <function_21a3>
; data inside code section at 0x2241 -- 0x2248
0x2241:    8d b4 26 00 00 00 00                               |..&....         |
0x2248:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x224c:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x2250:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2253 -- 0x2254
0x2253:    e8                                                 |.               |
; dynamically linked function: memmove at 0x2254 -- 0x2255
; data inside code section at 0x2255 -- 0x2257
0x2255:    ff ff                                              |..              |
; function: function_2257 at 0x2257 -- 0x2274
0x2257:    ff 8b 43 04 8b 0f                  	dec dword ptr [ebx + 0xf8b0443]
0x225d:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x2261:    8b 03                              	mov eax, dword ptr [ebx]
0x2263:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x2267:    29 c2                              	sub edx, eax
0x2269:    01 ca                              	add edx, ecx
0x226b:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x226f:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x2272:    eb 9e                              	jmp 0x2212
; function: function_2274 at 0x2274 -- 0x2279
0x2274:    e8 fc ff ff ff                     	call 0x2275
; section: .text._ZN21LockedPageManagerBaseI16MemoryPageLockerE11UnlockRangeEPvj
; function: _ZN21LockedPageManagerBaseI16MemoryPageLockerE11UnlockRangeEPvj at 0x2280 -- 0x22a9
0x2280:    55                                 	push ebp
0x2281:    57                                 	push edi
0x2282:    56                                 	push esi
0x2283:    53                                 	push ebx
0x2284:    83 ec 3c                           	sub esp, 0x3c
0x2287:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x228b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2291:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2295:    31 c0                              	xor eax, eax
0x2297:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x229b:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x229f:    8d 47 04                           	lea eax, [edi + 4]
0x22a2:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x22a6:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x22a9 -- 0x22aa
0x22a9:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x22aa -- 0x22ab
; data inside code section at 0x22ab -- 0x22ad
0x22ab:    ff ff                                              |..              |
; function: function_22ad at 0x22ad -- 0x2321
0x22ad:    ff 85 c0 0f 85 de                  	inc dword ptr [ebp - 0x217af040]
0x22b3:    00 00                              	add byte ptr [eax], al
0x22b5:    00 85 f6 0f 84 8b                  	add byte ptr [ebp - 0x747bf00a], al
0x22bb:    00 00                              	add byte ptr [eax], al
0x22bd:    00 8b 47 20 89 eb                  	add byte ptr [ebx - 0x1476dfb9], cl
0x22c3:    8d 54 35 ff                        	lea edx, [ebp + esi - 1]
0x22c7:    21 c3                              	and ebx, eax
0x22c9:    21 c2                              	and edx, eax
0x22cb:    39 d3                              	cmp ebx, edx
0x22cd:    77 7a                              	ja 0x2349 <function_2349>
0x22cf:    8d 6f 28                           	lea ebp, [edi + 0x28]
0x22d2:    8d b6 00 00 00 00                  	lea esi, [esi]
0x22d8:    8b 47 2c                           	mov eax, dword ptr [edi + 0x2c]
0x22db:    85 c0                              	test eax, eax
0x22dd:    0f 84 8d 00 00 00                  	je 0x2370 <function_2370>
0x22e3:    89 ee                              	mov esi, ebp
0x22e5:    eb 0a                              	jmp 0x22f1 <function_22ad+0x44>
; data inside code section at 0x22e7 -- 0x22e8
0x22e7:    90                                                 |.               |
0x22e8:    89 c6                              	mov esi, eax
0x22ea:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x22ed:    85 c0                              	test eax, eax
0x22ef:    74 0c                              	je 0x22fd <function_22ad+0x50>
0x22f1:    39 58 10                           	cmp dword ptr [eax + 0x10], ebx
0x22f4:    73 f2                              	jae 0x22e8 <function_22ad+0x3b>
0x22f6:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x22f9:    85 c0                              	test eax, eax
0x22fb:    75 f4                              	jne 0x22f1 <function_22ad+0x44>
0x22fd:    39 f5                              	cmp ebp, esi
0x22ff:    74 6f                              	je 0x2370 <function_2370>
0x2301:    39 5e 10                           	cmp dword ptr [esi + 0x10], ebx
0x2304:    77 6a                              	ja 0x2370 <function_2370>
0x2306:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x2309:    83 e8 01                           	sub eax, 1
0x230c:    85 c0                              	test eax, eax
0x230e:    89 46 14                           	mov dword ptr [esi + 0x14], eax
0x2311:    75 2f                              	jne 0x2342 <function_2342>
0x2313:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x2316:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x231a:    89 1c 24                           	mov dword ptr [esp], ebx
0x231d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x2321 -- 0x2322
0x2321:    e8                                                 |.               |
; dynamically linked function: munlock at 0x2322 -- 0x2323
; data inside code section at 0x2323 -- 0x232e
0x2323:    ff ff ff 89 6c 24 04 89  34 24 e8                  |....l$..4$.     |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x232e -- 0x232f
; data inside code section at 0x232f -- 0x2336
0x232f:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x2336 -- 0x2337
; data inside code section at 0x2337 -- 0x2342
0x2337:    ff ff ff 8b 54 24 18 83  6f 38 01                  |....T$..o8.     |
; function: function_2342 at 0x2342 -- 0x2349
0x2342:    03 5f 1c                           	add ebx, dword ptr [edi + 0x1c]
0x2345:    39 da                              	cmp edx, ebx
0x2347:    73 8f                              	jae 0x22d8
; function: function_2349 at 0x2349 -- 0x2350
0x2349:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x234d:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2350 -- 0x2351
0x2350:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x2351 -- 0x2352
; data inside code section at 0x2352 -- 0x2354
0x2352:    ff ff                                              |..              |
; function: function_2354 at 0x2354 -- 0x236e
0x2354:    ff 85 c0 75 58 8b                  	inc dword ptr [ebp - 0x74a78a40]
0x235a:    44                                 	inc esp
0x235b:    24 2c                              	and al, 0x2c
0x235d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2364:    75 46                              	jne 0x23ac
0x2366:    83 c4 3c                           	add esp, 0x3c
0x2369:    5b                                 	pop ebx
0x236a:    5e                                 	pop esi
0x236b:    5f                                 	pop edi
0x236c:    5d                                 	pop ebp
0x236d:    c3                                 	ret 
; data inside code section at 0x236e -- 0x2370
0x236e:    66 90                                              |f.              |
; function: function_2370 at 0x2370 -- 0x23c8
0x2370:    c7 44 24 0c 90 2f 00 00            	mov dword ptr [esp + 0xc], 0x2f90 ; "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x2378:    c7 44 24 08 5a 00 00 00            	mov dword ptr [esp + 8], 0x5a
0x2380:    c7 44 24 04 7b 14 00 00            	mov dword ptr [esp + 4], 0x147b ; "allocators.h"
0x2388:    c7 04 24 88 14 00 00               	mov dword ptr [esp], 0x1488 ; "it != histogram.end()"
0x238f:    e8 fc ff ff ff                     	call 0x2390
0x2394:    8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x2398:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x239c:    c7 44 24 24 28 30 00 00            	mov dword ptr [esp + 0x24], 0x3028
0x23a4:    89 1c 24                           	mov dword ptr [esp], ebx
0x23a7:    e8 34 1c 00 00                     	call 0x3fe0 <unknown_3fe0>
0x23ac:    e8 fc ff ff ff                     	call 0x23ad
0x23b1:    e8 5e 14 00 00                     	call 0x3814 <unknown_3814>
0x23b6:    89 c6                              	mov esi, eax
0x23b8:    89 1c 24                           	mov dword ptr [esp], ebx
0x23bb:    e8 90 14 00 00                     	call 0x3850 <unknown_3850>
0x23c0:    89 34 24                           	mov dword ptr [esp], esi
0x23c3:    e8 fc ff ff ff                     	call 0x23c4
; section: .text._ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh
; function: _ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh at 0x23d0 -- 0x2472
0x23d0:    83 ec 5c                           	sub esp, 0x5c
0x23d3:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x23d7:    8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x23db:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23e1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x23e5:    31 c0                              	xor eax, eax
0x23e7:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x23eb:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x23ef:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x23f3:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x23f7:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x23fb:    85 f6                              	test esi, esi
0x23fd:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x2401:    0f 84 d5 00 00 00                  	je 0x24dc <function_24dc>
0x2407:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x240a:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x240d:    29 e8                              	sub eax, ebp
0x240f:    39 c6                              	cmp esi, eax
0x2411:    0f 86 f1 00 00 00                  	jbe 0x2508 <function_2508>
0x2417:    8b 03                              	mov eax, dword ptr [ebx]
0x2419:    29 c5                              	sub ebp, eax
0x241b:    89 e9                              	mov ecx, ebp
0x241d:    f7 d1                              	not ecx
0x241f:    39 ce                              	cmp esi, ecx
0x2421:    0f 87 19 02 00 00                  	ja 0x2640 <function_2640>
0x2427:    39 f5                              	cmp ebp, esi
0x2429:    89 f1                              	mov ecx, esi
0x242b:    0f 43 cd                           	cmovae ecx, ebp
0x242e:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x2432:    89 f9                              	mov ecx, edi
0x2434:    29 c1                              	sub ecx, eax
0x2436:    03 6c 24 1c                        	add ebp, dword ptr [esp + 0x1c]
0x243a:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x243e:    c7 44 24 28 ff ff ff ff            	mov dword ptr [esp + 0x28], 0xffffffff
0x2446:    0f 82 d4 01 00 00                  	jb 0x2620 <function_2620>
0x244c:    85 ed                              	test ebp, ebp
0x244e:    0f 85 c4 01 00 00                  	jne 0x2618 <function_2618>
0x2454:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x245c:    31 ed                              	xor ebp, ebp
0x245e:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x2462:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x2466:    0f b6 12                           	movzx edx, byte ptr [edx]
0x2469:    01 e8                              	add eax, ebp
0x246b:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x246f:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2472 -- 0x2473
0x2472:    e8                                                 |.               |
; dynamically linked function: memset at 0x2473 -- 0x2474
; data inside code section at 0x2474 -- 0x2491
0x2474:    ff ff ff 8b 03 89 f9 31  d2 29 c1 74 18 89 4c 24   |.......1.).t..L$|
0x2484:    08 89 44 24 04 89 2c 24  89 4c 24 20 e8            |..D$..,$.L$ .   |
; dynamically linked function: memmove at 0x2491 -- 0x2492
; data inside code section at 0x2492 -- 0x2494
0x2492:    ff ff                                              |..              |
; function: function_2494 at 0x2494 -- 0x24a4
0x2494:    ff 8b 54 24 20 8b                  	dec dword ptr [ebx - 0x74dfdbac]
0x249a:    43                                 	inc ebx
0x249b:    04 01                              	add al, 1
0x249d:    ea 01 f2 31 f6 29 f8               	ljmp 0xf829:0xf631f201 <function_f631f201>
; data inside code section at 0x24a4 -- 0x24cc
0x24a4:    74 1a 89 14 24 89 c6 89  54 24 20 89 44 24 08 89   |t...$...T$ .D$..|
0x24b4:    7c 24 04 e8 fc ff ff ff  8b 54 24 20 8b 03 01 d6   ||$.......T$ ....|
0x24c4:    85 c0 74 08 89 04 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x24cc -- 0x24cd
; data inside code section at 0x24cd -- 0x24dc
0x24cd:    ff ff ff 89 2b 03 6c 24  28 89 73 04 89 6b 08      |....+.l$(.s..k. |
; function: function_24dc at 0x24dc -- 0x2501
0x24dc:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x24e0:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x24e7:    0f 85 4e 01 00 00                  	jne 0x263b <function_263b>
0x24ed:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x24f1:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x24f5:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x24f9:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x24fd:    83 c4 5c                           	add esp, 0x5c
0x2500:    c3                                 	ret 
; data inside code section at 0x2501 -- 0x2508
0x2501:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_2508 at 0x2508 -- 0x256f
0x2508:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x250b:    89 ea                              	mov edx, ebp
0x250d:    29 fa                              	sub edx, edi
0x250f:    39 d6                              	cmp esi, edx
0x2511:    0f 83 81 00 00 00                  	jae 0x2598 <function_2598>
0x2517:    89 ea                              	mov edx, ebp
0x2519:    89 e8                              	mov eax, ebp
0x251b:    29 f2                              	sub edx, esi
0x251d:    29 d0                              	sub eax, edx
0x251f:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x2523:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x2527:    74 28                              	je 0x2551 <function_2508+0x49>
0x2529:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x252d:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x2531:    88 4c 24 24                        	mov byte ptr [esp + 0x24], cl
0x2535:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2539:    89 2c 24                           	mov dword ptr [esp], ebp
0x253c:    e8 fc ff ff ff                     	call 0x253d
0x2541:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x2544:    0f b6 4c 24 24                     	movzx ecx, byte ptr [esp + 0x24]
0x2549:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x254d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2551:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x2555:    01 f0                              	add eax, esi
0x2557:    29 fa                              	sub edx, edi
0x2559:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x255c:    74 1b                              	je 0x2579 <function_2579>
0x255e:    29 d5                              	sub ebp, edx
0x2560:    88 4c 24 24                        	mov byte ptr [esp + 0x24], cl
0x2564:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x2568:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x256c:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x256f -- 0x2570
0x256f:    e8                                                 |.               |
; dynamically linked function: memmove at 0x2570 -- 0x2571
; data inside code section at 0x2571 -- 0x2579
0x2571:    ff ff ff 0f b6 4c 24 24                            |.....L$$        |
; function: function_2579 at 0x2579 -- 0x2597
0x2579:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x257d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2584:    0f 85 b1 00 00 00                  	jne 0x263b <function_263b>
0x258a:    0f b6 c9                           	movzx ecx, cl
0x258d:    89 74 24 68                        	mov dword ptr [esp + 0x68], esi
0x2591:    89 4c 24 64                        	mov dword ptr [esp + 0x64], ecx
0x2595:    eb 65                              	jmp 0x25fc <function_25fc>
; data inside code section at 0x2597 -- 0x2598
0x2597:    90                                                 |.               |
; function: function_2598 at 0x2598 -- 0x25b4
0x2598:    29 d6                              	sub esi, edx
0x259a:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x259e:    0f b6 f1                           	movzx esi, cl
0x25a1:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x25a5:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x25a9:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x25ad:    89 2c 24                           	mov dword ptr [esp], ebp
0x25b0:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x25b4 -- 0x25b5
0x25b4:    e8                                                 |.               |
; dynamically linked function: memset at 0x25b5 -- 0x25b6
; data inside code section at 0x25b6 -- 0x25d7
0x25b6:    ff ff ff 8b 54 24 20 8b  44 24 28 03 43 04 85 d2   |....T$ .D$(.C...|
0x25c6:    89 43 04 74 17 89 54 24  08 89 7c 24 04 89 04 24   |.C.t..T$..|$...$|
0x25d6:    e8                                                 |.               |
; dynamically linked function: memmove at 0x25d7 -- 0x25d8
; data inside code section at 0x25d8 -- 0x25fc
0x25d8:    ff ff ff 8b 43 04 8b 54  24 20 01 d0 89 43 04 8b   |....C..T$ ...C..|
0x25e8:    44 24 3c 65 33 05 14 00  00 00 75 47 89 54 24 68   |D$<e3.....uG.T$h|
0x25f8:    89 74 24 64                                        |.t$d            |
; function: function_25fc at 0x25fc -- 0x2613
0x25fc:    89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0x2600:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2604:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x2608:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x260c:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x2610:    83 c4 5c                           	add esp, 0x5c
; data inside code section at 0x2613 -- 0x2614
0x2613:    e9                                                 |.               |
; dynamically linked function: memset at 0x2614 -- 0x2615
; data inside code section at 0x2615 -- 0x2618
0x2615:    ff ff ff                                           |...             |
; function: function_2618 at 0x2618 -- 0x2620
0x2618:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x261c:    8d 74 26 00                        	lea esi, [esi]
; function: function_2620 at 0x2620 -- 0x263b
0x2620:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x2624:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x2628:    89 0c 24                           	mov dword ptr [esp], ecx
0x262b:    e8 fc ff ff ff                     	call 0x262c
0x2630:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x2634:    89 c5                              	mov ebp, eax
0x2636:    e9 23 fe ff ff                     	jmp 0x245e
; function: function_263b at 0x263b -- 0x2640
0x263b:    e8 fc ff ff ff                     	call 0x263c
; function: function_2640 at 0x2640 -- 0x264c
0x2640:    c7 04 24 9e 14 00 00               	mov dword ptr [esp], 0x149e ; "vector::_M_fill_insert"
0x2647:    e8 fc ff ff ff                     	call 0x2648
; section: .text._ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
; function: _ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_ at 0x2650 -- 0x269d
0x2650:    83 ec 4c                           	sub esp, 0x4c
0x2653:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2659:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x265d:    31 c0                              	xor eax, eax
0x265f:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x2663:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x2667:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x266b:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x266f:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x2673:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x2677:    8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0x267b:    85 c0                              	test eax, eax
0x267d:    8d 53 04                           	lea edx, [ebx + 4]
0x2680:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x2684:    8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x2688:    c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0x2690:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x2694:    74 72                              	je 0x2708 <function_2708>
0x2696:    c7 04 24 18 00 00 00               	mov dword ptr [esp], 0x18
; data inside code section at 0x269d -- 0x269e
0x269d:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x269e -- 0x269f
; data inside code section at 0x269f -- 0x26cf
0x269f:    ff ff ff 83 f8 f0 74 0c  8b 55 00 8b 4d 04 89 50   |......t..U..M..P|
0x26af:    10 89 48 14 8b 4c 24 10  8b 54 24 14 89 44 24 04   |..H..L$..T$..D$.|
0x26bf:    89 44 24 1c 89 4c 24 0c  89 7c 24 08 89 14 24 e8   |.D$..L$..|$...$.|
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x26cf -- 0x26d0
; data inside code section at 0x26d0 -- 0x26d2
0x26d0:    ff ff                                              |..              |
; function: function_26d2 at 0x26d2 -- 0x2702
0x26d2:    ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0x26d8:    43                                 	inc ebx
0x26d9:    14 01                              	adc al, 1
0x26db:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x26df:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x26e6:    89 06                              	mov dword ptr [esi], eax
0x26e8:    89 f0                              	mov eax, esi
0x26ea:    75 34                              	jne 0x2720 <function_2720>
0x26ec:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x26f0:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x26f4:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x26f8:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x26fc:    83 c4 4c                           	add esp, 0x4c
0x26ff:    c2 04 00                           	ret 4
; data inside code section at 0x2702 -- 0x2708
0x2702:    8d b6 00 00 00 00                                  |......          |
; function: function_2708 at 0x2708 -- 0x2720
0x2708:    39 d7                              	cmp edi, edx
0x270a:    74 8a                              	je 0x2696
0x270c:    8b 4f 10                           	mov ecx, dword ptr [edi + 0x10]
0x270f:    31 d2                              	xor edx, edx
0x2711:    39 4d 00                           	cmp dword ptr [ebp], ecx
0x2714:    0f 92 c2                           	setb dl
0x2717:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x271b:    e9 76 ff ff ff                     	jmp 0x2696
; function: function_2720 at 0x2720 -- 0x2721
; dynamically linked function: __stack_chk_fail at 0x2721 -- 0x2722
; data inside code section at 0x2722 -- 0x2725
0x2722:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_
; function: _ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_ at 0x2730 -- 0x27c8
0x2730:    55                                 	push ebp
0x2731:    57                                 	push edi
0x2732:    56                                 	push esi
0x2733:    53                                 	push ebx
0x2734:    83 ec 4c                           	sub esp, 0x4c
0x2737:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x273b:    8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x273f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2745:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2749:    31 c0                              	xor eax, eax
0x274b:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x274f:    8b 77 08                           	mov esi, dword ptr [edi + 8]
0x2752:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x2756:    85 f6                              	test esi, esi
0x2758:    74 5d                              	je 0x27b7 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x87>
0x275a:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x275e:    8b 0a                              	mov ecx, dword ptr [edx]
0x2760:    eb 14                              	jmp 0x2776 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x46>
; data inside code section at 0x2762 -- 0x2768
0x2762:    8d b6 00 00 00 00                                  |......          |
0x2768:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x276b:    bd 01 00 00 00                     	mov ebp, 1
0x2770:    85 c0                              	test eax, eax
0x2772:    74 12                              	je 0x2786 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x56>
0x2774:    89 c6                              	mov esi, eax
0x2776:    8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0x2779:    39 ca                              	cmp edx, ecx
0x277b:    77 eb                              	ja 0x2768 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x38>
0x277d:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x2780:    31 ed                              	xor ebp, ebp
0x2782:    85 c0                              	test eax, eax
0x2784:    75 ee                              	jne 0x2774 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x44>
0x2786:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x278a:    89 ea                              	mov edx, ebp
0x278c:    89 f0                              	mov eax, esi
0x278e:    84 d2                              	test dl, dl
0x2790:    75 2e                              	jne 0x27c0 <_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_+0x90>
0x2792:    39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0x2796:    72 48                              	jb 0x27e0 <function_27e0>
0x2798:    89 03                              	mov dword ptr [ebx], eax
0x279a:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x279e:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x27a2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x27a9:    89 d8                              	mov eax, ebx
0x27ab:    75 66                              	jne 0x2813 <function_2813>
0x27ad:    83 c4 4c                           	add esp, 0x4c
0x27b0:    5b                                 	pop ebx
0x27b1:    5e                                 	pop esi
0x27b2:    5f                                 	pop edi
0x27b3:    5d                                 	pop ebp
0x27b4:    c2 04 00                           	ret 4
0x27b7:    8d 77 04                           	lea esi, [edi + 4]
0x27ba:    8d b6 00 00 00 00                  	lea esi, [esi]
0x27c0:    3b 77 0c                           	cmp esi, dword ptr [edi + 0xc]
0x27c3:    74 1b                              	je 0x27e0 <function_27e0>
0x27c5:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x27c8 -- 0x27c9
0x27c8:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x27c9 -- 0x27ca
; data inside code section at 0x27ca -- 0x27e0
0x27ca:    ff ff ff 8b 54 24 28 8b  0a 8b 50 10 89 54 24 24   |....T$(...P..T$$|
0x27da:    39 4c 24 24 73 b8                                  |9L$$s.          |
; function: function_27e0 at 0x27e0 -- 0x2813
0x27e0:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x27e4:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x27e8:    89 04 24                           	mov dword ptr [esp], eax
0x27eb:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x27ef:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x27f7:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x27fb:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x27ff:    e8 7c 25 00 00                     	call 0x4d80 <unknown_4d80>
0x2804:    83 ec 04                           	sub esp, 4
0x2807:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x280b:    c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x280f:    89 03                              	mov dword ptr [ebx], eax
0x2811:    eb 8b                              	jmp 0x279e
; function: function_2813 at 0x2813 -- 0x2814
; dynamically linked function: __stack_chk_fail at 0x2814 -- 0x2815
; data inside code section at 0x2815 -- 0x2818
0x2815:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_
; function: _ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_ at 0x2820 -- 0x2904
0x2820:    55                                 	push ebp
0x2821:    57                                 	push edi
0x2822:    56                                 	push esi
0x2823:    53                                 	push ebx
0x2824:    83 ec 5c                           	sub esp, 0x5c
0x2827:    8b 7c 24 70                        	mov edi, dword ptr [esp + 0x70]
0x282b:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
0x282f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2835:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x2839:    31 c0                              	xor eax, eax
0x283b:    39 fb                              	cmp ebx, edi
0x283d:    74 34                              	je 0x2873 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x53>
0x283f:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x2842:    8b 33                              	mov esi, dword ptr [ebx]
0x2844:    8b 0f                              	mov ecx, dword ptr [edi]
0x2846:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x2849:    89 ea                              	mov edx, ebp
0x284b:    29 f2                              	sub edx, esi
0x284d:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2851:    29 c8                              	sub eax, ecx
0x2853:    39 c2                              	cmp edx, eax
0x2855:    77 79                              	ja 0x28d0 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0xb0>
0x2857:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x285a:    89 d0                              	mov eax, edx
0x285c:    29 c8                              	sub eax, ecx
0x285e:    39 44 24 1c                        	cmp dword ptr [esp + 0x1c], eax
0x2862:    77 2c                              	ja 0x2890 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x70>
0x2864:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2868:    85 d2                              	test edx, edx
0x286a:    0f 85 85 01 00 00                  	jne 0x29f5 <function_29f5>
0x2870:    89 4f 04                           	mov dword ptr [edi + 4], ecx
0x2873:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x2877:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x287e:    89 f8                              	mov eax, edi
0x2880:    0f 85 4f 02 00 00                  	jne 0x2ad5 <function_2ad5>
0x2886:    83 c4 5c                           	add esp, 0x5c
0x2889:    5b                                 	pop ebx
0x288a:    5e                                 	pop esi
0x288b:    5f                                 	pop edi
0x288c:    5d                                 	pop ebp
0x288d:    c3                                 	ret 
; data inside code section at 0x288e -- 0x2890
0x288e:    66 90                                              |f.              |
0x2890:    01 f0                              	add eax, esi
0x2892:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x2896:    29 f0                              	sub eax, esi
0x2898:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x289c:    0f 85 75 01 00 00                  	jne 0x2a17 <function_2a17>
0x28a2:    39 6c 24 24                        	cmp dword ptr [esp + 0x24], ebp
0x28a6:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x28aa:    0f 84 d9 01 00 00                  	je 0x2a89 <function_2a89>
0x28b0:    85 d2                              	test edx, edx
0x28b2:    74 05                              	je 0x28b9 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x99>
0x28b4:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x28b7:    88 0a                              	mov byte ptr [edx], cl
0x28b9:    83 c0 01                           	add eax, 1
0x28bc:    83 c2 01                           	add edx, 1
0x28bf:    39 e8                              	cmp eax, ebp
0x28c1:    75 ed                              	jne 0x28b0 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x90>
0x28c3:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x28c7:    03 0f                              	add ecx, dword ptr [edi]
0x28c9:    89 4f 04                           	mov dword ptr [edi + 4], ecx
0x28cc:    eb a5                              	jmp 0x2873 <_ZNSt6vectorIh16secure_allocatorIhEEaSERKS2_+0x53>
; data inside code section at 0x28ce -- 0x28d0
0x28ce:    66 90                                              |f.              |
0x28d0:    89 14 24                           	mov dword ptr [esp], edx
0x28d3:    e8 fc ff ff ff                     	call 0x28d4
0x28d8:    85 c0                              	test eax, eax
0x28da:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x28de:    0f 84 a6 00 00 00                  	je 0x298a <function_298a>
0x28e4:    c7 04 24 04 00 00 00               	mov dword ptr [esp], 4
0x28eb:    e8 fc ff ff ff                     	call 0x28ec
0x28f0:    85 c0                              	test eax, eax
0x28f2:    0f 85 e2 01 00 00                  	jne 0x2ada <function_2ada>
0x28f8:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x28fc:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x2900:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
; data inside code section at 0x2904 -- 0x2906
0x2904:    23 1d                                              |#.              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2906 -- 0x2920
; function: function_2920 at 0x2920 -- 0x2921
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2921 -- 0x292d
; data inside code section at 0x292d -- 0x292e
0x292d:    ba                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x292e -- 0x294d
; data inside code section at 0x294d -- 0x294f
0x294d:    81 fa                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x294f -- 0x2966
; function: function_2966 at 0x2966 -- 0x2967
; data inside code section at 0x2967 -- 0x2968
0x2967:    1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2968 -- 0x2976
; function: function_2976 at 0x2976 -- 0x2977
; data inside code section at 0x2977 -- 0x2979
0x2977:    04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2979 -- 0x297d
; data inside code section at 0x297d -- 0x297e
0x297d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x297e -- 0x297f
; data inside code section at 0x297f -- 0x298a
0x297f:    ff ff ff 85 c0 0f 85 22  01 00 00                  |......."...     |
; function: function_298a at 0x298a -- 0x29bd
0x298a:    39 ee                              	cmp esi, ebp
0x298c:    74 1d                              	je 0x29ab <function_298a+0x21>
0x298e:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2992:    8d b6 00 00 00 00                  	lea esi, [esi]
0x2998:    85 c0                              	test eax, eax
0x299a:    74 05                              	je 0x29a1 <function_298a+0x17>
0x299c:    0f b6 16                           	movzx edx, byte ptr [esi]
0x299f:    88 10                              	mov byte ptr [eax], dl
0x29a1:    83 c6 01                           	add esi, 1
0x29a4:    83 c0 01                           	add eax, 1
0x29a7:    39 ee                              	cmp esi, ebp
0x29a9:    75 ed                              	jne 0x2998 <function_298a+0xe>
0x29ab:    8b 1f                              	mov ebx, dword ptr [edi]
0x29ad:    8b 77 08                           	mov esi, dword ptr [edi + 8]
0x29b0:    85 db                              	test ebx, ebx
0x29b2:    74 2a                              	je 0x29de <function_29de>
0x29b4:    29 de                              	sub esi, ebx
0x29b6:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x29ba:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x29bd -- 0x29be
0x29bd:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x29be -- 0x29bf
; data inside code section at 0x29bf -- 0x29cc
0x29bf:    ff ff ff 89 74 24 08 89  5c 24 04 c7 04            |....t$..\$...   |
; function: function_29cc at 0x29cc -- 0x29d5
0x29cc:    24 00                              	and al, 0
0x29ce:    00 00                              	add byte ptr [eax], al
0x29d0:    00 e8                              	add al, ch
0x29d2:    ca 20 00                           	retf 0x20
; data inside code section at 0x29d5 -- 0x29da
0x29d5:    00 89 1c 24 e8                                     |...$.           |
; dynamically linked function: _ZdlPv at 0x29da -- 0x29db
; data inside code section at 0x29db -- 0x29de
0x29db:    ff ff ff                                           |...             |
; function: function_29de at 0x29de -- 0x29f5
0x29de:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x29e2:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x29e6:    89 07                              	mov dword ptr [edi], eax
0x29e8:    01 c1                              	add ecx, eax
0x29ea:    89 4f 08                           	mov dword ptr [edi + 8], ecx
0x29ed:    89 4f 04                           	mov dword ptr [edi + 4], ecx
0x29f0:    e9 7e fe ff ff                     	jmp 0x2873
; function: function_29f5 at 0x29f5 -- 0x2a04
0x29f5:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x29f9:    89 0c 24                           	mov dword ptr [esp], ecx
0x29fc:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x2a00:    89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x2a04 -- 0x2a05
0x2a04:    e8                                                 |.               |
; dynamically linked function: memmove at 0x2a05 -- 0x2a06
; data inside code section at 0x2a06 -- 0x2a09
0x2a06:    ff ff ff                                           |...             |
; function: function_2a09 at 0x2a09 -- 0x2a17
0x2a09:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x2a0d:    03 0f                              	add ecx, dword ptr [edi]
0x2a0f:    89 4f 04                           	mov dword ptr [edi + 4], ecx
0x2a12:    e9 5c fe ff ff                     	jmp 0x2873
; function: function_2a17 at 0x2a17 -- 0x2a22
0x2a17:    89 0c 24                           	mov dword ptr [esp], ecx
0x2a1a:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2a1e:    89 74 24 04                        	mov dword ptr [esp + 4], esi
; data inside code section at 0x2a22 -- 0x2a23
0x2a22:    e8                                                 |.               |
; dynamically linked function: memmove at 0x2a23 -- 0x2a24
; data inside code section at 0x2a24 -- 0x2a26
0x2a24:    ff ff                                              |..              |
; function: function_2a26 at 0x2a26 -- 0x2a42
0x2a26:    ff 8b 57 04 8b 0f                  	dec dword ptr [ebx + 0xf8b0457]
0x2a2c:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x2a2f:    89 d0                              	mov eax, edx
0x2a31:    29 c8                              	sub eax, ecx
0x2a33:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x2a37:    8b 03                              	mov eax, dword ptr [ebx]
0x2a39:    01 44 24 24                        	add dword ptr [esp + 0x24], eax
0x2a3d:    e9 60 fe ff ff                     	jmp 0x28a2
; data inside code section at 0x2a42 -- 0x2a48
0x2a42:    8d b6 00 00 00 00                                  |......          |
; function: function_2a48 at 0x2a48 -- 0x2a49
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2a49 -- 0x2a54
; data inside code section at 0x2a54 -- 0x2a55
0x2a54:    e8                                                 |.               |
; dynamically linked function: mlock at 0x2a55 -- 0x2a56
; data inside code section at 0x2a56 -- 0x2a75
0x2a56:    ff ff ff 8d 4c 24 3c 8d  44 24 28 89 5c 24 3c c7   |....L$<.D$(.\$<.|
0x2a66:    44 24 40 01 00 00 00 89  4c 24 08 c7 44 24 04      |D$@.....L$..D$. |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2a75 -- 0x2a89
; function: function_2a89 at 0x2a89 -- 0x2a92
0x2a89:    03 4c 24 1c                        	add ecx, dword ptr [esp + 0x1c]
0x2a8d:    e9 de fd ff ff                     	jmp 0x2870
; data inside code section at 0x2a92 -- 0x2a93
0x2a92:    89                                                 |.               |
; function: function_2a93 at 0x2a93 -- 0x2a94
0x2a93:    c3                                 	ret 
; data inside code section at 0x2a94 -- 0x2a97
0x2a94:    c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2a97 -- 0x2a9b
; data inside code section at 0x2a9b -- 0x2a9c
0x2a9b:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x2a9c -- 0x2a9d
; data inside code section at 0x2a9d -- 0x2aa8
0x2a9d:    ff ff ff 85 c0 75 2c 89  1c 24 e8                  |.....u,..$.     |
; dynamically linked function: _Unwind_Resume at 0x2aa8 -- 0x2aa9
; data inside code section at 0x2aa9 -- 0x2acc
0x2aa9:    ff ff ff c7 44 24 0c 70  2f 00 00 c7 44 24 08 3d   |....D$.p/...D$.=|
0x2ab9:    00 00 00 c7 44 24 04 68  15 00 00 c7 04 24 61 14   |....D$.h.....$a.|
0x2ac9:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x2acc -- 0x2acd
; data inside code section at 0x2acd -- 0x2ad5
0x2acd:    ff ff ff e8 df 12 00 00                            |........        |
; function: function_2ad5 at 0x2ad5 -- 0x2ad6
; dynamically linked function: __stack_chk_fail at 0x2ad6 -- 0x2ad7
; data inside code section at 0x2ad7 -- 0x2ada
0x2ad7:    ff ff ff                                           |...             |
; function: function_2ada at 0x2ada -- 0x2aff
0x2ada:    8d 5c 24 44                        	lea ebx, [esp + 0x44]
0x2ade:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x2ae2:    c7 44 24 44 28 30 00 00            	mov dword ptr [esp + 0x44], 0x3028
0x2aea:    89 1c 24                           	mov dword ptr [esp], ebx
0x2aed:    e8 8e 1a 00 00                     	call 0x4580 <unknown_4580>
0x2af2:    89 c6                              	mov esi, eax
0x2af4:    89 1c 24                           	mov dword ptr [esp], ebx
0x2af7:    e8 f4 12 00 00                     	call 0x3df0 <unknown_3df0>
0x2afc:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x2aff -- 0x2b00
0x2aff:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x2b00 -- 0x2b01
; data inside code section at 0x2b01 -- 0x2b04
0x2b01:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIh16secure_allocatorIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS2_EEjRKh
; function: _ZNSt6vectorIh16secure_allocatorIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS2_EEjRKh at 0x2b10 -- 0x2b94
0x2b10:    55                                 	push ebp
0x2b11:    57                                 	push edi
0x2b12:    56                                 	push esi
0x2b13:    53                                 	push ebx
0x2b14:    83 ec 5c                           	sub esp, 0x5c
0x2b17:    8b 5c 24 78                        	mov ebx, dword ptr [esp + 0x78]
0x2b1b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2b21:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x2b25:    31 c0                              	xor eax, eax
0x2b27:    8b 6c 24 70                        	mov ebp, dword ptr [esp + 0x70]
0x2b2b:    8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x2b2f:    8b 74 24 7c                        	mov esi, dword ptr [esp + 0x7c]
0x2b33:    85 db                              	test ebx, ebx
0x2b35:    89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x2b39:    0f 84 cd 01 00 00                  	je 0x2d0c <function_2d0c>
0x2b3f:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x2b42:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x2b45:    29 d0                              	sub eax, edx
0x2b47:    39 c3                              	cmp ebx, eax
0x2b49:    0f 86 d9 01 00 00                  	jbe 0x2d28 <function_2d28>
0x2b4f:    8b 45 00                           	mov eax, dword ptr [ebp]
0x2b52:    29 c2                              	sub edx, eax
0x2b54:    89 d1                              	mov ecx, edx
0x2b56:    f7 d1                              	not ecx
0x2b58:    39 4c 24 14                        	cmp dword ptr [esp + 0x14], ecx
0x2b5c:    0f 87 7c 03 00 00                  	ja 0x2ede <function_2ede>
0x2b62:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x2b66:    89 fb                              	mov ebx, edi
0x2b68:    3b 54 24 14                        	cmp edx, dword ptr [esp + 0x14]
0x2b6c:    c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x2b74:    0f 43 ca                           	cmovae ecx, edx
0x2b77:    29 c3                              	sub ebx, eax
0x2b79:    01 ca                              	add edx, ecx
0x2b7b:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x2b7f:    72 0c                              	jb 0x2b8d <_ZNSt6vectorIh16secure_allocatorIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS2_EEjRKh+0x7d>
0x2b81:    85 d2                              	test edx, edx
0x2b83:    0f 84 e0 02 00 00                  	je 0x2e69 <function_2e69>
0x2b89:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2b8d:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x2b91:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2b94 -- 0x2b95
0x2b94:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x2b95 -- 0x2b96
; data inside code section at 0x2b96 -- 0x2ba8
0x2b96:    ff ff ff 85 c0 89 44 24  18 0f 84 af 00 00 00 c7   |......D$........|
0x2ba6:    04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2ba8 -- 0x2bac
; data inside code section at 0x2bac -- 0x2bad
0x2bac:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x2bad -- 0x2bae
; data inside code section at 0x2bae -- 0x2bc7
0x2bae:    ff ff ff 85 c0 0f 85 c5  02 00 00 8b 4c 24 18 8b   |............L$..|
0x2bbe:    44 24 1c 8b 5c 24 18 23  1d                        |D$..\$.#.       |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2bc7 -- 0x2bcf
; data inside code section at 0x2bcf -- 0x2bd1
0x2bcf:    23 15                                              |#.              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2bd1 -- 0x2be8
; function: function_2be8 at 0x2be8 -- 0x2be9
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2be9 -- 0x2bf5
; data inside code section at 0x2bf5 -- 0x2bf6
0x2bf5:    ba                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2bf6 -- 0x2c15
; data inside code section at 0x2c15 -- 0x2c17
0x2c15:    81 fa                                              |..              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2c17 -- 0x2c2e
; function: function_2c2e at 0x2c2e -- 0x2c2f
; data inside code section at 0x2c2f -- 0x2c30
0x2c2f:    1d                                                 |.               |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2c30 -- 0x2c40
; function: function_2c40 at 0x2c40 -- 0x2c41
; data inside code section at 0x2c41 -- 0x2c43
0x2c41:    04 24                                              |.$              |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2c43 -- 0x2c47
; data inside code section at 0x2c47 -- 0x2c48
0x2c47:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x2c48 -- 0x2c49
; data inside code section at 0x2c49 -- 0x2c54
0x2c49:    ff ff ff 85 c0 0f 85 61  02 00 00                  |.......a...     |
; function: function_2c54 at 0x2c54 -- 0x2cda
0x2c54:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x2c58:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x2c5c:    03 44 24 20                        	add eax, dword ptr [esp + 0x20]
0x2c60:    85 c0                              	test eax, eax
0x2c62:    74 05                              	je 0x2c69 <function_2c54+0x15>
0x2c64:    0f b6 0e                           	movzx ecx, byte ptr [esi]
0x2c67:    88 08                              	mov byte ptr [eax], cl
0x2c69:    83 c0 01                           	add eax, 1
0x2c6c:    83 ea 01                           	sub edx, 1
0x2c6f:    75 ef                              	jne 0x2c60 <function_2c54+0xc>
0x2c71:    8b 5d 00                           	mov ebx, dword ptr [ebp]
0x2c74:    8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0x2c78:    39 fb                              	cmp ebx, edi
0x2c7a:    74 1f                              	je 0x2c9b <function_2c54+0x47>
0x2c7c:    89 da                              	mov edx, ebx
0x2c7e:    89 f0                              	mov eax, esi
0x2c80:    85 c0                              	test eax, eax
0x2c82:    74 05                              	je 0x2c89 <function_2c54+0x35>
0x2c84:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x2c87:    88 08                              	mov byte ptr [eax], cl
0x2c89:    83 c2 01                           	add edx, 1
0x2c8c:    83 c0 01                           	add eax, 1
0x2c8f:    39 fa                              	cmp edx, edi
0x2c91:    75 ed                              	jne 0x2c80 <function_2c54+0x2c>
0x2c93:    89 fe                              	mov esi, edi
0x2c95:    29 de                              	sub esi, ebx
0x2c97:    03 74 24 18                        	add esi, dword ptr [esp + 0x18]
0x2c9b:    8b 5d 04                           	mov ebx, dword ptr [ebp + 4]
0x2c9e:    03 74 24 14                        	add esi, dword ptr [esp + 0x14]
0x2ca2:    39 fb                              	cmp ebx, edi
0x2ca4:    74 21                              	je 0x2cc7 <function_2c54+0x73>
0x2ca6:    89 f8                              	mov eax, edi
0x2ca8:    89 f2                              	mov edx, esi
0x2caa:    8d b6 00 00 00 00                  	lea esi, [esi]
0x2cb0:    85 d2                              	test edx, edx
0x2cb2:    74 05                              	je 0x2cb9 <function_2c54+0x65>
0x2cb4:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x2cb7:    88 0a                              	mov byte ptr [edx], cl
0x2cb9:    83 c0 01                           	add eax, 1
0x2cbc:    83 c2 01                           	add edx, 1
0x2cbf:    39 d8                              	cmp eax, ebx
0x2cc1:    75 ed                              	jne 0x2cb0 <function_2c54+0x5c>
0x2cc3:    29 f8                              	sub eax, edi
0x2cc5:    01 c6                              	add esi, eax
0x2cc7:    8b 5d 00                           	mov ebx, dword ptr [ebp]
0x2cca:    8b 7d 08                           	mov edi, dword ptr [ebp + 8]
0x2ccd:    85 db                              	test ebx, ebx
0x2ccf:    74 2a                              	je 0x2cfb <function_2cfb>
0x2cd1:    29 df                              	sub edi, ebx
0x2cd3:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x2cd7:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2cda -- 0x2cdb
0x2cda:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x2cdb -- 0x2cdc
; data inside code section at 0x2cdc -- 0x2cf7
0x2cdc:    ff ff ff 89 7c 24 08 89  5c 24 04 c7 04 24 00 00   |....|$..\$...$..|
0x2cec:    00 00 e8 9d 20 00 00 89  1c 24 e8                  |.... ....$.     |
; dynamically linked function: _ZdlPv at 0x2cf7 -- 0x2cf8
; data inside code section at 0x2cf8 -- 0x2cfb
0x2cf8:    ff ff ff                                           |...             |
; function: function_2cfb at 0x2cfb -- 0x2d0c
0x2cfb:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x2cff:    89 75 04                           	mov dword ptr [ebp + 4], esi
0x2d02:    89 45 00                           	mov dword ptr [ebp], eax
0x2d05:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x2d09:    89 45 08                           	mov dword ptr [ebp + 8], eax
; function: function_2d0c at 0x2d0c -- 0x2d25
0x2d0c:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x2d10:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x2d17:    0f 85 79 01 00 00                  	jne 0x2e96 <function_2e96>
0x2d1d:    83 c4 5c                           	add esp, 0x5c
0x2d20:    5b                                 	pop ebx
0x2d21:    5e                                 	pop esi
0x2d22:    5f                                 	pop edi
0x2d23:    5d                                 	pop ebp
0x2d24:    c3                                 	ret 
; data inside code section at 0x2d25 -- 0x2d28
0x2d25:    8d 76 00                                           |.v.             |
; function: function_2d28 at 0x2d28 -- 0x2d8c
0x2d28:    89 d1                              	mov ecx, edx
0x2d2a:    0f b6 1e                           	movzx ebx, byte ptr [esi]
0x2d2d:    89 d0                              	mov eax, edx
0x2d2f:    29 f9                              	sub ecx, edi
0x2d31:    39 4c 24 14                        	cmp dword ptr [esp + 0x14], ecx
0x2d35:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x2d39:    73 6d                              	jae 0x2da8 <function_2da8>
0x2d3b:    2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0x2d3f:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x2d43:    89 d0                              	mov eax, edx
0x2d45:    3b 54 24 18                        	cmp edx, dword ptr [esp + 0x18]
0x2d49:    74 25                              	je 0x2d70 <function_2d28+0x48>
0x2d4b:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x2d4f:    89 d6                              	mov esi, edx
0x2d51:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x2d58:    85 c0                              	test eax, eax
0x2d5a:    74 05                              	je 0x2d61 <function_2d28+0x39>
0x2d5c:    0f b6 11                           	movzx edx, byte ptr [ecx]
0x2d5f:    88 10                              	mov byte ptr [eax], dl
0x2d61:    83 c1 01                           	add ecx, 1
0x2d64:    83 c0 01                           	add eax, 1
0x2d67:    39 f1                              	cmp ecx, esi
0x2d69:    75 ed                              	jne 0x2d58 <function_2d28+0x30>
0x2d6b:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x2d6e:    89 f2                              	mov edx, esi
0x2d70:    03 44 24 14                        	add eax, dword ptr [esp + 0x14]
0x2d74:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x2d77:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x2d7b:    29 f8                              	sub eax, edi
0x2d7d:    74 12                              	je 0x2d91 <function_2d91>
0x2d7f:    29 c2                              	sub edx, eax
0x2d81:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2d85:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x2d89:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x2d8c -- 0x2d8d
0x2d8c:    e8                                                 |.               |
; dynamically linked function: memmove at 0x2d8d -- 0x2d8e
; data inside code section at 0x2d8e -- 0x2d91
0x2d8e:    ff ff ff                                           |...             |
; function: function_2d91 at 0x2d91 -- 0x2da8
0x2d91:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x2d95:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x2d9c:    0f 85 f4 00 00 00                  	jne 0x2e96 <function_2e96>
0x2da2:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x2da6:    eb 62                              	jmp 0x2e0a <function_2e0a>
; function: function_2da8 at 0x2da8 -- 0x2e0a
0x2da8:    8b 74 24 14                        	mov esi, dword ptr [esp + 0x14]
0x2dac:    2b 74 24 18                        	sub esi, dword ptr [esp + 0x18]
0x2db0:    74 17                              	je 0x2dc9 <function_2da8+0x21>
0x2db2:    89 f1                              	mov ecx, esi
0x2db4:    8d 74 26 00                        	lea esi, [esi]
0x2db8:    85 c0                              	test eax, eax
0x2dba:    74 02                              	je 0x2dbe <function_2da8+0x16>
0x2dbc:    88 18                              	mov byte ptr [eax], bl
0x2dbe:    83 c0 01                           	add eax, 1
0x2dc1:    83 e9 01                           	sub ecx, 1
0x2dc4:    75 f2                              	jne 0x2db8 <function_2da8+0x10>
0x2dc6:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x2dc9:    01 f0                              	add eax, esi
0x2dcb:    39 fa                              	cmp edx, edi
0x2dcd:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x2dd0:    74 1c                              	je 0x2dee <function_2da8+0x46>
0x2dd2:    89 f9                              	mov ecx, edi
0x2dd4:    89 d6                              	mov esi, edx
0x2dd6:    66 90                              	nop 
0x2dd8:    85 c0                              	test eax, eax
0x2dda:    74 05                              	je 0x2de1 <function_2da8+0x39>
0x2ddc:    0f b6 11                           	movzx edx, byte ptr [ecx]
0x2ddf:    88 10                              	mov byte ptr [eax], dl
0x2de1:    83 c1 01                           	add ecx, 1
0x2de4:    83 c0 01                           	add eax, 1
0x2de7:    39 f1                              	cmp ecx, esi
0x2de9:    75 ed                              	jne 0x2dd8 <function_2da8+0x30>
0x2deb:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x2dee:    03 44 24 18                        	add eax, dword ptr [esp + 0x18]
0x2df2:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x2df6:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x2dfd:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x2e00:    0f 85 90 00 00 00                  	jne 0x2e96 <function_2e96>
0x2e06:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
; function: function_2e0a at 0x2e0a -- 0x2e20
0x2e0a:    0f b6 db                           	movzx ebx, bl
0x2e0d:    89 5c 24 74                        	mov dword ptr [esp + 0x74], ebx
0x2e11:    89 7c 24 70                        	mov dword ptr [esp + 0x70], edi
0x2e15:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x2e19:    83 c4 5c                           	add esp, 0x5c
0x2e1c:    5b                                 	pop ebx
0x2e1d:    5e                                 	pop esi
0x2e1e:    5f                                 	pop edi
0x2e1f:    5d                                 	pop ebp
; data inside code section at 0x2e20 -- 0x2e21
0x2e20:    e9                                                 |.               |
; dynamically linked function: memset at 0x2e21 -- 0x2e22
; data inside code section at 0x2e22 -- 0x2e28
0x2e22:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_2e28 at 0x2e28 -- 0x2e29
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2e29 -- 0x2e34
; data inside code section at 0x2e34 -- 0x2e35
0x2e34:    e8                                                 |.               |
; dynamically linked function: mlock at 0x2e35 -- 0x2e36
; data inside code section at 0x2e36 -- 0x2e55
0x2e36:    ff ff ff 8d 4c 24 3c 8d  44 24 28 89 5c 24 3c c7   |....L$<.D$(.\$<.|
0x2e46:    44 24 40 01 00 00 00 89  4c 24 08 c7 44 24 04      |D$@.....L$..D$. |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2e55 -- 0x2e69
; function: function_2e69 at 0x2e69 -- 0x2e7e
0x2e69:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x2e71:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x2e79:    e9 d6 fd ff ff                     	jmp 0x2c54 <function_2c54>
; data inside code section at 0x2e7e -- 0x2e96
0x2e7e:    8d 5c 24 44 89 44 24 48  c7 44 24 44 28 30 00 00   |.\$D.D$H.D$D(0..|
0x2e8e:    89 1c 24 e8 da 19 00 00                            |..$.....        |
; function: function_2e96 at 0x2e96 -- 0x2e97
; dynamically linked function: __stack_chk_fail at 0x2e97 -- 0x2e98
; data inside code section at 0x2e98 -- 0x2e9c
0x2e98:    ff ff ff 89                                        |....            |
; function: function_2e9c at 0x2e9c -- 0x2e9d
0x2e9c:    c3                                 	ret 
; data inside code section at 0x2e9d -- 0x2ea0
0x2e9d:    c7 04 24                                           |..$             |
; dynamically linked function: _ZN17LockedPageManager8instanceE at 0x2ea0 -- 0x2ea4
; data inside code section at 0x2ea4 -- 0x2ea5
0x2ea4:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x2ea5 -- 0x2ea6
; data inside code section at 0x2ea6 -- 0x2eb1
0x2ea6:    ff ff ff 85 c0 75 2c 89  1c 24 e8                  |.....u,..$.     |
; dynamically linked function: _Unwind_Resume at 0x2eb1 -- 0x2eb2
; data inside code section at 0x2eb2 -- 0x2ed5
0x2eb2:    ff ff ff c7 44 24 0c 70  2f 00 00 c7 44 24 08 3d   |....D$.p/...D$.=|
0x2ec2:    00 00 00 c7 44 24 04 68  15 00 00 c7 04 24 61 14   |....D$.h.....$a.|
0x2ed2:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x2ed5 -- 0x2ed6
; data inside code section at 0x2ed6 -- 0x2ede
0x2ed6:    ff ff ff e8 c6 11 00 00                            |........        |
; function: function_2ede at 0x2ede -- 0x2ee5
0x2ede:    c7 04 24 9e 14 00 00               	mov dword ptr [esp], 0x149e ; "vector::_M_fill_insert"
; data inside code section at 0x2ee5 -- 0x2ee6
0x2ee5:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x2ee6 -- 0x2ee7
; data inside code section at 0x2ee7 -- 0x2ef8
0x2ee7:    ff ff ff 89 c6 89 1c 24  e8 ec 11 00 00 89 34 24   |.......$......4$|
0x2ef7:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x2ef8 -- 0x2ef9
; data inside code section at 0x2ef9 -- 0x2efc
0x2ef9:    ff ff ff                                           |...             |
; section: .text.startup
; function: _GLOBAL__sub_I__ZN8CCrypter20SetKeyFromPassphraseERKSbIcSt11char_traitsIcE16secure_allocatorIcEERKSt6vectorIhSaIhEEjj at 0x2f00 -- 0x2f16
0x2f00:    83 ec 2c                           	sub esp, 0x2c
0x2f03:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2f09:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2f0d:    31 c0                              	xor eax, eax
0x2f0f:    c7 04 24 1c 14 00 00               	mov dword ptr [esp], 0x141c
; data inside code section at 0x2f16 -- 0x2f17
0x2f16:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x2f17 -- 0x2f18
; data inside code section at 0x2f18 -- 0x2f1f
0x2f18:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x2f1f -- 0x2f2b
; data inside code section at 0x2f2b -- 0x2f2e
0x2f2b:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x2f2e -- 0x2f32
; data inside code section at 0x2f32 -- 0x2f33
0x2f32:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x2f33 -- 0x2f34
; data inside code section at 0x2f34 -- 0x2f36
0x2f34:    ff ff                                              |..              |
; function: function_2f36 at 0x2f36 -- 0x2f48
0x2f36:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x2f3c:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x2f42:    75 04                              	jne 0x2f48 <function_2f36+0x11>
0x2f44:    83 c4 2c                           	add esp, 0x2c
0x2f47:    c3                                 	ret 
; data inside code section at 0x2f48 -- 0x2f49
0x2f48:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2f49 -- 0x2f4a
; data inside code section at 0x2f4a -- 0x2f4d
0x2f4a:    ff ff ff                                           |...             |

;;
;; Data Segment
;;

; section: .rodata.str1.1
0x144f:    62 6f 6f 73 74 3a 3a 6c  6f 63 6b 5f 65 72 72 6f   |boost::lock_erro|   "boost::lock_error"
0x145f:    72 00                                              |r.              |
0x1461:    21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(&m)"
0x1471:    6e 6c 6f 63 6b 28 26 6d  29 00                     |nlock(&m).      |
0x147b:    61 6c 6c 6f 63 61 74 6f  72 73 2e 68 00            |allocators.h.   |   "allocators.h"
0x1488:    69 74 20 21 3d 20 68 69  73 74 6f 67 72 61 6d 2e   |it != histogram.|   "it != histogram.end()"
0x1498:    65 6e 64 28 29 00                                  |end().          |
0x149e:    76 65 63 74 6f 72 3a 3a  5f 4d 5f 66 69 6c 6c 5f   |vector::_M_fill_|   "vector::_M_fill_insert"
0x14ae:    69 6e 73 65 72 74 00                               |insert.         |
0x14b5:    ??                                                 |?               |
; section: .rodata.str1.4
0x1568:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/mutex.hpp"
0x1578:    73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x1588:    64 2f 6d 75 74 65 78 2e  68 70 70 00               |d/mutex.hpp.    |
0x1594:    83                                                 |.               |
; section: .gcc_except_table
0x1764:    ff ff 01 0e 1c 05 00 00  45 03 89 01 00 9e 01 05   |........E.......|
0x1774:    00 00 00 00 ff 00 0d 01  08 2d 03 66 01 6e 0a 00   |.........-.f.n..|
0x1784:    00 7f 00 00 00 00 00 00  ff 00 0d 01 08 2d 03 6e   |.............-.n|
0x1794:    01 76 0a 00 00 7f 00 00  00 00 00 00 ff 00 0d 01   |.v..............|
0x17a4:    08 34 03 6e 01 76 0a 00  00 7f 00 00 00 00 00 00   |.4.n.v..........|
0x17b4:    ff 00 0d 01 08 34 03 76  01 7e 0a 00 00 7f 00 00   |.....4.v.~......|
0x17c4:    00 ff ff 01 09 3b 03 75  00 82 01 05 00 00 ff ff   |.....;.u........|
0x17d4:    01 08 2a 05 5b 00 56 17  00 00 ff ff 01 22 67 05   |..*.[.V......"g.|
0x17e4:    8f 02 00 a5 01 03 da 02  00 b6 01 05 bc 02 00 be   |................|
0x17f4:    01 29 da 02 00 ea 01 05  a9 02 00 8a 02 1f 00 00   |.)..............|
0x1804:    ff ff 01 15 22 1c 00 00  a7 04 05 b1 04 00 be 04   |...."...........|
0x1814:    05 00 00 d6 04 05 e0 04  00 ff ff 01 0b a7 02 05   |................|
0x1824:    b6 02 00 c3 02 05 00 00  ff ff 01 11 c9 01 05 00   |................|
0x1834:    00 91 02 05 b0 04 00 ad  02 9d 02 00 00 ff ff 01   |................|
0x1844:    1c b3 01 83 02 00 00 dc  04 05 f2 04 00 87 05 05   |................|
0x1854:    00 00 cd 05 05 d2 05 00  df 05 05 00 00 ff ff 01   |................|
0x1864:    3a bb 03 05 c4 0b 00 da  04 05 9e 0b 00 83 05 1c   |:...............|
0x1874:    00 00 c4 09 05 c3 0a 00  84 0a 05 a9 0a 00 a4 0a   |................|
0x1884:    05 c5 0a 00 be 0a 19 00  00 f8 0a 05 9a 0b 00 95   |................|
0x1894:    0b 05 9c 0b 00 db 0b 05  84 0c 00 ff ff 01 17 84   |................|
0x18a4:    01 df 02 00 00 cc 06 05  8b 07 00 81 07 05 da 07   |................|
0x18b4:    00 a0 07 4c 00 00 ff ff  01 2c ac 01 05 00 00 86   |...L.....,......|
0x18c4:    03 05 ed 06 00 a0 03 65  00 00 c4 04 05 c7 06 00   |.......e........|
0x18d4:    f8 04 e9 01 00 00 a8 07  05 00 00 c0 07 05 ca 07   |................|
0x18e4:    00 d7 07 05 00 00 ff ff  01 3a bb 03 05 c4 0b 00   |.........:......|
0x18f4:    da 04 05 9e 0b 00 83 05  1c 00 00 c4 09 05 c3 0a   |................|
0x1904:    00 84 0a 05 a9 0a 00 a4  0a 05 c5 0a 00 be 0a 19   |................|
0x1914:    00 00 f8 0a 05 9a 0b 00  95 0b 05 9c 0b 00 db 0b   |................|
0x1924:    05 84 0c 00 ??                                     |....?           |
; section: .ctors
0x2f50:    00 2f 00 00 ??                                     |./..?           |
; section: .rodata
0x2f70:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 6d 75 74 65   |void boost::mute|   "void boost::mutex::unlock()"
0x2f80:    78 3a 3a 75 6e 6c 6f 63  6b 28 29 00               |x::unlock().    |
0x2f8c:    00 00 00 00                                        |....            |
0x2f90:    76 6f 69 64 20 4c 6f 63  6b 65 64 50 61 67 65 4d   |void LockedPageM|   "void LockedPageManagerBase<Locker>::UnlockRange(void*, size_t) [with Locker = MemoryPageLocker, size_t = unsigned int]"
0x2fa0:    61 6e 61 67 65 72 42 61  73 65 3c 4c 6f 63 6b 65   |anagerBase<Locke|
0x2fb0:    72 3e 3a 3a 55 6e 6c 6f  63 6b 52 61 6e 67 65 28   |r>::UnlockRange(|
0x2fc0:    76 6f 69 64 2a 2c 20 73  69 7a 65 5f 74 29 20 5b   |void*, size_t) [|
0x2fd0:    77 69 74 68 20 4c 6f 63  6b 65 72 20 3d 20 4d 65   |with Locker = Me|
0x2fe0:    6d 6f 72 79 50 61 67 65  4c 6f 63 6b 65 72 2c 20   |moryPageLocker, |
0x2ff0:    73 69 7a 65 5f 74 20 3d  20 75 6e 73 69 67 6e 65   |size_t = unsigne|
0x3000:    64 20 69 6e 74 5d 00                               |d int].         |
0x3007:    ??                                                 |?               |
; section: .rodata._ZTVN5boost16thread_exceptionE
0x3008:    00 00 00 00 10 31 00 00  30 15 00 00 10 16 00 00   |.....1..0.......|
0x3018:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost10lock_errorE
0x3020:    00 00 00 00 1c 31 00 00  d0 15 00 00 60 16 00 00   |.....1......`...|
0x3030:    c0 14 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost9exceptionE
0x3038:    00 00 00 00 28 31 00 00  00 00 00 00 00 00 00 00   |....(1..........|
0x3048:    ??                                                 |?               |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x3050:    00 00 00 00 30 31 00 00  40 19 00 00 d0 19 00 00   |....01..@.......|
0x3060:    c0 14 00 00 f8 ff ff ff  30 31 00 00 30 19 00 00   |........01..0...|
0x3070:    c0 19 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x3078:    00 00 00 00 50 31 00 00  00 00 00 00 00 00 00 00   |....P1..........|
0x3088:    20 14 00 00 f0 14 00 00  00                        | ........       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x3090:    00 00 00 00 f0 30 00 00  70 1a 00 00 10 1b 00 00   |.....0..p.......|
0x30a0:    c0 14 00 00 c0 16 00 00  f0 1c 00 00 f8 ff ff ff   |................|
0x30b0:    f0 30 00 00 60 1a 00 00  00 1b 00 00 e4 ff ff ff   |.0..`...........|
0x30c0:    f0 30 00 00 b0 16 00 00  e0 1c 00 00 50 1a 00 00   |.0..........P...|
0x30d0:    f0 1a 00 00 ??                                     |....?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x30f0:    08 00 00 00 70 31 00 00  00 00 00 00 02 00 00 00   |....p1..........|
0x3100:    30 31 00 00 02 00 00 00  50 31 00 00 02 1c 00 00   |01......P1......|
0x3110:    08                                                 |.               |
; section: .rodata._ZTIN5boost16thread_exceptionE
0x3110:    08 00 00 00 c5 31 00 00  00 00 00 00 08            |.....1.......   |
; section: .rodata._ZTIN5boost10lock_errorE
0x311c:    08 00 00 00 e0 31 00 00  10 31 00 00 08            |.....1...1...   |
; section: .rodata._ZTIN5boost9exceptionE
0x3128:    08 00 00 00 f5 31 00 00  08                        |.....1...       |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x3130:    08 00 00 00 10 32 00 00  00 00 00 00 02 00 00 00   |.....2..........|
0x3140:    1c 31 00 00 02 00 00 00  28 31 00 00 02 08 00 00   |.1......(1......|
0x3150:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x3150:    08 00 00 00 70 32 00 00  ??                        |....p2..?       |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x3170:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x3180:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x3190:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x31a0:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31b0:    4e 53 5f 31 30 6c 6f 63  6b 5f 65 72 72 6f 72 45   |NS_10lock_errorE|
0x31c0:    45 45 45 45 00 4e                                  |EEEE.N          |
; section: .rodata._ZTSN5boost16thread_exceptionE
0x31c5:    4e 35 62 6f 6f 73 74 31  36 74 68 72 65 61 64 5f   |N5boost16thread_|
0x31d5:    65 78 63 65 70 74 69 6f  6e 45 00 4e               |exceptionE.N    |
; section: .rodata._ZTSN5boost10lock_errorE
0x31e0:    4e 35 62 6f 6f 73 74 31  30 6c 6f 63 6b 5f 65 72   |N5boost10lock_er|
0x31f0:    72 6f 72 45 00 4e                                  |rorE.N          |
; section: .rodata._ZTSN5boost9exceptionE
0x31f5:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x3205:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x3210:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x3220:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x3230:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x3240:    53 5f 31 30 6c 6f 63 6b  5f 65 72 72 6f 72 45 45   |S_10lock_errorEE|
0x3250:    45 00 ??                                           |E.?             |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x3270:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x3280:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x3290:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .eh_frame
0x40d98:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x40da8:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0x40db8:   00 14 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |..../....C. f...|
0x40dc8:   41 0b 00 00 18 00 00 00  38 00 00 00 84 14 00 00   |A.......8.......|
0x40dd8:   2a 00 00 00 00 43 0e 20  61 0a 0e 04 41 0b 00 00   |*....C. a...A...|
0x40de8:   18 00 00 00 54 00 00 00  98 14 00 00 38 00 00 00   |....T.......8...|
0x40df8:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x40e08:   70 00 00 00 bc 14 00 00  38 00 00 00 00 43 0e 20   |p.......8....C. |
0x40e18:   6b 0a 0e 04 45 0b 00 00  10 00 00 00 8c 00 00 00   |k...E...........|
0x40e28:   04 15 00 00 33 00 00 00  00 43 0e 30 18 00 00 00   |....3....C.0....|
0x40e38:   a0 00 00 00 2c 15 00 00  38 00 00 00 00 43 0e 20   |....,...8....C. |
0x40e48:   6b 0a 0e 04 45 0b 00 00  20 00 00 00 bc 00 00 00   |k...E... .......|
0x40e58:   50 15 00 00 41 00 00 00  00 41 0e 08 83 02 43 0e   |P...A....A....C.|
0x40e68:   30 72 0a 0e 08 41 0e 04  c3 45 0b 00 20 00 00 00   |0r...A...E.. ...|
0x40e78:   e0 00 00 00 7c 15 00 00  41 00 00 00 00 41 0e 08   |....|...A....A..|
0x40e88:   83 02 43 0e 30 72 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0r...A...E..|
0x40e98:   10 00 00 00 04 01 00 00  a8 15 00 00 07 00 00 00   |................|
0x40ea8:   00 00 00 00 1c 00 00 00  00 00 00 00 01 7a 50 4c   |.............zPL|
0x40eb8:   52 00 01 7c 08 07 00 00  00 00 00 00 1b 0c 04 04   |R..|............|
0x40ec8:   88 01 00 00 30 00 00 00  24 00 00 00 84 15 00 00   |....0...$.......|
0x40ed8:   a3 00 00 00 04 64 17 00  00 41 0e 08 86 02 41 0e   |.....d...A....A.|
0x40ee8:   0c 83 03 43 0e 30 02 7c  0a 0e 0c 41 0e 08 c3 41   |...C.0.|...A...A|
0x40ef8:   0e 04 c6 41 0b 00 00 00  10 00 00 00 6c 01 00 00   |...A........l...|
0x40f08:   c0 17 00 00 0a 00 00 00  00 00 00 00 24 00 00 00   |............$...|
0x40f18:   6c 00 00 00 bc 17 00 00  78 00 00 00 04 78 17 00   |l.......x....x..|
0x40f28:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x40f38:   04 c3 49 0b 10 00 00 00  a8 01 00 00 14 18 00 00   |..I.............|
0x40f48:   07 00 00 00 00 00 00 00  24 00 00 00 a8 00 00 00   |........$.......|
0x40f58:   10 18 00 00 80 00 00 00  04 8c 17 00 00 41 0e 08   |.............A..|
0x40f68:   83 02 43 0e 30 02 52 0a  0e 08 41 0e 04 c3 49 0b   |..C.0.R...A...I.|
0x40f78:   10 00 00 00 e4 01 00 00  68 18 00 00 0a 00 00 00   |........h.......|
0x40f88:   00 00 00 00 10 00 00 00  f8 01 00 00 64 18 00 00   |............d...|
0x40f98:   0a 00 00 00 00 00 00 00  24 00 00 00 f8 00 00 00   |........$.......|
0x40fa8:   60 18 00 00 80 00 00 00  04 a0 17 00 00 41 0e 08   |`............A..|
0x40fb8:   83 02 43 0e 30 02 51 0a  0e 08 41 0e 04 c3 4a 0b   |..C.0.Q...A...J.|
0x40fc8:   10 00 00 00 34 02 00 00  b8 18 00 00 07 00 00 00   |....4...........|
0x40fd8:   00 00 00 00 10 00 00 00  48 02 00 00 b4 18 00 00   |........H.......|
0x40fe8:   07 00 00 00 00 00 00 00  24 00 00 00 48 01 00 00   |........$...H...|
0x40ff8:   b0 18 00 00 88 00 00 00  04 b4 17 00 00 41 0e 08   |.............A..|
0x41008:   83 02 43 0e 30 02 59 0a  0e 08 41 0e 04 c3 4a 0b   |..C.0.Y...A...J.|
0x41018:   28 00 00 00 84 02 00 00  78 fd ff ff fe 00 00 00   |(.......x.......|
0x41028:   00 43 0e 60 48 83 05 60  85 02 86 04 4c 87 03 70   |.C.`H..`....L..p|
0x41038:   0a 0e 04 c5 c7 c6 c3 41  0b 00 00 00 20 00 00 00   |.......A.... ...|
0x41048:   b0 02 00 00 4c fe ff ff  cc 00 00 00 00 43 0e 20   |....L........C. |
0x41058:   59 83 03 48 86 02 6a 0a  0e 04 c6 c3 42 0b 00 00   |Y..H..j.....B...|
0x41068:   20 00 00 00 d4 02 00 00  c8 18 00 00 45 00 00 00   | ...........E...|
0x41078:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x41088:   c3 41 0b 00 20 00 00 00  f8 02 00 00 f4 18 00 00   |.A.. ...........|
0x41098:   5d 00 00 00 00 43 0e 30  58 86 02 46 83 03 76 0a   |]....C.0X..F..v.|
0x410a8:   0e 04 c6 c3 41 0b 00 00  30 00 00 00 08 02 00 00   |....A...0.......|
0x410b8:   30 19 00 00 87 00 00 00  04 c5 17 00 00 41 0e 08   |0............A..|
0x410c8:   86 02 41 0e 0c 83 03 43  0e 30 02 68 0a 0e 0c 41   |..A....C.0.h...A|
0x410d8:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x410e8:   50 03 00 00 8c 19 00 00  07 00 00 00 00 00 00 00   |P...............|
0x410f8:   20 00 00 00 50 02 00 00  88 19 00 00 6d 00 00 00   | ...P.......m...|
0x41108:   04 d2 17 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x41118:   0e 30 00 00 28 00 00 00  74 02 00 00 d4 19 00 00   |.0..(...t.......|
0x41128:   5e 01 00 00 04 de 17 00  00 41 0e 08 85 02 41 0e   |^........A....A.|
0x41138:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x41148:   40 00 00 00 a0 02 00 00  08 1b 00 00 62 02 00 00   |@...........b...|
0x41158:   04 04 18 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x41168:   0e 10 86 04 41 0e 14 83  05 43 0e 60 03 e2 01 0a   |....A....C.`....|
0x41178:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x41188:   04 c5 43 0b 28 00 00 00  f8 03 00 00 34 1d 00 00   |..C.(.......4...|
0x41198:   49 01 00 00 00 43 0e 50  48 83 05 48 87 03 58 85   |I....C.PH..H..X.|
0x411a8:   02 86 04 02 71 0a 0e 04  c5 c7 c6 c3 44 0b 00 00   |....q.......D...|
0x411b8:   40 00 00 00 10 03 00 00  58 1e 00 00 48 01 00 00   |@.......X...H...|
0x411c8:   04 1d 18 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x411d8:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 e2 0a 0e   |....A....C.P....|
0x411e8:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x411f8:   c5 43 0b 00 34 00 00 00  68 04 00 00 64 1f 00 00   |.C..4...h...d...|
0x41208:   7c 02 00 00 00 43 0e 60  48 86 04 58 83 05 48 87   ||....C.`H..X..H.|
0x41218:   03 4c 85 02 02 f9 0a 0e  04 c5 c7 c6 c3 48 0b 03   |.L...........H..|
0x41228:   0b 01 0a 0e 04 c5 c7 c6  c3 45 0b 00 2c 00 00 00   |.........E..,...|
0x41238:   8c 03 00 00 2c fd ff ff  4a 02 00 00 04 2c 18 00   |....,...J....,..|
0x41248:   00 46 0e 80 02 4e 83 05  5d 86 04 4e 87 03 4d 85   |.F...N..]..N..M.|
0x41258:   02 76 0a 0e 04 c5 c7 c6  c3 46 0b 00 28 00 00 00   |.v.......F..(...|
0x41268:   d0 04 00 00 7c 21 00 00  d5 00 00 00 00 43 0e 50   |....|!.......C.P|
0x41278:   58 83 05 48 86 04 48 87  03 4d 85 02 02 77 0a 0e   |X..H..H..M...w..|
0x41288:   04 c5 c7 c6 c3 49 0b 00  3c 00 00 00 fc 04 00 00   |.....I..<.......|
0x41298:   30 22 00 00 e8 00 00 00  00 41 0e 08 85 02 41 0e   |0".......A....A.|
0x412a8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x412b8:   02 79 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.y...A...A...A..|
0x412c8:   c7 41 0e 04 c5 43 0b 00  40 00 00 00 28 04 00 00   |.A...C..@...(...|
0x412d8:   e0 22 00 00 e4 02 00 00  04 41 18 00 00 41 0e 08   |.".......A...A..|
0x412e8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x412f8:   05 43 0e 70 02 62 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.p.b...A...A..|
0x41308:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 44 00 00 00   |.A...A...C..D...|
0x41318:   6c 04 00 00 9c fe ff ff  09 06 00 00 04 61 18 00   |l............a..|
0x41328:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x41338:   41 0e 14 83 05 46 0e f0  01 03 5b 04 0a 0e 14 41   |A....F....[....A|
0x41348:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 47   |...A...A...A...G|
0x41358:   0b 00 00 00 58 00 00 00  b4 04 00 00 44 25 00 00   |....X.......D%..|
0x41368:   ec 03 00 00 04 9f 18 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x41378:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x41388:   03 09 02 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0x41398:   08 c7 41 0e 04 c5 44 0b  02 f4 0a 0e 14 41 0e 10   |..A...D......A..|
0x413a8:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 48 0b 00   |.A...A...A...H..|
0x413b8:   40 00 00 00 10 05 00 00  08 04 00 00 dc 03 00 00   |@...............|
0x413c8:   04 ba 18 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x413d8:   0e 10 86 04 41 0e 14 83  05 46 0e a0 02 02 54 0a   |....A....F....T.|
0x413e8:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x413f8:   04 c5 46 0b 44 00 00 00  54 05 00 00 a4 07 00 00   |..F.D...T.......|
0x41408:   09 06 00 00 04 ea 18 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x41418:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e f0   |...A....A....F..|
0x41428:   01 03 5b 04 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |..[....A...A...A|
0x41438:   0e 08 c7 41 0e 04 c5 47  0b 00 00 00 18 00 00 00   |...A...G........|
0x41448:   b0 06 00 00 4c 28 00 00  4d 00 00 00 00 43 0e 30   |....L(..M....C.0|
0x41458:   02 44 0a 0e 04 41 0b 00  ??                        |.D...A..?       |

source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_12370_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_12428_type = type { i32 (i32)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 ()* }
%vtable_12440_type = type { i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 ()* }
%vtable_12458_type = type { i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 ()* }
%vtable_12488_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_124a0_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_12510_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_12570_type = type { i32 (i32*)*, i32 (i32)* }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@global_var_428.879 = constant i32 1710507403
@global_var_400.880 = local_unnamed_addr global i32 1064
@global_var_528.881 = constant i32 1170669568
@global_var_8.883 = constant i32 20
@global_var_c.884 = constant i32 838092169
@global_var_18.885 = constant i32 355689972
@global_var_1c.886 = constant i32 20
@global_var_125d0.887 = constant i32 0
@global_var_125b8.888 = constant i32 0
@global_var_12598.889 = constant i32 5446
@global_var_124d0.890 = constant i32 8530
@global_var_1f.893 = constant i32 -402295808
@global_var_17.895 = constant i32 862319701
@mainParams = constant i32 -51903116
@global_var_77.897 = constant [6 x i8] c"D$\0C( \00"
@global_var_12470.899 = constant i32 0
@global_var_ec.901 = constant i32 -1981266547
@global_var_18b8.902 = constant [131 x i8] c"04fe8a17065a19b88f150305dda9ad209acb6bbe9b07cfaa36bcb383630b5b6f4c406a03acd0d77e2cbc4e9093c327c4f41df01c5791458066da7c1c337d0d15d3\00"
@global_var_53.904 = constant i32 1024
@global_var_78.905 = constant [5 x i8] c"$\0C( \00"
@global_var_b2.906 = constant i32 -1587206932
@global_var_12580.912 = constant i32 24572
@global_var_1ec8.913 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_12528.917 = constant i32 32535
@global_var_1253c.918 = constant i32 76100
@global_var_1e1e.919 = constant [22 x i8] c"vector::_M_insert_aux\00"
@global_var_1e34.920 = constant [24 x i8] c"vector::_M_range_insert\00"
@global_var_1e4c.921 = constant [23 x i8] c"vector::_M_fill_insert\00"
@0 = external global i32
@global_var_4.882 = constant i16* inttoptr (i32 -1587210004 to i16*)
@global_var_3.894 = constant i64 22683418422403
@global_var_e8.898 = constant i8 0
@global_var_8d.914 = constant i8 0
@global_var_12a88.915 = external constant i8*
@global_var_7.922 = constant i8 -95
@global_var_12370.923 = constant %vtable_12370_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }
@global_var_12428.910 = constant %vtable_12428_type { i32 (i32)* @_ZNK11CMainParams12GenesisBlockEv, i32 (i32)* @_ZNK14CRegTestParams18RequireRPCPasswordEv, i32 ()* @_ZNK14CRegTestParams9NetworkIDEv, i32 (i32)* @_ZNK11CMainParams10FixedSeedsEv, i32 ()* @pCurrentParams }
@global_var_12440.907 = constant %vtable_12440_type { i32 (i32)* @_ZNK11CMainParams12GenesisBlockEv, i32 (i32)* @_ZNK12CChainParams18RequireRPCPasswordEv, i32 (i32)* @_ZNK14CTestNetParams9NetworkIDEv, i32 (i32)* @_ZNK11CMainParams10FixedSeedsEv, i32 ()* @pCurrentParams }
@global_var_12458.900 = constant %vtable_12458_type { i32 (i32)* @_ZNK11CMainParams12GenesisBlockEv, i32 (i32)* @_ZNK12CChainParams18RequireRPCPasswordEv, i32 (i32)* @_ZNK11CMainParams9NetworkIDEv, i32 (i32)* @_ZNK11CMainParams10FixedSeedsEv, i32 ()* @pCurrentParams }
@global_var_12488.892 = constant %vtable_12488_type { i32 (i32*)* @_ZN12bignum_errorD1Ev, i32 (i32)* @_ZN12bignum_errorD0Ev, i32 ()* @pCurrentParams }
@global_var_124a0.891 = constant %vtable_124a0_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_12510.916 = constant %vtable_12510_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.878, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_12570.911 = constant %vtable_12570_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }

define i32 @pCurrentParams() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %v2_1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1
}

define void @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  ret void
}

define void @_Z12SelectParamsN12CChainParams7NetworkE(i32 %network) local_unnamed_addr {
dec_label_pc_29:
  %v5_43 = icmp eq i32 %network, 0
  %v10_43 = icmp eq i32 %network, 1
  br i1 %v10_43, label %dec_label_pc_5d, label %dec_label_pc_48

dec_label_pc_48:                                  ; preds = %dec_label_pc_29
  %v10_48 = icmp eq i32 %network, 2
  br i1 %v10_48, label %dec_label_pc_69, label %dec_label_pc_4d

dec_label_pc_4d:                                  ; preds = %dec_label_pc_48
  %v1_4f = icmp eq i1 %v5_43, false
  br i1 %v1_4f, label %dec_label_pc_76, label %dec_label_pc_51

dec_label_pc_51:                                  ; preds = %dec_label_pc_4d
  store i32 ptrtoint (i32* @global_var_428.879 to i32), i32* @global_var_400.880, align 4
  %v1_5b = call i32 @function_9a(i32 %network)
  ret void

dec_label_pc_5d:                                  ; preds = %dec_label_pc_29
  store i32 ptrtoint (i32* @global_var_528.881 to i32), i32* @global_var_400.880, align 4
  %v1_67 = call i32 @function_9a(i32 %network)
  ret void

dec_label_pc_69:                                  ; preds = %dec_label_pc_48
  store i32 1576, i32* @global_var_400.880, align 4
  %v1_74 = call i32 @function_9a(i32 %network)
  ret void

dec_label_pc_76:                                  ; preds = %dec_label_pc_4d
  ret void

; uselistorder directives
  uselistorder i32 (i32)* @function_9a, { 2, 1, 0 }
  uselistorder i32 %network, { 3, 4, 2, 0, 1, 5 }
}

define i32 @function_9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_9a:
  %v0_9a = load i32, i32* @ebp, align 4
  %v1_9a = add i32 %v0_9a, -12
  %v2_9a = inttoptr i32 %v1_9a to i32*
  %v3_9a = load i32, i32* %v2_9a, align 4
  %v1_9d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9d = xor i32 %v1_9d, %v3_9a
  %v3_9d = icmp eq i32 %v2_9d, 0
  store i32 %v2_9d, i32* @eax, align 4
  br i1 %v3_9d, label %bb, label %dec_label_pc_a6

bb:                                               ; preds = %dec_label_pc_9a
  %v1_a4 = call i32 @function_ab()
  br label %dec_label_pc_a6

dec_label_pc_a6:                                  ; preds = %bb, %dec_label_pc_9a
  %v2_a4 = phi i32 [ %v1_a4, %bb ], [ %v2_9d, %dec_label_pc_9a ]
  ret i32 %v2_a4
}

define i32 @function_ab() local_unnamed_addr {
dec_label_pc_ab:
  %v0_ac = load i32, i32* @eax, align 4
  ret i32 %v0_ac
}

define i1 @_Z27SelectParamsFromCommandLinev() local_unnamed_addr {
dec_label_pc_ad:
  ret i1 false
}

define i32 @function_160() local_unnamed_addr {
dec_label_pc_1ad:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_160 = load i32, i32* %eax.global-to-local, align 4
  %v1_160 = add i32 %v0_160, 1946219389
  %v2_160 = inttoptr i32 %v1_160 to i32*
  %v3_160 = load i32, i32* %v2_160, align 4
  %v4_160 = add i32 %v3_160, 1
  store i32 %v4_160, i32* %v2_160, align 4
  %v0_1ad.pre = load i32, i32* %ebp.global-to-local, align 4
  %phitmp = add i32 %v0_1ad.pre, -12
  %phitmp2 = inttoptr i32 %phitmp to i32*
  store i32 0, i32* @eax, align 4
  %v3_1ad = load i32, i32* %phitmp2, align 4
  %v1_1b0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1b0 = icmp eq i32 %v1_1b0, %v3_1ad
  br i1 %v3_1b0, label %bb, label %dec_label_pc_1b9

bb:                                               ; preds = %dec_label_pc_1ad
  %v1_1b7 = call i32 @function_20c()
  store i32 %v1_1b7, i32* @eax, align 4
  br label %dec_label_pc_1b9

dec_label_pc_1b9:                                 ; preds = %bb, %dec_label_pc_1ad
  %v0_1b9 = call i32 @function_207()
  store i32 %v0_1b9, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b9
}

define i32 @function_1bc() local_unnamed_addr {
dec_label_pc_1bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bc
}

define i32 @function_1c8() local_unnamed_addr {
dec_label_pc_1c8:
  %v0_1c8 = call i32 @function_1cc()
  ret i32 %v0_1c8
}

define i32 @function_1ca() local_unnamed_addr {
dec_label_pc_1ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ca
}

define i32 @function_1cc() local_unnamed_addr {
dec_label_pc_1cc:
  %v0_1cc = load i32, i32* @ebp, align 4
  %v1_1cc = add i32 %v0_1cc, -16
  ret i32 %v1_1cc
}

define i32 @function_1e2() local_unnamed_addr {
dec_label_pc_1e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e2
}

define i32 @function_1ee() local_unnamed_addr {
dec_label_pc_1ee:
  %v0_1ee = call i32 @function_1f2()
  ret i32 %v0_1ee
}

define i32 @function_1f0() local_unnamed_addr {
dec_label_pc_1f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f0
}

define i32 @function_1f2() local_unnamed_addr {
dec_label_pc_1f2:
  %v0_1f2 = load i32, i32* @ebp, align 4
  %v1_1f2 = add i32 %v0_1f2, -15
  ret i32 %v1_1f2
}

define i32 @function_207() local_unnamed_addr {
dec_label_pc_207:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_20c() local_unnamed_addr {
dec_label_pc_20c:
  %v0_211 = load i32, i32* @eax, align 4
  ret i32 %v0_211
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_212:
  %v0_224 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v13_22f = icmp eq i32 %__initialize_p, 1
  %v1_233 = icmp eq i1 %v13_22f, false
  br i1 %v1_233, label %bb, label %dec_label_pc_239

bb:                                               ; preds = %dec_label_pc_212
  %v4_233 = call i32 @function_3b5(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_239

dec_label_pc_239:                                 ; preds = %bb, %dec_label_pc_212
  %v13_239 = icmp eq i32 %__priority, 65535
  %v1_240 = icmp eq i1 %v13_239, false
  br i1 %v1_240, label %bb9, label %dec_label_pc_246

bb9:                                              ; preds = %dec_label_pc_239
  %v4_240 = call i32 @function_3b5(i32 %v0_224, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_246

dec_label_pc_246:                                 ; preds = %bb9, %dec_label_pc_239
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_3b5, { 1, 0 }
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_320() local_unnamed_addr {
dec_label_pc_320:
  %eax.global-to-local = alloca i32, align 4
  %v0_320 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_320
}

define i32 @function_32a() local_unnamed_addr {
dec_label_pc_32a:
  %eax.global-to-local = alloca i32, align 4
  %v0_32a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32a
}

define i32 @function_334() local_unnamed_addr {
dec_label_pc_334:
  %eax.global-to-local = alloca i32, align 4
  %v0_334 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_334
}

define i32 @function_3b5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b5:
  %v0_3b5 = load i32, i32* @ebp, align 4
  %v1_3b5 = add i32 %v0_3b5, -12
  %v2_3b5 = inttoptr i32 %v1_3b5 to i32*
  %v3_3b5 = load i32, i32* %v2_3b5, align 4
  %v1_3b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b8 = xor i32 %v1_3b8, %v3_3b5
  %v3_3b8 = icmp eq i32 %v2_3b8, 0
  store i32 %v2_3b8, i32* @eax, align 4
  br i1 %v3_3b8, label %bb, label %dec_label_pc_3c1

bb:                                               ; preds = %dec_label_pc_3b5
  %v1_3bf = call i32 @function_3c6()
  br label %dec_label_pc_3c1

dec_label_pc_3c1:                                 ; preds = %bb, %dec_label_pc_3b5
  %v2_3bf = phi i32 [ %v1_3bf, %bb ], [ %v2_3b8, %dec_label_pc_3b5 ]
  ret i32 %v2_3bf
}

define i32 @function_3c6() local_unnamed_addr {
dec_label_pc_3c6:
  %v0_3c7 = load i32, i32* @eax, align 4
  ret i32 %v0_3c7
}

define void @_GLOBAL__sub_I_pnSeed() local_unnamed_addr {
dec_label_pc_3c8:
  call void @__static_initialization_and_destruction_0(i32 1, i32 65535)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3f9

bb:                                               ; preds = %dec_label_pc_3c8
  %v1_3f7 = call i32 @function_3fe()
  br label %dec_label_pc_3f9

dec_label_pc_3f9:                                 ; preds = %bb, %dec_label_pc_3c8
  ret void

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
}

define i32 @function_3fe() local_unnamed_addr {
dec_label_pc_3fe:
  %v0_3ff = load i32, i32* @eax, align 4
  ret i32 %v0_3ff
}

define i32 @_ZNSt9exceptionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_408:
  ret i32 %arg1
}

define i32 @function_439() local_unnamed_addr {
dec_label_pc_439:
  %eax.global-to-local = alloca i32, align 4
  %v0_43a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_43a
}

define i32 @_ZNSt9bad_allocC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_43c:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_459 = call i32 @function_844(i32 %arg1)
  ret i32 %arg1
}

define i32 @_ZnwjPv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_47a:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4a6

bb:                                               ; preds = %dec_label_pc_47a
  %v3_4a4 = call i32 @function_4ab(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_4a6

dec_label_pc_4a6:                                 ; preds = %bb, %dec_label_pc_47a
  %v4_4a4 = phi i32 [ %v3_4a4, %bb ], [ %arg2, %dec_label_pc_47a ]
  ret i32 %v4_4a4
}

define i32 @function_4ab(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4ab:
  %v0_4ac = load i32, i32* @eax, align 4
  ret i32 %v0_4ac
}

define i32 @_ZdlPvS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4ad:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4d6

bb:                                               ; preds = %dec_label_pc_4ad
  %v3_4d4 = call i32 @function_4db(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_4d6

dec_label_pc_4d6:                                 ; preds = %bb, %dec_label_pc_4ad
  %v4_4d4 = phi i32 [ %v3_4d4, %bb ], [ 0, %dec_label_pc_4ad ]
  ret i32 %v4_4d4
}

define i32 @function_4db(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4db:
  %v0_4dc = load i32, i32* @eax, align 4
  ret i32 %v0_4dc
}

define i32 @_ZN9base_uintILj256EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4de:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_501

bb:                                               ; preds = %dec_label_pc_4de
  %v2_4ff = call i32 @function_506(i32 %arg1)
  br label %dec_label_pc_501

dec_label_pc_501:                                 ; preds = %bb, %dec_label_pc_4de
  %v3_4ff = phi i32 [ %v2_4ff, %bb ], [ 0, %dec_label_pc_4de ]
  ret i32 %v3_4ff
}

define i32 @function_506(i32 %arg1) local_unnamed_addr {
dec_label_pc_506:
  %v0_507 = load i32, i32* @eax, align 4
  ret i32 %v0_507
}

define i32 @_ZN7uint256C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_508:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_514 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_525 = call i32 @function_9e6(i32 %arg1)
  %v7_548107 = and i32 %v1_525, -256
  %v8_548108 = or i32 %v7_548107, 1
  store i32 %v8_548108, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_533

dec_label_pc_533:                                 ; preds = %dec_label_pc_508, %dec_label_pc_533
  %storemerge109 = phi i32 [ 0, %dec_label_pc_508 ], [ %v4_540, %dec_label_pc_533 ]
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_539 = mul i32 %storemerge109, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_539 = add i32 %v2_539, %arg1
  %v4_539 = inttoptr i32 %v3_539 to i32*
  store i32 0, i32* %v4_539, align 4
  %v4_540 = add nuw nsw i32 %storemerge109, 1
  %v6_548.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp106 = sub nsw i32 5, %storemerge109
  %v11_544 = and i32 %tmp106, %v4_540
  %v12_544 = icmp slt i32 %v11_544, 0
  %v13_544 = icmp eq i32 %v4_540, 7
  %v14_544 = icmp slt i32 %v4_540, 7
  %v3_548 = icmp ne i1 %v14_544, %v12_544
  %v4_548 = or i1 %v13_544, %v3_548
  %v5_548 = zext i1 %v4_548 to i32
  %v7_548 = and i32 %v6_548.pre, -256
  %v8_548 = or i32 %v5_548, %v7_548
  store i32 %v8_548, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_540, 8
  br i1 %exitcond, label %dec_label_pc_54f, label %dec_label_pc_533

dec_label_pc_54f:                                 ; preds = %dec_label_pc_533
  store i32 %v0_514, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_55b

bb:                                               ; preds = %dec_label_pc_54f
  %v1_559 = call i32 @function_560()
  store i32 %v1_559, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_55b

dec_label_pc_55b:                                 ; preds = %bb, %dec_label_pc_54f
  %v2_559 = phi i32 [ %v1_559, %bb ], [ 0, %dec_label_pc_54f ]
  ret i32 %v2_559

; uselistorder directives
  uselistorder i32 %storemerge109, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_533, { 1, 0 }
}

define i32 @function_560() local_unnamed_addr {
dec_label_pc_560:
  %v0_561 = load i32, i32* @eax, align 4
  ret i32 %v0_561
}

define i32 @_ZN7uint256C1ERK9base_uintILj256EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_562:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_574 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_585 = call i32 @function_a40(i32 %arg1)
  %v7_5ad109 = and i32 %v1_585, -256
  %v8_5ad110 = or i32 %v7_5ad109, 1
  store i32 %v8_5ad110, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_593

dec_label_pc_593:                                 ; preds = %dec_label_pc_562, %dec_label_pc_593
  %storemerge111 = phi i32 [ 0, %dec_label_pc_562 ], [ %v4_5a5, %dec_label_pc_593 ]
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_599 = mul i32 %storemerge111, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_599 = add i32 %v2_599, %arg2
  %v4_599 = inttoptr i32 %v3_599 to i32*
  %v5_599 = load i32, i32* %v4_599, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_5a2 = add i32 %v2_599, %arg1
  %v5_5a2 = inttoptr i32 %v4_5a2 to i32*
  store i32 %v5_599, i32* %v5_5a2, align 4
  %v4_5a5 = add nuw nsw i32 %storemerge111, 1
  %v6_5ad.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp108 = sub nsw i32 5, %storemerge111
  %v11_5a9 = and i32 %tmp108, %v4_5a5
  %v12_5a9 = icmp slt i32 %v11_5a9, 0
  %v13_5a9 = icmp eq i32 %v4_5a5, 7
  %v14_5a9 = icmp slt i32 %v4_5a5, 7
  %v3_5ad = icmp ne i1 %v14_5a9, %v12_5a9
  %v4_5ad = or i1 %v13_5a9, %v3_5ad
  %v5_5ad = zext i1 %v4_5ad to i32
  %v7_5ad = and i32 %v6_5ad.pre, -256
  %v8_5ad = or i32 %v5_5ad, %v7_5ad
  store i32 %v8_5ad, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_5a5, 8
  br i1 %exitcond, label %dec_label_pc_5b4, label %dec_label_pc_593

dec_label_pc_5b4:                                 ; preds = %dec_label_pc_593
  store i32 %v0_574, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5c0

bb:                                               ; preds = %dec_label_pc_5b4
  %v1_5be = call i32 @function_5c5()
  store i32 %v1_5be, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_5c0

dec_label_pc_5c0:                                 ; preds = %bb, %dec_label_pc_5b4
  %v2_5be = phi i32 [ %v1_5be, %bb ], [ 0, %dec_label_pc_5b4 ]
  ret i32 %v2_5be

; uselistorder directives
  uselistorder i32 %storemerge111, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 6, 2, 3, 4, 1, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_593, { 1, 0 }
}

define i32 @function_5c5() local_unnamed_addr {
dec_label_pc_5c5:
  %v0_5c6 = load i32, i32* @eax, align 4
  ret i32 %v0_5c6
}

define i32 @_ZN7uint256C1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5c8:
  %eax.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v0_5e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp107, i32* @eax, align 4
  %v1_5f1 = call i32 @function_aa6(i32 %tmp107)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v2_60d = add i32 %tmp107, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_60d = inttoptr i32 %v2_60d to i32*
  store i32 %arg3, i32* %v3_60d, align 4
  %v6_62e111 = load i32, i32* %eax.global-to-local, align 4
  %v7_62e112 = and i32 %v6_62e111, -256
  %v8_62e113 = or i32 %v7_62e112, 1
  store i32 %v8_62e113, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_619

dec_label_pc_619:                                 ; preds = %dec_label_pc_5c8, %dec_label_pc_619
  %storemerge114 = phi i32 [ 2, %dec_label_pc_5c8 ], [ %v4_626, %dec_label_pc_619 ]
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v2_61f = mul i32 %storemerge114, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_61f = add i32 %v2_61f, %tmp107
  %v4_61f = inttoptr i32 %v3_61f to i32*
  store i32 0, i32* %v4_61f, align 4
  %v4_626 = add nuw nsw i32 %storemerge114, 1
  %tmp110 = sub nsw i32 5, %storemerge114
  %v11_62a = and i32 %tmp110, %v4_626
  %v12_62a = icmp slt i32 %v11_62a, 0
  %v13_62a = icmp eq i32 %v4_626, 7
  %v14_62a = icmp slt i32 %v4_626, 7
  %v3_62e = icmp ne i1 %v14_62a, %v12_62a
  %v4_62e = or i1 %v13_62a, %v3_62e
  %v5_62e = zext i1 %v4_62e to i32
  %v6_62e = load i32, i32* %eax.global-to-local, align 4
  %v7_62e = and i32 %v6_62e, -256
  %v8_62e = or i32 %v5_62e, %v7_62e
  store i32 %v8_62e, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_626, 8
  br i1 %exitcond, label %dec_label_pc_635, label %dec_label_pc_619

dec_label_pc_635:                                 ; preds = %dec_label_pc_619
  store i32 %v0_5e0, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_641

bb:                                               ; preds = %dec_label_pc_635
  %v1_63f = call i32 @function_646()
  store i32 %v1_63f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_641

dec_label_pc_641:                                 ; preds = %bb, %dec_label_pc_635
  %v2_63f = phi i32 [ %v1_63f, %bb ], [ 0, %dec_label_pc_635 ]
  ret i32 %v2_63f

; uselistorder directives
  uselistorder i32 %storemerge114, { 0, 2, 1 }
  uselistorder i32 %tmp107, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6, 7, 8 }
  uselistorder label %dec_label_pc_619, { 1, 0 }
}

define i32 @function_646() local_unnamed_addr {
dec_label_pc_646:
  %v0_647 = load i32, i32* @eax, align 4
  ret i32 %v0_647
}

define i32 @CADDR_TIME_VERSION(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_648:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_682 = add i32 %tmp106, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_682 = inttoptr i32 %v2_682 to i32*
  store i32 %arg3, i32* %v3_682, align 4
  br label %dec_label_pc_68e

dec_label_pc_68e:                                 ; preds = %dec_label_pc_648, %dec_label_pc_68e
  %storemerge109 = phi i32 [ 2, %dec_label_pc_648 ], [ %v4_69b, %dec_label_pc_68e ]
  %v2_694 = mul i32 %storemerge109, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_694 = add i32 %v2_694, %tmp106
  %v4_694 = inttoptr i32 %v3_694 to i32*
  store i32 0, i32* %v4_694, align 4
  %v4_69b = add nuw nsw i32 %storemerge109, 1
  store i32 %tmp106, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_69b, 8
  br i1 %exitcond, label %dec_label_pc_6aa, label %dec_label_pc_68e

dec_label_pc_6aa:                                 ; preds = %dec_label_pc_68e
  br i1 true, label %bb, label %dec_label_pc_6b9

bb:                                               ; preds = %dec_label_pc_6aa
  %v1_6b7 = call i32 @function_6be()
  br label %dec_label_pc_6b9

dec_label_pc_6b9:                                 ; preds = %bb, %dec_label_pc_6aa
  %v2_6b7 = phi i32 [ %v1_6b7, %bb ], [ %tmp106, %dec_label_pc_6aa ]
  ret i32 %v2_6b7

; uselistorder directives
  uselistorder i32 %storemerge109, { 1, 0 }
  uselistorder i32 %tmp106, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_68e, { 1, 0 }
}

define i32 @function_6be() local_unnamed_addr {
dec_label_pc_6be:
  %v0_6bf = load i32, i32* @eax, align 4
  ret i32 %v0_6bf
}

define i32 @_ZN7uint256C1ERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6c0:
  store i32 %arg1, i32* @eax, align 4
  %v1_6e3 = call i32 @function_b9e(i32 %arg1)
  store i32 %arg2, i32* @edx, align 4
  %v2_6f5 = call i32 @function_6128(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_706

bb:                                               ; preds = %dec_label_pc_6c0
  %v1_704 = call i32 @function_70b()
  br label %dec_label_pc_706

dec_label_pc_706:                                 ; preds = %bb, %dec_label_pc_6c0
  %v2_704 = phi i32 [ %v1_704, %bb ], [ 0, %dec_label_pc_6c0 ]
  ret i32 %v2_704

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_70b() local_unnamed_addr {
dec_label_pc_70b:
  %v0_70c = load i32, i32* @eax, align 4
  ret i32 %v0_70c
}

define i32 @_ZrsRK9base_uintILj256EEj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_70d:
  %stack_var_-48 = alloca i32, align 4
  %v2_737 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_737, i32* @eax, align 4
  %v2_73d = call i32 @function_c6f(i32 %v2_737, i32 %arg2)
  store i32 %v2_737, i32* @eax, align 4
  %v2_74f = call i32 @function_61bf(i32 %v2_737, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  %v2_75e = call i32 @function_c6f(i32 %arg1, i32 %v2_74f)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_c6f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZeqRK7uint256S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_77b:
  %tmp109 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp109
}

define i32 @function_81e() local_unnamed_addr {
dec_label_pc_81e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_81e = load i32, i32* %ecx.global-to-local, align 4
  %v1_81e = add i32 %v0_81e, -1
  store i32 %v1_81e, i32* %ecx.global-to-local, align 4
  %v0_820 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_820
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_822:
  ret i32 %arg1
}

define i32 @function_844(i32 %arg1) local_unnamed_addr {
dec_label_pc_844:
  %v0_844 = load i32, i32* @ecx, align 4
  %v1_844 = add i32 %v0_844, 255
  %v0_846 = load i32, i32* @ebx, align 4
  %v1_846 = add i32 %v0_846, 862319685
  %v2_846 = inttoptr i32 %v1_846 to i8*
  %v3_846 = load i8, i8* %v2_846, align 1
  %v5_846 = trunc i32 %v1_844 to i8
  %v6_846 = load i1, i1* @cf, align 1
  %v7_846 = zext i1 %v6_846 to i8
  %v8_846 = add i8 %v3_846, %v5_846
  %v9_846 = add i8 %v8_846, %v7_846
  store i8 %v9_846, i8* %v2_846, align 1
  %v0_84c = load i32, i32* @eax, align 4
  %v1_84c = add i32 %v0_84c, 20
  %v10_84c = icmp eq i32 %v1_84c, 0
  store i32 %v1_84c, i32* @eax, align 4
  br i1 %v10_84c, label %bb, label %dec_label_pc_853

bb:                                               ; preds = %dec_label_pc_844
  %v1_851 = call i32 @function_858()
  br label %dec_label_pc_853

dec_label_pc_853:                                 ; preds = %bb, %dec_label_pc_844
  %v3_851 = phi i32 [ %v1_851, %bb ], [ %v1_84c, %dec_label_pc_844 ]
  ret i32 %v3_851
}

define i32 @function_858() local_unnamed_addr {
dec_label_pc_858:
  %v0_859 = load i32, i32* @eax, align 4
  ret i32 %v0_859
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_85a:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_88b

bb:                                               ; preds = %dec_label_pc_85a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_889 = call i32 @function_890(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_88b

dec_label_pc_88b:                                 ; preds = %bb, %dec_label_pc_85a
  %v4_889 = phi i32 [ %v3_889, %bb ], [ 0, %dec_label_pc_85a ]
  ret i32 %v4_889

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_890(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_890:
  %v0_891 = load i32, i32* @eax, align 4
  ret i32 %v0_891
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_892:
  %ebp.global-to-local = alloca i32, align 4
  %v0_892 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_892, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_8ca:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_125d0.887 to i32), i32* %arg1, align 4
  %v1_8ed = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_8f3 = call i32 @function_6546(i32 %v1_8ed)
  %v1_8fb = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_8fb = inttoptr i32 %v1_8fb to i32*
  store i32 0, i32* %v2_8fb, align 4
  %v1_905 = add i32 %tmp100, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_905 = inttoptr i32 %v1_905 to i32*
  store i32 0, i32* %v2_905, align 4
  %v1_90f = add i32 %tmp100, 16
  %v2_90f = inttoptr i32 %v1_90f to i32*
  store i32 -1, i32* %v2_90f, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_922

bb:                                               ; preds = %dec_label_pc_8ca
  %v1_920 = call i32 @function_927()
  br label %dec_label_pc_922

dec_label_pc_922:                                 ; preds = %bb, %dec_label_pc_8ca
  %v2_920 = phi i32 [ %v1_920, %bb ], [ 0, %dec_label_pc_8ca ]
  ret i32 %v2_920

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_927() local_unnamed_addr {
dec_label_pc_927:
  %v0_928 = load i32, i32* @eax, align 4
  ret i32 %v0_928
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_92a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_125d0.887 to i32), i32* %arg1, align 4
  %v1_94d = add i32 %tmp99, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_94d, i32* @eax, align 4
  %v2_953 = call i32 @function_65da(i32 %v1_94d)
  %v1_962 = call i32 @function_986()
  ret i32 %tmp99
}

define i32 @function_96f() local_unnamed_addr {
dec_label_pc_96f:
  %v0_96f = call i32 @function_986()
  ret i32 %v0_96f

; uselistorder directives
  uselistorder i32 ()* @function_986, { 1, 0 }
}

define i32 @function_986() local_unnamed_addr {
dec_label_pc_986:
  %v0_986 = load i32, i32* @ebp, align 4
  %v1_986 = add i32 %v0_986, -12
  %v2_986 = inttoptr i32 %v1_986 to i32*
  %v3_986 = load i32, i32* %v2_986, align 4
  %v1_989 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_989 = xor i32 %v1_989, %v3_986
  %v3_989 = icmp eq i32 %v2_989, 0
  store i32 %v2_989, i32* @eax, align 4
  br i1 %v3_989, label %bb, label %dec_label_pc_992

bb:                                               ; preds = %dec_label_pc_986
  %v1_990 = call i32 @function_997()
  br label %dec_label_pc_992

dec_label_pc_992:                                 ; preds = %bb, %dec_label_pc_986
  %v2_990 = phi i32 [ %v1_990, %bb ], [ %v2_989, %dec_label_pc_986 ]
  ret i32 %v2_990
}

define i32 @function_997() local_unnamed_addr {
dec_label_pc_997:
  %v0_998 = load i32, i32* @eax, align 4
  ret i32 %v0_998
}

define i32 @function_9e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_9e6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a40(i32 %arg1) local_unnamed_addr {
dec_label_pc_a40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_aa6(i32 %arg1) local_unnamed_addr {
dec_label_pc_aa6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_b9e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c6f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c6f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bc:
  store i32 %arg1, i32* @eax, align 4
  %v1_12d9 = call i32 @function_1be6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_12f9() local_unnamed_addr {
dec_label_pc_12f9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12f9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12f9 = add i32 %v0_12f9, -1
  store i32 %v1_12f9, i32* %ecx.global-to-local, align 4
  %v0_12fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12fb
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12fc:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_125b8.888 to i32), i32* %arg1, align 4
  %v2_1326 = call i32 @function_1333(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_1333(i32 %arg1) local_unnamed_addr {
dec_label_pc_1333:
  %v0_1333 = load i32, i32* @ebp, align 4
  %v1_1333 = add i32 %v0_1333, -12
  %v2_1333 = inttoptr i32 %v1_1333 to i32*
  %v3_1333 = load i32, i32* %v2_1333, align 4
  %v1_1336 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1336 = xor i32 %v1_1336, %v3_1333
  %v3_1336 = icmp eq i32 %v2_1336, 0
  store i32 %v2_1336, i32* @eax, align 4
  br i1 %v3_1336, label %bb, label %dec_label_pc_133f

bb:                                               ; preds = %dec_label_pc_1333
  %v1_133d = call i32 @function_1344()
  br label %dec_label_pc_133f

dec_label_pc_133f:                                ; preds = %bb, %dec_label_pc_1333
  %v2_133d = phi i32 [ %v1_133d, %bb ], [ %v2_1336, %dec_label_pc_1333 ]
  ret i32 %v2_133d
}

define i32 @function_1344() local_unnamed_addr {
dec_label_pc_1344:
  %v0_1345 = load i32, i32* @eax, align 4
  ret i32 %v0_1345
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1346:
  store i32 %arg1, i32* @eax, align 4
  %v1_1363 = call i32 @function_2642(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1383() local_unnamed_addr {
dec_label_pc_1383:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1383 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1383 = add i32 %v0_1383, -1
  store i32 %v1_1383, i32* %ecx.global-to-local, align 4
  %v0_1385 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1385
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1386:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i16*, align 4
  %v2_13a4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_13a4, i32* @eax, align 4
  %tmp111 = bitcast i32* %stack_var_-28 to i16*
  store i16* %tmp111, i16** %stack_var_-60, align 4
  %v2_13aa = call i32 @function_7002(i32 %v2_13a4)
  %v1_13b2 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_13b2, i32* @eax, align 4
  %v3_13b5 = inttoptr i32 %v1_13b2 to i16*
  store i16* %v3_13b5, i16** %stack_var_-60, align 4
  %v2_13b8 = call i32 @function_706c(i32 %v1_13b2)
  %v10_13c0 = icmp eq i32 %v2_13b8, 0
  br i1 %v10_13c0, label %dec_label_pc_13ff, label %dec_label_pc_13c6

dec_label_pc_13c6:                                ; preds = %dec_label_pc_1386
  %v1_13c9 = inttoptr i32 %v2_13b8 to i32*
  %v2_13c9 = load i32, i32* %v1_13c9, align 4
  %v1_13cb = add i32 %v2_13c9, 20
  %v1_13ce = inttoptr i32 %v1_13cb to i32*
  %v2_13ce = load i32, i32* %v1_13ce, align 4
  store i32 %v2_13ce, i32* @ecx, align 4
  %v2_13d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13b8, i32* %edx.global-to-local, align 4
  %tmp113 = bitcast i32* %stack_var_-24 to i16*
  store i16* %tmp113, i16** %stack_var_-60, align 4
  store i32 %v2_13a4, i32* @eax, align 4
  store i32 %v2_13a4, i32* %stack_var_-64, align 4
  %v4_13ef = call i32 @function_709c(i32 %v2_13a4, i32 %v2_13d0, i32 %v2_13b8)
  store i32 %v2_13d0, i32* %stack_var_-64, align 4
  %v1_13fa = call i32 @function_7036(i32 %v2_13d0)
  br label %dec_label_pc_13ff

dec_label_pc_13ff:                                ; preds = %dec_label_pc_13c6, %dec_label_pc_1386
  %stack_var_-56.0 = phi i32 [ %tmp98, %dec_label_pc_1386 ], [ %v2_13b8, %dec_label_pc_13c6 ]
  %v1_1402 = add i32 %arg2, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_1402 = inttoptr i32 %v1_1402 to i32*
  %v3_1402 = load i32, i32* %v2_1402, align 4
  store i32 %v3_1402, i32* %edx.global-to-local, align 4
  %v2_1408 = add i32 %arg1, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_1408 = inttoptr i32 %v2_1408 to i32*
  store i32 %v3_1402, i32* %v3_1408, align 4
  %v1_140e = add i32 %arg2, 16
  %v2_140e = inttoptr i32 %v1_140e to i32*
  %v3_140e = load i32, i32* %v2_140e, align 4
  store i32 %v3_140e, i32* %edx.global-to-local, align 4
  %v2_1414 = add i32 %arg1, 16
  %v3_1414 = inttoptr i32 %v2_1414 to i32*
  store i32 %v3_140e, i32* %v3_1414, align 4
  %v1_141a = add i32 %arg2, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_141a = inttoptr i32 %v1_141a to i32*
  %v3_141a = load i32, i32* %v2_141a, align 4
  %v2_1420 = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_1420 = inttoptr i32 %v2_1420 to i32*
  store i32 %v3_141a, i32* %v3_1420, align 4
  %v1_1426 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_1426, i32* %edx.global-to-local, align 4
  store i32 %v2_13a4, i32* @eax, align 4
  %v1_142c = load i32, i32* @esp, align 4
  %v2_142c = add i32 %v1_142c, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_142c = inttoptr i32 %v2_142c to i32*
  store i32 %v2_13a4, i32* %v3_142c, align 4
  %v0_1430 = load i32, i32* %edx.global-to-local, align 4
  %v1_1430 = load i32, i32* @esp, align 4
  %v2_1430 = inttoptr i32 %v1_1430 to i32*
  store i32 %v0_1430, i32* %v2_1430, align 4
  %v0_1433 = load i32, i32* %stack_var_-64, align 4
  %v1_1433 = load i16*, i16** %stack_var_-60, align 4
  %v2_1433 = ptrtoint i16* %v1_1433 to i32
  %v4_1433 = call i32 @function_709c(i32 %v0_1433, i32 %v2_1433, i32 %stack_var_-56.0)
  %v1_143b = load i32, i32* @esp, align 4
  %v2_143b = inttoptr i32 %v1_143b to i32*
  store i32 %v2_13a4, i32* %v2_143b, align 4
  %v0_143e = load i32, i32* %stack_var_-64, align 4
  %v1_143e = call i32 @function_7036(i32 %v0_143e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_144f

bb:                                               ; preds = %dec_label_pc_13ff
  %v1_144d = call i32 @function_147c()
  store i32 %v1_144d, i32* @eax, align 4
  br label %dec_label_pc_144f

dec_label_pc_144f:                                ; preds = %bb, %dec_label_pc_13ff
  %v0_144f = call i32 @function_1477()
  ret i32 %v0_144f

; uselistorder directives
  uselistorder i32 %v2_13d0, { 1, 0, 2 }
  uselistorder i32 %v2_13a4, { 3, 4, 5, 1, 0, 2, 6, 7 }
  uselistorder i16** %stack_var_-60, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_709c, { 1, 0 }
}

define i32 @function_1451() local_unnamed_addr {
dec_label_pc_1451:
  %v0_1453 = load i32, i32* @ebp, align 4
  %v1_1453 = add i32 %v0_1453, -20
  %v1_1459 = call i32 @function_7036(i32 %v1_1453)
  %v0_145e = call i32 @function_1462()
  ret i32 %v0_145e
}

define i32 @function_1460() local_unnamed_addr {
dec_label_pc_1460:
  %eax.global-to-local = alloca i32, align 4
  %v0_1460 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1460
}

define i32 @function_1462() local_unnamed_addr {
dec_label_pc_1462:
  %v0_1462 = load i32, i32* @ebp, align 4
  %v1_1462 = add i32 %v0_1462, -24
  %v1_1468 = call i32 @function_7036(i32 %v1_1462)
  %v0_146d = load i32, i32* @ebx, align 4
  ret i32 %v0_146d

; uselistorder directives
  uselistorder i32 (i32)* @function_7036, { 3, 2, 1, 0 }
}

define i32 @function_1477() local_unnamed_addr {
dec_label_pc_1477:
  %v0_1477 = load i32, i32* @eax, align 4
  ret i32 %v0_1477
}

define i32 @function_147c() local_unnamed_addr {
dec_label_pc_147c:
  %v0_1480 = load i32, i32* @eax, align 4
  ret i32 %v0_1480
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1481:
  %v2_14aa = load i32, i32* %arg1, align 4
  %v4_14aa = add i32 %v2_14aa, %arg2
  store i32 %v4_14aa, i32* %arg1, align 4
  store i32 %v2_14aa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14c0

bb:                                               ; preds = %dec_label_pc_1481
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_14be = call i32 @function_14c5(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_14c0

dec_label_pc_14c0:                                ; preds = %bb, %dec_label_pc_1481
  %v4_14be = phi i32 [ %v3_14be, %bb ], [ %v2_14aa, %dec_label_pc_1481 ]
  ret i32 %v4_14be

; uselistorder directives
  uselistorder i32 %v2_14aa, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_14c5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c5:
  %v0_14ca = load i32, i32* @eax, align 4
  ret i32 %v0_14ca
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_14cb:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14cb = load i32, i32* %ebp.global-to-local, align 4
  %v2_14e8 = load i32, i32* %arg1, align 4
  %v3_14e8 = add i32 %v2_14e8, 1
  store i32 %v3_14e8, i32* %arg1, align 4
  store i32 %v0_14cb, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14fe:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_12598.889 to i32), i32* %arg1, align 4
  %v1_1521 = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_1521 = inttoptr i32 %v1_1521 to i32*
  store i32 1, i32* %v2_1521, align 4
  %v1_152b = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_152b = inttoptr i32 %v1_152b to i32*
  store i32 1, i32* %v2_152b, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_153e

bb:                                               ; preds = %dec_label_pc_14fe
  %v2_153c = call i32 @function_1543(i32 %tmp100)
  br label %dec_label_pc_153e

dec_label_pc_153e:                                ; preds = %bb, %dec_label_pc_14fe
  %v3_153c = phi i32 [ %v2_153c, %bb ], [ 0, %dec_label_pc_14fe ]
  ret i32 %v3_153c
}

define i32 @function_1543(i32 %arg1) local_unnamed_addr {
dec_label_pc_1543:
  %v0_1544 = load i32, i32* @eax, align 4
  ret i32 %v0_1544
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1546:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_12598.889 to i32), i32* %arg1, align 4
  %v2_1570 = call i32 @function_157d(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_157d(i32 %arg1) local_unnamed_addr {
dec_label_pc_157d:
  %v0_157d = load i32, i32* @ebp, align 4
  %v1_157d = add i32 %v0_157d, -12
  %v2_157d = inttoptr i32 %v1_157d to i32*
  %v3_157d = load i32, i32* %v2_157d, align 4
  %v1_1580 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1580 = xor i32 %v1_1580, %v3_157d
  %v3_1580 = icmp eq i32 %v2_1580, 0
  store i32 %v2_1580, i32* @eax, align 4
  br i1 %v3_1580, label %bb, label %dec_label_pc_1589

bb:                                               ; preds = %dec_label_pc_157d
  %v1_1587 = call i32 @function_158e()
  br label %dec_label_pc_1589

dec_label_pc_1589:                                ; preds = %bb, %dec_label_pc_157d
  %v2_1587 = phi i32 [ %v1_1587, %bb ], [ %v2_1580, %dec_label_pc_157d ]
  ret i32 %v2_1587
}

define i32 @function_158e() local_unnamed_addr {
dec_label_pc_158e:
  %v0_158f = load i32, i32* @eax, align 4
  ret i32 %v0_158f
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1590:
  store i32 %arg1, i32* @eax, align 4
  %v1_15ad = call i32 @function_2ad6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_15cd() local_unnamed_addr {
dec_label_pc_15cd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_15cd = add i32 %v0_15cd, -1
  store i32 %v1_15cd, i32* %ecx.global-to-local, align 4
  %v0_15cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15cf
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_15d0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15d0 = load i32, i32* %ebp.global-to-local, align 4
  %v10_15e7 = icmp eq i32* %arg1, null
  br i1 %v10_15e7, label %dec_label_pc_15ff, label %dec_label_pc_15ed

dec_label_pc_15ed:                                ; preds = %dec_label_pc_15d0
  br label %dec_label_pc_15ff

dec_label_pc_15ff:                                ; preds = %dec_label_pc_15ed, %dec_label_pc_15d0
  store i32 %v0_15d0, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1612:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1643

bb:                                               ; preds = %dec_label_pc_1612
  %v1_162c = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_1641 = call i32 @function_1648(i32 %v1_162c)
  br label %dec_label_pc_1643

dec_label_pc_1643:                                ; preds = %bb, %dec_label_pc_1612
  %v4_1641 = phi i32 [ %v3_1641, %bb ], [ 0, %dec_label_pc_1612 ]
  ret i32 %v4_1641
}

define i32 @function_1648(i32 %arg1) local_unnamed_addr {
dec_label_pc_1648:
  %v0_1649 = load i32, i32* @eax, align 4
  ret i32 %v0_1649
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_164a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1664 = add i32 %tmp102, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_1664, i32* @eax, align 4
  %v3_1672 = call i32 @function_2acb(i32 %v1_1664, i32 -1)
  %v10_1677 = icmp eq i32 %v3_1672, 1
  %v5_167d = icmp eq i1 %v10_1677, false
  br i1 %v5_167d, label %dec_label_pc_169e, label %dec_label_pc_1681

dec_label_pc_1681:                                ; preds = %dec_label_pc_164a
  store i32 %tmp102, i32* @eax, align 4
  %v2_1699 = call i32 @function_2cfc(i32 %tmp102)
  br label %dec_label_pc_169e

dec_label_pc_169e:                                ; preds = %dec_label_pc_1681, %dec_label_pc_164a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16aa

bb:                                               ; preds = %dec_label_pc_169e
  %v1_16a8 = call i32 @function_16af()
  br label %dec_label_pc_16aa

dec_label_pc_16aa:                                ; preds = %bb, %dec_label_pc_169e
  %v2_16a8 = phi i32 [ %v1_16a8, %bb ], [ 0, %dec_label_pc_169e ]
  ret i32 %v2_16a8

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0, 2 }
}

define i32 @function_16af() local_unnamed_addr {
dec_label_pc_16af:
  %v0_16b0 = load i32, i32* @eax, align 4
  ret i32 %v0_16b0
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16b2:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_16cc = add i32 %tmp102, ptrtoint (i32* @global_var_8.883 to i32)
  store i32 %v1_16cc, i32* @eax, align 4
  %v2_16da = call i32 @function_2b33(i32 %v1_16cc, i32 -1)
  %v10_16df = icmp eq i32 %v2_16da, 1
  %v5_16e5 = icmp eq i1 %v10_16df, false
  br i1 %v5_16e5, label %dec_label_pc_16fb, label %dec_label_pc_16e9

dec_label_pc_16e9:                                ; preds = %dec_label_pc_16b2
  br label %dec_label_pc_16fb

dec_label_pc_16fb:                                ; preds = %dec_label_pc_16e9, %dec_label_pc_16b2
  ret i32 0
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_170e:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_170e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_170e, i32* %stack_var_-4, align 4
  %v4_170e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_170e, i32* @ebp, align 4
  %v2_1728 = load i32, i32* %arg1, align 4
  %v1_172a = icmp eq i32 %v2_1728, 0
  br i1 %v1_172a, label %dec_label_pc_173b, label %dec_label_pc_172e

dec_label_pc_172e:                                ; preds = %dec_label_pc_170e
  %v2_1731 = load i32, i32* %arg1, align 4
  store i32 %v2_1731, i32* @eax, align 4
  %v1_1736 = call i32 @function_2d58(i32 %v2_1731)
  %v2_174c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_173b

dec_label_pc_173b:                                ; preds = %dec_label_pc_172e, %dec_label_pc_170e
  %v2_174c = phi i32 [ %v2_174c.pre, %dec_label_pc_172e ], [ %v0_170e, %dec_label_pc_170e ]
  store i32 %v2_174c, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_174e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_174e = load i32, i32* %ebp.global-to-local, align 4
  %v1_176e = inttoptr i32 %arg2 to i32*
  %v2_176e = load i32, i32* %v1_176e, align 4
  store i32 %v2_176e, i32* %arg1, align 4
  %v1_177a = icmp eq i32 %v2_176e, 0
  br i1 %v1_177a, label %dec_label_pc_178b, label %dec_label_pc_177e

dec_label_pc_177e:                                ; preds = %dec_label_pc_174e
  br label %dec_label_pc_178b

dec_label_pc_178b:                                ; preds = %dec_label_pc_177e, %dec_label_pc_174e
  store i32 %v0_174e, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_179e:
  ret i32 0
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17e5

bb:                                               ; preds = %dec_label_pc_17c2
  %v2_17e3 = call i32 @function_17ea(i32 %arg1)
  br label %dec_label_pc_17e5

dec_label_pc_17e5:                                ; preds = %bb, %dec_label_pc_17c2
  %v3_17e3 = phi i32 [ %v2_17e3, %bb ], [ 0, %dec_label_pc_17c2 ]
  ret i32 %v3_17e3
}

define i32 @function_17ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ea:
  %v0_17eb = load i32, i32* @eax, align 4
  ret i32 %v0_17eb
}

define i32 @_ZNSt14numeric_limitsIjE3maxEv() local_unnamed_addr {
dec_label_pc_17ec:
  %v0_17f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_180e

bb:                                               ; preds = %dec_label_pc_17ec
  %v2_180c = call i32 @function_1813(i32 %v0_17f2)
  br label %dec_label_pc_180e

dec_label_pc_180e:                                ; preds = %bb, %dec_label_pc_17ec
  %v3_180c = phi i32 [ %v2_180c, %bb ], [ -1, %dec_label_pc_17ec ]
  ret i32 %v3_180c
}

define i32 @function_1813(i32 %arg1) local_unnamed_addr {
dec_label_pc_1813:
  %v0_1814 = load i32, i32* @eax, align 4
  ret i32 %v0_1814
}

define i32 @function_1be6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2052:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_125d0.887 to i32), i32* %arg1, align 4
  %v1_207b = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v1_2081 = add i32 %tmp104, ptrtoint (i16** @global_var_4.882 to i32)
  %v4_208b = call i32 @function_7fb2(i32 %v1_2081, i32 %v1_207b)
  %v1_2093 = add i32 %arg2, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_2093 = inttoptr i32 %v1_2093 to i32*
  %v3_2093 = load i32, i32* %v2_2093, align 4
  %v2_2099 = add i32 %tmp104, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_2099 = inttoptr i32 %v2_2099 to i32*
  store i32 %v3_2093, i32* %v3_2099, align 4
  %v1_209f = add i32 %arg2, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_209f = inttoptr i32 %v1_209f to i32*
  %v3_209f = load i32, i32* %v2_209f, align 4
  %v2_20a5 = add i32 %tmp104, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_20a5 = inttoptr i32 %v2_20a5 to i32*
  store i32 %v3_209f, i32* %v3_20a5, align 4
  %v1_20ab = add i32 %arg2, 16
  %v2_20ab = inttoptr i32 %v1_20ab to i32*
  %v3_20ab = load i32, i32* %v2_20ab, align 4
  %v2_20b1 = add i32 %tmp104, 16
  %v3_20b1 = inttoptr i32 %v2_20b1 to i32*
  store i32 %v3_20ab, i32* %v3_20b1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20c0

bb:                                               ; preds = %dec_label_pc_2052
  %v1_20be = call i32 @function_20c5()
  br label %dec_label_pc_20c0

dec_label_pc_20c0:                                ; preds = %bb, %dec_label_pc_2052
  %v2_20be = phi i32 [ %v1_20be, %bb ], [ 0, %dec_label_pc_2052 ]
  ret i32 %v2_20be

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_20c5() local_unnamed_addr {
dec_label_pc_20c5:
  %v0_20c6 = load i32, i32* @eax, align 4
  ret i32 %v0_20c6
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c8:
  %v1_20e2 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_20e2, i32* @eax, align 4
  %v2_20e8 = call i32 @function_37d6(i32 %v1_20e2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20f9

bb:                                               ; preds = %dec_label_pc_20c8
  %v1_20f7 = call i32 @function_20fe()
  br label %dec_label_pc_20f9

dec_label_pc_20f9:                                ; preds = %bb, %dec_label_pc_20c8
  %v2_20f7 = phi i32 [ %v1_20f7, %bb ], [ 0, %dec_label_pc_20c8 ]
  ret i32 %v2_20f7
}

define i32 @function_20fe() local_unnamed_addr {
dec_label_pc_20fe:
  %v0_20ff = load i32, i32* @eax, align 4
  ret i32 %v0_20ff
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2100:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_2120 = inttoptr i32 %arg2 to i32*
  %v2_2120 = load i32, i32* %v1_2120, align 4
  store i32 %v2_2120, i32* %arg1, align 4
  %v1_212a = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v1_2130 = add i32 %tmp104, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_2130, i32* @eax, align 4
  %v4_213a = call i32 @function_384e(i32 %v1_2130, i32 %v1_212a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_214b

bb:                                               ; preds = %dec_label_pc_2100
  %v1_2149 = call i32 @function_2150()
  br label %dec_label_pc_214b

dec_label_pc_214b:                                ; preds = %bb, %dec_label_pc_2100
  %v2_2149 = phi i32 [ %v1_2149, %bb ], [ 0, %dec_label_pc_2100 ]
  ret i32 %v2_2149

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2150() local_unnamed_addr {
dec_label_pc_2150:
  %v0_2151 = load i32, i32* @eax, align 4
  ret i32 %v0_2151
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2152:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_124d0.890 to i32), i32* %arg1, align 4
  %v1_2178 = call i32 @function_3914(i32 %tmp100)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21a0

bb:                                               ; preds = %dec_label_pc_2152
  %v1_219e = call i32 @function_21a5()
  br label %dec_label_pc_21a0

dec_label_pc_21a0:                                ; preds = %bb, %dec_label_pc_2152
  %v2_219e = phi i32 [ %v1_219e, %bb ], [ 0, %dec_label_pc_2152 ]
  ret i32 %v2_219e
}

define i32 @function_21a5() local_unnamed_addr {
dec_label_pc_21a5:
  %v0_21a6 = load i32, i32* @eax, align 4
  ret i32 %v0_21a6
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a8:
  store i32 %arg1, i32* @eax, align 4
  %v1_21c5 = call i32 @function_42fa(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_21e5() local_unnamed_addr {
dec_label_pc_21e5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_21e5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_21e5 = add i32 %v0_21e5, -1
  store i32 %v1_21e5, i32* %ecx.global-to-local, align 4
  %v0_21e7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21e7
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21e8:
  %v15_2208 = icmp eq i32 %arg1, %arg2
  %v1_220b = zext i1 %v15_2208 to i32
  %v3_220b = and i32 %arg1, -256
  %v4_220b = or i32 %v1_220b, %v3_220b
  store i32 %v4_220b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_221a

bb:                                               ; preds = %dec_label_pc_21e8
  %v3_2218 = call i32 @function_221f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_221a

dec_label_pc_221a:                                ; preds = %bb, %dec_label_pc_21e8
  %v4_2218 = phi i32 [ %v3_2218, %bb ], [ %v4_220b, %dec_label_pc_21e8 ]
  ret i32 %v4_2218

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_221f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_221f:
  %v0_2220 = load i32, i32* @eax, align 4
  ret i32 %v0_2220
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2222:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_2253 = add i32 %tmp104, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_2253 = inttoptr i32 %v2_2253 to i32*
  store i32 %arg3, i32* %v3_2253, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2262

bb:                                               ; preds = %dec_label_pc_2222
  %v4_2260 = call i32 @function_2267(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2262

dec_label_pc_2262:                                ; preds = %bb, %dec_label_pc_2222
  %v5_2260 = phi i32 [ %v4_2260, %bb ], [ 0, %dec_label_pc_2222 ]
  ret i32 %v5_2260
}

define i32 @function_2267(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2267:
  %v0_2268 = load i32, i32* @eax, align 4
  ret i32 %v0_2268
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2269:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2289 = add i32 %tmp102, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_2289 = inttoptr i32 %v1_2289 to i32*
  %v3_2289 = load i32, i32* %v2_2289, align 4
  %v1_228f = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_228f = inttoptr i32 %v1_228f to i32*
  %v3_228f = load i32, i32* %v2_228f, align 4
  %v12_2292 = icmp eq i32 %v3_2289, %v3_228f
  %v1_2294 = icmp eq i1 %v12_2292, false
  br i1 %v1_2294, label %dec_label_pc_22ab, label %dec_label_pc_2296

dec_label_pc_2296:                                ; preds = %dec_label_pc_2269
  %v2_2299 = load i32, i32* %arg1, align 4
  %v1_229e = inttoptr i32 %arg2 to i32*
  %v2_229e = load i32, i32* %v1_229e, align 4
  %v12_22a0 = icmp eq i32 %v2_2299, %v2_229e
  %v1_22a2 = icmp eq i1 %v12_22a0, false
  br i1 %v1_22a2, label %dec_label_pc_22ab, label %dec_label_pc_22b0

dec_label_pc_22ab:                                ; preds = %dec_label_pc_2296, %dec_label_pc_2269
  br label %dec_label_pc_22b0

dec_label_pc_22b0:                                ; preds = %dec_label_pc_2296, %dec_label_pc_22ab
  %storemerge = phi i32 [ 0, %dec_label_pc_22ab ], [ 1, %dec_label_pc_2296 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22bc

bb:                                               ; preds = %dec_label_pc_22b0
  %v1_22ba = call i32 @function_22c1()
  br label %dec_label_pc_22bc

dec_label_pc_22bc:                                ; preds = %bb, %dec_label_pc_22b0
  %v2_22ba = phi i32 [ %v1_22ba, %bb ], [ %storemerge, %dec_label_pc_22b0 ]
  ret i32 %v2_22ba

; uselistorder directives
  uselistorder label %dec_label_pc_22b0, { 1, 0 }
}

define i32 @function_22c1() local_unnamed_addr {
dec_label_pc_22c1:
  %v0_22c2 = load i32, i32* @eax, align 4
  ret i32 %v0_22c2
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22c4:
  %v2_22de = load i32, i32* %arg1, align 4
  store i32 %v2_22de, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22ec

bb:                                               ; preds = %dec_label_pc_22c4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_22ea = call i32 @function_22f1(i32 %tmp100)
  br label %dec_label_pc_22ec

dec_label_pc_22ec:                                ; preds = %bb, %dec_label_pc_22c4
  %v3_22ea = phi i32 [ %v2_22ea, %bb ], [ %v2_22de, %dec_label_pc_22c4 ]
  ret i32 %v3_22ea

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_22f1:
  %v0_22f2 = load i32, i32* @eax, align 4
  ret i32 %v0_22f2
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22f4:
  %v1_230e = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_230e = inttoptr i32 %v1_230e to i32*
  %v3_230e = load i32, i32* %v2_230e, align 4
  store i32 %v3_230e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_231d

bb:                                               ; preds = %dec_label_pc_22f4
  %v2_231b = call i32 @function_2322(i32 %arg1)
  br label %dec_label_pc_231d

dec_label_pc_231d:                                ; preds = %bb, %dec_label_pc_22f4
  %v3_231b = phi i32 [ %v2_231b, %bb ], [ %v3_230e, %dec_label_pc_22f4 ]
  ret i32 %v3_231b
}

define i32 @function_2322(i32 %arg1) local_unnamed_addr {
dec_label_pc_2322:
  %v0_2323 = load i32, i32* @eax, align 4
  ret i32 %v0_2323
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2324:
  %v1_2345 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_2345 = inttoptr i32 %v1_2345 to i32*
  %v3_2345 = load i32, i32* %v2_2345, align 4
  %v1_2348 = inttoptr i32 %v3_2345 to i32*
  %v2_2348 = load i32, i32* %v1_2348, align 4
  %v1_234a = add i32 %v2_2348, ptrtoint (i32* @global_var_c.884 to i32)
  %v1_234d = inttoptr i32 %v1_234a to i32*
  %v2_234d = load i32, i32* %v1_234d, align 4
  store i32 %v2_234d, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_2355 = call i32 @function_45e8(i32 %arg2)
  %v3_235d = load i32, i32* %v2_2345, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2382

bb:                                               ; preds = %dec_label_pc_2324
  %v4_2380 = call i32 @function_2387(i32 %arg1, i32 %v3_235d, i32 %v1_2355)
  br label %dec_label_pc_2382

dec_label_pc_2382:                                ; preds = %bb, %dec_label_pc_2324
  %v5_2380 = phi i32 [ %v4_2380, %bb ], [ %arg1, %dec_label_pc_2324 ]
  ret i32 %v5_2380

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_2387(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2387:
  %v0_238b = load i32, i32* @eax, align 4
  ret i32 %v0_238b
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_238e:
  %v3_23c5 = call i32 @function_45b0(i32 %arg1, i32 %arg3, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23d9

bb:                                               ; preds = %dec_label_pc_238e
  %v1_23d7 = call i32 @function_23de()
  br label %dec_label_pc_23d9

dec_label_pc_23d9:                                ; preds = %bb, %dec_label_pc_238e
  %v2_23d7 = phi i32 [ %v1_23d7, %bb ], [ %arg1, %dec_label_pc_238e ]
  ret i32 %v2_23d7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_23de() local_unnamed_addr {
dec_label_pc_23de:
  %v0_23df = load i32, i32* @eax, align 4
  ret i32 %v0_23df
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23e2:
  %stack_var_-24 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v2_240f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_240f, i32* @eax, align 4
  %v4_2435 = call i32 @function_464b(i32 %v2_240f, i32 %arg3, i32 %tmp108, i32 %arg2)
  store i32 %v4_2435, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2446

bb:                                               ; preds = %dec_label_pc_23e2
  %v1_2444 = call i32 @function_244b()
  br label %dec_label_pc_2446

dec_label_pc_2446:                                ; preds = %bb, %dec_label_pc_23e2
  %v2_2444 = phi i32 [ %v1_2444, %bb ], [ %v4_2435, %dec_label_pc_23e2 ]
  ret i32 %v2_2444
}

define i32 @function_244b() local_unnamed_addr {
dec_label_pc_244b:
  %v0_244c = load i32, i32* @eax, align 4
  ret i32 %v0_244c
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_244e:
  store i32 %arg2, i32* @eax, align 4
  %v1_2477 = call i32 @function_4742(i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_2486 = call i32 @function_4636(i32 %arg1, i32 %v1_2477)
  %v4_248b = trunc i32 %v2_2486 to i8
  %v5_248b = icmp eq i8 %v4_248b, 0
  br i1 %v5_248b, label %dec_label_pc_24a6, label %dec_label_pc_248f

dec_label_pc_248f:                                ; preds = %dec_label_pc_244e
  store i32 %arg2, i32* @eax, align 4
  %v1_2495 = call i32 @function_4712(i32 %arg2)
  %v15_249a = icmp eq i32 %v1_2495, %arg3
  %v1_249d = icmp eq i1 %v15_249a, false
  br i1 %v1_249d, label %dec_label_pc_24a6, label %dec_label_pc_24ab

dec_label_pc_24a6:                                ; preds = %dec_label_pc_248f, %dec_label_pc_244e
  br label %dec_label_pc_24ab

dec_label_pc_24ab:                                ; preds = %dec_label_pc_248f, %dec_label_pc_24a6
  %storemerge = phi i32 [ 0, %dec_label_pc_24a6 ], [ 1, %dec_label_pc_248f ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_24ab, { 1, 0 }
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_24be:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_124a0_type* @global_var_124a0.891 to i32), i32* %arg1, align 4
  %v1_24e3 = add i32 %tmp99, 16
  ret i32 %v1_24e3
}

define i32 @function_2510() local_unnamed_addr {
dec_label_pc_2510:
  %v0_2510 = call i32 @function_253a()
  ret i32 %v0_2510
}

define i32 @function_253a() local_unnamed_addr {
dec_label_pc_253a:
  %v0_253a = load i32, i32* @ebp, align 4
  %v1_253a = add i32 %v0_253a, -12
  %v2_253a = inttoptr i32 %v1_253a to i32*
  %v3_253a = load i32, i32* %v2_253a, align 4
  %v1_253d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_253d = xor i32 %v1_253d, %v3_253a
  %v3_253d = icmp eq i32 %v2_253d, 0
  store i32 %v2_253d, i32* @eax, align 4
  br i1 %v3_253d, label %bb, label %dec_label_pc_2546

bb:                                               ; preds = %dec_label_pc_253a
  %v1_2544 = call i32 @function_254b()
  br label %dec_label_pc_2546

dec_label_pc_2546:                                ; preds = %bb, %dec_label_pc_253a
  %v2_2544 = phi i32 [ %v1_2544, %bb ], [ %v2_253d, %dec_label_pc_253a ]
  ret i32 %v2_2544
}

define i32 @function_254b() local_unnamed_addr {
dec_label_pc_254b:
  %v0_2551 = load i32, i32* @eax, align 4
  ret i32 %v0_2551
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_2552:
  store i32 %arg1, i32* @eax, align 4
  %v1_256f = call i32 @function_4a10(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_258f() local_unnamed_addr {
dec_label_pc_258f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_258f = load i32, i32* %ecx.global-to-local, align 4
  %v1_258f = add i32 %v0_258f, -1
  store i32 %v1_258f, i32* %ecx.global-to-local, align 4
  %v0_2591 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2591

; uselistorder directives
  uselistorder i32* %ecx.global-to-local, { 1, 0 }
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_2592:
  %v1_25ad = add i32 %arg1, 16
  ret i32 %v1_25ad
}

define i32 @function_25cc() local_unnamed_addr {
dec_label_pc_25cc:
  %eax.global-to-local = alloca i32, align 4
  %v0_25cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25cf
}

define i32 @function_2642(i32 %arg1) local_unnamed_addr {
dec_label_pc_2642:
  %v2_2644 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v14_2644 = load i32, i32* @eax, align 4
  %v15_2644 = inttoptr i32 %v14_2644 to i8*
  store i8 %v2_2644, i8* %v15_2644, align 1
  %v0_2647 = load i32, i32* @eax, align 4
  %v2_2647 = add i32 %v0_2647, 36
  %v16_2647 = and i32 %v2_2647, 255
  %v18_2647 = and i32 %v0_2647, -256
  %v19_2647 = or i32 %v16_2647, %v18_2647
  ret i32 %v19_2647

; uselistorder directives
  uselistorder i32 %v0_2647, { 1, 0 }
}

define i32 @function_264d() local_unnamed_addr {
dec_label_pc_264d:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_264d = load i32, i32* %ecx.global-to-local, align 4
  %v1_264d = add i32 %v0_264d, -1948743229
  %v2_264d = inttoptr i32 %v1_264d to i32*
  %v3_264d = load i32, i32* %v2_264d, align 4
  %v4_264d = add i32 %v3_264d, -1
  store i32 %v4_264d, i32* %v2_264d, align 4
  %v0_2655 = load i32, i32* %edx.global-to-local, align 4
  %v1_2655 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2655 = xor i32 %v1_2655, %v0_2655
  %v3_2655 = icmp eq i32 %v2_2655, 0
  store i32 %v2_2655, i32* %edx.global-to-local, align 4
  br i1 %v3_2655, label %bb, label %dec_label_pc_265e

bb:                                               ; preds = %dec_label_pc_264d
  %v1_265c = call i32 @function_26a7()
  store i32 %v1_265c, i32* @eax, align 4
  br label %dec_label_pc_265e

dec_label_pc_265e:                                ; preds = %bb, %dec_label_pc_264d
  %v0_265e = call i32 @function_26a2()
  ret i32 %v0_265e
}

define i32 @function_2661() local_unnamed_addr {
dec_label_pc_2661:
  %eax.global-to-local = alloca i32, align 4
  %v0_2661 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2661
}

define i32 @function_266d() local_unnamed_addr {
dec_label_pc_266d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_266d = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_266d
}

define i32 @function_2685() local_unnamed_addr {
dec_label_pc_2685:
  %eax.global-to-local = alloca i32, align 4
  %v0_2685 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2685
}

define i32 @function_268b() local_unnamed_addr {
dec_label_pc_268b:
  %eax.global-to-local = alloca i32, align 4
  %v0_268b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_268b
}

define i32 @function_26a2() local_unnamed_addr {
dec_label_pc_26a2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26a7() local_unnamed_addr {
dec_label_pc_26a7:
  %v0_26ab = load i32, i32* @eax, align 4
  ret i32 %v0_26ab
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ac:
  ret i32 %arg1
}

define i32 @function_26e3() local_unnamed_addr {
dec_label_pc_26e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_26e4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26e4
}

define i32 @_ZN12bignum_errorC1ERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26e6:
  ret i32 %arg1
}

define i32 @function_272e() local_unnamed_addr {
dec_label_pc_272e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_272e = load i32, i32* %ecx.global-to-local, align 4
  %v1_272e = add i32 %v0_272e, -1
  store i32 %v1_272e, i32* %ecx.global-to-local, align 4
  %v0_2730 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2730
}

define i32 @_ZN12bignum_errorD1Ev(i32* %arg1) {
dec_label_pc_2732:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12488_type* @global_var_12488.892 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_2784() local_unnamed_addr {
dec_label_pc_2784:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2784 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2784 = add i32 %v0_2784, -1
  store i32 %v1_2784, i32* %ecx.global-to-local, align 4
  %v0_2786 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2786
}

define i32 @_ZN12bignum_errorD0Ev(i32 %arg1) {
dec_label_pc_2788:
  store i32 %arg1, i32* @eax, align 4
  %v1_27a5 = call i32 @function_4eba(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_27c5() local_unnamed_addr {
dec_label_pc_27c5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27c5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_27c5 = add i32 %v0_27c5, -1
  store i32 %v1_27c5, i32* %ecx.global-to-local, align 4
  %v0_27c7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27c7
}

define i32 @_ZN9bignum_stC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c8:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27eb

bb:                                               ; preds = %dec_label_pc_27c8
  %v2_27e9 = call i32 @function_27f0(i32 %arg1)
  br label %dec_label_pc_27eb

dec_label_pc_27eb:                                ; preds = %bb, %dec_label_pc_27c8
  %v3_27e9 = phi i32 [ %v2_27e9, %bb ], [ 0, %dec_label_pc_27c8 ]
  ret i32 %v3_27e9
}

define i32 @function_27f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27f0:
  %v0_27f1 = load i32, i32* @eax, align 4
  ret i32 %v0_27f1
}

define i32 @_ZN7CBigNumC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27f2:
  %v1_280f = call i32 @function_4fba(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_282f() local_unnamed_addr {
dec_label_pc_282f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_282f = load i32, i32* %ecx.global-to-local, align 4
  %v1_282f = add i32 %v0_282f, -1
  store i32 %v1_282f, i32* %ecx.global-to-local, align 4
  %v0_2831 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2831
}

define i32 @_ZN7CBigNumaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2832:
  ret i32 %arg1
}

define i32 @function_2879() local_unnamed_addr {
dec_label_pc_2879:
  %eax.global-to-local = alloca i32, align 4
  %v0_2879 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2879
}

define i32 @function_28dc() local_unnamed_addr {
dec_label_pc_28dc:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_28dc = add i32 %v0_28dc, 1435231301
  %v2_28dc = inttoptr i32 %v1_28dc to i32*
  %v3_28dc = load i32, i32* %v2_28dc, align 4
  %v4_28dc = add i32 %v3_28dc, -1
  store i32 %v4_28dc, i32* %v2_28dc, align 4
  %v0_28e3 = load i32, i32* %edx.global-to-local, align 4
  %v1_28e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28e3 = xor i32 %v1_28e3, %v0_28e3
  %v3_28e3 = icmp eq i32 %v2_28e3, 0
  store i32 %v2_28e3, i32* %edx.global-to-local, align 4
  br i1 %v3_28e3, label %bb, label %dec_label_pc_28ec

bb:                                               ; preds = %dec_label_pc_28dc
  %v1_28ea = call i32 @function_2921()
  store i32 %v1_28ea, i32* @eax, align 4
  br label %dec_label_pc_28ec

dec_label_pc_28ec:                                ; preds = %bb, %dec_label_pc_28dc
  %v0_28ec = call i32 @function_291c()
  ret i32 %v0_28ec
}

define i32 @function_28fb() local_unnamed_addr {
dec_label_pc_28fb:
  %v0_28fb = call i32 @function_28ff()
  ret i32 %v0_28fb
}

define i32 @function_28fd() local_unnamed_addr {
dec_label_pc_28fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_28fd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28fd
}

define i32 @function_28ff() local_unnamed_addr {
dec_label_pc_28ff:
  %v0_28ff = load i32, i32* @ebp, align 4
  %v1_28ff = add i32 %v0_28ff, -13
  ret i32 %v1_28ff
}

define i32 @function_291c() local_unnamed_addr {
dec_label_pc_291c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2921() local_unnamed_addr {
dec_label_pc_2921:
  %v0_2927 = load i32, i32* @eax, align 4
  ret i32 %v0_2927
}

define i32 @_ZN7CBigNumD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2928:
  ret i32 %arg1
}

define i32 @function_295a() local_unnamed_addr {
dec_label_pc_295a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_295a = load i32, i32* %ecx.global-to-local, align 4
  %v1_295a = add i32 %v0_295a, -1
  store i32 %v1_295a, i32* %ecx.global-to-local, align 4
  %v0_295c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_295c
}

define i32 @_ZN7CBigNumC1Ei(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_295e:
  store i32 %arg1, i32* @eax, align 4
  %v1_2981 = call i32 @function_5126(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_2990() local_unnamed_addr {
dec_label_pc_2990:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2990 = load i32, i32* @ebx, align 4
  %v1_2990 = add i32 %v0_2990, 2013323389
  %v2_2990 = inttoptr i32 %v1_2990 to i32*
  %v3_2990 = load i32, i32* %v2_2990, align 4
  %v4_2990 = add i32 %v3_2990, 1
  store i32 %v4_2990, i32* %v2_2990, align 4
  %v0_2996 = load i32, i32* %eax.global-to-local, align 4
  %v2_2996 = load i1, i1* %cf.global-to-local, align 1
  %v3_2996 = zext i1 %v2_2996 to i32
  %v4_2996 = add i32 %v0_2996, 139
  %v5_2996 = add i32 %v4_2996, %v3_2996
  %v0_2998 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2998 = add i32 %v0_2998, 1
  store i32 %v1_2998, i32* @ebp, align 4
  %v0_2999 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2999 = add i32 %v0_2999, -1
  store i32 %v1_2999, i32* %ecx.global-to-local, align 4
  %v2_299c = and i32 %v5_2996, zext (i8 ptrtoint (i16** @global_var_4.882 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_299c = and i32 %v0_2996, -256
  %v11_299c = or i32 %v2_299c, %v10_299c
  store i32 %v11_299c, i32* %eax.global-to-local, align 4
  %v1_299e = add i32 %v0_2998, -27
  %v2_299e = inttoptr i32 %v1_299e to i32*
  %v3_299e = load i32, i32* %v2_299e, align 4
  store i32 %v3_299e, i32* %eax.global-to-local, align 4
  %v1_29a4 = call i32 @function_5452(i32 %v3_299e)
  store i32 %v1_29a4, i32* %eax.global-to-local, align 4
  %v0_29a9 = call i32 @function_29c6()
  store i32 %v0_29a9, i32* %eax.global-to-local, align 4
  ret i32 %v0_29a9

; uselistorder directives
  uselistorder i32 %v0_2996, { 1, 0 }
}

define i32 @function_29ab() local_unnamed_addr {
dec_label_pc_29ab:
  %ebp.global-to-local = alloca i32, align 4
  %v0_29ab = load i32, i32* %ebp.global-to-local, align 4
  %v1_29bb = add i32 %v0_29ab, -28
  %v2_29bb = inttoptr i32 %v1_29bb to i32*
  %v3_29bb = load i32, i32* %v2_29bb, align 4
  ret i32 %v3_29bb
}

define i32 @function_29c6() local_unnamed_addr {
dec_label_pc_29c6:
  %v0_29c6 = load i32, i32* @ebp, align 4
  %v1_29c6 = add i32 %v0_29c6, -12
  %v2_29c6 = inttoptr i32 %v1_29c6 to i32*
  %v3_29c6 = load i32, i32* %v2_29c6, align 4
  %v1_29c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29c9 = xor i32 %v1_29c9, %v3_29c6
  %v3_29c9 = icmp eq i32 %v2_29c9, 0
  store i32 %v2_29c9, i32* @eax, align 4
  br i1 %v3_29c9, label %bb, label %dec_label_pc_29d2

bb:                                               ; preds = %dec_label_pc_29c6
  %v1_29d0 = call i32 @function_29d7()
  br label %dec_label_pc_29d2

dec_label_pc_29d2:                                ; preds = %bb, %dec_label_pc_29c6
  %v2_29d0 = phi i32 [ %v1_29d0, %bb ], [ %v2_29c9, %dec_label_pc_29c6 ]
  ret i32 %v2_29d0
}

define i32 @function_29d7() local_unnamed_addr {
dec_label_pc_29d7:
  %v0_29d8 = load i32, i32* @eax, align 4
  ret i32 %v0_29d8
}

define i32 @_ZN7CBigNumC1Ex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29da:
  store i32 %arg1, i32* @eax, align 4
  %v1_2a03 = call i32 @function_51a2(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_2a3c() local_unnamed_addr {
dec_label_pc_2a3c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a3c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a3c = add i32 %v0_2a3c, -1
  store i32 %v1_2a3c, i32* %ecx.global-to-local, align 4
  %v0_2a3e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a3e
}

define i32 @_ZN7CBigNumC1E7uint256(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_2a40:
  store i32 %arg1, i32* @eax, align 4
  %v1_2a8d = call i32 @function_5208(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_2acb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2acb:
  %v0_2ace = load i32, i32* @ebp, align 4
  %v1_2ace = add i32 %v0_2ace, -32
  %v2_2ace = inttoptr i32 %v1_2ace to i32*
  %v3_2ace = load i32, i32* %v2_2ace, align 4
  ret i32 %v3_2ace
}

define i32 @function_2ad6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad6:
  %v0_2ad6 = load i32, i32* @ebp, align 4
  %v1_2ad6 = add i32 %v0_2ad6, 1
  store i32 %v1_2ad6, i32* @ebp, align 4
  %v0_2ad9 = load i32, i32* @eax, align 4
  %v2_2ad9 = add i32 %v0_2ad9, 36
  %v16_2ad9 = and i32 %v2_2ad9, 255
  %v18_2ad9 = and i32 %v0_2ad9, -256
  %v19_2ad9 = or i32 %v16_2ad9, %v18_2ad9
  store i32 %v19_2ad9, i32* @eax, align 4
  %v0_2adb = call i32 @function_578a()
  %v0_2ae0 = load i32, i32* @ebp, align 4
  %v1_2ae0 = add i32 %v0_2ae0, -12
  %v2_2ae0 = inttoptr i32 %v1_2ae0 to i32*
  %v3_2ae0 = load i32, i32* %v2_2ae0, align 4
  %v1_2ae3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ae3 = xor i32 %v1_2ae3, %v3_2ae0
  %v3_2ae3 = icmp eq i32 %v2_2ae3, 0
  store i32 %v2_2ae3, i32* @eax, align 4
  br i1 %v3_2ae3, label %bb, label %dec_label_pc_2aec

bb:                                               ; preds = %dec_label_pc_2ad6
  %v1_2aea = call i32 @function_2af1()
  br label %dec_label_pc_2aec

dec_label_pc_2aec:                                ; preds = %bb, %dec_label_pc_2ad6
  %v3_2aea = phi i32 [ %v1_2aea, %bb ], [ %v2_2ae3, %dec_label_pc_2ad6 ]
  ret i32 %v3_2aea

; uselistorder directives
  uselistorder i32 %v0_2ad9, { 1, 0 }
}

define i32 @function_2af1() local_unnamed_addr {
dec_label_pc_2af1:
  %v0_2af2 = load i32, i32* @eax, align 4
  ret i32 %v0_2af2
}

define i32 @_ZN7CBigNum8setulongEm(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2af4:
  ret i32 %arg1
}

define i32 @function_2b33(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b33:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b33 = load i32, i32* @eax, align 4
  %v1_2b33 = trunc i32 %v0_2b33 to i8
  %v2_2b33 = add i8 %v1_2b33, 36
  %v16_2b33 = zext i8 %v2_2b33 to i32
  %v18_2b33 = and i32 %v0_2b33, -256
  %v19_2b33 = or i32 %v16_2b33, %v18_2b33
  store i32 %v19_2b33, i32* %eax.global-to-local, align 4
  %v1_2b35 = inttoptr i32 %v19_2b33 to i8*
  %v2_2b35 = load i8, i8* %v1_2b35, align 1
  %v5_2b35 = or i8 %v2_2b35, %v2_2b33
  store i8 %v5_2b35, i8* %v1_2b35, align 1
  %v0_2b37 = load i32, i32* %eax.global-to-local, align 4
  %v1_2b37 = inttoptr i32 %v0_2b37 to i8*
  %v2_2b37 = load i8, i8* %v1_2b37, align 1
  %v4_2b37 = trunc i32 %v0_2b37 to i8
  %v5_2b37 = add i8 %v2_2b37, %v4_2b37
  store i8 %v5_2b37, i8* %v1_2b37, align 1
  %v22_2b37 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_2b37
}

define i32 @function_2b3f() local_unnamed_addr {
dec_label_pc_2b3f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b3f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b3f
}

define i32 @function_2bb0() local_unnamed_addr {
dec_label_pc_2bb0:
  %v0_2bb0 = call i32 @function_2bb4()
  ret i32 %v0_2bb0
}

define i32 @function_2bb2() local_unnamed_addr {
dec_label_pc_2bb2:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bb2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bb2
}

define i32 @function_2bb4() local_unnamed_addr {
dec_label_pc_2bb4:
  %v0_2bb4 = load i32, i32* @ebp, align 4
  %v1_2bb4 = add i32 %v0_2bb4, -13
  ret i32 %v1_2bb4
}

define i32 @function_2be1(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2be1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2be1 = add i32 %v0_2be1, 1583034564
  %v2_2be1 = inttoptr i32 %v1_2be1 to i32*
  %v3_2be1 = load i32, i32* %v2_2be1, align 4
  %v4_2be1 = add i32 %v3_2be1, 1
  store i32 %v4_2be1, i32* %v2_2be1, align 4
  %v0_2be8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2be8
}

define i32 @_ZN7CBigNum8setint64Ex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bea:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-26 = alloca i32, align 4
  %v16_2c12 = ptrtoint i32* %stack_var_-26 to i32
  %tmp128 = bitcast i32* %stack_var_-26 to i8*
  %v11_2c18 = icmp slt i32 %arg3, 0
  %v1_2c1c = icmp eq i1 %v11_2c18, false
  br i1 %v1_2c1c, label %dec_label_pc_2c40, label %dec_label_pc_2c1e

dec_label_pc_2c1e:                                ; preds = %dec_label_pc_2bea
  %v1_2c23 = sub i32 -1, %arg2
  store i32 %v1_2c23, i32* %eax.global-to-local, align 4
  %v1_2c2a = sub i32 -1, %arg3
  %v4_2c32 = sub i32 0, %arg2
  %v8_2c32 = icmp ugt i32 %v1_2c23, %v4_2c32
  %v5_2c36 = zext i1 %v8_2c32 to i32
  %v6_2c36 = add i32 %v5_2c36, %v1_2c2a
  br label %dec_label_pc_2c50

dec_label_pc_2c40:                                ; preds = %dec_label_pc_2bea
  store i32 %arg2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2c50

dec_label_pc_2c50:                                ; preds = %dec_label_pc_2c40, %dec_label_pc_2c1e
  %stack_var_-60.0 = phi i32 [ %arg2, %dec_label_pc_2c40 ], [ %v4_2c32, %dec_label_pc_2c1e ]
  %v6_2cd79 = phi i32 [ %arg2, %dec_label_pc_2c40 ], [ %v1_2c23, %dec_label_pc_2c1e ]
  %storemerge7 = phi i32 [ %arg3, %dec_label_pc_2c40 ], [ %v6_2c36, %dec_label_pc_2c1e ]
  %storemerge6 = phi i1 [ true, %dec_label_pc_2c40 ], [ false, %dec_label_pc_2c1e ]
  %. = select i1 %storemerge6, i32 0, i32 -128
  %v1_2ca9 = trunc i32 %. to i8
  br label %dec_label_pc_2cd3

dec_label_pc_2c5d:                                ; preds = %dec_label_pc_2cd3
  %v2_2c67 = lshr i32 %stack_var_-56.0, ptrtoint (i32* @global_var_18.885 to i32)
  %v5_2c67 = trunc i32 %v2_2c67 to i8
  %tmp129 = urem i32 %v2_2c67, 256
  %v5_2c6a = inttoptr i32 %tmp129 to i32*
  %v3_2c73 = shl i32 %stack_var_-56.0, ptrtoint (i32* @global_var_8.883 to i32)
  %v4_2c73 = lshr i32 %stack_var_-60.1, ptrtoint (i32* @global_var_18.885 to i32)
  %v5_2c73 = or i32 %v3_2c73, %v4_2c73
  %v2_2c77 = shl i32 %stack_var_-60.1, ptrtoint (i32* @global_var_8.883 to i32)
  store i32 %v2_2c77, i32* %eax.global-to-local, align 4
  %v10_2c80 = icmp eq i8 %stack_var_-32.2, 0
  br i1 %v10_2c80, label %dec_label_pc_2cbf, label %dec_label_pc_2c86

dec_label_pc_2c86:                                ; preds = %dec_label_pc_2c5d
  %v11_2c86 = icmp eq i8 %v5_2c67, 0
  br i1 %v11_2c86, label %dec_label_pc_2ccf, label %dec_label_pc_2c8c

dec_label_pc_2c8c:                                ; preds = %dec_label_pc_2c86
  %v12_2c86 = icmp slt i8 %v5_2c67, 0
  store i32 %tmp129, i32* %eax.global-to-local, align 4
  %v1_2c92 = icmp eq i1 %v12_2c86, false
  br i1 %v1_2c92, label %dec_label_pc_2cb1, label %dec_label_pc_2c94

dec_label_pc_2c94:                                ; preds = %dec_label_pc_2c8c
  store i32 %., i32* %eax.global-to-local, align 4
  %v4_2ca6 = ptrtoint i8* %stack_var_-48.3 to i32
  store i8 %v1_2ca9, i8* %stack_var_-48.3, align 1
  %v5_2cab = add i32 %v4_2ca6, 1
  %v23_2cab = inttoptr i32 %v5_2cab to i8*
  br label %dec_label_pc_2cbf

dec_label_pc_2cb1:                                ; preds = %dec_label_pc_2c8c
  br i1 %storemerge6, label %dec_label_pc_2cbf, label %dec_label_pc_2cb7

dec_label_pc_2cb7:                                ; preds = %dec_label_pc_2cb1
  %v5_2cb7 = urem i32 %v2_2c67, 128
  %tmp131 = or i32 %v5_2cb7, 128
  %v14_2cb7 = inttoptr i32 %tmp131 to i32*
  br label %dec_label_pc_2cbf

dec_label_pc_2cbf:                                ; preds = %dec_label_pc_2c94, %dec_label_pc_2cb1, %dec_label_pc_2cb7, %dec_label_pc_2c5d
  %stack_var_-48.1 = phi i8* [ %stack_var_-48.3, %dec_label_pc_2c5d ], [ %stack_var_-48.3, %dec_label_pc_2cb1 ], [ %stack_var_-48.3, %dec_label_pc_2cb7 ], [ %v23_2cab, %dec_label_pc_2c94 ]
  %stack_var_-31.1 = phi i32* [ %v5_2c6a, %dec_label_pc_2c5d ], [ %v5_2c6a, %dec_label_pc_2cb1 ], [ %v14_2cb7, %dec_label_pc_2cb7 ], [ %v5_2c6a, %dec_label_pc_2c94 ]
  %v4_2cbf = ptrtoint i8* %stack_var_-48.1 to i32
  store i32 %v4_2cbf, i32* %eax.global-to-local, align 4
  %tmp132 = ptrtoint i32* %stack_var_-31.1 to i32
  %v1_2cc6 = trunc i32 %tmp132 to i8
  store i8 %v1_2cc6, i8* %stack_var_-48.1, align 1
  %v5_2cc8 = add i32 %v4_2cbf, 1
  %v23_2cc8 = inttoptr i32 %v5_2cc8 to i8*
  %v6_2cd7.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2ccf

dec_label_pc_2ccf:                                ; preds = %dec_label_pc_2c86, %dec_label_pc_2cbf
  %v6_2cd7.pre = phi i32 [ %v6_2cd7.pre.pre, %dec_label_pc_2cbf ], [ %v2_2c77, %dec_label_pc_2c86 ]
  %stack_var_-48.2 = phi i8* [ %v23_2cc8, %dec_label_pc_2cbf ], [ %stack_var_-48.3, %dec_label_pc_2c86 ]
  %stack_var_-32.1 = phi i8 [ 0, %dec_label_pc_2cbf ], [ %stack_var_-32.2, %dec_label_pc_2c86 ]
  %v4_2ccf = add nuw nsw i32 %storemerge, 1
  br label %dec_label_pc_2cd3

dec_label_pc_2cd3:                                ; preds = %dec_label_pc_2ccf, %dec_label_pc_2c50
  %v6_2cd7 = phi i32 [ %v6_2cd79, %dec_label_pc_2c50 ], [ %v6_2cd7.pre, %dec_label_pc_2ccf ]
  %stack_var_-48.3 = phi i8* [ %tmp128, %dec_label_pc_2c50 ], [ %stack_var_-48.2, %dec_label_pc_2ccf ]
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_2c50 ], [ %v2_2c77, %dec_label_pc_2ccf ]
  %stack_var_-56.0 = phi i32 [ %storemerge7, %dec_label_pc_2c50 ], [ %v5_2c73, %dec_label_pc_2ccf ]
  %stack_var_-32.2 = phi i8 [ 1, %dec_label_pc_2c50 ], [ %stack_var_-32.1, %dec_label_pc_2ccf ]
  %storemerge = phi i32 [ 0, %dec_label_pc_2c50 ], [ %v4_2ccf, %dec_label_pc_2ccf ]
  %tmp135 = sub nsw i32 6, %storemerge
  %v11_2cd3 = and i32 %tmp135, %storemerge
  %v12_2cd3 = icmp slt i32 %v11_2cd3, 0
  %v13_2cd3 = icmp eq i32 %storemerge, 7
  %v14_2cd3 = icmp slt i32 %storemerge, 7
  %v3_2cd7 = icmp ne i1 %v14_2cd3, %v12_2cd3
  %v4_2cd7 = or i1 %v13_2cd3, %v3_2cd7
  %v5_2cd7 = zext i1 %v4_2cd7 to i32
  %v7_2cd7 = and i32 %v6_2cd7, -256
  %v8_2cd7 = or i32 %v5_2cd7, %v7_2cd7
  store i32 %v8_2cd7, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %storemerge, 8
  br i1 %exitcond, label %dec_label_pc_2ce2, label %dec_label_pc_2c5d

dec_label_pc_2ce2:                                ; preds = %dec_label_pc_2cd3
  %v4_2ce2 = ptrtoint i8* %stack_var_-48.3 to i32
  %v2_2ceb = sub i32 %v4_2ce2, %v16_2c12
  store i32 %v2_2ceb, i32* %eax.global-to-local, align 4
  ret i32 %v2_2ceb

; uselistorder directives
  uselistorder i32 %v2_2ceb, { 1, 0 }
  uselistorder i32 %storemerge, { 2, 1, 0, 3, 5, 4 }
  uselistorder i8 %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %stack_var_-60.1, { 1, 0 }
  uselistorder i8* %stack_var_-48.3, { 0, 4, 5, 3, 2, 1, 6 }
  uselistorder i8* %stack_var_-48.1, { 1, 0 }
  uselistorder i32 %v2_2c77, { 1, 0, 2 }
  uselistorder i32 %tmp129, { 1, 0 }
  uselistorder i8 %v5_2c67, { 1, 0 }
  uselistorder i1 %storemerge6, { 1, 0 }
  uselistorder i32 %v4_2c32, { 1, 0 }
  uselistorder i32 %v1_2c23, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 1, 2, 0, 3, 4, 7, 8 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_2ccf, { 1, 0 }
  uselistorder label %dec_label_pc_2cbf, { 2, 1, 0, 3 }
}

define i32 @function_2cfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfc:
  %v0_2cfc = load i32, i32* @eax, align 4
  %v2_2cfc = udiv i32 %v0_2cfc, 65536
  %v5_2cfc = trunc i32 %v2_2cfc to i8
  %v2_2cff = load i32, i32* @ebp, align 4
  %v3_2cff = add i32 %v2_2cff, -25
  %v4_2cff = inttoptr i32 %v3_2cff to i8*
  store i8 %v5_2cfc, i8* %v4_2cff, align 1
  %v0_2d02 = load i32, i32* @ebp, align 4
  %v1_2d02 = add i32 %v0_2d02, -36
  %v2_2d02 = inttoptr i32 %v1_2d02 to i32*
  %v3_2d02 = load i32, i32* %v2_2d02, align 4
  %v2_2d05 = lshr i32 %v3_2d02, ptrtoint (i32* @global_var_8.883 to i32)
  %v5_2d05 = trunc i32 %v2_2d05 to i8
  %v3_2d08 = add i32 %v0_2d02, -24
  %v4_2d08 = inttoptr i32 %v3_2d08 to i8*
  store i8 %v5_2d05, i8* %v4_2d08, align 1
  %v0_2d0b = load i32, i32* @ebp, align 4
  %v1_2d0b = add i32 %v0_2d0b, -36
  %v2_2d0b = inttoptr i32 %v1_2d0b to i32*
  %v3_2d0b = load i32, i32* %v2_2d0b, align 4
  %v1_2d0e = trunc i32 %v3_2d0b to i8
  %v3_2d0e = add i32 %v0_2d0b, -23
  %v4_2d0e = inttoptr i32 %v3_2d0e to i8*
  store i8 %v1_2d0e, i8* %v4_2d0e, align 1
  %v0_2d11 = load i32, i32* @ebp, align 4
  %v1_2d17 = add i32 %v0_2d11, -26
  ret i32 %v1_2d17
}

define i32 @function_2d43() local_unnamed_addr {
dec_label_pc_2d43:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2d43 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2d43 = add i32 %v0_2d43, 1566266564
  %v2_2d43 = inttoptr i32 %v1_2d43 to i32*
  %v3_2d43 = load i32, i32* %v2_2d43, align 4
  %v4_2d43 = add i32 %v3_2d43, 1
  store i32 %v4_2d43, i32* %v2_2d43, align 4
  %v0_2d49 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d49
}

define i32 @_ZN7CBigNum10setuint256E7uint256(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d4a:
  ret i32 %arg1
}

define i32 @function_2d58(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d58:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_2d58 = load i32, i32* @ebp, align 4
  %v1_2d5e = add i32 %v0_2d58, 3
  store i32 %v1_2d5e, i32* %ebp.global-to-local, align 4
  %v2_2d5f = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_2d5f, i32* %eax.global-to-local, align 4
  %v1_2d60 = add i32 %v0_2d58, 19
  %v2_2d60 = inttoptr i32 %v1_2d60 to i32*
  %v3_2d60 = load i32, i32* %v2_2d60, align 4
  store i32 %v3_2d60, i32* %eax.global-to-local, align 4
  %v2_2d63 = add i32 %v0_2d58, -101
  %v3_2d63 = inttoptr i32 %v2_2d63 to i32*
  store i32 %v3_2d60, i32* %v3_2d63, align 4
  %v0_2d66 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d66 = add i32 %v0_2d66, 20
  %v2_2d66 = inttoptr i32 %v1_2d66 to i32*
  %v3_2d66 = load i32, i32* %v2_2d66, align 4
  store i32 %v3_2d66, i32* %eax.global-to-local, align 4
  %v2_2d69 = add i32 %v0_2d66, -100
  %v3_2d69 = inttoptr i32 %v2_2d69 to i32*
  store i32 %v3_2d66, i32* %v3_2d69, align 4
  %v0_2d6c = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d6c = add i32 %v0_2d6c, 24
  %v2_2d6c = inttoptr i32 %v1_2d6c to i32*
  %v3_2d6c = load i32, i32* %v2_2d6c, align 4
  store i32 %v3_2d6c, i32* %eax.global-to-local, align 4
  %v2_2d6f = add i32 %v0_2d6c, -96
  %v3_2d6f = inttoptr i32 %v2_2d6f to i32*
  store i32 %v3_2d6c, i32* %v3_2d6f, align 4
  %v0_2d72 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d72 = add i32 %v0_2d72, 28
  %v2_2d72 = inttoptr i32 %v1_2d72 to i32*
  %v3_2d72 = load i32, i32* %v2_2d72, align 4
  store i32 %v3_2d72, i32* %eax.global-to-local, align 4
  %v2_2d75 = add i32 %v0_2d72, -92
  %v3_2d75 = inttoptr i32 %v2_2d75 to i32*
  store i32 %v3_2d72, i32* %v3_2d75, align 4
  %v0_2d78 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d78 = add i32 %v0_2d78, 32
  %v2_2d78 = inttoptr i32 %v1_2d78 to i32*
  %v3_2d78 = load i32, i32* %v2_2d78, align 4
  store i32 %v3_2d78, i32* %eax.global-to-local, align 4
  %v2_2d7b = add i32 %v0_2d78, -88
  %v3_2d7b = inttoptr i32 %v2_2d7b to i32*
  store i32 %v3_2d78, i32* %v3_2d7b, align 4
  %v0_2d7e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d7e = add i32 %v0_2d7e, 36
  %v2_2d7e = inttoptr i32 %v1_2d7e to i32*
  %v3_2d7e = load i32, i32* %v2_2d7e, align 4
  store i32 %v3_2d7e, i32* %eax.global-to-local, align 4
  %v2_2d81 = add i32 %v0_2d7e, -84
  %v3_2d81 = inttoptr i32 %v2_2d81 to i32*
  store i32 %v3_2d7e, i32* %v3_2d81, align 4
  %v0_2d84 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d84 = add i32 %v0_2d84, 40
  %v2_2d84 = inttoptr i32 %v1_2d84 to i32*
  %v3_2d84 = load i32, i32* %v2_2d84, align 4
  store i32 %v3_2d84, i32* %eax.global-to-local, align 4
  %v2_2d87 = add i32 %v0_2d84, -80
  %v3_2d87 = inttoptr i32 %v2_2d87 to i32*
  store i32 %v3_2d84, i32* %v3_2d87, align 4
  %v0_2d8a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2d90 = load i32, i32* %ebp.global-to-local, align 4
  %v2_2d90 = add i32 %v1_2d90, -12
  %v3_2d90 = inttoptr i32 %v2_2d90 to i32*
  store i32 %v0_2d8a, i32* %v3_2d90, align 4
  %v0_2d95 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d98 = add i32 %v0_2d95, -46
  %v2_2d9b = add i32 %v0_2d95, -68
  %v3_2d9b = inttoptr i32 %v2_2d9b to i32*
  store i32 %v1_2d98, i32* %v3_2d9b, align 4
  %v0_2d9e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d9e = add i32 %v0_2d9e, -52
  %v2_2d9e = inttoptr i32 %v1_2d9e to i8*
  store i8 1, i8* %v2_2d9e, align 1
  %v0_2da2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2da2 = add i32 %v0_2da2, -108
  store i32 %v1_2da2, i32* %eax.global-to-local, align 4
  %v2_2da5 = add i32 %v0_2da2, -60
  %v3_2da5 = inttoptr i32 %v2_2da5 to i32*
  store i32 %v1_2da2, i32* %v3_2da5, align 4
  %v0_2da8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2da8 = add i32 %v0_2da8, -60
  %v2_2da8 = inttoptr i32 %v1_2da8 to i32*
  %v3_2da8 = load i32, i32* %v2_2da8, align 4
  %v1_2dab = add i32 %v3_2da8, ptrtoint (i32* @mainParams to i32)
  store i32 %v1_2dab, i32* %eax.global-to-local, align 4
  %v2_2dae = add i32 %v0_2da8, -64
  %v3_2dae = inttoptr i32 %v2_2dae to i32*
  store i32 %v1_2dab, i32* %v3_2dae, align 4
  br label %dec_label_pc_2df2

dec_label_pc_2db3:                                ; preds = %dec_label_pc_2df2
  %v3_2db3 = load i32, i32* %v2_2df2, align 4
  %v4_2db3 = add i32 %v3_2db3, -1
  store i32 %v4_2db3, i32* %v2_2df2, align 4
  %v0_2db7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2db7 = add i32 %v0_2db7, -64
  %v2_2db7 = inttoptr i32 %v1_2db7 to i32*
  %v3_2db7 = load i32, i32* %v2_2db7, align 4
  store i32 %v3_2db7, i32* %eax.global-to-local, align 4
  %v1_2dba = inttoptr i32 %v3_2db7 to i8*
  %v2_2dba = load i8, i8* %v1_2dba, align 1
  %v3_2dba = zext i8 %v2_2dba to i32
  store i32 %v3_2dba, i32* %eax.global-to-local, align 4
  %v3_2dbd = add i32 %v0_2db7, -51
  %v4_2dbd = inttoptr i32 %v3_2dbd to i8*
  store i8 %v2_2dba, i8* %v4_2dbd, align 1
  %v0_2dc0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2dc0 = add i32 %v0_2dc0, -52
  %v2_2dc0 = inttoptr i32 %v1_2dc0 to i8*
  %v3_2dc0 = load i8, i8* %v2_2dc0, align 1
  %v10_2dc0 = icmp eq i8 %v3_2dc0, 0
  br i1 %v10_2dc0, label %dec_label_pc_2de2, label %dec_label_pc_2dc6

dec_label_pc_2dc6:                                ; preds = %dec_label_pc_2db3
  %v1_2dc6 = add i32 %v0_2dc0, -51
  %v2_2dc6 = inttoptr i32 %v1_2dc6 to i8*
  %v3_2dc6 = load i8, i8* %v2_2dc6, align 1
  %v10_2dc6 = icmp eq i8 %v3_2dc6, 0
  br i1 %v10_2dc6, label %dec_label_pc_2df2, label %dec_label_pc_2dcc

dec_label_pc_2dcc:                                ; preds = %dec_label_pc_2dc6
  %v3_2dcc = load i8, i8* %v2_2dc6, align 1
  %v4_2dcc = zext i8 %v3_2dcc to i32
  store i32 %v4_2dcc, i32* %eax.global-to-local, align 4
  %v6_2dd0 = icmp slt i8 %v3_2dcc, 0
  %v1_2dd2 = icmp eq i1 %v6_2dd0, false
  br i1 %v1_2dd2, label %dec_label_pc_2dde, label %dec_label_pc_2dd4

dec_label_pc_2dd4:                                ; preds = %dec_label_pc_2dcc
  %v1_2dd4 = add i32 %v0_2dc0, -68
  %v2_2dd4 = inttoptr i32 %v1_2dd4 to i32*
  %v3_2dd4 = load i32, i32* %v2_2dd4, align 4
  store i32 %v3_2dd4, i32* %eax.global-to-local, align 4
  %v1_2dd7 = inttoptr i32 %v3_2dd4 to i8*
  store i8 0, i8* %v1_2dd7, align 1
  %v0_2dda = load i32, i32* %ebp.global-to-local, align 4
  %v1_2dda = add i32 %v0_2dda, -68
  %v2_2dda = inttoptr i32 %v1_2dda to i32*
  %v3_2dda = load i32, i32* %v2_2dda, align 4
  %v4_2dda = add i32 %v3_2dda, 1
  store i32 %v4_2dda, i32* %v2_2dda, align 4
  %v0_2dde.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2dde

dec_label_pc_2dde:                                ; preds = %dec_label_pc_2dd4, %dec_label_pc_2dcc
  %v0_2dde = phi i32 [ %v0_2dde.pre, %dec_label_pc_2dd4 ], [ %v0_2dc0, %dec_label_pc_2dcc ]
  %v1_2dde = add i32 %v0_2dde, -52
  %v2_2dde = inttoptr i32 %v1_2dde to i8*
  store i8 0, i8* %v2_2dde, align 1
  %v0_2de2.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2de2

dec_label_pc_2de2:                                ; preds = %dec_label_pc_2dde, %dec_label_pc_2db3
  %v0_2de2 = phi i32 [ %v0_2de2.pre, %dec_label_pc_2dde ], [ %v0_2dc0, %dec_label_pc_2db3 ]
  %v1_2de2 = add i32 %v0_2de2, -68
  %v2_2de2 = inttoptr i32 %v1_2de2 to i32*
  %v3_2de2 = load i32, i32* %v2_2de2, align 4
  store i32 %v3_2de2, i32* %eax.global-to-local, align 4
  %v1_2de5 = add i32 %v0_2de2, -51
  %v2_2de5 = inttoptr i32 %v1_2de5 to i8*
  %v3_2de5 = load i8, i8* %v2_2de5, align 1
  %v4_2de5 = zext i8 %v3_2de5 to i32
  store i32 %v4_2de5, i32* %edx.global-to-local, align 4
  %v3_2de9 = inttoptr i32 %v3_2de2 to i8*
  store i8 %v3_2de5, i8* %v3_2de9, align 1
  %v0_2deb = load i32, i32* %ebp.global-to-local, align 4
  %v1_2deb = add i32 %v0_2deb, -68
  %v2_2deb = inttoptr i32 %v1_2deb to i32*
  %v3_2deb = load i32, i32* %v2_2deb, align 4
  %v4_2deb = add i32 %v3_2deb, 1
  store i32 %v4_2deb, i32* %v2_2deb, align 4
  br label %dec_label_pc_2df2

dec_label_pc_2df2:                                ; preds = %dec_label_pc_2dc6, %dec_label_pc_2de2, %dec_label_pc_2d58
  %v0_2df2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2df2 = add i32 %v0_2df2, -64
  %v2_2df2 = inttoptr i32 %v1_2df2 to i32*
  %v3_2df2 = load i32, i32* %v2_2df2, align 4
  store i32 %v3_2df2, i32* %eax.global-to-local, align 4
  %v2_2df5 = add i32 %v0_2df2, -60
  %v3_2df5 = inttoptr i32 %v2_2df5 to i32*
  %v4_2df5 = load i32, i32* %v3_2df5, align 4
  %v15_2df5 = icmp eq i32 %v3_2df2, %v4_2df5
  %v1_2df8 = icmp eq i1 %v15_2df5, false
  %v2_2df8 = zext i1 %v1_2df8 to i32
  %v4_2df8 = and i32 %v3_2df2, -256
  %v5_2df8 = or i32 %v2_2df8, %v4_2df8
  store i32 %v5_2df8, i32* %eax.global-to-local, align 4
  %v5_2dfb = icmp eq i1 %v1_2df8, false
  %v1_2dfd = icmp eq i1 %v5_2dfb, false
  br i1 %v1_2dfd, label %dec_label_pc_2db3, label %dec_label_pc_2dff

dec_label_pc_2dff:                                ; preds = %dec_label_pc_2df2
  %v1_2dff = add i32 %v0_2df2, -68
  %v2_2dff = inttoptr i32 %v1_2dff to i32*
  %v3_2dff = load i32, i32* %v2_2dff, align 4
  %v1_2e05 = add i32 %v0_2df2, -46
  store i32 %v1_2e05, i32* %edx.global-to-local, align 4
  %v2_2e08 = sub i32 %v3_2dff, %v1_2e05
  store i32 %v2_2e08, i32* %eax.global-to-local, align 4
  %v2_2e0a = add i32 %v0_2df2, -56
  %v3_2e0a = inttoptr i32 %v2_2e0a to i32*
  store i32 %v2_2e08, i32* %v3_2e0a, align 4
  %v0_2e0d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2e0d = add i32 %v0_2e0d, -56
  %v2_2e0d = inttoptr i32 %v1_2e0d to i32*
  %v3_2e0d = load i32, i32* %v2_2e0d, align 4
  %v2_2e10 = lshr i32 %v3_2e0d, ptrtoint (i32* @global_var_18.885 to i32)
  %v5_2e10 = trunc i32 %v2_2e10 to i8
  store i32 %v2_2e10, i32* %eax.global-to-local, align 4
  %v3_2e13 = add i32 %v0_2e0d, -50
  %v4_2e13 = inttoptr i32 %v3_2e13 to i8*
  store i8 %v5_2e10, i8* %v4_2e13, align 1
  %v0_2e16 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2e16 = add i32 %v0_2e16, -56
  %v2_2e16 = inttoptr i32 %v1_2e16 to i32*
  %v3_2e16 = load i32, i32* %v2_2e16, align 4
  %v2_2e19 = udiv i32 %v3_2e16, 65536
  %v5_2e19 = trunc i32 %v2_2e19 to i8
  store i32 %v2_2e19, i32* %eax.global-to-local, align 4
  %v3_2e1c = add i32 %v0_2e16, -49
  %v4_2e1c = inttoptr i32 %v3_2e1c to i8*
  store i8 %v5_2e19, i8* %v4_2e1c, align 1
  %v0_2e1f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2e1f = add i32 %v0_2e1f, -56
  %v2_2e1f = inttoptr i32 %v1_2e1f to i32*
  %v3_2e1f = load i32, i32* %v2_2e1f, align 4
  %v2_2e22 = lshr i32 %v3_2e1f, ptrtoint (i32* @global_var_8.883 to i32)
  %v5_2e22 = trunc i32 %v2_2e22 to i8
  store i32 %v2_2e22, i32* %eax.global-to-local, align 4
  %v3_2e25 = add i32 %v0_2e1f, -48
  %v4_2e25 = inttoptr i32 %v3_2e25 to i8*
  store i8 %v5_2e22, i8* %v4_2e25, align 1
  %v0_2e28 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2e28 = add i32 %v0_2e28, -56
  %v2_2e28 = inttoptr i32 %v1_2e28 to i32*
  %v3_2e28 = load i32, i32* %v2_2e28, align 4
  store i32 %v3_2e28, i32* %eax.global-to-local, align 4
  %v1_2e2b = trunc i32 %v3_2e28 to i8
  %v3_2e2b = add i32 %v0_2e28, -47
  %v4_2e2b = inttoptr i32 %v3_2e2b to i8*
  store i8 %v1_2e2b, i8* %v4_2e2b, align 1
  %v0_2e2e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2e2e = add i32 %v0_2e2e, -76
  %v2_2e2e = inttoptr i32 %v1_2e2e to i32*
  %v3_2e2e = load i32, i32* %v2_2e2e, align 4
  store i32 %v3_2e2e, i32* %eax.global-to-local, align 4
  %v1_2e31 = add i32 %v0_2e2e, -68
  %v2_2e31 = inttoptr i32 %v1_2e31 to i32*
  %v3_2e31 = load i32, i32* %v2_2e31, align 4
  %v1_2e34 = add i32 %v0_2e2e, -50
  %v2_2e39 = sub i32 %v3_2e31, %v1_2e34
  store i32 %v2_2e39, i32* %edx.global-to-local, align 4
  %v1_2e3d = load i32, i32* @esp, align 4
  %v2_2e3d = add i32 %v1_2e3d, 8
  %v3_2e3d = inttoptr i32 %v2_2e3d to i32*
  store i32 %v3_2e2e, i32* %v3_2e3d, align 4
  %v0_2e41 = load i32, i32* %edx.global-to-local, align 4
  %v1_2e41 = load i32, i32* @esp, align 4
  %v2_2e41 = add i32 %v1_2e41, 4
  %v3_2e41 = inttoptr i32 %v2_2e41 to i32*
  store i32 %v0_2e41, i32* %v3_2e41, align 4
  %v0_2e45 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2e45 = add i32 %v0_2e45, -50
  store i32 %v1_2e45, i32* %eax.global-to-local, align 4
  %v1_2e48 = load i32, i32* @esp, align 4
  %v2_2e48 = inttoptr i32 %v1_2e48 to i32*
  store i32 %v1_2e45, i32* %v2_2e48, align 4
  %v3_2e48 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_2e48

; uselistorder directives
  uselistorder i32 %v2_2e19, { 1, 0 }
  uselistorder i32 %v3_2df2, { 1, 0, 2 }
  uselistorder i32* %v2_2df2, { 2, 1, 0 }
  uselistorder i32 %v0_2df2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_2de2, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebp.global-to-local, { 5, 6, 7, 8, 9, 10, 22, 0, 2, 23, 1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i8 1, { 1, 0 }
  uselistorder label %dec_label_pc_2df2, { 1, 0, 2 }
}

define i32 @function_2e60() local_unnamed_addr {
dec_label_pc_2e60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e60 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e60 = add i32 %v0_2e60, 33988
  %v2_2e60 = inttoptr i32 %v1_2e60 to i32*
  %v3_2e60 = load i32, i32* %v2_2e60, align 4
  %v4_2e60 = add i32 %v3_2e60, 1
  store i32 %v4_2e60, i32* %v2_2e60, align 4
  %v0_2e66 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2e66 = add i32 %v0_2e66, 93
  %v2_2e66 = inttoptr i32 %v1_2e66 to i8*
  %v3_2e66 = load i8, i8* %v2_2e66, align 1
  %v5_2e66 = trunc i32 %v0_2e66 to i8
  %v6_2e66 = add i8 %v3_2e66, %v5_2e66
  store i8 %v6_2e66, i8* %v2_2e66, align 1
  %v0_2e69 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e69
}

define i32 @_ZNK7CBigNum6getvchEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e6a:
  ret i32 %arg2
}

define i32 @function_2e9a() local_unnamed_addr {
dec_label_pc_2e9a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e9a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e9a = add i32 %v0_2e9a, 2105797701
  %v2_2e9a = inttoptr i32 %v1_2e9a to i32*
  %v3_2e9a = load i32, i32* %v2_2e9a, align 4
  %v4_2e9a = add i32 %v3_2e9a, -1
  store i32 %v4_2e9a, i32* %v2_2e9a, align 4
  %v0_2ea1 = load i32, i32* %eax.global-to-local, align 4
  %v1_2ea1 = trunc i32 %v0_2ea1 to i8
  %v2_2ea1 = add i8 %v1_2ea1, ptrtoint ([6 x i8]* @global_var_77.897 to i8)
  %v6_2ea1 = icmp ult i8 %v2_2ea1, %v1_2ea1
  %v16_2ea1 = zext i8 %v2_2ea1 to i32
  %v18_2ea1 = and i32 %v0_2ea1, -256
  %v19_2ea1 = or i32 %v16_2ea1, %v18_2ea1
  store i32 %v19_2ea1, i32* %eax.global-to-local, align 4
  %v0_2ea3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2ea3 = add i32 %v0_2ea3, 76133445
  %v2_2ea3 = inttoptr i32 %v1_2ea3 to i8*
  %v3_2ea3 = load i8, i8* %v2_2ea3, align 1
  %v4_2ea3 = load i32, i32* %ecx.global-to-local, align 4
  %v5_2ea3 = trunc i32 %v4_2ea3 to i8
  %v7_2ea3 = zext i1 %v6_2ea1 to i8
  %v8_2ea3 = add i8 %v3_2ea3, %v7_2ea3
  %v9_2ea3 = add i8 %v8_2ea3, %v5_2ea3
  store i8 %v9_2ea3, i8* %v2_2ea3, align 1
  %v0_2ea9 = load i32, i32* %eax.global-to-local, align 4
  %v1_2ea9 = trunc i32 %v0_2ea9 to i8
  %v2_2ea9 = and i8 %v1_2ea9, ptrtoint (i8* @global_var_e8.898 to i8)
  %v8_2ea9 = zext i8 %v2_2ea9 to i32
  %v10_2ea9 = and i32 %v0_2ea9, -256
  %v11_2ea9 = or i32 %v8_2ea9, %v10_2ea9
  store i32 %v11_2ea9, i32* %eax.global-to-local, align 4
  %v0_2eab = load i32, i32* %ecx.global-to-local, align 4
  %v1_2eab = add i32 %v0_2eab, -1
  store i32 %v1_2eab, i32* %ecx.global-to-local, align 4
  %v1_2eac = inttoptr i32 %v11_2ea9 to i8*
  %v2_2eac = load i8, i8* %v1_2eac, align 1
  %v5_2eac = add i8 %v2_2eac, %v2_2ea9
  store i8 %v5_2eac, i8* %v1_2eac, align 1
  %v3_2eaf = call i32 @function_3009(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_2eaf, i32* %eax.global-to-local, align 4
  ret i32 %v3_2eaf
}

define i32 @function_2eb9() local_unnamed_addr {
dec_label_pc_2eb9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2eb9 = load i32, i32* %eax.global-to-local, align 4
  %v11_2eb9 = and i32 %v0_2eb9, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_2eb9, i32* %eax.global-to-local, align 4
  %v0_2ebb = call i32 @function_2f20()
  store i32 %v0_2ebb, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ebb
}

define i32 @function_2f20() local_unnamed_addr {
dec_label_pc_2f20:
  %v0_2f2c = load i32, i32* @ebp, align 4
  %v1_2f2c = add i32 %v0_2f2c, -36
  %v1_2f2f = add i32 %v0_2f2c, -40
  %v1_2f48 = add i32 %v0_2f2c, -48
  %v1_2f4b = add i32 %v0_2f2c, -60
  %v2_2f60 = inttoptr i32 %v1_2f2c to i32*
  %v3_2f60 = load i32, i32* %v2_2f60, align 4
  %v2_2f67 = inttoptr i32 %v1_2f48 to i32*
  %v3_2f67 = load i32, i32* %v2_2f67, align 4
  %v1_2f80 = add i32 %v0_2f2c, -24
  store i32 %v1_2f80, i32* @eax, align 4
  %v6_2f8d = call i32 @function_9718(i32 %v1_2f80, i32 %v1_2f4b, i32 %v1_2f4b, i32 %v3_2f67, i32 %v3_2f60, i32 %v1_2f2f)
  %v0_2f95 = load i32, i32* @ebp, align 4
  %v1_2f98 = add i32 %v0_2f95, -60
  %v3_2fd9 = call i32 @function_3009(i32 %v1_2f98, i32 %v1_2f98, i32 %v1_2f98)
  ret i32 %v3_2fd9

; uselistorder directives
  uselistorder i32 %v0_2f2c, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_3009, { 1, 0 }
}

define i32 @function_2fdc() local_unnamed_addr {
dec_label_pc_2fdc:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fdc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2fdc
}

define i32 @function_2ff3() local_unnamed_addr {
dec_label_pc_2ff3:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ff3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ff3
}

define i32 @function_3009(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3009:
  %v0_3009 = load i32, i32* @ebp, align 4
  %v1_3009 = add i32 %v0_3009, -76
  %v2_3009 = inttoptr i32 %v1_3009 to i32*
  %v3_3009 = load i32, i32* %v2_3009, align 4
  store i32 %v3_3009, i32* @eax, align 4
  %v1_300c = add i32 %v0_3009, -12
  %v2_300c = inttoptr i32 %v1_300c to i32*
  %v3_300c = load i32, i32* %v2_300c, align 4
  %v1_300f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_300f = icmp eq i32 %v1_300f, %v3_300c
  br i1 %v3_300f, label %bb, label %dec_label_pc_3018

bb:                                               ; preds = %dec_label_pc_3009
  %v1_3016 = call i32 @function_301d()
  br label %dec_label_pc_3018

dec_label_pc_3018:                                ; preds = %bb, %dec_label_pc_3009
  %v2_3016 = phi i32 [ %v1_3016, %bb ], [ %v3_3009, %dec_label_pc_3009 ]
  ret i32 %v2_3016
}

define i32 @function_301d() local_unnamed_addr {
dec_label_pc_301d:
  %v0_3021 = load i32, i32* @eax, align 4
  ret i32 %v0_3021
}

define i32 @_ZN7CScript10push_int64Ex(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3024:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %v1_304d = sub i32 -1, %arg3
  %v4_3050 = sext i8 %arg2 to i32
  %v1_3053 = sub nsw i32 -1, %v4_3050
  %v2_3056 = or i32 %v1_304d, %v1_3053
  %v3_3056 = icmp eq i32 %v2_3056, 0
  br i1 %v3_3056, label %dec_label_pc_3080, label %dec_label_pc_305c

dec_label_pc_305c:                                ; preds = %dec_label_pc_3024
  %v11_305c = icmp slt i32 %arg3, 0
  br i1 %v11_305c, label %dec_label_pc_309d, label %dec_label_pc_3062

dec_label_pc_3062:                                ; preds = %dec_label_pc_305c
  %v10_305c = icmp eq i32 %arg3, 0
  %v4_3066 = icmp eq i1 %v10_305c, false
  br i1 %v4_3066, label %dec_label_pc_306e.thread, label %dec_label_pc_3068

dec_label_pc_306e.thread:                         ; preds = %dec_label_pc_3062
  br label %dec_label_pc_309d

dec_label_pc_3068:                                ; preds = %dec_label_pc_3062
  %v11_3068 = icmp eq i8 %arg2, 0
  br i1 %v11_3068, label %dec_label_pc_309d, label %dec_label_pc_307a

dec_label_pc_307a:                                ; preds = %dec_label_pc_3068
  %tmp122 = icmp ult i8 %arg2, 17
  br i1 %tmp122, label %dec_label_pc_3080, label %dec_label_pc_309d

dec_label_pc_3080:                                ; preds = %dec_label_pc_307a, %dec_label_pc_3024
  %v1_3083 = add i8 %arg2, 80
  store i8 %v1_3083, i8* %stack_var_-17, align 1
  %v2_308c = ptrtoint i8* %stack_var_-17 to i32
  %sext = mul i32 %v2_308c, 16777216
  %v2_3096 = sdiv i32 %sext, 16777216
  %v3_3096 = call i32 @function_9bde(i32 %arg1, i32 %v2_3096)
  br label %dec_label_pc_30f3

dec_label_pc_309d:                                ; preds = %dec_label_pc_306e.thread, %dec_label_pc_307a, %dec_label_pc_3068, %dec_label_pc_305c
  %v2_30ab = ptrtoint i32* %stack_var_-52 to i32
  %v4_30b1 = call i32 @function_59fe(i32 %v2_30ab, i32 %v4_3050, i32 %arg3)
  %v2_30b6 = ptrtoint i32* %stack_var_-32 to i32
  %sext3 = mul i32 %v2_30ab, 16777216
  %v2_30c3 = sdiv i32 %sext3, 16777216
  %v3_30c3 = call i32 @__stack_chk_fail.103(i32 %v2_30b6, i32 %v2_30c3)
  store i32 %arg1, i32* @eax, align 4
  %v2_30d8 = call i32 @function_646a(i32 %arg1, i32 %v2_30b6)
  %v1_30e3 = call i32 @function_955c(i32 %v2_30b6)
  store i32 %v2_30ab, i32* @eax, align 4
  %v1_30ee = call i32 @function_594c(i32 %v2_30ab)
  br label %dec_label_pc_30f3

dec_label_pc_30f3:                                ; preds = %dec_label_pc_309d, %dec_label_pc_3080
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3102

bb:                                               ; preds = %dec_label_pc_30f3
  %v1_3100 = call i32 @function_312f()
  store i32 %v1_3100, i32* @eax, align 4
  br label %dec_label_pc_3102

dec_label_pc_3102:                                ; preds = %bb, %dec_label_pc_30f3
  %v0_3102 = call i32 @function_312a()
  ret i32 %v0_3102

; uselistorder directives
  uselistorder i32 %v2_30ab, { 1, 2, 0, 3 }
  uselistorder i32 %v4_3050, { 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_309d, { 1, 2, 0, 3 }
}

define i32 @function_3104() local_unnamed_addr {
dec_label_pc_3104:
  %eax.global-to-local = alloca i32, align 4
  %v0_3104 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3104, i32* @ebx, align 4
  %v0_3106 = load i32, i32* @ebp, align 4
  %v1_3106 = add i32 %v0_3106, -28
  store i32 %v1_3106, i32* %eax.global-to-local, align 4
  %v1_310c = call i32 @function_955c(i32 %v1_3106)
  store i32 %v1_310c, i32* %eax.global-to-local, align 4
  %v0_3111 = call i32 @function_3115()
  store i32 %v0_3111, i32* %eax.global-to-local, align 4
  ret i32 %v0_3111

; uselistorder directives
  uselistorder i32 (i32)* @function_955c, { 1, 0 }
}

define i32 @function_3113() local_unnamed_addr {
dec_label_pc_3113:
  %eax.global-to-local = alloca i32, align 4
  %v0_3113 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3113
}

define i32 @function_3115() local_unnamed_addr {
dec_label_pc_3115:
  %v0_3115 = load i32, i32* @ebp, align 4
  %v1_3115 = add i32 %v0_3115, -48
  store i32 %v1_3115, i32* @eax, align 4
  %v1_311b = call i32 @function_594c(i32 %v1_3115)
  %v0_3120 = load i32, i32* @ebx, align 4
  ret i32 %v0_3120

; uselistorder directives
  uselistorder i32 (i32)* @function_594c, { 1, 0 }
}

define i32 @function_312a() local_unnamed_addr {
dec_label_pc_312a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_312f() local_unnamed_addr {
dec_label_pc_312f:
  %v0_3133 = load i32, i32* @eax, align 4
  ret i32 %v0_3133
}

define i32 @_ZN7CScriptC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3134:
  store i32 %arg1, i32* @eax, align 4
  %v1_3151 = call i32 @function_97c2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3162

bb:                                               ; preds = %dec_label_pc_3134
  %v1_3160 = call i32 @function_3167()
  br label %dec_label_pc_3162

dec_label_pc_3162:                                ; preds = %bb, %dec_label_pc_3134
  %v2_3160 = phi i32 [ %v1_3160, %bb ], [ 0, %dec_label_pc_3134 ]
  ret i32 %v2_3160

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3167() local_unnamed_addr {
dec_label_pc_3167:
  %v0_3168 = load i32, i32* @eax, align 4
  ret i32 %v0_3168
}

define i32 @_ZN7CScriptC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_316a:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v2_3188 = ptrtoint i32* %stack_var_-17 to i32
  %v2_3196 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_3196, i32* @eax, align 4
  %v2_31a0 = call i32 @function_955a(i32 %v2_3196, i32 %arg2)
  store i32 %arg2, i32* @edx, align 4
  %v2_31ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_31ab, i32* @eax, align 4
  %v2_31b5 = call i32 @function_950a(i32 %v2_31ab, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v3_31c7 = load i32, i32* %stack_var_-24, align 4
  %v3_31ce = load i32, i32* %stack_var_-28, align 4
  %v4_31d8 = call i32 @function_9dc0(i32 %arg1, i32 %v3_31ce, i32 %v3_31c7, i32 %v2_3188)
  store i32 %v2_3188, i32* @eax, align 4
  %v1_31e3 = call i32 @function_95e0(i32 %v2_3188)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31f4

bb:                                               ; preds = %dec_label_pc_316a
  %v1_31f2 = call i32 @function_3212()
  store i32 %v1_31f2, i32* @eax, align 4
  br label %dec_label_pc_31f4

dec_label_pc_31f4:                                ; preds = %bb, %dec_label_pc_316a
  %v0_31f4 = call i32 @function_320d()
  ret i32 %v0_31f4

; uselistorder directives
  uselistorder i32 %v2_3188, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_31f7() local_unnamed_addr {
dec_label_pc_31f7:
  %eax.global-to-local = alloca i32, align 4
  %v0_31f7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_31f7
}

define i32 @function_320d() local_unnamed_addr {
dec_label_pc_320d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3212() local_unnamed_addr {
dec_label_pc_3212:
  %v0_3216 = load i32, i32* @eax, align 4
  ret i32 %v0_3216
}

define i32 @_ZN7CScriptD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3218:
  store i32 %arg1, i32* @eax, align 4
  %v1_3235 = call i32 @function_9750(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3246

bb:                                               ; preds = %dec_label_pc_3218
  %v1_3244 = call i32 @function_324b()
  br label %dec_label_pc_3246

dec_label_pc_3246:                                ; preds = %bb, %dec_label_pc_3218
  %v2_3244 = phi i32 [ %v1_3244, %bb ], [ 0, %dec_label_pc_3218 ]
  ret i32 %v2_3244

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_324b() local_unnamed_addr {
dec_label_pc_324b:
  %v0_324c = load i32, i32* @eax, align 4
  ret i32 %v0_324c
}

define i32 @_ZN7CScriptlsEi(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_324e:
  %v2_3270 = ashr i32 %arg2, ptrtoint (i32* @global_var_1f.893 to i32)
  store i32 %arg1, i32* @eax, align 4
  %v3_3281 = call i32 @function_6272(i32 %arg1, i32 %arg2, i32 %v2_3270)
  store i32 %v3_3281, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3292

bb:                                               ; preds = %dec_label_pc_324e
  %v1_3290 = call i32 @function_3297()
  br label %dec_label_pc_3292

dec_label_pc_3292:                                ; preds = %bb, %dec_label_pc_324e
  %v2_3290 = phi i32 [ %v1_3290, %bb ], [ %v3_3281, %dec_label_pc_324e ]
  ret i32 %v2_3290

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3297() local_unnamed_addr {
dec_label_pc_3297:
  %v0_3298 = load i32, i32* @eax, align 4
  ret i32 %v0_3298
}

define i32 @_ZN7CScriptlsE10opcodetype(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_329a:
  %v2_32bc = icmp slt i32 %arg2, 0
  br i1 %v2_32bc, label %dec_label_pc_32ca, label %dec_label_pc_32c0

dec_label_pc_32c0:                                ; preds = %dec_label_pc_329a
  %v7_32c8 = icmp sgt i32 %arg2, 255
  br i1 %v7_32c8, label %dec_label_pc_32ca, label %bb

bb:                                               ; preds = %dec_label_pc_32c0
  %v10_32c8 = call i32 @function_333b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_32ca

dec_label_pc_32ca:                                ; preds = %dec_label_pc_32c0, %bb, %dec_label_pc_329a
  %v2_32ca = phi i32 [ %arg2, %dec_label_pc_32c0 ], [ %v10_32c8, %bb ], [ %arg2, %dec_label_pc_329a ]
  ret i32 %v2_32ca

; uselistorder directives
  uselistorder label %dec_label_pc_32ca, { 1, 0, 2 }
}

define i32 @function_32d7() local_unnamed_addr {
dec_label_pc_32d7:
  %eax.global-to-local = alloca i32, align 4
  %v0_32d7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32d7
}

define i32 @function_333b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_333b:
  %v0_333b = load i32, i32* @ebp, align 4
  %v1_333b = add i32 %v0_333b, -48
  %v2_333b = inttoptr i32 %v1_333b to i32*
  %v3_333b = load i32, i32* %v2_333b, align 4
  %v1_333e = trunc i32 %v3_333b to i8
  %v3_333e = add i32 %v0_333b, -13
  %v4_333e = inttoptr i32 %v3_333e to i8*
  store i8 %v1_333e, i8* %v4_333e, align 1
  %v0_3341 = load i32, i32* @ebp, align 4
  %v1_3341 = add i32 %v0_3341, -44
  %v2_3341 = inttoptr i32 %v1_3341 to i32*
  %v3_3341 = load i32, i32* %v2_3341, align 4
  %v1_3344 = add i32 %v0_3341, -24
  %v2_334e = call i32 @function_9b48(i32 %v1_3344, i32 %v3_3341)
  %v0_3356 = load i32, i32* @ebp, align 4
  %v1_3356 = add i32 %v0_3356, -44
  %v2_3356 = inttoptr i32 %v1_3356 to i32*
  %v3_3356 = load i32, i32* %v2_3356, align 4
  %v1_3359 = add i32 %v0_3356, -20
  %v1_335c = add i32 %v0_3356, -13
  %v1_3363 = add i32 %v0_3356, -24
  %v2_3363 = inttoptr i32 %v1_3363 to i32*
  %v3_3363 = load i32, i32* %v2_3363, align 4
  %v4_3371 = call i32 @function_a064(i32 %v1_3359, i32 %v3_3356, i32 %v3_3363, i32 %v1_335c)
  %v0_3379 = load i32, i32* @ebp, align 4
  %v1_3379 = add i32 %v0_3379, -44
  %v2_3379 = inttoptr i32 %v1_3379 to i32*
  %v3_3379 = load i32, i32* %v2_3379, align 4
  store i32 %v3_3379, i32* @eax, align 4
  %v1_337c = add i32 %v0_3379, -12
  %v2_337c = inttoptr i32 %v1_337c to i32*
  %v3_337c = load i32, i32* %v2_337c, align 4
  %v1_337f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_337f = icmp eq i32 %v1_337f, %v3_337c
  br i1 %v3_337f, label %bb, label %dec_label_pc_3388

bb:                                               ; preds = %dec_label_pc_333b
  %v1_3386 = call i32 @function_33bd()
  store i32 %v1_3386, i32* @eax, align 4
  br label %dec_label_pc_3388

dec_label_pc_3388:                                ; preds = %bb, %dec_label_pc_333b
  %v0_3388 = call i32 @function_33b8()
  ret i32 %v0_3388

; uselistorder directives
  uselistorder i32 %v0_3356, { 1, 0, 2, 3 }
}

define i32 @function_338a() local_unnamed_addr {
dec_label_pc_338a:
  %v0_338c = load i32, i32* @ebp, align 4
  %v1_338c = add i32 %v0_338c, -28
  %v1_3397 = call i32 @function_339b(i32 %v1_338c)
  ret i32 %v1_3397
}

define i32 @function_3399() local_unnamed_addr {
dec_label_pc_3399:
  %eax.global-to-local = alloca i32, align 4
  %v0_3399 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3399
}

define i32 @function_339b(i32 %arg1) local_unnamed_addr {
dec_label_pc_339b:
  %v0_339b = load i32, i32* @ebp, align 4
  %v1_339b = add i32 %v0_339b, -14
  ret i32 %v1_339b
}

define i32 @function_33b8() local_unnamed_addr {
dec_label_pc_33b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33bd() local_unnamed_addr {
dec_label_pc_33bd:
  %v0_33c3 = load i32, i32* @eax, align 4
  ret i32 %v0_33c3
}

define i32 @_ZN7CScriptlsERK7CBigNum(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33c4:
  %stack_var_-28 = alloca i32, align 4
  %v2_33e2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_33e2, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_33ef = trunc i32 %v2_33e2 to i16
  %v3_33ef = call i32 @function_622e(i16 %v2_33ef, i32 %arg2)
  %v0_33f4 = load i32, i32* @esp, align 4
  %tmp108 = sub i32 3, %v0_33f4
  %v8_33f4 = and i32 %tmp108, %v0_33f4
  %v9_33f4 = icmp slt i32 %v8_33f4, 0
  store i1 %v9_33f4, i1* @of, align 1
  store i32 %arg1, i32* @eax, align 4
  %v2_3404 = call i32 @function_680a(i32 %arg1, i32 %v2_33e2)
  %v1_340f = call i32 @function_98fc(i32 %v2_33e2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_343c

bb:                                               ; preds = %dec_label_pc_33c4
  %v1_3421 = call i32 @function_3441()
  br label %dec_label_pc_343c

dec_label_pc_343c:                                ; preds = %dec_label_pc_33c4, %bb
  %v0_3423 = phi i32 [ %arg1, %dec_label_pc_33c4 ], [ %v1_3421, %bb ]
  ret i32 %v0_3423

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_343c, { 1, 0 }
}

define i32 @function_3425() local_unnamed_addr {
dec_label_pc_3425:
  %v0_3427 = load i32, i32* @ebp, align 4
  %v1_3427 = add i32 %v0_3427, -24
  %v1_342d = call i32 @function_98fc(i32 %v1_3427)
  %v0_3432 = load i32, i32* @ebx, align 4
  ret i32 %v0_3432

; uselistorder directives
  uselistorder i32 (i32)* @function_98fc, { 1, 0 }
}

define i32 @function_3441() local_unnamed_addr {
dec_label_pc_3441:
  %v0_3445 = load i32, i32* @eax, align 4
  ret i32 %v0_3445
}

define i32 @_ZN7CScriptlsERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3446:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-44 = alloca i16, align 2
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-20 = alloca i8, align 1
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_346a = call i32 @function_8e70(i32 %arg2)
  %tmp136 = icmp ult i32 %v1_346a, 76
  store i1 false, i1* @cf, align 1
  %v5_3475 = icmp eq i1 %tmp136, false
  store i32 %arg2, i32* @eax, align 4
  %v1_34ca = call i32 @function_8e70(i32 %arg2)
  br i1 %v5_3475, label %dec_label_pc_34c4, label %dec_label_pc_3479

dec_label_pc_3479:                                ; preds = %dec_label_pc_3446
  %v1_3484 = trunc i32 %v1_34ca to i8
  store i8 %v1_3484, i8* %stack_var_-21, align 1
  %v2_348a = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_348a, i32* @eax, align 4
  %v2_3494 = call i32 @function_9cf4(i32 %v2_348a, i32 %arg1)
  %v2_349f = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_349f, i32* @eax, align 4
  %v2_34a2 = ptrtoint i8* %stack_var_-21 to i32
  %v3_34a9 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_34a9, i32* @ecx, align 4
  %v4_34b7 = call i32 @function_a210(i32 %v2_349f, i32 %arg1, i32 %v3_34a9, i32 %v2_34a2)
  br label %dec_label_pc_368b

dec_label_pc_34c4:                                ; preds = %dec_label_pc_3446
  %tmp139 = icmp ult i32 %v1_34ca, 256
  store i1 false, i1* @cf, align 1
  %v5_34d7 = icmp eq i1 %tmp139, false
  br i1 %v5_34d7, label %dec_label_pc_3566, label %dec_label_pc_34df

dec_label_pc_34df:                                ; preds = %dec_label_pc_34c4
  store i8 76, i8* %stack_var_-20, align 1
  %v2_34e6 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_34e6, i32* @eax, align 4
  %v2_34f0 = call i32 @function_9cf4(i32 %v2_34e6, i32 %arg1)
  %v2_34fb = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_34fb, i32* @eax, align 4
  %v2_34fe = ptrtoint i8* %stack_var_-20 to i32
  %v3_3505 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_3505, i32* @ecx, align 4
  %v4_3513 = call i32 @function_a210(i32 %v2_34fb, i32 %arg1, i32 %v3_3505, i32 %v2_34fe)
  %v0_3518 = load i32, i32* @esp, align 4
  %v5_3518 = icmp ult i32 %v0_3518, 4
  store i1 %v5_3518, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-132, align 4
  %v1_3521 = call i32 @function_8e70(i32 %arg2)
  %v1_3526 = trunc i32 %v1_3521 to i8
  store i8 %v1_3526, i8* %stack_var_-19, align 1
  %v2_352c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_352c, i32* @eax, align 4
  store i32 %v2_352c, i32* %stack_var_-132, align 4
  %v2_3536 = call i32 @function_9cf4(i32 %v2_352c, i32 %arg1)
  %v2_3541 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_3541, i32* @eax, align 4
  %v2_3544 = ptrtoint i8* %stack_var_-19 to i32
  %v3_354b = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_354b, i32* @ecx, align 4
  store i32 %arg1, i32* %stack_var_-132, align 4
  store i32 %v2_3541, i32* %stack_var_-136, align 4
  %v4_3559 = call i32 @function_a210(i32 %v2_3541, i32 %arg1, i32 %v3_354b, i32 %v2_3544)
  br label %dec_label_pc_368b

dec_label_pc_3566:                                ; preds = %dec_label_pc_34c4
  store i32 %arg2, i32* @eax, align 4
  %v1_356c = call i32 @function_8e70(i32 %arg2)
  %tmp144 = icmp ult i32 %v1_356c, 65536
  %v5_3579 = icmp eq i1 %tmp144, false
  br i1 %v5_3579, label %dec_label_pc_3609, label %dec_label_pc_3581

dec_label_pc_3581:                                ; preds = %dec_label_pc_3566
  store i8 77, i8* %stack_var_-18, align 1
  %v2_3588 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_3588, i32* @eax, align 4
  %v2_3592 = call i32 @function_9cf4(i32 %v2_3588, i32 %arg1)
  %v2_359d = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_359d, i32* @eax, align 4
  %v2_35a0 = ptrtoint i8* %stack_var_-18 to i32
  %v3_35a7 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_35a7, i32* @ecx, align 4
  %v4_35b5 = call i32 @function_a210(i32 %v2_359d, i32 %arg1, i32 %v3_35a7, i32 %v2_35a0)
  %v0_35ba = load i32, i32* @esp, align 4
  %v5_35ba = icmp ult i32 %v0_35ba, 4
  store i1 %v5_35ba, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-132, align 4
  %v1_35c3 = call i32 @function_8e70(i32 %arg2)
  %v1_35c8 = trunc i32 %v1_35c3 to i16
  store i16 %v1_35c8, i16* %stack_var_-44, align 2
  %v2_35cc = ptrtoint i16* %stack_var_-44 to i32
  %v16_35cf = ptrtoint i32* %stack_var_-42 to i32
  %v2_35d5 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_35d5, i32* @eax, align 4
  store i32 %v2_35d5, i32* %stack_var_-132, align 4
  %v2_35df = call i32 @function_9cf4(i32 %v2_35d5, i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v3_35f5 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_35f5, i32* %stack_var_-132, align 4
  store i32 %arg1, i32* %stack_var_-136, align 4
  %v4_35ff = call i32 @function_a32a(i32 %arg1, i32 %v3_35f5, i32 %v2_35cc, i32 %v16_35cf)
  br label %dec_label_pc_368b

dec_label_pc_3609:                                ; preds = %dec_label_pc_3566
  store i8 78, i8* %stack_var_-17, align 1
  %v2_3610 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_3610, i32* @eax, align 4
  %v2_361a = call i32 @function_9cf4(i32 %v2_3610, i32 %arg1)
  %v2_3625 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_3625, i32* @eax, align 4
  %v2_3628 = ptrtoint i8* %stack_var_-17 to i32
  %v3_362f = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_362f, i32* @ecx, align 4
  %v4_363d = call i32 @function_a210(i32 %v2_3625, i32 %arg1, i32 %v3_362f, i32 %v2_3628)
  %v0_3642 = load i32, i32* @esp, align 4
  %v5_3642 = icmp ult i32 %v0_3642, 4
  store i1 %v5_3642, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-132, align 4
  %v1_364b = call i32 @function_8e70(i32 %arg2)
  %v4_3650 = trunc i32 %v1_364b to i16
  store i16 %v4_3650, i16* %stack_var_-44, align 2
  %v2_3653 = ptrtoint i16* %stack_var_-44 to i32
  %v16_3656 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v16_3656, i32* @eax, align 4
  store i32 %v16_3656, i32* %stack_var_-132, align 4
  %v2_3666 = call i32 @function_9cf4(i32 %v16_3656, i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v3_367c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_367c, i32* %stack_var_-132, align 4
  store i32 %arg1, i32* %stack_var_-136, align 4
  %v4_3686 = call i32 @function_a32a(i32 %arg1, i32 %v3_367c, i32 %v2_3653, i32 %v16_3656)
  br label %dec_label_pc_368b

dec_label_pc_368b:                                ; preds = %dec_label_pc_3609, %dec_label_pc_3581, %dec_label_pc_34df, %dec_label_pc_3479
  %v2_368b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_368b, i32* @eax, align 4
  %v1_3691 = load i32, i32* @esp, align 4
  %v2_3691 = add i32 %v1_3691, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_3691 = inttoptr i32 %v2_3691 to i32*
  store i32 %arg2, i32* %v3_3691, align 4
  %v1_3695 = load i32, i32* @esp, align 4
  %v2_3695 = inttoptr i32 %v1_3695 to i32*
  store i32 %v2_368b, i32* %v2_3695, align 4
  %v0_3698 = call i32 @function_9836()
  %v0_369d = load i32, i32* @esp, align 4
  %v2_36a0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_36a0, i32* @eax, align 4
  %v3_36a6 = inttoptr i32 %v0_369d to i32*
  store i32 %arg2, i32* %v3_36a6, align 4
  %v1_36aa = load i32, i32* @esp, align 4
  %v2_36aa = inttoptr i32 %v1_36aa to i32*
  store i32 %v2_36a0, i32* %v2_36aa, align 4
  %v0_36ad = call i32 @function_97e6()
  %v0_36b2 = load i32, i32* @esp, align 4
  %v2_36b8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_36b8, i32* @eax, align 4
  %v3_36bb = inttoptr i32 %v0_36b2 to i32*
  store i32 %arg1, i32* %v3_36bb, align 4
  %v1_36bf = load i32, i32* @esp, align 4
  %v2_36bf = inttoptr i32 %v1_36bf to i32*
  store i32 %v2_36b8, i32* %v2_36bf, align 4
  %v0_36c2 = load i32, i32* %stack_var_-136, align 4
  %v1_36c2 = load i32, i32* %stack_var_-132, align 4
  %v2_36c2 = call i32 @function_9cf4(i32 %v0_36c2, i32 %v1_36c2)
  %v0_36c7 = load i32, i32* @esp, align 4
  %v1_36c7 = sub i32 %v0_36c7, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %arg1, i32* @eax, align 4
  %v3_36cd = load i32, i32* %stack_var_-28, align 4
  %v2_36d0 = add i32 %v1_36c7, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_36d0 = inttoptr i32 %v2_36d0 to i32*
  store i32 %v3_36cd, i32* %v3_36d0, align 4
  %v3_36d4 = load i32, i32* %stack_var_-32, align 4
  %v1_36d7 = load i32, i32* @esp, align 4
  %v2_36d7 = add i32 %v1_36d7, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_36d7 = inttoptr i32 %v2_36d7 to i32*
  store i32 %v3_36d4, i32* %v3_36d7, align 4
  %v3_36db = load i32, i32* %stack_var_-36, align 4
  %v1_36de = load i32, i32* @esp, align 4
  %v2_36de = add i32 %v1_36de, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_36de = inttoptr i32 %v2_36de to i32*
  store i32 %v3_36db, i32* %v3_36de, align 4
  %v0_36e2 = load i32, i32* @eax, align 4
  %v1_36e2 = load i32, i32* @esp, align 4
  %v2_36e2 = inttoptr i32 %v1_36e2 to i32*
  store i32 %v0_36e2, i32* %v2_36e2, align 4
  %v0_36e5 = call i32 @function_a1b0()
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36f9

bb:                                               ; preds = %dec_label_pc_368b
  %v1_36f7 = call i32 @function_36fe()
  br label %dec_label_pc_36f9

dec_label_pc_36f9:                                ; preds = %bb, %dec_label_pc_368b
  %v2_36f7 = phi i32 [ %v1_36f7, %bb ], [ %arg1, %dec_label_pc_368b ]
  ret i32 %v2_36f7

; uselistorder directives
  uselistorder i32 %v16_3656, { 0, 2, 1, 3 }
  uselistorder i32 %v2_35d5, { 1, 0, 2 }
  uselistorder i32 %v2_3541, { 1, 0, 2 }
  uselistorder i32 %v2_352c, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_a32a, { 1, 0 }
  uselistorder i32 65536, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_a210, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9cf4, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 6, 7, 10, 9, 8, 5, 4, 3, 12, 11, 2, 1, 0, 14, 13, 16, 15 }
  uselistorder i32 %arg1, { 0, 17, 18, 19, 2, 1, 20, 21, 3, 22, 5, 4, 14, 15, 6, 16, 8, 7, 12, 9, 13, 10, 11 }
}

define i32 @function_36fe() local_unnamed_addr {
dec_label_pc_36fe:
  %v0_3702 = load i32, i32* @eax, align 4
  ret i32 %v0_3702
}

define i32 @_ZN9COutPointC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3704:
  store i32 %arg1, i32* @eax, align 4
  %v1_3721 = call i32 @function_3c0c(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v1_372c = call i32 @function_6e48(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_373d

bb:                                               ; preds = %dec_label_pc_3704
  %v1_373b = call i32 @function_3742()
  br label %dec_label_pc_373d

dec_label_pc_373d:                                ; preds = %bb, %dec_label_pc_3704
  %v2_373b = phi i32 [ %v1_373b, %bb ], [ 0, %dec_label_pc_3704 ]
  ret i32 %v2_373b

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_3742() local_unnamed_addr {
dec_label_pc_3742:
  %v0_3743 = load i32, i32* @eax, align 4
  ret i32 %v0_3743
}

define i32 @_ZN9COutPoint7SetNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3744:
  store i32 %arg1, i32* @eax, align 4
  %v3_3771 = call i32 @function_3d8c(i32 %arg1, i32 0, i32 0)
  %v1_3779 = add i32 %arg1, ptrtoint (i32* @mainParams to i32)
  %v2_3779 = inttoptr i32 %v1_3779 to i32*
  store i32 -1, i32* %v2_3779, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_378c

bb:                                               ; preds = %dec_label_pc_3744
  %v1_378a = call i32 @function_3791()
  br label %dec_label_pc_378c

dec_label_pc_378c:                                ; preds = %bb, %dec_label_pc_3744
  %v2_378a = phi i32 [ %v1_378a, %bb ], [ 0, %dec_label_pc_3744 ]
  ret i32 %v2_378a

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_3791() local_unnamed_addr {
dec_label_pc_3791:
  %v0_3792 = load i32, i32* @eax, align 4
  ret i32 %v0_3792
}

define i32 @_ZN5CTxInC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3794:
  %v0_37a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_37b9 = add i32 %arg1, 36
  %v1_37bf = call i32 @function_68c8(i32 %v1_37b9)
  %v0_37c4 = call i32 @function_4f80()
  %v2_37cc = add i32 %arg1, 48
  %v3_37cc = inttoptr i32 %v2_37cc to i32*
  store i32 %v0_37c4, i32* %v3_37cc, align 4
  ret i32 %v0_37a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_37d6:
  %v2_37d6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_37d6 = load i32, i32* @eax, align 4
  %v4_37d6 = trunc i32 %v3_37d6 to i8
  %v5_37d6 = add i8 %v4_37d6, %v2_37d6
  %v21_37d6 = inttoptr i32 %v3_37d6 to i8*
  store i8 %v5_37d6, i8* %v21_37d6, align 1
  %v0_37d8 = load i32, i32* @ebp, align 4
  %v1_37d8 = load i32, i32* @eax, align 4
  %v3_37d8 = add i32 %v0_37d8, -24
  %v4_37d8 = add i32 %v3_37d8, %v1_37d8
  %v5_37d8 = inttoptr i32 %v4_37d8 to i8*
  %v6_37d8 = load i8, i8* %v5_37d8, align 1
  %v7_37d8 = load i32, i32* @edx, align 4
  %v8_37d8 = lshr i32 %v7_37d8, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_37d8 = trunc i32 %v8_37d8 to i8
  %v10_37d8 = add i8 %v9_37d8, %v6_37d8
  store i8 %v10_37d8, i8* %v5_37d8, align 1
  %v31_37d8 = load i32, i32* @eax, align 4
  ret i32 %v31_37d8
}

define i32 @function_37df() local_unnamed_addr {
dec_label_pc_37df:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37df = load i32, i32* %ecx.global-to-local, align 4
  %v1_37df = add i32 %v0_37df, -1
  store i32 %v1_37df, i32* %ecx.global-to-local, align 4
  %v0_37e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_37e1
}

define i32 @_ZN6CTxOutC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_37e2:
  %v1_37fd = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v1_3803 = call i32 @function_6916(i32 %v1_37fd)
  store i32 %arg1, i32* @eax, align 4
  %v1_380e = call i32 @function_7028(i32 %arg1)
  %v0_3813 = call i32 @function_382f()
  ret i32 %v0_3813
}

define i32 @function_3816() local_unnamed_addr {
dec_label_pc_3816:
  %eax.global-to-local = alloca i32, align 4
  %v0_3816 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3816
}

define i32 @function_382f() local_unnamed_addr {
dec_label_pc_382f:
  %v0_382f = load i32, i32* @ebp, align 4
  %v1_382f = add i32 %v0_382f, -12
  %v2_382f = inttoptr i32 %v1_382f to i32*
  %v3_382f = load i32, i32* %v2_382f, align 4
  %v1_3832 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3832 = xor i32 %v1_3832, %v3_382f
  ret i32 %v2_3832
}

define i32 @_ZN6CTxOut7SetNullEv() local_unnamed_addr {
dec_label_pc_3846:
  %eax.global-to-local = alloca i32, align 4
  %v17_3849 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_3849
}

define i32 @function_384e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_384e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_384e = load i32, i32* @ecx, align 4
  %v1_384e = add i32 %v0_384e, -1587157947
  %v2_384e = inttoptr i32 %v1_384e to i8*
  %v3_384e = load i8, i8* %v2_384e, align 1
  %v5_384e = trunc i32 %v0_384e to i8
  %v6_384e = or i8 %v3_384e, %v5_384e
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_384e, i8* %v2_384e, align 1
  %v0_3854 = load i32, i32* @eax, align 4
  %v1_3854 = trunc i32 %v0_3854 to i8
  %v2_3854 = load i1, i1* %cf.global-to-local, align 1
  %v3_3854 = zext i1 %v2_3854 to i8
  %v4_3854 = add i8 %v3_3854, %v1_3854
  %v19_3854 = icmp ule i8 %v4_3854, %v1_3854
  %v21_3854 = icmp eq i1 %v2_3854, %v19_3854
  store i1 %v21_3854, i1* %cf.global-to-local, align 1
  %v22_3854 = zext i8 %v4_3854 to i32
  %v24_3854 = and i32 %v0_3854, -256
  %v25_3854 = or i32 %v22_3854, %v24_3854
  store i32 %v25_3854, i32* %eax.global-to-local, align 4
  %v1_3856 = inttoptr i32 %v25_3854 to i8*
  %v2_3856 = load i8, i8* %v1_3856, align 1
  %v5_3856 = add i8 %v2_3856, %v4_3854
  store i8 %v5_3856, i8* %v1_3856, align 1
  %v0_3858 = load i32, i32* %eax.global-to-local, align 4
  %v1_3858 = load i32, i32* @ebp, align 4
  %v2_3858 = add i32 %v1_3858, -12
  %v3_3858 = inttoptr i32 %v2_3858 to i32*
  store i32 %v0_3858, i32* %v3_3858, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_385d = load i32, i32* @ebp, align 4
  %v1_385d = add i32 %v0_385d, -28
  %v2_385d = inttoptr i32 %v1_385d to i32*
  %v3_385d = load i32, i32* %v2_385d, align 4
  store i32 %v3_385d, i32* %eax.global-to-local, align 4
  %v1_3860 = inttoptr i32 %v3_385d to i32*
  store i32 -1, i32* %v1_3860, align 4
  %v0_3866 = load i32, i32* %eax.global-to-local, align 4
  %v1_3866 = add i32 %v0_3866, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_3866 = inttoptr i32 %v1_3866 to i32*
  store i32 -1, i32* %v2_3866, align 4
  %v0_386d = load i32, i32* @ebp, align 4
  %v1_386d = add i32 %v0_386d, -28
  %v2_386d = inttoptr i32 %v1_386d to i32*
  %v3_386d = load i32, i32* %v2_386d, align 4
  %v1_3870 = add i32 %v3_386d, ptrtoint (i32* @global_var_8.883 to i32)
  %v5_3870 = icmp ult i32 %v1_3870, %v3_386d
  store i1 %v5_3870, i1* %cf.global-to-local, align 1
  store i32 %v1_3870, i32* @eax, align 4
  %v1_3876 = call i32 @function_a78a(i32 %v1_3870)
  store i32 %v1_3876, i32* %eax.global-to-local, align 4
  %v0_387b = load i32, i32* @ebp, align 4
  %v1_387b = add i32 %v0_387b, -12
  %v2_387b = inttoptr i32 %v1_387b to i32*
  %v3_387b = load i32, i32* %v2_387b, align 4
  store i32 %v3_387b, i32* %eax.global-to-local, align 4
  %v1_387e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_387e = xor i32 %v1_387e, %v3_387b
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_387e = icmp eq i32 %v2_387e, 0
  store i32 %v2_387e, i32* @eax, align 4
  br i1 %v3_387e, label %bb, label %dec_label_pc_3887

bb:                                               ; preds = %dec_label_pc_384e
  %v1_3885 = call i32 @function_388c()
  store i32 %v1_3885, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3887

dec_label_pc_3887:                                ; preds = %bb, %dec_label_pc_384e
  %v2_3885 = phi i32 [ %v1_3885, %bb ], [ %v2_387e, %dec_label_pc_384e ]
  ret i32 %v2_3885

; uselistorder directives
  uselistorder i32 %v3_386d, { 1, 0 }
  uselistorder i8 %v4_3854, { 0, 2, 1 }
  uselistorder i8 %v1_3854, { 1, 0 }
}

define i32 @function_388c() local_unnamed_addr {
dec_label_pc_388c:
  %v0_388d = load i32, i32* @eax, align 4
  ret i32 %v0_388d
}

define i32 @_ZN12CTransactionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_388e:
  %v1_38a9 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_38a9, i32* @eax, align 4
  %v2_38af = call i32 @function_a958(i32 %v1_38a9)
  %v1_38b7 = add i32 %arg1, 16
  store i32 %v1_38b7, i32* @eax, align 4
  %v2_38bd = call i32 @function_aa08(i32 %v1_38b7)
  store i32 %arg1, i32* @eax, align 4
  %v2_38c8 = call i32 @function_71a0(i32 %arg1)
  %v0_38cd = call i32 @function_38fb()
  ret i32 %v0_38cd
}

define i32 @function_38cf() local_unnamed_addr {
dec_label_pc_38cf:
  %eax.global-to-local = alloca i32, align 4
  %v0_38cf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_38cf, i32* @ebx, align 4
  %v0_38d1 = load i32, i32* @ebp, align 4
  %v1_38d1 = add i32 %v0_38d1, -28
  %v2_38d1 = inttoptr i32 %v1_38d1 to i32*
  %v3_38d1 = load i32, i32* %v2_38d1, align 4
  %v1_38d4 = add i32 %v3_38d1, 16
  store i32 %v1_38d4, i32* %eax.global-to-local, align 4
  %v1_38df = call i32 @function_38e3(i32 %v1_38d4)
  store i32 %v1_38df, i32* %eax.global-to-local, align 4
  ret i32 %v1_38df
}

define i32 @function_38e1() local_unnamed_addr {
dec_label_pc_38e1:
  %eax.global-to-local = alloca i32, align 4
  %v0_38e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38e1
}

define i32 @function_38e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_38e3:
  %v0_38e3 = load i32, i32* @ebp, align 4
  %v1_38e3 = add i32 %v0_38e3, -28
  %v2_38e3 = inttoptr i32 %v1_38e3 to i32*
  %v3_38e3 = load i32, i32* %v2_38e3, align 4
  %v1_38e6 = add i32 %v3_38e3, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_38ec = call i32 @__cxa_end_catch.712(i32 %v1_38e6)
  %v0_38f1 = load i32, i32* @ebx, align 4
  ret i32 %v0_38f1
}

define i32 @function_38fb() local_unnamed_addr {
dec_label_pc_38fb:
  %v0_38fb = load i32, i32* @ebp, align 4
  %v1_38fb = add i32 %v0_38fb, -12
  %v2_38fb = inttoptr i32 %v1_38fb to i32*
  %v3_38fb = load i32, i32* %v2_38fb, align 4
  %v1_38fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38fe = xor i32 %v1_38fe, %v3_38fb
  ret i32 %v2_38fe
}

define i32 @_ZN12CTransaction7SetNullEv() local_unnamed_addr {
dec_label_pc_3912:
  %eax.global-to-local = alloca i32, align 4
  %v5_3912 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_3912
}

define i32 @function_3914(i32 %arg1) local_unnamed_addr {
dec_label_pc_3914:
  %v0_391f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3924 = load i32, i32* @ebp, align 4
  %v2_3924 = add i32 %v1_3924, -12
  %v3_3924 = inttoptr i32 %v2_3924 to i32*
  store i32 %v0_391f, i32* %v3_3924, align 4
  %v0_3929 = load i32, i32* @ebp, align 4
  %v1_3929 = add i32 %v0_3929, -28
  %v2_3929 = inttoptr i32 %v1_3929 to i32*
  %v3_3929 = load i32, i32* %v2_3929, align 4
  %v1_392c = inttoptr i32 %v3_3929 to i32*
  store i32 1, i32* %v1_392c, align 4
  %v0_3932 = load i32, i32* @ebp, align 4
  %v1_3932 = add i32 %v0_3932, -28
  %v2_3932 = inttoptr i32 %v1_3932 to i32*
  %v3_3932 = load i32, i32* %v2_3932, align 4
  %v1_3935 = add i32 %v3_3932, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_3935, i32* @eax, align 4
  %v2_393b = call i32 @function_ab3c(i32 %v1_3935)
  %v0_3940 = load i32, i32* @ebp, align 4
  %v1_3940 = add i32 %v0_3940, -28
  %v2_3940 = inttoptr i32 %v1_3940 to i32*
  %v3_3940 = load i32, i32* %v2_3940, align 4
  %v1_3943 = add i32 %v3_3940, 16
  %v4_3943 = icmp ugt i32 %v3_3940, -17
  store i1 %v4_3943, i1* @cf, align 1
  store i32 %v1_3943, i32* @eax, align 4
  %v2_3949 = call i32 @function_ab7a(i32 %v1_3943)
  %v0_394e = load i32, i32* @ebp, align 4
  %v1_394e = add i32 %v0_394e, -28
  %v2_394e = inttoptr i32 %v1_394e to i32*
  %v3_394e = load i32, i32* %v2_394e, align 4
  %v1_3951 = add i32 %v3_394e, ptrtoint (i32* @global_var_1c.886 to i32)
  %v2_3951 = inttoptr i32 %v1_3951 to i32*
  store i32 0, i32* %v2_3951, align 4
  %v0_3958 = load i32, i32* @ebp, align 4
  %v1_3958 = add i32 %v0_3958, -12
  %v2_3958 = inttoptr i32 %v1_3958 to i32*
  %v3_3958 = load i32, i32* %v2_3958, align 4
  %v1_395b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_395b = xor i32 %v1_395b, %v3_3958
  %v3_395b = icmp eq i32 %v2_395b, 0
  store i32 %v2_395b, i32* @eax, align 4
  br i1 %v3_395b, label %bb, label %dec_label_pc_3964

bb:                                               ; preds = %dec_label_pc_3914
  %v1_3962 = call i32 @function_3969()
  br label %dec_label_pc_3964

dec_label_pc_3964:                                ; preds = %bb, %dec_label_pc_3914
  %v2_3962 = phi i32 [ %v1_3962, %bb ], [ %v2_395b, %dec_label_pc_3914 ]
  ret i32 %v2_3962
}

define i32 @function_3969() local_unnamed_addr {
dec_label_pc_3969:
  %v0_396a = load i32, i32* @eax, align 4
  ret i32 %v0_396a
}

define i32 @_ZN6CTxOutD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_396c:
  %v1_3986 = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  store i32 %v1_3986, i32* @eax, align 4
  %v1_398c = call i32 @function_6b84(i32 %v1_3986)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_399d

bb:                                               ; preds = %dec_label_pc_396c
  %v1_399b = call i32 @function_39a2()
  br label %dec_label_pc_399d

dec_label_pc_399d:                                ; preds = %bb, %dec_label_pc_396c
  %v2_399b = phi i32 [ %v1_399b, %bb ], [ 0, %dec_label_pc_396c ]
  ret i32 %v2_399b
}

define i32 @function_39a2() local_unnamed_addr {
dec_label_pc_39a2:
  %v0_39a3 = load i32, i32* @eax, align 4
  ret i32 %v0_39a3
}

define i32 @_ZN6CTxOutC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39a4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_39c4 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_39c4 = inttoptr i32 %v1_39c4 to i32*
  %v3_39c4 = load i32, i32* %v2_39c4, align 4
  %v1_39c7 = inttoptr i32 %arg2 to i32*
  %v2_39c7 = load i32, i32* %v1_39c7, align 4
  store i32 %v2_39c7, i32* %arg1, align 4
  %v2_39ce = add i32 %tmp103, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_39ce = inttoptr i32 %v2_39ce to i32*
  store i32 %v3_39c4, i32* %v3_39ce, align 4
  %v1_39d4 = add i32 %arg2, ptrtoint (i32* @global_var_8.883 to i32)
  %v1_39da = add i32 %tmp103, ptrtoint (i32* @global_var_8.883 to i32)
  store i32 %v1_39da, i32* @eax, align 4
  %v2_39e4 = call i32 @function_6b0e(i32 %v1_39da, i32 %v1_39d4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_39f5

bb:                                               ; preds = %dec_label_pc_39a4
  %v1_39f3 = call i32 @function_39fa()
  br label %dec_label_pc_39f5

dec_label_pc_39f5:                                ; preds = %bb, %dec_label_pc_39a4
  %v2_39f3 = phi i32 [ %v1_39f3, %bb ], [ 0, %dec_label_pc_39a4 ]
  ret i32 %v2_39f3

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_39fa() local_unnamed_addr {
dec_label_pc_39fa:
  %v0_39fb = load i32, i32* @eax, align 4
  ret i32 %v0_39fb
}

define i32 @_ZN12CBlockHeaderC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_39fc:
  %v1_3a16 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_3a16, i32* @eax, align 4
  %v2_3a1c = call i32 @function_3f04(i32 %v1_3a16)
  %v1_3a24 = add i32 %arg1, 36
  store i32 %v1_3a24, i32* @eax, align 4
  %v2_3a2a = call i32 @function_3f04(i32 %v1_3a24)
  store i32 %arg1, i32* @eax, align 4
  %v2_3a35 = call i32 @function_744a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3a46

bb:                                               ; preds = %dec_label_pc_39fc
  %v1_3a44 = call i32 @function_3a4b()
  br label %dec_label_pc_3a46

dec_label_pc_3a46:                                ; preds = %bb, %dec_label_pc_39fc
  %v2_3a44 = phi i32 [ %v1_3a44, %bb ], [ 0, %dec_label_pc_39fc ]
  ret i32 %v2_3a44

; uselistorder directives
  uselistorder i32 (i32)* @function_3f04, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_3a4b() local_unnamed_addr {
dec_label_pc_3a4b:
  %v0_3a4c = load i32, i32* @eax, align 4
  ret i32 %v0_3a4c
}

define i32 @_ZN12CBlockHeader7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3a4e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 2, i32* %arg1, align 4
  %v1_3a71 = add i32 %tmp102, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_3a71, i32* @eax, align 4
  %v4_3a87 = call i32 @function_4096(i32 %v1_3a71, i32 0, i32 0)
  %v1_3a8f = add i32 %tmp102, 36
  store i32 %v1_3a8f, i32* @eax, align 4
  %v4_3aa5 = call i32 @function_4096(i32 %v1_3a8f, i32 0, i32 0)
  %v1_3aad = add i32 %tmp102, 68
  %v2_3aad = inttoptr i32 %v1_3aad to i32*
  store i32 0, i32* %v2_3aad, align 4
  %v1_3ab7 = add i32 %tmp102, 72
  %v2_3ab7 = inttoptr i32 %v1_3ab7 to i32*
  store i32 0, i32* %v2_3ab7, align 4
  %v1_3ac1 = add i32 %tmp102, 76
  %v2_3ac1 = inttoptr i32 %v1_3ac1 to i32*
  store i32 0, i32* %v2_3ac1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3ad4

bb:                                               ; preds = %dec_label_pc_3a4e
  %v1_3ad2 = call i32 @function_3ad9()
  br label %dec_label_pc_3ad4

dec_label_pc_3ad4:                                ; preds = %bb, %dec_label_pc_3a4e
  %v2_3ad2 = phi i32 [ %v1_3ad2, %bb ], [ 0, %dec_label_pc_3a4e ]
  ret i32 %v2_3ad2

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder i32 76, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_4096, { 1, 0 }
}

define i32 @function_3ad9() local_unnamed_addr {
dec_label_pc_3ad9:
  %v0_3ada = load i32, i32* @eax, align 4
  ret i32 %v0_3ada
}

define i32 @_ZN6CBlockC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3adc:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_3afa = call i32 @function_74d8(i32 %arg1)
  %v1_3b02 = add i32 %arg1, 80
  %v9_3b02 = icmp eq i32 %v1_3b02, 0
  store i1 %v9_3b02, i1* @zf, align 1
  store i32 %v1_3b02, i32* @eax, align 4
  %v1_3b08 = call i32 @function_af54(i32 %v1_3b02)
  %v1_3b10 = add i32 %arg1, 92
  %v1_3b16 = call i32 @function_b004(i32 %v1_3b10)
  store i32 %arg1, i32* @eax, align 4
  %v1_3b21 = call i32 @function_7648(i32 %arg1)
  %v0_3b26 = call i32 @function_3b54()
  ret i32 %v0_3b26
}

define i32 @function_3b28() local_unnamed_addr {
dec_label_pc_3b28:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b28 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3b28, i32* @ebx, align 4
  %v0_3b2a = load i32, i32* @ebp, align 4
  %v1_3b2a = add i32 %v0_3b2a, -28
  %v2_3b2a = inttoptr i32 %v1_3b2a to i32*
  %v3_3b2a = load i32, i32* %v2_3b2a, align 4
  %v1_3b2d = add i32 %v3_3b2a, 92
  store i32 %v1_3b2d, i32* %eax.global-to-local, align 4
  %v1_3b38 = call i32 @function_3b3c(i32 %v1_3b2d)
  store i32 %v1_3b38, i32* %eax.global-to-local, align 4
  ret i32 %v1_3b38
}

define i32 @function_3b3a() local_unnamed_addr {
dec_label_pc_3b3a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b3a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b3a
}

define i32 @function_3b3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b3c:
  %v0_3b4a = load i32, i32* @ebx, align 4
  ret i32 %v0_3b4a
}

define i32 @function_3b54() local_unnamed_addr {
dec_label_pc_3b54:
  %v0_3b54 = load i32, i32* @ebp, align 4
  %v1_3b54 = add i32 %v0_3b54, -12
  %v2_3b54 = inttoptr i32 %v1_3b54 to i32*
  %v3_3b54 = load i32, i32* %v2_3b54, align 4
  %v1_3b57 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b57 = xor i32 %v1_3b57, %v3_3b54
  %v3_3b57 = icmp eq i32 %v2_3b57, 0
  store i32 %v2_3b57, i32* @eax, align 4
  br i1 %v3_3b57, label %bb, label %dec_label_pc_3b60

bb:                                               ; preds = %dec_label_pc_3b54
  %v1_3b5e = call i32 @function_3b65()
  br label %dec_label_pc_3b60

dec_label_pc_3b60:                                ; preds = %bb, %dec_label_pc_3b54
  %v2_3b5e = phi i32 [ %v1_3b5e, %bb ], [ %v2_3b57, %dec_label_pc_3b54 ]
  ret i32 %v2_3b5e
}

define i32 @function_3b65() local_unnamed_addr {
dec_label_pc_3b65:
  %v0_3b6a = load i32, i32* @eax, align 4
  ret i32 %v0_3b6a
}

define i32 @_ZN6CBlock7SetNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b6c:
  store i32 %arg1, i32* @eax, align 4
  %v1_3b89 = call i32 @function_75ba(i32 %arg1)
  %v1_3b91 = add i32 %arg1, 80
  store i32 %v1_3b91, i32* @eax, align 4
  %v1_3b97 = call i32 @function_b144(i32 %v1_3b91)
  %v1_3b9f = add i32 %arg1, 92
  %v1_3ba5 = call i32 @function_b182(i32 %v1_3b9f)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZN12CDNSSeedDataC1ERKSsS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3bbe:
  ret i32 %arg1
}

define i32 @function_3bf3() local_unnamed_addr {
dec_label_pc_3bf3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_3bf3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3bf3 = add i32 %v0_3bf3, 1351476293
  %v2_3bf3 = inttoptr i32 %v1_3bf3 to i32*
  %v3_3bf3 = load i32, i32* %v2_3bf3, align 4
  %v4_3bf3 = add i32 %v3_3bf3, -1
  store i32 %v4_3bf3, i32* %v2_3bf3, align 4
  %v0_3bf9 = load i32, i32* %eax.global-to-local, align 4
  %v1_3bf9 = trunc i32 %v0_3bf9 to i8
  %v6_3bf9 = icmp ugt i8 %v1_3bf9, 116
  %v0_3bfb = load i32, i32* %ebp.global-to-local, align 4
  %v1_3bfb = add i32 %v0_3bfb, 1
  store i32 %v1_3bfb, i32* @ebp, align 4
  %v1_3bfc = load i32, i32* %ecx.global-to-local, align 4
  %v2_3bfc = add i32 %v1_3bfc, -1996217276
  %v3_3bfc = inttoptr i32 %v2_3bfc to double*
  %v4_3bfc = load double, double* %v3_3bfc, align 4
  %v5_3bfc = fpext double %v4_3bfc to x86_fp80
  %v6_3bfc = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_3bfc = fmul x86_fp80 %v5_3bfc, %v6_3bfc
  store x86_fp80 %v7_3bfc, x86_fp80* %st0.global-to-local, align 4
  %v3_3c02 = zext i1 %v6_3bf9 to i32
  %v4_3c02 = add i32 %v0_3bf9, 175
  %v5_3c02 = add i32 %v4_3c02, %v3_3c02
  %v25_3c02 = and i32 %v5_3c02, 255
  %v27_3c02 = and i32 %v0_3bf9, -256
  %v28_3c02 = or i32 %v25_3c02, %v27_3c02
  store i32 %v28_3c02, i32* %eax.global-to-local, align 4
  %v0_3c09 = call i32 @function_3c22()
  store i32 %v0_3c09, i32* %eax.global-to-local, align 4
  ret i32 %v0_3c09

; uselistorder directives
  uselistorder i32 %v0_3bf9, { 1, 0, 2 }
}

define i32 @function_3c0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c0c:
  %v0_3c0c = load i32, i32* @eax, align 4
  ret i32 %v0_3c0c
}

define i32 @function_3c22() local_unnamed_addr {
dec_label_pc_3c22:
  %v0_3c22 = load i32, i32* @ebp, align 4
  %v1_3c22 = add i32 %v0_3c22, -12
  %v2_3c22 = inttoptr i32 %v1_3c22 to i32*
  %v3_3c22 = load i32, i32* %v2_3c22, align 4
  %v1_3c25 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3c25 = xor i32 %v1_3c25, %v3_3c22
  %v3_3c25 = icmp eq i32 %v2_3c25, 0
  store i32 %v2_3c25, i32* @eax, align 4
  br i1 %v3_3c25, label %bb, label %dec_label_pc_3c2e

bb:                                               ; preds = %dec_label_pc_3c22
  %v1_3c2c = call i32 @function_3c33()
  br label %dec_label_pc_3c2e

dec_label_pc_3c2e:                                ; preds = %bb, %dec_label_pc_3c22
  %v2_3c2c = phi i32 [ %v1_3c2c, %bb ], [ %v2_3c25, %dec_label_pc_3c22 ]
  ret i32 %v2_3c2c
}

define i32 @function_3c33() local_unnamed_addr {
dec_label_pc_3c33:
  %v0_3c38 = load i32, i32* @eax, align 4
  ret i32 %v0_3c38
}

define i32 @_ZNK12CChainParams18RequireRPCPasswordEv(i32 %arg1) {
dec_label_pc_3c3a:
  ret i32 1
}

define i32 @_ZN12CChainParamsC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3c6a:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_12470.899 to i32), i32* %arg1, align 4
  %v1_3c90 = add i32 %tmp101, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %v1_3c90, i32* @eax, align 4
  %v2_3c96 = call i32 @function_4172(i32 %v1_3c90)
  %v1_3c9e = add i32 %tmp101, 40
  store i32 %v1_3c9e, i32* @eax, align 4
  %v2_3ca4 = call i32 @function_a2f8(i32 %v1_3c9e)
  %v1_3cac = add i32 %tmp101, 60
  store i32 %v1_3cac, i32* %edi.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  %v4_3cc9110 = and i32 %tmp101, -256
  %v5_3cc9111 = or i32 %v4_3cc9110, 1
  store i32 %v5_3cc9111, i32* @eax, align 4
  br label %dec_label_pc_3cb8

dec_label_pc_3cb8:                                ; preds = %dec_label_pc_3c6a, %dec_label_pc_3cb8
  %v0_3cb8112 = phi i32 [ %v1_3cac, %dec_label_pc_3c6a ], [ %v1_3cc0, %dec_label_pc_3cb8 ]
  %v2_3cbb = call i32 @function_645c(i32 %v0_3cb8112)
  %v0_3cc0 = load i32, i32* %edi.global-to-local, align 4
  %v1_3cc0 = add i32 %v0_3cc0, 20
  store i32 %v1_3cc0, i32* %edi.global-to-local, align 4
  %v0_3cc3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3cc3 = add i32 %v0_3cc3, -1
  %v5_3cc3 = icmp eq i32 %v0_3cc3, 0
  store i32 %v1_3cc3, i32* %ebx.global-to-local, align 4
  %v1_3cc9 = icmp eq i1 %v5_3cc3, false
  %v2_3cc9 = zext i1 %v1_3cc9 to i32
  %v4_3cc9 = and i32 %v2_3cbb, -256
  %v5_3cc9 = or i32 %v2_3cc9, %v4_3cc9
  store i32 %v5_3cc9, i32* @eax, align 4
  %v5_3ccc = icmp eq i1 %v1_3cc9, false
  %v1_3cce = icmp eq i1 %v5_3ccc, false
  br i1 %v1_3cce, label %dec_label_pc_3cb8, label %dec_label_pc_3cd0

dec_label_pc_3cd0:                                ; preds = %dec_label_pc_3cb8
  %v1_3cd3 = add i32 %tmp101, 104
  ret i32 %v1_3cd3

; uselistorder directives
  uselistorder i32 %v1_3cc0, { 1, 0 }
  uselistorder i32 %tmp101, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_3cb8, { 1, 0 }
}

define i32 @function_3cdd() local_unnamed_addr {
dec_label_pc_3cdd:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3cdd = load i32, i32* %ebx.global-to-local, align 4
  %v1_3cdd = add i32 %v0_3cdd, -1065102267
  %v2_3cdd = inttoptr i32 %v1_3cdd to i32*
  %v3_3cdd = load i32, i32* %v2_3cdd, align 4
  %v4_3cdd = add i32 %v3_3cdd, -1
  store i32 %v4_3cdd, i32* %v2_3cdd, align 4
  %v0_3ce3 = load i32, i32* %edx.global-to-local, align 4
  %v1_3ce3 = trunc i32 %v0_3ce3 to i16
  %v2_3ce3 = call i8 @__asm_insb(i16 %v1_3ce3)
  %v3_3ce3 = load i32, i32* %edi.global-to-local, align 4
  %v4_3ce3 = inttoptr i32 %v3_3ce3 to i8*
  store i8 %v2_3ce3, i8* %v4_3ce3, align 1
  %v0_3ce4 = load i32, i32* %eax.global-to-local, align 4
  %v1_3cec = call i32 @function_3d69(i32 %v0_3ce4)
  store i32 %v1_3cec, i32* %eax.global-to-local, align 4
  ret i32 %v1_3cec
}

define i32 @function_3cee() local_unnamed_addr {
dec_label_pc_3cee:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3cee = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3cee, i32* %edi.global-to-local, align 4
  %v0_3cf0 = load i32, i32* %esi.global-to-local, align 4
  %v1_3cf0 = icmp eq i32 %v0_3cf0, 0
  br i1 %v1_3cf0, label %dec_label_pc_3d0e, label %dec_label_pc_3cf4

dec_label_pc_3cf4:                                ; preds = %dec_label_pc_3cee
  %v1_3cf4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3cf4 = mul i32 %v1_3cf4, -20
  %v1_3cf7 = add i32 %v3_3cf4, 20
  %v10_3cf7 = icmp eq i32 %v1_3cf7, 0
  store i32 %v1_3cf7, i32* @eax, align 4
  %v3_3cfa = add i32 %v1_3cf7, %v0_3cf0
  store i32 %v3_3cfa, i32* %ebx.global-to-local, align 4
  br i1 %v10_3cf7, label %dec_label_pc_3d0e, label %dec_label_pc_3d01

dec_label_pc_3d01:                                ; preds = %dec_label_pc_3cf4, %dec_label_pc_3d01
  %v0_3d01109 = phi i32 [ %v0_3cfd.pre, %dec_label_pc_3d01 ], [ %v3_3cfa, %dec_label_pc_3cf4 ]
  %v1_3d01 = add i32 %v0_3d01109, -20
  store i32 %v1_3d01, i32* %ebx.global-to-local, align 4
  %v1_3d07 = call i32 @function_6592(i32 %v1_3d01)
  store i32 %v1_3d07, i32* @eax, align 4
  %v0_3cfd.pre = load i32, i32* @ebx, align 4
  %v1_3cfd.pre = load i32, i32* %esi.global-to-local, align 4
  %v12_3cfd = icmp eq i32 %v0_3cfd.pre, %v1_3cfd.pre
  br i1 %v12_3cfd, label %dec_label_pc_3cfd.dec_label_pc_3d0e.loopexit_crit_edge, label %dec_label_pc_3d01

dec_label_pc_3cfd.dec_label_pc_3d0e.loopexit_crit_edge: ; preds = %dec_label_pc_3d01
  %v0_3d0e.pre.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_3d0e

dec_label_pc_3d0e:                                ; preds = %dec_label_pc_3cf4, %dec_label_pc_3cfd.dec_label_pc_3d0e.loopexit_crit_edge, %dec_label_pc_3cee
  %v0_3d0e = phi i32 [ %v0_3cee, %dec_label_pc_3cee ], [ %v0_3d0e.pre.pre, %dec_label_pc_3cfd.dec_label_pc_3d0e.loopexit_crit_edge ], [ %v0_3cee, %dec_label_pc_3cf4 ]
  store i32 %v0_3d0e, i32* @ebx, align 4
  %v0_3d10 = call i32 @function_3d51()
  store i32 %v0_3d10, i32* %eax.global-to-local, align 4
  ret i32 %v0_3d10

; uselistorder directives
  uselistorder label %dec_label_pc_3d0e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_3d01, { 1, 0 }
}

define i32 @function_3d13() local_unnamed_addr {
dec_label_pc_3d13:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d13 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3d13
}

define i32 @function_3d22() local_unnamed_addr {
dec_label_pc_3d22:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3d22 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_3d22, i32* @esi, align 4
  %v0_3d24 = call i32 @function_3d28()
  ret i32 %v0_3d24
}

define i32 @function_3d26() local_unnamed_addr {
dec_label_pc_3d26:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d26 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3d26
}

define i32 @function_3d28() local_unnamed_addr {
dec_label_pc_3d28:
  %v0_3d28 = load i32, i32* @ebp, align 4
  %v1_3d28 = add i32 %v0_3d28, -44
  %v2_3d28 = inttoptr i32 %v1_3d28 to i32*
  %v3_3d28 = load i32, i32* %v2_3d28, align 4
  %v10_3d2b = icmp eq i32 %v3_3d28, -60
  br i1 %v10_3d2b, label %dec_label_pc_3d4f, label %dec_label_pc_3d32

dec_label_pc_3d32:                                ; preds = %dec_label_pc_3d28
  %v3_3d32 = load i32, i32* %v2_3d28, align 4
  %v1_3d35 = add i32 %v3_3d32, 100
  br label %dec_label_pc_3d38

dec_label_pc_3d38:                                ; preds = %dec_label_pc_3d42, %dec_label_pc_3d32
  %v0_3d42 = phi i32 [ %v0_3d3e.pre, %dec_label_pc_3d42 ], [ %v1_3d35, %dec_label_pc_3d32 ]
  %v0_3d38 = phi i32 [ %v0_3d38.pre, %dec_label_pc_3d42 ], [ %v0_3d28, %dec_label_pc_3d32 ]
  %v1_3d38 = add i32 %v0_3d38, -44
  %v2_3d38 = inttoptr i32 %v1_3d38 to i32*
  %v3_3d38 = load i32, i32* %v2_3d38, align 4
  %v1_3d3b = add i32 %v3_3d38, 60
  store i32 %v1_3d3b, i32* @eax, align 4
  %v12_3d3e = icmp eq i32 %v0_3d42, %v1_3d3b
  br i1 %v12_3d3e, label %dec_label_pc_3d4f, label %dec_label_pc_3d42

dec_label_pc_3d42:                                ; preds = %dec_label_pc_3d38
  %v1_3d42 = add i32 %v0_3d42, -20
  %v1_3d48 = call i32 @function_6592(i32 %v1_3d42)
  %v0_3d38.pre = load i32, i32* @ebp, align 4
  %v0_3d3e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_3d38

dec_label_pc_3d4f:                                ; preds = %dec_label_pc_3d38, %dec_label_pc_3d28
  %v1_3d4f = phi i32 [ 0, %dec_label_pc_3d28 ], [ %v1_3d3b, %dec_label_pc_3d38 ]
  ret i32 %v1_3d4f

; uselistorder directives
  uselistorder i32 %v1_3d3b, { 1, 0, 2 }
  uselistorder i32 %v0_3d42, { 1, 0 }
  uselistorder i32 (i32)* @function_6592, { 1, 0 }
}

define i32 @function_3d51() local_unnamed_addr {
dec_label_pc_3d51:
  %v0_3d5f = load i32, i32* @ebx, align 4
  ret i32 %v0_3d5f
}

define i32 @function_3d69(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d69:
  %v0_3d69 = load i32, i32* @ebp, align 4
  %v1_3d69 = add i32 %v0_3d69, -28
  %v2_3d69 = inttoptr i32 %v1_3d69 to i32*
  %v3_3d69 = load i32, i32* %v2_3d69, align 4
  %v1_3d6c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3d6c = xor i32 %v1_3d6c, %v3_3d69
  %v3_3d6c = icmp eq i32 %v2_3d6c, 0
  store i32 %v2_3d6c, i32* @eax, align 4
  br i1 %v3_3d6c, label %bb, label %dec_label_pc_3d75

bb:                                               ; preds = %dec_label_pc_3d69
  %v1_3d73 = call i32 @function_3d7a()
  br label %dec_label_pc_3d75

dec_label_pc_3d75:                                ; preds = %bb, %dec_label_pc_3d69
  %v2_3d73 = phi i32 [ %v1_3d73, %bb ], [ %v2_3d6c, %dec_label_pc_3d69 ]
  ret i32 %v2_3d73
}

define i32 @function_3d7a() local_unnamed_addr {
dec_label_pc_3d7a:
  %v0_3d81 = load i32, i32* @eax, align 4
  ret i32 %v0_3d81
}

define i32 @_ZN12CChainParamsD1Ev() local_unnamed_addr {
dec_label_pc_3d82:
  %eax.global-to-local = alloca i32, align 4
  %v16_3d87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v16_3d87
}

define i32 @function_3d8c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d8c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3d8c = load i32, i32* @ecx, align 4
  %v1_3d8c = add i32 %v0_3d8c, -1587157947
  %v2_3d8c = inttoptr i32 %v1_3d8c to i8*
  %v3_3d8c = load i8, i8* %v2_3d8c, align 1
  %v5_3d8c = trunc i32 %v0_3d8c to i8
  %v6_3d8c = or i8 %v3_3d8c, %v5_3d8c
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_3d8c, i8* %v2_3d8c, align 1
  %v0_3d92 = load i32, i32* @eax, align 4
  %v1_3d92 = trunc i32 %v0_3d92 to i8
  %v2_3d92 = load i1, i1* %cf.global-to-local, align 1
  %v3_3d92 = zext i1 %v2_3d92 to i8
  %v4_3d92 = add i8 %v3_3d92, %v1_3d92
  %v19_3d92 = icmp ule i8 %v4_3d92, %v1_3d92
  %v21_3d92 = icmp eq i1 %v2_3d92, %v19_3d92
  store i1 %v21_3d92, i1* %cf.global-to-local, align 1
  %v22_3d92 = zext i8 %v4_3d92 to i32
  %v24_3d92 = and i32 %v0_3d92, -256
  %v25_3d92 = or i32 %v22_3d92, %v24_3d92
  store i32 %v25_3d92, i32* %eax.global-to-local, align 4
  %v1_3d94 = inttoptr i32 %v25_3d92 to i8*
  %v2_3d94 = load i8, i8* %v1_3d94, align 1
  %v5_3d94 = add i8 %v2_3d94, %v4_3d92
  store i8 %v5_3d94, i8* %v1_3d94, align 1
  %v0_3d96 = load i32, i32* %eax.global-to-local, align 4
  %v1_3d96 = load i32, i32* @ebp, align 4
  %v2_3d96 = add i32 %v1_3d96, -12
  %v3_3d96 = inttoptr i32 %v2_3d96 to i32*
  store i32 %v0_3d96, i32* %v3_3d96, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_3d9b = load i32, i32* @ebp, align 4
  %v1_3d9b = add i32 %v0_3d9b, -28
  %v2_3d9b = inttoptr i32 %v1_3d9b to i32*
  %v3_3d9b = load i32, i32* %v2_3d9b, align 4
  store i32 %v3_3d9b, i32* %eax.global-to-local, align 4
  %v1_3d9e = inttoptr i32 %v3_3d9b to i32*
  store i32 ptrtoint (i32* @global_var_12470.899 to i32), i32* %v1_3d9e, align 4
  %v0_3da4 = load i32, i32* @ebp, align 4
  %v1_3da4 = add i32 %v0_3da4, -28
  %v2_3da4 = inttoptr i32 %v1_3da4 to i32*
  %v3_3da4 = load i32, i32* %v2_3da4, align 4
  %v1_3da7 = add i32 %v3_3da4, 108
  %v5_3da7 = icmp ugt i32 %v3_3da4, -109
  store i1 %v5_3da7, i1* %cf.global-to-local, align 1
  store i32 %v1_3da7, i32* @eax, align 4
  %v1_3dad = call i32 @function_b44c(i32 %v1_3da7)
  store i32 %v1_3dad, i32* %eax.global-to-local, align 4
  %v0_3db2 = load i32, i32* @ebp, align 4
  %v1_3db2 = add i32 %v0_3db2, -28
  %v2_3db2 = inttoptr i32 %v1_3db2 to i32*
  %v3_3db2 = load i32, i32* %v2_3db2, align 4
  %v1_3db5 = add i32 %v3_3db2, 104
  store i32 %v1_3db5, i32* %eax.global-to-local, align 4
  %v3_3dc0 = load i32, i32* %v2_3db2, align 4
  %v1_3dc3 = add i32 %v3_3dc0, 60
  %v10_3dc3 = icmp eq i32 %v1_3dc3, 0
  store i32 %v1_3dc3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v10_3dc3, label %dec_label_pc_3de7, label %dec_label_pc_3dca

dec_label_pc_3dca:                                ; preds = %dec_label_pc_3d8c
  %v3_3dca = load i32, i32* %v2_3db2, align 4
  store i32 %v3_3dca, i32* %eax.global-to-local, align 4
  %v1_3dcd = add i32 %v3_3dca, 100
  br label %dec_label_pc_3dd0

dec_label_pc_3dd0:                                ; preds = %dec_label_pc_3dda, %dec_label_pc_3dca
  %v0_3dda = phi i32 [ %v0_3dd6.pre, %dec_label_pc_3dda ], [ %v1_3dcd, %dec_label_pc_3dca ]
  %v0_3dd0 = phi i32 [ %v0_3dd0.pre, %dec_label_pc_3dda ], [ %v0_3db2, %dec_label_pc_3dca ]
  %v1_3dd0 = add i32 %v0_3dd0, -28
  %v2_3dd0 = inttoptr i32 %v1_3dd0 to i32*
  %v3_3dd0 = load i32, i32* %v2_3dd0, align 4
  %v1_3dd3 = add i32 %v3_3dd0, 60
  store i32 %v1_3dd3, i32* @eax, align 4
  %v7_3dd6 = icmp ult i32 %v0_3dda, %v1_3dd3
  store i1 %v7_3dd6, i1* %cf.global-to-local, align 1
  %v12_3dd6 = icmp eq i32 %v0_3dda, %v1_3dd3
  br i1 %v12_3dd6, label %dec_label_pc_3de7, label %dec_label_pc_3dda

dec_label_pc_3dda:                                ; preds = %dec_label_pc_3dd0
  %v1_3dda = add i32 %v0_3dda, -20
  %v5_3dda = icmp ult i32 %v0_3dda, 20
  store i1 %v5_3dda, i1* %cf.global-to-local, align 1
  store i32 %v1_3dda, i32* @ebx, align 4
  %v1_3de0 = call i32 @function_66aa(i32 %v1_3dda)
  store i32 %v1_3de0, i32* %eax.global-to-local, align 4
  %v0_3dd0.pre = load i32, i32* @ebp, align 4
  %v0_3dd6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_3dd0

dec_label_pc_3de7:                                ; preds = %dec_label_pc_3dd0, %dec_label_pc_3d8c
  %v0_3de7 = phi i32 [ %v0_3db2, %dec_label_pc_3d8c ], [ %v0_3dd0, %dec_label_pc_3dd0 ]
  %v1_3de7 = add i32 %v0_3de7, -28
  %v2_3de7 = inttoptr i32 %v1_3de7 to i32*
  %v3_3de7 = load i32, i32* %v2_3de7, align 4
  %v1_3dea = add i32 %v3_3de7, 40
  %v5_3dea = icmp ugt i32 %v3_3de7, -41
  store i1 %v5_3dea, i1* %cf.global-to-local, align 1
  store i32 %v1_3dea, i32* @eax, align 4
  %v1_3df0 = call i32 @function_a2ba(i32 %v1_3dea)
  store i32 %v1_3df0, i32* %eax.global-to-local, align 4
  %v0_3df5 = load i32, i32* @ebp, align 4
  %v1_3df5 = add i32 %v0_3df5, -12
  %v2_3df5 = inttoptr i32 %v1_3df5 to i32*
  %v3_3df5 = load i32, i32* %v2_3df5, align 4
  store i32 %v3_3df5, i32* %eax.global-to-local, align 4
  %v1_3df8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3df8 = xor i32 %v1_3df8, %v3_3df5
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3df8 = icmp eq i32 %v2_3df8, 0
  store i32 %v2_3df8, i32* @eax, align 4
  br i1 %v3_3df8, label %bb, label %dec_label_pc_3e01

bb:                                               ; preds = %dec_label_pc_3de7
  %v1_3dff = call i32 @function_3e63()
  store i32 %v1_3dff, i32* @eax, align 4
  br label %dec_label_pc_3e01

dec_label_pc_3e01:                                ; preds = %bb, %dec_label_pc_3de7
  %v0_3e01 = call i32 @function_3e5e()
  store i32 %v0_3e01, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e01

; uselistorder directives
  uselistorder i32 %v0_3dda, { 1, 2, 0, 3 }
  uselistorder i8 %v4_3d92, { 0, 2, 1 }
  uselistorder i8 %v1_3d92, { 1, 0 }
}

define i32 @function_3e04() local_unnamed_addr {
dec_label_pc_3e04:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e04 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e04
}

define i32 @function_3e13() local_unnamed_addr {
dec_label_pc_3e13:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3e13 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_3e13, i32* @esi, align 4
  %v0_3e15 = call i32 @function_3e19()
  ret i32 %v0_3e15
}

define i32 @function_3e17() local_unnamed_addr {
dec_label_pc_3e17:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e17
}

define i32 @function_3e19() local_unnamed_addr {
dec_label_pc_3e19:
  %v0_3e19 = load i32, i32* @ebp, align 4
  %v1_3e19 = add i32 %v0_3e19, -28
  %v2_3e19 = inttoptr i32 %v1_3e19 to i32*
  %v3_3e19 = load i32, i32* %v2_3e19, align 4
  %v10_3e1c = icmp eq i32 %v3_3e19, -60
  br i1 %v10_3e1c, label %dec_label_pc_3e40, label %dec_label_pc_3e23

dec_label_pc_3e23:                                ; preds = %dec_label_pc_3e19
  %v3_3e23 = load i32, i32* %v2_3e19, align 4
  %v1_3e26 = add i32 %v3_3e23, 100
  br label %dec_label_pc_3e29

dec_label_pc_3e29:                                ; preds = %dec_label_pc_3e33, %dec_label_pc_3e23
  %v0_3e33 = phi i32 [ %v0_3e2f.pre, %dec_label_pc_3e33 ], [ %v1_3e26, %dec_label_pc_3e23 ]
  %v0_3e29 = phi i32 [ %v0_3e29.pre, %dec_label_pc_3e33 ], [ %v0_3e19, %dec_label_pc_3e23 ]
  %v1_3e29 = add i32 %v0_3e29, -28
  %v2_3e29 = inttoptr i32 %v1_3e29 to i32*
  %v3_3e29 = load i32, i32* %v2_3e29, align 4
  %v1_3e2c = add i32 %v3_3e29, 60
  store i32 %v1_3e2c, i32* @eax, align 4
  %v12_3e2f = icmp eq i32 %v0_3e33, %v1_3e2c
  br i1 %v12_3e2f, label %dec_label_pc_3e40, label %dec_label_pc_3e33

dec_label_pc_3e33:                                ; preds = %dec_label_pc_3e29
  %v1_3e33 = add i32 %v0_3e33, -20
  store i32 %v1_3e33, i32* @ebx, align 4
  %v1_3e39 = call i32 @function_66aa(i32 %v1_3e33)
  %v0_3e29.pre = load i32, i32* @ebp, align 4
  %v0_3e2f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_3e29

dec_label_pc_3e40:                                ; preds = %dec_label_pc_3e29, %dec_label_pc_3e19
  %v0_3e40 = load i32, i32* @esi, align 4
  store i32 %v0_3e40, i32* @ebx, align 4
  %v0_3e42 = call i32 @function_3e46()
  ret i32 %v0_3e42

; uselistorder directives
  uselistorder i32 %v0_3e33, { 1, 0 }
  uselistorder i32 (i32)* @function_66aa, { 1, 0 }
  uselistorder i32 60, { 0, 3, 4, 1, 2 }
}

define i32 @function_3e44() local_unnamed_addr {
dec_label_pc_3e44:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e44 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e44
}

define i32 @function_3e46() local_unnamed_addr {
dec_label_pc_3e46:
  %v0_3e46 = load i32, i32* @ebp, align 4
  %v1_3e46 = add i32 %v0_3e46, -28
  %v2_3e46 = inttoptr i32 %v1_3e46 to i32*
  %v3_3e46 = load i32, i32* %v2_3e46, align 4
  %v1_3e49 = add i32 %v3_3e46, 40
  store i32 %v1_3e49, i32* @eax, align 4
  %v1_3e4f = call i32 @function_a2ba(i32 %v1_3e49)
  %v0_3e54 = load i32, i32* @ebx, align 4
  ret i32 %v0_3e54

; uselistorder directives
  uselistorder i32 (i32)* @function_a2ba, { 1, 0 }
}

define i32 @function_3e5e() local_unnamed_addr {
dec_label_pc_3e5e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3e63() local_unnamed_addr {
dec_label_pc_3e63:
  %v0_3e69 = load i32, i32* @eax, align 4
  ret i32 %v0_3e69
}

define i32 @_ZN6CBlockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e6a:
  %v1_3e85 = add i32 %arg1, 92
  %v1_3e8b = call i32 @function_b3c8(i32 %v1_3e85)
  %v1_3e93 = add i32 %arg1, 80
  %v9_3e93 = icmp eq i32 %v1_3e93, 0
  store i1 %v9_3e93, i1* @zf, align 1
  store i32 %v1_3e93, i32* @eax, align 4
  %v1_3e99 = call i32 @function_b318(i32 %v1_3e93)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3eaa

bb:                                               ; preds = %dec_label_pc_3e6a
  %v1_3ea8 = call i32 @function_3ecb()
  store i32 %v1_3ea8, i32* @eax, align 4
  br label %dec_label_pc_3eaa

dec_label_pc_3eaa:                                ; preds = %bb, %dec_label_pc_3e6a
  %v0_3eaa = call i32 @function_3ec6()
  ret i32 %v0_3eaa

; uselistorder directives
  uselistorder i32 92, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3ead() local_unnamed_addr {
dec_label_pc_3ead:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ead = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3ead
}

define i32 @function_3ec6() local_unnamed_addr {
dec_label_pc_3ec6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3ecb() local_unnamed_addr {
dec_label_pc_3ecb:
  %v0_3ed0 = load i32, i32* @eax, align 4
  ret i32 %v0_3ed0
}

define i32 @_ZN12CTransactionD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ed2:
  %v1_3eed = add i32 %arg1, 16
  store i32 %v1_3eed, i32* @eax, align 4
  %v2_3ef3 = call i32 @function_b082(i32 %v1_3eed)
  %v1_3efb = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  ret i32 %v1_3efb
}

define i32 @function_3f04(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f04:
  %v2_3f04 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_3f04 = load i32, i32* @eax, align 4
  %v4_3f04 = trunc i32 %v3_3f04 to i8
  %v5_3f04 = add i8 %v4_3f04, %v2_3f04
  %v21_3f04 = inttoptr i32 %v3_3f04 to i8*
  store i8 %v5_3f04, i8* %v21_3f04, align 1
  %v0_3f06 = load i32, i32* @ebp, align 4
  %v1_3f06 = add i32 %v0_3f06, -12
  %v2_3f06 = inttoptr i32 %v1_3f06 to i32*
  %v3_3f06 = load i32, i32* %v2_3f06, align 4
  %v1_3f09 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3f09 = xor i32 %v1_3f09, %v3_3f06
  %v3_3f09 = icmp eq i32 %v2_3f09, 0
  store i32 %v2_3f09, i32* @eax, align 4
  br i1 %v3_3f09, label %bb, label %dec_label_pc_3f12

bb:                                               ; preds = %dec_label_pc_3f04
  %v1_3f10 = call i32 @function_3f33()
  store i32 %v1_3f10, i32* @eax, align 4
  br label %dec_label_pc_3f12

dec_label_pc_3f12:                                ; preds = %bb, %dec_label_pc_3f04
  %v0_3f12 = call i32 @function_3f2e()
  ret i32 %v0_3f12
}

define i32 @function_3f15() local_unnamed_addr {
dec_label_pc_3f15:
  %eax.global-to-local = alloca i32, align 4
  %v0_3f15 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3f15
}

define i32 @function_3f2e() local_unnamed_addr {
dec_label_pc_3f2e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3f33() local_unnamed_addr {
dec_label_pc_3f33:
  %v0_3f38 = load i32, i32* @eax, align 4
  ret i32 %v0_3f38
}

define i32 @_ZN5CTxInD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f3a:
  %v1_3f54 = add i32 %arg1, 36
  store i32 %v1_3f54, i32* @eax, align 4
  %v1_3f5a = trunc i32 %v1_3f54 to i16
  %v2_3f5a = call i32 @function_7152(i16 %v1_3f5a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3f6b

bb:                                               ; preds = %dec_label_pc_3f3a
  %v1_3f69 = call i32 @function_3f70()
  br label %dec_label_pc_3f6b

dec_label_pc_3f6b:                                ; preds = %bb, %dec_label_pc_3f3a
  %v2_3f69 = phi i32 [ %v1_3f69, %bb ], [ 0, %dec_label_pc_3f3a ]
  ret i32 %v2_3f69
}

define i32 @function_3f70() local_unnamed_addr {
dec_label_pc_3f70:
  %v0_3f71 = load i32, i32* @eax, align 4
  ret i32 %v0_3f71
}

define i32 @_ZN5CTxInC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f72:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_3f84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp103, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_3f95 = inttoptr i32 %arg2 to i32*
  %v2_3f95 = load i32, i32* %v1_3f95, align 4
  store i32 %v2_3f95, i32* %arg1, align 4
  %v1_3f99 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_3f99 = inttoptr i32 %v1_3f99 to i32*
  %v3_3f99 = load i32, i32* %v2_3f99, align 4
  %v1_3f9c = load i32, i32* %eax.global-to-local, align 4
  %v2_3f9c = add i32 %v1_3f9c, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_3f9c = inttoptr i32 %v2_3f9c to i32*
  store i32 %v3_3f99, i32* %v3_3f9c, align 4
  %v0_3f9f = load i32, i32* %edx.global-to-local, align 4
  %v1_3f9f = add i32 %v0_3f9f, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_3f9f = inttoptr i32 %v1_3f9f to i32*
  %v3_3f9f = load i32, i32* %v2_3f9f, align 4
  %v1_3fa2 = load i32, i32* %eax.global-to-local, align 4
  %v2_3fa2 = add i32 %v1_3fa2, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_3fa2 = inttoptr i32 %v2_3fa2 to i32*
  store i32 %v3_3f9f, i32* %v3_3fa2, align 4
  %v0_3fa5 = load i32, i32* %edx.global-to-local, align 4
  %v1_3fa5 = add i32 %v0_3fa5, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_3fa5 = inttoptr i32 %v1_3fa5 to i32*
  %v3_3fa5 = load i32, i32* %v2_3fa5, align 4
  %v1_3fa8 = load i32, i32* %eax.global-to-local, align 4
  %v2_3fa8 = add i32 %v1_3fa8, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_3fa8 = inttoptr i32 %v2_3fa8 to i32*
  store i32 %v3_3fa5, i32* %v3_3fa8, align 4
  %v0_3fab = load i32, i32* %edx.global-to-local, align 4
  %v1_3fab = add i32 %v0_3fab, 16
  %v2_3fab = inttoptr i32 %v1_3fab to i32*
  %v3_3fab = load i32, i32* %v2_3fab, align 4
  %v1_3fae = load i32, i32* %eax.global-to-local, align 4
  %v2_3fae = add i32 %v1_3fae, 16
  %v3_3fae = inttoptr i32 %v2_3fae to i32*
  store i32 %v3_3fab, i32* %v3_3fae, align 4
  %v0_3fb1 = load i32, i32* %edx.global-to-local, align 4
  %v1_3fb1 = add i32 %v0_3fb1, 20
  %v2_3fb1 = inttoptr i32 %v1_3fb1 to i32*
  %v3_3fb1 = load i32, i32* %v2_3fb1, align 4
  %v1_3fb4 = load i32, i32* %eax.global-to-local, align 4
  %v2_3fb4 = add i32 %v1_3fb4, 20
  %v3_3fb4 = inttoptr i32 %v2_3fb4 to i32*
  store i32 %v3_3fb1, i32* %v3_3fb4, align 4
  %v0_3fb7 = load i32, i32* %edx.global-to-local, align 4
  %v1_3fb7 = add i32 %v0_3fb7, ptrtoint (i32* @global_var_18.885 to i32)
  %v2_3fb7 = inttoptr i32 %v1_3fb7 to i32*
  %v3_3fb7 = load i32, i32* %v2_3fb7, align 4
  %v1_3fba = load i32, i32* %eax.global-to-local, align 4
  %v2_3fba = add i32 %v1_3fba, ptrtoint (i32* @global_var_18.885 to i32)
  %v3_3fba = inttoptr i32 %v2_3fba to i32*
  store i32 %v3_3fb7, i32* %v3_3fba, align 4
  %v0_3fbd = load i32, i32* %edx.global-to-local, align 4
  %v1_3fbd = add i32 %v0_3fbd, ptrtoint (i32* @global_var_1c.886 to i32)
  %v2_3fbd = inttoptr i32 %v1_3fbd to i32*
  %v3_3fbd = load i32, i32* %v2_3fbd, align 4
  store i32 %v3_3fbd, i32* @ecx, align 4
  %v1_3fc0 = load i32, i32* %eax.global-to-local, align 4
  %v2_3fc0 = add i32 %v1_3fc0, ptrtoint (i32* @global_var_1c.886 to i32)
  %v3_3fc0 = inttoptr i32 %v2_3fc0 to i32*
  store i32 %v3_3fbd, i32* %v3_3fc0, align 4
  %v0_3fc3 = load i32, i32* %edx.global-to-local, align 4
  %v1_3fc3 = add i32 %v0_3fc3, ptrtoint (i32* @mainParams to i32)
  %v2_3fc3 = inttoptr i32 %v1_3fc3 to i32*
  %v3_3fc3 = load i32, i32* %v2_3fc3, align 4
  %v1_3fc6 = load i32, i32* %eax.global-to-local, align 4
  %v2_3fc6 = add i32 %v1_3fc6, ptrtoint (i32* @mainParams to i32)
  %v3_3fc6 = inttoptr i32 %v2_3fc6 to i32*
  store i32 %v3_3fc3, i32* %v3_3fc6, align 4
  %v1_3fcc = add i32 %arg2, 36
  store i32 %v1_3fcc, i32* %edx.global-to-local, align 4
  %v1_3fd2 = add i32 %tmp103, 36
  store i32 %v1_3fd2, i32* @eax, align 4
  %v2_3fdc = call i32 @function_70dc(i32 %v1_3fd2, i32 %v1_3fcc)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_3fe4 = add i32 %arg2, 48
  %v2_3fe4 = inttoptr i32 %v1_3fe4 to i32*
  %v3_3fe4 = load i32, i32* %v2_3fe4, align 4
  store i32 %v3_3fe4, i32* %edx.global-to-local, align 4
  %v2_3fea = add i32 %tmp103, 48
  %v3_3fea = inttoptr i32 %v2_3fea to i32*
  store i32 %v3_3fe4, i32* %v3_3fea, align 4
  store i32 %v0_3f84, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3ff9

bb:                                               ; preds = %dec_label_pc_3f72
  %v1_3ff7 = call i32 @function_3ffe()
  store i32 %v1_3ff7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3ff9

dec_label_pc_3ff9:                                ; preds = %bb, %dec_label_pc_3f72
  %v2_3ff7 = phi i32 [ %v1_3ff7, %bb ], [ 0, %dec_label_pc_3f72 ]
  ret i32 %v2_3ff7

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 0, 2, 1, 6 }
}

define i32 @function_3ffe() local_unnamed_addr {
dec_label_pc_3ffe:
  %v0_3fff = load i32, i32* @eax, align 4
  ret i32 %v0_3fff
}

define i32 @_ZN7CScriptaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4000:
  store i32 %arg1, i32* @eax, align 4
  %v1_402a = call i32 @function_a958(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_403e

bb:                                               ; preds = %dec_label_pc_4000
  %v1_403c = call i32 @function_4043()
  br label %dec_label_pc_403e

dec_label_pc_403e:                                ; preds = %bb, %dec_label_pc_4000
  %v2_403c = phi i32 [ %v1_403c, %bb ], [ %arg1, %dec_label_pc_4000 ]
  ret i32 %v2_403c

; uselistorder directives
  uselistorder i32 (i32)* @function_a958, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_4043() local_unnamed_addr {
dec_label_pc_4043:
  %v0_4044 = load i32, i32* @eax, align 4
  ret i32 %v0_4044
}

define i32 @_ZN12CDNSSeedDataD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4046:
  %v1_4061 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  ret i32 %v1_4061
}

define i32 @function_4076() local_unnamed_addr {
dec_label_pc_4076:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4076 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4076 = add i32 %v0_4076, 862319685
  %v2_4076 = inttoptr i32 %v1_4076 to i32*
  %v3_4076 = load i32, i32* %v2_4076, align 4
  %v4_4076 = add i32 %v3_4076, -1
  store i32 %v4_4076, i32* %v2_4076, align 4
  %v0_407c = load i32, i32* %eax.global-to-local, align 4
  %v1_407c = add i32 %v0_407c, 20
  %v10_407c = icmp eq i32 %v1_407c, 0
  store i32 %v1_407c, i32* @eax, align 4
  br i1 %v10_407c, label %bb, label %dec_label_pc_4083

bb:                                               ; preds = %dec_label_pc_4076
  %v1_4081 = call i32 @function_40a1()
  store i32 %v1_4081, i32* @eax, align 4
  br label %dec_label_pc_4083

dec_label_pc_4083:                                ; preds = %bb, %dec_label_pc_4076
  %v0_4083 = call i32 @function_409c()
  store i32 %v0_4083, i32* %eax.global-to-local, align 4
  ret i32 %v0_4083
}

define i32 @function_4086() local_unnamed_addr {
dec_label_pc_4086:
  %eax.global-to-local = alloca i32, align 4
  %v0_4086 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4086
}

define i32 @function_4096(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4096:
  %v0_4096 = load i32, i32* @eax, align 4
  %v11_4096 = and i32 %v0_4096, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  ret i32 %v11_4096
}

define i32 @function_409c() local_unnamed_addr {
dec_label_pc_409c:
  %v0_409c = load i32, i32* @eax, align 4
  ret i32 %v0_409c
}

define i32 @function_40a1() local_unnamed_addr {
dec_label_pc_40a1:
  %v0_40a6 = load i32, i32* @eax, align 4
  ret i32 %v0_40a6
}

define i32 @_ZN11CMainParamsC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_40a8:
  %stack_var_-560 = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_40cf = call i32 @function_7d12(i32 %tmp103)
  store i32 ptrtoint (%vtable_12458_type* @global_var_12458.900 to i32), i32* %arg1, align 4
  %v1_40e6 = add i32 %tmp103, 132
  store i32 %v1_40e6, i32* @eax, align 4
  %v1_40ee = call i32 @function_7b84(i32 %v1_40e6)
  %v1_40f9 = add i32 %tmp103, ptrtoint (i32* @global_var_ec.901 to i32)
  store i32 %v1_40f9, i32* @eax, align 4
  %v1_4101 = call i32 @function_b7ec(i32 %v1_40f9)
  %v1_410c = add i32 %tmp103, 36
  %v2_410c = inttoptr i32 %v1_410c to i8*
  store i8 -51, i8* %v2_410c, align 1
  %v1_4116 = add i32 %tmp103, 37
  %v2_4116 = inttoptr i32 %v1_4116 to i8*
  store i8 ptrtoint (i32* @global_var_8.883 to i8), i8* %v2_4116, align 1
  %v1_4120 = add i32 %tmp103, 38
  %v2_4120 = inttoptr i32 %v1_4120 to i8*
  store i8 -84, i8* %v2_4120, align 1
  %v1_412a = add i32 %tmp103, 39
  %v2_412a = inttoptr i32 %v1_412a to i8*
  store i8 -1, i8* %v2_412a, align 1
  %v2_412e = ptrtoint i32* %stack_var_-560 to i32
  %v1_414d = add i32 %tmp103, 40
  store i32 %v2_412e, i32* @eax, align 4
  %v4_415d = call i32 @function_aa00(i32 %v1_414d, i32 %v2_412e, i32 ptrtoint ([131 x i8]* @global_var_18b8.902 to i32))
  store i32 %v2_412e, i32* @eax, align 4
  %v1_416b = call i32 @function_a5e0(i32 %v2_412e)
  ret i32 %v1_416b

; uselistorder directives
  uselistorder i32 %tmp103, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 40, { 1, 0, 3, 2, 4 }
}

define i32 @function_4172(i32 %arg1) local_unnamed_addr {
dec_label_pc_4172:
  %v0_4173 = load i32, i32* @eax, align 4
  ret i32 %v0_4173
}

define i32 @function_42fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_42fa:
  %v0_42fa = load i32, i32* @ecx, align 4
  %v1_42fa = add i32 %v0_42fa, -1961352124
  %v2_42fa = inttoptr i32 %v1_42fa to i32*
  %v3_42fa = load i32, i32* %v2_42fa, align 4
  %v4_42fa = add i32 %v3_42fa, -1
  store i32 %v4_42fa, i32* %v2_42fa, align 4
  %v0_4300 = load i32, i32* @eax, align 4
  ret i32 %v0_4300
}

define i32 @function_447b() local_unnamed_addr {
dec_label_pc_447b:
  %eax.global-to-local = alloca i32, align 4
  %v0_447b = load i32, i32* %eax.global-to-local, align 4
  %v11_447b = and i32 %v0_447b, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_447b, i32* @eax, align 4
  %v0_447d = call i32 @function_44ae()
  store i32 %v0_447d, i32* %eax.global-to-local, align 4
  ret i32 %v0_447d
}

define i32 @function_447f() local_unnamed_addr {
dec_label_pc_447f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v2_447f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_447f = load i32, i32* %eax.global-to-local, align 4
  %v4_447f = trunc i32 %v3_447f to i8
  %v5_447f = add i8 %v4_447f, %v2_447f
  %v21_447f = inttoptr i32 %v3_447f to i8*
  store i8 %v5_447f, i8* %v21_447f, align 1
  %v0_4481 = load i32, i32* %ebp.global-to-local, align 4
  %v1_44a3 = add i32 %v0_4481, -664
  store i32 %v1_44a3, i32* %eax.global-to-local, align 4
  ret i32 %v1_44a3
}

define i32 @function_44ae() local_unnamed_addr {
dec_label_pc_44ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_44ae = load i32, i32* @eax, align 4
  %v1_44ae = add i32 %v0_44ae, 36
  store i32 %v1_44ae, i32* %eax.global-to-local, align 4
  %v0_44b1 = load i32, i32* @ebx, align 4
  %v3_44b8 = call i32 @__stack_chk_fail.155(i32 %v1_44ae, i32 %v0_44b1)
  %v0_44bd = load i32, i32* @ebp, align 4
  %v1_44d9 = add i32 %v0_44bd, -532
  store i32 %v1_44d9, i32* @eax, align 4
  %v1_44e2 = call i32 @function_a5e0(i32 %v1_44d9)
  %v0_44e7 = load i32, i32* @ebp, align 4
  %v1_4503 = add i32 %v0_44e7, -652
  store i32 %v1_4503, i32* %eax.global-to-local, align 4
  %v1_450e = inttoptr i32 %v1_4503 to i32*
  store i32 1215752192, i32* %v1_450e, align 4
  %v0_4514 = load i32, i32* %eax.global-to-local, align 4
  %v1_4514 = add i32 %v0_4514, 4
  %v2_4514 = inttoptr i32 %v1_4514 to i32*
  store i32 ptrtoint (i32* @global_var_17.895 to i32), i32* %v2_4514, align 4
  %v0_451b = load i32, i32* @ebp, align 4
  %v1_451b = add i32 %v0_451b, -508
  store i32 %v1_451b, i32* %eax.global-to-local, align 4
  ret i32 %v1_451b
}

define i32 @function_456b() local_unnamed_addr {
dec_label_pc_456b:
  %eax.global-to-local = alloca i32, align 4
  %v0_456b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_456b
}

define i32 @function_45b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_45b0:
  %v0_45b0 = load i32, i32* @ebp, align 4
  %v1_45b0 = add i32 %v0_45b0, -684
  %v2_45b0 = inttoptr i32 %v1_45b0 to i32*
  %v3_45b0 = load i32, i32* %v2_45b0, align 4
  %v1_45b6 = add i32 %v3_45b0, 212
  %v1_45bc = add i32 %v0_45b0, -668
  %v2_45c9 = call i32 @function_bb16(i32 %v1_45b6, i32 %v1_45bc)
  %v0_45ce = load i32, i32* @ebp, align 4
  %v1_45ce = add i32 %v0_45ce, -684
  %v2_45ce = inttoptr i32 %v1_45ce to i32*
  %v3_45ce = load i32, i32* %v2_45ce, align 4
  %v1_45d4 = add i32 %v3_45ce, 136
  ret i32 %v1_45d4
}

define i32 @function_45e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_45e8:
  %v0_45e8 = load i32, i32* @ecx, align 4
  %v1_45e8 = add i32 %v0_45e8, -1563644
  %v2_45e8 = inttoptr i32 %v1_45e8 to i8*
  %v3_45e8 = load i8, i8* %v2_45e8, align 1
  %v5_45e8 = trunc i32 %v0_45e8 to i8
  %v6_45e8 = add i8 %v3_45e8, %v5_45e8
  store i8 %v6_45e8, i8* %v2_45e8, align 1
  %v2_45ee = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_45ee = load i32, i32* @eax, align 4
  %v4_45ee = trunc i32 %v3_45ee to i8
  %v5_45ee = add i8 %v4_45ee, %v2_45ee
  %v21_45ee = inttoptr i32 %v3_45ee to i8*
  store i8 %v5_45ee, i8* %v21_45ee, align 1
  %v0_45f0 = load i32, i32* @ebx, align 4
  %v1_45f0 = add i32 %v0_45f0, -174971
  %v2_45f0 = inttoptr i32 %v1_45f0 to i8*
  %v3_45f0 = load i8, i8* %v2_45f0, align 1
  %v4_45f0 = load i32, i32* @ecx, align 4
  %v5_45f0 = trunc i32 %v4_45f0 to i8
  %v6_45f0 = add i8 %v5_45f0, %v3_45f0
  store i8 %v6_45f0, i8* %v2_45f0, align 1
  %v0_45f6 = load i32, i32* @ebp, align 4
  %v1_45f6 = add i32 %v0_45f6, 33936
  %v2_45f6 = inttoptr i32 %v1_45f6 to i32*
  %v3_45f6 = load i32, i32* %v2_45f6, align 4
  %v4_45f6 = add i32 %v3_45f6, -1
  store i32 %v4_45f6, i32* %v2_45f6, align 4
  %v0_45fc = load i32, i32* @ebx, align 4
  %v1_45fc = add i32 %v0_45fc, -174947
  %v2_45fc = inttoptr i32 %v1_45fc to i8*
  %v3_45fc = load i8, i8* %v2_45fc, align 1
  %v4_45fc = load i32, i32* @ecx, align 4
  %v5_45fc = trunc i32 %v4_45fc to i8
  %v6_45fc = add i8 %v5_45fc, %v3_45fc
  store i8 %v6_45fc, i8* %v2_45fc, align 1
  %v0_4602 = load i32, i32* @ebp, align 4
  %v1_4602 = add i32 %v0_4602, -186235
  %v2_4602 = inttoptr i32 %v1_4602 to i32*
  %v3_4602 = load i32, i32* %v2_4602, align 4
  %v4_4602 = add i32 %v3_4602, -1
  store i32 %v4_4602, i32* %v2_4602, align 4
  %v0_4608 = load i32, i32* @ecx, align 4
  %v1_4608 = add i32 %v0_4608, -1996217260
  %v2_4608 = inttoptr i32 %v1_4608 to i32*
  %v3_4608 = load i32, i32* %v2_4608, align 4
  %v4_4608 = add i32 %v3_4608, -1
  store i32 %v4_4608, i32* %v2_4608, align 4
  %v0_460e = load i32, i32* @eax, align 4
  %v2_460e = add i32 %v0_460e, 36
  %v16_460e = and i32 %v2_460e, 255
  %v18_460e = and i32 %v0_460e, -256
  %v19_460e = or i32 %v16_460e, %v18_460e
  ret i32 %v19_460e

; uselistorder directives
  uselistorder i32 %v0_460e, { 1, 0 }
}

define i32 @function_4636(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4636:
  %eax.global-to-local = alloca i32, align 4
  %v0_4636 = load i32, i32* @eax, align 4
  %v1_4636 = load i32, i32* @ebx, align 4
  %v2_4636 = add i32 %v1_4636, 176
  %v3_4636 = inttoptr i32 %v2_4636 to i32*
  store i32 %v0_4636, i32* %v3_4636, align 4
  %v0_463c = load i32, i32* @ebp, align 4
  %v1_463c = add i32 %v0_463c, -716
  %v2_463c = inttoptr i32 %v1_463c to i32*
  %v3_463c = load i32, i32* %v2_463c, align 4
  store i32 %v3_463c, i32* %eax.global-to-local, align 4
  %v1_4642 = load i32, i32* @ebx, align 4
  %v2_4642 = add i32 %v1_4642, 180
  %v3_4642 = inttoptr i32 %v2_4642 to i32*
  store i32 %v3_463c, i32* %v3_4642, align 4
  %v4_4642 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_4642
}

define i32 @function_464b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_464b:
  %v0_464b = load i32, i32* @eax, align 4
  ret i32 %v0_464b
}

define i32 @function_4712(i32 %arg1) local_unnamed_addr {
dec_label_pc_4712:
  %v0_4712 = load i32, i32* @eax, align 4
  %v1_4712 = load i32, i32* @ebx, align 4
  %v2_4712 = add i32 %v1_4712, ptrtoint (i32* @global_var_18.885 to i32)
  %v3_4712 = inttoptr i32 %v2_4712 to i32*
  store i32 %v0_4712, i32* %v3_4712, align 4
  %v0_4715 = load i32, i32* @ebp, align 4
  %v1_4715 = add i32 %v0_4715, -704
  %v2_4715 = inttoptr i32 %v1_4715 to i32*
  %v3_4715 = load i32, i32* %v2_4715, align 4
  %v1_471b = load i32, i32* @ebx, align 4
  %v2_471b = add i32 %v1_471b, ptrtoint (i32* @global_var_1c.886 to i32)
  %v3_471b = inttoptr i32 %v2_471b to i32*
  store i32 %v3_4715, i32* %v3_471b, align 4
  %v0_471e = load i32, i32* @ebp, align 4
  %v1_471e = add i32 %v0_471e, -700
  %v2_471e = inttoptr i32 %v1_471e to i32*
  %v3_471e = load i32, i32* %v2_471e, align 4
  %v1_4724 = load i32, i32* @ebx, align 4
  %v2_4724 = add i32 %v1_4724, ptrtoint (i32* @mainParams to i32)
  %v3_4724 = inttoptr i32 %v2_4724 to i32*
  store i32 %v3_471e, i32* %v3_4724, align 4
  %v0_4727 = load i32, i32* @ebp, align 4
  %v1_4727 = add i32 %v0_4727, -392
  ret i32 %v1_4727
}

define i32 @function_4742(i32 %arg1) local_unnamed_addr {
dec_label_pc_4742:
  %eax.global-to-local = alloca i32, align 4
  %v0_4742 = load i32, i32* @eax, align 4
  %v1_4742 = trunc i32 %v0_4742 to i8
  %v2_4742 = add i32 %v0_4742, 244
  %v6_4742 = icmp ugt i8 %v1_4742, 11
  %v16_4742 = urem i32 %v2_4742, 256
  %v18_4742 = and i32 %v0_4742, -256
  %v19_4742 = or i32 %v16_4742, %v18_4742
  store i32 %v19_4742, i32* %eax.global-to-local, align 4
  %v1_4744 = inttoptr i32 %v19_4742 to i32*
  %v2_4744 = load i32, i32* %v1_4744, align 4
  %v5_4744 = zext i1 %v6_4742 to i32
  %v6_4744 = sub i32 %v2_4744, %v19_4742
  %v7_4744 = add i32 %v6_4744, %v5_4744
  store i32 %v7_4744, i32* %v1_4744, align 4
  %v0_4746 = load i32, i32* @ebp, align 4
  %v1_4746 = add i32 %v0_4746, -116603
  %v2_4746 = inttoptr i32 %v1_4746 to i8*
  %v3_4746 = load i8, i8* %v2_4746, align 1
  %v4_4746 = load i32, i32* @ecx, align 4
  %v5_4746 = trunc i32 %v4_4746 to i8
  %v6_4746 = add i8 %v5_4746, %v3_4746
  store i8 %v6_4746, i8* %v2_4746, align 1
  %v24_4746 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v24_4746

; uselistorder directives
  uselistorder i32 %v0_4742, { 1, 0, 2 }
}

define i32 @function_4a10(i32 %arg1) local_unnamed_addr {
dec_label_pc_4a10:
  %v3_4a10 = load i32, i32* @eax, align 4
  ret i32 %v3_4a10
}

define i32 @function_4a9e() local_unnamed_addr {
dec_label_pc_4a9e:
  %eax.global-to-local = alloca i32, align 4
  %v0_4a9e = load i32, i32* %eax.global-to-local, align 4
  %v11_4a9e = and i32 %v0_4a9e, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_4a9e, i32* %eax.global-to-local, align 4
  ret i32 %v11_4a9e

; uselistorder directives
  uselistorder i32 %v11_4a9e, { 1, 0 }
}

define i32 @function_4cb5() local_unnamed_addr {
dec_label_pc_4cb5:
  %v0_4cb5 = load i32, i32* @ebp, align 4
  %v1_4cc3 = add i32 %v0_4cb5, -684
  %v2_4cc3 = inttoptr i32 %v1_4cc3 to i32*
  %v3_4cc3 = load i32, i32* %v2_4cc3, align 4
  %v1_4cc9 = add i32 %v3_4cc3, ptrtoint ([5 x i8]* @global_var_78.905 to i32)
  %v2_4cc9 = inttoptr i32 %v1_4cc9 to i32*
  store i32 ptrtoint (i32* @global_var_53.904 to i32), i32* %v2_4cc9, align 4
  %v0_4cd0 = load i32, i32* @ebp, align 4
  %v1_4cd0 = add i32 %v0_4cd0, -684
  %v2_4cd0 = inttoptr i32 %v1_4cd0 to i32*
  %v3_4cd0 = load i32, i32* %v2_4cd0, align 4
  %v1_4cd6 = add i32 %v3_4cd0, 124
  %v2_4cd6 = inttoptr i32 %v1_4cd6 to i32*
  store i32 9, i32* %v2_4cd6, align 4
  %v0_4cdd = load i32, i32* @ebp, align 4
  %v1_4cdd = add i32 %v0_4cdd, -684
  %v2_4cdd = inttoptr i32 %v1_4cdd to i32*
  %v3_4cdd = load i32, i32* %v2_4cdd, align 4
  %v1_4ce3 = add i32 %v3_4cdd, 128
  %v2_4ce3 = inttoptr i32 %v1_4ce3 to i32*
  store i32 ptrtoint (i32* @global_var_b2.906 to i32), i32* %v2_4ce3, align 4
  %v0_4ced = load i32, i32* @ebp, align 4
  %v1_4ced = add i32 %v0_4ced, -400
  %v2_4ced = inttoptr i32 %v1_4ced to i32*
  store i32 0, i32* %v2_4ced, align 4
  %v0_4cf7 = load i32, i32* @ebp, align 4
  %v1_4cf7 = add i32 %v0_4cf7, -668
  %v1_4d05 = call i32 @function_5044(i32 %v1_4cf7)
  ret i32 %v1_4d05
}

define i32 @function_4d0a() local_unnamed_addr {
dec_label_pc_4d0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d0a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d0a, i32* @ebx, align 4
  %v0_4d0c = load i32, i32* @ebp, align 4
  %v1_4d0c = add i32 %v0_4d0c, -556
  store i32 %v1_4d0c, i32* @eax, align 4
  %v1_4d15 = call i32 @function_a5e0(i32 %v1_4d0c)
  store i32 %v1_4d15, i32* %eax.global-to-local, align 4
  %v1_4d1a = call i32 @function_4ffe(i32 %v1_4d0c)
  store i32 %v1_4d1a, i32* %eax.global-to-local, align 4
  ret i32 %v1_4d1a
}

define i32 @function_4d1f() local_unnamed_addr {
dec_label_pc_4d1f:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d1f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d1f, i32* @ebx, align 4
  %v0_4d21 = load i32, i32* @ebp, align 4
  %v1_4d21 = add i32 %v0_4d21, -636
  store i32 %v1_4d21, i32* %eax.global-to-local, align 4
  %v1_4d2f = call i32 @function_4ffe(i32 %v1_4d21)
  store i32 %v1_4d2f, i32* %eax.global-to-local, align 4
  ret i32 %v1_4d2f
}

define i32 @function_4d34() local_unnamed_addr {
dec_label_pc_4d34:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d34 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d34, i32* @ebx, align 4
  %v0_4d36 = load i32, i32* @ebp, align 4
  %v1_4d36 = add i32 %v0_4d36, -616
  store i32 %v1_4d36, i32* %eax.global-to-local, align 4
  %v1_4d44 = call i32 @function_4ffe(i32 %v1_4d36)
  store i32 %v1_4d44, i32* %eax.global-to-local, align 4
  ret i32 %v1_4d44
}

define i32 @function_4d49() local_unnamed_addr {
dec_label_pc_4d49:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d49 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d49, i32* @ebx, align 4
  %v0_4d4b = load i32, i32* @ebp, align 4
  %v1_4d4b = add i32 %v0_4d4b, -380
  store i32 %v1_4d4b, i32* %eax.global-to-local, align 4
  %v1_4d54 = call i32 @__stack_chk_fail.153(i32 %v1_4d4b)
  store i32 %v1_4d54, i32* %eax.global-to-local, align 4
  %v1_4d59 = call i32 @function_4fec(i32 %v1_4d4b)
  store i32 %v1_4d59, i32* %eax.global-to-local, align 4
  ret i32 %v1_4d59
}

define i32 @function_4d5e() local_unnamed_addr {
dec_label_pc_4d5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d5e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d5e, i32* @ebx, align 4
  %v0_4d60 = load i32, i32* @ebp, align 4
  %v1_4d60 = add i32 %v0_4d60, -596
  store i32 %v1_4d60, i32* %eax.global-to-local, align 4
  %v1_4d6e = call i32 @function_4fec(i32 %v1_4d60)
  store i32 %v1_4d6e, i32* %eax.global-to-local, align 4
  ret i32 %v1_4d6e
}

define i32 @function_4d73() local_unnamed_addr {
dec_label_pc_4d73:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d73 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d73, i32* @ebx, align 4
  %v0_4d75 = load i32, i32* @ebp, align 4
  %v1_4d75 = add i32 %v0_4d75, -544
  store i32 %v1_4d75, i32* %eax.global-to-local, align 4
  %v1_4d83 = call i32 @function_4d87(i32 %v1_4d75)
  store i32 %v1_4d83, i32* %eax.global-to-local, align 4
  ret i32 %v1_4d83
}

define i32 @function_4d85() local_unnamed_addr {
dec_label_pc_4d85:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d85 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d85
}

define i32 @function_4d87(i32 %arg1) local_unnamed_addr {
dec_label_pc_4d87:
  %v0_4d87 = load i32, i32* @ebp, align 4
  %v1_4d87 = add i32 %v0_4d87, -576
  %v1_4d95 = call i32 @function_4d99(i32 %v1_4d87)
  ret i32 %v1_4d95
}

define i32 @function_4d97() local_unnamed_addr {
dec_label_pc_4d97:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d97 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d97
}

define i32 @function_4d99(i32 %arg1) local_unnamed_addr {
dec_label_pc_4d99:
  %v0_4d99 = load i32, i32* @ebp, align 4
  %v1_4d99 = add i32 %v0_4d99, -532
  store i32 %v1_4d99, i32* @eax, align 4
  %v1_4da2 = call i32 @function_a5e0(i32 %v1_4d99)
  %v0_4da7 = call i32 @function_4dab()
  ret i32 %v0_4da7
}

define i32 @function_4da9() local_unnamed_addr {
dec_label_pc_4da9:
  %eax.global-to-local = alloca i32, align 4
  %v0_4da9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4da9
}

define i32 @function_4dab() local_unnamed_addr {
dec_label_pc_4dab:
  %v0_4dab = load i32, i32* @ebp, align 4
  %v1_4dab = add i32 %v0_4dab, -393
  %v1_4db9 = call i32 @function_4fec(i32 %v1_4dab)
  ret i32 %v1_4db9
}

define i32 @function_4dbe() local_unnamed_addr {
dec_label_pc_4dbe:
  %eax.global-to-local = alloca i32, align 4
  %v0_4dbe = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4dbe, i32* @ebx, align 4
  %v0_4dc0 = load i32, i32* @ebp, align 4
  %v1_4dc0 = add i32 %v0_4dc0, -520
  store i32 %v1_4dc0, i32* %eax.global-to-local, align 4
  %v1_4dce = call i32 @function_4dd2(i32 %v1_4dc0)
  store i32 %v1_4dce, i32* %eax.global-to-local, align 4
  ret i32 %v1_4dce
}

define i32 @function_4dd0() local_unnamed_addr {
dec_label_pc_4dd0:
  %eax.global-to-local = alloca i32, align 4
  %v0_4dd0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4dd0
}

define i32 @function_4dd2(i32 %arg1) local_unnamed_addr {
dec_label_pc_4dd2:
  %v0_4dd2 = load i32, i32* @ebp, align 4
  %v1_4dd2 = add i32 %v0_4dd2, -508
  store i32 %v1_4dd2, i32* @eax, align 4
  %v1_4ddb = call i32 @function_a5e0(i32 %v1_4dd2)
  %v1_4de0 = call i32 @function_4fec(i32 %v1_4dd2)
  ret i32 %v1_4de0

; uselistorder directives
  uselistorder i32 (i32)* @function_a5e0, { 4, 3, 2, 1, 0 }
}

define i32 @function_4de6() local_unnamed_addr {
dec_label_pc_4de6:
  %eax.global-to-local = alloca i32, align 4
  %v0_4de6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4de6
}

define i32 @function_4df5() local_unnamed_addr {
dec_label_pc_4df5:
  %v0_4df5 = call i32 @function_4df9()
  ret i32 %v0_4df5
}

define i32 @function_4df7() local_unnamed_addr {
dec_label_pc_4df7:
  %eax.global-to-local = alloca i32, align 4
  %v0_4df7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4df7
}

define i32 @function_4df9() local_unnamed_addr {
dec_label_pc_4df9:
  %v0_4df9 = load i32, i32* @ebp, align 4
  %v1_4df9 = add i32 %v0_4df9, -392
  ret i32 %v1_4df9
}

define i32 @function_4e07() local_unnamed_addr {
dec_label_pc_4e07:
  %v1_4e07 = call i32 @function_4fec(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_4e07
}

define i32 @function_4e0d() local_unnamed_addr {
dec_label_pc_4e0d:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e0d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4e0d
}

define i32 @function_4e1c() local_unnamed_addr {
dec_label_pc_4e1c:
  %v0_4e1c = call i32 @function_4e20()
  ret i32 %v0_4e1c
}

define i32 @function_4e1e() local_unnamed_addr {
dec_label_pc_4e1e:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e1e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4e1e
}

define i32 @function_4e20() local_unnamed_addr {
dec_label_pc_4e20:
  %v0_4e20 = load i32, i32* @ebp, align 4
  %v1_4e20 = add i32 %v0_4e20, -391
  ret i32 %v1_4e20
}

define i32 @function_4e2e() local_unnamed_addr {
dec_label_pc_4e2e:
  %v1_4e2e = call i32 @function_4fec(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_4e2e
}

define i32 @function_4e33() local_unnamed_addr {
dec_label_pc_4e33:
  %v0_4e35 = load i32, i32* @ebp, align 4
  %v1_4e35 = add i32 %v0_4e35, -496
  %v1_4e43 = call i32 @function_4e47(i32 %v1_4e35)
  ret i32 %v1_4e43
}

define i32 @function_4e45() local_unnamed_addr {
dec_label_pc_4e45:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e45 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4e45
}

define i32 @function_4e47(i32 %arg1) local_unnamed_addr {
dec_label_pc_4e47:
  %v0_4e47 = load i32, i32* @ebp, align 4
  %v1_4e47 = add i32 %v0_4e47, -448
  ret i32 %v1_4e47
}

define i32 @function_4e55() local_unnamed_addr {
dec_label_pc_4e55:
  %v0_4e55 = call i32 @function_4e59()
  ret i32 %v0_4e55
}

define i32 @function_4e57() local_unnamed_addr {
dec_label_pc_4e57:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e57 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4e57
}

define i32 @function_4e59() local_unnamed_addr {
dec_label_pc_4e59:
  %v0_4e59 = load i32, i32* @ebp, align 4
  %v1_4e59 = add i32 %v0_4e59, -390
  ret i32 %v1_4e59
}

define i32 @function_4e75() local_unnamed_addr {
dec_label_pc_4e75:
  %v0_4e75 = call i32 @function_4e79()
  ret i32 %v0_4e75
}

define i32 @function_4e77() local_unnamed_addr {
dec_label_pc_4e77:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e77 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4e77
}

define i32 @function_4e79() local_unnamed_addr {
dec_label_pc_4e79:
  %v0_4e79 = load i32, i32* @ebp, align 4
  %v1_4e79 = add i32 %v0_4e79, -389
  ret i32 %v1_4e79
}

define i32 @function_4e87() local_unnamed_addr {
dec_label_pc_4e87:
  %v1_4e87 = call i32 @function_4fec(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_4e87
}

define i32 @function_4e8c() local_unnamed_addr {
dec_label_pc_4e8c:
  %v0_4e8e = load i32, i32* @ebp, align 4
  %v1_4e8e = add i32 %v0_4e8e, -488
  %v1_4e9c = call i32 @function_4ea0(i32 %v1_4e8e)
  ret i32 %v1_4e9c
}

define i32 @function_4e9e() local_unnamed_addr {
dec_label_pc_4e9e:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e9e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4e9e
}

define i32 @function_4ea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_4ea0:
  %v0_4ea0 = load i32, i32* @ebp, align 4
  %v1_4ea0 = add i32 %v0_4ea0, -440
  ret i32 %v1_4ea0
}

define i32 @function_4eae() local_unnamed_addr {
dec_label_pc_4eae:
  %v0_4eae = call i32 @function_4eb2()
  ret i32 %v0_4eae
}

define i32 @function_4eb0() local_unnamed_addr {
dec_label_pc_4eb0:
  %eax.global-to-local = alloca i32, align 4
  %v0_4eb0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4eb0
}

define i32 @function_4eb2() local_unnamed_addr {
dec_label_pc_4eb2:
  %v0_4eb2 = load i32, i32* @ebp, align 4
  %v1_4eb2 = add i32 %v0_4eb2, -388
  ret i32 %v1_4eb2
}

define i32 @function_4eba(i32 %arg1) local_unnamed_addr {
dec_label_pc_4eba:
  %v0_4eba = load i32, i32* @eax, align 4
  %v11_4eba = and i32 %v0_4eba, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  ret i32 %v11_4eba
}

define i32 @function_4ece() local_unnamed_addr {
dec_label_pc_4ece:
  %v0_4ece = call i32 @function_4ed2()
  ret i32 %v0_4ece
}

define i32 @function_4ed0() local_unnamed_addr {
dec_label_pc_4ed0:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ed0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4ed0
}

define i32 @function_4ed2() local_unnamed_addr {
dec_label_pc_4ed2:
  %v0_4ed2 = load i32, i32* @ebp, align 4
  %v1_4ed2 = add i32 %v0_4ed2, -387
  %v1_4ee0 = call i32 @function_4fec(i32 %v1_4ed2)
  ret i32 %v1_4ee0
}

define i32 @function_4ee5() local_unnamed_addr {
dec_label_pc_4ee5:
  %v0_4ee7 = load i32, i32* @ebp, align 4
  %v1_4ee7 = add i32 %v0_4ee7, -480
  %v1_4ef5 = call i32 @function_4ef9(i32 %v1_4ee7)
  ret i32 %v1_4ef5
}

define i32 @function_4ef7() local_unnamed_addr {
dec_label_pc_4ef7:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ef7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4ef7
}

define i32 @function_4ef9(i32 %arg1) local_unnamed_addr {
dec_label_pc_4ef9:
  %v0_4ef9 = load i32, i32* @ebp, align 4
  %v1_4ef9 = add i32 %v0_4ef9, -432
  ret i32 %v1_4ef9
}

define i32 @function_4f07() local_unnamed_addr {
dec_label_pc_4f07:
  %v0_4f07 = call i32 @function_4f0b()
  ret i32 %v0_4f07
}

define i32 @function_4f09() local_unnamed_addr {
dec_label_pc_4f09:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f09 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f09
}

define i32 @function_4f0b() local_unnamed_addr {
dec_label_pc_4f0b:
  %v0_4f0b = load i32, i32* @ebp, align 4
  %v1_4f0b = add i32 %v0_4f0b, -386
  ret i32 %v1_4f0b
}

define i32 @function_4f19() local_unnamed_addr {
dec_label_pc_4f19:
  %v0_4f19 = load i32, i32* @ebp, align 4
  %v1_4f19 = add i32 %v0_4f19, -428
  %v1_4f27 = call i32 @function_4f2b(i32 %v1_4f19)
  ret i32 %v1_4f27
}

define i32 @function_4f29() local_unnamed_addr {
dec_label_pc_4f29:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f29 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f29
}

define i32 @function_4f2b(i32 %arg1) local_unnamed_addr {
dec_label_pc_4f2b:
  %v0_4f2b = load i32, i32* @ebp, align 4
  %v1_4f2b = add i32 %v0_4f2b, -385
  ret i32 %v1_4f2b
}

define i32 @function_4f39() local_unnamed_addr {
dec_label_pc_4f39:
  %v1_4f39 = call i32 @function_4fec(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_4f39
}

define i32 @function_4f3e() local_unnamed_addr {
dec_label_pc_4f3e:
  %v0_4f40 = load i32, i32* @ebp, align 4
  %v1_4f40 = add i32 %v0_4f40, -472
  %v1_4f4e = call i32 @function_4f52(i32 %v1_4f40)
  ret i32 %v1_4f4e
}

define i32 @function_4f50() local_unnamed_addr {
dec_label_pc_4f50:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f50 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f50
}

define i32 @function_4f52(i32 %arg1) local_unnamed_addr {
dec_label_pc_4f52:
  %v0_4f52 = load i32, i32* @ebp, align 4
  %v1_4f52 = add i32 %v0_4f52, -424
  %v1_4f60 = call i32 @function_4f64(i32 %v1_4f52)
  ret i32 %v1_4f60
}

define i32 @function_4f62() local_unnamed_addr {
dec_label_pc_4f62:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f62 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f62
}

define i32 @function_4f64(i32 %arg1) local_unnamed_addr {
dec_label_pc_4f64:
  %v0_4f64 = load i32, i32* @ebp, align 4
  %v1_4f64 = add i32 %v0_4f64, -384
  ret i32 %v1_4f64
}

define i32 @function_4f80() local_unnamed_addr {
dec_label_pc_4f80:
  %v0_4f80 = call i32 @function_4f84()
  ret i32 %v0_4f80
}

define i32 @function_4f82() local_unnamed_addr {
dec_label_pc_4f82:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f82 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f82
}

define i32 @function_4f84() local_unnamed_addr {
dec_label_pc_4f84:
  %v0_4f84 = load i32, i32* @ebp, align 4
  %v1_4f84 = add i32 %v0_4f84, -383
  ret i32 %v1_4f84
}

define i32 @function_4f92() local_unnamed_addr {
dec_label_pc_4f92:
  %v1_4f92 = call i32 @function_4fec(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_4f92
}

define i32 @function_4f94() local_unnamed_addr {
dec_label_pc_4f94:
  %v0_4f96 = load i32, i32* @ebp, align 4
  %v1_4f96 = add i32 %v0_4f96, -464
  %v1_4fa4 = call i32 @function_4fa8(i32 %v1_4f96)
  ret i32 %v1_4fa4
}

define i32 @function_4fa6() local_unnamed_addr {
dec_label_pc_4fa6:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fa6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4fa6
}

define i32 @function_4fa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_4fa8:
  %v0_4fa8 = load i32, i32* @ebp, align 4
  %v1_4fa8 = add i32 %v0_4fa8, -416
  ret i32 %v1_4fa8
}

define i32 @function_4fb6() local_unnamed_addr {
dec_label_pc_4fb6:
  %v1_4fb6 = call i32 @function_4fba(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_4fb6

; uselistorder directives
  uselistorder i32 (i32)* @function_4fba, { 1, 0 }
}

define i32 @function_4fb9() local_unnamed_addr {
dec_label_pc_4fb9:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fb9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4fb9
}

define i32 @function_4fba(i32 %arg1) local_unnamed_addr {
dec_label_pc_4fba:
  %v0_4fba = load i32, i32* @ebp, align 4
  %v1_4fc8 = add i32 %v0_4fba, -412
  ret i32 %v1_4fc8
}

define i32 @function_4fd6() local_unnamed_addr {
dec_label_pc_4fd6:
  %v0_4fd6 = call i32 @function_4fda()
  ret i32 %v0_4fd6
}

define i32 @function_4fd8() local_unnamed_addr {
dec_label_pc_4fd8:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fd8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4fd8
}

define i32 @function_4fda() local_unnamed_addr {
dec_label_pc_4fda:
  %v0_4fda = load i32, i32* @ebp, align 4
  %v1_4fda = add i32 %v0_4fda, -381
  %v1_4fe8 = call i32 @function_4fec(i32 %v1_4fda)
  ret i32 %v1_4fe8

; uselistorder directives
  uselistorder i32 (i32)* @function_4fec, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_4feb() local_unnamed_addr {
dec_label_pc_4feb:
  %eax.global-to-local = alloca i32, align 4
  %v0_4feb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4feb
}

define i32 @function_4fec(i32 %arg1) local_unnamed_addr {
dec_label_pc_4fec:
  %v0_4fec = load i32, i32* @ebp, align 4
  %v1_4fec = add i32 %v0_4fec, -668
  %v1_4ffa = call i32 @function_4ffe(i32 %v1_4fec)
  ret i32 %v1_4ffa

; uselistorder directives
  uselistorder i32 (i32)* @function_4ffe, { 3, 2, 1, 0 }
}

define i32 @function_4ffd() local_unnamed_addr {
dec_label_pc_4ffd:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ffd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4ffd
}

define i32 @function_4ffe(i32 %arg1) local_unnamed_addr {
dec_label_pc_4ffe:
  %v0_4ffe = load i32, i32* @ebp, align 4
  %v1_4ffe = add i32 %v0_4ffe, -684
  %v2_4ffe = inttoptr i32 %v1_4ffe to i32*
  %v3_4ffe = load i32, i32* %v2_4ffe, align 4
  %v1_5004 = add i32 %v3_4ffe, ptrtoint (i32* @global_var_ec.901 to i32)
  %v1_5011 = call i32 @function_5015(i32 %v1_5004)
  ret i32 %v1_5011
}

define i32 @function_5013() local_unnamed_addr {
dec_label_pc_5013:
  %eax.global-to-local = alloca i32, align 4
  %v0_5013 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5013
}

define i32 @function_5015(i32 %arg1) local_unnamed_addr {
dec_label_pc_5015:
  %v0_5015 = load i32, i32* @ebp, align 4
  %v1_5015 = add i32 %v0_5015, -684
  %v2_5015 = inttoptr i32 %v1_5015 to i32*
  %v3_5015 = load i32, i32* %v2_5015, align 4
  %v1_501b = add i32 %v3_5015, 132
  %v1_5028 = call i32 @function_502c(i32 %v1_501b)
  ret i32 %v1_5028
}

define i32 @function_502a() local_unnamed_addr {
dec_label_pc_502a:
  %eax.global-to-local = alloca i32, align 4
  %v0_502a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_502a
}

define i32 @function_502c(i32 %arg1) local_unnamed_addr {
dec_label_pc_502c:
  %v0_503a = load i32, i32* @ebx, align 4
  ret i32 %v0_503a
}

define i32 @function_5044(i32 %arg1) local_unnamed_addr {
dec_label_pc_5044:
  %v0_5044 = load i32, i32* @ebp, align 4
  %v1_5044 = add i32 %v0_5044, -12
  %v2_5044 = inttoptr i32 %v1_5044 to i32*
  %v3_5044 = load i32, i32* %v2_5044, align 4
  %v1_5047 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_5047 = xor i32 %v1_5047, %v3_5044
  %v3_5047 = icmp eq i32 %v2_5047, 0
  store i32 %v2_5047, i32* @eax, align 4
  br i1 %v3_5047, label %bb, label %dec_label_pc_5050

bb:                                               ; preds = %dec_label_pc_5044
  %v1_504e = call i32 @function_5055()
  br label %dec_label_pc_5050

dec_label_pc_5050:                                ; preds = %bb, %dec_label_pc_5044
  %v2_504e = phi i32 [ %v1_504e, %bb ], [ %v2_5047, %dec_label_pc_5044 ]
  ret i32 %v2_504e
}

define i32 @function_5055() local_unnamed_addr {
dec_label_pc_5055:
  %v0_5059 = load i32, i32* @eax, align 4
  ret i32 %v0_5059
}

define i32 @_ZNK11CMainParams12GenesisBlockEv(i32 %arg1) {
dec_label_pc_505a:
  %v1_5074 = add i32 %arg1, 132
  store i32 %v1_5074, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5085

bb:                                               ; preds = %dec_label_pc_505a
  %v2_5083 = call i32 @function_508a(i32 %arg1)
  br label %dec_label_pc_5085

dec_label_pc_5085:                                ; preds = %bb, %dec_label_pc_505a
  %v3_5083 = phi i32 [ %v2_5083, %bb ], [ %v1_5074, %dec_label_pc_505a ]
  ret i32 %v3_5083
}

define i32 @function_508a(i32 %arg1) local_unnamed_addr {
dec_label_pc_508a:
  %v0_508b = load i32, i32* @eax, align 4
  ret i32 %v0_508b
}

define i32 @_ZNK11CMainParams9NetworkIDEv(i32 %arg1) {
dec_label_pc_508c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_50b4

bb:                                               ; preds = %dec_label_pc_508c
  %v2_50b2 = call i32 @function_50b9(i32 %arg1)
  br label %dec_label_pc_50b4

dec_label_pc_50b4:                                ; preds = %bb, %dec_label_pc_508c
  %v3_50b2 = phi i32 [ %v2_50b2, %bb ], [ 0, %dec_label_pc_508c ]
  ret i32 %v3_50b2
}

define i32 @function_50b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_50b9:
  %v0_50ba = load i32, i32* @eax, align 4
  ret i32 %v0_50ba
}

define i32 @_ZNK11CMainParams10FixedSeedsEv(i32 %arg1) {
dec_label_pc_50bc:
  %v1_50d6 = add i32 %arg1, ptrtoint (i32* @global_var_ec.901 to i32)
  ret i32 %v1_50d6
}

define i32 @_ZN11CMainParamsD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_50ee:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12458_type* @global_var_12458.900 to i32), i32* %arg1, align 4
  %v1_5112 = add i32 %tmp99, ptrtoint (i32* @global_var_ec.901 to i32)
  %v1_511a = call i32 @function_c868(i32 %v1_5112)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_12458_type* @global_var_12458.900 to i32), { 1, 0 }
}

define i32 @function_5126(i32 %arg1) local_unnamed_addr {
dec_label_pc_5126:
  %v0_5126 = load i32, i32* @ecx, align 4
  %v1_5126 = add i32 %v0_5126, 703079428
  %v2_5126 = inttoptr i32 %v1_5126 to i8*
  %v3_5126 = load i8, i8* %v2_5126, align 1
  %v5_5126 = trunc i32 %v0_5126 to i8
  %v6_5126 = add i8 %v3_5126, %v5_5126
  store i8 %v6_5126, i8* %v2_5126, align 1
  %v2_512c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_512c = load i32, i32* @eax, align 4
  %v4_512c = trunc i32 %v3_512c to i8
  %v5_512c = add i8 %v4_512c, %v2_512c
  %v10_512c = icmp ult i8 %v5_512c, %v2_512c
  store i1 %v10_512c, i1* @cf, align 1
  %v21_512c = inttoptr i32 %v3_512c to i8*
  store i8 %v5_512c, i8* %v21_512c, align 1
  %v0_512f = load i32, i32* @ebp, align 4
  %v1_512f = add i32 %v0_512f, -28
  %v2_512f = inttoptr i32 %v1_512f to i32*
  %v3_512f = load i32, i32* %v2_512f, align 4
  store i32 %v3_512f, i32* @eax, align 4
  %v1_5135 = call i32 @function_8e70(i32 %v3_512f)
  %v0_513a = load i32, i32* @ebp, align 4
  %v1_513a = add i32 %v0_513a, -12
  %v2_513a = inttoptr i32 %v1_513a to i32*
  %v3_513a = load i32, i32* %v2_513a, align 4
  %v1_513d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_513d = xor i32 %v1_513d, %v3_513a
  %v3_513d = icmp eq i32 %v2_513d, 0
  store i32 %v2_513d, i32* @eax, align 4
  br i1 %v3_513d, label %bb, label %dec_label_pc_5173

bb:                                               ; preds = %dec_label_pc_5126
  %v1_5144 = call i32 @function_5178()
  br label %dec_label_pc_5173

dec_label_pc_5173:                                ; preds = %dec_label_pc_5126, %bb
  %v0_5146 = phi i32 [ %v2_513d, %dec_label_pc_5126 ], [ %v1_5144, %bb ]
  ret i32 %v0_5146

; uselistorder directives
  uselistorder i8 %v2_512c, { 1, 0 }
  uselistorder label %dec_label_pc_5173, { 1, 0 }
}

define i32 @function_5148() local_unnamed_addr {
dec_label_pc_5148:
  %eax.global-to-local = alloca i32, align 4
  %v0_5148 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5148, i32* @ebx, align 4
  %v0_514a = load i32, i32* @ebp, align 4
  %v1_514a = add i32 %v0_514a, -28
  %v2_514a = inttoptr i32 %v1_514a to i32*
  %v3_514a = load i32, i32* %v2_514a, align 4
  %v1_514d = add i32 %v3_514a, 132
  store i32 %v1_514d, i32* @eax, align 4
  %v1_5155 = call i32 @function_8f58(i32 %v1_514d)
  store i32 %v1_5155, i32* %eax.global-to-local, align 4
  %v0_515a = call i32 @function_515e()
  store i32 %v0_515a, i32* %eax.global-to-local, align 4
  ret i32 %v0_515a

; uselistorder directives
  uselistorder i32 132, { 0, 2, 1, 3 }
}

define i32 @function_515c() local_unnamed_addr {
dec_label_pc_515c:
  %eax.global-to-local = alloca i32, align 4
  %v0_515c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_515c
}

define i32 @function_515e() local_unnamed_addr {
dec_label_pc_515e:
  %v0_515e = load i32, i32* @ebp, align 4
  %v1_515e = add i32 %v0_515e, -28
  %v2_515e = inttoptr i32 %v1_515e to i32*
  %v3_515e = load i32, i32* %v2_515e, align 4
  store i32 %v3_515e, i32* @eax, align 4
  %v1_5164 = call i32 @function_8e70(i32 %v3_515e)
  %v0_5169 = load i32, i32* @ebx, align 4
  ret i32 %v0_5169

; uselistorder directives
  uselistorder i32 (i32)* @function_8e70, { 7, 0, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_5178() local_unnamed_addr {
dec_label_pc_5178:
  %v0_517d = load i32, i32* @eax, align 4
  ret i32 %v0_517d
}

define i32 @_ZN14CTestNetParamsC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_517e:
  ret i32 %arg1
}

define i32 @function_51a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_51a2:
  %v2_51a2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_51a2 = load i32, i32* @eax, align 4
  %v4_51a2 = trunc i32 %v3_51a2 to i8
  %v5_51a2 = add i8 %v4_51a2, %v2_51a2
  %v21_51a2 = inttoptr i32 %v3_51a2 to i8*
  store i8 %v5_51a2, i8* %v21_51a2, align 1
  %v0_51a4 = load i32, i32* @ebp, align 4
  %v1_51a4 = add i32 %v0_51a4, -92
  %v2_51a4 = inttoptr i32 %v1_51a4 to i32*
  %v3_51a4 = load i32, i32* %v2_51a4, align 4
  %v1_51a7 = inttoptr i32 %v3_51a4 to i32*
  store i32 ptrtoint (%vtable_12440_type* @global_var_12440.907 to i32), i32* %v1_51a7, align 4
  %v0_51ad = load i32, i32* @ebp, align 4
  %v1_51ad = add i32 %v0_51ad, -92
  %v2_51ad = inttoptr i32 %v1_51ad to i32*
  %v3_51ad = load i32, i32* %v2_51ad, align 4
  %v1_51b0 = add i32 %v3_51ad, 36
  %v2_51b0 = inttoptr i32 %v1_51b0 to i8*
  store i8 ptrtoint (i32* @global_var_8.883 to i8), i8* %v2_51b0, align 1
  %v0_51b4 = load i32, i32* @ebp, align 4
  %v1_51b4 = add i32 %v0_51b4, -92
  %v2_51b4 = inttoptr i32 %v1_51b4 to i32*
  %v3_51b4 = load i32, i32* %v2_51b4, align 4
  %v1_51b7 = add i32 %v3_51b4, 37
  %v2_51b7 = inttoptr i32 %v1_51b7 to i8*
  store i8 ptrtoint (i32* @global_var_b2.906 to i8), i8* %v2_51b7, align 1
  %v0_51bb = load i32, i32* @ebp, align 4
  %v1_51bb = add i32 %v0_51bb, -92
  %v2_51bb = inttoptr i32 %v1_51bb to i32*
  %v3_51bb = load i32, i32* %v2_51bb, align 4
  %v1_51be = add i32 %v3_51bb, 38
  %v2_51be = inttoptr i32 %v1_51be to i8*
  store i8 -103, i8* %v2_51be, align 1
  %v0_51c2 = load i32, i32* @ebp, align 4
  %v1_51c2 = add i32 %v0_51c2, -92
  %v2_51c2 = inttoptr i32 %v1_51c2 to i32*
  %v3_51c2 = load i32, i32* %v2_51c2, align 4
  %v1_51c5 = add i32 %v3_51c2, 39
  %v2_51c5 = inttoptr i32 %v1_51c5 to i8*
  store i8 -120, i8* %v2_51c5, align 1
  %v0_51c9 = load i32, i32* @ebp, align 4
  %v1_51c9 = add i32 %v0_51c9, -80
  ret i32 %v1_51c9
}

define i32 @function_5208(i32 %arg1) local_unnamed_addr {
dec_label_pc_5208:
  %v0_5208 = load i32, i32* @ebx, align 4
  %v1_5208 = add i32 %v0_5208, 1086825541
  %v2_5208 = inttoptr i32 %v1_5208 to i8*
  %v3_5208 = load i8, i8* %v2_5208, align 1
  %v4_5208 = load i32, i32* @ecx, align 4
  %v5_5208 = trunc i32 %v4_5208 to i8
  %v6_5208 = add i8 %v5_5208, %v3_5208
  store i8 %v6_5208, i8* %v2_5208, align 1
  %v2_520e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_5211 = load i32, i32* @eax, align 4
  %v4_5211 = trunc i32 %v3_5211 to i8
  %v5_5211 = add i8 %v4_5211, %v2_520e
  %v21_5211 = inttoptr i32 %v3_5211 to i8*
  store i8 %v5_5211, i8* %v21_5211, align 1
  %v0_5213 = load i32, i32* @ebp, align 4
  %v1_5213 = add i32 %v0_5213, -92
  %v2_5213 = inttoptr i32 %v1_5213 to i32*
  %v3_5213 = load i32, i32* %v2_5213, align 4
  %v1_5216 = add i32 %v3_5213, 104
  ret i32 %v1_5216

; uselistorder directives
  uselistorder i32 104, { 2, 1, 0 }
}

define i32 @function_5233() local_unnamed_addr {
dec_label_pc_5233:
  %v0_5233 = call i32 @function_458b53c9()
  ret i32 %v0_5233
}

define i32 @function_53be() local_unnamed_addr {
dec_label_pc_53be:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_53f0() local_unnamed_addr {
dec_label_pc_53f0:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_53f0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_53f0 = add i32 %v0_53f0, 1086825541
  %v2_53f0 = inttoptr i32 %v1_53f0 to i32*
  %v3_53f0 = load i32, i32* %v2_53f0, align 4
  %v4_53f0 = add i32 %v3_53f0, -1
  %tmp100 = sub i32 0, %v3_53f0
  %v10_53f0 = and i32 %v3_53f0, %tmp100
  %v11_53f0 = icmp slt i32 %v10_53f0, 0
  store i1 %v11_53f0, i1* %of.global-to-local, align 1
  %v13_53f0 = icmp slt i32 %v4_53f0, 0
  store i1 %v13_53f0, i1* %sf.global-to-local, align 1
  store i32 %v4_53f0, i32* %v2_53f0, align 4
  br i1 %v13_53f0, label %dec_label_pc_540a, label %dec_label_pc_53f8

dec_label_pc_53f8:                                ; preds = %dec_label_pc_53f0
  %v2_53f8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_53f8 = load i32, i32* @eax, align 4
  %v4_53f8 = trunc i32 %v3_53f8 to i8
  %v5_53f8 = add i8 %v4_53f8, %v2_53f8
  %v11_53f8 = xor i8 %v5_53f8, %v2_53f8
  %v12_53f8 = xor i8 %v5_53f8, %v4_53f8
  %v13_53f8 = and i8 %v11_53f8, %v12_53f8
  %v14_53f8 = icmp slt i8 %v13_53f8, 0
  store i1 %v14_53f8, i1* %of.global-to-local, align 1
  %v16_53f8 = icmp slt i8 %v5_53f8, 0
  store i1 %v16_53f8, i1* %sf.global-to-local, align 1
  %v21_53f8 = inttoptr i32 %v3_53f8 to i8*
  store i8 %v5_53f8, i8* %v21_53f8, align 1
  %v0_53fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_53fa = add i32 %v0_53fa, 1086825541
  %v2_53fa = inttoptr i32 %v1_53fa to i8*
  %v3_53fa = load i8, i8* %v2_53fa, align 1
  %v4_53fa = load i32, i32* %ecx.global-to-local, align 4
  %v5_53fa = trunc i32 %v4_53fa to i8
  %v6_53fa = add i8 %v5_53fa, %v3_53fa
  %v12_53fa = xor i8 %v6_53fa, %v3_53fa
  %v13_53fa = xor i8 %v6_53fa, %v5_53fa
  %v14_53fa = and i8 %v12_53fa, %v13_53fa
  %v15_53fa = icmp slt i8 %v14_53fa, 0
  store i1 %v15_53fa, i1* %of.global-to-local, align 1
  %v17_53fa = icmp slt i8 %v6_53fa, 0
  store i1 %v17_53fa, i1* %sf.global-to-local, align 1
  store i8 %v6_53fa, i8* %v2_53fa, align 1
  %v0_5400 = load i1, i1* %sf.global-to-local, align 1
  %v1_5400 = load i1, i1* %of.global-to-local, align 1
  %v2_5400 = icmp eq i1 %v0_5400, %v1_5400
  br i1 %v2_5400, label %dec_label_pc_53f8.dec_label_pc_5402_crit_edge, label %bb

dec_label_pc_53f8.dec_label_pc_5402_crit_edge:    ; preds = %dec_label_pc_53f8
  %v2_5402.pre = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_5402.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_5402

bb:                                               ; preds = %dec_label_pc_53f8
  %v3_5400 = call i32 @function_53be()
  store i32 %v3_5400, i32* @eax, align 4
  %tmp101 = trunc i32 %v3_5400 to i8
  br label %dec_label_pc_5402

dec_label_pc_5402:                                ; preds = %dec_label_pc_53f8.dec_label_pc_5402_crit_edge, %bb
  %v20_5402 = phi i32 [ %v3_5402.pre, %dec_label_pc_53f8.dec_label_pc_5402_crit_edge ], [ %v3_5400, %bb ]
  %v2_5402 = phi i8 [ %v2_5402.pre, %dec_label_pc_53f8.dec_label_pc_5402_crit_edge ], [ %tmp101, %bb ]
  %v4_5402 = trunc i32 %v20_5402 to i8
  %v5_5402 = add i8 %v4_5402, %v2_5402
  %v11_5402 = xor i8 %v5_5402, %v2_5402
  %v12_5402 = xor i8 %v5_5402, %v4_5402
  %v13_5402 = and i8 %v11_5402, %v12_5402
  %v14_5402 = icmp slt i8 %v13_5402, 0
  store i1 %v14_5402, i1* %of.global-to-local, align 1
  %v16_5402 = icmp slt i8 %v5_5402, 0
  store i1 %v16_5402, i1* %sf.global-to-local, align 1
  %v21_5402 = inttoptr i32 %v20_5402 to i8*
  store i8 %v5_5402, i8* %v21_5402, align 1
  %v0_5404 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5404 = add i32 %v0_5404, -2134399931
  %v2_5404 = inttoptr i32 %v1_5404 to i8*
  %v3_5404 = load i8, i8* %v2_5404, align 1
  %v4_5404 = load i32, i32* %ecx.global-to-local, align 4
  %v5_5404 = trunc i32 %v4_5404 to i8
  %v6_5404 = add i8 %v5_5404, %v3_5404
  %v12_5404 = xor i8 %v6_5404, %v3_5404
  %v13_5404 = xor i8 %v6_5404, %v5_5404
  %v14_5404 = and i8 %v12_5404, %v13_5404
  %v15_5404 = icmp slt i8 %v14_5404, 0
  store i1 %v15_5404, i1* %of.global-to-local, align 1
  %v17_5404 = icmp slt i8 %v6_5404, 0
  store i1 %v17_5404, i1* %sf.global-to-local, align 1
  store i8 %v6_5404, i8* %v2_5404, align 1
  br label %dec_label_pc_540a

dec_label_pc_540a:                                ; preds = %dec_label_pc_5402, %dec_label_pc_53f0
  %v2_540a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v14_540a = load i32, i32* @eax, align 4
  %v15_540a = inttoptr i32 %v14_540a to i8*
  store i8 %v2_540a, i8* %v15_540a, align 1
  %v0_540d = load i32, i32* %ebx.global-to-local, align 4
  %v1_540d = lshr i32 %v0_540d, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_540d = load i32, i32* %ecx.global-to-local, align 4
  %v6_540d3 = mul i32 %v1_540d, 256
  %v4_540d4 = add i32 %v6_540d3, %v3_540d
  %v23_540d = and i32 %v4_540d4, 65280
  %v24_540d = and i32 %v0_540d, -65281
  %v25_540d = or i32 %v23_540d, %v24_540d
  store i32 %v25_540d, i32* %ebx.global-to-local, align 4
  %v2_540f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_540f = load i32, i32* @eax, align 4
  %v4_540f = trunc i32 %v3_540f to i8
  %v5_540f = add i8 %v4_540f, %v2_540f
  %v11_540f = xor i8 %v5_540f, %v2_540f
  %v12_540f = xor i8 %v5_540f, %v4_540f
  %v13_540f = and i8 %v11_540f, %v12_540f
  %v14_540f = icmp slt i8 %v13_540f, 0
  store i1 %v14_540f, i1* %of.global-to-local, align 1
  %v16_540f = icmp slt i8 %v5_540f, 0
  store i1 %v16_540f, i1* %sf.global-to-local, align 1
  %v21_540f = inttoptr i32 %v3_540f to i8*
  store i8 %v5_540f, i8* %v21_540f, align 1
  %v0_5411 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5411 = add i32 %v0_5411, 862319685
  %v2_5411 = inttoptr i32 %v1_5411 to i8*
  %v3_5411 = load i8, i8* %v2_5411, align 1
  %v4_5411 = load i32, i32* %ecx.global-to-local, align 4
  %v5_5411 = trunc i32 %v4_5411 to i8
  %v6_5411 = add i8 %v5_5411, %v3_5411
  store i8 %v6_5411, i8* %v2_5411, align 1
  %v0_5417 = load i32, i32* @eax, align 4
  %v1_5417 = add i32 %v0_5417, 20
  %tmp102 = xor i32 %v0_5417, -2147483648
  %v8_5417 = and i32 %v1_5417, %tmp102
  %v9_5417 = icmp slt i32 %v8_5417, 0
  store i1 %v9_5417, i1* %of.global-to-local, align 1
  %v10_5417 = icmp eq i32 %v1_5417, 0
  %v11_5417 = icmp slt i32 %v1_5417, 0
  store i1 %v11_5417, i1* %sf.global-to-local, align 1
  store i32 %v1_5417, i32* @eax, align 4
  br i1 %v10_5417, label %bb103, label %dec_label_pc_5422

bb103:                                            ; preds = %dec_label_pc_540a
  %v1_541c = call i32 @function_54b7()
  store i32 %v1_541c, i32* @eax, align 4
  br label %dec_label_pc_5422

dec_label_pc_5422:                                ; preds = %bb103, %dec_label_pc_540a
  %v0_5422 = call i32 @function_54b2()
  ret i32 %v0_5422

; uselistorder directives
  uselistorder i32 %v1_5417, { 1, 2, 3, 0 }
  uselistorder i8 %v5_540f, { 2, 3, 0, 1 }
  uselistorder i8 %v6_5404, { 2, 3, 0, 1 }
  uselistorder i8 %v5_5402, { 2, 3, 0, 1 }
  uselistorder i8 %v6_53fa, { 2, 3, 0, 1 }
  uselistorder i8 %v5_53f8, { 2, 3, 0, 1 }
  uselistorder i32 %v4_53f0, { 1, 0 }
  uselistorder i32 %v3_53f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_5402, { 1, 0 }
}

define i32 @function_5427() local_unnamed_addr {
dec_label_pc_5427:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_5427 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5427, i32* @ebx, align 4
  %v0_5429 = load i32, i32* %ebp.global-to-local, align 4
  %v1_5429 = add i32 %v0_5429, -80
  store i32 %v1_5429, i32* %eax.global-to-local, align 4
  %v1_5434 = call i32 @function_549d(i32 %v1_5429)
  store i32 %v1_5434, i32* %eax.global-to-local, align 4
  ret i32 %v1_5434
}

define i32 @function_5436() local_unnamed_addr {
dec_label_pc_5436:
  %v0_5438 = load i32, i32* @ebp, align 4
  %v1_5438 = add i32 %v0_5438, -60
  %v1_5443 = call i32 @function_5447(i32 %v1_5438)
  ret i32 %v1_5443
}

define i32 @function_5445() local_unnamed_addr {
dec_label_pc_5445:
  %eax.global-to-local = alloca i32, align 4
  %v0_5445 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5445
}

define i32 @function_5447(i32 %arg1) local_unnamed_addr {
dec_label_pc_5447:
  %v0_5447 = load i32, i32* @ebp, align 4
  %v1_5447 = add i32 %v0_5447, -47
  ret i32 %v1_5447
}

define i32 @function_5452(i32 %arg1) local_unnamed_addr {
dec_label_pc_5452:
  %v1_5452 = call i32 @function_549d(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_5452
}

define i32 @function_5454() local_unnamed_addr {
dec_label_pc_5454:
  %v0_5456 = load i32, i32* @ebp, align 4
  %v1_5456 = add i32 %v0_5456, -68
  %v1_5461 = call i32 @function_5465(i32 %v1_5456)
  ret i32 %v1_5461
}

define i32 @function_5463() local_unnamed_addr {
dec_label_pc_5463:
  %eax.global-to-local = alloca i32, align 4
  %v0_5463 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5463
}

define i32 @function_5465(i32 %arg1) local_unnamed_addr {
dec_label_pc_5465:
  %v0_5465 = load i32, i32* @ebp, align 4
  %v1_5465 = add i32 %v0_5465, -56
  %v1_5470 = call i32 @function_5474(i32 %v1_5465)
  ret i32 %v1_5470
}

define i32 @function_5472() local_unnamed_addr {
dec_label_pc_5472:
  %eax.global-to-local = alloca i32, align 4
  %v0_5472 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5472
}

define i32 @function_5474(i32 %arg1) local_unnamed_addr {
dec_label_pc_5474:
  %v0_5474 = load i32, i32* @ebp, align 4
  %v1_5474 = add i32 %v0_5474, -46
  ret i32 %v1_5474

; uselistorder directives
  uselistorder i32 -46, { 2, 0, 1 }
}

define i32 @function_548a() local_unnamed_addr {
dec_label_pc_548a:
  %v0_548a = call i32 @function_548e()
  ret i32 %v0_548a
}

define i32 @function_548c() local_unnamed_addr {
dec_label_pc_548c:
  %eax.global-to-local = alloca i32, align 4
  %v0_548c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_548c
}

define i32 @function_548e() local_unnamed_addr {
dec_label_pc_548e:
  %v0_548e = load i32, i32* @ebp, align 4
  %v1_548e = add i32 %v0_548e, -45
  ret i32 %v1_548e
}

define i32 @function_5499() local_unnamed_addr {
dec_label_pc_5499:
  %v1_5499 = call i32 @function_549d(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_5499

; uselistorder directives
  uselistorder i32 (i32)* @function_549d, { 2, 0, 1 }
}

define i32 @function_549c() local_unnamed_addr {
dec_label_pc_549c:
  %eax.global-to-local = alloca i32, align 4
  %v0_549c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_549c
}

define i32 @function_549d(i32 %arg1) local_unnamed_addr {
dec_label_pc_549d:
  %v0_54a8 = load i32, i32* @ebx, align 4
  ret i32 %v0_54a8
}

define i32 @function_54b2() local_unnamed_addr {
dec_label_pc_54b2:
  %v0_54b2 = load i32, i32* @eax, align 4
  ret i32 %v0_54b2
}

define i32 @function_54b7() local_unnamed_addr {
dec_label_pc_54b7:
  %v0_54bb = load i32, i32* @eax, align 4
  ret i32 %v0_54bb
}

define i32 @_ZNK14CTestNetParams9NetworkIDEv(i32 %arg1) {
dec_label_pc_54bc:
  store i32 1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_54e4

bb:                                               ; preds = %dec_label_pc_54bc
  %v2_54e2 = call i32 @function_54e9(i32 %arg1)
  br label %dec_label_pc_54e4

dec_label_pc_54e4:                                ; preds = %bb, %dec_label_pc_54bc
  %v3_54e2 = phi i32 [ %v2_54e2, %bb ], [ 1, %dec_label_pc_54bc ]
  ret i32 %v3_54e2
}

define i32 @function_54e9(i32 %arg1) local_unnamed_addr {
dec_label_pc_54e9:
  %v0_54ea = load i32, i32* @eax, align 4
  ret i32 %v0_54ea
}

define i32 @_ZN14CTestNetParamsD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_54ec:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12440_type* @global_var_12440.907 to i32), i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  %v1_5512 = call i32 @function_a5da(i32 %tmp100)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_12440_type* @global_var_12440.907 to i32), { 1, 0 }
}

define i32 @_ZN14CRegTestParamsC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_552a:
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %tmp114 = call i32 @__decompiler_undefined_function_0()
  %tmp116 = call i32 @__decompiler_undefined_function_0()
  %tmp118 = call i32 @__decompiler_undefined_function_0()
  %tmp119 = call i32 @__decompiler_undefined_function_0()
  %tmp120 = call i32 @__decompiler_undefined_function_0()
  %tmp121 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %tmp132 = ptrtoint i32* %arg1 to i32
  store i32 %tmp132, i32* @eax, align 4
  %v1_5551 = call i32 @function_a6a8(i32 %tmp132)
  store i32 ptrtoint (%vtable_12428_type* @global_var_12428.910 to i32), i32* %arg1, align 4
  %v1_5568 = add i32 %tmp132, 36
  %v2_5568 = inttoptr i32 %v1_5568 to i8*
  store i8 -16, i8* %v2_5568, align 1
  %v1_5572 = add i32 %tmp132, 37
  %v2_5572 = inttoptr i32 %v1_5572 to i8*
  store i8 -95, i8* %v2_5572, align 1
  %v1_557c = add i32 %tmp132, 38
  %v2_557c = inttoptr i32 %v1_557c to i8*
  store i8 -120, i8* %v2_557c, align 1
  %v1_5586 = add i32 %tmp132, 39
  %v2_5586 = inttoptr i32 %v1_5586 to i8*
  store i8 -51, i8* %v2_5586, align 1
  %v1_5590 = add i32 %tmp132, 100
  %v2_5590 = inttoptr i32 %v1_5590 to i32*
  store i32 150, i32* %v2_5590, align 4
  %v2_55a7 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_55a7, i32* @eax, align 4
  %v3_55b0 = call i32 @function_5af2(i32 %v2_55a7, i32 0, i32 0)
  %v2_55b5 = ptrtoint i32* %stack_var_-208 to i32
  %v2_55c8 = call i32 @function_cd1e(i32 %v2_55b5, i32 %v2_55a7)
  %v2_55d0 = ptrtoint i32* %stack_var_-240 to i32
  %v3_55eb = call i32 @function_5c37(i32 %v2_55d0, i32 %v2_55b5, i32 1)
  %v3_55f3 = load i32, i32* %stack_var_-240, align 4
  %v2_5643 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %v2_5643, i32* @eax, align 4
  %v9_564c = call i32 @function_7f6a(i32 %v2_5643, i32 %v3_55f3, i32 %tmp121, i32 %tmp120, i32 %tmp119, i32 %tmp118, i32 %tmp116, i32 %tmp114, i32 %tmp112)
  store i32 %v2_5643, i32* @eax, align 4
  %v1_5675 = call i32 @function_7e52(i32 %v2_5643)
  %v2_568a = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_568a, i32* @eax, align 4
  %v3_5690 = call i32 @function_5af2(i32 %v2_568a, i32 0, i32 0)
  %v2_5695 = ptrtoint i32* %stack_var_-112 to i32
  %v2_56a2 = call i32 @function_cd1e(i32 %v2_5695, i32 %v2_568a)
  %v2_56aa = ptrtoint i32* %stack_var_-144 to i32
  %v3_56c2 = call i32 @function_5c37(i32 %v2_56aa, i32 %v2_5695, i32 1)
  %v3_56ca = load i32, i32* %stack_var_-144, align 4
  %v2_570b = ptrtoint i32* %stack_var_-268 to i32
  store i32 %v2_570b, i32* @eax, align 4
  %v9_5714 = call i32 @function_7f6a(i32 %v2_570b, i32 %v3_56ca, i32 %tmp104, i32 %tmp103, i32 %tmp102, i32 %tmp101, i32 %tmp100, i32 %tmp99, i32 %tmp98)
  store i32 %v2_570b, i32* @eax, align 4
  %v1_573d = call i32 @function_7e52(i32 %v2_570b)
  %v1_5748 = add i32 %tmp132, 200
  %v2_5748 = inttoptr i32 %v1_5748 to i32*
  store i32 1405740500, i32* %v2_5748, align 4
  %v1_5758 = add i32 %tmp132, 204
  %v2_5758 = inttoptr i32 %v1_5758 to i32*
  store i32 545259519, i32* %v2_5758, align 4
  %v1_5768 = add i32 %tmp132, 208
  %v2_5768 = inttoptr i32 %v1_5768 to i32*
  store i32 1, i32* %v2_5768, align 4
  %v2_5784 = ptrtoint i32* %stack_var_-348 to i32
  ret i32 %v2_5784

; uselistorder directives
  uselistorder i32 %tmp132, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32, i32)* @function_7f6a, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_cd1e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_5af2, { 1, 0 }
  uselistorder i32 100, { 2, 0, 3, 1 }
  uselistorder i32 39, { 0, 2, 1 }
  uselistorder i32 38, { 0, 2, 1 }
  uselistorder i32 37, { 0, 2, 1 }
}

define i32 @function_578a() local_unnamed_addr {
dec_label_pc_578a:
  %v3_578e = load i32, i32* @eax, align 4
  ret i32 %v3_578e
}

define i32 @function_594c(i32 %arg1) local_unnamed_addr {
dec_label_pc_594c:
  %v2_594c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v14_594c = load i32, i32* @eax, align 4
  %v15_594c = inttoptr i32 %v14_594c to i8*
  store i8 %v2_594c, i8* %v15_594c, align 1
  %v0_594f = load i32, i32* @ebx, align 4
  %v1_594f = add i32 %v0_594f, 862319685
  %v2_594f = inttoptr i32 %v1_594f to i8*
  %v3_594f = load i8, i8* %v2_594f, align 1
  %v4_594f = load i32, i32* @ecx, align 4
  %v5_594f = trunc i32 %v4_594f to i8
  %v6_594f = add i8 %v5_594f, %v3_594f
  store i8 %v6_594f, i8* %v2_594f, align 1
  %v0_5955 = load i32, i32* @eax, align 4
  %v1_5955 = add i32 %v0_5955, 20
  %v10_5955 = icmp eq i32 %v1_5955, 0
  store i32 %v1_5955, i32* @eax, align 4
  br i1 %v10_5955, label %bb, label %dec_label_pc_595c

bb:                                               ; preds = %dec_label_pc_594c
  %v1_595a = call i32 @function_59c5()
  store i32 %v1_595a, i32* @eax, align 4
  br label %dec_label_pc_595c

dec_label_pc_595c:                                ; preds = %bb, %dec_label_pc_594c
  %v0_595c = call i32 @function_59c0()
  ret i32 %v0_595c
}

define i32 @function_595e() local_unnamed_addr {
dec_label_pc_595e:
  %eax.global-to-local = alloca i32, align 4
  %v0_595e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_595e, i32* @ebx, align 4
  %v0_5960 = load i32, i32* @ebp, align 4
  %v1_5960 = add i32 %v0_5960, -284
  store i32 %v1_5960, i32* @eax, align 4
  %v1_5969 = call i32 @function_7e52(i32 %v1_5960)
  store i32 %v1_5969, i32* %eax.global-to-local, align 4
  %v1_596e = call i32 @function_59a8(i32 %v1_5960)
  store i32 %v1_596e, i32* %eax.global-to-local, align 4
  ret i32 %v1_596e
}

define i32 @function_5970() local_unnamed_addr {
dec_label_pc_5970:
  %eax.global-to-local = alloca i32, align 4
  %v0_5970 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5970, i32* @ebx, align 4
  %v0_5972 = load i32, i32* @ebp, align 4
  %v1_5972 = add i32 %v0_5972, -264
  store i32 %v1_5972, i32* @eax, align 4
  %v1_597b = call i32 @function_7e52(i32 %v1_5972)
  store i32 %v1_597b, i32* %eax.global-to-local, align 4
  %v1_5980 = call i32 @function_59a8(i32 %v1_5972)
  store i32 %v1_5980, i32* %eax.global-to-local, align 4
  ret i32 %v1_5980

; uselistorder directives
  uselistorder i32 (i32)* @function_7e52, { 3, 2, 1, 0 }
}

define i32 @function_5983() local_unnamed_addr {
dec_label_pc_5983:
  %eax.global-to-local = alloca i32, align 4
  %v0_5983 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5983
}

define i32 @function_5992() local_unnamed_addr {
dec_label_pc_5992:
  %v0_5992 = call i32 @function_5996()
  ret i32 %v0_5992
}

define i32 @function_5994() local_unnamed_addr {
dec_label_pc_5994:
  %eax.global-to-local = alloca i32, align 4
  %v0_5994 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5994
}

define i32 @function_5996() local_unnamed_addr {
dec_label_pc_5996:
  %v0_5996 = load i32, i32* @ebp, align 4
  %v1_5996 = add i32 %v0_5996, -237
  %v1_59a4 = call i32 @function_59a8(i32 %v1_5996)
  ret i32 %v1_59a4

; uselistorder directives
  uselistorder i32 (i32)* @function_59a8, { 2, 1, 0 }
}

define i32 @function_59a7() local_unnamed_addr {
dec_label_pc_59a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_59a7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_59a7
}

define i32 @function_59a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_59a8:
  %v0_59b6 = load i32, i32* @ebx, align 4
  ret i32 %v0_59b6
}

define i32 @function_59c0() local_unnamed_addr {
dec_label_pc_59c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_59c5() local_unnamed_addr {
dec_label_pc_59c5:
  %v0_59c5 = load i32, i32* @ebp, align 4
  %v1_59c5 = add i32 %v0_59c5, -4
  %v2_59c5 = inttoptr i32 %v1_59c5 to i32*
  %v3_59c5 = load i32, i32* %v2_59c5, align 4
  store i32 %v3_59c5, i32* @ebx, align 4
  %v0_59c9 = load i32, i32* @eax, align 4
  ret i32 %v0_59c9
}

define i32 @_ZNK14CRegTestParams18RequireRPCPasswordEv(i32 %arg1) {
dec_label_pc_59ca:
  ret i32 0
}

define i32 @_ZNK14CRegTestParams9NetworkIDEv() {
dec_label_pc_59fa:
  %eax.global-to-local = alloca i32, align 4
  %v2_59fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_59fb
}

define i32 @function_59fe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_59fe:
  %v0_59ff = load i32, i32* @ebx, align 4
  %v1_59ff = add i32 %v0_59ff, 1166608453
  %v2_59ff = inttoptr i32 %v1_59ff to i8*
  %v3_59ff = load i8, i8* %v2_59ff, align 1
  %v4_59ff = load i32, i32* @ecx, align 4
  %v5_59ff = trunc i32 %v4_59ff to i8
  %v6_59ff = sub i8 %v3_59ff, %v5_59ff
  store i8 %v6_59ff, i8* %v2_59ff, align 1
  %v0_5a07 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_5a0c = load i32, i32* @ebp, align 4
  %v2_5a0c = add i32 %v1_5a0c, -12
  %v3_5a0c = inttoptr i32 %v2_5a0c to i32*
  store i32 %v0_5a07, i32* %v3_5a0c, align 4
  ret i32 2
}

define i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_5a2a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_5a44 = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_5a44 = inttoptr i32 %v1_5a44 to i32*
  %v3_5a44 = load i32, i32* %v2_5a44, align 4
  %v2_5a4c = load i32, i32* %arg1, align 4
  %v2_5a50 = sub i32 %v3_5a44, %v2_5a4c
  store i32 %v2_5a50, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5a60

bb:                                               ; preds = %dec_label_pc_5a2a
  %v2_5a5e = call i32 @function_5a65(i32 %tmp100)
  br label %dec_label_pc_5a60

dec_label_pc_5a60:                                ; preds = %bb, %dec_label_pc_5a2a
  %v3_5a5e = phi i32 [ %v2_5a5e, %bb ], [ %v2_5a50, %dec_label_pc_5a2a ]
  ret i32 %v3_5a5e
}

define i32 @function_5a65(i32 %arg1) local_unnamed_addr {
dec_label_pc_5a65:
  %v0_5a66 = load i32, i32* @eax, align 4
  ret i32 %v0_5a66
}

define i32 @_ZN9base_uintILj256EE6SetHexERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5a68:
  store i32 %arg1, i32* @eax, align 4
  %v2_5a9a = call i32 @function_d68a(i32 %arg1, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9base_uintILj256EErSEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5ab2:
  %tmp106 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp106
}

define i32 @function_5af2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5af2:
  %eax.global-to-local = alloca i32, align 4
  %v0_5af2 = load i32, i32* @eax, align 4
  %v1_5af2 = add i32 %v0_5af2, 20
  %v2_5af2 = inttoptr i32 %v1_5af2 to i32*
  %v3_5af2 = load i32, i32* %v2_5af2, align 4
  %v1_5af5 = load i32, i32* @ebp, align 4
  %v2_5af5 = add i32 %v1_5af5, -40
  %v3_5af5 = inttoptr i32 %v2_5af5 to i32*
  store i32 %v3_5af2, i32* %v3_5af5, align 4
  %v0_5af8 = load i32, i32* @eax, align 4
  %v1_5af8 = add i32 %v0_5af8, ptrtoint (i32* @global_var_18.885 to i32)
  %v2_5af8 = inttoptr i32 %v1_5af8 to i32*
  %v3_5af8 = load i32, i32* %v2_5af8, align 4
  %v1_5afb = load i32, i32* @ebp, align 4
  %v2_5afb = add i32 %v1_5afb, -36
  %v3_5afb = inttoptr i32 %v2_5afb to i32*
  store i32 %v3_5af8, i32* %v3_5afb, align 4
  %v0_5afe = load i32, i32* @eax, align 4
  %v1_5afe = add i32 %v0_5afe, ptrtoint (i32* @global_var_1c.886 to i32)
  %v2_5afe = inttoptr i32 %v1_5afe to i32*
  %v3_5afe = load i32, i32* %v2_5afe, align 4
  store i32 %v3_5afe, i32* %eax.global-to-local, align 4
  %v1_5b01 = load i32, i32* @ebp, align 4
  %v2_5b01 = add i32 %v1_5b01, -32
  %v3_5b01 = inttoptr i32 %v2_5b01 to i32*
  store i32 %v3_5afe, i32* %v3_5b01, align 4
  %v0_5b04 = load i32, i32* @ebp, align 4
  %v1_5b04 = add i32 %v0_5b04, -72
  %v2_5b04 = inttoptr i32 %v1_5b04 to i32*
  store i32 0, i32* %v2_5b04, align 4
  br label %dec_label_pc_5b1e

dec_label_pc_5b0d:                                ; preds = %dec_label_pc_5b1e
  %v1_5b0d = add i32 %v0_5b1e, -76
  %v2_5b0d = inttoptr i32 %v1_5b0d to i32*
  %v3_5b0d = load i32, i32* %v2_5b0d, align 4
  store i32 %v3_5b0d, i32* %eax.global-to-local, align 4
  %v3_5b10 = load i32, i32* %v2_5b1e, align 4
  %v2_5b13 = mul i32 %v3_5b10, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5b13 = add i32 %v2_5b13, %v3_5b0d
  %v4_5b13 = inttoptr i32 %v3_5b13 to i32*
  store i32 0, i32* %v4_5b13, align 4
  %v0_5b1a = load i32, i32* @ebp, align 4
  %v1_5b1a = add i32 %v0_5b1a, -72
  %v2_5b1a = inttoptr i32 %v1_5b1a to i32*
  %v3_5b1a = load i32, i32* %v2_5b1a, align 4
  %v4_5b1a = add i32 %v3_5b1a, 1
  store i32 %v4_5b1a, i32* %v2_5b1a, align 4
  br label %dec_label_pc_5b1e

dec_label_pc_5b1e:                                ; preds = %dec_label_pc_5b0d, %dec_label_pc_5af2
  %v0_5b1e = load i32, i32* @ebp, align 4
  %v1_5b1e = add i32 %v0_5b1e, -72
  %v2_5b1e = inttoptr i32 %v1_5b1e to i32*
  %v3_5b1e = load i32, i32* %v2_5b1e, align 4
  %v4_5b1e = add i32 %v3_5b1e, -7
  %tmp10 = sub i32 6, %v3_5b1e
  %v11_5b1e = and i32 %tmp10, %v3_5b1e
  %v12_5b1e = icmp slt i32 %v11_5b1e, 0
  %v13_5b1e = icmp eq i32 %v4_5b1e, 0
  %v14_5b1e = icmp slt i32 %v4_5b1e, 0
  %v3_5b22 = icmp ne i1 %v14_5b1e, %v12_5b1e
  %v4_5b22 = or i1 %v13_5b1e, %v3_5b22
  %v5_5b22 = zext i1 %v4_5b22 to i32
  %v6_5b22 = load i32, i32* %eax.global-to-local, align 4
  %v7_5b22 = and i32 %v6_5b22, -256
  %v8_5b22 = or i32 %v5_5b22, %v7_5b22
  store i32 %v8_5b22, i32* %eax.global-to-local, align 4
  %v5_5b25 = icmp eq i1 %v4_5b22, false
  %v1_5b27 = icmp eq i1 %v5_5b25, false
  br i1 %v1_5b27, label %dec_label_pc_5b0d, label %dec_label_pc_5b29

dec_label_pc_5b29:                                ; preds = %dec_label_pc_5b1e
  %v1_5b29 = add i32 %v0_5b1e, -80
  %v2_5b29 = inttoptr i32 %v1_5b29 to i32*
  %v3_5b29 = load i32, i32* %v2_5b29, align 4
  %v2_5b2c = udiv i32 %v3_5b29, 32
  store i32 %v2_5b2c, i32* %eax.global-to-local, align 4
  %v2_5b2f = add i32 %v0_5b1e, -64
  %v3_5b2f = inttoptr i32 %v2_5b2f to i32*
  store i32 %v2_5b2c, i32* %v3_5b2f, align 4
  %v0_5b32 = load i32, i32* @ebp, align 4
  %v1_5b32 = add i32 %v0_5b32, -80
  %v2_5b32 = inttoptr i32 %v1_5b32 to i32*
  %v3_5b32 = load i32, i32* %v2_5b32, align 4
  %v4_5b32 = and i32 %v3_5b32, ptrtoint (i32* @global_var_1f.893 to i32)
  store i32 %v4_5b32, i32* %v2_5b32, align 4
  %v0_5b36 = load i32, i32* @ebp, align 4
  %v1_5b36 = add i32 %v0_5b36, -68
  %v2_5b36 = inttoptr i32 %v1_5b36 to i32*
  store i32 0, i32* %v2_5b36, align 4
  br label %dec_label_pc_5be6

dec_label_pc_5b42:                                ; preds = %dec_label_pc_5be6
  %v1_5b42 = add i32 %v0_5be6, -64
  %v2_5b42 = inttoptr i32 %v1_5b42 to i32*
  %v3_5b42 = load i32, i32* %v2_5b42, align 4
  store i32 %v3_5b42, i32* %eax.global-to-local, align 4
  %v3_5b45 = load i32, i32* %v2_5be6, align 4
  %v2_5b4a = sub i32 %v3_5b45, %v3_5b42
  %v1_5b4e = add i32 %v2_5b4a, -1
  %v11_5b4e = icmp slt i32 %v1_5b4e, 0
  store i32 %v1_5b4e, i32* %eax.global-to-local, align 4
  br i1 %v11_5b4e, label %dec_label_pc_5ba0, label %dec_label_pc_5b55

dec_label_pc_5b55:                                ; preds = %dec_label_pc_5b42
  %v1_5b55 = add i32 %v0_5be6, -80
  %v2_5b55 = inttoptr i32 %v1_5b55 to i32*
  %v3_5b55 = load i32, i32* %v2_5b55, align 4
  %v10_5b55 = icmp eq i32 %v3_5b55, 0
  br i1 %v10_5b55, label %dec_label_pc_5ba0, label %dec_label_pc_5b5b

dec_label_pc_5b5b:                                ; preds = %dec_label_pc_5b55
  %v3_5b5b = load i32, i32* %v2_5b42, align 4
  store i32 %v3_5b5b, i32* %eax.global-to-local, align 4
  %v3_5b5e = load i32, i32* %v2_5be6, align 4
  %v2_5b63 = sub i32 %v3_5b5e, %v3_5b5b
  store i32 %v2_5b63, i32* %eax.global-to-local, align 4
  %v1_5b67 = add i32 %v2_5b63, -1
  %v3_5b6a = load i32, i32* %v2_5b42, align 4
  store i32 %v3_5b6a, i32* %eax.global-to-local, align 4
  %v3_5b6d = load i32, i32* %v2_5be6, align 4
  %v2_5b72 = sub i32 %v3_5b6d, %v3_5b6a
  store i32 %v2_5b72, i32* %eax.global-to-local, align 4
  %v1_5b76 = add i32 %v2_5b72, -1
  %v1_5b79 = add i32 %v0_5be6, -76
  %v2_5b79 = inttoptr i32 %v1_5b79 to i32*
  %v3_5b79 = load i32, i32* %v2_5b79, align 4
  store i32 %v3_5b79, i32* %eax.global-to-local, align 4
  %v2_5b7c = mul i32 %v1_5b76, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5b7c = add i32 %v3_5b79, %v2_5b7c
  %v4_5b7c = inttoptr i32 %v3_5b7c to i32*
  %v5_5b7c = load i32, i32* %v4_5b7c, align 4
  %v3_5b7f = load i32, i32* %v2_5be6, align 4
  store i32 %v3_5b7f, i32* %eax.global-to-local, align 4
  %v2_5b82 = mul i32 %v3_5b7f, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5b82 = add i32 %v0_5be6, -60
  %v4_5b82 = add i32 %v3_5b82, %v2_5b82
  %v5_5b82 = inttoptr i32 %v4_5b82 to i32*
  %v6_5b82 = load i32, i32* %v5_5b82, align 4
  store i32 ptrtoint (i32* @mainParams to i32), i32* %eax.global-to-local, align 4
  %v4_5b8b = load i32, i32* %v2_5b55, align 4
  %v5_5b8b = sub i32 ptrtoint (i32* @mainParams to i32), %v4_5b8b
  store i32 %v5_5b8b, i32* %eax.global-to-local, align 4
  %v3_5b92 = urem i32 %v5_5b8b, 32
  %v5_5b92 = icmp eq i32 %v3_5b92, 0
  br i1 %v5_5b92, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_5b5b
  %v6_5b92 = shl i32 %v6_5b82, %v3_5b92
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_5b5b, %bb
  %v0_5b94 = phi i32 [ %v6_5b82, %dec_label_pc_5b5b ], [ %v6_5b92, %bb ]
  store i32 %v0_5b94, i32* %eax.global-to-local, align 4
  %v2_5b98 = or i32 %v0_5b94, %v5_5b7c
  %v3_5b9a = load i32, i32* %v2_5b79, align 4
  store i32 %v3_5b9a, i32* %eax.global-to-local, align 4
  %v3_5b9d = mul i32 %v1_5b67, ptrtoint (i16** @global_var_4.882 to i32)
  %v4_5b9d = add i32 %v3_5b9a, %v3_5b9d
  %v5_5b9d = inttoptr i32 %v4_5b9d to i32*
  store i32 %v2_5b98, i32* %v5_5b9d, align 4
  %v0_5ba0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_5ba0

dec_label_pc_5ba0:                                ; preds = %bb11, %dec_label_pc_5b55, %dec_label_pc_5b42
  %v0_5bdc = phi i32 [ %v0_5ba0.pre, %bb11 ], [ %v0_5be6, %dec_label_pc_5b55 ], [ %v0_5be6, %dec_label_pc_5b42 ]
  %v1_5ba0 = add i32 %v0_5bdc, -64
  %v2_5ba0 = inttoptr i32 %v1_5ba0 to i32*
  %v3_5ba0 = load i32, i32* %v2_5ba0, align 4
  store i32 %v3_5ba0, i32* %eax.global-to-local, align 4
  %v1_5ba3 = add i32 %v0_5bdc, -68
  %v2_5ba3 = inttoptr i32 %v1_5ba3 to i32*
  %v3_5ba3 = load i32, i32* %v2_5ba3, align 4
  %v2_5ba8 = sub i32 %v3_5ba3, %v3_5ba0
  %v13_5ba8 = icmp slt i32 %v2_5ba8, 0
  store i32 %v2_5ba8, i32* @ecx, align 4
  store i32 %v2_5ba8, i32* %eax.global-to-local, align 4
  br i1 %v13_5ba8, label %dec_label_pc_5be2, label %dec_label_pc_5bb0

dec_label_pc_5bb0:                                ; preds = %dec_label_pc_5ba0
  %v3_5bb0 = load i32, i32* %v2_5ba0, align 4
  store i32 %v3_5bb0, i32* %eax.global-to-local, align 4
  %v3_5bb3 = load i32, i32* %v2_5ba3, align 4
  %v2_5bb6 = sub i32 %v3_5bb3, %v3_5bb0
  %v3_5bb8 = load i32, i32* %v2_5ba0, align 4
  store i32 %v3_5bb8, i32* %eax.global-to-local, align 4
  %v3_5bbb = load i32, i32* %v2_5ba3, align 4
  %v2_5bbe = sub i32 %v3_5bbb, %v3_5bb8
  %v1_5bc0 = add i32 %v0_5bdc, -76
  %v2_5bc0 = inttoptr i32 %v1_5bc0 to i32*
  %v3_5bc0 = load i32, i32* %v2_5bc0, align 4
  store i32 %v3_5bc0, i32* %eax.global-to-local, align 4
  %v2_5bc3 = mul i32 %v2_5bbe, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5bc3 = add i32 %v3_5bc0, %v2_5bc3
  %v4_5bc3 = inttoptr i32 %v3_5bc3 to i32*
  %v5_5bc3 = load i32, i32* %v4_5bc3, align 4
  %v3_5bc6 = load i32, i32* %v2_5ba3, align 4
  store i32 %v3_5bc6, i32* %eax.global-to-local, align 4
  %v2_5bc9 = mul i32 %v3_5bc6, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5bc9 = add i32 %v0_5bdc, -60
  %v4_5bc9 = add i32 %v3_5bc9, %v2_5bc9
  %v5_5bc9 = inttoptr i32 %v4_5bc9 to i32*
  %v6_5bc9 = load i32, i32* %v5_5bc9, align 4
  %v1_5bcd = add i32 %v0_5bdc, -80
  %v2_5bcd = inttoptr i32 %v1_5bcd to i32*
  %v3_5bcd = load i32, i32* %v2_5bcd, align 4
  store i32 %v3_5bcd, i32* %eax.global-to-local, align 4
  %v3_5bd4 = urem i32 %v3_5bcd, 32
  %v5_5bd4 = icmp eq i32 %v3_5bd4, 0
  br i1 %v5_5bd4, label %bb13, label %bb12

bb12:                                             ; preds = %dec_label_pc_5bb0
  %v6_5bd4 = lshr i32 %v6_5bc9, %v3_5bd4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_5bb0, %bb12
  %v0_5bd6 = phi i32 [ %v6_5bc9, %dec_label_pc_5bb0 ], [ %v6_5bd4, %bb12 ]
  store i32 %v0_5bd6, i32* %eax.global-to-local, align 4
  %v2_5bda = or i32 %v0_5bd6, %v5_5bc3
  store i32 %v2_5bda, i32* @ecx, align 4
  %v3_5bdc = load i32, i32* %v2_5bc0, align 4
  store i32 %v3_5bdc, i32* %eax.global-to-local, align 4
  %v3_5bdf = mul i32 %v2_5bb6, ptrtoint (i16** @global_var_4.882 to i32)
  %v4_5bdf = add i32 %v3_5bdc, %v3_5bdf
  %v5_5bdf = inttoptr i32 %v4_5bdf to i32*
  store i32 %v2_5bda, i32* %v5_5bdf, align 4
  %v0_5be2.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_5be2

dec_label_pc_5be2:                                ; preds = %bb13, %dec_label_pc_5ba0
  %v0_5be2 = phi i32 [ %v0_5be2.pre, %bb13 ], [ %v0_5bdc, %dec_label_pc_5ba0 ]
  %v1_5be2 = add i32 %v0_5be2, -68
  %v2_5be2 = inttoptr i32 %v1_5be2 to i32*
  %v3_5be2 = load i32, i32* %v2_5be2, align 4
  %v4_5be2 = add i32 %v3_5be2, 1
  store i32 %v4_5be2, i32* %v2_5be2, align 4
  br label %dec_label_pc_5be6

dec_label_pc_5be6:                                ; preds = %dec_label_pc_5be2, %dec_label_pc_5b29
  %v0_5be6 = load i32, i32* @ebp, align 4
  %v1_5be6 = add i32 %v0_5be6, -68
  %v2_5be6 = inttoptr i32 %v1_5be6 to i32*
  %v3_5be6 = load i32, i32* %v2_5be6, align 4
  %v4_5be6 = add i32 %v3_5be6, -7
  %tmp14 = sub i32 6, %v3_5be6
  %v11_5be6 = and i32 %tmp14, %v3_5be6
  %v12_5be6 = icmp slt i32 %v11_5be6, 0
  %v13_5be6 = icmp eq i32 %v4_5be6, 0
  %v14_5be6 = icmp slt i32 %v4_5be6, 0
  %v3_5bea = icmp ne i1 %v14_5be6, %v12_5be6
  %v4_5bea = or i1 %v13_5be6, %v3_5bea
  %v5_5bea = zext i1 %v4_5bea to i32
  %v6_5bea = load i32, i32* %eax.global-to-local, align 4
  %v7_5bea = and i32 %v6_5bea, -256
  %v8_5bea = or i32 %v5_5bea, %v7_5bea
  store i32 %v8_5bea, i32* %eax.global-to-local, align 4
  %v5_5bed = icmp eq i1 %v4_5bea, false
  %v1_5bef = icmp eq i1 %v5_5bed, false
  br i1 %v1_5bef, label %dec_label_pc_5b42, label %dec_label_pc_5bf5

dec_label_pc_5bf5:                                ; preds = %dec_label_pc_5be6
  %v1_5bf5 = add i32 %v0_5be6, -76
  %v2_5bf5 = inttoptr i32 %v1_5bf5 to i32*
  %v3_5bf5 = load i32, i32* %v2_5bf5, align 4
  store i32 %v3_5bf5, i32* @eax, align 4
  %v1_5bf8 = add i32 %v0_5be6, -28
  %v2_5bf8 = inttoptr i32 %v1_5bf8 to i32*
  %v3_5bf8 = load i32, i32* %v2_5bf8, align 4
  %v1_5bfb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_5bfb = icmp eq i32 %v1_5bfb, %v3_5bf8
  br i1 %v3_5bfb, label %bb15, label %dec_label_pc_5c04

bb15:                                             ; preds = %dec_label_pc_5bf5
  %v1_5c02 = call i32 @function_5c09()
  store i32 %v1_5c02, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_5c04

dec_label_pc_5c04:                                ; preds = %bb15, %dec_label_pc_5bf5
  %v2_5c02 = phi i32 [ %v1_5c02, %bb15 ], [ %v3_5bf5, %dec_label_pc_5bf5 ]
  ret i32 %v2_5c02

; uselistorder directives
  uselistorder i32 %v4_5be6, { 1, 0 }
  uselistorder i32* %v2_5be6, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_5be6, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v3_5bd4, { 1, 0 }
  uselistorder i32 %v0_5bdc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v3_5b92, { 1, 0 }
  uselistorder i32 %v1_5b4e, { 1, 0 }
  uselistorder i32 %v2_5b2c, { 1, 0 }
  uselistorder i32 %v4_5b1e, { 1, 0 }
  uselistorder i32* %v2_5b1e, { 1, 0 }
  uselistorder i32 %v0_5b1e, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 22, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 23, 28 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_5c09() local_unnamed_addr {
dec_label_pc_5c09:
  %v0_5c10 = load i32, i32* @eax, align 4
  ret i32 %v0_5c10
}

define i32 @_ZeqRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5c11:
  ret i32 0
}

define i32 @function_5c37(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5c37:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c37 = load i32, i32* @ebp, align 4
  %v1_5c37 = add i32 %v0_5c37, -28
  %v2_5c37 = inttoptr i32 %v1_5c37 to i32*
  %v3_5c37 = load i32, i32* %v2_5c37, align 4
  store i32 %v3_5c37, i32* %eax.global-to-local, align 4
  %v1_5c3a = add i32 %v0_5c37, -16
  %v2_5c3a = inttoptr i32 %v1_5c3a to i32*
  %v3_5c3a = load i32, i32* %v2_5c3a, align 4
  %v2_5c3d = mul i32 %v3_5c3a, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5c3d = add i32 %v2_5c3d, %v3_5c37
  %v4_5c3d = inttoptr i32 %v3_5c3d to i32*
  %v5_5c3d = load i32, i32* %v4_5c3d, align 4
  store i32 %v5_5c3d, i32* @ecx, align 4
  %v1_5c40 = add i32 %v0_5c37, -32
  %v2_5c40 = inttoptr i32 %v1_5c40 to i32*
  %v3_5c40 = load i32, i32* %v2_5c40, align 4
  store i32 %v3_5c40, i32* %eax.global-to-local, align 4
  %v3_5c43 = load i32, i32* %v2_5c3a, align 4
  %v2_5c46 = mul i32 %v3_5c43, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_5c46 = add i32 %v2_5c46, %v3_5c40
  %v4_5c46 = inttoptr i32 %v3_5c46 to i32*
  %v5_5c46 = load i32, i32* %v4_5c46, align 4
  store i32 %v5_5c46, i32* %eax.global-to-local, align 4
  %v12_5c49 = icmp eq i32 %v5_5c3d, %v5_5c46
  br i1 %v12_5c49, label %dec_label_pc_5c54, label %dec_label_pc_5c68

dec_label_pc_5c54:                                ; preds = %dec_label_pc_5c37
  %v3_5c54 = load i32, i32* %v2_5c3a, align 4
  %v4_5c54 = add i32 %v3_5c54, 1
  store i32 %v4_5c54, i32* %v2_5c3a, align 4
  %v0_5c58 = load i32, i32* @ebp, align 4
  %v1_5c58 = add i32 %v0_5c58, -16
  %v2_5c58 = inttoptr i32 %v1_5c58 to i32*
  %v3_5c58 = load i32, i32* %v2_5c58, align 4
  %v4_5c58 = add i32 %v3_5c58, -7
  %tmp = sub i32 6, %v3_5c58
  %v11_5c58 = and i32 %tmp, %v3_5c58
  %v12_5c58 = icmp slt i32 %v11_5c58, 0
  %v13_5c58 = icmp eq i32 %v4_5c58, 0
  %v14_5c58 = icmp slt i32 %v4_5c58, 0
  %v3_5c5c = icmp ne i1 %v14_5c58, %v12_5c58
  %v4_5c5c = or i1 %v13_5c58, %v3_5c5c
  %v5_5c5c = zext i1 %v4_5c5c to i32
  %v6_5c5c = load i32, i32* %eax.global-to-local, align 4
  %v7_5c5c = and i32 %v6_5c5c, -256
  %v8_5c5c = or i32 %v5_5c5c, %v7_5c5c
  store i32 %v8_5c5c, i32* %eax.global-to-local, align 4
  %v5_5c5f = icmp eq i1 %v4_5c5c, false
  %v1_5c61 = icmp eq i1 %v5_5c5f, false
  br i1 %v1_5c61, label %bb, label %dec_label_pc_5c68

bb:                                               ; preds = %dec_label_pc_5c54
  %v5_5c61 = call i32 @function_5c37(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_5c61, i32* %eax.global-to-local, align 4
  %v0_5c68.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_5c68

dec_label_pc_5c68:                                ; preds = %dec_label_pc_5c54, %bb, %dec_label_pc_5c37
  %v0_5c68 = phi i32 [ %v0_5c37, %dec_label_pc_5c37 ], [ %v0_5c68.pre, %bb ], [ %v0_5c58, %dec_label_pc_5c54 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_5c37 ], [ 1, %bb ], [ 1, %dec_label_pc_5c54 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_5c68 = add i32 %v0_5c68, -12
  %v2_5c68 = inttoptr i32 %v1_5c68 to i32*
  %v3_5c68 = load i32, i32* %v2_5c68, align 4
  %v1_5c6b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_5c6b = icmp eq i32 %v1_5c6b, %v3_5c68
  br i1 %v3_5c6b, label %bb4, label %dec_label_pc_5c74

bb4:                                              ; preds = %dec_label_pc_5c68
  %v1_5c72 = call i32 @function_5c79()
  store i32 %v1_5c72, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_5c74

dec_label_pc_5c74:                                ; preds = %bb4, %dec_label_pc_5c68
  %v2_5c72 = phi i32 [ %v1_5c72, %bb4 ], [ %storemerge, %dec_label_pc_5c68 ]
  ret i32 %v2_5c72

; uselistorder directives
  uselistorder i32 %v4_5c58, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_5c37, { 2, 1, 0 }
  uselistorder label %dec_label_pc_5c68, { 1, 0, 2 }
}

define i32 @function_5c79() local_unnamed_addr {
dec_label_pc_5c79:
  %v0_5c7a = load i32, i32* @eax, align 4
  ret i32 %v0_5c7a
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5c7c:
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5ca8

bb:                                               ; preds = %dec_label_pc_5c7c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_5ca6 = call i32 @function_5cad(i32 %tmp100)
  br label %dec_label_pc_5ca8

dec_label_pc_5ca8:                                ; preds = %bb, %dec_label_pc_5c7c
  %v3_5ca6 = phi i32 [ %v2_5ca6, %bb ], [ 0, %dec_label_pc_5c7c ]
  ret i32 %v3_5ca6

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_5cad(i32 %arg1) local_unnamed_addr {
dec_label_pc_5cad:
  %v0_5cae = load i32, i32* @eax, align 4
  ret i32 %v0_5cae
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5cb0:
  store i32 %arg1, i32* @eax, align 4
  %v1_5ccd = call i32 @function_da2e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5cde

bb:                                               ; preds = %dec_label_pc_5cb0
  %v1_5cdc = call i32 @function_5ce3()
  br label %dec_label_pc_5cde

dec_label_pc_5cde:                                ; preds = %bb, %dec_label_pc_5cb0
  %v2_5cdc = phi i32 [ %v1_5cdc, %bb ], [ 0, %dec_label_pc_5cb0 ]
  ret i32 %v2_5cdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_5ce3() local_unnamed_addr {
dec_label_pc_5ce3:
  %v0_5ce4 = load i32, i32* @eax, align 4
  ret i32 %v0_5ce4
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_5ce6:
  %v2_5d00 = load i32, i32* %arg1, align 4
  store i32 %v2_5d00, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5d0e

bb:                                               ; preds = %dec_label_pc_5ce6
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_5d0c = call i32 @function_5d13(i32 %tmp100)
  br label %dec_label_pc_5d0e

dec_label_pc_5d0e:                                ; preds = %bb, %dec_label_pc_5ce6
  %v3_5d0c = phi i32 [ %v2_5d0c, %bb ], [ %v2_5d00, %dec_label_pc_5ce6 ]
  ret i32 %v3_5d0c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_5d13(i32 %arg1) local_unnamed_addr {
dec_label_pc_5d13:
  %v0_5d14 = load i32, i32* @eax, align 4
  ret i32 %v0_5d14
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_5d16:
  %v2_5d36 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_5d42 = call i32 @function_bc28(i32 %arg1, i32 %v2_5d36)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5d5e:
  store i32 ptrtoint (i32* @global_var_125b8.888 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5d90

bb:                                               ; preds = %dec_label_pc_5d5e
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_5d8e = call i32 @function_5d95(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_5d90

dec_label_pc_5d90:                                ; preds = %bb, %dec_label_pc_5d5e
  %v4_5d8e = phi i32 [ %v3_5d8e, %bb ], [ 0, %dec_label_pc_5d5e ]
  ret i32 %v4_5d8e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_5d95(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5d95:
  %v0_5d96 = load i32, i32* @eax, align 4
  ret i32 %v0_5d96
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5d98:
  ret i32 0
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5dc2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5de5

bb:                                               ; preds = %dec_label_pc_5dc2
  %v2_5de3 = call i32 @function_5dea(i32 %arg1)
  br label %dec_label_pc_5de5

dec_label_pc_5de5:                                ; preds = %bb, %dec_label_pc_5dc2
  %v3_5de3 = phi i32 [ %v2_5de3, %bb ], [ 0, %dec_label_pc_5dc2 ]
  ret i32 %v3_5de3
}

define i32 @function_5dea(i32 %arg1) local_unnamed_addr {
dec_label_pc_5dea:
  %v0_5deb = load i32, i32* @eax, align 4
  ret i32 %v0_5deb
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5dec:
  ret i32 0
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5e16:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5e39

bb:                                               ; preds = %dec_label_pc_5e16
  %v2_5e37 = call i32 @function_5e3e(i32 %arg1)
  br label %dec_label_pc_5e39

dec_label_pc_5e39:                                ; preds = %bb, %dec_label_pc_5e16
  %v3_5e37 = phi i32 [ %v2_5e37, %bb ], [ 0, %dec_label_pc_5e16 ]
  ret i32 %v3_5e37
}

define i32 @function_5e3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_5e3e:
  %v0_5e3f = load i32, i32* @eax, align 4
  ret i32 %v0_5e3f
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5e40:
  ret i32 0
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5e6a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5e8d

bb:                                               ; preds = %dec_label_pc_5e6a
  %v2_5e8b = call i32 @function_5e92(i32 %arg1)
  br label %dec_label_pc_5e8d

dec_label_pc_5e8d:                                ; preds = %bb, %dec_label_pc_5e6a
  %v3_5e8b = phi i32 [ %v2_5e8b, %bb ], [ 0, %dec_label_pc_5e6a ]
  ret i32 %v3_5e8b
}

declare i32 @__stack_chk_fail.103(i32, i32) local_unnamed_addr

define i32 @function_5e92(i32 %arg1) local_unnamed_addr {
dec_label_pc_5e92:
  %v0_5e93 = load i32, i32* @eax, align 4
  ret i32 %v0_5e93
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5e94:
  ret i32 0
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5ebe:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5ee1

bb:                                               ; preds = %dec_label_pc_5ebe
  %v2_5edf = call i32 @function_5ee6(i32 %arg1)
  br label %dec_label_pc_5ee1

dec_label_pc_5ee1:                                ; preds = %bb, %dec_label_pc_5ebe
  %v3_5edf = phi i32 [ %v2_5edf, %bb ], [ 0, %dec_label_pc_5ebe ]
  ret i32 %v3_5edf
}

define i32 @function_5ee6(i32 %arg1) local_unnamed_addr {
dec_label_pc_5ee6:
  %v0_5ee7 = load i32, i32* @eax, align 4
  ret i32 %v0_5ee7
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5ee8:
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5f12:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_5f35 = call i32 @function_dc90(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_5f48 = call i32 @function_dcf6(i32 %tmp102)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5f60:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_5f80 = inttoptr i32 %arg2 to i32*
  %v2_5f80 = load i32, i32* %v1_5f80, align 4
  store i32 %v2_5f80, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_5f8d = call i32 @function_dd44(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5f9e

bb:                                               ; preds = %dec_label_pc_5f60
  %v1_5f9c = call i32 @function_5fa3()
  br label %dec_label_pc_5f9e

dec_label_pc_5f9e:                                ; preds = %bb, %dec_label_pc_5f60
  %v2_5f9c = phi i32 [ %v1_5f9c, %bb ], [ 0, %dec_label_pc_5f60 ]
  ret i32 %v2_5f9c

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_5fa3() local_unnamed_addr {
dec_label_pc_5fa3:
  %v0_5fa4 = load i32, i32* @eax, align 4
  ret i32 %v0_5fa4
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5fa6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_5fcb = add i32 %tmp100, 20
  store i32 %v1_5fcb, i32* @eax, align 4
  %v1_5fd1 = call i32 @function_63e2(i32 %v1_5fcb)
  store i32 ptrtoint (%vtable_12570_type* @global_var_12570.911 to i32), i32* %arg1, align 4
  %v2_5fe2 = inttoptr i32 %v1_5fcb to i32*
  store i32 ptrtoint (i32* @global_var_12580.912 to i32), i32* %v2_5fe2, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5ff5

bb:                                               ; preds = %dec_label_pc_5fa6
  %v1_5ff3 = call i32 @function_5ffa()
  br label %dec_label_pc_5ff5

dec_label_pc_5ff5:                                ; preds = %bb, %dec_label_pc_5fa6
  %v2_5ff3 = phi i32 [ %v1_5ff3, %bb ], [ 0, %dec_label_pc_5fa6 ]
  ret i32 %v2_5ff3
}

define i32 @function_5ffa() local_unnamed_addr {
dec_label_pc_5ffa:
  %v0_5ffb = load i32, i32* @eax, align 4
  ret i32 %v0_5ffb
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5ffc:
  %eax.global-to-local = alloca i32, align 4
  %v0_6001 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6001
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_6006:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12570_type* @global_var_12570.911 to i32), i32* %arg1, align 4
  %v1_6029 = add i32 %tmp99, 20
  %v2_6029 = inttoptr i32 %v1_6029 to i32*
  store i32 ptrtoint (i32* @global_var_12580.912 to i32), i32* %v2_6029, align 4
  ret i32 %v1_6029
}

define i32 @function_6070() local_unnamed_addr {
dec_label_pc_6070:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6070 = load i32, i32* %ecx.global-to-local, align 4
  %v1_6070 = add i32 %v0_6070, -1
  store i32 %v1_6070, i32* %ecx.global-to-local, align 4
  %v0_6072 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6072
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_6074:
  %v4_6074 = add i32 %arg1, -20
  %v1_6079 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v4_6074)
  ret i32 %v1_6079
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_607c:
  store i32 %arg1, i32* @eax, align 4
  %v1_6099 = call i32 @function_c07a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_60b9() local_unnamed_addr {
dec_label_pc_60b9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_60b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_60b9 = add i32 %v0_60b9, -1
  store i32 %v1_60b9, i32* %ecx.global-to-local, align 4
  %v0_60bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_60bb
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_60bc:
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_60e6 = call i32 @function_8768(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_6105() local_unnamed_addr {
dec_label_pc_6105:
  %eax.global-to-local = alloca i32, align 4
  %v0_6106 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6106
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6108:
  ret i32 0
}

define i32 @function_6128(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6128:
  %v0_6128 = load i32, i32* @ebp, align 4
  %v1_6128 = add i32 %v0_6128, -28
  %v2_6128 = inttoptr i32 %v1_6128 to i32*
  %v3_6128 = load i32, i32* %v2_6128, align 4
  store i32 %v3_6128, i32* @eax, align 4
  %v0_612b = load i32, i32* @edx, align 4
  %v2_6132 = call i32 @function_815a(i32 %v3_6128, i32 %v0_612b)
  %v0_6137 = load i32, i32* @ebp, align 4
  %v1_6137 = add i32 %v0_6137, -32
  %v2_6137 = inttoptr i32 %v1_6137 to i32*
  %v3_6137 = load i32, i32* %v2_6137, align 4
  %v1_613a = add i32 %v3_6137, 20
  %v1_613d = add i32 %v0_6137, -28
  %v2_613d = inttoptr i32 %v1_613d to i32*
  %v3_613d = load i32, i32* %v2_613d, align 4
  %v1_6140 = add i32 %v3_613d, 20
  %v5_6140 = icmp ugt i32 %v3_613d, -21
  store i1 %v5_6140, i1* @cf, align 1
  store i32 %v1_6140, i32* @eax, align 4
  %v2_614a = call i32 @function_c1c4(i32 %v1_6140, i32 %v1_613a)
  %v0_614f = load i32, i32* @ebp, align 4
  %v1_614f = add i32 %v0_614f, -28
  %v2_614f = inttoptr i32 %v1_614f to i32*
  %v3_614f = load i32, i32* %v2_614f, align 4
  %v1_6152 = inttoptr i32 %v3_614f to i32*
  store i32 ptrtoint (%vtable_12570_type* @global_var_12570.911 to i32), i32* %v1_6152, align 4
  %v0_6158 = load i32, i32* @ebp, align 4
  %v1_6158 = add i32 %v0_6158, -28
  %v2_6158 = inttoptr i32 %v1_6158 to i32*
  %v3_6158 = load i32, i32* %v2_6158, align 4
  %v1_615b = add i32 %v3_6158, 20
  %v2_615b = inttoptr i32 %v1_615b to i32*
  store i32 ptrtoint (i32* @global_var_12580.912 to i32), i32* %v2_615b, align 4
  %v0_6162 = load i32, i32* @ebp, align 4
  %v1_6162 = add i32 %v0_6162, -12
  %v2_6162 = inttoptr i32 %v1_6162 to i32*
  %v3_6162 = load i32, i32* %v2_6162, align 4
  %v1_6165 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6165 = xor i32 %v1_6165, %v3_6162
  %v3_6165 = icmp eq i32 %v2_6165, 0
  store i32 %v2_6165, i32* @eax, align 4
  br i1 %v3_6165, label %bb, label %dec_label_pc_616e

bb:                                               ; preds = %dec_label_pc_6128
  %v1_616c = call i32 @function_6173()
  br label %dec_label_pc_616e

dec_label_pc_616e:                                ; preds = %bb, %dec_label_pc_6128
  %v2_616c = phi i32 [ %v1_616c, %bb ], [ %v2_6165, %dec_label_pc_6128 ]
  ret i32 %v2_616c

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_12570_type* @global_var_12570.911 to i32), { 2, 1, 0 }
}

define i32 @function_6173() local_unnamed_addr {
dec_label_pc_6173:
  %v0_6174 = load i32, i32* @eax, align 4
  ret i32 %v0_6174
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6176:
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_61a0 = call i32 @function_c27e(i32 %arg1, i32 %arg2)
  %v1_61a8 = add i32 %arg2, ptrtoint (i32* @global_var_18.885 to i32)
  %v1_61ae = add i32 %arg1, ptrtoint (i32* @global_var_18.885 to i32)
  %v2_61b8 = call i32 @function_bed4(i32 %v1_61ae, i32 %v1_61a8)
  ret i32 %v2_61b8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_61bf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_61bf:
  %eax.global-to-local = alloca i32, align 4
  %v2_61c1 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_61c1 = load i32, i32* @edx, align 4
  %v4_61c1 = trunc i32 %v3_61c1 to i8
  %v5_61c1 = add i8 %v4_61c1, %v2_61c1
  %v20_61c1 = load i32, i32* @eax, align 4
  %v21_61c1 = inttoptr i32 %v20_61c1 to i8*
  store i8 %v5_61c1, i8* %v21_61c1, align 1
  %v0_61c3 = load i32, i32* @eax, align 4
  %v1_61c3 = and i32 %v0_61c3, 1166737409
  %v1_61ca = add nuw nsw i32 %v1_61c3, 1
  %fold = urem i32 %v0_61c3, 2
  %tmp = and i32 %v1_61ca, 1166737408
  %v27_61cb = or i32 %tmp, %fold
  %v1_61cd = xor i32 %v27_61cb, 1
  %v1_61d4 = add nuw nsw i32 %v1_61cd, 1
  store i32 %v1_61d4, i32* %eax.global-to-local, align 4
  %v0_61d5 = load i8, i8* inttoptr (i32 1166737409 to i8*), align 1
  %v1_61d5 = load i32, i32* @ebx, align 4
  %v2_61d5 = udiv i32 %v1_61d5, 256
  %v3_61d5 = trunc i32 %v2_61d5 to i8
  %v6_61d5 = sub i8 %v0_61d5, %v3_61d5
  store i8 %v6_61d5, i8* inttoptr (i32 1166737409 to i8*), align 1
  %v0_61dd = load i32, i32* %eax.global-to-local, align 4
  %v1_61dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_61dd = xor i32 %v1_61dd, %v0_61dd
  %v3_61dd = icmp eq i32 %v2_61dd, 0
  store i32 %v2_61dd, i32* @eax, align 4
  br i1 %v3_61dd, label %bb, label %dec_label_pc_61e6

bb:                                               ; preds = %dec_label_pc_61bf
  %v1_61e4 = call i32 @function_61eb()
  store i32 %v1_61e4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_61e6

dec_label_pc_61e6:                                ; preds = %bb, %dec_label_pc_61bf
  %v2_61e4 = phi i32 [ %v1_61e4, %bb ], [ %v2_61dd, %dec_label_pc_61bf ]
  ret i32 %v2_61e4
}

define i32 @function_61eb() local_unnamed_addr {
dec_label_pc_61eb:
  %v0_61ec = load i32, i32* @eax, align 4
  ret i32 %v0_61ec
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv() local_unnamed_addr {
dec_label_pc_61f0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_622e(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_622e:
  %eax.global-to-local = alloca i32, align 4
  %v0_622e = load i32, i32* @ebp, align 4
  %v1_622e = add i32 %v0_622e, 76142661
  %v2_622e = inttoptr i32 %v1_622e to i8*
  %v3_622e = load i8, i8* %v2_622e, align 1
  %v4_622e = load i32, i32* @ecx, align 4
  %v5_622e = trunc i32 %v4_622e to i8
  %v6_622e = add i8 %v5_622e, %v3_622e
  store i8 %v6_622e, i8* %v2_622e, align 1
  %v0_6234 = load i32, i32* @eax, align 4
  %v11_6234 = and i32 %v0_6234, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  %v1_6236 = add i32 %v11_6234, -1
  %v11_6236 = trunc i32 %v1_6236 to i8
  store i32 %v1_6236, i32* %eax.global-to-local, align 4
  %v1_6237 = inttoptr i32 %v1_6236 to i8*
  %v2_6237 = load i8, i8* %v1_6237, align 1
  %v5_6237 = or i8 %v2_6237, %v11_6236
  store i8 %v5_6237, i8* %v1_6237, align 1
  %v3_6239 = load i32, i32* %eax.global-to-local, align 4
  %v11_623c = and i32 %v3_6239, or (i32 zext (i8 ptrtoint (i16** @global_var_4.882 to i8) to i32), i32 -256)
  store i32 %v11_623c, i32* %eax.global-to-local, align 4
  %v0_623e = call i32 @unknown_8d006260()
  store i32 %v0_623e, i32* %eax.global-to-local, align 4
  %v0_6243 = load i32, i32* @ebp, align 4
  %v1_6243 = add i32 %v0_6243, 1
  store i32 %v1_6243, i32* @ebp, align 4
  %v1_624b = inttoptr i32 %v0_623e to i8*
  %v2_624b = load i8, i8* %v1_624b, align 1
  %v4_624b = trunc i32 %v0_623e to i8
  %v5_624b = add i8 %v2_624b, %v4_624b
  store i8 %v5_624b, i8* %v1_624b, align 1
  %v0_6255 = load i32, i32* @ebp, align 4
  %v1_6255 = add i32 %v0_6255, -32
  store i32 %v1_6255, i32* %eax.global-to-local, align 4
  %v3_625b = call i32 @function_6a12(i32 %v1_6255, i32 ptrtoint ([169 x i8]* @global_var_1ec8.913 to i32))
  %v0_6260 = load i32, i32* @ebp, align 4
  %v1_6260 = add i32 %v0_6260, -32
  %v1_6267 = add i32 %v0_6260, -92
  store i32 %v1_6267, i32* @eax, align 4
  %v3_626d = call i32 @function_e1d8(i32 %v1_6267, i32 %v1_6260)
  store i32 %v3_626d, i32* %eax.global-to-local, align 4
  ret i32 %v3_626d

; uselistorder directives
  uselistorder i32 %v0_623e, { 1, 0, 2 }
  uselistorder i32 %v1_6236, { 0, 2, 1 }
}

define i32 @function_6272(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_6272:
  %v0_6272 = load i32, i32* @ebp, align 4
  %v1_6272 = add i32 %v0_6272, -36
  %v0_6279 = load i32, i32* @eax, align 4
  %v2_627c = call i32 @function_e21a(i32 %v0_6279, i32 %v1_6272)
  store i32 %v2_627c, i32* @eax, align 4
  %v0_6281 = load i32, i32* @ebp, align 4
  %v1_6281 = add i32 %v0_6281, -40
  store i32 %v1_6281, i32* @edx, align 4
  %v2_628b = call i32 @function_e25c(i32 %v2_627c, i32 %v1_6281)
  %v2_6295 = load i8, i8* inttoptr (i32 25072 to i8*), align 16
  %v3_6295 = zext i8 %v2_6295 to i32
  ret i32 %v3_6295
}

define i32 @function_62c3() local_unnamed_addr {
dec_label_pc_62c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_62c3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_62c3
}

define i32 @function_6346() local_unnamed_addr {
dec_label_pc_6346:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_6346 = load i32, i32* %eax.global-to-local, align 4
  %v0_6348 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_6346, i32* @ebx, align 4
  %v1_6352 = call i32 @function_6356(i32 %v0_6348)
  store i32 %v1_6352, i32* %eax.global-to-local, align 4
  ret i32 %v1_6352
}

define i32 @function_6354() local_unnamed_addr {
dec_label_pc_6354:
  %eax.global-to-local = alloca i32, align 4
  %v0_6354 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6354
}

define i32 @function_6356(i32 %arg1) local_unnamed_addr {
dec_label_pc_6356:
  %v0_6356 = load i32, i32* @esi, align 4
  %v4_6358 = trunc i32 %v0_6356 to i8
  %v5_6358 = icmp eq i8 %v4_6358, 0
  store i1 %v5_6358, i1* @zf, align 1
  %v1_635a = icmp eq i1 %v5_6358, false
  br i1 %v1_635a, label %bb, label %dec_label_pc_635c

bb:                                               ; preds = %dec_label_pc_6356
  %v2_635a = call i32 @function_6368()
  br label %dec_label_pc_635c

dec_label_pc_635c:                                ; preds = %bb, %dec_label_pc_6356
  %v2_635c = phi i32 [ %v2_635a, %bb ], [ %v0_6356, %dec_label_pc_6356 ]
  ret i32 %v2_635c
}

define i32 @function_6368() local_unnamed_addr {
dec_label_pc_6368:
  %v0_6368 = call i32 @function_636c()
  ret i32 %v0_6368
}

define i32 @function_636a() local_unnamed_addr {
dec_label_pc_636a:
  %eax.global-to-local = alloca i32, align 4
  %v0_636a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_636a
}

define i32 @function_636c() local_unnamed_addr {
dec_label_pc_636c:
  %v0_636c = load i32, i32* @ebp, align 4
  %v1_636c = add i32 %v0_636c, -92
  store i32 %v1_636c, i32* @eax, align 4
  %v1_6372 = call i32 @function_e112(i32 %v1_636c)
  %v0_6377 = call i32 @function_637b()
  ret i32 %v0_6377
}

define i32 @function_6379() local_unnamed_addr {
dec_label_pc_6379:
  %eax.global-to-local = alloca i32, align 4
  %v0_6379 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6379
}

define i32 @function_637b() local_unnamed_addr {
dec_label_pc_637b:
  %v0_637b = load i32, i32* @ebp, align 4
  %v1_637b = add i32 %v0_637b, -64
  store i32 %v1_637b, i32* @eax, align 4
  %v1_6381 = call i32 @function_c1f6(i32 %v1_637b)
  %v0_6386 = load i32, i32* @ebx, align 4
  ret i32 %v0_6386
}

define i32 @function_6390() local_unnamed_addr {
dec_label_pc_6390:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_6395(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6395:
  %eax.global-to-local = alloca i32, align 4
  %v0_639c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_639c
}

define i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_63a0:
  %stack_var_-20 = alloca i32, align 4
  %v2_63c0 = load i32, i32* %arg2, align 4
  store i32 %v2_63c0, i32* %stack_var_-20, align 4
  %v2_63c5 = ptrtoint i32* %stack_var_-20 to i32
  %v2_63d2 = call i32 @function_e4c4(i32 %arg1, i32 %v2_63c5)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_63e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_63e2:
  %v2_63e2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_63e2 = load i32, i32* @eax, align 4
  %v4_63e2 = trunc i32 %v3_63e2 to i8
  %v5_63e2 = add i8 %v4_63e2, %v2_63e2
  %v21_63e2 = inttoptr i32 %v3_63e2 to i8*
  store i8 %v5_63e2, i8* %v21_63e2, align 1
  %v0_63ec = load i32, i32* @eax, align 4
  ret i32 %v0_63ec
}

define i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_63f0:
  %stack_var_-20 = alloca i32, align 4
  %v1_6410 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_6410 = inttoptr i32 %v1_6410 to i32*
  %v3_6410 = load i32, i32* %v2_6410, align 4
  store i32 %v3_6410, i32* %stack_var_-20, align 4
  %v2_6416 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_6423 = call i32 @function_e514(i32 %arg1, i32 %v2_6416)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6437

bb:                                               ; preds = %dec_label_pc_63f0
  %v1_6435 = call i32 @function_643c()
  br label %dec_label_pc_6437

dec_label_pc_6437:                                ; preds = %bb, %dec_label_pc_63f0
  %v2_6435 = phi i32 [ %v1_6435, %bb ], [ %arg1, %dec_label_pc_63f0 ]
  ret i32 %v2_6435

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_643c() local_unnamed_addr {
dec_label_pc_643c:
  %v0_643d = load i32, i32* @eax, align 4
  ret i32 %v0_643d
}

define i32 @_ZNSaIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_6440:
  ret i32 %arg1
}

define i32 @function_645c(i32 %arg1) local_unnamed_addr {
dec_label_pc_645c:
  %v0_645c = load i32, i32* @eax, align 4
  %v1_645c = trunc i32 %v0_645c to i8
  %v2_645c = and i8 %v1_645c, ptrtoint (i8* @global_var_e8.898 to i8)
  %v8_645c = zext i8 %v2_645c to i32
  %v10_645c = and i32 %v0_645c, -256
  %v11_645c = or i32 %v8_645c, %v10_645c
  %v1_6460 = inttoptr i32 %v11_645c to i8*
  %v2_6460 = load i8, i8* %v1_6460, align 1
  %v5_6460 = add i8 %v2_6460, %v2_645c
  store i8 %v5_6460, i8* %v1_6460, align 1
  %v0_6462 = load i32, i32* @ebp, align 4
  %v1_6462 = add i32 %v0_6462, -12
  %v2_6462 = inttoptr i32 %v1_6462 to i32*
  %v3_6462 = load i32, i32* %v2_6462, align 4
  ret i32 %v3_6462
}

define i32 @function_646a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_646a:
  %zf.global-to-local = alloca i1, align 1
  %v2_646a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_646a = load i32, i32* @eax, align 4
  %v4_646a = trunc i32 %v3_646a to i8
  %v5_646a = add i8 %v4_646a, %v2_646a
  %v15_646a = icmp eq i8 %v5_646a, 0
  store i1 %v15_646a, i1* %zf.global-to-local, align 1
  %v21_646a = inttoptr i32 %v3_646a to i8*
  store i8 %v5_646a, i8* %v21_646a, align 1
  %v0_646c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_646c, label %bb, label %dec_label_pc_646a.dec_label_pc_646e_crit_edge

dec_label_pc_646a.dec_label_pc_646e_crit_edge:    ; preds = %dec_label_pc_646a
  %v2_646c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_646e

bb:                                               ; preds = %dec_label_pc_646a
  %v1_646c = call i32 @function_6473()
  br label %dec_label_pc_646e

dec_label_pc_646e:                                ; preds = %dec_label_pc_646a.dec_label_pc_646e_crit_edge, %bb
  %v2_646c = phi i32 [ %v2_646c.pre, %dec_label_pc_646a.dec_label_pc_646e_crit_edge ], [ %v1_646c, %bb ]
  ret i32 %v2_646c

; uselistorder directives
  uselistorder label %dec_label_pc_646e, { 1, 0 }
}

define i32 @function_6473() local_unnamed_addr {
dec_label_pc_6473:
  %v0_6474 = load i32, i32* @eax, align 4
  ret i32 %v0_6474
}

define i32 @_ZNSaIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_6476:
  %v1_6493 = call i32 @function_e5fe(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_64a4

bb:                                               ; preds = %dec_label_pc_6476
  %v1_64a2 = call i32 @function_64a9()
  br label %dec_label_pc_64a4

dec_label_pc_64a4:                                ; preds = %bb, %dec_label_pc_6476
  %v2_64a2 = phi i32 [ %v1_64a2, %bb ], [ 0, %dec_label_pc_6476 ]
  ret i32 %v2_64a2
}

define i32 @function_64a9() local_unnamed_addr {
dec_label_pc_64a9:
  %v0_64aa = load i32, i32* @eax, align 4
  ret i32 %v0_64aa
}

define i32 @_ZNSt6vectorIhSaIhEEC1EjRKhRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_64ac:
  %v7_64ea = call i32 @__stack_chk_fail.361(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v3_6503 = call i32 @function_e7ae(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_6508 = call i32 @function_6521()
  ret i32 %v0_6508

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_650b() local_unnamed_addr {
dec_label_pc_650b:
  %eax.global-to-local = alloca i32, align 4
  %v0_650b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_650b
}

define i32 @function_6521() local_unnamed_addr {
dec_label_pc_6521:
  %v0_6521 = load i32, i32* @ebp, align 4
  %v1_6521 = add i32 %v0_6521, -12
  %v2_6521 = inttoptr i32 %v1_6521 to i32*
  %v3_6521 = load i32, i32* %v2_6521, align 4
  %v1_6524 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6524 = xor i32 %v1_6524, %v3_6521
  %v3_6524 = icmp eq i32 %v2_6524, 0
  store i32 %v2_6524, i32* @eax, align 4
  br i1 %v3_6524, label %bb, label %dec_label_pc_652d

bb:                                               ; preds = %dec_label_pc_6521
  %v1_652b = call i32 @function_6532()
  br label %dec_label_pc_652d

dec_label_pc_652d:                                ; preds = %bb, %dec_label_pc_6521
  %v2_652b = phi i32 [ %v1_652b, %bb ], [ %v2_6524, %dec_label_pc_6521 ]
  ret i32 %v2_652b
}

define i32 @function_6532() local_unnamed_addr {
dec_label_pc_6532:
  %v0_6537 = load i32, i32* @eax, align 4
  ret i32 %v0_6537
}

define i32 @_ZNSt6vectorIhSaIhEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_6538:
  ret i32 %arg1
}

define i32 @function_6546(i32 %arg1) local_unnamed_addr {
dec_label_pc_6546:
  %v0_6546 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_654b = load i32, i32* @ebp, align 4
  %v2_654b = add i32 %v1_654b, -12
  %v3_654b = inttoptr i32 %v2_654b to i32*
  store i32 %v0_6546, i32* %v3_654b, align 4
  %v0_6550 = load i32, i32* @ebp, align 4
  %v1_6550 = add i32 %v0_6550, -28
  %v2_6550 = inttoptr i32 %v1_6550 to i32*
  %v3_6550 = load i32, i32* %v2_6550, align 4
  store i32 %v3_6550, i32* @eax, align 4
  %v1_6556 = call i32 @function_e8a6(i32 %v3_6550)
  store i32 %v1_6556, i32* @eax, align 4
  %v0_655b = load i32, i32* @ebp, align 4
  %v1_655b = add i32 %v0_655b, -28
  %v2_655b = inttoptr i32 %v1_655b to i32*
  %v3_655b = load i32, i32* %v2_655b, align 4
  %v1_655e = add i32 %v3_655b, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_655e = inttoptr i32 %v1_655e to i32*
  %v3_655e = load i32, i32* %v2_655e, align 4
  %v1_6564 = inttoptr i32 %v3_655b to i32*
  %v2_6564 = load i32, i32* %v1_6564, align 4
  %v3_6571 = call i32 @function_e8d3(i32 %v2_6564, i32 %v3_655e, i32 %v1_6556)
  %v0_6576 = load i32, i32* @ebp, align 4
  %v1_6576 = add i32 %v0_6576, -28
  %v2_6576 = inttoptr i32 %v1_6576 to i32*
  %v3_6576 = load i32, i32* %v2_6576, align 4
  store i32 %v3_6576, i32* @eax, align 4
  %v1_657c = call i32 @function_e7ba(i32 %v3_6576)
  %v0_6581 = load i32, i32* @ebp, align 4
  %v1_6581 = add i32 %v0_6581, -12
  %v2_6581 = inttoptr i32 %v1_6581 to i32*
  %v3_6581 = load i32, i32* %v2_6581, align 4
  %v1_6584 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6584 = xor i32 %v1_6584, %v3_6581
  %v3_6584 = icmp eq i32 %v2_6584, 0
  store i32 %v2_6584, i32* @eax, align 4
  br i1 %v3_6584, label %bb, label %dec_label_pc_658d

bb:                                               ; preds = %dec_label_pc_6546
  %v1_658b = call i32 @function_65ab()
  store i32 %v1_658b, i32* @eax, align 4
  br label %dec_label_pc_658d

dec_label_pc_658d:                                ; preds = %bb, %dec_label_pc_6546
  %v0_658d = call i32 @function_65a6()
  ret i32 %v0_658d
}

define i32 @function_6590() local_unnamed_addr {
dec_label_pc_6590:
  %eax.global-to-local = alloca i32, align 4
  %v0_6590 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6590
}

define i32 @function_6592(i32 %arg1) local_unnamed_addr {
dec_label_pc_6592:
  %v0_6595 = load i32, i32* @eax, align 4
  %v2_6595 = add i32 %v0_6595, 36
  %v16_6595 = and i32 %v2_6595, 255
  %v18_6595 = and i32 %v0_6595, -256
  %v19_6595 = or i32 %v16_6595, %v18_6595
  store i32 %v19_6595, i32* @eax, align 4
  %v1_6597 = call i32 @function_e7ba(i32 ptrtoint (i32* @0 to i32))
  %v0_659c = load i32, i32* @ebx, align 4
  ret i32 %v0_659c

; uselistorder directives
  uselistorder i32 %v0_6595, { 1, 0 }
}

define i32 @function_65a6() local_unnamed_addr {
dec_label_pc_65a6:
  %v0_65a6 = load i32, i32* @eax, align 4
  ret i32 %v0_65a6
}

define i32 @function_65ab() local_unnamed_addr {
dec_label_pc_65ab:
  %v0_65b0 = load i32, i32* @eax, align 4
  ret i32 %v0_65b0
}

define i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_65b2:
  %v2_65d2 = load i32, i32* %arg1, align 4
  %v5_65d4 = add i32 %v2_65d2, %arg2
  ret i32 %v5_65d4
}

define i32 @function_65da(i32 %arg1) local_unnamed_addr {
dec_label_pc_65da:
  %v0_65da = load i32, i32* @edx, align 4
  %v1_65da = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_65da = icmp eq i32 %v1_65da, %v0_65da
  br i1 %v3_65da, label %bb, label %dec_label_pc_65da.dec_label_pc_65e3_crit_edge

dec_label_pc_65da.dec_label_pc_65e3_crit_edge:    ; preds = %dec_label_pc_65da
  %v2_65e1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_65e3

bb:                                               ; preds = %dec_label_pc_65da
  %v1_65e1 = call i32 @function_65e8()
  br label %dec_label_pc_65e3

dec_label_pc_65e3:                                ; preds = %dec_label_pc_65da.dec_label_pc_65e3_crit_edge, %bb
  %v2_65e1 = phi i32 [ %v2_65e1.pre, %dec_label_pc_65da.dec_label_pc_65e3_crit_edge ], [ %v1_65e1, %bb ]
  ret i32 %v2_65e1

; uselistorder directives
  uselistorder label %dec_label_pc_65e3, { 1, 0 }
}

define i32 @function_65e8() local_unnamed_addr {
dec_label_pc_65e8:
  %v0_65e9 = load i32, i32* @eax, align 4
  ret i32 %v0_65e9
}

define i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_65ea:
  store i32 %arg1, i32* @eax, align 4
  %v2_6614 = call i32 @function_e9ce(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6628

bb:                                               ; preds = %dec_label_pc_65ea
  %v1_6626 = call i32 @function_662d()
  br label %dec_label_pc_6628

dec_label_pc_6628:                                ; preds = %bb, %dec_label_pc_65ea
  %v2_6626 = phi i32 [ %v1_6626, %bb ], [ %arg1, %dec_label_pc_65ea ]
  ret i32 %v2_6626

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_662d() local_unnamed_addr {
dec_label_pc_662d:
  %v0_662e = load i32, i32* @eax, align 4
  ret i32 %v0_662e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_6632:
  %stack_var_-20 = alloca i32, align 4
  %v2_6658 = load i32, i32* %arg2, align 4
  %v1_665d = inttoptr i32 %arg3 to i32*
  %v2_665d = load i32, i32* %v1_665d, align 4
  %v2_665f = add i32 %v2_665d, %v2_6658
  store i32 %v2_665f, i32* %stack_var_-20, align 4
  %v2_6664 = ptrtoint i32* %stack_var_-20 to i32
  %v2_6671 = call i32 @function_ea16(i32 %arg1, i32 %v2_6664)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6685

bb:                                               ; preds = %dec_label_pc_6632
  %v1_6683 = call i32 @function_668a()
  br label %dec_label_pc_6685

dec_label_pc_6685:                                ; preds = %bb, %dec_label_pc_6632
  %v2_6683 = phi i32 [ %v1_6683, %bb ], [ %arg1, %dec_label_pc_6632 ]
  ret i32 %v2_6683

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_668a() local_unnamed_addr {
dec_label_pc_668a:
  %v0_668b = load i32, i32* @eax, align 4
  ret i32 %v0_668b
}

define i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_668e:
  ret i32 %arg1
}

define i32 @function_66aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_66aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_66aa = load i32, i32* @eax, align 4
  %v11_66aa = and i32 %v0_66aa, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_66aa, i32* %eax.global-to-local, align 4
  %v0_66af = load i32, i32* @ebx, align 4
  %v1_66af = add i32 %v0_66af, 862319685
  %v2_66af = inttoptr i32 %v1_66af to i8*
  %v3_66af = load i8, i8* %v2_66af, align 1
  %v4_66af = load i32, i32* @ecx, align 4
  %v5_66af = trunc i32 %v4_66af to i8
  %v6_66af = add i8 %v5_66af, %v3_66af
  store i8 %v6_66af, i8* %v2_66af, align 1
  %v0_66b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_66b5 = add i32 %v0_66b5, 20
  %v10_66b5 = icmp eq i32 %v1_66b5, 0
  store i32 %v1_66b5, i32* @eax, align 4
  br i1 %v10_66b5, label %bb, label %dec_label_pc_66bc

bb:                                               ; preds = %dec_label_pc_66aa
  %v1_66ba = call i32 @function_66c1()
  store i32 %v1_66ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_66bc

dec_label_pc_66bc:                                ; preds = %bb, %dec_label_pc_66aa
  %v2_66ba = phi i32 [ %v1_66ba, %bb ], [ %v1_66b5, %dec_label_pc_66aa ]
  ret i32 %v2_66ba
}

define i32 @function_66c1() local_unnamed_addr {
dec_label_pc_66c1:
  %v0_66c2 = load i32, i32* @eax, align 4
  ret i32 %v0_66c2
}

define i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_66c4:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_66e9 = call i32 @function_eb82(i32 %arg2)
  store i32 %v1_66e9, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_66f6 = call i32 @function_c0ee(i32 %arg2)
  store i32 %v1_66f6, i32* @eax, align 4
  %v0_66fe = load i32, i32* @ebx, align 4
  %v3_6709 = call i32 @function_e8ac(i32 %tmp107, i32 %v1_66f6, i32 %v0_66fe)
  store i32 %tmp107, i32* @ebx, align 4
  %v2_671e = load i32, i32* %arg1, align 4
  store i32 %v2_671e, i32* %esi.global-to-local, align 4
  %v2_6720 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_6720, i32* @eax, align 4
  %v2_672d = call i32 @function_cab4(i32 %v2_6720, i32 %arg2)
  %v2_6735 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_6735, i32* @eax, align 4
  %v2_6742 = call i32 @function_ca64(i32 %v2_6735, i32 %arg2)
  %v0_674a = load i32, i32* @ebx, align 4
  %v0_674e = load i32, i32* %esi.global-to-local, align 4
  %v3_6752 = load i32, i32* %stack_var_-20, align 4
  %v3_6759 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_6759, i32* @eax, align 4
  %v4_675f = call i32 @function_ebaf(i32 %v3_6759, i32 %v3_6752, i32 %v0_674e, i32 %v0_674a)
  %v2_6769 = add i32 %tmp107, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_6769 = inttoptr i32 %v2_6769 to i32*
  store i32 %v4_675f, i32* %v3_6769, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6778

bb:                                               ; preds = %dec_label_pc_66c4
  %v1_6776 = call i32 @function_6796()
  store i32 %v1_6776, i32* @eax, align 4
  br label %dec_label_pc_6778

dec_label_pc_6778:                                ; preds = %bb, %dec_label_pc_66c4
  %v0_6778 = call i32 @function_6791()
  ret i32 %v0_6778

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_677b() local_unnamed_addr {
dec_label_pc_677b:
  %eax.global-to-local = alloca i32, align 4
  %v0_677b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_677b
}

define i32 @function_6791() local_unnamed_addr {
dec_label_pc_6791:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6796() local_unnamed_addr {
dec_label_pc_6796:
  %v0_679c = load i32, i32* @eax, align 4
  ret i32 %v0_679c
}

define i32 @_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_679e:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-60, align 4
  store i1 false, i1* @cf, align 1
  %v2_67e2 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_67e2, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_67ef = call i32 @function_d04c(i32 %v2_67e2)
  %v2_67fe = ptrtoint i32* %stack_var_-60 to i32
  ret i32 %v2_67fe
}

define i32 @function_680a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_680a:
  %v0_680a = load i32, i32* @eax, align 4
  %v1_680a = load i32, i32* @edi, align 4
  %v3_680a = add i32 %v0_680a, -115
  %v4_680a = add i32 %v3_680a, %v1_680a
  %v5_680a = inttoptr i32 %v4_680a to i8*
  %v6_680a = load i8, i8* %v5_680a, align 1
  %v8_680a = mul i8 %v6_680a, 32
  store i8 %v8_680a, i8* %v5_680a, align 1
  %v0_680f = call i32 @unknown_89d0bd9f()
  store i1 false, i1* @cf, align 1
  %v11_6815 = and i32 %v0_680f, or (i32 zext (i8 ptrtoint (i16** @global_var_4.882 to i8) to i32), i32 -256)
  store i32 %v11_6815, i32* @eax, align 4
  %v1_681a = call i32 @function_d04c(i32 %v11_6815)
  %v0_6822 = load i32, i32* @ebp, align 4
  %v1_6822 = add i32 %v0_6822, -20
  store i32 %v1_6822, i32* @eax, align 4
  %v1_6825 = add i32 %v0_6822, -52
  %v2_6825 = inttoptr i32 %v1_6825 to i32*
  %v3_6825 = load i32, i32* %v2_6825, align 4
  %v1_682c = add i32 %v0_6822, -24
  %v2_682c = inttoptr i32 %v1_682c to i32*
  %v3_682c = load i32, i32* %v2_682c, align 4
  %v1_6833 = add i32 %v0_6822, -56
  %v2_6833 = inttoptr i32 %v1_6833 to i32*
  %v3_6833 = load i32, i32* %v2_6833, align 4
  store i32 %v3_6833, i32* @edx, align 4
  %v4_683d = call i32 @function_ed32(i32 %v1_6822, i32 %v3_6833, i32 %v3_682c, i32 %v3_6825)
  %v0_6845 = load i32, i32* @ebp, align 4
  %v1_6845 = add i32 %v0_6845, -52
  %v1_684b = call i32 @function_ee1e(i32 %v1_6845)
  %v1_6850 = inttoptr i32 %v1_684b to i32*
  %v2_6850 = load i32, i32* %v1_6850, align 4
  store i32 %v2_6850, i32* @ebx, align 4
  %v0_6852 = load i32, i32* @ebp, align 4
  %v1_6852 = add i32 %v0_6852, -16
  store i32 %v1_6852, i32* @eax, align 4
  %v1_6855 = add i32 %v0_6852, -48
  %v2_6855 = inttoptr i32 %v1_6855 to i32*
  %v3_6855 = load i32, i32* %v2_6855, align 4
  store i32 %v3_6855, i32* @edx, align 4
  %v1_685f = call i32 @function_d04c(i32 %v1_6852)
  %v0_6867 = load i32, i32* @ebp, align 4
  %v1_6867 = add i32 %v0_6867, -56
  %v1_686e = add i32 %v0_6867, -16
  store i32 %v1_686e, i32* @eax, align 4
  %v2_6874 = call i32 @function_d7bc(i32 %v1_686e, i32 %v1_6867)
  %v1_6879 = load i32, i32* @ebx, align 4
  %v2_6879 = add i32 %v1_6879, %v2_6874
  %v7_6879 = icmp ult i32 %v2_6879, %v2_6874
  store i1 %v7_6879, i1* @cf, align 1
  %v0_687f = load i32, i32* @ebp, align 4
  %v1_687f = add i32 %v0_687f, -48
  %v2_687f = inttoptr i32 %v1_687f to i32*
  %v3_687f = load i32, i32* %v2_687f, align 4
  store i32 %v3_687f, i32* @eax, align 4
  %v2_6885 = call i32 @function_edc0(i32 %v3_687f, i32 %v2_6879)
  %v0_688a = load i32, i32* @ebp, align 4
  %v1_688a = add i32 %v0_688a, -44
  %v2_688a = inttoptr i32 %v1_688a to i32*
  %v3_688a = load i32, i32* %v2_688a, align 4
  %v1_688d = add i32 %v0_688a, -52
  %v2_688d = inttoptr i32 %v1_688d to i32*
  %v3_688d = load i32, i32* %v2_688d, align 4
  %v2_6890 = inttoptr i32 %v3_688a to i32*
  store i32 %v3_688d, i32* %v2_6890, align 4
  %v0_6892 = load i32, i32* @ebp, align 4
  %v1_6892 = add i32 %v0_6892, -44
  %v2_6892 = inttoptr i32 %v1_6892 to i32*
  %v3_6892 = load i32, i32* %v2_6892, align 4
  store i32 %v3_6892, i32* @eax, align 4
  %v1_6895 = add i32 %v0_6892, -12
  %v2_6895 = inttoptr i32 %v1_6895 to i32*
  %v3_6895 = load i32, i32* %v2_6895, align 4
  %v1_6898 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6898 = icmp eq i32 %v1_6898, %v3_6895
  br i1 %v3_6898, label %bb, label %dec_label_pc_68a1

bb:                                               ; preds = %dec_label_pc_680a
  %v1_689f = call i32 @function_68a6()
  br label %dec_label_pc_68a1

dec_label_pc_68a1:                                ; preds = %bb, %dec_label_pc_680a
  %v3_689f = phi i32 [ %v1_689f, %bb ], [ %v3_6892, %dec_label_pc_680a ]
  ret i32 %v3_689f

; uselistorder directives
  uselistorder i32 %v2_6874, { 1, 0 }
  uselistorder i32 %v0_6822, { 1, 0, 2, 3 }
  uselistorder i32 %v11_6815, { 1, 0 }
  uselistorder i32 (i32)* @function_d04c, { 1, 0, 2 }
}

define i32 @function_68a6() local_unnamed_addr {
dec_label_pc_68a6:
  %v0_68aa = load i32, i32* @eax, align 4
  ret i32 %v0_68aa
}

define i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_68ae:
  %v0_68c0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_68c0
}

define i32 @function_68c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_68c8:
  %v0_68cb = load i32, i32* @ebp, align 4
  %v1_68cb = add i32 %v0_68cb, -32
  %v2_68cb = inttoptr i32 %v1_68cb to i32*
  %v3_68cb = load i32, i32* %v2_68cb, align 4
  %v1_68ce = add i32 %v3_68cb, ptrtoint (i16** @global_var_4.882 to i32)
  %v1_68d5 = add i32 %v0_68cb, -28
  %v2_68d5 = inttoptr i32 %v1_68d5 to i32*
  %v3_68d5 = load i32, i32* %v2_68d5, align 4
  store i32 %v3_68d5, i32* @eax, align 4
  %v3_68db = call i32 @function_ec92(i32 %v3_68d5, i32 %v1_68ce)
  %v0_68e0 = load i32, i32* @ebp, align 4
  %v1_68e0 = add i32 %v0_68e0, -28
  %v2_68e0 = inttoptr i32 %v1_68e0 to i32*
  %v3_68e0 = load i32, i32* %v2_68e0, align 4
  ret i32 %v3_68e0
}

define i32 @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_68f8:
  ret i32 0
}

define i32 @function_6916(i32 %arg1) local_unnamed_addr {
dec_label_pc_6916:
  %v0_6916 = load i32, i32* @ebp, align 4
  %v1_6916 = add i32 %v0_6916, -33
  %v1_6919 = add i32 %v0_6916, -28
  %v2_6923 = call i32 @function_efa5(i32 %v1_6916, i32 %v1_6919)
  %v0_692b = load i32, i32* @ebx, align 4
  %v0_692f = load i32, i32* @ebp, align 4
  %v1_692f = add i32 %v0_692f, -32
  %v2_692f = inttoptr i32 %v1_692f to i32*
  %v3_692f = load i32, i32* %v2_692f, align 4
  %v1_6936 = add i32 %v0_692f, -28
  %v2_6936 = inttoptr i32 %v1_6936 to i32*
  %v3_6936 = load i32, i32* %v2_6936, align 4
  store i32 %v3_6936, i32* @eax, align 4
  %v3_693c = call i32 @function_efda(i32 %v3_6936, i32 %v3_692f, i32 %v0_692b)
  %v0_6941 = load i32, i32* @ebp, align 4
  %v1_6941 = add i32 %v0_6941, -12
  %v2_6941 = inttoptr i32 %v1_6941 to i32*
  %v3_6941 = load i32, i32* %v2_6941, align 4
  %v1_6944 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6944 = xor i32 %v1_6944, %v3_6941
  %v3_6944 = icmp eq i32 %v2_6944, 0
  store i32 %v2_6944, i32* @eax, align 4
  br i1 %v3_6944, label %bb, label %dec_label_pc_694d

bb:                                               ; preds = %dec_label_pc_6916
  %v1_694b = call i32 @function_6952()
  br label %dec_label_pc_694d

dec_label_pc_694d:                                ; preds = %bb, %dec_label_pc_6916
  %v2_694b = phi i32 [ %v1_694b, %bb ], [ %v2_6944, %dec_label_pc_6916 ]
  ret i32 %v2_694b
}

define i32 @function_6952() local_unnamed_addr {
dec_label_pc_6952:
  %v0_6956 = load i32, i32* @eax, align 4
  ret i32 %v0_6956
}

define i32 @_ZNSt6vectorIhSaIhEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6958:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_698a = call i32 @function_c382(i32 %arg2)
  %v1_6998 = call i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE12_M_check_lenEjPKc(i32 %tmp109)
  %v10_699d = icmp ult i32 %v1_6998, %v1_698a
  %v5_69a3 = icmp eq i1 %v10_699d, false
  br i1 %v5_69a3, label %bb, label %dec_label_pc_69ab

bb:                                               ; preds = %dec_label_pc_6958
  %v1_69a5 = call i32 @function_6a68()
  br label %dec_label_pc_69ab

dec_label_pc_69ab:                                ; preds = %bb, %dec_label_pc_6958
  %v2_69ab = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_69ab, i32* @eax, align 4
  %v2_69b8 = call i32 @function_cd48(i32 %v2_69ab, i32 %arg2)
  %v2_69c0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_69c0, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_69cd = call i32 @function_ccf8(i32 %v2_69c0, i32 %arg2)
  %v3_69d5 = load i32, i32* %stack_var_-64, align 4
  %v3_69dc = load i32, i32* %stack_var_-68, align 4
  store i32 %tmp109, i32* @eax, align 4
  %v4_69f0 = call i32 @function_f114(i32 %tmp109, i32 %v1_698a, i32 %v3_69dc, i32 %v3_69d5)
  ret i32 %tmp109

; uselistorder directives
  uselistorder i32 %tmp109, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 4, 3 }
}

define i32 @function_6a12(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6a12:
  %v0_6a12 = load i32, i32* @ecx, align 4
  %v0_6a16 = load i32, i32* @edx, align 4
  %v2_6a19 = call i32 @_ZSt4fillIP5CTxInS0_EvT_S2_RKT0_(i32 %v0_6a16, i32 %v0_6a12)
  %v0_6a1e = load i32, i32* @ebp, align 4
  %v1_6a1e = add i32 %v0_6a1e, -76
  %v2_6a1e = inttoptr i32 %v1_6a1e to i32*
  %v3_6a1e = load i32, i32* %v2_6a1e, align 4
  %v1_6a21 = add i32 %v3_6a1e, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_6a21 = inttoptr i32 %v1_6a21 to i32*
  %v3_6a21 = load i32, i32* %v2_6a21, align 4
  %v1_6a29 = inttoptr i32 %v3_6a1e to i32*
  %v2_6a29 = load i32, i32* %v1_6a29, align 4
  %v2_6a2d = sub i32 %v3_6a21, %v2_6a29
  store i32 %v2_6a2d, i32* @ecx, align 4
  %v3_6a33 = load i32, i32* %v2_6a1e, align 4
  %v1_6a36 = inttoptr i32 %v3_6a33 to i32*
  %v2_6a36 = load i32, i32* %v1_6a36, align 4
  store i32 %v3_6a33, i32* @eax, align 4
  %v3_6a46 = call i32 @function_f1ce(i32 %v3_6a33, i32 %v2_6a36, i32 %v2_6a2d)
  %v0_6a4b = load i32, i32* @ebp, align 4
  %v1_6a4b = add i32 %v0_6a4b, -76
  %v2_6a4b = inttoptr i32 %v1_6a4b to i32*
  %v3_6a4b = load i32, i32* %v2_6a4b, align 4
  %v1_6a4e = add i32 %v0_6a4b, -32
  %v2_6a4e = inttoptr i32 %v1_6a4e to i32*
  %v3_6a4e = load i32, i32* %v2_6a4e, align 4
  %v2_6a51 = inttoptr i32 %v3_6a4b to i32*
  store i32 %v3_6a4e, i32* %v2_6a51, align 4
  %v0_6a53 = load i32, i32* @ebp, align 4
  %v1_6a53 = add i32 %v0_6a53, -76
  %v2_6a53 = inttoptr i32 %v1_6a53 to i32*
  %v3_6a53 = load i32, i32* %v2_6a53, align 4
  %v1_6a56 = inttoptr i32 %v3_6a53 to i32*
  %v2_6a56 = load i32, i32* %v1_6a56, align 4
  %v2_6a5a = add i32 %v0_6a53, -36
  %v3_6a5a = inttoptr i32 %v2_6a5a to i32*
  %v4_6a5a = load i32, i32* %v3_6a5a, align 4
  %v5_6a5a = add i32 %v4_6a5a, %v2_6a56
  %v3_6a5d = load i32, i32* %v2_6a53, align 4
  %v2_6a60 = add i32 %v3_6a5d, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_6a60 = inttoptr i32 %v2_6a60 to i32*
  store i32 %v5_6a5a, i32* %v3_6a60, align 4
  %v0_6a63 = call i32 @function_6b8d()
  ret i32 %v0_6a63

; uselistorder directives
  uselistorder i32 %v3_6a33, { 1, 0, 2 }
}

define i32 @function_6a68() local_unnamed_addr {
dec_label_pc_6a68:
  %v0_6a68 = load i32, i32* @ebp, align 4
  %v1_6a68 = add i32 %v0_6a68, -76
  %v2_6a68 = inttoptr i32 %v1_6a68 to i32*
  %v3_6a68 = load i32, i32* %v2_6a68, align 4
  store i32 %v3_6a68, i32* @eax, align 4
  %v1_6a6e = call i32 @function_c382(i32 %v3_6a68)
  %v1_6a73 = load i32, i32* @ebp, align 4
  %v2_6a73 = add i32 %v1_6a73, -36
  %v3_6a73 = inttoptr i32 %v2_6a73 to i32*
  %v4_6a73 = load i32, i32* %v3_6a73, align 4
  %v10_6a73 = icmp ult i32 %v1_6a6e, %v4_6a73
  %v1_6a76 = icmp eq i1 %v10_6a73, false
  %v5_6a79 = icmp eq i1 %v1_6a76, false
  br i1 %v5_6a79, label %bb, label %dec_label_pc_6a81

bb:                                               ; preds = %dec_label_pc_6a68
  %v1_6a7b = call i32 @function_6b1d()
  %v0_6a81.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_6a81

dec_label_pc_6a81:                                ; preds = %bb, %dec_label_pc_6a68
  %v0_6a81 = phi i32 [ %v0_6a81.pre, %bb ], [ %v1_6a73, %dec_label_pc_6a68 ]
  %v1_6a81 = add i32 %v0_6a81, -76
  %v2_6a81 = inttoptr i32 %v1_6a81 to i32*
  %v3_6a81 = load i32, i32* %v2_6a81, align 4
  store i32 %v3_6a81, i32* @ebx, align 4
  %v1_6a8e = add i32 %v0_6a81, -40
  store i32 %v1_6a8e, i32* @eax, align 4
  %v3_6a91 = load i32, i32* %v2_6a81, align 4
  %v2_6a9b = call i32 @function_d206(i32 %v1_6a8e, i32 %v3_6a91)
  %v0_6aa3 = load i32, i32* @ebp, align 4
  %v1_6aa3 = add i32 %v0_6aa3, -48
  store i32 %v1_6aa3, i32* @eax, align 4
  %v1_6aa6 = add i32 %v0_6aa3, -76
  %v2_6aa6 = inttoptr i32 %v1_6aa6 to i32*
  %v3_6aa6 = load i32, i32* %v2_6aa6, align 4
  %v2_6ab0 = call i32 @function_cf42(i32 %v1_6aa3, i32 %v3_6aa6)
  %v0_6ab8 = load i32, i32* @ebp, align 4
  %v1_6ab8 = add i32 %v0_6ab8, -52
  store i32 %v1_6ab8, i32* @eax, align 4
  %v1_6abb = add i32 %v0_6ab8, -80
  %v2_6abb = inttoptr i32 %v1_6abb to i32*
  %v3_6abb = load i32, i32* %v2_6abb, align 4
  %v2_6ac5 = call i32 @function_cd48(i32 %v1_6ab8, i32 %v3_6abb)
  %v0_6acd = load i32, i32* @ebp, align 4
  %v1_6acd = add i32 %v0_6acd, -56
  store i32 %v1_6acd, i32* @eax, align 4
  %v1_6ad0 = add i32 %v0_6acd, -80
  %v2_6ad0 = inttoptr i32 %v1_6ad0 to i32*
  %v3_6ad0 = load i32, i32* %v2_6ad0, align 4
  %v2_6ada = call i32 @function_ccf8(i32 %v1_6acd, i32 %v3_6ad0)
  %v0_6ae2 = load i32, i32* @ebp, align 4
  %v1_6ae2 = add i32 %v0_6ae2, -44
  store i32 %v1_6ae2, i32* @eax, align 4
  %v1_6ae5 = add i32 %v0_6ae2, -48
  %v2_6ae5 = inttoptr i32 %v1_6ae5 to i32*
  %v3_6ae5 = load i32, i32* %v2_6ae5, align 4
  %v1_6aec = add i32 %v0_6ae2, -52
  %v2_6aec = inttoptr i32 %v1_6aec to i32*
  %v3_6aec = load i32, i32* %v2_6aec, align 4
  %v1_6af3 = add i32 %v0_6ae2, -56
  %v2_6af3 = inttoptr i32 %v1_6af3 to i32*
  %v3_6af3 = load i32, i32* %v2_6af3, align 4
  %v4_6afd = call i32 @function_f223(i32 %v1_6ae2, i32 %v3_6af3, i32 %v3_6aec, i32 %v3_6ae5)
  %v0_6b09 = load i32, i32* @ebp, align 4
  %v1_6b09 = add i32 %v0_6b09, -40
  %v2_6b09 = inttoptr i32 %v1_6b09 to i32*
  %v3_6b09 = load i32, i32* %v2_6b09, align 4
  ret i32 %v3_6b09

; uselistorder directives
  uselistorder i32 %v0_6ae2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_6a81, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_ccf8, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_cd48, { 1, 0 }
}

define i32 @function_6b0e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6b0e:
  %v0_6b10 = load i32, i32* @ebp, align 4
  %v1_6b10 = add i32 %v0_6b10, -44
  %v2_6b10 = inttoptr i32 %v1_6b10 to i32*
  %v3_6b10 = load i32, i32* %v2_6b10, align 4
  %v1_6b16 = call i32 @__stack_chk_fail.398(i32 %v3_6b10)
  %v0_6b1b = call i32 @function_6b8d()
  ret i32 %v0_6b1b

; uselistorder directives
  uselistorder i32 ()* @function_6b8d, { 1, 0 }
}

define i32 @function_6b1d() local_unnamed_addr {
dec_label_pc_6b1d:
  %v0_6b1d = load i32, i32* @ebp, align 4
  %v1_6b1d = add i32 %v0_6b1d, -76
  %v2_6b1d = inttoptr i32 %v1_6b1d to i32*
  %v3_6b1d = load i32, i32* %v2_6b1d, align 4
  %v1_6b20 = inttoptr i32 %v3_6b1d to i32*
  %v2_6b20 = load i32, i32* %v1_6b20, align 4
  store i32 %v2_6b20, i32* @ebx, align 4
  %v1_6b22 = add i32 %v0_6b1d, -80
  %v2_6b22 = inttoptr i32 %v1_6b22 to i32*
  %v3_6b22 = load i32, i32* %v2_6b22, align 4
  %v1_6b25 = inttoptr i32 %v3_6b22 to i32*
  %v2_6b25 = load i32, i32* %v1_6b25, align 4
  %v3_6b27 = load i32, i32* %v2_6b1d, align 4
  store i32 %v3_6b27, i32* @eax, align 4
  %v1_6b2d = call i32 @function_c382(i32 %v3_6b27)
  %v3_6b32 = add i32 %v2_6b25, %v1_6b2d
  %v0_6b35 = load i32, i32* @ebp, align 4
  %v1_6b35 = add i32 %v0_6b35, -80
  %v2_6b35 = inttoptr i32 %v1_6b35 to i32*
  %v3_6b35 = load i32, i32* %v2_6b35, align 4
  %v1_6b38 = inttoptr i32 %v3_6b35 to i32*
  %v2_6b38 = load i32, i32* %v1_6b38, align 4
  store i32 %v2_6b38, i32* @eax, align 4
  %v0_6b3a = load i32, i32* @ebx, align 4
  %v3_6b45 = call i32 @function_f2f9(i32 %v2_6b38, i32 %v3_6b32, i32 %v0_6b3a)
  %v0_6b4a = load i32, i32* @ebp, align 4
  %v1_6b5d = add i32 %v0_6b4a, -80
  %v2_6b5d = inttoptr i32 %v1_6b5d to i32*
  %v3_6b63 = load i32, i32* %v2_6b5d, align 4
  %v1_6b66 = inttoptr i32 %v3_6b63 to i32*
  %v2_6b66 = load i32, i32* %v1_6b66, align 4
  %v2_6b68 = add i32 %v0_6b4a, -84
  %v3_6b68 = inttoptr i32 %v2_6b68 to i32*
  store i32 %v2_6b66, i32* %v3_6b68, align 4
  %v0_6b6b = load i32, i32* @ebp, align 4
  %v1_6b6b = add i32 %v0_6b6b, -76
  %v2_6b6b = inttoptr i32 %v1_6b6b to i32*
  %v3_6b6b = load i32, i32* %v2_6b6b, align 4
  store i32 %v3_6b6b, i32* @eax, align 4
  %v1_6b71 = call i32 @function_c382(i32 %v3_6b6b)
  %v1_6b76 = load i32, i32* @ebp, align 4
  %v2_6b76 = add i32 %v1_6b76, -84
  %v3_6b76 = inttoptr i32 %v2_6b76 to i32*
  %v4_6b76 = load i32, i32* %v3_6b76, align 4
  %v5_6b76 = add i32 %v4_6b76, %v1_6b71
  ret i32 %v5_6b76

; uselistorder directives
  uselistorder i32 (i32)* @function_c382, { 3, 2, 1, 0 }
}

define i32 @function_6b84(i32 %arg1) local_unnamed_addr {
dec_label_pc_6b84:
  %v0_6b88 = call i32 @function_f35f()
  ret i32 %v0_6b88
}

define i32 @function_6b8d() local_unnamed_addr {
dec_label_pc_6b8d:
  %v0_6b8d = load i32, i32* @ebp, align 4
  %v1_6b8d = add i32 %v0_6b8d, -76
  %v2_6b8d = inttoptr i32 %v1_6b8d to i32*
  %v3_6b8d = load i32, i32* %v2_6b8d, align 4
  %v1_6b90 = inttoptr i32 %v3_6b8d to i32*
  %v2_6b90 = load i32, i32* %v1_6b90, align 4
  %v2_6b94 = add i32 %v0_6b8d, -36
  %v3_6b94 = inttoptr i32 %v2_6b94 to i32*
  %v4_6b94 = load i32, i32* %v3_6b94, align 4
  %v5_6b94 = add i32 %v4_6b94, %v2_6b90
  %v3_6b97 = load i32, i32* %v2_6b8d, align 4
  %v2_6b9a = add i32 %v3_6b97, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_6b9a = inttoptr i32 %v2_6b9a to i32*
  store i32 %v5_6b94, i32* %v3_6b9a, align 4
  %v0_6b9d = load i32, i32* @ebp, align 4
  %v1_6b9d = add i32 %v0_6b9d, -76
  %v2_6b9d = inttoptr i32 %v1_6b9d to i32*
  %v3_6b9d = load i32, i32* %v2_6b9d, align 4
  store i32 %v3_6b9d, i32* @eax, align 4
  %v1_6ba0 = add i32 %v0_6b9d, -28
  %v2_6ba0 = inttoptr i32 %v1_6ba0 to i32*
  %v3_6ba0 = load i32, i32* %v2_6ba0, align 4
  %v1_6ba3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6ba3 = icmp eq i32 %v1_6ba3, %v3_6ba0
  br i1 %v3_6ba3, label %bb, label %dec_label_pc_6bac

bb:                                               ; preds = %dec_label_pc_6b8d
  %v1_6baa = call i32 @function_6bb1()
  br label %dec_label_pc_6bac

dec_label_pc_6bac:                                ; preds = %bb, %dec_label_pc_6b8d
  %v2_6baa = phi i32 [ %v1_6baa, %bb ], [ %v3_6b9d, %dec_label_pc_6b8d ]
  ret i32 %v2_6baa
}

define i32 @function_6bb1() local_unnamed_addr {
dec_label_pc_6bb1:
  %v0_6bb1 = load i32, i32* @ebp, align 4
  %v3_6bb5 = add i32 %v0_6bb1, -4
  %v1_6bb6 = inttoptr i32 %v3_6bb5 to i32*
  %v2_6bb6 = load i32, i32* %v1_6bb6, align 4
  store i32 %v2_6bb6, i32* @edi, align 4
  %v1_6bb7 = inttoptr i32 %v0_6bb1 to i32*
  %v2_6bb7 = load i32, i32* %v1_6bb7, align 4
  store i32 %v2_6bb7, i32* @ebp, align 4
  %v0_6bb8 = load i32, i32* @eax, align 4
  ret i32 %v0_6bb8
}

define i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6bba:
  %stack_var_-20 = alloca i32, align 4
  %v1_6bda = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_6bda = inttoptr i32 %v1_6bda to i32*
  %v3_6bda = load i32, i32* %v2_6bda, align 4
  %v1_6be0 = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_6be0 = inttoptr i32 %v1_6be0 to i32*
  %v3_6be0 = load i32, i32* %v2_6be0, align 4
  %v12_6be3 = icmp eq i32 %v3_6bda, %v3_6be0
  br i1 %v12_6be3, label %dec_label_pc_6c14, label %dec_label_pc_6be7

dec_label_pc_6be7:                                ; preds = %dec_label_pc_6bba
  %v3_6bea = load i32, i32* %v2_6bda, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_6bfe = call i32 @function_f616(i32 %arg1, i32 %v3_6bea, i32 %arg2)
  %v3_6c06 = load i32, i32* %v2_6bda, align 4
  %v1_6c09 = add i32 %v3_6c06, 1
  store i32 %v1_6c09, i32* %v2_6bda, align 4
  br label %dec_label_pc_6c42

dec_label_pc_6c14:                                ; preds = %dec_label_pc_6bba
  %v2_6c14 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_6c14, i32* @eax, align 4
  %v2_6c21 = call i32 @function_d468(i32 %v2_6c14, i32 %arg1)
  %v3_6c30 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_6c3d = call i32 @function_f66c(i32 %arg1, i32 %v3_6c30, i32 %arg2)
  br label %dec_label_pc_6c42

dec_label_pc_6c42:                                ; preds = %dec_label_pc_6c14, %dec_label_pc_6be7
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6c4e

bb:                                               ; preds = %dec_label_pc_6c42
  %v1_6c4c = call i32 @function_6c53()
  br label %dec_label_pc_6c4e

dec_label_pc_6c4e:                                ; preds = %bb, %dec_label_pc_6c42
  %v2_6c4c = phi i32 [ %v1_6c4c, %bb ], [ 0, %dec_label_pc_6c42 ]
  ret i32 %v2_6c4c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 4, 1, 0, 6, 5 }
}

define i32 @function_6c53() local_unnamed_addr {
dec_label_pc_6c53:
  %v0_6c54 = load i32, i32* @eax, align 4
  ret i32 %v0_6c54
}

define i32 @_ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6c56:
  %ebx.global-to-local = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v2_6c8d = call i32 @function_f9c0(i32 %arg1, i32 %arg4)
  %v0_6c92 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_6c92, 16777216
  %v4_6caa = sdiv i32 %sext, 16777216
  %v5_6caa = call i32 @_ZSt23__copy_move_backward_a2ILb0EP12CDNSSeedDataS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v4_6caa)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6cd4

bb:                                               ; preds = %dec_label_pc_6c56
  %v1_6cd2 = call i32 @function_6cd9()
  br label %dec_label_pc_6cd4

dec_label_pc_6cd4:                                ; preds = %bb, %dec_label_pc_6c56
  %v2_6cd2 = phi i32 [ %v1_6cd2, %bb ], [ 0, %dec_label_pc_6c56 ]
  ret i32 %v2_6cd2

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_6cd9() local_unnamed_addr {
dec_label_pc_6cd9:
  %v0_6cde = load i32, i32* @eax, align 4
  ret i32 %v0_6cde
}

define i32 @_ZNSt6vectorIhSaIhEEC1IPKhEET_S5_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6ce0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_6ce3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_6ce3, 16777216
  %v8_6d34 = sdiv i32 %sext, 16777216
  %v9_6d34 = call i32 @function_fae6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_6d34, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v0_6d39 = call i32 @function_6d52()
  ret i32 %v0_6d39

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_6d3c() local_unnamed_addr {
dec_label_pc_6d3c:
  %eax.global-to-local = alloca i32, align 4
  %v0_6d3c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6d3c
}

define i32 @function_6d52() local_unnamed_addr {
dec_label_pc_6d52:
  %v0_6d52 = load i32, i32* @ebp, align 4
  %v1_6d52 = add i32 %v0_6d52, -12
  %v2_6d52 = inttoptr i32 %v1_6d52 to i32*
  %v3_6d52 = load i32, i32* %v2_6d52, align 4
  %v1_6d55 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6d55 = xor i32 %v1_6d55, %v3_6d52
  ret i32 %v2_6d55
}

define i32 @_ZNSt6vectorIhSaIhEE6insertIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6d6a:
  %v0_6d93 = load i32, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_6d93, 16777216
  %v5_6db2 = sdiv i32 %sext, 16777216
  %v6_6db2 = call i32 @function_fbca(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_6db2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6dc3

bb:                                               ; preds = %dec_label_pc_6d6a
  %v1_6dc1 = call i32 @function_6dc8()
  br label %dec_label_pc_6dc3

dec_label_pc_6dc3:                                ; preds = %bb, %dec_label_pc_6d6a
  %v2_6dc1 = phi i32 [ %v1_6dc1, %bb ], [ 0, %dec_label_pc_6d6a ]
  ret i32 %v2_6dc1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_6dc8() local_unnamed_addr {
dec_label_pc_6dc8:
  %v0_6dc9 = load i32, i32* @eax, align 4
  ret i32 %v0_6dc9
}

define i32 @_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6dca:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v2_6df3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* @edx, align 4
  %v2_6e0f = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_6e0f, i32* @eax, align 4
  %v3_6e15 = call i32 @function_dde8(i32 %v2_6e0f, i32 %v2_6df3, i32 %arg2)
  %v2_6e2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_6e2d, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_6e3a = call i32 @function_d678(i32 %v2_6e2d, i32 %arg2)
  ret i32 %v2_6e2d

; uselistorder directives
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_6e48(i32 %arg1) local_unnamed_addr {
dec_label_pc_6e48:
  %v0_6e48 = load i32, i32* @eax, align 4
  %v2_6e48 = add i32 %v0_6e48, zext (i8 ptrtoint (i8* @global_var_8d.914 to i8) to i32)
  %v16_6e48 = and i32 %v2_6e48, 255
  %v18_6e48 = and i32 %v0_6e48, -256
  %v19_6e48 = or i32 %v16_6e48, %v18_6e48
  %v0_6e4a = load i32, i32* @ebp, align 4
  %v1_6e4a = add i32 %v0_6e4a, 1
  store i32 %v1_6e4a, i32* @ebp, align 4
  %v1_6e4f = call i32 @function_fc91(i32 %v19_6e48)
  %v4_6e54 = trunc i32 %v1_6e4f to i8
  %v5_6e54 = icmp ne i8 %v4_6e54, 0
  %v5_6e64 = icmp eq i1 %v5_6e54, false
  %v0_6e95 = load i32, i32* @ebp, align 4
  br i1 %v5_6e64, label %dec_label_pc_6e95, label %dec_label_pc_6e68

dec_label_pc_6e68:                                ; preds = %dec_label_pc_6e48
  %v1_6e68 = add i32 %v0_6e95, -48
  %v2_6e68 = inttoptr i32 %v1_6e68 to i32*
  %v3_6e68 = load i32, i32* %v2_6e68, align 4
  %v1_6e6b = add i32 %v3_6e68, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_6e6b = inttoptr i32 %v1_6e6b to i32*
  %v3_6e6b = load i32, i32* %v2_6e6b, align 4
  store i32 %v3_6e68, i32* @eax, align 4
  %v1_6e71 = add i32 %v0_6e95, -56
  %v2_6e71 = inttoptr i32 %v1_6e71 to i32*
  %v3_6e71 = load i32, i32* %v2_6e71, align 4
  store i32 %v3_6e71, i32* @ecx, align 4
  %v3_6e7f = call i32 @function_f826(i32 %v3_6e68, i32 %v3_6e6b, i32 %v3_6e71)
  %v0_6e84 = load i32, i32* @ebp, align 4
  %v1_6e84 = add i32 %v0_6e84, -48
  %v2_6e84 = inttoptr i32 %v1_6e84 to i32*
  %v3_6e84 = load i32, i32* %v2_6e84, align 4
  %v1_6e87 = add i32 %v3_6e84, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_6e87 = inttoptr i32 %v1_6e87 to i32*
  %v3_6e87 = load i32, i32* %v2_6e87, align 4
  %v1_6e8a = add i32 %v3_6e87, 1
  %v2_6e90 = add i32 %v3_6e84, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_6e90 = inttoptr i32 %v2_6e90 to i32*
  store i32 %v1_6e8a, i32* %v3_6e90, align 4
  br label %dec_label_pc_6eae

dec_label_pc_6e95:                                ; preds = %dec_label_pc_6e48
  %v1_6e95 = add i32 %v0_6e95, -56
  %v2_6e95 = inttoptr i32 %v1_6e95 to i32*
  %v3_6e95 = load i32, i32* %v2_6e95, align 4
  %v1_6e9c = add i32 %v0_6e95, -52
  %v2_6e9c = inttoptr i32 %v1_6e9c to i32*
  %v3_6e9c = load i32, i32* %v2_6e9c, align 4
  %v1_6ea3 = add i32 %v0_6e95, -48
  %v2_6ea3 = inttoptr i32 %v1_6ea3 to i32*
  %v3_6ea3 = load i32, i32* %v2_6ea3, align 4
  %v3_6ea9 = call i32 @__stack_chk_fail.412(i32 %v3_6ea3, i32 %v3_6e9c, i32 %v3_6e95)
  br label %dec_label_pc_6eae

dec_label_pc_6eae:                                ; preds = %dec_label_pc_6e95, %dec_label_pc_6e68
  %v0_6eae = load i32, i32* @ebp, align 4
  %v1_6eae = add i32 %v0_6eae, -48
  %v2_6eae = inttoptr i32 %v1_6eae to i32*
  %v3_6eae = load i32, i32* %v2_6eae, align 4
  %v1_6eb1 = inttoptr i32 %v3_6eae to i32*
  %v2_6eb1 = load i32, i32* %v1_6eb1, align 4
  %v2_6eb3 = add i32 %v0_6eae, -16
  %v3_6eb3 = inttoptr i32 %v2_6eb3 to i32*
  %v4_6eb3 = load i32, i32* %v3_6eb3, align 4
  %v5_6eb3 = add i32 %v4_6eb3, %v2_6eb1
  %v2_6eb6 = add i32 %v0_6eae, -20
  %v3_6eb6 = inttoptr i32 %v2_6eb6 to i32*
  store i32 %v5_6eb3, i32* %v3_6eb6, align 4
  %v0_6eb9 = load i32, i32* @ebp, align 4
  %v1_6eb9 = add i32 %v0_6eb9, -20
  %v1_6ec0 = add i32 %v0_6eb9, -44
  %v2_6ec0 = inttoptr i32 %v1_6ec0 to i32*
  %v3_6ec0 = load i32, i32* %v2_6ec0, align 4
  %v2_6ec6 = call i32 @function_f1ae(i32 %v3_6ec0, i32 %v1_6eb9)
  %v0_6ecb = load i32, i32* @ebp, align 4
  %v1_6ecb = add i32 %v0_6ecb, -44
  %v2_6ecb = inttoptr i32 %v1_6ecb to i32*
  %v3_6ecb = load i32, i32* %v2_6ecb, align 4
  store i32 %v3_6ecb, i32* @eax, align 4
  %v1_6ece = add i32 %v0_6ecb, -12
  %v2_6ece = inttoptr i32 %v1_6ece to i32*
  %v3_6ece = load i32, i32* %v2_6ece, align 4
  %v1_6ed1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6ed1 = icmp eq i32 %v1_6ed1, %v3_6ece
  br i1 %v3_6ed1, label %bb, label %dec_label_pc_6eda

bb:                                               ; preds = %dec_label_pc_6eae
  %v1_6ed8 = call i32 @function_6edf()
  br label %dec_label_pc_6eda

dec_label_pc_6eda:                                ; preds = %bb, %dec_label_pc_6eae
  %v2_6ed8 = phi i32 [ %v1_6ed8, %bb ], [ %v3_6ecb, %dec_label_pc_6eae ]
  ret i32 %v2_6ed8

; uselistorder directives
  uselistorder i32 %v3_6e68, { 1, 0, 2 }
  uselistorder i32 %v0_6e95, { 0, 3, 4, 1, 2 }
  uselistorder i32 %v0_6e48, { 1, 0 }
}

define i32 @function_6edf() local_unnamed_addr {
dec_label_pc_6edf:
  %v0_6ee0 = load i32, i32* @eax, align 4
  ret i32 %v0_6ee0
}

define i32 @_ZNSt6vectorIhSaIhEE6insertIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6ee4:
  %edx.global-to-local = alloca i32, align 4
  %v0_6f0d = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_6f0d, 16777216
  %v5_6f2c = sdiv i32 %sext, 16777216
  %v6_6f2c = call i32 @function_fe00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_6f2c)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6f3d

bb:                                               ; preds = %dec_label_pc_6ee4
  %v1_6f3b = call i32 @function_6f42()
  br label %dec_label_pc_6f3d

dec_label_pc_6f3d:                                ; preds = %bb, %dec_label_pc_6ee4
  %v2_6f3b = phi i32 [ %v1_6f3b, %bb ], [ 0, %dec_label_pc_6ee4 ]
  ret i32 %v2_6f3b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_6f42() local_unnamed_addr {
dec_label_pc_6f42:
  %v0_6f43 = load i32, i32* @eax, align 4
  ret i32 %v0_6f43
}

define i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_6f44:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_6f5e = load i32, i32* %arg1, align 4
  %v2_6f6a = call i32 @function_f566(i32 %tmp101, i32 %v2_6f5e)
  ret i32 0
}

define i32 @_ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6f82:
  store i32 %arg1, i32* @eax, align 4
  %v1_6fa6 = call i32 @function_ff06(i32 %arg1)
  %v1_6fab = inttoptr i32 %v1_6fa6 to i32*
  %v2_6fab = load i32, i32* %v1_6fab, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_6fb5 = call i32 @function_ff06(i32 %arg2)
  %v1_6fba = inttoptr i32 %v1_6fb5 to i32*
  %v2_6fba = load i32, i32* %v1_6fba, align 4
  %v2_6fbe = sub i32 %v2_6fab, %v2_6fba
  store i32 %v2_6fbe, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6fce

bb:                                               ; preds = %dec_label_pc_6f82
  %v1_6fcc = call i32 @function_6fd3()
  br label %dec_label_pc_6fce

dec_label_pc_6fce:                                ; preds = %bb, %dec_label_pc_6f82
  %v2_6fcc = phi i32 [ %v1_6fcc, %bb ], [ %v2_6fbe, %dec_label_pc_6f82 ]
  ret i32 %v2_6fcc

; uselistorder directives
  uselistorder i32 (i32)* @function_ff06, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_6fd3() local_unnamed_addr {
dec_label_pc_6fd3:
  %v0_6fd8 = load i32, i32* @eax, align 4
  ret i32 %v0_6fd8
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEpLERKi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6fda:
  %v1_6fff = inttoptr i32 %arg2 to i32*
  %v2_6fff = load i32, i32* %v1_6fff, align 4
  ret i32 %v2_6fff
}

define i32 @function_7002(i32 %arg1) local_unnamed_addr {
dec_label_pc_7002:
  %v0_7002 = load i32, i32* @eax, align 4
  ret i32 %v0_7002
}

define i32 @function_7005() local_unnamed_addr {
dec_label_pc_7005:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_7007 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7007 = add i32 %v0_7007, 1435231301
  %v2_7007 = inttoptr i32 %v1_7007 to i8*
  %v3_7007 = load i8, i8* %v2_7007, align 1
  %v4_7007 = load i32, i32* %ecx.global-to-local, align 4
  %v5_7007 = trunc i32 %v4_7007 to i8
  %v6_7007 = load i1, i1* %cf.global-to-local, align 1
  %v7_7007 = zext i1 %v6_7007 to i8
  %v8_7007 = add i8 %v5_7007, %v3_7007
  %v9_7007 = add i8 %v8_7007, %v7_7007
  store i8 %v9_7007, i8* %v2_7007, align 1
  %v0_700e = load i32, i32* %edx.global-to-local, align 4
  %v1_700e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_700e = xor i32 %v1_700e, %v0_700e
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_700e, i32* %edx.global-to-local, align 4
  %v0_701d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_701d
}

define i32 @_ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_701e:
  ret i32 %arg1
}

define i32 @function_7028(i32 %arg1) local_unnamed_addr {
dec_label_pc_7028:
  %eax.global-to-local = alloca i32, align 4
  %v0_7028 = load i32, i32* @eax, align 4
  %v1_7028 = load i32, i32* @ebp, align 4
  %v2_7028 = add i32 %v1_7028, -28
  %v3_7028 = inttoptr i32 %v2_7028 to i32*
  store i32 %v0_7028, i32* %v3_7028, align 4
  %v0_702b = load i32, i32* @ebp, align 4
  %v1_702b = add i32 %v0_702b, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_702b = inttoptr i32 %v1_702b to i32*
  %v3_702b = load i32, i32* %v2_702b, align 4
  store i32 %v3_702b, i32* %eax.global-to-local, align 4
  %v2_702e = add i32 %v0_702b, -32
  %v3_702e = inttoptr i32 %v2_702e to i32*
  store i32 %v3_702b, i32* %v3_702e, align 4
  %v4_702e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_702e
}

define i32 @function_7036(i32 %arg1) local_unnamed_addr {
dec_label_pc_7036:
  %v0_7036 = load i32, i32* @ecx, align 4
  %v1_7036 = add i32 %v0_7036, -1070468027
  %v2_7036 = inttoptr i32 %v1_7036 to i8*
  %v3_7036 = load i8, i8* %v2_7036, align 1
  %v5_7036 = trunc i32 %v0_7036 to i8
  %v6_7036 = add i8 %v3_7036, %v5_7036
  store i8 %v6_7036, i8* %v2_7036, align 1
  %v0_703c = load i32, i32* @ebp, align 4
  %v1_703c = add i32 %v0_703c, -28
  %v2_703c = inttoptr i32 %v1_703c to i32*
  %v3_703c = load i32, i32* %v2_703c, align 4
  store i32 %v3_703c, i32* @eax, align 4
  %v1_7042 = call i32 @function_f69e(i32 %v3_703c)
  %v1_7047 = inttoptr i32 %v1_7042 to i32*
  %v2_7047 = load i32, i32* %v1_7047, align 4
  store i32 %v2_7047, i32* @ebx, align 4
  %v0_704b = load i32, i32* @ebp, align 4
  %v1_704b = add i32 %v0_704b, -32
  %v2_704b = inttoptr i32 %v1_704b to i32*
  %v3_704b = load i32, i32* %v2_704b, align 4
  store i32 %v3_704b, i32* @eax, align 4
  %v1_7051 = call i32 @function_f69e(i32 %v3_704b)
  %v1_7056 = inttoptr i32 %v1_7051 to i32*
  %v2_7056 = load i32, i32* %v1_7056, align 4
  %v0_7058 = load i32, i32* @ebx, align 4
  %v2_705a = sub i32 %v0_7058, %v2_7056
  store i32 %v2_705a, i32* @eax, align 4
  %v0_705e = load i32, i32* @ebp, align 4
  %v1_705e = add i32 %v0_705e, -12
  %v2_705e = inttoptr i32 %v1_705e to i32*
  %v3_705e = load i32, i32* %v2_705e, align 4
  %v1_7061 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_7061 = icmp eq i32 %v1_7061, %v3_705e
  br i1 %v3_7061, label %bb, label %dec_label_pc_706a

bb:                                               ; preds = %dec_label_pc_7036
  %v1_7068 = call i32 @function_706f()
  br label %dec_label_pc_706a

dec_label_pc_706a:                                ; preds = %bb, %dec_label_pc_7036
  %v2_7068 = phi i32 [ %v1_7068, %bb ], [ %v2_705a, %dec_label_pc_7036 ]
  ret i32 %v2_7068

; uselistorder directives
  uselistorder i32 (i32)* @function_f69e, { 1, 0 }
}

define i32 @function_706c(i32 %arg1) local_unnamed_addr {
dec_label_pc_706c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_706f() local_unnamed_addr {
dec_label_pc_706f:
  %v0_7074 = load i32, i32* @eax, align 4
  ret i32 %v0_7074
}

define i32 @_ZN9__gnu_cxxneIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7075:
  ret i32 %arg1
}

define i32 @function_709c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_709c:
  %v2_709c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_709c = load i32, i32* @eax, align 4
  %v4_709c = trunc i32 %v3_709c to i8
  %v5_709c = add i8 %v4_709c, %v2_709c
  %v21_709c = inttoptr i32 %v3_709c to i8*
  store i8 %v5_709c, i8* %v21_709c, align 1
  %v2_709e = load i32, i32* @eax, align 4
  store i32 %v2_709e, i32* @ebx, align 4
  %v0_70a0 = load i32, i32* @ebp, align 4
  %v1_70a0 = add i32 %v0_70a0, -32
  %v2_70a0 = inttoptr i32 %v1_70a0 to i32*
  %v3_70a0 = load i32, i32* %v2_70a0, align 4
  store i32 %v3_70a0, i32* @eax, align 4
  %v1_70a6 = call i32 @function_fff9(i32 %v3_70a0)
  %v1_70ab = inttoptr i32 %v1_70a6 to i32*
  %v2_70ab = load i32, i32* %v1_70ab, align 4
  %v0_70ad = load i32, i32* @ebx, align 4
  %v12_70ad = icmp eq i32 %v0_70ad, %v2_70ab
  %v1_70af = icmp eq i1 %v12_70ad, false
  %v2_70af = zext i1 %v1_70af to i32
  %v4_70af = and i32 %v2_70ab, -256
  %v5_70af = or i32 %v2_70af, %v4_70af
  store i32 %v5_70af, i32* @eax, align 4
  %v0_70b2 = load i32, i32* @ebp, align 4
  %v1_70b2 = add i32 %v0_70b2, -12
  %v2_70b2 = inttoptr i32 %v1_70b2 to i32*
  %v3_70b2 = load i32, i32* %v2_70b2, align 4
  %v1_70b5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_70b5 = icmp eq i32 %v1_70b5, %v3_70b2
  br i1 %v3_70b5, label %bb, label %dec_label_pc_70be

bb:                                               ; preds = %dec_label_pc_709c
  %v1_70bc = call i32 @function_70c3()
  br label %dec_label_pc_70be

dec_label_pc_70be:                                ; preds = %bb, %dec_label_pc_709c
  %v2_70bc = phi i32 [ %v1_70bc, %bb ], [ %v5_70af, %dec_label_pc_709c ]
  ret i32 %v2_70bc

; uselistorder directives
  uselistorder i32 %v2_70ab, { 1, 0 }
}

define i32 @function_70c3() local_unnamed_addr {
dec_label_pc_70c3:
  %v0_70c8 = load i32, i32* @eax, align 4
  ret i32 %v0_70c8
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_70ca:
  %v0_70d6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_70d6
}

define i32 @function_70dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_70dc:
  %v0_70dc = load i32, i32* @eax, align 4
  %v1_70dc = load i32, i32* @ebp, align 4
  %v2_70dc = add i32 %v1_70dc, -12
  %v3_70dc = inttoptr i32 %v2_70dc to i32*
  store i32 %v0_70dc, i32* %v3_70dc, align 4
  %v0_70e1 = load i32, i32* @ebp, align 4
  %v1_70e1 = add i32 %v0_70e1, -28
  %v2_70e1 = inttoptr i32 %v1_70e1 to i32*
  %v3_70e1 = load i32, i32* %v2_70e1, align 4
  store i32 %v3_70e1, i32* @eax, align 4
  %v1_70e7 = call i32 @function_100b2(i32 %v3_70e1)
  %v0_70ec = load i32, i32* @ebp, align 4
  %v1_70ec = add i32 %v0_70ec, -12
  %v2_70ec = inttoptr i32 %v1_70ec to i32*
  %v3_70ec = load i32, i32* %v2_70ec, align 4
  %v1_70ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_70ef = xor i32 %v1_70ef, %v3_70ec
  %v3_70ef = icmp eq i32 %v2_70ef, 0
  store i32 %v2_70ef, i32* @eax, align 4
  br i1 %v3_70ef, label %bb, label %dec_label_pc_70f8

bb:                                               ; preds = %dec_label_pc_70dc
  %v1_70f6 = call i32 @function_70fd()
  br label %dec_label_pc_70f8

dec_label_pc_70f8:                                ; preds = %bb, %dec_label_pc_70dc
  %v2_70f6 = phi i32 [ %v1_70f6, %bb ], [ %v2_70ef, %dec_label_pc_70dc ]
  ret i32 %v2_70f6
}

define i32 @function_70fd() local_unnamed_addr {
dec_label_pc_70fd:
  %v0_70fe = load i32, i32* @eax, align 4
  ret i32 %v0_70fe
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_7100:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_710d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_711e = call i32 @function_101a8(i32 %tmp101)
  %v1_7126 = add i32 %tmp101, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_7126 = inttoptr i32 %v1_7126 to i32*
  %v3_7126 = load i32, i32* %v2_7126, align 4
  store i32 %v3_7126, i32* @ecx, align 4
  %v2_712c = load i32, i32* %arg1, align 4
  %v3_7139 = call i32 @function_101d5(i32 %v2_712c, i32 %v3_7126, i32 %v1_711e)
  %v1_7144 = call i32 @function_1011e(i32 %tmp101)
  ret i32 %v0_710d

; uselistorder directives
  uselistorder i32 %tmp101, { 2, 1, 0 }
}

define i32 @function_7152(i16 %arg1) local_unnamed_addr {
dec_label_pc_7152:
  %v0_7152 = load i32, i32* @esi, align 4
  %v1_7152 = load i32, i32* @ebx, align 4
  %v3_7152 = add i32 %v0_7152, -21
  %v4_7152 = add i32 %v3_7152, %v1_7152
  %v5_7152 = inttoptr i32 %v4_7152 to i8*
  %v6_7152 = load i8, i8* %v5_7152, align 1
  %v7_7152 = load i32, i32* @edx, align 4
  %v8_7152 = lshr i32 %v7_7152, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_7152 = trunc i32 %v8_7152 to i8
  %v10_7152 = add i8 %v9_7152, %v6_7152
  store i8 %v10_7152, i8* %v5_7152, align 1
  %v0_7157 = load i32, i32* @eax, align 4
  store i32 %v0_7157, i32* @ebx, align 4
  %v0_7159 = load i32, i32* @ebp, align 4
  %v1_7159 = add i32 %v0_7159, -28
  %v2_7159 = inttoptr i32 %v1_7159 to i32*
  %v3_7159 = load i32, i32* %v2_7159, align 4
  %v1_715f = call i32 @function_1011e(i32 %v3_7159)
  %v0_7164 = load i32, i32* @ebx, align 4
  ret i32 %v0_7164
}

define i32 @function_7172() local_unnamed_addr {
dec_label_pc_7172:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7172 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7172 = add i32 %v0_7172, 1566258372
  %v2_7172 = inttoptr i32 %v1_7172 to i32*
  %v3_7172 = load i32, i32* %v2_7172, align 4
  %v4_7172 = add i32 %v3_7172, 1
  store i32 %v4_7172, i32* %v2_7172, align 4
  %v0_7178 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7178
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_717a:
  %v0_7186 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_7197 = call i32 @function_102ce(i32 %arg1)
  ret i32 %v0_7186

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_71a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_71a0:
  %v0_71a0 = load i32, i32* @eax, align 4
  %v1_71a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_71a0 = xor i32 %v1_71a0, %v0_71a0
  %v3_71a0 = icmp eq i32 %v2_71a0, 0
  store i32 %v2_71a0, i32* @eax, align 4
  br i1 %v3_71a0, label %bb, label %dec_label_pc_71a8

bb:                                               ; preds = %dec_label_pc_71a0
  %v1_71a6 = call i32 @function_71ad()
  br label %dec_label_pc_71a8

dec_label_pc_71a8:                                ; preds = %bb, %dec_label_pc_71a0
  %v2_71a6 = phi i32 [ %v1_71a6, %bb ], [ %v2_71a0, %dec_label_pc_71a0 ]
  ret i32 %v2_71a6
}

define i32 @function_71ad() local_unnamed_addr {
dec_label_pc_71ad:
  %v0_71ae = load i32, i32* @eax, align 4
  ret i32 %v0_71ae
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_71b0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 4
  %v1_71ce = call i32 @function_103c4(i32 %tmp101)
  %v1_71d6 = add i32 %tmp101, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_71d6 = inttoptr i32 %v1_71d6 to i32*
  %v3_71d6 = load i32, i32* %v2_71d6, align 4
  store i32 %v3_71d6, i32* @ecx, align 4
  %v2_71dc = load i32, i32* %arg1, align 4
  %v3_71e9 = call i32 @function_103f1(i32 %v2_71dc, i32 %v3_71d6, i32 %v1_71ce)
  store i32 %tmp101, i32* @eax, align 4
  %v1_71f4 = call i32 @function_1033a(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7205

bb:                                               ; preds = %dec_label_pc_71b0
  %v1_7203 = call i32 @function_7223()
  store i32 %v1_7203, i32* @eax, align 4
  br label %dec_label_pc_7205

dec_label_pc_7205:                                ; preds = %bb, %dec_label_pc_71b0
  %v0_7205 = call i32 @function_721e()
  ret i32 %v0_7205

; uselistorder directives
  uselistorder i32 %tmp101, { 4, 3, 2, 1, 0 }
}

define i32 @function_7208() local_unnamed_addr {
dec_label_pc_7208:
  %eax.global-to-local = alloca i32, align 4
  %v0_7208 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7208
}

define i32 @function_721e() local_unnamed_addr {
dec_label_pc_721e:
  %v0_721e = load i32, i32* @eax, align 4
  ret i32 %v0_721e
}

define i32 @function_7223() local_unnamed_addr {
dec_label_pc_7223:
  %v0_7228 = load i32, i32* @eax, align 4
  ret i32 %v0_7228
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_722a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_7244 = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v2_7250 = call i32 @function_104b4(i32 %tmp101, i32 %v2_7244)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7268:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_7282 = load i32, i32* %arg1, align 4
  %v2_728e = call i32 @function_10550(i32 %tmp101, i32 %v2_7282)
  ret i32 0
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_72a6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_72c0 = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_72c0 = inttoptr i32 %v1_72c0 to i32*
  %v3_72c0 = load i32, i32* %v2_72c0, align 4
  %v2_72c8 = load i32, i32* %arg1, align 4
  %v2_72cc = sub i32 %v3_72c0, %v2_72c8
  %v2_72d0 = sdiv i32 %v2_72cc, 4
  %v3_72d3 = mul i32 %v2_72d0, -991146299
  store i32 %v3_72d3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_72e5

bb:                                               ; preds = %dec_label_pc_72a6
  %v2_72e3 = call i32 @function_72ea(i32 %tmp100)
  br label %dec_label_pc_72e5

dec_label_pc_72e5:                                ; preds = %bb, %dec_label_pc_72a6
  %v3_72e3 = phi i32 [ %v2_72e3, %bb ], [ %v3_72d3, %dec_label_pc_72a6 ]
  ret i32 %v3_72e3
}

define i32 @function_72ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_72ea:
  %v0_72eb = load i32, i32* @eax, align 4
  ret i32 %v0_72eb
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_72ec:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v0_72ef = load i32, i32* %esi.global-to-local, align 4
  %v0_72f0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_7311 = call i32 @function_10772(i32 %arg2)
  store i32 %v1_7311, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_731e = call i32 @function_e71e(i32 %arg2)
  store i32 %v1_731e, i32* @eax, align 4
  %v0_7326 = load i32, i32* @ebx, align 4
  %v3_7331 = call i32 @function_107a0(i32 %tmp108, i32 %v1_731e, i32 %v0_7326)
  store i32 %tmp108, i32* @eax, align 4
  %v1_733c = call i32 @function_10500(i32 %tmp108)
  store i32 %v1_733c, i32* %ebx.global-to-local, align 4
  %v2_7346 = load i32, i32* %arg1, align 4
  store i32 %v2_7346, i32* %esi.global-to-local, align 4
  %v2_7348 = ptrtoint i32* %stack_var_-20 to i32
  %v2_7355 = call i32 @function_106d2(i32 %v2_7348, i32 %arg2)
  %v2_735d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_735d, i32* @eax, align 4
  %v2_736a = call i32 @function_10722(i32 %v2_735d, i32 %arg2)
  %v0_7372 = load i32, i32* %ebx.global-to-local, align 4
  %v0_7376 = load i32, i32* %esi.global-to-local, align 4
  %v3_737a = load i32, i32* %stack_var_-20, align 4
  %v3_7381 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_7381, i32* @eax, align 4
  %v4_7387 = call i32 @function_10845(i32 %v3_7381, i32 %v3_737a, i32 %v0_7376, i32 %v0_7372)
  %v2_7391 = add i32 %tmp108, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_7391 = inttoptr i32 %v2_7391 to i32*
  store i32 %v4_7387, i32* %v3_7391, align 4
  store i32 %v0_72f0, i32* %ebx.global-to-local, align 4
  store i32 %v0_72ef, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp108, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNSaI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_73c6:
  store i32 %arg1, i32* @eax, align 4
  %v1_73e3 = call i32 @function_10974(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_73f4

bb:                                               ; preds = %dec_label_pc_73c6
  %v1_73f2 = call i32 @function_73f9()
  br label %dec_label_pc_73f4

dec_label_pc_73f4:                                ; preds = %bb, %dec_label_pc_73c6
  %v2_73f2 = phi i32 [ %v1_73f2, %bb ], [ 0, %dec_label_pc_73c6 ]
  ret i32 %v2_73f2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_73f9() local_unnamed_addr {
dec_label_pc_73f9:
  %v0_73fa = load i32, i32* @eax, align 4
  ret i32 %v0_73fa
}

define i32 @_ZNSaI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_73fc:
  store i32 %arg1, i32* @eax, align 4
  %v1_7419 = call i32 @function_109d4(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_7432:
  ret i32 0
}

define i32 @function_744a(i32 %arg1) local_unnamed_addr {
dec_label_pc_744a:
  %v0_744a = load i32, i32* @ebp, align 4
  %v1_744a = add i32 %v0_744a, 1
  store i32 %v1_744a, i32* @ebp, align 4
  %v0_744d = load i32, i32* @eax, align 4
  %v1_744d = add i32 %v0_744d, 1
  %v2_744e = add i32 %v0_744d, 138
  %v16_744e = and i32 %v2_744e, 255
  %v18_744e = and i32 %v1_744d, -256
  %v19_744e = or i32 %v16_744e, %v18_744e
  ret i32 %v19_744e
}

define i32 @function_7475() local_unnamed_addr {
dec_label_pc_7475:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7475 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7475 = add i32 %v0_7475, -1
  store i32 %v1_7475, i32* %ecx.global-to-local, align 4
  %v0_7477 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7477
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7478:
  store i32 %arg1, i32* @eax, align 4
  %v1_7495 = call i32 @function_10b94(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_74a6

bb:                                               ; preds = %dec_label_pc_7478
  %v1_74a4 = call i32 @function_74ab()
  br label %dec_label_pc_74a6

dec_label_pc_74a6:                                ; preds = %bb, %dec_label_pc_7478
  %v2_74a4 = phi i32 [ %v1_74a4, %bb ], [ 0, %dec_label_pc_7478 ]
  ret i32 %v2_74a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_74ab() local_unnamed_addr {
dec_label_pc_74ab:
  %v0_74ac = load i32, i32* @eax, align 4
  ret i32 %v0_74ac
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_74ae:
  store i32 %arg1, i32* @eax, align 4
  %v1_74cc = call i32 @function_10c84(i32 %arg1)
  ret i32 %v1_74cc
}

define i32 @function_74d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_74d8:
  %v0_74db = load i32, i32* @ecx, align 4
  %v1_74db = trunc i32 %v0_74db to i8
  %v3_74db = add i32 %v0_74db, -1995955132
  %v4_74db = inttoptr i32 %v3_74db to i8*
  %v5_74db = load i8, i8* %v4_74db, align 1
  %v6_74db = load i1, i1* @cf, align 1
  %v7_74db = zext i1 %v6_74db to i8
  %v8_74db = add i8 %v1_74db, %v5_74db
  %v9_74db = add i8 %v8_74db, %v7_74db
  %v30_74db = zext i8 %v9_74db to i32
  %v32_74db = and i32 %v0_74db, -256
  %v33_74db = or i32 %v30_74db, %v32_74db
  store i32 %v33_74db, i32* @ecx, align 4
  %v0_74e2 = load i32, i32* @eax, align 4
  %v11_74e2 = and i32 %v0_74e2, or (i32 zext (i8 ptrtoint (i16** @global_var_4.882 to i8) to i32), i32 -256)
  store i32 %v11_74e2, i32* @eax, align 4
  %v0_74e4 = load i32, i32* @edx, align 4
  %v1_74e7 = call i32 @function_10cb1(i32 %v0_74e4)
  %v0_74ec = load i32, i32* @ebp, align 4
  %v1_74ec = add i32 %v0_74ec, -28
  %v2_74ec = inttoptr i32 %v1_74ec to i32*
  %v3_74ec = load i32, i32* %v2_74ec, align 4
  store i32 %v3_74ec, i32* @eax, align 4
  %v1_74f2 = call i32 @function_10c00(i32 %v3_74ec)
  %v0_74f7 = load i32, i32* @ebp, align 4
  %v1_74f7 = add i32 %v0_74f7, -12
  %v2_74f7 = inttoptr i32 %v1_74f7 to i32*
  %v3_74f7 = load i32, i32* %v2_74f7, align 4
  %v1_74fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_74fa = xor i32 %v1_74fa, %v3_74f7
  %v3_74fa = icmp eq i32 %v2_74fa, 0
  store i32 %v2_74fa, i32* @eax, align 4
  br i1 %v3_74fa, label %bb, label %dec_label_pc_751c

bb:                                               ; preds = %dec_label_pc_74d8
  %v1_7501 = call i32 @function_7521()
  br label %dec_label_pc_751c

dec_label_pc_751c:                                ; preds = %dec_label_pc_74d8, %bb
  %v0_7503 = phi i32 [ %v2_74fa, %dec_label_pc_74d8 ], [ %v1_7501, %bb ]
  ret i32 %v0_7503

; uselistorder directives
  uselistorder label %dec_label_pc_751c, { 1, 0 }
}

define i32 @function_7505() local_unnamed_addr {
dec_label_pc_7505:
  %v0_7507 = load i32, i32* @ebp, align 4
  %v1_7507 = add i32 %v0_7507, -28
  %v2_7507 = inttoptr i32 %v1_7507 to i32*
  %v3_7507 = load i32, i32* %v2_7507, align 4
  store i32 %v3_7507, i32* @eax, align 4
  %v1_750d = call i32 @function_10c00(i32 %v3_7507)
  %v0_7512 = load i32, i32* @ebx, align 4
  ret i32 %v0_7512

; uselistorder directives
  uselistorder i32 (i32)* @function_10c00, { 1, 0 }
}

define i32 @function_7521() local_unnamed_addr {
dec_label_pc_7521:
  %v0_7526 = load i32, i32* @eax, align 4
  ret i32 %v0_7526
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7528:
  store i32 %arg1, i32* @eax, align 4
  %v1_7545 = call i32 @function_10daa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7556

bb:                                               ; preds = %dec_label_pc_7528
  %v1_7554 = call i32 @function_755b()
  br label %dec_label_pc_7556

dec_label_pc_7556:                                ; preds = %bb, %dec_label_pc_7528
  %v2_7554 = phi i32 [ %v1_7554, %bb ], [ 0, %dec_label_pc_7528 ]
  ret i32 %v2_7554

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_755b() local_unnamed_addr {
dec_label_pc_755b:
  %v0_755c = load i32, i32* @eax, align 4
  ret i32 %v0_755c
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_755e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_757c = call i32 @function_10e9a(i32 %tmp101)
  %v1_7584 = add i32 %tmp101, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_7584 = inttoptr i32 %v1_7584 to i32*
  %v3_7584 = load i32, i32* %v2_7584, align 4
  %v2_758a = load i32, i32* %arg1, align 4
  %v3_7597 = call i32 @function_10ec7(i32 %v2_758a, i32 %v3_7584, i32 %v1_757c)
  store i32 %tmp101, i32* @eax, align 4
  %v1_75a2 = call i32 @function_10e16(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_75b3

bb:                                               ; preds = %dec_label_pc_755e
  %v1_75b1 = call i32 @function_75d1()
  store i32 %v1_75b1, i32* @eax, align 4
  br label %dec_label_pc_75b3

dec_label_pc_75b3:                                ; preds = %bb, %dec_label_pc_755e
  %v0_75b3 = call i32 @function_75cc()
  ret i32 %v0_75b3

; uselistorder directives
  uselistorder i32 %tmp101, { 3, 2, 1, 0 }
}

define i32 @function_75b6() local_unnamed_addr {
dec_label_pc_75b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_75b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_75b6
}

define i32 @function_75ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_75ba:
  %v0_75ba = load i32, i32* @eax, align 4
  %v1_75bd = call i32 @function_10e16(i32 %v0_75ba)
  %v0_75c2 = load i32, i32* @ebx, align 4
  ret i32 %v0_75c2
}

define i32 @function_75cc() local_unnamed_addr {
dec_label_pc_75cc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_75d1() local_unnamed_addr {
dec_label_pc_75d1:
  %v0_75d6 = load i32, i32* @eax, align 4
  ret i32 %v0_75d6
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_75d8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_75f2 = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v2_75fe = call i32 @function_10f8a(i32 %tmp101, i32 %v2_75f2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7616:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_7622 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7630 = load i32, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  %v2_763c = call i32 @function_11026(i32 %tmp100, i32 %v2_7630)
  ret i32 %v0_7622

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_7648(i32 %arg1) local_unnamed_addr {
dec_label_pc_7648:
  %v2_7648 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_7648 = load i32, i32* @eax, align 4
  %v4_7648 = trunc i32 %v3_7648 to i8
  %v5_7648 = add i8 %v4_7648, %v2_7648
  %v21_7648 = inttoptr i32 %v3_7648 to i8*
  store i8 %v5_7648, i8* %v21_7648, align 1
  %v0_764a = load i32, i32* @ebp, align 4
  %v1_764a = load i32, i32* @eax, align 4
  %v3_764a = add i32 %v0_764a, -24
  %v4_764a = add i32 %v3_764a, %v1_764a
  %v5_764a = inttoptr i32 %v4_764a to i8*
  %v6_764a = load i8, i8* %v5_764a, align 1
  %v7_764a = load i32, i32* @edx, align 4
  %v8_764a = lshr i32 %v7_764a, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_764a = trunc i32 %v8_764a to i8
  %v10_764a = add i8 %v9_764a, %v6_764a
  store i8 %v10_764a, i8* %v5_764a, align 1
  %v0_764e = load i32, i32* @eax, align 4
  ret i32 %v0_764e
}

define i32 @function_7651() local_unnamed_addr {
dec_label_pc_7651:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7651 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7651 = add i32 %v0_7651, -1
  store i32 %v1_7651, i32* %ecx.global-to-local, align 4
  %v0_7653 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7653
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7654:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_7654 = load i32, i32* %ebp.global-to-local, align 4
  %v1_766e = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_766e = inttoptr i32 %v1_766e to i32*
  %v3_766e = load i32, i32* %v2_766e, align 4
  %v2_7676 = load i32, i32* %arg1, align 4
  %v2_767a = sub i32 %v3_766e, %v2_7676
  %v2_767e = sdiv i32 %v2_767a, 32
  store i32 %v0_7654, i32* %ebp.global-to-local, align 4
  ret i32 %v2_767e
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7694:
  %v1_76b1 = call i32 @function_11138(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_76ca:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_76e8 = call i32 @function_11228(i32 %tmp102)
  store i32 %v1_76e8, i32* @eax, align 4
  %v1_76f0 = add i32 %tmp102, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_76f0 = inttoptr i32 %v1_76f0 to i32*
  %v3_76f0 = load i32, i32* %v2_76f0, align 4
  %v2_76f6 = load i32, i32* %arg1, align 4
  %v3_7703 = call i32 @function_11255(i32 %v2_76f6, i32 %v3_76f0, i32 %v1_76e8)
  store i32 %tmp102, i32* @eax, align 4
  %v1_770e = call i32 @function_111a4(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7738

bb:                                               ; preds = %dec_label_pc_76ca
  %v1_771d = call i32 @function_773d()
  br label %dec_label_pc_7738

dec_label_pc_7738:                                ; preds = %dec_label_pc_76ca, %bb
  %v0_771f = phi i32 [ 0, %dec_label_pc_76ca ], [ %v1_771d, %bb ]
  ret i32 %v0_771f

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_7738, { 1, 0 }
}

define i32 @function_7721() local_unnamed_addr {
dec_label_pc_7721:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7721 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_7721, i32* %ebx.global-to-local, align 4
  %v0_7723 = load i32, i32* @ebp, align 4
  %v1_7723 = add i32 %v0_7723, -28
  %v2_7723 = inttoptr i32 %v1_7723 to i32*
  %v3_7723 = load i32, i32* %v2_7723, align 4
  store i32 %v3_7723, i32* @eax, align 4
  %v1_7729 = call i32 @function_111a4(i32 %v3_7723)
  %v0_772e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_772e, i32* %eax.global-to-local, align 4
  ret i32 %v0_772e

; uselistorder directives
  uselistorder i32 (i32)* @function_111a4, { 1, 0 }
}

define i32 @function_773d() local_unnamed_addr {
dec_label_pc_773d:
  %v0_7742 = load i32, i32* @eax, align 4
  ret i32 %v0_7742
}

define i32 @_ZNSt6vectorI8CAddressSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7744:
  %v1_7761 = call i32 @function_1134e(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt6vectorI8CAddressSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_777a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_7798 = call i32 @function_11444(i32 %tmp102)
  store i32 %v1_7798, i32* @eax, align 4
  %v1_77a0 = add i32 %tmp102, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_77a0 = inttoptr i32 %v1_77a0 to i32*
  %v3_77a0 = load i32, i32* %v2_77a0, align 4
  %v2_77a6 = load i32, i32* %arg1, align 4
  %v3_77b3 = call i32 @function_11471(i32 %v2_77a6, i32 %v3_77a0, i32 %v1_7798)
  store i32 %tmp102, i32* @eax, align 4
  %v1_77be = call i32 @function_113ba(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_77e8

bb:                                               ; preds = %dec_label_pc_777a
  %v1_77cd = call i32 @function_77ed()
  br label %dec_label_pc_77e8

dec_label_pc_77e8:                                ; preds = %dec_label_pc_777a, %bb
  %v0_77cf = phi i32 [ 0, %dec_label_pc_777a ], [ %v1_77cd, %bb ]
  ret i32 %v0_77cf

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_77e8, { 1, 0 }
}

define i32 @function_77d1() local_unnamed_addr {
dec_label_pc_77d1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_77d1 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_77d1, i32* %ebx.global-to-local, align 4
  %v0_77d3 = load i32, i32* @ebp, align 4
  %v1_77d3 = add i32 %v0_77d3, -28
  %v2_77d3 = inttoptr i32 %v1_77d3 to i32*
  %v3_77d3 = load i32, i32* %v2_77d3, align 4
  store i32 %v3_77d3, i32* @eax, align 4
  %v1_77d9 = call i32 @function_113ba(i32 %v3_77d3)
  %v0_77de = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_77de, i32* %eax.global-to-local, align 4
  ret i32 %v0_77de

; uselistorder directives
  uselistorder i32 (i32)* @function_113ba, { 1, 0 }
}

define i32 @function_77ed() local_unnamed_addr {
dec_label_pc_77ed:
  %v0_77f2 = load i32, i32* @eax, align 4
  ret i32 %v0_77f2
}

define i32 @_ZNK9base_uintILj256EEcoEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_77f4:
  %eax.global-to-local = alloca i32, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_781a

dec_label_pc_781a:                                ; preds = %dec_label_pc_77f4, %dec_label_pc_781a
  %storemerge109 = phi i32 [ 0, %dec_label_pc_77f4 ], [ %v4_7830, %dec_label_pc_781a ]
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_7820 = mul i32 %storemerge109, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_7820 = add i32 %v2_7820, %arg2
  %v4_7820 = inttoptr i32 %v3_7820 to i32*
  %v5_7820 = load i32, i32* %v4_7820, align 4
  %v1_7825 = sub i32 -1, %v5_7820
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_782d = add i32 %v2_7820, %arg1
  %v5_782d = inttoptr i32 %v4_782d to i32*
  store i32 %v1_7825, i32* %v5_782d, align 4
  %v4_7830 = add nuw nsw i32 %storemerge109, 1
  %v6_7838.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp108 = sub nsw i32 5, %storemerge109
  %v11_7834 = and i32 %tmp108, %v4_7830
  %v12_7834 = icmp slt i32 %v11_7834, 0
  %v13_7834 = icmp eq i32 %v4_7830, 7
  %v14_7834 = icmp slt i32 %v4_7830, 7
  %v3_7838 = icmp ne i1 %v14_7834, %v12_7834
  %v4_7838 = or i1 %v13_7834, %v3_7838
  %v5_7838 = zext i1 %v4_7838 to i32
  %v7_7838 = and i32 %v6_7838.pre, -256
  %v8_7838 = or i32 %v5_7838, %v7_7838
  store i32 %v8_7838, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_7830, 8
  br i1 %exitcond, label %dec_label_pc_783f, label %dec_label_pc_781a

dec_label_pc_783f:                                ; preds = %dec_label_pc_781a
  store i32 %arg1, i32* %eax.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %storemerge109, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_781a, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE6resizeEjS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_7858:
  %stack_var_-20 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  store i1 true, i1* @zf, align 1
  store i32 %tmp114, i32* @eax, align 4
  %v1_7882 = call i32 @function_eafe(i32 %tmp114)
  %v11_7887 = icmp ult i32 %v1_7882, %arg2
  %v5_788d = icmp eq i1 %v11_7887, false
  store i1 %v5_788d, i1* @zf, align 1
  store i32 %tmp114, i32* @eax, align 4
  %v1_78dd = call i32 @function_eafe(i32 %tmp114)
  br i1 %v5_788d, label %dec_label_pc_78d7, label %dec_label_pc_7891

dec_label_pc_7891:                                ; preds = %dec_label_pc_7858
  %v2_78a1 = sub i32 %arg2, %v1_78dd
  %v7_78a1 = icmp ugt i32 %v1_78dd, %arg2
  store i1 %v7_78a1, i1* @cf, align 1
  %v2_78a3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_78a3, i32* @eax, align 4
  %v2_78b0 = call i32 @function_11598(i32 %v2_78a3, i32 %tmp114)
  %v3_78c3 = load i32, i32* %stack_var_-20, align 4
  store i32 %tmp114, i32* @eax, align 4
  %v4_78d0 = call i32 @function_115e2(i32 %tmp114, i32 %v3_78c3, i32 %v2_78a1, i32 %arg3)
  br label %dec_label_pc_7908

dec_label_pc_78d7:                                ; preds = %dec_label_pc_7858
  %tmp119 = icmp ule i32 %v1_78dd, %arg2
  %v3_78e5 = icmp ne i1 %tmp119, true
  %v5_78e8 = icmp eq i1 %v3_78e5, false
  br i1 %v5_78e8, label %dec_label_pc_7908, label %dec_label_pc_78ec

dec_label_pc_78ec:                                ; preds = %dec_label_pc_78d7
  %v2_78ef = load i32, i32* %arg1, align 4
  %v3_78f4 = mul i32 %arg2, 52
  %v2_78f7 = add i32 %v2_78ef, %v3_78f4
  store i32 %tmp114, i32* @eax, align 4
  %v2_7903 = call i32 @function_10ae2(i32 %tmp114, i32 %v2_78f7)
  br label %dec_label_pc_7908

dec_label_pc_7908:                                ; preds = %dec_label_pc_78ec, %dec_label_pc_78d7, %dec_label_pc_7891
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7914

bb:                                               ; preds = %dec_label_pc_7908
  %v1_7912 = call i32 @function_7919()
  br label %dec_label_pc_7914

dec_label_pc_7914:                                ; preds = %bb, %dec_label_pc_7908
  %v2_7912 = phi i32 [ %v1_7912, %bb ], [ 0, %dec_label_pc_7908 ]
  ret i32 %v2_7912

; uselistorder directives
  uselistorder i32 %tmp114, { 4, 3, 1, 0, 2, 6, 5, 8, 7 }
  uselistorder i32 (i32)* @function_eafe, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_7919() local_unnamed_addr {
dec_label_pc_7919:
  %v0_791d = load i32, i32* @eax, align 4
  ret i32 %v0_791d
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6resizeEjS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_791e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v0_7921 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp109, i32* @eax, align 4
  %v1_7948 = call i32 @function_ed50(i32 %tmp109)
  %v10_794d = icmp ult i32 %v1_7948, %arg2
  %v5_7953 = icmp eq i1 %v10_794d, false
  store i32 %tmp109, i32* @eax, align 4
  %v1_79a3 = call i32 @function_ed50(i32 %tmp109)
  br i1 %v5_7953, label %dec_label_pc_799d, label %dec_label_pc_7957

dec_label_pc_7957:                                ; preds = %dec_label_pc_791e
  %v2_7967 = sub i32 %arg2, %v1_79a3
  store i32 %v2_7967, i32* %ebx.global-to-local, align 4
  %v2_7969 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_7969, i32* @eax, align 4
  %v2_7976 = call i32 @function_10f20(i32 %v2_7969, i32 %tmp109)
  %v3_7989 = load i32, i32* %stack_var_-20, align 4
  %v4_7996 = call i32 @function_11704(i32 %tmp109, i32 %v3_7989, i32 %v2_7967, i32 %arg3)
  br label %dec_label_pc_79d5

dec_label_pc_799d:                                ; preds = %dec_label_pc_791e
  %tmp114 = icmp ule i32 %v1_79a3, %arg2
  %v3_79ab = icmp ne i1 %tmp114, true
  %v5_79ae = icmp eq i1 %v3_79ab, false
  br i1 %v5_79ae, label %dec_label_pc_79d5, label %dec_label_pc_79b2

dec_label_pc_79b2:                                ; preds = %dec_label_pc_799d
  br label %dec_label_pc_79d5

dec_label_pc_79d5:                                ; preds = %dec_label_pc_79b2, %dec_label_pc_799d, %dec_label_pc_7957
  store i32 %v0_7921, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp109, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 (i32)* @function_ed50, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_79ec:
  %v2_7a0c = load i32, i32* %arg1, align 4
  %v3_7a11 = mul i32 %arg2, 52
  %v2_7a14 = add i32 %v2_7a0c, %v3_7a11
  store i32 %v2_7a14, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7a22

bb:                                               ; preds = %dec_label_pc_79ec
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v4_7a20 = call i32 @function_7a27(i32 %arg2, i32 %tmp106)
  br label %dec_label_pc_7a22

dec_label_pc_7a22:                                ; preds = %bb, %dec_label_pc_79ec
  %v5_7a20 = phi i32 [ %v4_7a20, %bb ], [ %v2_7a14, %dec_label_pc_79ec ]
  ret i32 %v5_7a20

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_7a27(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7a27:
  %v0_7a28 = load i32, i32* @eax, align 4
  ret i32 %v0_7a28
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7a2a:
  %v2_7a4a = load i32, i32* %arg1, align 4
  %v2_7a56 = mul i32 %arg2, 20
  %v2_7a59 = add i32 %v2_7a4a, %v2_7a56
  store i32 %v2_7a59, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7a67

bb:                                               ; preds = %dec_label_pc_7a2a
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_7a65 = call i32 @function_7a6c(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_7a67

dec_label_pc_7a67:                                ; preds = %bb, %dec_label_pc_7a2a
  %v4_7a65 = phi i32 [ %v3_7a65, %bb ], [ %v2_7a59, %dec_label_pc_7a2a ]
  ret i32 %v4_7a65

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_7a6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7a6c:
  %v0_7a6d = load i32, i32* @eax, align 4
  ret i32 %v0_7a6d
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE9push_backERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7a6e:
  %stack_var_-20 = alloca i32, align 4
  %v1_7a8e = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_7a8e = inttoptr i32 %v1_7a8e to i32*
  %v3_7a8e = load i32, i32* %v2_7a8e, align 4
  %v1_7a94 = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_7a94 = inttoptr i32 %v1_7a94 to i32*
  %v3_7a94 = load i32, i32* %v2_7a94, align 4
  %v12_7a97 = icmp eq i32 %v3_7a8e, %v3_7a94
  br i1 %v12_7a97, label %dec_label_pc_7ac8, label %dec_label_pc_7a9b

dec_label_pc_7a9b:                                ; preds = %dec_label_pc_7a6e
  %v3_7a9e = load i32, i32* %v2_7a8e, align 4
  %v3_7ab2 = call i32 @function_11948(i32 %arg1, i32 %v3_7a9e, i32 %arg2)
  %v3_7aba = load i32, i32* %v2_7a8e, align 4
  %v1_7abd = add i32 %v3_7aba, ptrtoint (i32* @mainParams to i32)
  store i32 %v1_7abd, i32* %v2_7a8e, align 4
  br label %dec_label_pc_7af6

dec_label_pc_7ac8:                                ; preds = %dec_label_pc_7a6e
  %v2_7ac8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_7ad5 = call i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6CTxOutS4_EET0_T_S6_S5_(i32 %v2_7ac8, i32 %arg1)
  %v3_7ae4 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_7af1 = call i32 @function_119ca(i32 %arg1, i32 %v3_7ae4, i32 %arg2)
  br label %dec_label_pc_7af6

dec_label_pc_7af6:                                ; preds = %dec_label_pc_7ac8, %dec_label_pc_7a9b
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7b02

bb:                                               ; preds = %dec_label_pc_7af6
  %v1_7b00 = call i32 @function_7b07()
  br label %dec_label_pc_7b02

dec_label_pc_7b02:                                ; preds = %bb, %dec_label_pc_7af6
  %v2_7b00 = phi i32 [ %v1_7b00, %bb ], [ 0, %dec_label_pc_7af6 ]
  ret i32 %v2_7b00

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 5, 4 }
}

define i32 @function_7b07() local_unnamed_addr {
dec_label_pc_7b07:
  %v0_7b08 = load i32, i32* @eax, align 4
  ret i32 %v0_7b08
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EE9push_backERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7b0a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_7b2a = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_7b2a = inttoptr i32 %v1_7b2a to i32*
  %v3_7b2a = load i32, i32* %v2_7b2a, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_7b30 = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_7b30 = inttoptr i32 %v1_7b30 to i32*
  %v3_7b30 = load i32, i32* %v2_7b30, align 4
  store i32 %v3_7b30, i32* %eax.global-to-local, align 4
  %v12_7b33 = icmp eq i32 %v3_7b2a, %v3_7b30
  br i1 %v12_7b33, label %dec_label_pc_7b64, label %dec_label_pc_7b37

dec_label_pc_7b37:                                ; preds = %dec_label_pc_7b0a
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_7b3a = load i32, i32* %v2_7b2a, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_7b4e = call i32 @function_11ea0(i32 %arg1, i32 %v3_7b3a, i32 %arg2)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_7b56 = load i32, i32* %v2_7b2a, align 4
  %v1_7b59 = add i32 %v3_7b56, ptrtoint (i32* @global_var_8.883 to i32)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %v1_7b59, i32* %v2_7b2a, align 4
  %v0_7b62 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7b62

dec_label_pc_7b64:                                ; preds = %dec_label_pc_7b0a
  %v2_7b64 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_7b64, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v2_7b71 = call i32 @function_1227e(i32 %v2_7b64, i32 %arg1)
  %v3_7b80 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_7b80, i32* %eax.global-to-local, align 4
  ret i32 %v3_7b80

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 0, 1, 4, 3, 2, 10, 9, 8, 7 }
}

define i32 @function_7b84(i32 %arg1) local_unnamed_addr {
dec_label_pc_7b84:
  store i1 false, i1* @cf, align 1
  %v0_7b87 = load i32, i32* @ebp, align 4
  %v1_7b87 = add i32 %v0_7b87, -28
  %v2_7b87 = inttoptr i32 %v1_7b87 to i32*
  %v3_7b87 = load i32, i32* %v2_7b87, align 4
  store i32 %v3_7b87, i32* @eax, align 4
  %v1_7b8d = call i32 @function_11f22(i32 %v3_7b87)
  %v0_7b92 = load i32, i32* @ebp, align 4
  %v1_7b92 = add i32 %v0_7b92, -12
  %v2_7b92 = inttoptr i32 %v1_7b92 to i32*
  %v3_7b92 = load i32, i32* %v2_7b92, align 4
  %v1_7b95 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7b95 = xor i32 %v1_7b95, %v3_7b92
  %v3_7b95 = icmp eq i32 %v2_7b95, 0
  store i32 %v2_7b95, i32* @eax, align 4
  br i1 %v3_7b95, label %bb, label %dec_label_pc_7b9e

bb:                                               ; preds = %dec_label_pc_7b84
  %v1_7b9c = call i32 @function_7ba3()
  br label %dec_label_pc_7b9e

dec_label_pc_7b9e:                                ; preds = %bb, %dec_label_pc_7b84
  %v2_7b9c = phi i32 [ %v1_7b9c, %bb ], [ %v2_7b95, %dec_label_pc_7b84 ]
  ret i32 %v2_7b9c
}

define i32 @function_7ba3() local_unnamed_addr {
dec_label_pc_7ba3:
  %v0_7ba4 = load i32, i32* @eax, align 4
  ret i32 %v0_7ba4
}

define i32 @_ZNSt6vectorI8CAddressSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7ba6:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_7bc0 = load i32, i32* %arg1, align 4
  %v2_7bcc = call i32 @unknown_12364(i32 %tmp101, i32 %v2_7bc0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7bdd

bb:                                               ; preds = %dec_label_pc_7ba6
  %v1_7bdb = call i32 @function_7be2()
  br label %dec_label_pc_7bdd

dec_label_pc_7bdd:                                ; preds = %bb, %dec_label_pc_7ba6
  %v2_7bdb = phi i32 [ %v1_7bdb, %bb ], [ 0, %dec_label_pc_7ba6 ]
  ret i32 %v2_7bdb
}

define i32 @function_7be2() local_unnamed_addr {
dec_label_pc_7be2:
  %v0_7be3 = load i32, i32* @eax, align 4
  ret i32 %v0_7be3
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7be4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_7bfe = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v2_7c0a = call i32 @function_12400(i32 %tmp101, i32 %v2_7bfe)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7c1b

bb:                                               ; preds = %dec_label_pc_7be4
  %v1_7c19 = call i32 @function_7c20()
  br label %dec_label_pc_7c1b

dec_label_pc_7c1b:                                ; preds = %bb, %dec_label_pc_7be4
  %v2_7c19 = phi i32 [ %v1_7c19, %bb ], [ 0, %dec_label_pc_7be4 ]
  ret i32 %v2_7c19

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_7c20() local_unnamed_addr {
dec_label_pc_7c20:
  %v0_7c21 = load i32, i32* @eax, align 4
  ret i32 %v0_7c21
}

define i32 @_ZN9base_uintILj256EE6SetHexEPKc(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_7c22:
  %eax.global-to-local = alloca i32, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_7c48

dec_label_pc_7c48:                                ; preds = %dec_label_pc_7c22, %dec_label_pc_7c48
  %storemerge111 = phi i32 [ 0, %dec_label_pc_7c22 ], [ %v4_7c55, %dec_label_pc_7c48 ]
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_7c4e = mul i32 %storemerge111, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_7c4e = add i32 %v2_7c4e, %arg1
  %v4_7c4e = inttoptr i32 %v3_7c4e to i32*
  store i32 0, i32* %v4_7c4e, align 4
  %v4_7c55 = add nuw nsw i32 %storemerge111, 1
  %v6_7c5d.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp110 = sub nsw i32 5, %storemerge111
  %v11_7c59 = and i32 %tmp110, %v4_7c55
  %v12_7c59 = icmp slt i32 %v11_7c59, 0
  %v13_7c59 = icmp eq i32 %v4_7c55, 7
  %v14_7c59 = icmp slt i32 %v4_7c55, 7
  %v3_7c5d = icmp ne i1 %v14_7c59, %v12_7c59
  %v4_7c5d = or i1 %v13_7c59, %v3_7c5d
  %v5_7c5d = zext i1 %v4_7c5d to i32
  %v7_7c5d = and i32 %v6_7c5d.pre, -256
  %v8_7c5d = or i32 %v5_7c5d, %v7_7c5d
  store i32 %v8_7c5d, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_7c55, 8
  br i1 %exitcond, label %dec_label_pc_7c6a, label %dec_label_pc_7c48

dec_label_pc_7c6a:                                ; preds = %dec_label_pc_7c48
  %v4_7c2e = ptrtoint i8* %arg2 to i32
  store i32 %v4_7c2e, i32* %eax.global-to-local, align 4
  %v2_7c6d = load i8, i8* %arg2, align 1
  %v3_7c6d = zext i8 %v2_7c6d to i32
  store i32 %v3_7c6d, i32* %eax.global-to-local, align 4
  ret i32 %v3_7c6d

; uselistorder directives
  uselistorder i32 %storemerge111, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 8, { 1, 2, 7, 0, 3, 4, 5, 6 }
  uselistorder i32 7, { 3, 2, 5, 4, 1, 0, 7, 6, 9, 8, 11, 10 }
  uselistorder label %dec_label_pc_7c48, { 1, 0 }
}

define i32 @function_7ca1() local_unnamed_addr {
dec_label_pc_7ca1:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7ca1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_7ca1 = add i32 %v0_7ca1, 74807544
  %v2_7ca1 = inttoptr i32 %v1_7ca1 to i32*
  %v3_7ca1 = load i32, i32* %v2_7ca1, align 4
  %v4_7ca1 = add i32 %v3_7ca1, 1
  store i32 %v4_7ca1, i32* %v2_7ca1, align 4
  %v0_7ca7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7ca7 = add i32 %v0_7ca7, -48
  %v2_7ca7 = inttoptr i32 %v1_7ca7 to i32*
  %v3_7ca7 = load i32, i32* %v2_7ca7, align 4
  %v4_7ca7 = add i32 %v3_7ca7, 2
  store i32 %v4_7ca7, i32* %v2_7ca7, align 4
  %v0_7cab = load i32, i32* %ebp.global-to-local, align 4
  %v1_7cab = add i32 %v0_7cab, -48
  %v2_7cab = inttoptr i32 %v1_7cab to i32*
  %v3_7cab = load i32, i32* %v2_7cab, align 4
  store i32 %v3_7cab, i32* %eax.global-to-local, align 4
  %v2_7cae = add i32 %v0_7cab, -20
  %v3_7cae = inttoptr i32 %v2_7cae to i32*
  store i32 %v3_7cab, i32* %v3_7cae, align 4
  br label %dec_label_pc_7cb7

dec_label_pc_7cb3:                                ; preds = %dec_label_pc_7ce1
  %v4_7cb3 = add i32 %v3_7cb3, 1
  store i32 %v4_7cb3, i32* %v2_7cb7, align 4
  br label %dec_label_pc_7cb7

dec_label_pc_7cb7:                                ; preds = %dec_label_pc_7cb3, %dec_label_pc_7ca1
  %v0_7cb7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7cb7 = add i32 %v0_7cb7, -48
  %v2_7cb7 = inttoptr i32 %v1_7cb7 to i32*
  %v3_7cb7 = load i32, i32* %v2_7cb7, align 4
  store i32 %v3_7cb7, i32* %eax.global-to-local, align 4
  %v1_7cba = inttoptr i32 %v3_7cb7 to i8*
  %v2_7cba = load i8, i8* %v1_7cba, align 1
  %v3_7cba = zext i8 %v2_7cba to i32
  store i32 %v3_7cba, i32* %eax.global-to-local, align 4
  %v1_7cc0 = add i32 %v3_7cba, ptrtoint (i8** @global_var_12a88.915 to i32)
  %v2_7cc0 = inttoptr i32 %v1_7cc0 to i8*
  %v3_7cc0 = load i8, i8* %v2_7cc0, align 1
  %v4_7cc0 = zext i8 %v3_7cc0 to i32
  store i32 %v4_7cc0, i32* %eax.global-to-local, align 4
  %v5_7cc7 = icmp eq i8 %v3_7cc0, 0
  %v1_7cc9 = icmp eq i1 %v5_7cc7, false
  br i1 %v1_7cc9, label %dec_label_pc_7ce1, label %dec_label_pc_7ccb

dec_label_pc_7ccb:                                ; preds = %dec_label_pc_7cb7
  %v3_7ccb = load i32, i32* %v2_7cb7, align 4
  store i32 %v3_7ccb, i32* %eax.global-to-local, align 4
  %v1_7cce = inttoptr i32 %v3_7ccb to i8*
  %v2_7cce = load i8, i8* %v1_7cce, align 1
  %v3_7cce = zext i8 %v2_7cce to i32
  store i32 %v3_7cce, i32* %eax.global-to-local, align 4
  %v10_7cd1 = icmp eq i8 %v2_7cce, 48
  %. = zext i1 %v10_7cd1 to i32
  br label %dec_label_pc_7ce1

dec_label_pc_7ce1:                                ; preds = %dec_label_pc_7ccb, %dec_label_pc_7cb7
  %storemerge = phi i32 [ 1, %dec_label_pc_7cb7 ], [ %., %dec_label_pc_7ccb ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_7ce1 = icmp eq i32 %storemerge, 0
  %v1_7ce3 = icmp eq i1 %v5_7ce1, false
  %v3_7cb3 = load i32, i32* %v2_7cb7, align 4
  br i1 %v1_7ce3, label %dec_label_pc_7cb3, label %dec_label_pc_7ce5

dec_label_pc_7ce5:                                ; preds = %dec_label_pc_7ce1
  %v4_7ce5 = add i32 %v3_7cb3, -1
  store i32 %v4_7ce5, i32* %v2_7cb7, align 4
  %v0_7ce9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7ce9 = add i32 %v0_7ce9, -44
  %v2_7ce9 = inttoptr i32 %v1_7ce9 to i32*
  %v3_7ce9 = load i32, i32* %v2_7ce9, align 4
  store i32 %v3_7ce9, i32* %eax.global-to-local, align 4
  %v2_7cec = add i32 %v0_7ce9, -24
  %v3_7cec = inttoptr i32 %v2_7cec to i32*
  store i32 %v3_7ce9, i32* %v3_7cec, align 4
  %v0_7cef = load i32, i32* %ebp.global-to-local, align 4
  %v1_7cef = add i32 %v0_7cef, -24
  %v2_7cef = inttoptr i32 %v1_7cef to i32*
  %v3_7cef = load i32, i32* %v2_7cef, align 4
  %v1_7cf2 = add i32 %v3_7cef, ptrtoint (i32* @mainParams to i32)
  store i32 %v1_7cf2, i32* %eax.global-to-local, align 4
  %v2_7cf5 = add i32 %v0_7cef, -16
  %v3_7cf5 = inttoptr i32 %v2_7cf5 to i32*
  store i32 %v1_7cf2, i32* %v3_7cf5, align 4
  %v0_7cf8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7cf8

; uselistorder directives
  uselistorder i32* %v2_7cb7, { 0, 2, 3, 4, 1 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 4, 2, 3 }
}

define i32 @function_7cfa() local_unnamed_addr {
dec_label_pc_7cfa:
  %eax.global-to-local = alloca i32, align 4
  %v0_7cfa = load i32, i32* @ebp, align 4
  %v1_7cfa = add i32 %v0_7cfa, -48
  %v2_7cfa = inttoptr i32 %v1_7cfa to i32*
  %v3_7cfa = load i32, i32* %v2_7cfa, align 4
  store i32 %v3_7cfa, i32* %eax.global-to-local, align 4
  %v1_7cfd = inttoptr i32 %v3_7cfa to i8*
  %v2_7cfd = load i8, i8* %v1_7cfd, align 1
  %v3_7cfd = zext i8 %v2_7cfd to i32
  store i32 %v3_7cfd, i32* %eax.global-to-local, align 4
  %v1_7d03 = add i32 %v3_7cfd, ptrtoint (i8** @global_var_12a88.915 to i32)
  %v2_7d03 = inttoptr i32 %v1_7d03 to i8*
  %v3_7d03 = load i8, i8* %v2_7d03, align 1
  %v1_7d0a = add i32 %v0_7cfa, -24
  %v2_7d0a = inttoptr i32 %v1_7d0a to i32*
  %v3_7d0a = load i32, i32* %v2_7d0a, align 4
  store i32 %v3_7d0a, i32* %eax.global-to-local, align 4
  %v3_7d0d = inttoptr i32 %v3_7d0a to i8*
  store i8 %v3_7d03, i8* %v3_7d0d, align 1
  %v4_7d0d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_7d0d
}

define i32 @function_7d12(i32 %arg1) local_unnamed_addr {
dec_label_pc_7d12:
  %v0_7d12 = load i32, i32* @ebx, align 4
  %v1_7d12 = add i32 %v0_7d12, 1161547845
  %v2_7d12 = inttoptr i32 %v1_7d12 to i32*
  %v3_7d12 = load i32, i32* %v2_7d12, align 4
  %v4_7d12 = load i32, i32* @ecx, align 4
  %v5_7d12 = add i32 %v4_7d12, %v3_7d12
  %v10_7d12 = icmp ult i32 %v5_7d12, %v3_7d12
  store i32 %v5_7d12, i32* %v2_7d12, align 4
  br i1 %v10_7d12, label %dec_label_pc_7d4a, label %dec_label_pc_7d1b

dec_label_pc_7d1b:                                ; preds = %dec_label_pc_7d12
  %v0_7d1b = load i32, i32* @ebp, align 4
  %v1_7d1b = add i32 %v0_7d1b, -24
  %v2_7d1b = inttoptr i32 %v1_7d1b to i32*
  %v3_7d1b = load i32, i32* %v2_7d1b, align 4
  %v1_7d1e = inttoptr i32 %v3_7d1b to i8*
  %v2_7d1e = load i8, i8* %v1_7d1e, align 1
  %v1_7d23 = add i32 %v0_7d1b, -48
  %v2_7d23 = inttoptr i32 %v1_7d23 to i32*
  %v3_7d23 = load i32, i32* %v2_7d23, align 4
  %v1_7d26 = inttoptr i32 %v3_7d23 to i8*
  %v2_7d26 = load i8, i8* %v1_7d26, align 1
  %v3_7d26 = zext i8 %v2_7d26 to i32
  %v1_7d2c = add i32 %v3_7d26, ptrtoint (i8** @global_var_12a88.915 to i32)
  %v2_7d2c = inttoptr i32 %v1_7d2c to i8*
  %v3_7d2c = load i8, i8* %v2_7d2c, align 1
  %v2_7d36 = mul i8 %v3_7d2c, 16
  %v2_7d39 = or i8 %v2_7d36, %v2_7d1e
  %v3_7d3d = load i32, i32* %v2_7d1b, align 4
  %v3_7d40 = inttoptr i32 %v3_7d3d to i8*
  store i8 %v2_7d39, i8* %v3_7d40, align 1
  %v0_7d42 = load i32, i32* @ebp, align 4
  %v1_7d42 = add i32 %v0_7d42, -48
  %v2_7d42 = inttoptr i32 %v1_7d42 to i32*
  %v3_7d42 = load i32, i32* %v2_7d42, align 4
  %v4_7d42 = add i32 %v3_7d42, -1
  store i32 %v4_7d42, i32* %v2_7d42, align 4
  %v0_7d46 = load i32, i32* @ebp, align 4
  %v1_7d46 = add i32 %v0_7d46, -24
  %v2_7d46 = inttoptr i32 %v1_7d46 to i32*
  %v3_7d46 = load i32, i32* %v2_7d46, align 4
  %v4_7d46 = add i32 %v3_7d46, 1
  store i32 %v4_7d46, i32* %v2_7d46, align 4
  br label %dec_label_pc_7d4a

dec_label_pc_7d4a:                                ; preds = %dec_label_pc_7d1b, %dec_label_pc_7d12
  %v0_7d4a = load i32, i32* @ebp, align 4
  %v1_7d4a = add i32 %v0_7d4a, -48
  %v2_7d4a = inttoptr i32 %v1_7d4a to i32*
  %v3_7d4a = load i32, i32* %v2_7d4a, align 4
  %v2_7d4d = add i32 %v0_7d4a, -20
  %v3_7d4d = inttoptr i32 %v2_7d4d to i32*
  %v4_7d4d = load i32, i32* %v3_7d4d, align 4
  %v10_7d4d = icmp ult i32 %v3_7d4a, %v4_7d4d
  br i1 %v10_7d4d, label %dec_label_pc_7d61, label %dec_label_pc_7d52

dec_label_pc_7d52:                                ; preds = %dec_label_pc_7d4a
  %v1_7d52 = add i32 %v0_7d4a, -24
  %v2_7d52 = inttoptr i32 %v1_7d52 to i32*
  %v3_7d52 = load i32, i32* %v2_7d52, align 4
  %v2_7d55 = add i32 %v0_7d4a, -16
  %v3_7d55 = inttoptr i32 %v2_7d55 to i32*
  %v4_7d55 = load i32, i32* %v3_7d55, align 4
  %v10_7d55 = icmp ult i32 %v3_7d52, %v4_7d55
  %v1_7d58 = icmp eq i1 %v10_7d55, false
  br i1 %v1_7d58, label %dec_label_pc_7d61, label %dec_label_pc_7d66

dec_label_pc_7d61:                                ; preds = %dec_label_pc_7d52, %dec_label_pc_7d4a
  br label %dec_label_pc_7d66

dec_label_pc_7d66:                                ; preds = %dec_label_pc_7d52, %dec_label_pc_7d61
  %storemerge = phi i1 [ false, %dec_label_pc_7d61 ], [ true, %dec_label_pc_7d52 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_7d6a

bb:                                               ; preds = %dec_label_pc_7d66
  %v2_7d68 = call i32 @function_7cfa()
  %v0_7d6a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_7d6a

dec_label_pc_7d6a:                                ; preds = %bb, %dec_label_pc_7d66
  %v0_7d6a = phi i32 [ %v0_7d6a.pre, %bb ], [ %v0_7d4a, %dec_label_pc_7d66 ]
  %v1_7d6a = add i32 %v0_7d6a, -12
  %v2_7d6a = inttoptr i32 %v1_7d6a to i32*
  %v3_7d6a = load i32, i32* %v2_7d6a, align 4
  %v1_7d6d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7d6d = xor i32 %v1_7d6d, %v3_7d6a
  %v3_7d6d = icmp eq i32 %v2_7d6d, 0
  store i32 %v2_7d6d, i32* @eax, align 4
  br i1 %v3_7d6d, label %bb4, label %dec_label_pc_7d76

bb4:                                              ; preds = %dec_label_pc_7d6a
  %v1_7d74 = call i32 @function_7d7b()
  br label %dec_label_pc_7d76

dec_label_pc_7d76:                                ; preds = %bb4, %dec_label_pc_7d6a
  %v2_7d74 = phi i32 [ %v1_7d74, %bb4 ], [ %v2_7d6d, %dec_label_pc_7d6a ]
  ret i32 %v2_7d74

; uselistorder directives
  uselistorder i32 %v0_7d4a, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_7d12, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_12a88.915 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_7d66, { 1, 0 }
}

define i32 @function_7d7b() local_unnamed_addr {
dec_label_pc_7d7b:
  %v0_7d7c = load i32, i32* @eax, align 4
  ret i32 %v0_7d7c
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7d7e:
  %v2_7d98 = load i32, i32* %arg1, align 4
  %v1_7d9a = icmp eq i32 %v2_7d98, 0
  br i1 %v1_7d9a, label %dec_label_pc_7dc4.thread, label %dec_label_pc_7d9e

dec_label_pc_7d9e:                                ; preds = %dec_label_pc_7d7e
  %v2_7dad = load i32, i32* %arg1, align 4
  %v4_7db4 = trunc i32 %v2_7dad to i8
  %v5_7db4 = icmp eq i8 %v4_7db4, 0
  br i1 %v5_7db4, label %dec_label_pc_7dc4.thread, label %dec_label_pc_7dc8

dec_label_pc_7dc4.thread:                         ; preds = %dec_label_pc_7d7e, %dec_label_pc_7d9e
  br label %dec_label_pc_7dd1

dec_label_pc_7dc8:                                ; preds = %dec_label_pc_7d9e
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_7dd1

dec_label_pc_7dd1:                                ; preds = %dec_label_pc_7dc4.thread, %dec_label_pc_7dc8
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7ddd

bb:                                               ; preds = %dec_label_pc_7dd1
  %v1_7ddb = call i32 @function_7de2()
  br label %dec_label_pc_7ddd

dec_label_pc_7ddd:                                ; preds = %bb, %dec_label_pc_7dd1
  %v2_7ddb = phi i32 [ %v1_7ddb, %bb ], [ 0, %dec_label_pc_7dd1 ]
  ret i32 %v2_7ddb

; uselistorder directives
  uselistorder label %dec_label_pc_7dd1, { 1, 0 }
  uselistorder label %dec_label_pc_7dc4.thread, { 1, 0 }
}

define i32 @function_7de2() local_unnamed_addr {
dec_label_pc_7de2:
  %v0_7de3 = load i32, i32* @eax, align 4
  ret i32 %v0_7de3
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7de4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_7de4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_7dfe = load i32, i32* %arg1, align 4
  %v1_7e00 = icmp eq i32 %v2_7dfe, 0
  br i1 %v1_7e00, label %dec_label_pc_7e1a, label %dec_label_pc_7e04

dec_label_pc_7e04:                                ; preds = %dec_label_pc_7de4
  br label %dec_label_pc_7e1a

dec_label_pc_7e1a:                                ; preds = %dec_label_pc_7e04, %dec_label_pc_7de4
  store i32 %v0_7de4, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_7e2e:
  %v0_7e3a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_125b8.888 to i32), i32* %arg1, align 4
  ret i32 %v0_7e3a
}

define i32 @function_7e52(i32 %arg1) local_unnamed_addr {
dec_label_pc_7e52:
  %v0_7e52 = load i32, i32* @eax, align 4
  %v1_7e52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7e52 = xor i32 %v1_7e52, %v0_7e52
  ret i32 %v2_7e52
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7e62:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v2_7e8d = call i32 @function_df6a(i32 %tmp102, i32 %arg2)
  %v1_7e95 = add i32 %tmp102, ptrtoint (i32* @global_var_18.885 to i32)
  store i32 %v1_7e95, i32* @eax, align 4
  %v1_7e9b = call i32 @function_fc90(i32 %v1_7e95)
  store i32 ptrtoint (%vtable_12510_type* @global_var_12510.916 to i32), i32* %arg1, align 4
  %v1_7eac = add i32 %tmp102, 20
  %v2_7eac = inttoptr i32 %v1_7eac to i32*
  store i32 ptrtoint (i32* @global_var_12528.917 to i32), i32* %v2_7eac, align 4
  %v2_7eb6 = inttoptr i32 %v1_7e95 to i32*
  store i32 ptrtoint (i32* @global_var_1253c.918 to i32), i32* %v2_7eb6, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v2_7eca = call i32 @function_91e8(i32 %tmp102, i32 %arg2)
  %v0_7ecf = call i32 @function_7ef6()
  ret i32 %v0_7ecf

; uselistorder directives
  uselistorder i32 %tmp102, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_7ed2() local_unnamed_addr {
dec_label_pc_7ed2:
  %eax.global-to-local = alloca i32, align 4
  %v0_7ed2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7ed2
}

define i32 @function_7ef6() local_unnamed_addr {
dec_label_pc_7ef6:
  %v0_7ef6 = load i32, i32* @ebp, align 4
  %v1_7ef6 = add i32 %v0_7ef6, -12
  %v2_7ef6 = inttoptr i32 %v1_7ef6 to i32*
  %v3_7ef6 = load i32, i32* %v2_7ef6, align 4
  %v1_7ef9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7ef9 = xor i32 %v1_7ef9, %v3_7ef6
  ret i32 %v2_7ef9
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7f0d:
  %eax.global-to-local = alloca i32, align 4
  %v0_7f12 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7f12
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7f17:
  %eax.global-to-local = alloca i32, align 4
  %v0_7f1c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7f1c
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_7f22:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12510_type* @global_var_12510.916 to i32), i32* %arg1, align 4
  %v1_7f45 = add i32 %tmp99, 20
  %v2_7f45 = inttoptr i32 %v1_7f45 to i32*
  store i32 ptrtoint (i32* @global_var_12528.917 to i32), i32* %v2_7f45, align 4
  %v1_7f4f = add i32 %tmp99, ptrtoint (i32* @global_var_18.885 to i32)
  %v2_7f4f = inttoptr i32 %v1_7f4f to i32*
  store i32 ptrtoint (i32* @global_var_1253c.918 to i32), i32* %v2_7f4f, align 4
  %v1_7f5f = call i32 @function_921e(i32 %v1_7f4f)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_12510_type* @global_var_12510.916 to i32), { 1, 0 }
}

define i32 @function_7f6a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_7f6a:
  %v0_7f6a = call i32 @function_df28()
  %v0_7f86 = load i32, i32* @ebp, align 4
  %v1_7f86 = add i32 %v0_7f86, -12
  %v2_7f86 = inttoptr i32 %v1_7f86 to i32*
  %v3_7f86 = load i32, i32* %v2_7f86, align 4
  %v1_7f89 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7f89 = xor i32 %v1_7f89, %v3_7f86
  ret i32 %v2_7f89
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7f9a:
  %v4_7f9a = sub i32 %arg1, ptrtoint (i32* @global_var_18.885 to i32)
  %v1_7f9f = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_7f9a)
  ret i32 %v1_7f9f
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7fa1:
  %v4_7fa1 = add i32 %arg1, -20
  %v1_7fa6 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_7fa1)
  ret i32 %v1_7fa6

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_7fa8:
  ret i32 %arg1
}

define i32 @function_7fb2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7fb2:
  %v0_7fb2 = load i32, i32* @ebp, align 4
  %v1_7fb2 = add i32 %v0_7fb2, 1
  store i32 %v1_7fb2, i32* @ebp, align 4
  %v0_7fb5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7fba = add i32 %v0_7fb2, -11
  %v3_7fba = inttoptr i32 %v2_7fba to i32*
  store i32 %v0_7fb5, i32* %v3_7fba, align 4
  %v0_7fbf = load i32, i32* @ebp, align 4
  %v1_7fbf = add i32 %v0_7fbf, -28
  %v2_7fbf = inttoptr i32 %v1_7fbf to i32*
  %v3_7fbf = load i32, i32* %v2_7fbf, align 4
  %v1_7fc5 = call i32 @function_febc(i32 %v3_7fbf)
  %v0_7fca = load i32, i32* @ebp, align 4
  %v1_7fca = add i32 %v0_7fca, -28
  %v2_7fca = inttoptr i32 %v1_7fca to i32*
  %v3_7fca = load i32, i32* %v2_7fca, align 4
  ret i32 %v3_7fca
}

declare i32 @__stack_chk_fail.153(i32) local_unnamed_addr

define i32 @function_7fe5() local_unnamed_addr {
dec_label_pc_7fe5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7fe5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7fe5 = add i32 %v0_7fe5, -1
  store i32 %v1_7fe5, i32* %ecx.global-to-local, align 4
  %v0_7fe7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7fe7
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7fe8:
  store i32 %arg1, i32* @eax, align 4
  %v2_8012 = call i32 @function_12861(i32 %arg1, i32 %arg2)
  store i32 %v2_8012, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8023

bb:                                               ; preds = %dec_label_pc_7fe8
  %v1_8021 = call i32 @function_8028()
  br label %dec_label_pc_8023

dec_label_pc_8023:                                ; preds = %bb, %dec_label_pc_7fe8
  %v2_8021 = phi i32 [ %v1_8021, %bb ], [ %v2_8012, %dec_label_pc_7fe8 ]
  ret i32 %v2_8021

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8028() local_unnamed_addr {
dec_label_pc_8028:
  %v0_8029 = load i32, i32* @eax, align 4
  ret i32 %v0_8029
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_802a:
  %v2_8054 = call i32 @function_128e1(i32 %arg1, i32 %arg2)
  ret i32 %v2_8054
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_806c:
  %v2_8096 = call i32 @function_12961(i32 %arg1, i32 %arg2)
  store i32 %v2_8096, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_80a7

bb:                                               ; preds = %dec_label_pc_806c
  %v1_80a5 = call i32 @function_80ac()
  br label %dec_label_pc_80a7

dec_label_pc_80a7:                                ; preds = %bb, %dec_label_pc_806c
  %v2_80a5 = phi i32 [ %v1_80a5, %bb ], [ %v2_8096, %dec_label_pc_806c ]
  ret i32 %v2_80a5
}

declare i32 @__stack_chk_fail.155(i32, i32) local_unnamed_addr

define i32 @function_80ac() local_unnamed_addr {
dec_label_pc_80ac:
  %v0_80ad = load i32, i32* @eax, align 4
  ret i32 %v0_80ad
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80ae:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v10_80cb = icmp eq i32 %arg2, 0
  br i1 %v10_80cb, label %dec_label_pc_80de, label %dec_label_pc_80d1

dec_label_pc_80d1:                                ; preds = %dec_label_pc_80ae
  %v1_80d4 = add i32 %arg2, ptrtoint (i32* @global_var_18.885 to i32)
  br label %dec_label_pc_80de

dec_label_pc_80de:                                ; preds = %dec_label_pc_80ae, %dec_label_pc_80d1
  %storemerge = phi i32 [ %v1_80d4, %dec_label_pc_80d1 ], [ 0, %dec_label_pc_80ae ]
  store i32 %storemerge, i32* %arg1, align 4
  %v1_80e6 = add i32 %tmp104, ptrtoint (i16** @global_var_4.882 to i32)
  store i32 %arg2, i32* @eax, align 4
  %v3_80f3 = call i32 @function_129e2(i32 %v1_80e6, i32 %arg2)
  %v4_810c = call i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implD1Ev(i32 %tmp104, i32 %arg2, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_811d

bb:                                               ; preds = %dec_label_pc_80de
  %v1_811b = call i32 @function_8122()
  br label %dec_label_pc_811d

dec_label_pc_811d:                                ; preds = %bb, %dec_label_pc_80de
  %v3_811b = phi i32 [ %v1_811b, %bb ], [ 0, %dec_label_pc_80de ]
  ret i32 %v3_811b

; uselistorder directives
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_80de, { 1, 0 }
}

define i32 @function_8122() local_unnamed_addr {
dec_label_pc_8122:
  %v0_8123 = load i32, i32* @eax, align 4
  ret i32 %v0_8123
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8124:
  %v1_8144 = inttoptr i32 %arg2 to i32*
  %v2_8144 = load i32, i32* %v1_8144, align 4
  store i32 %v2_8144, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8157

bb:                                               ; preds = %dec_label_pc_8124
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_8155 = call i32 @function_815c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_8157

dec_label_pc_8157:                                ; preds = %bb, %dec_label_pc_8124
  %v4_8155 = phi i32 [ %v3_8155, %bb ], [ 0, %dec_label_pc_8124 ]
  ret i32 %v4_8155

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_815a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_815a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_815c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_815c:
  %v0_815d = load i32, i32* @eax, align 4
  ret i32 %v0_815d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_815e:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8188:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_81ab

bb:                                               ; preds = %dec_label_pc_8188
  %v2_81a9 = call i32 @function_81b0(i32 %arg1)
  br label %dec_label_pc_81ab

dec_label_pc_81ab:                                ; preds = %bb, %dec_label_pc_8188
  %v3_81a9 = phi i32 [ %v2_81a9, %bb ], [ 0, %dec_label_pc_8188 ]
  ret i32 %v3_81a9
}

define i32 @function_81b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_81b0:
  %v0_81b1 = load i32, i32* @eax, align 4
  ret i32 %v0_81b1
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_81b2:
  store i32 %arg1, i32* @eax, align 4
  %v1_81cf = call i32 @function_e628(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_81e0

bb:                                               ; preds = %dec_label_pc_81b2
  %v1_81de = call i32 @function_81e5()
  br label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %bb, %dec_label_pc_81b2
  %v2_81de = phi i32 [ %v1_81de, %bb ], [ 0, %dec_label_pc_81b2 ]
  ret i32 %v2_81de

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_81e5() local_unnamed_addr {
dec_label_pc_81e5:
  %v0_81e6 = load i32, i32* @eax, align 4
  ret i32 %v0_81e6
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_81e8:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_8219 = call i32 @unknown_12ba8(i32 %tmp104, i32 %arg3)
  %v2_822b = call i32 @unknown_12c08(i32 %tmp104, i32 %arg2)
  store i32 %v2_822b, i32* %arg1, align 4
  %v2_823f = add i32 %tmp104, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_823f = inttoptr i32 %v2_823f to i32*
  store i32 %v2_822b, i32* %v3_823f, align 4
  %v2_8245 = load i32, i32* %arg1, align 4
  %v5_8249 = add i32 %v2_8245, %arg2
  %v2_824f = add i32 %tmp104, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_824f = inttoptr i32 %v2_824f to i32*
  store i32 %v5_8249, i32* %v3_824f, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_825e

bb:                                               ; preds = %dec_label_pc_81e8
  %v1_825c = call i32 @function_827c()
  store i32 %v1_825c, i32* @eax, align 4
  br label %dec_label_pc_825e

dec_label_pc_825e:                                ; preds = %bb, %dec_label_pc_81e8
  %v0_825e = call i32 @function_8277()
  ret i32 %v0_825e

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_8261() local_unnamed_addr {
dec_label_pc_8261:
  %eax.global-to-local = alloca i32, align 4
  %v0_8261 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8261
}

define i32 @function_8277() local_unnamed_addr {
dec_label_pc_8277:
  %v0_8277 = load i32, i32* @eax, align 4
  ret i32 %v0_8277
}

define i32 @function_827c() local_unnamed_addr {
dec_label_pc_827c:
  %v0_8281 = load i32, i32* @eax, align 4
  ret i32 %v0_8281
}

define i32 @_ZNSt12_Vector_baseIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_8282:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_829d = add i32 %tmp101, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_829d = inttoptr i32 %v1_829d to i32*
  %v3_829d = load i32, i32* %v2_829d, align 4
  %v2_82a5 = load i32, i32* %arg1, align 4
  %v2_82a9 = sub i32 %v3_829d, %v2_82a5
  %v3_82cd = call i32 @__stack_chk_fail.454(i32 %tmp101, i32 %v2_82a5, i32 %v2_82a9)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_82e1() local_unnamed_addr {
dec_label_pc_82e1:
  %eax.global-to-local = alloca i32, align 4
  %v0_82e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_82e1
}

define i32 @function_82f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_82f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_82f0 = load i32, i32* %eax.global-to-local, align 4
  %v2_82f0 = add i32 %v0_82f0, 36
  %v16_82f0 = urem i32 %v2_82f0, 256
  %v18_82f0 = and i32 %v0_82f0, -256
  %v19_82f0 = or i32 %v16_82f0, %v18_82f0
  store i32 %v19_82f0, i32* %eax.global-to-local, align 4
  ret i32 %v19_82f0

; uselistorder directives
  uselistorder i32 %v0_82f0, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_fill_initializeEjRKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8302:
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %tmp107, i32* @eax, align 4
  %v1_832b = call i32 @function_10670(i32 %tmp107)
  %v2_8333 = load i32, i32* %arg1, align 4
  %v4_834a = call i32 @unknown_12d79(i32 %v2_8333, i32 %arg2, i32 %arg3, i32 %v1_832b)
  %v1_8352 = add i32 %tmp107, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_8352 = inttoptr i32 %v1_8352 to i32*
  %v3_8352 = load i32, i32* %v2_8352, align 4
  %v2_8358 = add i32 %tmp107, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_8358 = inttoptr i32 %v2_8358 to i32*
  store i32 %v3_8352, i32* %v3_8358, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_836e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8394

bb:                                               ; preds = %dec_label_pc_836e
  %v2_8392 = call i32 @function_8399(i32 %arg1)
  br label %dec_label_pc_8394

dec_label_pc_8394:                                ; preds = %bb, %dec_label_pc_836e
  %v3_8392 = phi i32 [ %v2_8392, %bb ], [ %arg1, %dec_label_pc_836e ]
  ret i32 %v3_8392
}

define i32 @function_8399(i32 %arg1) local_unnamed_addr {
dec_label_pc_8399:
  %v0_839a = load i32, i32* @eax, align 4
  ret i32 %v0_839a
}

define i32 @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_839b:
  %v2_83cb = call i32 @unknown_12e67(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_83dc

bb:                                               ; preds = %dec_label_pc_839b
  %v1_83da = call i32 @function_83e1()
  br label %dec_label_pc_83dc

dec_label_pc_83dc:                                ; preds = %bb, %dec_label_pc_839b
  %v2_83da = phi i32 [ %v1_83da, %bb ], [ 0, %dec_label_pc_839b ]
  ret i32 %v2_83da
}

define i32 @function_83e1() local_unnamed_addr {
dec_label_pc_83e1:
  %v0_83e2 = load i32, i32* @eax, align 4
  ret i32 %v0_83e2
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_83e4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_83e4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8404 = inttoptr i32 %arg2 to i32*
  %v2_8404 = load i32, i32* %v1_8404, align 4
  store i32 %v2_8404, i32* %arg1, align 4
  store i32 %v0_83e4, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_841e:
  %v2_8438 = load i32, i32* %arg1, align 4
  store i32 %v2_8438, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8446

bb:                                               ; preds = %dec_label_pc_841e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_8444 = call i32 @function_844b(i32 %tmp100)
  br label %dec_label_pc_8446

dec_label_pc_8446:                                ; preds = %bb, %dec_label_pc_841e
  %v3_8444 = phi i32 [ %v2_8444, %bb ], [ %v2_8438, %dec_label_pc_841e ]
  ret i32 %v3_8444

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_844b(i32 %arg1) local_unnamed_addr {
dec_label_pc_844b:
  %v0_844c = load i32, i32* @eax, align 4
  ret i32 %v0_844c
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_844e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_8468 = load i32, i32* %arg1, align 4
  %v1_846a = add i32 %v2_8468, 1
  store i32 %v1_846a, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8481

bb:                                               ; preds = %dec_label_pc_844e
  %v2_847f = call i32 @function_8486(i32 %tmp100)
  br label %dec_label_pc_8481

dec_label_pc_8481:                                ; preds = %bb, %dec_label_pc_844e
  %v3_847f = phi i32 [ %v2_847f, %bb ], [ %tmp100, %dec_label_pc_844e ]
  ret i32 %v3_847f
}

define i32 @function_8486(i32 %arg1) local_unnamed_addr {
dec_label_pc_8486:
  %v0_8487 = load i32, i32* @eax, align 4
  ret i32 %v0_8487
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8488:
  %v1_84a5 = call i32 @unknown_12f96(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_84b6

bb:                                               ; preds = %dec_label_pc_8488
  %v1_84b4 = call i32 @function_84bb()
  br label %dec_label_pc_84b6

dec_label_pc_84b6:                                ; preds = %bb, %dec_label_pc_8488
  %v2_84b4 = phi i32 [ %v1_84b4, %bb ], [ 0, %dec_label_pc_8488 ]
  ret i32 %v2_84b4
}

define i32 @function_84bb() local_unnamed_addr {
dec_label_pc_84bb:
  %v0_84bc = load i32, i32* @eax, align 4
  ret i32 %v0_84bc
}

define i32 @_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_84be:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_84e4

bb:                                               ; preds = %dec_label_pc_84be
  %v2_84e2 = call i32 @function_84e9(i32 %arg1)
  br label %dec_label_pc_84e4

dec_label_pc_84e4:                                ; preds = %bb, %dec_label_pc_84be
  %v3_84e2 = phi i32 [ %v2_84e2, %bb ], [ %arg1, %dec_label_pc_84be ]
  ret i32 %v3_84e2
}

define i32 @function_84e9(i32 %arg1) local_unnamed_addr {
dec_label_pc_84e9:
  %v0_84ea = load i32, i32* @eax, align 4
  ret i32 %v0_84ea
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_84eb:
  %v7_8528 = call i32 @unknown_1304b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_8528

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxxneIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8540:
  store i32 %arg1, i32* @eax, align 4
  %v1_8564 = call i32 @function_10bc0(i32 %arg1)
  %v1_8569 = inttoptr i32 %v1_8564 to i32*
  %v2_8569 = load i32, i32* %v1_8569, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_8571 = call i32 @function_10bc0(i32 %arg2)
  %v1_8576 = inttoptr i32 %v1_8571 to i32*
  %v2_8576 = load i32, i32* %v1_8576, align 4
  %v12_8578 = icmp eq i32 %v2_8569, %v2_8576
  %v1_857a = icmp eq i1 %v12_8578, false
  %v2_857a = zext i1 %v1_857a to i32
  %v4_857a = and i32 %v2_8576, -256
  %v5_857a = or i32 %v2_857a, %v4_857a
  store i32 %v5_857a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8589

bb:                                               ; preds = %dec_label_pc_8540
  %v1_8587 = call i32 @function_858e()
  br label %dec_label_pc_8589

dec_label_pc_8589:                                ; preds = %bb, %dec_label_pc_8540
  %v2_8587 = phi i32 [ %v1_8587, %bb ], [ %v5_857a, %dec_label_pc_8540 ]
  ret i32 %v2_8587

; uselistorder directives
  uselistorder i32 %v2_8576, { 1, 0 }
  uselistorder i32 (i32)* @function_10bc0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_858e() local_unnamed_addr {
dec_label_pc_858e:
  %v0_8593 = load i32, i32* @eax, align 4
  ret i32 %v0_8593
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8594:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_85bd = ptrtoint i32* %stack_var_-20 to i32
  %v2_85ca = call i32 @unknown_13143(i32 %v2_85bd, i32 %arg3)
  %v2_85d2 = ptrtoint i32* %stack_var_-24 to i32
  %v2_85df = call i32 @unknown_13143(i32 %v2_85d2, i32 %arg2)
  %v3_85f1 = load i32, i32* %stack_var_-20, align 4
  %v3_85f8 = load i32, i32* %stack_var_-24, align 4
  %v4_8602 = call i32 @unknown_1318d(i32 %arg1, i32 %v3_85f8, i32 %v3_85f1, i32 %arg4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_13143, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8622:
  %v1_8645 = call i32 @function_10990(i32 %arg1)
  %v1_864d = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_864d = inttoptr i32 %v1_864d to i32*
  %v3_864d = load i32, i32* %v2_864d, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_865e = call i32 @function_109bd(i32 %arg2, i32 %v3_864d, i32 %v1_8645)
  store i32 %arg2, i32* %v2_864d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8678

bb:                                               ; preds = %dec_label_pc_8622
  %v1_8676 = call i32 @function_867d()
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %bb, %dec_label_pc_8622
  %v2_8676 = phi i32 [ %v1_8676, %bb ], [ 0, %dec_label_pc_8622 ]
  ret i32 %v2_8676

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_867d() local_unnamed_addr {
dec_label_pc_867d:
  %v0_867e = load i32, i32* @eax, align 4
  ret i32 %v0_867e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_8680:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_86a6

bb:                                               ; preds = %dec_label_pc_8680
  %v2_86a4 = call i32 @function_86ab(i32 %arg1)
  br label %dec_label_pc_86a6

dec_label_pc_86a6:                                ; preds = %bb, %dec_label_pc_8680
  %v3_86a4 = phi i32 [ %v2_86a4, %bb ], [ %arg1, %dec_label_pc_8680 ]
  ret i32 %v3_86a4
}

define i32 @function_86ab(i32 %arg1) local_unnamed_addr {
dec_label_pc_86ab:
  %v0_86ac = load i32, i32* @eax, align 4
  ret i32 %v0_86ac
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_86ad:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_86d9

bb:                                               ; preds = %dec_label_pc_86ad
  %v3_86d7 = call i32 @function_86de(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_86d9

dec_label_pc_86d9:                                ; preds = %bb, %dec_label_pc_86ad
  %v4_86d7 = phi i32 [ %v3_86d7, %bb ], [ %arg1, %dec_label_pc_86ad ]
  ret i32 %v4_86d7
}

define i32 @function_86de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_86de:
  %v0_86df = load i32, i32* @eax, align 4
  ret i32 %v0_86df
}

define i32 @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_86e2:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_8709 = ptrtoint i32* %stack_var_-36 to i32
  %v2_870d = ptrtoint i32* %stack_var_-32 to i32
  %v2_8713 = call i32 @function_115a9(i32 %v2_870d, i32 %v4_8709)
  %v1_8722 = call i32 @unknown_1336e(i32 %v4_8709)
  %v2_875e108 = call i32 @unknown_133a8(i32 %v2_870d, i32 %v4_8709)
  %v4_8763109 = trunc i32 %v2_875e108 to i8
  %v5_8763110 = icmp eq i8 %v4_8763109, 0
  %v1_8765112 = icmp eq i1 %v5_8763110, false
  br i1 %v1_8765112, label %dec_label_pc_8729, label %dec_label_pc_8767

dec_label_pc_8729:                                ; preds = %dec_label_pc_86e2, %dec_label_pc_8729
  %v3_8729 = load i32, i32* %stack_var_-36, align 4
  %v3_8730 = load i32, i32* %stack_var_-32, align 4
  %v2_8736 = call i32 @unknown_133fc(i32 %v3_8730, i32 %v3_8729)
  store i32 %v2_870d, i32* @eax, align 4
  %v1_8741 = call i32 @function_10b30(i32 %v2_870d)
  %v1_874c = call i32 @unknown_1336e(i32 %v4_8709)
  %v2_875e = call i32 @unknown_133a8(i32 %v2_870d, i32 %v4_8709)
  %v4_8763 = trunc i32 %v2_875e to i8
  %v5_8763 = icmp eq i8 %v4_8763, 0
  %v1_8765 = icmp eq i1 %v5_8763, false
  br i1 %v1_8765, label %dec_label_pc_8729, label %dec_label_pc_8767

dec_label_pc_8767:                                ; preds = %dec_label_pc_8729, %dec_label_pc_86e2
  %v2_875e.lcssa = phi i32 [ %v2_875e108, %dec_label_pc_86e2 ], [ %v2_875e, %dec_label_pc_8729 ]
  ret i32 %v2_875e.lcssa

; uselistorder directives
  uselistorder i32 %v2_870d, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v4_8709, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32, i32)* @unknown_133a8, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1336e, { 1, 0 }
  uselistorder label %dec_label_pc_8729, { 1, 0 }
}

define i32 @function_8768(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8768:
  %v0_8768 = load i32, i32* @eax, align 4
  %v1_8768 = add i32 %v0_8768, 1710507403
  %v2_8768 = inttoptr i32 %v1_8768 to i32*
  %v3_8768 = load i32, i32* %v2_8768, align 4
  %v4_8768 = load i32, i32* @edx, align 4
  %v5_8768 = add i32 %v4_8768, %v3_8768
  store i32 %v5_8768, i32* %v2_8768, align 4
  %v0_876e = load i32, i32* @eax, align 4
  %v1_876e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_876e = xor i32 %v1_876e, %v0_876e
  %v3_876e = icmp eq i32 %v2_876e, 0
  store i32 %v2_876e, i32* @eax, align 4
  br i1 %v3_876e, label %bb, label %dec_label_pc_8776

bb:                                               ; preds = %dec_label_pc_8768
  %v1_8774 = call i32 @function_877b()
  br label %dec_label_pc_8776

dec_label_pc_8776:                                ; preds = %bb, %dec_label_pc_8768
  %v2_8774 = phi i32 [ %v1_8774, %bb ], [ %v2_876e, %dec_label_pc_8768 ]
  ret i32 %v2_8774

; uselistorder directives
  uselistorder i32 1710507403, { 1, 0 }
}

define i32 @function_877b() local_unnamed_addr {
dec_label_pc_877b:
  %v0_877c = load i32, i32* @eax, align 4
  ret i32 %v0_877c
}

define i32 @_ZNKSt6vectorIhSaIhEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_877e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_8798 = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_8798 = inttoptr i32 %v1_8798 to i32*
  %v3_8798 = load i32, i32* %v2_8798, align 4
  %v2_87a0 = load i32, i32* %arg1, align 4
  %v2_87a4 = sub i32 %v3_8798, %v2_87a0
  store i32 %v2_87a4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_87b4

bb:                                               ; preds = %dec_label_pc_877e
  %v2_87b2 = call i32 @function_87b9(i32 %tmp100)
  br label %dec_label_pc_87b4

dec_label_pc_87b4:                                ; preds = %bb, %dec_label_pc_877e
  %v3_87b2 = phi i32 [ %v2_87b2, %bb ], [ %v2_87a4, %dec_label_pc_877e ]
  ret i32 %v3_87b2
}

define i32 @function_87b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_87b9:
  %v0_87ba = load i32, i32* @eax, align 4
  ret i32 %v0_87ba
}

define i32 @_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhjT_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_87bc:
  %v2_87f3 = call i32 @unknown_131dc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v1_8801 = call i32 @function_10b2a(i32 %arg1)
  store i32 %arg3, i32* @eax, align 4
  %v4_881e = call i32 @function_10ca7(i32 %arg3, i32 %arg4, i32 %v2_87f3, i32 %v1_8801)
  store i32 %v2_87f3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8832

bb:                                               ; preds = %dec_label_pc_87bc
  %v1_8830 = call i32 @function_8870()
  store i32 %v1_8830, i32* @eax, align 4
  br label %dec_label_pc_8832

dec_label_pc_8832:                                ; preds = %bb, %dec_label_pc_87bc
  %v0_8832 = call i32 @function_886b()
  ret i32 %v0_8832

; uselistorder directives
  uselistorder i32 %v2_87f3, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_8835() local_unnamed_addr {
dec_label_pc_8835:
  %eax.global-to-local = alloca i32, align 4
  %v0_8835 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8835
}

define i32 @function_886b() local_unnamed_addr {
dec_label_pc_886b:
  %v0_886b = load i32, i32* @eax, align 4
  ret i32 %v0_886b
}

define i32 @function_8870() local_unnamed_addr {
dec_label_pc_8870:
  %v0_8875 = load i32, i32* @eax, align 4
  ret i32 %v0_8875
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8876:
  %v10_8899 = icmp eq i32 %arg2, 0
  br i1 %v10_8899, label %dec_label_pc_88b8, label %dec_label_pc_889f

dec_label_pc_889f:                                ; preds = %dec_label_pc_8876
  %v3_88b3 = call i32 @unknown_135d2(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_88b8

dec_label_pc_88b8:                                ; preds = %dec_label_pc_889f, %dec_label_pc_8876
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_88c4

bb:                                               ; preds = %dec_label_pc_88b8
  %v1_88c2 = call i32 @function_88c9()
  br label %dec_label_pc_88c4

dec_label_pc_88c4:                                ; preds = %bb, %dec_label_pc_88b8
  %v2_88c2 = phi i32 [ %v1_88c2, %bb ], [ 0, %dec_label_pc_88b8 ]
  ret i32 %v2_88c2
}

define i32 @function_88c9() local_unnamed_addr {
dec_label_pc_88c9:
  %v0_88ca = load i32, i32* @eax, align 4
  ret i32 %v0_88ca
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_88cb:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_88f4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8901 = call i32 @unknown_13668(i32 %v2_88f4, i32 %arg3)
  %v2_8909 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8916 = call i32 @unknown_13668(i32 %v2_8909, i32 %arg2)
  %v3_8928 = load i32, i32* %stack_var_-20, align 4
  %v3_892f = load i32, i32* %stack_var_-24, align 4
  %v4_8939 = call i32 @unknown_136b2(i32 %arg1, i32 %v3_892f, i32 %v3_8928, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8950

bb:                                               ; preds = %dec_label_pc_88cb
  %v1_894e = call i32 @function_8955()
  br label %dec_label_pc_8950

dec_label_pc_8950:                                ; preds = %bb, %dec_label_pc_88cb
  %v2_894e = phi i32 [ %v1_894e, %bb ], [ %arg1, %dec_label_pc_88cb ]
  ret i32 %v2_894e

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_13668, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_8955() local_unnamed_addr {
dec_label_pc_8955:
  %v0_8956 = load i32, i32* @eax, align 4
  ret i32 %v0_8956
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8959:
  %v2_8989 = call i32 @unknown_137d2(i32 %arg1, i32 %arg2)
  ret i32 0
}

define i32 @_ZSt4copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_89a1:
  %v1_89cb = call i32 @unknown_1385c(i32 %arg2)
  %v1_89d8 = call i32 @unknown_1385c(i32 %arg1)
  %v3_89eb = call i32 @unknown_13891(i32 %v1_89d8, i32 %v1_89cb, i32 %arg3)
  store i32 %v3_89eb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_89fc

bb:                                               ; preds = %dec_label_pc_89a1
  %v1_89fa = call i32 @function_8a01()
  br label %dec_label_pc_89fc

dec_label_pc_89fc:                                ; preds = %bb, %dec_label_pc_89a1
  %v2_89fa = phi i32 [ %v1_89fa, %bb ], [ %v3_89eb, %dec_label_pc_89a1 ]
  ret i32 %v2_89fa

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1385c, { 1, 0 }
}

define i32 @function_8a01() local_unnamed_addr {
dec_label_pc_8a01:
  %v0_8a06 = load i32, i32* @eax, align 4
  ret i32 %v0_8a06
}

define i32 @_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8a07:
  %v7_8a44 = call i32 @unknown_13969(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_8a44, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8a55

bb:                                               ; preds = %dec_label_pc_8a07
  %v1_8a53 = call i32 @function_8a5a()
  br label %dec_label_pc_8a55

dec_label_pc_8a55:                                ; preds = %bb, %dec_label_pc_8a07
  %v2_8a53 = phi i32 [ %v1_8a53, %bb ], [ %v7_8a44, %dec_label_pc_8a07 ]
  ret i32 %v2_8a53

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8a5a() local_unnamed_addr {
dec_label_pc_8a5a:
  %v0_8a5b = load i32, i32* @eax, align 4
  ret i32 %v0_8a5b
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE9constructEPhRKh(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_8a5c:
  store i32 %arg2, i32* @eax, align 4
  %v2_8a8d = call i32 @function_8ed6(i32 1, i32 %arg2)
  %v2_8a92 = icmp eq i32 %v2_8a8d, 0
  br i1 %v2_8a92, label %dec_label_pc_8a9e, label %dec_label_pc_8a96

dec_label_pc_8a96:                                ; preds = %dec_label_pc_8a5c
  %v3_8a8d = inttoptr i32 %v2_8a8d to i8*
  %v2_8a99 = load i8, i8* %arg3, align 1
  store i8 %v2_8a99, i8* %v3_8a8d, align 1
  br label %dec_label_pc_8a9e

dec_label_pc_8a9e:                                ; preds = %dec_label_pc_8a96, %dec_label_pc_8a5c
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8aaa

bb:                                               ; preds = %dec_label_pc_8a9e
  %v1_8aa8 = call i32 @function_8aaf()
  br label %dec_label_pc_8aaa

dec_label_pc_8aaa:                                ; preds = %bb, %dec_label_pc_8a9e
  %v2_8aa8 = phi i32 [ %v1_8aa8, %bb ], [ 0, %dec_label_pc_8a9e ]
  ret i32 %v2_8aa8

; uselistorder directives
  uselistorder i32 %v2_8a8d, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_8aaf() local_unnamed_addr {
dec_label_pc_8aaf:
  %v0_8ab0 = load i32, i32* @eax, align 4
  ret i32 %v0_8ab0
}

define i32 @_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8ab2:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_8ada = add i32 %tmp117, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_8ada = inttoptr i32 %v1_8ada to i32*
  %v3_8ada = load i32, i32* %v2_8ada, align 4
  %v1_8ae0 = add i32 %tmp117, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_8ae0 = inttoptr i32 %v1_8ae0 to i32*
  %v3_8ae0 = load i32, i32* %v2_8ae0, align 4
  %v12_8ae3 = icmp eq i32 %v3_8ada, %v3_8ae0
  br i1 %v12_8ae3, label %dec_label_pc_8b66, label %dec_label_pc_8ae7

dec_label_pc_8ae7:                                ; preds = %dec_label_pc_8ab2
  %tmp122 = inttoptr i32 %arg3 to i8*
  %v3_8aea = load i32, i32* %v2_8ada, align 4
  %v1_8aed = add i32 %v3_8aea, -1
  %v4_8b04 = call i32 @function_1150e(i32 %tmp117, i32 %v3_8aea, i32 %v1_8aed)
  %v3_8b0c = load i32, i32* %v2_8ada, align 4
  %v1_8b0f = add i32 %v3_8b0c, 1
  store i32 %v1_8b0f, i32* @edx, align 4
  store i32 %v1_8b0f, i32* %v2_8ada, align 4
  %v2_8b1b = load i8, i8* %tmp122, align 1
  store i32 %v3_8b0c, i32* @esi, align 4
  %v3_8b2d = load i32, i32* %v2_8ada, align 4
  %v1_8b30 = add i32 %v3_8b2d, -2
  store i32 %v1_8b30, i32* @ebx, align 4
  %v2_8b33 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8b33, i32* @eax, align 4
  %v1_8b39 = call i32 @function_11132(i32 %v2_8b33)
  %v1_8b3e = inttoptr i32 %v1_8b39 to i32*
  %v2_8b3e = load i32, i32* %v1_8b3e, align 4
  %v0_8b40 = load i32, i32* @esi, align 4
  %v0_8b44 = load i32, i32* @ebx, align 4
  %v4_8b4b = call i32 @unknown_13a94(i32 %v2_8b3e, i32 %v0_8b44, i32 %v0_8b40)
  %v4_8b5b = zext i8 %v2_8b1b to i32
  store i32 %v4_8b5b, i32* %stack_var_-52, align 4
  %v1_8b61 = call i32 @function_8d51(i32 %v2_8b33)
  ret i32 %v1_8b61

dec_label_pc_8b66:                                ; preds = %dec_label_pc_8ab2
  %v4_8b7c = call i32 @unknown_13afa(i32 %tmp117, i32 1, i32 ptrtoint ([22 x i8]* @global_var_1e1e.919 to i32))
  %v2_8b84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8b84, i32* @eax, align 4
  %v2_8b91 = call i32 @function_f09c(i32 %v2_8b84, i32 %tmp117)
  %v2_8ba0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8ba0, i32* @eax, align 4
  store i32 %v2_8ba0, i32* %stack_var_-80, align 4
  %v2_8ba6 = call i32 @function_fad0(i32 %v2_8ba0, i32 %v2_8b84)
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v2_8bbb = call i32 @unknown_134d2(i32 %tmp117, i32 %v4_8b7c)
  %v3_8bcf = add i32 %v2_8bbb, %v2_8ba6
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v3_8be3 = call i32 @function_1150e(i32 %tmp117, i32 %v3_8bcf, i32 %arg3)
  store i32 %tmp117, i32* @ebx, align 4
  store i32 %v2_8ba0, i32* @eax, align 4
  store i32 %v2_8ba0, i32* %stack_var_-80, align 4
  %v1_8c02 = call i32 @function_11132(i32 %v2_8ba0)
  %v1_8c07 = inttoptr i32 %v1_8c02 to i32*
  %v2_8c07 = load i32, i32* %v1_8c07, align 4
  store i32 %v2_8c07, i32* @edx, align 4
  %v2_8c0c = load i32, i32* %arg1, align 4
  %v0_8c0e = load i32, i32* @ebx, align 4
  store i32 %v2_8c0c, i32* %stack_var_-80, align 4
  %v5_8c20 = call i32 @unknown_13bcc(i32 %v2_8c0c, i32 %v2_8c07, i32 %v2_8bbb, i32 %v0_8c0e)
  %v4_8c28 = add i32 %v5_8c20, 1
  store i32 %tmp117, i32* %stack_var_-80, align 4
  store i32 %tmp117, i32* @ebx, align 4
  %v3_8c3c = load i32, i32* %v2_8ada, align 4
  store i32 %v3_8c3c, i32* @esi, align 4
  store i32 %v2_8ba0, i32* @eax, align 4
  store i32 %v2_8ba0, i32* %stack_var_-80, align 4
  %v1_8c45 = call i32 @function_11132(i32 %v2_8ba0)
  %v1_8c4a = inttoptr i32 %v1_8c45 to i32*
  %v2_8c4a = load i32, i32* %v1_8c4a, align 4
  %v0_8c4c = load i32, i32* @ebx, align 4
  %v0_8c57 = load i32, i32* @esi, align 4
  store i32 %v2_8c4a, i32* %stack_var_-80, align 4
  %v5_8c5e = call i32 @unknown_13bcc(i32 %v2_8c4a, i32 %v0_8c57, i32 %v4_8c28, i32 %v0_8c4c)
  store i32 %tmp117, i32* @eax, align 4
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v3_8c74 = load i32, i32* %v2_8ada, align 4
  store i32 %v3_8c74, i32* @ecx, align 4
  %v2_8c7a = load i32, i32* %arg1, align 4
  store i32 %v2_8c7a, i32* %stack_var_-80, align 4
  %v3_8c87 = call i32 @function_10e4d(i32 %v2_8c7a, i32 %v3_8c74, i32 %tmp117)
  %v3_8c8f = load i32, i32* %v2_8ae0, align 4
  %v2_8c97 = load i32, i32* %arg1, align 4
  %v2_8c9b = sub i32 %v3_8c8f, %v2_8c97
  store i32 %tmp117, i32* @eax, align 4
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v3_8cb4 = call i32 @function_11328(i32 %tmp117, i32 %v2_8c97, i32 %v2_8c9b)
  store i32 %v2_8bbb, i32* %arg1, align 4
  store i32 %v5_8c5e, i32* %v2_8ada, align 4
  %v2_8cd0 = add i32 %v2_8bbb, %v4_8b7c
  store i32 %v2_8cd0, i32* %v2_8ae0, align 4
  %v0_8cd8 = load i32, i32* %stack_var_-80, align 4
  %v1_8cd8 = call i32 @function_8d51(i32 %v0_8cd8)
  ret i32 %v1_8cd8

; uselistorder directives
  uselistorder i32 %v2_8c4a, { 1, 0 }
  uselistorder i32 %v2_8c0c, { 1, 0 }
  uselistorder i32 %v2_8bbb, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8ba0, { 1, 0, 2, 4, 3, 5, 7, 6, 8 }
  uselistorder i32* %v2_8ada, { 4, 5, 6, 0, 1, 2, 3, 7 }
  uselistorder i32 %tmp117, { 4, 3, 2, 0, 6, 5, 8, 7, 9, 10, 11, 13, 12, 14, 15, 1, 17, 16 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_13bcc, { 1, 0 }
  uselistorder i32 (i32)* @function_8d51, { 1, 0 }
  uselistorder i32 (i32)* @function_11132, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1150e, { 1, 0 }
}

define i32 @function_8cdb() local_unnamed_addr {
dec_label_pc_8cdb:
  %eax.global-to-local = alloca i32, align 4
  %v0_8cdb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8cdb
}

define i32 @function_8cf2() local_unnamed_addr {
dec_label_pc_8cf2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_8cf2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8cf2 = add i32 %v0_8cf2, 1962991741
  %v2_8cf2 = inttoptr i32 %v1_8cf2 to i32*
  %v3_8cf2 = load i32, i32* %v2_8cf2, align 4
  %v4_8cf2 = add i32 %v3_8cf2, 1
  store i32 %v4_8cf2, i32* %v2_8cf2, align 4
  %v0_8cf8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8cf8 = add i32 %v0_8cf8, 1435232325
  %v2_8cf8 = inttoptr i32 %v1_8cf8 to i32*
  %v3_8cf8 = load i32, i32* %v2_8cf8, align 4
  %v4_8cf8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8cf8 = load i1, i1* %cf.global-to-local, align 1
  %v6_8cf8 = zext i1 %v5_8cf8 to i32
  %v7_8cf8 = sub i32 %v3_8cf8, %v4_8cf8
  %v8_8cf8 = add i32 %v7_8cf8, %v6_8cf8
  store i32 %v8_8cf8, i32* %v2_8cf8, align 4
  %v0_8cff = load i32, i32* %edx.global-to-local, align 4
  %v1_8cff = load i32, i32* %eax.global-to-local, align 4
  %v2_8cff = add i32 %v1_8cff, %v0_8cff
  %v7_8cff = icmp ult i32 %v2_8cff, %v0_8cff
  store i1 %v7_8cff, i1* %cf.global-to-local, align 1
  store i32 %v2_8cff, i32* %edx.global-to-local, align 4
  %v0_8d01 = load i32, i32* @ebp, align 4
  %v1_8d01 = add i32 %v0_8d01, -44
  %v2_8d01 = inttoptr i32 %v1_8d01 to i32*
  %v3_8d01 = load i32, i32* %v2_8d01, align 4
  store i32 %v3_8d01, i32* %eax.global-to-local, align 4
  %v2_8d0b = call i32 @unknown_13a64(i32 %v3_8d01, i32 %v2_8cff)
  store i32 %v2_8d0b, i32* %eax.global-to-local, align 4
  %v0_8d10 = call i32 @function_8d33()
  store i32 %v0_8d10, i32* %eax.global-to-local, align 4
  ret i32 %v0_8d10

; uselistorder directives
  uselistorder i32 %v0_8cff, { 1, 0 }
}

define i32 @function_8d12() local_unnamed_addr {
dec_label_pc_8d12:
  %v0_8d12 = load i32, i32* @ebp, align 4
  %v1_8d12 = add i32 %v0_8d12, -44
  %v2_8d12 = inttoptr i32 %v1_8d12 to i32*
  %v3_8d12 = load i32, i32* %v2_8d12, align 4
  %v1_8d21 = add i32 %v0_8d12, -32
  %v2_8d21 = inttoptr i32 %v1_8d21 to i32*
  %v3_8d21 = load i32, i32* %v2_8d21, align 4
  %v1_8d28 = add i32 %v0_8d12, -20
  %v2_8d28 = inttoptr i32 %v1_8d28 to i32*
  %v3_8d28 = load i32, i32* %v2_8d28, align 4
  store i32 %v3_8d28, i32* @eax, align 4
  %v3_8d2e = call i32 @function_10e4d(i32 %v3_8d28, i32 %v3_8d21, i32 %v3_8d12)
  ret i32 %v3_8d2e

; uselistorder directives
  uselistorder i32 %v0_8d12, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_10e4d, { 1, 0 }
}

define i32 @function_8d33() local_unnamed_addr {
dec_label_pc_8d33:
  %v0_8d33 = load i32, i32* @ebp, align 4
  %v1_8d33 = add i32 %v0_8d33, -44
  %v2_8d33 = inttoptr i32 %v1_8d33 to i32*
  %v3_8d33 = load i32, i32* %v2_8d33, align 4
  store i32 %v3_8d33, i32* @eax, align 4
  %v1_8d36 = add i32 %v0_8d33, -28
  %v2_8d36 = inttoptr i32 %v1_8d36 to i32*
  %v3_8d36 = load i32, i32* %v2_8d36, align 4
  %v1_8d3d = add i32 %v0_8d33, -20
  %v2_8d3d = inttoptr i32 %v1_8d3d to i32*
  %v3_8d3d = load i32, i32* %v2_8d3d, align 4
  %v3_8d47 = call i32 @function_11328(i32 %v3_8d33, i32 %v3_8d3d, i32 %v3_8d36)
  ret i32 %v3_8d47

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_11328, { 1, 0 }
}

define i32 @function_8d51(i32 %arg1) local_unnamed_addr {
dec_label_pc_8d51:
  %v0_8d51 = load i32, i32* @ebp, align 4
  %v1_8d51 = add i32 %v0_8d51, -12
  %v2_8d51 = inttoptr i32 %v1_8d51 to i32*
  %v3_8d51 = load i32, i32* %v2_8d51, align 4
  %v1_8d54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8d54 = xor i32 %v1_8d54, %v3_8d51
  %v3_8d54 = icmp eq i32 %v2_8d54, 0
  store i32 %v2_8d54, i32* @eax, align 4
  br i1 %v3_8d54, label %bb, label %dec_label_pc_8d5d

bb:                                               ; preds = %dec_label_pc_8d51
  %v1_8d5b = call i32 @function_8d62()
  br label %dec_label_pc_8d5d

dec_label_pc_8d5d:                                ; preds = %bb, %dec_label_pc_8d51
  %v2_8d5b = phi i32 [ %v1_8d5b, %bb ], [ %v2_8d54, %dec_label_pc_8d51 ]
  ret i32 %v2_8d5b
}

define i32 @function_8d62() local_unnamed_addr {
dec_label_pc_8d62:
  %v0_8d68 = load i32, i32* @eax, align 4
  ret i32 %v0_8d68
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8d6a:
  %v2_8d94 = call i32 @unknown_1372a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8da5

bb:                                               ; preds = %dec_label_pc_8d6a
  %v1_8da3 = call i32 @function_8daa()
  br label %dec_label_pc_8da5

dec_label_pc_8da5:                                ; preds = %bb, %dec_label_pc_8d6a
  %v2_8da3 = phi i32 [ %v1_8da3, %bb ], [ 0, %dec_label_pc_8d6a ]
  ret i32 %v2_8da3
}

define i32 @function_8daa() local_unnamed_addr {
dec_label_pc_8daa:
  %v0_8dab = load i32, i32* @eax, align 4
  ret i32 %v0_8dab
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_8dac:
  %edx.global-to-local = alloca i32, align 4
  %v0_8dd6 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_8dd6, 16777216
  %v8_8dee = sdiv i32 %sext, 16777216
  %v9_8dee = sext i8 %arg4 to i32
  %v10_8dee = call i32 @unknown_13f22(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_8dee, i32 %v9_8dee, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8e03() local_unnamed_addr {
dec_label_pc_8e03:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8e03 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8e03 = add i32 %v0_8e03, -1
  store i32 %v1_8e03, i32* %ecx.global-to-local, align 4
  %v0_8e05 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8e05
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIPKhEEvT_S5_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_8e06:
  %edx.global-to-local = alloca i32, align 4
  %v0_8e30 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_8e30, 16777216
  %v8_8e48 = sdiv i32 %sext, 16777216
  %v9_8e48 = sext i8 %arg4 to i32
  %v10_8e48 = call i32 @unknown_1402a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_8e48, i32 %v9_8e48, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8e59

bb:                                               ; preds = %dec_label_pc_8e06
  %v1_8e57 = call i32 @function_8e5e()
  br label %dec_label_pc_8e59

dec_label_pc_8e59:                                ; preds = %bb, %dec_label_pc_8e06
  %v2_8e57 = phi i32 [ %v1_8e57, %bb ], [ 0, %dec_label_pc_8e06 ]
  ret i32 %v2_8e57

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8e5e() local_unnamed_addr {
dec_label_pc_8e5e:
  %v0_8e5f = load i32, i32* @eax, align 4
  ret i32 %v0_8e5f
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_St12__false_type(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8e60:
  ret i32 %arg2
}

define i32 @function_8e70(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e70:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_8e70 = load i32, i32* @ebp, align 4
  %v0_8e71 = load i32, i32* @ecx, align 4
  %v1_8e71 = add i32 %v0_8e71, -1
  store i32 %v1_8e71, i32* @ecx, align 4
  %v1_8e73 = add i32 %v0_8e70, 2
  store i32 %v1_8e73, i32* %ebp.global-to-local, align 4
  %v1_8e74 = add i32 %v0_8e71, 1166793796
  %v2_8e74 = inttoptr i32 %v1_8e74 to i8*
  %v3_8e74 = load i8, i8* %v2_8e74, align 1
  %v5_8e74 = trunc i32 %v1_8e71 to i8
  %v6_8e74 = load i1, i1* @cf, align 1
  %v7_8e74 = zext i1 %v6_8e74 to i8
  %v8_8e74 = add i8 %v3_8e74, %v5_8e74
  %v9_8e74 = add i8 %v7_8e74, %v8_8e74
  %v27_8e74 = icmp ule i8 %v9_8e74, %v3_8e74
  %v28_8e74 = icmp ult i8 %v8_8e74, %v3_8e74
  %v29_8e74 = select i1 %v6_8e74, i1 %v27_8e74, i1 %v28_8e74
  store i1 %v29_8e74, i1* %cf.global-to-local, align 1
  store i8 %v9_8e74, i8* %v2_8e74, align 1
  %v0_8e7a = load i32, i32* @eax, align 4
  %v1_8e7a = trunc i32 %v0_8e7a to i8
  %v2_8e7a = load i1, i1* %cf.global-to-local, align 1
  %v3_8e7a = zext i1 %v2_8e7a to i8
  %v4_8e7a = add i8 %v1_8e7a, -119
  %v5_8e7a = add i8 %v4_8e7a, %v3_8e7a
  %v22_8e7a = icmp ule i8 %v5_8e7a, %v1_8e7a
  %v23_8e7a = icmp ugt i8 %v1_8e7a, 118
  %v24_8e7a = select i1 %v2_8e7a, i1 %v22_8e7a, i1 %v23_8e7a
  store i1 %v24_8e7a, i1* %cf.global-to-local, align 1
  %v25_8e7a = zext i8 %v5_8e7a to i32
  %v27_8e7a = and i32 %v0_8e7a, -256
  %v28_8e7a = or i32 %v25_8e7a, %v27_8e7a
  store i32 %v28_8e7a, i32* %eax.global-to-local, align 4
  %v0_8e7c = load i32, i32* %ebp.global-to-local, align 4
  %v1_8e7c = add i32 %v0_8e7c, 1
  store i32 %v1_8e7c, i32* @ebp, align 4
  %v3_8e7d = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_8e7d = fpext float %v3_8e7d to x86_fp80
  %v5_8e7d = load x86_fp80, x86_fp80* @st0, align 4
  %v6_8e7d = fmul x86_fp80 %v4_8e7d, %v5_8e7d
  store x86_fp80 %v6_8e7d, x86_fp80* @st0, align 4
  %v0_8e7f = load i32, i32* @edx, align 4
  %v1_8e7f = and i32 %v0_8e7f, -65281
  %v2_8e7f = or i32 %v1_8e7f, 17664
  store i32 %v2_8e7f, i32* @edx, align 4
  %v1_8e81 = add i32 %v28_8e7a, -1587161275
  %v2_8e81 = inttoptr i32 %v1_8e81 to i8*
  %v3_8e81 = load i8, i8* %v2_8e81, align 1
  %v4_8e81 = load i32, i32* @ecx, align 4
  %v5_8e81 = trunc i32 %v4_8e81 to i8
  %v7_8e81 = zext i1 %v24_8e7a to i8
  %v8_8e81 = sub i8 %v3_8e81, %v5_8e81
  %v9_8e81 = add i8 %v8_8e81, %v7_8e81
  %v19_8e81 = sub i8 %v8_8e81, %v7_8e81
  %v20_8e81 = icmp ult i8 %v3_8e81, %v19_8e81
  %v21_8e81 = icmp ne i8 %v5_8e81, -1
  %v22_8e81 = or i1 %v21_8e81, %v20_8e81
  %v23_8e81 = icmp ult i8 %v3_8e81, %v5_8e81
  %v24_8e81 = select i1 %v24_8e7a, i1 %v22_8e81, i1 %v23_8e81
  store i1 %v24_8e81, i1* %cf.global-to-local, align 1
  store i8 %v9_8e81, i8* %v2_8e81, align 1
  %v0_8e87 = load i32, i32* %eax.global-to-local, align 4
  %v1_8e87 = trunc i32 %v0_8e87 to i8
  %v2_8e87 = load i1, i1* %cf.global-to-local, align 1
  %v3_8e87 = zext i1 %v2_8e87 to i8
  %v4_8e87 = add i8 %v3_8e87, %v1_8e87
  %v19_8e87 = icmp ule i8 %v4_8e87, %v1_8e87
  %v21_8e87 = icmp eq i1 %v2_8e87, %v19_8e87
  store i1 %v21_8e87, i1* %cf.global-to-local, align 1
  %v22_8e87 = zext i8 %v4_8e87 to i32
  %v24_8e87 = and i32 %v0_8e87, -256
  %v25_8e87 = or i32 %v22_8e87, %v24_8e87
  store i32 %v25_8e87, i32* %eax.global-to-local, align 4
  %v1_8e89 = inttoptr i32 %v25_8e87 to i8*
  %v2_8e89 = load i8, i8* %v1_8e89, align 1
  %v5_8e89 = add i8 %v2_8e89, %v4_8e87
  store i8 %v5_8e89, i8* %v1_8e89, align 1
  %v0_8e8b = load i32, i32* %eax.global-to-local, align 4
  %v1_8e8b = load i32, i32* @ebp, align 4
  %v2_8e8b = add i32 %v1_8e8b, -12
  %v3_8e8b = inttoptr i32 %v2_8e8b to i32*
  store i32 %v0_8e8b, i32* %v3_8e8b, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8e90 = load i32, i32* @edx, align 4
  %v0_8e94 = load i32, i32* @ebp, align 4
  %v1_8e94 = add i32 %v0_8e94, -40
  %v2_8e94 = inttoptr i32 %v1_8e94 to i32*
  %v3_8e94 = load i32, i32* %v2_8e94, align 4
  store i32 %v3_8e94, i32* %eax.global-to-local, align 4
  %v1_8e9b = add i32 %v0_8e94, -36
  %v2_8e9b = inttoptr i32 %v1_8e9b to i32*
  %v3_8e9b = load i32, i32* %v2_8e9b, align 4
  store i32 %v3_8e9b, i32* %eax.global-to-local, align 4
  %v1_8ea2 = add i32 %v0_8e94, -32
  %v2_8ea2 = inttoptr i32 %v1_8ea2 to i32*
  %v3_8ea2 = load i32, i32* %v2_8ea2, align 4
  store i32 %v3_8ea2, i32* %eax.global-to-local, align 4
  %v1_8ea9 = add i32 %v0_8e94, -28
  %v2_8ea9 = inttoptr i32 %v1_8ea9 to i32*
  %v3_8ea9 = load i32, i32* %v2_8ea9, align 4
  store i32 %v3_8ea9, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_8e90, 16777216
  %v5_8eaf = sdiv i32 %sext, 16777216
  %v6_8eaf = call i32 @unknown_14132(i32 %v3_8ea9, i32 %v3_8ea2, i32 %v3_8e9b, i32 %v3_8e94, i32 %v5_8eaf)
  store i32 %v6_8eaf, i32* %eax.global-to-local, align 4
  %v0_8eb4 = load i32, i32* @ebp, align 4
  %v1_8eb4 = add i32 %v0_8eb4, -12
  %v2_8eb4 = inttoptr i32 %v1_8eb4 to i32*
  %v3_8eb4 = load i32, i32* %v2_8eb4, align 4
  store i32 %v3_8eb4, i32* %eax.global-to-local, align 4
  %v1_8eb7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8eb7 = xor i32 %v1_8eb7, %v3_8eb4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_8eb7 = icmp eq i32 %v2_8eb7, 0
  store i32 %v2_8eb7, i32* @eax, align 4
  br i1 %v3_8eb7, label %bb, label %dec_label_pc_8ec0

bb:                                               ; preds = %dec_label_pc_8e70
  %v1_8ebe = call i32 @function_8ec5()
  store i32 %v1_8ebe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %bb, %dec_label_pc_8e70
  %v3_8ebe = phi i32 [ %v1_8ebe, %bb ], [ %v2_8eb7, %dec_label_pc_8e70 ]
  ret i32 %v3_8ebe

; uselistorder directives
  uselistorder i32 %v0_8e94, { 1, 0, 2, 3 }
  uselistorder i8 %v4_8e87, { 0, 2, 1 }
  uselistorder i8 %v1_8e87, { 1, 0 }
  uselistorder i8 %v8_8e81, { 1, 0 }
  uselistorder i8 %v7_8e81, { 1, 0 }
  uselistorder i8 %v5_8e81, { 1, 0, 2 }
  uselistorder i1 %v24_8e7a, { 1, 0, 2 }
  uselistorder i8 %v5_8e7a, { 1, 0 }
  uselistorder i8 %v9_8e74, { 1, 0 }
  uselistorder i8 %v8_8e74, { 1, 0 }
  uselistorder i8 %v3_8e74, { 1, 2, 0 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16 }
}

define i32 @function_8ec5() local_unnamed_addr {
dec_label_pc_8ec5:
  %v0_8ec6 = load i32, i32* @eax, align 4
  ret i32 %v0_8ec6
}

define i32 @_ZN9__gnu_cxxeqIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_8ec7:
  ret i32 %arg1
}

define i32 @function_8ed6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8ed6:
  %v0_8ed8 = load i32, i32* @ebp, align 4
  %v1_8ed8 = add i32 %v0_8ed8, 1
  store i32 %v1_8ed8, i32* @ebp, align 4
  %v0_8edb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8ee0 = add i32 %v0_8ed8, -11
  %v3_8ee0 = inttoptr i32 %v2_8ee0 to i32*
  store i32 %v0_8edb, i32* %v3_8ee0, align 4
  %v0_8ee5 = load i32, i32* @ebp, align 4
  %v1_8ee5 = add i32 %v0_8ee5, -28
  %v2_8ee5 = inttoptr i32 %v1_8ee5 to i32*
  %v3_8ee5 = load i32, i32* %v2_8ee5, align 4
  store i32 %v3_8ee5, i32* @eax, align 4
  %v1_8eeb = call i32 @function_11547(i32 %v3_8ee5)
  %v1_8ef0 = inttoptr i32 %v1_8eeb to i32*
  %v2_8ef0 = load i32, i32* %v1_8ef0, align 4
  store i32 %v2_8ef0, i32* @ebx, align 4
  %v0_8ef2 = load i32, i32* @ebp, align 4
  %v1_8ef2 = add i32 %v0_8ef2, -32
  %v2_8ef2 = inttoptr i32 %v1_8ef2 to i32*
  %v3_8ef2 = load i32, i32* %v2_8ef2, align 4
  store i32 %v3_8ef2, i32* @eax, align 4
  %v1_8ef8 = call i32 @function_11547(i32 %v3_8ef2)
  %v1_8efd = inttoptr i32 %v1_8ef8 to i32*
  %v2_8efd = load i32, i32* %v1_8efd, align 4
  %v0_8eff = load i32, i32* @ebx, align 4
  %v12_8eff = icmp eq i32 %v0_8eff, %v2_8efd
  %v1_8f01 = zext i1 %v12_8eff to i32
  %v3_8f01 = and i32 %v2_8efd, -256
  %v4_8f01 = or i32 %v1_8f01, %v3_8f01
  store i32 %v4_8f01, i32* @eax, align 4
  %v0_8f04 = load i32, i32* @ebp, align 4
  %v1_8f04 = add i32 %v0_8f04, -12
  %v2_8f04 = inttoptr i32 %v1_8f04 to i32*
  %v3_8f04 = load i32, i32* %v2_8f04, align 4
  %v1_8f07 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_8f07 = icmp eq i32 %v1_8f07, %v3_8f04
  br i1 %v3_8f07, label %bb, label %dec_label_pc_8f10

bb:                                               ; preds = %dec_label_pc_8ed6
  %v1_8f0e = call i32 @function_8f15()
  br label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %bb, %dec_label_pc_8ed6
  %v3_8f0e = phi i32 [ %v1_8f0e, %bb ], [ %v4_8f01, %dec_label_pc_8ed6 ]
  ret i32 %v3_8f0e

; uselistorder directives
  uselistorder i32 %v2_8efd, { 1, 0 }
  uselistorder i32 (i32)* @function_11547, { 1, 0 }
}

define i32 @function_8f15() local_unnamed_addr {
dec_label_pc_8f15:
  %v0_8f1a = load i32, i32* @eax, align 4
  ret i32 %v0_8f1a
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_insert_dispatchIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_8f1c:
  %v4_8f3a = zext i8 %arg5 to i32
  ret i32 %v4_8f3a
}

define i32 @function_8f3f() local_unnamed_addr {
dec_label_pc_8f3f:
  %eax.global-to-local = alloca i32, align 4
  %v15_8f3f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_8f3f
}

define i32 @function_8f58(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f58:
  %v0_8f58 = load i32, i32* @ebp, align 4
  %v1_8f59 = load i32, i32* @ecx, align 4
  %v2_8f59 = add i32 %v1_8f59, -1962400700
  %v3_8f59 = inttoptr i32 %v2_8f59 to double*
  %v4_8f59 = load double, double* %v3_8f59, align 4
  %v5_8f59 = fpext double %v4_8f59 to x86_fp80
  %v6_8f59 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_8f59 = fmul x86_fp80 %v5_8f59, %v6_8f59
  store x86_fp80 %v7_8f59, x86_fp80* @st0, align 4
  %v1_8f5f = add i32 %v0_8f58, 2
  store i32 %v1_8f5f, i32* @ebp, align 4
  %v1_8f60 = add i32 %v1_8f59, -1
  store i32 %v1_8f60, i32* @ecx, align 4
  %v1_8f65 = add i32 %v0_8f58, -26
  %v2_8f65 = inttoptr i32 %v1_8f65 to i32*
  %v3_8f65 = load i32, i32* %v2_8f65, align 4
  %v1_8f6b = call i32 @unknown_145ce(i32 %v3_8f65)
  %v0_8f70 = load i32, i32* @ebp, align 4
  %v1_8f70 = add i32 %v0_8f70, -12
  %v2_8f70 = inttoptr i32 %v1_8f70 to i32*
  %v3_8f70 = load i32, i32* %v2_8f70, align 4
  %v1_8f73 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8f73 = xor i32 %v1_8f73, %v3_8f70
  store i1 false, i1* @cf, align 1
  %v3_8f73 = icmp eq i32 %v2_8f73, 0
  store i32 %v2_8f73, i32* @eax, align 4
  br i1 %v3_8f73, label %bb, label %dec_label_pc_8f7c

bb:                                               ; preds = %dec_label_pc_8f58
  %v1_8f7a = call i32 @function_8f81()
  br label %dec_label_pc_8f7c

dec_label_pc_8f7c:                                ; preds = %bb, %dec_label_pc_8f58
  %v3_8f7a = phi i32 [ %v1_8f7a, %bb ], [ %v2_8f73, %dec_label_pc_8f58 ]
  ret i32 %v3_8f7a
}

define i32 @function_8f81() local_unnamed_addr {
dec_label_pc_8f81:
  %v0_8f82 = load i32, i32* @eax, align 4
  ret i32 %v0_8f82
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f84:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8faa

bb:                                               ; preds = %dec_label_pc_8f84
  %v2_8fa8 = call i32 @function_8faf(i32 %arg1)
  br label %dec_label_pc_8faa

dec_label_pc_8faa:                                ; preds = %bb, %dec_label_pc_8f84
  %v3_8fa8 = phi i32 [ %v2_8fa8, %bb ], [ %arg1, %dec_label_pc_8f84 ]
  ret i32 %v3_8fa8
}

define i32 @function_8faf(i32 %arg1) local_unnamed_addr {
dec_label_pc_8faf:
  %v0_8fb0 = load i32, i32* @eax, align 4
  ret i32 %v0_8fb0
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8fb2:
  %v1_8fcf = call i32 @unknown_14abc(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8fe0

bb:                                               ; preds = %dec_label_pc_8fb2
  %v1_8fde = call i32 @function_8fe5()
  br label %dec_label_pc_8fe0

dec_label_pc_8fe0:                                ; preds = %bb, %dec_label_pc_8fb2
  %v2_8fde = phi i32 [ %v1_8fde, %bb ], [ 0, %dec_label_pc_8fb2 ]
  ret i32 %v2_8fde
}

define i32 @function_8fe5() local_unnamed_addr {
dec_label_pc_8fe5:
  %v0_8fe6 = load i32, i32* @eax, align 4
  ret i32 %v0_8fe6
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8fe8:
  %v1_9005 = call i32 @unknown_14aa0(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9016

bb:                                               ; preds = %dec_label_pc_8fe8
  %v1_9014 = call i32 @function_901b()
  br label %dec_label_pc_9016

dec_label_pc_9016:                                ; preds = %bb, %dec_label_pc_8fe8
  %v2_9014 = phi i32 [ %v1_9014, %bb ], [ 0, %dec_label_pc_8fe8 ]
  ret i32 %v2_9014
}

define i32 @function_901b() local_unnamed_addr {
dec_label_pc_901b:
  %v0_901c = load i32, i32* @eax, align 4
  ret i32 %v0_901c
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_901e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_9039 = add i32 %tmp101, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_9039 = inttoptr i32 %v1_9039 to i32*
  %v3_9039 = load i32, i32* %v2_9039, align 4
  %v2_9041 = load i32, i32* %arg1, align 4
  %v2_9045 = sub i32 %v3_9039, %v2_9041
  %v2_9049 = sdiv i32 %v2_9045, 4
  %v3_904c = mul i32 %v2_9049, -991146299
  %v3_9067 = call i32 @unknown_14b5e(i32 %tmp101, i32 %v2_9041, i32 %v3_904c)
  store i32 %tmp101, i32* @eax, align 4
  %v1_9072 = call i32 @function_11fd0(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9083

bb:                                               ; preds = %dec_label_pc_901e
  %v1_9081 = call i32 @function_90a1()
  store i32 %v1_9081, i32* @eax, align 4
  br label %dec_label_pc_9083

dec_label_pc_9083:                                ; preds = %bb, %dec_label_pc_901e
  %v0_9083 = call i32 @function_909c()
  ret i32 %v0_9083

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_9086() local_unnamed_addr {
dec_label_pc_9086:
  %eax.global-to-local = alloca i32, align 4
  %v0_9086 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9086
}

define i32 @function_909c() local_unnamed_addr {
dec_label_pc_909c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_90a1() local_unnamed_addr {
dec_label_pc_90a1:
  %v0_90a6 = load i32, i32* @eax, align 4
  ret i32 %v0_90a6
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_90a8:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_90ce

bb:                                               ; preds = %dec_label_pc_90a8
  %v2_90cc = call i32 @function_90d3(i32 %arg1)
  br label %dec_label_pc_90ce

dec_label_pc_90ce:                                ; preds = %bb, %dec_label_pc_90a8
  %v3_90cc = phi i32 [ %v2_90cc, %bb ], [ %arg1, %dec_label_pc_90a8 ]
  ret i32 %v3_90cc
}

define i32 @function_90d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_90d3:
  %v0_90d4 = load i32, i32* @eax, align 4
  ret i32 %v0_90d4
}

define i32 @_ZSt8_DestroyIP5CTxInS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_90d5:
  %v2_9105 = call i32 @unknown_14c6a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9116

bb:                                               ; preds = %dec_label_pc_90d5
  %v1_9114 = call i32 @function_911b()
  br label %dec_label_pc_9116

dec_label_pc_9116:                                ; preds = %bb, %dec_label_pc_90d5
  %v2_9114 = phi i32 [ %v1_9114, %bb ], [ 0, %dec_label_pc_90d5 ]
  ret i32 %v2_9114
}

define i32 @function_911b() local_unnamed_addr {
dec_label_pc_911b:
  %v0_911c = load i32, i32* @eax, align 4
  ret i32 %v0_911c
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_911e:
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9154:
  %v1_9171 = call i32 @unknown_14d2c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9182

bb:                                               ; preds = %dec_label_pc_9154
  %v1_9180 = call i32 @function_9187()
  br label %dec_label_pc_9182

dec_label_pc_9182:                                ; preds = %bb, %dec_label_pc_9154
  %v2_9180 = phi i32 [ %v1_9180, %bb ], [ 0, %dec_label_pc_9154 ]
  ret i32 %v2_9180
}

define i32 @function_9187() local_unnamed_addr {
dec_label_pc_9187:
  %v0_9188 = load i32, i32* @eax, align 4
  ret i32 %v0_9188
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_918a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_9197 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_91a5 = add i32 %tmp101, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_91a5 = inttoptr i32 %v1_91a5 to i32*
  %v3_91a5 = load i32, i32* %v2_91a5, align 4
  %v2_91ad = load i32, i32* %arg1, align 4
  %v2_91b1 = sub i32 %v3_91a5, %v2_91ad
  %v2_91b5 = sdiv i32 %v2_91b1, 4
  %v3_91b8 = mul i32 %v2_91b5, -858993459
  store i1 false, i1* @cf, align 1
  %v3_91d3 = call i32 @unknown_14db4(i32 %tmp101, i32 %v2_91ad, i32 %v3_91b8)
  store i32 %tmp101, i32* @eax, align 4
  %v1_91de = call i32 @function_122a8(i32 %tmp101)
  ret i32 %v0_9197

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_91e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_91e8:
  %v0_91e8 = load i32, i32* @eax, align 4
  %v1_91e8 = add i32 %v0_91e8, 20
  %v10_91e8 = icmp eq i32 %v1_91e8, 0
  store i32 %v1_91e8, i32* @eax, align 4
  br i1 %v10_91e8, label %bb, label %dec_label_pc_91ef

bb:                                               ; preds = %dec_label_pc_91e8
  %v1_91ed = call i32 @function_920d()
  store i32 %v1_91ed, i32* @eax, align 4
  br label %dec_label_pc_91ef

dec_label_pc_91ef:                                ; preds = %bb, %dec_label_pc_91e8
  %v0_91ef = call i32 @function_9208()
  ret i32 %v0_91ef
}

define i32 @function_91f2() local_unnamed_addr {
dec_label_pc_91f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_91f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_91f2
}

define i32 @function_9208() local_unnamed_addr {
dec_label_pc_9208:
  %v0_9208 = load i32, i32* @eax, align 4
  ret i32 %v0_9208
}

define i32 @function_920d() local_unnamed_addr {
dec_label_pc_920d:
  %v0_9212 = load i32, i32* @eax, align 4
  ret i32 %v0_9212
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9214:
  ret i32 %arg1
}

define i32 @function_921e(i32 %arg1) local_unnamed_addr {
dec_label_pc_921e:
  %v0_921e = load i32, i32* @ebp, align 4
  %v1_921e = add i32 %v0_921e, 1
  store i32 %v1_921e, i32* @ebp, align 4
  %v0_9221 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9226 = add i32 %v0_921e, -11
  %v3_9226 = inttoptr i32 %v2_9226 to i32*
  store i32 %v0_9221, i32* %v3_9226, align 4
  %v0_922b = load i32, i32* @ebp, align 4
  %v1_922b = add i32 %v0_922b, -28
  %v2_922b = inttoptr i32 %v1_922b to i32*
  %v3_922b = load i32, i32* %v2_922b, align 4
  store i32 %v3_922b, i32* @eax, align 4
  %v1_922e = add i32 %v0_922b, -12
  %v2_922e = inttoptr i32 %v1_922e to i32*
  %v3_922e = load i32, i32* %v2_922e, align 4
  %v1_9231 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_9231 = icmp eq i32 %v1_9231, %v3_922e
  br i1 %v3_9231, label %bb, label %dec_label_pc_923a

bb:                                               ; preds = %dec_label_pc_921e
  %v1_9238 = call i32 @function_923f()
  br label %dec_label_pc_923a

dec_label_pc_923a:                                ; preds = %bb, %dec_label_pc_921e
  %v2_9238 = phi i32 [ %v1_9238, %bb ], [ %v3_922b, %dec_label_pc_921e ]
  ret i32 %v2_9238
}

define i32 @function_923f() local_unnamed_addr {
dec_label_pc_923f:
  %v0_9240 = load i32, i32* @eax, align 4
  ret i32 %v0_9240
}

define i32 @_ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9241:
  %v2_9271 = call i32 @unknown_14ec0(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9282

bb:                                               ; preds = %dec_label_pc_9241
  %v1_9280 = call i32 @function_9287()
  br label %dec_label_pc_9282

dec_label_pc_9282:                                ; preds = %bb, %dec_label_pc_9241
  %v2_9280 = phi i32 [ %v1_9280, %bb ], [ 0, %dec_label_pc_9241 ]
  ret i32 %v2_9280
}

define i32 @function_9287() local_unnamed_addr {
dec_label_pc_9287:
  %v0_9288 = load i32, i32* @eax, align 4
  ret i32 %v0_9288
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_928a:
  store i32 %arg1, i32* @eax, align 4
  %v1_92ad = call i32 @function_12332(i32 %arg1)
  %v1_92b5 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_92b5 = inttoptr i32 %v1_92b5 to i32*
  %v3_92b5 = load i32, i32* %v2_92b5, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_92c6 = call i32 @function_1235f(i32 %arg2, i32 %v3_92b5, i32 %v1_92ad)
  store i32 %arg2, i32* %v2_92b5, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_92e0

bb:                                               ; preds = %dec_label_pc_928a
  %v1_92de = call i32 @function_92e5()
  br label %dec_label_pc_92e0

dec_label_pc_92e0:                                ; preds = %bb, %dec_label_pc_928a
  %v2_92de = phi i32 [ %v1_92de, %bb ], [ 0, %dec_label_pc_928a ]
  ret i32 %v2_92de

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_92e5() local_unnamed_addr {
dec_label_pc_92e5:
  %v0_92e6 = load i32, i32* @eax, align 4
  ret i32 %v0_92e6
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_92e8:
  %v1_930b = call i32 @unknown_124fc(i32 %arg1)
  %v1_9313 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_9313 = inttoptr i32 %v1_9313 to i32*
  %v3_9313 = load i32, i32* %v2_9313, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_9324 = call i32 @function_12529(i32 %arg2, i32 %v3_9313, i32 %v1_930b)
  store i32 %arg2, i32* %v2_9313, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_933e

bb:                                               ; preds = %dec_label_pc_92e8
  %v1_933c = call i32 @function_9343()
  br label %dec_label_pc_933e

dec_label_pc_933e:                                ; preds = %bb, %dec_label_pc_92e8
  %v2_933c = phi i32 [ %v1_933c, %bb ], [ 0, %dec_label_pc_92e8 ]
  ret i32 %v2_933c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9343() local_unnamed_addr {
dec_label_pc_9343:
  %v0_9344 = load i32, i32* @eax, align 4
  ret i32 %v0_9344
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9346:
  %stack_var_-20 = alloca i32, align 4
  %v1_9366 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_9366 = inttoptr i32 %v1_9366 to i32*
  %v3_9366 = load i32, i32* %v2_9366, align 4
  store i32 %v3_9366, i32* %stack_var_-20, align 4
  %v2_936c = ptrtoint i32* %stack_var_-20 to i32
  %v2_9379 = call i32 @unknown_15008(i32 %arg1, i32 %v2_936c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_938d

bb:                                               ; preds = %dec_label_pc_9346
  %v1_938b = call i32 @function_9392()
  br label %dec_label_pc_938d

dec_label_pc_938d:                                ; preds = %bb, %dec_label_pc_9346
  %v2_938b = phi i32 [ %v1_938b, %bb ], [ %arg1, %dec_label_pc_9346 ]
  ret i32 %v2_938b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_9392() local_unnamed_addr {
dec_label_pc_9392:
  %v0_9393 = load i32, i32* @eax, align 4
  ret i32 %v0_9393
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_9396:
  %stack_var_-20 = alloca i32, align 4
  %v2_93b6 = load i32, i32* %arg2, align 4
  store i32 %v2_93b6, i32* %stack_var_-20, align 4
  %v2_93bb = ptrtoint i32* %stack_var_-20 to i32
  %v2_93c8 = call i32 @unknown_15058(i32 %arg1, i32 %v2_93bb)
  ret i32 %arg1
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_93e6:
  %stack_var_-20 = alloca i32, align 4
  %v1_9406 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_9406 = inttoptr i32 %v1_9406 to i32*
  %v3_9406 = load i32, i32* %v2_9406, align 4
  store i32 %v3_9406, i32* %stack_var_-20, align 4
  %v2_940c = ptrtoint i32* %stack_var_-20 to i32
  %v2_9419 = call i32 @unknown_15110(i32 %arg1, i32 %v2_940c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_942d

bb:                                               ; preds = %dec_label_pc_93e6
  %v1_942b = call i32 @function_9432()
  br label %dec_label_pc_942d

dec_label_pc_942d:                                ; preds = %bb, %dec_label_pc_93e6
  %v2_942b = phi i32 [ %v1_942b, %bb ], [ %arg1, %dec_label_pc_93e6 ]
  ret i32 %v2_942b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_9432() local_unnamed_addr {
dec_label_pc_9432:
  %v0_9433 = load i32, i32* @eax, align 4
  ret i32 %v0_9433
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_9436:
  %stack_var_-20 = alloca i32, align 4
  %v2_9456 = load i32, i32* %arg2, align 4
  store i32 %v2_9456, i32* %stack_var_-20, align 4
  %v2_945b = ptrtoint i32* %stack_var_-20 to i32
  %v2_9468 = call i32 @unknown_15160(i32 %arg1, i32 %v2_945b)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_947c

bb:                                               ; preds = %dec_label_pc_9436
  %v1_947a = call i32 @function_9481()
  br label %dec_label_pc_947c

dec_label_pc_947c:                                ; preds = %bb, %dec_label_pc_9436
  %v3_947a = phi i32 [ %v1_947a, %bb ], [ %arg1, %dec_label_pc_9436 ]
  ret i32 %v3_947a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_9481() local_unnamed_addr {
dec_label_pc_9481:
  %v0_9482 = load i32, i32* @eax, align 4
  ret i32 %v0_9482
}

define i32 @_ZNKSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9486:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_94ac

bb:                                               ; preds = %dec_label_pc_9486
  %v2_94aa = call i32 @function_94b1(i32 %arg1)
  br label %dec_label_pc_94ac

dec_label_pc_94ac:                                ; preds = %bb, %dec_label_pc_9486
  %v4_94aa = phi i32 [ %v2_94aa, %bb ], [ %arg1, %dec_label_pc_9486 ]
  ret i32 %v4_94aa
}

define i32 @function_94b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_94b1:
  %v0_94b2 = load i32, i32* @eax, align 4
  ret i32 %v0_94b2
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_94b4:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_94e5 = call i32 @unknown_152b0(i32 %tmp104, i32 %arg3)
  %v2_94f7 = call i32 @unknown_15310(i32 %tmp104, i32 %arg2)
  store i32 %v2_94f7, i32* %arg1, align 4
  ret i32 %tmp104

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
}

define i32 @function_950a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_950a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_950c = load i32, i32* @eax, align 4
  store i32 %v0_950c, i32* %stack_var_-4, align 4
  %v2_950d = add i32 %v0_950c, 139
  %v16_950d = urem i32 %v2_950d, 256
  %v18_950d = and i32 %v0_950c, -256
  %v19_950d = or i32 %v16_950d, %v18_950d
  store i32 %v19_950d, i32* %eax.global-to-local, align 4
  %v0_950f = load i32, i32* @ebp, align 4
  %v1_950f = add i32 %v0_950f, 1
  store i32 %v1_950f, i32* @ebp, align 4
  %v0_9512 = load i32, i32* @ebx, align 4
  %v1_9512 = add i32 %v0_9512, -796270507
  %v2_9512 = inttoptr i32 %v1_9512 to i8*
  %v3_9512 = load i8, i8* %v2_9512, align 1
  %v4_9512 = load i32, i32* @ecx, align 4
  %v5_9512 = trunc i32 %v4_9512 to i8
  %v6_9512 = or i8 %v5_9512, %v3_9512
  store i8 %v6_9512, i8* %v2_9512, align 1
  %v0_9518 = load i32, i32* %eax.global-to-local, align 4
  %v2_9518 = mul i32 %v0_9518, 4
  %v1_951b = load i32, i32* @edx, align 4
  %v2_951b = add i32 %v1_951b, %v2_9518
  %v2_951d = mul i32 %v2_951b, 4
  store i32 %v2_951d, i32* %eax.global-to-local, align 4
  %v0_9520 = load i32, i32* @ecx, align 4
  %v3_9520 = add i32 %v0_9520, %v2_951d
  %v0_9523 = load i32, i32* @ebp, align 4
  %v1_9523 = add i32 %v0_9523, -28
  %v2_9523 = inttoptr i32 %v1_9523 to i32*
  %v3_9523 = load i32, i32* %v2_9523, align 4
  store i32 %v3_9523, i32* %eax.global-to-local, align 4
  %v2_9526 = add i32 %v3_9523, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_9526 = inttoptr i32 %v2_9526 to i32*
  store i32 %v3_9520, i32* %v3_9526, align 4
  %v0_9529 = load i32, i32* @ebp, align 4
  %v1_9529 = add i32 %v0_9529, -12
  %v2_9529 = inttoptr i32 %v1_9529 to i32*
  %v3_9529 = load i32, i32* %v2_9529, align 4
  store i32 %v3_9529, i32* %eax.global-to-local, align 4
  %v1_952c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_952c = xor i32 %v1_952c, %v3_9529
  %v3_952c = icmp eq i32 %v2_952c, 0
  store i32 %v2_952c, i32* @eax, align 4
  br i1 %v3_952c, label %bb, label %dec_label_pc_9535

bb:                                               ; preds = %dec_label_pc_950a
  %v1_9533 = load i32, i32* %stack_var_-4, align 4
  %v2_9533 = call i32 @function_9553(i32 %v1_9533)
  store i32 %v2_9533, i32* @eax, align 4
  br label %dec_label_pc_9535

dec_label_pc_9535:                                ; preds = %bb, %dec_label_pc_950a
  %v0_9535 = call i32 @function_954e()
  store i32 %v0_9535, i32* %eax.global-to-local, align 4
  ret i32 %v0_9535

; uselistorder directives
  uselistorder i32 %v2_951d, { 1, 0 }
  uselistorder i32 %v0_950c, { 1, 0, 2 }
}

define i32 @function_9538() local_unnamed_addr {
dec_label_pc_9538:
  %eax.global-to-local = alloca i32, align 4
  %v0_9538 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9538
}

define i32 @function_954e() local_unnamed_addr {
dec_label_pc_954e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9553(i32 %arg1) local_unnamed_addr {
dec_label_pc_9553:
  store i32 %arg1, i32* @ebx, align 4
  %v0_9558 = load i32, i32* @eax, align 4
  ret i32 %v0_9558
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E() local_unnamed_addr {
dec_label_pc_9559:
  %eax.global-to-local = alloca i32, align 4
  %v5_9559 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_9559
}

define i32 @function_955a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_955a:
  %v2_955a = load i32, i32* @eax, align 4
  ret i32 %v2_955a
}

define i32 @function_955c(i32 %arg1) local_unnamed_addr {
dec_label_pc_955c:
  %v0_955f = load i32, i32* @ebp, align 4
  %v1_955f = add i32 %v0_955f, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_955f = inttoptr i32 %v1_955f to i32*
  %v3_955f = load i32, i32* %v2_955f, align 4
  %v2_9562 = add i32 %v0_955f, -28
  %v3_9562 = inttoptr i32 %v2_9562 to i32*
  store i32 %v3_955f, i32* %v3_9562, align 4
  %v0_9565 = load i32, i32* @ebp, align 4
  %v1_9565 = add i32 %v0_9565, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_9565 = inttoptr i32 %v1_9565 to i32*
  %v3_9565 = load i32, i32* %v2_9565, align 4
  %v2_9568 = add i32 %v0_9565, -32
  %v3_9568 = inttoptr i32 %v2_9568 to i32*
  store i32 %v3_9565, i32* %v3_9568, align 4
  %v0_956b = load i32, i32* @ebp, align 4
  %v1_956b = add i32 %v0_956b, 16
  %v2_956b = inttoptr i32 %v1_956b to i32*
  %v3_956b = load i32, i32* %v2_956b, align 4
  %v2_956e = add i32 %v0_956b, -36
  %v3_956e = inttoptr i32 %v2_956e to i32*
  store i32 %v3_956b, i32* %v3_956e, align 4
  %v0_9571 = load i32, i32* @ebp, align 4
  %v1_9571 = add i32 %v0_9571, 20
  %v2_9571 = inttoptr i32 %v1_9571 to i32*
  %v3_9571 = load i32, i32* %v2_9571, align 4
  %v2_9574 = add i32 %v0_9571, -40
  %v3_9574 = inttoptr i32 %v2_9574 to i32*
  store i32 %v3_9571, i32* %v3_9574, align 4
  %v0_9577 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_957d = load i32, i32* @ebp, align 4
  %v2_957d = add i32 %v1_957d, -12
  %v3_957d = inttoptr i32 %v2_957d to i32*
  store i32 %v0_9577, i32* %v3_957d, align 4
  %v0_9582 = load i32, i32* @ebp, align 4
  %v1_9582 = add i32 %v0_9582, -36
  %v2_9582 = inttoptr i32 %v1_9582 to i32*
  %v3_9582 = load i32, i32* %v2_9582, align 4
  %v1_9589 = add i32 %v0_9582, -32
  %v2_9589 = inttoptr i32 %v1_9589 to i32*
  %v3_9589 = load i32, i32* %v2_9589, align 4
  %v1_9590 = add i32 %v0_9582, -28
  %v2_9590 = inttoptr i32 %v1_9590 to i32*
  %v3_9590 = load i32, i32* %v2_9590, align 4
  %v3_9596 = call i32 @unknown_1540c(i32 %v3_9590, i32 %v3_9589, i32 %v3_9582)
  ret i32 %v3_9596
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_95ae:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutED1Ev() local_unnamed_addr {
dec_label_pc_95d8:
  %eax.global-to-local = alloca i32, align 4
  %v17_95db = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_95db
}

define i32 @function_95e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_95e0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_95e0 = load i32, i32* @ecx, align 4
  %v1_95e0 = add i32 %v0_95e0, -1587157947
  %v2_95e0 = inttoptr i32 %v1_95e0 to i8*
  %v3_95e0 = load i8, i8* %v2_95e0, align 1
  %v5_95e0 = trunc i32 %v0_95e0 to i8
  %v6_95e0 = or i8 %v3_95e0, %v5_95e0
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_95e0, i8* %v2_95e0, align 1
  %v0_95e6 = load i32, i32* @eax, align 4
  %v1_95e6 = trunc i32 %v0_95e6 to i8
  %v2_95e6 = load i1, i1* %cf.global-to-local, align 1
  %v3_95e6 = zext i1 %v2_95e6 to i8
  %v4_95e6 = add i8 %v3_95e6, %v1_95e6
  %v19_95e6 = icmp ule i8 %v4_95e6, %v1_95e6
  %v21_95e6 = icmp eq i1 %v2_95e6, %v19_95e6
  store i1 %v21_95e6, i1* %cf.global-to-local, align 1
  %v22_95e6 = zext i8 %v4_95e6 to i32
  %v24_95e6 = and i32 %v0_95e6, -256
  %v25_95e6 = or i32 %v22_95e6, %v24_95e6
  store i32 %v25_95e6, i32* %eax.global-to-local, align 4
  %v1_95e8 = inttoptr i32 %v25_95e6 to i8*
  %v2_95e8 = load i8, i8* %v1_95e8, align 1
  %v5_95e8 = add i8 %v2_95e8, %v4_95e6
  store i8 %v5_95e8, i8* %v1_95e8, align 1
  %v0_95ea = load i32, i32* %eax.global-to-local, align 4
  %v1_95ea = load i32, i32* @ebp, align 4
  %v2_95ea = add i32 %v1_95ea, -12
  %v3_95ea = inttoptr i32 %v2_95ea to i32*
  store i32 %v0_95ea, i32* %v3_95ea, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_95ef = load i32, i32* @ebp, align 4
  %v1_95ef = add i32 %v0_95ef, -12
  %v2_95ef = inttoptr i32 %v1_95ef to i32*
  %v3_95ef = load i32, i32* %v2_95ef, align 4
  store i32 %v3_95ef, i32* %eax.global-to-local, align 4
  %v1_95f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_95f2 = xor i32 %v1_95f2, %v3_95ef
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_95f2 = icmp eq i32 %v2_95f2, 0
  store i32 %v2_95f2, i32* @eax, align 4
  br i1 %v3_95f2, label %bb, label %dec_label_pc_95fb

bb:                                               ; preds = %dec_label_pc_95e0
  %v1_95f9 = call i32 @function_9600()
  store i32 %v1_95f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_95fb

dec_label_pc_95fb:                                ; preds = %bb, %dec_label_pc_95e0
  %v2_95f9 = phi i32 [ %v1_95f9, %bb ], [ %v2_95f2, %dec_label_pc_95e0 ]
  ret i32 %v2_95f9

; uselistorder directives
  uselistorder i8 %v4_95e6, { 0, 2, 1 }
  uselistorder i8 %v1_95e6, { 1, 0 }
}

define i32 @function_9600() local_unnamed_addr {
dec_label_pc_9600:
  %v0_9601 = load i32, i32* @eax, align 4
  ret i32 %v0_9601
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9602:
  %v1_9622 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_962f = call i32 @unknown_1555a(i32 %arg1, i32 %v1_9622)
  ret i32 %arg1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_964c:
  %v2_9666 = load i32, i32* %arg1, align 4
  store i32 %v2_9666, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9674

bb:                                               ; preds = %dec_label_pc_964c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_9672 = call i32 @function_9679(i32 %tmp100)
  br label %dec_label_pc_9674

dec_label_pc_9674:                                ; preds = %bb, %dec_label_pc_964c
  %v3_9672 = phi i32 [ %v2_9672, %bb ], [ %v2_9666, %dec_label_pc_964c ]
  ret i32 %v3_9672

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_9679(i32 %arg1) local_unnamed_addr {
dec_label_pc_9679:
  %v0_967a = load i32, i32* @eax, align 4
  ret i32 %v0_967a
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_967c:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_967c = load i32, i32* %ebp.global-to-local, align 4
  %v2_9696 = load i32, i32* %arg1, align 4
  %v1_9698 = add i32 %v2_9696, 20
  store i32 %v1_9698, i32* %arg1, align 4
  store i32 %v0_967c, i32* %ebp.global-to-local, align 4
  ret i32 %tmp100
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_96b6:
  %v2_96d0 = load i32, i32* %arg1, align 4
  store i32 %v2_96d0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_96de

bb:                                               ; preds = %dec_label_pc_96b6
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_96dc = call i32 @function_96e3(i32 %tmp100)
  br label %dec_label_pc_96de

dec_label_pc_96de:                                ; preds = %bb, %dec_label_pc_96b6
  %v3_96dc = phi i32 [ %v2_96dc, %bb ], [ %v2_96d0, %dec_label_pc_96b6 ]
  ret i32 %v3_96dc

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_96e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_96e3:
  %v0_96e4 = load i32, i32* @eax, align 4
  ret i32 %v0_96e4
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_96e6:
  %v1_9703 = call i32 @unknown_156ca(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9714

bb:                                               ; preds = %dec_label_pc_96e6
  %v1_9712 = call i32 @function_9719()
  br label %dec_label_pc_9714

dec_label_pc_9714:                                ; preds = %bb, %dec_label_pc_96e6
  %v2_9712 = phi i32 [ %v1_9712, %bb ], [ 0, %dec_label_pc_96e6 ]
  ret i32 %v2_9712
}

define i32 @function_9718(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9718:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9719() local_unnamed_addr {
dec_label_pc_9719:
  %v0_971a = load i32, i32* @eax, align 4
  ret i32 %v0_971a
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_971c:
  %v1_9739 = call i32 @unknown_156ae(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_974a

bb:                                               ; preds = %dec_label_pc_971c
  %v1_9748 = call i32 @function_974f()
  br label %dec_label_pc_974a

dec_label_pc_974a:                                ; preds = %bb, %dec_label_pc_971c
  %v2_9748 = phi i32 [ %v1_9748, %bb ], [ 0, %dec_label_pc_971c ]
  ret i32 %v2_9748
}

define i32 @function_974f() local_unnamed_addr {
dec_label_pc_974f:
  %v4_974f = load i32, i32* @eax, align 4
  ret i32 %v4_974f
}

define i32 @function_9750(i32 %arg1) local_unnamed_addr {
dec_label_pc_9750:
  %v0_9750 = load i32, i32* @eax, align 4
  ret i32 %v0_9750
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9752:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_976d = add i32 %tmp101, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_976d = inttoptr i32 %v1_976d to i32*
  %v3_976d = load i32, i32* %v2_976d, align 4
  %v2_9775 = load i32, i32* %arg1, align 4
  %v2_9779 = sub i32 %v3_976d, %v2_9775
  %v2_977d = sdiv i32 %v2_9779, 32
  %v3_9795 = call i32 @unknown_1576c(i32 %tmp101, i32 %v2_9775, i32 %v2_977d)
  %v1_97a0 = call i32 @unknown_12e38(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_97b1

bb:                                               ; preds = %dec_label_pc_9752
  %v1_97af = call i32 @function_97cf()
  store i32 %v1_97af, i32* @eax, align 4
  br label %dec_label_pc_97b1

dec_label_pc_97b1:                                ; preds = %bb, %dec_label_pc_9752
  %v0_97b1 = call i32 @function_97ca()
  ret i32 %v0_97b1

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_97b4() local_unnamed_addr {
dec_label_pc_97b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_97b4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_97b4
}

define i32 @function_97c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_97c2:
  %v3_97c2 = load i32, i32* @eax, align 4
  ret i32 %v3_97c2
}

define i32 @function_97ca() local_unnamed_addr {
dec_label_pc_97ca:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_97cf() local_unnamed_addr {
dec_label_pc_97cf:
  %v0_97d4 = load i32, i32* @eax, align 4
  ret i32 %v0_97d4
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_97d6:
  ret i32 %arg1
}

define i32 @function_97e6() local_unnamed_addr {
dec_label_pc_97e6:
  %v2_97e6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_97e6 = load i32, i32* @eax, align 4
  %v4_97e6 = trunc i32 %v3_97e6 to i8
  %v5_97e6 = add i8 %v4_97e6, %v2_97e6
  %v21_97e6 = inttoptr i32 %v3_97e6 to i8*
  store i8 %v5_97e6, i8* %v21_97e6, align 1
  %v0_97e8 = load i32, i32* @eax, align 4
  %v1_97e8 = load i32, i32* @ebp, align 4
  %v2_97e8 = add i32 %v1_97e8, -12
  %v3_97e8 = inttoptr i32 %v2_97e8 to i32*
  store i32 %v0_97e8, i32* %v3_97e8, align 4
  %v0_97ed = load i32, i32* @ebp, align 4
  %v1_97ed = add i32 %v0_97ed, -28
  %v2_97ed = inttoptr i32 %v1_97ed to i32*
  %v3_97ed = load i32, i32* %v2_97ed, align 4
  store i32 %v3_97ed, i32* @eax, align 4
  %v1_97f0 = add i32 %v0_97ed, -12
  %v2_97f0 = inttoptr i32 %v1_97f0 to i32*
  %v3_97f0 = load i32, i32* %v2_97f0, align 4
  %v1_97f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_97f3 = icmp eq i32 %v1_97f3, %v3_97f0
  br i1 %v3_97f3, label %bb, label %dec_label_pc_97fc

bb:                                               ; preds = %dec_label_pc_97e6
  %v1_97fa = call i32 @function_9801()
  br label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %bb, %dec_label_pc_97e6
  %v2_97fa = phi i32 [ %v1_97fa, %bb ], [ %v3_97ed, %dec_label_pc_97e6 ]
  ret i32 %v2_97fa
}

define i32 @function_9801() local_unnamed_addr {
dec_label_pc_9801:
  %v0_9802 = load i32, i32* @eax, align 4
  ret i32 %v0_9802
}

define i32 @_ZSt8_DestroyIP12CTransactionS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9803:
  ret i32 %arg1
}

define i32 @function_9836() local_unnamed_addr {
dec_label_pc_9836:
  %v2_9836 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_9836 = load i32, i32* @eax, align 4
  %v4_9836 = trunc i32 %v3_9836 to i8
  %v5_9836 = add i8 %v4_9836, %v2_9836
  %v21_9836 = inttoptr i32 %v3_9836 to i8*
  store i8 %v5_9836, i8* %v21_9836, align 1
  %v0_9838 = load i32, i32* @ebp, align 4
  %v1_9838 = add i32 %v0_9838, -12
  %v2_9838 = inttoptr i32 %v1_9838 to i32*
  %v3_9838 = load i32, i32* %v2_9838, align 4
  %v1_983b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_983b = xor i32 %v1_983b, %v3_9838
  %v3_983b = icmp eq i32 %v2_983b, 0
  store i32 %v2_983b, i32* @eax, align 4
  br i1 %v3_983b, label %bb, label %dec_label_pc_9844

bb:                                               ; preds = %dec_label_pc_9836
  %v1_9842 = call i32 @function_9849()
  br label %dec_label_pc_9844

dec_label_pc_9844:                                ; preds = %bb, %dec_label_pc_9836
  %v2_9842 = phi i32 [ %v1_9842, %bb ], [ %v2_983b, %dec_label_pc_9836 ]
  ret i32 %v2_9842
}

define i32 @function_9849() local_unnamed_addr {
dec_label_pc_9849:
  %v0_984a = load i32, i32* @eax, align 4
  ret i32 %v0_984a
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implD1Ev(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_984c:
  %v1_9869 = call i32 @unknown_15950(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_987a

bb:                                               ; preds = %dec_label_pc_984c
  %v1_9878 = call i32 @function_987f()
  br label %dec_label_pc_987a

dec_label_pc_987a:                                ; preds = %bb, %dec_label_pc_984c
  %v2_9878 = phi i32 [ %v1_9878, %bb ], [ 0, %dec_label_pc_984c ]
  ret i32 %v2_9878
}

define i32 @function_987f() local_unnamed_addr {
dec_label_pc_987f:
  %v0_9880 = load i32, i32* @eax, align 4
  ret i32 %v0_9880
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9882:
  %v1_989f = call i32 @unknown_15934(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_98b8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp101
}

define i32 @function_98fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_98fc:
  %v0_9900 = load i32, i32* @ebp, align 4
  %v1_9900 = add i32 %v0_9900, -28
  %v2_9900 = inttoptr i32 %v1_9900 to i32*
  %v3_9900 = load i32, i32* %v2_9900, align 4
  %v1_9906 = call i32 @unknown_13104(i32 %v3_9900)
  %v0_990b = load i32, i32* @ebp, align 4
  %v1_990b = add i32 %v0_990b, -12
  %v2_990b = inttoptr i32 %v1_990b to i32*
  %v3_990b = load i32, i32* %v2_990b, align 4
  %v1_990e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_990e = xor i32 %v1_990e, %v3_990b
  store i32 %arg1, i32* @ebx, align 4
  ret i32 %v2_990e
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_993c:
  ret i32 %arg1
}

define i32 @_ZSt8_DestroyIP7uint256S0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9969:
  %v2_9999 = call i32 @unknown_15af8(i32 %arg1, i32 %arg2)
  ret i32 0
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_99b2:
  %v1_99d5 = call i32 @unknown_13188(i32 %arg1)
  %v1_99dd = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_99dd = inttoptr i32 %v1_99dd to i32*
  %v3_99dd = load i32, i32* %v2_99dd, align 4
  %v3_99ee = call i32 @unknown_131b5(i32 %arg2, i32 %v3_99dd, i32 %v1_99d5)
  store i32 %arg2, i32* %v2_99dd, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9a08

bb:                                               ; preds = %dec_label_pc_99b2
  %v1_9a06 = call i32 @function_9a0d()
  br label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %bb, %dec_label_pc_99b2
  %v2_9a06 = phi i32 [ %v1_9a06, %bb ], [ 0, %dec_label_pc_99b2 ]
  ret i32 %v2_9a06

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9a0d() local_unnamed_addr {
dec_label_pc_9a0d:
  %v0_9a0e = load i32, i32* @eax, align 4
  ret i32 %v0_9a0e
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9a10:
  %v1_9a33 = call i32 @unknown_1334c(i32 %arg1)
  %v1_9a3b = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_9a3b = inttoptr i32 %v1_9a3b to i32*
  %v3_9a3b = load i32, i32* %v2_9a3b, align 4
  %v3_9a4c = call i32 @unknown_13379(i32 %arg2, i32 %v3_9a3b, i32 %v1_9a33)
  store i32 %arg2, i32* %v2_9a3b, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9a6e:
  %v1_9a8b = call i32 @unknown_15c92(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9a9c

bb:                                               ; preds = %dec_label_pc_9a6e
  %v1_9a9a = call i32 @function_9aa1()
  br label %dec_label_pc_9a9c

dec_label_pc_9a9c:                                ; preds = %bb, %dec_label_pc_9a6e
  %v2_9a9a = phi i32 [ %v1_9a9a, %bb ], [ 0, %dec_label_pc_9a6e ]
  ret i32 %v2_9a9a
}

define i32 @function_9aa1() local_unnamed_addr {
dec_label_pc_9aa1:
  %v0_9aa2 = load i32, i32* @eax, align 4
  ret i32 %v0_9aa2
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9aa4:
  %v1_9ac1 = call i32 @unknown_15c76(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9ada:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_9af5 = add i32 %tmp102, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_9af5 = inttoptr i32 %v1_9af5 to i32*
  %v3_9af5 = load i32, i32* %v2_9af5, align 4
  %v2_9afd = load i32, i32* %arg1, align 4
  %v2_9b01 = sub i32 %v3_9af5, %v2_9afd
  %v2_9b05 = ashr i32 %v2_9b01, ptrtoint (i64* @global_var_3.894 to i32)
  %v4_9b1d = call i32 @unknown_15d34(i32 %tmp102, i32 %v2_9afd, i32 %v2_9b05)
  %v1_9b28 = call i32 @unknown_13548(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9b39

bb:                                               ; preds = %dec_label_pc_9ada
  %v1_9b37 = call i32 @function_9b57()
  store i32 %v1_9b37, i32* @eax, align 4
  br label %dec_label_pc_9b39

dec_label_pc_9b39:                                ; preds = %bb, %dec_label_pc_9ada
  %v0_9b39 = call i32 @function_9b52()
  ret i32 %v0_9b39

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 2, 0 }
}

define i32 @function_9b3c() local_unnamed_addr {
dec_label_pc_9b3c:
  %eax.global-to-local = alloca i32, align 4
  %v0_9b3c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9b3c
}

define i32 @function_9b48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9b48:
  %v0_9b48 = load i32, i32* @ebx, align 4
  ret i32 %v0_9b48
}

define i32 @function_9b52() local_unnamed_addr {
dec_label_pc_9b52:
  %v0_9b52 = load i32, i32* @eax, align 4
  ret i32 %v0_9b52
}

define i32 @function_9b57() local_unnamed_addr {
dec_label_pc_9b57:
  %v0_9b5c = load i32, i32* @eax, align 4
  ret i32 %v0_9b5c
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9b5e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9b84

bb:                                               ; preds = %dec_label_pc_9b5e
  %v2_9b82 = call i32 @function_9b89(i32 %arg1)
  br label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %bb, %dec_label_pc_9b5e
  %v3_9b82 = phi i32 [ %v2_9b82, %bb ], [ %arg1, %dec_label_pc_9b5e ]
  ret i32 %v3_9b82
}

define i32 @function_9b89(i32 %arg1) local_unnamed_addr {
dec_label_pc_9b89:
  %v0_9b8a = load i32, i32* @eax, align 4
  ret i32 %v0_9b8a
}

define i32 @_ZSt8_DestroyIP12CDNSSeedDataS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9b8b:
  %v2_9bbb = call i32 @unknown_15e3a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9bcc

bb:                                               ; preds = %dec_label_pc_9b8b
  %v1_9bca = call i32 @function_9bd1()
  br label %dec_label_pc_9bcc

dec_label_pc_9bcc:                                ; preds = %bb, %dec_label_pc_9b8b
  %v2_9bca = phi i32 [ %v1_9bca, %bb ], [ 0, %dec_label_pc_9b8b ]
  ret i32 %v2_9bca
}

define i32 @function_9bd1() local_unnamed_addr {
dec_label_pc_9bd1:
  %v0_9bd2 = load i32, i32* @eax, align 4
  ret i32 %v0_9bd2
}

define i32 @_ZNSt12_Vector_baseI8CAddressSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9bd4:
  ret i32 %arg1
}

define i32 @function_9bde(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9bde:
  %ebp.global-to-local = alloca i32, align 4
  %v0_9bde = load i32, i32* @ebp, align 4
  %v1_9bde = add i32 %v0_9bde, 1
  store i32 %v1_9bde, i32* %ebp.global-to-local, align 4
  %v0_9be1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9be6 = add i32 %v0_9bde, -11
  %v3_9be6 = inttoptr i32 %v2_9be6 to i32*
  store i32 %v0_9be1, i32* %v3_9be6, align 4
  %v0_9beb = load i32, i32* %ebp.global-to-local, align 4
  %v1_9beb = add i32 %v0_9beb, -28
  %v2_9beb = inttoptr i32 %v1_9beb to i32*
  %v3_9beb = load i32, i32* %v2_9beb, align 4
  %v1_9bf1 = call i32 @unknown_15f18(i32 %v3_9beb)
  %v1_9bf6 = add i32 %v0_9beb, -12
  %v2_9bf6 = inttoptr i32 %v1_9bf6 to i32*
  %v3_9bf6 = load i32, i32* %v2_9bf6, align 4
  %v1_9bf9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9bf9 = xor i32 %v1_9bf9, %v3_9bf6
  %v1_9c07 = inttoptr i32 %v0_9beb to i32*
  %v2_9c07 = load i32, i32* %v1_9c07, align 4
  store i32 %v2_9c07, i32* @ebp, align 4
  ret i32 %v2_9bf9

; uselistorder directives
  uselistorder i32 %v0_9beb, { 1, 0, 2 }
}

define i32 @_ZNSt12_Vector_baseI8CAddressSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9c0a:
  %v1_9c27 = call i32 @unknown_15efc(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9c38

bb:                                               ; preds = %dec_label_pc_9c0a
  %v1_9c36 = call i32 @function_9c3d()
  br label %dec_label_pc_9c38

dec_label_pc_9c38:                                ; preds = %bb, %dec_label_pc_9c0a
  %v2_9c36 = phi i32 [ %v1_9c36, %bb ], [ 0, %dec_label_pc_9c0a ]
  ret i32 %v2_9c36
}

define i32 @function_9c3d() local_unnamed_addr {
dec_label_pc_9c3d:
  %v0_9c3e = load i32, i32* @eax, align 4
  ret i32 %v0_9c3e
}

define i32 @_ZNSt12_Vector_baseI8CAddressSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9c40:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_9c5b = add i32 %tmp101, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_9c5b = inttoptr i32 %v1_9c5b to i32*
  %v3_9c5b = load i32, i32* %v2_9c5b, align 4
  %v2_9c63 = load i32, i32* %arg1, align 4
  %v2_9c67 = sub i32 %v3_9c5b, %v2_9c63
  %v2_9c6b = ashr i32 %v2_9c67, ptrtoint (i64* @global_var_3.894 to i32)
  %v3_9c6e = mul i32 %v2_9c6b, -858993459
  %v3_9c89 = call i32 @unknown_15fba(i32 %tmp101, i32 %v2_9c63, i32 %v3_9c6e)
  %v1_9c94 = call i32 @unknown_13814(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9ca5

bb:                                               ; preds = %dec_label_pc_9c40
  %v1_9ca3 = call i32 @function_9cc3()
  store i32 %v1_9ca3, i32* @eax, align 4
  br label %dec_label_pc_9ca5

dec_label_pc_9ca5:                                ; preds = %bb, %dec_label_pc_9c40
  %v0_9ca5 = call i32 @function_9cbe()
  ret i32 %v0_9ca5

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_9ca8() local_unnamed_addr {
dec_label_pc_9ca8:
  %eax.global-to-local = alloca i32, align 4
  %v0_9ca8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9ca8
}

define i32 @function_9cbe() local_unnamed_addr {
dec_label_pc_9cbe:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9cc3() local_unnamed_addr {
dec_label_pc_9cc3:
  %v0_9cc8 = load i32, i32* @eax, align 4
  ret i32 %v0_9cc8
}

define i32 @_ZNSt12_Vector_baseI8CAddressSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9cca:
  ret i32 %arg1
}

define i32 @function_9cf4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9cf4:
  %v0_9cf4 = load i32, i32* @ecx, align 4
  %v1_9cf4 = add i32 %v0_9cf4, -1
  store i32 %v1_9cf4, i32* @ecx, align 4
  %v0_9cf6 = load i32, i32* @eax, align 4
  ret i32 %v0_9cf6
}

define i32 @_ZSt8_DestroyIP8CAddressS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9cf7:
  %v2_9d27 = call i32 @unknown_160c6(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9d38

bb:                                               ; preds = %dec_label_pc_9cf7
  %v1_9d36 = call i32 @function_9d3d()
  br label %dec_label_pc_9d38

dec_label_pc_9d38:                                ; preds = %bb, %dec_label_pc_9cf7
  %v2_9d36 = phi i32 [ %v1_9d36, %bb ], [ 0, %dec_label_pc_9cf7 ]
  ret i32 %v2_9d36
}

define i32 @function_9d3d() local_unnamed_addr {
dec_label_pc_9d3d:
  %v0_9d3e = load i32, i32* @eax, align 4
  ret i32 %v0_9d3e
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9d40:
  %v1_9d60 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_9d6d = call i32 @unknown_16152(i32 %arg1, i32 %v1_9d60)
  ret i32 %arg1
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9d8a:
  ret i32 %arg3
}

define i32 @function_9dc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9dc0:
  %v0_9dc0 = load i32, i32* @ebx, align 4
  %v1_9dc0 = add i32 %v0_9dc0, 1149886533
  %v2_9dc0 = inttoptr i32 %v1_9dc0 to i8*
  %v3_9dc0 = load i8, i8* %v2_9dc0, align 1
  %v4_9dc0 = load i32, i32* @ecx, align 4
  %v5_9dc0 = trunc i32 %v4_9dc0 to i8
  %v6_9dc0 = or i8 %v5_9dc0, %v3_9dc0
  store i8 %v6_9dc0, i8* %v2_9dc0, align 1
  %v0_9dc8 = load i32, i32* @ebp, align 4
  %v1_9dc8 = add i32 %v0_9dc8, -28
  %v2_9dc8 = inttoptr i32 %v1_9dc8 to i32*
  %v3_9dc8 = load i32, i32* %v2_9dc8, align 4
  %v1_9dce = call i32 @unknown_161d6(i32 %v3_9dc8)
  %v0_9dd3 = load i32, i32* @ebp, align 4
  %v1_9dd3 = add i32 %v0_9dd3, -12
  %v2_9dd3 = inttoptr i32 %v1_9dd3 to i32*
  %v3_9dd3 = load i32, i32* %v2_9dd3, align 4
  %v1_9dd6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9dd6 = xor i32 %v1_9dd6, %v3_9dd3
  %v3_9dd6 = icmp eq i32 %v2_9dd6, 0
  store i32 %v2_9dd6, i32* @eax, align 4
  br i1 %v3_9dd6, label %bb, label %dec_label_pc_9ddf

bb:                                               ; preds = %dec_label_pc_9dc0
  %v1_9ddd = call i32 @function_9de4()
  br label %dec_label_pc_9ddf

dec_label_pc_9ddf:                                ; preds = %bb, %dec_label_pc_9dc0
  %v2_9ddd = phi i32 [ %v1_9ddd, %bb ], [ %v2_9dd6, %dec_label_pc_9dc0 ]
  ret i32 %v2_9ddd
}

define i32 @function_9de4() local_unnamed_addr {
dec_label_pc_9de4:
  %v0_9de5 = load i32, i32* @eax, align 4
  ret i32 %v0_9de5
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9de6:
  %v8_9e2a = call i32 @unknown_166ba(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9e3b

bb:                                               ; preds = %dec_label_pc_9de6
  %v1_9e39 = call i32 @function_9e40()
  br label %dec_label_pc_9e3b

dec_label_pc_9e3b:                                ; preds = %bb, %dec_label_pc_9de6
  %v2_9e39 = phi i32 [ %v1_9e39, %bb ], [ 0, %dec_label_pc_9de6 ]
  ret i32 %v2_9e39

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9e40() local_unnamed_addr {
dec_label_pc_9e40:
  %v0_9e41 = load i32, i32* @eax, align 4
  ret i32 %v0_9e41
}

define i32 @_ZN12CTransactionC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9e42:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_9e63 = inttoptr i32 %arg2 to i32*
  %v2_9e63 = load i32, i32* %v1_9e63, align 4
  store i32 %v2_9e63, i32* %arg1, align 4
  %v1_9e6d = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v1_9e73 = add i32 %tmp103, ptrtoint (i16** @global_var_4.882 to i32)
  %v4_9e7d = call i32 @unknown_16bf2(i32 %v1_9e73, i32 %v1_9e6d)
  %v1_9e85 = add i32 %arg2, 16
  %v1_9e8b = add i32 %tmp103, 16
  store i32 %v1_9e8b, i32* @eax, align 4
  %v4_9e95 = call i32 @function_1112e(i32 %v1_9e8b, i32 %v1_9e85)
  %v1_9e9d = add i32 %arg2, ptrtoint (i32* @global_var_1c.886 to i32)
  %v2_9e9d = inttoptr i32 %v1_9e9d to i32*
  %v3_9e9d = load i32, i32* %v2_9e9d, align 4
  %v2_9ea3 = add i32 %tmp103, ptrtoint (i32* @global_var_1c.886 to i32)
  %v3_9ea3 = inttoptr i32 %v2_9ea3 to i32*
  store i32 %v3_9e9d, i32* %v3_9ea3, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9eb2

bb:                                               ; preds = %dec_label_pc_9e42
  %v1_9eb0 = call i32 @function_9ed3()
  store i32 %v1_9eb0, i32* @eax, align 4
  br label %dec_label_pc_9eb2

dec_label_pc_9eb2:                                ; preds = %bb, %dec_label_pc_9e42
  %v0_9eb2 = call i32 @function_9ece()
  ret i32 %v0_9eb2

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_9eb5() local_unnamed_addr {
dec_label_pc_9eb5:
  %eax.global-to-local = alloca i32, align 4
  %v0_9eb5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9eb5
}

define i32 @function_9ece() local_unnamed_addr {
dec_label_pc_9ece:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9ed3() local_unnamed_addr {
dec_label_pc_9ed3:
  %v0_9ed8 = load i32, i32* @eax, align 4
  ret i32 %v0_9ed8
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE9constructEPS1_RKS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9eda:
  %v2_9f0e = call i32 @function_a354(i32 ptrtoint (i32* @mainParams to i32), i32 %arg2)
  %v1_9f15 = icmp eq i32 %v2_9f0e, 0
  br i1 %v1_9f15, label %bb, label %dec_label_pc_9f19

bb:                                               ; preds = %dec_label_pc_9eda
  %v1_9f17 = call i32 @function_9f42()
  br label %dec_label_pc_9f19

dec_label_pc_9f19:                                ; preds = %bb, %dec_label_pc_9eda
  %v2_9f23 = call i32 @unknown_13d1c(i32 %v2_9f0e, i32 %arg3)
  %v0_9f28 = call i32 @function_9f42()
  ret i32 %v0_9f28

; uselistorder directives
  uselistorder i32 ()* @function_9f42, { 1, 0 }
}

define i32 @function_9f42() local_unnamed_addr {
dec_label_pc_9f42:
  %v0_9f42 = load i32, i32* @ebp, align 4
  %v1_9f42 = add i32 %v0_9f42, -28
  %v2_9f42 = inttoptr i32 %v1_9f42 to i32*
  %v3_9f42 = load i32, i32* %v2_9f42, align 4
  %v1_9f45 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9f45 = xor i32 %v1_9f45, %v3_9f42
  %v3_9f45 = icmp eq i32 %v2_9f45, 0
  store i32 %v2_9f45, i32* @eax, align 4
  br i1 %v3_9f45, label %bb, label %dec_label_pc_9f4e

bb:                                               ; preds = %dec_label_pc_9f42
  %v1_9f4c = call i32 @function_9f53()
  br label %dec_label_pc_9f4e

dec_label_pc_9f4e:                                ; preds = %bb, %dec_label_pc_9f42
  %v2_9f4c = phi i32 [ %v1_9f4c, %bb ], [ %v2_9f45, %dec_label_pc_9f42 ]
  ret i32 %v2_9f4c
}

define i32 @function_9f53() local_unnamed_addr {
dec_label_pc_9f53:
  %v0_9f5a = load i32, i32* @eax, align 4
  ret i32 %v0_9f5a
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9f5c:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-84, align 4
  %v1_9f84 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_9f84 = inttoptr i32 %v1_9f84 to i32*
  %v3_9f84 = load i32, i32* %v2_9f84, align 4
  %v1_9f8a = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_9f8a = inttoptr i32 %v1_9f8a to i32*
  %v3_9f8a = load i32, i32* %v2_9f8a, align 4
  %v12_9f8d = icmp eq i32 %v3_9f84, %v3_9f8a
  br i1 %v12_9f8d, label %dec_label_pc_a031, label %dec_label_pc_9f95

dec_label_pc_9f95:                                ; preds = %dec_label_pc_9f5c
  %v3_9f98 = load i32, i32* %v2_9f84, align 4
  %v1_9f9b = add i32 %v3_9f98, -32
  %v4_9fb2 = call i32 @unknown_13e36(i32 %arg1, i32 %v3_9f98, i32 %v1_9f9b)
  %v3_9fba = load i32, i32* %v2_9f84, align 4
  %v1_9fbd = add i32 %v3_9fba, ptrtoint (i32* @mainParams to i32)
  store i32 %v1_9fbd, i32* %v2_9f84, align 4
  %v2_9fcd = ptrtoint i32* %stack_var_-68 to i32
  %v2_9fd3 = call i32 @unknown_13d9e(i32 %v2_9fcd, i32 %arg3)
  %v3_9fdb = load i32, i32* %v2_9f84, align 4
  %v1_9fde = add i32 %v3_9fdb, -32
  store i32 %v1_9fde, i32* %esi.global-to-local, align 4
  %v3_9fe4 = load i32, i32* %v2_9f84, align 4
  %v1_9fe7 = add i32 %v3_9fe4, -64
  %v2_9fea = ptrtoint i32* %stack_var_-84 to i32
  %v1_9ff0 = call i32 @unknown_16de6(i32 %v2_9fea)
  %v1_9ff5 = inttoptr i32 %v1_9ff0 to i32*
  %v2_9ff5 = load i32, i32* %v1_9ff5, align 4
  %v0_9ff7 = load i32, i32* %esi.global-to-local, align 4
  %v4_a002 = call i32 @unknown_16e13(i32 %v2_9ff5, i32 %v1_9fe7, i32 %v0_9ff7)
  %v1_a00d = call i32 @unknown_16e7a(i32 %v2_9fea)
  %v2_a01c = call i32 @unknown_141b6(i32 %v1_a00d, i32 %v2_9fcd)
  store i32 %v2_9fcd, i32* @eax, align 4
  %v1_a027 = call i32 @function_de2e(i32 %v2_9fcd)
  %v0_a02c = call i32 @function_a241()
  ret i32 %v0_a02c

dec_label_pc_a031:                                ; preds = %dec_label_pc_9f5c
  %v4_a047 = call i32 @unknown_173bc(i32 %arg1, i32 1, i32 ptrtoint ([22 x i8]* @global_var_1e1e.919 to i32))
  %v2_a04f = ptrtoint i32* %stack_var_-36 to i32
  %v2_a05c = call i32 @unknown_1748e(i32 %v2_a04f, i32 %arg1)
  ret i32 %v2_a05c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3 }
}

define i32 @function_a064(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a064:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_a064 = load i32, i32* @ebp, align 4
  %v1_a064 = add i32 %v0_a064, -32
  %v1_a06b = add i32 %v0_a064, -80
  %v2_a071 = call i32 @unknown_174d5(i32 %v1_a06b, i32 %v1_a064)
  %v1_a076 = load i32, i32* @ebp, align 4
  %v2_a076 = add i32 %v1_a076, -20
  %v3_a076 = inttoptr i32 %v2_a076 to i32*
  store i32 %v2_a071, i32* %v3_a076, align 4
  %v0_a079 = load i32, i32* @ebp, align 4
  %v1_a079 = add i32 %v0_a079, -76
  %v2_a079 = inttoptr i32 %v1_a079 to i32*
  %v3_a079 = load i32, i32* %v2_a079, align 4
  %v1_a07c = add i32 %v0_a079, -24
  %v2_a07c = inttoptr i32 %v1_a07c to i32*
  %v3_a07c = load i32, i32* %v2_a07c, align 4
  %v2_a086 = call i32 @unknown_17530(i32 %v3_a079, i32 %v3_a07c)
  %v1_a08b = load i32, i32* @ebp, align 4
  %v2_a08b = add i32 %v1_a08b, -16
  %v3_a08b = inttoptr i32 %v2_a08b to i32*
  store i32 %v2_a086, i32* %v3_a08b, align 4
  %v0_a08e = load i32, i32* @ebp, align 4
  %v1_a08e = add i32 %v0_a08e, -16
  %v2_a08e = inttoptr i32 %v1_a08e to i32*
  %v3_a08e = load i32, i32* %v2_a08e, align 4
  %v2_a091 = add i32 %v0_a08e, -28
  %v3_a091 = inttoptr i32 %v2_a091 to i32*
  store i32 %v3_a08e, i32* %v3_a091, align 4
  %v0_a094 = load i32, i32* @ebp, align 4
  %v1_a094 = add i32 %v0_a094, -20
  %v2_a094 = inttoptr i32 %v1_a094 to i32*
  %v3_a094 = load i32, i32* %v2_a094, align 4
  %v2_a097 = mul i32 %v3_a094, 32
  %v2_a09c = add i32 %v0_a094, -16
  %v3_a09c = inttoptr i32 %v2_a09c to i32*
  %v4_a09c = load i32, i32* %v3_a09c, align 4
  %v5_a09c = add i32 %v4_a09c, %v2_a097
  %v1_a09f = add i32 %v0_a094, -76
  %v2_a09f = inttoptr i32 %v1_a09f to i32*
  %v3_a09f = load i32, i32* %v2_a09f, align 4
  %v1_a0a2 = add i32 %v0_a094, -84
  %v2_a0a2 = inttoptr i32 %v1_a0a2 to i32*
  %v3_a0a2 = load i32, i32* %v2_a0a2, align 4
  %v3_a0b0 = call i32 @unknown_13e36(i32 %v3_a09f, i32 %v5_a09c, i32 %v3_a0a2)
  %v0_a0b5 = load i32, i32* @ebp, align 4
  %v1_a0b5 = add i32 %v0_a0b5, -28
  %v2_a0b5 = inttoptr i32 %v1_a0b5 to i32*
  store i32 0, i32* %v2_a0b5, align 4
  %v0_a0bc = load i32, i32* @ebp, align 4
  %v1_a0bc = add i32 %v0_a0bc, -76
  %v2_a0bc = inttoptr i32 %v1_a0bc to i32*
  %v3_a0bc = load i32, i32* %v2_a0bc, align 4
  %v1_a0c2 = call i32 @unknown_13732(i32 %v3_a0bc)
  store i32 %v1_a0c2, i32* %ebx.global-to-local, align 4
  %v0_a0c9 = load i32, i32* @ebp, align 4
  %v1_a0c9 = add i32 %v0_a0c9, -80
  %v1_a0cf = call i32 @unknown_16de6(i32 %v1_a0c9)
  %v1_a0d4 = inttoptr i32 %v1_a0cf to i32*
  %v2_a0d4 = load i32, i32* %v1_a0d4, align 4
  %v0_a0d6 = load i32, i32* @ebp, align 4
  %v1_a0d6 = add i32 %v0_a0d6, -76
  %v2_a0d6 = inttoptr i32 %v1_a0d6 to i32*
  %v3_a0d6 = load i32, i32* %v2_a0d6, align 4
  %v1_a0d9 = inttoptr i32 %v3_a0d6 to i32*
  %v2_a0d9 = load i32, i32* %v1_a0d9, align 4
  %v0_a0db = load i32, i32* %ebx.global-to-local, align 4
  %v1_a0df = add i32 %v0_a0d6, -16
  %v2_a0df = inttoptr i32 %v1_a0df to i32*
  %v3_a0df = load i32, i32* %v2_a0df, align 4
  %v4_a0ed = call i32 @unknown_17587(i32 %v2_a0d9, i32 %v2_a0d4, i32 %v3_a0df, i32 %v0_a0db)
  %v1_a0f2 = load i32, i32* @ebp, align 4
  %v2_a0f2 = add i32 %v1_a0f2, -28
  %v3_a0f2 = inttoptr i32 %v2_a0f2 to i32*
  store i32 %v4_a0ed, i32* %v3_a0f2, align 4
  %v0_a0f5 = load i32, i32* @ebp, align 4
  %v1_a0f5 = add i32 %v0_a0f5, -28
  %v2_a0f5 = inttoptr i32 %v1_a0f5 to i32*
  %v3_a0f5 = load i32, i32* %v2_a0f5, align 4
  %v4_a0f5 = add i32 %v3_a0f5, ptrtoint (i32* @mainParams to i32)
  store i32 %v4_a0f5, i32* %v2_a0f5, align 4
  %v0_a0f9 = load i32, i32* @ebp, align 4
  %v1_a0f9 = add i32 %v0_a0f9, -76
  %v2_a0f9 = inttoptr i32 %v1_a0f9 to i32*
  %v3_a0f9 = load i32, i32* %v2_a0f9, align 4
  %v1_a0ff = call i32 @unknown_13732(i32 %v3_a0f9)
  store i32 %v1_a0ff, i32* %ebx.global-to-local, align 4
  %v0_a106 = load i32, i32* @ebp, align 4
  %v1_a106 = add i32 %v0_a106, -76
  %v2_a106 = inttoptr i32 %v1_a106 to i32*
  %v3_a106 = load i32, i32* %v2_a106, align 4
  %v1_a109 = add i32 %v3_a106, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_a109 = inttoptr i32 %v1_a109 to i32*
  %v3_a109 = load i32, i32* %v2_a109, align 4
  store i32 %v3_a109, i32* %esi.global-to-local, align 4
  %v1_a10c = add i32 %v0_a106, -80
  %v1_a112 = call i32 @unknown_16de6(i32 %v1_a10c)
  %v1_a117 = inttoptr i32 %v1_a112 to i32*
  %v2_a117 = load i32, i32* %v1_a117, align 4
  %v0_a119 = load i32, i32* %ebx.global-to-local, align 4
  %v0_a11d = load i32, i32* @ebp, align 4
  %v1_a11d = add i32 %v0_a11d, -28
  %v2_a11d = inttoptr i32 %v1_a11d to i32*
  %v3_a11d = load i32, i32* %v2_a11d, align 4
  %v0_a124 = load i32, i32* %esi.global-to-local, align 4
  %v4_a12b = call i32 @unknown_17587(i32 %v2_a117, i32 %v0_a124, i32 %v3_a11d, i32 %v0_a119)
  %v1_a130 = load i32, i32* @ebp, align 4
  %v2_a130 = add i32 %v1_a130, -28
  %v3_a130 = inttoptr i32 %v2_a130 to i32*
  store i32 %v4_a12b, i32* %v3_a130, align 4
  %v0_a133 = load i32, i32* @ebp, align 4
  %v1_a133 = add i32 %v0_a133, -76
  %v2_a133 = inttoptr i32 %v1_a133 to i32*
  %v3_a133 = load i32, i32* %v2_a133, align 4
  %v1_a139 = call i32 @unknown_13732(i32 %v3_a133)
  %v0_a13e = load i32, i32* @ebp, align 4
  %v1_a13e = add i32 %v0_a13e, -76
  %v2_a13e = inttoptr i32 %v1_a13e to i32*
  %v3_a144 = load i32, i32* %v2_a13e, align 4
  %v1_a147 = inttoptr i32 %v3_a144 to i32*
  %v2_a147 = load i32, i32* %v1_a147, align 4
  %v1_a154 = call i32 @unknown_1375f(i32 %v2_a147)
  %v0_a159 = load i32, i32* @ebp, align 4
  %v1_a159 = add i32 %v0_a159, -76
  %v2_a159 = inttoptr i32 %v1_a159 to i32*
  %v3_a159 = load i32, i32* %v2_a159, align 4
  %v1_a15c = add i32 %v3_a159, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_a15c = inttoptr i32 %v1_a15c to i32*
  %v3_a15c = load i32, i32* %v2_a15c, align 4
  %v1_a164 = inttoptr i32 %v3_a159 to i32*
  %v2_a164 = load i32, i32* %v1_a164, align 4
  %v2_a168 = sub i32 %v3_a15c, %v2_a164
  %v2_a16c = sdiv i32 %v2_a168, 32
  %v3_a171 = load i32, i32* %v2_a159, align 4
  %v1_a174 = inttoptr i32 %v3_a171 to i32*
  %v2_a174 = load i32, i32* %v1_a174, align 4
  %v3_a184 = call i32 @unknown_15f76(i32 %v3_a171, i32 %v2_a174, i32 %v2_a16c)
  %v0_a189 = load i32, i32* @ebp, align 4
  %v1_a189 = add i32 %v0_a189, -76
  %v2_a189 = inttoptr i32 %v1_a189 to i32*
  %v3_a189 = load i32, i32* %v2_a189, align 4
  %v1_a18c = add i32 %v0_a189, -16
  %v2_a18c = inttoptr i32 %v1_a18c to i32*
  %v3_a18c = load i32, i32* %v2_a18c, align 4
  %v2_a18f = inttoptr i32 %v3_a189 to i32*
  store i32 %v3_a18c, i32* %v2_a18f, align 4
  %v0_a191 = load i32, i32* @ebp, align 4
  %v1_a191 = add i32 %v0_a191, -76
  %v2_a191 = inttoptr i32 %v1_a191 to i32*
  %v3_a191 = load i32, i32* %v2_a191, align 4
  %v1_a194 = add i32 %v0_a191, -28
  %v2_a194 = inttoptr i32 %v1_a194 to i32*
  %v3_a194 = load i32, i32* %v2_a194, align 4
  %v2_a197 = add i32 %v3_a191, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_a197 = inttoptr i32 %v2_a197 to i32*
  store i32 %v3_a194, i32* %v3_a197, align 4
  %v0_a19a = load i32, i32* @ebp, align 4
  %v1_a19a = add i32 %v0_a19a, -24
  %v2_a19a = inttoptr i32 %v1_a19a to i32*
  %v3_a19a = load i32, i32* %v2_a19a, align 4
  %v2_a19d = mul i32 %v3_a19a, 32
  %v2_a1a2 = add i32 %v0_a19a, -16
  %v3_a1a2 = inttoptr i32 %v2_a1a2 to i32*
  %v4_a1a2 = load i32, i32* %v3_a1a2, align 4
  %v5_a1a2 = add i32 %v4_a1a2, %v2_a19d
  %v1_a1a5 = add i32 %v0_a19a, -76
  %v2_a1a5 = inttoptr i32 %v1_a1a5 to i32*
  %v3_a1a5 = load i32, i32* %v2_a1a5, align 4
  %v2_a1a8 = add i32 %v3_a1a5, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_a1a8 = inttoptr i32 %v2_a1a8 to i32*
  store i32 %v5_a1a2, i32* %v3_a1a8, align 4
  %v0_a1ab = call i32 @function_a241()
  ret i32 %v0_a1ab

; uselistorder directives
  uselistorder i32 %v0_a094, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_17587, { 1, 0 }
  uselistorder i32 (i32)* @unknown_16de6, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_13732, { 2, 1, 0 }
}

define i32 @function_a1b0() local_unnamed_addr {
dec_label_pc_a1b0:
  %v0_a1b0 = load i32, i32* @eax, align 4
  %v0_a1b2 = load i32, i32* @ebp, align 4
  %v1_a1b2 = add i32 %v0_a1b2, -64
  store i32 %v1_a1b2, i32* @eax, align 4
  %v1_a1b8 = call i32 @function_de2e(i32 %v1_a1b2)
  ret i32 %v0_a1b0
}

define i32 @function_a1c8() local_unnamed_addr {
dec_label_pc_a1c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_a1c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a1c8
}

define i32 @function_a1df() local_unnamed_addr {
dec_label_pc_a1df:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_a1df = load i32, i32* %ebx.global-to-local, align 4
  %v1_a1df = add i32 %v0_a1df, 1962992765
  %v2_a1df = inttoptr i32 %v1_a1df to i32*
  %v3_a1df = load i32, i32* %v2_a1df, align 4
  %v4_a1df = add i32 %v3_a1df, 1
  store i32 %v4_a1df, i32* %v2_a1df, align 4
  %v0_a1e5 = load i32, i32* %eax.global-to-local, align 4
  %v2_a1e5 = load i1, i1* %cf.global-to-local, align 1
  %v3_a1e5 = zext i1 %v2_a1e5 to i32
  %v4_a1e5 = add i32 %v0_a1e5, 117
  %v5_a1e5 = add i32 %v4_a1e5, %v3_a1e5
  %v31_a1e5 = urem i32 %v5_a1e5, 256
  %v33_a1e5 = and i32 %v0_a1e5, 134217472
  %v34_a1e5 = or i32 %v31_a1e5, %v33_a1e5
  %v0_a1e7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_a1e7 = add i32 %v0_a1e7, 1
  store i32 %v1_a1e7, i32* %ebp.global-to-local, align 4
  %v2_a1e9 = mul nuw i32 %v34_a1e5, 32
  store i32 %v2_a1e9, i32* %eax.global-to-local, align 4
  %v2_a1ee = add i32 %v0_a1e7, -15
  %v3_a1ee = inttoptr i32 %v2_a1ee to i32*
  %v4_a1ee = load i32, i32* %v3_a1ee, align 4
  %v5_a1ee = add i32 %v4_a1ee, %v2_a1e9
  %v10_a1ee = icmp ult i32 %v5_a1ee, %v2_a1e9
  store i1 %v10_a1ee, i1* %cf.global-to-local, align 1
  %v1_a1f1 = add i32 %v0_a1e7, -75
  %v2_a1f1 = inttoptr i32 %v1_a1f1 to i32*
  %v3_a1f1 = load i32, i32* %v2_a1f1, align 4
  store i32 %v3_a1f1, i32* %eax.global-to-local, align 4
  %v2_a1fb = call i32 @unknown_175e4(i32 %v3_a1f1, i32 %v5_a1ee)
  store i32 %v2_a1fb, i32* %eax.global-to-local, align 4
  ret i32 %v2_a1fb

; uselistorder directives
  uselistorder i32 %v2_a1e9, { 1, 2, 0 }
  uselistorder i32 %v0_a1e5, { 1, 0 }
}

define i32 @function_a210(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a210:
  %v0_a210 = load i32, i32* @ebx, align 4
  %v1_a210 = add i32 %v0_a210, 1149887557
  %v2_a210 = inttoptr i32 %v1_a210 to i8*
  %v3_a210 = load i8, i8* %v2_a210, align 1
  %v4_a210 = load i32, i32* @ecx, align 4
  %v5_a210 = trunc i32 %v4_a210 to i8
  %v6_a210 = or i8 %v5_a210, %v3_a210
  store i8 %v6_a210, i8* %v2_a210, align 1
  %v0_a218 = load i32, i32* @ebp, align 4
  %v1_a218 = add i32 %v0_a218, -16
  %v2_a218 = inttoptr i32 %v1_a218 to i32*
  %v3_a218 = load i32, i32* %v2_a218, align 4
  %v1_a21e = call i32 @unknown_1375f(i32 %v3_a218)
  %v0_a223 = load i32, i32* @ebp, align 4
  %v1_a223 = add i32 %v0_a223, -76
  %v2_a223 = inttoptr i32 %v1_a223 to i32*
  %v3_a223 = load i32, i32* %v2_a223, align 4
  %v1_a226 = add i32 %v0_a223, -24
  %v2_a226 = inttoptr i32 %v1_a226 to i32*
  %v3_a226 = load i32, i32* %v2_a226, align 4
  %v1_a22d = add i32 %v0_a223, -16
  %v2_a22d = inttoptr i32 %v1_a22d to i32*
  %v3_a22d = load i32, i32* %v2_a22d, align 4
  store i32 %v3_a22d, i32* @edx, align 4
  %v3_a237 = call i32 @unknown_15f76(i32 %v3_a223, i32 %v3_a22d, i32 %v3_a226)
  ret i32 %v3_a237

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_15f76, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1375f, { 1, 0 }
}

define i32 @function_a241() local_unnamed_addr {
dec_label_pc_a241:
  %v0_a241 = load i32, i32* @ebp, align 4
  %v1_a241 = add i32 %v0_a241, -12
  %v2_a241 = inttoptr i32 %v1_a241 to i32*
  %v3_a241 = load i32, i32* %v2_a241, align 4
  %v1_a244 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a244 = xor i32 %v1_a244, %v3_a241
  %v3_a244 = icmp eq i32 %v2_a244, 0
  store i32 %v2_a244, i32* @eax, align 4
  br i1 %v3_a244, label %bb, label %dec_label_pc_a24d

bb:                                               ; preds = %dec_label_pc_a241
  %v1_a24b = call i32 @function_a252()
  br label %dec_label_pc_a24d

dec_label_pc_a24d:                                ; preds = %bb, %dec_label_pc_a241
  %v2_a24b = phi i32 [ %v1_a24b, %bb ], [ %v2_a244, %dec_label_pc_a241 ]
  ret i32 %v2_a24b
}

define i32 @function_a252() local_unnamed_addr {
dec_label_pc_a252:
  %v0_a252 = load i32, i32* @ebp, align 4
  %v1_a257 = inttoptr i32 %v0_a252 to i32*
  %v2_a257 = load i32, i32* %v1_a257, align 4
  store i32 %v2_a257, i32* @ebp, align 4
  %v0_a258 = load i32, i32* @eax, align 4
  ret i32 %v0_a258
}

define i32 @_ZN12CTransactionaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a25a:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_a27a = inttoptr i32 %arg2 to i32*
  %v2_a27a = load i32, i32* %v1_a27a, align 4
  store i32 %v2_a27a, i32* %arg1, align 4
  %v1_a284 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v1_a28a = add i32 %tmp103, ptrtoint (i16** @global_var_4.882 to i32)
  %v4_a294 = call i32 @unknown_171a8(i32 %v1_a28a, i32 %v1_a284)
  %v1_a29c = add i32 %arg2, 16
  %v1_a2a2 = add i32 %tmp103, 16
  %v4_a2ac = call i32 @unknown_1741e(i32 %v1_a2a2, i32 %v1_a29c)
  ret i32 %tmp103

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_a2ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_a2ba:
  %v0_a2ba = load i32, i32* @edx, align 4
  %v1_a2ba = load i32, i32* @eax, align 4
  %v2_a2ba = add i32 %v1_a2ba, ptrtoint (i32* @global_var_1c.886 to i32)
  %v3_a2ba = inttoptr i32 %v2_a2ba to i32*
  store i32 %v0_a2ba, i32* %v3_a2ba, align 4
  %v0_a2bd = load i32, i32* @ebp, align 4
  %v1_a2bd = add i32 %v0_a2bd, -28
  %v2_a2bd = inttoptr i32 %v1_a2bd to i32*
  %v3_a2bd = load i32, i32* %v2_a2bd, align 4
  store i32 %v3_a2bd, i32* @eax, align 4
  %v1_a2c0 = add i32 %v0_a2bd, -12
  %v2_a2c0 = inttoptr i32 %v1_a2c0 to i32*
  %v3_a2c0 = load i32, i32* %v2_a2c0, align 4
  %v1_a2c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a2c3 = icmp eq i32 %v1_a2c3, %v3_a2c0
  br i1 %v3_a2c3, label %bb, label %dec_label_pc_a2cc

bb:                                               ; preds = %dec_label_pc_a2ba
  %v1_a2ca = call i32 @function_a2d1()
  br label %dec_label_pc_a2cc

dec_label_pc_a2cc:                                ; preds = %bb, %dec_label_pc_a2ba
  %v2_a2ca = phi i32 [ %v1_a2ca, %bb ], [ %v3_a2bd, %dec_label_pc_a2ba ]
  ret i32 %v2_a2ca
}

define i32 @function_a2d1() local_unnamed_addr {
dec_label_pc_a2d1:
  %v0_a2d2 = load i32, i32* @eax, align 4
  ret i32 %v0_a2d2
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a2d4:
  %v1_a2f4 = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  ret i32 %v1_a2f4
}

define i32 @function_a2f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_a2f8:
  %v0_a2fb = load i32, i32* @ebp, align 4
  %v1_a2fb = add i32 %v0_a2fb, -28
  %v2_a2fb = inttoptr i32 %v1_a2fb to i32*
  %v3_a2fb = load i32, i32* %v2_a2fb, align 4
  %v1_a301 = call i32 @unknown_17998(i32 %v3_a2fb)
  %v0_a306 = load i32, i32* @ebp, align 4
  %v1_a306 = add i32 %v0_a306, -28
  %v2_a306 = inttoptr i32 %v1_a306 to i32*
  %v3_a306 = load i32, i32* %v2_a306, align 4
  store i32 %v3_a306, i32* @eax, align 4
  %v1_a309 = add i32 %v0_a306, -12
  %v2_a309 = inttoptr i32 %v1_a309 to i32*
  %v3_a309 = load i32, i32* %v2_a309, align 4
  %v1_a30c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a30c = icmp eq i32 %v1_a30c, %v3_a309
  br i1 %v3_a30c, label %bb, label %dec_label_pc_a315

bb:                                               ; preds = %dec_label_pc_a2f8
  %v1_a313 = call i32 @function_a31a()
  br label %dec_label_pc_a315

dec_label_pc_a315:                                ; preds = %bb, %dec_label_pc_a2f8
  %v2_a313 = phi i32 [ %v1_a313, %bb ], [ %v3_a306, %dec_label_pc_a2f8 ]
  ret i32 %v2_a313
}

define i32 @function_a31a() local_unnamed_addr {
dec_label_pc_a31a:
  %v0_a31b = load i32, i32* @eax, align 4
  ret i32 %v0_a31b
}

define i32 @_ZN12CDNSSeedDataC1ERKS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_a31e:
  ret i32 %arg1
}

define i32 @function_a32a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a32a:
  %v0_a32c = load i32, i32* @ebp, align 4
  %v1_a32f = add i32 %v0_a32c, 2
  store i32 %v1_a32f, i32* @ebp, align 4
  %v0_a330 = load i32, i32* @ecx, align 4
  %v1_a330 = add i32 %v0_a330, -1
  store i32 %v1_a330, i32* @ecx, align 4
  %v0_a332 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a337 = add i32 %v0_a32c, -10
  %v3_a337 = inttoptr i32 %v2_a337 to i32*
  store i32 %v0_a332, i32* %v3_a337, align 4
  %v0_a33c = load i32, i32* @ebp, align 4
  %v1_a33f = add i32 %v0_a33c, -28
  %v2_a33f = inttoptr i32 %v1_a33f to i32*
  %v3_a33f = load i32, i32* %v2_a33f, align 4
  ret i32 %v3_a33f
}

define i32 @function_a354(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a354:
  %v0_a354 = load i32, i32* @ebp, align 4
  %v1_a354 = add i32 %v0_a354, -28
  %v2_a354 = inttoptr i32 %v1_a354 to i32*
  %v3_a354 = load i32, i32* %v2_a354, align 4
  %v1_a357 = add i32 %v3_a354, ptrtoint (i16** @global_var_4.882 to i32)
  ret i32 %v1_a357
}

define i32 @function_a366() local_unnamed_addr {
dec_label_pc_a366:
  %v0_a366 = call i32 @function_a37f()
  ret i32 %v0_a366
}

define i32 @function_a369() local_unnamed_addr {
dec_label_pc_a369:
  %eax.global-to-local = alloca i32, align 4
  %v0_a369 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a369
}

define i32 @function_a37f() local_unnamed_addr {
dec_label_pc_a37f:
  %v0_a37f = load i32, i32* @ebp, align 4
  %v1_a37f = add i32 %v0_a37f, -12
  %v2_a37f = inttoptr i32 %v1_a37f to i32*
  %v3_a37f = load i32, i32* %v2_a37f, align 4
  %v1_a382 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a382 = xor i32 %v1_a382, %v3_a37f
  %v3_a382 = icmp eq i32 %v2_a382, 0
  store i32 %v2_a382, i32* @eax, align 4
  br i1 %v3_a382, label %bb, label %dec_label_pc_a38b

bb:                                               ; preds = %dec_label_pc_a37f
  %v1_a389 = call i32 @function_a390()
  br label %dec_label_pc_a38b

dec_label_pc_a38b:                                ; preds = %bb, %dec_label_pc_a37f
  %v2_a389 = phi i32 [ %v1_a389, %bb ], [ %v2_a382, %dec_label_pc_a37f ]
  ret i32 %v2_a389
}

define i32 @function_a390() local_unnamed_addr {
dec_label_pc_a390:
  %v0_a395 = load i32, i32* @eax, align 4
  ret i32 %v0_a395
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CDNSSeedDataE9constructEPS1_RKS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a396:
  %v3_a3d3 = call i32 @function_a3fe(i32 ptrtoint (i32* @global_var_8.883 to i32), i32 %arg2)
  %v2_a3df = call i32 @unknown_146b4(i32 0, i32 %arg3)
  %v2_a3e4 = call i32 @function_a3fe(i32 0, i32 %arg3)
  ret i32 %v2_a3e4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_a3fe, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_a3fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a3fe:
  %v0_a3fe = load i32, i32* @ebp, align 4
  %v1_a3fe = add i32 %v0_a3fe, -28
  %v2_a3fe = inttoptr i32 %v1_a3fe to i32*
  %v3_a3fe = load i32, i32* %v2_a3fe, align 4
  %v1_a401 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a401 = xor i32 %v1_a401, %v3_a3fe
  %v3_a401 = icmp eq i32 %v2_a401, 0
  store i32 %v2_a401, i32* @eax, align 4
  br i1 %v3_a401, label %bb, label %dec_label_pc_a40a

bb:                                               ; preds = %dec_label_pc_a3fe
  %v1_a408 = call i32 @function_a40f()
  br label %dec_label_pc_a40a

dec_label_pc_a40a:                                ; preds = %bb, %dec_label_pc_a3fe
  %v2_a408 = phi i32 [ %v1_a408, %bb ], [ %v2_a401, %dec_label_pc_a3fe ]
  ret i32 %v2_a408
}

define i32 @function_a40f() local_unnamed_addr {
dec_label_pc_a40f:
  %v0_a416 = load i32, i32* @eax, align 4
  ret i32 %v0_a416
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a418:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_a440 = add i32 %tmp113, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_a440 = inttoptr i32 %v1_a440 to i32*
  %v3_a440 = load i32, i32* %v2_a440, align 4
  %v1_a446 = add i32 %tmp113, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_a446 = inttoptr i32 %v1_a446 to i32*
  %v3_a446 = load i32, i32* %v2_a446, align 4
  %v12_a449 = icmp eq i32 %v3_a440, %v3_a446
  br i1 %v12_a449, label %dec_label_pc_a4ed, label %dec_label_pc_a451

dec_label_pc_a451:                                ; preds = %dec_label_pc_a418
  %v3_a454 = load i32, i32* %v2_a440, align 4
  %v1_a457 = add i32 %v3_a454, -8
  %v5_a46e = call i32 @unknown_147ae(i32 %tmp113, i32 %v3_a454, i32 %v1_a457)
  %v3_a476 = load i32, i32* %v2_a440, align 4
  %v1_a479 = add i32 %v3_a476, ptrtoint (i32* @global_var_8.883 to i32)
  store i32 %v1_a479, i32* %v2_a440, align 4
  %v2_a489 = ptrtoint i32* %stack_var_-44 to i32
  %v3_a48f = call i32 @unknown_14736(i32 %v2_a489, i32 %arg3)
  %v3_a497 = load i32, i32* %v2_a440, align 4
  %v1_a49a = add i32 %v3_a497, -8
  store i32 %v1_a49a, i32* %esi.global-to-local, align 4
  %v3_a4a0 = load i32, i32* %v2_a440, align 4
  %v1_a4a3 = add i32 %v3_a4a0, -16
  %v2_a4a6 = ptrtoint i32* %stack_var_-52 to i32
  %v2_a4ac = call i32 @unknown_17b16(i32 %v2_a4a6)
  %v1_a4b1 = inttoptr i32 %v2_a4ac to i32*
  %v2_a4b1 = load i32, i32* %v1_a4b1, align 4
  %v0_a4b3 = load i32, i32* %esi.global-to-local, align 4
  %v5_a4be = call i32 @unknown_17b43(i32 %v2_a4b1, i32 %v1_a4a3, i32 %v0_a4b3)
  %v2_a4c9 = call i32 @unknown_17baa(i32 %v2_a4a6)
  %v3_a4d8 = call i32 @unknown_14b2e(i32 %v2_a4c9, i32 %v2_a489)
  store i32 %v2_a489, i32* @eax, align 4
  %v2_a4e3 = call i32 @function_e45e(i32 %v2_a489)
  %v0_a4e8 = call i32 @function_a6fd()
  ret i32 %v0_a4e8

dec_label_pc_a4ed:                                ; preds = %dec_label_pc_a418
  %v5_a503 = call i32 @unknown_17bda(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_1e1e.919 to i32))
  %v2_a50b = ptrtoint i32* %stack_var_-36 to i32
  %v3_a518 = call i32 @unknown_17cac(i32 %v2_a50b, i32 %tmp113)
  %v2_a527 = ptrtoint i32* %stack_var_-52 to i32
  %v3_a52d = call i32 @unknown_17cf3(i32 %v2_a527, i32 %v2_a50b)
  %v3_a542 = call i32 @unknown_17d4e(i32 %tmp113, i32 %v5_a503)
  %v2_a553 = shl i32 %v3_a52d, ptrtoint (i64* @global_var_3.894 to i32)
  %v5_a558 = add i32 %v3_a542, %v2_a553
  %v4_a56c = call i32 @unknown_147ae(i32 %tmp113, i32 %v5_a558, i32 %arg3)
  %v1_a57e = call i32 @unknown_13f76(i32 %tmp113)
  %v1_a58b = call i32 @unknown_17b16(i32 %v2_a527)
  %v1_a590 = inttoptr i32 %v1_a58b to i32*
  %v2_a590 = load i32, i32* %v1_a590, align 4
  %v2_a595 = load i32, i32* %arg1, align 4
  %v3_a5a9 = call i32 @unknown_17da5(i32 %v2_a595, i32 %v2_a590)
  %v1_a5bb = call i32 @unknown_13f76(i32 %tmp113)
  %v3_a5c5 = load i32, i32* %v2_a440, align 4
  store i32 %v3_a5c5, i32* %esi.global-to-local, align 4
  %v1_a5ce = call i32 @unknown_17b16(i32 %v2_a527)
  %v1_a5d3 = inttoptr i32 %v1_a5ce to i32*
  %v2_a5d3 = load i32, i32* %v1_a5d3, align 4
  ret i32 %v2_a5d3

; uselistorder directives
  uselistorder i32* %v2_a440, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %tmp113, { 1, 2, 3, 4, 5, 6, 0, 8, 7 }
  uselistorder i32 (i32)* @unknown_17b16, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_147ae, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_a5da(i32 %arg1) local_unnamed_addr {
dec_label_pc_a5da:
  %v0_a5de = load i32, i32* @eax, align 4
  %v11_a5de = and i32 %v0_a5de, or (i32 zext (i8 ptrtoint (i32* @global_var_8.883 to i8) to i32), i32 -256)
  ret i32 %v11_a5de
}

define i32 @function_a5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a5e0:
  %v0_a5e0 = load i32, i32* @esi, align 4
  %v0_a5e4 = load i32, i32* @eax, align 4
  %v2_a5e7 = call i32 @unknown_17da5(i32 %v0_a5e4, i32 %v0_a5e0)
  %v1_a5ec = load i32, i32* @ebp, align 4
  %v2_a5ec = add i32 %v1_a5ec, -28
  %v3_a5ec = inttoptr i32 %v2_a5ec to i32*
  store i32 %v2_a5e7, i32* %v3_a5ec, align 4
  %v0_a5ef = load i32, i32* @ebp, align 4
  %v1_a5ef = add i32 %v0_a5ef, -44
  %v2_a5ef = inttoptr i32 %v1_a5ef to i32*
  %v3_a5ef = load i32, i32* %v2_a5ef, align 4
  %v1_a5f5 = call i32 @unknown_13f76(i32 %v3_a5ef)
  %v0_a5fa = load i32, i32* @ebp, align 4
  %v1_a5fa = add i32 %v0_a5fa, -44
  %v2_a5fa = inttoptr i32 %v1_a5fa to i32*
  %v3_a5fa = load i32, i32* %v2_a5fa, align 4
  %v1_a5fd = add i32 %v3_a5fa, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_a5fd = inttoptr i32 %v1_a5fd to i32*
  %v3_a5fd = load i32, i32* %v2_a5fd, align 4
  %v1_a603 = inttoptr i32 %v3_a5fa to i32*
  %v2_a603 = load i32, i32* %v1_a603, align 4
  %v4_a610 = call i32 @unknown_13fa3(i32 %v2_a603, i32 %v3_a5fd, i32 %v1_a5f5)
  %v0_a615 = load i32, i32* @ebp, align 4
  %v1_a615 = add i32 %v0_a615, -44
  %v2_a615 = inttoptr i32 %v1_a615 to i32*
  %v3_a615 = load i32, i32* %v2_a615, align 4
  %v1_a618 = add i32 %v3_a615, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_a618 = inttoptr i32 %v1_a618 to i32*
  %v3_a618 = load i32, i32* %v2_a618, align 4
  %v1_a620 = inttoptr i32 %v3_a615 to i32*
  %v2_a620 = load i32, i32* %v1_a620, align 4
  %v2_a624 = sub i32 %v3_a618, %v2_a620
  %v2_a628 = ashr i32 %v2_a624, ptrtoint (i64* @global_var_3.894 to i32)
  %v3_a62d = load i32, i32* %v2_a615, align 4
  %v1_a630 = inttoptr i32 %v3_a62d to i32*
  %v2_a630 = load i32, i32* %v1_a630, align 4
  %v4_a640 = call i32 @unknown_16672(i32 %v3_a62d, i32 %v2_a630, i32 %v2_a628)
  %v0_a645 = load i32, i32* @ebp, align 4
  %v1_a645 = add i32 %v0_a645, -44
  %v2_a645 = inttoptr i32 %v1_a645 to i32*
  %v3_a645 = load i32, i32* %v2_a645, align 4
  %v1_a648 = add i32 %v0_a645, -16
  %v2_a648 = inttoptr i32 %v1_a648 to i32*
  %v3_a648 = load i32, i32* %v2_a648, align 4
  %v2_a64b = inttoptr i32 %v3_a645 to i32*
  store i32 %v3_a648, i32* %v2_a64b, align 4
  %v0_a64d = load i32, i32* @ebp, align 4
  %v1_a64d = add i32 %v0_a64d, -44
  %v2_a64d = inttoptr i32 %v1_a64d to i32*
  %v3_a64d = load i32, i32* %v2_a64d, align 4
  %v1_a650 = add i32 %v0_a64d, -28
  %v2_a650 = inttoptr i32 %v1_a650 to i32*
  %v3_a650 = load i32, i32* %v2_a650, align 4
  %v2_a653 = add i32 %v3_a64d, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_a653 = inttoptr i32 %v2_a653 to i32*
  store i32 %v3_a650, i32* %v3_a653, align 4
  %v0_a656 = load i32, i32* @ebp, align 4
  %v1_a656 = add i32 %v0_a656, -24
  %v2_a656 = inttoptr i32 %v1_a656 to i32*
  %v3_a656 = load i32, i32* %v2_a656, align 4
  %v2_a659 = shl i32 %v3_a656, ptrtoint (i64* @global_var_3.894 to i32)
  %v2_a65e = add i32 %v0_a656, -16
  %v3_a65e = inttoptr i32 %v2_a65e to i32*
  %v4_a65e = load i32, i32* %v3_a65e, align 4
  %v5_a65e = add i32 %v4_a65e, %v2_a659
  %v1_a661 = add i32 %v0_a656, -44
  %v2_a661 = inttoptr i32 %v1_a661 to i32*
  %v3_a661 = load i32, i32* %v2_a661, align 4
  %v2_a664 = add i32 %v3_a661, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_a664 = inttoptr i32 %v2_a664 to i32*
  store i32 %v5_a65e, i32* %v3_a664, align 4
  %v0_a667 = call i32 @function_a6fd()
  ret i32 %v0_a667
}

define i32 @function_a66d() local_unnamed_addr {
dec_label_pc_a66d:
  %eax.global-to-local = alloca i32, align 4
  %v0_a66d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a66d
}

define i32 @function_a684() local_unnamed_addr {
dec_label_pc_a684:
  %eax.global-to-local = alloca i32, align 4
  %v0_a684 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a684
}

define i32 @function_a6a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_a6a8:
  %v0_a6a8 = load i32, i32* @eax, align 4
  %v1_a6aa = load i32, i32* @ebp, align 4
  %v2_a6aa = add i32 %v1_a6aa, -16
  %v3_a6aa = inttoptr i32 %v2_a6aa to i32*
  %v4_a6aa = load i32, i32* %v3_a6aa, align 4
  %v5_a6aa = add i32 %v4_a6aa, %v0_a6a8
  %v1_a6ad = add i32 %v1_a6aa, -44
  %v2_a6ad = inttoptr i32 %v1_a6ad to i32*
  %v3_a6ad = load i32, i32* %v2_a6ad, align 4
  %v2_a6b7 = call i32 @unknown_17e02(i32 %v3_a6ad, i32 %v5_a6aa)
  %v0_a6bc = call i32 @function_a6df()
  ret i32 %v0_a6bc
}

define i32 @function_a6be() local_unnamed_addr {
dec_label_pc_a6be:
  %ebp.global-to-local = alloca i32, align 4
  %v0_a6be = load i32, i32* %ebp.global-to-local, align 4
  %v1_a6be = add i32 %v0_a6be, -44
  %v2_a6be = inttoptr i32 %v1_a6be to i32*
  %v3_a6be = load i32, i32* %v2_a6be, align 4
  %v1_a6c4 = call i32 @unknown_13f76(i32 %v3_a6be)
  %v1_a6cd = add i32 %v0_a6be, -28
  %v2_a6cd = inttoptr i32 %v1_a6cd to i32*
  %v3_a6cd = load i32, i32* %v2_a6cd, align 4
  %v1_a6d4 = add i32 %v0_a6be, -16
  %v2_a6d4 = inttoptr i32 %v1_a6d4 to i32*
  %v3_a6d4 = load i32, i32* %v2_a6d4, align 4
  %v3_a6da = call i32 @unknown_13fa3(i32 %v3_a6d4, i32 %v3_a6cd, i32 %v1_a6c4)
  ret i32 %v3_a6da

; uselistorder directives
  uselistorder i32 %v0_a6be, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_13fa3, { 1, 0 }
  uselistorder i32 (i32)* @unknown_13f76, { 3, 0, 2, 1 }
}

define i32 @function_a6df() local_unnamed_addr {
dec_label_pc_a6df:
  %v0_a6df = load i32, i32* @ebp, align 4
  %v1_a6df = add i32 %v0_a6df, -44
  %v2_a6df = inttoptr i32 %v1_a6df to i32*
  %v3_a6df = load i32, i32* %v2_a6df, align 4
  %v1_a6e2 = add i32 %v0_a6df, -24
  %v2_a6e2 = inttoptr i32 %v1_a6e2 to i32*
  %v3_a6e2 = load i32, i32* %v2_a6e2, align 4
  %v1_a6e9 = add i32 %v0_a6df, -16
  %v2_a6e9 = inttoptr i32 %v1_a6e9 to i32*
  %v3_a6e9 = load i32, i32* %v2_a6e9, align 4
  %v3_a6f3 = call i32 @unknown_16672(i32 %v3_a6df, i32 %v3_a6e9, i32 %v3_a6e2)
  ret i32 %v3_a6f3

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_16672, { 1, 0 }
}

define i32 @function_a6fd() local_unnamed_addr {
dec_label_pc_a6fd:
  %v0_a6fd = load i32, i32* @ebp, align 4
  %v1_a6fd = add i32 %v0_a6fd, -12
  %v2_a6fd = inttoptr i32 %v1_a6fd to i32*
  %v3_a6fd = load i32, i32* %v2_a6fd, align 4
  %v1_a700 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a700 = xor i32 %v1_a700, %v3_a6fd
  %v3_a700 = icmp eq i32 %v2_a700, 0
  store i32 %v2_a700, i32* @eax, align 4
  br i1 %v3_a700, label %bb, label %dec_label_pc_a709

bb:                                               ; preds = %dec_label_pc_a6fd
  %v1_a707 = call i32 @function_a70e()
  br label %dec_label_pc_a709

dec_label_pc_a709:                                ; preds = %bb, %dec_label_pc_a6fd
  %v2_a707 = phi i32 [ %v1_a707, %bb ], [ %v2_a700, %dec_label_pc_a6fd ]
  ret i32 %v2_a707
}

define i32 @function_a70e() local_unnamed_addr {
dec_label_pc_a70e:
  %v0_a70e = load i32, i32* @ebp, align 4
  %v1_a70e = add i32 %v0_a70e, -8
  %v1_a711 = inttoptr i32 %v1_a70e to i32*
  %v2_a711 = load i32, i32* %v1_a711, align 4
  store i32 %v2_a711, i32* @ebx, align 4
  %v1_a713 = inttoptr i32 %v0_a70e to i32*
  %v2_a713 = load i32, i32* %v1_a713, align 4
  store i32 %v2_a713, i32* @ebp, align 4
  %v0_a714 = load i32, i32* @eax, align 4
  ret i32 %v0_a714

; uselistorder directives
  uselistorder i32 -8, { 2, 0, 1 }
}

define i32 @_ZN12CDNSSeedDataaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a716:
  ret i32 %arg1
}

define i32 @function_a770() local_unnamed_addr {
dec_label_pc_a770:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_a770 = load i32, i32* %ecx.global-to-local, align 4
  %v1_a770 = add i32 %v0_a770, -1
  store i32 %v1_a770, i32* %ecx.global-to-local, align 4
  %v0_a772 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a772
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a774:
  ret i32 %arg2
}

define i32 @function_a78a(i32 %arg1) local_unnamed_addr {
dec_label_pc_a78a:
  %v2_a78a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_a78a = load i32, i32* @eax, align 4
  %v4_a78a = trunc i32 %v3_a78a to i8
  %v5_a78a = add i8 %v4_a78a, %v2_a78a
  %v21_a78a = inttoptr i32 %v3_a78a to i8*
  store i8 %v5_a78a, i8* %v21_a78a, align 1
  %v0_a78c = load i32, i32* @eax, align 4
  %v1_a78c = load i32, i32* @ebp, align 4
  %v2_a78c = add i32 %v1_a78c, -12
  %v3_a78c = inttoptr i32 %v2_a78c to i32*
  store i32 %v0_a78c, i32* %v3_a78c, align 4
  %v0_a791 = load i32, i32* @ebp, align 4
  %v1_a791 = add i32 %v0_a791, -32
  %v2_a791 = inttoptr i32 %v1_a791 to i32*
  %v3_a791 = load i32, i32* %v2_a791, align 4
  %v1_a794 = add i32 %v3_a791, ptrtoint (i16** @global_var_4.882 to i32)
  %v1_a79b = add i32 %v0_a791, -28
  %v2_a79b = inttoptr i32 %v1_a79b to i32*
  %v3_a79b = load i32, i32* %v2_a79b, align 4
  %v3_a7a1 = call i32 @unknown_1819a(i32 %v3_a79b, i32 %v1_a794)
  %v0_a7a6 = load i32, i32* @ebp, align 4
  %v1_a7a6 = add i32 %v0_a7a6, -28
  %v2_a7a6 = inttoptr i32 %v1_a7a6 to i32*
  %v3_a7a6 = load i32, i32* %v2_a7a6, align 4
  store i32 %v3_a7a6, i32* @eax, align 4
  %v1_a7a9 = add i32 %v0_a7a6, -12
  %v2_a7a9 = inttoptr i32 %v1_a7a9 to i32*
  %v3_a7a9 = load i32, i32* %v2_a7a9, align 4
  %v1_a7ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a7ac = icmp eq i32 %v1_a7ac, %v3_a7a9
  br i1 %v3_a7ac, label %bb, label %dec_label_pc_a7b5

bb:                                               ; preds = %dec_label_pc_a78a
  %v1_a7b3 = call i32 @function_a7ba()
  br label %dec_label_pc_a7b5

dec_label_pc_a7b5:                                ; preds = %bb, %dec_label_pc_a78a
  %v2_a7b3 = phi i32 [ %v1_a7b3, %bb ], [ %v3_a7a6, %dec_label_pc_a78a ]
  ret i32 %v2_a7b3
}

define i32 @function_a7ba() local_unnamed_addr {
dec_label_pc_a7ba:
  %v0_a7bb = load i32, i32* @eax, align 4
  ret i32 %v0_a7bb
}

define i32 @_ZNSt6vectorI8CAddressSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a7be:
  %v1_a7e1 = call i32 @unknown_14488(i32 %arg1)
  %v1_a7e9 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_a7e9 = inttoptr i32 %v1_a7e9 to i32*
  %v3_a7e9 = load i32, i32* %v2_a7e9, align 4
  %v3_a7fa = call i32 @unknown_144b5(i32 %arg2, i32 %v3_a7e9, i32 %v1_a7e1)
  store i32 %arg2, i32* %v2_a7e9, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a814

bb:                                               ; preds = %dec_label_pc_a7be
  %v1_a812 = call i32 @function_a819()
  br label %dec_label_pc_a814

dec_label_pc_a814:                                ; preds = %bb, %dec_label_pc_a7be
  %v3_a812 = phi i32 [ %v1_a812, %bb ], [ 0, %dec_label_pc_a7be ]
  ret i32 %v3_a812

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_a819() local_unnamed_addr {
dec_label_pc_a819:
  %v0_a81a = load i32, i32* @eax, align 4
  ret i32 %v0_a81a
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a81c:
  %v1_a83f = call i32 @unknown_1437a(i32 %arg1)
  %v1_a847 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_a847 = inttoptr i32 %v1_a847 to i32*
  %v3_a847 = load i32, i32* %v2_a847, align 4
  %v3_a858 = call i32 @unknown_143a7(i32 %arg2, i32 %v3_a847, i32 %v1_a83f)
  store i32 %arg2, i32* %v2_a847, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a872

bb:                                               ; preds = %dec_label_pc_a81c
  %v1_a870 = call i32 @function_a877()
  br label %dec_label_pc_a872

dec_label_pc_a872:                                ; preds = %bb, %dec_label_pc_a81c
  %v2_a870 = phi i32 [ %v1_a870, %bb ], [ 0, %dec_label_pc_a81c ]
  ret i32 %v2_a870

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_a877() local_unnamed_addr {
dec_label_pc_a877:
  %v0_a878 = load i32, i32* @eax, align 4
  ret i32 %v0_a878
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_a879:
  %v2_a899 = load i32, i32* %arg2, align 4
  %v2_a89e = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_a89e = inttoptr i32 %v2_a89e to i32*
  store i32 %v2_a899, i32* %v3_a89e, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a8b0

bb:                                               ; preds = %dec_label_pc_a879
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_a8ae = call i32 @function_a8b5(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_a8b0

dec_label_pc_a8b0:                                ; preds = %bb, %dec_label_pc_a879
  %v4_a8ae = phi i32 [ %v3_a8ae, %bb ], [ %arg1, %dec_label_pc_a879 ]
  ret i32 %v4_a8ae

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_a8b5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a8b5:
  %v0_a8b6 = load i32, i32* @eax, align 4
  ret i32 %v0_a8b6
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_a8b7:
  %v2_a8d7 = load i32, i32* %arg2, align 4
  %v2_a8dc = add i32 %arg1, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_a8dc = inttoptr i32 %v2_a8dc to i32*
  store i32 %v2_a8d7, i32* %v3_a8dc, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a8ee

bb:                                               ; preds = %dec_label_pc_a8b7
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_a8ec = call i32 @function_a8f3(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_a8ee

dec_label_pc_a8ee:                                ; preds = %bb, %dec_label_pc_a8b7
  %v4_a8ec = phi i32 [ %v3_a8ec, %bb ], [ %arg1, %dec_label_pc_a8b7 ]
  ret i32 %v4_a8ec

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_a8f3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a8f3:
  %v0_a8f4 = load i32, i32* @eax, align 4
  ret i32 %v0_a8f4
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_a8f5:
  %v2_a915 = load i32, i32* %arg2, align 4
  %v2_a91a = add i32 %arg1, 16
  %v3_a91a = inttoptr i32 %v2_a91a to i32*
  store i32 %v2_a915, i32* %v3_a91a, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a92c

bb:                                               ; preds = %dec_label_pc_a8f5
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_a92a = call i32 @function_a931(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_a92c

dec_label_pc_a92c:                                ; preds = %bb, %dec_label_pc_a8f5
  %v4_a92a = phi i32 [ %v3_a92a, %bb ], [ %arg1, %dec_label_pc_a8f5 ]
  ret i32 %v4_a92a

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_a931(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a931:
  %v0_a932 = load i32, i32* @eax, align 4
  ret i32 %v0_a932
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a934:
  ret i32 %arg1
}

define i32 @function_a958(i32 %arg1) local_unnamed_addr {
dec_label_pc_a958:
  %eax.global-to-local = alloca i32, align 4
  %v2_a958 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_a958 = load i32, i32* @eax, align 4
  %v4_a958 = trunc i32 %v3_a958 to i8
  %v5_a958 = add i8 %v4_a958, %v2_a958
  %v21_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v5_a958, i8* %v21_a958, align 1
  %v3_a95a = load i32, i32* @eax, align 4
  %v4_a95a = trunc i32 %v3_a95a to i8
  %v2_a95c = add i8 %v4_a95a, 36
  %v6_a95c = icmp ugt i8 %v4_a95a, -37
  %v16_a95c = zext i8 %v2_a95c to i32
  %v18_a95c = and i32 %v3_a95a, -256
  %v19_a95c = or i32 %v16_a95c, %v18_a95c
  store i32 %v19_a95c, i32* %eax.global-to-local, align 4
  %v1_a95e = inttoptr i32 %v19_a95c to i8*
  %v2_a95e = load i8, i8* %v1_a95e, align 1
  %v6_a95e = zext i1 %v6_a95c to i8
  %v7_a95e = add i8 %v2_a95e, %v2_a95c
  %v8_a95e = add i8 %v7_a95e, %v6_a95e
  store i8 %v8_a95e, i8* %v1_a95e, align 1
  %v0_a960 = load i32, i32* %eax.global-to-local, align 4
  %v1_a960 = inttoptr i32 %v0_a960 to i8*
  %v2_a960 = load i8, i8* %v1_a960, align 1
  %v4_a960 = trunc i32 %v0_a960 to i8
  %v5_a960 = add i8 %v2_a960, %v4_a960
  store i8 %v5_a960, i8* %v1_a960, align 1
  %v22_a960 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_a960

; uselistorder directives
  uselistorder i8 %v4_a95a, { 1, 0 }
}

define i32 @function_a966() local_unnamed_addr {
dec_label_pc_a966:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_a966 = load i32, i32* %ecx.global-to-local, align 4
  %v1_a966 = add i32 %v0_a966, -532313149
  %v2_a966 = inttoptr i32 %v1_a966 to i32*
  %v3_a966 = load i32, i32* %v2_a966, align 4
  %v4_a966 = add i32 %v3_a966, -1
  store i32 %v4_a966, i32* %v2_a966, align 4
  %v0_a96c = load i32, i32* %eax.global-to-local, align 4
  %v0_a970 = load i32, i32* %ebx.global-to-local, align 4
  %v2_a973 = call i32 @unknown_18394(i32 %v0_a970, i32 %v0_a96c)
  store i32 %v2_a973, i32* %eax.global-to-local, align 4
  %v0_a978 = load i32, i32* %ebp.global-to-local, align 4
  %v1_a978 = add i32 %v0_a978, -28
  %v2_a978 = inttoptr i32 %v1_a978 to i32*
  %v3_a978 = load i32, i32* %v2_a978, align 4
  store i32 %v3_a978, i32* %eax.global-to-local, align 4
  %v0_a97b = load i32, i32* %ebx.global-to-local, align 4
  %v2_a97b = inttoptr i32 %v3_a978 to i32*
  store i32 %v0_a97b, i32* %v2_a97b, align 4
  %v0_a97d = load i32, i32* %ebp.global-to-local, align 4
  %v1_a97d = add i32 %v0_a97d, -12
  %v2_a97d = inttoptr i32 %v1_a97d to i32*
  %v3_a97d = load i32, i32* %v2_a97d, align 4
  store i32 %v3_a97d, i32* %eax.global-to-local, align 4
  %v1_a980 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a980 = xor i32 %v1_a980, %v3_a97d
  %v3_a980 = icmp eq i32 %v2_a980, 0
  store i32 %v2_a980, i32* @eax, align 4
  br i1 %v3_a980, label %bb, label %dec_label_pc_a989

bb:                                               ; preds = %dec_label_pc_a966
  %v1_a987 = call i32 @function_a9b9()
  store i32 %v1_a987, i32* @eax, align 4
  br label %dec_label_pc_a989

dec_label_pc_a989:                                ; preds = %bb, %dec_label_pc_a966
  %v0_a989 = call i32 @function_a9b4()
  store i32 %v0_a989, i32* %eax.global-to-local, align 4
  ret i32 %v0_a989
}

define i32 @function_a98c() local_unnamed_addr {
dec_label_pc_a98c:
  %eax.global-to-local = alloca i32, align 4
  %v0_a98c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a98c
}

declare i32 @__cxa_end_catch.712(i32) local_unnamed_addr

define i32 @function_a9b4() local_unnamed_addr {
dec_label_pc_a9b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a9b9() local_unnamed_addr {
dec_label_pc_a9b9:
  %v0_a9be = load i32, i32* @eax, align 4
  ret i32 %v0_a9be
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a9c0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_a9ea = call i32 @unknown_184f6(i32 %tmp102, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp102

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_aa00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_aa00:
  %v2_aa00 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_aa00 = load i32, i32* @eax, align 4
  %v4_aa00 = trunc i32 %v3_aa00 to i8
  %v5_aa00 = add i8 %v4_aa00, %v2_aa00
  %v21_aa00 = inttoptr i32 %v3_aa00 to i8*
  store i8 %v5_aa00, i8* %v21_aa00, align 1
  %v0_aa02 = load i32, i32* @ebp, align 4
  %v1_aa02 = add i32 %v0_aa02, -28
  %v2_aa02 = inttoptr i32 %v1_aa02 to i32*
  %v3_aa02 = load i32, i32* %v2_aa02, align 4
  ret i32 %v3_aa02
}

define i32 @function_aa08(i32 %arg1) local_unnamed_addr {
dec_label_pc_aa08:
  %v2_aa08 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_aa08 = load i32, i32* @eax, align 4
  %v4_aa08 = trunc i32 %v3_aa08 to i8
  %v5_aa08 = add i8 %v4_aa08, %v2_aa08
  %v21_aa08 = inttoptr i32 %v3_aa08 to i8*
  store i8 %v5_aa08, i8* %v21_aa08, align 1
  %v2_aa0a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_aa0a = load i32, i32* @eax, align 4
  %v4_aa0a = trunc i32 %v3_aa0a to i8
  %v5_aa0a = add i8 %v4_aa0a, %v2_aa0a
  %v21_aa0a = inttoptr i32 %v3_aa0a to i8*
  store i8 %v5_aa0a, i8* %v21_aa0a, align 1
  %v0_aa0c = load i32, i32* @ebp, align 4
  %v1_aa0c = add i32 %v0_aa0c, -12
  %v2_aa0c = inttoptr i32 %v1_aa0c to i32*
  %v3_aa0c = load i32, i32* %v2_aa0c, align 4
  %v1_aa0f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_aa0f = xor i32 %v1_aa0f, %v3_aa0c
  %v3_aa0f = icmp eq i32 %v2_aa0f, 0
  store i32 %v2_aa0f, i32* @eax, align 4
  br i1 %v3_aa0f, label %bb, label %dec_label_pc_aa18

bb:                                               ; preds = %dec_label_pc_aa08
  %v1_aa16 = call i32 @function_aa1d()
  br label %dec_label_pc_aa18

dec_label_pc_aa18:                                ; preds = %bb, %dec_label_pc_aa08
  %v2_aa16 = phi i32 [ %v1_aa16, %bb ], [ %v2_aa0f, %dec_label_pc_aa08 ]
  ret i32 %v2_aa16
}

define i32 @function_aa1d() local_unnamed_addr {
dec_label_pc_aa1d:
  %v0_aa1e = load i32, i32* @eax, align 4
  ret i32 %v0_aa1e
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aa20:
  %v10_aa3d = icmp eq i32 %arg2, 0
  br i1 %v10_aa3d, label %dec_label_pc_aa64, label %dec_label_pc_aa43

dec_label_pc_aa43:                                ; preds = %dec_label_pc_aa20
  %v3_aa58 = call i32 @unknown_18598(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa20, %dec_label_pc_aa43
  %storemerge = phi i32 [ %v3_aa58, %dec_label_pc_aa43 ], [ 0, %dec_label_pc_aa20 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_aa70

bb:                                               ; preds = %dec_label_pc_aa64
  %v1_aa6e = call i32 @function_aa75()
  br label %dec_label_pc_aa70

dec_label_pc_aa70:                                ; preds = %bb, %dec_label_pc_aa64
  %v2_aa6e = phi i32 [ %v1_aa6e, %bb ], [ %storemerge, %dec_label_pc_aa64 ]
  ret i32 %v2_aa6e

; uselistorder directives
  uselistorder label %dec_label_pc_aa64, { 1, 0 }
}

define i32 @function_aa75() local_unnamed_addr {
dec_label_pc_aa75:
  %v0_aa76 = load i32, i32* @eax, align 4
  ret i32 %v0_aa76
}

define i32 @_ZSt24__uninitialized_fill_n_aIPhjhhEvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aa77:
  %v7_aab4 = call i32 @unknown_1864a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_aac5

bb:                                               ; preds = %dec_label_pc_aa77
  %v1_aac3 = call i32 @function_aaca()
  br label %dec_label_pc_aac5

dec_label_pc_aac5:                                ; preds = %bb, %dec_label_pc_aa77
  %v2_aac3 = phi i32 [ %v1_aac3, %bb ], [ 0, %dec_label_pc_aa77 ]
  ret i32 %v2_aac3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_aaca() local_unnamed_addr {
dec_label_pc_aaca:
  %v0_aacb = load i32, i32* @eax, align 4
  ret i32 %v0_aacb
}

define i32 @_ZSt8_DestroyIPhEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aacc:
  %v2_aaf6 = call i32 @unknown_186ee(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ab07

bb:                                               ; preds = %dec_label_pc_aacc
  %v1_ab05 = call i32 @function_ab0c()
  br label %dec_label_pc_ab07

dec_label_pc_ab07:                                ; preds = %bb, %dec_label_pc_aacc
  %v2_ab05 = phi i32 [ %v1_ab05, %bb ], [ 0, %dec_label_pc_aacc ]
  ret i32 %v2_ab05
}

define i32 @function_ab0c() local_unnamed_addr {
dec_label_pc_ab0c:
  %v0_ab0d = load i32, i32* @eax, align 4
  ret i32 %v0_ab0d
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_ab0e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_ab2b = call i32 @function_10f4e(i32 %tmp99)
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_ab3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab3c:
  %v0_ab3c = load i32, i32* @eax, align 4
  %v1_ab3c = add i32 %v0_ab3c, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_ab3c = inttoptr i32 %v1_ab3c to i32*
  store i32 0, i32* %v2_ab3c, align 4
  %v0_ab43 = load i32, i32* @ebp, align 4
  %v1_ab43 = add i32 %v0_ab43, -28
  %v2_ab43 = inttoptr i32 %v1_ab43 to i32*
  %v3_ab43 = load i32, i32* %v2_ab43, align 4
  %v1_ab46 = add i32 %v3_ab43, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_ab46 = inttoptr i32 %v1_ab46 to i32*
  store i32 0, i32* %v2_ab46, align 4
  %v0_ab4d = load i32, i32* @ebp, align 4
  %v1_ab4d = add i32 %v0_ab4d, -12
  %v2_ab4d = inttoptr i32 %v1_ab4d to i32*
  %v3_ab4d = load i32, i32* %v2_ab4d, align 4
  %v1_ab50 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ab50 = xor i32 %v1_ab50, %v3_ab4d
  %v3_ab50 = icmp eq i32 %v2_ab50, 0
  store i32 %v2_ab50, i32* @eax, align 4
  br i1 %v3_ab50, label %bb, label %dec_label_pc_ab59

bb:                                               ; preds = %dec_label_pc_ab3c
  %v1_ab57 = call i32 @function_ab5e()
  br label %dec_label_pc_ab59

dec_label_pc_ab59:                                ; preds = %bb, %dec_label_pc_ab3c
  %v2_ab57 = phi i32 [ %v1_ab57, %bb ], [ %v2_ab50, %dec_label_pc_ab3c ]
  ret i32 %v2_ab57
}

define i32 @function_ab5e() local_unnamed_addr {
dec_label_pc_ab5e:
  %v0_ab5f = load i32, i32* @eax, align 4
  ret i32 %v0_ab5f
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ab60:
  ret i32 %arg3
}

define i32 @function_ab7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab7a:
  %eax.global-to-local = alloca i32, align 4
  %v0_ab7a = load i32, i32* @eax, align 4
  %v1_ab7a = trunc i32 %v0_ab7a to i8
  %v2_ab7a = load i1, i1* @cf, align 1
  %v3_ab7a = zext i1 %v2_ab7a to i8
  %v4_ab7a = add i8 %v3_ab7a, %v1_ab7a
  %v22_ab7a = zext i8 %v4_ab7a to i32
  %v24_ab7a = and i32 %v0_ab7a, -256
  %v25_ab7a = or i32 %v22_ab7a, %v24_ab7a
  store i32 %v25_ab7a, i32* %eax.global-to-local, align 4
  %v1_ab7c = inttoptr i32 %v25_ab7a to i8*
  %v2_ab7c = load i8, i8* %v1_ab7c, align 1
  %v5_ab7c = add i8 %v2_ab7c, %v4_ab7a
  store i8 %v5_ab7c, i8* %v1_ab7c, align 1
  %v0_ab7e = load i32, i32* %eax.global-to-local, align 4
  %v1_ab7e = load i32, i32* @ebp, align 4
  %v2_ab7e = add i32 %v1_ab7e, -12
  %v3_ab7e = inttoptr i32 %v2_ab7e to i32*
  store i32 %v0_ab7e, i32* %v3_ab7e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_ab83 = load i32, i32* @ebp, align 4
  %v1_ab83 = add i32 %v0_ab83, -36
  %v2_ab83 = inttoptr i32 %v1_ab83 to i32*
  %v3_ab83 = load i32, i32* %v2_ab83, align 4
  store i32 %v3_ab83, i32* %eax.global-to-local, align 4
  %v1_ab8a = add i32 %v0_ab83, -32
  %v2_ab8a = inttoptr i32 %v1_ab8a to i32*
  %v3_ab8a = load i32, i32* %v2_ab8a, align 4
  store i32 %v3_ab8a, i32* %eax.global-to-local, align 4
  %v1_ab91 = add i32 %v0_ab83, -28
  %v2_ab91 = inttoptr i32 %v1_ab91 to i32*
  %v3_ab91 = load i32, i32* %v2_ab91, align 4
  store i32 %v3_ab91, i32* %eax.global-to-local, align 4
  %v3_ab97 = call i32 @unknown_187b2(i32 %v3_ab91, i32 %v3_ab8a, i32 %v3_ab83)
  store i32 %v3_ab97, i32* @eax, align 4
  %v0_ab9c = load i32, i32* @ebp, align 4
  %v1_ab9c = add i32 %v0_ab9c, -12
  %v2_ab9c = inttoptr i32 %v1_ab9c to i32*
  %v3_ab9c = load i32, i32* %v2_ab9c, align 4
  %v1_ab9f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ab9f = icmp eq i32 %v1_ab9f, %v3_ab9c
  br i1 %v3_ab9f, label %bb, label %dec_label_pc_aba8

bb:                                               ; preds = %dec_label_pc_ab7a
  %v1_aba6 = call i32 @function_abad()
  store i32 %v1_aba6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_aba8

dec_label_pc_aba8:                                ; preds = %bb, %dec_label_pc_ab7a
  %v2_aba6 = phi i32 [ %v1_aba6, %bb ], [ %v3_ab97, %dec_label_pc_ab7a ]
  ret i32 %v2_aba6
}

define i32 @function_abad() local_unnamed_addr {
dec_label_pc_abad:
  %v0_abae = load i32, i32* @eax, align 4
  ret i32 %v0_abae
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_abaf:
  %v2_abd9 = call i32 @unknown_18850(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_abf0

bb:                                               ; preds = %dec_label_pc_abaf
  %v1_abee = call i32 @function_abf5()
  br label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %bb, %dec_label_pc_abaf
  %v2_abee = phi i32 [ %v1_abee, %bb ], [ %arg1, %dec_label_pc_abaf ]
  ret i32 %v2_abee

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_abf5() local_unnamed_addr {
dec_label_pc_abf5:
  %v0_abf6 = load i32, i32* @eax, align 4
  ret i32 %v0_abf6
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET1_T0_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_abf9:
  %stack_var_-20 = alloca i32, align 4
  %v1_ac2a = call i32 @unknown_188d7(i32 %arg4)
  %v1_ac37 = call i32 @unknown_188d7(i32 %arg3)
  %v1_ac44 = call i32 @unknown_188d7(i32 %arg2)
  %v3_ac54 = call i32 @unknown_1890c(i32 %v1_ac44, i32 %v1_ac37, i32 %v1_ac2a)
  store i32 %v3_ac54, i32* %stack_var_-20, align 4
  %v2_ac5c = ptrtoint i32* %stack_var_-20 to i32
  %v2_ac69 = call i32 @unknown_12fdd(i32 %arg1, i32 %v2_ac5c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ac7d

bb:                                               ; preds = %dec_label_pc_abf9
  %v1_ac7b = call i32 @function_ac82()
  br label %dec_label_pc_ac7d

dec_label_pc_ac7d:                                ; preds = %bb, %dec_label_pc_abf9
  %v2_ac7b = phi i32 [ %v1_ac7b, %bb ], [ %arg1, %dec_label_pc_abf9 ]
  ret i32 %v2_ac7b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_188d7, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_ac82() local_unnamed_addr {
dec_label_pc_ac82:
  %v0_ac88 = load i32, i32* @eax, align 4
  ret i32 %v0_ac88
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_ac8c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_aca6 = load i32, i32* %arg1, align 4
  %v1_aca8 = add i32 %v2_aca6, -1
  store i32 %v1_aca8, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_acbf

bb:                                               ; preds = %dec_label_pc_ac8c
  %v2_acbd = call i32 @function_acc4(i32 %tmp100)
  br label %dec_label_pc_acbf

dec_label_pc_acbf:                                ; preds = %bb, %dec_label_pc_ac8c
  %v3_acbd = phi i32 [ %v2_acbd, %bb ], [ %tmp100, %dec_label_pc_ac8c ]
  ret i32 %v3_acbd
}

define i32 @function_acc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_acc4:
  %v0_acc5 = load i32, i32* @eax, align 4
  ret i32 %v0_acc5
}

define i32 @_ZN9__gnu_cxxltIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_acc6:
  %v1_acea = call i32 @unknown_13346(i32 %arg1)
  %v1_acef = inttoptr i32 %v1_acea to i32*
  %v2_acef = load i32, i32* %v1_acef, align 4
  %v1_acf7 = call i32 @unknown_13346(i32 %arg2)
  %v1_acfc = inttoptr i32 %v1_acf7 to i32*
  %v2_acfc = load i32, i32* %v1_acfc, align 4
  %v7_acfe = icmp ult i32 %v2_acef, %v2_acfc
  %v1_ad00 = zext i1 %v7_acfe to i32
  %v3_ad00 = and i32 %v2_acfc, -256
  %v4_ad00 = or i32 %v1_ad00, %v3_ad00
  store i32 %v4_ad00, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ad0f

bb:                                               ; preds = %dec_label_pc_acc6
  %v1_ad0d = call i32 @function_ad14()
  br label %dec_label_pc_ad0f

dec_label_pc_ad0f:                                ; preds = %bb, %dec_label_pc_acc6
  %v2_ad0d = phi i32 [ %v1_ad0d, %bb ], [ %v4_ad00, %dec_label_pc_acc6 ]
  ret i32 %v2_ad0d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_13346, { 1, 0 }
}

define i32 @function_ad14() local_unnamed_addr {
dec_label_pc_ad14:
  %v0_ad19 = load i32, i32* @eax, align 4
  ret i32 %v0_ad19
}

define i32 @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_EvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ad1a:
  %v2_ad44 = call i32 @unknown_18a80(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ad55

bb:                                               ; preds = %dec_label_pc_ad1a
  %v1_ad53 = call i32 @function_ad5a()
  br label %dec_label_pc_ad55

dec_label_pc_ad55:                                ; preds = %bb, %dec_label_pc_ad1a
  %v2_ad53 = phi i32 [ %v1_ad53, %bb ], [ 0, %dec_label_pc_ad1a ]
  ret i32 %v2_ad53
}

define i32 @function_ad5a() local_unnamed_addr {
dec_label_pc_ad5a:
  %v0_ad5b = load i32, i32* @eax, align 4
  ret i32 %v0_ad5b
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ad5c:
  ret i32 %arg2
}

define i32 @function_ad9a() local_unnamed_addr {
dec_label_pc_ad9a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ad9a = load i32, i32* %ecx.global-to-local, align 4
  %v1_ad9a = add i32 %v0_ad9a, -1
  store i32 %v1_ad9a, i32* %ecx.global-to-local, align 4
  %v0_ad9c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ad9c
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ad9d:
  %v2_adc7 = call i32 @unknown_18b5c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_adde

bb:                                               ; preds = %dec_label_pc_ad9d
  %v1_addc = call i32 @function_ade3()
  br label %dec_label_pc_adde

dec_label_pc_adde:                                ; preds = %bb, %dec_label_pc_ad9d
  %v2_addc = phi i32 [ %v1_addc, %bb ], [ %arg1, %dec_label_pc_ad9d ]
  ret i32 %v2_addc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_ade3() local_unnamed_addr {
dec_label_pc_ade3:
  %v0_ade4 = load i32, i32* @eax, align 4
  ret i32 %v0_ade4
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ade7:
  %stack_var_-20 = alloca i32, align 4
  %v1_ae18 = call i32 @unknown_18ac5(i32 %arg4)
  %v1_ae25 = call i32 @unknown_1686a(i32 %arg3)
  %v1_ae32 = call i32 @unknown_1686a(i32 %arg2)
  %v3_ae42 = call i32 @unknown_18be3(i32 %v1_ae32, i32 %v1_ae25, i32 %v1_ae18)
  store i32 %v3_ae42, i32* %stack_var_-20, align 4
  %v2_ae4a = ptrtoint i32* %stack_var_-20 to i32
  %v2_ae57 = call i32 @unknown_131cb(i32 %arg1, i32 %v2_ae4a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ae6b

bb:                                               ; preds = %dec_label_pc_ade7
  %v1_ae69 = call i32 @function_ae70()
  br label %dec_label_pc_ae6b

dec_label_pc_ae6b:                                ; preds = %bb, %dec_label_pc_ade7
  %v2_ae69 = phi i32 [ %v1_ae69, %bb ], [ %arg1, %dec_label_pc_ade7 ]
  ret i32 %v2_ae69

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1686a, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_ae70() local_unnamed_addr {
dec_label_pc_ae70:
  %v0_ae76 = load i32, i32* @eax, align 4
  ret i32 %v0_ae76
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ae79:
  %v2_aea3 = call i32 @unknown_18cc8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_aeb4

bb:                                               ; preds = %dec_label_pc_ae79
  %v1_aeb2 = call i32 @function_aeb9()
  br label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %bb, %dec_label_pc_ae79
  %v2_aeb2 = phi i32 [ %v1_aeb2, %bb ], [ 0, %dec_label_pc_ae79 ]
  ret i32 %v2_aeb2
}

define i32 @function_aeb9() local_unnamed_addr {
dec_label_pc_aeb9:
  %v0_aeba = load i32, i32* @eax, align 4
  ret i32 %v0_aeba
}

define i32 @_ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_aebb:
  %v1_aed8 = call i32 @unknown_18d3a(i32 %arg1)
  store i32 %v1_aed8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_aee9

bb:                                               ; preds = %dec_label_pc_aebb
  %v1_aee7 = call i32 @function_aeee()
  br label %dec_label_pc_aee9

dec_label_pc_aee9:                                ; preds = %bb, %dec_label_pc_aebb
  %v2_aee7 = phi i32 [ %v1_aee7, %bb ], [ %v1_aed8, %dec_label_pc_aebb ]
  ret i32 %v2_aee7
}

define i32 @function_aeee() local_unnamed_addr {
dec_label_pc_aeee:
  %v0_aeef = load i32, i32* @eax, align 4
  ret i32 %v0_aeef
}

define i32 @_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_aef0:
  %v1_af1b = call i32 @unknown_18d9c(i32 %arg3)
  %v1_af28 = call i32 @unknown_18d9c(i32 %arg2)
  %v1_af35 = call i32 @unknown_18d9c(i32 %arg1)
  %v3_af45 = call i32 @unknown_18c03(i32 %v1_af35, i32 %v1_af28, i32 %v1_af1b)
  ret i32 %v3_af45

; uselistorder directives
  uselistorder i32 (i32)* @unknown_18d9c, { 2, 1, 0 }
}

define i32 @function_af54(i32 %arg1) local_unnamed_addr {
dec_label_pc_af54:
  %v0_af54 = load i1, i1* @zf, align 1
  br i1 %v0_af54, label %bb, label %dec_label_pc_af54.dec_label_pc_af56_crit_edge

dec_label_pc_af54.dec_label_pc_af56_crit_edge:    ; preds = %dec_label_pc_af54
  %v2_af54.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_af56

bb:                                               ; preds = %dec_label_pc_af54
  %v1_af54 = call i32 @function_af5b()
  br label %dec_label_pc_af56

dec_label_pc_af56:                                ; preds = %dec_label_pc_af54.dec_label_pc_af56_crit_edge, %bb
  %v2_af54 = phi i32 [ %v2_af54.pre, %dec_label_pc_af54.dec_label_pc_af56_crit_edge ], [ %v1_af54, %bb ]
  ret i32 %v2_af54

; uselistorder directives
  uselistorder label %dec_label_pc_af56, { 1, 0 }
}

define i32 @function_af5b() local_unnamed_addr {
dec_label_pc_af5b:
  %v0_af61 = load i32, i32* @eax, align 4
  ret i32 %v0_af61
}

define i32 @_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_af62:
  %v3_af99 = call i32 @unknown_18e43(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_af99, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_afaa

bb:                                               ; preds = %dec_label_pc_af62
  %v1_afa8 = call i32 @function_afaf()
  br label %dec_label_pc_afaa

dec_label_pc_afaa:                                ; preds = %bb, %dec_label_pc_af62
  %v3_afa8 = phi i32 [ %v1_afa8, %bb ], [ %v3_af99, %dec_label_pc_af62 ]
  ret i32 %v3_afa8
}

define i32 @function_afaf() local_unnamed_addr {
dec_label_pc_afaf:
  %v0_afb0 = load i32, i32* @eax, align 4
  ret i32 %v0_afb0
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE7destroyEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_afb2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_afdb

bb:                                               ; preds = %dec_label_pc_afb2
  %v3_afd9 = call i32 @function_afe0(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_afdb

dec_label_pc_afdb:                                ; preds = %bb, %dec_label_pc_afb2
  %v4_afd9 = phi i32 [ %v3_afd9, %bb ], [ 0, %dec_label_pc_afb2 ]
  ret i32 %v4_afd9
}

define i32 @function_afe0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_afe0:
  %v0_afe1 = load i32, i32* @eax, align 4
  ret i32 %v0_afe1
}

define i32 @_ZSt13copy_backwardIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_afe2:
  %v0_affb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_affb
}

define i32 @function_b004(i32 %arg1) local_unnamed_addr {
dec_label_pc_b004:
  %ebx.global-to-local = alloca i32, align 4
  %v0_b006 = load i32, i32* @ebp, align 4
  %v1_b006 = add i32 %v0_b006, -32
  %v2_b006 = inttoptr i32 %v1_b006 to i32*
  %v3_b006 = load i32, i32* %v2_b006, align 4
  %v1_b00c = call i32 @unknown_15e9d(i32 %v3_b006)
  store i32 %v1_b00c, i32* %ebx.global-to-local, align 4
  %v0_b013 = load i32, i32* @ebp, align 4
  %v1_b013 = add i32 %v0_b013, -28
  %v2_b013 = inttoptr i32 %v1_b013 to i32*
  %v3_b013 = load i32, i32* %v2_b013, align 4
  %v1_b019 = call i32 @unknown_15e9d(i32 %v3_b013)
  %v0_b01e = load i32, i32* @ebp, align 4
  %v1_b01e = add i32 %v0_b01e, -36
  %v2_b01e = inttoptr i32 %v1_b01e to i32*
  %v3_b01e = load i32, i32* %v2_b01e, align 4
  %v0_b025 = load i32, i32* %ebx.global-to-local, align 4
  %v3_b02c = call i32 @unknown_18f12(i32 %v1_b019, i32 %v0_b025, i32 %v3_b01e)
  store i32 %v3_b02c, i32* @eax, align 4
  %v0_b031 = load i32, i32* @ebp, align 4
  %v1_b031 = add i32 %v0_b031, -12
  %v2_b031 = inttoptr i32 %v1_b031 to i32*
  %v3_b031 = load i32, i32* %v2_b031, align 4
  %v1_b034 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b034 = xor i32 %v1_b034, %v3_b031
  %v3_b034 = icmp eq i32 %v2_b034, 0
  store i32 %v2_b034, i32* @edx, align 4
  br i1 %v3_b034, label %bb, label %dec_label_pc_b03d

bb:                                               ; preds = %dec_label_pc_b004
  %v1_b03b = call i32 @function_b042()
  br label %dec_label_pc_b03d

dec_label_pc_b03d:                                ; preds = %bb, %dec_label_pc_b004
  %v3_b03b = phi i32 [ %v1_b03b, %bb ], [ %v3_b02c, %dec_label_pc_b004 ]
  ret i32 %v3_b03b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_15e9d, { 1, 0 }
}

define i32 @function_b042() local_unnamed_addr {
dec_label_pc_b042:
  %v0_b047 = load i32, i32* @eax, align 4
  ret i32 %v0_b047
}

define i32 @_ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b048:
  %v1_b072 = call i32 @unknown_18fea(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_b082(i32 %arg1) local_unnamed_addr {
dec_label_pc_b082:
  %v2_b082 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_b082 = load i32, i32* @eax, align 4
  %v4_b082 = trunc i32 %v3_b082 to i8
  %v5_b082 = add i8 %v4_b082, %v2_b082
  %v21_b082 = inttoptr i32 %v3_b082 to i8*
  store i8 %v5_b082, i8* %v21_b082, align 1
  %v0_b084 = load i32, i32* @ebx, align 4
  %v1_b086 = load i32, i32* @eax, align 4
  %v2_b086 = sub i32 %v0_b084, %v1_b086
  %v0_b088 = load i32, i32* @ebp, align 4
  %v1_b088 = add i32 %v0_b088, -32
  %v2_b088 = inttoptr i32 %v1_b088 to i32*
  %v3_b088 = load i32, i32* %v2_b088, align 4
  %v7_b08b = icmp ult i32 %v2_b086, %v3_b088
  %v5_b090 = icmp eq i1 %v7_b08b, false
  br i1 %v5_b090, label %bb, label %dec_label_pc_b094

bb:                                               ; preds = %dec_label_pc_b082
  %v1_b092 = call i32 @function_b09f()
  %v0_b094.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b094

dec_label_pc_b094:                                ; preds = %bb, %dec_label_pc_b082
  %v0_b094 = phi i32 [ %v0_b094.pre, %bb ], [ %v0_b088, %dec_label_pc_b082 ]
  %v1_b094 = add i32 %v0_b094, -36
  %v2_b094 = inttoptr i32 %v1_b094 to i32*
  %v3_b094 = load i32, i32* %v2_b094, align 4
  ret i32 %v3_b094
}

define i32 @function_b09f() local_unnamed_addr {
dec_label_pc_b09f:
  %v0_b09f = load i32, i32* @ebp, align 4
  %v1_b09f = add i32 %v0_b09f, -28
  %v2_b09f = inttoptr i32 %v1_b09f to i32*
  %v3_b09f = load i32, i32* %v2_b09f, align 4
  store i32 %v3_b09f, i32* @eax, align 4
  %v1_b0a5 = call i32 @function_10a72(i32 %v3_b09f)
  store i32 %v1_b0a5, i32* @ebx, align 4
  %v0_b0ac = load i32, i32* @ebp, align 4
  %v1_b0ac = add i32 %v0_b0ac, -28
  %v2_b0ac = inttoptr i32 %v1_b0ac to i32*
  %v3_b0ac = load i32, i32* %v2_b0ac, align 4
  store i32 %v3_b0ac, i32* @eax, align 4
  %v1_b0b2 = call i32 @function_10a72(i32 %v3_b0ac)
  %v1_b0b7 = load i32, i32* @ebp, align 4
  %v2_b0b7 = add i32 %v1_b0b7, -20
  %v3_b0b7 = inttoptr i32 %v2_b0b7 to i32*
  store i32 %v1_b0b2, i32* %v3_b0b7, align 4
  %v0_b0ba = load i32, i32* @ebp, align 4
  %v1_b0ba = add i32 %v0_b0ba, -32
  %v1_b0c1 = add i32 %v0_b0ba, -20
  %v2_b0c7 = call i32 @unknown_18b37(i32 %v1_b0c1, i32 %v1_b0ba)
  %v1_b0cc = inttoptr i32 %v2_b0c7 to i32*
  %v2_b0cc = load i32, i32* %v1_b0cc, align 4
  %v1_b0ce = load i32, i32* @ebx, align 4
  %v2_b0ce = add i32 %v1_b0ce, %v2_b0cc
  %v1_b0d0 = load i32, i32* @ebp, align 4
  %v2_b0d0 = add i32 %v1_b0d0, -16
  %v3_b0d0 = inttoptr i32 %v2_b0d0 to i32*
  store i32 %v2_b0ce, i32* %v3_b0d0, align 4
  %v0_b0d3 = load i32, i32* @ebp, align 4
  %v1_b0d3 = add i32 %v0_b0d3, -28
  %v2_b0d3 = inttoptr i32 %v1_b0d3 to i32*
  %v3_b0d3 = load i32, i32* %v2_b0d3, align 4
  store i32 %v3_b0d3, i32* @eax, align 4
  %v1_b0d9 = call i32 @function_10a72(i32 %v3_b0d3)
  ret i32 %v1_b0d9

; uselistorder directives
  uselistorder i32 (i32)* @function_10a72, { 2, 1, 0 }
}

define i32 @function_b0de() local_unnamed_addr {
dec_label_pc_b0de:
  %v0_b0de = load i32, i32* @eax, align 4
  %v1_b0de = load i32, i32* @ebp, align 4
  %v2_b0de = add i32 %v1_b0de, -16
  %v3_b0de = inttoptr i32 %v2_b0de to i32*
  %v4_b0de = load i32, i32* %v3_b0de, align 4
  %tmp4 = icmp ugt i32 %v0_b0de, %v4_b0de
  br i1 %tmp4, label %dec_label_pc_b0f3, label %dec_label_pc_b0e3

dec_label_pc_b0e3:                                ; preds = %dec_label_pc_b0de
  %v1_b0e3 = add i32 %v1_b0de, -28
  %v2_b0e3 = inttoptr i32 %v1_b0e3 to i32*
  %v3_b0e3 = load i32, i32* %v2_b0e3, align 4
  %v1_b0e9 = call i32 @unknown_18fea(i32 %v3_b0e3)
  %v1_b0ee = load i32, i32* @ebp, align 4
  %v2_b0ee = add i32 %v1_b0ee, -16
  %v3_b0ee = inttoptr i32 %v2_b0ee to i32*
  %v4_b0ee = load i32, i32* %v3_b0ee, align 4
  %v10_b0ee = icmp ult i32 %v1_b0e9, %v4_b0ee
  %v1_b0f1 = icmp eq i1 %v10_b0ee, false
  br i1 %v1_b0f1, label %dec_label_pc_b103, label %dec_label_pc_b0f3

dec_label_pc_b0f3:                                ; preds = %dec_label_pc_b0de, %dec_label_pc_b0e3
  %v0_b0f3 = phi i32 [ %v1_b0de, %dec_label_pc_b0de ], [ %v1_b0ee, %dec_label_pc_b0e3 ]
  %v1_b0f3 = add i32 %v0_b0f3, -28
  %v2_b0f3 = inttoptr i32 %v1_b0f3 to i32*
  %v3_b0f3 = load i32, i32* %v2_b0f3, align 4
  %v1_b0f9 = call i32 @unknown_18fea(i32 %v3_b0f3)
  %v0_b103.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b103

dec_label_pc_b103:                                ; preds = %dec_label_pc_b0e3, %dec_label_pc_b0f3
  %v0_b103 = phi i32 [ %v0_b103.pre, %dec_label_pc_b0f3 ], [ %v1_b0ee, %dec_label_pc_b0e3 ]
  %storemerge = phi i32 [ %v1_b0f9, %dec_label_pc_b0f3 ], [ %v4_b0ee, %dec_label_pc_b0e3 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_b103 = add i32 %v0_b103, -12
  %v2_b103 = inttoptr i32 %v1_b103 to i32*
  %v3_b103 = load i32, i32* %v2_b103, align 4
  %v1_b106 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b106 = icmp eq i32 %v1_b106, %v3_b103
  br i1 %v3_b106, label %bb, label %dec_label_pc_b10f

bb:                                               ; preds = %dec_label_pc_b103
  %v1_b10d = call i32 @function_b114()
  br label %dec_label_pc_b10f

dec_label_pc_b10f:                                ; preds = %bb, %dec_label_pc_b103
  %v2_b10d = phi i32 [ %v1_b10d, %bb ], [ %storemerge, %dec_label_pc_b103 ]
  ret i32 %v2_b10d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_18fea, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b103, { 1, 0 }
  uselistorder label %dec_label_pc_b0f3, { 1, 0 }
}

define i32 @function_b114() local_unnamed_addr {
dec_label_pc_b114:
  %v0_b119 = load i32, i32* @eax, align 4
  ret i32 %v0_b119
}

define i32 @_ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b11a:
  ret i32 0
}

define i32 @function_b144(i32 %arg1) local_unnamed_addr {
dec_label_pc_b144:
  %v0_b144 = load i32, i32* @ebp, align 4
  %v1_b145 = load i32, i32* @ecx, align 4
  %v1_b152 = add i32 %v0_b144, 3
  %v9_b152 = icmp eq i32 %v1_b152, 0
  store i32 %v1_b152, i32* @ebp, align 4
  %v2_b153 = icmp eq i32 %v1_b145, 1
  %v4_b153 = or i1 %v9_b152, %v2_b153
  br i1 %v4_b153, label %dec_label_pc_b144.dec_label_pc_b155_crit_edge, label %bb

dec_label_pc_b144.dec_label_pc_b155_crit_edge:    ; preds = %dec_label_pc_b144
  br label %dec_label_pc_b155

bb:                                               ; preds = %dec_label_pc_b144
  %v6_b153 = call i32 @function_b0de()
  %v0_b158.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b155

dec_label_pc_b155:                                ; preds = %dec_label_pc_b144.dec_label_pc_b155_crit_edge, %bb
  %v0_b158 = phi i32 [ %v1_b152, %dec_label_pc_b144.dec_label_pc_b155_crit_edge ], [ %v0_b158.pre, %bb ]
  %v1_b158 = add i32 %v0_b158, -28
  %v2_b158 = inttoptr i32 %v1_b158 to i32*
  %v3_b158 = load i32, i32* %v2_b158, align 4
  %v1_b15e = call i32 @unknown_13b21(i32 %v3_b158)
  store i32 %v1_b15e, i32* @eax, align 4
  %v0_b163 = load i32, i32* @ebp, align 4
  %v1_b163 = add i32 %v0_b163, -12
  %v2_b163 = inttoptr i32 %v1_b163 to i32*
  %v3_b163 = load i32, i32* %v2_b163, align 4
  %v1_b166 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b166 = icmp eq i32 %v1_b166, %v3_b163
  br i1 %v3_b166, label %bb5, label %dec_label_pc_b16f

bb5:                                              ; preds = %dec_label_pc_b155
  %v1_b16d = call i32 @function_b174()
  br label %dec_label_pc_b16f

dec_label_pc_b16f:                                ; preds = %bb5, %dec_label_pc_b155
  %v2_b16d = phi i32 [ %v1_b16d, %bb5 ], [ %v1_b15e, %dec_label_pc_b155 ]
  ret i32 %v2_b16d

; uselistorder directives
  uselistorder label %dec_label_pc_b155, { 1, 0 }
}

define i32 @function_b174() local_unnamed_addr {
dec_label_pc_b174:
  %v0_b175 = load i32, i32* @eax, align 4
  ret i32 %v0_b175
}

define i32 @_ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag(i32 %arg1) local_unnamed_addr {
dec_label_pc_b176:
  ret i32 %arg1
}

define i32 @function_b182(i32 %arg1) local_unnamed_addr {
dec_label_pc_b182:
  %v0_b182 = load i32, i32* @ebp, align 4
  %v1_b182 = add i32 %v0_b182, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_b182 = inttoptr i32 %v1_b182 to i32*
  %v3_b182 = load i32, i32* %v2_b182, align 4
  %v2_b185 = add i32 %v0_b182, -32
  %v3_b185 = inttoptr i32 %v2_b185 to i32*
  store i32 %v3_b182, i32* %v3_b185, align 4
  %v0_b188 = load i32, i32* @ebp, align 4
  %v1_b188 = add i32 %v0_b188, 16
  %v2_b188 = inttoptr i32 %v1_b188 to i32*
  %v3_b188 = load i32, i32* %v2_b188, align 4
  %v2_b18b = add i32 %v0_b188, -36
  %v3_b18b = inttoptr i32 %v2_b18b to i32*
  store i32 %v3_b188, i32* %v3_b18b, align 4
  %v0_b18e = load i32, i32* @ebp, align 4
  %v1_b18e = add i32 %v0_b18e, 20
  %v2_b18e = inttoptr i32 %v1_b18e to i8*
  %v3_b18e = load i8, i8* %v2_b18e, align 1
  %v3_b192 = add i32 %v0_b18e, -37
  %v4_b192 = inttoptr i32 %v3_b192 to i8*
  store i8 %v3_b18e, i8* %v4_b192, align 1
  %v0_b195 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_b19b = load i32, i32* @ebp, align 4
  %v2_b19b = add i32 %v1_b19b, -12
  %v3_b19b = inttoptr i32 %v2_b19b to i32*
  store i32 %v0_b195, i32* %v3_b19b, align 4
  %v0_b1a0 = load i32, i32* @ebp, align 4
  %v1_b1a0 = add i32 %v0_b1a0, -36
  %v2_b1a0 = inttoptr i32 %v1_b1a0 to i32*
  %v3_b1a0 = load i32, i32* %v2_b1a0, align 4
  %v1_b1a7 = add i32 %v0_b1a0, -32
  %v2_b1a7 = inttoptr i32 %v1_b1a7 to i32*
  %v3_b1a7 = load i32, i32* %v2_b1a7, align 4
  %v2_b1ad = call i32 @unknown_19155(i32 %v3_b1a7, i32 %v3_b1a0)
  %v1_b1b2 = load i32, i32* @ebp, align 4
  %v2_b1b2 = add i32 %v1_b1b2, -16
  %v3_b1b2 = inttoptr i32 %v2_b1b2 to i32*
  store i32 %v2_b1ad, i32* %v3_b1b2, align 4
  %v0_b1b5 = load i32, i32* @ebp, align 4
  %v1_b1b5 = add i32 %v0_b1b5, -28
  %v2_b1b5 = inttoptr i32 %v1_b1b5 to i32*
  %v3_b1b5 = load i32, i32* %v2_b1b5, align 4
  %v1_b1b8 = add i32 %v0_b1b5, -16
  %v2_b1b8 = inttoptr i32 %v1_b1b8 to i32*
  %v3_b1b8 = load i32, i32* %v2_b1b8, align 4
  %v2_b1c2 = call i32 @unknown_15b96(i32 %v3_b1b5, i32 %v3_b1b8)
  %v0_b1c9 = load i32, i32* @ebp, align 4
  %v1_b1c9 = add i32 %v0_b1c9, -28
  %v2_b1c9 = inttoptr i32 %v1_b1c9 to i32*
  %v3_b1c9 = load i32, i32* %v2_b1c9, align 4
  %v2_b1cc = inttoptr i32 %v3_b1c9 to i32*
  store i32 %v2_b1c2, i32* %v2_b1cc, align 4
  %v0_b1ce = load i32, i32* @ebp, align 4
  %v1_b1ce = add i32 %v0_b1ce, -28
  %v2_b1ce = inttoptr i32 %v1_b1ce to i32*
  %v3_b1ce = load i32, i32* %v2_b1ce, align 4
  %v1_b1d1 = inttoptr i32 %v3_b1ce to i32*
  %v2_b1d1 = load i32, i32* %v1_b1d1, align 4
  %v2_b1d5 = add i32 %v0_b1ce, -16
  %v3_b1d5 = inttoptr i32 %v2_b1d5 to i32*
  %v4_b1d5 = load i32, i32* %v3_b1d5, align 4
  %v5_b1d5 = add i32 %v4_b1d5, %v2_b1d1
  %v3_b1d8 = load i32, i32* %v2_b1ce, align 4
  %v2_b1db = add i32 %v3_b1d8, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_b1db = inttoptr i32 %v2_b1db to i32*
  store i32 %v5_b1d5, i32* %v3_b1db, align 4
  %v0_b1de = load i32, i32* @ebp, align 4
  %v1_b1de = add i32 %v0_b1de, -28
  %v2_b1de = inttoptr i32 %v1_b1de to i32*
  %v3_b1de = load i32, i32* %v2_b1de, align 4
  %v1_b1e4 = call i32 @unknown_134e4(i32 %v3_b1de)
  %v0_b1e9 = load i32, i32* @ebp, align 4
  %v1_b1e9 = add i32 %v0_b1e9, -28
  %v2_b1e9 = inttoptr i32 %v1_b1e9 to i32*
  %v3_b1e9 = load i32, i32* %v2_b1e9, align 4
  %v1_b1ec = inttoptr i32 %v3_b1e9 to i32*
  %v2_b1ec = load i32, i32* %v1_b1ec, align 4
  %v1_b1f6 = add i32 %v0_b1e9, -36
  %v2_b1f6 = inttoptr i32 %v1_b1f6 to i32*
  %v3_b1f6 = load i32, i32* %v2_b1f6, align 4
  %v1_b1fd = add i32 %v0_b1e9, -32
  %v2_b1fd = inttoptr i32 %v1_b1fd to i32*
  %v3_b1fd = load i32, i32* %v2_b1fd, align 4
  %v4_b203 = call i32 @unknown_13661(i32 %v3_b1fd, i32 %v3_b1f6, i32 %v2_b1ec, i32 %v1_b1e4)
  %v0_b20a = load i32, i32* @ebp, align 4
  %v1_b20a = add i32 %v0_b20a, -28
  %v2_b20a = inttoptr i32 %v1_b20a to i32*
  %v3_b20a = load i32, i32* %v2_b20a, align 4
  %v2_b20d = add i32 %v3_b20a, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b20d = inttoptr i32 %v2_b20d to i32*
  store i32 %v4_b203, i32* %v3_b20d, align 4
  %v0_b210 = load i32, i32* @ebp, align 4
  %v1_b210 = add i32 %v0_b210, -12
  %v2_b210 = inttoptr i32 %v1_b210 to i32*
  %v3_b210 = load i32, i32* %v2_b210, align 4
  %v1_b213 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b213 = xor i32 %v1_b213, %v3_b210
  %v3_b213 = icmp eq i32 %v2_b213, 0
  store i32 %v2_b213, i32* @eax, align 4
  br i1 %v3_b213, label %bb, label %dec_label_pc_b21c

bb:                                               ; preds = %dec_label_pc_b182
  %v1_b21a = call i32 @function_b221()
  br label %dec_label_pc_b21c

dec_label_pc_b21c:                                ; preds = %bb, %dec_label_pc_b182
  %v2_b21a = phi i32 [ %v1_b21a, %bb ], [ %v2_b213, %dec_label_pc_b182 ]
  ret i32 %v2_b21a

; uselistorder directives
  uselistorder i32 %v0_b1e9, { 1, 0, 2 }
}

define i32 @function_b221() local_unnamed_addr {
dec_label_pc_b221:
  %v0_b222 = load i32, i32* @eax, align 4
  ret i32 %v0_b222
}

define i32 @_ZNSt6vectorIhSaIhEE19_M_range_initializeIPKhEEvT_S5_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b224:
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v2_b25b = call i32 @unknown_19262(i32 %arg2, i32 %arg3)
  %v2_b270 = call i32 @unknown_15c44(i32 %tmp110, i32 %v2_b25b)
  store i32 %v2_b270, i32* %arg1, align 4
  %v5_b283 = add i32 %v2_b270, %v2_b25b
  %v2_b289 = add i32 %tmp110, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_b289 = inttoptr i32 %v2_b289 to i32*
  store i32 %v5_b283, i32* %v3_b289, align 4
  %v1_b292 = call i32 @unknown_13592(i32 %tmp110)
  %v2_b29a = load i32, i32* %arg1, align 4
  %v4_b2b1 = call i32 @unknown_192c1(i32 %arg2, i32 %arg3, i32 %v2_b29a, i32 %v1_b292)
  %v2_b2bb = add i32 %tmp110, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b2bb = inttoptr i32 %v2_b2bb to i32*
  store i32 %v4_b2b1, i32* %v3_b2bb, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b2ca

bb:                                               ; preds = %dec_label_pc_b224
  %v1_b2c8 = call i32 @function_b2cf()
  br label %dec_label_pc_b2ca

dec_label_pc_b2ca:                                ; preds = %bb, %dec_label_pc_b224
  %v2_b2c8 = phi i32 [ %v1_b2c8, %bb ], [ 0, %dec_label_pc_b224 ]
  ret i32 %v2_b2c8

; uselistorder directives
  uselistorder i32 %tmp110, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_b2cf() local_unnamed_addr {
dec_label_pc_b2cf:
  %v0_b2d0 = load i32, i32* @eax, align 4
  ret i32 %v0_b2d0
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_b2d2:
  %stack_var_-72 = alloca i32, align 4
  %v2_b30b = ptrtoint i32* %stack_var_-72 to i32
  ret i32 %v2_b30b
}

define i32 @function_b318(i32 %arg1) local_unnamed_addr {
dec_label_pc_b318:
  %v0_b318 = load i1, i1* @zf, align 1
  br i1 %v0_b318, label %bb, label %dec_label_pc_b31e

bb:                                               ; preds = %dec_label_pc_b318
  %v1_b318 = call i32 @function_b699()
  br label %dec_label_pc_b31e

dec_label_pc_b31e:                                ; preds = %bb, %dec_label_pc_b318
  %v0_b31e = load i32, i32* @ebp, align 4
  %v1_b31e = add i32 %v0_b31e, -72
  %v2_b31e = inttoptr i32 %v1_b31e to i32*
  %v3_b31e = load i32, i32* %v2_b31e, align 4
  %v1_b325 = add i32 %v0_b31e, -68
  %v2_b325 = inttoptr i32 %v1_b325 to i32*
  %v3_b325 = load i32, i32* %v2_b325, align 4
  %v2_b32b = call i32 @unknown_192b1(i32 %v3_b325, i32 %v3_b31e)
  %v1_b330 = load i32, i32* @ebp, align 4
  %v2_b330 = add i32 %v1_b330, -32
  %v3_b330 = inttoptr i32 %v2_b330 to i32*
  store i32 %v2_b32b, i32* %v3_b330, align 4
  %v0_b333 = load i32, i32* @ebp, align 4
  %v1_b333 = add i32 %v0_b333, -60
  %v2_b333 = inttoptr i32 %v1_b333 to i32*
  %v3_b333 = load i32, i32* %v2_b333, align 4
  %v1_b336 = add i32 %v3_b333, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_b336 = inttoptr i32 %v1_b336 to i32*
  %v3_b336 = load i32, i32* %v2_b336, align 4
  %v1_b33e = add i32 %v3_b333, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b33e = inttoptr i32 %v1_b33e to i32*
  %v3_b33e = load i32, i32* %v2_b33e, align 4
  %v2_b343 = sub i32 %v3_b336, %v3_b33e
  %v2_b347 = add i32 %v0_b333, -32
  %v3_b347 = inttoptr i32 %v2_b347 to i32*
  %v4_b347 = load i32, i32* %v3_b347, align 4
  %v10_b347 = icmp ult i32 %v2_b343, %v4_b347
  br i1 %v10_b347, label %bb6, label %dec_label_pc_b350

bb6:                                              ; preds = %dec_label_pc_b31e
  %v1_b34a = call i32 @function_b4f7()
  %v0_b350.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b350

dec_label_pc_b350:                                ; preds = %bb6, %dec_label_pc_b31e
  %v0_b350 = phi i32 [ %v0_b350.pre, %bb6 ], [ %v0_b333, %dec_label_pc_b31e ]
  %v1_b350 = add i32 %v0_b350, -52
  store i32 %v1_b350, i32* @eax, align 4
  %v1_b353 = add i32 %v0_b350, -60
  %v2_b353 = inttoptr i32 %v1_b353 to i32*
  %v3_b353 = load i32, i32* %v2_b353, align 4
  %v2_b35d = call i32 @function_11b80(i32 %v1_b350, i32 %v3_b353)
  %v0_b365 = load i32, i32* @ebp, align 4
  %v1_b365 = add i32 %v0_b365, -64
  %v1_b36c = add i32 %v0_b365, -52
  store i32 %v1_b36c, i32* @eax, align 4
  %v2_b372 = call i32 @function_122f0(i32 %v1_b36c, i32 %v1_b365)
  %v1_b377 = load i32, i32* @ebp, align 4
  %v2_b377 = add i32 %v1_b377, -28
  %v3_b377 = inttoptr i32 %v2_b377 to i32*
  store i32 %v2_b372, i32* %v3_b377, align 4
  %v0_b37a = load i32, i32* @ebp, align 4
  %v1_b37a = add i32 %v0_b37a, -60
  %v2_b37a = inttoptr i32 %v1_b37a to i32*
  %v3_b37a = load i32, i32* %v2_b37a, align 4
  %v1_b37d = add i32 %v3_b37a, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b37d = inttoptr i32 %v1_b37d to i32*
  %v3_b37d = load i32, i32* %v2_b37d, align 4
  %v2_b380 = add i32 %v0_b37a, -24
  %v3_b380 = inttoptr i32 %v2_b380 to i32*
  store i32 %v3_b37d, i32* %v3_b380, align 4
  %v0_b383 = load i32, i32* @ebp, align 4
  %v1_b383 = add i32 %v0_b383, -28
  %v2_b383 = inttoptr i32 %v1_b383 to i32*
  %v3_b383 = load i32, i32* %v2_b383, align 4
  %v2_b386 = add i32 %v0_b383, -32
  %v3_b386 = inttoptr i32 %v2_b386 to i32*
  %v4_b386 = load i32, i32* %v3_b386, align 4
  %tmp9 = icmp ugt i32 %v3_b383, %v4_b386
  br i1 %tmp9, label %dec_label_pc_b38f, label %bb8

bb8:                                              ; preds = %dec_label_pc_b350
  %v3_b389 = call i32 @function_b42a()
  %v0_b38f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b38f

dec_label_pc_b38f:                                ; preds = %dec_label_pc_b350, %bb8
  %v0_b38f = phi i32 [ %v0_b38f.pre, %bb8 ], [ %v0_b383, %dec_label_pc_b350 ]
  %v1_b38f = add i32 %v0_b38f, -60
  %v2_b38f = inttoptr i32 %v1_b38f to i32*
  %v3_b38f = load i32, i32* %v2_b38f, align 4
  %v1_b395 = call i32 @unknown_13640(i32 %v3_b38f)
  %v0_b39a = load i32, i32* @ebp, align 4
  %v1_b39a = add i32 %v0_b39a, -60
  %v2_b39a = inttoptr i32 %v1_b39a to i32*
  %v3_b39a = load i32, i32* %v2_b39a, align 4
  %v1_b39d = add i32 %v3_b39a, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b39d = inttoptr i32 %v1_b39d to i32*
  %v3_b39d = load i32, i32* %v2_b39d, align 4
  %v1_b3a3 = add i32 %v3_b39a, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b3a3 = inttoptr i32 %v1_b3a3 to i32*
  %v3_b3a3 = load i32, i32* %v2_b3a3, align 4
  %v3_b3a6 = load i32, i32* %v2_b39a, align 4
  %v1_b3a9 = add i32 %v3_b3a6, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b3a9 = inttoptr i32 %v1_b3a9 to i32*
  %v3_b3a9 = load i32, i32* %v2_b3a9, align 4
  %v1_b3ac = add i32 %v0_b39a, -32
  %v2_b3ac = inttoptr i32 %v1_b3ac to i32*
  %v3_b3ac = load i32, i32* %v2_b3ac, align 4
  %v2_b3b1 = sub i32 %v3_b3a9, %v3_b3ac
  %v4_b3c2 = call i32 @unknown_163ec(i32 %v2_b3b1, i32 %v3_b3a3, i32 %v3_b39d, i32 %v1_b395)
  ret i32 %v4_b3c2

; uselistorder directives
  uselistorder i32 %v0_b350, { 1, 0 }
  uselistorder label %dec_label_pc_b38f, { 1, 0 }
}

define i32 @function_b3c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_b3c8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_b3c8 = load i32, i32* @ebp, align 4
  %v1_b3c8 = add i32 %v0_b3c8, 1
  store i32 %v1_b3c8, i32* @ebp, align 4
  %v0_b3cf = load i32, i32* @edx, align 4
  %v2_b3cf = add i32 %v0_b3c8, -31
  %v3_b3cf = inttoptr i32 %v2_b3cf to i32*
  %v4_b3cf = load i32, i32* %v3_b3cf, align 4
  %v5_b3cf = add i32 %v4_b3cf, %v0_b3cf
  %v1_b3d2 = add i32 %v0_b3c8, -59
  %v2_b3d2 = inttoptr i32 %v1_b3d2 to i32*
  %v3_b3d2 = load i32, i32* %v2_b3d2, align 4
  %v2_b3d5 = add i32 %v3_b3d2, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b3d5 = inttoptr i32 %v2_b3d5 to i32*
  store i32 %v5_b3cf, i32* %v3_b3d5, align 4
  %v0_b3d8 = load i32, i32* @ebp, align 4
  %v1_b3d8 = add i32 %v0_b3d8, -32
  %v2_b3d8 = inttoptr i32 %v1_b3d8 to i32*
  %v3_b3d8 = load i32, i32* %v2_b3d8, align 4
  %v1_b3db = sub i32 0, %v3_b3d8
  store i32 %v1_b3db, i32* %ebx.global-to-local, align 4
  %v2_b3df = add i32 %v0_b3d8, -24
  %v3_b3df = inttoptr i32 %v2_b3df to i32*
  %v4_b3df = load i32, i32* %v3_b3df, align 4
  %v5_b3df = sub i32 %v4_b3df, %v3_b3d8
  store i32 %v5_b3df, i32* %ebx.global-to-local, align 4
  %v1_b3e2 = add i32 %v0_b3d8, -64
  %v1_b3e8 = call i32 @unknown_13952(i32 %v1_b3e2)
  %v1_b3ed = inttoptr i32 %v1_b3e8 to i32*
  %v2_b3ed = load i32, i32* %v1_b3ed, align 4
  %v0_b3ef = load i32, i32* @ebp, align 4
  %v1_b3ef = add i32 %v0_b3ef, -24
  %v2_b3ef = inttoptr i32 %v1_b3ef to i32*
  %v3_b3ef = load i32, i32* %v2_b3ef, align 4
  %v0_b3f6 = load i32, i32* %ebx.global-to-local, align 4
  %v3_b3fd = call i32 @unknown_162b4(i32 %v2_b3ed, i32 %v0_b3f6, i32 %v3_b3ef)
  %v0_b402 = load i32, i32* @ebp, align 4
  %v1_b402 = add i32 %v0_b402, -48
  %v1_b405 = add i32 %v0_b402, -64
  %v2_b405 = inttoptr i32 %v1_b405 to i32*
  %v3_b405 = load i32, i32* %v2_b405, align 4
  %v1_b40c = add i32 %v0_b402, -72
  %v2_b40c = inttoptr i32 %v1_b40c to i32*
  %v3_b40c = load i32, i32* %v2_b40c, align 4
  %v1_b413 = add i32 %v0_b402, -68
  %v2_b413 = inttoptr i32 %v1_b413 to i32*
  %v3_b413 = load i32, i32* %v2_b413, align 4
  %v4_b41d = call i32 @unknown_13b9d(i32 %v1_b402, i32 %v3_b413, i32 %v3_b40c, i32 %v3_b405)
  store i32 %v4_b41d, i32* @eax, align 4
  %v0_b425 = call i32 @function_b699()
  ret i32 %v0_b425

; uselistorder directives
  uselistorder i32 %v0_b402, { 1, 0, 2, 3 }
}

define i32 @function_b42a() local_unnamed_addr {
dec_label_pc_b42a:
  %v0_b42a = load i32, i32* @ebp, align 4
  %v1_b42a = add i32 %v0_b42a, -68
  %v2_b42a = inttoptr i32 %v1_b42a to i32*
  %v3_b42a = load i32, i32* %v2_b42a, align 4
  %v2_b42d = add i32 %v0_b42a, -44
  %v3_b42d = inttoptr i32 %v2_b42d to i32*
  store i32 %v3_b42a, i32* %v3_b42d, align 4
  %v0_b430 = load i32, i32* @ebp, align 4
  %v1_b430 = add i32 %v0_b430, -28
  %v2_b430 = inttoptr i32 %v1_b430 to i32*
  %v3_b430 = load i32, i32* %v2_b430, align 4
  %v1_b437 = add i32 %v0_b430, -44
  %v2_b43d = call i32 @unknown_193c4(i32 %v1_b437, i32 %v3_b430)
  %v0_b442 = load i32, i32* @ebp, align 4
  %v1_b442 = add i32 %v0_b442, -60
  %v2_b442 = inttoptr i32 %v1_b442 to i32*
  %v3_b442 = load i32, i32* %v2_b442, align 4
  ret i32 %v3_b442
}

define i32 @function_b44c(i32 %arg1) local_unnamed_addr {
dec_label_pc_b44c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_b44c = load i32, i32* @ebx, align 4
  %v1_b44c = add i32 %v0_b44c, 1384891477
  %v2_b44c = inttoptr i32 %v1_b44c to i8*
  %v3_b44c = load i8, i8* %v2_b44c, align 1
  %v4_b44c = load i32, i32* @ecx, align 4
  %v5_b44c = trunc i32 %v4_b44c to i8
  %v6_b44c = add i8 %v5_b44c, %v3_b44c
  store i8 %v6_b44c, i8* %v2_b44c, align 1
  %v0_b457 = load i32, i32* @edx, align 4
  %v0_b45b = load i32, i32* @ebp, align 4
  %v1_b45b = add i32 %v0_b45b, -72
  %v2_b45b = inttoptr i32 %v1_b45b to i32*
  %v3_b45b = load i32, i32* %v2_b45b, align 4
  %v1_b462 = add i32 %v0_b45b, -44
  %v2_b462 = inttoptr i32 %v1_b462 to i32*
  %v3_b462 = load i32, i32* %v2_b462, align 4
  %v3_b468 = call i32 @unknown_137bd(i32 %v3_b462, i32 %v3_b45b, i32 %v0_b457)
  %v0_b46d = load i32, i32* @ebp, align 4
  %v1_b46d = add i32 %v0_b46d, -60
  %v2_b46d = inttoptr i32 %v1_b46d to i32*
  %v3_b46d = load i32, i32* %v2_b46d, align 4
  %v1_b470 = add i32 %v3_b46d, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b470 = inttoptr i32 %v1_b470 to i32*
  %v3_b470 = load i32, i32* %v2_b470, align 4
  %v1_b473 = add i32 %v0_b46d, -28
  %v2_b473 = inttoptr i32 %v1_b473 to i32*
  %v3_b473 = load i32, i32* %v2_b473, align 4
  %v1_b476 = add i32 %v0_b46d, -32
  %v2_b476 = inttoptr i32 %v1_b476 to i32*
  %v3_b476 = load i32, i32* %v2_b476, align 4
  store i32 %v3_b476, i32* @ecx, align 4
  %v2_b47b = sub i32 %v3_b476, %v3_b473
  store i32 %v2_b47b, i32* %ebx.global-to-local, align 4
  %v2_b47f = add i32 %v2_b47b, %v3_b470
  %v3_b481 = load i32, i32* %v2_b46d, align 4
  %v2_b484 = add i32 %v3_b481, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b484 = inttoptr i32 %v2_b484 to i32*
  store i32 %v2_b47f, i32* %v3_b484, align 4
  %v0_b487 = load i32, i32* @ebp, align 4
  %v1_b487 = add i32 %v0_b487, -60
  %v2_b487 = inttoptr i32 %v1_b487 to i32*
  %v3_b487 = load i32, i32* %v2_b487, align 4
  %v1_b48d = call i32 @unknown_13640(i32 %v3_b487)
  store i32 %v1_b48d, i32* %ebx.global-to-local, align 4
  %v0_b494 = load i32, i32* @ebp, align 4
  %v1_b494 = add i32 %v0_b494, -60
  %v2_b494 = inttoptr i32 %v1_b494 to i32*
  %v3_b494 = load i32, i32* %v2_b494, align 4
  %v1_b497 = add i32 %v3_b494, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b497 = inttoptr i32 %v1_b497 to i32*
  %v3_b497 = load i32, i32* %v2_b497, align 4
  %v1_b49a = add i32 %v0_b494, -64
  %v1_b4a0 = call i32 @unknown_13952(i32 %v1_b49a)
  %v1_b4a5 = inttoptr i32 %v1_b4a0 to i32*
  %v2_b4a5 = load i32, i32* %v1_b4a5, align 4
  %v0_b4a7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_b4af = load i32, i32* @ebp, align 4
  %v1_b4af = add i32 %v0_b4af, -24
  %v2_b4af = inttoptr i32 %v1_b4af to i32*
  %v3_b4af = load i32, i32* %v2_b4af, align 4
  %v4_b4b9 = call i32 @unknown_163ec(i32 %v2_b4a5, i32 %v3_b4af, i32 %v3_b497, i32 %v0_b4a7)
  %v0_b4be = load i32, i32* @ebp, align 4
  %v1_b4be = add i32 %v0_b4be, -60
  %v2_b4be = inttoptr i32 %v1_b4be to i32*
  %v3_b4be = load i32, i32* %v2_b4be, align 4
  %v1_b4c1 = add i32 %v3_b4be, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b4c1 = inttoptr i32 %v1_b4c1 to i32*
  %v3_b4c1 = load i32, i32* %v2_b4c1, align 4
  %v2_b4c6 = add i32 %v0_b4be, -28
  %v3_b4c6 = inttoptr i32 %v2_b4c6 to i32*
  %v4_b4c6 = load i32, i32* %v3_b4c6, align 4
  %v5_b4c6 = add i32 %v4_b4c6, %v3_b4c1
  %v3_b4c9 = load i32, i32* %v2_b4be, align 4
  %v2_b4cc = add i32 %v3_b4c9, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b4cc = inttoptr i32 %v2_b4cc to i32*
  store i32 %v5_b4c6, i32* %v3_b4cc, align 4
  %v0_b4cf = load i32, i32* @ebp, align 4
  %v1_b4cf = add i32 %v0_b4cf, -40
  %v1_b4d2 = add i32 %v0_b4cf, -64
  %v2_b4d2 = inttoptr i32 %v1_b4d2 to i32*
  %v3_b4d2 = load i32, i32* %v2_b4d2, align 4
  %v1_b4d9 = add i32 %v0_b4cf, -44
  %v2_b4d9 = inttoptr i32 %v1_b4d9 to i32*
  %v3_b4d9 = load i32, i32* %v2_b4d9, align 4
  %v1_b4e0 = add i32 %v0_b4cf, -68
  %v2_b4e0 = inttoptr i32 %v1_b4e0 to i32*
  %v3_b4e0 = load i32, i32* %v2_b4e0, align 4
  store i32 %v3_b4e0, i32* @edx, align 4
  %v4_b4ea = call i32 @unknown_13b9d(i32 %v1_b4cf, i32 %v3_b4e0, i32 %v3_b4d9, i32 %v3_b4d2)
  store i32 %v4_b4ea, i32* @eax, align 4
  %v0_b4f2 = call i32 @function_b699()
  ret i32 %v0_b4f2

; uselistorder directives
  uselistorder i32 %v0_b4cf, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b46d, { 1, 0, 2 }
}

define i32 @function_b4f7() local_unnamed_addr {
dec_label_pc_b4f7:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_b4ff = load i32, i32* @ebp, align 4
  %v1_b4ff = add i32 %v0_b4ff, -32
  %v2_b4ff = inttoptr i32 %v1_b4ff to i32*
  %v3_b4ff = load i32, i32* %v2_b4ff, align 4
  %v1_b506 = add i32 %v0_b4ff, -60
  %v2_b506 = inttoptr i32 %v1_b506 to i32*
  %v3_b506 = load i32, i32* %v2_b506, align 4
  %v4_b50c = call i32 @unknown_1631a(i32 %v3_b506, i32 %v3_b4ff, i32 ptrtoint ([24 x i8]* @global_var_1e34.920 to i32))
  %v1_b511 = load i32, i32* @ebp, align 4
  %v2_b511 = add i32 %v1_b511, -20
  %v3_b511 = inttoptr i32 %v2_b511 to i32*
  store i32 %v4_b50c, i32* %v3_b511, align 4
  %v0_b514 = load i32, i32* @ebp, align 4
  %v1_b514 = add i32 %v0_b514, -60
  %v2_b514 = inttoptr i32 %v1_b514 to i32*
  %v3_b514 = load i32, i32* %v2_b514, align 4
  %v1_b517 = add i32 %v0_b514, -20
  %v2_b517 = inttoptr i32 %v1_b517 to i32*
  %v3_b517 = load i32, i32* %v2_b517, align 4
  %v2_b521 = call i32 @unknown_15cf2(i32 %v3_b514, i32 %v3_b517)
  %v1_b526 = load i32, i32* @ebp, align 4
  %v2_b526 = add i32 %v1_b526, -16
  %v3_b526 = inttoptr i32 %v2_b526 to i32*
  store i32 %v2_b521, i32* %v3_b526, align 4
  %v0_b529 = load i32, i32* @ebp, align 4
  %v1_b529 = add i32 %v0_b529, -16
  %v2_b529 = inttoptr i32 %v1_b529 to i32*
  %v3_b529 = load i32, i32* %v2_b529, align 4
  %v2_b52c = add i32 %v0_b529, -36
  %v3_b52c = inttoptr i32 %v2_b52c to i32*
  store i32 %v3_b529, i32* %v3_b52c, align 4
  %v0_b52f = load i32, i32* @ebp, align 4
  %v1_b52f = add i32 %v0_b52f, -60
  %v2_b52f = inttoptr i32 %v1_b52f to i32*
  %v3_b52f = load i32, i32* %v2_b52f, align 4
  %v1_b535 = call i32 @unknown_13640(i32 %v3_b52f)
  store i32 %v1_b535, i32* %ebx.global-to-local, align 4
  %v0_b53c = load i32, i32* @ebp, align 4
  %v1_b53c = add i32 %v0_b53c, -64
  %v1_b542 = call i32 @unknown_13952(i32 %v1_b53c)
  %v1_b547 = inttoptr i32 %v1_b542 to i32*
  %v2_b547 = load i32, i32* %v1_b547, align 4
  %v0_b549 = load i32, i32* @ebp, align 4
  %v1_b549 = add i32 %v0_b549, -60
  %v2_b549 = inttoptr i32 %v1_b549 to i32*
  %v3_b549 = load i32, i32* %v2_b549, align 4
  %v1_b54c = inttoptr i32 %v3_b549 to i32*
  %v2_b54c = load i32, i32* %v1_b54c, align 4
  %v0_b54e = load i32, i32* %ebx.global-to-local, align 4
  %v1_b552 = add i32 %v0_b549, -16
  %v2_b552 = inttoptr i32 %v1_b552 to i32*
  %v3_b552 = load i32, i32* %v2_b552, align 4
  %v5_b560 = call i32 @unknown_163ec(i32 %v2_b54c, i32 %v2_b547, i32 %v3_b552, i32 %v0_b54e)
  %v1_b565 = load i32, i32* @ebp, align 4
  %v2_b565 = add i32 %v1_b565, -36
  %v3_b565 = inttoptr i32 %v2_b565 to i32*
  store i32 %v5_b560, i32* %v3_b565, align 4
  %v0_b568 = load i32, i32* @ebp, align 4
  %v1_b568 = add i32 %v0_b568, -60
  %v2_b568 = inttoptr i32 %v1_b568 to i32*
  %v3_b568 = load i32, i32* %v2_b568, align 4
  %v1_b56e = call i32 @unknown_13640(i32 %v3_b568)
  %v0_b577 = load i32, i32* @ebp, align 4
  %v1_b577 = add i32 %v0_b577, -36
  %v2_b577 = inttoptr i32 %v1_b577 to i32*
  %v3_b577 = load i32, i32* %v2_b577, align 4
  %v1_b57e = add i32 %v0_b577, -72
  %v2_b57e = inttoptr i32 %v1_b57e to i32*
  %v3_b57e = load i32, i32* %v2_b57e, align 4
  %v1_b585 = add i32 %v0_b577, -68
  %v2_b585 = inttoptr i32 %v1_b585 to i32*
  %v3_b585 = load i32, i32* %v2_b585, align 4
  %v4_b58b = call i32 @unknown_137bd(i32 %v3_b585, i32 %v3_b57e, i32 %v3_b577)
  %v1_b590 = load i32, i32* @ebp, align 4
  %v2_b590 = add i32 %v1_b590, -36
  %v3_b590 = inttoptr i32 %v2_b590 to i32*
  store i32 %v4_b58b, i32* %v3_b590, align 4
  %v0_b593 = load i32, i32* @ebp, align 4
  %v1_b593 = add i32 %v0_b593, -60
  %v2_b593 = inttoptr i32 %v1_b593 to i32*
  %v3_b593 = load i32, i32* %v2_b593, align 4
  %v1_b599 = call i32 @unknown_13640(i32 %v3_b593)
  store i32 %v1_b599, i32* %ebx.global-to-local, align 4
  %v0_b5a0 = load i32, i32* @ebp, align 4
  %v1_b5a0 = add i32 %v0_b5a0, -60
  %v2_b5a0 = inttoptr i32 %v1_b5a0 to i32*
  %v3_b5a0 = load i32, i32* %v2_b5a0, align 4
  %v1_b5a3 = add i32 %v3_b5a0, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b5a3 = inttoptr i32 %v1_b5a3 to i32*
  %v3_b5a3 = load i32, i32* %v2_b5a3, align 4
  store i32 %v3_b5a3, i32* %esi.global-to-local, align 4
  %v1_b5a6 = add i32 %v0_b5a0, -64
  %v1_b5ac = call i32 @unknown_13952(i32 %v1_b5a6)
  %v1_b5b1 = inttoptr i32 %v1_b5ac to i32*
  %v2_b5b1 = load i32, i32* %v1_b5b1, align 4
  %v0_b5b3 = load i32, i32* %ebx.global-to-local, align 4
  %v0_b5b7 = load i32, i32* @ebp, align 4
  %v1_b5b7 = add i32 %v0_b5b7, -36
  %v2_b5b7 = inttoptr i32 %v1_b5b7 to i32*
  %v3_b5b7 = load i32, i32* %v2_b5b7, align 4
  %v0_b5be = load i32, i32* %esi.global-to-local, align 4
  %v5_b5c5 = call i32 @unknown_163ec(i32 %v2_b5b1, i32 %v0_b5be, i32 %v3_b5b7, i32 %v0_b5b3)
  %v1_b5ca = load i32, i32* @ebp, align 4
  %v2_b5ca = add i32 %v1_b5ca, -36
  %v3_b5ca = inttoptr i32 %v2_b5ca to i32*
  store i32 %v5_b5c5, i32* %v3_b5ca, align 4
  %v0_b5cd = load i32, i32* @ebp, align 4
  %v1_b5cd = add i32 %v0_b5cd, -60
  %v2_b5cd = inttoptr i32 %v1_b5cd to i32*
  %v3_b5cd = load i32, i32* %v2_b5cd, align 4
  %v1_b5d3 = call i32 @unknown_13640(i32 %v3_b5cd)
  %v0_b5d8 = load i32, i32* @ebp, align 4
  %v1_b5d8 = add i32 %v0_b5d8, -60
  %v2_b5d8 = inttoptr i32 %v1_b5d8 to i32*
  %v3_b5d8 = load i32, i32* %v2_b5d8, align 4
  %v1_b5db = add i32 %v3_b5d8, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b5db = inttoptr i32 %v1_b5db to i32*
  %v3_b5db = load i32, i32* %v2_b5db, align 4
  %v1_b5e1 = inttoptr i32 %v3_b5d8 to i32*
  %v2_b5e1 = load i32, i32* %v1_b5e1, align 4
  %v4_b5ee = call i32 @unknown_1366d(i32 %v2_b5e1, i32 %v3_b5db, i32 %v1_b5d3)
  %v0_b5f3 = load i32, i32* @ebp, align 4
  %v1_b5f3 = add i32 %v0_b5f3, -60
  %v2_b5f3 = inttoptr i32 %v1_b5f3 to i32*
  %v3_b5f3 = load i32, i32* %v2_b5f3, align 4
  %v1_b5f6 = add i32 %v3_b5f3, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_b5f6 = inttoptr i32 %v1_b5f6 to i32*
  %v3_b5f6 = load i32, i32* %v2_b5f6, align 4
  %v1_b5fe = inttoptr i32 %v3_b5f3 to i32*
  %v2_b5fe = load i32, i32* %v1_b5fe, align 4
  %v2_b602 = sub i32 %v3_b5f6, %v2_b5fe
  %v3_b608 = load i32, i32* %v2_b5f3, align 4
  %v1_b60b = inttoptr i32 %v3_b608 to i32*
  %v2_b60b = load i32, i32* %v1_b60b, align 4
  %v4_b61b = call i32 @unknown_13b48(i32 %v3_b608, i32 %v2_b60b, i32 %v2_b602)
  %v0_b620 = load i32, i32* @ebp, align 4
  %v1_b620 = add i32 %v0_b620, -60
  %v2_b620 = inttoptr i32 %v1_b620 to i32*
  %v3_b620 = load i32, i32* %v2_b620, align 4
  %v1_b623 = add i32 %v0_b620, -16
  %v2_b623 = inttoptr i32 %v1_b623 to i32*
  %v3_b623 = load i32, i32* %v2_b623, align 4
  %v2_b626 = inttoptr i32 %v3_b620 to i32*
  store i32 %v3_b623, i32* %v2_b626, align 4
  %v0_b628 = load i32, i32* @ebp, align 4
  %v1_b628 = add i32 %v0_b628, -60
  %v2_b628 = inttoptr i32 %v1_b628 to i32*
  %v3_b628 = load i32, i32* %v2_b628, align 4
  %v1_b62b = add i32 %v0_b628, -36
  %v2_b62b = inttoptr i32 %v1_b62b to i32*
  %v3_b62b = load i32, i32* %v2_b62b, align 4
  %v2_b62e = add i32 %v3_b628, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b62e = inttoptr i32 %v2_b62e to i32*
  store i32 %v3_b62b, i32* %v3_b62e, align 4
  %v0_b631 = load i32, i32* @ebp, align 4
  %v1_b631 = add i32 %v0_b631, -20
  %v2_b631 = inttoptr i32 %v1_b631 to i32*
  %v3_b631 = load i32, i32* %v2_b631, align 4
  %v1_b634 = add i32 %v0_b631, -16
  %v2_b634 = inttoptr i32 %v1_b634 to i32*
  %v3_b634 = load i32, i32* %v2_b634, align 4
  %v2_b637 = add i32 %v3_b634, %v3_b631
  %v1_b639 = add i32 %v0_b631, -60
  %v2_b639 = inttoptr i32 %v1_b639 to i32*
  %v3_b639 = load i32, i32* %v2_b639, align 4
  store i32 %v3_b639, i32* @eax, align 4
  %v2_b63c = add i32 %v3_b639, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_b63c = inttoptr i32 %v2_b63c to i32*
  store i32 %v2_b637, i32* %v3_b63c, align 4
  %v0_b63f = call i32 @function_b699()
  ret i32 %v0_b63f

; uselistorder directives
  uselistorder i32 %v0_b577, { 1, 0, 2 }
  uselistorder i32 ()* @function_b699, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_137bd, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_163ec, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_13952, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_13640, { 5, 4, 3, 2, 0, 1 }
}

define i32 @function_b642() local_unnamed_addr {
dec_label_pc_b642:
  %eax.global-to-local = alloca i32, align 4
  %v0_b642 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b642
}

define i32 @function_b699() local_unnamed_addr {
dec_label_pc_b699:
  %v0_b699 = load i32, i32* @ebp, align 4
  %v1_b699 = add i32 %v0_b699, -12
  %v2_b699 = inttoptr i32 %v1_b699 to i32*
  %v3_b699 = load i32, i32* %v2_b699, align 4
  %v1_b69c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b69c = icmp eq i32 %v1_b69c, %v3_b699
  br i1 %v3_b69c, label %bb, label %dec_label_pc_b699.dec_label_pc_b6a5_crit_edge

dec_label_pc_b699.dec_label_pc_b6a5_crit_edge:    ; preds = %dec_label_pc_b699
  %v2_b6a3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_b6a5

bb:                                               ; preds = %dec_label_pc_b699
  %v1_b6a3 = call i32 @function_b6aa()
  br label %dec_label_pc_b6a5

dec_label_pc_b6a5:                                ; preds = %dec_label_pc_b699.dec_label_pc_b6a5_crit_edge, %bb
  %v2_b6a3 = phi i32 [ %v2_b6a3.pre, %dec_label_pc_b699.dec_label_pc_b6a5_crit_edge ], [ %v1_b6a3, %bb ]
  ret i32 %v2_b6a3

; uselistorder directives
  uselistorder label %dec_label_pc_b6a5, { 1, 0 }
}

define i32 @function_b6aa() local_unnamed_addr {
dec_label_pc_b6aa:
  %v0_b6aa = load i32, i32* @ebp, align 4
  %v1_b6af = inttoptr i32 %v0_b6aa to i32*
  %v2_b6af = load i32, i32* %v1_b6af, align 4
  store i32 %v2_b6af, i32* @ebp, align 4
  %v0_b6b0 = load i32, i32* @eax, align 4
  ret i32 %v0_b6b0
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_b6b2:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-68, align 4
  store i32 %arg3, i32* @eax, align 4
  %v15_b6e7 = icmp eq i32 %arg3, %arg4
  br i1 %v15_b6e7, label %bb, label %dec_label_pc_b6f0

bb:                                               ; preds = %dec_label_pc_b6b2
  %v6_b6ea = sext i8 %arg5 to i32
  %v7_b6ea = call i32 @function_ba6b(i32 %v6_b6ea, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %bb, %dec_label_pc_b6b2
  %v2_b6fd = call i32 @unknown_19809(i32 %arg3, i32 %arg4)
  %v1_b708 = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_b708 = inttoptr i32 %v1_b708 to i32*
  %v3_b708 = load i32, i32* %v2_b708, align 4
  %v1_b710 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b710 = inttoptr i32 %v1_b710 to i32*
  %v3_b710 = load i32, i32* %v2_b710, align 4
  %v2_b715 = sub i32 %v3_b708, %v3_b710
  %v10_b719 = icmp ult i32 %v2_b715, %v2_b6fd
  br i1 %v10_b719, label %bb119, label %dec_label_pc_b722

bb119:                                            ; preds = %dec_label_pc_b6f0
  %v2_b71c = call i32 @function_b8c9(i32 %v2_b6fd)
  br label %dec_label_pc_b722

dec_label_pc_b722:                                ; preds = %bb119, %dec_label_pc_b6f0
  %v2_b722 = ptrtoint i32* %stack_var_-56 to i32
  %v2_b72f = call i32 @function_11f60(i32 %v2_b722, i32 %arg1)
  %v2_b737 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_b722, i32* @eax, align 4
  %v2_b744 = call i32 @function_126d0(i32 %v2_b722, i32 %v2_b737)
  %v3_b74f = load i32, i32* %v2_b710, align 4
  %tmp122 = icmp ugt i32 %v2_b744, %v2_b6fd
  br i1 %tmp122, label %dec_label_pc_b761, label %bb121

bb121:                                            ; preds = %dec_label_pc_b722
  %v5_b75b = call i32 @function_b7fc(i32 %v2_b744, i32 %v3_b74f)
  br label %dec_label_pc_b761

dec_label_pc_b761:                                ; preds = %dec_label_pc_b722, %bb121
  %v1_b767 = call i32 @unknown_13a20(i32 %arg1)
  %v3_b76f = load i32, i32* %v2_b710, align 4
  %v2_b783 = sub i32 %v3_b76f, %v2_b6fd
  %v4_b794 = call i32 @unknown_167cc(i32 %v2_b783, i32 %v3_b76f, i32 %v3_b76f, i32 %v1_b767)
  %v3_b79c = load i32, i32* %v2_b710, align 4
  %v5_b7a1 = add i32 %v3_b79c, %v2_b6fd
  store i32 %v5_b7a1, i32* %v2_b710, align 4
  %v5_b7b1 = sub i32 %v3_b74f, %v2_b6fd
  %v1_b7ba = call i32 @unknown_13d32(i32 %v2_b737)
  %v1_b7bf = inttoptr i32 %v1_b7ba to i32*
  %v2_b7bf = load i32, i32* %v1_b7bf, align 4
  %v3_b7cf = call i32 @unknown_16694(i32 %v2_b7bf, i32 %v5_b7b1, i32 %v3_b74f)
  %v2_b7d4 = ptrtoint i32* %stack_var_-52 to i32
  ret i32 %v2_b7d4

; uselistorder directives
  uselistorder i32 %v3_b76f, { 2, 1, 0 }
  uselistorder i32 %v2_b744, { 1, 0 }
  uselistorder i32 %v2_b6fd, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %arg4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_b761, { 1, 0 }
}

define i32 @function_b7ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_b7ec:
  %v0_b7ec = load i32, i32* @eax, align 4
  %v1_b7ef = call i32 @unknown_19868(i32 %v0_b7ec)
  store i32 %v1_b7ef, i32* @eax, align 4
  %v5_b7f7 = call i32 @function_ba6b(i32 %v0_b7ec, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v5_b7f7
}

define i32 @function_b7fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b7fc:
  %ebx.global-to-local = alloca i32, align 4
  %v0_b7fc = load i32, i32* @ebp, align 4
  %v1_b7fc = add i32 %v0_b7fc, -68
  %v2_b7fc = inttoptr i32 %v1_b7fc to i32*
  %v3_b7fc = load i32, i32* %v2_b7fc, align 4
  %v2_b7ff = add i32 %v0_b7fc, -44
  %v3_b7ff = inttoptr i32 %v2_b7ff to i32*
  store i32 %v3_b7fc, i32* %v3_b7ff, align 4
  %v0_b802 = load i32, i32* @ebp, align 4
  %v1_b802 = add i32 %v0_b802, -28
  %v2_b802 = inttoptr i32 %v1_b802 to i32*
  %v3_b802 = load i32, i32* %v2_b802, align 4
  %v1_b809 = add i32 %v0_b802, -44
  %v2_b80f = call i32 @unknown_198e4(i32 %v1_b809, i32 %v3_b802)
  %v0_b814 = load i32, i32* @ebp, align 4
  %v1_b814 = add i32 %v0_b814, -60
  %v2_b814 = inttoptr i32 %v1_b814 to i32*
  %v3_b814 = load i32, i32* %v2_b814, align 4
  %v1_b81a = call i32 @unknown_13a20(i32 %v3_b814)
  %v0_b81f = load i32, i32* @ebp, align 4
  %v1_b81f = add i32 %v0_b81f, -60
  %v2_b81f = inttoptr i32 %v1_b81f to i32*
  %v3_b81f = load i32, i32* %v2_b81f, align 4
  %v1_b822 = add i32 %v3_b81f, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b822 = inttoptr i32 %v1_b822 to i32*
  %v3_b822 = load i32, i32* %v2_b822, align 4
  %v1_b825 = add i32 %v0_b81f, -44
  %v2_b825 = inttoptr i32 %v1_b825 to i32*
  %v3_b825 = load i32, i32* %v2_b825, align 4
  %v1_b830 = add i32 %v0_b81f, -72
  %v2_b830 = inttoptr i32 %v1_b830 to i32*
  %v3_b830 = load i32, i32* %v2_b830, align 4
  %v4_b83a = call i32 @unknown_140b9(i32 %v3_b825, i32 %v3_b830, i32 %v3_b822, i32 %v1_b81a)
  %v0_b83f = load i32, i32* @ebp, align 4
  %v1_b83f = add i32 %v0_b83f, -60
  %v2_b83f = inttoptr i32 %v1_b83f to i32*
  %v3_b83f = load i32, i32* %v2_b83f, align 4
  %v1_b842 = add i32 %v3_b83f, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b842 = inttoptr i32 %v1_b842 to i32*
  %v3_b842 = load i32, i32* %v2_b842, align 4
  %v1_b845 = add i32 %v0_b83f, -28
  %v2_b845 = inttoptr i32 %v1_b845 to i32*
  %v3_b845 = load i32, i32* %v2_b845, align 4
  %v1_b848 = add i32 %v0_b83f, -32
  %v2_b848 = inttoptr i32 %v1_b848 to i32*
  %v3_b848 = load i32, i32* %v2_b848, align 4
  %v2_b84d = sub i32 %v3_b848, %v3_b845
  store i32 %v2_b84d, i32* %ebx.global-to-local, align 4
  %v2_b851 = add i32 %v2_b84d, %v3_b842
  %v3_b853 = load i32, i32* %v2_b83f, align 4
  %v2_b856 = add i32 %v3_b853, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b856 = inttoptr i32 %v2_b856 to i32*
  store i32 %v2_b851, i32* %v3_b856, align 4
  %v0_b859 = load i32, i32* @ebp, align 4
  %v1_b859 = add i32 %v0_b859, -60
  %v2_b859 = inttoptr i32 %v1_b859 to i32*
  %v3_b859 = load i32, i32* %v2_b859, align 4
  %v1_b85f = call i32 @unknown_13a20(i32 %v3_b859)
  store i32 %v1_b85f, i32* %ebx.global-to-local, align 4
  %v0_b866 = load i32, i32* @ebp, align 4
  %v1_b866 = add i32 %v0_b866, -60
  %v2_b866 = inttoptr i32 %v1_b866 to i32*
  %v3_b866 = load i32, i32* %v2_b866, align 4
  %v1_b869 = add i32 %v3_b866, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b869 = inttoptr i32 %v1_b869 to i32*
  %v3_b869 = load i32, i32* %v2_b869, align 4
  %v1_b86c = add i32 %v0_b866, -64
  %v1_b872 = call i32 @unknown_13d32(i32 %v1_b86c)
  %v1_b877 = inttoptr i32 %v1_b872 to i32*
  %v2_b877 = load i32, i32* %v1_b877, align 4
  %v0_b879 = load i32, i32* %ebx.global-to-local, align 4
  %v0_b881 = load i32, i32* @ebp, align 4
  %v1_b881 = add i32 %v0_b881, -24
  %v2_b881 = inttoptr i32 %v1_b881 to i32*
  %v3_b881 = load i32, i32* %v2_b881, align 4
  %v4_b88b = call i32 @unknown_167cc(i32 %v2_b877, i32 %v3_b881, i32 %v3_b869, i32 %v0_b879)
  %v0_b890 = load i32, i32* @ebp, align 4
  %v1_b890 = add i32 %v0_b890, -60
  %v2_b890 = inttoptr i32 %v1_b890 to i32*
  %v3_b890 = load i32, i32* %v2_b890, align 4
  %v1_b893 = add i32 %v3_b890, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b893 = inttoptr i32 %v1_b893 to i32*
  %v3_b893 = load i32, i32* %v2_b893, align 4
  %v2_b898 = add i32 %v0_b890, -28
  %v3_b898 = inttoptr i32 %v2_b898 to i32*
  %v4_b898 = load i32, i32* %v3_b898, align 4
  %v5_b898 = add i32 %v4_b898, %v3_b893
  %v3_b89b = load i32, i32* %v2_b890, align 4
  %v2_b89e = add i32 %v3_b89b, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_b89e = inttoptr i32 %v2_b89e to i32*
  store i32 %v5_b898, i32* %v3_b89e, align 4
  %v0_b8a1 = load i32, i32* @ebp, align 4
  %v1_b8a1 = add i32 %v0_b8a1, -44
  %v2_b8a1 = inttoptr i32 %v1_b8a1 to i32*
  %v3_b8a1 = load i32, i32* %v2_b8a1, align 4
  %v1_b8a4 = add i32 %v0_b8a1, -40
  %v1_b8a7 = add i32 %v0_b8a1, -64
  %v2_b8a7 = inttoptr i32 %v1_b8a7 to i32*
  %v3_b8a7 = load i32, i32* %v2_b8a7, align 4
  %v1_b8b2 = add i32 %v0_b8a1, -68
  %v2_b8b2 = inttoptr i32 %v1_b8b2 to i32*
  %v3_b8b2 = load i32, i32* %v2_b8b2, align 4
  %v1_b8bc = call i32 @unknown_19868(i32 %v1_b8a4)
  store i32 %v1_b8bc, i32* @eax, align 4
  %v5_b8c4 = call i32 @function_ba6b(i32 %v1_b8a4, i32 %v3_b8b2, i32 %v3_b8a1, i32 %v3_b8a7, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v5_b8c4

; uselistorder directives
  uselistorder i32 %v1_b8a4, { 1, 0 }
  uselistorder i32 %v0_b8a1, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b83f, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_19868, { 1, 0 }
}

define i32 @function_b8c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_b8c9:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_b8d1 = load i32, i32* @ebp, align 4
  %v1_b8d1 = add i32 %v0_b8d1, -32
  %v2_b8d1 = inttoptr i32 %v1_b8d1 to i32*
  %v3_b8d1 = load i32, i32* %v2_b8d1, align 4
  %v1_b8d8 = add i32 %v0_b8d1, -60
  %v2_b8d8 = inttoptr i32 %v1_b8d8 to i32*
  %v3_b8d8 = load i32, i32* %v2_b8d8, align 4
  %v4_b8de = call i32 @unknown_166fa(i32 %v3_b8d8, i32 %v3_b8d1, i32 ptrtoint ([24 x i8]* @global_var_1e34.920 to i32))
  %v1_b8e3 = load i32, i32* @ebp, align 4
  %v2_b8e3 = add i32 %v1_b8e3, -20
  %v3_b8e3 = inttoptr i32 %v2_b8e3 to i32*
  store i32 %v4_b8de, i32* %v3_b8e3, align 4
  %v0_b8e6 = load i32, i32* @ebp, align 4
  %v1_b8e6 = add i32 %v0_b8e6, -60
  %v2_b8e6 = inttoptr i32 %v1_b8e6 to i32*
  %v3_b8e6 = load i32, i32* %v2_b8e6, align 4
  %v1_b8e9 = add i32 %v0_b8e6, -20
  %v2_b8e9 = inttoptr i32 %v1_b8e9 to i32*
  %v3_b8e9 = load i32, i32* %v2_b8e9, align 4
  %v2_b8f3 = call i32 @unknown_160d2(i32 %v3_b8e6, i32 %v3_b8e9)
  %v1_b8f8 = load i32, i32* @ebp, align 4
  %v2_b8f8 = add i32 %v1_b8f8, -16
  %v3_b8f8 = inttoptr i32 %v2_b8f8 to i32*
  store i32 %v2_b8f3, i32* %v3_b8f8, align 4
  %v0_b8fb = load i32, i32* @ebp, align 4
  %v1_b8fb = add i32 %v0_b8fb, -16
  %v2_b8fb = inttoptr i32 %v1_b8fb to i32*
  %v3_b8fb = load i32, i32* %v2_b8fb, align 4
  %v2_b8fe = add i32 %v0_b8fb, -36
  %v3_b8fe = inttoptr i32 %v2_b8fe to i32*
  store i32 %v3_b8fb, i32* %v3_b8fe, align 4
  %v0_b901 = load i32, i32* @ebp, align 4
  %v1_b901 = add i32 %v0_b901, -60
  %v2_b901 = inttoptr i32 %v1_b901 to i32*
  %v3_b901 = load i32, i32* %v2_b901, align 4
  %v1_b907 = call i32 @unknown_13a20(i32 %v3_b901)
  store i32 %v1_b907, i32* %ebx.global-to-local, align 4
  %v0_b90e = load i32, i32* @ebp, align 4
  %v1_b90e = add i32 %v0_b90e, -64
  %v1_b914 = call i32 @unknown_13d32(i32 %v1_b90e)
  %v1_b919 = inttoptr i32 %v1_b914 to i32*
  %v2_b919 = load i32, i32* %v1_b919, align 4
  %v0_b91b = load i32, i32* @ebp, align 4
  %v1_b91b = add i32 %v0_b91b, -60
  %v2_b91b = inttoptr i32 %v1_b91b to i32*
  %v3_b91b = load i32, i32* %v2_b91b, align 4
  %v1_b91e = inttoptr i32 %v3_b91b to i32*
  %v2_b91e = load i32, i32* %v1_b91e, align 4
  %v0_b920 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b924 = add i32 %v0_b91b, -16
  %v2_b924 = inttoptr i32 %v1_b924 to i32*
  %v3_b924 = load i32, i32* %v2_b924, align 4
  %v5_b932 = call i32 @unknown_167cc(i32 %v2_b91e, i32 %v2_b919, i32 %v3_b924, i32 %v0_b920)
  %v1_b937 = load i32, i32* @ebp, align 4
  %v2_b937 = add i32 %v1_b937, -36
  %v3_b937 = inttoptr i32 %v2_b937 to i32*
  store i32 %v5_b932, i32* %v3_b937, align 4
  %v0_b93a = load i32, i32* @ebp, align 4
  %v1_b93a = add i32 %v0_b93a, -60
  %v2_b93a = inttoptr i32 %v1_b93a to i32*
  %v3_b93a = load i32, i32* %v2_b93a, align 4
  %v1_b940 = call i32 @unknown_13a20(i32 %v3_b93a)
  %v0_b949 = load i32, i32* @ebp, align 4
  %v1_b949 = add i32 %v0_b949, -36
  %v2_b949 = inttoptr i32 %v1_b949 to i32*
  %v3_b949 = load i32, i32* %v2_b949, align 4
  %v1_b950 = add i32 %v0_b949, -72
  %v2_b950 = inttoptr i32 %v1_b950 to i32*
  %v3_b950 = load i32, i32* %v2_b950, align 4
  %v1_b957 = add i32 %v0_b949, -68
  %v2_b957 = inttoptr i32 %v1_b957 to i32*
  %v3_b957 = load i32, i32* %v2_b957, align 4
  %v5_b95d = call i32 @unknown_140b9(i32 %v3_b957, i32 %v3_b950, i32 %v3_b949, i32 %v1_b940)
  %v1_b962 = load i32, i32* @ebp, align 4
  %v2_b962 = add i32 %v1_b962, -36
  %v3_b962 = inttoptr i32 %v2_b962 to i32*
  store i32 %v5_b95d, i32* %v3_b962, align 4
  %v0_b965 = load i32, i32* @ebp, align 4
  %v1_b965 = add i32 %v0_b965, -60
  %v2_b965 = inttoptr i32 %v1_b965 to i32*
  %v3_b965 = load i32, i32* %v2_b965, align 4
  %v1_b96b = call i32 @unknown_13a20(i32 %v3_b965)
  store i32 %v1_b96b, i32* %ebx.global-to-local, align 4
  %v0_b972 = load i32, i32* @ebp, align 4
  %v1_b972 = add i32 %v0_b972, -60
  %v2_b972 = inttoptr i32 %v1_b972 to i32*
  %v3_b972 = load i32, i32* %v2_b972, align 4
  %v1_b975 = add i32 %v3_b972, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b975 = inttoptr i32 %v1_b975 to i32*
  %v3_b975 = load i32, i32* %v2_b975, align 4
  store i32 %v3_b975, i32* %esi.global-to-local, align 4
  %v1_b978 = add i32 %v0_b972, -64
  %v1_b97e = call i32 @unknown_13d32(i32 %v1_b978)
  %v1_b983 = inttoptr i32 %v1_b97e to i32*
  %v2_b983 = load i32, i32* %v1_b983, align 4
  %v0_b985 = load i32, i32* %ebx.global-to-local, align 4
  %v0_b989 = load i32, i32* @ebp, align 4
  %v1_b989 = add i32 %v0_b989, -36
  %v2_b989 = inttoptr i32 %v1_b989 to i32*
  %v3_b989 = load i32, i32* %v2_b989, align 4
  %v0_b990 = load i32, i32* %esi.global-to-local, align 4
  %v5_b997 = call i32 @unknown_167cc(i32 %v2_b983, i32 %v0_b990, i32 %v3_b989, i32 %v0_b985)
  %v1_b99c = load i32, i32* @ebp, align 4
  %v2_b99c = add i32 %v1_b99c, -36
  %v3_b99c = inttoptr i32 %v2_b99c to i32*
  store i32 %v5_b997, i32* %v3_b99c, align 4
  %v0_b99f = load i32, i32* @ebp, align 4
  %v1_b99f = add i32 %v0_b99f, -60
  %v2_b99f = inttoptr i32 %v1_b99f to i32*
  %v3_b99f = load i32, i32* %v2_b99f, align 4
  %v1_b9a5 = call i32 @unknown_13a20(i32 %v3_b99f)
  %v0_b9aa = load i32, i32* @ebp, align 4
  %v1_b9aa = add i32 %v0_b9aa, -60
  %v2_b9aa = inttoptr i32 %v1_b9aa to i32*
  %v3_b9aa = load i32, i32* %v2_b9aa, align 4
  %v1_b9ad = add i32 %v3_b9aa, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_b9ad = inttoptr i32 %v1_b9ad to i32*
  %v3_b9ad = load i32, i32* %v2_b9ad, align 4
  %v1_b9b3 = inttoptr i32 %v3_b9aa to i32*
  %v2_b9b3 = load i32, i32* %v1_b9b3, align 4
  %v4_b9c0 = call i32 @unknown_13a4d(i32 %v2_b9b3, i32 %v3_b9ad, i32 %v1_b9a5)
  %v0_b9c5 = load i32, i32* @ebp, align 4
  %v1_b9c5 = add i32 %v0_b9c5, -60
  %v2_b9c5 = inttoptr i32 %v1_b9c5 to i32*
  %v3_b9c5 = load i32, i32* %v2_b9c5, align 4
  %v1_b9c8 = add i32 %v3_b9c5, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_b9c8 = inttoptr i32 %v1_b9c8 to i32*
  %v3_b9c8 = load i32, i32* %v2_b9c8, align 4
  %v1_b9d0 = inttoptr i32 %v3_b9c5 to i32*
  %v2_b9d0 = load i32, i32* %v1_b9d0, align 4
  %v2_b9d4 = sub i32 %v3_b9c8, %v2_b9d0
  %v3_b9da = load i32, i32* %v2_b9c5, align 4
  %v1_b9dd = inttoptr i32 %v3_b9da to i32*
  %v2_b9dd = load i32, i32* %v1_b9dd, align 4
  %v4_b9ed = call i32 @unknown_13f28(i32 %v3_b9da, i32 %v2_b9dd, i32 %v2_b9d4)
  %v0_b9f2 = load i32, i32* @ebp, align 4
  %v1_b9f2 = add i32 %v0_b9f2, -60
  %v2_b9f2 = inttoptr i32 %v1_b9f2 to i32*
  %v3_b9f2 = load i32, i32* %v2_b9f2, align 4
  %v1_b9f5 = add i32 %v0_b9f2, -16
  %v2_b9f5 = inttoptr i32 %v1_b9f5 to i32*
  %v3_b9f5 = load i32, i32* %v2_b9f5, align 4
  %v2_b9f8 = inttoptr i32 %v3_b9f2 to i32*
  store i32 %v3_b9f5, i32* %v2_b9f8, align 4
  %v0_b9fa = load i32, i32* @ebp, align 4
  %v1_b9fa = add i32 %v0_b9fa, -60
  %v2_b9fa = inttoptr i32 %v1_b9fa to i32*
  %v3_b9fa = load i32, i32* %v2_b9fa, align 4
  %v1_b9fd = add i32 %v0_b9fa, -36
  %v2_b9fd = inttoptr i32 %v1_b9fd to i32*
  %v3_b9fd = load i32, i32* %v2_b9fd, align 4
  %v2_ba00 = add i32 %v3_b9fa, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_ba00 = inttoptr i32 %v2_ba00 to i32*
  store i32 %v3_b9fd, i32* %v3_ba00, align 4
  %v0_ba03 = load i32, i32* @ebp, align 4
  %v1_ba03 = add i32 %v0_ba03, -20
  %v2_ba03 = inttoptr i32 %v1_ba03 to i32*
  %v3_ba03 = load i32, i32* %v2_ba03, align 4
  %v1_ba06 = add i32 %v0_ba03, -16
  %v2_ba06 = inttoptr i32 %v1_ba06 to i32*
  %v3_ba06 = load i32, i32* %v2_ba06, align 4
  %v2_ba09 = add i32 %v3_ba06, %v3_ba03
  %v1_ba0b = add i32 %v0_ba03, -60
  %v2_ba0b = inttoptr i32 %v1_ba0b to i32*
  %v3_ba0b = load i32, i32* %v2_ba0b, align 4
  store i32 %v3_ba0b, i32* @eax, align 4
  %v2_ba0e = add i32 %v3_ba0b, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_ba0e = inttoptr i32 %v2_ba0e to i32*
  store i32 %v2_ba09, i32* %v3_ba0e, align 4
  %v6_ba11 = call i32 @function_ba6b(i32 %v3_b9da, i32 %v2_b9dd, i32 %v2_b9d4, i32 %v0_b985, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_ba11

; uselistorder directives
  uselistorder i32 %v2_b9dd, { 1, 0 }
  uselistorder i32 %v3_b9da, { 1, 0, 2 }
  uselistorder i32 %v2_b9d4, { 1, 0 }
  uselistorder i32 %v0_b949, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_ba6b, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_140b9, { 1, 0 }
  uselistorder i32 -72, { 0, 1, 6, 8, 5, 7, 3, 2, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_167cc, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_13d32, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_13a20, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_ba14() local_unnamed_addr {
dec_label_pc_ba14:
  %eax.global-to-local = alloca i32, align 4
  %v0_ba14 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ba14
}

define i32 @function_ba2b() local_unnamed_addr {
dec_label_pc_ba2b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ba2b = load i32, i32* %ebx.global-to-local, align 4
  %v1_ba2b = add i32 %v0_ba2b, 76137541
  %v2_ba2b = inttoptr i32 %v1_ba2b to i32*
  %v3_ba2b = load i32, i32* %v2_ba2b, align 4
  %v4_ba2b = add i32 %v3_ba2b, -1
  store i32 %v4_ba2b, i32* %v2_ba2b, align 4
  %v0_ba31 = load i32, i32* %eax.global-to-local, align 4
  %v11_ba31 = and i32 %v0_ba31, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_ba31, i32* @eax, align 4
  %v0_ba33 = call i32 @function_8900bab7()
  store i32 %v0_ba33, i32* %eax.global-to-local, align 4
  ret i32 %v0_ba33
}

define i32 @function_ba60() local_unnamed_addr {
dec_label_pc_ba60:
  %eax.global-to-local = alloca i32, align 4
  %v0_ba60 = load i32, i32* %eax.global-to-local, align 4
  %v11_ba60 = and i32 %v0_ba60, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_ba60, i32* %eax.global-to-local, align 4
  ret i32 %v11_ba60

; uselistorder directives
  uselistorder i32 %v11_ba60, { 1, 0 }
}

define i32 @function_ba6b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ba6b:
  %v0_ba6b = load i32, i32* @ebp, align 4
  %v1_ba6b = add i32 %v0_ba6b, -12
  %v2_ba6b = inttoptr i32 %v1_ba6b to i32*
  %v3_ba6b = load i32, i32* %v2_ba6b, align 4
  %v1_ba6e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ba6e = icmp eq i32 %v1_ba6e, %v3_ba6b
  br i1 %v3_ba6e, label %bb, label %dec_label_pc_ba6b.dec_label_pc_ba77_crit_edge

dec_label_pc_ba6b.dec_label_pc_ba77_crit_edge:    ; preds = %dec_label_pc_ba6b
  %v2_ba75.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_ba77

bb:                                               ; preds = %dec_label_pc_ba6b
  %v1_ba75 = call i32 @function_ba7c()
  br label %dec_label_pc_ba77

dec_label_pc_ba77:                                ; preds = %dec_label_pc_ba6b.dec_label_pc_ba77_crit_edge, %bb
  %v2_ba75 = phi i32 [ %v2_ba75.pre, %dec_label_pc_ba6b.dec_label_pc_ba77_crit_edge ], [ %v1_ba75, %bb ]
  ret i32 %v2_ba75

; uselistorder directives
  uselistorder label %dec_label_pc_ba77, { 1, 0 }
}

define i32 @function_ba7c() local_unnamed_addr {
dec_label_pc_ba7c:
  %v0_ba7c = load i32, i32* @ebp, align 4
  %v3_ba7f = add i32 %v0_ba7c, -4
  %v1_ba80 = inttoptr i32 %v3_ba7f to i32*
  %v2_ba80 = load i32, i32* %v1_ba80, align 4
  store i32 %v2_ba80, i32* @esi, align 4
  %v1_ba81 = inttoptr i32 %v0_ba7c to i32*
  %v2_ba81 = load i32, i32* %v1_ba81, align 4
  store i32 %v2_ba81, i32* @ebp, align 4
  %v0_ba82 = load i32, i32* @eax, align 4
  ret i32 %v0_ba82
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_ba83:
  %v1_baa0 = call i32 @unknown_19d93(i32 %arg1)
  store i32 %v1_baa0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bab1

bb:                                               ; preds = %dec_label_pc_ba83
  %v1_baaf = call i32 @function_bab6()
  br label %dec_label_pc_bab1

dec_label_pc_bab1:                                ; preds = %bb, %dec_label_pc_ba83
  %v3_baaf = phi i32 [ %v1_baaf, %bb ], [ %v1_baa0, %dec_label_pc_ba83 ]
  ret i32 %v3_baaf
}

define i32 @function_bab6() local_unnamed_addr {
dec_label_pc_bab6:
  %v0_bab7 = load i32, i32* @eax, align 4
  ret i32 %v0_bab7
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_bab8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_bad5 = call i32 @unknown_19e00(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_bae6 = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_bae6 = inttoptr i32 %v1_bae6 to i32*
  store i32 0, i32* %v2_bae6, align 4
  %v1_baf0 = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_baf0 = inttoptr i32 %v1_baf0 to i32*
  store i32 0, i32* %v2_baf0, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bb03

bb:                                               ; preds = %dec_label_pc_bab8
  %v1_bb01 = call i32 @function_bb08()
  br label %dec_label_pc_bb03

dec_label_pc_bb03:                                ; preds = %bb, %dec_label_pc_bab8
  %v2_bb01 = phi i32 [ %v1_bb01, %bb ], [ 0, %dec_label_pc_bab8 ]
  ret i32 %v2_bb01

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_bb08() local_unnamed_addr {
dec_label_pc_bb08:
  %v0_bb09 = load i32, i32* @eax, align 4
  ret i32 %v0_bb09
}

define i32 @_ZNSaI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_bb0a:
  ret i32 %arg1
}

define i32 @function_bb16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bb16:
  %v0_bb16 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_bb1c = load i32, i32* @ebp, align 4
  %v2_bb1c = add i32 %v1_bb1c, -12
  %v3_bb1c = inttoptr i32 %v2_bb1c to i32*
  store i32 %v0_bb16, i32* %v3_bb1c, align 4
  %v0_bb21 = load i32, i32* @ebp, align 4
  %v1_bb21 = add i32 %v0_bb21, -28
  %v2_bb21 = inttoptr i32 %v1_bb21 to i32*
  %v3_bb21 = load i32, i32* %v2_bb21, align 4
  %v1_bb27 = call i32 @unknown_19e88(i32 %v3_bb21)
  %v0_bb2c = load i32, i32* @ebp, align 4
  %v1_bb2c = add i32 %v0_bb2c, -12
  %v2_bb2c = inttoptr i32 %v1_bb2c to i32*
  %v3_bb2c = load i32, i32* %v2_bb2c, align 4
  %v1_bb2f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_bb2f = xor i32 %v1_bb2f, %v3_bb2c
  %v3_bb2f = icmp eq i32 %v2_bb2f, 0
  store i32 %v2_bb2f, i32* @eax, align 4
  br i1 %v3_bb2f, label %bb, label %dec_label_pc_bb38

bb:                                               ; preds = %dec_label_pc_bb16
  %v1_bb36 = call i32 @function_bb3d()
  br label %dec_label_pc_bb38

dec_label_pc_bb38:                                ; preds = %bb, %dec_label_pc_bb16
  %v2_bb36 = phi i32 [ %v1_bb36, %bb ], [ %v2_bb2f, %dec_label_pc_bb16 ]
  ret i32 %v2_bb36
}

define i32 @function_bb3d() local_unnamed_addr {
dec_label_pc_bb3d:
  %v0_bb3e = load i32, i32* @eax, align 4
  ret i32 %v0_bb3e
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bb40:
  %v10_bb63 = icmp eq i32 %arg2, 0
  br i1 %v10_bb63, label %dec_label_pc_bb82, label %dec_label_pc_bb69

dec_label_pc_bb69:                                ; preds = %dec_label_pc_bb40
  %v3_bb7d = call i32 @unknown_19ee8(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_bb82

dec_label_pc_bb82:                                ; preds = %dec_label_pc_bb69, %dec_label_pc_bb40
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bb8e

bb:                                               ; preds = %dec_label_pc_bb82
  %v1_bb8c = call i32 @function_bb93()
  br label %dec_label_pc_bb8e

dec_label_pc_bb8e:                                ; preds = %bb, %dec_label_pc_bb82
  %v2_bb8c = phi i32 [ %v1_bb8c, %bb ], [ 0, %dec_label_pc_bb82 ]
  ret i32 %v2_bb8c
}

define i32 @function_bb93() local_unnamed_addr {
dec_label_pc_bb93:
  %v0_bb94 = load i32, i32* @eax, align 4
  ret i32 %v0_bb94
}

define i32 @_ZSt8_DestroyIP5CTxInEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bb95:
  %v2_bbbf = call i32 @unknown_19f7e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bbd0

bb:                                               ; preds = %dec_label_pc_bb95
  %v1_bbce = call i32 @function_bbd5()
  br label %dec_label_pc_bbd0

dec_label_pc_bbd0:                                ; preds = %bb, %dec_label_pc_bb95
  %v2_bbce = phi i32 [ %v1_bbce, %bb ], [ 0, %dec_label_pc_bb95 ]
  ret i32 %v2_bbce
}

define i32 @function_bbd5() local_unnamed_addr {
dec_label_pc_bbd5:
  %v0_bbd6 = load i32, i32* @eax, align 4
  ret i32 %v0_bbd6
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_bbd8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp100, i32* %stack_var_-60, align 4
  %v1_bbf5 = call i32 @unknown_12f9e(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_bc06 = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_bc06 = inttoptr i32 %v1_bc06 to i32*
  store i32 0, i32* %v2_bc06, align 4
  %v1_bc10 = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_bc10 = inttoptr i32 %v1_bc10 to i32*
  store i32 0, i32* %v2_bc10, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bc23

bb:                                               ; preds = %dec_label_pc_bbd8
  %v1_bc21 = load i32, i32* %stack_var_-60, align 4
  %v3_bc21 = call i32 @function_bc28(i32 %v1_bc21, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc23

dec_label_pc_bc23:                                ; preds = %bb, %dec_label_pc_bbd8
  %v4_bc21 = phi i32 [ %v3_bc21, %bb ], [ 0, %dec_label_pc_bbd8 ]
  ret i32 %v4_bc21

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_bc28, { 1, 0 }
}

define i32 @function_bc28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bc28:
  %v0_bc29 = load i32, i32* @eax, align 4
  ret i32 %v0_bc29
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bc2a:
  %v10_bc4d = icmp eq i32 %arg2, 0
  br i1 %v10_bc4d, label %dec_label_pc_bc6c, label %dec_label_pc_bc53

dec_label_pc_bc53:                                ; preds = %dec_label_pc_bc2a
  %v3_bc67 = call i32 @unknown_1a06a(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_bc6c

dec_label_pc_bc6c:                                ; preds = %dec_label_pc_bc53, %dec_label_pc_bc2a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bc78

bb:                                               ; preds = %dec_label_pc_bc6c
  %v1_bc76 = call i32 @function_bc7d()
  br label %dec_label_pc_bc78

dec_label_pc_bc78:                                ; preds = %bb, %dec_label_pc_bc6c
  %v2_bc76 = phi i32 [ %v1_bc76, %bb ], [ 0, %dec_label_pc_bc6c ]
  ret i32 %v2_bc76
}

define i32 @function_bc7d() local_unnamed_addr {
dec_label_pc_bc7d:
  %v0_bc7e = load i32, i32* @eax, align 4
  ret i32 %v0_bc7e
}

define i32 @_ZSt8_DestroyIP6CTxOutEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bc7f:
  %v2_bca9 = call i32 @unknown_1a100(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bcba

bb:                                               ; preds = %dec_label_pc_bc7f
  %v1_bcb8 = call i32 @function_bcbf()
  br label %dec_label_pc_bcba

dec_label_pc_bcba:                                ; preds = %bb, %dec_label_pc_bc7f
  %v2_bcb8 = phi i32 [ %v1_bcb8, %bb ], [ 0, %dec_label_pc_bc7f ]
  ret i32 %v2_bcb8
}

define i32 @function_bcbf() local_unnamed_addr {
dec_label_pc_bcbf:
  %v0_bcc0 = load i32, i32* @eax, align 4
  ret i32 %v0_bcc0
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bcc2:
  %v1_bce2 = inttoptr i32 %arg2 to i32*
  %v2_bce2 = load i32, i32* %v1_bce2, align 4
  store i32 %v2_bce2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bcf5

bb:                                               ; preds = %dec_label_pc_bcc2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_bcf3 = call i32 @function_bcfa(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_bcf5

dec_label_pc_bcf5:                                ; preds = %bb, %dec_label_pc_bcc2
  %v4_bcf3 = phi i32 [ %v3_bcf3, %bb ], [ 0, %dec_label_pc_bcc2 ]
  ret i32 %v4_bcf3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_bcfa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bcfa:
  %v0_bcfb = load i32, i32* @eax, align 4
  ret i32 %v0_bcfb
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_bcfc:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bd22

bb:                                               ; preds = %dec_label_pc_bcfc
  %v2_bd20 = call i32 @function_bd27(i32 %arg1)
  br label %dec_label_pc_bd22

dec_label_pc_bd22:                                ; preds = %bb, %dec_label_pc_bcfc
  %v3_bd20 = phi i32 [ %v2_bd20, %bb ], [ %arg1, %dec_label_pc_bcfc ]
  ret i32 %v3_bd20
}

define i32 @function_bd27(i32 %arg1) local_unnamed_addr {
dec_label_pc_bd27:
  %v0_bd28 = load i32, i32* @eax, align 4
  ret i32 %v0_bd28
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bd2a:
  %v1_bd4a = inttoptr i32 %arg2 to i32*
  %v2_bd4a = load i32, i32* %v1_bd4a, align 4
  store i32 %v2_bd4a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bd5d

bb:                                               ; preds = %dec_label_pc_bd2a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_bd5b = call i32 @function_bd62(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_bd5d

dec_label_pc_bd5d:                                ; preds = %bb, %dec_label_pc_bd2a
  %v4_bd5b = phi i32 [ %v3_bd5b, %bb ], [ 0, %dec_label_pc_bd2a ]
  ret i32 %v4_bd5b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_bd62(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bd62:
  %v0_bd63 = load i32, i32* @eax, align 4
  ret i32 %v0_bd63
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_bd64:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bd8a

bb:                                               ; preds = %dec_label_pc_bd64
  %v2_bd88 = call i32 @function_bd8f(i32 %arg1)
  br label %dec_label_pc_bd8a

dec_label_pc_bd8a:                                ; preds = %bb, %dec_label_pc_bd64
  %v3_bd88 = phi i32 [ %v2_bd88, %bb ], [ %arg1, %dec_label_pc_bd64 ]
  ret i32 %v3_bd88
}

define i32 @function_bd8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_bd8f:
  %v0_bd90 = load i32, i32* @eax, align 4
  ret i32 %v0_bd90
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_bd91:
  %v1_bdae = call i32 @unknown_1a37a(i32 %arg1)
  store i32 %v1_bdae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bdbf

bb:                                               ; preds = %dec_label_pc_bd91
  %v1_bdbd = call i32 @function_bdc4()
  br label %dec_label_pc_bdbf

dec_label_pc_bdbf:                                ; preds = %bb, %dec_label_pc_bd91
  %v2_bdbd = phi i32 [ %v1_bdbd, %bb ], [ %v1_bdae, %dec_label_pc_bd91 ]
  ret i32 %v2_bdbd
}

define i32 @function_bdc4() local_unnamed_addr {
dec_label_pc_bdc4:
  %v0_bdc5 = load i32, i32* @eax, align 4
  ret i32 %v0_bdc5
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_bdc6:
  %v1_bde3 = call i32 @unknown_1a3e6(i32 %arg1)
  store i32 %v1_bde3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bdf4

bb:                                               ; preds = %dec_label_pc_bdc6
  %v1_bdf2 = call i32 @function_bdf9()
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %bb, %dec_label_pc_bdc6
  %v2_bdf2 = phi i32 [ %v1_bdf2, %bb ], [ %v1_bde3, %dec_label_pc_bdc6 ]
  ret i32 %v2_bdf2
}

define i32 @function_bdf9() local_unnamed_addr {
dec_label_pc_bdf9:
  %v0_bdfa = load i32, i32* @eax, align 4
  ret i32 %v0_bdfa
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bdfc:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_be26 = call i32 @unknown_1a454(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_be37 = add i32 %tmp103, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_be37 = inttoptr i32 %v1_be37 to i32*
  store i32 0, i32* %v2_be37, align 4
  %v1_be41 = add i32 %tmp103, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_be41 = inttoptr i32 %v1_be41 to i32*
  store i32 0, i32* %v2_be41, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_be54

bb:                                               ; preds = %dec_label_pc_bdfc
  %v1_be52 = call i32 @function_be59()
  br label %dec_label_pc_be54

dec_label_pc_be54:                                ; preds = %bb, %dec_label_pc_bdfc
  %v2_be52 = phi i32 [ %v1_be52, %bb ], [ 0, %dec_label_pc_bdfc ]
  ret i32 %v2_be52

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_be59() local_unnamed_addr {
dec_label_pc_be59:
  %v0_be5a = load i32, i32* @eax, align 4
  ret i32 %v0_be5a
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_be5c:
  %v10_be79 = icmp eq i32 %arg2, 0
  br i1 %v10_be79, label %dec_label_pc_bea0, label %dec_label_pc_be7f

dec_label_pc_be7f:                                ; preds = %dec_label_pc_be5c
  %v3_be94 = call i32 @unknown_1a4f6(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_bea0

dec_label_pc_bea0:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_be7f
  %storemerge = phi i32 [ %v3_be94, %dec_label_pc_be7f ], [ 0, %dec_label_pc_be5c ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_beac

bb:                                               ; preds = %dec_label_pc_bea0
  %v1_beaa = call i32 @function_beb1()
  br label %dec_label_pc_beac

dec_label_pc_beac:                                ; preds = %bb, %dec_label_pc_bea0
  %v2_beaa = phi i32 [ %v1_beaa, %bb ], [ %storemerge, %dec_label_pc_bea0 ]
  ret i32 %v2_beaa

; uselistorder directives
  uselistorder label %dec_label_pc_bea0, { 1, 0 }
}

define i32 @function_beb1() local_unnamed_addr {
dec_label_pc_beb1:
  %v0_beb2 = load i32, i32* @eax, align 4
  ret i32 %v0_beb2
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_beb3:
  %v0_becb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_becb
}

define i32 @function_bed4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bed4:
  %v0_bed6 = load i32, i32* @ebp, align 4
  %v1_bed6 = add i32 %v0_bed6, -36
  %v2_bed6 = inttoptr i32 %v1_bed6 to i32*
  %v3_bed6 = load i32, i32* %v2_bed6, align 4
  %v1_bedd = add i32 %v0_bed6, -32
  %v2_bedd = inttoptr i32 %v1_bedd to i32*
  %v3_bedd = load i32, i32* %v2_bedd, align 4
  %v1_bee4 = add i32 %v0_bed6, -28
  %v2_bee4 = inttoptr i32 %v1_bee4 to i32*
  %v3_bee4 = load i32, i32* %v2_bee4, align 4
  %v3_beea = call i32 @unknown_1a5b2(i32 %v3_bee4, i32 %v3_bedd, i32 %v3_bed6)
  store i32 %v3_beea, i32* @eax, align 4
  %v0_beef = load i32, i32* @ebp, align 4
  %v1_beef = add i32 %v0_beef, -12
  %v2_beef = inttoptr i32 %v1_beef to i32*
  %v3_beef = load i32, i32* %v2_beef, align 4
  %v1_bef2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_bef2 = icmp eq i32 %v1_bef2, %v3_beef
  br i1 %v3_bef2, label %bb, label %dec_label_pc_befb

bb:                                               ; preds = %dec_label_pc_bed4
  %v1_bef9 = call i32 @function_bf00()
  br label %dec_label_pc_befb

dec_label_pc_befb:                                ; preds = %bb, %dec_label_pc_bed4
  %v2_bef9 = phi i32 [ %v1_bef9, %bb ], [ %v3_beea, %dec_label_pc_bed4 ]
  ret i32 %v2_bef9
}

define i32 @function_bf00() local_unnamed_addr {
dec_label_pc_bf00:
  %v0_bf01 = load i32, i32* @eax, align 4
  ret i32 %v0_bf01
}

define i32 @_ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bf02:
  %v7_bf3f = call i32 @unknown_1a6c2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bf50

bb:                                               ; preds = %dec_label_pc_bf02
  %v1_bf4e = call i32 @function_bf55()
  br label %dec_label_pc_bf50

dec_label_pc_bf50:                                ; preds = %bb, %dec_label_pc_bf02
  %v2_bf4e = phi i32 [ %v1_bf4e, %bb ], [ 0, %dec_label_pc_bf02 ]
  ret i32 %v2_bf4e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_bf55() local_unnamed_addr {
dec_label_pc_bf55:
  %v0_bf56 = load i32, i32* @eax, align 4
  ret i32 %v0_bf56
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bf58:
  %v1_bf78 = inttoptr i32 %arg2 to i32*
  %v2_bf78 = load i32, i32* %v1_bf78, align 4
  store i32 %v2_bf78, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bf8b

bb:                                               ; preds = %dec_label_pc_bf58
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_bf89 = call i32 @function_bf90(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_bf8b

dec_label_pc_bf8b:                                ; preds = %bb, %dec_label_pc_bf58
  %v4_bf89 = phi i32 [ %v3_bf89, %bb ], [ 0, %dec_label_pc_bf58 ]
  ret i32 %v4_bf89

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_bf90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bf90:
  %v0_bf91 = load i32, i32* @eax, align 4
  ret i32 %v0_bf91
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_bf92:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_bfaf = call i32 @unknown_1a7a2(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_bfc0 = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_bfc0 = inttoptr i32 %v1_bfc0 to i32*
  store i32 0, i32* %v2_bfc0, align 4
  %v1_bfca = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_bfca = inttoptr i32 %v1_bfca to i32*
  store i32 0, i32* %v2_bfca, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bfdd

bb:                                               ; preds = %dec_label_pc_bf92
  %v1_bfdb = call i32 @function_bfe2()
  br label %dec_label_pc_bfdd

dec_label_pc_bfdd:                                ; preds = %bb, %dec_label_pc_bf92
  %v2_bfdb = phi i32 [ %v1_bfdb, %bb ], [ 0, %dec_label_pc_bf92 ]
  ret i32 %v2_bfdb

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_bfe2() local_unnamed_addr {
dec_label_pc_bfe2:
  %v0_bfe3 = load i32, i32* @eax, align 4
  ret i32 %v0_bfe3
}

define i32 @_ZNSaI12CTransactionED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_bfe4:
  ret i32 %arg1
}

define i32 @function_c017() local_unnamed_addr {
dec_label_pc_c017:
  %v0_c018 = load i32, i32* @eax, align 4
  ret i32 %v0_c018
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c01a:
  %v10_c03d = icmp eq i32 %arg2, 0
  br i1 %v10_c03d, label %dec_label_pc_c05c, label %dec_label_pc_c043

dec_label_pc_c043:                                ; preds = %dec_label_pc_c01a
  %v3_c057 = call i32 @unknown_1a88a(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_c05c

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c043, %dec_label_pc_c01a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c068

bb:                                               ; preds = %dec_label_pc_c05c
  %v1_c066 = call i32 @function_c06d()
  br label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %bb, %dec_label_pc_c05c
  %v2_c066 = phi i32 [ %v1_c066, %bb ], [ 0, %dec_label_pc_c05c ]
  ret i32 %v2_c066
}

define i32 @function_c06d() local_unnamed_addr {
dec_label_pc_c06d:
  %v0_c06e = load i32, i32* @eax, align 4
  ret i32 %v0_c06e
}

define i32 @_ZSt8_DestroyIP12CTransactionEvT_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_c06f:
  ret i32 %arg1
}

define i32 @function_c07a(i32 %arg1) local_unnamed_addr {
dec_label_pc_c07a:
  %v0_c07c = load i32, i32* @ebp, align 4
  %v1_c07f = add i32 %v0_c07c, 2
  store i32 %v1_c07f, i32* @ebp, align 4
  %v0_c082 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c087 = add i32 %v0_c07c, -10
  %v3_c087 = inttoptr i32 %v2_c087 to i32*
  store i32 %v0_c082, i32* %v3_c087, align 4
  %v0_c08c = load i32, i32* @ebp, align 4
  %v1_c08c = add i32 %v0_c08c, -32
  %v2_c08c = inttoptr i32 %v1_c08c to i32*
  %v3_c08c = load i32, i32* %v2_c08c, align 4
  %v1_c093 = add i32 %v0_c08c, -28
  %v2_c093 = inttoptr i32 %v1_c093 to i32*
  %v3_c093 = load i32, i32* %v2_c093, align 4
  %v2_c099 = call i32 @unknown_1a920(i32 %v3_c093, i32 %v3_c08c)
  %v0_c09e = load i32, i32* @ebp, align 4
  %v1_c09e = add i32 %v0_c09e, -12
  %v2_c09e = inttoptr i32 %v1_c09e to i32*
  %v3_c09e = load i32, i32* %v2_c09e, align 4
  %v1_c0a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c0a1 = xor i32 %v1_c0a1, %v3_c09e
  %v3_c0a1 = icmp eq i32 %v2_c0a1, 0
  store i32 %v2_c0a1, i32* @eax, align 4
  br i1 %v3_c0a1, label %bb, label %dec_label_pc_c0aa

bb:                                               ; preds = %dec_label_pc_c07a
  %v1_c0a8 = call i32 @function_c0af()
  br label %dec_label_pc_c0aa

dec_label_pc_c0aa:                                ; preds = %bb, %dec_label_pc_c07a
  %v3_c0a8 = phi i32 [ %v1_c0a8, %bb ], [ %v2_c0a1, %dec_label_pc_c07a ]
  ret i32 %v3_c0a8
}

define i32 @function_c0af() local_unnamed_addr {
dec_label_pc_c0af:
  %v0_c0b0 = load i32, i32* @eax, align 4
  ret i32 %v0_c0b0
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_c0b2:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_c0cf = call i32 @unknown_1a9ba(i32 %tmp99)
  store i32 0, i32* %arg1, align 4
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_c0e0 = add i32 %tmp99, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i32*
  store i32 0, i32* %v2_c0e0, align 4
  %v3_c0e0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_c0e0
}

define i32 @function_c0ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_c0ee:
  %v2_c0ee = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_c0ee = load i32, i32* @eax, align 4
  %v4_c0ee = trunc i32 %v3_c0ee to i8
  %v5_c0ee = add i8 %v4_c0ee, %v2_c0ee
  %v21_c0ee = inttoptr i32 %v3_c0ee to i8*
  store i8 %v5_c0ee, i8* %v21_c0ee, align 1
  %v0_c0f0 = load i32, i32* @ebx, align 4
  %v1_c0f0 = add i32 %v0_c0f0, 862319685
  %v2_c0f0 = inttoptr i32 %v1_c0f0 to i8*
  %v3_c0f0 = load i8, i8* %v2_c0f0, align 1
  %v4_c0f0 = load i32, i32* @ecx, align 4
  %v5_c0f0 = trunc i32 %v4_c0f0 to i8
  %v6_c0f0 = add i8 %v5_c0f0, %v3_c0f0
  store i8 %v6_c0f0, i8* %v2_c0f0, align 1
  %v0_c0f6 = load i32, i32* @eax, align 4
  %v1_c0f6 = add i32 %v0_c0f6, 20
  %v10_c0f6 = icmp eq i32 %v1_c0f6, 0
  store i32 %v1_c0f6, i32* @eax, align 4
  br i1 %v10_c0f6, label %bb, label %dec_label_pc_c0fd

bb:                                               ; preds = %dec_label_pc_c0ee
  %v1_c0fb = call i32 @function_c102()
  br label %dec_label_pc_c0fd

dec_label_pc_c0fd:                                ; preds = %bb, %dec_label_pc_c0ee
  %v2_c0fb = phi i32 [ %v1_c0fb, %bb ], [ %v1_c0f6, %dec_label_pc_c0ee ]
  ret i32 %v2_c0fb
}

define i32 @function_c102() local_unnamed_addr {
dec_label_pc_c102:
  %v0_c103 = load i32, i32* @eax, align 4
  ret i32 %v0_c103
}

define i32 @_ZNSaI7uint256ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_c104:
  %v1_c121 = call i32 @unknown_1aa42(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c132

bb:                                               ; preds = %dec_label_pc_c104
  %v1_c130 = call i32 @function_c137()
  br label %dec_label_pc_c132

dec_label_pc_c132:                                ; preds = %bb, %dec_label_pc_c104
  %v2_c130 = phi i32 [ %v1_c130, %bb ], [ 0, %dec_label_pc_c104 ]
  ret i32 %v2_c130
}

define i32 @function_c137() local_unnamed_addr {
dec_label_pc_c137:
  %v0_c138 = load i32, i32* @eax, align 4
  ret i32 %v0_c138
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c13a:
  %v10_c15d = icmp eq i32 %arg2, 0
  br i1 %v10_c15d, label %dec_label_pc_c17c, label %dec_label_pc_c163

dec_label_pc_c163:                                ; preds = %dec_label_pc_c13a
  %v3_c177 = call i32 @unknown_1aaa2(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_c17c

dec_label_pc_c17c:                                ; preds = %dec_label_pc_c163, %dec_label_pc_c13a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c188

bb:                                               ; preds = %dec_label_pc_c17c
  %v1_c186 = call i32 @function_c18d()
  br label %dec_label_pc_c188

dec_label_pc_c188:                                ; preds = %bb, %dec_label_pc_c17c
  %v2_c186 = phi i32 [ %v1_c186, %bb ], [ 0, %dec_label_pc_c17c ]
  ret i32 %v2_c186
}

define i32 @function_c18d() local_unnamed_addr {
dec_label_pc_c18d:
  %v0_c18e = load i32, i32* @eax, align 4
  ret i32 %v0_c18e
}

define i32 @_ZSt8_DestroyIP7uint256EvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c18f:
  %v0_c1a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c1b9 = call i32 @unknown_1ab38(i32 %arg1, i32 %arg2)
  ret i32 %v0_c1a1
}

define i32 @function_c1c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c1c4:
  %zf.global-to-local = alloca i1, align 1
  %v0_c1c4 = load i32, i32* @eax, align 4
  %v1_c1c4 = trunc i32 %v0_c1c4 to i8
  %v2_c1c4 = load i1, i1* @cf, align 1
  %v3_c1c4 = zext i1 %v2_c1c4 to i8
  %v4_c1c4 = add i8 %v3_c1c4, %v1_c1c4
  %v13_c1c4 = icmp eq i8 %v4_c1c4, 0
  store i1 %v13_c1c4, i1* %zf.global-to-local, align 1
  %v22_c1c4 = zext i8 %v4_c1c4 to i32
  %v24_c1c4 = and i32 %v0_c1c4, -256
  %v25_c1c4 = or i32 %v22_c1c4, %v24_c1c4
  store i32 %v25_c1c4, i32* @eax, align 4
  %v1_c1c6 = inttoptr i32 %v25_c1c4 to i8*
  %v2_c1c6 = load i8, i8* %v1_c1c6, align 1
  %v5_c1c6 = add i8 %v2_c1c6, %v4_c1c4
  %v15_c1c6 = icmp eq i8 %v5_c1c6, 0
  store i1 %v15_c1c6, i1* %zf.global-to-local, align 1
  store i8 %v5_c1c6, i8* %v1_c1c6, align 1
  %v0_c1c8 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_c1c8, label %bb, label %dec_label_pc_c1c4.dec_label_pc_c1ca_crit_edge

dec_label_pc_c1c4.dec_label_pc_c1ca_crit_edge:    ; preds = %dec_label_pc_c1c4
  %v2_c1c8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_c1ca

bb:                                               ; preds = %dec_label_pc_c1c4
  %v1_c1c8 = call i32 @function_c1cf()
  br label %dec_label_pc_c1ca

dec_label_pc_c1ca:                                ; preds = %dec_label_pc_c1c4.dec_label_pc_c1ca_crit_edge, %bb
  %v2_c1c8 = phi i32 [ %v2_c1c8.pre, %dec_label_pc_c1c4.dec_label_pc_c1ca_crit_edge ], [ %v1_c1c8, %bb ]
  ret i32 %v2_c1c8

; uselistorder directives
  uselistorder label %dec_label_pc_c1ca, { 1, 0 }
}

define i32 @function_c1cf() local_unnamed_addr {
dec_label_pc_c1cf:
  %v0_c1d0 = load i32, i32* @eax, align 4
  ret i32 %v0_c1d0
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EE12_Vector_implC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_c1d2:
  %v1_c1ef = call i32 @unknown_1abac(i32 %arg1)
  ret i32 %v1_c1ef
}

define i32 @function_c1f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_c1f6:
  %v2_c1f8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_c1f8 = load i32, i32* @eax, align 4
  %v4_c1f8 = trunc i32 %v3_c1f8 to i8
  %v5_c1f8 = add i8 %v4_c1f8, %v2_c1f8
  %v21_c1f8 = inttoptr i32 %v3_c1f8 to i8*
  store i8 %v5_c1f8, i8* %v21_c1f8, align 1
  %v2_c1fa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_c1fa = load i32, i32* @eax, align 4
  %v4_c1fa = trunc i32 %v3_c1fa to i8
  %v5_c1fa = add i8 %v4_c1fa, %v2_c1fa
  %v21_c1fa = inttoptr i32 %v3_c1fa to i8*
  store i8 %v5_c1fa, i8* %v21_c1fa, align 1
  %v0_c1fc = load i32, i32* @ebx, align 4
  %v1_c1fc = add i32 %v0_c1fc, 1086841925
  %v2_c1fc = inttoptr i32 %v1_c1fc to i8*
  %v3_c1fc = load i8, i8* %v2_c1fc, align 1
  %v4_c1fc = load i32, i32* @ecx, align 4
  %v5_c1fc = trunc i32 %v4_c1fc to i8
  %v6_c1fc = add i8 %v5_c1fc, %v3_c1fc
  store i8 %v6_c1fc, i8* %v2_c1fc, align 1
  %v0_c202 = load i32, i32* @eax, align 4
  %v1_c202 = trunc i32 %v0_c202 to i8
  %v1_c204 = inttoptr i32 %v0_c202 to i8*
  %v2_c204 = load i8, i8* %v1_c204, align 1
  %v5_c204 = add i8 %v2_c204, %v1_c202
  store i8 %v5_c204, i8* %v1_c204, align 1
  %v0_c206 = load i32, i32* @ebx, align 4
  %v1_c206 = add i32 %v0_c206, 1086841925
  %v2_c206 = inttoptr i32 %v1_c206 to i8*
  %v3_c206 = load i8, i8* %v2_c206, align 1
  %v4_c206 = load i32, i32* @ecx, align 4
  %v5_c206 = trunc i32 %v4_c206 to i8
  %v6_c206 = add i8 %v5_c206, %v3_c206
  store i8 %v6_c206, i8* %v2_c206, align 1
  %v0_c20c = load i32, i32* @eax, align 4
  %v1_c20c = inttoptr i32 %v0_c20c to i8*
  %v2_c20c = load i8, i8* %v1_c20c, align 1
  %v4_c20c = trunc i32 %v0_c20c to i8
  %v5_c20c = or i8 %v2_c20c, %v4_c20c
  store i8 %v5_c20c, i8* %v1_c20c, align 1
  %v0_c20e = load i32, i32* @eax, align 4
  %v1_c20e = inttoptr i32 %v0_c20e to i8*
  %v2_c20e = load i8, i8* %v1_c20e, align 1
  %v4_c20e = trunc i32 %v0_c20e to i8
  %v5_c20e = add i8 %v2_c20e, %v4_c20e
  store i8 %v5_c20e, i8* %v1_c20e, align 1
  %v0_c210 = load i32, i32* @ebx, align 4
  %v1_c210 = add i32 %v0_c210, 862319685
  %v2_c210 = inttoptr i32 %v1_c210 to i8*
  %v3_c210 = load i8, i8* %v2_c210, align 1
  %v4_c210 = load i32, i32* @ecx, align 4
  %v5_c210 = trunc i32 %v4_c210 to i8
  %v6_c210 = add i8 %v5_c210, %v3_c210
  store i8 %v6_c210, i8* %v2_c210, align 1
  %v0_c216 = load i32, i32* @eax, align 4
  %v1_c216 = add i32 %v0_c216, 20
  %v10_c216 = icmp eq i32 %v1_c216, 0
  store i32 %v1_c216, i32* @eax, align 4
  br i1 %v10_c216, label %bb, label %dec_label_pc_c21d

bb:                                               ; preds = %dec_label_pc_c1f6
  %v1_c21b = call i32 @function_c222()
  br label %dec_label_pc_c21d

dec_label_pc_c21d:                                ; preds = %bb, %dec_label_pc_c1f6
  %v2_c21b = phi i32 [ %v1_c21b, %bb ], [ %v1_c216, %dec_label_pc_c1f6 ]
  ret i32 %v2_c21b
}

define i32 @function_c222() local_unnamed_addr {
dec_label_pc_c222:
  %v0_c223 = load i32, i32* @eax, align 4
  ret i32 %v0_c223
}

define i32 @_ZNSaI12CDNSSeedDataED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_c224:
  %v1_c241 = call i32 @unknown_1ac34(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c252

bb:                                               ; preds = %dec_label_pc_c224
  %v1_c250 = call i32 @function_c257()
  br label %dec_label_pc_c252

dec_label_pc_c252:                                ; preds = %bb, %dec_label_pc_c224
  %v2_c250 = phi i32 [ %v1_c250, %bb ], [ 0, %dec_label_pc_c224 ]
  ret i32 %v2_c250
}

define i32 @function_c257() local_unnamed_addr {
dec_label_pc_c257:
  %v0_c258 = load i32, i32* @eax, align 4
  ret i32 %v0_c258
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EE13_M_deallocateEPS0_j() local_unnamed_addr {
dec_label_pc_c25a:
  %eax.global-to-local = alloca i32, align 4
  %v17_c25d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_c25d
}

define i32 @function_c27e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c27e:
  %v0_c280 = load i32, i32* @ecx, align 4
  %v1_c280 = load i32, i32* @ebx, align 4
  %v3_c280 = add i32 %v0_c280, -117
  %v4_c280 = add i32 %v3_c280, %v1_c280
  %v5_c280 = inttoptr i32 %v4_c280 to i8*
  %v6_c280 = load i8, i8* %v5_c280, align 1
  %v7_c280 = load i32, i32* @edx, align 4
  %v8_c280 = lshr i32 %v7_c280, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_c280 = trunc i32 %v8_c280 to i8
  %v10_c280 = add i8 %v9_c280, %v6_c280
  store i8 %v10_c280, i8* %v5_c280, align 1
  %v0_c284 = load i32, i32* @ebp, align 4
  %v1_c284 = add i32 %v0_c284, 1
  store i32 %v1_c284, i32* @ebp, align 4
  %v0_c292 = load i32, i32* @eax, align 4
  %v11_c292 = and i32 %v0_c292, or (i32 zext (i8 ptrtoint (i16** @global_var_4.882 to i8) to i32), i32 -256)
  %v1_c297 = call i32 @unknown_1ac94(i32 %v11_c292)
  %v0_c29c = load i32, i32* @ebp, align 4
  %v1_c29c = add i32 %v0_c29c, -12
  %v2_c29c = inttoptr i32 %v1_c29c to i32*
  %v3_c29c = load i32, i32* %v2_c29c, align 4
  %v1_c29f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c29f = xor i32 %v1_c29f, %v3_c29c
  %v3_c29f = icmp eq i32 %v2_c29f, 0
  store i32 %v2_c29f, i32* @eax, align 4
  br i1 %v3_c29f, label %bb, label %dec_label_pc_c2a8

bb:                                               ; preds = %dec_label_pc_c27e
  %v1_c2a6 = call i32 @function_c2ad()
  br label %dec_label_pc_c2a8

dec_label_pc_c2a8:                                ; preds = %bb, %dec_label_pc_c27e
  %v4_c2a6 = phi i32 [ %v1_c2a6, %bb ], [ %v2_c29f, %dec_label_pc_c27e ]
  ret i32 %v4_c2a6
}

define i32 @function_c2ad() local_unnamed_addr {
dec_label_pc_c2ad:
  %v0_c2ae = load i32, i32* @eax, align 4
  ret i32 %v0_c2ae
}

define i32 @_ZSt8_DestroyIP12CDNSSeedDataEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c2af:
  %v2_c2d9 = call i32 @unknown_1ad2a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c2ea

bb:                                               ; preds = %dec_label_pc_c2af
  %v1_c2e8 = call i32 @function_c2ef()
  br label %dec_label_pc_c2ea

dec_label_pc_c2ea:                                ; preds = %bb, %dec_label_pc_c2af
  %v2_c2e8 = phi i32 [ %v1_c2e8, %bb ], [ 0, %dec_label_pc_c2af ]
  ret i32 %v2_c2e8
}

define i32 @function_c2ef() local_unnamed_addr {
dec_label_pc_c2ef:
  %v0_c2f0 = load i32, i32* @eax, align 4
  ret i32 %v0_c2f0
}

define i32 @_ZNSt12_Vector_baseI8CAddressSaIS0_EE12_Vector_implC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_c2f2:
  %v1_c30f = call i32 @unknown_1adc4(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_c341() local_unnamed_addr {
dec_label_pc_c341:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_c341 = load i32, i32* %ecx.global-to-local, align 4
  %v1_c341 = add i32 %v0_c341, -1
  store i32 %v1_c341, i32* %ecx.global-to-local, align 4
  %v0_c343 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c343
}

define i32 @_ZNSaI8CAddressED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_c344:
  %v1_c361 = call i32 @unknown_1ae4c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c372

bb:                                               ; preds = %dec_label_pc_c344
  %v1_c370 = call i32 @function_c377()
  br label %dec_label_pc_c372

dec_label_pc_c372:                                ; preds = %bb, %dec_label_pc_c344
  %v2_c370 = phi i32 [ %v1_c370, %bb ], [ 0, %dec_label_pc_c344 ]
  ret i32 %v2_c370
}

define i32 @function_c377() local_unnamed_addr {
dec_label_pc_c377:
  %v0_c378 = load i32, i32* @eax, align 4
  ret i32 %v0_c378
}

define i32 @_ZNSt12_Vector_baseI8CAddressSaIS0_EE13_M_deallocateEPS0_j() local_unnamed_addr {
dec_label_pc_c37a:
  %eax.global-to-local = alloca i32, align 4
  %v17_c37d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_c37d
}

define i32 @function_c382(i32 %arg1) local_unnamed_addr {
dec_label_pc_c382:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_c382 = load i32, i32* @ecx, align 4
  %v1_c382 = add i32 %v0_c382, 1166795845
  %v2_c382 = inttoptr i32 %v1_c382 to i8*
  %v3_c382 = load i8, i8* %v2_c382, align 1
  %v5_c382 = trunc i32 %v0_c382 to i8
  %v6_c382 = or i8 %v3_c382, %v5_c382
  store i8 %v6_c382, i8* %v2_c382, align 1
  %v0_c388 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_c388 = or i32 %v0_c388, 137
  store i32 %v11_c388, i32* %eax.global-to-local, align 4
  %v0_c38a = load i32, i32* @ebp, align 4
  %v0_c38b = load i32, i32* @ecx, align 4
  %v1_c38b = add i32 %v0_c38b, -1
  store i32 %v1_c38b, i32* @ecx, align 4
  %v1_c38d = add i32 %v0_c38a, 2
  store i32 %v1_c38d, i32* @ebp, align 4
  %v1_c38e = add i32 %v0_c38b, -1587159996
  %v2_c38e = inttoptr i32 %v1_c38e to i8*
  %v3_c38e = load i8, i8* %v2_c38e, align 1
  %v5_c38e = trunc i32 %v1_c38b to i8
  %v8_c38e = add i8 %v3_c38e, %v5_c38e
  %v28_c38e = icmp ult i8 %v8_c38e, %v3_c38e
  store i1 %v28_c38e, i1* %cf.global-to-local, align 1
  store i8 %v8_c38e, i8* %v2_c38e, align 1
  %v0_c394 = load i32, i32* %eax.global-to-local, align 4
  %v1_c394 = trunc i32 %v0_c394 to i8
  %v2_c394 = load i1, i1* %cf.global-to-local, align 1
  %v3_c394 = zext i1 %v2_c394 to i8
  %v4_c394 = add i8 %v3_c394, %v1_c394
  %v19_c394 = icmp ule i8 %v4_c394, %v1_c394
  %v21_c394 = icmp eq i1 %v2_c394, %v19_c394
  store i1 %v21_c394, i1* %cf.global-to-local, align 1
  %v22_c394 = zext i8 %v4_c394 to i32
  %v24_c394 = and i32 %v0_c394, -256
  %v25_c394 = or i32 %v22_c394, %v24_c394
  store i32 %v25_c394, i32* %eax.global-to-local, align 4
  %v1_c396 = inttoptr i32 %v25_c394 to i8*
  %v2_c396 = load i8, i8* %v1_c396, align 1
  %v5_c396 = add i8 %v2_c396, %v4_c394
  store i8 %v5_c396, i8* %v1_c396, align 1
  %v0_c398 = load i32, i32* %eax.global-to-local, align 4
  %v1_c398 = load i32, i32* @ebp, align 4
  %v2_c398 = add i32 %v1_c398, -12
  %v3_c398 = inttoptr i32 %v2_c398 to i32*
  store i32 %v0_c398, i32* %v3_c398, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_c39d = load i32, i32* @ebp, align 4
  %v1_c39d = add i32 %v0_c39d, -32
  %v2_c39d = inttoptr i32 %v1_c39d to i32*
  %v3_c39d = load i32, i32* %v2_c39d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_c39d = icmp eq i32 %v3_c39d, 0
  br i1 %v10_c39d, label %dec_label_pc_c3bc, label %dec_label_pc_c3a3

dec_label_pc_c3a3:                                ; preds = %dec_label_pc_c382
  %v1_c3a3 = add i32 %v0_c39d, -28
  %v2_c3a3 = inttoptr i32 %v1_c3a3 to i32*
  %v3_c3a3 = load i32, i32* %v2_c3a3, align 4
  store i32 %v3_c3a3, i32* %eax.global-to-local, align 4
  %v1_c3a6 = add i32 %v0_c39d, -36
  %v2_c3a6 = inttoptr i32 %v1_c3a6 to i32*
  %v3_c3a6 = load i32, i32* %v2_c3a6, align 4
  %v3_c3ad = load i32, i32* %v2_c39d, align 4
  %v3_c3b7 = call i32 @unknown_1aeac(i32 %v3_c3a3, i32 %v3_c3ad, i32 %v3_c3a6)
  store i32 %v3_c3b7, i32* %eax.global-to-local, align 4
  %v0_c3bc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_c3bc

dec_label_pc_c3bc:                                ; preds = %dec_label_pc_c3a3, %dec_label_pc_c382
  %v0_c3bc = phi i32 [ %v0_c3bc.pre, %dec_label_pc_c3a3 ], [ %v0_c39d, %dec_label_pc_c382 ]
  %v1_c3bc = add i32 %v0_c3bc, -12
  %v2_c3bc = inttoptr i32 %v1_c3bc to i32*
  %v3_c3bc = load i32, i32* %v2_c3bc, align 4
  store i32 %v3_c3bc, i32* %eax.global-to-local, align 4
  %v1_c3bf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c3bf = xor i32 %v1_c3bf, %v3_c3bc
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_c3bf = icmp eq i32 %v2_c3bf, 0
  store i32 %v2_c3bf, i32* @eax, align 4
  br i1 %v3_c3bf, label %bb, label %dec_label_pc_c3c8

bb:                                               ; preds = %dec_label_pc_c3bc
  %v1_c3c6 = call i32 @function_c3cd()
  store i32 %v1_c3c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c3c8

dec_label_pc_c3c8:                                ; preds = %bb, %dec_label_pc_c3bc
  %v2_c3c6 = phi i32 [ %v1_c3c6, %bb ], [ %v2_c3bf, %dec_label_pc_c3bc ]
  ret i32 %v2_c3c6

; uselistorder directives
  uselistorder i32 %v0_c39d, { 0, 2, 1, 3 }
  uselistorder i8 %v4_c394, { 0, 2, 1 }
  uselistorder i8 %v1_c394, { 1, 0 }
  uselistorder i8 %v3_c38e, { 1, 0 }
}

define i32 @function_c3cd() local_unnamed_addr {
dec_label_pc_c3cd:
  %v0_c3ce = load i32, i32* @eax, align 4
  ret i32 %v0_c3ce
}

define i32 @_ZSt8_DestroyIP8CAddressEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c3cf:
  %v2_c3f9 = call i32 @unknown_1af42(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c40a

bb:                                               ; preds = %dec_label_pc_c3cf
  %v1_c408 = call i32 @function_c40f()
  br label %dec_label_pc_c40a

dec_label_pc_c40a:                                ; preds = %bb, %dec_label_pc_c3cf
  %v2_c408 = phi i32 [ %v1_c408, %bb ], [ 0, %dec_label_pc_c3cf ]
  ret i32 %v2_c408
}

define i32 @function_c40f() local_unnamed_addr {
dec_label_pc_c40f:
  %v0_c410 = load i32, i32* @eax, align 4
  ret i32 %v0_c410
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c412:
  %v1_c432 = inttoptr i32 %arg2 to i32*
  %v2_c432 = load i32, i32* %v1_c432, align 4
  store i32 %v2_c432, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c445

bb:                                               ; preds = %dec_label_pc_c412
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_c443 = call i32 @function_c44a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_c445

dec_label_pc_c445:                                ; preds = %bb, %dec_label_pc_c412
  %v4_c443 = phi i32 [ %v3_c443, %bb ], [ 0, %dec_label_pc_c412 ]
  ret i32 %v4_c443

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_c44a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c44a:
  %v0_c44b = load i32, i32* @eax, align 4
  ret i32 %v0_c44b
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c44c:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %tmp145 = ptrtoint i32* %arg1 to i32
  %stack_var_-140 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-116, align 4
  store i32 0, i32* @eax, align 4
  %v11_c477 = icmp eq i32 %arg3, 0
  br i1 %v11_c477, label %bb, label %dec_label_pc_c481

bb:                                               ; preds = %dec_label_pc_c44c
  %v6_c47b = call i32 @function_c8bb(i32 %arg4, i32 0, i32 %arg2, i32 %tmp145)
  br label %dec_label_pc_c481

dec_label_pc_c481:                                ; preds = %bb, %dec_label_pc_c44c
  %v1_c484 = add i32 %tmp145, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_c484 = inttoptr i32 %v1_c484 to i32*
  %v3_c484 = load i32, i32* %v2_c484, align 4
  %v1_c48c = add i32 %tmp145, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_c48c = inttoptr i32 %v1_c48c to i32*
  %v3_c48c = load i32, i32* %v2_c48c, align 4
  %v2_c491 = sub i32 %v3_c484, %v3_c48c
  %v2_c495 = sdiv i32 %v2_c491, 4
  %v3_c498 = mul i32 %v2_c495, -991146299
  %v11_c49e = icmp ult i32 %v3_c498, %arg3
  br i1 %v11_c49e, label %dec_label_pc_c67a, label %dec_label_pc_c4a7

dec_label_pc_c4a7:                                ; preds = %dec_label_pc_c481
  %v2_c4ae = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_c4ae, i32* @eax, align 4
  store i32 %v2_c4ae, i32* %stack_var_-140, align 4
  %v2_c4b4 = call i32 @function_103be(i32 %v2_c4ae, i32 %arg4)
  %v2_c4b9 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_c4b9, i32* %stack_var_-140, align 4
  %v2_c4c6 = call i32 @unknown_1618c(i32 %v2_c4b9, i32 %tmp145)
  %v2_c4ce = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_c4ce, i32* %stack_var_-140, align 4
  store i32 %v2_c4b9, i32* %stack_var_-144, align 4
  %v2_c4db = call i32 @unknown_1afef(i32 %v2_c4b9, i32 %v2_c4ce)
  %v3_c4e6 = load i32, i32* %v2_c48c, align 4
  %tmp153 = icmp ugt i32 %v2_c4db, %arg3
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v1_c5b5 = call i32 @unknown_154f4(i32 %tmp145)
  br i1 %tmp153, label %dec_label_pc_c4f8, label %dec_label_pc_c5af

dec_label_pc_c4f8:                                ; preds = %dec_label_pc_c4a7
  %v3_c506 = load i32, i32* %v2_c48c, align 4
  store i32 %v3_c506, i32* @ecx, align 4
  %v3_c50c = load i32, i32* %v2_c48c, align 4
  %v3_c518 = mul i32 %arg3, 52
  %v2_c51d = sub i32 %v3_c50c, %v3_c518
  store i32 %v3_c50c, i32* %stack_var_-140, align 4
  store i32 %v2_c51d, i32* %stack_var_-144, align 4
  %v5_c52e = call i32 @unknown_1b04f(i32 %v2_c51d, i32 %v3_c50c, i32 %v3_c506, i32 %v1_c5b5)
  %v3_c536 = load i32, i32* %v2_c48c, align 4
  %v2_c53f = add i32 %v3_c536, %v3_c518
  store i32 %v2_c53f, i32* %v2_c48c, align 4
  %v5_c551 = sub i32 %v3_c4e6, %v3_c518
  store i32 %v2_c4ce, i32* %stack_var_-144, align 4
  %v1_c55a = call i32 @unknown_1b0ac(i32 %v2_c4ce)
  %v1_c55f = inttoptr i32 %v1_c55a to i32*
  %v2_c55f = load i32, i32* %v1_c55f, align 4
  store i32 %v5_c551, i32* %stack_var_-140, align 4
  store i32 %v2_c55f, i32* %stack_var_-144, align 4
  %v3_c56f = call i32 @unknown_1b0d9(i32 %v2_c55f, i32 %v5_c551, i32 %v3_c4e6)
  store i32 %v2_c4ce, i32* %stack_var_-144, align 4
  %v1_c57a = call i32 @unknown_1b0ac(i32 %v2_c4ce)
  %v1_c57f = inttoptr i32 %v1_c57a to i32*
  %v2_c57f = load i32, i32* %v1_c57f, align 4
  %v3_c587 = add i32 %v2_c57f, %v3_c518
  store i32 %v3_c587, i32* @ebx, align 4
  store i32 %v2_c4ce, i32* %stack_var_-144, align 4
  %v1_c590 = call i32 @unknown_1b0ac(i32 %v2_c4ce)
  %v1_c595 = inttoptr i32 %v1_c590 to i32*
  %v2_c595 = load i32, i32* %v1_c595, align 4
  %v0_c59e = load i32, i32* @ebx, align 4
  store i32 %v0_c59e, i32* %stack_var_-140, align 4
  store i32 %v2_c595, i32* %stack_var_-144, align 4
  %v3_c5a5 = call i32 @unknown_1b13f(i32 %v2_c595, i32 %v0_c59e, i32 %v2_c4ae)
  br label %dec_label_pc_c66a

dec_label_pc_c5af:                                ; preds = %dec_label_pc_c4a7
  %v2_c5c0 = sub i32 %arg3, %v2_c4db
  %v3_c5c5 = load i32, i32* %v2_c48c, align 4
  store i32 %v2_c5c0, i32* %stack_var_-140, align 4
  store i32 %v3_c5c5, i32* %stack_var_-144, align 4
  %v5_c5da = call i32 @unknown_1b1a5(i32 %v3_c5c5, i32 %v2_c5c0, i32 %v2_c4ae, i32 %v1_c5b5)
  %v3_c5e2 = load i32, i32* %v2_c48c, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_c5f1 = mul i32 %v2_c5c0, 52
  %v2_c5f4 = add i32 %v3_c5e2, %v3_c5f1
  store i32 %v2_c5f4, i32* %v2_c48c, align 4
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v1_c602 = call i32 @unknown_154f4(i32 %tmp145)
  store i32 %v1_c602, i32* @ebx, align 4
  %v3_c60c = load i32, i32* %v2_c48c, align 4
  store i32 %v2_c4ce, i32* %stack_var_-144, align 4
  %v1_c615 = call i32 @unknown_1b0ac(i32 %v2_c4ce)
  %v1_c61a = inttoptr i32 %v1_c615 to i32*
  %v2_c61a = load i32, i32* %v1_c61a, align 4
  %v0_c61c = load i32, i32* @ebx, align 4
  store i32 %v3_c4e6, i32* %stack_var_-140, align 4
  store i32 %v2_c61a, i32* %stack_var_-144, align 4
  %v5_c62e = call i32 @unknown_1b04f(i32 %v2_c61a, i32 %v3_c4e6, i32 %v3_c60c, i32 %v0_c61c)
  %v3_c636 = load i32, i32* %v2_c48c, align 4
  %v3_c63c = mul i32 %v2_c4db, 52
  %v2_c63f = add i32 %v3_c636, %v3_c63c
  store i32 %v2_c63f, i32* %v2_c48c, align 4
  store i32 %v2_c4ce, i32* %stack_var_-144, align 4
  %v1_c64d = call i32 @unknown_1b0ac(i32 %v2_c4ce)
  %v1_c652 = inttoptr i32 %v1_c64d to i32*
  %v2_c652 = load i32, i32* %v1_c652, align 4
  store i32 %v3_c4e6, i32* %stack_var_-140, align 4
  store i32 %v2_c652, i32* %stack_var_-144, align 4
  %v3_c665 = call i32 @unknown_1b13f(i32 %v2_c652, i32 %v3_c4e6, i32 %v2_c4ae)
  br label %dec_label_pc_c66a

dec_label_pc_c66a:                                ; preds = %dec_label_pc_c5af, %dec_label_pc_c4f8
  %stack_var_-132.0.in = phi i32 [ %v0_c61c, %dec_label_pc_c5af ], [ %v1_c5b5, %dec_label_pc_c4f8 ]
  store i32 %v2_c4ae, i32* %stack_var_-144, align 4
  %v1_c670 = call i32 @function_10386(i32 %v2_c4ae)
  store i32 %v1_c670, i32* @eax, align 4
  %v0_c675 = load i32, i32* %stack_var_-144, align 4
  %v1_c675 = load i32, i32* %stack_var_-140, align 4
  %v5_c675 = call i32 @function_c8bb(i32 %v0_c675, i32 %v1_c675, i32 %v2_c4ae, i32 %stack_var_-132.0.in)
  ret i32 %v5_c675

dec_label_pc_c67a:                                ; preds = %dec_label_pc_c481
  store i32 %tmp145, i32* %stack_var_-140, align 4
  %v4_c68f = call i32 @unknown_1b1fa(i32 %tmp145, i32 %arg3, i32 ptrtoint ([23 x i8]* @global_var_1e4c.921 to i32))
  %v2_c697 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_c697, i32* %stack_var_-140, align 4
  %v2_c6a4 = call i32 @unknown_1b2cc(i32 %v2_c697, i32 %tmp145)
  store i32 %v2_c697, i32* %stack_var_-140, align 4
  %v2_c6b3 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_c6b3, i32* %stack_var_-144, align 4
  %v2_c6b9 = call i32 @unknown_1afef(i32 %v2_c6b3, i32 %v2_c697)
  store i32 %v4_c68f, i32* %stack_var_-140, align 4
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v2_c6ce = call i32 @unknown_1b314(i32 %tmp145, i32 %v4_c68f)
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v1_c6e2 = call i32 @unknown_154f4(i32 %tmp145)
  %v3_c6ea = mul i32 %v2_c6b9, 52
  %v5_c6ed = add i32 %v2_c6ce, %v3_c6ea
  store i32 %arg3, i32* %stack_var_-140, align 4
  store i32 %v5_c6ed, i32* %stack_var_-144, align 4
  %v5_c705 = call i32 @unknown_1b1a5(i32 %v5_c6ed, i32 %arg3, i32 %arg4, i32 %v1_c6e2)
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v1_c717 = call i32 @unknown_154f4(i32 %tmp145)
  store i32 %v2_c6b3, i32* %stack_var_-144, align 4
  %v1_c724 = call i32 @unknown_1b0ac(i32 %v2_c6b3)
  %v1_c729 = inttoptr i32 %v1_c724 to i32*
  %v2_c729 = load i32, i32* %v1_c729, align 4
  %v2_c72e = load i32, i32* %arg1, align 4
  store i32 %v2_c729, i32* %stack_var_-140, align 4
  store i32 %v2_c72e, i32* %stack_var_-144, align 4
  %v5_c742 = call i32 @unknown_1b04f(i32 %v2_c72e, i32 %v2_c729, i32 %v2_c6ce, i32 %v1_c717)
  %v3_c74d = mul i32 %arg3, 52
  %v5_c750 = add i32 %v5_c742, %v3_c74d
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v1_c759 = call i32 @unknown_154f4(i32 %tmp145)
  %v3_c763 = load i32, i32* %v2_c48c, align 4
  store i32 %v2_c6b3, i32* %stack_var_-144, align 4
  %v1_c76c = call i32 @unknown_1b0ac(i32 %v2_c6b3)
  %v1_c771 = inttoptr i32 %v1_c76c to i32*
  %v2_c771 = load i32, i32* %v1_c771, align 4
  store i32 %v3_c763, i32* %stack_var_-140, align 4
  store i32 %v2_c771, i32* %stack_var_-144, align 4
  %v5_c785 = call i32 @unknown_1b04f(i32 %v2_c771, i32 %v3_c763, i32 %v5_c750, i32 %v1_c759)
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v1_c793 = call i32 @unknown_154f4(i32 %tmp145)
  %v3_c79b = load i32, i32* %v2_c48c, align 4
  %v2_c7a1 = load i32, i32* %arg1, align 4
  store i32 %v3_c79b, i32* %stack_var_-140, align 4
  store i32 %v2_c7a1, i32* %stack_var_-144, align 4
  %v3_c7ae = call i32 @unknown_15521(i32 %v2_c7a1, i32 %v3_c79b, i32 %v1_c793)
  %v3_c7b6 = load i32, i32* %v2_c484, align 4
  %v2_c7be = load i32, i32* %arg1, align 4
  %v2_c7c2 = sub i32 %v3_c7b6, %v2_c7be
  %v2_c7c6 = sdiv i32 %v2_c7c2, 4
  %v3_c7c9 = mul i32 %v2_c7c6, -991146299
  store i32 %v2_c7be, i32* %stack_var_-140, align 4
  store i32 %tmp145, i32* %stack_var_-144, align 4
  %v3_c7e4 = call i32 @unknown_17f8c(i32 %tmp145, i32 %v2_c7be, i32 %v3_c7c9)
  store i32 %v2_c6ce, i32* %arg1, align 4
  store i32 %v5_c785, i32* %v2_c48c, align 4
  %v3_c7fd = mul i32 %v4_c68f, 52
  %v5_c802 = add i32 %v2_c6ce, %v3_c7fd
  store i32 %tmp145, i32* @eax, align 4
  store i32 %v5_c802, i32* %v2_c484, align 4
  %v0_c80b = load i32, i32* %stack_var_-144, align 4
  %v1_c80b = load i32, i32* %stack_var_-140, align 4
  %v5_c80b = call i32 @function_c8bb(i32 %v0_c80b, i32 %v1_c80b, i32 %v3_c7c9, i32 %v1_c759)
  ret i32 %v5_c80b

; uselistorder directives
  uselistorder i32 %v3_c7c9, { 1, 0 }
  uselistorder i32 %v2_c7be, { 1, 0, 2 }
  uselistorder i32 %v3_c79b, { 1, 0 }
  uselistorder i32 %v2_c771, { 1, 0 }
  uselistorder i32 %v3_c763, { 1, 0 }
  uselistorder i32 %v1_c759, { 1, 0 }
  uselistorder i32 %v2_c72e, { 1, 0 }
  uselistorder i32 %v2_c729, { 1, 0 }
  uselistorder i32 %v5_c6ed, { 1, 0 }
  uselistorder i32 %v2_c6ce, { 0, 2, 3, 1 }
  uselistorder i32 %v2_c6b3, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v2_c697, { 1, 0, 3, 2 }
  uselistorder i32 %v2_c652, { 1, 0 }
  uselistorder i32 %v2_c61a, { 1, 0 }
  uselistorder i32 %v3_c5c5, { 1, 0 }
  uselistorder i32 %v2_c5c0, { 2, 1, 0 }
  uselistorder i32 %v2_c595, { 1, 0 }
  uselistorder i32 %v5_c551, { 1, 0 }
  uselistorder i32 %v2_c51d, { 1, 0 }
  uselistorder i32 %v3_c518, { 0, 2, 1, 3 }
  uselistorder i32 %v3_c50c, { 2, 1, 0 }
  uselistorder i32 %v1_c5b5, { 2, 0, 1 }
  uselistorder i32 %v3_c4e6, { 3, 2, 5, 4, 0, 1 }
  uselistorder i32 %v2_c4db, { 1, 2, 0 }
  uselistorder i32 %v2_c4ce, { 7, 6, 9, 8, 1, 0, 3, 2, 5, 4, 11, 10 }
  uselistorder i32 %v2_c4b9, { 1, 0, 3, 2 }
  uselistorder i32 %v2_c4ae, { 0, 3, 2, 4, 5, 1, 7, 6, 8 }
  uselistorder i32* %v2_c48c, { 11, 12, 13, 4, 5, 6, 7, 8, 9, 0, 1, 3, 2, 10, 14 }
  uselistorder i32* %stack_var_-140, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %tmp145, { 5, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 18, 20, 19, 1, 0, 3, 2, 4, 21, 22, 23 }
  uselistorder i32* %stack_var_-144, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 22, 29 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_1b1a5, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_1b13f, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1b0ac, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_1b04f, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1afef, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_c8bb, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9 }
}

define i32 @function_c811() local_unnamed_addr {
dec_label_pc_c811:
  %eax.global-to-local = alloca i32, align 4
  %v0_c811 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c811
}

define i32 @function_c828() local_unnamed_addr {
dec_label_pc_c828:
  %eax.global-to-local = alloca i32, align 4
  %v0_c828 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c828
}

define i32 @function_c858(i16 %arg1) local_unnamed_addr {
dec_label_pc_c858:
  %eax.global-to-local = alloca i32, align 4
  %v6_c858 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_c858
}

define i32 @function_c868(i32 %arg1) local_unnamed_addr {
dec_label_pc_c868:
  %v0_c868 = load i32, i32* @ebp, align 4
  %v0_c86e = load i32, i32* @ecx, align 4
  store i32 %v0_c86e, i32* inttoptr (i32 136594573 to i32*), align 4
  %v0_c872 = load i32, i32* @edx, align 4
  %v1_c872 = load i32, i32* @esp, align 4
  %v2_c872 = inttoptr i32 %v1_c872 to i32*
  store i32 %v0_c872, i32* %v2_c872, align 4
  %v3_c875 = call i32 @unknown_15521(i32 %v0_c868, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_c87a = call i32 @function_c89d()
  ret i32 %v0_c87a
}

define i32 @function_c87c() local_unnamed_addr {
dec_label_pc_c87c:
  %ebp.global-to-local = alloca i32, align 4
  %v0_c87c = load i32, i32* %ebp.global-to-local, align 4
  %v1_c87c = add i32 %v0_c87c, -108
  %v2_c87c = inttoptr i32 %v1_c87c to i32*
  %v3_c87c = load i32, i32* %v2_c87c, align 4
  %v1_c882 = call i32 @unknown_154f4(i32 %v3_c87c)
  %v1_c88b = add i32 %v0_c87c, -88
  %v2_c88b = inttoptr i32 %v1_c88b to i32*
  %v3_c88b = load i32, i32* %v2_c88b, align 4
  %v1_c892 = add i32 %v0_c87c, -68
  %v2_c892 = inttoptr i32 %v1_c892 to i32*
  %v3_c892 = load i32, i32* %v2_c892, align 4
  %v3_c898 = call i32 @unknown_15521(i32 %v3_c892, i32 %v3_c88b, i32 %v1_c882)
  ret i32 %v3_c898

; uselistorder directives
  uselistorder i32 %v0_c87c, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_15521, { 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_154f4, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_c89d() local_unnamed_addr {
dec_label_pc_c89d:
  %v0_c89d = load i32, i32* @ebp, align 4
  %v1_c89d = add i32 %v0_c89d, -108
  %v2_c89d = inttoptr i32 %v1_c89d to i32*
  %v3_c89d = load i32, i32* %v2_c89d, align 4
  %v1_c8a0 = add i32 %v0_c89d, -76
  %v2_c8a0 = inttoptr i32 %v1_c8a0 to i32*
  %v3_c8a0 = load i32, i32* %v2_c8a0, align 4
  %v1_c8a7 = add i32 %v0_c89d, -68
  %v2_c8a7 = inttoptr i32 %v1_c8a7 to i32*
  %v3_c8a7 = load i32, i32* %v2_c8a7, align 4
  %v3_c8b1 = call i32 @unknown_17f8c(i32 %v3_c89d, i32 %v3_c8a7, i32 %v3_c8a0)
  ret i32 %v3_c8b1

; uselistorder directives
  uselistorder i32 -68, { 9, 0, 2, 3, 4, 11, 14, 12, 10, 13, 7, 5, 6, 8, 1, 19, 20, 15, 16, 17, 18, 21 }
  uselistorder i32 -108, { 1, 0, 2 }
}

define i32 @function_c8bb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c8bb:
  %v0_c8bb = load i32, i32* @ebp, align 4
  %v1_c8bb = add i32 %v0_c8bb, -12
  %v2_c8bb = inttoptr i32 %v1_c8bb to i32*
  %v3_c8bb = load i32, i32* %v2_c8bb, align 4
  %v1_c8be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_c8be = icmp eq i32 %v1_c8be, %v3_c8bb
  br i1 %v3_c8be, label %bb, label %dec_label_pc_c8bb.dec_label_pc_c8c7_crit_edge

dec_label_pc_c8bb.dec_label_pc_c8c7_crit_edge:    ; preds = %dec_label_pc_c8bb
  %v2_c8c5.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_c8c7

bb:                                               ; preds = %dec_label_pc_c8bb
  %v1_c8c5 = call i32 @function_c8cc()
  br label %dec_label_pc_c8c7

dec_label_pc_c8c7:                                ; preds = %dec_label_pc_c8bb.dec_label_pc_c8c7_crit_edge, %bb
  %v2_c8c5 = phi i32 [ %v2_c8c5.pre, %dec_label_pc_c8bb.dec_label_pc_c8c7_crit_edge ], [ %v1_c8c5, %bb ]
  ret i32 %v2_c8c5

; uselistorder directives
  uselistorder label %dec_label_pc_c8c7, { 1, 0 }
}

define i32 @function_c8cc() local_unnamed_addr {
dec_label_pc_c8cc:
  %v0_c8cc = load i32, i32* @ebp, align 4
  %v1_c8d1 = inttoptr i32 %v0_c8cc to i32*
  %v2_c8d1 = load i32, i32* %v1_c8d1, align 4
  store i32 %v2_c8d1, i32* @ebp, align 4
  %v0_c8d2 = load i32, i32* @eax, align 4
  ret i32 %v0_c8d2
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c8d4:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-100, align 4
  %v10_c900 = icmp eq i32 %arg3, 0
  br i1 %v10_c900, label %bb, label %dec_label_pc_c90a

bb:                                               ; preds = %dec_label_pc_c8d4
  %v5_c904 = call i32 @function_cd96(i32 %arg4, i32 0, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_c90a

dec_label_pc_c90a:                                ; preds = %bb, %dec_label_pc_c8d4
  %v1_c90d = add i32 %arg1, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_c90d = inttoptr i32 %v1_c90d to i32*
  %v3_c90d = load i32, i32* %v2_c90d, align 4
  %v1_c915 = add i32 %arg1, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_c915 = inttoptr i32 %v1_c915 to i32*
  %v3_c915 = load i32, i32* %v2_c915, align 4
  %v2_c91a = sub i32 %v3_c90d, %v3_c915
  %v2_c91e = sdiv i32 %v2_c91a, 4
  %v3_c921 = mul i32 %v2_c91e, -858993459
  %v10_c927 = icmp ult i32 %v3_c921, %arg3
  br i1 %v10_c927, label %bb117, label %dec_label_pc_c930

bb117:                                            ; preds = %dec_label_pc_c90a
  %v1_c92a = call i32 @function_cb2e()
  br label %dec_label_pc_c930

dec_label_pc_c930:                                ; preds = %bb117, %dec_label_pc_c90a
  %v2_c937 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_c937, i32* @eax, align 4
  %v2_c93d = call i32 @function_10278(i32 %v2_c937, i32 %arg4)
  %v2_c942 = ptrtoint i32* %stack_var_-64 to i32
  %v2_c94f = call i32 @unknown_15ed6(i32 %v2_c942, i32 %arg1)
  %v2_c957 = ptrtoint i32* %stack_var_-100 to i32
  %v2_c964 = call i32 @unknown_1b7f3(i32 %v2_c942, i32 %v2_c957)
  %v3_c96f = load i32, i32* %v2_c915, align 4
  %tmp120 = icmp ugt i32 %v2_c964, %arg3
  %v1_ca5d = call i32 @unknown_15ae8(i32 %arg1)
  br i1 %tmp120, label %dec_label_pc_c981, label %dec_label_pc_ca57

dec_label_pc_c981:                                ; preds = %dec_label_pc_c930
  %v3_c991 = load i32, i32* %v2_c915, align 4
  %v2_c9aa = mul i32 %arg3, 20
  %v2_c9af = sub i32 %v3_c991, %v2_c9aa
  %v4_c9c0 = call i32 @unknown_1b853(i32 %v2_c9af, i32 %v3_c991, i32 %v3_c991, i32 %v1_ca5d)
  %v3_c9c8 = load i32, i32* %v2_c915, align 4
  %v3_c9d8 = add i32 %v3_c9c8, %v2_c9aa
  store i32 %v3_c9d8, i32* %v2_c915, align 4
  %v5_c9f2 = sub i32 %v3_c96f, %v2_c9aa
  %v1_c9fb = call i32 @unknown_1b8b0(i32 %v2_c957)
  %v1_ca00 = inttoptr i32 %v1_c9fb to i32*
  %v2_ca00 = load i32, i32* %v1_ca00, align 4
  %v3_ca10 = call i32 @unknown_1b8dd(i32 %v2_ca00, i32 %v5_c9f2, i32 %v3_c96f)
  %v1_ca1b = call i32 @unknown_1b8b0(i32 %v2_c957)
  %v1_ca20 = inttoptr i32 %v1_ca1b to i32*
  %v2_ca20 = load i32, i32* %v1_ca20, align 4
  store i32 %v2_ca20, i32* @ecx, align 4
  %v3_ca2f = add i32 %v2_ca20, %v2_c9aa
  %v1_ca38 = call i32 @unknown_1b8b0(i32 %v2_c957)
  %v1_ca3d = inttoptr i32 %v1_ca38 to i32*
  %v2_ca3d = load i32, i32* %v1_ca3d, align 4
  %v3_ca4d = call i32 @unknown_1b943(i32 %v2_ca3d, i32 %v3_ca2f, i32 %v2_c937)
  %v0_ca52 = call i32 @function_cb1e()
  ret i32 %v0_ca52

dec_label_pc_ca57:                                ; preds = %dec_label_pc_c930
  ret i32 %v1_ca5d

; uselistorder directives
  uselistorder i32 %v2_c9aa, { 0, 3, 1, 2 }
  uselistorder i32 %v3_c991, { 2, 1, 0 }
  uselistorder i32 %v1_ca5d, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
}

define i32 @function_ca64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ca64:
  %v0_ca64 = load i32, i32* @ebx, align 4
  %v1_ca64 = add i32 %v0_ca64, -785802163
  %v2_ca64 = inttoptr i32 %v1_ca64 to i8*
  %v3_ca64 = load i8, i8* %v2_ca64, align 1
  %v4_ca64 = udiv i8 %v3_ca64, 2
  %v5_ca64 = shl i8 %v3_ca64, ptrtoint (i8* @global_var_7.922 to i8)
  %v6_ca64 = or i8 %v4_ca64, %v5_ca64
  store i8 %v6_ca64, i8* %v2_ca64, align 1
  %v0_ca6a = load i32, i32* @ebp, align 4
  %v1_ca6a = add i32 %v0_ca6a, -92
  %v2_ca6a = inttoptr i32 %v1_ca6a to i32*
  %v3_ca6a = load i32, i32* %v2_ca6a, align 4
  %v1_ca6d = add i32 %v3_ca6a, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_ca6d = inttoptr i32 %v1_ca6d to i32*
  %v3_ca6d = load i32, i32* %v2_ca6d, align 4
  %v0_ca70 = load i32, i32* @eax, align 4
  %v1_ca74 = add i32 %v0_ca6a, -80
  %v0_ca7b = load i32, i32* @ecx, align 4
  %v4_ca82 = call i32 @unknown_187d6(i32 %v3_ca6d, i32 %v0_ca7b, i32 %v1_ca74, i32 %v0_ca70)
  %v0_ca87 = load i32, i32* @ebp, align 4
  %v1_ca87 = add i32 %v0_ca87, -92
  %v2_ca87 = inttoptr i32 %v1_ca87 to i32*
  %v3_ca87 = load i32, i32* %v2_ca87, align 4
  %v1_ca8a = add i32 %v3_ca87, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_ca8a = inttoptr i32 %v1_ca8a to i32*
  %v3_ca8a = load i32, i32* %v2_ca8a, align 4
  store i32 %v3_ca8a, i32* @ecx, align 4
  %v1_ca8d = add i32 %v0_ca87, -48
  %v2_ca8d = inttoptr i32 %v1_ca8d to i32*
  %v3_ca8d = load i32, i32* %v2_ca8d, align 4
  %v1_ca90 = add i32 %v0_ca87, -100
  %v2_ca90 = inttoptr i32 %v1_ca90 to i32*
  %v3_ca90 = load i32, i32* %v2_ca90, align 4
  %v2_ca93 = sub i32 %v3_ca90, %v3_ca8d
  %v2_ca9c = mul i32 %v2_ca93, 20
  %v3_ca9f = add i32 %v2_ca9c, %v3_ca8a
  %v3_caa2 = load i32, i32* %v2_ca87, align 4
  %v2_caa5 = add i32 %v3_caa2, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_caa5 = inttoptr i32 %v2_caa5 to i32*
  store i32 %v3_ca9f, i32* %v3_caa5, align 4
  %v0_caa8 = load i32, i32* @ebp, align 4
  %v1_caa8 = add i32 %v0_caa8, -92
  %v2_caa8 = inttoptr i32 %v1_caa8 to i32*
  %v3_caa8 = load i32, i32* %v2_caa8, align 4
  %v1_caae = call i32 @unknown_15ae8(i32 %v3_caa8)
  ret i32 %v1_caae

; uselistorder directives
  uselistorder i32 %v0_ca87, { 1, 0, 2 }
  uselistorder i8 %v3_ca64, { 1, 0 }
  uselistorder i8 -95, { 1, 0 }
}

define i32 @function_cab4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cab4:
  %v0_cab4 = load i32, i32* @eax, align 4
  ret i32 %v0_cab4
}

define i32 @function_caba() local_unnamed_addr {
dec_label_pc_caba:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_caba = load i32, i32* %eax.global-to-local, align 4
  %v2_caba = add i32 %v0_caba, zext (i8 ptrtoint (i8* @global_var_8d.914 to i8) to i32)
  %v16_caba = and i32 %v2_caba, 255
  %v18_caba = and i32 %v0_caba, -256
  %v19_caba = or i32 %v16_caba, %v18_caba
  store i32 %v19_caba, i32* %eax.global-to-local, align 4
  %v0_cabc = load i32, i32* %ebp.global-to-local, align 4
  %v1_cabc = add i32 %v0_cabc, 1
  store i32 %v1_cabc, i32* %ebp.global-to-local, align 4
  %v0_cabd = load i8, i8* inttoptr (i32 -400292727 to i8*), align 1
  %v1_cabd = zext i8 %v0_cabd to i32
  %v4_cabd = or i32 %v1_cabd, %v18_caba
  store i32 %v4_cabd, i32* @eax, align 4
  %v0_cac2 = call i32 @function_8b0000ed()
  store i32 %v0_cac2, i32* %eax.global-to-local, align 4
  ret i32 %v0_cac2

; uselistorder directives
  uselistorder i32 %v0_caba, { 1, 0 }
}

define i32 @function_cb1e() local_unnamed_addr {
dec_label_pc_cb1e:
  %v0_cb1e = load i32, i32* @ebp, align 4
  %v1_cb1e = add i32 %v0_cb1e, -80
  store i32 %v1_cb1e, i32* @eax, align 4
  %v1_cb24 = call i32 @function_10240(i32 %v1_cb1e)
  %v4_cb29 = call i32 @function_cd96(i32 %v1_cb1e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v4_cb29
}

define i32 @function_cb2e() local_unnamed_addr {
dec_label_pc_cb2e:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_cb36 = load i32, i32* @ebp, align 4
  %v1_cb36 = add i32 %v0_cb36, -100
  %v2_cb36 = inttoptr i32 %v1_cb36 to i32*
  %v3_cb36 = load i32, i32* %v2_cb36, align 4
  %v1_cb3d = add i32 %v0_cb36, -92
  %v2_cb3d = inttoptr i32 %v1_cb3d to i32*
  %v3_cb3d = load i32, i32* %v2_cb3d, align 4
  %v4_cb43 = call i32 @unknown_1b9aa(i32 %v3_cb3d, i32 %v3_cb36, i32 ptrtoint ([23 x i8]* @global_var_1e4c.921 to i32))
  %v1_cb48 = load i32, i32* @ebp, align 4
  %v2_cb48 = add i32 %v1_cb48, -40
  %v3_cb48 = inttoptr i32 %v2_cb48 to i32*
  store i32 %v4_cb43, i32* %v3_cb48, align 4
  %v0_cb4b = load i32, i32* @ebp, align 4
  %v1_cb4b = add i32 %v0_cb4b, -56
  %v1_cb4e = add i32 %v0_cb4b, -92
  %v2_cb4e = inttoptr i32 %v1_cb4e to i32*
  %v3_cb4e = load i32, i32* %v2_cb4e, align 4
  %v2_cb58 = call i32 @unknown_1ba7c(i32 %v1_cb4b, i32 %v3_cb4e)
  %v0_cb60 = load i32, i32* @ebp, align 4
  %v1_cb60 = add i32 %v0_cb60, -56
  %v1_cb67 = add i32 %v0_cb60, -96
  store i32 %v1_cb67, i32* %stack_var_-4, align 4
  %v2_cb6d = call i32 @unknown_1b7f3(i32 %v1_cb67, i32 %v1_cb60)
  %v1_cb72 = load i32, i32* @ebp, align 4
  %v2_cb72 = add i32 %v1_cb72, -36
  %v3_cb72 = inttoptr i32 %v2_cb72 to i32*
  store i32 %v2_cb6d, i32* %v3_cb72, align 4
  %v0_cb75 = load i32, i32* @ebp, align 4
  %v1_cb75 = add i32 %v0_cb75, -92
  %v2_cb75 = inttoptr i32 %v1_cb75 to i32*
  %v3_cb75 = load i32, i32* %v2_cb75, align 4
  %v1_cb78 = add i32 %v0_cb75, -40
  %v2_cb78 = inttoptr i32 %v1_cb78 to i32*
  %v3_cb78 = load i32, i32* %v2_cb78, align 4
  store i32 %v3_cb75, i32* %stack_var_-4, align 4
  %v2_cb82 = call i32 @unknown_18730(i32 %v3_cb75, i32 %v3_cb78)
  %v1_cb87 = load i32, i32* @ebp, align 4
  %v2_cb87 = add i32 %v1_cb87, -32
  %v3_cb87 = inttoptr i32 %v2_cb87 to i32*
  store i32 %v2_cb82, i32* %v3_cb87, align 4
  %v0_cb8a = load i32, i32* @ebp, align 4
  %v1_cb8a = add i32 %v0_cb8a, -32
  %v2_cb8a = inttoptr i32 %v1_cb8a to i32*
  %v3_cb8a = load i32, i32* %v2_cb8a, align 4
  %v2_cb8d = add i32 %v0_cb8a, -52
  %v3_cb8d = inttoptr i32 %v2_cb8d to i32*
  store i32 %v3_cb8a, i32* %v3_cb8d, align 4
  %v0_cb90 = load i32, i32* @ebp, align 4
  %v1_cb90 = add i32 %v0_cb90, -92
  %v2_cb90 = inttoptr i32 %v1_cb90 to i32*
  %v3_cb90 = load i32, i32* %v2_cb90, align 4
  store i32 %v3_cb90, i32* %stack_var_-4, align 4
  %v1_cb96 = call i32 @unknown_15ae8(i32 %v3_cb90)
  %v0_cb9d = load i32, i32* @ebp, align 4
  %v1_cb9d = add i32 %v0_cb9d, -36
  %v2_cb9d = inttoptr i32 %v1_cb9d to i32*
  %v3_cb9d = load i32, i32* %v2_cb9d, align 4
  %v2_cba7 = mul i32 %v3_cb9d, 20
  %v2_cbaa = add i32 %v0_cb9d, -32
  %v3_cbaa = inttoptr i32 %v2_cbaa to i32*
  %v4_cbaa = load i32, i32* %v3_cbaa, align 4
  %v5_cbaa = add i32 %v4_cbaa, %v2_cba7
  %v1_cbb1 = add i32 %v0_cb9d, -104
  %v2_cbb1 = inttoptr i32 %v1_cbb1 to i32*
  %v3_cbb1 = load i32, i32* %v2_cbb1, align 4
  %v1_cbb8 = add i32 %v0_cb9d, -100
  %v2_cbb8 = inttoptr i32 %v1_cbb8 to i32*
  %v3_cbb8 = load i32, i32* %v2_cbb8, align 4
  store i32 %v5_cbaa, i32* %stack_var_-4, align 4
  %v5_cbc2 = call i32 @unknown_187d6(i32 %v5_cbaa, i32 %v3_cbb8, i32 %v3_cbb1, i32 %v1_cb96)
  %v0_cbc7 = load i32, i32* @ebp, align 4
  %v1_cbc7 = add i32 %v0_cbc7, -52
  %v2_cbc7 = inttoptr i32 %v1_cbc7 to i32*
  store i32 0, i32* %v2_cbc7, align 4
  %v0_cbce = load i32, i32* @ebp, align 4
  %v1_cbce = add i32 %v0_cbce, -92
  %v2_cbce = inttoptr i32 %v1_cbce to i32*
  %v3_cbce = load i32, i32* %v2_cbce, align 4
  store i32 %v3_cbce, i32* %stack_var_-4, align 4
  %v1_cbd4 = call i32 @unknown_15ae8(i32 %v3_cbce)
  store i32 %v1_cbd4, i32* %ebx.global-to-local, align 4
  %v0_cbdb = load i32, i32* @ebp, align 4
  %v1_cbdb = add i32 %v0_cbdb, -96
  store i32 %v1_cbdb, i32* %stack_var_-4, align 4
  %v1_cbe1 = call i32 @unknown_1b8b0(i32 %v1_cbdb)
  %v1_cbe6 = inttoptr i32 %v1_cbe1 to i32*
  %v2_cbe6 = load i32, i32* %v1_cbe6, align 4
  %v0_cbe8 = load i32, i32* @ebp, align 4
  %v1_cbe8 = add i32 %v0_cbe8, -92
  %v2_cbe8 = inttoptr i32 %v1_cbe8 to i32*
  %v3_cbe8 = load i32, i32* %v2_cbe8, align 4
  %v1_cbeb = inttoptr i32 %v3_cbe8 to i32*
  %v2_cbeb = load i32, i32* %v1_cbeb, align 4
  %v0_cbed = load i32, i32* %ebx.global-to-local, align 4
  %v1_cbf1 = add i32 %v0_cbe8, -32
  %v2_cbf1 = inttoptr i32 %v1_cbf1 to i32*
  %v3_cbf1 = load i32, i32* %v2_cbf1, align 4
  store i32 %v2_cbeb, i32* %stack_var_-4, align 4
  %v5_cbff = call i32 @unknown_1b853(i32 %v2_cbeb, i32 %v2_cbe6, i32 %v3_cbf1, i32 %v0_cbed)
  %v1_cc04 = load i32, i32* @ebp, align 4
  %v2_cc04 = add i32 %v1_cc04, -52
  %v3_cc04 = inttoptr i32 %v2_cc04 to i32*
  store i32 %v5_cbff, i32* %v3_cc04, align 4
  %v0_cc07 = load i32, i32* @ebp, align 4
  %v1_cc07 = add i32 %v0_cc07, -100
  %v2_cc07 = inttoptr i32 %v1_cc07 to i32*
  %v3_cc07 = load i32, i32* %v2_cc07, align 4
  %v2_cc11 = mul i32 %v3_cc07, 20
  %v1_cc14 = add i32 %v0_cc07, -52
  %v2_cc14 = inttoptr i32 %v1_cc14 to i32*
  %v3_cc14 = load i32, i32* %v2_cc14, align 4
  %v5_cc14 = add i32 %v3_cc14, %v2_cc11
  store i32 %v5_cc14, i32* %v2_cc14, align 4
  %v0_cc17 = load i32, i32* @ebp, align 4
  %v1_cc17 = add i32 %v0_cc17, -92
  %v2_cc17 = inttoptr i32 %v1_cc17 to i32*
  %v3_cc17 = load i32, i32* %v2_cc17, align 4
  store i32 %v3_cc17, i32* %stack_var_-4, align 4
  %v1_cc1d = call i32 @unknown_15ae8(i32 %v3_cc17)
  store i32 %v1_cc1d, i32* %ebx.global-to-local, align 4
  %v0_cc24 = load i32, i32* @ebp, align 4
  %v1_cc24 = add i32 %v0_cc24, -92
  %v2_cc24 = inttoptr i32 %v1_cc24 to i32*
  %v3_cc24 = load i32, i32* %v2_cc24, align 4
  %v1_cc27 = add i32 %v3_cc24, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_cc27 = inttoptr i32 %v1_cc27 to i32*
  %v3_cc27 = load i32, i32* %v2_cc27, align 4
  store i32 %v3_cc27, i32* %esi.global-to-local, align 4
  %v1_cc2a = add i32 %v0_cc24, -96
  store i32 %v1_cc2a, i32* %stack_var_-4, align 4
  %v1_cc30 = call i32 @unknown_1b8b0(i32 %v1_cc2a)
  %v1_cc35 = inttoptr i32 %v1_cc30 to i32*
  %v2_cc35 = load i32, i32* %v1_cc35, align 4
  %v0_cc37 = load i32, i32* %ebx.global-to-local, align 4
  %v0_cc3b = load i32, i32* @ebp, align 4
  %v1_cc3b = add i32 %v0_cc3b, -52
  %v2_cc3b = inttoptr i32 %v1_cc3b to i32*
  %v3_cc3b = load i32, i32* %v2_cc3b, align 4
  %v0_cc42 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_cc35, i32* %stack_var_-4, align 4
  %v5_cc49 = call i32 @unknown_1b853(i32 %v2_cc35, i32 %v0_cc42, i32 %v3_cc3b, i32 %v0_cc37)
  %v1_cc4e = load i32, i32* @ebp, align 4
  %v2_cc4e = add i32 %v1_cc4e, -52
  %v3_cc4e = inttoptr i32 %v2_cc4e to i32*
  store i32 %v5_cc49, i32* %v3_cc4e, align 4
  %v0_cc51 = load i32, i32* @ebp, align 4
  %v1_cc51 = add i32 %v0_cc51, -92
  %v2_cc51 = inttoptr i32 %v1_cc51 to i32*
  %v3_cc51 = load i32, i32* %v2_cc51, align 4
  store i32 %v3_cc51, i32* %stack_var_-4, align 4
  %v1_cc57 = call i32 @unknown_15ae8(i32 %v3_cc51)
  %v0_cc5c = load i32, i32* @ebp, align 4
  %v1_cc5c = add i32 %v0_cc5c, -92
  %v2_cc5c = inttoptr i32 %v1_cc5c to i32*
  %v3_cc5c = load i32, i32* %v2_cc5c, align 4
  %v1_cc5f = add i32 %v3_cc5c, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_cc5f = inttoptr i32 %v1_cc5f to i32*
  %v3_cc5f = load i32, i32* %v2_cc5f, align 4
  %v1_cc65 = inttoptr i32 %v3_cc5c to i32*
  %v2_cc65 = load i32, i32* %v1_cc65, align 4
  store i32 %v2_cc65, i32* %stack_var_-4, align 4
  %v3_cc72 = call i32 @unknown_15b15(i32 %v2_cc65, i32 %v3_cc5f, i32 %v1_cc57)
  %v0_cc77 = load i32, i32* @ebp, align 4
  %v1_cc77 = add i32 %v0_cc77, -92
  %v2_cc77 = inttoptr i32 %v1_cc77 to i32*
  %v3_cc77 = load i32, i32* %v2_cc77, align 4
  %v1_cc7a = add i32 %v3_cc77, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_cc7a = inttoptr i32 %v1_cc7a to i32*
  %v3_cc7a = load i32, i32* %v2_cc7a, align 4
  %v1_cc82 = inttoptr i32 %v3_cc77 to i32*
  %v2_cc82 = load i32, i32* %v1_cc82, align 4
  %v2_cc86 = sub i32 %v3_cc7a, %v2_cc82
  %v2_cc8a = sdiv i32 %v2_cc86, 4
  %v3_cc8d = mul i32 %v2_cc8a, -858993459
  %v3_cc95 = load i32, i32* %v2_cc77, align 4
  %v1_cc98 = inttoptr i32 %v3_cc95 to i32*
  %v2_cc98 = load i32, i32* %v1_cc98, align 4
  store i32 %v3_cc95, i32* %stack_var_-4, align 4
  %v3_cca8 = call i32 @unknown_184fe(i32 %v3_cc95, i32 %v2_cc98, i32 %v3_cc8d)
  %v0_ccad = load i32, i32* @ebp, align 4
  %v1_ccad = add i32 %v0_ccad, -92
  %v2_ccad = inttoptr i32 %v1_ccad to i32*
  %v3_ccad = load i32, i32* %v2_ccad, align 4
  %v1_ccb0 = add i32 %v0_ccad, -32
  %v2_ccb0 = inttoptr i32 %v1_ccb0 to i32*
  %v3_ccb0 = load i32, i32* %v2_ccb0, align 4
  %v2_ccb3 = inttoptr i32 %v3_ccad to i32*
  store i32 %v3_ccb0, i32* %v2_ccb3, align 4
  %v0_ccb5 = load i32, i32* @ebp, align 4
  %v1_ccb5 = add i32 %v0_ccb5, -92
  %v2_ccb5 = inttoptr i32 %v1_ccb5 to i32*
  %v3_ccb5 = load i32, i32* %v2_ccb5, align 4
  %v1_ccb8 = add i32 %v0_ccb5, -52
  %v2_ccb8 = inttoptr i32 %v1_ccb8 to i32*
  %v3_ccb8 = load i32, i32* %v2_ccb8, align 4
  %v2_ccbb = add i32 %v3_ccb5, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_ccbb = inttoptr i32 %v2_ccbb to i32*
  store i32 %v3_ccb8, i32* %v3_ccbb, align 4
  %v0_ccbe = load i32, i32* @ebp, align 4
  %v1_ccbe = add i32 %v0_ccbe, -40
  %v2_ccbe = inttoptr i32 %v1_ccbe to i32*
  %v3_ccbe = load i32, i32* %v2_ccbe, align 4
  %v2_ccc8 = mul i32 %v3_ccbe, 20
  %v2_cccd = add i32 %v0_ccbe, -32
  %v3_cccd = inttoptr i32 %v2_cccd to i32*
  %v4_cccd = load i32, i32* %v3_cccd, align 4
  %v5_cccd = add i32 %v4_cccd, %v2_ccc8
  %v1_ccd0 = add i32 %v0_ccbe, -92
  %v2_ccd0 = inttoptr i32 %v1_ccd0 to i32*
  %v3_ccd0 = load i32, i32* %v2_ccd0, align 4
  %v2_ccd3 = add i32 %v3_ccd0, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_ccd3 = inttoptr i32 %v2_ccd3 to i32*
  store i32 %v5_cccd, i32* %v3_ccd3, align 4
  %v0_ccd6 = load i32, i32* %stack_var_-4, align 4
  %v5_ccd6 = call i32 @function_cd96(i32 %v0_ccd6, i32 %v2_cc98, i32 %v3_cc8d, i32 %v0_cc37)
  ret i32 %v5_ccd6

; uselistorder directives
  uselistorder i32 %v2_cc98, { 1, 0 }
  uselistorder i32 %v3_cc95, { 1, 0, 2 }
  uselistorder i32 %v3_cc8d, { 1, 0 }
  uselistorder i32 %v2_cc35, { 1, 0 }
  uselistorder i32 %v2_cbeb, { 1, 0 }
  uselistorder i32 %v5_cbaa, { 1, 0 }
  uselistorder i32 %v0_cb9d, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_cd96, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_1b853, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_1b8b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_187d6, { 1, 0 }
  uselistorder i32 (i32)* @unknown_15ae8, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @unknown_1b7f3, { 1, 0 }
}

define i32 @function_ccdc() local_unnamed_addr {
dec_label_pc_ccdc:
  %eax.global-to-local = alloca i32, align 4
  %v0_ccdc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ccdc
}

define i32 @function_ccf3() local_unnamed_addr {
dec_label_pc_ccf3:
  %eax.global-to-local = alloca i32, align 4
  %v0_ccf3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ccf3
}

define i32 @function_ccf8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ccf8:
  %v0_ccf8 = load i32, i32* @ecx, align 4
  %v1_ccf8 = add i32 %v0_ccf8, 604277208
  %v2_ccf8 = inttoptr i32 %v1_ccf8 to i32*
  %v3_ccf8 = load i32, i32* %v2_ccf8, align 4
  %v4_ccf8 = add i32 %v3_ccf8, -1
  store i32 %v4_ccf8, i32* %v2_ccf8, align 4
  %v21_ccf8 = load i32, i32* @eax, align 4
  ret i32 %v21_ccf8
}

define i32 @function_cd1e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd1e:
  %v0_cd1e = load i32, i32* @ebp, align 4
  %v1_cd1e = add i32 %v0_cd1e, -100
  %v2_cd1e = inttoptr i32 %v1_cd1e to i32*
  %v3_cd1e = load i32, i32* %v2_cd1e, align 4
  %v1_cd21 = add i32 %v0_cd1e, -36
  %v2_cd21 = inttoptr i32 %v1_cd21 to i32*
  %v3_cd21 = load i32, i32* %v2_cd21, align 4
  %v2_cd24 = add i32 %v3_cd21, %v3_cd1e
  %v2_cd2d = mul i32 %v2_cd24, 20
  %v2_cd32 = add i32 %v0_cd1e, -32
  %v3_cd32 = inttoptr i32 %v2_cd32 to i32*
  %v4_cd32 = load i32, i32* %v3_cd32, align 4
  %v5_cd32 = add i32 %v4_cd32, %v2_cd2d
  %v3_cd35 = load i32, i32* %v2_cd21, align 4
  %v2_cd3f = mul i32 %v3_cd35, 20
  %v5_cd42 = add i32 %v4_cd32, %v2_cd3f
  %v0_cd45 = load i32, i32* @ecx, align 4
  %v3_cd50 = call i32 @unknown_15b15(i32 %v5_cd42, i32 %v5_cd32, i32 %v0_cd45)
  %v0_cd55 = call i32 @function_cd78()
  ret i32 %v0_cd55

; uselistorder directives
  uselistorder i32 -100, { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_cd48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd48:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cd78() local_unnamed_addr {
dec_label_pc_cd78:
  %v0_cd78 = load i32, i32* @ebp, align 4
  %v1_cd78 = add i32 %v0_cd78, -92
  %v2_cd78 = inttoptr i32 %v1_cd78 to i32*
  %v3_cd78 = load i32, i32* %v2_cd78, align 4
  %v1_cd7b = add i32 %v0_cd78, -40
  %v2_cd7b = inttoptr i32 %v1_cd7b to i32*
  %v3_cd7b = load i32, i32* %v2_cd7b, align 4
  %v1_cd82 = add i32 %v0_cd78, -32
  %v2_cd82 = inttoptr i32 %v1_cd82 to i32*
  %v3_cd82 = load i32, i32* %v2_cd82, align 4
  %v3_cd8c = call i32 @unknown_184fe(i32 %v3_cd78, i32 %v3_cd82, i32 %v3_cd7b)
  ret i32 %v3_cd8c

; uselistorder directives
  uselistorder i32 -92, { 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26 }
}

define i32 @function_cd96(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cd96:
  %v0_cd96 = load i32, i32* @ebp, align 4
  %v1_cd96 = add i32 %v0_cd96, -28
  %v2_cd96 = inttoptr i32 %v1_cd96 to i32*
  %v3_cd96 = load i32, i32* %v2_cd96, align 4
  %v1_cd99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_cd99 = xor i32 %v1_cd99, %v3_cd96
  %v3_cd99 = icmp eq i32 %v2_cd99, 0
  store i32 %v2_cd99, i32* @eax, align 4
  br i1 %v3_cd99, label %bb, label %dec_label_pc_cda2

bb:                                               ; preds = %dec_label_pc_cd96
  %v1_cda0 = call i32 @function_cda7()
  br label %dec_label_pc_cda2

dec_label_pc_cda2:                                ; preds = %bb, %dec_label_pc_cd96
  %v2_cda0 = phi i32 [ %v1_cda0, %bb ], [ %v2_cd99, %dec_label_pc_cd96 ]
  ret i32 %v2_cda0
}

define i32 @function_cda7() local_unnamed_addr {
dec_label_pc_cda7:
  %v0_cda7 = load i32, i32* @ebp, align 4
  %v1_cdad = inttoptr i32 %v0_cda7 to i32*
  %v2_cdad = load i32, i32* %v1_cdad, align 4
  store i32 %v2_cdad, i32* @ebp, align 4
  %v0_cdae = load i32, i32* @eax, align 4
  ret i32 %v0_cdae
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cdb0:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v1_cdd5 = call i32 @unknown_1bfa0(i32 %arg2)
  %v1_cde2 = call i32 @unknown_14056(i32 %arg2)
  %v3_cdf5 = call i32 @unknown_1bfce(i32 %tmp107, i32 %v1_cde2, i32 %v1_cdd5)
  %v1_ce00 = call i32 @unknown_15e58(i32 %tmp107)
  %v2_ce0a = load i32, i32* %arg1, align 4
  %v2_ce0c = ptrtoint i32* %stack_var_-20 to i32
  %v2_ce19 = call i32 @unknown_160f6(i32 %v2_ce0c, i32 %arg2)
  %v2_ce21 = ptrtoint i32* %stack_var_-24 to i32
  %v2_ce2e = call i32 @unknown_16146(i32 %v2_ce21, i32 %arg2)
  %v3_ce3e = load i32, i32* %stack_var_-20, align 4
  %v3_ce45 = load i32, i32* %stack_var_-24, align 4
  %v4_ce4b = call i32 @unknown_1c06b(i32 %v3_ce45, i32 %v3_ce3e, i32 %v2_ce0a, i32 %v1_ce00)
  %v2_ce55 = add i32 %tmp107, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_ce55 = inttoptr i32 %v2_ce55 to i32*
  store i32 %v4_ce4b, i32* %v3_ce55, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ce64

bb:                                               ; preds = %dec_label_pc_cdb0
  %v1_ce62 = call i32 @function_ce82()
  store i32 %v1_ce62, i32* @eax, align 4
  br label %dec_label_pc_ce64

dec_label_pc_ce64:                                ; preds = %bb, %dec_label_pc_cdb0
  %v0_ce64 = call i32 @function_ce7d()
  ret i32 %v0_ce64

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_ce67() local_unnamed_addr {
dec_label_pc_ce67:
  %eax.global-to-local = alloca i32, align 4
  %v0_ce67 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ce67
}

define i32 @function_ce7d() local_unnamed_addr {
dec_label_pc_ce7d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ce82() local_unnamed_addr {
dec_label_pc_ce82:
  %v0_ce88 = load i32, i32* @eax, align 4
  ret i32 %v0_ce88
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce8a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ceb0

bb:                                               ; preds = %dec_label_pc_ce8a
  %v2_ceae = call i32 @function_ceb5(i32 %arg1)
  br label %dec_label_pc_ceb0

dec_label_pc_ceb0:                                ; preds = %bb, %dec_label_pc_ce8a
  %v3_ceae = phi i32 [ %v2_ceae, %bb ], [ %arg1, %dec_label_pc_ce8a ]
  ret i32 %v3_ceae
}

define i32 @function_ceb5(i32 %arg1) local_unnamed_addr {
dec_label_pc_ceb5:
  %v0_ceb6 = load i32, i32* @eax, align 4
  ret i32 %v0_ceb6
}

define i32 @_ZSt13copy_backwardIP12CTransactionS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ceb7:
  %v1_cee1 = call i32 @unknown_1c1c7(i32 %arg2)
  %v1_ceee = call i32 @unknown_1c1c7(i32 %arg1)
  %v3_cf01 = call i32 @unknown_1c1fc(i32 %v1_ceee, i32 %v1_cee1, i32 %arg3)
  store i32 %v3_cf01, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_cf12

bb:                                               ; preds = %dec_label_pc_ceb7
  %v1_cf10 = call i32 @function_cf17()
  br label %dec_label_pc_cf12

dec_label_pc_cf12:                                ; preds = %bb, %dec_label_pc_ceb7
  %v2_cf10 = phi i32 [ %v1_cf10, %bb ], [ %v3_cf01, %dec_label_pc_ceb7 ]
  ret i32 %v2_cf10

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1c1c7, { 1, 0 }
}

define i32 @function_cf17() local_unnamed_addr {
dec_label_pc_cf17:
  %v0_cf1c = load i32, i32* @eax, align 4
  ret i32 %v0_cf1c
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_cf1e:
  %v2_cf38 = load i32, i32* %arg1, align 4
  ret i32 %v2_cf38
}

define i32 @function_cf42(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cf42:
  %zf.global-to-local = alloca i1, align 1
  %v2_cf42 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_cf42 = load i32, i32* @eax, align 4
  %v4_cf42 = trunc i32 %v3_cf42 to i8
  %v5_cf42 = add i8 %v4_cf42, %v2_cf42
  %v15_cf42 = icmp eq i8 %v5_cf42, 0
  store i1 %v15_cf42, i1* %zf.global-to-local, align 1
  %v21_cf42 = inttoptr i32 %v3_cf42 to i8*
  store i8 %v5_cf42, i8* %v21_cf42, align 1
  %v0_cf44 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_cf44, label %bb, label %dec_label_pc_cf42.dec_label_pc_cf46_crit_edge

dec_label_pc_cf42.dec_label_pc_cf46_crit_edge:    ; preds = %dec_label_pc_cf42
  %v2_cf44.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_cf46

bb:                                               ; preds = %dec_label_pc_cf42
  %v1_cf44 = call i32 @function_cf4b()
  br label %dec_label_pc_cf46

dec_label_pc_cf46:                                ; preds = %dec_label_pc_cf42.dec_label_pc_cf46_crit_edge, %bb
  %v2_cf44 = phi i32 [ %v2_cf44.pre, %dec_label_pc_cf42.dec_label_pc_cf46_crit_edge ], [ %v1_cf44, %bb ]
  ret i32 %v2_cf44

; uselistorder directives
  uselistorder label %dec_label_pc_cf46, { 1, 0 }
}

define i32 @function_cf4b() local_unnamed_addr {
dec_label_pc_cf4b:
  %v0_cf4c = load i32, i32* @eax, align 4
  ret i32 %v0_cf4c
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEaSERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cf4e:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v1_cf80 = call i32 @unknown_141f4(i32 %arg2)
  %v1_cf8e = call i32 @unknown_1c306(i32 %arg1)
  %v10_cf93 = icmp ult i32 %v1_cf8e, %v1_cf80
  %v5_cf99 = icmp eq i1 %v10_cf93, false
  br i1 %v5_cf99, label %bb, label %dec_label_pc_cfa1

bb:                                               ; preds = %dec_label_pc_cf4e
  %v1_cf9b = call i32 @function_d06a()
  br label %dec_label_pc_cfa1

dec_label_pc_cfa1:                                ; preds = %bb, %dec_label_pc_cf4e
  %v2_cfa1 = ptrtoint i32* %stack_var_-64 to i32
  %v2_cfae = call i32 @unknown_16294(i32 %v2_cfa1, i32 %arg2)
  %v2_cfb6 = ptrtoint i32* %stack_var_-68 to i32
  %v2_cfc3 = call i32 @unknown_162e4(i32 %v2_cfb6, i32 %arg2)
  %v3_cfd2 = load i32, i32* %stack_var_-68, align 4
  ret i32 %v3_cfd2
}

define i32 @function_d01b() local_unnamed_addr {
dec_label_pc_d01b:
  %eax.global-to-local = alloca i32, align 4
  %v0_d01b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d01b
}

define i32 @function_d04c(i32 %arg1) local_unnamed_addr {
dec_label_pc_d04c:
  %v0_d04f = load i32, i32* @ecx, align 4
  %v1_d04f = add i32 %v0_d04f, -1
  store i32 %v1_d04f, i32* @ecx, align 4
  %v0_d051 = load i32, i32* @ebx, align 4
  %v1_d051 = add i32 %v0_d051, 277591109
  %v2_d051 = inttoptr i32 %v1_d051 to i8*
  %v3_d051 = load i8, i8* %v2_d051, align 1
  %v5_d051 = trunc i32 %v1_d04f to i8
  %v6_d051 = load i1, i1* @cf, align 1
  %v7_d051 = zext i1 %v6_d051 to i8
  %v8_d051 = add i8 %v3_d051, %v5_d051
  %v9_d051 = add i8 %v8_d051, %v7_d051
  store i8 %v9_d051, i8* %v2_d051, align 1
  %v0_d057 = load i32, i32* @ebp, align 4
  %v1_d057 = add i32 %v0_d057, -36
  %v2_d057 = inttoptr i32 %v1_d057 to i32*
  %v3_d057 = load i32, i32* %v2_d057, align 4
  %v3_d05a = mul i32 %v3_d057, 52
  %v0_d05d = load i32, i32* @edx, align 4
  %v2_d05d = add i32 %v0_d05d, %v3_d05a
  %v1_d05f = add i32 %v0_d057, -76
  %v2_d05f = inttoptr i32 %v1_d05f to i32*
  %v3_d05f = load i32, i32* %v2_d05f, align 4
  %v2_d062 = add i32 %v3_d05f, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_d062 = inttoptr i32 %v2_d062 to i32*
  store i32 %v2_d05d, i32* %v3_d062, align 4
  %v0_d065 = call i32 @function_d195()
  ret i32 %v0_d065
}

define i32 @function_d06a() local_unnamed_addr {
dec_label_pc_d06a:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_d06a = load i32, i32* @ebp, align 4
  %v1_d06a = add i32 %v0_d06a, -76
  %v2_d06a = inttoptr i32 %v1_d06a to i32*
  %v3_d06a = load i32, i32* %v2_d06a, align 4
  %v1_d070 = call i32 @unknown_141f4(i32 %v3_d06a)
  %v1_d075 = load i32, i32* @ebp, align 4
  %v2_d075 = add i32 %v1_d075, -36
  %v3_d075 = inttoptr i32 %v2_d075 to i32*
  %v4_d075 = load i32, i32* %v3_d075, align 4
  %v10_d075 = icmp ult i32 %v1_d070, %v4_d075
  %v1_d078 = icmp eq i1 %v10_d075, false
  %v5_d07b = icmp eq i1 %v1_d078, false
  %v1_d11f = add i32 %v1_d075, -76
  %v2_d11f = inttoptr i32 %v1_d11f to i32*
  %v3_d11f = load i32, i32* %v2_d11f, align 4
  br i1 %v5_d07b, label %dec_label_pc_d11f, label %dec_label_pc_d083

dec_label_pc_d083:                                ; preds = %dec_label_pc_d06a
  %v1_d089 = call i32 @unknown_15ff6(i32 %v3_d11f)
  store i32 %v1_d089, i32* %ebx.global-to-local, align 4
  %v0_d090 = load i32, i32* @ebp, align 4
  %v1_d090 = add i32 %v0_d090, -40
  %v1_d093 = add i32 %v0_d090, -76
  %v2_d093 = inttoptr i32 %v1_d093 to i32*
  %v3_d093 = load i32, i32* %v2_d093, align 4
  %v2_d09d = call i32 @unknown_16c8e(i32 %v1_d090, i32 %v3_d093)
  %v0_d0a5 = load i32, i32* @ebp, align 4
  %v1_d0a5 = add i32 %v0_d0a5, -48
  %v1_d0a8 = add i32 %v0_d0a5, -76
  %v2_d0a8 = inttoptr i32 %v1_d0a8 to i32*
  %v3_d0a8 = load i32, i32* %v2_d0a8, align 4
  %v2_d0b2 = call i32 @unknown_1bdce(i32 %v1_d0a5, i32 %v3_d0a8)
  %v0_d0ba = load i32, i32* @ebp, align 4
  %v1_d0ba = add i32 %v0_d0ba, -52
  %v1_d0bd = add i32 %v0_d0ba, -80
  %v2_d0bd = inttoptr i32 %v1_d0bd to i32*
  %v3_d0bd = load i32, i32* %v2_d0bd, align 4
  %v2_d0c7 = call i32 @unknown_16294(i32 %v1_d0ba, i32 %v3_d0bd)
  %v0_d0cf = load i32, i32* @ebp, align 4
  %v1_d0cf = add i32 %v0_d0cf, -56
  %v1_d0d2 = add i32 %v0_d0cf, -80
  %v2_d0d2 = inttoptr i32 %v1_d0d2 to i32*
  %v3_d0d2 = load i32, i32* %v2_d0d2, align 4
  %v2_d0dc = call i32 @unknown_162e4(i32 %v1_d0cf, i32 %v3_d0d2)
  %v0_d0e4 = load i32, i32* @ebp, align 4
  %v1_d0e4 = add i32 %v0_d0e4, -44
  %v1_d0e7 = add i32 %v0_d0e4, -48
  %v2_d0e7 = inttoptr i32 %v1_d0e7 to i32*
  %v3_d0e7 = load i32, i32* %v2_d0e7, align 4
  %v1_d0ee = add i32 %v0_d0e4, -52
  %v2_d0ee = inttoptr i32 %v1_d0ee to i32*
  %v3_d0ee = load i32, i32* %v2_d0ee, align 4
  %v1_d0f5 = add i32 %v0_d0e4, -56
  %v2_d0f5 = inttoptr i32 %v1_d0f5 to i32*
  %v3_d0f5 = load i32, i32* %v2_d0f5, align 4
  %v4_d0ff = call i32 @unknown_1c406(i32 %v1_d0e4, i32 %v3_d0f5, i32 %v3_d0ee, i32 %v3_d0e7)
  %v0_d107 = load i32, i32* %ebx.global-to-local, align 4
  %v0_d10b = load i32, i32* @ebp, align 4
  %v1_d10b = add i32 %v0_d10b, -40
  %v2_d10b = inttoptr i32 %v1_d10b to i32*
  %v3_d10b = load i32, i32* %v2_d10b, align 4
  %v1_d112 = add i32 %v0_d10b, -44
  %v2_d112 = inttoptr i32 %v1_d112 to i32*
  %v3_d112 = load i32, i32* %v2_d112, align 4
  %v3_d118 = call i32 @unknown_1c494(i32 %v3_d112, i32 %v3_d10b, i32 %v0_d107)
  %v0_d11d = call i32 @function_d195()
  ret i32 %v0_d11d

dec_label_pc_d11f:                                ; preds = %dec_label_pc_d06a
  %v1_d122 = inttoptr i32 %v3_d11f to i32*
  %v2_d122 = load i32, i32* %v1_d122, align 4
  store i32 %v2_d122, i32* %ebx.global-to-local, align 4
  %v1_d124 = add i32 %v1_d075, -80
  %v2_d124 = inttoptr i32 %v1_d124 to i32*
  %v3_d124 = load i32, i32* %v2_d124, align 4
  %v1_d127 = inttoptr i32 %v3_d124 to i32*
  %v2_d127 = load i32, i32* %v1_d127, align 4
  store i32 %v2_d127, i32* %esi.global-to-local, align 4
  %v3_d129 = load i32, i32* %v2_d11f, align 4
  %v1_d12f = call i32 @unknown_141f4(i32 %v3_d129)
  %v3_d134 = mul i32 %v1_d12f, 52
  %v3_d137 = add i32 %v2_d127, %v3_d134
  %v0_d13a = load i32, i32* @ebp, align 4
  %v1_d13a = add i32 %v0_d13a, -80
  %v2_d13a = inttoptr i32 %v1_d13a to i32*
  %v3_d13a = load i32, i32* %v2_d13a, align 4
  %v1_d13d = inttoptr i32 %v3_d13a to i32*
  %v2_d13d = load i32, i32* %v1_d13d, align 4
  %v0_d13f = load i32, i32* %ebx.global-to-local, align 4
  %v3_d14a = call i32 @unknown_1c4dc(i32 %v2_d13d, i32 %v3_d137, i32 %v0_d13f)
  %v0_d14f = load i32, i32* @ebp, align 4
  %v1_d14f = add i32 %v0_d14f, -76
  %v2_d14f = inttoptr i32 %v1_d14f to i32*
  %v3_d14f = load i32, i32* %v2_d14f, align 4
  %v1_d155 = call i32 @unknown_15ff6(i32 %v3_d14f)
  store i32 %v1_d155, i32* %ebx.global-to-local, align 4
  %v0_d15c = load i32, i32* @ebp, align 4
  %v1_d15c = add i32 %v0_d15c, -76
  %v2_d15c = inttoptr i32 %v1_d15c to i32*
  %v3_d15c = load i32, i32* %v2_d15c, align 4
  %v1_d15f = add i32 %v3_d15c, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_d15f = inttoptr i32 %v1_d15f to i32*
  %v3_d15f = load i32, i32* %v2_d15f, align 4
  store i32 %v3_d15f, i32* %edi.global-to-local, align 4
  %v1_d162 = add i32 %v0_d15c, -80
  %v2_d162 = inttoptr i32 %v1_d162 to i32*
  %v3_d162 = load i32, i32* %v2_d162, align 4
  %v1_d165 = add i32 %v3_d162, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_d165 = inttoptr i32 %v1_d165 to i32*
  %v3_d165 = load i32, i32* %v2_d165, align 4
  store i32 %v3_d165, i32* %esi.global-to-local, align 4
  %v3_d168 = load i32, i32* %v2_d162, align 4
  %v1_d16b = inttoptr i32 %v3_d168 to i32*
  %v2_d16b = load i32, i32* %v1_d16b, align 4
  %v2_d16d = add i32 %v0_d15c, -84
  %v3_d16d = inttoptr i32 %v2_d16d to i32*
  store i32 %v2_d16b, i32* %v3_d16d, align 4
  %v0_d170 = load i32, i32* @ebp, align 4
  %v1_d170 = add i32 %v0_d170, -76
  %v2_d170 = inttoptr i32 %v1_d170 to i32*
  %v3_d170 = load i32, i32* %v2_d170, align 4
  %v1_d176 = call i32 @unknown_141f4(i32 %v3_d170)
  %v3_d17b = mul i32 %v1_d176, 52
  %v1_d17e = load i32, i32* @ebp, align 4
  %v2_d17e = add i32 %v1_d17e, -84
  %v3_d17e = inttoptr i32 %v2_d17e to i32*
  %v4_d17e = load i32, i32* %v3_d17e, align 4
  %v5_d17e = add i32 %v4_d17e, %v3_d17b
  %v0_d181 = load i32, i32* %ebx.global-to-local, align 4
  %v0_d185 = load i32, i32* %edi.global-to-local, align 4
  %v0_d189 = load i32, i32* %esi.global-to-local, align 4
  %v4_d190 = call i32 @unknown_1c542(i32 %v5_d17e, i32 %v0_d189, i32 %v0_d185, i32 %v0_d181)
  ret i32 %v4_d190

; uselistorder directives
  uselistorder i32 %v0_d0e4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d11f, { 1, 0 }
  uselistorder i32 ()* @function_d195, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_162e4, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_16294, { 1, 0 }
  uselistorder i32 (i32)* @unknown_15ff6, { 1, 0 }
  uselistorder i32 (i32)* @unknown_141f4, { 3, 2, 1, 0 }
}

define i32 @function_d195() local_unnamed_addr {
dec_label_pc_d195:
  %v0_d195 = load i32, i32* @ebp, align 4
  %v1_d195 = add i32 %v0_d195, -76
  %v2_d195 = inttoptr i32 %v1_d195 to i32*
  %v3_d195 = load i32, i32* %v2_d195, align 4
  %v1_d198 = inttoptr i32 %v3_d195 to i32*
  %v2_d198 = load i32, i32* %v1_d198, align 4
  %v1_d19a = add i32 %v0_d195, -36
  %v2_d19a = inttoptr i32 %v1_d19a to i32*
  %v3_d19a = load i32, i32* %v2_d19a, align 4
  %v3_d19d = mul i32 %v3_d19a, 52
  %v2_d1a0 = add i32 %v3_d19d, %v2_d198
  %v3_d1a2 = load i32, i32* %v2_d195, align 4
  %v2_d1a5 = add i32 %v3_d1a2, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_d1a5 = inttoptr i32 %v2_d1a5 to i32*
  store i32 %v2_d1a0, i32* %v3_d1a5, align 4
  %v0_d1a8 = load i32, i32* @ebp, align 4
  %v1_d1a8 = add i32 %v0_d1a8, -76
  %v2_d1a8 = inttoptr i32 %v1_d1a8 to i32*
  %v3_d1a8 = load i32, i32* %v2_d1a8, align 4
  store i32 %v3_d1a8, i32* @eax, align 4
  %v1_d1ab = add i32 %v0_d1a8, -28
  %v2_d1ab = inttoptr i32 %v1_d1ab to i32*
  %v3_d1ab = load i32, i32* %v2_d1ab, align 4
  %v1_d1ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d1ae = icmp eq i32 %v1_d1ae, %v3_d1ab
  br i1 %v3_d1ae, label %bb, label %dec_label_pc_d1b7

bb:                                               ; preds = %dec_label_pc_d195
  %v1_d1b5 = call i32 @function_d1bc()
  br label %dec_label_pc_d1b7

dec_label_pc_d1b7:                                ; preds = %bb, %dec_label_pc_d195
  %v2_d1b5 = phi i32 [ %v1_d1b5, %bb ], [ %v3_d1a8, %dec_label_pc_d195 ]
  ret i32 %v2_d1b5
}

define i32 @function_d1bc() local_unnamed_addr {
dec_label_pc_d1bc:
  %v0_d1bc = load i32, i32* @ebp, align 4
  %v1_d1bc = add i32 %v0_d1bc, -12
  %v1_d1bf = inttoptr i32 %v1_d1bc to i32*
  %v2_d1bf = load i32, i32* %v1_d1bf, align 4
  store i32 %v2_d1bf, i32* @ebx, align 4
  %v1_d1c2 = inttoptr i32 %v0_d1bc to i32*
  %v2_d1c2 = load i32, i32* %v1_d1c2, align 4
  store i32 %v2_d1c2, i32* @ebp, align 4
  %v0_d1c3 = load i32, i32* @eax, align 4
  ret i32 %v0_d1c3
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEaSERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d1c4:
  %v1_d1f6 = call i32 @unknown_145f6(i32 %arg2)
  ret i32 %arg1
}

define i32 @function_d206(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d206:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_d209 = load i32, i32* @eax, align 4
  %v1_d209 = load i32, i32* @ebp, align 4
  %v2_d209 = add i32 %v1_d209, -36
  %v3_d209 = inttoptr i32 %v2_d209 to i32*
  %v4_d209 = load i32, i32* %v3_d209, align 4
  %v10_d209 = icmp ult i32 %v0_d209, %v4_d209
  %v5_d20f = icmp eq i1 %v10_d209, false
  br i1 %v5_d20f, label %dec_label_pc_d2e8, label %dec_label_pc_d217

dec_label_pc_d217:                                ; preds = %dec_label_pc_d206
  %v1_d217 = add i32 %v1_d209, -60
  %v1_d21a = add i32 %v1_d209, -80
  %v2_d21a = inttoptr i32 %v1_d21a to i32*
  %v3_d21a = load i32, i32* %v2_d21a, align 4
  %v2_d224 = call i32 @unknown_165aa(i32 %v1_d217, i32 %v3_d21a)
  %v0_d22c = load i32, i32* @ebp, align 4
  %v1_d22c = add i32 %v0_d22c, -64
  %v1_d22f = add i32 %v0_d22c, -80
  %v2_d22f = inttoptr i32 %v1_d22f to i32*
  %v3_d22f = load i32, i32* %v2_d22f, align 4
  %v2_d239 = call i32 @unknown_165fa(i32 %v1_d22c, i32 %v3_d22f)
  %v0_d241 = load i32, i32* @ebp, align 4
  %v1_d241 = add i32 %v0_d241, -60
  %v2_d241 = inttoptr i32 %v1_d241 to i32*
  %v3_d241 = load i32, i32* %v2_d241, align 4
  %v1_d248 = add i32 %v0_d241, -64
  %v2_d248 = inttoptr i32 %v1_d248 to i32*
  %v3_d248 = load i32, i32* %v2_d248, align 4
  %v1_d24f = add i32 %v0_d241, -36
  %v2_d24f = inttoptr i32 %v1_d24f to i32*
  %v3_d24f = load i32, i32* %v2_d24f, align 4
  %v1_d256 = add i32 %v0_d241, -76
  %v2_d256 = inttoptr i32 %v1_d256 to i32*
  %v3_d256 = load i32, i32* %v2_d256, align 4
  %v4_d25c = call i32 @unknown_1c854(i32 %v3_d256, i32 %v3_d24f, i32 %v3_d248, i32 %v3_d241)
  %v1_d261 = load i32, i32* @ebp, align 4
  %v2_d261 = add i32 %v1_d261, -32
  %v3_d261 = inttoptr i32 %v2_d261 to i32*
  store i32 %v4_d25c, i32* %v3_d261, align 4
  %v0_d264 = load i32, i32* @ebp, align 4
  %v1_d264 = add i32 %v0_d264, -76
  %v2_d264 = inttoptr i32 %v1_d264 to i32*
  %v3_d264 = load i32, i32* %v2_d264, align 4
  %v1_d26a = call i32 @unknown_163d8(i32 %v3_d264)
  %v0_d26f = load i32, i32* @ebp, align 4
  %v1_d26f = add i32 %v0_d26f, -76
  %v2_d26f = inttoptr i32 %v1_d26f to i32*
  %v3_d26f = load i32, i32* %v2_d26f, align 4
  %v1_d272 = add i32 %v3_d26f, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_d272 = inttoptr i32 %v1_d272 to i32*
  %v3_d272 = load i32, i32* %v2_d272, align 4
  %v1_d278 = inttoptr i32 %v3_d26f to i32*
  %v2_d278 = load i32, i32* %v1_d278, align 4
  %v3_d285 = call i32 @unknown_16405(i32 %v2_d278, i32 %v3_d272, i32 %v1_d26a)
  %v0_d28a = load i32, i32* @ebp, align 4
  %v1_d28a = add i32 %v0_d28a, -76
  %v2_d28a = inttoptr i32 %v1_d28a to i32*
  %v3_d28a = load i32, i32* %v2_d28a, align 4
  %v1_d28d = add i32 %v3_d28a, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_d28d = inttoptr i32 %v1_d28d to i32*
  %v3_d28d = load i32, i32* %v2_d28d, align 4
  %v1_d295 = inttoptr i32 %v3_d28a to i32*
  %v2_d295 = load i32, i32* %v1_d295, align 4
  %v2_d299 = sub i32 %v3_d28d, %v2_d295
  %v2_d29d = sdiv i32 %v2_d299, 4
  %v3_d2a0 = mul i32 %v2_d29d, -858993459
  %v3_d2a8 = load i32, i32* %v2_d28a, align 4
  %v1_d2ab = inttoptr i32 %v3_d2a8 to i32*
  %v2_d2ab = load i32, i32* %v1_d2ab, align 4
  %v3_d2bb = call i32 @unknown_18dee(i32 %v3_d2a8, i32 %v2_d2ab, i32 %v3_d2a0)
  %v0_d2c0 = load i32, i32* @ebp, align 4
  %v1_d2c0 = add i32 %v0_d2c0, -76
  %v2_d2c0 = inttoptr i32 %v1_d2c0 to i32*
  %v3_d2c0 = load i32, i32* %v2_d2c0, align 4
  %v1_d2c3 = add i32 %v0_d2c0, -32
  %v2_d2c3 = inttoptr i32 %v1_d2c3 to i32*
  %v3_d2c3 = load i32, i32* %v2_d2c3, align 4
  %v2_d2c6 = inttoptr i32 %v3_d2c0 to i32*
  store i32 %v3_d2c3, i32* %v2_d2c6, align 4
  %v0_d2c8 = load i32, i32* @ebp, align 4
  %v1_d2c8 = add i32 %v0_d2c8, -76
  %v2_d2c8 = inttoptr i32 %v1_d2c8 to i32*
  %v3_d2c8 = load i32, i32* %v2_d2c8, align 4
  %v1_d2cb = inttoptr i32 %v3_d2c8 to i32*
  %v2_d2cb = load i32, i32* %v1_d2cb, align 4
  %v1_d2cd = add i32 %v0_d2c8, -36
  %v2_d2cd = inttoptr i32 %v1_d2cd to i32*
  %v3_d2cd = load i32, i32* %v2_d2cd, align 4
  %v2_d2d7 = mul i32 %v3_d2cd, 20
  %v3_d2da = add i32 %v2_d2d7, %v2_d2cb
  %v3_d2dd = load i32, i32* %v2_d2c8, align 4
  %v2_d2e0 = add i32 %v3_d2dd, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_d2e0 = inttoptr i32 %v2_d2e0 to i32*
  store i32 %v3_d2da, i32* %v3_d2e0, align 4
  br label %dec_label_pc_d428

dec_label_pc_d2e8:                                ; preds = %dec_label_pc_d206
  %v1_d2e8 = add i32 %v1_d209, -76
  %v2_d2e8 = inttoptr i32 %v1_d2e8 to i32*
  %v3_d2e8 = load i32, i32* %v2_d2e8, align 4
  %v1_d2ee = call i32 @unknown_145f6(i32 %v3_d2e8)
  %v1_d2f3 = load i32, i32* @ebp, align 4
  %v2_d2f3 = add i32 %v1_d2f3, -36
  %v3_d2f3 = inttoptr i32 %v2_d2f3 to i32*
  %v4_d2f3 = load i32, i32* %v3_d2f3, align 4
  %v10_d2f3 = icmp ult i32 %v1_d2ee, %v4_d2f3
  %v1_d2f6 = icmp eq i1 %v10_d2f3, false
  %v5_d2f9 = icmp eq i1 %v1_d2f6, false
  %v1_d3a0 = add i32 %v1_d2f3, -76
  %v2_d3a0 = inttoptr i32 %v1_d3a0 to i32*
  %v3_d3a0 = load i32, i32* %v2_d3a0, align 4
  br i1 %v5_d2f9, label %dec_label_pc_d3a0, label %dec_label_pc_d301

dec_label_pc_d301:                                ; preds = %dec_label_pc_d2e8
  %v1_d307 = call i32 @unknown_163d8(i32 %v3_d3a0)
  store i32 %v1_d307, i32* @ebx, align 4
  %v0_d30e = load i32, i32* @ebp, align 4
  %v1_d30e = add i32 %v0_d30e, -40
  %v1_d311 = add i32 %v0_d30e, -76
  %v2_d311 = inttoptr i32 %v1_d311 to i32*
  %v3_d311 = load i32, i32* %v2_d311, align 4
  %v2_d31b = call i32 @unknown_167c6(i32 %v1_d30e, i32 %v3_d311)
  %v0_d323 = load i32, i32* @ebp, align 4
  %v1_d323 = add i32 %v0_d323, -48
  %v1_d326 = add i32 %v0_d323, -76
  %v2_d326 = inttoptr i32 %v1_d326 to i32*
  %v3_d326 = load i32, i32* %v2_d326, align 4
  %v2_d330 = call i32 @unknown_1c36c(i32 %v1_d323, i32 %v3_d326)
  %v0_d338 = load i32, i32* @ebp, align 4
  %v1_d338 = add i32 %v0_d338, -52
  %v1_d33b = add i32 %v0_d338, -80
  %v2_d33b = inttoptr i32 %v1_d33b to i32*
  %v3_d33b = load i32, i32* %v2_d33b, align 4
  %v2_d345 = call i32 @unknown_165aa(i32 %v1_d338, i32 %v3_d33b)
  %v0_d34d = load i32, i32* @ebp, align 4
  %v1_d34d = add i32 %v0_d34d, -56
  %v1_d350 = add i32 %v0_d34d, -80
  %v2_d350 = inttoptr i32 %v1_d350 to i32*
  %v3_d350 = load i32, i32* %v2_d350, align 4
  %v2_d35a = call i32 @unknown_165fa(i32 %v1_d34d, i32 %v3_d350)
  %v0_d362 = load i32, i32* @ebp, align 4
  %v1_d362 = add i32 %v0_d362, -44
  %v1_d365 = add i32 %v0_d362, -48
  %v2_d365 = inttoptr i32 %v1_d365 to i32*
  %v3_d365 = load i32, i32* %v2_d365, align 4
  %v1_d36c = add i32 %v0_d362, -52
  %v2_d36c = inttoptr i32 %v1_d36c to i32*
  %v3_d36c = load i32, i32* %v2_d36c, align 4
  %v1_d373 = add i32 %v0_d362, -56
  %v2_d373 = inttoptr i32 %v1_d373 to i32*
  %v3_d373 = load i32, i32* %v2_d373, align 4
  %v4_d37d = call i32 @unknown_1c90e(i32 %v1_d362, i32 %v3_d373, i32 %v3_d36c, i32 %v3_d365)
  %v0_d385 = load i32, i32* @ebx, align 4
  %v0_d389 = load i32, i32* @ebp, align 4
  %v1_d389 = add i32 %v0_d389, -40
  %v2_d389 = inttoptr i32 %v1_d389 to i32*
  %v3_d389 = load i32, i32* %v2_d389, align 4
  %v1_d390 = add i32 %v0_d389, -44
  %v2_d390 = inttoptr i32 %v1_d390 to i32*
  %v3_d390 = load i32, i32* %v2_d390, align 4
  %v3_d396 = call i32 @unknown_1c99c(i32 %v3_d390, i32 %v3_d389, i32 %v0_d385)
  br label %dec_label_pc_d428

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d2e8
  %v1_d3a3 = inttoptr i32 %v3_d3a0 to i32*
  %v2_d3a3 = load i32, i32* %v1_d3a3, align 4
  store i32 %v2_d3a3, i32* %ebx.global-to-local, align 4
  %v1_d3a5 = add i32 %v1_d2f3, -80
  %v2_d3a5 = inttoptr i32 %v1_d3a5 to i32*
  %v3_d3a5 = load i32, i32* %v2_d3a5, align 4
  %v1_d3a8 = inttoptr i32 %v3_d3a5 to i32*
  %v2_d3a8 = load i32, i32* %v1_d3a8, align 4
  store i32 %v2_d3a8, i32* %esi.global-to-local, align 4
  %v3_d3aa = load i32, i32* %v2_d3a0, align 4
  %v1_d3b0 = call i32 @unknown_145f6(i32 %v3_d3aa)
  %v2_d3be = mul i32 %v1_d3b0, 20
  %v3_d3c1 = add i32 %v2_d3a8, %v2_d3be
  %v0_d3c4 = load i32, i32* @ebp, align 4
  %v1_d3c4 = add i32 %v0_d3c4, -80
  %v2_d3c4 = inttoptr i32 %v1_d3c4 to i32*
  %v3_d3c4 = load i32, i32* %v2_d3c4, align 4
  %v1_d3c7 = inttoptr i32 %v3_d3c4 to i32*
  %v2_d3c7 = load i32, i32* %v1_d3c7, align 4
  %v0_d3c9 = load i32, i32* %ebx.global-to-local, align 4
  %v3_d3d4 = call i32 @unknown_1c9e4(i32 %v2_d3c7, i32 %v3_d3c1, i32 %v0_d3c9)
  %v0_d3d9 = load i32, i32* @ebp, align 4
  %v1_d3d9 = add i32 %v0_d3d9, -76
  %v2_d3d9 = inttoptr i32 %v1_d3d9 to i32*
  %v3_d3d9 = load i32, i32* %v2_d3d9, align 4
  %v1_d3df = call i32 @unknown_163d8(i32 %v3_d3d9)
  store i32 %v1_d3df, i32* @ebx, align 4
  %v0_d3e6 = load i32, i32* @ebp, align 4
  %v1_d3e6 = add i32 %v0_d3e6, -76
  %v2_d3e6 = inttoptr i32 %v1_d3e6 to i32*
  %v3_d3e6 = load i32, i32* %v2_d3e6, align 4
  %v1_d3e9 = add i32 %v3_d3e6, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_d3e9 = inttoptr i32 %v1_d3e9 to i32*
  %v3_d3e9 = load i32, i32* %v2_d3e9, align 4
  store i32 %v3_d3e9, i32* %edi.global-to-local, align 4
  %v1_d3ec = add i32 %v0_d3e6, -80
  %v2_d3ec = inttoptr i32 %v1_d3ec to i32*
  %v3_d3ec = load i32, i32* %v2_d3ec, align 4
  %v1_d3ef = add i32 %v3_d3ec, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_d3ef = inttoptr i32 %v1_d3ef to i32*
  %v3_d3ef = load i32, i32* %v2_d3ef, align 4
  store i32 %v3_d3ef, i32* %esi.global-to-local, align 4
  %v3_d3f2 = load i32, i32* %v2_d3ec, align 4
  %v1_d3f5 = inttoptr i32 %v3_d3f2 to i32*
  %v2_d3f5 = load i32, i32* %v1_d3f5, align 4
  %v2_d3f7 = add i32 %v0_d3e6, -84
  %v3_d3f7 = inttoptr i32 %v2_d3f7 to i32*
  store i32 %v2_d3f5, i32* %v3_d3f7, align 4
  %v0_d3fa = load i32, i32* @ebp, align 4
  %v1_d3fa = add i32 %v0_d3fa, -76
  %v2_d3fa = inttoptr i32 %v1_d3fa to i32*
  %v3_d3fa = load i32, i32* %v2_d3fa, align 4
  %v1_d400 = call i32 @unknown_145f6(i32 %v3_d3fa)
  %v2_d40e = mul i32 %v1_d400, 20
  %v1_d411 = load i32, i32* @ebp, align 4
  %v2_d411 = add i32 %v1_d411, -84
  %v3_d411 = inttoptr i32 %v2_d411 to i32*
  %v4_d411 = load i32, i32* %v3_d411, align 4
  %v5_d411 = add i32 %v4_d411, %v2_d40e
  %v0_d414 = load i32, i32* @ebx, align 4
  %v0_d418 = load i32, i32* %edi.global-to-local, align 4
  %v0_d41c = load i32, i32* %esi.global-to-local, align 4
  %v4_d423 = call i32 @unknown_1ca4a(i32 %v5_d411, i32 %v0_d41c, i32 %v0_d418, i32 %v0_d414)
  br label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d3a0, %dec_label_pc_d301, %dec_label_pc_d217
  %v0_d428 = load i32, i32* @ebp, align 4
  %v1_d428 = add i32 %v0_d428, -76
  %v2_d428 = inttoptr i32 %v1_d428 to i32*
  %v3_d428 = load i32, i32* %v2_d428, align 4
  %v1_d42b = inttoptr i32 %v3_d428 to i32*
  %v2_d42b = load i32, i32* %v1_d42b, align 4
  store i32 %v2_d42b, i32* @ecx, align 4
  %v1_d42d = add i32 %v0_d428, -36
  %v2_d42d = inttoptr i32 %v1_d42d to i32*
  %v3_d42d = load i32, i32* %v2_d42d, align 4
  %v2_d437 = mul i32 %v3_d42d, 20
  %v3_d43a = add i32 %v2_d437, %v2_d42b
  %v3_d43d = load i32, i32* %v2_d428, align 4
  %v2_d440 = add i32 %v3_d43d, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_d440 = inttoptr i32 %v2_d440 to i32*
  store i32 %v3_d43a, i32* %v3_d440, align 4
  %v0_d443 = load i32, i32* @ebp, align 4
  %v1_d443 = add i32 %v0_d443, -76
  %v2_d443 = inttoptr i32 %v1_d443 to i32*
  %v3_d443 = load i32, i32* %v2_d443, align 4
  store i32 %v3_d443, i32* @eax, align 4
  %v1_d446 = add i32 %v0_d443, -28
  %v2_d446 = inttoptr i32 %v1_d446 to i32*
  %v3_d446 = load i32, i32* %v2_d446, align 4
  %v1_d449 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d449 = icmp eq i32 %v1_d449, %v3_d446
  br i1 %v3_d449, label %bb, label %dec_label_pc_d452

bb:                                               ; preds = %dec_label_pc_d428
  %v1_d450 = call i32 @function_d457()
  br label %dec_label_pc_d452

dec_label_pc_d452:                                ; preds = %bb, %dec_label_pc_d428
  %v2_d450 = phi i32 [ %v1_d450, %bb ], [ %v3_d443, %dec_label_pc_d428 ]
  ret i32 %v2_d450

; uselistorder directives
  uselistorder i32 %v0_d362, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d3a0, { 1, 0 }
  uselistorder i32 %v0_d241, { 1, 0, 2, 3 }
  uselistorder i32 -84, { 2, 3, 0, 1, 6, 4, 5, 7 }
  uselistorder i32 -56, { 5, 6, 1, 2, 3, 4, 9, 10, 7, 8, 11, 12, 0, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32)* @unknown_145f6, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_163d8, { 2, 1, 0 }
  uselistorder i32 -76, { 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 34, 35, 1, 2, 3, 5, 6, 4, 7, 36, 32, 33, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 37, 38, 23, 24, 25, 26, 27, 39, 40, 41, 30, 28, 29, 31, 0, 54 }
  uselistorder i32 (i32, i32)* @unknown_165fa, { 1, 0 }
  uselistorder i32 -64, { 6, 7, 1, 2, 3, 4, 13, 14, 16, 17, 11, 12, 15, 18, 5, 0, 8, 9, 10, 20, 19, 21 }
  uselistorder i32 (i32, i32)* @unknown_165aa, { 1, 0 }
  uselistorder i32 -80, { 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6, 19, 24, 25, 26, 14, 15, 16, 17, 18, 20, 21, 22, 23, 0, 27, 28 }
  uselistorder i32 -60, { 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 49, 50, 41, 42, 43, 44, 45, 46, 26, 27, 2, 0, 1, 3, 4, 51, 52, 53 }
}

define i32 @function_d457() local_unnamed_addr {
dec_label_pc_d457:
  %v0_d457 = load i32, i32* @ebp, align 4
  %v1_d457 = add i32 %v0_d457, -12
  %v1_d45a = inttoptr i32 %v1_d457 to i32*
  %v2_d45a = load i32, i32* %v1_d45a, align 4
  store i32 %v2_d45a, i32* @ebx, align 4
  %v1_d45d = inttoptr i32 %v0_d457 to i32*
  %v2_d45d = load i32, i32* %v1_d45d, align 4
  store i32 %v2_d45d, i32* @ebp, align 4
  %v0_d45e = load i32, i32* @eax, align 4
  ret i32 %v0_d45e
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE12_M_check_lenEjPKc() local_unnamed_addr {
dec_label_pc_d460:
  %eax.global-to-local = alloca i32, align 4
  %v17_d464 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_d464
}

define i32 @function_d468(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d468:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_d468 = load i32, i32* @ebp, align 4
  %v1_d468 = add i32 %v0_d468, 1
  store i32 %v1_d468, i32* %ebp.global-to-local, align 4
  %v0_d469 = load i32, i32* @ecx, align 4
  %v1_d469 = add i32 %v0_d469, 1166795845
  %v2_d469 = inttoptr i32 %v1_d469 to i8*
  %v3_d469 = load i8, i8* %v2_d469, align 1
  %v5_d469 = trunc i32 %v0_d469 to i8
  %v6_d469 = or i8 %v3_d469, %v5_d469
  store i8 %v6_d469, i8* %v2_d469, align 1
  %v0_d46f = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_d46f = or i32 %v0_d46f, 137
  store i32 %v11_d46f, i32* %eax.global-to-local, align 4
  %v0_d471 = load i32, i32* %ebp.global-to-local, align 4
  %v0_d472 = load i32, i32* @ecx, align 4
  %v1_d472 = add i32 %v0_d472, 255
  %v1_d474 = add i32 %v0_d471, 2
  store i32 %v1_d474, i32* @ebp, align 4
  %v1_d475 = add i32 %v0_d472, -1587159996
  %v2_d475 = inttoptr i32 %v1_d475 to i8*
  %v3_d475 = load i8, i8* %v2_d475, align 1
  %v5_d475 = trunc i32 %v1_d472 to i8
  %v8_d475 = add i8 %v3_d475, %v5_d475
  %v28_d475 = icmp ult i8 %v8_d475, %v3_d475
  store i1 %v28_d475, i1* %cf.global-to-local, align 1
  store i8 %v8_d475, i8* %v2_d475, align 1
  %v0_d47b = load i32, i32* %eax.global-to-local, align 4
  %v1_d47b = trunc i32 %v0_d47b to i8
  %v2_d47b = load i1, i1* %cf.global-to-local, align 1
  %v3_d47b = zext i1 %v2_d47b to i8
  %v4_d47b = add i8 %v3_d47b, %v1_d47b
  %v19_d47b = icmp ule i8 %v4_d47b, %v1_d47b
  %v21_d47b = icmp eq i1 %v2_d47b, %v19_d47b
  store i1 %v21_d47b, i1* %cf.global-to-local, align 1
  %v22_d47b = zext i8 %v4_d47b to i32
  %v24_d47b = and i32 %v0_d47b, -256
  %v25_d47b = or i32 %v22_d47b, %v24_d47b
  store i32 %v25_d47b, i32* %eax.global-to-local, align 4
  %v1_d47d = inttoptr i32 %v25_d47b to i8*
  %v2_d47d = load i8, i8* %v1_d47d, align 1
  %v5_d47d = add i8 %v2_d47d, %v4_d47b
  store i8 %v5_d47d, i8* %v1_d47d, align 1
  %v0_d47f = load i32, i32* %eax.global-to-local, align 4
  %v1_d47f = load i32, i32* @ebp, align 4
  %v2_d47f = add i32 %v1_d47f, -12
  %v3_d47f = inttoptr i32 %v2_d47f to i32*
  store i32 %v0_d47f, i32* %v3_d47f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_d484 = load i32, i32* @ebp, align 4
  %v1_d484 = add i32 %v0_d484, -28
  %v2_d484 = inttoptr i32 %v1_d484 to i32*
  %v3_d484 = load i32, i32* %v2_d484, align 4
  store i32 %v3_d484, i32* %eax.global-to-local, align 4
  %v1_d48a = call i32 @unknown_1cd3c(i32 %v3_d484)
  store i32 %v1_d48a, i32* %eax.global-to-local, align 4
  store i32 %v1_d48a, i32* %ebx.global-to-local, align 4
  %v0_d491 = load i32, i32* @ebp, align 4
  %v1_d491 = add i32 %v0_d491, -28
  %v2_d491 = inttoptr i32 %v1_d491 to i32*
  %v3_d491 = load i32, i32* %v2_d491, align 4
  store i32 %v3_d491, i32* %eax.global-to-local, align 4
  %v1_d497 = call i32 @unknown_14ab4(i32 %v3_d491)
  store i32 %v1_d497, i32* %eax.global-to-local, align 4
  %v0_d49c = load i32, i32* %ebx.global-to-local, align 4
  %v2_d49e = sub i32 %v0_d49c, %v1_d497
  store i32 %v2_d49e, i32* @edx, align 4
  %v0_d4a0 = load i32, i32* @ebp, align 4
  %v1_d4a0 = add i32 %v0_d4a0, -32
  %v2_d4a0 = inttoptr i32 %v1_d4a0 to i32*
  %v3_d4a0 = load i32, i32* %v2_d4a0, align 4
  %v7_d4a3 = icmp ult i32 %v2_d49e, %v3_d4a0
  %v1_d4a5 = zext i1 %v7_d4a3 to i32
  %v3_d4a5 = and i32 %v3_d4a0, -256
  %v4_d4a5 = or i32 %v1_d4a5, %v3_d4a5
  store i32 %v4_d4a5, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_d4a8 = icmp eq i1 %v7_d4a3, false
  br i1 %v5_d4a8, label %bb, label %dec_label_pc_d4ac

bb:                                               ; preds = %dec_label_pc_d468
  %v1_d4aa = call i32 @function_d4b7()
  store i32 %v1_d4aa, i32* %eax.global-to-local, align 4
  %v0_d4ac.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %bb, %dec_label_pc_d468
  %v0_d4ac = phi i32 [ %v0_d4ac.pre, %bb ], [ %v0_d4a0, %dec_label_pc_d468 ]
  %v1_d4ac = add i32 %v0_d4ac, -36
  %v2_d4ac = inttoptr i32 %v1_d4ac to i32*
  %v3_d4ac = load i32, i32* %v2_d4ac, align 4
  store i32 %v3_d4ac, i32* %eax.global-to-local, align 4
  ret i32 %v3_d4ac

; uselistorder directives
  uselistorder i1 %v7_d4a3, { 1, 0 }
  uselistorder i8 %v4_d47b, { 0, 2, 1 }
  uselistorder i8 %v1_d47b, { 1, 0 }
  uselistorder i8 %v3_d475, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
}

define i32 @function_d4b7() local_unnamed_addr {
dec_label_pc_d4b7:
  %ebx.global-to-local = alloca i32, align 4
  %v0_d4b7 = load i32, i32* @ebp, align 4
  %v1_d4b7 = add i32 %v0_d4b7, -28
  %v2_d4b7 = inttoptr i32 %v1_d4b7 to i32*
  %v3_d4b7 = load i32, i32* %v2_d4b7, align 4
  %v1_d4bd = call i32 @unknown_14ab4(i32 %v3_d4b7)
  store i32 %v1_d4bd, i32* %ebx.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @ebp, align 4
  %v1_d4c4 = add i32 %v0_d4c4, -28
  %v2_d4c4 = inttoptr i32 %v1_d4c4 to i32*
  %v3_d4c4 = load i32, i32* %v2_d4c4, align 4
  %v1_d4ca = call i32 @unknown_14ab4(i32 %v3_d4c4)
  %v1_d4cf = load i32, i32* @ebp, align 4
  %v2_d4cf = add i32 %v1_d4cf, -20
  %v3_d4cf = inttoptr i32 %v2_d4cf to i32*
  store i32 %v1_d4ca, i32* %v3_d4cf, align 4
  %v0_d4d2 = load i32, i32* @ebp, align 4
  %v1_d4d2 = add i32 %v0_d4d2, -32
  %v1_d4d9 = add i32 %v0_d4d2, -20
  %v2_d4df = call i32 @unknown_1af4f(i32 %v1_d4d9, i32 %v1_d4d2)
  %v1_d4e4 = inttoptr i32 %v2_d4df to i32*
  %v2_d4e4 = load i32, i32* %v1_d4e4, align 4
  %v1_d4e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d4e6 = add i32 %v1_d4e6, %v2_d4e4
  %v1_d4e8 = load i32, i32* @ebp, align 4
  %v2_d4e8 = add i32 %v1_d4e8, -16
  %v3_d4e8 = inttoptr i32 %v2_d4e8 to i32*
  store i32 %v2_d4e6, i32* %v3_d4e8, align 4
  %v0_d4eb = load i32, i32* @ebp, align 4
  %v1_d4eb = add i32 %v0_d4eb, -28
  %v2_d4eb = inttoptr i32 %v1_d4eb to i32*
  %v3_d4eb = load i32, i32* %v2_d4eb, align 4
  %v1_d4f1 = call i32 @unknown_14ab4(i32 %v3_d4eb)
  %v1_d4f6 = load i32, i32* @ebp, align 4
  %v2_d4f6 = add i32 %v1_d4f6, -16
  %v3_d4f6 = inttoptr i32 %v2_d4f6 to i32*
  %v4_d4f6 = load i32, i32* %v3_d4f6, align 4
  %tmp5 = icmp ugt i32 %v1_d4f1, %v4_d4f6
  br i1 %tmp5, label %dec_label_pc_d50b, label %dec_label_pc_d4fb

dec_label_pc_d4fb:                                ; preds = %dec_label_pc_d4b7
  %v1_d4fb = add i32 %v1_d4f6, -28
  %v2_d4fb = inttoptr i32 %v1_d4fb to i32*
  %v3_d4fb = load i32, i32* %v2_d4fb, align 4
  %v1_d501 = call i32 @unknown_1cd3c(i32 %v3_d4fb)
  %v1_d506 = load i32, i32* @ebp, align 4
  %v2_d506 = add i32 %v1_d506, -16
  %v3_d506 = inttoptr i32 %v2_d506 to i32*
  %v4_d506 = load i32, i32* %v3_d506, align 4
  %v10_d506 = icmp ult i32 %v1_d501, %v4_d506
  %v1_d509 = icmp eq i1 %v10_d506, false
  br i1 %v1_d509, label %dec_label_pc_d51b, label %dec_label_pc_d50b

dec_label_pc_d50b:                                ; preds = %dec_label_pc_d4b7, %dec_label_pc_d4fb
  %v0_d50b = phi i32 [ %v1_d4f6, %dec_label_pc_d4b7 ], [ %v1_d506, %dec_label_pc_d4fb ]
  %v1_d50b = add i32 %v0_d50b, -28
  %v2_d50b = inttoptr i32 %v1_d50b to i32*
  %v3_d50b = load i32, i32* %v2_d50b, align 4
  %v1_d511 = call i32 @unknown_1cd3c(i32 %v3_d50b)
  %v0_d51b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_d51b

dec_label_pc_d51b:                                ; preds = %dec_label_pc_d4fb, %dec_label_pc_d50b
  %v0_d51b = phi i32 [ %v0_d51b.pre, %dec_label_pc_d50b ], [ %v1_d506, %dec_label_pc_d4fb ]
  %storemerge = phi i32 [ %v1_d511, %dec_label_pc_d50b ], [ %v4_d506, %dec_label_pc_d4fb ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_d51b = add i32 %v0_d51b, -12
  %v2_d51b = inttoptr i32 %v1_d51b to i32*
  %v3_d51b = load i32, i32* %v2_d51b, align 4
  %v1_d51e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d51e = xor i32 %v1_d51e, %v3_d51b
  %v3_d51e = icmp eq i32 %v2_d51e, 0
  store i32 %v2_d51e, i32* @edx, align 4
  br i1 %v3_d51e, label %bb, label %dec_label_pc_d527

bb:                                               ; preds = %dec_label_pc_d51b
  %v1_d525 = call i32 @function_d52c()
  br label %dec_label_pc_d527

dec_label_pc_d527:                                ; preds = %bb, %dec_label_pc_d51b
  %v2_d525 = phi i32 [ %v1_d525, %bb ], [ %storemerge, %dec_label_pc_d51b ]
  ret i32 %v2_d525

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1cd3c, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_14ab4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d51b, { 1, 0 }
  uselistorder label %dec_label_pc_d50b, { 1, 0 }
}

define i32 @function_d52c() local_unnamed_addr {
dec_label_pc_d52c:
  %v0_d531 = load i32, i32* @eax, align 4
  ret i32 %v0_d531
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d532:
  %v2_d55c = call i32 @unknown_1abf6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d570

bb:                                               ; preds = %dec_label_pc_d532
  %v1_d56e = call i32 @function_d575()
  br label %dec_label_pc_d570

dec_label_pc_d570:                                ; preds = %bb, %dec_label_pc_d532
  %v2_d56e = phi i32 [ %v1_d56e, %bb ], [ %arg1, %dec_label_pc_d532 ]
  ret i32 %v2_d56e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_d575() local_unnamed_addr {
dec_label_pc_d575:
  %v0_d576 = load i32, i32* @eax, align 4
  ret i32 %v0_d576
}

define i32 @_ZN9__gnu_cxxmiIP12CTransactionSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d579:
  %v1_d59d = call i32 @unknown_1a403(i32 %arg1)
  %v1_d5a2 = inttoptr i32 %v1_d59d to i32*
  %v2_d5a2 = load i32, i32* %v1_d5a2, align 4
  %v1_d5ac = call i32 @unknown_1a403(i32 %arg2)
  %v1_d5b1 = inttoptr i32 %v1_d5ac to i32*
  %v2_d5b1 = load i32, i32* %v1_d5b1, align 4
  %v2_d5b5 = sub i32 %v2_d5a2, %v2_d5b1
  %v2_d5b9 = sdiv i32 %v2_d5b5, 32
  store i32 %v2_d5b9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d5c8

bb:                                               ; preds = %dec_label_pc_d579
  %v1_d5c6 = call i32 @function_d5cd()
  br label %dec_label_pc_d5c8

dec_label_pc_d5c8:                                ; preds = %bb, %dec_label_pc_d579
  %v2_d5c6 = phi i32 [ %v1_d5c6, %bb ], [ %v2_d5b9, %dec_label_pc_d579 ]
  ret i32 %v2_d5c6

; uselistorder directives
  uselistorder i32 %v2_d5b9, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1a403, { 1, 0 }
}

define i32 @function_d5cd() local_unnamed_addr {
dec_label_pc_d5cd:
  %v0_d5d2 = load i32, i32* @eax, align 4
  ret i32 %v0_d5d2
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d5d4:
  %v10_d5f1 = icmp eq i32 %arg2, 0
  br i1 %v10_d5f1, label %dec_label_pc_d618, label %dec_label_pc_d5f7

dec_label_pc_d5f7:                                ; preds = %dec_label_pc_d5d4
  %v3_d60c = call i32 @unknown_1ceee(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_d618

dec_label_pc_d618:                                ; preds = %dec_label_pc_d5d4, %dec_label_pc_d5f7
  %storemerge = phi i32 [ %v3_d60c, %dec_label_pc_d5f7 ], [ 0, %dec_label_pc_d5d4 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d624

bb:                                               ; preds = %dec_label_pc_d618
  %v1_d622 = call i32 @function_d629()
  br label %dec_label_pc_d624

dec_label_pc_d624:                                ; preds = %bb, %dec_label_pc_d618
  %v2_d622 = phi i32 [ %v1_d622, %bb ], [ %storemerge, %dec_label_pc_d618 ]
  ret i32 %v2_d622

; uselistorder directives
  uselistorder label %dec_label_pc_d618, { 1, 0 }
}

define i32 @function_d629() local_unnamed_addr {
dec_label_pc_d629:
  %v0_d62a = load i32, i32* @eax, align 4
  ret i32 %v0_d62a
}

define i32 @_ZSt22__uninitialized_move_aIP12CTransactionS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d62b:
  %v8_d66f = call i32 @unknown_1cfa3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v8_d66f

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d678(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d678:
  %v0_d678 = load i32, i32* @edx, align 4
  %v1_d678 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d678 = icmp eq i32 %v1_d678, %v0_d678
  br i1 %v3_d678, label %bb, label %dec_label_pc_d678.dec_label_pc_d680_crit_edge

dec_label_pc_d678.dec_label_pc_d680_crit_edge:    ; preds = %dec_label_pc_d678
  %v2_d67e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d680

bb:                                               ; preds = %dec_label_pc_d678
  %v1_d67e = call i32 @function_d685()
  br label %dec_label_pc_d680

dec_label_pc_d680:                                ; preds = %dec_label_pc_d678.dec_label_pc_d680_crit_edge, %bb
  %v2_d67e = phi i32 [ %v2_d67e.pre, %dec_label_pc_d678.dec_label_pc_d680_crit_edge ], [ %v1_d67e, %bb ]
  ret i32 %v2_d67e

; uselistorder directives
  uselistorder label %dec_label_pc_d680, { 1, 0 }
}

define i32 @function_d685() local_unnamed_addr {
dec_label_pc_d685:
  %v0_d686 = load i32, i32* @eax, align 4
  ret i32 %v0_d686
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE7destroyEPS1_() local_unnamed_addr {
dec_label_pc_d688:
  %eax.global-to-local = alloca i32, align 4
  %v5_d688 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_d688
}

define i32 @function_d68a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d68a:
  %v0_d695 = load i32, i32* @ebp, align 4
  %v1_d698 = add i32 %v0_d695, 2
  store i32 %v1_d698, i32* @ebp, align 4
  %v0_d69b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d6a0 = add i32 %v0_d695, -10
  %v3_d6a0 = inttoptr i32 %v2_d6a0 to i32*
  store i32 %v0_d69b, i32* %v3_d6a0, align 4
  %v0_d6a5 = load i32, i32* @ebp, align 4
  %v1_d6a5 = add i32 %v0_d6a5, -32
  %v2_d6a5 = inttoptr i32 %v1_d6a5 to i32*
  %v3_d6a5 = load i32, i32* %v2_d6a5, align 4
  store i32 %v3_d6a5, i32* @eax, align 4
  %v1_d6ab = call i32 @function_1155a(i32 %v3_d6a5)
  %v0_d6b0 = load i32, i32* @ebp, align 4
  %v1_d6b0 = add i32 %v0_d6b0, -12
  %v2_d6b0 = inttoptr i32 %v1_d6b0 to i32*
  %v3_d6b0 = load i32, i32* %v2_d6b0, align 4
  %v1_d6b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d6b3 = xor i32 %v1_d6b3, %v3_d6b0
  %v3_d6b3 = icmp eq i32 %v2_d6b3, 0
  store i32 %v2_d6b3, i32* @eax, align 4
  br i1 %v3_d6b3, label %bb, label %dec_label_pc_d6bc

bb:                                               ; preds = %dec_label_pc_d68a
  %v1_d6ba = call i32 @function_d6c1()
  br label %dec_label_pc_d6bc

dec_label_pc_d6bc:                                ; preds = %bb, %dec_label_pc_d68a
  %v3_d6ba = phi i32 [ %v1_d6ba, %bb ], [ %v2_d6b3, %dec_label_pc_d68a ]
  ret i32 %v3_d6ba
}

define i32 @function_d6c1() local_unnamed_addr {
dec_label_pc_d6c1:
  %v0_d6c2 = load i32, i32* @eax, align 4
  ret i32 %v0_d6c2
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d6c4:
  %v1_d6e4 = inttoptr i32 %arg2 to i32*
  %v2_d6e4 = load i32, i32* %v1_d6e4, align 4
  store i32 %v2_d6e4, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d6f7

bb:                                               ; preds = %dec_label_pc_d6c4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_d6f5 = call i32 @function_d6fc(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_d6f7

dec_label_pc_d6f7:                                ; preds = %bb, %dec_label_pc_d6c4
  %v4_d6f5 = phi i32 [ %v3_d6f5, %bb ], [ 0, %dec_label_pc_d6c4 ]
  ret i32 %v4_d6f5

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_d6fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d6fc:
  %v0_d6fd = load i32, i32* @eax, align 4
  ret i32 %v0_d6fd
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP12CDNSSeedDataSt6vectorIS1_SaIS1_EEE4baseEv() local_unnamed_addr {
dec_label_pc_d6fe:
  %eax.global-to-local = alloca i32, align 4
  %v5_d6fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_d6fe
}

define i32 @function_d728() local_unnamed_addr {
dec_label_pc_d728:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_d728 = load i32, i32* %ecx.global-to-local, align 4
  %v1_d728 = add i32 %v0_d728, -1
  store i32 %v1_d728, i32* %ecx.global-to-local, align 4
  %v0_d72a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d72a
}

define i32 @_ZSt13copy_backwardIP12CDNSSeedDataS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d72b:
  %v1_d755 = call i32 @unknown_1d0f8(i32 %arg2)
  %v1_d762 = call i32 @unknown_1d0f8(i32 %arg1)
  %v3_d775 = call i32 @unknown_1d12d(i32 %v1_d762, i32 %v1_d755, i32 %arg3)
  store i32 %v3_d775, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d786

bb:                                               ; preds = %dec_label_pc_d72b
  %v1_d784 = call i32 @function_d78b()
  br label %dec_label_pc_d786

dec_label_pc_d786:                                ; preds = %bb, %dec_label_pc_d72b
  %v2_d784 = phi i32 [ %v1_d784, %bb ], [ %v3_d775, %dec_label_pc_d72b ]
  ret i32 %v2_d784

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1d0f8, { 1, 0 }
}

define i32 @function_d78b() local_unnamed_addr {
dec_label_pc_d78b:
  %v0_d790 = load i32, i32* @eax, align 4
  ret i32 %v0_d790
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP12CDNSSeedDataSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_d792:
  %v2_d7ac = load i32, i32* %arg1, align 4
  store i32 %v2_d7ac, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d7ba

bb:                                               ; preds = %dec_label_pc_d792
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_d7b8 = call i32 @function_d7bf(i32 %tmp100)
  br label %dec_label_pc_d7ba

dec_label_pc_d7ba:                                ; preds = %bb, %dec_label_pc_d792
  %v3_d7b8 = phi i32 [ %v2_d7b8, %bb ], [ %v2_d7ac, %dec_label_pc_d792 ]
  ret i32 %v3_d7b8

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_d7bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d7bc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d7bf(i32 %arg1) local_unnamed_addr {
dec_label_pc_d7bf:
  %v0_d7c0 = load i32, i32* @eax, align 4
  ret i32 %v0_d7c0
}

define i32 @_ZNKSt6vectorI12CDNSSeedDataSaIS0_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d7c2:
  %v1_d7ec = call i32 @unknown_1d276(i32 %arg1)
  %v1_d7f9 = call i32 @unknown_1d236(i32 %arg1)
  %v2_d800 = sub i32 %v1_d7ec, %v1_d7f9
  %v7_d805 = icmp ult i32 %v2_d800, %arg2
  %v5_d80a = icmp eq i1 %v7_d805, false
  br i1 %v5_d80a, label %bb, label %dec_label_pc_d80e

bb:                                               ; preds = %dec_label_pc_d7c2
  %v1_d80c = call i32 @function_d819()
  br label %dec_label_pc_d80e

dec_label_pc_d80e:                                ; preds = %bb, %dec_label_pc_d7c2
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d819() local_unnamed_addr {
dec_label_pc_d819:
  %ebx.global-to-local = alloca i32, align 4
  %v0_d819 = load i32, i32* @ebp, align 4
  %v1_d819 = add i32 %v0_d819, -28
  %v2_d819 = inttoptr i32 %v1_d819 to i32*
  %v3_d819 = load i32, i32* %v2_d819, align 4
  %v1_d81f = call i32 @unknown_1d236(i32 %v3_d819)
  store i32 %v1_d81f, i32* %ebx.global-to-local, align 4
  %v0_d826 = load i32, i32* @ebp, align 4
  %v1_d826 = add i32 %v0_d826, -28
  %v2_d826 = inttoptr i32 %v1_d826 to i32*
  %v3_d826 = load i32, i32* %v2_d826, align 4
  %v1_d82c = call i32 @unknown_1d236(i32 %v3_d826)
  %v1_d831 = load i32, i32* @ebp, align 4
  %v2_d831 = add i32 %v1_d831, -20
  %v3_d831 = inttoptr i32 %v2_d831 to i32*
  store i32 %v1_d82c, i32* %v3_d831, align 4
  %v0_d834 = load i32, i32* @ebp, align 4
  %v1_d834 = add i32 %v0_d834, -32
  %v1_d83b = add i32 %v0_d834, -20
  %v2_d841 = call i32 @unknown_1b2b1(i32 %v1_d83b, i32 %v1_d834)
  %v1_d846 = inttoptr i32 %v2_d841 to i32*
  %v2_d846 = load i32, i32* %v1_d846, align 4
  %v1_d848 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d848 = add i32 %v1_d848, %v2_d846
  %v1_d84a = load i32, i32* @ebp, align 4
  %v2_d84a = add i32 %v1_d84a, -16
  %v3_d84a = inttoptr i32 %v2_d84a to i32*
  store i32 %v2_d848, i32* %v3_d84a, align 4
  %v0_d84d = load i32, i32* @ebp, align 4
  %v1_d84d = add i32 %v0_d84d, -28
  %v2_d84d = inttoptr i32 %v1_d84d to i32*
  %v3_d84d = load i32, i32* %v2_d84d, align 4
  %v1_d853 = call i32 @unknown_1d236(i32 %v3_d84d)
  %v1_d858 = load i32, i32* @ebp, align 4
  %v2_d858 = add i32 %v1_d858, -16
  %v3_d858 = inttoptr i32 %v2_d858 to i32*
  %v4_d858 = load i32, i32* %v3_d858, align 4
  %tmp5 = icmp ugt i32 %v1_d853, %v4_d858
  br i1 %tmp5, label %dec_label_pc_d86d, label %dec_label_pc_d85d

dec_label_pc_d85d:                                ; preds = %dec_label_pc_d819
  %v1_d85d = add i32 %v1_d858, -28
  %v2_d85d = inttoptr i32 %v1_d85d to i32*
  %v3_d85d = load i32, i32* %v2_d85d, align 4
  %v1_d863 = call i32 @unknown_1d276(i32 %v3_d85d)
  %v1_d868 = load i32, i32* @ebp, align 4
  %v2_d868 = add i32 %v1_d868, -16
  %v3_d868 = inttoptr i32 %v2_d868 to i32*
  %v4_d868 = load i32, i32* %v3_d868, align 4
  %v10_d868 = icmp ult i32 %v1_d863, %v4_d868
  %v1_d86b = icmp eq i1 %v10_d868, false
  br i1 %v1_d86b, label %dec_label_pc_d87d, label %dec_label_pc_d86d

dec_label_pc_d86d:                                ; preds = %dec_label_pc_d819, %dec_label_pc_d85d
  %v0_d86d = phi i32 [ %v1_d858, %dec_label_pc_d819 ], [ %v1_d868, %dec_label_pc_d85d ]
  %v1_d86d = add i32 %v0_d86d, -28
  %v2_d86d = inttoptr i32 %v1_d86d to i32*
  %v3_d86d = load i32, i32* %v2_d86d, align 4
  %v1_d873 = call i32 @unknown_1d276(i32 %v3_d86d)
  %v0_d87d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_d87d

dec_label_pc_d87d:                                ; preds = %dec_label_pc_d85d, %dec_label_pc_d86d
  %v0_d87d = phi i32 [ %v0_d87d.pre, %dec_label_pc_d86d ], [ %v1_d868, %dec_label_pc_d85d ]
  %storemerge = phi i32 [ %v1_d873, %dec_label_pc_d86d ], [ %v4_d868, %dec_label_pc_d85d ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_d87d = add i32 %v0_d87d, -12
  %v2_d87d = inttoptr i32 %v1_d87d to i32*
  %v3_d87d = load i32, i32* %v2_d87d, align 4
  %v1_d880 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d880 = icmp eq i32 %v1_d880, %v3_d87d
  br i1 %v3_d880, label %bb, label %dec_label_pc_d889

bb:                                               ; preds = %dec_label_pc_d87d
  %v1_d887 = call i32 @function_d88e()
  br label %dec_label_pc_d889

dec_label_pc_d889:                                ; preds = %bb, %dec_label_pc_d87d
  %v2_d887 = phi i32 [ %v1_d887, %bb ], [ %storemerge, %dec_label_pc_d87d ]
  ret i32 %v2_d887

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1d276, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_1d236, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d87d, { 1, 0 }
  uselistorder label %dec_label_pc_d86d, { 1, 0 }
}

define i32 @function_d88e() local_unnamed_addr {
dec_label_pc_d88e:
  %v0_d893 = load i32, i32* @eax, align 4
  ret i32 %v0_d893
}

define i32 @_ZNSt6vectorI12CDNSSeedDataSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d894:
  %v2_d8be = call i32 @unknown_1b2ba(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d8d2

bb:                                               ; preds = %dec_label_pc_d894
  %v1_d8d0 = call i32 @function_d8d7()
  br label %dec_label_pc_d8d2

dec_label_pc_d8d2:                                ; preds = %bb, %dec_label_pc_d894
  %v2_d8d0 = phi i32 [ %v1_d8d0, %bb ], [ %arg1, %dec_label_pc_d894 ]
  ret i32 %v2_d8d0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_d8d7() local_unnamed_addr {
dec_label_pc_d8d7:
  %v0_d8d8 = load i32, i32* @eax, align 4
  ret i32 %v0_d8d8
}

define i32 @_ZN9__gnu_cxxmiIP12CDNSSeedDataSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d8db:
  %v1_d8ff = call i32 @unknown_1afd9(i32 %arg1)
  %v1_d904 = inttoptr i32 %v1_d8ff to i32*
  %v2_d904 = load i32, i32* %v1_d904, align 4
  %v1_d90e = call i32 @unknown_1afd9(i32 %arg2)
  %v1_d913 = inttoptr i32 %v1_d90e to i32*
  %v2_d913 = load i32, i32* %v1_d913, align 4
  %v2_d917 = sub i32 %v2_d904, %v2_d913
  %v2_d91b = ashr i32 %v2_d917, ptrtoint (i64* @global_var_3.894 to i32)
  store i32 %v2_d91b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d92a

bb:                                               ; preds = %dec_label_pc_d8db
  %v1_d928 = call i32 @function_d92f()
  br label %dec_label_pc_d92a

dec_label_pc_d92a:                                ; preds = %bb, %dec_label_pc_d8db
  %v2_d928 = phi i32 [ %v1_d928, %bb ], [ %v2_d91b, %dec_label_pc_d8db ]
  ret i32 %v2_d928

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1afd9, { 1, 0 }
}

define i32 @function_d92f() local_unnamed_addr {
dec_label_pc_d92f:
  %v0_d934 = load i32, i32* @eax, align 4
  ret i32 %v0_d934
}

define i32 @_ZNSt12_Vector_baseI12CDNSSeedDataSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d936:
  %v10_d953 = icmp eq i32 %arg2, 0
  br i1 %v10_d953, label %dec_label_pc_d97a, label %dec_label_pc_d959

dec_label_pc_d959:                                ; preds = %dec_label_pc_d936
  %v3_d96e = call i32 @unknown_1d428(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_d97a

dec_label_pc_d97a:                                ; preds = %dec_label_pc_d936, %dec_label_pc_d959
  %storemerge = phi i32 [ %v3_d96e, %dec_label_pc_d959 ], [ 0, %dec_label_pc_d936 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d986

bb:                                               ; preds = %dec_label_pc_d97a
  %v1_d984 = call i32 @function_d98b()
  br label %dec_label_pc_d986

dec_label_pc_d986:                                ; preds = %bb, %dec_label_pc_d97a
  %v2_d984 = phi i32 [ %v1_d984, %bb ], [ %storemerge, %dec_label_pc_d97a ]
  ret i32 %v2_d984

; uselistorder directives
  uselistorder label %dec_label_pc_d97a, { 1, 0 }
}

define i32 @function_d98b() local_unnamed_addr {
dec_label_pc_d98b:
  %v0_d98c = load i32, i32* @eax, align 4
  ret i32 %v0_d98c
}

define i32 @_ZSt22__uninitialized_move_aIP12CDNSSeedDataS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d98d:
  %v8_d9d1 = call i32 @unknown_1d4dd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_d9d1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d9e2

bb:                                               ; preds = %dec_label_pc_d98d
  %v1_d9e0 = call i32 @function_d9e7()
  br label %dec_label_pc_d9e2

dec_label_pc_d9e2:                                ; preds = %bb, %dec_label_pc_d98d
  %v2_d9e0 = phi i32 [ %v1_d9e0, %bb ], [ %v8_d9d1, %dec_label_pc_d98d ]
  ret i32 %v2_d9e0

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d9e7() local_unnamed_addr {
dec_label_pc_d9e7:
  %v0_d9e8 = load i32, i32* @eax, align 4
  ret i32 %v0_d9e8
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CDNSSeedDataE7destroyEPS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d9ea:
  store i32 %arg2, i32* @eax, align 4
  %v1_da0d = call i32 @function_11a30(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_da1e

bb:                                               ; preds = %dec_label_pc_d9ea
  %v1_da1c = call i32 @function_da23()
  br label %dec_label_pc_da1e

dec_label_pc_da1e:                                ; preds = %bb, %dec_label_pc_d9ea
  %v2_da1c = phi i32 [ %v1_da1c, %bb ], [ 0, %dec_label_pc_d9ea ]
  ret i32 %v2_da1c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_da23() local_unnamed_addr {
dec_label_pc_da23:
  %v0_da24 = load i32, i32* @eax, align 4
  ret i32 %v0_da24
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP12CDNSSeedDataSt6vectorIS1_SaIS1_EEEC1ERKS2_() local_unnamed_addr {
dec_label_pc_da26:
  %eax.global-to-local = alloca i32, align 4
  %v17_da29 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_da29
}

define i32 @function_da2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_da2e:
  %v0_da2e = load i32, i32* @ecx, align 4
  %v1_da2e = add i32 %v0_da2e, 1166795845
  %v2_da2e = inttoptr i32 %v1_da2e to i8*
  %v3_da2e = load i8, i8* %v2_da2e, align 1
  %v5_da2e = trunc i32 %v0_da2e to i8
  %v6_da2e = or i8 %v3_da2e, %v5_da2e
  store i8 %v6_da2e, i8* %v2_da2e, align 1
  %v0_da36 = load i32, i32* @ebp, align 4
  %v1_da36 = add i32 %v0_da36, 1
  store i32 %v1_da36, i32* @ebp, align 4
  %v0_da39 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_da3e = add i32 %v0_da36, -11
  %v3_da3e = inttoptr i32 %v2_da3e to i32*
  store i32 %v0_da39, i32* %v3_da3e, align 4
  %v0_da43 = load i32, i32* @ebp, align 4
  %v1_da43 = add i32 %v0_da43, -32
  %v2_da43 = inttoptr i32 %v1_da43 to i32*
  %v3_da43 = load i32, i32* %v2_da43, align 4
  %v1_da46 = inttoptr i32 %v3_da43 to i32*
  %v2_da46 = load i32, i32* %v1_da46, align 4
  %v1_da48 = add i32 %v0_da43, -28
  %v2_da48 = inttoptr i32 %v1_da48 to i32*
  %v3_da48 = load i32, i32* %v2_da48, align 4
  %v2_da4b = inttoptr i32 %v3_da48 to i32*
  store i32 %v2_da46, i32* %v2_da4b, align 4
  %v0_da4d = load i32, i32* @ebp, align 4
  %v1_da4d = add i32 %v0_da4d, -12
  %v2_da4d = inttoptr i32 %v1_da4d to i32*
  %v3_da4d = load i32, i32* %v2_da4d, align 4
  %v1_da50 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_da50 = xor i32 %v1_da50, %v3_da4d
  %v3_da50 = icmp eq i32 %v2_da50, 0
  store i32 %v2_da50, i32* @eax, align 4
  br i1 %v3_da50, label %bb, label %dec_label_pc_da59

bb:                                               ; preds = %dec_label_pc_da2e
  %v1_da57 = call i32 @function_da5e()
  br label %dec_label_pc_da59

dec_label_pc_da59:                                ; preds = %bb, %dec_label_pc_da2e
  %v3_da57 = phi i32 [ %v1_da57, %bb ], [ %v2_da50, %dec_label_pc_da2e ]
  ret i32 %v3_da57
}

define i32 @function_da5e() local_unnamed_addr {
dec_label_pc_da5e:
  %v0_da5f = load i32, i32* @eax, align 4
  ret i32 %v0_da5f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_da60:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_da72 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp101, i32* @eax, align 4
  %v1_da83 = call i32 @function_ef5e(i32 %tmp101)
  store i32 ptrtoint (%vtable_12370_type* @global_var_12370.923 to i32), i32* %arg1, align 4
  %v2_da97 = add i32 %tmp101, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_da97 = inttoptr i32 %v2_da97 to i32*
  store i32 %arg2, i32* %v3_da97, align 4
  ret i32 %v0_da72

; uselistorder directives
  uselistorder i32 %tmp101, { 2, 1, 0 }
}

define i32 @function_daaa() local_unnamed_addr {
dec_label_pc_daaa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_daaa = load i32, i32* %ecx.global-to-local, align 4
  %v1_daaa = add i32 %v0_daaa, -1
  store i32 %v1_daaa, i32* %ecx.global-to-local, align 4
  %v0_daac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_daac
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_daad:
  %v10_dac4 = icmp eq i32* %arg1, null
  br i1 %v10_dac4, label %dec_label_pc_dadc, label %dec_label_pc_daca

dec_label_pc_daca:                                ; preds = %dec_label_pc_daad
  br label %dec_label_pc_dadc

dec_label_pc_dadc:                                ; preds = %dec_label_pc_daca, %dec_label_pc_daad
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dae8

bb:                                               ; preds = %dec_label_pc_dadc
  %v1_dae6 = call i32 @function_daed()
  br label %dec_label_pc_dae8

dec_label_pc_dae8:                                ; preds = %bb, %dec_label_pc_dadc
  %v2_dae6 = phi i32 [ %v1_dae6, %bb ], [ 0, %dec_label_pc_dadc ]
  ret i32 %v2_dae6
}

define i32 @function_daed() local_unnamed_addr {
dec_label_pc_daed:
  %v0_daee = load i32, i32* @eax, align 4
  ret i32 %v0_daee
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_daef:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_db0f = load i32, i32* %arg1, align 4
  %v1_db14 = inttoptr i32 %arg2 to i32*
  %v2_db14 = load i32, i32* %v1_db14, align 4
  %v7_db16 = icmp ult i32 %v2_db0f, %v2_db14
  %v1_db18 = icmp eq i1 %v7_db16, false
  %storemerge = select i1 %v1_db18, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_db2e

bb:                                               ; preds = %dec_label_pc_daef
  %v1_db2c = call i32 @function_db33()
  br label %dec_label_pc_db2e

dec_label_pc_db2e:                                ; preds = %bb, %dec_label_pc_daef
  %v2_db2c = phi i32 [ %v1_db2c, %bb ], [ %storemerge, %dec_label_pc_daef ]
  ret i32 %v2_db2c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_db33() local_unnamed_addr {
dec_label_pc_db33:
  %v0_db34 = load i32, i32* @eax, align 4
  ret i32 %v0_db34
}

define i32 @_ZNSaIhEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_db36:
  %v2_db60 = call i32 @unknown_1d6dc(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_db71

bb:                                               ; preds = %dec_label_pc_db36
  %v1_db6f = call i32 @function_db76()
  br label %dec_label_pc_db71

dec_label_pc_db71:                                ; preds = %bb, %dec_label_pc_db36
  %v2_db6f = phi i32 [ %v1_db6f, %bb ], [ 0, %dec_label_pc_db36 ]
  ret i32 %v2_db6f
}

define i32 @function_db76() local_unnamed_addr {
dec_label_pc_db76:
  %v0_db77 = load i32, i32* @eax, align 4
  ret i32 %v0_db77
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_db78:
  %v1_dba1 = call i32 @unknown_1d74e(i32 %arg1)
  %v10_dba6 = icmp ult i32 %v1_dba1, %arg2
  %v1_dba9 = zext i1 %v10_dba6 to i32
  %v3_dba9 = and i32 %v1_dba1, -256
  %v4_dba9 = or i32 %v1_dba9, %v3_dba9
  %v5_dbac = icmp eq i1 %v10_dba6, false
  br i1 %v5_dbac, label %bb, label %dec_label_pc_dbb0

bb:                                               ; preds = %dec_label_pc_db78
  %v1_dbae = call i32 @function_dbb5()
  br label %dec_label_pc_dbb0

dec_label_pc_dbb0:                                ; preds = %bb, %dec_label_pc_db78
  %v2_dbae = phi i32 [ %v1_dbae, %bb ], [ %v4_dba9, %dec_label_pc_db78 ]
  ret i32 %v2_dbae

; uselistorder directives
  uselistorder i1 %v10_dba6, { 1, 0 }
}

define i32 @function_dbb5() local_unnamed_addr {
dec_label_pc_dbb5:
  %v0_dbb5 = load i32, i32* @ebp, align 4
  %v1_dbb5 = add i32 %v0_dbb5, -32
  %v2_dbb5 = inttoptr i32 %v1_dbb5 to i32*
  %v3_dbb5 = load i32, i32* %v2_dbb5, align 4
  ret i32 %v3_dbb5
}

define i32 @function_dbd0() local_unnamed_addr {
dec_label_pc_dbd0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_dbd0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_dbd0 = add i32 %v0_dbd0, -1
  store i32 %v1_dbd0, i32* %ecx.global-to-local, align 4
  %v0_dbd2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dbd2
}

define i32 @_ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dbd3:
  %v3_dc0a = call i32 @unknown_1d7d8(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dc1b

bb:                                               ; preds = %dec_label_pc_dbd3
  %v1_dc19 = call i32 @function_dc20()
  br label %dec_label_pc_dc1b

dec_label_pc_dc1b:                                ; preds = %bb, %dec_label_pc_dbd3
  %v2_dc19 = phi i32 [ %v1_dc19, %bb ], [ 0, %dec_label_pc_dbd3 ]
  ret i32 %v2_dc19
}

define i32 @function_dc20() local_unnamed_addr {
dec_label_pc_dc20:
  %v0_dc21 = load i32, i32* @eax, align 4
  ret i32 %v0_dc21
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc22:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dc4b

bb:                                               ; preds = %dec_label_pc_dc22
  %v3_dc49 = call i32 @function_dc50(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_dc4b

dec_label_pc_dc4b:                                ; preds = %bb, %dec_label_pc_dc22
  %v4_dc49 = phi i32 [ %v3_dc49, %bb ], [ 0, %dec_label_pc_dc22 ]
  ret i32 %v4_dc49
}

define i32 @function_dc50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc50:
  %v0_dc51 = load i32, i32* @eax, align 4
  ret i32 %v0_dc51
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dc52:
  %v3_dc89 = call i32 @unknown_1bee9(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_dc89
}

define i32 @function_dc90(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc90:
  %v0_dc91 = load i32, i32* @edx, align 4
  %v1_dc91 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_dc91 = icmp eq i32 %v1_dc91, %v0_dc91
  br i1 %v3_dc91, label %bb, label %dec_label_pc_dc90.dec_label_pc_dc9a_crit_edge

dec_label_pc_dc90.dec_label_pc_dc9a_crit_edge:    ; preds = %dec_label_pc_dc90
  %v2_dc98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dc9a

bb:                                               ; preds = %dec_label_pc_dc90
  %v1_dc98 = call i32 @function_dc9f()
  br label %dec_label_pc_dc9a

dec_label_pc_dc9a:                                ; preds = %dec_label_pc_dc90.dec_label_pc_dc9a_crit_edge, %bb
  %v2_dc98 = phi i32 [ %v2_dc98.pre, %dec_label_pc_dc90.dec_label_pc_dc9a_crit_edge ], [ %v1_dc98, %bb ]
  ret i32 %v2_dc98

; uselistorder directives
  uselistorder label %dec_label_pc_dc9a, { 1, 0 }
}

define i32 @function_dc9f() local_unnamed_addr {
dec_label_pc_dc9f:
  %v0_dca0 = load i32, i32* @eax, align 4
  ret i32 %v0_dca0
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb0EE7_S_baseES6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dca1:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dcd5

bb:                                               ; preds = %dec_label_pc_dca1
  %v3_dcd3 = call i32 @function_dcda(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_dcd5

dec_label_pc_dcd5:                                ; preds = %bb, %dec_label_pc_dca1
  %v4_dcd3 = phi i32 [ %v3_dcd3, %bb ], [ %tmp102, %dec_label_pc_dca1 ]
  ret i32 %v4_dcd3
}

define i32 @function_dcda(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dcda:
  %v0_dcdb = load i32, i32* @eax, align 4
  ret i32 %v0_dcdb
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcde:
  ret i32 0
}

define i32 @function_dcf6(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcf6:
  %v0_dcf6 = load i32, i32* @ebp, align 4
  %v1_dcf6 = add i32 %v0_dcf6, 1
  store i32 %v1_dcf6, i32* @ebp, align 4
  %v0_dcfb = call i32 @unknown_1d932()
  store i32 %v0_dcfb, i32* @eax, align 4
  %v0_dd00 = load i32, i32* @ebp, align 4
  %v1_dd00 = add i32 %v0_dd00, -12
  %v2_dd00 = inttoptr i32 %v1_dd00 to i32*
  %v3_dd00 = load i32, i32* %v2_dd00, align 4
  %v1_dd03 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_dd03 = icmp eq i32 %v1_dd03, %v3_dd00
  br i1 %v3_dd03, label %bb, label %dec_label_pc_dd0c

bb:                                               ; preds = %dec_label_pc_dcf6
  %v1_dd0a = call i32 @function_dd11()
  br label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %bb, %dec_label_pc_dcf6
  %v2_dd0a = phi i32 [ %v1_dd0a, %bb ], [ %v0_dcfb, %dec_label_pc_dcf6 ]
  ret i32 %v2_dd0a
}

define i32 @function_dd11() local_unnamed_addr {
dec_label_pc_dd11:
  %v0_dd12 = load i32, i32* @eax, align 4
  ret i32 %v0_dd12
}

define i32 @_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dd13:
  ret i32 %arg2
}

define i32 @function_dd44(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd44:
  %v0_dd44 = load i32, i32* @eax, align 4
  %v0_dd48 = load i32, i32* @ebp, align 4
  %v1_dd48 = add i32 %v0_dd48, -28
  %v2_dd48 = inttoptr i32 %v1_dd48 to i32*
  %v3_dd48 = load i32, i32* %v2_dd48, align 4
  %v2_dd4e = call i32 @unknown_1d99e(i32 %v3_dd48, i32 %v0_dd44)
  store i32 %v2_dd4e, i32* @eax, align 4
  %v0_dd53 = load i32, i32* @ebp, align 4
  %v1_dd53 = add i32 %v0_dd53, -12
  %v2_dd53 = inttoptr i32 %v1_dd53 to i32*
  %v3_dd53 = load i32, i32* %v2_dd53, align 4
  %v1_dd56 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_dd56 = icmp eq i32 %v1_dd56, %v3_dd53
  br i1 %v3_dd56, label %bb, label %dec_label_pc_dd5f

bb:                                               ; preds = %dec_label_pc_dd44
  %v1_dd5d = call i32 @function_dd64()
  br label %dec_label_pc_dd5f

dec_label_pc_dd5f:                                ; preds = %bb, %dec_label_pc_dd44
  %v2_dd5d = phi i32 [ %v1_dd5d, %bb ], [ %v2_dd4e, %dec_label_pc_dd44 ]
  ret i32 %v2_dd5d
}

define i32 @function_dd64() local_unnamed_addr {
dec_label_pc_dd64:
  %v0_dd65 = load i32, i32* @eax, align 4
  ret i32 %v0_dd65
}

define i32 @_ZNSt11__iter_swapILb1EE9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES8_EEvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dd66:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_dd84 = ptrtoint i32* %stack_var_-36 to i32
  %v1_dd8a = call i32 @unknown_16184(i32 %v2_dd84)
  %v2_dd91 = ptrtoint i32* %stack_var_-32 to i32
  %v1_dd97 = call i32 @unknown_16184(i32 %v2_dd91)
  %v2_dda3 = call i32 @unknown_1da5b(i32 %v1_dd97, i32 %v1_dd8a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ddb4

bb:                                               ; preds = %dec_label_pc_dd66
  %v1_ddb2 = call i32 @function_ddb9()
  br label %dec_label_pc_ddb4

dec_label_pc_ddb4:                                ; preds = %bb, %dec_label_pc_dd66
  %v2_ddb2 = phi i32 [ %v1_ddb2, %bb ], [ 0, %dec_label_pc_dd66 ]
  ret i32 %v2_ddb2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_16184, { 1, 0 }
}

define i32 @function_ddb9() local_unnamed_addr {
dec_label_pc_ddb9:
  %v0_ddbe = load i32, i32* @eax, align 4
  ret i32 %v0_ddbe
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ddbf:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_dde8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dde8:
  %v0_ddea = load i32, i32* @edx, align 4
  %v1_ddea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ddea = icmp eq i32 %v1_ddea, %v0_ddea
  br i1 %v3_ddea, label %bb, label %dec_label_pc_dde8.dec_label_pc_ddf3_crit_edge

dec_label_pc_dde8.dec_label_pc_ddf3_crit_edge:    ; preds = %dec_label_pc_dde8
  %v2_ddf1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_ddf3

bb:                                               ; preds = %dec_label_pc_dde8
  %v1_ddf1 = call i32 @function_ddf8()
  br label %dec_label_pc_ddf3

dec_label_pc_ddf3:                                ; preds = %dec_label_pc_dde8.dec_label_pc_ddf3_crit_edge, %bb
  %v2_ddf1 = phi i32 [ %v2_ddf1.pre, %dec_label_pc_dde8.dec_label_pc_ddf3_crit_edge ], [ %v1_ddf1, %bb ]
  ret i32 %v2_ddf1

; uselistorder directives
  uselistorder label %dec_label_pc_ddf3, { 1, 0 }
}

define i32 @function_ddf8() local_unnamed_addr {
dec_label_pc_ddf8:
  %v0_ddf9 = load i32, i32* @eax, align 4
  ret i32 %v0_ddf9
}

define i32 @_ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ddfc:
  ret i32 %arg2
}

define i32 @function_de2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_de2e:
  %v0_de31 = load i32, i32* @ebp, align 4
  %v1_de31 = add i32 %v0_de31, -28
  %v2_de31 = inttoptr i32 %v1_de31 to i32*
  %v3_de31 = load i32, i32* %v2_de31, align 4
  %v1_de37 = call i32 @unknown_1da87(i32 %v3_de31)
  store i32 %v1_de37, i32* @eax, align 4
  %v0_de3c = load i32, i32* @ebp, align 4
  %v1_de3c = add i32 %v0_de3c, -12
  %v2_de3c = inttoptr i32 %v1_de3c to i32*
  %v3_de3c = load i32, i32* %v2_de3c, align 4
  %v1_de3f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_de3f = icmp eq i32 %v1_de3f, %v3_de3c
  br i1 %v3_de3f, label %bb, label %dec_label_pc_de48

bb:                                               ; preds = %dec_label_pc_de2e
  %v1_de46 = call i32 @function_de4d()
  br label %dec_label_pc_de48

dec_label_pc_de48:                                ; preds = %bb, %dec_label_pc_de2e
  %v2_de46 = phi i32 [ %v1_de46, %bb ], [ %v1_de37, %dec_label_pc_de2e ]
  ret i32 %v2_de46
}

define i32 @function_de4d() local_unnamed_addr {
dec_label_pc_de4d:
  %v0_de4e = load i32, i32* @eax, align 4
  ret i32 %v0_de4e
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_de4f:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_de78

bb:                                               ; preds = %dec_label_pc_de4f
  %v3_de76 = call i32 @function_de7d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %bb, %dec_label_pc_de4f
  %v4_de76 = phi i32 [ %v3_de76, %bb ], [ 0, %dec_label_pc_de4f ]
  ret i32 %v4_de76
}

define i32 @function_de7d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_de7d:
  %v0_de7e = load i32, i32* @eax, align 4
  ret i32 %v0_de7e
}

define i32 @_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_de7f:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dea5

bb:                                               ; preds = %dec_label_pc_de7f
  %v2_dea3 = call i32 @function_deaa(i32 %arg1)
  br label %dec_label_pc_dea5

dec_label_pc_dea5:                                ; preds = %bb, %dec_label_pc_de7f
  %v3_dea3 = phi i32 [ %v2_dea3, %bb ], [ %arg1, %dec_label_pc_de7f ]
  ret i32 %v3_dea3
}

define i32 @function_deaa(i32 %arg1) local_unnamed_addr {
dec_label_pc_deaa:
  %v0_deab = load i32, i32* @eax, align 4
  ret i32 %v0_deab
}

define i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_deac:
  %v1_dec9 = call i32 @unknown_1bd2b(i32 %arg1)
  store i32 %v1_dec9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_deda

bb:                                               ; preds = %dec_label_pc_deac
  %v1_ded8 = call i32 @function_dedf()
  br label %dec_label_pc_deda

dec_label_pc_deda:                                ; preds = %bb, %dec_label_pc_deac
  %v2_ded8 = phi i32 [ %v1_ded8, %bb ], [ %v1_dec9, %dec_label_pc_deac ]
  ret i32 %v2_ded8
}

define i32 @function_dedf() local_unnamed_addr {
dec_label_pc_dedf:
  %v0_dee0 = load i32, i32* @eax, align 4
  ret i32 %v0_dee0
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dee1:
  %v3_df18 = call i32 @unknown_16882(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_df18
}

define i32 @function_df28() local_unnamed_addr {
dec_label_pc_df28:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_df2d() local_unnamed_addr {
dec_label_pc_df2d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_df2d = load i32, i32* %ecx.global-to-local, align 4
  %v1_df2d = add i32 %v0_df2d, -1
  store i32 %v1_df2d, i32* %ecx.global-to-local, align 4
  %v0_df2f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_df2f
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_df30:
  %v1_df5b = call i32 @unknown_1bddc(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_df6a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_df6a:
  %v0_df6c = load i32, i32* @ecx, align 4
  %v1_df6c = add i32 %v0_df6c, -465204285
  %v2_df6c = inttoptr i32 %v1_df6c to i8*
  %v3_df6c = load i8, i8* %v2_df6c, align 1
  %v5_df6c = trunc i32 %v0_df6c to i8
  %v6_df6c = add i8 %v3_df6c, %v5_df6c
  store i8 %v6_df6c, i8* %v2_df6c, align 1
  %v0_df72 = load i32, i32* @eax, align 4
  %v1_df75 = call i32 @unknown_1bddc(i32 %v0_df72)
  %v0_df7a = load i32, i32* @esi, align 4
  %v0_df7e = load i32, i32* @ebx, align 4
  %v3_df85 = call i32 @unknown_1dc72(i32 %v1_df75, i32 %v0_df7e, i32 %v0_df7a)
  store i32 %v3_df85, i32* @eax, align 4
  %v0_df8a = load i32, i32* @ebp, align 4
  %v1_df8a = add i32 %v0_df8a, -12
  %v2_df8a = inttoptr i32 %v1_df8a to i32*
  %v3_df8a = load i32, i32* %v2_df8a, align 4
  %v1_df8d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_df8d = icmp eq i32 %v1_df8d, %v3_df8a
  br i1 %v3_df8d, label %bb, label %dec_label_pc_df96

bb:                                               ; preds = %dec_label_pc_df6a
  %v1_df94 = call i32 @function_df9b()
  br label %dec_label_pc_df96

dec_label_pc_df96:                                ; preds = %bb, %dec_label_pc_df6a
  %v2_df94 = phi i32 [ %v1_df94, %bb ], [ %v3_df85, %dec_label_pc_df6a ]
  ret i32 %v2_df94
}

define i32 @function_df9b() local_unnamed_addr {
dec_label_pc_df9b:
  %v0_dfa1 = load i32, i32* @eax, align 4
  ret i32 %v0_dfa1
}

define i32 @_ZNKSt6vectorIhSaIhEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfa2:
  %v1_dfbf = call i32 @unknown_16460(i32 %arg1)
  %v1_dfc7 = call i32 @unknown_1db78(i32 %v1_dfbf)
  store i32 %v1_dfc7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dfd8

bb:                                               ; preds = %dec_label_pc_dfa2
  %v1_dfd6 = call i32 @function_dfdd()
  br label %dec_label_pc_dfd8

dec_label_pc_dfd8:                                ; preds = %bb, %dec_label_pc_dfa2
  %v2_dfd6 = phi i32 [ %v1_dfd6, %bb ], [ %v1_dfc7, %dec_label_pc_dfa2 ]
  ret i32 %v2_dfd6
}

define i32 @function_dfdd() local_unnamed_addr {
dec_label_pc_dfdd:
  %v0_dfde = load i32, i32* @eax, align 4
  ret i32 %v0_dfde
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dfdf:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_dffd = ptrtoint i32* %stack_var_-37 to i32
  %v2_e000 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e00a = call i32 @unknown_1dd74(i32 %v2_dffd, i32 %v2_e000)
  %v0_e012 = load i32, i32* %ebx.global-to-local, align 4
  %v3_e01d = load i32, i32* %stack_var_-32, align 4
  %v3_e023 = call i32 @unknown_1dda9(i32 %v3_e01d, i32 %arg2, i32 %v0_e012)
  store i32 %v3_e023, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e034

bb:                                               ; preds = %dec_label_pc_dfdf
  %v1_e032 = call i32 @function_e039()
  br label %dec_label_pc_e034

dec_label_pc_e034:                                ; preds = %bb, %dec_label_pc_dfdf
  %v2_e032 = phi i32 [ %v1_e032, %bb ], [ %v3_e023, %dec_label_pc_dfdf ]
  ret i32 %v2_e032
}

define i32 @function_e039() local_unnamed_addr {
dec_label_pc_e039:
  %v0_e03d = load i32, i32* @eax, align 4
  ret i32 %v0_e03d
}

define i32 @_ZSt8distanceIPKhENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e03e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_e05c = ptrtoint i32* %stack_var_-37 to i32
  %v2_e05f = ptrtoint i32* %stack_var_-32 to i32
  %v2_e069 = call i32 @unknown_1de51(i32 %v2_e05c, i32 %v2_e05f)
  %v3_e071 = load i32, i32* %stack_var_-32, align 4
  %v0_e074 = load i32, i32* %ebx.global-to-local, align 4
  %v3_e082 = call i32 @unknown_1de86(i32 %v3_e071, i32 %arg2, i32 %v0_e074)
  store i32 %v3_e082, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e093

bb:                                               ; preds = %dec_label_pc_e03e
  %v1_e091 = call i32 @function_e098()
  br label %dec_label_pc_e093

dec_label_pc_e093:                                ; preds = %bb, %dec_label_pc_e03e
  %v2_e091 = phi i32 [ %v1_e091, %bb ], [ %v3_e082, %dec_label_pc_e03e ]
  ret i32 %v2_e091
}

define i32 @function_e098() local_unnamed_addr {
dec_label_pc_e098:
  %v0_e09c = load i32, i32* @eax, align 4
  ret i32 %v0_e09c
}

define i32 @_ZSt22__uninitialized_copy_aIPKhPhhET0_T_S4_S3_RSaIT1_E() local_unnamed_addr {
dec_label_pc_e09d:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v7_e0da = call i32 @unknown_1df28(i32 %tmp11, i32 %tmp9, i32 %tmp7, i32 %tmp5, i32 %tmp7, i32 %tmp9, i32 %tmp11)
  store i32 %v7_e0da, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e0eb

bb:                                               ; preds = %dec_label_pc_e09d
  %v1_e0e9 = call i32 @function_e0f0()
  br label %dec_label_pc_e0eb

dec_label_pc_e0eb:                                ; preds = %bb, %dec_label_pc_e09d
  %v2_e0e9 = phi i32 [ %v1_e0e9, %bb ], [ %v7_e0da, %dec_label_pc_e09d ]
  ret i32 %v2_e0e9

; uselistorder directives
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_e0f0() local_unnamed_addr {
dec_label_pc_e0f0:
  %v0_e0f1 = load i32, i32* @eax, align 4
  ret i32 %v0_e0f1
}

define i32 @_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e0f2:
  ret i32 0
}

define i32 @function_e112(i32 %arg1) local_unnamed_addr {
dec_label_pc_e112:
  %v0_e112 = load i32, i32* @ecx, align 4
  %v1_e112 = add i32 %v0_e112, -1
  store i32 %v1_e112, i32* @ecx, align 4
  %v2_e112 = icmp eq i32 %v1_e112, 0
  %v3_e112 = load i1, i1* @zf, align 1
  %v4_e112 = or i1 %v2_e112, %v3_e112
  br i1 %v4_e112, label %dec_label_pc_e112.dec_label_pc_e114_crit_edge, label %bb

dec_label_pc_e112.dec_label_pc_e114_crit_edge:    ; preds = %dec_label_pc_e112
  %v15_e114.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e114

bb:                                               ; preds = %dec_label_pc_e112
  %v6_e112 = call i32 @_ZSt22__uninitialized_copy_aIPKhPhhET0_T_S4_S3_RSaIT1_E()
  br label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e112.dec_label_pc_e114_crit_edge, %bb
  %v15_e114 = phi i32 [ %v15_e114.pre, %dec_label_pc_e112.dec_label_pc_e114_crit_edge ], [ %v6_e112, %bb ]
  %v0_e114 = load i32, i32* @ebp, align 4
  %v1_e114 = add i32 %v0_e114, 1
  store i32 %v1_e114, i32* @ebp, align 4
  ret i32 %v15_e114

; uselistorder directives
  uselistorder i32 %v1_e112, { 1, 0 }
  uselistorder label %dec_label_pc_e114, { 1, 0 }
}

define i32 @function_e152() local_unnamed_addr {
dec_label_pc_e152:
  %eax.global-to-local = alloca i32, align 4
  %v0_e156 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e156
}

define i32 @_ZSt8distanceIPhENSt15iterator_traitsIT_E15difference_typeES2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e157:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_e175 = ptrtoint i32* %stack_var_-37 to i32
  %v2_e178 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e182 = call i32 @unknown_1e07a(i32 %v2_e175, i32 %v2_e178)
  %v3_e18a = load i32, i32* %stack_var_-32, align 4
  %v0_e18d = load i32, i32* %ebx.global-to-local, align 4
  %v3_e19b = call i32 @unknown_1e0af(i32 %v3_e18a, i32 %arg2, i32 %v0_e18d)
  store i32 %v3_e19b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e1ac

bb:                                               ; preds = %dec_label_pc_e157
  %v1_e1aa = call i32 @function_e1b1()
  br label %dec_label_pc_e1ac

dec_label_pc_e1ac:                                ; preds = %bb, %dec_label_pc_e157
  %v2_e1aa = phi i32 [ %v1_e1aa, %bb ], [ %v3_e19b, %dec_label_pc_e157 ]
  ret i32 %v2_e1aa
}

define i32 @function_e1b1() local_unnamed_addr {
dec_label_pc_e1b1:
  %v0_e1b5 = load i32, i32* @eax, align 4
  ret i32 %v0_e1b5
}

define i32 @_ZSt4copyIPhN9__gnu_cxx17__normal_iteratorIS0_St6vectorIhSaIhEEEEET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e1b6:
  ret i32 %arg4
}

define i32 @function_e1d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e1d8:
  %v2_e1d8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e1d8 = load i32, i32* @eax, align 4
  %v4_e1d8 = trunc i32 %v3_e1d8 to i8
  %v5_e1d8 = add i8 %v4_e1d8, %v2_e1d8
  %v21_e1d8 = inttoptr i32 %v3_e1d8 to i8*
  store i8 %v5_e1d8, i8* %v21_e1d8, align 1
  %v0_e1da = load i32, i32* @ecx, align 4
  %v1_e1da = add i32 %v0_e1da, -1070468027
  %v2_e1da = inttoptr i32 %v1_e1da to i8*
  %v3_e1da = load i8, i8* %v2_e1da, align 1
  %v5_e1da = trunc i32 %v0_e1da to i8
  %v6_e1da = add i8 %v3_e1da, %v5_e1da
  store i8 %v6_e1da, i8* %v2_e1da, align 1
  %v0_e1e0 = load i32, i32* @ebp, align 4
  %v1_e1e0 = add i32 %v0_e1e0, -36
  %v2_e1e0 = inttoptr i32 %v1_e1e0 to i32*
  %v3_e1e0 = load i32, i32* %v2_e1e0, align 4
  %v1_e1e6 = call i32 @unknown_19071(i32 %v3_e1e0)
  store i32 %v1_e1e6, i32* @ebx, align 4
  %v0_e1ed = load i32, i32* @ebp, align 4
  %v1_e1ed = add i32 %v0_e1ed, -32
  %v2_e1ed = inttoptr i32 %v1_e1ed to i32*
  %v3_e1ed = load i32, i32* %v2_e1ed, align 4
  %v1_e1f3 = call i32 @unknown_19071(i32 %v3_e1ed)
  store i32 %v1_e1f3, i32* @edx, align 4
  %v0_e1fa = load i32, i32* @ebp, align 4
  %v1_e1fa = add i32 %v0_e1fa, -28
  %v2_e1fa = inttoptr i32 %v1_e1fa to i32*
  %v3_e1fa = load i32, i32* %v2_e1fa, align 4
  %v1_e1fd = add i32 %v0_e1fa, -40
  %v2_e1fd = inttoptr i32 %v1_e1fd to i32*
  %v3_e1fd = load i32, i32* %v2_e1fd, align 4
  store i32 %v3_e1fd, i32* @ecx, align 4
  %v0_e204 = load i32, i32* @ebx, align 4
  %v4_e20f = call i32 @unknown_1e151(i32 %v3_e1fa, i32 %v1_e1f3, i32 %v0_e204, i32 %v3_e1fd)
  %v0_e217 = load i32, i32* @ebp, align 4
  %v1_e217 = add i32 %v0_e217, -28
  %v2_e217 = inttoptr i32 %v1_e217 to i32*
  %v3_e217 = load i32, i32* %v2_e217, align 4
  ret i32 %v3_e217

; uselistorder directives
  uselistorder i32 (i32)* @unknown_19071, { 1, 0 }
}

define i32 @function_e21a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e21a:
  %v0_e21a = load i32, i32* @ebp, align 4
  %v1_e21a = add i32 %v0_e21a, -12
  %v2_e21a = inttoptr i32 %v1_e21a to i32*
  %v3_e21a = load i32, i32* %v2_e21a, align 4
  %v1_e21d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e21d = icmp eq i32 %v1_e21d, %v3_e21a
  br i1 %v3_e21d, label %bb, label %dec_label_pc_e21a.dec_label_pc_e226_crit_edge

dec_label_pc_e21a.dec_label_pc_e226_crit_edge:    ; preds = %dec_label_pc_e21a
  %v2_e224.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e226

bb:                                               ; preds = %dec_label_pc_e21a
  %v1_e224 = call i32 @function_e22b()
  br label %dec_label_pc_e226

dec_label_pc_e226:                                ; preds = %dec_label_pc_e21a.dec_label_pc_e226_crit_edge, %bb
  %v2_e224 = phi i32 [ %v2_e224.pre, %dec_label_pc_e21a.dec_label_pc_e226_crit_edge ], [ %v1_e224, %bb ]
  ret i32 %v2_e224

; uselistorder directives
  uselistorder label %dec_label_pc_e226, { 1, 0 }
}

define i32 @function_e22b() local_unnamed_addr {
dec_label_pc_e22b:
  %v0_e22b = load i32, i32* @ebp, align 4
  %v1_e22b = add i32 %v0_e22b, -4
  %v2_e22b = inttoptr i32 %v1_e22b to i32*
  %v3_e22b = load i32, i32* %v2_e22b, align 4
  store i32 %v3_e22b, i32* @ebx, align 4
  %v0_e22f = load i32, i32* @eax, align 4
  ret i32 %v0_e22f

; uselistorder directives
  uselistorder i32 -4, { 2, 0, 1, 3 }
}

define i32 @_ZSt7advanceIPhjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e232:
  %stack_var_-37 = alloca i32, align 4
  %v2_e256 = ptrtoint i32* %stack_var_-37 to i32
  ret i32 %v2_e256
}

define i32 @function_e25c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e25c:
  %v0_e25c = load i32, i32* @edx, align 4
  %v0_e260 = load i32, i32* @eax, align 4
  %v2_e263 = call i32 @unknown_1e155(i32 %v0_e260, i32 %v0_e25c)
  %v0_e26b = load i32, i32* @ebx, align 4
  %v0_e26f = load i32, i32* @ebp, align 4
  %v1_e26f = add i32 %v0_e26f, -16
  %v2_e26f = inttoptr i32 %v1_e26f to i32*
  %v3_e26f = load i32, i32* %v2_e26f, align 4
  %v1_e276 = add i32 %v0_e26f, -28
  %v2_e276 = inttoptr i32 %v1_e276 to i32*
  %v3_e276 = load i32, i32* %v2_e276, align 4
  %v3_e27c = call i32 @unknown_1e25f(i32 %v3_e276, i32 %v3_e26f, i32 %v0_e26b)
  %v0_e281 = load i32, i32* @ebp, align 4
  %v1_e281 = add i32 %v0_e281, -12
  %v2_e281 = inttoptr i32 %v1_e281 to i32*
  %v3_e281 = load i32, i32* %v2_e281, align 4
  %v1_e284 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e284 = xor i32 %v1_e284, %v3_e281
  %v3_e284 = icmp eq i32 %v2_e284, 0
  store i32 %v2_e284, i32* @eax, align 4
  br i1 %v3_e284, label %bb, label %dec_label_pc_e28d

bb:                                               ; preds = %dec_label_pc_e25c
  %v1_e28b = call i32 @function_e292()
  br label %dec_label_pc_e28d

dec_label_pc_e28d:                                ; preds = %bb, %dec_label_pc_e25c
  %v2_e28b = phi i32 [ %v1_e28b, %bb ], [ %v2_e284, %dec_label_pc_e25c ]
  ret i32 %v2_e28b
}

define i32 @function_e292() local_unnamed_addr {
dec_label_pc_e292:
  %v0_e296 = load i32, i32* @eax, align 4
  ret i32 %v0_e296
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e297:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_e2ba = ptrtoint i32* %stack_var_-20 to i32
  %v2_e2c7 = call i32 @unknown_19034(i32 %v2_e2ba, i32 %arg2)
  %v2_e2cf = ptrtoint i32* %stack_var_-24 to i32
  %v2_e2dc = call i32 @unknown_19034(i32 %v2_e2cf, i32 %arg1)
  %v3_e2eb = load i32, i32* %stack_var_-20, align 4
  %v3_e2f2 = load i32, i32* %stack_var_-24, align 4
  %v3_e2f8 = call i32 @unknown_1e33f(i32 %v3_e2f2, i32 %v3_e2eb, i32 %arg3)
  store i32 %v3_e2f8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e309

bb:                                               ; preds = %dec_label_pc_e297
  %v1_e307 = call i32 @function_e30e()
  br label %dec_label_pc_e309

dec_label_pc_e309:                                ; preds = %bb, %dec_label_pc_e297
  %v2_e307 = phi i32 [ %v1_e307, %bb ], [ %v3_e2f8, %dec_label_pc_e297 ]
  ret i32 %v2_e307

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_19034, { 1, 0 }
}

define i32 @function_e30e() local_unnamed_addr {
dec_label_pc_e30e:
  %v0_e30f = load i32, i32* @eax, align 4
  ret i32 %v0_e30f
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_e310:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_e327 = ptrtoint i32* %stack_var_-32 to i32
  %v1_e32d = call i32 @unknown_17294(i32 %v2_e327)
  %v1_e332 = inttoptr i32 %v1_e32d to i32*
  %v2_e332 = load i32, i32* %v1_e332, align 4
  store i32 %v2_e332, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e340

bb:                                               ; preds = %dec_label_pc_e310
  %v1_e33e = call i32 @function_e345()
  br label %dec_label_pc_e340

dec_label_pc_e340:                                ; preds = %bb, %dec_label_pc_e310
  %v2_e33e = phi i32 [ %v1_e33e, %bb ], [ %v2_e332, %dec_label_pc_e310 ]
  ret i32 %v2_e33e
}

define i32 @function_e345() local_unnamed_addr {
dec_label_pc_e345:
  %v0_e346 = load i32, i32* @eax, align 4
  ret i32 %v0_e346
}

define i32 @_ZNSaI5CTxInEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e348:
  %v1_e365 = call i32 @unknown_1e462(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e376

bb:                                               ; preds = %dec_label_pc_e348
  %v1_e374 = call i32 @function_e37b()
  br label %dec_label_pc_e376

dec_label_pc_e376:                                ; preds = %bb, %dec_label_pc_e348
  %v2_e374 = phi i32 [ %v1_e374, %bb ], [ 0, %dec_label_pc_e348 ]
  ret i32 %v2_e374
}

define i32 @function_e37b() local_unnamed_addr {
dec_label_pc_e37b:
  %v0_e37c = load i32, i32* @eax, align 4
  ret i32 %v0_e37c
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e37e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e3a1

bb:                                               ; preds = %dec_label_pc_e37e
  %v2_e39f = call i32 @function_e3a6(i32 %arg1)
  br label %dec_label_pc_e3a1

dec_label_pc_e3a1:                                ; preds = %bb, %dec_label_pc_e37e
  %v3_e39f = phi i32 [ %v2_e39f, %bb ], [ 0, %dec_label_pc_e37e ]
  ret i32 %v3_e39f
}

define i32 @function_e3a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_e3a6:
  %v0_e3a7 = load i32, i32* @eax, align 4
  ret i32 %v0_e3a7
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e3a8:
  ret i32 %arg2
}

define i32 @function_e3e6() local_unnamed_addr {
dec_label_pc_e3e6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e3e6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e3e6 = add i32 %v0_e3e6, -1
  store i32 %v1_e3e6, i32* %ecx.global-to-local, align 4
  %v0_e3e8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e3e8
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP5CTxInEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e3e9:
  %v15_e422105 = icmp eq i32 %arg1, %arg2
  %v1_e425106 = icmp eq i1 %v15_e422105, false
  %v5_e428110 = icmp eq i1 %v1_e425106, false
  %v1_e42a111 = icmp eq i1 %v5_e428110, false
  br i1 %v1_e42a111, label %dec_label_pc_e408, label %dec_label_pc_e42c

dec_label_pc_e408:                                ; preds = %dec_label_pc_e3e9, %dec_label_pc_e408
  %stack_var_-32.0112 = phi i32 [ %v4_e41b, %dec_label_pc_e408 ], [ %arg1, %dec_label_pc_e3e9 ]
  %v1_e40e = call i32 @unknown_1e52d(i32 %stack_var_-32.0112)
  %v1_e416 = call i32 @unknown_1e55a(i32 %v1_e40e)
  %v4_e41b = add i32 %stack_var_-32.0112, 52
  %v15_e422 = icmp eq i32 %v4_e41b, %arg2
  %v1_e425 = icmp eq i1 %v15_e422, false
  %v5_e428 = icmp eq i1 %v1_e425, false
  %v1_e42a = icmp eq i1 %v5_e428, false
  br i1 %v1_e42a, label %dec_label_pc_e408, label %dec_label_pc_e42c

dec_label_pc_e42c:                                ; preds = %dec_label_pc_e408, %dec_label_pc_e3e9
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e438

bb:                                               ; preds = %dec_label_pc_e42c
  %v1_e436 = call i32 @function_e43d()
  br label %dec_label_pc_e438

dec_label_pc_e438:                                ; preds = %bb, %dec_label_pc_e42c
  %v2_e436 = phi i32 [ %v1_e436, %bb ], [ 0, %dec_label_pc_e42c ]
  ret i32 %v2_e436

; uselistorder directives
  uselistorder i32 %v4_e41b, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_e408, { 1, 0 }
}

define i32 @function_e43d() local_unnamed_addr {
dec_label_pc_e43d:
  %v0_e43e = load i32, i32* @eax, align 4
  ret i32 %v0_e43e
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e440:
  %v0_e458 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_e458
}

define i32 @function_e45e(i32 %arg1) local_unnamed_addr {
dec_label_pc_e45e:
  %v0_e45e = load i32, i32* @eax, align 4
  %v1_e45e = load i32, i32* @ebp, align 4
  %v2_e45e = add i32 %v1_e45e, -12
  %v3_e45e = inttoptr i32 %v2_e45e to i32*
  store i32 %v0_e45e, i32* %v3_e45e, align 4
  %v0_e463 = load i32, i32* @ebp, align 4
  %v1_e463 = add i32 %v0_e463, -32
  %v2_e463 = inttoptr i32 %v1_e463 to i32*
  %v3_e463 = load i32, i32* %v2_e463, align 4
  ret i32 %v3_e463
}

define i32 @function_e47e() local_unnamed_addr {
dec_label_pc_e47e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e47e = load i32, i32* %ecx.global-to-local, align 4
  %v1_e47e = add i32 %v0_e47e, -1
  store i32 %v1_e47e, i32* %ecx.global-to-local, align 4
  %v0_e480 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e480
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e481:
  %v15_e4ba = icmp eq i32 %arg1, %arg2
  %v1_e4bd = icmp eq i1 %v15_e4ba, false
  %v2_e4bd = zext i1 %v1_e4bd to i32
  %v4_e4bd = and i32 %arg1, -256
  %v5_e4bd = or i32 %v2_e4bd, %v4_e4bd
  ret i32 %v5_e4bd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e4c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e4c4:
  %v0_e4c4 = load i32, i32* @ebp, align 4
  %v1_e4c4 = add i32 %v0_e4c4, -12
  %v2_e4c4 = inttoptr i32 %v1_e4c4 to i32*
  %v3_e4c4 = load i32, i32* %v2_e4c4, align 4
  %v1_e4c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e4c7 = xor i32 %v1_e4c7, %v3_e4c4
  %v3_e4c7 = icmp eq i32 %v2_e4c7, 0
  store i32 %v2_e4c7, i32* @eax, align 4
  br i1 %v3_e4c7, label %bb, label %dec_label_pc_e4d0

bb:                                               ; preds = %dec_label_pc_e4c4
  %v1_e4ce = call i32 @function_e4d5()
  br label %dec_label_pc_e4d0

dec_label_pc_e4d0:                                ; preds = %bb, %dec_label_pc_e4c4
  %v2_e4ce = phi i32 [ %v1_e4ce, %bb ], [ %v2_e4c7, %dec_label_pc_e4c4 ]
  ret i32 %v2_e4ce
}

define i32 @function_e4d5() local_unnamed_addr {
dec_label_pc_e4d5:
  %v0_e4d6 = load i32, i32* @eax, align 4
  ret i32 %v0_e4d6
}

define i32 @_ZN9__gnu_cxxneIPK5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e4d7:
  %v1_e4fb = call i32 @unknown_1a1d3(i32 %arg1)
  %v1_e500 = inttoptr i32 %v1_e4fb to i32*
  %v2_e500 = load i32, i32* %v1_e500, align 4
  %v1_e508 = call i32 @unknown_1a1d3(i32 %arg2)
  %v1_e50d = inttoptr i32 %v1_e508 to i32*
  %v2_e50d = load i32, i32* %v1_e50d, align 4
  %v12_e50f = icmp eq i32 %v2_e500, %v2_e50d
  %v1_e511 = icmp eq i1 %v12_e50f, false
  %v2_e511 = zext i1 %v1_e511 to i32
  %v4_e511 = and i32 %v2_e50d, -256
  %v5_e511 = or i32 %v2_e511, %v4_e511
  ret i32 %v5_e511

; uselistorder directives
  uselistorder i32 %v2_e50d, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1a1d3, { 1, 0 }
}

define i32 @function_e514(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e514:
  %v0_e514 = load i32, i32* @ebp, align 4
  %v1_e514 = add i32 %v0_e514, -12
  %v2_e514 = inttoptr i32 %v1_e514 to i32*
  %v3_e514 = load i32, i32* %v2_e514, align 4
  %v1_e517 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e517 = icmp eq i32 %v1_e517, %v3_e514
  br i1 %v3_e517, label %bb, label %dec_label_pc_e514.dec_label_pc_e520_crit_edge

dec_label_pc_e514.dec_label_pc_e520_crit_edge:    ; preds = %dec_label_pc_e514
  %v2_e51e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e520

bb:                                               ; preds = %dec_label_pc_e514
  %v1_e51e = call i32 @function_e525()
  br label %dec_label_pc_e520

dec_label_pc_e520:                                ; preds = %dec_label_pc_e514.dec_label_pc_e520_crit_edge, %bb
  %v2_e51e = phi i32 [ %v2_e51e.pre, %dec_label_pc_e514.dec_label_pc_e520_crit_edge ], [ %v1_e51e, %bb ]
  ret i32 %v2_e51e

; uselistorder directives
  uselistorder label %dec_label_pc_e520, { 1, 0 }
}

define i32 @function_e525() local_unnamed_addr {
dec_label_pc_e525:
  %v0_e52a = load i32, i32* @eax, align 4
  ret i32 %v0_e52a
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e52c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e546 = load i32, i32* %arg1, align 4
  %v1_e548 = add i32 %v2_e546, 52
  store i32 %v1_e548, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e55f

bb:                                               ; preds = %dec_label_pc_e52c
  %v2_e55d = call i32 @function_e564(i32 %tmp100)
  br label %dec_label_pc_e55f

dec_label_pc_e55f:                                ; preds = %bb, %dec_label_pc_e52c
  %v3_e55d = phi i32 [ %v2_e55d, %bb ], [ %tmp100, %dec_label_pc_e52c ]
  ret i32 %v3_e55d
}

define i32 @function_e564(i32 %arg1) local_unnamed_addr {
dec_label_pc_e564:
  %v0_e565 = load i32, i32* @eax, align 4
  ret i32 %v0_e565
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e566:
  %v2_e580 = load i32, i32* %arg1, align 4
  store i32 %v2_e580, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e58e

bb:                                               ; preds = %dec_label_pc_e566
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e58c = call i32 @function_e593(i32 %tmp100)
  br label %dec_label_pc_e58e

dec_label_pc_e58e:                                ; preds = %bb, %dec_label_pc_e566
  %v3_e58c = phi i32 [ %v2_e58c, %bb ], [ %v2_e580, %dec_label_pc_e566 ]
  ret i32 %v3_e58c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e593(i32 %arg1) local_unnamed_addr {
dec_label_pc_e593:
  %v0_e594 = load i32, i32* @eax, align 4
  ret i32 %v0_e594
}

define i32 @_ZN9__gnu_cxxneIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e595:
  %v1_e5b9 = call i32 @unknown_1a2f9(i32 %arg1)
  %v1_e5be = inttoptr i32 %v1_e5b9 to i32*
  %v2_e5be = load i32, i32* %v1_e5be, align 4
  %v1_e5c6 = call i32 @unknown_1a2f9(i32 %arg2)
  %v1_e5cb = inttoptr i32 %v1_e5c6 to i32*
  %v2_e5cb = load i32, i32* %v1_e5cb, align 4
  %v12_e5cd = icmp eq i32 %v2_e5be, %v2_e5cb
  %v1_e5cf = icmp eq i1 %v12_e5cd, false
  %v2_e5cf = zext i1 %v1_e5cf to i32
  %v4_e5cf = and i32 %v2_e5cb, -256
  %v5_e5cf = or i32 %v2_e5cf, %v4_e5cf
  store i32 %v5_e5cf, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e5de

bb:                                               ; preds = %dec_label_pc_e595
  %v1_e5dc = call i32 @function_e5e3()
  br label %dec_label_pc_e5de

dec_label_pc_e5de:                                ; preds = %bb, %dec_label_pc_e595
  %v2_e5dc = phi i32 [ %v1_e5dc, %bb ], [ %v5_e5cf, %dec_label_pc_e595 ]
  ret i32 %v2_e5dc

; uselistorder directives
  uselistorder i32 %v2_e5cb, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1a2f9, { 1, 0 }
}

define i32 @function_e5e3() local_unnamed_addr {
dec_label_pc_e5e3:
  %v0_e5e8 = load i32, i32* @eax, align 4
  ret i32 %v0_e5e8
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_e5e9:
  %v0_e5f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_e5f5
}

define i32 @function_e5fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_e5fe:
  %v0_e600 = load i32, i32* @ebp, align 4
  %v1_e600 = add i32 %v0_e600, -28
  %v1_e606 = call i32 @unknown_1a2e5(i32 %v1_e600)
  %v1_e60b = inttoptr i32 %v1_e606 to i32*
  %v2_e60b = load i32, i32* %v1_e60b, align 4
  store i32 %v2_e60b, i32* @eax, align 4
  %v0_e60d = load i32, i32* @ebp, align 4
  %v1_e60d = add i32 %v0_e60d, -12
  %v2_e60d = inttoptr i32 %v1_e60d to i32*
  %v3_e60d = load i32, i32* %v2_e60d, align 4
  %v1_e610 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e610 = icmp eq i32 %v1_e610, %v3_e60d
  br i1 %v3_e610, label %bb, label %dec_label_pc_e619

bb:                                               ; preds = %dec_label_pc_e5fe
  %v1_e617 = call i32 @function_e61e()
  br label %dec_label_pc_e619

dec_label_pc_e619:                                ; preds = %bb, %dec_label_pc_e5fe
  %v2_e617 = phi i32 [ %v1_e617, %bb ], [ %v2_e60b, %dec_label_pc_e5fe ]
  ret i32 %v2_e617
}

define i32 @function_e61e() local_unnamed_addr {
dec_label_pc_e61e:
  %v0_e61f = load i32, i32* @eax, align 4
  ret i32 %v0_e61f
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_() local_unnamed_addr {
dec_label_pc_e620:
  %eax.global-to-local = alloca i32, align 4
  %v17_e623 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_e623
}

define i32 @function_e628(i32 %arg1) local_unnamed_addr {
dec_label_pc_e628:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_e628 = load i32, i32* @ecx, align 4
  %v1_e628 = add i32 %v0_e628, -1587157947
  %v2_e628 = inttoptr i32 %v1_e628 to i8*
  %v3_e628 = load i8, i8* %v2_e628, align 1
  %v5_e628 = trunc i32 %v0_e628 to i8
  %v6_e628 = or i8 %v3_e628, %v5_e628
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_e628, i8* %v2_e628, align 1
  %v0_e62e = load i32, i32* @eax, align 4
  %v1_e62e = trunc i32 %v0_e62e to i8
  %v2_e62e = load i1, i1* %cf.global-to-local, align 1
  %v3_e62e = zext i1 %v2_e62e to i8
  %v4_e62e = add i8 %v3_e62e, %v1_e62e
  %v19_e62e = icmp ule i8 %v4_e62e, %v1_e62e
  %v21_e62e = icmp eq i1 %v2_e62e, %v19_e62e
  store i1 %v21_e62e, i1* %cf.global-to-local, align 1
  %v22_e62e = zext i8 %v4_e62e to i32
  %v24_e62e = and i32 %v0_e62e, -256
  %v25_e62e = or i32 %v22_e62e, %v24_e62e
  store i32 %v25_e62e, i32* %eax.global-to-local, align 4
  %v1_e630 = inttoptr i32 %v25_e62e to i8*
  %v2_e630 = load i8, i8* %v1_e630, align 1
  %v5_e630 = add i8 %v2_e630, %v4_e62e
  store i8 %v5_e630, i8* %v1_e630, align 1
  %v0_e632 = load i32, i32* %eax.global-to-local, align 4
  %v1_e632 = load i32, i32* @ebp, align 4
  %v2_e632 = add i32 %v1_e632, -12
  %v3_e632 = inttoptr i32 %v2_e632 to i32*
  store i32 %v0_e632, i32* %v3_e632, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_e637 = load i32, i32* @ebp, align 4
  %v1_e637 = add i32 %v0_e637, -28
  store i32 %v1_e637, i32* %eax.global-to-local, align 4
  %v1_e63d = call i32 @unknown_1a384(i32 %v1_e637)
  store i32 %v1_e63d, i32* %eax.global-to-local, align 4
  %v1_e642 = inttoptr i32 %v1_e63d to i32*
  %v2_e642 = load i32, i32* %v1_e642, align 4
  store i32 %v2_e642, i32* @eax, align 4
  %v0_e644 = load i32, i32* @ebp, align 4
  %v1_e644 = add i32 %v0_e644, -12
  %v2_e644 = inttoptr i32 %v1_e644 to i32*
  %v3_e644 = load i32, i32* %v2_e644, align 4
  %v1_e647 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_e647 = icmp eq i32 %v1_e647, %v3_e644
  br i1 %v3_e647, label %bb, label %dec_label_pc_e650

bb:                                               ; preds = %dec_label_pc_e628
  %v1_e64e = call i32 @function_e655()
  store i32 %v1_e64e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_e650

dec_label_pc_e650:                                ; preds = %bb, %dec_label_pc_e628
  %v2_e64e = phi i32 [ %v1_e64e, %bb ], [ %v2_e642, %dec_label_pc_e628 ]
  ret i32 %v2_e64e

; uselistorder directives
  uselistorder i8 %v4_e62e, { 0, 2, 1 }
  uselistorder i8 %v1_e62e, { 1, 0 }
}

define i32 @function_e655() local_unnamed_addr {
dec_label_pc_e655:
  %v0_e656 = load i32, i32* @eax, align 4
  ret i32 %v0_e656
}

define i32 @_ZNSaI6CTxOutEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e658:
  %v2_e682 = call i32 @unknown_1e860(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e693

bb:                                               ; preds = %dec_label_pc_e658
  %v1_e691 = call i32 @function_e698()
  br label %dec_label_pc_e693

dec_label_pc_e693:                                ; preds = %bb, %dec_label_pc_e658
  %v2_e691 = phi i32 [ %v1_e691, %bb ], [ 0, %dec_label_pc_e658 ]
  ret i32 %v2_e691
}

declare i32 @__stack_chk_fail.361(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

define i32 @function_e698() local_unnamed_addr {
dec_label_pc_e698:
  %v0_e699 = load i32, i32* @eax, align 4
  ret i32 %v0_e699
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e69a:
  %v1_e6c3 = call i32 @unknown_1e8d2(i32 %arg1)
  %v10_e6c8 = icmp ult i32 %v1_e6c3, %arg2
  %v1_e6cb = zext i1 %v10_e6c8 to i32
  %v3_e6cb = and i32 %v1_e6c3, -256
  %v4_e6cb = or i32 %v1_e6cb, %v3_e6cb
  %v5_e6ce = icmp eq i1 %v10_e6c8, false
  br i1 %v5_e6ce, label %bb, label %dec_label_pc_e6d2

bb:                                               ; preds = %dec_label_pc_e69a
  %v1_e6d0 = call i32 @function_e6d7()
  br label %dec_label_pc_e6d2

dec_label_pc_e6d2:                                ; preds = %bb, %dec_label_pc_e69a
  %v2_e6d0 = phi i32 [ %v1_e6d0, %bb ], [ %v4_e6cb, %dec_label_pc_e69a ]
  ret i32 %v2_e6d0

; uselistorder directives
  uselistorder i1 %v10_e6c8, { 1, 0 }
}

define i32 @function_e6d7() local_unnamed_addr {
dec_label_pc_e6d7:
  %v0_e6d7 = load i32, i32* @ebp, align 4
  %v1_e6d7 = add i32 %v0_e6d7, -32
  %v2_e6d7 = inttoptr i32 %v1_e6d7 to i32*
  %v3_e6d7 = load i32, i32* %v2_e6d7, align 4
  %v2_e6e1 = mul i32 %v3_e6d7, 20
  ret i32 %v2_e6e1
}

define i32 @function_e6fc() local_unnamed_addr {
dec_label_pc_e6fc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e6fc = load i32, i32* %ecx.global-to-local, align 4
  %v1_e6fc = add i32 %v0_e6fc, -1
  store i32 %v1_e6fc, i32* %ecx.global-to-local, align 4
  %v0_e6fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e6fe
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e6ff:
  %v0_e718 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_e718
}

define i32 @function_e71e(i32 %arg1) local_unnamed_addr {
dec_label_pc_e71e:
  %v0_e71e = load i32, i32* @eax, align 4
  %v1_e71e = load i32, i32* @ebp, align 4
  %v2_e71e = add i32 %v1_e71e, -12
  %v3_e71e = inttoptr i32 %v2_e71e to i32*
  store i32 %v0_e71e, i32* %v3_e71e, align 4
  %v0_e723 = load i32, i32* @ebp, align 4
  %v1_e723 = add i32 %v0_e723, -36
  %v2_e723 = inttoptr i32 %v1_e723 to i32*
  %v3_e723 = load i32, i32* %v2_e723, align 4
  %v2_e726 = add i32 %v0_e723, -16
  %v3_e726 = inttoptr i32 %v2_e726 to i32*
  store i32 %v3_e723, i32* %v3_e726, align 4
  br label %dec_label_pc_e75e

dec_label_pc_e72b:                                ; preds = %dec_label_pc_e75e
  %v1_e72b = add i32 %v0_e72b, -28
  %v1_e731 = call i32 @unknown_17db5(i32 %v1_e72b)
  store i32 %v1_e731, i32* @ebx, align 4
  %v0_e738 = load i32, i32* @ebp, align 4
  %v1_e738 = add i32 %v0_e738, -16
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  %v3_e738 = load i32, i32* %v2_e738, align 4
  %v1_e73e = call i32 @unknown_1e8a5(i32 %v3_e738)
  %v0_e743 = load i32, i32* @ebx, align 4
  %v2_e74a = call i32 @unknown_1e966(i32 %v1_e73e, i32 %v0_e743)
  %v0_e74f = load i32, i32* @ebp, align 4
  %v1_e74f = add i32 %v0_e74f, -28
  %v1_e755 = call i32 @unknown_17d7b(i32 %v1_e74f)
  %v0_e75a = load i32, i32* @ebp, align 4
  %v1_e75a = add i32 %v0_e75a, -16
  %v2_e75a = inttoptr i32 %v1_e75a to i32*
  %v3_e75a = load i32, i32* %v2_e75a, align 4
  %v4_e75a = add i32 %v3_e75a, 20
  store i32 %v4_e75a, i32* %v2_e75a, align 4
  br label %dec_label_pc_e75e

dec_label_pc_e75e:                                ; preds = %dec_label_pc_e72b, %dec_label_pc_e71e
  %v0_e75e = load i32, i32* @ebp, align 4
  %v1_e75e = add i32 %v0_e75e, -32
  %v1_e765 = add i32 %v0_e75e, -28
  %v2_e76b = call i32 @unknown_1cc94(i32 %v1_e765, i32 %v1_e75e)
  %v4_e770 = trunc i32 %v2_e76b to i8
  %v5_e770 = icmp eq i8 %v4_e770, 0
  %v1_e772 = icmp eq i1 %v5_e770, false
  %v0_e72b = load i32, i32* @ebp, align 4
  br i1 %v1_e772, label %dec_label_pc_e72b, label %dec_label_pc_e774

dec_label_pc_e774:                                ; preds = %dec_label_pc_e75e
  %v1_e774 = add i32 %v0_e72b, -16
  %v2_e774 = inttoptr i32 %v1_e774 to i32*
  %v3_e774 = load i32, i32* %v2_e774, align 4
  store i32 %v3_e774, i32* @eax, align 4
  %v1_e777 = add i32 %v0_e72b, -12
  %v2_e777 = inttoptr i32 %v1_e777 to i32*
  %v3_e777 = load i32, i32* %v2_e777, align 4
  %v1_e77a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e77a = icmp eq i32 %v1_e77a, %v3_e777
  br i1 %v3_e77a, label %bb, label %dec_label_pc_e783

bb:                                               ; preds = %dec_label_pc_e774
  %v2_e781 = call i32 @function_e7ba(i32 %v1_e765)
  store i32 %v2_e781, i32* @eax, align 4
  br label %dec_label_pc_e783

dec_label_pc_e783:                                ; preds = %bb, %dec_label_pc_e774
  %v0_e783 = call i32 @function_e7b5()
  ret i32 %v0_e783

; uselistorder directives
  uselistorder i32 %v0_e72b, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_e7ba, { 1, 2, 0 }
}

define i32 @function_e786() local_unnamed_addr {
dec_label_pc_e786:
  %eax.global-to-local = alloca i32, align 4
  %v0_e786 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e786
}

define i32 @function_e7ae(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e7ae:
  %v2_e7ae = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e7ae = load i32, i32* @eax, align 4
  %v4_e7ae = trunc i32 %v3_e7ae to i8
  %v5_e7ae = add i8 %v4_e7ae, %v2_e7ae
  %v21_e7ae = inttoptr i32 %v3_e7ae to i8*
  store i8 %v5_e7ae, i8* %v21_e7ae, align 1
  %v22_e7ae = load i32, i32* @eax, align 4
  ret i32 %v22_e7ae
}

define i32 @function_e7b5() local_unnamed_addr {
dec_label_pc_e7b5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e7ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_e7ba:
  store i32 %arg1, i32* @ebx, align 4
  %v0_e7bf = load i32, i32* @eax, align 4
  ret i32 %v0_e7bf
}

define i32 @_ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e7c0:
  %v3_e7f7 = call i32 @unknown_1eaa2(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e808

bb:                                               ; preds = %dec_label_pc_e7c0
  %v1_e806 = call i32 @function_e80d()
  br label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %bb, %dec_label_pc_e7c0
  %v2_e806 = phi i32 [ %v1_e806, %bb ], [ 0, %dec_label_pc_e7c0 ]
  ret i32 %v2_e806
}

define i32 @function_e80d() local_unnamed_addr {
dec_label_pc_e80d:
  %v0_e80e = load i32, i32* @eax, align 4
  ret i32 %v0_e80e
}

define i32 @_ZNSaI12CTransactionEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e810:
  %v1_e82d = call i32 @unknown_1eb94(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e83e

bb:                                               ; preds = %dec_label_pc_e810
  %v1_e83c = call i32 @function_e843()
  br label %dec_label_pc_e83e

dec_label_pc_e83e:                                ; preds = %bb, %dec_label_pc_e810
  %v2_e83c = phi i32 [ %v1_e83c, %bb ], [ 0, %dec_label_pc_e810 ]
  ret i32 %v2_e83c
}

define i32 @function_e843() local_unnamed_addr {
dec_label_pc_e843:
  %v0_e844 = load i32, i32* @eax, align 4
  ret i32 %v0_e844
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e846:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e869

bb:                                               ; preds = %dec_label_pc_e846
  %v2_e867 = call i32 @function_e86e(i32 %arg1)
  br label %dec_label_pc_e869

dec_label_pc_e869:                                ; preds = %bb, %dec_label_pc_e846
  %v3_e867 = phi i32 [ %v2_e867, %bb ], [ 0, %dec_label_pc_e846 ]
  ret i32 %v3_e867
}

define i32 @function_e86e(i32 %arg1) local_unnamed_addr {
dec_label_pc_e86e:
  %v0_e86f = load i32, i32* @eax, align 4
  ret i32 %v0_e86f
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e870:
  ret i32 %arg2
}

define i32 @function_e8a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_e8a6:
  %zf.global-to-local = alloca i1, align 1
  %v2_e8a6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e8a6 = load i32, i32* @eax, align 4
  %v4_e8a6 = trunc i32 %v3_e8a6 to i8
  %v5_e8a6 = add i8 %v4_e8a6, %v2_e8a6
  %v15_e8a6 = icmp eq i8 %v5_e8a6, 0
  store i1 %v15_e8a6, i1* %zf.global-to-local, align 1
  %v21_e8a6 = inttoptr i32 %v3_e8a6 to i8*
  store i8 %v5_e8a6, i8* %v21_e8a6, align 1
  %v0_e8a8 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_e8a8, label %bb, label %dec_label_pc_e8a6.dec_label_pc_e8aa_crit_edge

dec_label_pc_e8a6.dec_label_pc_e8aa_crit_edge:    ; preds = %dec_label_pc_e8a6
  %v2_e8a8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e8aa

bb:                                               ; preds = %dec_label_pc_e8a6
  %v1_e8a8 = call i32 @function_e8af()
  br label %dec_label_pc_e8aa

dec_label_pc_e8aa:                                ; preds = %dec_label_pc_e8a6.dec_label_pc_e8aa_crit_edge, %bb
  %v2_e8a8 = phi i32 [ %v2_e8a8.pre, %dec_label_pc_e8a6.dec_label_pc_e8aa_crit_edge ], [ %v1_e8a8, %bb ]
  ret i32 %v2_e8a8

; uselistorder directives
  uselistorder label %dec_label_pc_e8aa, { 1, 0 }
}

define i32 @function_e8ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e8ac:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e8af() local_unnamed_addr {
dec_label_pc_e8af:
  %v0_e8b0 = load i32, i32* @eax, align 4
  ret i32 %v0_e8b0
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP12CTransactionEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8b1:
  ret i32 0
}

define i32 @function_e8d3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e8d3:
  %v0_e8d3 = load i32, i32* @eax, align 4
  %v1_e8d6 = call i32 @unknown_1ec5f(i32 %v0_e8d3)
  %v1_e8de = call i32 @unknown_1ec8c(i32 %v1_e8d6)
  %v0_e8e3 = load i32, i32* @ebp, align 4
  %v1_e8e3 = add i32 %v0_e8e3, -28
  %v2_e8e3 = inttoptr i32 %v1_e8e3 to i32*
  %v3_e8e3 = load i32, i32* %v2_e8e3, align 4
  %v4_e8e3 = add i32 %v3_e8e3, ptrtoint (i32* @mainParams to i32)
  store i32 %v4_e8e3, i32* %v2_e8e3, align 4
  %v0_e8e7 = load i32, i32* @ebp, align 4
  %v1_e8f4 = add i32 %v0_e8e7, -12
  %v2_e8f4 = inttoptr i32 %v1_e8f4 to i32*
  %v3_e8f4 = load i32, i32* %v2_e8f4, align 4
  %v1_e8f7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e8f7 = xor i32 %v1_e8f7, %v3_e8f4
  %v3_e8f7 = icmp eq i32 %v2_e8f7, 0
  store i32 %v2_e8f7, i32* @eax, align 4
  br i1 %v3_e8f7, label %bb, label %dec_label_pc_e900

bb:                                               ; preds = %dec_label_pc_e8d3
  %v1_e8fe = call i32 @function_e905()
  br label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %bb, %dec_label_pc_e8d3
  %v3_e8fe = phi i32 [ %v1_e8fe, %bb ], [ %v2_e8f7, %dec_label_pc_e8d3 ]
  ret i32 %v3_e8fe
}

define i32 @function_e905() local_unnamed_addr {
dec_label_pc_e905:
  %v0_e906 = load i32, i32* @eax, align 4
  ret i32 %v0_e906
}

define i32 @_ZNSaI7uint256EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e908:
  %v1_e925 = call i32 @unknown_1ed18(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e936

bb:                                               ; preds = %dec_label_pc_e908
  %v1_e934 = call i32 @function_e93b()
  br label %dec_label_pc_e936

dec_label_pc_e936:                                ; preds = %bb, %dec_label_pc_e908
  %v2_e934 = phi i32 [ %v1_e934, %bb ], [ 0, %dec_label_pc_e908 ]
  ret i32 %v2_e934
}

define i32 @function_e93b() local_unnamed_addr {
dec_label_pc_e93b:
  %v0_e93c = load i32, i32* @eax, align 4
  ret i32 %v0_e93c
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e93e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e961

bb:                                               ; preds = %dec_label_pc_e93e
  %v2_e95f = call i32 @function_e966(i32 %arg1)
  br label %dec_label_pc_e961

dec_label_pc_e961:                                ; preds = %bb, %dec_label_pc_e93e
  %v3_e95f = phi i32 [ %v2_e95f, %bb ], [ 0, %dec_label_pc_e93e ]
  ret i32 %v3_e95f
}

define i32 @function_e966(i32 %arg1) local_unnamed_addr {
dec_label_pc_e966:
  %v0_e967 = load i32, i32* @eax, align 4
  ret i32 %v0_e967
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256E10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e968:
  ret i32 %arg2
}

define i32 @function_e9a6() local_unnamed_addr {
dec_label_pc_e9a6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e9a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e9a6 = add i32 %v0_e9a6, -1
  store i32 %v1_e9a6, i32* %ecx.global-to-local, align 4
  %v0_e9a8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e9a8
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIP7uint256EEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e9a9:
  %v0_e9bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_e9bb
}

define i32 @function_e9ce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e9ce:
  %zf.global-to-local = alloca i1, align 1
  %v2_e9ce = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e9ce = load i32, i32* @eax, align 4
  %v4_e9ce = trunc i32 %v3_e9ce to i8
  %v5_e9ce = add i8 %v4_e9ce, %v2_e9ce
  %v15_e9ce = icmp eq i8 %v5_e9ce, 0
  store i1 %v15_e9ce, i1* %zf.global-to-local, align 1
  %v21_e9ce = inttoptr i32 %v3_e9ce to i8*
  store i8 %v5_e9ce, i8* %v21_e9ce, align 1
  %v0_e9d0 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_e9d0, label %bb, label %dec_label_pc_e9ce.dec_label_pc_e9d2_crit_edge

dec_label_pc_e9ce.dec_label_pc_e9d2_crit_edge:    ; preds = %dec_label_pc_e9ce
  %v2_e9d0.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e9d2

bb:                                               ; preds = %dec_label_pc_e9ce
  %v1_e9d0 = call i32 @function_e9d7()
  br label %dec_label_pc_e9d2

dec_label_pc_e9d2:                                ; preds = %dec_label_pc_e9ce.dec_label_pc_e9d2_crit_edge, %bb
  %v2_e9d0 = phi i32 [ %v2_e9d0.pre, %dec_label_pc_e9ce.dec_label_pc_e9d2_crit_edge ], [ %v1_e9d0, %bb ]
  ret i32 %v2_e9d0

; uselistorder directives
  uselistorder label %dec_label_pc_e9d2, { 1, 0 }
}

define i32 @function_e9d7() local_unnamed_addr {
dec_label_pc_e9d7:
  %v0_e9d8 = load i32, i32* @eax, align 4
  ret i32 %v0_e9d8
}

define i32 @_ZNSaI12CDNSSeedDataEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e9da:
  %v1_e9f7 = call i32 @unknown_1ee14(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ea08

bb:                                               ; preds = %dec_label_pc_e9da
  %v1_ea06 = call i32 @function_ea0d()
  br label %dec_label_pc_ea08

dec_label_pc_ea08:                                ; preds = %bb, %dec_label_pc_e9da
  %v2_ea06 = phi i32 [ %v1_ea06, %bb ], [ 0, %dec_label_pc_e9da ]
  ret i32 %v2_ea06
}

define i32 @function_ea0d() local_unnamed_addr {
dec_label_pc_ea0d:
  %v0_ea0e = load i32, i32* @eax, align 4
  ret i32 %v0_ea0e
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CDNSSeedDataED1Ev() local_unnamed_addr {
dec_label_pc_ea10:
  %eax.global-to-local = alloca i32, align 4
  %v17_ea13 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_ea13
}

define i32 @function_ea16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea16:
  %v0_ea16 = load i32, i32* @ebp, align 4
  %v1_ea16 = add i32 %v0_ea16, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_ea16 = inttoptr i32 %v1_ea16 to i32*
  %v3_ea16 = load i32, i32* %v2_ea16, align 4
  %v2_ea19 = add i32 %v0_ea16, -28
  %v3_ea19 = inttoptr i32 %v2_ea19 to i32*
  store i32 %v3_ea16, i32* %v3_ea19, align 4
  %v0_ea1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_ea22 = load i32, i32* @ebp, align 4
  %v2_ea22 = add i32 %v1_ea22, -12
  %v3_ea22 = inttoptr i32 %v2_ea22 to i32*
  store i32 %v0_ea1c, i32* %v3_ea22, align 4
  %v0_ea27 = load i32, i32* @ebp, align 4
  %v1_ea27 = add i32 %v0_ea27, -12
  %v2_ea27 = inttoptr i32 %v1_ea27 to i32*
  %v3_ea27 = load i32, i32* %v2_ea27, align 4
  %v1_ea2a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ea2a = xor i32 %v1_ea2a, %v3_ea27
  %v3_ea2a = icmp eq i32 %v2_ea2a, 0
  store i32 %v2_ea2a, i32* @eax, align 4
  br i1 %v3_ea2a, label %bb, label %dec_label_pc_ea33

bb:                                               ; preds = %dec_label_pc_ea16
  %v1_ea31 = call i32 @function_ea38()
  br label %dec_label_pc_ea33

dec_label_pc_ea33:                                ; preds = %bb, %dec_label_pc_ea16
  %v3_ea31 = phi i32 [ %v1_ea31, %bb ], [ %v2_ea2a, %dec_label_pc_ea16 ]
  ret i32 %v3_ea31
}

define i32 @function_ea38() local_unnamed_addr {
dec_label_pc_ea38:
  %v0_ea39 = load i32, i32* @eax, align 4
  ret i32 %v0_ea39
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CDNSSeedDataE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea3a:
  ret i32 %arg2
}

define i32 @function_ea78() local_unnamed_addr {
dec_label_pc_ea78:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ea78 = load i32, i32* %ecx.global-to-local, align 4
  %v1_ea78 = add i32 %v0_ea78, -1
  store i32 %v1_ea78, i32* %ecx.global-to-local, align 4
  %v0_ea7a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ea7a
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP12CDNSSeedDataEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea7b:
  %v15_eab4105 = icmp eq i32 %arg1, %arg2
  %v1_eab7106 = icmp eq i1 %v15_eab4105, false
  %v5_eaba110 = icmp eq i1 %v1_eab7106, false
  %v1_eabc111 = icmp eq i1 %v5_eaba110, false
  br i1 %v1_eabc111, label %dec_label_pc_ea9a, label %dec_label_pc_eabe

dec_label_pc_ea9a:                                ; preds = %dec_label_pc_ea7b, %dec_label_pc_ea9a
  %stack_var_-32.0112 = phi i32 [ %v4_eaad, %dec_label_pc_ea9a ], [ %arg1, %dec_label_pc_ea7b ]
  %v1_eaa0 = call i32 @unknown_1eedf(i32 %stack_var_-32.0112)
  %v1_eaa8 = call i32 @unknown_1ef0c(i32 %v1_eaa0)
  %v4_eaad = add i32 %stack_var_-32.0112, ptrtoint (i32* @global_var_8.883 to i32)
  %v15_eab4 = icmp eq i32 %v4_eaad, %arg2
  %v1_eab7 = icmp eq i1 %v15_eab4, false
  %v5_eaba = icmp eq i1 %v1_eab7, false
  %v1_eabc = icmp eq i1 %v5_eaba, false
  br i1 %v1_eabc, label %dec_label_pc_ea9a, label %dec_label_pc_eabe

dec_label_pc_eabe:                                ; preds = %dec_label_pc_ea9a, %dec_label_pc_ea7b
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eaca

bb:                                               ; preds = %dec_label_pc_eabe
  %v1_eac8 = call i32 @function_eacf()
  br label %dec_label_pc_eaca

dec_label_pc_eaca:                                ; preds = %bb, %dec_label_pc_eabe
  %v2_eac8 = phi i32 [ %v1_eac8, %bb ], [ 0, %dec_label_pc_eabe ]
  ret i32 %v2_eac8

; uselistorder directives
  uselistorder i32 %v4_eaad, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_ea9a, { 1, 0 }
}

define i32 @function_eacf() local_unnamed_addr {
dec_label_pc_eacf:
  %v0_ead0 = load i32, i32* @eax, align 4
  ret i32 %v0_ead0
}

define i32 @_ZNSaI8CAddressEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ead2:
  %v1_eaef = call i32 @unknown_1ef98(i32 %arg1)
  ret i32 0
}

define i32 @function_eafe(i32 %arg1) local_unnamed_addr {
dec_label_pc_eafe:
  %v0_eafe = load i1, i1* @zf, align 1
  br i1 %v0_eafe, label %bb, label %dec_label_pc_eafe.dec_label_pc_eb00_crit_edge

dec_label_pc_eafe.dec_label_pc_eb00_crit_edge:    ; preds = %dec_label_pc_eafe
  %v2_eafe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_eb00

bb:                                               ; preds = %dec_label_pc_eafe
  %v1_eafe = call i32 @function_eb05()
  br label %dec_label_pc_eb00

dec_label_pc_eb00:                                ; preds = %dec_label_pc_eafe.dec_label_pc_eb00_crit_edge, %bb
  %v2_eafe = phi i32 [ %v2_eafe.pre, %dec_label_pc_eafe.dec_label_pc_eb00_crit_edge ], [ %v1_eafe, %bb ]
  ret i32 %v2_eafe

; uselistorder directives
  uselistorder i1* @zf, { 1, 8, 4, 6, 2, 3, 0, 5, 7 }
  uselistorder label %dec_label_pc_eb00, { 1, 0 }
}

define i32 @function_eb05() local_unnamed_addr {
dec_label_pc_eb05:
  %v0_eb06 = load i32, i32* @eax, align 4
  ret i32 %v0_eb06
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CAddressED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb08:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eb2b

bb:                                               ; preds = %dec_label_pc_eb08
  %v2_eb29 = call i32 @function_eb30(i32 %arg1)
  br label %dec_label_pc_eb2b

dec_label_pc_eb2b:                                ; preds = %bb, %dec_label_pc_eb08
  %v3_eb29 = phi i32 [ %v2_eb29, %bb ], [ 0, %dec_label_pc_eb08 ]
  ret i32 %v3_eb29
}

define i32 @function_eb30(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb30:
  %v0_eb31 = load i32, i32* @eax, align 4
  ret i32 %v0_eb31
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CAddressE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eb32:
  ret i32 %arg2
}

define i32 @function_eb70() local_unnamed_addr {
dec_label_pc_eb70:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_eb70 = load i32, i32* %ecx.global-to-local, align 4
  %v1_eb70 = add i32 %v0_eb70, -1
  store i32 %v1_eb70, i32* %ecx.global-to-local, align 4
  %v0_eb72 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_eb72
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIP8CAddressEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eb73:
  ret i32 %arg2
}

define i32 @function_eb82(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb82:
  %v0_eb82 = load i32, i32* @eax, align 4
  %v1_eb82 = load i32, i32* @ebp, align 4
  %v2_eb82 = add i32 %v1_eb82, -32
  %v3_eb82 = inttoptr i32 %v2_eb82 to i32*
  store i32 %v0_eb82, i32* %v3_eb82, align 4
  %v0_eb85 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_eb8b = load i32, i32* @ebp, align 4
  %v2_eb8b = add i32 %v1_eb8b, -12
  %v3_eb8b = inttoptr i32 %v2_eb8b to i32*
  store i32 %v0_eb85, i32* %v3_eb8b, align 4
  %v0_eb90 = load i32, i32* @ebp, align 4
  %v1_eb90 = add i32 %v0_eb90, -12
  %v2_eb90 = inttoptr i32 %v1_eb90 to i32*
  %v3_eb90 = load i32, i32* %v2_eb90, align 4
  %v1_eb93 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_eb93 = xor i32 %v1_eb93, %v3_eb90
  %v3_eb93 = icmp eq i32 %v2_eb93, 0
  store i32 %v2_eb93, i32* @eax, align 4
  br i1 %v3_eb93, label %bb, label %dec_label_pc_eb9c

bb:                                               ; preds = %dec_label_pc_eb82
  %v1_eb9a = call i32 @function_eba1()
  br label %dec_label_pc_eb9c

dec_label_pc_eb9c:                                ; preds = %bb, %dec_label_pc_eb82
  %v2_eb9a = phi i32 [ %v1_eb9a, %bb ], [ %v2_eb93, %dec_label_pc_eb82 ]
  ret i32 %v2_eb9a
}

define i32 @function_eba1() local_unnamed_addr {
dec_label_pc_eba1:
  %v0_eba2 = load i32, i32* @eax, align 4
  ret i32 %v0_eba2
}

define i32 @_ZN9__gnu_cxxmiIP5CTxInSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_eba3:
  ret i32 %arg1
}

define i32 @function_ebaf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ebaf:
  %ebx.global-to-local = alloca i32, align 4
  %v0_ebb1 = load i32, i32* @ebp, align 4
  %v1_ebb4 = add i32 %v0_ebb1, 2
  store i32 %v1_ebb4, i32* @ebp, align 4
  %v0_ebb7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ebbc = add i32 %v0_ebb1, -10
  %v3_ebbc = inttoptr i32 %v2_ebbc to i32*
  store i32 %v0_ebb7, i32* %v3_ebbc, align 4
  %v0_ebc1 = load i32, i32* @ebp, align 4
  %v1_ebc1 = add i32 %v0_ebc1, -28
  %v2_ebc1 = inttoptr i32 %v1_ebc1 to i32*
  %v3_ebc1 = load i32, i32* %v2_ebc1, align 4
  %v1_ebc7 = call i32 @unknown_1d803(i32 %v3_ebc1)
  %v1_ebcc = inttoptr i32 %v1_ebc7 to i32*
  %v2_ebcc = load i32, i32* %v1_ebcc, align 4
  store i32 %v2_ebcc, i32* %ebx.global-to-local, align 4
  %v0_ebd0 = load i32, i32* @ebp, align 4
  %v1_ebd0 = add i32 %v0_ebd0, -32
  %v2_ebd0 = inttoptr i32 %v1_ebd0 to i32*
  %v3_ebd0 = load i32, i32* %v2_ebd0, align 4
  %v1_ebd6 = call i32 @unknown_1d803(i32 %v3_ebd0)
  %v1_ebdb = inttoptr i32 %v1_ebd6 to i32*
  %v2_ebdb = load i32, i32* %v1_ebdb, align 4
  %v0_ebdd = load i32, i32* %ebx.global-to-local, align 4
  %v2_ebdf = sub i32 %v0_ebdd, %v2_ebdb
  %v2_ebe3 = sdiv i32 %v2_ebdf, 4
  %v3_ebe6 = mul i32 %v2_ebe3, -991146299
  store i32 %v3_ebe6, i32* @eax, align 4
  %v0_ebec = load i32, i32* @ebp, align 4
  %v1_ebec = add i32 %v0_ebec, -12
  %v2_ebec = inttoptr i32 %v1_ebec to i32*
  %v3_ebec = load i32, i32* %v2_ebec, align 4
  %v1_ebef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ebef = icmp eq i32 %v1_ebef, %v3_ebec
  br i1 %v3_ebef, label %bb, label %dec_label_pc_ebf8

bb:                                               ; preds = %dec_label_pc_ebaf
  %v1_ebf6 = call i32 @function_ebfd()
  br label %dec_label_pc_ebf8

dec_label_pc_ebf8:                                ; preds = %bb, %dec_label_pc_ebaf
  %v3_ebf6 = phi i32 [ %v1_ebf6, %bb ], [ %v3_ebe6, %dec_label_pc_ebaf ]
  ret i32 %v3_ebf6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1d803, { 1, 0 }
}

define i32 @function_ebfd() local_unnamed_addr {
dec_label_pc_ebfd:
  %v0_ec02 = load i32, i32* @eax, align 4
  ret i32 %v0_ec02
}

define i32 @_ZSt22__uninitialized_move_aIP5CTxInS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec03:
  ret i32 %arg3
}

define i32 @function_ec5c() local_unnamed_addr {
dec_label_pc_ec5c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ec5c = load i32, i32* %ecx.global-to-local, align 4
  %v1_ec5c = add i32 %v0_ec5c, -1
  store i32 %v1_ec5c, i32* %ecx.global-to-local, align 4
  %v0_ec5e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ec5e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec60:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ec86

bb:                                               ; preds = %dec_label_pc_ec60
  %v2_ec84 = call i32 @function_ec8b(i32 %arg1)
  br label %dec_label_pc_ec86

dec_label_pc_ec86:                                ; preds = %bb, %dec_label_pc_ec60
  %v3_ec84 = phi i32 [ %v2_ec84, %bb ], [ %arg1, %dec_label_pc_ec60 ]
  ret i32 %v3_ec84
}

define i32 @function_ec8b(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec8b:
  %v0_ec8c = load i32, i32* @eax, align 4
  ret i32 %v0_ec8c
}

define i32 @_ZSt13copy_backwardIP5CTxInS1_ET0_T_S3_S2_() local_unnamed_addr {
dec_label_pc_ec8d:
  %eax.global-to-local = alloca i32, align 4
  %v5_ec90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_ec90
}

define i32 @function_ec92(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec92:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ec93 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_ec93 = xor i32 %v0_ec93, 139
  store i32 %v11_ec93, i32* %eax.global-to-local, align 4
  %v0_ec95 = load i32, i32* @ebp, align 4
  %v1_ec95 = add i32 %v0_ec95, 1
  store i32 %v1_ec95, i32* %ebp.global-to-local, align 4
  %v0_ec96 = load i32, i32* @ecx, align 4
  %v1_ec96 = add i32 %v0_ec96, 1166795845
  %v2_ec96 = inttoptr i32 %v1_ec96 to i8*
  %v3_ec96 = load i8, i8* %v2_ec96, align 1
  %v5_ec96 = trunc i32 %v0_ec96 to i8
  %v6_ec96 = or i8 %v3_ec96, %v5_ec96
  store i8 %v6_ec96, i8* %v2_ec96, align 1
  %v0_ec9c = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_ec9c = or i32 %v0_ec9c, 137
  store i32 %v11_ec9c, i32* %eax.global-to-local, align 4
  %v0_ec9e = load i32, i32* %ebp.global-to-local, align 4
  %v0_ec9f = load i32, i32* @ecx, align 4
  %v1_ec9f = add i32 %v0_ec9f, 255
  %v1_eca1 = add i32 %v0_ec9e, 2
  store i32 %v1_eca1, i32* @ebp, align 4
  %v1_eca2 = add i32 %v0_ec9f, -1587159996
  %v2_eca2 = inttoptr i32 %v1_eca2 to i8*
  %v3_eca2 = load i8, i8* %v2_eca2, align 1
  %v5_eca2 = trunc i32 %v1_ec9f to i8
  %v8_eca2 = add i8 %v3_eca2, %v5_eca2
  %v28_eca2 = icmp ult i8 %v8_eca2, %v3_eca2
  store i1 %v28_eca2, i1* %cf.global-to-local, align 1
  store i8 %v8_eca2, i8* %v2_eca2, align 1
  %v0_eca8 = load i32, i32* %eax.global-to-local, align 4
  %v1_eca8 = trunc i32 %v0_eca8 to i8
  %v2_eca8 = load i1, i1* %cf.global-to-local, align 1
  %v3_eca8 = zext i1 %v2_eca8 to i8
  %v4_eca8 = add i8 %v3_eca8, %v1_eca8
  %v19_eca8 = icmp ule i8 %v4_eca8, %v1_eca8
  %v21_eca8 = icmp eq i1 %v2_eca8, %v19_eca8
  store i1 %v21_eca8, i1* %cf.global-to-local, align 1
  %v22_eca8 = zext i8 %v4_eca8 to i32
  %v24_eca8 = and i32 %v0_eca8, -256
  %v25_eca8 = or i32 %v22_eca8, %v24_eca8
  store i32 %v25_eca8, i32* %eax.global-to-local, align 4
  %v1_ecaa = inttoptr i32 %v25_eca8 to i8*
  %v2_ecaa = load i8, i8* %v1_ecaa, align 1
  %v5_ecaa = add i8 %v2_ecaa, %v4_eca8
  store i8 %v5_ecaa, i8* %v1_ecaa, align 1
  %v0_ecac = load i32, i32* %eax.global-to-local, align 4
  %v1_ecac = load i32, i32* @ebp, align 4
  %v2_ecac = add i32 %v1_ecac, -12
  %v3_ecac = inttoptr i32 %v2_ecac to i32*
  store i32 %v0_ecac, i32* %v3_ecac, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_ecb1 = load i32, i32* @ebp, align 4
  %v1_ecb1 = add i32 %v0_ecb1, -32
  %v2_ecb1 = inttoptr i32 %v1_ecb1 to i32*
  %v3_ecb1 = load i32, i32* %v2_ecb1, align 4
  store i32 %v3_ecb1, i32* %eax.global-to-local, align 4
  %v1_ecb7 = call i32 @unknown_1f17d(i32 %v3_ecb1)
  store i32 %v1_ecb7, i32* %eax.global-to-local, align 4
  store i32 %v1_ecb7, i32* %ebx.global-to-local, align 4
  %v0_ecbe = load i32, i32* @ebp, align 4
  %v1_ecbe = add i32 %v0_ecbe, -28
  %v2_ecbe = inttoptr i32 %v1_ecbe to i32*
  %v3_ecbe = load i32, i32* %v2_ecbe, align 4
  store i32 %v3_ecbe, i32* %eax.global-to-local, align 4
  %v1_ecc4 = call i32 @unknown_1f17d(i32 %v3_ecbe)
  store i32 %v1_ecc4, i32* %eax.global-to-local, align 4
  %v0_ecc9 = load i32, i32* @ebp, align 4
  %v1_ecc9 = add i32 %v0_ecc9, -36
  %v2_ecc9 = inttoptr i32 %v1_ecc9 to i32*
  %v3_ecc9 = load i32, i32* %v2_ecc9, align 4
  %v0_ecd0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_ecd7 = call i32 @unknown_1f1b2(i32 %v1_ecc4, i32 %v0_ecd0, i32 %v3_ecc9)
  store i32 %v3_ecd7, i32* @eax, align 4
  %v0_ecdc = load i32, i32* @ebp, align 4
  %v1_ecdc = add i32 %v0_ecdc, -12
  %v2_ecdc = inttoptr i32 %v1_ecdc to i32*
  %v3_ecdc = load i32, i32* %v2_ecdc, align 4
  %v1_ecdf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_ecdf = icmp eq i32 %v1_ecdf, %v3_ecdc
  br i1 %v3_ecdf, label %bb, label %dec_label_pc_ece8

bb:                                               ; preds = %dec_label_pc_ec92
  %v1_ece6 = call i32 @function_eced()
  store i32 %v1_ece6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %bb, %dec_label_pc_ec92
  %v5_ece6 = phi i32 [ %v1_ece6, %bb ], [ %v3_ecd7, %dec_label_pc_ec92 ]
  ret i32 %v5_ece6

; uselistorder directives
  uselistorder i8 %v4_eca8, { 0, 2, 1 }
  uselistorder i8 %v1_eca8, { 1, 0 }
  uselistorder i8 %v3_eca2, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1f17d, { 1, 0 }
}

define i32 @function_eced() local_unnamed_addr {
dec_label_pc_eced:
  %v0_ecf2 = load i32, i32* @eax, align 4
  ret i32 %v0_ecf2
}

define i32 @_ZSt4fillIP5CTxInS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ecf3:
  %v1_ed1d = call i32 @unknown_1f28a(i32 %arg2)
  %v1_ed2a = call i32 @unknown_1f28a(i32 %arg1)
  ret i32 %v1_ed2a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1f28a, { 1, 0 }
}

define i32 @function_ed32(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ed32:
  %v0_ed32 = load i32, i32* @edx, align 4
  %v0_ed36 = load i32, i32* @ebx, align 4
  %v0_ed3a = load i32, i32* @eax, align 4
  %v3_ed3d = call i32 @unknown_1f2bf(i32 %v0_ed3a, i32 %v0_ed36, i32 %v0_ed32)
  %v0_ed42 = load i32, i32* @ebp, align 4
  %v1_ed42 = add i32 %v0_ed42, -12
  %v2_ed42 = inttoptr i32 %v1_ed42 to i32*
  %v3_ed42 = load i32, i32* %v2_ed42, align 4
  %v1_ed45 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ed45 = xor i32 %v1_ed45, %v3_ed42
  %v3_ed45 = icmp eq i32 %v2_ed45, 0
  store i32 %v2_ed45, i32* @eax, align 4
  br i1 %v3_ed45, label %bb, label %dec_label_pc_ed4e

bb:                                               ; preds = %dec_label_pc_ed32
  %v1_ed4c = call i32 @function_ed53()
  br label %dec_label_pc_ed4e

dec_label_pc_ed4e:                                ; preds = %bb, %dec_label_pc_ed32
  %v2_ed4c = phi i32 [ %v1_ed4c, %bb ], [ %v2_ed45, %dec_label_pc_ed32 ]
  ret i32 %v2_ed4c
}

define i32 @function_ed50(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed50:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ed53() local_unnamed_addr {
dec_label_pc_ed53:
  %v0_ed58 = load i32, i32* @eax, align 4
  ret i32 %v0_ed58
}

define i32 @_ZSt24__uninitialized_fill_n_aIP5CTxInjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ed59:
  %v7_ed96 = call i32 @unknown_1f412(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eda7

bb:                                               ; preds = %dec_label_pc_ed59
  %v1_eda5 = call i32 @function_edac()
  br label %dec_label_pc_eda7

dec_label_pc_eda7:                                ; preds = %bb, %dec_label_pc_ed59
  %v2_eda5 = phi i32 [ %v1_eda5, %bb ], [ 0, %dec_label_pc_ed59 ]
  ret i32 %v2_eda5

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_edac() local_unnamed_addr {
dec_label_pc_edac:
  %v0_edad = load i32, i32* @eax, align 4
  ret i32 %v0_edad
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_edae:
  ret i32 %arg2
}

define i32 @function_edc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_edc0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_edc0 = load i32, i32* @ecx, align 4
  %v1_edc0 = add i32 %v0_edc0, 255
  %v0_edc2 = load i32, i32* @ebp, align 4
  %v1_edc2 = add i32 %v0_edc2, 1
  store i32 %v1_edc2, i32* @ebp, align 4
  %v1_edc3 = add i32 %v0_edc0, -1587159996
  %v2_edc3 = inttoptr i32 %v1_edc3 to i8*
  %v3_edc3 = load i8, i8* %v2_edc3, align 1
  %v5_edc3 = trunc i32 %v1_edc0 to i8
  %v6_edc3 = load i1, i1* @cf, align 1
  %v7_edc3 = zext i1 %v6_edc3 to i8
  %v8_edc3 = add i8 %v3_edc3, %v5_edc3
  %v9_edc3 = add i8 %v7_edc3, %v8_edc3
  %v27_edc3 = icmp ule i8 %v9_edc3, %v3_edc3
  %v28_edc3 = icmp ult i8 %v8_edc3, %v3_edc3
  %v29_edc3 = select i1 %v6_edc3, i1 %v27_edc3, i1 %v28_edc3
  store i1 %v29_edc3, i1* %cf.global-to-local, align 1
  store i8 %v9_edc3, i8* %v2_edc3, align 1
  %v0_edc9 = load i32, i32* @eax, align 4
  %v1_edc9 = trunc i32 %v0_edc9 to i8
  %v2_edc9 = load i1, i1* %cf.global-to-local, align 1
  %v3_edc9 = zext i1 %v2_edc9 to i8
  %v4_edc9 = add i8 %v3_edc9, %v1_edc9
  %v19_edc9 = icmp ule i8 %v4_edc9, %v1_edc9
  %v21_edc9 = icmp eq i1 %v2_edc9, %v19_edc9
  store i1 %v21_edc9, i1* %cf.global-to-local, align 1
  %v22_edc9 = zext i8 %v4_edc9 to i32
  %v24_edc9 = and i32 %v0_edc9, -256
  %v25_edc9 = or i32 %v22_edc9, %v24_edc9
  store i32 %v25_edc9, i32* %eax.global-to-local, align 4
  %v1_edcb = inttoptr i32 %v25_edc9 to i8*
  %v2_edcb = load i8, i8* %v1_edcb, align 1
  %v5_edcb = add i8 %v2_edcb, %v4_edc9
  store i8 %v5_edcb, i8* %v1_edcb, align 1
  %v0_edcd = load i32, i32* %eax.global-to-local, align 4
  %v1_edcd = load i32, i32* @ebp, align 4
  %v2_edcd = add i32 %v1_edcd, -12
  %v3_edcd = inttoptr i32 %v2_edcd to i32*
  store i32 %v0_edcd, i32* %v3_edcd, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_edd2 = load i32, i32* @ebp, align 4
  %v1_edd2 = add i32 %v0_edd2, -28
  %v2_edd2 = inttoptr i32 %v1_edd2 to i32*
  %v3_edd2 = load i32, i32* %v2_edd2, align 4
  store i32 %v3_edd2, i32* %eax.global-to-local, align 4
  %v1_edd8 = call i32 @unknown_1f4b6(i32 %v3_edd2)
  store i32 %v1_edd8, i32* %eax.global-to-local, align 4
  store i32 %v1_edd8, i32* %ebx.global-to-local, align 4
  %v0_eddf = load i32, i32* @ebp, align 4
  %v1_eddf = add i32 %v0_eddf, -28
  %v2_eddf = inttoptr i32 %v1_eddf to i32*
  %v3_eddf = load i32, i32* %v2_eddf, align 4
  store i32 %v3_eddf, i32* %eax.global-to-local, align 4
  %v1_ede5 = call i32 @unknown_16054(i32 %v3_eddf)
  store i32 %v1_ede5, i32* %eax.global-to-local, align 4
  %v0_edea = load i32, i32* %ebx.global-to-local, align 4
  %v2_edec = sub i32 %v0_edea, %v1_ede5
  %v0_edee = load i32, i32* @ebp, align 4
  %v1_edee = add i32 %v0_edee, -32
  %v2_edee = inttoptr i32 %v1_edee to i32*
  %v3_edee = load i32, i32* %v2_edee, align 4
  %v7_edf1 = icmp ult i32 %v2_edec, %v3_edee
  %v1_edf3 = zext i1 %v7_edf1 to i32
  %v3_edf3 = and i32 %v3_edee, -256
  %v4_edf3 = or i32 %v1_edf3, %v3_edf3
  store i32 %v4_edf3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_edf6 = icmp eq i1 %v7_edf1, false
  br i1 %v5_edf6, label %bb, label %dec_label_pc_edfa

bb:                                               ; preds = %dec_label_pc_edc0
  %v1_edf8 = call i32 @function_ee05()
  store i32 %v1_edf8, i32* %eax.global-to-local, align 4
  %v0_edfa.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_edfa

dec_label_pc_edfa:                                ; preds = %bb, %dec_label_pc_edc0
  %v0_edfa = phi i32 [ %v0_edfa.pre, %bb ], [ %v0_edee, %dec_label_pc_edc0 ]
  %v1_edfa = add i32 %v0_edfa, -36
  %v2_edfa = inttoptr i32 %v1_edfa to i32*
  %v3_edfa = load i32, i32* %v2_edfa, align 4
  store i32 %v3_edfa, i32* %eax.global-to-local, align 4
  ret i32 %v3_edfa

; uselistorder directives
  uselistorder i1 %v7_edf1, { 1, 0 }
  uselistorder i8 %v4_edc9, { 0, 2, 1 }
  uselistorder i8 %v1_edc9, { 1, 0 }
  uselistorder i8 %v9_edc3, { 1, 0 }
  uselistorder i8 %v8_edc3, { 1, 0 }
  uselistorder i8 %v3_edc3, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @function_ee05() local_unnamed_addr {
dec_label_pc_ee05:
  %v0_ee05 = load i32, i32* @ebp, align 4
  %v1_ee05 = add i32 %v0_ee05, -28
  %v2_ee05 = inttoptr i32 %v1_ee05 to i32*
  %v3_ee05 = load i32, i32* %v2_ee05, align 4
  %v1_ee0b = call i32 @unknown_16054(i32 %v3_ee05)
  %v0_ee12 = load i32, i32* @ebp, align 4
  %v1_ee12 = add i32 %v0_ee12, -28
  %v2_ee12 = inttoptr i32 %v1_ee12 to i32*
  %v3_ee12 = load i32, i32* %v2_ee12, align 4
  %v1_ee18 = call i32 @unknown_16054(i32 %v3_ee12)
  ret i32 %v1_ee18
}

define i32 @function_ee1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee1e:
  %v0_ee1e = load i32, i32* @ebp, align 4
  %v1_ee1e = add i32 %v0_ee1e, 1
  store i32 %v1_ee1e, i32* @ebp, align 4
  %v1_ee20 = add i32 %v0_ee1e, -31
  %v1_ee27 = add i32 %v0_ee1e, -19
  %v2_ee2d = call i32 @unknown_1c89d(i32 %v1_ee27, i32 %v1_ee20)
  %v1_ee32 = inttoptr i32 %v2_ee2d to i32*
  %v2_ee32 = load i32, i32* %v1_ee32, align 4
  %v1_ee34 = load i32, i32* @ebx, align 4
  %v2_ee34 = add i32 %v1_ee34, %v2_ee32
  %v1_ee36 = load i32, i32* @ebp, align 4
  %v2_ee36 = add i32 %v1_ee36, -16
  %v3_ee36 = inttoptr i32 %v2_ee36 to i32*
  store i32 %v2_ee34, i32* %v3_ee36, align 4
  %v0_ee39 = load i32, i32* @ebp, align 4
  %v1_ee39 = add i32 %v0_ee39, -28
  %v2_ee39 = inttoptr i32 %v1_ee39 to i32*
  %v3_ee39 = load i32, i32* %v2_ee39, align 4
  %v1_ee3f = call i32 @unknown_16054(i32 %v3_ee39)
  %v1_ee44 = load i32, i32* @ebp, align 4
  %v2_ee44 = add i32 %v1_ee44, -16
  %v3_ee44 = inttoptr i32 %v2_ee44 to i32*
  %v4_ee44 = load i32, i32* %v3_ee44, align 4
  %tmp6 = icmp ugt i32 %v1_ee3f, %v4_ee44
  br i1 %tmp6, label %dec_label_pc_ee59, label %dec_label_pc_ee49

dec_label_pc_ee49:                                ; preds = %dec_label_pc_ee1e
  %v1_ee49 = add i32 %v1_ee44, -28
  %v2_ee49 = inttoptr i32 %v1_ee49 to i32*
  %v3_ee49 = load i32, i32* %v2_ee49, align 4
  %v1_ee4f = call i32 @unknown_1f4b6(i32 %v3_ee49)
  %v1_ee54 = load i32, i32* @ebp, align 4
  %v2_ee54 = add i32 %v1_ee54, -16
  %v3_ee54 = inttoptr i32 %v2_ee54 to i32*
  %v4_ee54 = load i32, i32* %v3_ee54, align 4
  %v10_ee54 = icmp ult i32 %v1_ee4f, %v4_ee54
  %v1_ee57 = icmp eq i1 %v10_ee54, false
  br i1 %v1_ee57, label %dec_label_pc_ee69, label %dec_label_pc_ee59

dec_label_pc_ee59:                                ; preds = %dec_label_pc_ee1e, %dec_label_pc_ee49
  %v0_ee59 = phi i32 [ %v1_ee44, %dec_label_pc_ee1e ], [ %v1_ee54, %dec_label_pc_ee49 ]
  %v1_ee59 = add i32 %v0_ee59, -28
  %v2_ee59 = inttoptr i32 %v1_ee59 to i32*
  %v3_ee59 = load i32, i32* %v2_ee59, align 4
  %v1_ee5f = call i32 @unknown_1f4b6(i32 %v3_ee59)
  %v0_ee69.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_ee69

dec_label_pc_ee69:                                ; preds = %dec_label_pc_ee49, %dec_label_pc_ee59
  %v0_ee69 = phi i32 [ %v0_ee69.pre, %dec_label_pc_ee59 ], [ %v1_ee54, %dec_label_pc_ee49 ]
  %storemerge = phi i32 [ %v1_ee5f, %dec_label_pc_ee59 ], [ %v4_ee54, %dec_label_pc_ee49 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_ee69 = add i32 %v0_ee69, -12
  %v2_ee69 = inttoptr i32 %v1_ee69 to i32*
  %v3_ee69 = load i32, i32* %v2_ee69, align 4
  %v1_ee6c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_ee6c = icmp eq i32 %v1_ee6c, %v3_ee69
  br i1 %v3_ee6c, label %bb, label %dec_label_pc_ee75

bb:                                               ; preds = %dec_label_pc_ee69
  %v1_ee73 = call i32 @function_ee7a()
  br label %dec_label_pc_ee75

dec_label_pc_ee75:                                ; preds = %bb, %dec_label_pc_ee69
  %v2_ee73 = phi i32 [ %v1_ee73, %bb ], [ %storemerge, %dec_label_pc_ee69 ]
  ret i32 %v2_ee73

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1f4b6, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_16054, { 3, 2, 1, 0 }
  uselistorder i32 -31, { 1, 0 }
  uselistorder label %dec_label_pc_ee69, { 1, 0 }
  uselistorder label %dec_label_pc_ee59, { 1, 0 }
}

define i32 @function_ee7a() local_unnamed_addr {
dec_label_pc_ee7a:
  %v0_ee7a = load i32, i32* @esp, align 4
  %v5_ee7a = icmp ugt i32 %v0_ee7a, -53
  store i1 %v5_ee7a, i1* @cf, align 1
  %v0_ee7f = load i32, i32* @eax, align 4
  ret i32 %v0_ee7f

; uselistorder directives
  uselistorder i32* @esp, { 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee80:
  %v2_eeaa = call i32 @unknown_1b292(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eebe

bb:                                               ; preds = %dec_label_pc_ee80
  %v1_eebc = call i32 @function_eec3()
  br label %dec_label_pc_eebe

dec_label_pc_eebe:                                ; preds = %bb, %dec_label_pc_ee80
  %v2_eebc = phi i32 [ %v1_eebc, %bb ], [ %arg1, %dec_label_pc_ee80 ]
  ret i32 %v2_eebc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_eec3() local_unnamed_addr {
dec_label_pc_eec3:
  %v0_eec4 = load i32, i32* @eax, align 4
  ret i32 %v0_eec4
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eec8:
  %v10_eee5 = icmp eq i32 %arg2, 0
  br i1 %v10_eee5, label %dec_label_pc_ef0c, label %dec_label_pc_eeeb

dec_label_pc_eeeb:                                ; preds = %dec_label_pc_eec8
  %v3_ef00 = call i32 @unknown_1f60e(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_eec8, %dec_label_pc_eeeb
  %storemerge = phi i32 [ %v3_ef00, %dec_label_pc_eeeb ], [ 0, %dec_label_pc_eec8 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ef18

bb:                                               ; preds = %dec_label_pc_ef0c
  %v1_ef16 = call i32 @function_ef1d()
  br label %dec_label_pc_ef18

dec_label_pc_ef18:                                ; preds = %bb, %dec_label_pc_ef0c
  %v2_ef16 = phi i32 [ %v1_ef16, %bb ], [ %storemerge, %dec_label_pc_ef0c ]
  ret i32 %v2_ef16

; uselistorder directives
  uselistorder label %dec_label_pc_ef0c, { 1, 0 }
}

define i32 @function_ef1d() local_unnamed_addr {
dec_label_pc_ef1d:
  %v0_ef1e = load i32, i32* @eax, align 4
  ret i32 %v0_ef1e
}

define i32 @_ZN9__gnu_cxxmiIP6CTxOutSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef1f:
  %v1_ef43 = call i32 @unknown_1defb(i32 %arg1)
  %v1_ef52 = call i32 @unknown_1defb(i32 %arg2)
  %v1_ef57 = inttoptr i32 %v1_ef52 to i32*
  %v2_ef57 = load i32, i32* %v1_ef57, align 4
  ret i32 %v2_ef57

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1defb, { 1, 0 }
}

define i32 @function_ef5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef5e:
  %v0_ef68 = load i32, i32* @ebp, align 4
  %v1_ef68 = add i32 %v0_ef68, -12
  %v2_ef68 = inttoptr i32 %v1_ef68 to i32*
  %v3_ef68 = load i32, i32* %v2_ef68, align 4
  %v1_ef6b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ef6b = icmp eq i32 %v1_ef6b, %v3_ef68
  br i1 %v3_ef6b, label %bb, label %dec_label_pc_ef5e.dec_label_pc_ef74_crit_edge

dec_label_pc_ef5e.dec_label_pc_ef74_crit_edge:    ; preds = %dec_label_pc_ef5e
  %v2_ef72.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_ef74

bb:                                               ; preds = %dec_label_pc_ef5e
  %v1_ef72 = call i32 @function_ef79()
  br label %dec_label_pc_ef74

dec_label_pc_ef74:                                ; preds = %dec_label_pc_ef5e.dec_label_pc_ef74_crit_edge, %bb
  %v2_ef72 = phi i32 [ %v2_ef72.pre, %dec_label_pc_ef5e.dec_label_pc_ef74_crit_edge ], [ %v1_ef72, %bb ]
  ret i32 %v2_ef72

; uselistorder directives
  uselistorder label %dec_label_pc_ef74, { 1, 0 }
}

define i32 @function_ef79() local_unnamed_addr {
dec_label_pc_ef79:
  %v0_ef7e = load i32, i32* @eax, align 4
  ret i32 %v0_ef7e
}

define i32 @_ZSt22__uninitialized_move_aIP6CTxOutS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ef7f:
  %v0_ef9d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_ef9d
}

define i32 @function_efa5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_efa5:
  %v0_efa8 = load i32, i32* @ebp, align 4
  %v1_efa8 = add i32 %v0_efa8, -40
  %v2_efa8 = inttoptr i32 %v1_efa8 to i32*
  %v3_efa8 = load i32, i32* %v2_efa8, align 4
  %v1_efaf = add i32 %v0_efa8, -36
  %v2_efaf = inttoptr i32 %v1_efaf to i32*
  %v3_efaf = load i32, i32* %v2_efaf, align 4
  %v1_efb6 = add i32 %v0_efa8, -32
  %v2_efb6 = inttoptr i32 %v1_efb6 to i32*
  %v3_efb6 = load i32, i32* %v2_efb6, align 4
  %v1_efbd = add i32 %v0_efa8, -28
  %v2_efbd = inttoptr i32 %v1_efbd to i32*
  %v3_efbd = load i32, i32* %v2_efbd, align 4
  %v4_efc3 = call i32 @unknown_1e805(i32 %v3_efbd, i32 %v3_efb6, i32 %v3_efaf, i32 %v3_efa8)
  store i32 %v4_efc3, i32* @eax, align 4
  %v0_efc8 = load i32, i32* @ebp, align 4
  %v1_efc8 = add i32 %v0_efc8, -12
  %v2_efc8 = inttoptr i32 %v1_efc8 to i32*
  %v3_efc8 = load i32, i32* %v2_efc8, align 4
  %v1_efcb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_efcb = icmp eq i32 %v1_efcb, %v3_efc8
  br i1 %v3_efcb, label %bb, label %dec_label_pc_efd4

bb:                                               ; preds = %dec_label_pc_efa5
  %v1_efd2 = call i32 @function_efd9()
  br label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %bb, %dec_label_pc_efa5
  %v2_efd2 = phi i32 [ %v1_efd2, %bb ], [ %v4_efc3, %dec_label_pc_efa5 ]
  ret i32 %v2_efd2

; uselistorder directives
  uselistorder i32 %v0_efa8, { 1, 0, 2, 3 }
}

define i32 @function_efd9() local_unnamed_addr {
dec_label_pc_efd9:
  %v4_efd9 = load i32, i32* @eax, align 4
  ret i32 %v4_efd9
}

define i32 @function_efda(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_efda:
  %v0_efda = load i32, i32* @eax, align 4
  ret i32 %v0_efda
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_efdc:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f002

bb:                                               ; preds = %dec_label_pc_efdc
  %v2_f000 = call i32 @function_f007(i32 %arg1)
  br label %dec_label_pc_f002

dec_label_pc_f002:                                ; preds = %bb, %dec_label_pc_efdc
  %v3_f000 = phi i32 [ %v2_f000, %bb ], [ %arg1, %dec_label_pc_efdc ]
  ret i32 %v3_f000
}

define i32 @function_f007(i32 %arg1) local_unnamed_addr {
dec_label_pc_f007:
  %v0_f008 = load i32, i32* @eax, align 4
  ret i32 %v0_f008
}

define i32 @_ZSt13copy_backwardIP6CTxOutS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f009:
  %v1_f033 = call i32 @unknown_1f7ad(i32 %arg2)
  %v1_f040 = call i32 @unknown_1f7ad(i32 %arg1)
  %v3_f053 = call i32 @unknown_1f7e2(i32 %v1_f040, i32 %v1_f033, i32 %arg3)
  store i32 %v3_f053, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f064

bb:                                               ; preds = %dec_label_pc_f009
  %v1_f062 = call i32 @function_f069()
  br label %dec_label_pc_f064

dec_label_pc_f064:                                ; preds = %bb, %dec_label_pc_f009
  %v2_f062 = phi i32 [ %v1_f062, %bb ], [ %v3_f053, %dec_label_pc_f009 ]
  ret i32 %v2_f062

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1f7ad, { 1, 0 }
}

define i32 @function_f069() local_unnamed_addr {
dec_label_pc_f069:
  %v0_f06e = load i32, i32* @eax, align 4
  ret i32 %v0_f06e
}

define i32 @_ZSt4fillIP6CTxOutS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f06f:
  ret i32 %arg2
}

define i32 @function_f09c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f09c:
  %ebx.global-to-local = alloca i32, align 4
  %v2_f09c = load i32, i32* @eax, align 4
  %v4_f09c = mul i32 %v2_f09c, 2
  %v21_f09c = inttoptr i32 %v2_f09c to i32*
  store i32 %v4_f09c, i32* %v21_f09c, align 4
  %v0_f09e = load i32, i32* @eax, align 4
  store i32 %v0_f09e, i32* %ebx.global-to-local, align 4
  %v0_f0a0 = load i32, i32* @ebp, align 4
  %v1_f0a0 = add i32 %v0_f0a0, -28
  %v2_f0a0 = inttoptr i32 %v1_f0a0 to i32*
  %v3_f0a0 = load i32, i32* %v2_f0a0, align 4
  %v1_f0a6 = call i32 @unknown_1f8ba(i32 %v3_f0a0)
  %v0_f0ab = load i32, i32* @ebp, align 4
  %v1_f0ab = add i32 %v0_f0ab, -36
  %v2_f0ab = inttoptr i32 %v1_f0ab to i32*
  %v3_f0ab = load i32, i32* %v2_f0ab, align 4
  %v0_f0b2 = load i32, i32* %ebx.global-to-local, align 4
  %v3_f0b9 = call i32 @unknown_1f8ef(i32 %v1_f0a6, i32 %v0_f0b2, i32 %v3_f0ab)
  %v0_f0be = load i32, i32* @ebp, align 4
  %v1_f0be = add i32 %v0_f0be, -12
  %v2_f0be = inttoptr i32 %v1_f0be to i32*
  %v3_f0be = load i32, i32* %v2_f0be, align 4
  %v1_f0c1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f0c1 = xor i32 %v1_f0c1, %v3_f0be
  %v3_f0c1 = icmp eq i32 %v2_f0c1, 0
  store i32 %v2_f0c1, i32* @eax, align 4
  br i1 %v3_f0c1, label %bb, label %dec_label_pc_f0ca

bb:                                               ; preds = %dec_label_pc_f09c
  %v1_f0c8 = call i32 @function_f0cf()
  br label %dec_label_pc_f0ca

dec_label_pc_f0ca:                                ; preds = %bb, %dec_label_pc_f09c
  %v2_f0c8 = phi i32 [ %v1_f0c8, %bb ], [ %v2_f0c1, %dec_label_pc_f09c ]
  ret i32 %v2_f0c8

; uselistorder directives
  uselistorder i32 %v2_f09c, { 1, 0 }
}

define i32 @function_f0cf() local_unnamed_addr {
dec_label_pc_f0cf:
  %v0_f0d4 = load i32, i32* @eax, align 4
  ret i32 %v0_f0d4
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE12_M_check_lenEjPKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f0d6:
  %v1_f100 = call i32 @unknown_1fa0e(i32 %arg1)
  %v1_f10d = call i32 @unknown_16508(i32 %arg1)
  ret i32 %v1_f10d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f114(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f114:
  %v0_f114 = load i32, i32* @edx, align 4
  %v1_f114 = load i32, i32* @eax, align 4
  %v2_f114 = sub i32 %v0_f114, %v1_f114
  %v0_f116 = load i32, i32* @ebp, align 4
  %v1_f116 = add i32 %v0_f116, -32
  %v2_f116 = inttoptr i32 %v1_f116 to i32*
  %v3_f116 = load i32, i32* %v2_f116, align 4
  %v7_f119 = icmp ult i32 %v2_f114, %v3_f116
  %v5_f11e = icmp eq i1 %v7_f119, false
  br i1 %v5_f11e, label %bb, label %dec_label_pc_f122

bb:                                               ; preds = %dec_label_pc_f114
  %v1_f120 = call i32 @function_f12d()
  %v0_f122.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_f122

dec_label_pc_f122:                                ; preds = %bb, %dec_label_pc_f114
  %v0_f122 = phi i32 [ %v0_f122.pre, %bb ], [ %v0_f116, %dec_label_pc_f114 ]
  %v1_f122 = add i32 %v0_f122, -36
  %v2_f122 = inttoptr i32 %v1_f122 to i32*
  %v3_f122 = load i32, i32* %v2_f122, align 4
  ret i32 %v3_f122
}

define i32 @function_f12d() local_unnamed_addr {
dec_label_pc_f12d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_f12d = load i32, i32* @ebp, align 4
  %v1_f12d = add i32 %v0_f12d, -28
  %v2_f12d = inttoptr i32 %v1_f12d to i32*
  %v3_f12d = load i32, i32* %v2_f12d, align 4
  %v1_f133 = call i32 @unknown_16508(i32 %v3_f12d)
  store i32 %v1_f133, i32* %ebx.global-to-local, align 4
  %v0_f13a = load i32, i32* @ebp, align 4
  %v1_f13a = add i32 %v0_f13a, -28
  %v2_f13a = inttoptr i32 %v1_f13a to i32*
  %v3_f13a = load i32, i32* %v2_f13a, align 4
  %v1_f140 = call i32 @unknown_16508(i32 %v3_f13a)
  %v1_f145 = load i32, i32* @ebp, align 4
  %v2_f145 = add i32 %v1_f145, -20
  %v3_f145 = inttoptr i32 %v2_f145 to i32*
  store i32 %v1_f140, i32* %v3_f145, align 4
  %v0_f148 = load i32, i32* @ebp, align 4
  %v1_f148 = add i32 %v0_f148, -32
  %v1_f14f = add i32 %v0_f148, -20
  %v2_f155 = call i32 @unknown_1cbc5(i32 %v1_f14f, i32 %v1_f148)
  %v1_f15a = inttoptr i32 %v2_f155 to i32*
  %v2_f15a = load i32, i32* %v1_f15a, align 4
  %v1_f15c = load i32, i32* %ebx.global-to-local, align 4
  %v2_f15c = add i32 %v1_f15c, %v2_f15a
  %v1_f15e = load i32, i32* @ebp, align 4
  %v2_f15e = add i32 %v1_f15e, -16
  %v3_f15e = inttoptr i32 %v2_f15e to i32*
  store i32 %v2_f15c, i32* %v3_f15e, align 4
  %v0_f161 = load i32, i32* @ebp, align 4
  %v1_f161 = add i32 %v0_f161, -28
  %v2_f161 = inttoptr i32 %v1_f161 to i32*
  %v3_f161 = load i32, i32* %v2_f161, align 4
  %v1_f167 = call i32 @unknown_16508(i32 %v3_f161)
  %v1_f16c = load i32, i32* @ebp, align 4
  %v2_f16c = add i32 %v1_f16c, -16
  %v3_f16c = inttoptr i32 %v2_f16c to i32*
  %v4_f16c = load i32, i32* %v3_f16c, align 4
  %tmp5 = icmp ugt i32 %v1_f167, %v4_f16c
  br i1 %tmp5, label %dec_label_pc_f181, label %dec_label_pc_f171

dec_label_pc_f171:                                ; preds = %dec_label_pc_f12d
  %v1_f171 = add i32 %v1_f16c, -28
  %v2_f171 = inttoptr i32 %v1_f171 to i32*
  %v3_f171 = load i32, i32* %v2_f171, align 4
  %v1_f177 = call i32 @unknown_1fa0e(i32 %v3_f171)
  %v1_f17c = load i32, i32* @ebp, align 4
  %v2_f17c = add i32 %v1_f17c, -16
  %v3_f17c = inttoptr i32 %v2_f17c to i32*
  %v4_f17c = load i32, i32* %v3_f17c, align 4
  %v10_f17c = icmp ult i32 %v1_f177, %v4_f17c
  %v1_f17f = icmp eq i1 %v10_f17c, false
  br i1 %v1_f17f, label %dec_label_pc_f191, label %dec_label_pc_f181

dec_label_pc_f181:                                ; preds = %dec_label_pc_f12d, %dec_label_pc_f171
  %v0_f181 = phi i32 [ %v1_f16c, %dec_label_pc_f12d ], [ %v1_f17c, %dec_label_pc_f171 ]
  %v1_f181 = add i32 %v0_f181, -28
  %v2_f181 = inttoptr i32 %v1_f181 to i32*
  %v3_f181 = load i32, i32* %v2_f181, align 4
  %v1_f187 = call i32 @unknown_1fa0e(i32 %v3_f181)
  %v0_f191.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_f191

dec_label_pc_f191:                                ; preds = %dec_label_pc_f171, %dec_label_pc_f181
  %v0_f191 = phi i32 [ %v0_f191.pre, %dec_label_pc_f181 ], [ %v1_f17c, %dec_label_pc_f171 ]
  %storemerge = phi i32 [ %v1_f187, %dec_label_pc_f181 ], [ %v4_f17c, %dec_label_pc_f171 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_f191 = add i32 %v0_f191, -12
  %v2_f191 = inttoptr i32 %v1_f191 to i32*
  %v3_f191 = load i32, i32* %v2_f191, align 4
  %v1_f194 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f194 = icmp eq i32 %v1_f194, %v3_f191
  br i1 %v3_f194, label %bb, label %dec_label_pc_f19d

bb:                                               ; preds = %dec_label_pc_f191
  %v1_f19b = call i32 @function_f1a2()
  br label %dec_label_pc_f19d

dec_label_pc_f19d:                                ; preds = %bb, %dec_label_pc_f191
  %v2_f19b = phi i32 [ %v1_f19b, %bb ], [ %storemerge, %dec_label_pc_f191 ]
  ret i32 %v2_f19b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1fa0e, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_16508, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f191, { 1, 0 }
  uselistorder label %dec_label_pc_f181, { 1, 0 }
}

define i32 @function_f1a2() local_unnamed_addr {
dec_label_pc_f1a2:
  %v0_f1a7 = load i32, i32* @eax, align 4
  ret i32 %v0_f1a7
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5beginEv() local_unnamed_addr {
dec_label_pc_f1a8:
  %eax.global-to-local = alloca i32, align 4
  %v17_f1ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_f1ab
}

define i32 @function_f1ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f1ae:
  %v0_f1ae = load i32, i32* @ebp, align 4
  %v1_f1ae = add i32 %v0_f1ae, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_f1ae = inttoptr i32 %v1_f1ae to i32*
  %v3_f1ae = load i32, i32* %v2_f1ae, align 4
  %v2_f1b1 = add i32 %v0_f1ae, -28
  %v3_f1b1 = inttoptr i32 %v2_f1b1 to i32*
  store i32 %v3_f1ae, i32* %v3_f1b1, align 4
  %v0_f1b4 = load i32, i32* @ebp, align 4
  %v1_f1b4 = add i32 %v0_f1b4, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_f1b4 = inttoptr i32 %v1_f1b4 to i32*
  %v3_f1b4 = load i32, i32* %v2_f1b4, align 4
  %v2_f1b7 = add i32 %v0_f1b4, -32
  %v3_f1b7 = inttoptr i32 %v2_f1b7 to i32*
  store i32 %v3_f1b4, i32* %v3_f1b7, align 4
  %v0_f1ba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_f1c0 = load i32, i32* @ebp, align 4
  %v2_f1c0 = add i32 %v1_f1c0, -12
  %v3_f1c0 = inttoptr i32 %v2_f1c0 to i32*
  store i32 %v0_f1ba, i32* %v3_f1c0, align 4
  %v0_f1c5 = load i32, i32* @ebp, align 4
  %v1_f1c5 = add i32 %v0_f1c5, -32
  %v2_f1c5 = inttoptr i32 %v1_f1c5 to i32*
  %v3_f1c5 = load i32, i32* %v2_f1c5, align 4
  ret i32 %v3_f1c5
}

define i32 @function_f1ce(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1ce:
  %v0_f1d2 = call i32 @unknown_1b100()
  %v0_f1d7 = load i32, i32* @ebp, align 4
  %v1_f1d7 = add i32 %v0_f1d7, -28
  %v2_f1d7 = inttoptr i32 %v1_f1d7 to i32*
  %v3_f1d7 = load i32, i32* %v2_f1d7, align 4
  store i32 %v3_f1d7, i32* @eax, align 4
  %v1_f1da = add i32 %v0_f1d7, -12
  %v2_f1da = inttoptr i32 %v1_f1da to i32*
  %v3_f1da = load i32, i32* %v2_f1da, align 4
  %v1_f1dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f1dd = icmp eq i32 %v1_f1dd, %v3_f1da
  br i1 %v3_f1dd, label %bb, label %dec_label_pc_f1e6

bb:                                               ; preds = %dec_label_pc_f1ce
  %v1_f1e4 = call i32 @function_f1eb()
  br label %dec_label_pc_f1e6

dec_label_pc_f1e6:                                ; preds = %bb, %dec_label_pc_f1ce
  %v2_f1e4 = phi i32 [ %v1_f1e4, %bb ], [ %v3_f1d7, %dec_label_pc_f1ce ]
  ret i32 %v2_f1e4
}

define i32 @function_f1eb() local_unnamed_addr {
dec_label_pc_f1eb:
  %v0_f1ec = load i32, i32* @eax, align 4
  ret i32 %v0_f1ec
}

define i32 @_ZNKSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f1f0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f216

bb:                                               ; preds = %dec_label_pc_f1f0
  %v2_f214 = call i32 @function_f21b(i32 %arg1)
  br label %dec_label_pc_f216

dec_label_pc_f216:                                ; preds = %bb, %dec_label_pc_f1f0
  %v3_f214 = phi i32 [ %v2_f214, %bb ], [ %arg1, %dec_label_pc_f1f0 ]
  ret i32 %v3_f214
}

define i32 @function_f21b(i32 %arg1) local_unnamed_addr {
dec_label_pc_f21b:
  %v0_f21c = load i32, i32* @eax, align 4
  ret i32 %v0_f21c
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1EjRKS1_() local_unnamed_addr {
dec_label_pc_f21e:
  %eax.global-to-local = alloca i32, align 4
  %v5_f221 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_f221
}

define i32 @function_f223(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f223:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_f224 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_f224 = xor i32 %v0_f224, 139
  store i32 %v11_f224, i32* %eax.global-to-local, align 4
  %v0_f226 = load i32, i32* @ebp, align 4
  %v1_f226 = add i32 %v0_f226, 1
  store i32 %v1_f226, i32* %ebp.global-to-local, align 4
  %v0_f227 = load i32, i32* @ecx, align 4
  %v1_f227 = add i32 %v0_f227, 1166795845
  %v2_f227 = inttoptr i32 %v1_f227 to i8*
  %v3_f227 = load i8, i8* %v2_f227, align 1
  %v5_f227 = trunc i32 %v0_f227 to i8
  %v6_f227 = or i8 %v3_f227, %v5_f227
  store i8 %v6_f227, i8* %v2_f227, align 1
  %v0_f22d = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_f22d = or i32 %v0_f22d, 137
  store i32 %v11_f22d, i32* %eax.global-to-local, align 4
  %v0_f22f = load i32, i32* %ebp.global-to-local, align 4
  %v0_f230 = load i32, i32* @ecx, align 4
  %v1_f230 = add i32 %v0_f230, -1
  store i32 %v1_f230, i32* @ecx, align 4
  %v1_f232 = add i32 %v0_f22f, 2
  store i32 %v1_f232, i32* @ebp, align 4
  %v1_f233 = add i32 %v0_f230, -1587159996
  %v2_f233 = inttoptr i32 %v1_f233 to i8*
  %v3_f233 = load i8, i8* %v2_f233, align 1
  %v5_f233 = trunc i32 %v1_f230 to i8
  %v8_f233 = add i8 %v3_f233, %v5_f233
  %v28_f233 = icmp ult i8 %v8_f233, %v3_f233
  store i1 %v28_f233, i1* %cf.global-to-local, align 1
  store i8 %v8_f233, i8* %v2_f233, align 1
  %v0_f239 = load i32, i32* %eax.global-to-local, align 4
  %v1_f239 = trunc i32 %v0_f239 to i8
  %v2_f239 = load i1, i1* %cf.global-to-local, align 1
  %v3_f239 = zext i1 %v2_f239 to i8
  %v4_f239 = add i8 %v3_f239, %v1_f239
  %v19_f239 = icmp ule i8 %v4_f239, %v1_f239
  %v21_f239 = icmp eq i1 %v2_f239, %v19_f239
  store i1 %v21_f239, i1* %cf.global-to-local, align 1
  %v22_f239 = zext i8 %v4_f239 to i32
  %v24_f239 = and i32 %v0_f239, -256
  %v25_f239 = or i32 %v22_f239, %v24_f239
  store i32 %v25_f239, i32* %eax.global-to-local, align 4
  %v1_f23b = inttoptr i32 %v25_f239 to i8*
  %v2_f23b = load i8, i8* %v1_f23b, align 1
  %v5_f23b = add i8 %v2_f23b, %v4_f239
  store i8 %v5_f23b, i8* %v1_f23b, align 1
  %v0_f23d = load i32, i32* %eax.global-to-local, align 4
  %v1_f23d = load i32, i32* @ebp, align 4
  %v2_f23d = add i32 %v1_f23d, -12
  %v3_f23d = inttoptr i32 %v2_f23d to i32*
  store i32 %v0_f23d, i32* %v3_f23d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f242 = load i32, i32* @ebp, align 4
  %v1_f242 = add i32 %v0_f242, -28
  %v2_f242 = inttoptr i32 %v1_f242 to i32*
  %v3_f242 = load i32, i32* %v2_f242, align 4
  store i32 %v3_f242, i32* %eax.global-to-local, align 4
  %v1_f245 = add i32 %v0_f242, -36
  %v2_f245 = inttoptr i32 %v1_f245 to i32*
  %v3_f245 = load i32, i32* %v2_f245, align 4
  %v2_f24f = call i32 @unknown_1fb94(i32 %v3_f242, i32 %v3_f245)
  store i32 %v2_f24f, i32* %eax.global-to-local, align 4
  %v0_f254 = load i32, i32* @ebp, align 4
  %v1_f254 = add i32 %v0_f254, -32
  %v2_f254 = inttoptr i32 %v1_f254 to i32*
  %v3_f254 = load i32, i32* %v2_f254, align 4
  store i32 %v3_f254, i32* %eax.global-to-local, align 4
  %v1_f25b = add i32 %v0_f254, -28
  %v2_f25b = inttoptr i32 %v1_f25b to i32*
  %v3_f25b = load i32, i32* %v2_f25b, align 4
  store i32 %v3_f25b, i32* %eax.global-to-local, align 4
  %v2_f261 = call i32 @unknown_1e0e6(i32 %v3_f25b, i32 %v3_f254)
  store i32 %v2_f261, i32* %eax.global-to-local, align 4
  %v0_f268 = load i32, i32* @ebp, align 4
  %v1_f268 = add i32 %v0_f268, -28
  %v2_f268 = inttoptr i32 %v1_f268 to i32*
  %v3_f268 = load i32, i32* %v2_f268, align 4
  store i32 %v3_f268, i32* %eax.global-to-local, align 4
  %v2_f26b = inttoptr i32 %v3_f268 to i32*
  store i32 %v2_f261, i32* %v2_f26b, align 4
  %v0_f26d = load i32, i32* @ebp, align 4
  %v1_f26d = add i32 %v0_f26d, -28
  %v2_f26d = inttoptr i32 %v1_f26d to i32*
  %v3_f26d = load i32, i32* %v2_f26d, align 4
  store i32 %v3_f26d, i32* %eax.global-to-local, align 4
  %v1_f270 = inttoptr i32 %v3_f26d to i32*
  %v2_f270 = load i32, i32* %v1_f270, align 4
  %v3_f272 = load i32, i32* %v2_f26d, align 4
  store i32 %v3_f272, i32* %eax.global-to-local, align 4
  %v2_f275 = add i32 %v3_f272, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_f275 = inttoptr i32 %v2_f275 to i32*
  store i32 %v2_f270, i32* %v3_f275, align 4
  %v0_f278 = load i32, i32* @ebp, align 4
  %v1_f278 = add i32 %v0_f278, -28
  %v2_f278 = inttoptr i32 %v1_f278 to i32*
  %v3_f278 = load i32, i32* %v2_f278, align 4
  store i32 %v3_f278, i32* %eax.global-to-local, align 4
  %v1_f27b = inttoptr i32 %v3_f278 to i32*
  %v2_f27b = load i32, i32* %v1_f27b, align 4
  %v1_f27d = add i32 %v0_f278, -32
  %v2_f27d = inttoptr i32 %v1_f27d to i32*
  %v3_f27d = load i32, i32* %v2_f27d, align 4
  %v3_f280 = mul i32 %v3_f27d, 52
  store i32 %v3_f280, i32* %eax.global-to-local, align 4
  %v2_f283 = add i32 %v3_f280, %v2_f27b
  %v3_f285 = load i32, i32* %v2_f278, align 4
  store i32 %v3_f285, i32* %eax.global-to-local, align 4
  %v2_f288 = add i32 %v3_f285, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_f288 = inttoptr i32 %v2_f288 to i32*
  store i32 %v2_f283, i32* %v3_f288, align 4
  %v0_f28b = load i32, i32* @ebp, align 4
  %v1_f28b = add i32 %v0_f28b, -12
  %v2_f28b = inttoptr i32 %v1_f28b to i32*
  %v3_f28b = load i32, i32* %v2_f28b, align 4
  store i32 %v3_f28b, i32* %eax.global-to-local, align 4
  %v1_f28e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f28e = xor i32 %v1_f28e, %v3_f28b
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_f28e = icmp eq i32 %v2_f28e, 0
  store i32 %v2_f28e, i32* @eax, align 4
  br i1 %v3_f28e, label %bb, label %dec_label_pc_f297

bb:                                               ; preds = %dec_label_pc_f223
  %v1_f295 = call i32 @function_f2b5()
  store i32 %v1_f295, i32* @eax, align 4
  br label %dec_label_pc_f297

dec_label_pc_f297:                                ; preds = %bb, %dec_label_pc_f223
  %v0_f297 = call i32 @function_f2b0()
  store i32 %v0_f297, i32* %eax.global-to-local, align 4
  ret i32 %v0_f297

; uselistorder directives
  uselistorder i8 %v4_f239, { 0, 2, 1 }
  uselistorder i8 %v1_f239, { 1, 0 }
  uselistorder i8 %v3_f233, { 1, 0 }
}

define i32 @function_f29a() local_unnamed_addr {
dec_label_pc_f29a:
  %eax.global-to-local = alloca i32, align 4
  %v0_f29a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f29a
}

define i32 @function_f2b0() local_unnamed_addr {
dec_label_pc_f2b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @__stack_chk_fail.398(i32) local_unnamed_addr

define i32 @function_f2b5() local_unnamed_addr {
dec_label_pc_f2b5:
  %v0_f2ba = load i32, i32* @eax, align 4
  ret i32 %v0_f2ba
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f2bb:
  ret i32 %arg1
}

define i32 @function_f2f9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f2f9:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f2f9 = load i32, i32* @eax, align 4
  %v1_f2f9 = load i32, i32* @ebx, align 4
  store i32 %v1_f2f9, i32* %eax.global-to-local, align 4
  store i32 %v0_f2f9, i32* %ebx.global-to-local, align 4
  %v2_f2fa = load i32, i32* @ecx, align 4
  %v4_f2fa = or i32 %v2_f2fa, %v1_f2f9
  store i1 false, i1* %cf.global-to-local, align 1
  %v12_f2fa = inttoptr i32 %v2_f2fa to i32*
  store i32 %v4_f2fa, i32* %v12_f2fa, align 4
  %v0_f2fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_f2fc = add i32 %v0_f2fc, 862319701
  %v2_f2fc = inttoptr i32 %v1_f2fc to i8*
  %v3_f2fc = load i8, i8* %v2_f2fc, align 1
  %v4_f2fc = load i32, i32* @ecx, align 4
  %v5_f2fc = trunc i32 %v4_f2fc to i8
  %v6_f2fc = add i8 %v5_f2fc, %v3_f2fc
  %v11_f2fc = icmp ult i8 %v6_f2fc, %v3_f2fc
  store i1 %v11_f2fc, i1* %cf.global-to-local, align 1
  store i8 %v6_f2fc, i8* %v2_f2fc, align 1
  %v0_f302 = load i32, i32* %eax.global-to-local, align 4
  %v1_f302 = load i1, i1* %cf.global-to-local, align 1
  %v2_f302 = zext i1 %v1_f302 to i32
  %v3_f302 = add i32 %v0_f302, 20
  %v4_f302 = add i32 %v3_f302, %v2_f302
  %v14_f302 = icmp eq i32 %v4_f302, 0
  %v22_f302 = icmp ule i32 %v4_f302, %v0_f302
  %v23_f302 = icmp ugt i32 %v0_f302, -21
  %v24_f302 = select i1 %v1_f302, i1 %v22_f302, i1 %v23_f302
  store i1 %v24_f302, i1* %cf.global-to-local, align 1
  store i32 %v4_f302, i32* @eax, align 4
  br i1 %v14_f302, label %bb, label %dec_label_pc_f309

bb:                                               ; preds = %dec_label_pc_f2f9
  %v1_f307 = call i32 @function_f30e()
  store i32 %v1_f307, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f309

dec_label_pc_f309:                                ; preds = %bb, %dec_label_pc_f2f9
  %v2_f307 = phi i32 [ %v1_f307, %bb ], [ %v4_f302, %dec_label_pc_f2f9 ]
  ret i32 %v2_f307

; uselistorder directives
  uselistorder i32 %v4_f302, { 0, 2, 1, 3 }
  uselistorder i8 %v3_f2fc, { 1, 0 }
  uselistorder i32 %v2_f2fa, { 1, 0 }
}

define i32 @function_f30e() local_unnamed_addr {
dec_label_pc_f30e:
  %v0_f30f = load i32, i32* @eax, align 4
  ret i32 %v0_f30f
}

define i32 @_ZSt12__miter_baseIP12CTransactionENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f310:
  %v1_f32d = call i32 @unknown_1fd34(i32 %arg1)
  store i32 %v1_f32d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f33e

bb:                                               ; preds = %dec_label_pc_f310
  %v1_f33c = call i32 @function_f343()
  br label %dec_label_pc_f33e

dec_label_pc_f33e:                                ; preds = %bb, %dec_label_pc_f310
  %v2_f33c = phi i32 [ %v1_f33c, %bb ], [ %v1_f32d, %dec_label_pc_f310 ]
  ret i32 %v2_f33c
}

define i32 @function_f343() local_unnamed_addr {
dec_label_pc_f343:
  %v0_f344 = load i32, i32* @eax, align 4
  ret i32 %v0_f344
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP12CTransactionS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f345:
  ret i32 %arg3
}

define i32 @function_f35f() local_unnamed_addr {
dec_label_pc_f35f:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f35f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_f365 = load i32, i32* @ebp, align 4
  %v2_f365 = add i32 %v1_f365, -12
  %v3_f365 = inttoptr i32 %v2_f365 to i32*
  store i32 %v0_f35f, i32* %v3_f365, align 4
  %v0_f36a = load i32, i32* @ebp, align 4
  %v1_f36a = add i32 %v0_f36a, -36
  %v2_f36a = inttoptr i32 %v1_f36a to i32*
  %v3_f36a = load i32, i32* %v2_f36a, align 4
  %v1_f370 = call i32 @unknown_1fd96(i32 %v3_f36a)
  store i32 %v1_f370, i32* %esi.global-to-local, align 4
  %v0_f377 = load i32, i32* @ebp, align 4
  %v1_f377 = add i32 %v0_f377, -32
  %v2_f377 = inttoptr i32 %v1_f377 to i32*
  %v3_f377 = load i32, i32* %v2_f377, align 4
  %v1_f37d = call i32 @unknown_1fd96(i32 %v3_f377)
  store i32 %v1_f37d, i32* %ebx.global-to-local, align 4
  %v0_f384 = load i32, i32* @ebp, align 4
  %v1_f384 = add i32 %v0_f384, -28
  %v2_f384 = inttoptr i32 %v1_f384 to i32*
  %v3_f384 = load i32, i32* %v2_f384, align 4
  %v1_f38a = call i32 @unknown_1fd96(i32 %v3_f384)
  %v0_f38f = load i32, i32* %esi.global-to-local, align 4
  %v0_f393 = load i32, i32* %ebx.global-to-local, align 4
  %v3_f39a = call i32 @unknown_1fdcb(i32 %v1_f38a, i32 %v0_f393, i32 %v0_f38f)
  store i32 %v3_f39a, i32* @eax, align 4
  %v0_f39f = load i32, i32* @ebp, align 4
  %v1_f39f = add i32 %v0_f39f, -12
  %v2_f39f = inttoptr i32 %v1_f39f to i32*
  %v3_f39f = load i32, i32* %v2_f39f, align 4
  %v1_f3a2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f3a2 = icmp eq i32 %v1_f3a2, %v3_f39f
  br i1 %v3_f3a2, label %bb, label %dec_label_pc_f3ab

bb:                                               ; preds = %dec_label_pc_f35f
  %v1_f3a9 = call i32 @function_f3b0()
  br label %dec_label_pc_f3ab

dec_label_pc_f3ab:                                ; preds = %bb, %dec_label_pc_f35f
  %v2_f3a9 = phi i32 [ %v1_f3a9, %bb ], [ %v3_f39a, %dec_label_pc_f35f ]
  ret i32 %v2_f3a9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1fd96, { 2, 1, 0 }
}

define i32 @function_f3b0() local_unnamed_addr {
dec_label_pc_f3b0:
  %v0_f3b6 = load i32, i32* @eax, align 4
  ret i32 %v0_f3b6
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_f3b8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_f3d2 = add i32 %tmp100, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_f3d2 = inttoptr i32 %v1_f3d2 to i32*
  %v3_f3d2 = load i32, i32* %v2_f3d2, align 4
  %v2_f3da = load i32, i32* %arg1, align 4
  %v2_f3de = sub i32 %v3_f3d2, %v2_f3da
  %v2_f3e2 = sdiv i32 %v2_f3de, 4
  %v3_f3e5 = mul i32 %v2_f3e2, -991146299
  store i32 %v3_f3e5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f3f7

bb:                                               ; preds = %dec_label_pc_f3b8
  %v2_f3f5 = call i32 @function_f3fc(i32 %tmp100)
  br label %dec_label_pc_f3f7

dec_label_pc_f3f7:                                ; preds = %bb, %dec_label_pc_f3b8
  %v3_f3f5 = phi i32 [ %v2_f3f5, %bb ], [ %v3_f3e5, %dec_label_pc_f3b8 ]
  ret i32 %v3_f3f5
}

define i32 @function_f3fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3fc:
  %v0_f3fd = load i32, i32* @eax, align 4
  ret i32 %v0_f3fd
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f3fe:
  %v2_f435 = call i32 @unknown_1e2c6(i32 %arg1, i32 %arg2)
  %v1_f443 = call i32 @unknown_184a6(i32 %arg1)
  %v4_f460 = call i32 @unknown_1e6b9(i32 %arg3, i32 %arg4, i32 %v2_f435, i32 %v1_f443)
  store i32 %v2_f435, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f474

bb:                                               ; preds = %dec_label_pc_f3fe
  %v1_f472 = call i32 @function_f4b2()
  store i32 %v1_f472, i32* @eax, align 4
  br label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %bb, %dec_label_pc_f3fe
  %v0_f474 = call i32 @function_f4ad()
  ret i32 %v0_f474

; uselistorder directives
  uselistorder i32 %v2_f435, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f477() local_unnamed_addr {
dec_label_pc_f477:
  %eax.global-to-local = alloca i32, align 4
  %v0_f477 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f477
}

define i32 @function_f4ad() local_unnamed_addr {
dec_label_pc_f4ad:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f4b2() local_unnamed_addr {
dec_label_pc_f4b2:
  %v0_f4b7 = load i32, i32* @eax, align 4
  ret i32 %v0_f4b7
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f4b8:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_f4e1 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f4ee = call i32 @unknown_1ff91(i32 %v2_f4e1, i32 %arg3)
  %v2_f4f6 = ptrtoint i32* %stack_var_-24 to i32
  %v2_f503 = call i32 @unknown_1ff91(i32 %v2_f4f6, i32 %arg2)
  %v3_f515 = load i32, i32* %stack_var_-20, align 4
  %v3_f51c = load i32, i32* %stack_var_-24, align 4
  %v4_f526 = call i32 @unknown_1ffdb(i32 %arg1, i32 %v3_f51c, i32 %v3_f515, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f53d

bb:                                               ; preds = %dec_label_pc_f4b8
  %v1_f53b = call i32 @function_f542()
  br label %dec_label_pc_f53d

dec_label_pc_f53d:                                ; preds = %bb, %dec_label_pc_f4b8
  %v2_f53b = phi i32 [ %v1_f53b, %bb ], [ %arg1, %dec_label_pc_f4b8 ]
  ret i32 %v2_f53b

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_1ff91, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_f542() local_unnamed_addr {
dec_label_pc_f542:
  %v0_f543 = load i32, i32* @eax, align 4
  ret i32 %v0_f543
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f546:
  %v0_f55e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_f55e
}

define i32 @function_f566(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f566:
  %v0_f569 = load i32, i32* @ebp, align 4
  %v1_f569 = add i32 %v0_f569, -32
  %v2_f569 = inttoptr i32 %v1_f569 to i32*
  %v3_f569 = load i32, i32* %v2_f569, align 4
  %v1_f570 = add i32 %v0_f569, -28
  %v2_f570 = inttoptr i32 %v1_f570 to i32*
  %v3_f570 = load i32, i32* %v2_f570, align 4
  %v2_f576 = call i32 @unknown_200fb(i32 %v3_f570, i32 %v3_f569)
  %v0_f57b = load i32, i32* @ebp, align 4
  %v1_f57b = add i32 %v0_f57b, -12
  %v2_f57b = inttoptr i32 %v1_f57b to i32*
  %v3_f57b = load i32, i32* %v2_f57b, align 4
  %v1_f57e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f57e = xor i32 %v1_f57e, %v3_f57b
  %v3_f57e = icmp eq i32 %v2_f57e, 0
  store i32 %v2_f57e, i32* @eax, align 4
  br i1 %v3_f57e, label %bb, label %dec_label_pc_f587

bb:                                               ; preds = %dec_label_pc_f566
  %v1_f585 = call i32 @function_f58c()
  br label %dec_label_pc_f587

dec_label_pc_f587:                                ; preds = %bb, %dec_label_pc_f566
  %v2_f585 = phi i32 [ %v1_f585, %bb ], [ %v2_f57e, %dec_label_pc_f566 ]
  ret i32 %v2_f585
}

define i32 @function_f58c() local_unnamed_addr {
dec_label_pc_f58c:
  %v0_f58d = load i32, i32* @eax, align 4
  ret i32 %v0_f58d
}

define i32 @_ZSt4copyIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f58e:
  %v1_f5b8 = call i32 @unknown_1fa7e(i32 %arg2)
  %v1_f5c5 = call i32 @unknown_1fa7e(i32 %arg1)
  %v3_f5d8 = call i32 @unknown_20185(i32 %v1_f5c5, i32 %v1_f5b8, i32 %arg3)
  store i32 %v3_f5d8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f5e9

bb:                                               ; preds = %dec_label_pc_f58e
  %v1_f5e7 = call i32 @function_f5ee()
  br label %dec_label_pc_f5e9

dec_label_pc_f5e9:                                ; preds = %bb, %dec_label_pc_f58e
  %v2_f5e7 = phi i32 [ %v1_f5e7, %bb ], [ %v3_f5d8, %dec_label_pc_f58e ]
  ret i32 %v2_f5e7

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1fa7e, { 1, 0 }
}

define i32 @function_f5ee() local_unnamed_addr {
dec_label_pc_f5ee:
  %v0_f5f3 = load i32, i32* @eax, align 4
  ret i32 %v0_f5f3
}

define i32 @_ZSt22__uninitialized_copy_aIP5CTxInS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f5f4:
  ret i32 %arg4
}

define i32 @function_f616(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f616:
  %v2_f616 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_f616 = load i32, i32* @eax, align 4
  %v4_f616 = trunc i32 %v3_f616 to i8
  %v5_f616 = add i8 %v4_f616, %v2_f616
  %v21_f616 = inttoptr i32 %v3_f616 to i8*
  store i8 %v5_f616, i8* %v21_f616, align 1
  %v0_f618 = load i32, i32* @eax, align 4
  %v1_f618 = load i32, i32* @ebp, align 4
  %v2_f618 = add i32 %v1_f618, -12
  %v3_f618 = inttoptr i32 %v2_f618 to i32*
  store i32 %v0_f618, i32* %v3_f618, align 4
  %v0_f61d = load i32, i32* @ebp, align 4
  %v1_f62b = add i32 %v0_f61d, -28
  %v2_f62b = inttoptr i32 %v1_f62b to i32*
  %v3_f62b = load i32, i32* %v2_f62b, align 4
  ret i32 %v3_f62b
}

define i32 @function_f646() local_unnamed_addr {
dec_label_pc_f646:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f646 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f646 = add i32 %v0_f646, -1
  store i32 %v1_f646, i32* %ecx.global-to-local, align 4
  %v0_f648 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f648
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE8capacityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f64a:
  ret i32 %arg1
}

define i32 @function_f66c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f66c:
  %v0_f66e = load i32, i32* @edx, align 4
  %v1_f670 = load i32, i32* @eax, align 4
  %v2_f670 = sub i32 %v0_f66e, %v1_f670
  %v2_f674 = sdiv i32 %v2_f670, 4
  %v3_f677 = mul i32 %v2_f674, -858993459
  store i32 %v3_f677, i32* @eax, align 4
  %v0_f67d = load i32, i32* @ebp, align 4
  %v1_f67d = add i32 %v0_f67d, -12
  %v2_f67d = inttoptr i32 %v1_f67d to i32*
  %v3_f67d = load i32, i32* %v2_f67d, align 4
  %v1_f680 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f680 = icmp eq i32 %v1_f680, %v3_f67d
  br i1 %v3_f680, label %bb, label %dec_label_pc_f689

bb:                                               ; preds = %dec_label_pc_f66c
  %v1_f687 = call i32 @function_f68e()
  br label %dec_label_pc_f689

dec_label_pc_f689:                                ; preds = %bb, %dec_label_pc_f66c
  %v2_f687 = phi i32 [ %v1_f687, %bb ], [ %v3_f677, %dec_label_pc_f66c ]
  ret i32 %v2_f687
}

define i32 @function_f68e() local_unnamed_addr {
dec_label_pc_f68e:
  %v0_f68f = load i32, i32* @eax, align 4
  ret i32 %v0_f68f
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f690:
  ret i32 %arg1
}

define i32 @function_f69e(i32 %arg1) local_unnamed_addr {
dec_label_pc_f69e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_f69e = load i32, i32* @ebp, align 4
  %v0_f69f = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_f69f = or i32 %v0_f69f, 137
  store i32 %v11_f69f, i32* %eax.global-to-local, align 4
  %v0_f6a2 = load i32, i32* @ecx, align 4
  %v1_f6a2 = add i32 %v0_f6a2, -1
  store i32 %v1_f6a2, i32* @ecx, align 4
  %v1_f6a4 = add i32 %v0_f69e, 3
  store i32 %v1_f6a4, i32* %ebp.global-to-local, align 4
  %v1_f6a5 = add i32 %v0_f6a2, 1166793796
  %v2_f6a5 = inttoptr i32 %v1_f6a5 to i8*
  %v3_f6a5 = load i8, i8* %v2_f6a5, align 1
  %v5_f6a5 = trunc i32 %v1_f6a2 to i8
  %v8_f6a5 = add i8 %v3_f6a5, %v5_f6a5
  %v28_f6a5 = icmp ult i8 %v8_f6a5, %v3_f6a5
  store i1 %v28_f6a5, i1* %cf.global-to-local, align 1
  store i8 %v8_f6a5, i8* %v2_f6a5, align 1
  %v0_f6ab = load i32, i32* %eax.global-to-local, align 4
  %v1_f6ab = trunc i32 %v0_f6ab to i8
  %v2_f6ab = load i1, i1* %cf.global-to-local, align 1
  %v3_f6ab = zext i1 %v2_f6ab to i8
  %v4_f6ab = add i8 %v1_f6ab, -119
  %v5_f6ab = add i8 %v4_f6ab, %v3_f6ab
  %v22_f6ab = icmp ule i8 %v5_f6ab, %v1_f6ab
  %v23_f6ab = icmp ugt i8 %v1_f6ab, 118
  %v24_f6ab = select i1 %v2_f6ab, i1 %v22_f6ab, i1 %v23_f6ab
  %v25_f6ab = zext i8 %v5_f6ab to i32
  %v27_f6ab = and i32 %v0_f6ab, -256
  %v28_f6ab = or i32 %v25_f6ab, %v27_f6ab
  store i32 %v28_f6ab, i32* %eax.global-to-local, align 4
  %v0_f6ad = load i32, i32* %ebp.global-to-local, align 4
  %v1_f6ad = add i32 %v0_f6ad, 1
  store i32 %v1_f6ad, i32* @ebp, align 4
  %v2_f6ae = add i32 %v0_f6ad, -94
  %v3_f6ae = inttoptr i32 %v2_f6ae to float*
  %v4_f6ae = load float, float* %v3_f6ae, align 4
  %v5_f6ae = fpext float %v4_f6ae to x86_fp80
  %v6_f6ae = load x86_fp80, x86_fp80* @st0, align 4
  %v7_f6ae = fsub x86_fp80 %v5_f6ae, %v6_f6ae
  store x86_fp80 %v7_f6ae, x86_fp80* @st0, align 4
  %v3_f6b1 = zext i1 %v24_f6ab to i8
  %v4_f6b1 = add i8 %v3_f6b1, %v5_f6ab
  %v19_f6b1 = icmp ule i8 %v4_f6b1, %v5_f6ab
  %v21_f6b1 = icmp eq i1 %v24_f6ab, %v19_f6b1
  store i1 %v21_f6b1, i1* %cf.global-to-local, align 1
  %v22_f6b1 = zext i8 %v4_f6b1 to i32
  %v25_f6b1 = or i32 %v22_f6b1, %v27_f6ab
  store i32 %v25_f6b1, i32* %eax.global-to-local, align 4
  %v1_f6b3 = inttoptr i32 %v25_f6b1 to i8*
  %v2_f6b3 = load i8, i8* %v1_f6b3, align 1
  %v5_f6b3 = add i8 %v2_f6b3, %v4_f6b1
  store i8 %v5_f6b3, i8* %v1_f6b3, align 1
  %v0_f6b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_f6b5 = load i32, i32* @ebp, align 4
  %v2_f6b5 = add i32 %v1_f6b5, -12
  %v3_f6b5 = inttoptr i32 %v2_f6b5 to i32*
  store i32 %v0_f6b5, i32* %v3_f6b5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f6ba = load i32, i32* @ebp, align 4
  %v1_f6ba = add i32 %v0_f6ba, -28
  %v2_f6ba = inttoptr i32 %v1_f6ba to i32*
  %v3_f6ba = load i32, i32* %v2_f6ba, align 4
  store i32 %v3_f6ba, i32* %eax.global-to-local, align 4
  %v1_f6bd = add i32 %v0_f6ba, -32
  %v2_f6bd = inttoptr i32 %v1_f6bd to i32*
  %v3_f6bd = load i32, i32* %v2_f6bd, align 4
  %v2_f6c7 = call i32 @unknown_1b4ec(i32 %v3_f6ba, i32 %v3_f6bd)
  store i32 %v2_f6c7, i32* %eax.global-to-local, align 4
  %v1_f6cc = load i32, i32* @ebp, align 4
  %v2_f6cc = add i32 %v1_f6cc, -16
  %v3_f6cc = inttoptr i32 %v2_f6cc to i32*
  store i32 %v2_f6c7, i32* %v3_f6cc, align 4
  %v0_f6cf = load i32, i32* @ebp, align 4
  %v1_f6cf = add i32 %v0_f6cf, -28
  %v2_f6cf = inttoptr i32 %v1_f6cf to i32*
  %v3_f6cf = load i32, i32* %v2_f6cf, align 4
  store i32 %v3_f6cf, i32* %eax.global-to-local, align 4
  %v1_f6d5 = call i32 @unknown_188a4(i32 %v3_f6cf)
  store i32 %v1_f6d5, i32* %eax.global-to-local, align 4
  %v0_f6de = load i32, i32* @ebp, align 4
  %v1_f6de = add i32 %v0_f6de, -16
  %v2_f6de = inttoptr i32 %v1_f6de to i32*
  %v3_f6de = load i32, i32* %v2_f6de, align 4
  store i32 %v3_f6de, i32* %eax.global-to-local, align 4
  %v1_f6e5 = add i32 %v0_f6de, -40
  %v2_f6e5 = inttoptr i32 %v1_f6e5 to i32*
  %v3_f6e5 = load i32, i32* %v2_f6e5, align 4
  store i32 %v3_f6e5, i32* %eax.global-to-local, align 4
  %v1_f6ec = add i32 %v0_f6de, -36
  %v2_f6ec = inttoptr i32 %v1_f6ec to i32*
  %v3_f6ec = load i32, i32* %v2_f6ec, align 4
  store i32 %v3_f6ec, i32* %eax.global-to-local, align 4
  %v4_f6f2 = call i32 @unknown_18be9(i32 %v3_f6ec, i32 %v3_f6e5, i32 %v3_f6de, i32 %v1_f6d5)
  store i32 %v4_f6f2, i32* %eax.global-to-local, align 4
  %v0_f6f7 = load i32, i32* @ebp, align 4
  %v1_f6f7 = add i32 %v0_f6f7, -16
  %v2_f6f7 = inttoptr i32 %v1_f6f7 to i32*
  %v3_f6f7 = load i32, i32* %v2_f6f7, align 4
  store i32 %v3_f6f7, i32* @eax, align 4
  %v1_f6fa = add i32 %v0_f6f7, -12
  %v2_f6fa = inttoptr i32 %v1_f6fa to i32*
  %v3_f6fa = load i32, i32* %v2_f6fa, align 4
  %v1_f6fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_f6fd = icmp eq i32 %v1_f6fd, %v3_f6fa
  br i1 %v3_f6fd, label %bb, label %dec_label_pc_f706

bb:                                               ; preds = %dec_label_pc_f69e
  %v1_f704 = call i32 @function_f744()
  store i32 %v1_f704, i32* @eax, align 4
  br label %dec_label_pc_f706

dec_label_pc_f706:                                ; preds = %bb, %dec_label_pc_f69e
  %v0_f706 = call i32 @function_f73f()
  store i32 %v0_f706, i32* %eax.global-to-local, align 4
  ret i32 %v0_f706

; uselistorder directives
  uselistorder i8 %v4_f6b1, { 0, 2, 1 }
  uselistorder i8 %v5_f6ab, { 1, 0, 3, 2 }
  uselistorder i8 %v3_f6a5, { 1, 0 }
}

define i32 @function_f709() local_unnamed_addr {
dec_label_pc_f709:
  %eax.global-to-local = alloca i32, align 4
  %v0_f709 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f709
}

define i32 @function_f73f() local_unnamed_addr {
dec_label_pc_f73f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f744() local_unnamed_addr {
dec_label_pc_f744:
  %v0_f749 = load i32, i32* @eax, align 4
  ret i32 %v0_f749
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f74a:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_f773 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f780 = call i32 @unknown_20402(i32 %v2_f773, i32 %arg3)
  %v2_f788 = ptrtoint i32* %stack_var_-24 to i32
  %v2_f795 = call i32 @unknown_20402(i32 %v2_f788, i32 %arg2)
  %v3_f7a7 = load i32, i32* %stack_var_-20, align 4
  %v3_f7ae = load i32, i32* %stack_var_-24, align 4
  %v4_f7b8 = call i32 @unknown_2044c(i32 %arg1, i32 %v3_f7ae, i32 %v3_f7a7, i32 %arg4)
  ret i32 %v4_f7b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_20402, { 1, 0 }
}

define i32 @function_f7be() local_unnamed_addr {
dec_label_pc_f7be:
  %eax.global-to-local = alloca i32, align 4
  %v0_f7be = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f7be
}

define i32 @function_f7d3() local_unnamed_addr {
dec_label_pc_f7d3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f7d3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f7d3 = add i32 %v0_f7d3, -1
  store i32 %v1_f7d3, i32* %ecx.global-to-local, align 4
  %v0_f7d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f7d5
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f7d8:
  %v2_f808 = call i32 @unknown_2056c(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f819

bb:                                               ; preds = %dec_label_pc_f7d8
  %v1_f817 = call i32 @function_f81e()
  br label %dec_label_pc_f819

dec_label_pc_f819:                                ; preds = %bb, %dec_label_pc_f7d8
  %v2_f817 = phi i32 [ %v1_f817, %bb ], [ 0, %dec_label_pc_f7d8 ]
  ret i32 %v2_f817
}

define i32 @function_f81e() local_unnamed_addr {
dec_label_pc_f81e:
  %v0_f81f = load i32, i32* @eax, align 4
  ret i32 %v0_f81f
}

define i32 @_ZSt4copyIP6CTxOutS1_ET0_T_S3_S2_() local_unnamed_addr {
dec_label_pc_f820:
  %eax.global-to-local = alloca i32, align 4
  %v5_f823 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_f823
}

define i32 @function_f826(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f826:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f826 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_f826 = xor i32 %v0_f826, 139
  store i32 %v11_f826, i32* %eax.global-to-local, align 4
  %v0_f828 = load i32, i32* @ebp, align 4
  %v1_f828 = add i32 %v0_f828, 1
  store i32 %v1_f828, i32* %ebp.global-to-local, align 4
  %v0_f829 = load i32, i32* @ecx, align 4
  %v1_f829 = add i32 %v0_f829, 1166795845
  %v2_f829 = inttoptr i32 %v1_f829 to i8*
  %v3_f829 = load i8, i8* %v2_f829, align 1
  %v5_f829 = trunc i32 %v0_f829 to i8
  %v6_f829 = or i8 %v3_f829, %v5_f829
  store i8 %v6_f829, i8* %v2_f829, align 1
  %v0_f82f = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_f82f = or i32 %v0_f82f, 137
  store i32 %v11_f82f, i32* %eax.global-to-local, align 4
  %v0_f831 = load i32, i32* %ebp.global-to-local, align 4
  %v0_f832 = load i32, i32* @ecx, align 4
  %v1_f832 = add i32 %v0_f832, 255
  %v1_f834 = add i32 %v0_f831, 2
  store i32 %v1_f834, i32* @ebp, align 4
  %v1_f835 = add i32 %v0_f832, -1587159996
  %v2_f835 = inttoptr i32 %v1_f835 to i8*
  %v3_f835 = load i8, i8* %v2_f835, align 1
  %v5_f835 = trunc i32 %v1_f832 to i8
  %v8_f835 = add i8 %v3_f835, %v5_f835
  %v28_f835 = icmp ult i8 %v8_f835, %v3_f835
  store i1 %v28_f835, i1* %cf.global-to-local, align 1
  store i8 %v8_f835, i8* %v2_f835, align 1
  %v0_f83b = load i32, i32* %eax.global-to-local, align 4
  %v1_f83b = trunc i32 %v0_f83b to i8
  %v2_f83b = load i1, i1* %cf.global-to-local, align 1
  %v3_f83b = zext i1 %v2_f83b to i8
  %v4_f83b = add i8 %v3_f83b, %v1_f83b
  %v19_f83b = icmp ule i8 %v4_f83b, %v1_f83b
  %v21_f83b = icmp eq i1 %v2_f83b, %v19_f83b
  store i1 %v21_f83b, i1* %cf.global-to-local, align 1
  %v22_f83b = zext i8 %v4_f83b to i32
  %v24_f83b = and i32 %v0_f83b, -256
  %v25_f83b = or i32 %v22_f83b, %v24_f83b
  store i32 %v25_f83b, i32* %eax.global-to-local, align 4
  %v1_f83d = inttoptr i32 %v25_f83b to i8*
  %v2_f83d = load i8, i8* %v1_f83d, align 1
  %v5_f83d = add i8 %v2_f83d, %v4_f83b
  store i8 %v5_f83d, i8* %v1_f83d, align 1
  %v0_f83f = load i32, i32* %eax.global-to-local, align 4
  %v1_f83f = load i32, i32* @ebp, align 4
  %v2_f83f = add i32 %v1_f83f, -12
  %v3_f83f = inttoptr i32 %v2_f83f to i32*
  store i32 %v0_f83f, i32* %v3_f83f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f844 = load i32, i32* @ebp, align 4
  %v1_f844 = add i32 %v0_f844, -32
  %v2_f844 = inttoptr i32 %v1_f844 to i32*
  %v3_f844 = load i32, i32* %v2_f844, align 4
  store i32 %v3_f844, i32* %eax.global-to-local, align 4
  %v1_f84a = call i32 @unknown_1ffc4(i32 %v3_f844)
  store i32 %v1_f84a, i32* %eax.global-to-local, align 4
  store i32 %v1_f84a, i32* %ebx.global-to-local, align 4
  %v0_f851 = load i32, i32* @ebp, align 4
  %v1_f851 = add i32 %v0_f851, -28
  %v2_f851 = inttoptr i32 %v1_f851 to i32*
  %v3_f851 = load i32, i32* %v2_f851, align 4
  store i32 %v3_f851, i32* %eax.global-to-local, align 4
  %v1_f857 = call i32 @unknown_1ffc4(i32 %v3_f851)
  store i32 %v1_f857, i32* %eax.global-to-local, align 4
  %v0_f85c = load i32, i32* @ebp, align 4
  %v1_f85c = add i32 %v0_f85c, -36
  %v2_f85c = inttoptr i32 %v1_f85c to i32*
  %v3_f85c = load i32, i32* %v2_f85c, align 4
  %v0_f863 = load i32, i32* %ebx.global-to-local, align 4
  %v3_f86a = call i32 @unknown_205f6(i32 %v1_f857, i32 %v0_f863, i32 %v3_f85c)
  store i32 %v3_f86a, i32* @eax, align 4
  %v0_f86f = load i32, i32* @ebp, align 4
  %v1_f86f = add i32 %v0_f86f, -12
  %v2_f86f = inttoptr i32 %v1_f86f to i32*
  %v3_f86f = load i32, i32* %v2_f86f, align 4
  %v1_f872 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_f872 = icmp eq i32 %v1_f872, %v3_f86f
  br i1 %v3_f872, label %bb, label %dec_label_pc_f87b

bb:                                               ; preds = %dec_label_pc_f826
  %v1_f879 = call i32 @function_f880()
  store i32 %v1_f879, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f87b

dec_label_pc_f87b:                                ; preds = %bb, %dec_label_pc_f826
  %v3_f879 = phi i32 [ %v1_f879, %bb ], [ %v3_f86a, %dec_label_pc_f826 ]
  ret i32 %v3_f879

; uselistorder directives
  uselistorder i8 %v4_f83b, { 0, 2, 1 }
  uselistorder i8 %v1_f83b, { 1, 0 }
  uselistorder i8 %v3_f835, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1ffc4, { 1, 0 }
}

declare i32 @__stack_chk_fail.412(i32, i32, i32) local_unnamed_addr

define i32 @function_f880() local_unnamed_addr {
dec_label_pc_f880:
  %v0_f885 = load i32, i32* @eax, align 4
  ret i32 %v0_f885
}

define i32 @_ZSt22__uninitialized_copy_aIP6CTxOutS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f886:
  %v7_f8c3 = call i32 @unknown_206ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_f8c3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f8d4

bb:                                               ; preds = %dec_label_pc_f886
  %v1_f8d2 = call i32 @function_f8d9()
  br label %dec_label_pc_f8d4

dec_label_pc_f8d4:                                ; preds = %bb, %dec_label_pc_f886
  %v2_f8d2 = phi i32 [ %v1_f8d2, %bb ], [ %v7_f8c3, %dec_label_pc_f886 ]
  ret i32 %v2_f8d2

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f8d9() local_unnamed_addr {
dec_label_pc_f8d9:
  %v0_f8da = load i32, i32* @eax, align 4
  ret i32 %v0_f8da
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8dc:
  %v1_f8f9 = call i32 @unknown_20774(i32 %arg1)
  %v1_f901 = call i32 @unknown_207a2(i32 %v1_f8f9)
  store i32 %v1_f901, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f912

bb:                                               ; preds = %dec_label_pc_f8dc
  %v1_f910 = call i32 @function_f917()
  br label %dec_label_pc_f912

dec_label_pc_f912:                                ; preds = %bb, %dec_label_pc_f8dc
  %v2_f910 = phi i32 [ %v1_f910, %bb ], [ %v1_f901, %dec_label_pc_f8dc ]
  ret i32 %v2_f910
}

define i32 @function_f917() local_unnamed_addr {
dec_label_pc_f917:
  %v0_f918 = load i32, i32* @eax, align 4
  ret i32 %v0_f918
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f91a:
  %v1_f943 = call i32 @unknown_207e0(i32 %arg1)
  %v10_f948 = icmp ult i32 %v1_f943, %arg2
  %v1_f94b = zext i1 %v10_f948 to i32
  %v3_f94b = and i32 %v1_f943, -256
  %v4_f94b = or i32 %v1_f94b, %v3_f94b
  %v5_f94e = icmp eq i1 %v10_f948, false
  br i1 %v5_f94e, label %bb, label %dec_label_pc_f952

bb:                                               ; preds = %dec_label_pc_f91a
  %v1_f950 = call i32 @function_f957()
  br label %dec_label_pc_f952

dec_label_pc_f952:                                ; preds = %bb, %dec_label_pc_f91a
  %v2_f950 = phi i32 [ %v1_f950, %bb ], [ %v4_f94b, %dec_label_pc_f91a ]
  ret i32 %v2_f950

; uselistorder directives
  uselistorder i1 %v10_f948, { 1, 0 }
}

define i32 @function_f957() local_unnamed_addr {
dec_label_pc_f957:
  %v0_f957 = load i32, i32* @ebp, align 4
  %v1_f957 = add i32 %v0_f957, -32
  %v2_f957 = inttoptr i32 %v1_f957 to i32*
  %v3_f957 = load i32, i32* %v2_f957, align 4
  %v2_f95a = mul i32 %v3_f957, 32
  ret i32 %v2_f95a
}

define i32 @function_f975() local_unnamed_addr {
dec_label_pc_f975:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f975 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f975 = add i32 %v0_f975, -1
  store i32 %v1_f975, i32* %ecx.global-to-local, align 4
  %v0_f977 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f977
}

define i32 @_ZSt22__uninitialized_copy_aIP12CTransactionS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f978:
  %v7_f9b5 = call i32 @unknown_2086d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_f9b5

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f9c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f9c0:
  %zf.global-to-local = alloca i1, align 1
  %v0_f9c0 = load i32, i32* @eax, align 4
  %v1_f9c0 = trunc i32 %v0_f9c0 to i8
  %v2_f9c0 = load i1, i1* @cf, align 1
  %v3_f9c0 = zext i1 %v2_f9c0 to i8
  %v4_f9c0 = add i8 %v3_f9c0, %v1_f9c0
  %v13_f9c0 = icmp eq i8 %v4_f9c0, 0
  store i1 %v13_f9c0, i1* %zf.global-to-local, align 1
  %v22_f9c0 = zext i8 %v4_f9c0 to i32
  %v24_f9c0 = and i32 %v0_f9c0, -256
  %v25_f9c0 = or i32 %v22_f9c0, %v24_f9c0
  store i32 %v25_f9c0, i32* @eax, align 4
  %v1_f9c2 = inttoptr i32 %v25_f9c0 to i8*
  %v2_f9c2 = load i8, i8* %v1_f9c2, align 1
  %v5_f9c2 = add i8 %v2_f9c2, %v4_f9c0
  %v15_f9c2 = icmp eq i8 %v5_f9c2, 0
  store i1 %v15_f9c2, i1* %zf.global-to-local, align 1
  store i8 %v5_f9c2, i8* %v1_f9c2, align 1
  %v0_f9c4 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_f9c4, label %bb, label %dec_label_pc_f9c0.dec_label_pc_f9c6_crit_edge

dec_label_pc_f9c0.dec_label_pc_f9c6_crit_edge:    ; preds = %dec_label_pc_f9c0
  %v2_f9c4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_f9c6

bb:                                               ; preds = %dec_label_pc_f9c0
  %v1_f9c4 = call i32 @function_f9cb()
  br label %dec_label_pc_f9c6

dec_label_pc_f9c6:                                ; preds = %dec_label_pc_f9c0.dec_label_pc_f9c6_crit_edge, %bb
  %v2_f9c4 = phi i32 [ %v2_f9c4.pre, %dec_label_pc_f9c0.dec_label_pc_f9c6_crit_edge ], [ %v1_f9c4, %bb ]
  ret i32 %v2_f9c4

; uselistorder directives
  uselistorder label %dec_label_pc_f9c6, { 1, 0 }
}

define i32 @function_f9cb() local_unnamed_addr {
dec_label_pc_f9cb:
  %v0_f9cc = load i32, i32* @eax, align 4
  ret i32 %v0_f9cc
}

define i32 @_ZSt12__miter_baseIP12CDNSSeedDataENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9cd:
  %v1_f9ea = call i32 @unknown_20911(i32 %arg1)
  store i32 %v1_f9ea, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f9fb

bb:                                               ; preds = %dec_label_pc_f9cd
  %v1_f9f9 = call i32 @function_fa00()
  br label %dec_label_pc_f9fb

dec_label_pc_f9fb:                                ; preds = %bb, %dec_label_pc_f9cd
  %v2_f9f9 = phi i32 [ %v1_f9f9, %bb ], [ %v1_f9ea, %dec_label_pc_f9cd ]
  ret i32 %v2_f9f9
}

define i32 @function_fa00() local_unnamed_addr {
dec_label_pc_fa00:
  %v0_fa01 = load i32, i32* @eax, align 4
  ret i32 %v0_fa01
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP12CDNSSeedDataS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fa02:
  %v1_fa2d = call i32 @unknown_20973(i32 %arg3)
  %v1_fa3a = call i32 @unknown_20973(i32 %arg2)
  %v1_fa47 = call i32 @unknown_20973(i32 %arg1)
  %v3_fa57 = call i32 @unknown_209a8(i32 %v1_fa47, i32 %v1_fa3a, i32 %v1_fa2d)
  store i32 %v3_fa57, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fa68

bb:                                               ; preds = %dec_label_pc_fa02
  %v1_fa66 = call i32 @function_fa6d()
  br label %dec_label_pc_fa68

dec_label_pc_fa68:                                ; preds = %bb, %dec_label_pc_fa02
  %v3_fa66 = phi i32 [ %v1_fa66, %bb ], [ %v3_fa57, %dec_label_pc_fa02 ]
  ret i32 %v3_fa66

; uselistorder directives
  uselistorder i32 (i32)* @unknown_20973, { 2, 1, 0 }
}

define i32 @function_fa6d() local_unnamed_addr {
dec_label_pc_fa6d:
  %v0_fa73 = load i32, i32* @eax, align 4
  ret i32 %v0_fa73
}

define i32 @_ZNKSt6vectorI12CDNSSeedDataSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_fa74:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_fa8e = add i32 %tmp100, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_fa8e = inttoptr i32 %v1_fa8e to i32*
  %v3_fa8e = load i32, i32* %v2_fa8e, align 4
  %v2_fa96 = load i32, i32* %arg1, align 4
  %v2_fa9a = sub i32 %v3_fa8e, %v2_fa96
  %v2_fa9e = ashr i32 %v2_fa9a, ptrtoint (i64* @global_var_3.894 to i32)
  store i32 %v2_fa9e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_faad

bb:                                               ; preds = %dec_label_pc_fa74
  %v2_faab = call i32 @function_fab2(i32 %tmp100)
  br label %dec_label_pc_faad

dec_label_pc_faad:                                ; preds = %bb, %dec_label_pc_fa74
  %v3_faab = phi i32 [ %v2_faab, %bb ], [ %v2_fa9e, %dec_label_pc_fa74 ]
  ret i32 %v3_faab
}

define i32 @function_fab2(i32 %arg1) local_unnamed_addr {
dec_label_pc_fab2:
  %v0_fab3 = load i32, i32* @eax, align 4
  ret i32 %v0_fab3
}

define i32 @_ZNKSt6vectorI12CDNSSeedDataSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_fab4:
  ret i32 %arg1
}

define i32 @function_fad0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fad0:
  %eax.global-to-local = alloca i32, align 4
  %v0_fad0 = load i32, i32* @eax, align 4
  %v11_fad0 = and i32 %v0_fad0, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_fad0, i32* %eax.global-to-local, align 4
  %v1_fad4 = inttoptr i32 %v11_fad0 to i32*
  %v2_fad4 = load i32, i32* %v1_fad4, align 4
  %v4_fad4 = add i32 %v2_fad4, %v11_fad0
  store i32 %v4_fad4, i32* %v1_fad4, align 4
  %v0_fad6 = load i32, i32* %eax.global-to-local, align 4
  %v1_fad9 = call i32 @unknown_20adc(i32 %v0_fad6)
  store i32 %v1_fad9, i32* %eax.global-to-local, align 4
  ret i32 %v1_fad9

; uselistorder directives
  uselistorder i32 %v11_fad0, { 0, 2, 1 }
}

define i32 @function_fae6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_fae6:
  %zf.global-to-local = alloca i1, align 1
  %v2_fae6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_fae6 = load i32, i32* @eax, align 4
  %v4_fae6 = trunc i32 %v3_fae6 to i8
  %v5_fae6 = add i8 %v4_fae6, %v2_fae6
  %v15_fae6 = icmp eq i8 %v5_fae6, 0
  store i1 %v15_fae6, i1* %zf.global-to-local, align 1
  %v21_fae6 = inttoptr i32 %v3_fae6 to i8*
  store i8 %v5_fae6, i8* %v21_fae6, align 1
  %v0_fae8 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_fae8, label %bb, label %dec_label_pc_fae6.dec_label_pc_faea_crit_edge

dec_label_pc_fae6.dec_label_pc_faea_crit_edge:    ; preds = %dec_label_pc_fae6
  %v2_fae8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_faea

bb:                                               ; preds = %dec_label_pc_fae6
  %v1_fae8 = call i32 @function_faef()
  br label %dec_label_pc_faea

dec_label_pc_faea:                                ; preds = %dec_label_pc_fae6.dec_label_pc_faea_crit_edge, %bb
  %v2_fae8 = phi i32 [ %v2_fae8.pre, %dec_label_pc_fae6.dec_label_pc_faea_crit_edge ], [ %v1_fae8, %bb ]
  ret i32 %v2_fae8

; uselistorder directives
  uselistorder label %dec_label_pc_faea, { 1, 0 }
}

define i32 @function_faef() local_unnamed_addr {
dec_label_pc_faef:
  %v0_faf0 = load i32, i32* @eax, align 4
  ret i32 %v0_faf0
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CDNSSeedDataE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_faf2:
  %v1_fb1b = call i32 @unknown_20b1a(i32 %arg1)
  %v10_fb20 = icmp ult i32 %v1_fb1b, %arg2
  %v1_fb23 = zext i1 %v10_fb20 to i32
  %v3_fb23 = and i32 %v1_fb1b, -256
  %v4_fb23 = or i32 %v1_fb23, %v3_fb23
  %v5_fb26 = icmp eq i1 %v10_fb20, false
  br i1 %v5_fb26, label %bb, label %dec_label_pc_fb2a

bb:                                               ; preds = %dec_label_pc_faf2
  %v1_fb28 = call i32 @function_fb2f()
  br label %dec_label_pc_fb2a

dec_label_pc_fb2a:                                ; preds = %bb, %dec_label_pc_faf2
  %v2_fb28 = phi i32 [ %v1_fb28, %bb ], [ %v4_fb23, %dec_label_pc_faf2 ]
  ret i32 %v2_fb28

; uselistorder directives
  uselistorder i1 %v10_fb20, { 1, 0 }
}

define i32 @function_fb2f() local_unnamed_addr {
dec_label_pc_fb2f:
  %v0_fb2f = load i32, i32* @ebp, align 4
  %v1_fb2f = add i32 %v0_fb2f, -32
  %v2_fb2f = inttoptr i32 %v1_fb2f to i32*
  %v3_fb2f = load i32, i32* %v2_fb2f, align 4
  %v2_fb32 = shl i32 %v3_fb2f, ptrtoint (i64* @global_var_3.894 to i32)
  ret i32 %v2_fb32
}

define i32 @function_fb4d() local_unnamed_addr {
dec_label_pc_fb4d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_fb4d = load i32, i32* %ecx.global-to-local, align 4
  %v1_fb4d = add i32 %v0_fb4d, -1
  store i32 %v1_fb4d, i32* %ecx.global-to-local, align 4
  %v0_fb4f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fb4f
}

define i32 @_ZSt22__uninitialized_copy_aIP12CDNSSeedDataS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fb50:
  %v7_fb8d = call i32 @unknown_20ba7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_fb8d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fb9e

bb:                                               ; preds = %dec_label_pc_fb50
  %v1_fb9c = call i32 @function_fba3()
  br label %dec_label_pc_fb9e

dec_label_pc_fb9e:                                ; preds = %bb, %dec_label_pc_fb50
  %v2_fb9c = phi i32 [ %v1_fb9c, %bb ], [ %v7_fb8d, %dec_label_pc_fb50 ]
  ret i32 %v2_fb9c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fba3() local_unnamed_addr {
dec_label_pc_fba3:
  %v0_fba4 = load i32, i32* @eax, align 4
  ret i32 %v0_fba4
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fba6:
  %v0_fbb8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_fbb8
}

define i32 @function_fbca(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fbca:
  %v2_fbca = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_fbca = load i32, i32* @eax, align 4
  %v4_fbca = trunc i32 %v3_fbca to i8
  %v5_fbca = add i8 %v4_fbca, %v2_fbca
  %v21_fbca = inttoptr i32 %v3_fbca to i8*
  store i8 %v5_fbca, i8* %v21_fbca, align 1
  %v0_fbcc = load i32, i32* @ebp, align 4
  %v1_fbcc = load i32, i32* @eax, align 4
  %v3_fbcc = add i32 %v0_fbcc, -24
  %v4_fbcc = add i32 %v3_fbcc, %v1_fbcc
  %v5_fbcc = inttoptr i32 %v4_fbcc to i8*
  %v6_fbcc = load i8, i8* %v5_fbcc, align 1
  %v7_fbcc = load i32, i32* @edx, align 4
  %v8_fbcc = lshr i32 %v7_fbcc, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_fbcc = trunc i32 %v8_fbcc to i8
  %v10_fbcc = add i8 %v9_fbcc, %v6_fbcc
  store i8 %v10_fbcc, i8* %v5_fbcc, align 1
  %v31_fbcc = load i32, i32* @eax, align 4
  ret i32 %v31_fbcc
}

define i32 @function_fbd3() local_unnamed_addr {
dec_label_pc_fbd3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_fbd3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_fbd3 = add i32 %v0_fbd3, -1
  store i32 %v1_fbd3, i32* %ecx.global-to-local, align 4
  %v0_fbd5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fbd5
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbd6:
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fbfe

bb:                                               ; preds = %dec_label_pc_fbd6
  %v2_fbfc = call i32 @function_fc03(i32 %arg1)
  br label %dec_label_pc_fbfe

dec_label_pc_fbfe:                                ; preds = %bb, %dec_label_pc_fbd6
  %v3_fbfc = phi i32 [ %v2_fbfc, %bb ], [ -1, %dec_label_pc_fbd6 ]
  ret i32 %v3_fbfc
}

define i32 @function_fc03(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc03:
  %v0_fc04 = load i32, i32* @eax, align 4
  ret i32 %v0_fc04
}

define i32 @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPhjhEEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fc05:
  %v3_fc3c = call i32 @unknown_20cab(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fc4d

bb:                                               ; preds = %dec_label_pc_fc05
  %v1_fc4b = call i32 @function_fc52()
  br label %dec_label_pc_fc4d

dec_label_pc_fc4d:                                ; preds = %bb, %dec_label_pc_fc05
  %v2_fc4b = phi i32 [ %v1_fc4b, %bb ], [ 0, %dec_label_pc_fc05 ]
  ret i32 %v2_fc4b
}

define i32 @function_fc52() local_unnamed_addr {
dec_label_pc_fc52:
  %v0_fc53 = load i32, i32* @eax, align 4
  ret i32 %v0_fc53
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb1EE7_S_baseES6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc54:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_fc6b = ptrtoint i32* %stack_var_-32 to i32
  %v1_fc71 = call i32 @unknown_182d4(i32 %v2_fc6b)
  %v1_fc76 = inttoptr i32 %v1_fc71 to i32*
  %v2_fc76 = load i32, i32* %v1_fc76, align 4
  store i32 %v2_fc76, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fc84

bb:                                               ; preds = %dec_label_pc_fc54
  %v1_fc82 = call i32 @function_fc89()
  br label %dec_label_pc_fc84

dec_label_pc_fc84:                                ; preds = %bb, %dec_label_pc_fc54
  %v2_fc82 = phi i32 [ %v1_fc82, %bb ], [ %v2_fc76, %dec_label_pc_fc54 ]
  ret i32 %v2_fc82
}

define i32 @function_fc89() local_unnamed_addr {
dec_label_pc_fc89:
  %v0_fc8a = load i32, i32* @eax, align 4
  ret i32 %v0_fc8a
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_() local_unnamed_addr {
dec_label_pc_fc8b:
  %eax.global-to-local = alloca i32, align 4
  %v2_fc8c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_fc8c
}

define i32 @function_fc90(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fc91(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc91:
  %v0_fc91 = load i32, i32* @ebp, align 4
  %v1_fc91 = add i32 %v0_fc91, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_fc91 = inttoptr i32 %v1_fc91 to i32*
  %v3_fc91 = load i32, i32* %v2_fc91, align 4
  %v2_fc94 = add i32 %v0_fc91, -28
  %v3_fc94 = inttoptr i32 %v2_fc94 to i32*
  store i32 %v3_fc91, i32* %v3_fc94, align 4
  %v0_fc97 = load i32, i32* @ebp, align 4
  %v1_fc97 = add i32 %v0_fc97, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_fc97 = inttoptr i32 %v1_fc97 to i32*
  %v3_fc97 = load i32, i32* %v2_fc97, align 4
  %v2_fc9a = add i32 %v0_fc97, -32
  %v3_fc9a = inttoptr i32 %v2_fc9a to i32*
  store i32 %v3_fc97, i32* %v3_fc9a, align 4
  %v0_fc9d = load i32, i32* @ebp, align 4
  %v1_fc9d = add i32 %v0_fc9d, 16
  %v2_fc9d = inttoptr i32 %v1_fc9d to i32*
  %v3_fc9d = load i32, i32* %v2_fc9d, align 4
  %v2_fca0 = add i32 %v0_fc9d, -36
  %v3_fca0 = inttoptr i32 %v2_fca0 to i32*
  store i32 %v3_fc9d, i32* %v3_fca0, align 4
  %v0_fca3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_fca9 = load i32, i32* @ebp, align 4
  %v2_fca9 = add i32 %v1_fca9, -12
  %v3_fca9 = inttoptr i32 %v2_fca9 to i32*
  store i32 %v0_fca3, i32* %v3_fca9, align 4
  %v0_fcae = load i32, i32* @ebp, align 4
  %v1_fcae = add i32 %v0_fcae, -32
  %v2_fcae = inttoptr i32 %v1_fcae to i32*
  %v3_fcae = load i32, i32* %v2_fcae, align 4
  %v1_fcb1 = add i32 %v0_fcae, -28
  %v2_fcb1 = inttoptr i32 %v1_fcb1 to i32*
  %v3_fcb1 = load i32, i32* %v2_fcb1, align 4
  %v2_fcb6 = sub i32 %v3_fcae, %v3_fcb1
  %v2_fcba = add i32 %v0_fcae, -16
  %v3_fcba = inttoptr i32 %v2_fcba to i32*
  store i32 %v2_fcb6, i32* %v3_fcba, align 4
  %v0_fcbd = load i32, i32* @ebp, align 4
  %v1_fcbd = add i32 %v0_fcbd, -16
  %v2_fcbd = inttoptr i32 %v1_fcbd to i32*
  %v3_fcbd = load i32, i32* %v2_fcbd, align 4
  %v10_fcbd = icmp eq i32 %v3_fcbd, 0
  br i1 %v10_fcbd, label %bb, label %dec_label_pc_fcc3

bb:                                               ; preds = %dec_label_pc_fc91
  %v1_fcc1 = call i32 @function_fcdc()
  %v0_fcc3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_fcc3

dec_label_pc_fcc3:                                ; preds = %bb, %dec_label_pc_fc91
  %v0_fcd1 = phi i32 [ %v0_fcc3.pre, %bb ], [ %v0_fcbd, %dec_label_pc_fc91 ]
  %v1_fcd1 = add i32 %v0_fcd1, -36
  %v2_fcd1 = inttoptr i32 %v1_fcd1 to i32*
  %v3_fcd1 = load i32, i32* %v2_fcd1, align 4
  ret i32 %v3_fcd1
}

define i32 @function_fcdc() local_unnamed_addr {
dec_label_pc_fcdc:
  %v0_fcdc = load i32, i32* @ebp, align 4
  %v1_fcdc = add i32 %v0_fcdc, -16
  %v2_fcdc = inttoptr i32 %v1_fcdc to i32*
  %v3_fcdc = load i32, i32* %v2_fcdc, align 4
  %v2_fcdf = add i32 %v0_fcdc, -36
  %v3_fcdf = inttoptr i32 %v2_fcdf to i32*
  %v4_fcdf = load i32, i32* %v3_fcdf, align 4
  %v5_fcdf = add i32 %v4_fcdf, %v3_fcdc
  store i32 %v5_fcdf, i32* @eax, align 4
  %v1_fce2 = add i32 %v0_fcdc, -12
  %v2_fce2 = inttoptr i32 %v1_fce2 to i32*
  %v3_fce2 = load i32, i32* %v2_fce2, align 4
  %v1_fce5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_fce5 = icmp eq i32 %v1_fce5, %v3_fce2
  br i1 %v3_fce5, label %bb, label %dec_label_pc_fcee

bb:                                               ; preds = %dec_label_pc_fcdc
  %v1_fcec = call i32 @function_fcf3()
  br label %dec_label_pc_fcee

dec_label_pc_fcee:                                ; preds = %bb, %dec_label_pc_fcdc
  %v2_fcec = phi i32 [ %v1_fcec, %bb ], [ %v5_fcdf, %dec_label_pc_fcdc ]
  ret i32 %v2_fcec
}

define i32 @function_fcf3() local_unnamed_addr {
dec_label_pc_fcf3:
  %v0_fcf4 = load i32, i32* @eax, align 4
  ret i32 %v0_fcf4
}

define i32 @_ZSt4swapIhEvRT_S1_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fcf5:
  %tmp106 = inttoptr i32 %arg2 to i8*
  %v2_fd15 = load i8, i8* %arg1, align 1
  %v2_fd1e = load i8, i8* %tmp106, align 1
  store i8 %v2_fd1e, i8* %arg1, align 1
  store i8 %v2_fd15, i8* %tmp106, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fd3b

bb:                                               ; preds = %dec_label_pc_fcf5
  %v4_fd12 = ptrtoint i8* %arg1 to i32
  %v5_fd39 = call i32 @function_fd40(i32 %arg2, i32 %v4_fd12)
  br label %dec_label_pc_fd3b

dec_label_pc_fd3b:                                ; preds = %bb, %dec_label_pc_fcf5
  %v6_fd39 = phi i32 [ %v5_fd39, %bb ], [ 0, %dec_label_pc_fcf5 ]
  ret i32 %v6_fd39

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0, 2 }
}

define i32 @function_fd40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fd40:
  %v0_fd41 = load i32, i32* @eax, align 4
  ret i32 %v0_fd41
}

define i32 @_ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fd42:
  %v3_fd7d = call i32 @unknown_20e3f(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_fd7d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fd8e

bb:                                               ; preds = %dec_label_pc_fd42
  %v1_fd8c = call i32 @function_fd93()
  br label %dec_label_pc_fd8e

dec_label_pc_fd8e:                                ; preds = %bb, %dec_label_pc_fd42
  %v2_fd8c = phi i32 [ %v1_fd8c, %bb ], [ %v3_fd7d, %dec_label_pc_fd42 ]
  ret i32 %v2_fd8c
}

define i32 @function_fd93() local_unnamed_addr {
dec_label_pc_fd93:
  %v0_fd94 = load i32, i32* @eax, align 4
  ret i32 %v0_fd94
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fd95:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fdc1

bb:                                               ; preds = %dec_label_pc_fd95
  %v3_fdbf = call i32 @function_fdc6(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_fdc1

dec_label_pc_fdc1:                                ; preds = %bb, %dec_label_pc_fd95
  %v4_fdbf = phi i32 [ %v3_fdbf, %bb ], [ %arg1, %dec_label_pc_fd95 ]
  ret i32 %v4_fdbf
}

define i32 @function_fdc6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fdc6:
  %v0_fdc7 = load i32, i32* @eax, align 4
  ret i32 %v0_fdc7
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_fdca:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_fdf1 = ptrtoint i32* %stack_var_-32 to i32
  %v2_fdf5 = ptrtoint i32* %stack_var_-36 to i32
  %v2_fdfb = call i32 @unknown_16d4c(i32 %v2_fdf5, i32 %v4_fdf1)
  ret i32 %v2_fdfb
}

define i32 @function_fe00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fe00:
  %v0_fe00 = load i32, i32* @ebp, align 4
  %v1_fe00 = add i32 %v0_fe00, -12
  %v2_fe00 = inttoptr i32 %v1_fe00 to i32*
  %v3_fe00 = load i32, i32* %v2_fe00, align 4
  %v1_fe03 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_fe03 = icmp eq i32 %v1_fe03, %v3_fe00
  br i1 %v3_fe03, label %bb, label %dec_label_pc_fe00.dec_label_pc_fe0c_crit_edge

dec_label_pc_fe00.dec_label_pc_fe0c_crit_edge:    ; preds = %dec_label_pc_fe00
  %v2_fe0a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_fe0c

bb:                                               ; preds = %dec_label_pc_fe00
  %v1_fe0a = call i32 @function_fe11()
  br label %dec_label_pc_fe0c

dec_label_pc_fe0c:                                ; preds = %dec_label_pc_fe00.dec_label_pc_fe0c_crit_edge, %bb
  %v2_fe0a = phi i32 [ %v2_fe0a.pre, %dec_label_pc_fe00.dec_label_pc_fe0c_crit_edge ], [ %v1_fe0a, %bb ]
  ret i32 %v2_fe0a

; uselistorder directives
  uselistorder label %dec_label_pc_fe0c, { 1, 0 }
}

define i32 @function_fe11() local_unnamed_addr {
dec_label_pc_fe11:
  %v0_fe12 = load i32, i32* @eax, align 4
  ret i32 %v0_fe12
}

define i32 @_ZSt19__iterator_categoryIPKhENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fe13:
  %v0_fe25 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_fe25
}

define i32 @function_fe44() local_unnamed_addr {
dec_label_pc_fe44:
  %v0_fe45 = load i32, i32* @eax, align 4
  ret i32 %v0_fe45
}

define i32 @_ZSt10__distanceIPKhENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_fe48:
  %v2_fe74 = sub i32 %arg2, %arg1
  store i32 %v2_fe74, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fe84

bb:                                               ; preds = %dec_label_pc_fe48
  %v4_fe82 = sext i8 %arg3 to i32
  %v5_fe82 = call i32 @function_fe89(i32 %v4_fe82, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_fe84

dec_label_pc_fe84:                                ; preds = %bb, %dec_label_pc_fe48
  %v6_fe82 = phi i32 [ %v5_fe82, %bb ], [ %v2_fe74, %dec_label_pc_fe48 ]
  ret i32 %v6_fe82
}

define i32 @function_fe89(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fe89:
  %v0_fe8a = load i32, i32* @eax, align 4
  ret i32 %v0_fe8a
}

define i32 @_ZSt18uninitialized_copyIPKhPhET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fe8b:
  ret i32 %arg2
}

define i32 @function_febc(i32 %arg1) local_unnamed_addr {
dec_label_pc_febc:
  %v0_febc = load i32, i32* @ebp, align 4
  %v1_febc = add i32 %v0_febc, -28
  %v2_febc = inttoptr i32 %v1_febc to i32*
  %v3_febc = load i32, i32* %v2_febc, align 4
  %v1_fec2 = call i32 @unknown_20ff9(i32 %v3_febc)
  store i32 %v1_fec2, i32* @eax, align 4
  %v0_fec7 = load i32, i32* @ebp, align 4
  %v1_fec7 = add i32 %v0_fec7, -12
  %v2_fec7 = inttoptr i32 %v1_fec7 to i32*
  %v3_fec7 = load i32, i32* %v2_fec7, align 4
  %v1_feca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_feca = icmp eq i32 %v1_feca, %v3_fec7
  br i1 %v3_feca, label %bb, label %dec_label_pc_fed3

bb:                                               ; preds = %dec_label_pc_febc
  %v1_fed1 = call i32 @function_fed8()
  br label %dec_label_pc_fed3

dec_label_pc_fed3:                                ; preds = %bb, %dec_label_pc_febc
  %v2_fed1 = phi i32 [ %v1_fed1, %bb ], [ %v1_fec2, %dec_label_pc_febc ]
  ret i32 %v2_fed1
}

define i32 @function_fed8() local_unnamed_addr {
dec_label_pc_fed8:
  %v0_fed9 = load i32, i32* @eax, align 4
  ret i32 %v0_fed9
}

define i32 @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEiEvRT_T0_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_feda:
  %stack_var_-36 = alloca i32, align 4
  %v2_fefe = ptrtoint i32* %stack_var_-36 to i32
  ret i32 %v2_fefe
}

define i32 @function_ff06(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff06:
  %v0_ff06 = load i32, i32* @ebp, align 4
  %v1_ff06 = add i32 %v0_ff06, 1
  store i32 %v1_ff06, i32* @ebp, align 4
  %v0_ff0b = call i32 @unknown_16eb4()
  %v0_ff10 = load i32, i32* @ebp, align 4
  %v1_ff10 = add i32 %v0_ff10, -12
  %v2_ff10 = inttoptr i32 %v1_ff10 to i32*
  %v3_ff10 = load i32, i32* %v2_ff10, align 4
  %v1_ff13 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ff13 = xor i32 %v1_ff13, %v3_ff10
  %v3_ff13 = icmp eq i32 %v2_ff13, 0
  store i32 %v2_ff13, i32* @eax, align 4
  br i1 %v3_ff13, label %bb, label %dec_label_pc_ff1c

bb:                                               ; preds = %dec_label_pc_ff06
  %v1_ff1a = call i32 @function_ff21()
  br label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %bb, %dec_label_pc_ff06
  %v2_ff1a = phi i32 [ %v1_ff1a, %bb ], [ %v2_ff13, %dec_label_pc_ff06 ]
  ret i32 %v2_ff1a
}

define i32 @function_ff21() local_unnamed_addr {
dec_label_pc_ff21:
  %v0_ff22 = load i32, i32* @eax, align 4
  ret i32 %v0_ff22
}

define i32 @_ZSt19__iterator_categoryIPhENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff23:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ff4f

bb:                                               ; preds = %dec_label_pc_ff23
  %v3_ff4d = call i32 @function_ff54(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_ff4f

dec_label_pc_ff4f:                                ; preds = %bb, %dec_label_pc_ff23
  %v4_ff4d = phi i32 [ %v3_ff4d, %bb ], [ %arg1, %dec_label_pc_ff23 ]
  ret i32 %v4_ff4d
}

define i32 @function_ff54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff54:
  %v0_ff55 = load i32, i32* @eax, align 4
  ret i32 %v0_ff55
}

define i32 @_ZSt10__distanceIPhENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_ff58:
  %v2_ff84 = sub i32 %arg2, %arg1
  store i32 %v2_ff84, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ff94

bb:                                               ; preds = %dec_label_pc_ff58
  %v4_ff92 = sext i8 %arg3 to i32
  %v5_ff92 = call i32 @function_ff99(i32 %v4_ff92, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_ff94

dec_label_pc_ff94:                                ; preds = %bb, %dec_label_pc_ff58
  %v6_ff92 = phi i32 [ %v5_ff92, %bb ], [ %v2_ff84, %dec_label_pc_ff58 ]
  ret i32 %v6_ff92
}

define i32 @function_ff99(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ff99:
  %v0_ff9a = load i32, i32* @eax, align 4
  ret i32 %v0_ff9a
}

define i32 @_ZSt14__copy_move_a2ILb0EPhN9__gnu_cxx17__normal_iteratorIS0_St6vectorIhSaIhEEEEET1_T0_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ff9b:
  %v1_ffcc = call i32 @unknown_1dc79(i32 %arg4)
  %v1_ffd9 = call i32 @unknown_1de47(i32 %arg3)
  %v1_ffe6 = call i32 @unknown_1de47(i32 %arg2)
  ret i32 %v1_ffe6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1de47, { 1, 0 }
}

define i32 @function_fff9(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff9:
  %v2_fff9 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_fff9 = load i32, i32* @eax, align 4
  %v4_fff9 = trunc i32 %v3_fff9 to i8
  %v5_fff9 = add i8 %v4_fff9, %v2_fff9
  %v21_fff9 = inttoptr i32 %v3_fff9 to i8*
  store i8 %v5_fff9, i8* %v21_fff9, align 1
  %v0_fffb = load i32, i32* @eax, align 4
  %v1_fffb = load i32, i32* @ebp, align 4
  %v2_fffb = add i32 %v1_fffb, -16
  %v3_fffb = inttoptr i32 %v2_fffb to i32*
  store i32 %v0_fffb, i32* %v3_fffb, align 4
  %v0_fffe = load i32, i32* @ebp, align 4
  %v1_fffe = add i32 %v0_fffe, -16
  %v1_10005 = add i32 %v0_fffe, -28
  %v2_10005 = inttoptr i32 %v1_10005 to i32*
  %v3_10005 = load i32, i32* %v2_10005, align 4
  %v2_1000b = call i32 @unknown_1837f(i32 %v3_10005, i32 %v1_fffe)
  %v0_10010 = load i32, i32* @ebp, align 4
  %v1_10010 = add i32 %v0_10010, -28
  %v2_10010 = inttoptr i32 %v1_10010 to i32*
  %v3_10010 = load i32, i32* %v2_10010, align 4
  store i32 %v3_10010, i32* @eax, align 4
  %v1_10013 = add i32 %v0_10010, -12
  %v2_10013 = inttoptr i32 %v1_10013 to i32*
  %v3_10013 = load i32, i32* %v2_10013, align 4
  %v1_10016 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10016 = icmp eq i32 %v1_10016, %v3_10013
  br i1 %v3_10016, label %bb, label %dec_label_pc_1001f

bb:                                               ; preds = %dec_label_pc_fff9
  %v1_1001d = call i32 @function_10024()
  br label %dec_label_pc_1001f

dec_label_pc_1001f:                               ; preds = %bb, %dec_label_pc_fff9
  %v2_1001d = phi i32 [ %v1_1001d, %bb ], [ %v3_10010, %dec_label_pc_fff9 ]
  ret i32 %v2_1001d
}

define i32 @function_10024() local_unnamed_addr {
dec_label_pc_10024:
  %v0_1002a = load i32, i32* @eax, align 4
  ret i32 %v0_1002a
}

define i32 @_ZSt9__advanceIPhiEvRT_T0_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1002d:
  %v4_1003f = zext i8 %arg3 to i32
  ret i32 %v4_1003f
}

define i32 @function_10050() local_unnamed_addr {
dec_label_pc_10050:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_10057 = add i32 %tmp92, 1
  %v9_10057 = icmp eq i32 %v1_10057, 0
  store i32 %v1_10057, i32* @ebp, align 4
  %v0_10058 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10058 = add i32 %v0_10058, -1
  store i32 %v1_10058, i32* %ecx.global-to-local, align 4
  %v2_10058 = icmp eq i32 %v1_10058, 0
  %v4_10058 = or i1 %v9_10057, %v2_10058
  br i1 %v4_10058, label %dec_label_pc_1005a, label %dec_label_pc_1005b

dec_label_pc_1005a:                               ; preds = %dec_label_pc_10050
  %v6_10058 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_10058

dec_label_pc_1005b:                               ; preds = %dec_label_pc_10050
  %v1_1005b = add i32 %tmp92, -27
  %v2_1005b = inttoptr i32 %v1_1005b to i32*
  %v3_1005b = load i32, i32* %v2_1005b, align 4
  store i32 %v3_1005b, i32* %eax.global-to-local, align 4
  %v0_1005e = load i32, i32* %edx.global-to-local, align 4
  %v2_1005e = inttoptr i32 %v3_1005b to i32*
  store i32 %v0_1005e, i32* %v2_1005e, align 4
  %v0_10060 = load i32, i32* @ebp, align 4
  %v1_10060 = add i32 %v0_10060, -12
  %v2_10060 = inttoptr i32 %v1_10060 to i32*
  %v3_10060 = load i32, i32* %v2_10060, align 4
  store i32 %v3_10060, i32* %eax.global-to-local, align 4
  %v1_10063 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10063 = xor i32 %v1_10063, %v3_10060
  %v3_10063 = icmp eq i32 %v2_10063, 0
  store i32 %v2_10063, i32* @eax, align 4
  br i1 %v3_10063, label %bb, label %dec_label_pc_1006c

bb:                                               ; preds = %dec_label_pc_1005b
  %v1_1006a = call i32 @function_10071()
  store i32 %v1_1006a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %bb, %dec_label_pc_1005b
  %v2_1006a = phi i32 [ %v1_1006a, %bb ], [ %v2_10063, %dec_label_pc_1005b ]
  ret i32 %v2_1006a

; uselistorder directives
  uselistorder i32 %v1_10058, { 1, 0 }
  uselistorder i32 %tmp92, { 1, 0 }
}

define i32 @function_10071() local_unnamed_addr {
dec_label_pc_10071:
  %v0_10072 = load i32, i32* @eax, align 4
  ret i32 %v0_10072
}

define i32 @_ZSt12__miter_baseIPKhENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10073:
  %v1_10090 = call i32 @unknown_21230(i32 %arg1)
  store i32 %v1_10090, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_100a1

bb:                                               ; preds = %dec_label_pc_10073
  %v1_1009f = call i32 @function_100a6()
  br label %dec_label_pc_100a1

dec_label_pc_100a1:                               ; preds = %bb, %dec_label_pc_10073
  %v2_1009f = phi i32 [ %v1_1009f, %bb ], [ %v1_10090, %dec_label_pc_10073 ]
  ret i32 %v2_1009f
}

define i32 @function_100a6() local_unnamed_addr {
dec_label_pc_100a6:
  %v0_100a7 = load i32, i32* @eax, align 4
  ret i32 %v0_100a7
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_() local_unnamed_addr {
dec_label_pc_100a8:
  %eax.global-to-local = alloca i32, align 4
  %v16_100ad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v16_100ad
}

define i32 @function_100b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_100b2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_100b2 = load i32, i32* @ecx, align 4
  %v1_100b2 = add i32 %v0_100b2, 1166795845
  %v2_100b2 = inttoptr i32 %v1_100b2 to i8*
  %v3_100b2 = load i8, i8* %v2_100b2, align 1
  %v5_100b2 = trunc i32 %v0_100b2 to i8
  %v6_100b2 = or i8 %v3_100b2, %v5_100b2
  store i8 %v6_100b2, i8* %v2_100b2, align 1
  %v0_100b8 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_100b8 = or i32 %v0_100b8, 137
  store i32 %v11_100b8, i32* %eax.global-to-local, align 4
  %v0_100ba = load i32, i32* @ebp, align 4
  %v0_100bb = load i32, i32* @ecx, align 4
  %v1_100bb = add i32 %v0_100bb, 255
  %v1_100bd = add i32 %v0_100ba, 2
  store i32 %v1_100bd, i32* @ebp, align 4
  %v1_100be = add i32 %v0_100bb, -1587159996
  %v2_100be = inttoptr i32 %v1_100be to i8*
  %v3_100be = load i8, i8* %v2_100be, align 1
  %v5_100be = trunc i32 %v1_100bb to i8
  %v8_100be = add i8 %v3_100be, %v5_100be
  %v28_100be = icmp ult i8 %v8_100be, %v3_100be
  store i1 %v28_100be, i1* %cf.global-to-local, align 1
  store i8 %v8_100be, i8* %v2_100be, align 1
  %v0_100c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_100c4 = trunc i32 %v0_100c4 to i8
  %v2_100c4 = load i1, i1* %cf.global-to-local, align 1
  %v3_100c4 = zext i1 %v2_100c4 to i8
  %v4_100c4 = add i8 %v3_100c4, %v1_100c4
  %v19_100c4 = icmp ule i8 %v4_100c4, %v1_100c4
  %v21_100c4 = icmp eq i1 %v2_100c4, %v19_100c4
  store i1 %v21_100c4, i1* %cf.global-to-local, align 1
  %v22_100c4 = zext i8 %v4_100c4 to i32
  %v24_100c4 = and i32 %v0_100c4, -256
  %v25_100c4 = or i32 %v22_100c4, %v24_100c4
  store i32 %v25_100c4, i32* %eax.global-to-local, align 4
  %v1_100c6 = inttoptr i32 %v25_100c4 to i8*
  %v2_100c6 = load i8, i8* %v1_100c6, align 1
  %v5_100c6 = add i8 %v2_100c6, %v4_100c4
  store i8 %v5_100c6, i8* %v1_100c6, align 1
  %v0_100c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_100c8 = load i32, i32* @ebp, align 4
  %v2_100c8 = add i32 %v1_100c8, -12
  %v3_100c8 = inttoptr i32 %v2_100c8 to i32*
  store i32 %v0_100c8, i32* %v3_100c8, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_100cd = load i32, i32* @ebp, align 4
  %v1_100cd = add i32 %v0_100cd, -36
  %v2_100cd = inttoptr i32 %v1_100cd to i32*
  %v3_100cd = load i32, i32* %v2_100cd, align 4
  store i32 %v3_100cd, i32* %eax.global-to-local, align 4
  %v1_100d3 = call i32 @unknown_1df54(i32 %v3_100cd)
  store i32 %v1_100d3, i32* %eax.global-to-local, align 4
  store i32 %v1_100d3, i32* %ebx.global-to-local, align 4
  %v0_100da = load i32, i32* @ebp, align 4
  %v1_100da = add i32 %v0_100da, -32
  %v2_100da = inttoptr i32 %v1_100da to i32*
  %v3_100da = load i32, i32* %v2_100da, align 4
  store i32 %v3_100da, i32* %eax.global-to-local, align 4
  %v1_100e0 = call i32 @unknown_1bb2b(i32 %v3_100da)
  store i32 %v1_100e0, i32* %eax.global-to-local, align 4
  store i32 %v1_100e0, i32* %esi.global-to-local, align 4
  %v0_100e7 = load i32, i32* @ebp, align 4
  %v1_100e7 = add i32 %v0_100e7, -28
  %v2_100e7 = inttoptr i32 %v1_100e7 to i32*
  %v3_100e7 = load i32, i32* %v2_100e7, align 4
  store i32 %v3_100e7, i32* %eax.global-to-local, align 4
  %v1_100ed = call i32 @unknown_1bb2b(i32 %v3_100e7)
  store i32 %v1_100ed, i32* %eax.global-to-local, align 4
  %v0_100f2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_100f6 = load i32, i32* %esi.global-to-local, align 4
  %v3_100fd = call i32 @unknown_1dea4(i32 %v1_100ed, i32 %v0_100f6, i32 %v0_100f2)
  store i32 %v3_100fd, i32* @eax, align 4
  %v0_10102 = load i32, i32* @ebp, align 4
  %v1_10102 = add i32 %v0_10102, -12
  %v2_10102 = inttoptr i32 %v1_10102 to i32*
  %v3_10102 = load i32, i32* %v2_10102, align 4
  %v1_10105 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_10105 = icmp eq i32 %v1_10105, %v3_10102
  br i1 %v3_10105, label %bb, label %dec_label_pc_1010e

bb:                                               ; preds = %dec_label_pc_100b2
  %v1_1010c = call i32 @function_10113()
  store i32 %v1_1010c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1010e

dec_label_pc_1010e:                               ; preds = %bb, %dec_label_pc_100b2
  %v3_1010c = phi i32 [ %v1_1010c, %bb ], [ %v3_100fd, %dec_label_pc_100b2 ]
  ret i32 %v3_1010c

; uselistorder directives
  uselistorder i8 %v4_100c4, { 0, 2, 1 }
  uselistorder i8 %v1_100c4, { 1, 0 }
  uselistorder i8 %v3_100be, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1bb2b, { 1, 0 }
}

define i32 @function_10113() local_unnamed_addr {
dec_label_pc_10113:
  %v0_10119 = load i32, i32* @eax, align 4
  ret i32 %v0_10119
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1Ev() local_unnamed_addr {
dec_label_pc_1011a:
  %eax.global-to-local = alloca i32, align 4
  %v2_1011b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1011b
}

define i32 @function_1011e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1011e:
  %v0_1011f = load i32, i32* @ebx, align 4
  %v1_1011f = add i32 %v0_1011f, 1166608453
  %v2_1011f = inttoptr i32 %v1_1011f to i8*
  %v3_1011f = load i8, i8* %v2_1011f, align 1
  %v4_1011f = load i32, i32* @ecx, align 4
  %v5_1011f = trunc i32 %v4_1011f to i8
  %v6_1011f = sub i8 %v3_1011f, %v5_1011f
  store i8 %v6_1011f, i8* %v2_1011f, align 1
  %v0_10127 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1012c = load i32, i32* @ebp, align 4
  %v2_1012c = add i32 %v1_1012c, -12
  %v3_1012c = inttoptr i32 %v2_1012c to i32*
  store i32 %v0_10127, i32* %v3_1012c, align 4
  %v0_10131 = load i32, i32* @ebp, align 4
  %v1_10131 = add i32 %v0_10131, -12
  %v2_10131 = inttoptr i32 %v1_10131 to i32*
  %v3_10131 = load i32, i32* %v2_10131, align 4
  %v1_10134 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10134 = xor i32 %v1_10134, %v3_10131
  %v3_10134 = icmp eq i32 %v2_10134, 0
  store i32 %v2_10134, i32* @eax, align 4
  br i1 %v3_10134, label %bb, label %dec_label_pc_1013d

bb:                                               ; preds = %dec_label_pc_1011e
  %v1_1013b = call i32 @function_10142()
  br label %dec_label_pc_1013d

dec_label_pc_1013d:                               ; preds = %bb, %dec_label_pc_1011e
  %v2_1013b = phi i32 [ %v1_1013b, %bb ], [ %v2_10134, %dec_label_pc_1011e ]
  ret i32 %v2_1013b
}

define i32 @function_10142() local_unnamed_addr {
dec_label_pc_10142:
  %v0_10143 = load i32, i32* @eax, align 4
  ret i32 %v0_10143
}

define i32 @_ZSt11__addressofI5CTxInEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10144:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1016a

bb:                                               ; preds = %dec_label_pc_10144
  %v2_10168 = call i32 @function_1016f(i32 %arg1)
  br label %dec_label_pc_1016a

dec_label_pc_1016a:                               ; preds = %bb, %dec_label_pc_10144
  %v3_10168 = phi i32 [ %v2_10168, %bb ], [ %arg1, %dec_label_pc_10144 ]
  ret i32 %v3_10168
}

define i32 @function_1016f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1016f:
  %v0_10170 = load i32, i32* @eax, align 4
  ret i32 %v0_10170
}

define i32 @_ZSt8_DestroyI5CTxInEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10171:
  %v1_1018e = call i32 @unknown_140ab(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1019f

bb:                                               ; preds = %dec_label_pc_10171
  %v1_1019d = call i32 @function_101a4()
  br label %dec_label_pc_1019f

dec_label_pc_1019f:                               ; preds = %bb, %dec_label_pc_10171
  %v2_1019d = phi i32 [ %v1_1019d, %bb ], [ 0, %dec_label_pc_10171 ]
  ret i32 %v2_1019d
}

define i32 @function_101a4() local_unnamed_addr {
dec_label_pc_101a4:
  %v0_101a5 = load i32, i32* @eax, align 4
  ret i32 %v0_101a5
}

define i32 @_ZSt11__addressofI6CTxOutEPT_RS1_() local_unnamed_addr {
dec_label_pc_101a6:
  %eax.global-to-local = alloca i32, align 4
  %v5_101a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_101a6
}

define i32 @function_101a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_101a8:
  %v0_101ab = load i32, i32* @ebx, align 4
  %v1_101ab = add i32 %v0_101ab, 1166608453
  %v2_101ab = inttoptr i32 %v1_101ab to i8*
  %v3_101ab = load i8, i8* %v2_101ab, align 1
  %v4_101ab = load i32, i32* @ecx, align 4
  %v5_101ab = trunc i32 %v4_101ab to i8
  %v6_101ab = sub i8 %v3_101ab, %v5_101ab
  store i8 %v6_101ab, i8* %v2_101ab, align 1
  %v0_101b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_101b8 = load i32, i32* @ebp, align 4
  %v2_101b8 = add i32 %v1_101b8, -12
  %v3_101b8 = inttoptr i32 %v2_101b8 to i32*
  store i32 %v0_101b3, i32* %v3_101b8, align 4
  %v0_101bd = load i32, i32* @ebp, align 4
  %v1_101bd = add i32 %v0_101bd, -28
  %v2_101bd = inttoptr i32 %v1_101bd to i32*
  %v3_101bd = load i32, i32* %v2_101bd, align 4
  store i32 %v3_101bd, i32* @eax, align 4
  %v1_101c0 = add i32 %v0_101bd, -12
  %v2_101c0 = inttoptr i32 %v1_101c0 to i32*
  %v3_101c0 = load i32, i32* %v2_101c0, align 4
  %v1_101c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_101c3 = icmp eq i32 %v1_101c3, %v3_101c0
  br i1 %v3_101c3, label %bb, label %dec_label_pc_101cc

bb:                                               ; preds = %dec_label_pc_101a8
  %v1_101ca = call i32 @function_101d1()
  br label %dec_label_pc_101cc

dec_label_pc_101cc:                               ; preds = %bb, %dec_label_pc_101a8
  %v2_101ca = phi i32 [ %v1_101ca, %bb ], [ %v3_101bd, %dec_label_pc_101a8 ]
  ret i32 %v2_101ca
}

define i32 @function_101d1() local_unnamed_addr {
dec_label_pc_101d1:
  %v0_101d2 = load i32, i32* @eax, align 4
  ret i32 %v0_101d2
}

define i32 @_ZSt8_DestroyI6CTxOutEvPT_() local_unnamed_addr {
dec_label_pc_101d3:
  %eax.global-to-local = alloca i32, align 4
  %v5_101d3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_101d3
}

define i32 @function_101d5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_101d5:
  %v0_101e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_101e5 = load i32, i32* @ebp, align 4
  %v2_101e5 = add i32 %v1_101e5, -12
  %v3_101e5 = inttoptr i32 %v2_101e5 to i32*
  store i32 %v0_101e0, i32* %v3_101e5, align 4
  %v0_101ea = load i32, i32* @ebp, align 4
  %v1_101ea = add i32 %v0_101ea, -28
  %v2_101ea = inttoptr i32 %v1_101ea to i32*
  %v3_101ea = load i32, i32* %v2_101ea, align 4
  %v1_101f0 = call i32 @unknown_13b3f(i32 %v3_101ea)
  %v0_101f5 = load i32, i32* @ebp, align 4
  %v1_101f5 = add i32 %v0_101f5, -12
  %v2_101f5 = inttoptr i32 %v1_101f5 to i32*
  %v3_101f5 = load i32, i32* %v2_101f5, align 4
  %v1_101f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_101f8 = xor i32 %v1_101f8, %v3_101f5
  %v3_101f8 = icmp eq i32 %v2_101f8, 0
  store i32 %v2_101f8, i32* @eax, align 4
  br i1 %v3_101f8, label %bb, label %dec_label_pc_10201

bb:                                               ; preds = %dec_label_pc_101d5
  %v1_101ff = call i32 @function_10206()
  br label %dec_label_pc_10201

dec_label_pc_10201:                               ; preds = %bb, %dec_label_pc_101d5
  %v2_101ff = phi i32 [ %v1_101ff, %bb ], [ %v2_101f8, %dec_label_pc_101d5 ]
  ret i32 %v2_101ff
}

define i32 @function_10206() local_unnamed_addr {
dec_label_pc_10206:
  %v0_10207 = load i32, i32* @eax, align 4
  ret i32 %v0_10207
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10208:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10231

bb:                                               ; preds = %dec_label_pc_10208
  %v3_1022f = call i32 @function_10236(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_10231

dec_label_pc_10231:                               ; preds = %bb, %dec_label_pc_10208
  %v4_1022f = phi i32 [ %v3_1022f, %bb ], [ 0, %dec_label_pc_10208 ]
  ret i32 %v4_1022f
}

define i32 @function_10236(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10236:
  %v0_10237 = load i32, i32* @eax, align 4
  ret i32 %v0_10237
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv() local_unnamed_addr {
dec_label_pc_10238:
  %eax.global-to-local = alloca i32, align 4
  %v17_1023b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1023b
}

define i32 @function_10240(i32 %arg1) local_unnamed_addr {
dec_label_pc_10240:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_10240 = load i32, i32* @ecx, align 4
  %v1_10240 = add i32 %v0_10240, -1587157947
  %v2_10240 = inttoptr i32 %v1_10240 to i8*
  %v3_10240 = load i8, i8* %v2_10240, align 1
  %v5_10240 = trunc i32 %v0_10240 to i8
  %v6_10240 = or i8 %v3_10240, %v5_10240
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_10240, i8* %v2_10240, align 1
  %v0_10246 = load i32, i32* @eax, align 4
  %v1_10246 = trunc i32 %v0_10246 to i8
  %v2_10246 = load i1, i1* %cf.global-to-local, align 1
  %v3_10246 = zext i1 %v2_10246 to i8
  %v4_10246 = add i8 %v3_10246, %v1_10246
  %v19_10246 = icmp ule i8 %v4_10246, %v1_10246
  %v21_10246 = icmp eq i1 %v2_10246, %v19_10246
  store i1 %v21_10246, i1* %cf.global-to-local, align 1
  %v22_10246 = zext i8 %v4_10246 to i32
  %v24_10246 = and i32 %v0_10246, -256
  %v25_10246 = or i32 %v22_10246, %v24_10246
  store i32 %v25_10246, i32* %eax.global-to-local, align 4
  %v1_10248 = inttoptr i32 %v25_10246 to i8*
  %v2_10248 = load i8, i8* %v1_10248, align 1
  %v5_10248 = add i8 %v2_10248, %v4_10246
  store i8 %v5_10248, i8* %v1_10248, align 1
  %v0_1024a = load i32, i32* %eax.global-to-local, align 4
  %v1_1024a = load i32, i32* @ebp, align 4
  %v2_1024a = add i32 %v1_1024a, -12
  %v3_1024a = inttoptr i32 %v2_1024a to i32*
  store i32 %v0_1024a, i32* %v3_1024a, align 4
  store i32 214748364, i32* @eax, align 4
  %v0_10254 = load i32, i32* @ebp, align 4
  %v1_10254 = add i32 %v0_10254, -12
  %v2_10254 = inttoptr i32 %v1_10254 to i32*
  %v3_10254 = load i32, i32* %v2_10254, align 4
  %v1_10257 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_10257 = icmp eq i32 %v1_10257, %v3_10254
  br i1 %v3_10257, label %bb, label %dec_label_pc_10260

bb:                                               ; preds = %dec_label_pc_10240
  %v1_1025e = call i32 @function_10265()
  store i32 %v1_1025e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10260:                               ; preds = %bb, %dec_label_pc_10240
  %v2_1025e = phi i32 [ %v1_1025e, %bb ], [ 214748364, %dec_label_pc_10240 ]
  ret i32 %v2_1025e

; uselistorder directives
  uselistorder i8 %v4_10246, { 0, 2, 1 }
  uselistorder i8 %v1_10246, { 1, 0 }
  uselistorder i32 -1587157947, { 0, 1, 3, 2, 4 }
}

define i32 @function_10265() local_unnamed_addr {
dec_label_pc_10265:
  %v0_10266 = load i32, i32* @eax, align 4
  ret i32 %v0_10266
}

define i32 @_ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10267:
  ret i32 %arg1
}

define i32 @function_10278(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10278:
  %eax.global-to-local = alloca i32, align 4
  %v0_10278 = load i32, i32* @eax, align 4
  %v11_10278 = or i32 %v0_10278, 137
  store i32 %v11_10278, i32* %eax.global-to-local, align 4
  %v0_1027a = load i32, i32* @ebp, align 4
  %v1_1027a = add i32 %v0_1027a, 1
  store i32 %v1_1027a, i32* @ebp, align 4
  %v1_1027b = add i32 %v0_1027a, -94
  %v2_1027b = inttoptr i32 %v1_1027b to i8*
  %v3_1027b = load i8, i8* %v2_1027b, align 1
  %v5_1027b = mul i8 %v3_1027b, 2
  store i8 %v5_1027b, i8* %v2_1027b, align 1
  %v16_1027b = icmp slt i8 %v3_1027b, 0
  %v0_1027e = load i32, i32* %eax.global-to-local, align 4
  %v1_1027e = trunc i32 %v0_1027e to i8
  %v3_1027e = zext i1 %v16_1027b to i8
  %v4_1027e = add i8 %v1_1027e, %v3_1027e
  %v22_1027e = zext i8 %v4_1027e to i32
  %v24_1027e = and i32 %v0_1027e, -256
  %v25_1027e = or i32 %v22_1027e, %v24_1027e
  store i32 %v25_1027e, i32* %eax.global-to-local, align 4
  %v1_10280 = inttoptr i32 %v25_1027e to i8*
  %v2_10280 = load i8, i8* %v1_10280, align 1
  %v5_10280 = add i8 %v2_10280, %v4_1027e
  store i8 %v5_10280, i8* %v1_10280, align 1
  %v0_10282 = load i32, i32* %eax.global-to-local, align 4
  %v1_10282 = load i32, i32* @ebp, align 4
  %v2_10282 = add i32 %v1_10282, -28
  %v3_10282 = inttoptr i32 %v2_10282 to i32*
  store i32 %v0_10282, i32* %v3_10282, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10287 = load i32, i32* @ebp, align 4
  %v1_10287 = add i32 %v0_10287, -44
  %v2_10287 = inttoptr i32 %v1_10287 to i32*
  %v3_10287 = load i32, i32* %v2_10287, align 4
  %v3_1029e = call i32 @function_102c9(i32 20, i32 %v3_10287)
  store i32 %v3_1029e, i32* %eax.global-to-local, align 4
  %v0_102a0 = load i32, i32* @ebp, align 4
  %v1_102a0 = add i32 %v0_102a0, -48
  %v2_102a0 = inttoptr i32 %v1_102a0 to i32*
  %v3_102a0 = load i32, i32* %v2_102a0, align 4
  store i32 %v3_102a0, i32* %eax.global-to-local, align 4
  %v2_102aa = call i32 @unknown_13c0b(i32 0, i32 %v3_102a0)
  store i32 %v2_102aa, i32* %eax.global-to-local, align 4
  %v2_102af = call i32 @function_102c9(i32 0, i32 %v3_102a0)
  store i32 %v2_102af, i32* %eax.global-to-local, align 4
  ret i32 %v2_102af

; uselistorder directives
  uselistorder i8 %v3_1027b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 -48, { 7, 8, 9, 5, 6, 12, 17, 14, 15, 16, 13, 0, 1, 2, 18, 19, 20, 21, 10, 11, 22, 23, 24, 3, 4, 25 }
  uselistorder i32 (i32, i32)* @function_102c9, { 1, 0 }
  uselistorder i32 -44, { 9, 14, 15, 7, 8, 10, 11, 12, 13, 28, 29, 25, 26, 17, 0, 18, 19, 20, 21, 22, 23, 24, 2, 1, 3, 4, 30, 31, 27, 16, 32, 33, 5, 6, 34, 35, 36 }
}

define i32 @function_102c9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_102c9:
  %v0_102c9 = load i32, i32* @ebp, align 4
  %v1_102c9 = add i32 %v0_102c9, -28
  %v2_102c9 = inttoptr i32 %v1_102c9 to i32*
  %v3_102c9 = load i32, i32* %v2_102c9, align 4
  ret i32 %v3_102c9
}

define i32 @function_102ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_102ce:
  %v0_102ce = load i32, i32* @eax, align 4
  %v1_102ce = add i32 %v0_102ce, 20
  %v10_102ce = icmp eq i32 %v1_102ce, 0
  store i32 %v1_102ce, i32* @eax, align 4
  br i1 %v10_102ce, label %bb, label %dec_label_pc_102d5

bb:                                               ; preds = %dec_label_pc_102ce
  %v1_102d3 = call i32 @function_102da()
  br label %dec_label_pc_102d5

dec_label_pc_102d5:                               ; preds = %bb, %dec_label_pc_102ce
  %v2_102d3 = phi i32 [ %v1_102d3, %bb ], [ %v1_102ce, %dec_label_pc_102ce ]
  ret i32 %v2_102d3
}

define i32 @function_102da() local_unnamed_addr {
dec_label_pc_102da:
  %v0_102e1 = load i32, i32* @eax, align 4
  ret i32 %v0_102e1
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_102e2:
  %v10_10330 = icmp eq i32 %arg2, 0
  %v1_10334 = icmp eq i1 %v10_10330, false
  %v2_10334 = zext i1 %v1_10334 to i32
  %v4_10334 = and i32 %arg1, -256
  %v5_10334 = or i32 %v2_10334, %v4_10334
  ret i32 %v5_10334
}

define i32 @function_1033a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1033a:
  %v1_1033a = load i32, i32* @ecx, align 4
  %v3_1033a = urem i32 %v1_1033a, 32
  %v5_1033a = icmp eq i32 %v3_1033a, 0
  br i1 %v5_1033a, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_1033a
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_1033a, %bb
  %v20_1033a = load i32, i32* @eax, align 4
  ret i32 %v20_1033a

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_1033e() local_unnamed_addr {
dec_label_pc_1033e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1033e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1033e
}

define i32 @function_1037d() local_unnamed_addr {
dec_label_pc_1037d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1037d = load i32, i32* %ebx.global-to-local, align 4
  %v1_1037d = add i32 %v0_1037d, 1566258372
  %v2_1037d = inttoptr i32 %v1_1037d to i32*
  %v3_1037d = load i32, i32* %v2_1037d, align 4
  %v4_1037d = add i32 %v3_1037d, 1
  store i32 %v4_1037d, i32* %v2_1037d, align 4
  %v0_10383 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10383
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionEC1Ev() local_unnamed_addr {
dec_label_pc_10384:
  %eax.global-to-local = alloca i32, align 4
  %v5_10384 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_10384
}

define i32 @function_10386(i32 %arg1) local_unnamed_addr {
dec_label_pc_10386:
  %v0_10389 = load i32, i32* @ebx, align 4
  %v1_10389 = add i32 %v0_10389, 1166608453
  %v2_10389 = inttoptr i32 %v1_10389 to i8*
  %v3_10389 = load i8, i8* %v2_10389, align 1
  %v4_10389 = load i32, i32* @ecx, align 4
  %v5_10389 = trunc i32 %v4_10389 to i8
  %v6_10389 = sub i8 %v3_10389, %v5_10389
  store i8 %v6_10389, i8* %v2_10389, align 1
  %v0_10391 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10396 = load i32, i32* @ebp, align 4
  %v2_10396 = add i32 %v1_10396, -12
  %v3_10396 = inttoptr i32 %v2_10396 to i32*
  store i32 %v0_10391, i32* %v3_10396, align 4
  %v0_1039b = load i32, i32* @ebp, align 4
  %v1_1039b = add i32 %v0_1039b, -12
  %v2_1039b = inttoptr i32 %v1_1039b to i32*
  %v3_1039b = load i32, i32* %v2_1039b, align 4
  %v1_1039e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1039e = xor i32 %v1_1039e, %v3_1039b
  %v3_1039e = icmp eq i32 %v2_1039e, 0
  store i32 %v2_1039e, i32* @eax, align 4
  br i1 %v3_1039e, label %bb, label %dec_label_pc_103a7

bb:                                               ; preds = %dec_label_pc_10386
  %v1_103a5 = call i32 @function_103ac()
  br label %dec_label_pc_103a7

dec_label_pc_103a7:                               ; preds = %bb, %dec_label_pc_10386
  %v2_103a5 = phi i32 [ %v1_103a5, %bb ], [ %v2_1039e, %dec_label_pc_10386 ]
  ret i32 %v2_103a5
}

define i32 @function_103ac() local_unnamed_addr {
dec_label_pc_103ac:
  %v0_103ad = load i32, i32* @eax, align 4
  ret i32 %v0_103ad
}

define i32 @_ZSt11__addressofI12CTransactionEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_103ae:
  ret i32 %arg1
}

define i32 @function_103be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_103be:
  %v2_103be = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_103be = load i32, i32* @eax, align 4
  %v4_103be = trunc i32 %v3_103be to i8
  %v5_103be = add i8 %v4_103be, %v2_103be
  %v21_103be = inttoptr i32 %v3_103be to i8*
  store i8 %v5_103be, i8* %v21_103be, align 1
  %v0_103c0 = load i32, i32* @eax, align 4
  %v1_103c0 = load i32, i32* @ebp, align 4
  %v2_103c0 = add i32 %v1_103c0, -12
  %v3_103c0 = inttoptr i32 %v2_103c0 to i32*
  store i32 %v0_103c0, i32* %v3_103c0, align 4
  %v4_103c0 = load i32, i32* @eax, align 4
  ret i32 %v4_103c0
}

define i32 @function_103c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_103c4:
  %v0_103cb = load i32, i32* @edx, align 4
  %v1_103cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_103cb = icmp eq i32 %v1_103cb, %v0_103cb
  br i1 %v3_103cb, label %bb, label %dec_label_pc_103c4.dec_label_pc_103d4_crit_edge

dec_label_pc_103c4.dec_label_pc_103d4_crit_edge:  ; preds = %dec_label_pc_103c4
  %v2_103d2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_103d4

bb:                                               ; preds = %dec_label_pc_103c4
  %v1_103d2 = call i32 @function_103d9()
  br label %dec_label_pc_103d4

dec_label_pc_103d4:                               ; preds = %dec_label_pc_103c4.dec_label_pc_103d4_crit_edge, %bb
  %v2_103d2 = phi i32 [ %v2_103d2.pre, %dec_label_pc_103c4.dec_label_pc_103d4_crit_edge ], [ %v1_103d2, %bb ]
  ret i32 %v2_103d2

; uselistorder directives
  uselistorder label %dec_label_pc_103d4, { 1, 0 }
}

define i32 @function_103d9() local_unnamed_addr {
dec_label_pc_103d9:
  %v0_103da = load i32, i32* @eax, align 4
  ret i32 %v0_103da
}

define i32 @_ZSt8_DestroyI12CTransactionEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_103db:
  %v0_103e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_103e7
}

define i32 @function_103f1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_103f1:
  %v0_103f1 = load i32, i32* @ebx, align 4
  %v1_103f1 = add i32 %v0_103f1, 76145733
  %v2_103f1 = inttoptr i32 %v1_103f1 to i8*
  %v3_103f1 = load i8, i8* %v2_103f1, align 1
  %v4_103f1 = udiv i8 %v3_103f1, 16
  %v5_103f1 = mul i8 %v3_103f1, 16
  %v6_103f1 = or i8 %v4_103f1, %v5_103f1
  store i8 %v6_103f1, i8* %v2_103f1, align 1
  %v0_103f8 = call i32 @unknown_142ad()
  %v0_103fd = load i32, i32* @ebp, align 4
  %v1_103fd = add i32 %v0_103fd, -12
  %v2_103fd = inttoptr i32 %v1_103fd to i32*
  %v3_103fd = load i32, i32* %v2_103fd, align 4
  %v1_10400 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10400 = xor i32 %v1_10400, %v3_103fd
  store i1 false, i1* @of, align 1
  %v3_10400 = icmp eq i32 %v2_10400, 0
  store i32 %v2_10400, i32* @eax, align 4
  br i1 %v3_10400, label %bb, label %dec_label_pc_10409

bb:                                               ; preds = %dec_label_pc_103f1
  %v1_10407 = call i32 @function_1040e()
  br label %dec_label_pc_10409

dec_label_pc_10409:                               ; preds = %bb, %dec_label_pc_103f1
  %v2_10407 = phi i32 [ %v1_10407, %bb ], [ %v2_10400, %dec_label_pc_103f1 ]
  ret i32 %v2_10407

; uselistorder directives
  uselistorder i8 16, { 1, 2, 0 }
}

define i32 @function_1040e() local_unnamed_addr {
dec_label_pc_1040e:
  %v0_1040f = load i32, i32* @eax, align 4
  ret i32 %v0_1040f
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10410:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10433

bb:                                               ; preds = %dec_label_pc_10410
  %v2_10431 = call i32 @function_10438(i32 %arg1)
  br label %dec_label_pc_10433

dec_label_pc_10433:                               ; preds = %bb, %dec_label_pc_10410
  %v3_10431 = phi i32 [ %v2_10431, %bb ], [ 0, %dec_label_pc_10410 ]
  ret i32 %v3_10431
}

declare i32 @__stack_chk_fail.454(i32, i32, i32) local_unnamed_addr

define i32 @function_10438(i32 %arg1) local_unnamed_addr {
dec_label_pc_10438:
  %v0_10439 = load i32, i32* @eax, align 4
  ret i32 %v0_10439
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CDNSSeedDataEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1043a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1045d

bb:                                               ; preds = %dec_label_pc_1043a
  %v2_1045b = call i32 @function_10462(i32 %arg1)
  br label %dec_label_pc_1045d

dec_label_pc_1045d:                               ; preds = %bb, %dec_label_pc_1043a
  %v3_1045b = phi i32 [ %v2_1045b, %bb ], [ 0, %dec_label_pc_1043a ]
  ret i32 %v3_1045b
}

define i32 @function_10462(i32 %arg1) local_unnamed_addr {
dec_label_pc_10462:
  %v0_10463 = load i32, i32* @eax, align 4
  ret i32 %v0_10463
}

define i32 @_ZSt11__addressofI12CDNSSeedDataEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10464:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1048a

bb:                                               ; preds = %dec_label_pc_10464
  %v2_10488 = call i32 @function_1048f(i32 %arg1)
  br label %dec_label_pc_1048a

dec_label_pc_1048a:                               ; preds = %bb, %dec_label_pc_10464
  %v3_10488 = phi i32 [ %v2_10488, %bb ], [ %arg1, %dec_label_pc_10464 ]
  ret i32 %v3_10488
}

define i32 @function_1048f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1048f:
  %v0_10490 = load i32, i32* @eax, align 4
  ret i32 %v0_10490
}

define i32 @_ZSt8_DestroyI12CDNSSeedDataEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10491:
  %v1_104ae = call i32 @unknown_144d7(i32 %arg1)
  ret i32 %v1_104ae
}

define i32 @function_104b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_104b4:
  %v0_104b4 = load i32, i32* @ebp, align 4
  %v1_104b4 = add i32 %v0_104b4, 1
  store i32 %v1_104b4, i32* @ebp, align 4
  %v0_104b6 = load i32, i32* @eax, align 4
  %v1_104b6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_104b6 = xor i32 %v1_104b6, %v0_104b6
  %v3_104b6 = icmp eq i32 %v2_104b6, 0
  store i32 %v2_104b6, i32* @eax, align 4
  br i1 %v3_104b6, label %bb, label %dec_label_pc_104bf

bb:                                               ; preds = %dec_label_pc_104b4
  %v1_104bd = call i32 @function_104c4()
  br label %dec_label_pc_104bf

dec_label_pc_104bf:                               ; preds = %bb, %dec_label_pc_104b4
  %v2_104bd = phi i32 [ %v1_104bd, %bb ], [ %v2_104b6, %dec_label_pc_104b4 ]
  ret i32 %v2_104bd
}

define i32 @function_104c4() local_unnamed_addr {
dec_label_pc_104c4:
  %v0_104c5 = load i32, i32* @eax, align 4
  ret i32 %v0_104c5
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CAddressEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_104c6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_104e9

bb:                                               ; preds = %dec_label_pc_104c6
  %v2_104e7 = call i32 @function_104ee(i32 %arg1)
  br label %dec_label_pc_104e9

dec_label_pc_104e9:                               ; preds = %bb, %dec_label_pc_104c6
  %v3_104e7 = phi i32 [ %v2_104e7, %bb ], [ 0, %dec_label_pc_104c6 ]
  ret i32 %v3_104e7
}

define i32 @function_104ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_104ee:
  %v0_104ef = load i32, i32* @eax, align 4
  ret i32 %v0_104ef
}

define i32 @_ZSt12__miter_baseIP5CTxInENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_104f0:
  ret i32 %arg1
}

define i32 @function_10500(i32 %arg1) local_unnamed_addr {
dec_label_pc_10500:
  %v2_10500 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10500 = load i32, i32* @eax, align 4
  %v4_10500 = trunc i32 %v3_10500 to i8
  %v5_10500 = add i8 %v4_10500, %v2_10500
  %v21_10500 = inttoptr i32 %v3_10500 to i8*
  store i8 %v5_10500, i8* %v21_10500, align 1
  %v0_10502 = load i32, i32* @eax, align 4
  %v1_10502 = load i32, i32* @ebp, align 4
  %v2_10502 = add i32 %v1_10502, -12
  %v3_10502 = inttoptr i32 %v2_10502 to i32*
  store i32 %v0_10502, i32* %v3_10502, align 4
  %v0_10507 = load i32, i32* @ebp, align 4
  %v1_10507 = add i32 %v0_10507, -28
  %v2_10507 = inttoptr i32 %v1_10507 to i32*
  %v3_10507 = load i32, i32* %v2_10507, align 4
  %v1_1050d = call i32 @unknown_2170f(i32 %v3_10507)
  store i32 %v1_1050d, i32* @eax, align 4
  %v0_10512 = load i32, i32* @ebp, align 4
  %v1_10512 = add i32 %v0_10512, -12
  %v2_10512 = inttoptr i32 %v1_10512 to i32*
  %v3_10512 = load i32, i32* %v2_10512, align 4
  %v1_10515 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10515 = icmp eq i32 %v1_10515, %v3_10512
  br i1 %v3_10515, label %bb, label %dec_label_pc_1051e

bb:                                               ; preds = %dec_label_pc_10500
  %v1_1051c = call i32 @function_10523()
  br label %dec_label_pc_1051e

dec_label_pc_1051e:                               ; preds = %bb, %dec_label_pc_10500
  %v3_1051c = phi i32 [ %v1_1051c, %bb ], [ %v1_1050d, %dec_label_pc_10500 ]
  ret i32 %v3_1051c
}

define i32 @function_10523() local_unnamed_addr {
dec_label_pc_10523:
  %v0_10524 = load i32, i32* @eax, align 4
  ret i32 %v0_10524
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10525:
  ret i32 %arg3
}

define i32 @function_10550(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10550:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v1_10550 = call i32 @unknown_20abc(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_10550, i32* %esi.global-to-local, align 4
  %v0_10557 = load i32, i32* @ebp, align 4
  %v1_10557 = add i32 %v0_10557, -32
  %v2_10557 = inttoptr i32 %v1_10557 to i32*
  %v3_10557 = load i32, i32* %v2_10557, align 4
  %v1_1055d = call i32 @unknown_20abc(i32 %v3_10557)
  store i32 %v1_1055d, i32* %ebx.global-to-local, align 4
  %v0_10564 = load i32, i32* @ebp, align 4
  %v1_10564 = add i32 %v0_10564, -28
  %v2_10564 = inttoptr i32 %v1_10564 to i32*
  %v3_10564 = load i32, i32* %v2_10564, align 4
  %v1_1056a = call i32 @unknown_20abc(i32 %v3_10564)
  %v0_1056f = load i32, i32* %esi.global-to-local, align 4
  %v0_10573 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1057a = call i32 @unknown_21771(i32 %v1_1056a, i32 %v0_10573, i32 %v0_1056f)
  store i32 %v3_1057a, i32* @eax, align 4
  %v0_1057f = load i32, i32* @ebp, align 4
  %v1_1057f = add i32 %v0_1057f, -12
  %v2_1057f = inttoptr i32 %v1_1057f to i32*
  %v3_1057f = load i32, i32* %v2_1057f, align 4
  %v1_10582 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10582 = icmp eq i32 %v1_10582, %v3_1057f
  br i1 %v3_10582, label %bb, label %dec_label_pc_1058b

bb:                                               ; preds = %dec_label_pc_10550
  %v1_10589 = call i32 @function_10590()
  br label %dec_label_pc_1058b

dec_label_pc_1058b:                               ; preds = %bb, %dec_label_pc_10550
  %v2_10589 = phi i32 [ %v1_10589, %bb ], [ %v3_1057a, %dec_label_pc_10550 ]
  ret i32 %v2_10589

; uselistorder directives
  uselistorder i32 (i32)* @unknown_20abc, { 2, 1, 0 }
}

define i32 @function_10590() local_unnamed_addr {
dec_label_pc_10590:
  %v0_10596 = load i32, i32* @eax, align 4
  ret i32 %v0_10596
}

define i32 @_ZSt12__niter_baseIP5CTxInENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10597:
  %v1_105b4 = call i32 @unknown_217b6(i32 %arg1)
  store i32 %v1_105b4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_105c5

bb:                                               ; preds = %dec_label_pc_10597
  %v1_105c3 = call i32 @function_105ca()
  br label %dec_label_pc_105c5

dec_label_pc_105c5:                               ; preds = %bb, %dec_label_pc_10597
  %v2_105c3 = phi i32 [ %v1_105c3, %bb ], [ %v1_105b4, %dec_label_pc_10597 ]
  ret i32 %v2_105c3
}

define i32 @function_105ca() local_unnamed_addr {
dec_label_pc_105ca:
  %v0_105cb = load i32, i32* @eax, align 4
  ret i32 %v0_105cb
}

define i32 @_ZSt8__fill_aIP5CTxInS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_105cc:
  %v15_1060a108 = icmp eq i32 %arg1, %arg2
  %v1_1060d109 = icmp eq i1 %v15_1060a108, false
  %v5_10610113 = icmp eq i1 %v1_1060d109, false
  %v1_10612114 = icmp eq i1 %v5_10610113, false
  br i1 %v1_10612114, label %dec_label_pc_105f1, label %dec_label_pc_10614

dec_label_pc_105f1:                               ; preds = %dec_label_pc_105cc, %dec_label_pc_105f1
  %stack_var_-32.0115 = phi i32 [ %v4_10603, %dec_label_pc_105f1 ], [ %arg1, %dec_label_pc_105cc ]
  %v2_105fe = call i32 @unknown_20bf4(i32 %stack_var_-32.0115, i32 %arg3)
  %v4_10603 = add i32 %stack_var_-32.0115, 52
  %v15_1060a = icmp eq i32 %v4_10603, %arg2
  %v1_1060d = icmp eq i1 %v15_1060a, false
  %v5_10610 = icmp eq i1 %v1_1060d, false
  %v1_10612 = icmp eq i1 %v5_10610, false
  br i1 %v1_10612, label %dec_label_pc_105f1, label %dec_label_pc_10614

dec_label_pc_10614:                               ; preds = %dec_label_pc_105f1, %dec_label_pc_105cc
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10620

bb:                                               ; preds = %dec_label_pc_10614
  %v1_1061e = call i32 @function_10625()
  br label %dec_label_pc_10620

dec_label_pc_10620:                               ; preds = %bb, %dec_label_pc_10614
  %v2_1061e = phi i32 [ %v1_1061e, %bb ], [ 0, %dec_label_pc_10614 ]
  ret i32 %v2_1061e

; uselistorder directives
  uselistorder i32 %v4_10603, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_105f1, { 1, 0 }
}

define i32 @function_10625() local_unnamed_addr {
dec_label_pc_10625:
  %v0_10626 = load i32, i32* @eax, align 4
  ret i32 %v0_10626
}

define i32 @_ZN5CTxInaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10628:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_1064b = inttoptr i32 %arg2 to i32*
  %v2_1064b = load i32, i32* %v1_1064b, align 4
  store i32 %v2_1064b, i32* %arg1, align 4
  %v1_1064f = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_1064f = inttoptr i32 %v1_1064f to i32*
  %v3_1064f = load i32, i32* %v2_1064f, align 4
  %v1_10652 = load i32, i32* %eax.global-to-local, align 4
  %v2_10652 = add i32 %v1_10652, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_10652 = inttoptr i32 %v2_10652 to i32*
  store i32 %v3_1064f, i32* %v3_10652, align 4
  %v0_10655 = load i32, i32* %edx.global-to-local, align 4
  %v1_10655 = add i32 %v0_10655, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_10655 = inttoptr i32 %v1_10655 to i32*
  %v3_10655 = load i32, i32* %v2_10655, align 4
  %v1_10658 = load i32, i32* %eax.global-to-local, align 4
  %v2_10658 = add i32 %v1_10658, ptrtoint (i32* @global_var_8.883 to i32)
  %v3_10658 = inttoptr i32 %v2_10658 to i32*
  store i32 %v3_10655, i32* %v3_10658, align 4
  %v0_1065b = load i32, i32* %edx.global-to-local, align 4
  %v1_1065b = add i32 %v0_1065b, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_1065b = inttoptr i32 %v1_1065b to i32*
  %v3_1065b = load i32, i32* %v2_1065b, align 4
  %v1_1065e = load i32, i32* %eax.global-to-local, align 4
  %v2_1065e = add i32 %v1_1065e, ptrtoint (i32* @global_var_c.884 to i32)
  %v3_1065e = inttoptr i32 %v2_1065e to i32*
  store i32 %v3_1065b, i32* %v3_1065e, align 4
  %v0_10661 = load i32, i32* %edx.global-to-local, align 4
  %v1_10661 = add i32 %v0_10661, 16
  %v2_10661 = inttoptr i32 %v1_10661 to i32*
  %v3_10661 = load i32, i32* %v2_10661, align 4
  %v1_10664 = load i32, i32* %eax.global-to-local, align 4
  %v2_10664 = add i32 %v1_10664, 16
  %v3_10664 = inttoptr i32 %v2_10664 to i32*
  store i32 %v3_10661, i32* %v3_10664, align 4
  %v0_10667 = load i32, i32* %edx.global-to-local, align 4
  %v1_10667 = add i32 %v0_10667, 20
  %v2_10667 = inttoptr i32 %v1_10667 to i32*
  %v3_10667 = load i32, i32* %v2_10667, align 4
  %v1_1066a = load i32, i32* %eax.global-to-local, align 4
  %v2_1066a = add i32 %v1_1066a, 20
  %v3_1066a = inttoptr i32 %v2_1066a to i32*
  store i32 %v3_10667, i32* %v3_1066a, align 4
  %v4_1066d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1066d

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
}

define i32 @function_10670(i32 %arg1) local_unnamed_addr {
dec_label_pc_10670:
  %v0_10670 = load i32, i32* @ecx, align 4
  %v1_10670 = load i32, i32* @eax, align 4
  %v2_10670 = add i32 %v1_10670, ptrtoint (i32* @global_var_18.885 to i32)
  %v3_10670 = inttoptr i32 %v2_10670 to i32*
  store i32 %v0_10670, i32* %v3_10670, align 4
  %v0_10673 = load i32, i32* @edx, align 4
  %v1_10673 = add i32 %v0_10673, ptrtoint (i32* @global_var_1c.886 to i32)
  %v2_10673 = inttoptr i32 %v1_10673 to i32*
  %v3_10673 = load i32, i32* %v2_10673, align 4
  %v1_10676 = load i32, i32* @eax, align 4
  %v2_10676 = add i32 %v1_10676, ptrtoint (i32* @global_var_1c.886 to i32)
  %v3_10676 = inttoptr i32 %v2_10676 to i32*
  store i32 %v3_10673, i32* %v3_10676, align 4
  %v0_10679 = load i32, i32* @edx, align 4
  %v1_10679 = add i32 %v0_10679, ptrtoint (i32* @mainParams to i32)
  %v2_10679 = inttoptr i32 %v1_10679 to i32*
  %v3_10679 = load i32, i32* %v2_10679, align 4
  %v1_1067c = load i32, i32* @eax, align 4
  %v2_1067c = add i32 %v1_1067c, ptrtoint (i32* @mainParams to i32)
  %v3_1067c = inttoptr i32 %v2_1067c to i32*
  store i32 %v3_10679, i32* %v3_1067c, align 4
  %v0_1067f = load i32, i32* @ebp, align 4
  %v1_1067f = add i32 %v0_1067f, -32
  %v2_1067f = inttoptr i32 %v1_1067f to i32*
  %v3_1067f = load i32, i32* %v2_1067f, align 4
  %v1_10682 = add i32 %v3_1067f, 36
  %v1_10685 = add i32 %v0_1067f, -28
  %v2_10685 = inttoptr i32 %v1_10685 to i32*
  %v3_10685 = load i32, i32* %v2_10685, align 4
  %v1_10688 = add i32 %v3_10685, 36
  %v2_10692 = call i32 @unknown_14628(i32 %v1_10688, i32 %v1_10682)
  %v0_10697 = load i32, i32* @ebp, align 4
  %v1_10697 = add i32 %v0_10697, -32
  %v2_10697 = inttoptr i32 %v1_10697 to i32*
  %v3_10697 = load i32, i32* %v2_10697, align 4
  %v1_1069a = add i32 %v3_10697, 48
  %v2_1069a = inttoptr i32 %v1_1069a to i32*
  %v3_1069a = load i32, i32* %v2_1069a, align 4
  %v1_1069d = add i32 %v0_10697, -28
  %v2_1069d = inttoptr i32 %v1_1069d to i32*
  %v3_1069d = load i32, i32* %v2_1069d, align 4
  %v2_106a0 = add i32 %v3_1069d, 48
  %v3_106a0 = inttoptr i32 %v2_106a0 to i32*
  store i32 %v3_1069a, i32* %v3_106a0, align 4
  %v0_106a3 = load i32, i32* @ebp, align 4
  %v1_106a3 = add i32 %v0_106a3, -28
  %v2_106a3 = inttoptr i32 %v1_106a3 to i32*
  %v3_106a3 = load i32, i32* %v2_106a3, align 4
  store i32 %v3_106a3, i32* @eax, align 4
  %v1_106a6 = add i32 %v0_106a3, -12
  %v2_106a6 = inttoptr i32 %v1_106a6 to i32*
  %v3_106a6 = load i32, i32* %v2_106a6, align 4
  %v1_106a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_106a9 = icmp eq i32 %v1_106a9, %v3_106a6
  br i1 %v3_106a9, label %bb, label %dec_label_pc_106b2

bb:                                               ; preds = %dec_label_pc_10670
  %v1_106b0 = call i32 @function_106b7()
  br label %dec_label_pc_106b2

dec_label_pc_106b2:                               ; preds = %bb, %dec_label_pc_10670
  %v2_106b0 = phi i32 [ %v1_106b0, %bb ], [ %v3_106a3, %dec_label_pc_10670 ]
  ret i32 %v2_106b0
}

define i32 @function_106b7() local_unnamed_addr {
dec_label_pc_106b7:
  %v0_106b8 = load i32, i32* @eax, align 4
  ret i32 %v0_106b8
}

define i32 @_ZSt20uninitialized_fill_nIP5CTxInjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_106b9:
  ret i32 %arg3
}

define i32 @function_106d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106d2:
  %v0_106d2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_106d7 = load i32, i32* @ebp, align 4
  %v2_106d7 = add i32 %v1_106d7, -12
  %v3_106d7 = inttoptr i32 %v2_106d7 to i32*
  store i32 %v0_106d2, i32* %v3_106d7, align 4
  %v0_106dc = load i32, i32* @ebp, align 4
  %v1_106dc = add i32 %v0_106dc, -36
  %v2_106dc = inttoptr i32 %v1_106dc to i32*
  %v3_106dc = load i32, i32* %v2_106dc, align 4
  %v1_106e3 = add i32 %v0_106dc, -32
  %v2_106e3 = inttoptr i32 %v1_106e3 to i32*
  %v3_106e3 = load i32, i32* %v2_106e3, align 4
  %v1_106ea = add i32 %v0_106dc, -28
  %v2_106ea = inttoptr i32 %v1_106ea to i32*
  %v3_106ea = load i32, i32* %v2_106ea, align 4
  %v3_106f0 = call i32 @unknown_21958(i32 %v3_106ea, i32 %v3_106e3, i32 %v3_106dc)
  %v0_106f5 = load i32, i32* @ebp, align 4
  %v1_106f5 = add i32 %v0_106f5, -12
  %v2_106f5 = inttoptr i32 %v1_106f5 to i32*
  %v3_106f5 = load i32, i32* %v2_106f5, align 4
  %v1_106f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_106f8 = xor i32 %v1_106f8, %v3_106f5
  %v3_106f8 = icmp eq i32 %v2_106f8, 0
  store i32 %v2_106f8, i32* @eax, align 4
  br i1 %v3_106f8, label %bb, label %dec_label_pc_10701

bb:                                               ; preds = %dec_label_pc_106d2
  %v1_106ff = call i32 @function_10706()
  br label %dec_label_pc_10701

dec_label_pc_10701:                               ; preds = %bb, %dec_label_pc_106d2
  %v3_106ff = phi i32 [ %v1_106ff, %bb ], [ %v2_106f8, %dec_label_pc_106d2 ]
  ret i32 %v3_106ff
}

define i32 @function_10706() local_unnamed_addr {
dec_label_pc_10706:
  %v0_10707 = load i32, i32* @eax, align 4
  ret i32 %v0_10707
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10708:
  ret i32 %arg1
}

define i32 @function_10722(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10722:
  %v0_10722 = load i32, i32* @eax, align 4
  %v1_10725 = call i32 @unknown_1f8f8(i32 %v0_10722)
  %v1_1072d = call i32 @unknown_21a4a(i32 %v1_10725)
  store i32 %v1_1072d, i32* @eax, align 4
  %v0_10732 = load i32, i32* @ebp, align 4
  %v1_10732 = add i32 %v0_10732, -12
  %v2_10732 = inttoptr i32 %v1_10732 to i32*
  %v3_10732 = load i32, i32* %v2_10732, align 4
  %v1_10735 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10735 = icmp eq i32 %v1_10735, %v3_10732
  br i1 %v3_10735, label %bb, label %dec_label_pc_1073e

bb:                                               ; preds = %dec_label_pc_10722
  %v1_1073c = call i32 @function_10743()
  br label %dec_label_pc_1073e

dec_label_pc_1073e:                               ; preds = %bb, %dec_label_pc_10722
  %v2_1073c = phi i32 [ %v1_1073c, %bb ], [ %v1_1072d, %dec_label_pc_10722 ]
  ret i32 %v2_1073c
}

define i32 @function_10743() local_unnamed_addr {
dec_label_pc_10743:
  %v0_10744 = load i32, i32* @eax, align 4
  ret i32 %v0_10744
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10746:
  ret i32 %arg1
}

define i32 @function_10772(i32 %arg1) local_unnamed_addr {
dec_label_pc_10772:
  %v2_10772 = load i32, i32* @eax, align 4
  %v4_10772 = mul i32 %v2_10772, 2
  %v21_10772 = inttoptr i32 %v2_10772 to i32*
  store i32 %v4_10772, i32* %v21_10772, align 4
  %v0_10774 = load i32, i32* @eax, align 4
  %v1_10774 = load i32, i32* @ebp, align 4
  %v2_10774 = add i32 %v1_10774, -32
  %v3_10774 = inttoptr i32 %v2_10774 to i32*
  %v4_10774 = load i32, i32* %v3_10774, align 4
  %v10_10774 = icmp ult i32 %v0_10774, %v4_10774
  %v1_10777 = zext i1 %v10_10774 to i32
  %v3_10777 = and i32 %v0_10774, -256
  %v4_10777 = or i32 %v1_10777, %v3_10777
  %v5_1077a = icmp eq i1 %v10_10774, false
  br i1 %v5_1077a, label %bb, label %dec_label_pc_1077e

bb:                                               ; preds = %dec_label_pc_10772
  %v1_1077c = call i32 @function_10783()
  br label %dec_label_pc_1077e

dec_label_pc_1077e:                               ; preds = %bb, %dec_label_pc_10772
  %v2_1077c = phi i32 [ %v1_1077c, %bb ], [ %v4_10777, %dec_label_pc_10772 ]
  ret i32 %v2_1077c

; uselistorder directives
  uselistorder i1 %v10_10774, { 1, 0 }
  uselistorder i32 %v2_10772, { 1, 0 }
}

define i32 @function_10783() local_unnamed_addr {
dec_label_pc_10783:
  %v0_10783 = load i32, i32* @ebp, align 4
  %v1_10783 = add i32 %v0_10783, -32
  %v2_10783 = inttoptr i32 %v1_10783 to i32*
  %v3_10783 = load i32, i32* %v2_10783, align 4
  %v3_10786 = mul i32 %v3_10783, 52
  ret i32 %v3_10786
}

define i32 @function_107a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_107a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_107a1() local_unnamed_addr {
dec_label_pc_107a1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_107a1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_107a1 = add i32 %v0_107a1, -1
  store i32 %v1_107a1, i32* %ecx.global-to-local, align 4
  %v0_107a3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_107a3
}

define i32 @_ZSt12__miter_baseIP6CTxOutENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_107a4:
  %v1_107c1 = call i32 @unknown_21b15(i32 %arg1)
  store i32 %v1_107c1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_107d2

bb:                                               ; preds = %dec_label_pc_107a4
  %v1_107d0 = call i32 @function_107d7()
  br label %dec_label_pc_107d2

dec_label_pc_107d2:                               ; preds = %bb, %dec_label_pc_107a4
  %v2_107d0 = phi i32 [ %v1_107d0, %bb ], [ %v1_107c1, %dec_label_pc_107a4 ]
  ret i32 %v2_107d0
}

define i32 @function_107d7() local_unnamed_addr {
dec_label_pc_107d7:
  %v0_107d8 = load i32, i32* @eax, align 4
  ret i32 %v0_107d8
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_107d9:
  %v1_10804 = call i32 @unknown_21024(i32 %arg3)
  %v1_10811 = call i32 @unknown_21024(i32 %arg2)
  %v1_1081e = call i32 @unknown_21024(i32 %arg1)
  %v3_1082e = call i32 @unknown_21b77(i32 %v1_1081e, i32 %v1_10811, i32 %v1_10804)
  store i32 %v3_1082e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1083f

bb:                                               ; preds = %dec_label_pc_107d9
  %v1_1083d = call i32 @function_10844()
  br label %dec_label_pc_1083f

dec_label_pc_1083f:                               ; preds = %bb, %dec_label_pc_107d9
  %v2_1083d = phi i32 [ %v1_1083d, %bb ], [ %v3_1082e, %dec_label_pc_107d9 ]
  ret i32 %v2_1083d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_21024, { 2, 1, 0 }
}

define i32 @function_10844() local_unnamed_addr {
dec_label_pc_10844:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10845(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10845:
  %v0_10845 = load i32, i32* @eax, align 4
  ret i32 %v0_10845
}

define i32 @_ZSt12__niter_baseIP6CTxOutENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1084b:
  %v1_10868 = call i32 @unknown_21bbc(i32 %arg1)
  store i32 %v1_10868, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10879

bb:                                               ; preds = %dec_label_pc_1084b
  %v1_10877 = call i32 @function_1087e()
  br label %dec_label_pc_10879

dec_label_pc_10879:                               ; preds = %bb, %dec_label_pc_1084b
  %v2_10877 = phi i32 [ %v1_10877, %bb ], [ %v1_10868, %dec_label_pc_1084b ]
  ret i32 %v2_10877
}

define i32 @function_1087e() local_unnamed_addr {
dec_label_pc_1087e:
  %v0_1087f = load i32, i32* @eax, align 4
  ret i32 %v0_1087f
}

define i32 @_ZSt8__fill_aIP6CTxOutS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10880:
  %v15_108be108 = icmp eq i32 %arg1, %arg2
  %v1_108c1109 = icmp eq i1 %v15_108be108, false
  %v5_108c4113 = icmp eq i1 %v1_108c1109, false
  %v1_108c6114 = icmp eq i1 %v5_108c4113, false
  br i1 %v1_108c6114, label %dec_label_pc_108a5, label %dec_label_pc_108c8

dec_label_pc_108a5:                               ; preds = %dec_label_pc_10880, %dec_label_pc_108a5
  %stack_var_-32.0115 = phi i32 [ %v4_108b7, %dec_label_pc_108a5 ], [ %arg1, %dec_label_pc_10880 ]
  %v2_108b2 = call i32 @unknown_2115c(i32 %stack_var_-32.0115, i32 %arg3)
  %v4_108b7 = add i32 %stack_var_-32.0115, 20
  %v15_108be = icmp eq i32 %v4_108b7, %arg2
  %v1_108c1 = icmp eq i1 %v15_108be, false
  %v5_108c4 = icmp eq i1 %v1_108c1, false
  %v1_108c6 = icmp eq i1 %v5_108c4, false
  br i1 %v1_108c6, label %dec_label_pc_108a5, label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108a5, %dec_label_pc_10880
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_108d4

bb:                                               ; preds = %dec_label_pc_108c8
  %v1_108d2 = call i32 @function_108d9()
  br label %dec_label_pc_108d4

dec_label_pc_108d4:                               ; preds = %bb, %dec_label_pc_108c8
  %v2_108d2 = phi i32 [ %v1_108d2, %bb ], [ 0, %dec_label_pc_108c8 ]
  ret i32 %v2_108d2

; uselistorder directives
  uselistorder i32 %v4_108b7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_108a5, { 1, 0 }
}

define i32 @function_108d9() local_unnamed_addr {
dec_label_pc_108d9:
  %v0_108da = load i32, i32* @eax, align 4
  ret i32 %v0_108da
}

define i32 @_ZN6CTxOutaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108dc:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_108fc = add i32 %arg2, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_108fc = inttoptr i32 %v1_108fc to i32*
  %v3_108fc = load i32, i32* %v2_108fc, align 4
  %v1_108ff = inttoptr i32 %arg2 to i32*
  %v2_108ff = load i32, i32* %v1_108ff, align 4
  store i32 %v2_108ff, i32* %arg1, align 4
  %v2_10906 = add i32 %tmp103, ptrtoint (i16** @global_var_4.882 to i32)
  %v3_10906 = inttoptr i32 %v2_10906 to i32*
  store i32 %v3_108fc, i32* %v3_10906, align 4
  %v1_1090c = add i32 %arg2, ptrtoint (i32* @global_var_8.883 to i32)
  %v1_10912 = add i32 %tmp103, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_1091c = call i32 @unknown_148dc(i32 %v1_10912, i32 %v1_1090c)
  store i32 %tmp103, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10930

bb:                                               ; preds = %dec_label_pc_108dc
  %v1_1092e = call i32 @function_10935()
  br label %dec_label_pc_10930

dec_label_pc_10930:                               ; preds = %bb, %dec_label_pc_108dc
  %v2_1092e = phi i32 [ %v1_1092e, %bb ], [ %tmp103, %dec_label_pc_108dc ]
  ret i32 %v2_1092e

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_10935() local_unnamed_addr {
dec_label_pc_10935:
  %v0_10936 = load i32, i32* @eax, align 4
  ret i32 %v0_10936
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10938:
  %v1_10955 = call i32 @unknown_19dbe(i32 %arg1)
  %v1_1095d = call i32 @unknown_20b70(i32 %v1_10955)
  store i32 %v1_1095d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1096e

bb:                                               ; preds = %dec_label_pc_10938
  %v1_1096c = call i32 @function_10973()
  br label %dec_label_pc_1096e

dec_label_pc_1096e:                               ; preds = %bb, %dec_label_pc_10938
  %v2_1096c = phi i32 [ %v1_1096c, %bb ], [ %v1_1095d, %dec_label_pc_10938 ]
  ret i32 %v2_1096c
}

define i32 @function_10973() local_unnamed_addr {
dec_label_pc_10973:
  %v4_10973 = load i32, i32* @eax, align 4
  ret i32 %v4_10973
}

define i32 @function_10974(i32 %arg1) local_unnamed_addr {
dec_label_pc_10974:
  %v0_10974 = load i32, i32* @eax, align 4
  ret i32 %v0_10974
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10976:
  %v0_10988 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_10988
}

define i32 @function_10990(i32 %arg1) local_unnamed_addr {
dec_label_pc_10990:
  %v0_10993 = load i32, i32* @ebp, align 4
  %v1_10993 = add i32 %v0_10993, -32
  %v2_10993 = inttoptr i32 %v1_10993 to i32*
  %v3_10993 = load i32, i32* %v2_10993, align 4
  %v1_1099a = add i32 %v0_10993, -28
  %v2_1099a = inttoptr i32 %v1_1099a to i32*
  %v3_1099a = load i32, i32* %v2_1099a, align 4
  %v2_109a0 = call i32 @unknown_21d68(i32 %v3_1099a, i32 %v3_10993)
  %v0_109a5 = load i32, i32* @ebp, align 4
  %v1_109a5 = add i32 %v0_109a5, -28
  %v2_109a5 = inttoptr i32 %v1_109a5 to i32*
  %v3_109a5 = load i32, i32* %v2_109a5, align 4
  %v1_109a8 = inttoptr i32 %v3_109a5 to i32*
  store i32 0, i32* %v1_109a8, align 4
  %v0_109ae = load i32, i32* @ebp, align 4
  %v1_109ae = add i32 %v0_109ae, -28
  %v2_109ae = inttoptr i32 %v1_109ae to i32*
  %v3_109ae = load i32, i32* %v2_109ae, align 4
  %v1_109b1 = add i32 %v3_109ae, ptrtoint (i16** @global_var_4.882 to i32)
  %v2_109b1 = inttoptr i32 %v1_109b1 to i32*
  store i32 0, i32* %v2_109b1, align 4
  %v0_109b8 = load i32, i32* @ebp, align 4
  %v1_109b8 = add i32 %v0_109b8, -28
  %v2_109b8 = inttoptr i32 %v1_109b8 to i32*
  %v3_109b8 = load i32, i32* %v2_109b8, align 4
  ret i32 %v3_109b8

; uselistorder directives
  uselistorder i16** @global_var_4.882, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_4.882 to i32), { 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_109bd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_109bd:
  %v2_109bd = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_109bd = load i32, i32* @eax, align 4
  %v4_109bd = trunc i32 %v3_109bd to i8
  %v5_109bd = or i8 %v4_109bd, %v2_109bd
  %v12_109bd = inttoptr i32 %v3_109bd to i8*
  store i8 %v5_109bd, i8* %v12_109bd, align 1
  %v2_109bf = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_109bf = load i32, i32* @eax, align 4
  %v4_109bf = trunc i32 %v3_109bf to i8
  %v5_109bf = add i8 %v4_109bf, %v2_109bf
  %v21_109bf = inttoptr i32 %v3_109bf to i8*
  store i8 %v5_109bf, i8* %v21_109bf, align 1
  %v0_109c1 = load i32, i32* @ebx, align 4
  %v1_109c1 = add i32 %v0_109c1, 862319685
  %v2_109c1 = inttoptr i32 %v1_109c1 to i8*
  %v3_109c1 = load i8, i8* %v2_109c1, align 1
  %v4_109c1 = load i32, i32* @ecx, align 4
  %v5_109c1 = trunc i32 %v4_109c1 to i8
  %v6_109c1 = add i8 %v5_109c1, %v3_109c1
  store i8 %v6_109c1, i8* %v2_109c1, align 1
  %v0_109c7 = load i32, i32* @eax, align 4
  %v1_109c7 = add i32 %v0_109c7, 20
  %v10_109c7 = icmp eq i32 %v1_109c7, 0
  store i32 %v1_109c7, i32* @eax, align 4
  br i1 %v10_109c7, label %bb, label %dec_label_pc_109ce

bb:                                               ; preds = %dec_label_pc_109bd
  %v1_109cc = call i32 @function_109d3()
  br label %dec_label_pc_109ce

dec_label_pc_109ce:                               ; preds = %bb, %dec_label_pc_109bd
  %v2_109cc = phi i32 [ %v1_109cc, %bb ], [ %v1_109c7, %dec_label_pc_109bd ]
  ret i32 %v2_109cc

; uselistorder directives
  uselistorder i32 862319685, { 2, 7, 3, 4, 5, 0, 1, 6 }
}

define i32 @function_109d3() local_unnamed_addr {
dec_label_pc_109d3:
  %v4_109d3 = load i32, i32* @eax, align 4
  ret i32 %v4_109d3
}

define i32 @function_109d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_109d4:
  %v0_109d4 = load i32, i32* @eax, align 4
  ret i32 %v0_109d4
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_109d5:
  %v3_10a0c = call i32 @unknown_21e09(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_10a0c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10a1d

bb:                                               ; preds = %dec_label_pc_109d5
  %v1_10a1b = call i32 @function_10a22()
  br label %dec_label_pc_10a1d

dec_label_pc_10a1d:                               ; preds = %bb, %dec_label_pc_109d5
  %v2_10a1b = phi i32 [ %v1_10a1b, %bb ], [ %v3_10a0c, %dec_label_pc_109d5 ]
  ret i32 %v2_10a1b
}

define i32 @function_10a22() local_unnamed_addr {
dec_label_pc_10a22:
  %v0_10a23 = load i32, i32* @eax, align 4
  ret i32 %v0_10a23
}

define i32 @_ZNSt10_Iter_baseIP12CTransactionLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a24:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10a4a

bb:                                               ; preds = %dec_label_pc_10a24
  %v2_10a48 = call i32 @function_10a4f(i32 %arg1)
  br label %dec_label_pc_10a4a

dec_label_pc_10a4a:                               ; preds = %bb, %dec_label_pc_10a24
  %v3_10a48 = phi i32 [ %v2_10a48, %bb ], [ %arg1, %dec_label_pc_10a24 ]
  ret i32 %v3_10a48
}

define i32 @function_10a4f(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a4f:
  %v0_10a50 = load i32, i32* @eax, align 4
  ret i32 %v0_10a50
}

define i32 @_ZSt12__niter_baseIP12CTransactionENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a51:
  ret i32 %arg1
}

define i32 @function_10a72(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a72:
  %cf.global-to-local = alloca i1, align 1
  %v0_10a72 = load i32, i32* @ebx, align 4
  %v1_10a72 = add i32 %v0_10a72, 862319701
  %v2_10a72 = inttoptr i32 %v1_10a72 to i8*
  %v3_10a72 = load i8, i8* %v2_10a72, align 1
  %v4_10a72 = load i32, i32* @ecx, align 4
  %v5_10a72 = trunc i32 %v4_10a72 to i8
  %v6_10a72 = add i8 %v5_10a72, %v3_10a72
  %v11_10a72 = icmp ult i8 %v6_10a72, %v3_10a72
  store i1 %v11_10a72, i1* %cf.global-to-local, align 1
  store i8 %v6_10a72, i8* %v2_10a72, align 1
  %v0_10a78 = load i32, i32* @eax, align 4
  %v1_10a78 = load i1, i1* %cf.global-to-local, align 1
  %v2_10a78 = zext i1 %v1_10a78 to i32
  %v3_10a78 = add i32 %v0_10a78, 20
  %v4_10a78 = add i32 %v3_10a78, %v2_10a78
  %v14_10a78 = icmp eq i32 %v4_10a78, 0
  %v22_10a78 = icmp ule i32 %v4_10a78, %v0_10a78
  %v23_10a78 = icmp ugt i32 %v0_10a78, -21
  %v24_10a78 = select i1 %v1_10a78, i1 %v22_10a78, i1 %v23_10a78
  store i1 %v24_10a78, i1* %cf.global-to-local, align 1
  store i32 %v4_10a78, i32* @eax, align 4
  br i1 %v14_10a78, label %bb, label %dec_label_pc_10a7f

bb:                                               ; preds = %dec_label_pc_10a72
  %v1_10a7d = call i32 @function_10a84()
  br label %dec_label_pc_10a7f

dec_label_pc_10a7f:                               ; preds = %bb, %dec_label_pc_10a72
  %v2_10a7d = phi i32 [ %v1_10a7d, %bb ], [ %v4_10a78, %dec_label_pc_10a72 ]
  ret i32 %v2_10a7d

; uselistorder directives
  uselistorder i32 %v4_10a78, { 0, 2, 1, 3 }
  uselistorder i8 %v3_10a72, { 1, 0 }
  uselistorder i32 -21, { 0, 1, 3, 2 }
  uselistorder i32 862319701, { 2, 1, 0 }
}

define i32 @function_10a84() local_unnamed_addr {
dec_label_pc_10a84:
  %v0_10a85 = load i32, i32* @eax, align 4
  ret i32 %v0_10a85
}

define i32 @_ZSt22__copy_move_backward_aILb0EP12CTransactionS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10a86:
  ret i32 %arg1
}

define i32 @function_10ad6() local_unnamed_addr {
dec_label_pc_10ad6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10ad6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10ad6 = add i32 %v0_10ad6, -1
  store i32 %v1_10ad6, i32* %ecx.global-to-local, align 4
  %v0_10ad8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10ad8
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ad9:
  ret i32 %arg1
}

define i32 @function_10ae2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ae2:
  %v0_10ae2 = load i32, i32* @eax, align 4
  %v1_10ae2 = load i32, i32* @ebp, align 4
  %v2_10ae2 = add i32 %v1_10ae2, -28
  %v3_10ae2 = inttoptr i32 %v2_10ae2 to i32*
  store i32 %v0_10ae2, i32* %v3_10ae2, align 4
  %v0_10ae5 = load i32, i32* @ebp, align 4
  %v1_10ae5 = add i32 %v0_10ae5, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_10ae5 = inttoptr i32 %v1_10ae5 to i32*
  %v3_10ae5 = load i32, i32* %v2_10ae5, align 4
  %v2_10ae8 = add i32 %v0_10ae5, -32
  %v3_10ae8 = inttoptr i32 %v2_10ae8 to i32*
  store i32 %v3_10ae5, i32* %v3_10ae8, align 4
  %v0_10aeb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10af1 = load i32, i32* @ebp, align 4
  %v2_10af1 = add i32 %v1_10af1, -12
  %v3_10af1 = inttoptr i32 %v2_10af1 to i32*
  store i32 %v0_10aeb, i32* %v3_10af1, align 4
  %v0_10af6 = load i32, i32* @ebp, align 4
  %v1_10af6 = add i32 %v0_10af6, -28
  %v2_10af6 = inttoptr i32 %v1_10af6 to i32*
  %v3_10af6 = load i32, i32* %v2_10af6, align 4
  %v1_10af9 = add i32 %v0_10af6, -32
  %v2_10af9 = inttoptr i32 %v1_10af9 to i32*
  %v3_10af9 = load i32, i32* %v2_10af9, align 4
  %v2_10b03 = call i32 @unknown_22044(i32 %v3_10af6, i32 %v3_10af9)
  %v0_10b0b = load i32, i32* @ebp, align 4
  %v1_10b0b = add i32 %v0_10b0b, -28
  %v2_10b0b = inttoptr i32 %v1_10b0b to i32*
  %v3_10b0b = load i32, i32* %v2_10b0b, align 4
  store i32 %v3_10b0b, i32* @eax, align 4
  %v1_10b0e = add i32 %v0_10b0b, -12
  %v2_10b0e = inttoptr i32 %v1_10b0e to i32*
  %v3_10b0e = load i32, i32* %v2_10b0e, align 4
  %v1_10b11 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10b11 = icmp eq i32 %v1_10b11, %v3_10b0e
  br i1 %v3_10b11, label %bb, label %dec_label_pc_10b1a

bb:                                               ; preds = %dec_label_pc_10ae2
  %v1_10b18 = call i32 @function_10b1f()
  br label %dec_label_pc_10b1a

dec_label_pc_10b1a:                               ; preds = %bb, %dec_label_pc_10ae2
  %v3_10b18 = phi i32 [ %v1_10b18, %bb ], [ %v3_10b0b, %dec_label_pc_10ae2 ]
  ret i32 %v3_10b18
}

define i32 @function_10b1f() local_unnamed_addr {
dec_label_pc_10b1f:
  %v0_10b20 = load i32, i32* @eax, align 4
  ret i32 %v0_10b20
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_() local_unnamed_addr {
dec_label_pc_10b23:
  %eax.global-to-local = alloca i32, align 4
  %v5_10b27 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_10b27
}

define i32 @function_10b2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b2a:
  %v0_10b2a = load i32, i32* @ebx, align 4
  %v1_10b2a = add i32 %v0_10b2a, 1166608453
  %v2_10b2a = inttoptr i32 %v1_10b2a to i8*
  %v3_10b2a = load i8, i8* %v2_10b2a, align 1
  %v4_10b2a = load i32, i32* @ecx, align 4
  %v5_10b2a = trunc i32 %v4_10b2a to i8
  %v6_10b2a = xor i8 %v5_10b2a, %v3_10b2a
  store i8 %v6_10b2a, i8* %v2_10b2a, align 1
  %v15_10b2a = load i32, i32* @eax, align 4
  ret i32 %v15_10b2a
}

define i32 @function_10b30(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b30:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_10b32 = load i32, i32* @ebp, align 4
  %v0_10b33 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_10b33 = or i32 %v0_10b33, 137
  store i32 %v11_10b33, i32* %eax.global-to-local, align 4
  %v0_10b36 = load i32, i32* @ecx, align 4
  %v1_10b36 = add i32 %v0_10b36, -1
  store i32 %v1_10b36, i32* @ecx, align 4
  %v1_10b38 = add i32 %v0_10b32, 3
  store i32 %v1_10b38, i32* %ebp.global-to-local, align 4
  %v1_10b39 = add i32 %v0_10b36, 1166793796
  %v2_10b39 = inttoptr i32 %v1_10b39 to i8*
  %v3_10b39 = load i8, i8* %v2_10b39, align 1
  %v5_10b39 = trunc i32 %v1_10b36 to i8
  %v8_10b39 = add i8 %v3_10b39, %v5_10b39
  %v28_10b39 = icmp ult i8 %v8_10b39, %v3_10b39
  store i1 %v28_10b39, i1* %cf.global-to-local, align 1
  store i8 %v8_10b39, i8* %v2_10b39, align 1
  %v0_10b3f = load i32, i32* %eax.global-to-local, align 4
  %v1_10b3f = trunc i32 %v0_10b3f to i8
  %v2_10b3f = load i1, i1* %cf.global-to-local, align 1
  %v3_10b3f = zext i1 %v2_10b3f to i8
  %v4_10b3f = add i8 %v1_10b3f, -119
  %v5_10b3f = add i8 %v4_10b3f, %v3_10b3f
  %v22_10b3f = icmp ule i8 %v5_10b3f, %v1_10b3f
  %v23_10b3f = icmp ugt i8 %v1_10b3f, 118
  %v24_10b3f = select i1 %v2_10b3f, i1 %v22_10b3f, i1 %v23_10b3f
  %v25_10b3f = zext i8 %v5_10b3f to i32
  %v27_10b3f = and i32 %v0_10b3f, -256
  %v28_10b3f = or i32 %v25_10b3f, %v27_10b3f
  store i32 %v28_10b3f, i32* %eax.global-to-local, align 4
  %v0_10b41 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10b41 = add i32 %v0_10b41, 1
  store i32 %v1_10b41, i32* @ebp, align 4
  %v2_10b42 = add i32 %v0_10b41, -94
  %v3_10b42 = inttoptr i32 %v2_10b42 to float*
  %v4_10b42 = load float, float* %v3_10b42, align 4
  %v5_10b42 = fpext float %v4_10b42 to x86_fp80
  %v6_10b42 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_10b42 = fsub x86_fp80 %v5_10b42, %v6_10b42
  store x86_fp80 %v7_10b42, x86_fp80* @st0, align 4
  %v3_10b45 = zext i1 %v24_10b3f to i8
  %v4_10b45 = add i8 %v3_10b45, %v5_10b3f
  %v19_10b45 = icmp ule i8 %v4_10b45, %v5_10b3f
  %v21_10b45 = icmp eq i1 %v24_10b3f, %v19_10b45
  store i1 %v21_10b45, i1* %cf.global-to-local, align 1
  %v22_10b45 = zext i8 %v4_10b45 to i32
  %v25_10b45 = or i32 %v22_10b45, %v27_10b3f
  store i32 %v25_10b45, i32* %eax.global-to-local, align 4
  %v1_10b47 = inttoptr i32 %v25_10b45 to i8*
  %v2_10b47 = load i8, i8* %v1_10b47, align 1
  %v5_10b47 = add i8 %v2_10b47, %v4_10b45
  store i8 %v5_10b47, i8* %v1_10b47, align 1
  %v0_10b49 = load i32, i32* %eax.global-to-local, align 4
  %v1_10b49 = load i32, i32* @ebp, align 4
  %v2_10b49 = add i32 %v1_10b49, -12
  %v3_10b49 = inttoptr i32 %v2_10b49 to i32*
  store i32 %v0_10b49, i32* %v3_10b49, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10b4e = load i32, i32* @ebp, align 4
  %v1_10b4e = add i32 %v0_10b4e, -40
  %v2_10b4e = inttoptr i32 %v1_10b4e to i32*
  %v3_10b4e = load i32, i32* %v2_10b4e, align 4
  store i32 %v3_10b4e, i32* %eax.global-to-local, align 4
  %v1_10b54 = call i32 @unknown_220cb(i32 %v3_10b4e)
  store i32 %v1_10b54, i32* %eax.global-to-local, align 4
  store i32 %v1_10b54, i32* %esi.global-to-local, align 4
  %v0_10b5b = load i32, i32* @ebp, align 4
  %v1_10b5b = add i32 %v0_10b5b, -36
  %v2_10b5b = inttoptr i32 %v1_10b5b to i32*
  %v3_10b5b = load i32, i32* %v2_10b5b, align 4
  store i32 %v3_10b5b, i32* %eax.global-to-local, align 4
  %v1_10b61 = call i32 @unknown_1c8b4(i32 %v3_10b5b)
  store i32 %v1_10b61, i32* %eax.global-to-local, align 4
  store i32 %v1_10b61, i32* %ebx.global-to-local, align 4
  %v0_10b68 = load i32, i32* @ebp, align 4
  %v1_10b68 = add i32 %v0_10b68, -32
  %v2_10b68 = inttoptr i32 %v1_10b68 to i32*
  %v3_10b68 = load i32, i32* %v2_10b68, align 4
  store i32 %v3_10b68, i32* %eax.global-to-local, align 4
  %v1_10b6e = call i32 @unknown_1c8b4(i32 %v3_10b68)
  store i32 %v1_10b6e, i32* %eax.global-to-local, align 4
  %v0_10b73 = load i32, i32* %esi.global-to-local, align 4
  %v0_10b77 = load i32, i32* %ebx.global-to-local, align 4
  %v3_10b7e = call i32 @unknown_22100(i32 %v1_10b6e, i32 %v0_10b77, i32 %v0_10b73)
  %v1_10b83 = load i32, i32* @ebp, align 4
  %v2_10b83 = add i32 %v1_10b83, -16
  %v3_10b83 = inttoptr i32 %v2_10b83 to i32*
  store i32 %v3_10b7e, i32* %v3_10b83, align 4
  %v0_10b86 = load i32, i32* @ebp, align 4
  %v1_10b86 = add i32 %v0_10b86, -16
  store i32 %v1_10b86, i32* %eax.global-to-local, align 4
  %v1_10b8d = add i32 %v0_10b86, -28
  %v2_10b8d = inttoptr i32 %v1_10b8d to i32*
  %v3_10b8d = load i32, i32* %v2_10b8d, align 4
  store i32 %v3_10b8d, i32* %eax.global-to-local, align 4
  ret i32 %v3_10b8d

; uselistorder directives
  uselistorder i8 %v4_10b45, { 0, 2, 1 }
  uselistorder i8 %v5_10b3f, { 1, 0, 3, 2 }
  uselistorder i8 %v3_10b39, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1c8b4, { 1, 0 }
  uselistorder i32 -40, { 7, 20, 14, 16, 8, 9, 1, 2, 12, 3, 4, 5, 6, 15, 18, 19, 10, 11, 17, 13, 0 }
  uselistorder i8 -119, { 0, 2, 1 }
}

define i32 @function_10b94(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b94:
  %v0_10b95 = load i32, i32* @eax, align 4
  ret i32 %v0_10b95
}

define i32 @function_10bab(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bab:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10bab = load i32, i32* %ebx.global-to-local, align 4
  %v1_10bab = add i32 %v0_10bab, 1583034564
  %v2_10bab = inttoptr i32 %v1_10bab to i32*
  %v3_10bab = load i32, i32* %v2_10bab, align 4
  %v4_10bab = add i32 %v3_10bab, 1
  store i32 %v4_10bab, i32* %v2_10bab, align 4
  %v0_10bb2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10bb2
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEEEvT_S8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bb5:
  ret i32 %arg1
}

define i32 @function_10bc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bc0:
  %v0_10bc2 = load i32, i32* @ebp, align 4
  %v1_10bc5 = add i32 %v0_10bc2, 2
  store i32 %v1_10bc5, i32* @ebp, align 4
  %v0_10bc6 = load i32, i32* @ecx, align 4
  %v1_10bc6 = add i32 %v0_10bc6, -1
  store i32 %v1_10bc6, i32* @ecx, align 4
  %v0_10bc8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10bcd = add i32 %v0_10bc2, -10
  %v3_10bcd = inttoptr i32 %v2_10bcd to i32*
  store i32 %v0_10bc8, i32* %v3_10bcd, align 4
  %v0_10bd2 = load i32, i32* @ebp, align 4
  %v1_10bd2 = add i32 %v0_10bd2, -32
  %v2_10bd2 = inttoptr i32 %v1_10bd2 to i32*
  %v3_10bd2 = load i32, i32* %v2_10bd2, align 4
  %v1_10bd9 = add i32 %v0_10bd2, -28
  %v2_10bd9 = inttoptr i32 %v1_10bd9 to i32*
  %v3_10bd9 = load i32, i32* %v2_10bd9, align 4
  %v2_10bdf = call i32 @unknown_221e5(i32 %v3_10bd9, i32 %v3_10bd2)
  %v0_10be4 = load i32, i32* @ebp, align 4
  %v1_10be4 = add i32 %v0_10be4, -12
  %v2_10be4 = inttoptr i32 %v1_10be4 to i32*
  %v3_10be4 = load i32, i32* %v2_10be4, align 4
  %v1_10be7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10be7 = xor i32 %v1_10be7, %v3_10be4
  %v3_10be7 = icmp eq i32 %v2_10be7, 0
  store i32 %v2_10be7, i32* @eax, align 4
  br i1 %v3_10be7, label %bb, label %dec_label_pc_10bf0

bb:                                               ; preds = %dec_label_pc_10bc0
  %v1_10bee = call i32 @function_10bf5()
  br label %dec_label_pc_10bf0

dec_label_pc_10bf0:                               ; preds = %bb, %dec_label_pc_10bc0
  %v3_10bee = phi i32 [ %v1_10bee, %bb ], [ %v2_10be7, %dec_label_pc_10bc0 ]
  ret i32 %v3_10bee
}

define i32 @function_10bf5() local_unnamed_addr {
dec_label_pc_10bf5:
  %v0_10bf6 = load i32, i32* @eax, align 4
  ret i32 %v0_10bf6
}

define i32 @_ZSt14__copy_move_a2ILb0EP5CTxInS1_ET1_T0_S3_S2_() local_unnamed_addr {
dec_label_pc_10bf7:
  %eax.global-to-local = alloca i32, align 4
  %v16_10bfc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v16_10bfc
}

define i32 @function_10c00(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c00:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_10c00 = load i32, i32* @ebp, align 4
  %v1_10c00 = add i32 %v0_10c00, 1
  store i32 %v1_10c00, i32* %ebp.global-to-local, align 4
  %v0_10c01 = load i32, i32* @ecx, align 4
  %v1_10c01 = add i32 %v0_10c01, 1166795845
  %v2_10c01 = inttoptr i32 %v1_10c01 to i8*
  %v3_10c01 = load i8, i8* %v2_10c01, align 1
  %v5_10c01 = trunc i32 %v0_10c01 to i8
  %v6_10c01 = or i8 %v3_10c01, %v5_10c01
  store i8 %v6_10c01, i8* %v2_10c01, align 1
  %v0_10c07 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_10c07 = or i32 %v0_10c07, 137
  store i32 %v11_10c07, i32* %eax.global-to-local, align 4
  %v0_10c09 = load i32, i32* %ebp.global-to-local, align 4
  %v0_10c0a = load i32, i32* @ecx, align 4
  %v1_10c0a = add i32 %v0_10c0a, 255
  %v1_10c0c = add i32 %v0_10c09, 2
  store i32 %v1_10c0c, i32* @ebp, align 4
  %v1_10c0d = add i32 %v0_10c0a, -1587159996
  %v2_10c0d = inttoptr i32 %v1_10c0d to i8*
  %v3_10c0d = load i8, i8* %v2_10c0d, align 1
  %v5_10c0d = trunc i32 %v1_10c0a to i8
  %v8_10c0d = add i8 %v3_10c0d, %v5_10c0d
  %v28_10c0d = icmp ult i8 %v8_10c0d, %v3_10c0d
  store i1 %v28_10c0d, i1* %cf.global-to-local, align 1
  store i8 %v8_10c0d, i8* %v2_10c0d, align 1
  %v0_10c13 = load i32, i32* %eax.global-to-local, align 4
  %v1_10c13 = trunc i32 %v0_10c13 to i8
  %v2_10c13 = load i1, i1* %cf.global-to-local, align 1
  %v3_10c13 = zext i1 %v2_10c13 to i8
  %v4_10c13 = add i8 %v3_10c13, %v1_10c13
  %v19_10c13 = icmp ule i8 %v4_10c13, %v1_10c13
  %v21_10c13 = icmp eq i1 %v2_10c13, %v19_10c13
  store i1 %v21_10c13, i1* %cf.global-to-local, align 1
  %v22_10c13 = zext i8 %v4_10c13 to i32
  %v24_10c13 = and i32 %v0_10c13, -256
  %v25_10c13 = or i32 %v22_10c13, %v24_10c13
  store i32 %v25_10c13, i32* %eax.global-to-local, align 4
  %v1_10c15 = inttoptr i32 %v25_10c13 to i8*
  %v2_10c15 = load i8, i8* %v1_10c15, align 1
  %v5_10c15 = add i8 %v2_10c15, %v4_10c13
  store i8 %v5_10c15, i8* %v1_10c15, align 1
  %v0_10c17 = load i32, i32* %eax.global-to-local, align 4
  %v1_10c17 = load i32, i32* @ebp, align 4
  %v2_10c17 = add i32 %v1_10c17, -12
  %v3_10c17 = inttoptr i32 %v2_10c17 to i32*
  store i32 %v0_10c17, i32* %v3_10c17, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10c1c = load i32, i32* @ebp, align 4
  %v1_10c1c = add i32 %v0_10c1c, -36
  %v2_10c1c = inttoptr i32 %v1_10c1c to i32*
  %v3_10c1c = load i32, i32* %v2_10c1c, align 4
  store i32 %v3_10c1c, i32* %eax.global-to-local, align 4
  %v1_10c22 = call i32 @unknown_2118e(i32 %v3_10c1c)
  store i32 %v1_10c22, i32* %eax.global-to-local, align 4
  store i32 %v1_10c22, i32* %esi.global-to-local, align 4
  %v0_10c29 = load i32, i32* @ebp, align 4
  %v1_10c29 = add i32 %v0_10c29, -32
  %v2_10c29 = inttoptr i32 %v1_10c29 to i32*
  %v3_10c29 = load i32, i32* %v2_10c29, align 4
  store i32 %v3_10c29, i32* %eax.global-to-local, align 4
  %v1_10c2f = call i32 @unknown_2118e(i32 %v3_10c29)
  store i32 %v1_10c2f, i32* %eax.global-to-local, align 4
  store i32 %v1_10c2f, i32* @ebx, align 4
  %v0_10c36 = load i32, i32* @ebp, align 4
  %v1_10c36 = add i32 %v0_10c36, -28
  %v2_10c36 = inttoptr i32 %v1_10c36 to i32*
  %v3_10c36 = load i32, i32* %v2_10c36, align 4
  store i32 %v3_10c36, i32* %eax.global-to-local, align 4
  %v1_10c3c = call i32 @unknown_2118e(i32 %v3_10c36)
  store i32 %v1_10c3c, i32* %eax.global-to-local, align 4
  %v0_10c41 = load i32, i32* %esi.global-to-local, align 4
  %v0_10c45 = load i32, i32* @ebx, align 4
  %v3_10c4c = call i32 @unknown_22295(i32 %v1_10c3c, i32 %v0_10c45, i32 %v0_10c41)
  store i32 %v3_10c4c, i32* @eax, align 4
  %v0_10c51 = load i32, i32* @ebp, align 4
  %v1_10c51 = add i32 %v0_10c51, -12
  %v2_10c51 = inttoptr i32 %v1_10c51 to i32*
  %v3_10c51 = load i32, i32* %v2_10c51, align 4
  %v1_10c54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_10c54 = icmp eq i32 %v1_10c54, %v3_10c51
  br i1 %v3_10c54, label %bb, label %dec_label_pc_10c5d

bb:                                               ; preds = %dec_label_pc_10c00
  %v1_10c5b = call i32 @function_10c62()
  store i32 %v1_10c5b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10c5d

dec_label_pc_10c5d:                               ; preds = %bb, %dec_label_pc_10c00
  %v4_10c5b = phi i32 [ %v1_10c5b, %bb ], [ %v3_10c4c, %dec_label_pc_10c00 ]
  ret i32 %v4_10c5b

; uselistorder directives
  uselistorder i8 %v4_10c13, { 0, 2, 1 }
  uselistorder i8 %v1_10c13, { 1, 0 }
  uselistorder i8 %v3_10c0d, { 1, 0 }
  uselistorder i32 (i32)* @unknown_2118e, { 2, 1, 0 }
}

define i32 @function_10c62() local_unnamed_addr {
dec_label_pc_10c62:
  %v0_10c68 = load i32, i32* @eax, align 4
  ret i32 %v0_10c68
}

define i32 @_ZSt18uninitialized_copyIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10c69:
  ret i32 %arg3
}

define i32 @function_10c84(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c84:
  %v2_10c84 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10c84 = load i32, i32* @eax, align 4
  %v4_10c84 = trunc i32 %v3_10c84 to i8
  %v5_10c84 = add i8 %v4_10c84, %v2_10c84
  %v21_10c84 = inttoptr i32 %v3_10c84 to i8*
  store i8 %v5_10c84, i8* %v21_10c84, align 1
  %v0_10c86 = load i32, i32* @ecx, align 4
  %v1_10c86 = add i32 %v0_10c86, -1070468027
  %v2_10c86 = inttoptr i32 %v1_10c86 to i8*
  %v3_10c86 = load i8, i8* %v2_10c86, align 1
  %v5_10c86 = trunc i32 %v0_10c86 to i8
  %v6_10c86 = add i8 %v3_10c86, %v5_10c86
  store i8 %v6_10c86, i8* %v2_10c86, align 1
  %v0_10c8c = load i32, i32* @ebp, align 4
  %v1_10c8c = add i32 %v0_10c8c, -36
  %v2_10c8c = inttoptr i32 %v1_10c8c to i32*
  %v3_10c8c = load i32, i32* %v2_10c8c, align 4
  %v1_10c93 = add i32 %v0_10c8c, -32
  %v2_10c93 = inttoptr i32 %v1_10c93 to i32*
  %v3_10c93 = load i32, i32* %v2_10c93, align 4
  %v1_10c9a = add i32 %v0_10c8c, -28
  %v2_10c9a = inttoptr i32 %v1_10c9a to i32*
  %v3_10c9a = load i32, i32* %v2_10c9a, align 4
  %v3_10ca0 = call i32 @unknown_2235a(i32 %v3_10c9a, i32 %v3_10c93, i32 %v3_10c8c)
  ret i32 %v3_10ca0
}

define i32 @function_10ca7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10ca7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10cb1(i32 %arg1) local_unnamed_addr {
dec_label_pc_10cb1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10cb6() local_unnamed_addr {
dec_label_pc_10cb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_10cb7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10cb7
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10cb8:
  %v2_10ce2 = call i32 @unknown_22450(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10cf9

bb:                                               ; preds = %dec_label_pc_10cb8
  %v1_10cf7 = call i32 @function_10cfe()
  br label %dec_label_pc_10cf9

dec_label_pc_10cf9:                               ; preds = %bb, %dec_label_pc_10cb8
  %v2_10cf7 = phi i32 [ %v1_10cf7, %bb ], [ %arg1, %dec_label_pc_10cb8 ]
  ret i32 %v2_10cf7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_10cfe() local_unnamed_addr {
dec_label_pc_10cfe:
  %v0_10cff = load i32, i32* @eax, align 4
  ret i32 %v0_10cff
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10d02:
  %stack_var_-20 = alloca i32, align 4
  %v1_10d33 = call i32 @unknown_224d7(i32 %arg4)
  %v1_10d40 = call i32 @unknown_1cac8(i32 %arg3)
  %v1_10d4d = call i32 @unknown_1cac8(i32 %arg2)
  %v3_10d5d = call i32 @unknown_2250c(i32 %v1_10d4d, i32 %v1_10d40, i32 %v1_10d33)
  store i32 %v3_10d5d, i32* %stack_var_-20, align 4
  %v2_10d65 = ptrtoint i32* %stack_var_-20 to i32
  %v2_10d72 = call i32 @unknown_1cc5a(i32 %arg1, i32 %v2_10d65)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10d86

bb:                                               ; preds = %dec_label_pc_10d02
  %v1_10d84 = call i32 @function_10d8b()
  br label %dec_label_pc_10d86

dec_label_pc_10d86:                               ; preds = %bb, %dec_label_pc_10d02
  %v2_10d84 = phi i32 [ %v1_10d84, %bb ], [ %arg1, %dec_label_pc_10d02 ]
  ret i32 %v2_10d84

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1cac8, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_10d8b() local_unnamed_addr {
dec_label_pc_10d8b:
  %v0_10d91 = load i32, i32* @eax, align 4
  ret i32 %v0_10d91
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEEvT_S8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d94:
  ret i32 %arg2
}

define i32 @function_10daa(i32 %arg1) local_unnamed_addr {
dec_label_pc_10daa:
  %v2_10daa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10daa = load i32, i32* @eax, align 4
  %v4_10daa = trunc i32 %v3_10daa to i8
  %v5_10daa = add i8 %v4_10daa, %v2_10daa
  %v21_10daa = inttoptr i32 %v3_10daa to i8*
  store i8 %v5_10daa, i8* %v21_10daa, align 1
  %v0_10dac = load i32, i32* @eax, align 4
  %v1_10dac = load i32, i32* @ebp, align 4
  %v2_10dac = add i32 %v1_10dac, -12
  %v3_10dac = inttoptr i32 %v2_10dac to i32*
  store i32 %v0_10dac, i32* %v3_10dac, align 4
  %v0_10db1 = load i32, i32* @ebp, align 4
  %v1_10db1 = add i32 %v0_10db1, -32
  %v2_10db1 = inttoptr i32 %v1_10db1 to i32*
  %v3_10db1 = load i32, i32* %v2_10db1, align 4
  %v1_10db8 = add i32 %v0_10db1, -28
  %v2_10db8 = inttoptr i32 %v1_10db8 to i32*
  %v3_10db8 = load i32, i32* %v2_10db8, align 4
  %v2_10dbe = call i32 @unknown_225f1(i32 %v3_10db8, i32 %v3_10db1)
  %v0_10dc3 = load i32, i32* @ebp, align 4
  %v1_10dc3 = add i32 %v0_10dc3, -12
  %v2_10dc3 = inttoptr i32 %v1_10dc3 to i32*
  %v3_10dc3 = load i32, i32* %v2_10dc3, align 4
  %v1_10dc6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10dc6 = xor i32 %v1_10dc6, %v3_10dc3
  %v3_10dc6 = icmp eq i32 %v2_10dc6, 0
  store i32 %v2_10dc6, i32* @eax, align 4
  br i1 %v3_10dc6, label %bb, label %dec_label_pc_10dcf

bb:                                               ; preds = %dec_label_pc_10daa
  %v1_10dcd = call i32 @function_10dd4()
  br label %dec_label_pc_10dcf

dec_label_pc_10dcf:                               ; preds = %bb, %dec_label_pc_10daa
  %v2_10dcd = phi i32 [ %v1_10dcd, %bb ], [ %v2_10dc6, %dec_label_pc_10daa ]
  ret i32 %v2_10dcd
}

define i32 @function_10dd4() local_unnamed_addr {
dec_label_pc_10dd4:
  %v0_10dd5 = load i32, i32* @eax, align 4
  ret i32 %v0_10dd5
}

define i32 @_ZSt14__copy_move_a2ILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10dd6:
  ret i32 %arg1
}

define i32 @function_10de5() local_unnamed_addr {
dec_label_pc_10de5:
  %eax.global-to-local = alloca i32, align 4
  %v15_10de5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_10de5
}

define i32 @function_10e14() local_unnamed_addr {
dec_label_pc_10e14:
  %eax.global-to-local = alloca i32, align 4
  %v0_10e14 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10e14
}

define i32 @function_10e16(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e16:
  %v0_10e16 = load i32, i32* @ebp, align 4
  %v1_10e16 = add i32 %v0_10e16, 1
  store i32 %v1_10e16, i32* @ebp, align 4
  %v0_10e1b = call i32 @unknown_21621()
  %v0_10e20 = load i32, i32* @esi, align 4
  %v0_10e24 = load i32, i32* @ebx, align 4
  %v3_10e2b = call i32 @unknown_226a1(i32 %v0_10e1b, i32 %v0_10e24, i32 %v0_10e20)
  store i32 %v3_10e2b, i32* @eax, align 4
  %v0_10e30 = load i32, i32* @ebp, align 4
  %v1_10e30 = add i32 %v0_10e30, -12
  %v2_10e30 = inttoptr i32 %v1_10e30 to i32*
  %v3_10e30 = load i32, i32* %v2_10e30, align 4
  %v1_10e33 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10e33 = icmp eq i32 %v1_10e33, %v3_10e30
  br i1 %v3_10e33, label %bb, label %dec_label_pc_10e3c

bb:                                               ; preds = %dec_label_pc_10e16
  %v1_10e3a = call i32 @function_10e41()
  br label %dec_label_pc_10e3c

dec_label_pc_10e3c:                               ; preds = %bb, %dec_label_pc_10e16
  %v2_10e3a = phi i32 [ %v1_10e3a, %bb ], [ %v3_10e2b, %dec_label_pc_10e16 ]
  ret i32 %v2_10e3a
}

define i32 @function_10e41() local_unnamed_addr {
dec_label_pc_10e41:
  %v0_10e47 = load i32, i32* @eax, align 4
  ret i32 %v0_10e47
}

define i32 @_ZSt18uninitialized_copyIP6CTxOutS1_ET0_T_S3_S2_() local_unnamed_addr {
dec_label_pc_10e48:
  %eax.global-to-local = alloca i32, align 4
  %v2_10e49 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_10e49
}

define i32 @function_10e4d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10e4d:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_10e4d = load i32, i32* @ecx, align 4
  %v0_10e55 = load i32, i32* @ebp, align 4
  %v0_10e56 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_10e56 = or i32 %v0_10e56, 137
  store i32 %v11_10e56, i32* %eax.global-to-local, align 4
  %v1_10e59 = add i32 %v4_10e4d, 255
  %v1_10e5b = add i32 %v0_10e55, 3
  store i32 %v1_10e5b, i32* @ebp, align 4
  %v1_10e5c = add i32 %v4_10e4d, -1587159996
  %v2_10e5c = inttoptr i32 %v1_10e5c to i8*
  %v3_10e5c = load i8, i8* %v2_10e5c, align 1
  %v5_10e5c = trunc i32 %v1_10e59 to i8
  %v8_10e5c = add i8 %v3_10e5c, %v5_10e5c
  %v28_10e5c = icmp ult i8 %v8_10e5c, %v3_10e5c
  store i1 %v28_10e5c, i1* %cf.global-to-local, align 1
  store i8 %v8_10e5c, i8* %v2_10e5c, align 1
  %v0_10e62 = load i32, i32* %eax.global-to-local, align 4
  %v1_10e62 = trunc i32 %v0_10e62 to i8
  %v2_10e62 = load i1, i1* %cf.global-to-local, align 1
  %v3_10e62 = zext i1 %v2_10e62 to i8
  %v4_10e62 = add i8 %v3_10e62, %v1_10e62
  %v19_10e62 = icmp ule i8 %v4_10e62, %v1_10e62
  %v21_10e62 = icmp eq i1 %v2_10e62, %v19_10e62
  store i1 %v21_10e62, i1* %cf.global-to-local, align 1
  %v22_10e62 = zext i8 %v4_10e62 to i32
  %v24_10e62 = and i32 %v0_10e62, -256
  %v25_10e62 = or i32 %v22_10e62, %v24_10e62
  store i32 %v25_10e62, i32* %eax.global-to-local, align 4
  %v1_10e64 = inttoptr i32 %v25_10e62 to i8*
  %v2_10e64 = load i8, i8* %v1_10e64, align 1
  %v5_10e64 = add i8 %v2_10e64, %v4_10e62
  store i8 %v5_10e64, i8* %v1_10e64, align 1
  %v0_10e66 = load i32, i32* %eax.global-to-local, align 4
  %v1_10e66 = load i32, i32* @ebp, align 4
  %v2_10e66 = add i32 %v1_10e66, -12
  %v3_10e66 = inttoptr i32 %v2_10e66 to i32*
  store i32 %v0_10e66, i32* %v3_10e66, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10e6b = load i32, i32* @ebp, align 4
  %v1_10e6b = add i32 %v0_10e6b, -36
  %v2_10e6b = inttoptr i32 %v1_10e6b to i32*
  %v3_10e6b = load i32, i32* %v2_10e6b, align 4
  store i32 %v3_10e6b, i32* %eax.global-to-local, align 4
  %v1_10e72 = add i32 %v0_10e6b, -32
  %v2_10e72 = inttoptr i32 %v1_10e72 to i32*
  %v3_10e72 = load i32, i32* %v2_10e72, align 4
  store i32 %v3_10e72, i32* %eax.global-to-local, align 4
  %v1_10e79 = add i32 %v0_10e6b, -28
  %v2_10e79 = inttoptr i32 %v1_10e79 to i32*
  %v3_10e79 = load i32, i32* %v2_10e79, align 4
  store i32 %v3_10e79, i32* %eax.global-to-local, align 4
  %v3_10e7f = call i32 @unknown_22766(i32 %v3_10e79, i32 %v3_10e72, i32 %v3_10e6b)
  store i32 %v3_10e7f, i32* @eax, align 4
  %v0_10e84 = load i32, i32* @ebp, align 4
  %v1_10e84 = add i32 %v0_10e84, -12
  %v2_10e84 = inttoptr i32 %v1_10e84 to i32*
  %v3_10e84 = load i32, i32* %v2_10e84, align 4
  %v1_10e87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_10e87 = icmp eq i32 %v1_10e87, %v3_10e84
  br i1 %v3_10e87, label %bb, label %dec_label_pc_10e90

bb:                                               ; preds = %dec_label_pc_10e4d
  %v1_10e8e = call i32 @function_10e95()
  store i32 %v1_10e8e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10e90

dec_label_pc_10e90:                               ; preds = %bb, %dec_label_pc_10e4d
  %v3_10e8e = phi i32 [ %v1_10e8e, %bb ], [ %v3_10e7f, %dec_label_pc_10e4d ]
  ret i32 %v3_10e8e

; uselistorder directives
  uselistorder i8 %v4_10e62, { 0, 2, 1 }
  uselistorder i8 %v1_10e62, { 1, 0 }
  uselistorder i8 %v3_10e5c, { 1, 0 }
}

define i32 @function_10e95() local_unnamed_addr {
dec_label_pc_10e95:
  %v0_10e96 = load i32, i32* @eax, align 4
  ret i32 %v0_10e96
}

define i32 @_ZNKSt12_Vector_baseI12CTransactionSaIS0_EE19_M_get_Tp_allocatorEv() local_unnamed_addr {
dec_label_pc_10e98:
  %eax.global-to-local = alloca i32, align 4
  %v5_10e98 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_10e98
}

define i32 @function_10e9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e9a:
  %v0_10e9d = load i32, i32* @ebx, align 4
  %v1_10e9d = add i32 %v0_10e9d, 1166608453
  %v2_10e9d = inttoptr i32 %v1_10e9d to i8*
  %v3_10e9d = load i8, i8* %v2_10e9d, align 1
  %v4_10e9d = load i32, i32* @ecx, align 4
  %v5_10e9d = trunc i32 %v4_10e9d to i8
  %v6_10e9d = sub i8 %v3_10e9d, %v5_10e9d
  store i8 %v6_10e9d, i8* %v2_10e9d, align 1
  %v0_10ea5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10eaa = load i32, i32* @ebp, align 4
  %v2_10eaa = add i32 %v1_10eaa, -12
  %v3_10eaa = inttoptr i32 %v2_10eaa to i32*
  store i32 %v0_10ea5, i32* %v3_10eaa, align 4
  %v0_10eaf = load i32, i32* @ebp, align 4
  %v1_10eaf = add i32 %v0_10eaf, -28
  %v2_10eaf = inttoptr i32 %v1_10eaf to i32*
  %v3_10eaf = load i32, i32* %v2_10eaf, align 4
  store i32 %v3_10eaf, i32* @eax, align 4
  %v1_10eb2 = add i32 %v0_10eaf, -12
  %v2_10eb2 = inttoptr i32 %v1_10eb2 to i32*
  %v3_10eb2 = load i32, i32* %v2_10eb2, align 4
  %v1_10eb5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10eb5 = icmp eq i32 %v1_10eb5, %v3_10eb2
  br i1 %v3_10eb5, label %bb, label %dec_label_pc_10ebe

bb:                                               ; preds = %dec_label_pc_10e9a
  %v1_10ebc = call i32 @function_10ec3()
  br label %dec_label_pc_10ebe

dec_label_pc_10ebe:                               ; preds = %bb, %dec_label_pc_10e9a
  %v2_10ebc = phi i32 [ %v1_10ebc, %bb ], [ %v3_10eaf, %dec_label_pc_10e9a ]
  ret i32 %v2_10ebc

; uselistorder directives
  uselistorder i32 1166608453, { 2, 1, 0, 3, 4, 5 }
}

define i32 @function_10ec3() local_unnamed_addr {
dec_label_pc_10ec3:
  %v0_10ec4 = load i32, i32* @eax, align 4
  ret i32 %v0_10ec4
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI12CTransactionE8max_sizeEv() local_unnamed_addr {
dec_label_pc_10ec6:
  %eax.global-to-local = alloca i32, align 4
  %v5_10ec6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_10ec6
}

define i32 @function_10ec7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10ec7:
  %stack_var_0 = alloca i32, align 4
  %v1_10ec7 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10ec7, i32* @ebp, align 4
  store i32 134217727, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10eee

bb:                                               ; preds = %dec_label_pc_10ec7
  %v2_10eec = call i32 @function_10ef3(i32 %arg1)
  br label %dec_label_pc_10eee

dec_label_pc_10eee:                               ; preds = %bb, %dec_label_pc_10ec7
  %v4_10eec = phi i32 [ %v2_10eec, %bb ], [ 134217727, %dec_label_pc_10ec7 ]
  ret i32 %v4_10eec
}

define i32 @function_10ef3(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ef3:
  %v0_10ef4 = load i32, i32* @eax, align 4
  ret i32 %v0_10ef4
}

define i32 @_ZSt18uninitialized_copyIP12CTransactionS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10ef5:
  ret i32 %arg3
}

define i32 @function_10f20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f20:
  %v0_10f20 = load i32, i32* @ebp, align 4
  %v1_10f20 = add i32 %v0_10f20, 1
  store i32 %v1_10f20, i32* @ebp, align 4
  %v1_10f26 = add i32 %v0_10f20, -27
  %v2_10f26 = inttoptr i32 %v1_10f26 to i32*
  %v3_10f26 = load i32, i32* %v2_10f26, align 4
  %v1_10f2c = call i32 @unknown_228ba(i32 %v3_10f26)
  store i32 %v1_10f2c, i32* @eax, align 4
  %v0_10f31 = load i32, i32* @ebp, align 4
  %v1_10f31 = add i32 %v0_10f31, -12
  %v2_10f31 = inttoptr i32 %v1_10f31 to i32*
  %v3_10f31 = load i32, i32* %v2_10f31, align 4
  %v1_10f34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10f34 = icmp eq i32 %v1_10f34, %v3_10f31
  br i1 %v3_10f34, label %bb, label %dec_label_pc_10f3d

bb:                                               ; preds = %dec_label_pc_10f20
  %v1_10f3b = call i32 @function_10f42()
  br label %dec_label_pc_10f3d

dec_label_pc_10f3d:                               ; preds = %bb, %dec_label_pc_10f20
  %v3_10f3b = phi i32 [ %v1_10f3b, %bb ], [ %v1_10f2c, %dec_label_pc_10f20 ]
  ret i32 %v3_10f3b
}

define i32 @function_10f42() local_unnamed_addr {
dec_label_pc_10f42:
  %v0_10f43 = load i32, i32* @eax, align 4
  ret i32 %v0_10f43
}

define i32 @_ZNSt10_Iter_baseIP12CDNSSeedDataLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f44:
  ret i32 %arg1
}

define i32 @function_10f4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f4e:
  %v0_10f4e = load i32, i32* @ebp, align 4
  %v1_10f4e = add i32 %v0_10f4e, 1
  store i32 %v1_10f4e, i32* @ebp, align 4
  %v0_10f51 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10f56 = add i32 %v0_10f4e, -11
  %v3_10f56 = inttoptr i32 %v2_10f56 to i32*
  store i32 %v0_10f51, i32* %v3_10f56, align 4
  %v0_10f5b = load i32, i32* @ebp, align 4
  %v1_10f5b = add i32 %v0_10f5b, -28
  %v2_10f5b = inttoptr i32 %v1_10f5b to i32*
  %v3_10f5b = load i32, i32* %v2_10f5b, align 4
  store i32 %v3_10f5b, i32* @eax, align 4
  %v1_10f5e = add i32 %v0_10f5b, -12
  %v2_10f5e = inttoptr i32 %v1_10f5e to i32*
  %v3_10f5e = load i32, i32* %v2_10f5e, align 4
  %v1_10f61 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10f61 = icmp eq i32 %v1_10f61, %v3_10f5e
  br i1 %v3_10f61, label %bb, label %dec_label_pc_10f6a

bb:                                               ; preds = %dec_label_pc_10f4e
  %v1_10f68 = call i32 @function_10f6f()
  br label %dec_label_pc_10f6a

dec_label_pc_10f6a:                               ; preds = %bb, %dec_label_pc_10f4e
  %v2_10f68 = phi i32 [ %v1_10f68, %bb ], [ %v3_10f5b, %dec_label_pc_10f4e ]
  ret i32 %v2_10f68
}

define i32 @function_10f6f() local_unnamed_addr {
dec_label_pc_10f6f:
  %v0_10f70 = load i32, i32* @eax, align 4
  ret i32 %v0_10f70
}

define i32 @_ZSt12__niter_baseIP12CDNSSeedDataENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f71:
  ret i32 0
}

define i32 @function_10f8a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f8a:
  %v0_10f8e = call i32 @unknown_21eb5()
  store i32 %v0_10f8e, i32* @eax, align 4
  %v0_10f93 = load i32, i32* @ebp, align 4
  %v1_10f93 = add i32 %v0_10f93, -12
  %v2_10f93 = inttoptr i32 %v1_10f93 to i32*
  %v3_10f93 = load i32, i32* %v2_10f93, align 4
  %v1_10f96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10f96 = icmp eq i32 %v1_10f96, %v3_10f93
  br i1 %v3_10f96, label %bb, label %dec_label_pc_10f9f

bb:                                               ; preds = %dec_label_pc_10f8a
  %v1_10f9d = call i32 @function_10fa4()
  br label %dec_label_pc_10f9f

dec_label_pc_10f9f:                               ; preds = %bb, %dec_label_pc_10f8a
  %v2_10f9d = phi i32 [ %v1_10f9d, %bb ], [ %v0_10f8e, %dec_label_pc_10f8a ]
  ret i32 %v2_10f9d
}

define i32 @function_10fa4() local_unnamed_addr {
dec_label_pc_10fa4:
  %v0_10fa5 = load i32, i32* @eax, align 4
  ret i32 %v0_10fa5
}

define i32 @_ZSt22__copy_move_backward_aILb0EP12CDNSSeedDataS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10fa6:
  %v3_10fe1 = call i32 @unknown_22a12(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_10fe1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10ff2

bb:                                               ; preds = %dec_label_pc_10fa6
  %v1_10ff0 = call i32 @function_10ff7()
  br label %dec_label_pc_10ff2

dec_label_pc_10ff2:                               ; preds = %bb, %dec_label_pc_10fa6
  %v2_10ff0 = phi i32 [ %v1_10ff0, %bb ], [ %v3_10fe1, %dec_label_pc_10fa6 ]
  ret i32 %v2_10ff0
}

define i32 @function_10ff7() local_unnamed_addr {
dec_label_pc_10ff7:
  %v0_10ff8 = load i32, i32* @eax, align 4
  ret i32 %v0_10ff8
}

define i32 @_ZNKSt12_Vector_baseI12CDNSSeedDataSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ffa:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11020

bb:                                               ; preds = %dec_label_pc_10ffa
  %v2_1101e = call i32 @function_11025(i32 %arg1)
  br label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %bb, %dec_label_pc_10ffa
  %v3_1101e = phi i32 [ %v2_1101e, %bb ], [ %arg1, %dec_label_pc_10ffa ]
  ret i32 %v3_1101e
}

define i32 @function_11025(i32 %arg1) local_unnamed_addr {
dec_label_pc_11025:
  %v4_11025 = load i32, i32* @eax, align 4
  ret i32 %v4_11025
}

define i32 @function_11026(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11026:
  %v0_11026 = load i32, i32* @eax, align 4
  ret i32 %v0_11026
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI12CDNSSeedDataE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11028:
  store i32 536870911, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11050

bb:                                               ; preds = %dec_label_pc_11028
  %v2_1104e = call i32 @function_11055(i32 %arg1)
  br label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %bb, %dec_label_pc_11028
  %v3_1104e = phi i32 [ %v2_1104e, %bb ], [ 536870911, %dec_label_pc_11028 ]
  ret i32 %v3_1104e
}

define i32 @function_11055(i32 %arg1) local_unnamed_addr {
dec_label_pc_11055:
  %v0_11056 = load i32, i32* @eax, align 4
  ret i32 %v0_11056
}

define i32 @_ZSt18uninitialized_copyIP12CDNSSeedDataS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11057:
  %v3_1108e = call i32 @unknown_22b39(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1108e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1109f

bb:                                               ; preds = %dec_label_pc_11057
  %v1_1109d = call i32 @function_110a4()
  br label %dec_label_pc_1109f

dec_label_pc_1109f:                               ; preds = %bb, %dec_label_pc_11057
  %v2_1109d = phi i32 [ %v1_1109d, %bb ], [ %v3_1108e, %dec_label_pc_11057 ]
  ret i32 %v2_1109d
}

define i32 @function_110a4() local_unnamed_addr {
dec_label_pc_110a4:
  %v0_110a5 = load i32, i32* @eax, align 4
  ret i32 %v0_110a5
}

define i32 @_ZSt6fill_nIPhjhET_S1_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_110a6:
  %v1_110cf = call i32 @unknown_1ef52(i32 %arg1)
  %v3_110e5 = call i32 @unknown_22c2f(i32 %v1_110cf, i32 %arg2, i32 %arg3)
  store i32 %v3_110e5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_110f6

bb:                                               ; preds = %dec_label_pc_110a6
  %v1_110f4 = call i32 @function_110fb()
  br label %dec_label_pc_110f6

dec_label_pc_110f6:                               ; preds = %bb, %dec_label_pc_110a6
  %v2_110f4 = phi i32 [ %v1_110f4, %bb ], [ %v3_110e5, %dec_label_pc_110a6 ]
  ret i32 %v2_110f4
}

define i32 @function_110fb() local_unnamed_addr {
dec_label_pc_110fb:
  %v0_110fc = load i32, i32* @eax, align 4
  ret i32 %v0_110fc
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_110fd:
  %v2_11128 = sub i32 %arg2, %arg1
  ret i32 %v2_11128
}

define i32 @function_1112e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1112e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11132(i32 %arg1) local_unnamed_addr {
dec_label_pc_11132:
  %v0_11132 = load i32, i32* @esi, align 4
  %v1_11132 = load i32, i32* @ebx, align 4
  %v3_11132 = add i32 %v0_11132, -117
  %v4_11132 = add i32 %v3_11132, %v1_11132
  %v5_11132 = inttoptr i32 %v4_11132 to i8*
  %v6_11132 = load i8, i8* %v5_11132, align 1
  %v7_11132 = load i32, i32* @edx, align 4
  %v8_11132 = lshr i32 %v7_11132, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_11132 = trunc i32 %v8_11132 to i8
  %v10_11132 = add i8 %v9_11132, %v6_11132
  store i8 %v10_11132, i8* %v5_11132, align 1
  %v5_11136 = load i32, i32* @eax, align 4
  ret i32 %v5_11136
}

define i32 @function_11138(i32 %arg1) local_unnamed_addr {
dec_label_pc_11138:
  %v0_11138 = load i32, i32* @ebp, align 4
  %v1_11138 = add i32 %v0_11138, -16
  %v2_11138 = inttoptr i32 %v1_11138 to i32*
  %v3_11138 = load i32, i32* %v2_11138, align 4
  %v2_1113d = add i32 %v0_11138, -36
  %v3_1113d = inttoptr i32 %v2_1113d to i32*
  %v4_1113d = load i32, i32* %v3_1113d, align 4
  %v5_1113d = sub i32 %v4_1113d, %v3_11138
  ret i32 %v5_1113d
}

define i32 @function_1116b() local_unnamed_addr {
dec_label_pc_1116b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1116b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1116b = add i32 %v0_1116b, -1
  store i32 %v1_1116b, i32* %ecx.global-to-local, align 4
  %v0_1116d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1116d
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKhPhEET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1116e:
  ret i32 %arg1
}

define i32 @function_111a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_111a4:
  %v0_111a4 = load i32, i32* @eax, align 4
  %v11_111a4 = and i32 %v0_111a4, or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256)
  store i32 %v11_111a4, i32* @eax, align 4
  %v0_111ad = load i32, i32* @edx, align 4
  %v1_111ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_111ad = icmp eq i32 %v1_111ad, %v0_111ad
  br i1 %v3_111ad, label %bb, label %dec_label_pc_111b6

bb:                                               ; preds = %dec_label_pc_111a4
  %v1_111b4 = call i32 @function_111bb()
  br label %dec_label_pc_111b6

dec_label_pc_111b6:                               ; preds = %bb, %dec_label_pc_111a4
  %v2_111b4 = phi i32 [ %v1_111b4, %bb ], [ %v11_111a4, %dec_label_pc_111a4 ]
  ret i32 %v2_111b4

; uselistorder directives
  uselistorder i32 %v11_111a4, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_e8.898 to i8), { 2, 0, 1 }
  uselistorder i32 or (i32 zext (i8 ptrtoint (i8* @global_var_e8.898 to i8) to i32), i32 -256), { 8, 9, 0, 1, 2, 10, 3, 4, 5, 6, 7 }
}

define i32 @function_111bb() local_unnamed_addr {
dec_label_pc_111bb:
  %v0_111bc = load i32, i32* @eax, align 4
  ret i32 %v0_111bc
}

define i32 @_ZNSt10_Iter_baseIPKhLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_111bd:
  ret i32 %arg1
}

define i32 @_ZSt12__niter_baseIPKhENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_111ea:
  %v1_11207 = call i32 @unknown_223a7(i32 %arg1)
  store i32 %v1_11207, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11218

bb:                                               ; preds = %dec_label_pc_111ea
  %v1_11216 = call i32 @function_1121d()
  br label %dec_label_pc_11218

dec_label_pc_11218:                               ; preds = %bb, %dec_label_pc_111ea
  %v2_11216 = phi i32 [ %v1_11216, %bb ], [ %v1_11207, %dec_label_pc_111ea ]
  ret i32 %v2_11216
}

define i32 @function_1121d() local_unnamed_addr {
dec_label_pc_1121d:
  %v0_1121e = load i32, i32* @eax, align 4
  ret i32 %v0_1121e
}

define i32 @_ZNSt10_Iter_baseIP5CTxInLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1121f:
  ret i32 %arg1
}

define i32 @function_11228(i32 %arg1) local_unnamed_addr {
dec_label_pc_11228:
  %v0_11228 = load i32, i32* @eax, align 4
  %v1_11228 = load i32, i32* @ebp, align 4
  %v2_11228 = add i32 %v1_11228, -28
  %v3_11228 = inttoptr i32 %v2_11228 to i32*
  store i32 %v0_11228, i32* %v3_11228, align 4
  %v0_1122b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11231 = load i32, i32* @ebp, align 4
  %v2_11231 = add i32 %v1_11231, -12
  %v3_11231 = inttoptr i32 %v2_11231 to i32*
  store i32 %v0_1122b, i32* %v3_11231, align 4
  %v0_11236 = load i32, i32* @ebp, align 4
  %v1_11236 = add i32 %v0_11236, -28
  %v2_11236 = inttoptr i32 %v1_11236 to i32*
  %v3_11236 = load i32, i32* %v2_11236, align 4
  store i32 %v3_11236, i32* @eax, align 4
  %v1_11239 = add i32 %v0_11236, -12
  %v2_11239 = inttoptr i32 %v1_11239 to i32*
  %v3_11239 = load i32, i32* %v2_11239, align 4
  %v1_1123c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1123c = icmp eq i32 %v1_1123c, %v3_11239
  br i1 %v3_1123c, label %bb, label %dec_label_pc_11245

bb:                                               ; preds = %dec_label_pc_11228
  %v1_11243 = call i32 @function_1124a()
  br label %dec_label_pc_11245

dec_label_pc_11245:                               ; preds = %bb, %dec_label_pc_11228
  %v2_11243 = phi i32 [ %v1_11243, %bb ], [ %v3_11236, %dec_label_pc_11228 ]
  ret i32 %v2_11243
}

define i32 @function_1124a() local_unnamed_addr {
dec_label_pc_1124a:
  %v0_1124b = load i32, i32* @eax, align 4
  ret i32 %v0_1124b
}

define i32 @_ZSt22__copy_move_backward_aILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1124c:
  ret i32 %arg1
}

define i32 @function_11255(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11255:
  %v0_11255 = load i32, i32* @eax, align 4
  %v1_11255 = load i32, i32* @ebp, align 4
  %v2_11255 = add i32 %v1_11255, -28
  %v3_11255 = inttoptr i32 %v2_11255 to i32*
  store i32 %v0_11255, i32* %v3_11255, align 4
  %v0_11258 = load i32, i32* @ebp, align 4
  %v1_11258 = add i32 %v0_11258, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_11258 = inttoptr i32 %v1_11258 to i32*
  %v3_11258 = load i32, i32* %v2_11258, align 4
  %v2_1125b = add i32 %v0_11258, -32
  %v3_1125b = inttoptr i32 %v2_1125b to i32*
  store i32 %v3_11258, i32* %v3_1125b, align 4
  %v0_1125e = load i32, i32* @ebp, align 4
  %v1_1125e = add i32 %v0_1125e, 16
  %v2_1125e = inttoptr i32 %v1_1125e to i32*
  %v3_1125e = load i32, i32* %v2_1125e, align 4
  %v2_11261 = add i32 %v0_1125e, -36
  %v3_11261 = inttoptr i32 %v2_11261 to i32*
  store i32 %v3_1125e, i32* %v3_11261, align 4
  %v0_11264 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1126a = load i32, i32* @ebp, align 4
  %v2_1126a = add i32 %v1_1126a, -12
  %v3_1126a = inttoptr i32 %v2_1126a to i32*
  store i32 %v0_11264, i32* %v3_1126a, align 4
  %v0_1126f = load i32, i32* @ebp, align 4
  %v1_1126f = add i32 %v0_1126f, -13
  %v2_1126f = inttoptr i32 %v1_1126f to i8*
  store i8 0, i8* %v2_1126f, align 1
  %v0_11273 = load i32, i32* @ebp, align 4
  %v1_11273 = add i32 %v0_11273, -36
  %v2_11273 = inttoptr i32 %v1_11273 to i32*
  %v3_11273 = load i32, i32* %v2_11273, align 4
  %v1_1127a = add i32 %v0_11273, -32
  %v2_1127a = inttoptr i32 %v1_1127a to i32*
  %v3_1127a = load i32, i32* %v2_1127a, align 4
  %v1_11281 = add i32 %v0_11273, -28
  %v2_11281 = inttoptr i32 %v1_11281 to i32*
  %v3_11281 = load i32, i32* %v2_11281, align 4
  %v3_11287 = call i32 @unknown_22e97(i32 %v3_11281, i32 %v3_1127a, i32 %v3_11273)
  store i32 %v3_11287, i32* @eax, align 4
  %v0_1128c = load i32, i32* @ebp, align 4
  %v1_1128c = add i32 %v0_1128c, -12
  %v2_1128c = inttoptr i32 %v1_1128c to i32*
  %v3_1128c = load i32, i32* %v2_1128c, align 4
  %v1_1128f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1128f = xor i32 %v1_1128f, %v3_1128c
  %v3_1128f = icmp eq i32 %v2_1128f, 0
  store i32 %v2_1128f, i32* @edx, align 4
  br i1 %v3_1128f, label %bb, label %dec_label_pc_11298

bb:                                               ; preds = %dec_label_pc_11255
  %v1_11296 = call i32 @function_1129d()
  br label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %bb, %dec_label_pc_11255
  %v2_11296 = phi i32 [ %v1_11296, %bb ], [ %v3_11287, %dec_label_pc_11255 ]
  ret i32 %v2_11296
}

define i32 @function_1129d() local_unnamed_addr {
dec_label_pc_1129d:
  %v0_1129e = load i32, i32* @eax, align 4
  ret i32 %v0_1129e
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5CTxInjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1129f:
  %v10_112ed110 = icmp eq i32 %arg2, 0
  %v1_112f1111 = icmp eq i1 %v10_112ed110, false
  %v5_112f4115 = icmp eq i1 %v1_112f1111, false
  %v1_112f6116 = icmp eq i1 %v5_112f4115, false
  br i1 %v1_112f6116, label %dec_label_pc_112cb, label %dec_label_pc_112f8

dec_label_pc_112cb:                               ; preds = %dec_label_pc_1129f, %dec_label_pc_112cb
  %storemerge118 = phi i32 [ %v4_112e9, %dec_label_pc_112cb ], [ %arg1, %dec_label_pc_1129f ]
  %stack_var_-36.0117 = phi i32 [ %v4_112e5, %dec_label_pc_112cb ], [ %arg2, %dec_label_pc_1129f ]
  %v1_112d1 = call i32 @unknown_213e3(i32 %storemerge118)
  %v2_112e0 = call i32 @unknown_22f66(i32 %v1_112d1, i32 %arg3)
  %v4_112e5 = add i32 %stack_var_-36.0117, -1
  %v4_112e9 = add i32 %storemerge118, 52
  %v10_112ed = icmp eq i32 %v4_112e5, 0
  %v1_112f1 = icmp eq i1 %v10_112ed, false
  %v5_112f4 = icmp eq i1 %v1_112f1, false
  %v1_112f6 = icmp eq i1 %v5_112f4, false
  br i1 %v1_112f6, label %dec_label_pc_112cb, label %dec_label_pc_112f8

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112cb, %dec_label_pc_1129f
  %v0_112f8 = call i32 @function_1132a()
  ret i32 %v0_112f8

; uselistorder directives
  uselistorder i32 %v4_112e5, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder label %dec_label_pc_112cb, { 1, 0 }
}

define i32 @function_112fb() local_unnamed_addr {
dec_label_pc_112fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_112fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_112fb
}

define i32 @function_11328(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11328:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1132a() local_unnamed_addr {
dec_label_pc_1132a:
  %v0_1132a = load i32, i32* @ebp, align 4
  %v1_1132a = add i32 %v0_1132a, -12
  %v2_1132a = inttoptr i32 %v1_1132a to i32*
  %v3_1132a = load i32, i32* %v2_1132a, align 4
  %v1_1132d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1132d = xor i32 %v1_1132d, %v3_1132a
  %v3_1132d = icmp eq i32 %v2_1132d, 0
  store i32 %v2_1132d, i32* @eax, align 4
  br i1 %v3_1132d, label %bb, label %dec_label_pc_11336

bb:                                               ; preds = %dec_label_pc_1132a
  %v1_11334 = call i32 @function_1133b()
  br label %dec_label_pc_11336

dec_label_pc_11336:                               ; preds = %bb, %dec_label_pc_1132a
  %v2_11334 = phi i32 [ %v1_11334, %bb ], [ %v2_1132d, %dec_label_pc_1132a ]
  ret i32 %v2_11334
}

define i32 @function_1133b() local_unnamed_addr {
dec_label_pc_1133b:
  %v0_11340 = load i32, i32* @eax, align 4
  ret i32 %v0_11340
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI5CTxInE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11342:
  ret i32 %arg1
}

define i32 @function_1134e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1134e:
  %v0_1134e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11354 = load i32, i32* @ebp, align 4
  %v2_11354 = add i32 %v1_11354, -12
  %v3_11354 = inttoptr i32 %v2_11354 to i32*
  store i32 %v0_1134e, i32* %v3_11354, align 4
  store i32 82595524, i32* @eax, align 4
  %v0_1135e = load i32, i32* @ebp, align 4
  %v1_1135e = add i32 %v0_1135e, -12
  %v2_1135e = inttoptr i32 %v1_1135e to i32*
  %v3_1135e = load i32, i32* %v2_1135e, align 4
  %v1_11361 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11361 = icmp eq i32 %v1_11361, %v3_1135e
  br i1 %v3_11361, label %bb, label %dec_label_pc_1136a

bb:                                               ; preds = %dec_label_pc_1134e
  %v1_11368 = call i32 @function_1136f()
  br label %dec_label_pc_1136a

dec_label_pc_1136a:                               ; preds = %bb, %dec_label_pc_1134e
  %v2_11368 = phi i32 [ %v1_11368, %bb ], [ 82595524, %dec_label_pc_1134e ]
  ret i32 %v2_11368
}

define i32 @function_1136f() local_unnamed_addr {
dec_label_pc_1136f:
  %v0_11370 = load i32, i32* @eax, align 4
  ret i32 %v0_11370
}

define i32 @_ZNSt10_Iter_baseIP6CTxOutLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11371:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11397

bb:                                               ; preds = %dec_label_pc_11371
  %v2_11395 = call i32 @function_1139c(i32 %arg1)
  br label %dec_label_pc_11397

dec_label_pc_11397:                               ; preds = %bb, %dec_label_pc_11371
  %v3_11395 = phi i32 [ %v2_11395, %bb ], [ %arg1, %dec_label_pc_11371 ]
  ret i32 %v3_11395
}

define i32 @function_1139c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1139c:
  %v0_1139d = load i32, i32* @eax, align 4
  ret i32 %v0_1139d
}

define i32 @_ZSt22__copy_move_backward_aILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1139e:
  ret i32 %arg3
}

define i32 @function_113ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_113ba:
  %v2_113ba = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_113ba = load i32, i32* @eax, align 4
  %v4_113ba = trunc i32 %v3_113ba to i8
  %v5_113ba = add i8 %v4_113ba, %v2_113ba
  %v21_113ba = inttoptr i32 %v3_113ba to i8*
  store i8 %v5_113ba, i8* %v21_113ba, align 1
  %v0_113bc = load i32, i32* @eax, align 4
  %v1_113bc = load i32, i32* @ebp, align 4
  %v2_113bc = add i32 %v1_113bc, -12
  %v3_113bc = inttoptr i32 %v2_113bc to i32*
  store i32 %v0_113bc, i32* %v3_113bc, align 4
  %v0_113c1 = load i32, i32* @ebp, align 4
  %v1_113c1 = add i32 %v0_113c1, -13
  %v2_113c1 = inttoptr i32 %v1_113c1 to i8*
  store i8 0, i8* %v2_113c1, align 1
  %v0_113c5 = load i32, i32* @ebp, align 4
  %v1_113c5 = add i32 %v0_113c5, -36
  %v2_113c5 = inttoptr i32 %v1_113c5 to i32*
  %v3_113c5 = load i32, i32* %v2_113c5, align 4
  %v1_113cc = add i32 %v0_113c5, -32
  %v2_113cc = inttoptr i32 %v1_113cc to i32*
  %v3_113cc = load i32, i32* %v2_113cc, align 4
  %v1_113d3 = add i32 %v0_113c5, -28
  %v2_113d3 = inttoptr i32 %v1_113d3 to i32*
  %v3_113d3 = load i32, i32* %v2_113d3, align 4
  %v3_113d9 = call i32 @unknown_230e0(i32 %v3_113d3, i32 %v3_113cc, i32 %v3_113c5)
  store i32 %v3_113d9, i32* @eax, align 4
  %v0_113de = load i32, i32* @ebp, align 4
  %v1_113de = add i32 %v0_113de, -12
  %v2_113de = inttoptr i32 %v1_113de to i32*
  %v3_113de = load i32, i32* %v2_113de, align 4
  %v1_113e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_113e1 = icmp eq i32 %v1_113e1, %v3_113de
  br i1 %v3_113e1, label %bb, label %dec_label_pc_113ea

bb:                                               ; preds = %dec_label_pc_113ba
  %v1_113e8 = call i32 @function_113ef()
  br label %dec_label_pc_113ea

dec_label_pc_113ea:                               ; preds = %bb, %dec_label_pc_113ba
  %v2_113e8 = phi i32 [ %v1_113e8, %bb ], [ %v3_113d9, %dec_label_pc_113ba ]
  ret i32 %v2_113e8
}

define i32 @function_113ef() local_unnamed_addr {
dec_label_pc_113ef:
  %v0_113f0 = load i32, i32* @eax, align 4
  ret i32 %v0_113f0
}

define i32 @_ZNSaI5CTxInEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_113f2:
  %v2_1141c = call i32 @unknown_231b0(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1142d

bb:                                               ; preds = %dec_label_pc_113f2
  %v1_1142b = call i32 @function_11432()
  br label %dec_label_pc_1142d

dec_label_pc_1142d:                               ; preds = %bb, %dec_label_pc_113f2
  %v2_1142b = phi i32 [ %v1_1142b, %bb ], [ 0, %dec_label_pc_113f2 ]
  ret i32 %v2_1142b
}

define i32 @function_11432() local_unnamed_addr {
dec_label_pc_11432:
  %v0_11433 = load i32, i32* @eax, align 4
  ret i32 %v0_11433
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11434:
  ret i32 %arg2
}

define i32 @function_11444(i32 %arg1) local_unnamed_addr {
dec_label_pc_11444:
  %v0_11444 = load i32, i32* @eax, align 4
  %v1_11444 = load i32, i32* @ebp, align 4
  %v2_11444 = add i32 %v1_11444, -32
  %v3_11444 = inttoptr i32 %v2_11444 to i32*
  store i32 %v0_11444, i32* %v3_11444, align 4
  %v0_11447 = load i32, i32* @ebp, align 4
  %v1_11447 = add i32 %v0_11447, 16
  %v2_11447 = inttoptr i32 %v1_11447 to i32*
  %v3_11447 = load i32, i32* %v2_11447, align 4
  %v2_1144a = add i32 %v0_11447, -36
  %v3_1144a = inttoptr i32 %v2_1144a to i32*
  store i32 %v3_11447, i32* %v3_1144a, align 4
  %v0_1144d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11453 = load i32, i32* @ebp, align 4
  %v2_11453 = add i32 %v1_11453, -12
  %v3_11453 = inttoptr i32 %v2_11453 to i32*
  store i32 %v0_1144d, i32* %v3_11453, align 4
  %v0_11458 = load i32, i32* @ebp, align 4
  %v1_11458 = add i32 %v0_11458, -36
  %v2_11458 = inttoptr i32 %v1_11458 to i32*
  %v3_11458 = load i32, i32* %v2_11458, align 4
  %v2_1145b = add i32 %v0_11458, -16
  %v3_1145b = inttoptr i32 %v2_1145b to i32*
  store i32 %v3_11458, i32* %v3_1145b, align 4
  %v0_1145e = call i32 @function_11493()
  ret i32 %v0_1145e
}

define i32 @function_11460() local_unnamed_addr {
dec_label_pc_11460:
  %v0_11460 = load i32, i32* @ebp, align 4
  %v1_11460 = add i32 %v0_11460, -28
  %v1_11466 = call i32 @unknown_1f99a(i32 %v1_11460)
  store i32 %v1_11466, i32* @ebx, align 4
  %v0_1146d = load i32, i32* @ebp, align 4
  %v1_1146d = add i32 %v0_1146d, -16
  %v2_1146d = inttoptr i32 %v1_1146d to i32*
  %v3_1146d = load i32, i32* %v2_1146d, align 4
  ret i32 %v3_1146d
}

define i32 @function_11471(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11471:
  %eax.global-to-local = alloca i32, align 4
  %v0_11471 = load i32, i32* @eax, align 4
  %v2_11471 = add i32 %v0_11471, 36
  %v16_11471 = and i32 %v2_11471, 255
  %v18_11471 = and i32 %v0_11471, -256
  %v19_11471 = or i32 %v16_11471, %v18_11471
  store i32 %v19_11471, i32* %eax.global-to-local, align 4
  %v0_11473 = call i32 @unknown_21578()
  store i32 %v0_11473, i32* %eax.global-to-local, align 4
  %v0_11478 = load i32, i32* @ebx, align 4
  %v2_1147f = call i32 @unknown_230fb(i32 %v0_11473, i32 %v0_11478)
  %v0_11484 = load i32, i32* @ebp, align 4
  %v1_11484 = add i32 %v0_11484, -28
  store i32 %v1_11484, i32* %eax.global-to-local, align 4
  %v1_1148a = call i32 @unknown_1f960(i32 %v1_11484)
  store i32 %v1_1148a, i32* %eax.global-to-local, align 4
  %v0_1148f = load i32, i32* @ebp, align 4
  %v1_1148f = add i32 %v0_1148f, -16
  %v2_1148f = inttoptr i32 %v1_1148f to i32*
  %v3_1148f = load i32, i32* %v2_1148f, align 4
  %v4_1148f = add i32 %v3_1148f, 52
  store i32 %v4_1148f, i32* %v2_1148f, align 4
  %v22_1148f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_1148f

; uselistorder directives
  uselistorder i32 %v0_11471, { 1, 0 }
}

define i32 @function_11493() local_unnamed_addr {
dec_label_pc_11493:
  %v0_11493 = load i32, i32* @ebp, align 4
  %v1_11493 = add i32 %v0_11493, -32
  %v1_1149a = add i32 %v0_11493, -28
  %v2_114a0 = call i32 @unknown_1f90b(i32 %v1_1149a, i32 %v1_11493)
  %v4_114a5 = trunc i32 %v2_114a0 to i8
  %v5_114a5 = icmp eq i8 %v4_114a5, 0
  %v1_114a7 = icmp eq i1 %v5_114a5, false
  br i1 %v1_114a7, label %bb, label %dec_label_pc_114a9

bb:                                               ; preds = %dec_label_pc_11493
  %v2_114a7 = call i32 @function_11460()
  br label %dec_label_pc_114a9

dec_label_pc_114a9:                               ; preds = %bb, %dec_label_pc_11493
  %v0_114a9 = load i32, i32* @ebp, align 4
  %v1_114a9 = add i32 %v0_114a9, -16
  %v2_114a9 = inttoptr i32 %v1_114a9 to i32*
  %v3_114a9 = load i32, i32* %v2_114a9, align 4
  store i32 %v3_114a9, i32* @eax, align 4
  %v1_114ac = add i32 %v0_114a9, -12
  %v2_114ac = inttoptr i32 %v1_114ac to i32*
  %v3_114ac = load i32, i32* %v2_114ac, align 4
  %v1_114af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_114af = icmp eq i32 %v1_114af, %v3_114ac
  br i1 %v3_114af, label %bb3, label %dec_label_pc_114b8

bb3:                                              ; preds = %dec_label_pc_114a9
  %v1_114b6 = call i32 @function_114ef()
  store i32 %v1_114b6, i32* @eax, align 4
  br label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %bb3, %dec_label_pc_114a9
  %v0_114b8 = call i32 @function_114ea()
  ret i32 %v0_114b8
}

define i32 @function_114bb() local_unnamed_addr {
dec_label_pc_114bb:
  %eax.global-to-local = alloca i32, align 4
  %v0_114bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_114bb
}

define i32 @function_114ea() local_unnamed_addr {
dec_label_pc_114ea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_114ef() local_unnamed_addr {
dec_label_pc_114ef:
  %v0_114f4 = load i32, i32* @eax, align 4
  ret i32 %v0_114f4
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP12CTransactionS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_114f5:
  ret i32 %arg3
}

define i32 @function_1150e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1150e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1150e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11513 = load i32, i32* @ebp, align 4
  %v2_11513 = add i32 %v1_11513, -12
  %v3_11513 = inttoptr i32 %v2_11513 to i32*
  store i32 %v0_1150e, i32* %v3_11513, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_11518 = load i32, i32* @ebp, align 4
  %v1_11518 = add i32 %v0_11518, -32
  %v2_11518 = inttoptr i32 %v1_11518 to i32*
  %v3_11518 = load i32, i32* %v2_11518, align 4
  store i32 %v3_11518, i32* @edx, align 4
  %v1_1151b = add i32 %v0_11518, -28
  %v2_1151b = inttoptr i32 %v1_1151b to i32*
  %v3_1151b = load i32, i32* %v2_1151b, align 4
  %v2_11520 = sub i32 %v3_11518, %v3_1151b
  %v2_11524 = sdiv i32 %v2_11520, 32
  store i32 %v2_11524, i32* %eax.global-to-local, align 4
  %v2_11527 = add i32 %v0_11518, -16
  %v3_11527 = inttoptr i32 %v2_11527 to i32*
  store i32 %v2_11524, i32* %v3_11527, align 4
  %v0_1152a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1152a

; uselistorder directives
  uselistorder i32 %v2_11524, { 1, 0 }
  uselistorder i32 32, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
}

define i32 @function_11547(i32 %arg1) local_unnamed_addr {
dec_label_pc_11547:
  %v0_11547 = load i32, i32* @edx, align 4
  %v1_11547 = trunc i32 %v0_11547 to i16
  %v2_11547 = call i32 @__asm_insd(i16 %v1_11547)
  %v3_11547 = load i32, i32* @edi, align 4
  %v4_11547 = inttoptr i32 %v3_11547 to i32*
  store i32 %v2_11547, i32* %v4_11547, align 4
  %v0_11548 = load i32, i32* @ebx, align 4
  %v1_11548 = add i32 %v0_11548, 251719805
  %v2_11548 = inttoptr i32 %v1_11548 to i32*
  %v3_11548 = load i32, i32* %v2_11548, align 4
  %v4_11548 = load i32, i32* @eax, align 4
  %v5_11548 = add i32 %v4_11548, %v3_11548
  %v6_11548 = urem i32 %v3_11548, 16
  %v7_11548 = urem i32 %v4_11548, 16
  %v8_11548 = add nuw nsw i32 %v7_11548, %v6_11548
  %v9_11548 = icmp ugt i32 %v8_11548, 15
  %v10_11548 = icmp ult i32 %v5_11548, %v3_11548
  %v15_11548 = icmp eq i32 %v5_11548, 0
  %v17_11548 = trunc i32 %v5_11548 to i8
  %v18_11548 = call i8 @llvm.ctpop.i8(i8 %v17_11548)
  %v19_11548 = urem i8 %v18_11548, 2
  %v20_11548 = icmp eq i8 %v19_11548, 0
  store i32 %v5_11548, i32* %v2_11548, align 4
  %v1_1154f = zext i1 %v10_11548 to i32
  %v12_1154f = select i1 %v20_11548, i32 4, i32 0
  %v14_1154f = select i1 %v9_11548, i32 16, i32 0
  %v16_1154f = select i1 %v15_11548, i32 64, i32 0
  %tmp = ashr i32 %v5_11548, 31
  %tmp1 = and i32 %tmp, 128
  %v11_1154f = or i32 %v1_1154f, %v16_1154f
  %v13_1154f = or i32 %v11_1154f, %tmp1
  %v15_1154f = or i32 %v13_1154f, %v14_1154f
  %v17_1154f = or i32 %v15_1154f, %v12_1154f
  %v20_1154f = or i32 %v17_1154f, 2
  %v21_1154f = load i32, i32* @eax, align 4
  %v22_1154f = shl i32 %v20_1154f, ptrtoint (i32* @global_var_8.883 to i32)
  %v23_1154f = and i32 %v21_1154f, -65281
  %v24_1154f = or i32 %v22_1154f, %v23_1154f
  ret i32 %v24_1154f

; uselistorder directives
  uselistorder i32 %v3_11548, { 2, 0, 1 }
  uselistorder i32 -65281, { 1, 2, 0 }
  uselistorder i32 128, { 0, 3, 2, 1 }
  uselistorder i32* @edi, { 1, 0, 2, 3 }
}

define i32 @function_1155a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1155a:
  %v0_1155b = load i32, i32* @edx, align 4
  %v1_1155b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1155b = icmp eq i32 %v1_1155b, %v0_1155b
  br i1 %v3_1155b, label %bb, label %dec_label_pc_1155a.dec_label_pc_11564_crit_edge

dec_label_pc_1155a.dec_label_pc_11564_crit_edge:  ; preds = %dec_label_pc_1155a
  %v2_11562.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11564

bb:                                               ; preds = %dec_label_pc_1155a
  %v1_11562 = call i32 @function_11569()
  br label %dec_label_pc_11564

dec_label_pc_11564:                               ; preds = %dec_label_pc_1155a.dec_label_pc_11564_crit_edge, %bb
  %v2_11562 = phi i32 [ %v2_11562.pre, %dec_label_pc_1155a.dec_label_pc_11564_crit_edge ], [ %v1_11562, %bb ]
  ret i32 %v2_11562

; uselistorder directives
  uselistorder label %dec_label_pc_11564, { 1, 0 }
}

define i32 @function_11569() local_unnamed_addr {
dec_label_pc_11569:
  %v0_1156a = load i32, i32* @eax, align 4
  ret i32 %v0_1156a
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1156b:
  ret i32 %arg2
}

define i32 @function_11598(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11598:
  %v0_11598 = load i32, i32* @eax, align 4
  %v1_11598 = load i1, i1* @cf, align 1
  %v2_11598 = zext i1 %v1_11598 to i32
  %v3_11598 = add i32 %v0_11598, 20
  %v4_11598 = add i32 %v3_11598, %v2_11598
  %v14_11598 = icmp eq i32 %v4_11598, 0
  store i32 %v4_11598, i32* @eax, align 4
  br i1 %v14_11598, label %bb, label %dec_label_pc_1159f

bb:                                               ; preds = %dec_label_pc_11598
  %v1_1159d = call i32 @function_115a4()
  br label %dec_label_pc_1159f

dec_label_pc_1159f:                               ; preds = %bb, %dec_label_pc_11598
  %v2_1159d = phi i32 [ %v1_1159d, %bb ], [ %v4_11598, %dec_label_pc_11598 ]
  ret i32 %v2_1159d
}

define i32 @function_115a4() local_unnamed_addr {
dec_label_pc_115a4:
  %v0_115a5 = load i32, i32* @eax, align 4
  ret i32 %v0_115a5
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_() local_unnamed_addr {
dec_label_pc_115a8:
  %eax.global-to-local = alloca i32, align 4
  %v5_115a8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_115a8
}

define i32 @function_115a9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_115a9:
  %stack_var_0 = alloca i32, align 4
  %v1_115a9 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_115a9, i32* @ebp, align 4
  %v1_115c5 = call i32 @unknown_23396(i32 %arg1)
  store i32 %v1_115c5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_115d6

bb:                                               ; preds = %dec_label_pc_115a9
  %v1_115d4 = call i32 @function_115db()
  br label %dec_label_pc_115d6

dec_label_pc_115d6:                               ; preds = %bb, %dec_label_pc_115a9
  %v2_115d4 = phi i32 [ %v1_115d4, %bb ], [ %v1_115c5, %dec_label_pc_115a9 ]
  ret i32 %v2_115d4
}

define i32 @function_115db() local_unnamed_addr {
dec_label_pc_115db:
  %v0_115dc = load i32, i32* @eax, align 4
  ret i32 %v0_115dc
}

define i32 @_ZSt13__copy_move_aILb0EPK5CTxInPS0_ET1_T0_S5_S4_() local_unnamed_addr {
dec_label_pc_115dd:
  %eax.global-to-local = alloca i32, align 4
  %v2_115de = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_115de
}

define i32 @function_115e2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_115e2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_115e2 = load i32, i32* @ecx, align 4
  %v0_115ea = load i32, i32* @ebp, align 4
  %v0_115eb = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_115eb = or i32 %v0_115eb, 137
  store i32 %v11_115eb, i32* %eax.global-to-local, align 4
  %v1_115ee = add i32 %v4_115e2, 255
  %v1_115f0 = add i32 %v0_115ea, 3
  store i32 %v1_115f0, i32* @ebp, align 4
  %v1_115f1 = add i32 %v4_115e2, -1587159996
  %v2_115f1 = inttoptr i32 %v1_115f1 to i8*
  %v3_115f1 = load i8, i8* %v2_115f1, align 1
  %v5_115f1 = trunc i32 %v1_115ee to i8
  %v8_115f1 = add i8 %v3_115f1, %v5_115f1
  %v28_115f1 = icmp ult i8 %v8_115f1, %v3_115f1
  store i1 %v28_115f1, i1* %cf.global-to-local, align 1
  store i8 %v8_115f1, i8* %v2_115f1, align 1
  %v0_115f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_115f7 = trunc i32 %v0_115f7 to i8
  %v2_115f7 = load i1, i1* %cf.global-to-local, align 1
  %v3_115f7 = zext i1 %v2_115f7 to i8
  %v4_115f7 = add i8 %v3_115f7, %v1_115f7
  %v19_115f7 = icmp ule i8 %v4_115f7, %v1_115f7
  %v21_115f7 = icmp eq i1 %v2_115f7, %v19_115f7
  store i1 %v21_115f7, i1* %cf.global-to-local, align 1
  %v22_115f7 = zext i8 %v4_115f7 to i32
  %v24_115f7 = and i32 %v0_115f7, -256
  %v25_115f7 = or i32 %v22_115f7, %v24_115f7
  store i32 %v25_115f7, i32* %eax.global-to-local, align 4
  %v1_115f9 = inttoptr i32 %v25_115f7 to i8*
  %v2_115f9 = load i8, i8* %v1_115f9, align 1
  %v5_115f9 = add i8 %v2_115f9, %v4_115f7
  store i8 %v5_115f9, i8* %v1_115f9, align 1
  %v0_115fb = load i32, i32* %eax.global-to-local, align 4
  %v1_115fb = load i32, i32* @ebp, align 4
  %v2_115fb = add i32 %v1_115fb, -12
  %v3_115fb = inttoptr i32 %v2_115fb to i32*
  store i32 %v0_115fb, i32* %v3_115fb, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_11600 = load i32, i32* @ebp, align 4
  %v1_11600 = add i32 %v0_11600, -13
  %v2_11600 = inttoptr i32 %v1_11600 to i8*
  store i8 0, i8* %v2_11600, align 1
  %v0_11604 = load i32, i32* @ebp, align 4
  %v1_11604 = add i32 %v0_11604, -36
  %v2_11604 = inttoptr i32 %v1_11604 to i32*
  %v3_11604 = load i32, i32* %v2_11604, align 4
  store i32 %v3_11604, i32* %eax.global-to-local, align 4
  %v1_1160b = add i32 %v0_11604, -32
  %v2_1160b = inttoptr i32 %v1_1160b to i32*
  %v3_1160b = load i32, i32* %v2_1160b, align 4
  store i32 %v3_1160b, i32* %eax.global-to-local, align 4
  %v1_11612 = add i32 %v0_11604, -28
  %v2_11612 = inttoptr i32 %v1_11612 to i32*
  %v3_11612 = load i32, i32* %v2_11612, align 4
  store i32 %v3_11612, i32* %eax.global-to-local, align 4
  %v3_11618 = call i32 @unknown_23402(i32 %v3_11612, i32 %v3_1160b, i32 %v3_11604)
  store i32 %v3_11618, i32* @eax, align 4
  %v0_1161d = load i32, i32* @ebp, align 4
  %v1_1161d = add i32 %v0_1161d, -12
  %v2_1161d = inttoptr i32 %v1_1161d to i32*
  %v3_1161d = load i32, i32* %v2_1161d, align 4
  %v1_11620 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_11620 = icmp eq i32 %v1_11620, %v3_1161d
  br i1 %v3_11620, label %bb, label %dec_label_pc_11629

bb:                                               ; preds = %dec_label_pc_115e2
  %v1_11627 = call i32 @function_1162e()
  store i32 %v1_11627, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_11629

dec_label_pc_11629:                               ; preds = %bb, %dec_label_pc_115e2
  %v3_11627 = phi i32 [ %v1_11627, %bb ], [ %v3_11618, %dec_label_pc_115e2 ]
  ret i32 %v3_11627

; uselistorder directives
  uselistorder i8 %v4_115f7, { 0, 2, 1 }
  uselistorder i8 %v1_115f7, { 1, 0 }
  uselistorder i8 %v3_115f1, { 1, 0 }
  uselistorder i32 3, { 0, 1, 2, 3, 4, 6, 5 }
}

define i32 @function_1162e() local_unnamed_addr {
dec_label_pc_1162e:
  %v0_1162f = load i32, i32* @eax, align 4
  ret i32 %v0_1162f
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS4_SaIS4_EEEEEEvT_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11630:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_11678 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1167c = ptrtoint i32* %stack_var_-32 to i32
  %v2_11682106 = call i32 @unknown_234d1(i32 %v2_1167c, i32 %v4_11678)
  %v4_11687107 = trunc i32 %v2_11682106 to i8
  %v5_11687108 = icmp eq i8 %v4_11687107, 0
  %v1_11689110 = icmp eq i1 %v5_11687108, false
  br i1 %v1_11689110, label %dec_label_pc_1164f, label %dec_label_pc_1168b

dec_label_pc_1164f:                               ; preds = %dec_label_pc_11630, %dec_label_pc_1164f
  %v1_11655 = call i32 @unknown_23560(i32 %v2_1167c)
  %v1_1165d = call i32 @unknown_21774(i32 %v1_11655)
  %v1_11665 = call i32 @unknown_217a1(i32 %v1_1165d)
  %v1_11670 = call i32 @unknown_23526(i32 %v2_1167c)
  %v2_11682 = call i32 @unknown_234d1(i32 %v2_1167c, i32 %v4_11678)
  %v4_11687 = trunc i32 %v2_11682 to i8
  %v5_11687 = icmp eq i8 %v4_11687, 0
  %v1_11689 = icmp eq i1 %v5_11687, false
  br i1 %v1_11689, label %dec_label_pc_1164f, label %dec_label_pc_1168b

dec_label_pc_1168b:                               ; preds = %dec_label_pc_1164f, %dec_label_pc_11630
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11697

bb:                                               ; preds = %dec_label_pc_1168b
  %v1_11695 = call i32 @function_1169c()
  br label %dec_label_pc_11697

dec_label_pc_11697:                               ; preds = %bb, %dec_label_pc_1168b
  %v2_11695 = phi i32 [ %v1_11695, %bb ], [ 0, %dec_label_pc_1168b ]
  ret i32 %v2_11695

; uselistorder directives
  uselistorder i32 %v2_1167c, { 3, 1, 2, 0 }
  uselistorder i32 %v4_11678, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_234d1, { 1, 0 }
  uselistorder label %dec_label_pc_1164f, { 1, 0 }
}

define i32 @function_1169c() local_unnamed_addr {
dec_label_pc_1169c:
  %v0_1169d = load i32, i32* @eax, align 4
  ret i32 %v0_1169d
}

define i32 @_ZSt13__copy_move_aILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1169e:
  %v3_116d9 = call i32 @unknown_235fd(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_116d9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_116ea

bb:                                               ; preds = %dec_label_pc_1169e
  %v1_116e8 = call i32 @function_116ef()
  br label %dec_label_pc_116ea

dec_label_pc_116ea:                               ; preds = %bb, %dec_label_pc_1169e
  %v2_116e8 = phi i32 [ %v1_116e8, %bb ], [ %v3_116d9, %dec_label_pc_1169e ]
  ret i32 %v2_116e8
}

define i32 @function_116ef() local_unnamed_addr {
dec_label_pc_116ef:
  %v0_116f0 = load i32, i32* @eax, align 4
  ret i32 %v0_116f0
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5CTxInS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_116f1:
  ret i32 %arg2
}

define i32 @function_11704(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11704:
  %v0_11704 = load i32, i32* @ebp, align 4
  %v1_11704 = add i32 %v0_11704, 16
  %v2_11704 = inttoptr i32 %v1_11704 to i32*
  %v3_11704 = load i32, i32* %v2_11704, align 4
  %v2_11707 = add i32 %v0_11704, -36
  %v3_11707 = inttoptr i32 %v2_11707 to i32*
  store i32 %v3_11704, i32* %v3_11707, align 4
  %v0_1170a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11710 = load i32, i32* @ebp, align 4
  %v2_11710 = add i32 %v1_11710, -12
  %v3_11710 = inttoptr i32 %v2_11710 to i32*
  store i32 %v0_1170a, i32* %v3_11710, align 4
  %v0_11715 = load i32, i32* @ebp, align 4
  %v1_11715 = add i32 %v0_11715, -36
  %v2_11715 = inttoptr i32 %v1_11715 to i32*
  %v3_11715 = load i32, i32* %v2_11715, align 4
  %v2_11718 = add i32 %v0_11715, -16
  %v3_11718 = inttoptr i32 %v2_11718 to i32*
  store i32 %v3_11715, i32* %v3_11718, align 4
  br label %dec_label_pc_1173f

dec_label_pc_1171d:                               ; preds = %dec_label_pc_1173f
  %v1_11723 = call i32 @unknown_21835(i32 %v3_1171d)
  %v0_11728 = load i32, i32* @ebp, align 4
  %v1_11728 = add i32 %v0_11728, -28
  %v2_11728 = inttoptr i32 %v1_11728 to i32*
  %v3_11728 = load i32, i32* %v2_11728, align 4
  %v2_11732 = call i32 @unknown_233b8(i32 %v1_11723, i32 %v3_11728)
  %v0_11737 = load i32, i32* @ebp, align 4
  %v1_11737 = add i32 %v0_11737, -28
  %v2_11737 = inttoptr i32 %v1_11737 to i32*
  %v3_11737 = load i32, i32* %v2_11737, align 4
  %v4_11737 = add i32 %v3_11737, 52
  store i32 %v4_11737, i32* %v2_11737, align 4
  %v0_1173b = load i32, i32* @ebp, align 4
  %v1_1173b = add i32 %v0_1173b, -16
  %v2_1173b = inttoptr i32 %v1_1173b to i32*
  %v3_1173b = load i32, i32* %v2_1173b, align 4
  %v4_1173b = add i32 %v3_1173b, 52
  store i32 %v4_1173b, i32* %v2_1173b, align 4
  br label %dec_label_pc_1173f

dec_label_pc_1173f:                               ; preds = %dec_label_pc_1171d, %dec_label_pc_11704
  %v0_1173f = load i32, i32* @ebp, align 4
  %v1_1173f = add i32 %v0_1173f, -28
  %v2_1173f = inttoptr i32 %v1_1173f to i32*
  %v3_1173f = load i32, i32* %v2_1173f, align 4
  %v2_11742 = add i32 %v0_1173f, -32
  %v3_11742 = inttoptr i32 %v2_11742 to i32*
  %v4_11742 = load i32, i32* %v3_11742, align 4
  %v15_11742 = icmp eq i32 %v3_1173f, %v4_11742
  %v1_11745 = icmp eq i1 %v15_11742, false
  %v5_11748 = icmp eq i1 %v1_11745, false
  %v1_1174a = icmp eq i1 %v5_11748, false
  %v1_1171d = add i32 %v0_1173f, -16
  %v2_1171d = inttoptr i32 %v1_1171d to i32*
  %v3_1171d = load i32, i32* %v2_1171d, align 4
  store i32 %v3_1171d, i32* @eax, align 4
  br i1 %v1_1174a, label %dec_label_pc_1171d, label %dec_label_pc_1174c

dec_label_pc_1174c:                               ; preds = %dec_label_pc_1173f
  %v1_1174f = add i32 %v0_1173f, -12
  %v2_1174f = inttoptr i32 %v1_1174f to i32*
  %v3_1174f = load i32, i32* %v2_1174f, align 4
  %v1_11752 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11752 = icmp eq i32 %v1_11752, %v3_1174f
  br i1 %v3_11752, label %bb, label %dec_label_pc_1175b

bb:                                               ; preds = %dec_label_pc_1174c
  %v1_11759 = call i32 @function_11792()
  store i32 %v1_11759, i32* @eax, align 4
  br label %dec_label_pc_1175b

dec_label_pc_1175b:                               ; preds = %bb, %dec_label_pc_1174c
  %v0_1175b = call i32 @function_1178d()
  ret i32 %v0_1175b

; uselistorder directives
  uselistorder i32 %v3_1171d, { 1, 0 }
  uselistorder i32 16, { 11, 0, 1, 2, 12, 13, 4, 5, 19, 17, 6, 7, 8, 9, 10, 20, 14, 15, 16, 23, 3, 18, 21, 22, 24, 25, 26, 27, 28 }
}

define i32 @function_1175e() local_unnamed_addr {
dec_label_pc_1175e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1175e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1175e
}

define i32 @function_1178d() local_unnamed_addr {
dec_label_pc_1178d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11792() local_unnamed_addr {
dec_label_pc_11792:
  %v0_11797 = load i32, i32* @eax, align 4
  ret i32 %v0_11797
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11798:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_117cc

bb:                                               ; preds = %dec_label_pc_11798
  %v3_117ca = call i32 @function_117d1(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_117cc

dec_label_pc_117cc:                               ; preds = %bb, %dec_label_pc_11798
  %v4_117ca = phi i32 [ %v3_117ca, %bb ], [ %tmp102, %dec_label_pc_11798 ]
  ret i32 %v4_117ca
}

define i32 @function_117d1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117d1:
  %v0_117d2 = load i32, i32* @eax, align 4
  ret i32 %v0_117d2
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_117d5:
  %v1_117f2 = call i32 @unknown_237b0(i32 %arg1)
  store i32 %v1_117f2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11803

bb:                                               ; preds = %dec_label_pc_117d5
  %v1_11801 = call i32 @function_11808()
  br label %dec_label_pc_11803

dec_label_pc_11803:                               ; preds = %bb, %dec_label_pc_117d5
  %v2_11801 = phi i32 [ %v1_11801, %bb ], [ %v1_117f2, %dec_label_pc_117d5 ]
  ret i32 %v2_11801
}

define i32 @function_11808() local_unnamed_addr {
dec_label_pc_11808:
  %v0_11809 = load i32, i32* @eax, align 4
  ret i32 %v0_11809
}

define i32 @_ZSt13__copy_move_aILb0EPK6CTxOutPS0_ET1_T0_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1180a:
  %v3_11845 = call i32 @unknown_2381c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_11845, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11856

bb:                                               ; preds = %dec_label_pc_1180a
  %v1_11854 = call i32 @function_1185b()
  br label %dec_label_pc_11856

dec_label_pc_11856:                               ; preds = %bb, %dec_label_pc_1180a
  %v2_11854 = phi i32 [ %v1_11854, %bb ], [ %v3_11845, %dec_label_pc_1180a ]
  ret i32 %v2_11854
}

define i32 @function_1185b() local_unnamed_addr {
dec_label_pc_1185b:
  %v0_1185c = load i32, i32* @eax, align 4
  ret i32 %v0_1185c
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS4_SaIS4_EEEEEEvT_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1185d:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_118a5 = ptrtoint i32* %stack_var_-36 to i32
  %v2_118a9 = ptrtoint i32* %stack_var_-32 to i32
  %v2_118af106 = call i32 @unknown_238eb(i32 %v2_118a9, i32 %v4_118a5)
  %v4_118b4107 = trunc i32 %v2_118af106 to i8
  %v5_118b4108 = icmp eq i8 %v4_118b4107, 0
  %v1_118b6110 = icmp eq i1 %v5_118b4108, false
  br i1 %v1_118b6110, label %dec_label_pc_1187c, label %dec_label_pc_118b8

dec_label_pc_1187c:                               ; preds = %dec_label_pc_1185d, %dec_label_pc_1187c
  %v1_11882 = call i32 @unknown_1aea9(i32 %v2_118a9)
  %v1_1188a = call i32 @unknown_21a03(i32 %v1_11882)
  %v1_11892 = call i32 @unknown_21a30(i32 %v1_1188a)
  %v1_1189d = call i32 @unknown_2393f(i32 %v2_118a9)
  %v2_118af = call i32 @unknown_238eb(i32 %v2_118a9, i32 %v4_118a5)
  %v4_118b4 = trunc i32 %v2_118af to i8
  %v5_118b4 = icmp eq i8 %v4_118b4, 0
  %v1_118b6 = icmp eq i1 %v5_118b4, false
  br i1 %v1_118b6, label %dec_label_pc_1187c, label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %dec_label_pc_1187c, %dec_label_pc_1185d
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_118c4

bb:                                               ; preds = %dec_label_pc_118b8
  %v1_118c2 = call i32 @function_118c9()
  br label %dec_label_pc_118c4

dec_label_pc_118c4:                               ; preds = %bb, %dec_label_pc_118b8
  %v2_118c2 = phi i32 [ %v1_118c2, %bb ], [ 0, %dec_label_pc_118b8 ]
  ret i32 %v2_118c2

; uselistorder directives
  uselistorder i32 %v2_118a9, { 3, 1, 2, 0 }
  uselistorder i32 %v4_118a5, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_238eb, { 1, 0 }
  uselistorder label %dec_label_pc_1187c, { 1, 0 }
}

define i32 @function_118c9() local_unnamed_addr {
dec_label_pc_118c9:
  %v0_118ca = load i32, i32* @eax, align 4
  ret i32 %v0_118ca
}

define i32 @_ZSt13__copy_move_aILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_118cb:
  %v3_11906 = call i32 @unknown_239e7(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_11906, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11917

bb:                                               ; preds = %dec_label_pc_118cb
  %v1_11915 = call i32 @function_1191c()
  br label %dec_label_pc_11917

dec_label_pc_11917:                               ; preds = %bb, %dec_label_pc_118cb
  %v2_11915 = phi i32 [ %v1_11915, %bb ], [ %v3_11906, %dec_label_pc_118cb ]
  ret i32 %v2_11915
}

define i32 @function_1191c() local_unnamed_addr {
dec_label_pc_1191c:
  %v0_1191d = load i32, i32* @eax, align 4
  ret i32 %v0_1191d
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6CTxOutS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1191e:
  ret i32 %arg3
}

define i32 @function_11948(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11948:
  br label %dec_label_pc_1196c

dec_label_pc_1194a:                               ; preds = %dec_label_pc_1196c
  %v1_11950 = call i32 @unknown_21ac4(i32 %v3_1194a)
  %v0_11955 = load i32, i32* @ebp, align 4
  %v1_11955 = add i32 %v0_11955, -28
  %v2_11955 = inttoptr i32 %v1_11955 to i32*
  %v3_11955 = load i32, i32* %v2_11955, align 4
  %v2_1195f = call i32 @unknown_21b85(i32 %v1_11950, i32 %v3_11955)
  %v0_11964 = load i32, i32* @ebp, align 4
  %v1_11964 = add i32 %v0_11964, -28
  %v2_11964 = inttoptr i32 %v1_11964 to i32*
  %v3_11964 = load i32, i32* %v2_11964, align 4
  %v4_11964 = add i32 %v3_11964, 20
  store i32 %v4_11964, i32* %v2_11964, align 4
  %v0_11968 = load i32, i32* @ebp, align 4
  %v1_11968 = add i32 %v0_11968, -16
  %v2_11968 = inttoptr i32 %v1_11968 to i32*
  %v3_11968 = load i32, i32* %v2_11968, align 4
  %v4_11968 = add i32 %v3_11968, 20
  store i32 %v4_11968, i32* %v2_11968, align 4
  br label %dec_label_pc_1196c

dec_label_pc_1196c:                               ; preds = %dec_label_pc_1194a, %dec_label_pc_11948
  %v0_1196c = load i32, i32* @ebp, align 4
  %v1_1196c = add i32 %v0_1196c, -28
  %v2_1196c = inttoptr i32 %v1_1196c to i32*
  %v3_1196c = load i32, i32* %v2_1196c, align 4
  %v2_1196f = add i32 %v0_1196c, -32
  %v3_1196f = inttoptr i32 %v2_1196f to i32*
  %v4_1196f = load i32, i32* %v3_1196f, align 4
  %v15_1196f = icmp eq i32 %v3_1196c, %v4_1196f
  %v1_11972 = icmp eq i1 %v15_1196f, false
  %v5_11975 = icmp eq i1 %v1_11972, false
  %v1_11977 = icmp eq i1 %v5_11975, false
  %v1_1194a = add i32 %v0_1196c, -16
  %v2_1194a = inttoptr i32 %v1_1194a to i32*
  %v3_1194a = load i32, i32* %v2_1194a, align 4
  store i32 %v3_1194a, i32* @eax, align 4
  br i1 %v1_11977, label %dec_label_pc_1194a, label %dec_label_pc_11979

dec_label_pc_11979:                               ; preds = %dec_label_pc_1196c
  %v1_1197c = add i32 %v0_1196c, -12
  %v2_1197c = inttoptr i32 %v1_1197c to i32*
  %v3_1197c = load i32, i32* %v2_1197c, align 4
  %v1_1197f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1197f = icmp eq i32 %v1_1197f, %v3_1197c
  br i1 %v3_1197f, label %bb, label %dec_label_pc_11988

bb:                                               ; preds = %dec_label_pc_11979
  %v1_11986 = call i32 @function_119bf()
  store i32 %v1_11986, i32* @eax, align 4
  br label %dec_label_pc_11988

dec_label_pc_11988:                               ; preds = %bb, %dec_label_pc_11979
  %v0_11988 = call i32 @function_119ba()
  ret i32 %v0_11988

; uselistorder directives
  uselistorder i32 %v3_1194a, { 1, 0 }
}

define i32 @function_1198b() local_unnamed_addr {
dec_label_pc_1198b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1198b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1198b
}

define i32 @function_119ba() local_unnamed_addr {
dec_label_pc_119ba:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_119bf() local_unnamed_addr {
dec_label_pc_119bf:
  %v0_119c4 = load i32, i32* @eax, align 4
  ret i32 %v0_119c4
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP12CTransactionS3_EET0_T_S5_S4_() local_unnamed_addr {
dec_label_pc_119c5:
  %eax.global-to-local = alloca i32, align 4
  %v5_119c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_119c8
}

define i32 @function_119ca(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_119ca:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_119cb = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_119cb = xor i32 %v0_119cb, 139
  store i32 %v11_119cb, i32* %eax.global-to-local, align 4
  %v0_119cd = load i32, i32* @ebp, align 4
  %v1_119cd = add i32 %v0_119cd, 1
  store i32 %v1_119cd, i32* %ebp.global-to-local, align 4
  %v0_119ce = load i32, i32* @ecx, align 4
  %v1_119ce = add i32 %v0_119ce, 1166795845
  %v2_119ce = inttoptr i32 %v1_119ce to i8*
  %v3_119ce = load i8, i8* %v2_119ce, align 1
  %v5_119ce = trunc i32 %v0_119ce to i8
  %v6_119ce = or i8 %v3_119ce, %v5_119ce
  store i8 %v6_119ce, i8* %v2_119ce, align 1
  %v0_119d4 = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_119d4 = or i32 %v0_119d4, 137
  store i32 %v11_119d4, i32* %eax.global-to-local, align 4
  %v0_119d6 = load i32, i32* %ebp.global-to-local, align 4
  %v0_119d7 = load i32, i32* @ecx, align 4
  %v1_119d7 = add i32 %v0_119d7, 255
  %v1_119d9 = add i32 %v0_119d6, 2
  store i32 %v1_119d9, i32* @ebp, align 4
  %v1_119da = add i32 %v0_119d7, -1587159996
  %v2_119da = inttoptr i32 %v1_119da to i8*
  %v3_119da = load i8, i8* %v2_119da, align 1
  %v5_119da = trunc i32 %v1_119d7 to i8
  %v8_119da = add i8 %v3_119da, %v5_119da
  %v28_119da = icmp ult i8 %v8_119da, %v3_119da
  store i1 %v28_119da, i1* %cf.global-to-local, align 1
  store i8 %v8_119da, i8* %v2_119da, align 1
  %v0_119e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_119e0 = trunc i32 %v0_119e0 to i8
  %v2_119e0 = load i1, i1* %cf.global-to-local, align 1
  %v3_119e0 = zext i1 %v2_119e0 to i8
  %v4_119e0 = add i8 %v3_119e0, %v1_119e0
  %v19_119e0 = icmp ule i8 %v4_119e0, %v1_119e0
  %v21_119e0 = icmp eq i1 %v2_119e0, %v19_119e0
  store i1 %v21_119e0, i1* %cf.global-to-local, align 1
  %v22_119e0 = zext i8 %v4_119e0 to i32
  %v24_119e0 = and i32 %v0_119e0, -256
  %v25_119e0 = or i32 %v22_119e0, %v24_119e0
  store i32 %v25_119e0, i32* %eax.global-to-local, align 4
  %v1_119e2 = inttoptr i32 %v25_119e0 to i8*
  %v2_119e2 = load i8, i8* %v1_119e2, align 1
  %v5_119e2 = add i8 %v2_119e2, %v4_119e0
  store i8 %v5_119e2, i8* %v1_119e2, align 1
  %v0_119e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_119e4 = load i32, i32* @ebp, align 4
  %v2_119e4 = add i32 %v1_119e4, -12
  %v3_119e4 = inttoptr i32 %v2_119e4 to i32*
  store i32 %v0_119e4, i32* %v3_119e4, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_119e9 = load i32, i32* @ebp, align 4
  %v1_119e9 = add i32 %v0_119e9, -36
  %v2_119e9 = inttoptr i32 %v1_119e9 to i32*
  %v3_119e9 = load i32, i32* %v2_119e9, align 4
  store i32 %v3_119e9, i32* %eax.global-to-local, align 4
  %v2_119ec = add i32 %v0_119e9, -16
  %v3_119ec = inttoptr i32 %v2_119ec to i32*
  store i32 %v3_119e9, i32* %v3_119ec, align 4
  br label %dec_label_pc_11a13

dec_label_pc_119f1:                               ; preds = %dec_label_pc_11a13
  %v1_119f7 = call i32 @unknown_21d73(i32 %v3_119f1)
  store i32 %v1_119f7, i32* %eax.global-to-local, align 4
  %v0_119fc = load i32, i32* @ebp, align 4
  %v1_119fc = add i32 %v0_119fc, -28
  %v2_119fc = inttoptr i32 %v1_119fc to i32*
  %v3_119fc = load i32, i32* %v2_119fc, align 4
  %v2_11a06 = call i32 @unknown_23b5d(i32 %v1_119f7, i32 %v3_119fc)
  store i32 %v2_11a06, i32* %eax.global-to-local, align 4
  %v0_11a0b = load i32, i32* @ebp, align 4
  %v1_11a0b = add i32 %v0_11a0b, -28
  %v2_11a0b = inttoptr i32 %v1_11a0b to i32*
  %v3_11a0b = load i32, i32* %v2_11a0b, align 4
  %v4_11a0b = add i32 %v3_11a0b, ptrtoint (i32* @mainParams to i32)
  store i32 %v4_11a0b, i32* %v2_11a0b, align 4
  %v0_11a0f = load i32, i32* @ebp, align 4
  %v1_11a0f = add i32 %v0_11a0f, -16
  %v2_11a0f = inttoptr i32 %v1_11a0f to i32*
  %v3_11a0f = load i32, i32* %v2_11a0f, align 4
  %v4_11a0f = add i32 %v3_11a0f, ptrtoint (i32* @mainParams to i32)
  %v7_11a0f = icmp ult i32 %v4_11a0f, %v3_11a0f
  store i1 %v7_11a0f, i1* %cf.global-to-local, align 1
  store i32 %v4_11a0f, i32* %v2_11a0f, align 4
  br label %dec_label_pc_11a13

dec_label_pc_11a13:                               ; preds = %dec_label_pc_119f1, %dec_label_pc_119ca
  %v0_11a13 = load i32, i32* @ebp, align 4
  %v1_11a13 = add i32 %v0_11a13, -28
  %v2_11a13 = inttoptr i32 %v1_11a13 to i32*
  %v3_11a13 = load i32, i32* %v2_11a13, align 4
  store i32 %v3_11a13, i32* %eax.global-to-local, align 4
  %v2_11a16 = add i32 %v0_11a13, -32
  %v3_11a16 = inttoptr i32 %v2_11a16 to i32*
  %v4_11a16 = load i32, i32* %v3_11a16, align 4
  %v15_11a16 = icmp eq i32 %v3_11a13, %v4_11a16
  %v1_11a19 = icmp eq i1 %v15_11a16, false
  %v2_11a19 = zext i1 %v1_11a19 to i32
  %v4_11a19 = and i32 %v3_11a13, -256
  %v5_11a19 = or i32 %v2_11a19, %v4_11a19
  store i32 %v5_11a19, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_11a1c = icmp eq i1 %v1_11a19, false
  %v1_11a1e = icmp eq i1 %v5_11a1c, false
  %v1_119f1 = add i32 %v0_11a13, -16
  %v2_119f1 = inttoptr i32 %v1_119f1 to i32*
  %v3_119f1 = load i32, i32* %v2_119f1, align 4
  store i32 %v3_119f1, i32* @eax, align 4
  br i1 %v1_11a1e, label %dec_label_pc_119f1, label %dec_label_pc_11a20

dec_label_pc_11a20:                               ; preds = %dec_label_pc_11a13
  %v1_11a23 = add i32 %v0_11a13, -12
  %v2_11a23 = inttoptr i32 %v1_11a23 to i32*
  %v3_11a23 = load i32, i32* %v2_11a23, align 4
  %v1_11a26 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_11a26 = icmp eq i32 %v1_11a26, %v3_11a23
  br i1 %v3_11a26, label %bb, label %dec_label_pc_11a2f

bb:                                               ; preds = %dec_label_pc_11a20
  %v1_11a2d = call i32 @function_11a66()
  store i32 %v1_11a2d, i32* @eax, align 4
  br label %dec_label_pc_11a2f

dec_label_pc_11a2f:                               ; preds = %bb, %dec_label_pc_11a20
  %v0_11a2f = call i32 @function_11a61()
  store i32 %v0_11a2f, i32* %eax.global-to-local, align 4
  ret i32 %v0_11a2f

; uselistorder directives
  uselistorder i32 %v3_119f1, { 1, 0 }
  uselistorder i32 %v3_11a13, { 1, 0, 2 }
  uselistorder i8 %v4_119e0, { 0, 2, 1 }
  uselistorder i8 %v1_119e0, { 1, 0 }
  uselistorder i8 %v3_119da, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 1166795845, { 0, 6, 5, 8, 2, 7, 4, 1, 3 }
}

define i32 @function_11a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11a32() local_unnamed_addr {
dec_label_pc_11a32:
  %eax.global-to-local = alloca i32, align 4
  %v0_11a32 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11a32
}

define i32 @function_11a61() local_unnamed_addr {
dec_label_pc_11a61:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11a66() local_unnamed_addr {
dec_label_pc_11a66:
  %v0_11a6b = load i32, i32* @eax, align 4
  ret i32 %v0_11a6b
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP12CDNSSeedDataS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11a6c:
  %v2_11a97 = sub i32 %arg2, %arg1
  %v2_11a9b = ashr i32 %v2_11a97, ptrtoint (i64* @global_var_3.894 to i32)
  %v3_11a9b = icmp eq i32 %v2_11a9b, 0
  %v4_11a9b = icmp slt i32 %v2_11a9b, 0
  %v3_11ac5115 = icmp eq i1 %v4_11a9b, false
  %v4_11ac5116 = icmp eq i1 %v3_11a9b, false
  %v5_11ac5117 = icmp eq i1 %v3_11ac5115, %v4_11ac5116
  %v5_11ac8121 = icmp eq i1 %v5_11ac5117, false
  %v1_11aca122 = icmp eq i1 %v5_11ac8121, false
  br i1 %v1_11aca122, label %dec_label_pc_11aa3, label %dec_label_pc_11acc

dec_label_pc_11aa3:                               ; preds = %dec_label_pc_11a6c, %dec_label_pc_11aa3
  %storemerge.in125 = phi i32 [ %v5_11abd, %dec_label_pc_11aa3 ], [ %v2_11a9b, %dec_label_pc_11a6c ]
  %stack_var_-40.0124 = phi i32 [ %v4_11aa7, %dec_label_pc_11aa3 ], [ %arg3, %dec_label_pc_11a6c ]
  %stack_var_-36.0123 = phi i32 [ %v4_11aa3, %dec_label_pc_11aa3 ], [ %arg2, %dec_label_pc_11a6c ]
  %v4_11aa3 = sub i32 %stack_var_-36.0123, ptrtoint (i32* @global_var_8.883 to i32)
  %v4_11aa7 = sub i32 %stack_var_-40.0124, ptrtoint (i32* @global_var_8.883 to i32)
  %v2_11ab8 = call i32 @unknown_1c182(i32 %v4_11aa7, i32 %v4_11aa3)
  %v5_11abd = add i32 %storemerge.in125, -1
  %v14_11abd = icmp eq i32 %v5_11abd, 0
  %v15_11abd = icmp slt i32 %v5_11abd, 0
  %v3_11ac5 = icmp eq i1 %v15_11abd, false
  %v4_11ac5 = icmp eq i1 %v14_11abd, false
  %v5_11ac5 = icmp eq i1 %v3_11ac5, %v4_11ac5
  %v5_11ac8 = icmp eq i1 %v5_11ac5, false
  %v1_11aca = icmp eq i1 %v5_11ac8, false
  br i1 %v1_11aca, label %dec_label_pc_11aa3, label %dec_label_pc_11acc

dec_label_pc_11acc:                               ; preds = %dec_label_pc_11aa3, %dec_label_pc_11a6c
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_11a6c ], [ %v4_11aa7, %dec_label_pc_11aa3 ]
  store i32 %stack_var_-40.0.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11adb

bb:                                               ; preds = %dec_label_pc_11acc
  %v1_11ad9 = call i32 @function_11ae0()
  br label %dec_label_pc_11adb

dec_label_pc_11adb:                               ; preds = %bb, %dec_label_pc_11acc
  %v2_11ad9 = phi i32 [ %v1_11ad9, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_11acc ]
  ret i32 %v2_11ad9

; uselistorder directives
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v5_11abd, { 2, 1, 0 }
  uselistorder i32 %v4_11aa7, { 0, 2, 1 }
  uselistorder i32 %v4_11aa3, { 1, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_3.894 to i32), { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11aa3, { 1, 0 }
}

define i32 @function_11ae0() local_unnamed_addr {
dec_label_pc_11ae0:
  %v0_11ae1 = load i32, i32* @eax, align 4
  ret i32 %v0_11ae1
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP12CDNSSeedDataS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11ae2:
  %v15_11b33109 = icmp eq i32 %arg1, %arg2
  %v1_11b36110 = icmp eq i1 %v15_11b33109, false
  %v5_11b39111 = icmp eq i1 %v1_11b36110, false
  %v1_11b3b112 = icmp eq i1 %v5_11b39111, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_11b3b112, label %dec_label_pc_11b0e, label %dec_label_pc_11b3d

dec_label_pc_11b0e:                               ; preds = %dec_label_pc_11ae2, %dec_label_pc_11b0e
  %storemerge114 = phi i32 [ %v4_11b2c, %dec_label_pc_11b0e ], [ %arg3, %dec_label_pc_11ae2 ]
  %stack_var_-32.0113 = phi i32 [ %v4_11b28, %dec_label_pc_11b0e ], [ %arg1, %dec_label_pc_11ae2 ]
  %v1_11b14 = call i32 @unknown_21f46(i32 %storemerge114)
  %v2_11b23 = call i32 @unknown_23cf5(i32 %v1_11b14, i32 %stack_var_-32.0113)
  %v4_11b28 = add i32 %stack_var_-32.0113, ptrtoint (i32* @global_var_8.883 to i32)
  %v4_11b2c = add i32 %storemerge114, ptrtoint (i32* @global_var_8.883 to i32)
  %v15_11b33 = icmp eq i32 %v4_11b28, %arg2
  %v1_11b36 = icmp eq i1 %v15_11b33, false
  %v5_11b39 = icmp eq i1 %v1_11b36, false
  %v1_11b3b = icmp eq i1 %v5_11b39, false
  store i32 %v4_11b2c, i32* @eax, align 4
  br i1 %v1_11b3b, label %dec_label_pc_11b0e, label %dec_label_pc_11b3d

dec_label_pc_11b3d:                               ; preds = %dec_label_pc_11b0e, %dec_label_pc_11ae2
  br i1 true, label %bb, label %dec_label_pc_11b4c

bb:                                               ; preds = %dec_label_pc_11b3d
  %v1_11b4a = call i32 @function_11b83()
  store i32 %v1_11b4a, i32* @eax, align 4
  br label %dec_label_pc_11b4c

dec_label_pc_11b4c:                               ; preds = %bb, %dec_label_pc_11b3d
  %v0_11b4c = call i32 @function_11b7e()
  ret i32 %v0_11b4c

; uselistorder directives
  uselistorder i32 %v4_11b2c, { 1, 0 }
  uselistorder i32 %v4_11b28, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11b0e, { 1, 0 }
}

define i32 @function_11b4f() local_unnamed_addr {
dec_label_pc_11b4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_11b4f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11b4f
}

define x86_fp80 @function_11b6d() local_unnamed_addr {
dec_label_pc_11b6d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_11b6d = load i32, i32* %eax.global-to-local, align 4
  %v2_11b6d = add i32 %v0_11b6d, 139
  %v16_11b6d = urem i32 %v2_11b6d, 256
  %v18_11b6d = and i32 %v0_11b6d, -256
  %v19_11b6d = or i32 %v16_11b6d, %v18_11b6d
  store i32 %v19_11b6d, i32* %eax.global-to-local, align 4
  %v0_11b6f = load i32, i32* %ebp.global-to-local, align 4
  %v1_11b6f = add i32 %v0_11b6f, 1
  store i32 %v1_11b6f, i32* %ebp.global-to-local, align 4
  %v1_11b70 = load i32, i32* %ecx.global-to-local, align 4
  %v2_11b70 = add i32 %v1_11b70, 417866756
  %v3_11b70 = inttoptr i32 %v2_11b70 to double*
  %v4_11b70 = load double, double* %v3_11b70, align 4
  %v5_11b70 = fpext double %v4_11b70 to x86_fp80
  %v6_11b70 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_11b70 = fmul x86_fp80 %v5_11b70, %v6_11b70
  store x86_fp80 %v7_11b70, x86_fp80* %st0.global-to-local, align 4
  ret x86_fp80 %v7_11b70

; uselistorder directives
  uselistorder i32 %v0_11b6d, { 1, 0 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 7, 5, 8, 6 }
  uselistorder i32 139, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @function_11b7e() local_unnamed_addr {
dec_label_pc_11b7e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11b80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11b80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11b83() local_unnamed_addr {
dec_label_pc_11b83:
  %v0_11b88 = load i32, i32* @eax, align 4
  ret i32 %v0_11b88
}

define i32 @_ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT0_E7__valueEPS3_E6__typeES5_T_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b89:
  %v2_11bb2 = add i32 %arg2, %arg1
  %v3_11bc5 = call i32 @unknown_23e17(i32 %arg1, i32 %v2_11bb2, i32 %arg3)
  store i32 %v2_11bb2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11bde

bb:                                               ; preds = %dec_label_pc_11b89
  %v1_11bdc = call i32 @function_11be3()
  br label %dec_label_pc_11bde

dec_label_pc_11bde:                               ; preds = %bb, %dec_label_pc_11b89
  %v2_11bdc = phi i32 [ %v1_11bdc, %bb ], [ %v2_11bb2, %dec_label_pc_11b89 ]
  ret i32 %v2_11bdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11be3() local_unnamed_addr {
dec_label_pc_11be3:
  %v0_11be4 = load i32, i32* @eax, align 4
  ret i32 %v0_11be4
}

define i32 @_ZSt4copyIPKhPhET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11be5:
  %v1_11c0f = call i32 @unknown_21c58(i32 %arg2)
  %v1_11c1c = call i32 @unknown_21c58(i32 %arg1)
  %v3_11c2f = call i32 @unknown_23ed7(i32 %v1_11c1c, i32 %v1_11c0f, i32 %arg3)
  store i32 %v3_11c2f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11c40

bb:                                               ; preds = %dec_label_pc_11be5
  %v1_11c3e = call i32 @function_11c45()
  br label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %bb, %dec_label_pc_11be5
  %v2_11c3e = phi i32 [ %v1_11c3e, %bb ], [ %v3_11c2f, %dec_label_pc_11be5 ]
  ret i32 %v2_11c3e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_21c58, { 1, 0 }
}

define i32 @function_11c45() local_unnamed_addr {
dec_label_pc_11c45:
  %v0_11c4a = load i32, i32* @eax, align 4
  ret i32 %v0_11c4a
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5CTxInS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c4b:
  %v2_11c76 = sub i32 %arg2, %arg1
  %v2_11c7a = sdiv i32 %v2_11c76, 4
  %v3_11c7d = mul i32 %v2_11c7a, -991146299
  %v10_11ca6111 = icmp eq i32 %v3_11c7d, 0
  %v11_11ca6112 = icmp slt i32 %v3_11c7d, 0
  %v3_11caa113 = icmp eq i1 %v11_11ca6112, false
  %v4_11caa114 = icmp eq i1 %v10_11ca6111, false
  %v5_11caa115 = icmp eq i1 %v3_11caa113, %v4_11caa114
  %v5_11cad119 = icmp eq i1 %v5_11caa115, false
  %v1_11caf120 = icmp eq i1 %v5_11cad119, false
  br i1 %v1_11caf120, label %dec_label_pc_11c88, label %dec_label_pc_11cb1

dec_label_pc_11c88:                               ; preds = %dec_label_pc_11c4b, %dec_label_pc_11c88
  %storemerge123 = phi i32 [ %v4_11ca2, %dec_label_pc_11c88 ], [ %v3_11c7d, %dec_label_pc_11c4b ]
  %stack_var_-40.0122 = phi i32 [ %v4_11c8c, %dec_label_pc_11c88 ], [ %arg3, %dec_label_pc_11c4b ]
  %stack_var_-36.0121 = phi i32 [ %v4_11c88, %dec_label_pc_11c88 ], [ %arg2, %dec_label_pc_11c4b ]
  %v4_11c88 = add i32 %stack_var_-36.0121, -52
  %v4_11c8c = add i32 %stack_var_-40.0122, -52
  %v2_11c9d = call i32 @unknown_22273(i32 %v4_11c8c, i32 %v4_11c88)
  %v4_11ca2 = add i32 %storemerge123, -1
  %v13_11ca2 = icmp eq i32 %v4_11ca2, 0
  %v14_11ca2 = icmp slt i32 %v4_11ca2, 0
  %v3_11caa = icmp eq i1 %v14_11ca2, false
  %v4_11caa = icmp eq i1 %v13_11ca2, false
  %v5_11caa = icmp eq i1 %v3_11caa, %v4_11caa
  %v5_11cad = icmp eq i1 %v5_11caa, false
  %v1_11caf = icmp eq i1 %v5_11cad, false
  br i1 %v1_11caf, label %dec_label_pc_11c88, label %dec_label_pc_11cb1

dec_label_pc_11cb1:                               ; preds = %dec_label_pc_11c88, %dec_label_pc_11c4b
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_11c4b ], [ %v4_11c8c, %dec_label_pc_11c88 ]
  store i32 %stack_var_-40.0.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11cc0

bb:                                               ; preds = %dec_label_pc_11cb1
  %v1_11cbe = call i32 @function_11cc5()
  br label %dec_label_pc_11cc0

dec_label_pc_11cc0:                               ; preds = %bb, %dec_label_pc_11cb1
  %v2_11cbe = phi i32 [ %v1_11cbe, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_11cb1 ]
  ret i32 %v2_11cbe

; uselistorder directives
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_11ca2, { 2, 1, 0 }
  uselistorder i32 %v4_11c8c, { 0, 2, 1 }
  uselistorder i32 %v4_11c88, { 1, 0 }
  uselistorder i32 -52, { 0, 1, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_11c88, { 1, 0 }
}

define i32 @function_11cc5() local_unnamed_addr {
dec_label_pc_11cc5:
  %v0_11cc6 = load i32, i32* @eax, align 4
  ret i32 %v0_11cc6
}

define i32 @_ZSt10_ConstructI5CTxInS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11cc7:
  store i32 0, i32* @eax, align 4
  %v2_11cf5 = call i32 @function_12141(i32 52, i32 %arg1)
  %v1_11cfc = icmp eq i32 %v2_11cf5, 0
  br i1 %v1_11cfc, label %bb, label %dec_label_pc_11d00

bb:                                               ; preds = %dec_label_pc_11cc7
  %v1_11cfe = call i32 @function_11d29()
  br label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %bb, %dec_label_pc_11cc7
  %v2_11d0a = call i32 @unknown_15c39(i32 %v2_11cf5, i32 %arg2)
  %v0_11d0f = call i32 @function_11d29()
  ret i32 %v0_11d0f

; uselistorder directives
  uselistorder i32 ()* @function_11d29, { 1, 0 }
}

define i32 @function_11d29() local_unnamed_addr {
dec_label_pc_11d29:
  %v0_11d29 = load i32, i32* @ebp, align 4
  %v1_11d29 = add i32 %v0_11d29, -28
  %v2_11d29 = inttoptr i32 %v1_11d29 to i32*
  %v3_11d29 = load i32, i32* %v2_11d29, align 4
  %v1_11d2c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11d2c = xor i32 %v1_11d2c, %v3_11d29
  %v3_11d2c = icmp eq i32 %v2_11d2c, 0
  store i32 %v2_11d2c, i32* @eax, align 4
  br i1 %v3_11d2c, label %bb, label %dec_label_pc_11d35

bb:                                               ; preds = %dec_label_pc_11d29
  %v1_11d33 = call i32 @function_11d3a()
  br label %dec_label_pc_11d35

dec_label_pc_11d35:                               ; preds = %bb, %dec_label_pc_11d29
  %v2_11d33 = phi i32 [ %v1_11d33, %bb ], [ %v2_11d2c, %dec_label_pc_11d29 ]
  ret i32 %v2_11d33
}

define i32 @function_11d3a() local_unnamed_addr {
dec_label_pc_11d3a:
  %v0_11d41 = load i32, i32* @eax, align 4
  ret i32 %v0_11d41
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6CTxOutS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d42:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_11d6d = sub i32 %arg2, %arg1
  store i32 %v2_11d6d, i32* @ecx, align 4
  %v2_11d71 = sdiv i32 %v2_11d6d, 4
  %v3_11d74 = mul i32 %v2_11d71, -858993459
  %v10_11d9d15 = icmp eq i32 %v3_11d74, 0
  %v11_11d9d16 = icmp slt i32 %v3_11d74, 0
  %v3_11da117 = icmp eq i1 %v11_11d9d16, false
  %v4_11da118 = icmp eq i1 %v10_11d9d15, false
  %v5_11da119 = icmp eq i1 %v3_11da117, %v4_11da118
  %v5_11da423 = icmp eq i1 %v5_11da119, false
  %v1_11da624 = icmp eq i1 %v5_11da423, false
  br i1 %v1_11da624, label %dec_label_pc_11d7f, label %dec_label_pc_11da8

dec_label_pc_11d7f:                               ; preds = %dec_label_pc_11d42, %dec_label_pc_11d7f
  %storemerge27 = phi i32 [ %v4_11d99, %dec_label_pc_11d7f ], [ %v3_11d74, %dec_label_pc_11d42 ]
  %stack_var_-40.026 = phi i32 [ %v4_11d83, %dec_label_pc_11d7f ], [ %tmp6, %dec_label_pc_11d42 ]
  %stack_var_-36.025 = phi i32 [ %v4_11d7f, %dec_label_pc_11d7f ], [ %arg2, %dec_label_pc_11d42 ]
  %v4_11d7f = add i32 %stack_var_-36.025, -20
  %v4_11d83 = add i32 %stack_var_-40.026, -20
  %v2_11d94 = call i32 @unknown_2261e(i32 %v4_11d83, i32 %v4_11d7f)
  %v4_11d99 = add i32 %storemerge27, -1
  %v13_11d99 = icmp eq i32 %v4_11d99, 0
  %v14_11d99 = icmp slt i32 %v4_11d99, 0
  %v3_11da1 = icmp eq i1 %v14_11d99, false
  %v4_11da1 = icmp eq i1 %v13_11d99, false
  %v5_11da1 = icmp eq i1 %v3_11da1, %v4_11da1
  %v5_11da4 = icmp eq i1 %v5_11da1, false
  %v1_11da6 = icmp eq i1 %v5_11da4, false
  br i1 %v1_11da6, label %dec_label_pc_11d7f, label %dec_label_pc_11da8

dec_label_pc_11da8:                               ; preds = %dec_label_pc_11d7f, %dec_label_pc_11d42
  %stack_var_-40.0.lcssa = phi i32 [ %tmp6, %dec_label_pc_11d42 ], [ %v4_11d83, %dec_label_pc_11d7f ]
  store i32 %stack_var_-40.0.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11db7

bb:                                               ; preds = %dec_label_pc_11da8
  %v1_11db5 = call i32 @function_11dbc()
  br label %dec_label_pc_11db7

dec_label_pc_11db7:                               ; preds = %bb, %dec_label_pc_11da8
  %v2_11db5 = phi i32 [ %v1_11db5, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_11da8 ]
  ret i32 %v2_11db5

; uselistorder directives
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_11d99, { 2, 1, 0 }
  uselistorder i32 %v4_11d83, { 0, 2, 1 }
  uselistorder i32 %v4_11d7f, { 1, 0 }
  uselistorder i32 -20, { 0, 1, 20, 21, 13, 14, 18, 19, 15, 16, 17, 25, 26, 27, 23, 24, 31, 32, 10, 9, 2, 22, 11, 28, 29, 30, 3, 4, 5, 6, 7, 8, 33, 12 }
  uselistorder label %dec_label_pc_11d7f, { 1, 0 }
}

define i32 @function_11dbc() local_unnamed_addr {
dec_label_pc_11dbc:
  %v0_11dbd = load i32, i32* @eax, align 4
  ret i32 %v0_11dbd
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11dbe:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11de7

bb:                                               ; preds = %dec_label_pc_11dbe
  %v3_11de5 = call i32 @function_11dec(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_11de7

dec_label_pc_11de7:                               ; preds = %bb, %dec_label_pc_11dbe
  %v4_11de5 = phi i32 [ %v3_11de5, %bb ], [ 0, %dec_label_pc_11dbe ]
  ret i32 %v4_11de5
}

define i32 @function_11dec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11dec:
  %v0_11ded = load i32, i32* @eax, align 4
  ret i32 %v0_11ded
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11dee:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_11e05 = ptrtoint i32* %stack_var_-32 to i32
  %v1_11e0b = call i32 @unknown_20a4e(i32 %v2_11e05)
  %v1_11e10 = inttoptr i32 %v1_11e0b to i32*
  %v2_11e10 = load i32, i32* %v1_11e10, align 4
  store i32 %v2_11e10, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11e1e

bb:                                               ; preds = %dec_label_pc_11dee
  %v1_11e1c = call i32 @function_11e23()
  br label %dec_label_pc_11e1e

dec_label_pc_11e1e:                               ; preds = %bb, %dec_label_pc_11dee
  %v2_11e1c = phi i32 [ %v1_11e1c, %bb ], [ %v2_11e10, %dec_label_pc_11dee ]
  ret i32 %v2_11e1c
}

define i32 @function_11e23() local_unnamed_addr {
dec_label_pc_11e23:
  %v0_11e24 = load i32, i32* @eax, align 4
  ret i32 %v0_11e24
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK5CTxInPS3_EET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11e25:
  %v2_11e50 = sub i32 %arg2, %arg1
  %v2_11e54 = sdiv i32 %v2_11e50, 4
  %v3_11e57 = mul i32 %v2_11e54, -991146299
  %v10_11e80110 = icmp eq i32 %v3_11e57, 0
  %v11_11e80111 = icmp slt i32 %v3_11e57, 0
  %v3_11e84112 = icmp eq i1 %v11_11e80111, false
  %v4_11e84113 = icmp eq i1 %v10_11e80110, false
  %v5_11e84114 = icmp eq i1 %v3_11e84112, %v4_11e84113
  %v5_11e87115 = icmp eq i1 %v5_11e84114, false
  %v1_11e89116 = icmp eq i1 %v5_11e87115, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_11e89116, label %dec_label_pc_11e62, label %dec_label_pc_11e8b

dec_label_pc_11e62:                               ; preds = %dec_label_pc_11e25, %dec_label_pc_11e62
  %storemerge119 = phi i32 [ %v4_11e7c, %dec_label_pc_11e62 ], [ %v3_11e57, %dec_label_pc_11e25 ]
  %stack_var_-40.0118 = phi i32 [ %v4_11e78, %dec_label_pc_11e62 ], [ %arg3, %dec_label_pc_11e25 ]
  %stack_var_-32.0117 = phi i32 [ %v4_11e74, %dec_label_pc_11e62 ], [ %arg1, %dec_label_pc_11e25 ]
  %v2_11e6f = call i32 @unknown_2244d(i32 %stack_var_-40.0118, i32 %stack_var_-32.0117)
  %v4_11e74 = add i32 %stack_var_-32.0117, 52
  %v4_11e78 = add i32 %stack_var_-40.0118, 52
  %v4_11e7c = add i32 %storemerge119, -1
  %v13_11e7c = icmp eq i32 %v4_11e7c, 0
  %v14_11e7c = icmp slt i32 %v4_11e7c, 0
  %v3_11e84 = icmp eq i1 %v14_11e7c, false
  %v4_11e84 = icmp eq i1 %v13_11e7c, false
  %v5_11e84 = icmp eq i1 %v3_11e84, %v4_11e84
  %v5_11e87 = icmp eq i1 %v5_11e84, false
  %v1_11e89 = icmp eq i1 %v5_11e87, false
  store i32 %v4_11e78, i32* @eax, align 4
  br i1 %v1_11e89, label %dec_label_pc_11e62, label %dec_label_pc_11e8b

dec_label_pc_11e8b:                               ; preds = %dec_label_pc_11e62, %dec_label_pc_11e25
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_11e25 ], [ %v4_11e78, %dec_label_pc_11e62 ]
  br i1 true, label %bb, label %dec_label_pc_11e9a

bb:                                               ; preds = %dec_label_pc_11e8b
  %v1_11e98 = call i32 @function_11e9f()
  br label %dec_label_pc_11e9a

dec_label_pc_11e9a:                               ; preds = %bb, %dec_label_pc_11e8b
  %v2_11e98 = phi i32 [ %v1_11e98, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_11e8b ]
  ret i32 %v2_11e98

; uselistorder directives
  uselistorder i32 %v4_11e7c, { 2, 1, 0 }
  uselistorder i32 %v4_11e78, { 0, 2, 1 }
  uselistorder i32 %stack_var_-32.0117, { 1, 0 }
  uselistorder i32 %stack_var_-40.0118, { 1, 0 }
  uselistorder label %dec_label_pc_11e62, { 1, 0 }
}

define i32 @function_11e9f() local_unnamed_addr {
dec_label_pc_11e9f:
  %v4_11e9f = load i32, i32* @eax, align 4
  ret i32 %v4_11e9f
}

define i32 @function_11ea0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11ea0:
  %v0_11ea0 = load i32, i32* @eax, align 4
  ret i32 %v0_11ea0
}

define i32 @_ZN9__gnu_cxxneIP5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ea1:
  %v1_11ec5 = call i32 @unknown_20b01(i32 %arg1)
  %v1_11eca = inttoptr i32 %v1_11ec5 to i32*
  %v2_11eca = load i32, i32* %v1_11eca, align 4
  %v1_11ed2 = call i32 @unknown_20b01(i32 %arg2)
  %v1_11ed7 = inttoptr i32 %v1_11ed2 to i32*
  %v2_11ed7 = load i32, i32* %v1_11ed7, align 4
  %v12_11ed9 = icmp eq i32 %v2_11eca, %v2_11ed7
  %v1_11edb = icmp eq i1 %v12_11ed9, false
  %v2_11edb = zext i1 %v1_11edb to i32
  %v4_11edb = and i32 %v2_11ed7, -256
  %v5_11edb = or i32 %v2_11edb, %v4_11edb
  store i32 %v5_11edb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11eea

bb:                                               ; preds = %dec_label_pc_11ea1
  %v1_11ee8 = call i32 @function_11eef()
  br label %dec_label_pc_11eea

dec_label_pc_11eea:                               ; preds = %bb, %dec_label_pc_11ea1
  %v2_11ee8 = phi i32 [ %v1_11ee8, %bb ], [ %v5_11edb, %dec_label_pc_11ea1 ]
  ret i32 %v2_11ee8

; uselistorder directives
  uselistorder i32 %v2_11ed7, { 1, 0 }
  uselistorder i32 (i32)* @unknown_20b01, { 1, 0 }
}

define i32 @function_11eef() local_unnamed_addr {
dec_label_pc_11eef:
  %v0_11ef4 = load i32, i32* @eax, align 4
  ret i32 %v0_11ef4
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11ef6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_11f10 = load i32, i32* %arg1, align 4
  %v1_11f12 = add i32 %v2_11f10, 52
  store i32 %v1_11f12, i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_11f22(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f22:
  %v0_11f22 = load i32, i32* @eax, align 4
  %v1_11f22 = load i1, i1* @cf, align 1
  %v2_11f22 = zext i1 %v1_11f22 to i32
  %v3_11f22 = add i32 %v0_11f22, 20
  %v4_11f22 = add i32 %v3_11f22, %v2_11f22
  %v14_11f22 = icmp eq i32 %v4_11f22, 0
  store i32 %v4_11f22, i32* @eax, align 4
  br i1 %v14_11f22, label %bb, label %dec_label_pc_11f29

bb:                                               ; preds = %dec_label_pc_11f22
  %v1_11f27 = call i32 @function_11f2e()
  br label %dec_label_pc_11f29

dec_label_pc_11f29:                               ; preds = %bb, %dec_label_pc_11f22
  %v2_11f27 = phi i32 [ %v1_11f27, %bb ], [ %v4_11f22, %dec_label_pc_11f22 ]
  ret i32 %v2_11f27
}

define i32 @function_11f2e() local_unnamed_addr {
dec_label_pc_11f2e:
  %v0_11f2f = load i32, i32* @eax, align 4
  ret i32 %v0_11f2f
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11f30:
  %v2_11f4a = load i32, i32* %arg1, align 4
  store i32 %v2_11f4a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11f58

bb:                                               ; preds = %dec_label_pc_11f30
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_11f56 = call i32 @function_11f5d(i32 %tmp100)
  br label %dec_label_pc_11f58

dec_label_pc_11f58:                               ; preds = %bb, %dec_label_pc_11f30
  %v3_11f56 = phi i32 [ %v2_11f56, %bb ], [ %v2_11f4a, %dec_label_pc_11f30 ]
  ret i32 %v3_11f56

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_11f5d(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f5d:
  %v0_11f5e = load i32, i32* @eax, align 4
  ret i32 %v0_11f5e
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP5CTxInS4_EET0_T_S6_S5_() local_unnamed_addr {
dec_label_pc_11f5f:
  %eax.global-to-local = alloca i32, align 4
  %v5_11f5f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_11f5f
}

define i32 @function_11f60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f60:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %v1_11f60 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11f60, i32* @ebp, align 4
  %v2_11f8a = sub i32 %arg2, %arg1
  %v2_11f8e = sdiv i32 %v2_11f8a, 4
  %v3_11f91 = mul i32 %v2_11f8e, -991146299
  %v10_11fba13 = icmp eq i32 %v3_11f91, 0
  %v11_11fba14 = icmp slt i32 %v3_11f91, 0
  %v3_11fbe15 = icmp eq i1 %v11_11fba14, false
  %v4_11fbe16 = icmp eq i1 %v10_11fba13, false
  %v5_11fbe17 = icmp eq i1 %v3_11fbe15, %v4_11fbe16
  %v5_11fc118 = icmp eq i1 %v5_11fbe17, false
  %v1_11fc319 = icmp eq i1 %v5_11fc118, false
  br i1 %v1_11fc319, label %dec_label_pc_11f9c, label %dec_label_pc_11fc5

dec_label_pc_11f9c:                               ; preds = %dec_label_pc_11f60, %dec_label_pc_11f9c
  %storemerge22 = phi i32 [ %v4_11fb6, %dec_label_pc_11f9c ], [ %v3_11f91, %dec_label_pc_11f60 ]
  %stack_var_-36.021 = phi i32 [ %v4_11fb2, %dec_label_pc_11f9c ], [ %tmp5, %dec_label_pc_11f60 ]
  %stack_var_-28.020 = phi i32 [ %v4_11fae, %dec_label_pc_11f9c ], [ %arg1, %dec_label_pc_11f60 ]
  %v2_11fa9 = call i32 @unknown_22587(i32 %stack_var_-36.021, i32 %stack_var_-28.020)
  %v4_11fae = add i32 %stack_var_-28.020, 52
  %v4_11fb2 = add i32 %stack_var_-36.021, 52
  %v4_11fb6 = add i32 %storemerge22, -1
  %v13_11fb6 = icmp eq i32 %v4_11fb6, 0
  %v14_11fb6 = icmp slt i32 %v4_11fb6, 0
  %v3_11fbe = icmp eq i1 %v14_11fb6, false
  %v4_11fbe = icmp eq i1 %v13_11fb6, false
  %v5_11fbe = icmp eq i1 %v3_11fbe, %v4_11fbe
  %v5_11fc1 = icmp eq i1 %v5_11fbe, false
  %v1_11fc3 = icmp eq i1 %v5_11fc1, false
  br i1 %v1_11fc3, label %dec_label_pc_11f9c, label %dec_label_pc_11fc5

dec_label_pc_11fc5:                               ; preds = %dec_label_pc_11f9c, %dec_label_pc_11f60
  %stack_var_-36.0.lcssa = phi i32 [ %tmp5, %dec_label_pc_11f60 ], [ %v4_11fb2, %dec_label_pc_11f9c ]
  ret i32 %stack_var_-36.0.lcssa

; uselistorder directives
  uselistorder i32 %v4_11fb6, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.020, { 1, 0 }
  uselistorder i32 %stack_var_-36.021, { 1, 0 }
  uselistorder i32 52, { 22, 23, 15, 16, 17, 7, 24, 25, 26, 18, 8, 19, 9, 20, 21, 10, 11, 12, 13, 0, 1, 2, 3, 14, 4, 5, 6 }
  uselistorder i32 -991146299, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_11f9c, { 1, 0 }
}

define i32 @function_11fd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fd0:
  %zf.global-to-local = alloca i1, align 1
  %v2_11fd0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_11fd0 = load i32, i32* @eax, align 4
  %v4_11fd0 = trunc i32 %v3_11fd0 to i8
  %v5_11fd0 = add i8 %v4_11fd0, %v2_11fd0
  %v15_11fd0 = icmp eq i8 %v5_11fd0, 0
  store i1 %v15_11fd0, i1* %zf.global-to-local, align 1
  %v21_11fd0 = inttoptr i32 %v3_11fd0 to i8*
  store i8 %v5_11fd0, i8* %v21_11fd0, align 1
  %v0_11fd2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_11fd2, label %bb, label %dec_label_pc_11fd0.dec_label_pc_11fd4_crit_edge

dec_label_pc_11fd0.dec_label_pc_11fd4_crit_edge:  ; preds = %dec_label_pc_11fd0
  %v2_11fd2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11fd4

bb:                                               ; preds = %dec_label_pc_11fd0
  %v1_11fd2 = call i32 @function_11fd9()
  br label %dec_label_pc_11fd4

dec_label_pc_11fd4:                               ; preds = %dec_label_pc_11fd0.dec_label_pc_11fd4_crit_edge, %bb
  %v2_11fd2 = phi i32 [ %v2_11fd2.pre, %dec_label_pc_11fd0.dec_label_pc_11fd4_crit_edge ], [ %v1_11fd2, %bb ]
  ret i32 %v2_11fd2

; uselistorder directives
  uselistorder i8 0, { 22, 20, 0, 21, 1, 26, 23, 27, 28, 29, 3, 31, 32, 33, 35, 47, 30, 34, 48, 49, 24, 2, 25, 8, 36, 37, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 42, 43, 44, 45, 46, 4, 38, 39, 40, 41, 6, 7 }
  uselistorder i8* bitcast (i32* @eax to i8*), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder label %dec_label_pc_11fd4, { 1, 0 }
}

define i32 @function_11fd9() local_unnamed_addr {
dec_label_pc_11fd9:
  %v0_11fda = load i32, i32* @eax, align 4
  ret i32 %v0_11fda
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fdb:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_11ff2 = ptrtoint i32* %stack_var_-32 to i32
  %v1_11ff8 = call i32 @unknown_20fb7(i32 %v2_11ff2)
  %v1_11ffd = inttoptr i32 %v1_11ff8 to i32*
  %v2_11ffd = load i32, i32* %v1_11ffd, align 4
  ret i32 %v2_11ffd
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6CTxOutPS3_EET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12012:
  %v2_1203d = sub i32 %arg2, %arg1
  %v2_12041 = sdiv i32 %v2_1203d, 4
  %v3_12044 = mul i32 %v2_12041, -858993459
  %v10_1206d110 = icmp eq i32 %v3_12044, 0
  %v11_1206d111 = icmp slt i32 %v3_12044, 0
  %v3_12071112 = icmp eq i1 %v11_1206d111, false
  %v4_12071113 = icmp eq i1 %v10_1206d110, false
  %v5_12071114 = icmp eq i1 %v3_12071112, %v4_12071113
  %v5_12074115 = icmp eq i1 %v5_12071114, false
  %v1_12076116 = icmp eq i1 %v5_12074115, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_12076116, label %dec_label_pc_1204f, label %dec_label_pc_12078

dec_label_pc_1204f:                               ; preds = %dec_label_pc_12012, %dec_label_pc_1204f
  %storemerge119 = phi i32 [ %v4_12069, %dec_label_pc_1204f ], [ %v3_12044, %dec_label_pc_12012 ]
  %stack_var_-40.0118 = phi i32 [ %v4_12065, %dec_label_pc_1204f ], [ %arg3, %dec_label_pc_12012 ]
  %stack_var_-32.0117 = phi i32 [ %v4_12061, %dec_label_pc_1204f ], [ %arg1, %dec_label_pc_12012 ]
  %v2_1205c = call i32 @unknown_228ee(i32 %stack_var_-40.0118, i32 %stack_var_-32.0117)
  %v4_12061 = add i32 %stack_var_-32.0117, 20
  %v4_12065 = add i32 %stack_var_-40.0118, 20
  %v4_12069 = add i32 %storemerge119, -1
  %v13_12069 = icmp eq i32 %v4_12069, 0
  %v14_12069 = icmp slt i32 %v4_12069, 0
  %v3_12071 = icmp eq i1 %v14_12069, false
  %v4_12071 = icmp eq i1 %v13_12069, false
  %v5_12071 = icmp eq i1 %v3_12071, %v4_12071
  %v5_12074 = icmp eq i1 %v5_12071, false
  %v1_12076 = icmp eq i1 %v5_12074, false
  store i32 %v4_12065, i32* @eax, align 4
  br i1 %v1_12076, label %dec_label_pc_1204f, label %dec_label_pc_12078

dec_label_pc_12078:                               ; preds = %dec_label_pc_1204f, %dec_label_pc_12012
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_12012 ], [ %v4_12065, %dec_label_pc_1204f ]
  br i1 true, label %bb, label %dec_label_pc_12087

bb:                                               ; preds = %dec_label_pc_12078
  %v1_12085 = call i32 @function_1208c()
  br label %dec_label_pc_12087

dec_label_pc_12087:                               ; preds = %bb, %dec_label_pc_12078
  %v2_12085 = phi i32 [ %v1_12085, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_12078 ]
  ret i32 %v2_12085

; uselistorder directives
  uselistorder i32 %v4_12069, { 2, 1, 0 }
  uselistorder i32 %v4_12065, { 0, 2, 1 }
  uselistorder i32 %stack_var_-32.0117, { 1, 0 }
  uselistorder i32 %stack_var_-40.0118, { 1, 0 }
  uselistorder i32 4, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 16, 17, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_1204f, { 1, 0 }
}

define i32 @function_1208c() local_unnamed_addr {
dec_label_pc_1208c:
  %v0_1208d = load i32, i32* @eax, align 4
  ret i32 %v0_1208d
}

define i32 @_ZN9__gnu_cxxneIP6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1208e:
  %v1_120b2 = call i32 @unknown_2106a(i32 %arg1)
  %v1_120b7 = inttoptr i32 %v1_120b2 to i32*
  %v2_120b7 = load i32, i32* %v1_120b7, align 4
  %v1_120bf = call i32 @unknown_2106a(i32 %arg2)
  %v1_120c4 = inttoptr i32 %v1_120bf to i32*
  %v2_120c4 = load i32, i32* %v1_120c4, align 4
  %v12_120c6 = icmp eq i32 %v2_120b7, %v2_120c4
  %v1_120c8 = icmp eq i1 %v12_120c6, false
  %v2_120c8 = zext i1 %v1_120c8 to i32
  %v4_120c8 = and i32 %v2_120c4, -256
  %v5_120c8 = or i32 %v2_120c8, %v4_120c8
  ret i32 %v5_120c8

; uselistorder directives
  uselistorder i32 %v2_120c4, { 1, 0 }
  uselistorder i32 (i32)* @unknown_2106a, { 1, 0 }
}

define i32 @function_120db() local_unnamed_addr {
dec_label_pc_120db:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_120db = load i32, i32* %ebx.global-to-local, align 4
  %v1_120db = add i32 %v0_120db, 1566258372
  %v2_120db = inttoptr i32 %v1_120db to i32*
  %v3_120db = load i32, i32* %v2_120db, align 4
  %v4_120db = add i32 %v3_120db, 1
  store i32 %v4_120db, i32* %v2_120db, align 4
  %v0_120e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_120e1
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_120e2:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_120fc = load i32, i32* %arg1, align 4
  %v1_120fe = add i32 %v2_120fc, 20
  store i32 %v1_120fe, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12115

bb:                                               ; preds = %dec_label_pc_120e2
  %v2_12113 = call i32 @function_1211a(i32 %tmp100)
  br label %dec_label_pc_12115

dec_label_pc_12115:                               ; preds = %bb, %dec_label_pc_120e2
  %v3_12113 = phi i32 [ %v2_12113, %bb ], [ %tmp100, %dec_label_pc_120e2 ]
  ret i32 %v3_12113
}

define i32 @function_1211a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1211a:
  %v0_1211b = load i32, i32* @eax, align 4
  ret i32 %v0_1211b
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6CTxOutS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1211c:
  ret i32 0
}

define i32 @function_12141(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12141:
  %ecx.global-to-local = alloca i32, align 4
  %v0_12141 = load i32, i32* @ecx, align 4
  %v1_12141 = add i32 %v0_12141, -1
  store i32 %v1_12141, i32* %ecx.global-to-local, align 4
  %v0_12143 = load i32, i32* @ebp, align 4
  %v1_12143 = add i32 %v0_12143, 1
  store i32 %v1_12143, i32* @ebp, align 4
  %v1_12146 = inttoptr i32 %v1_12141 to i32*
  %v2_12146 = load i32, i32* %v1_12146, align 4
  %v4_12146 = udiv i32 %v2_12146, 2
  store i32 %v4_12146, i32* %v1_12146, align 4
  %v0_12148 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12148 = add i32 %v0_12148, 49856968
  %v2_12148 = inttoptr i32 %v1_12148 to i32*
  %v3_12148 = load i32, i32* %v2_12148, align 4
  %v4_12148 = udiv i32 %v3_12148, 512
  %v5_12148 = mul i32 %v3_12148, 8388608
  %v6_12148 = or i32 %v4_12148, %v5_12148
  store i32 %v6_12148, i32* %v2_12148, align 4
  %v7_1214f = load i32, i32* %ecx.global-to-local, align 4
  %v10_1214f = or i32 %v7_1214f, 65280
  store i32 %v10_1214f, i32* %ecx.global-to-local, align 4
  %v0_12154 = load i32, i32* @eax, align 4
  %v1_12154 = load i32, i32* @ebp, align 4
  %v2_12154 = add i32 %v1_12154, -16
  %v3_12154 = inttoptr i32 %v2_12154 to i32*
  store i32 %v0_12154, i32* %v3_12154, align 4
  br label %dec_label_pc_12177

dec_label_pc_12159:                               ; preds = %dec_label_pc_12177
  %v1_12159 = add i32 %v0_12177, -28
  %v2_12159 = inttoptr i32 %v1_12159 to i32*
  %v3_12159 = load i32, i32* %v2_12159, align 4
  %v1_12160 = add i32 %v0_12177, -36
  %v2_12160 = inttoptr i32 %v1_12160 to i32*
  %v3_12160 = load i32, i32* %v2_12160, align 4
  %v2_12166 = call i32 @unknown_229f8(i32 %v3_12160, i32 %v3_12159)
  store i32 %v2_12166, i32* @eax, align 4
  %v0_1216b = load i32, i32* @ebp, align 4
  %v1_1216b = add i32 %v0_1216b, -28
  %v2_1216b = inttoptr i32 %v1_1216b to i32*
  %v3_1216b = load i32, i32* %v2_1216b, align 4
  %v4_1216b = add i32 %v3_1216b, 20
  store i32 %v4_1216b, i32* %v2_1216b, align 4
  %v0_1216f = load i32, i32* @ebp, align 4
  %v1_1216f = add i32 %v0_1216f, -36
  %v2_1216f = inttoptr i32 %v1_1216f to i32*
  %v3_1216f = load i32, i32* %v2_1216f, align 4
  %v4_1216f = add i32 %v3_1216f, 20
  store i32 %v4_1216f, i32* %v2_1216f, align 4
  %v0_12173 = load i32, i32* @ebp, align 4
  %v1_12173 = add i32 %v0_12173, -16
  %v2_12173 = inttoptr i32 %v1_12173 to i32*
  %v3_12173 = load i32, i32* %v2_12173, align 4
  %v4_12173 = add i32 %v3_12173, -1
  store i32 %v4_12173, i32* %v2_12173, align 4
  br label %dec_label_pc_12177

dec_label_pc_12177:                               ; preds = %dec_label_pc_12159, %dec_label_pc_12141
  %v0_12177 = load i32, i32* @ebp, align 4
  %v1_12177 = add i32 %v0_12177, -16
  %v2_12177 = inttoptr i32 %v1_12177 to i32*
  %v3_12177 = load i32, i32* %v2_12177, align 4
  %v10_12177 = icmp eq i32 %v3_12177, 0
  %v11_12177 = icmp slt i32 %v3_12177, 0
  %v3_1217b = icmp eq i1 %v11_12177, false
  %v4_1217b = icmp eq i1 %v10_12177, false
  %v5_1217b = icmp eq i1 %v3_1217b, %v4_1217b
  %v5_1217e = icmp eq i1 %v5_1217b, false
  %v1_12180 = icmp eq i1 %v5_1217e, false
  br i1 %v1_12180, label %dec_label_pc_12159, label %dec_label_pc_12182

dec_label_pc_12182:                               ; preds = %dec_label_pc_12177
  %v1_12182 = add i32 %v0_12177, -36
  %v2_12182 = inttoptr i32 %v1_12182 to i32*
  %v3_12182 = load i32, i32* %v2_12182, align 4
  store i32 %v3_12182, i32* @eax, align 4
  %v1_12185 = add i32 %v0_12177, -12
  %v2_12185 = inttoptr i32 %v1_12185 to i32*
  %v3_12185 = load i32, i32* %v2_12185, align 4
  %v1_12188 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12188 = icmp eq i32 %v1_12188, %v3_12185
  br i1 %v3_12188, label %bb, label %dec_label_pc_12191

bb:                                               ; preds = %dec_label_pc_12182
  %v1_1218f = call i32 @function_12196()
  br label %dec_label_pc_12191

dec_label_pc_12191:                               ; preds = %bb, %dec_label_pc_12182
  %v2_1218f = phi i32 [ %v1_1218f, %bb ], [ %v3_12182, %dec_label_pc_12182 ]
  ret i32 %v2_1218f

; uselistorder directives
  uselistorder i32 %v3_12177, { 1, 0 }
  uselistorder i32 %v0_12177, { 1, 0, 4, 2, 3 }
  uselistorder i32 -16, { 4, 3, 5, 19, 18, 20, 22, 21, 24, 23, 25, 15, 28, 26, 27, 29, 30, 16, 17, 77, 78, 59, 60, 61, 79, 80, 81, 38, 39, 40, 65, 66, 67, 33, 31, 32, 34, 76, 6, 7, 8, 35, 36, 37, 9, 10, 11, 12, 13, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 48, 41, 0, 42, 45, 46, 14, 63, 64, 70, 71, 72, 73, 74, 75, 47, 1, 62, 68, 69, 43, 44, 2 }
  uselistorder i32 65280, { 1, 0 }
  uselistorder i32 2, { 2, 15, 6, 16, 9, 3, 17, 18, 19, 4, 20, 10, 11, 21, 22, 12, 13, 14, 23, 24, 5, 0, 25, 7, 8, 1 }
  uselistorder i32* @ecx, { 3, 20, 21, 22, 23, 24, 9, 25, 58, 59, 15, 16, 12, 13, 11, 56, 14, 17, 6, 26, 4, 28, 55, 52, 53, 68, 69, 107, 108, 32, 0, 33, 34, 35, 81, 62, 63, 18, 82, 83, 112, 113, 19, 45, 30, 31, 36, 84, 85, 46, 37, 41, 42, 5, 50, 7, 8, 38, 39, 40, 44, 114, 115, 116, 43, 64, 65, 57, 71, 72, 73, 89, 74, 75, 90, 91, 92, 1, 2, 96, 97, 98, 10, 51, 60, 61, 27, 29, 109, 70, 86, 87, 66, 88, 47, 48, 49, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 54, 67, 106, 76, 77, 78, 79, 80, 110, 111 }
}

define i32 @function_12196() local_unnamed_addr {
dec_label_pc_12196:
  %v0_12197 = load i32, i32* @eax, align 4
  ret i32 %v0_12197
}

define i32 @_ZSt10_ConstructI12CTransactionS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12198:
  store i32 0, i32* @eax, align 4
  %v2_121c6 = call i32 @function_12612(i32 ptrtoint (i32* @mainParams to i32), i32 %arg1)
  %v1_121cd = icmp eq i32 %v2_121c6, 0
  br i1 %v1_121cd, label %bb, label %dec_label_pc_121d1

bb:                                               ; preds = %dec_label_pc_12198
  %v1_121cf = call i32 @function_121fa()
  br label %dec_label_pc_121d1

dec_label_pc_121d1:                               ; preds = %bb, %dec_label_pc_12198
  %v2_121db = call i32 @unknown_1bfda(i32 %v2_121c6, i32 %arg2)
  %v0_121e0 = call i32 @function_121fa()
  ret i32 %v0_121e0

; uselistorder directives
  uselistorder i32 ()* @function_121fa, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @mainParams to i32), { 0, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 2, 12, 13, 14, 15, 16, 17 }
}

define i32 @function_121fa() local_unnamed_addr {
dec_label_pc_121fa:
  %v0_121fa = load i32, i32* @ebp, align 4
  %v1_121fa = add i32 %v0_121fa, -28
  %v2_121fa = inttoptr i32 %v1_121fa to i32*
  %v3_121fa = load i32, i32* %v2_121fa, align 4
  %v1_121fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_121fd = xor i32 %v1_121fd, %v3_121fa
  %v3_121fd = icmp eq i32 %v2_121fd, 0
  store i32 %v2_121fd, i32* @eax, align 4
  br i1 %v3_121fd, label %bb, label %dec_label_pc_12206

bb:                                               ; preds = %dec_label_pc_121fa
  %v1_12204 = call i32 @function_1220b()
  br label %dec_label_pc_12206

dec_label_pc_12206:                               ; preds = %bb, %dec_label_pc_121fa
  %v2_12204 = phi i32 [ %v1_12204, %bb ], [ %v2_121fd, %dec_label_pc_121fa ]
  ret i32 %v2_12204
}

define i32 @function_1220b() local_unnamed_addr {
dec_label_pc_1220b:
  %v0_12212 = load i32, i32* @eax, align 4
  ret i32 %v0_12212
}

define i32 @_ZSt10_ConstructI12CDNSSeedDataS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12213:
  store i32 0, i32* @eax, align 4
  %v2_12241 = call i32 @function_1268d(i32 ptrtoint (i32* @global_var_8.883 to i32), i32 %arg1)
  %v1_12248 = icmp eq i32 %v2_12241, 0
  br i1 %v1_12248, label %bb, label %dec_label_pc_1224c

bb:                                               ; preds = %dec_label_pc_12213
  %v1_1224a = call i32 @function_12275()
  br label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %bb, %dec_label_pc_12213
  %v2_12256 = call i32 @unknown_1c531(i32 %v2_12241, i32 %arg2)
  %v0_1225b = call i32 @function_12275()
  ret i32 %v0_1225b

; uselistorder directives
  uselistorder i32 ()* @function_12275, { 1, 0 }
}

define i32 @function_12275() local_unnamed_addr {
dec_label_pc_12275:
  %v0_12275 = load i32, i32* @ebp, align 4
  %v1_12275 = add i32 %v0_12275, -28
  %v2_12275 = inttoptr i32 %v1_12275 to i32*
  %v3_12275 = load i32, i32* %v2_12275, align 4
  ret i32 %v3_12275
}

define i32 @function_1227e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1227e:
  %v0_1227e = load i32, i32* @ebp, align 4
  %v1_1227e = load i32, i32* @eax, align 4
  %v3_1227e = add i32 %v0_1227e, -24
  %v4_1227e = add i32 %v3_1227e, %v1_1227e
  %v5_1227e = inttoptr i32 %v4_1227e to i8*
  %v6_1227e = load i8, i8* %v5_1227e, align 1
  %v7_1227e = load i32, i32* @edx, align 4
  %v8_1227e = lshr i32 %v7_1227e, ptrtoint (i32* @global_var_8.883 to i32)
  %v9_1227e = trunc i32 %v8_1227e to i8
  %v10_1227e = add i8 %v9_1227e, %v6_1227e
  store i8 %v10_1227e, i8* %v5_1227e, align 1
  %v31_1227e = load i32, i32* @eax, align 4
  ret i32 %v31_1227e

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8.883 to i32), { 2, 1, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 81, 83, 84, 85, 86, 87, 88, 89 }
  uselistorder i32* @edx, { 7, 29, 4, 0, 9, 10, 1, 5, 6, 11, 16, 18, 21, 40, 47, 41, 12, 28, 13, 19, 20, 42, 30, 24, 36, 37, 32, 33, 38, 39, 49, 51, 52, 53, 2, 3, 26, 8, 34, 35, 31, 14, 15, 17, 43, 22, 44, 45, 23, 55, 48, 56, 25, 57, 27, 54, 46, 50, 58 }
  uselistorder i32 -24, { 6, 7, 5, 18, 14, 15, 16, 8, 9, 19, 21, 22, 11, 12, 13, 10, 0, 1, 17, 20, 25, 2, 23, 24, 3, 26, 4 }
}

define i32 @function_12285(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12285:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_12285 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12285 = add i32 %v0_12285, 1583037636
  %v2_12285 = inttoptr i32 %v1_12285 to i32*
  %v3_12285 = load i32, i32* %v2_12285, align 4
  %v4_12285 = add i32 %v3_12285, 1
  store i32 %v4_12285, i32* %v2_12285, align 4
  %v0_1228d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1228d
}

define i32 @_ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1228e:
  ret i32 %arg3
}

define i32 @function_122a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_122a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_122a8 = load i32, i32* @eax, align 4
  %v1_122a8 = trunc i32 %v0_122a8 to i8
  %v2_122a8 = load i1, i1* @cf, align 1
  %v3_122a8 = zext i1 %v2_122a8 to i8
  %v4_122a8 = add i8 %v3_122a8, %v1_122a8
  %v22_122a8 = zext i8 %v4_122a8 to i32
  %v24_122a8 = and i32 %v0_122a8, -256
  %v25_122a8 = or i32 %v22_122a8, %v24_122a8
  store i32 %v25_122a8, i32* %eax.global-to-local, align 4
  %v1_122aa = inttoptr i32 %v25_122a8 to i8*
  %v2_122aa = load i8, i8* %v1_122aa, align 1
  %v5_122aa = add i8 %v2_122aa, %v4_122a8
  store i8 %v5_122aa, i8* %v1_122aa, align 1
  %v0_122ac = load i32, i32* %eax.global-to-local, align 4
  %v1_122ac = load i32, i32* @ebp, align 4
  %v2_122ac = add i32 %v1_122ac, -12
  %v3_122ac = inttoptr i32 %v2_122ac to i32*
  store i32 %v0_122ac, i32* %v3_122ac, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_122b1 = load i32, i32* @ebp, align 4
  %v1_122b1 = add i32 %v0_122b1, -36
  %v2_122b1 = inttoptr i32 %v1_122b1 to i32*
  %v3_122b1 = load i32, i32* %v2_122b1, align 4
  store i32 %v3_122b1, i32* %eax.global-to-local, align 4
  %v1_122b4 = inttoptr i32 %v3_122b1 to i8*
  %v2_122b4 = load i8, i8* %v1_122b4, align 1
  %v3_122b4 = zext i8 %v2_122b4 to i32
  store i32 %v3_122b4, i32* %eax.global-to-local, align 4
  %v3_122b7 = add i32 %v0_122b1, -13
  %v4_122b7 = inttoptr i32 %v3_122b7 to i8*
  store i8 %v2_122b4, i8* %v4_122b7, align 1
  %v0_122ba = load i32, i32* @ebp, align 4
  %v1_122ba = add i32 %v0_122ba, -32
  %v2_122ba = inttoptr i32 %v1_122ba to i32*
  %v3_122ba = load i32, i32* %v2_122ba, align 4
  %v1_122bd = add i32 %v0_122ba, -28
  %v2_122bd = inttoptr i32 %v1_122bd to i32*
  %v3_122bd = load i32, i32* %v2_122bd, align 4
  %v2_122c2 = sub i32 %v3_122ba, %v3_122bd
  store i32 %v2_122c2, i32* %eax.global-to-local, align 4
  %v1_122c8 = add i32 %v0_122ba, -13
  %v2_122c8 = inttoptr i32 %v1_122c8 to i8*
  %v3_122c8 = load i8, i8* %v2_122c8, align 1
  %v4_122c8 = zext i8 %v3_122c8 to i32
  store i32 %v4_122c8, i32* %eax.global-to-local, align 4
  %v3_122d4 = load i32, i32* %v2_122bd, align 4
  store i32 %v3_122d4, i32* %eax.global-to-local, align 4
  ret i32 %v3_122d4

; uselistorder directives
  uselistorder i32 -32, { 17, 26, 27, 28, 29, 18, 32, 33, 34, 35, 36, 19, 37, 38, 76, 23, 21, 30, 31, 22, 39, 40, 41, 24, 25, 43, 64, 85, 86, 1, 2, 87, 102, 44, 78, 47, 48, 88, 89, 49, 50, 79, 90, 82, 54, 55, 42, 3, 14, 91, 4, 58, 5, 59, 45, 46, 51, 52, 60, 61, 6, 7, 8, 9, 10, 11, 53, 57, 56, 12, 13, 68, 84, 67, 69, 70, 71, 72, 73, 74, 75, 65, 66, 77, 99, 100, 95, 15, 16, 96, 97, 20, 98, 0, 103, 104, 80, 92, 81, 83, 93, 94, 105, 62, 63, 101 }
  uselistorder i32 -13, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 -36, { 14, 3, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 15, 28, 56, 17, 29, 44, 61, 62, 63, 64, 78, 58, 32, 33, 16, 59, 65, 60, 30, 66, 31, 34, 35, 36, 37, 38, 67, 4, 68, 42, 5, 6, 39, 41, 7, 8, 9, 10, 11, 12, 13, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 45, 57, 75, 72, 73, 74, 69, 40, 70, 71, 43, 0, 76, 77 }
  uselistorder i1 false, { 116, 56, 117, 48, 110, 111, 57, 112, 49, 2, 3, 4, 5, 145, 58, 146, 50, 6, 7, 8, 9, 113, 114, 59, 115, 51, 10, 11, 12, 13, 157, 60, 158, 52, 14, 15, 16, 17, 118, 61, 119, 53, 18, 19, 20, 21, 120, 62, 121, 22, 23, 24, 122, 63, 123, 54, 25, 26, 27, 28, 159, 160, 64, 161, 162, 163, 164, 165, 166, 65, 167, 124, 29, 168, 66, 169, 125, 30, 170, 171, 172, 173, 126, 67, 127, 31, 32, 33, 147, 148, 149, 203, 204, 205, 150, 151, 128, 68, 129, 34, 35, 36, 69, 130, 70, 131, 37, 38, 39, 175, 132, 143, 144, 197, 198, 199, 71, 72, 214, 215, 216, 217, 241, 242, 243, 181, 182, 183, 184, 185, 186, 73, 221, 222, 74, 223, 224, 207, 208, 209, 210, 133, 75, 134, 40, 41, 42, 174, 76, 154, 155, 156, 135, 136, 137, 138, 77, 139, 43, 44, 45, 78, 140, 141, 79, 177, 80, 178, 179, 180, 81, 187, 82, 83, 142, 84, 188, 85, 189, 202, 86, 226, 227, 87, 108, 231, 232, 152, 46, 153, 0, 195, 104, 105, 196, 88, 89, 90, 91, 244, 106, 47, 176, 92, 190, 93, 225, 191, 107, 192, 94, 193, 95, 194, 96, 211, 212, 213, 200, 97, 201, 206, 236, 237, 98, 99, 218, 100, 219, 220, 228, 239, 101, 240, 238, 229, 55, 230, 109, 233, 234, 235, 102, 103, 245, 246, 247, 1, 248, 249, 250, 251 }
  uselistorder i1* @cf, { 1, 8, 3, 5, 18, 19, 20, 21, 28, 26, 2, 0, 24, 9, 4, 10, 6, 22, 23, 7, 29, 25, 11, 27, 12, 13, 14, 15, 16, 17, 30, 31 }
}

define i32 @function_122f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122f0:
  %v0_122f1 = load i32, i32* @eax, align 4
  ret i32 %v0_122f1
}

define i32 @_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_122f2:
  %v1_1231d = call i32 @unknown_2019e(i32 %arg3)
  %v1_1232a = call i32 @unknown_234dc(i32 %arg2)
  ret i32 %v1_1232a
}

define i32 @function_12332(i32 %arg1) local_unnamed_addr {
dec_label_pc_12332:
  %v0_12332 = load i32, i32* @ebp, align 4
  %v1_12337 = call i32 @unknown_234dc(i32 ptrtoint (i32* @0 to i32))
  %v0_1233c = load i32, i32* @esi, align 4
  %v0_12340 = load i32, i32* @ebx, align 4
  %v3_12347 = call i32 @unknown_200ee(i32 %v1_12337, i32 %v0_12340, i32 %v0_1233c)
  store i32 %v3_12347, i32* @eax, align 4
  %v1_1234c = add i32 %v0_12332, -11
  %v2_1234c = inttoptr i32 %v1_1234c to i32*
  %v3_1234c = load i32, i32* %v2_1234c, align 4
  %v1_1234f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1234f = icmp eq i32 %v1_1234f, %v3_1234c
  br i1 %v3_1234f, label %bb, label %dec_label_pc_12358

bb:                                               ; preds = %dec_label_pc_12332
  %v1_12356 = call i32 @function_1235d()
  br label %dec_label_pc_12358

dec_label_pc_12358:                               ; preds = %bb, %dec_label_pc_12332
  %v2_12356 = phi i32 [ %v1_12356, %bb ], [ %v3_12347, %dec_label_pc_12332 ]
  ret i32 %v2_12356

; uselistorder directives
  uselistorder i32* @esi, { 4, 5, 14, 10, 11, 12, 6, 7, 8, 9, 13, 0, 1, 2, 3 }
}

define i32 @function_1235d() local_unnamed_addr {
dec_label_pc_1235d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1235f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1235f:
  %v0_1235f = load i32, i32* @ebx, align 4
  %v1_1235f = add i32 %v0_1235f, 94
  %v2_1235f = inttoptr i32 %v1_1235f to i8*
  %v3_1235f = load i8, i8* %v2_1235f, align 1
  %v5_1235f = trunc i32 %v0_1235f to i8
  %v6_1235f = xor i8 %v3_1235f, %v5_1235f
  store i8 %v6_1235f, i8* %v2_1235f, align 1
  store i32 %arg1, i32* @ebp, align 4
  %v0_12363 = load i32, i32* @eax, align 4
  ret i32 %v0_12363

; uselistorder directives
  uselistorder i32* @ebx, { 43, 44, 52, 58, 59, 45, 60, 93, 95, 96, 55, 89, 56, 65, 38, 66, 85, 67, 102, 103, 133, 61, 62, 112, 113, 104, 105, 57, 68, 69, 70, 71, 72, 106, 107, 76, 39, 40, 41, 42, 82, 136, 137, 138, 77, 98, 90, 91, 92, 83, 101, 114, 111, 108, 115, 116, 53, 54, 46, 47, 48, 49, 50, 51, 84, 94, 4, 63, 64, 86, 87, 88, 129, 130, 131, 132, 73, 74, 75, 97, 109, 110, 78, 79, 80, 81, 99, 25, 5, 6, 134, 117, 118, 8, 7, 9, 119, 35, 10, 120, 11, 12, 19, 13, 14, 15, 16, 17, 18, 20, 121, 122, 123, 124, 125, 126, 127, 21, 22, 23, 0, 24, 1, 100, 26, 2, 27, 3, 28, 29, 30, 31, 32, 33, 34, 36, 128, 37, 135 }
}

declare i32 @unknown_12364(i32, i32) local_unnamed_addr

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_12384:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12370_type* @global_var_12370.923 to i32), i32* %arg1, align 4
  %v1_123aa = call i32 @unknown_138ca(i32 %tmp99)
  %v1_123b9 = call i32 @function_123c6()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_12370_type* @global_var_12370.923 to i32), { 1, 0 }
}

define i32 @function_123c6() local_unnamed_addr {
dec_label_pc_123c6:
  %v0_123c6 = load i32, i32* @ebp, align 4
  %v1_123c6 = add i32 %v0_123c6, -12
  %v2_123c6 = inttoptr i32 %v1_123c6 to i32*
  %v3_123c6 = load i32, i32* %v2_123c6, align 4
  %v1_123c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_123c9 = xor i32 %v1_123c9, %v3_123c6
  %v3_123c9 = icmp eq i32 %v2_123c9, 0
  store i32 %v2_123c9, i32* @eax, align 4
  br i1 %v3_123c9, label %bb, label %dec_label_pc_123d2

bb:                                               ; preds = %dec_label_pc_123c6
  %v1_123d0 = call i32 @function_123d7()
  br label %dec_label_pc_123d2

dec_label_pc_123d2:                               ; preds = %bb, %dec_label_pc_123c6
  %v2_123d0 = phi i32 [ %v1_123d0, %bb ], [ %v2_123c9, %dec_label_pc_123c6 ]
  ret i32 %v2_123d0
}

define i32 @function_123d7() local_unnamed_addr {
dec_label_pc_123d7:
  %v0_123d8 = load i32, i32* @eax, align 4
  ret i32 %v0_123d8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32 %arg1) {
dec_label_pc_123da:
  %v1_123f7 = call i32 @unknown_2475e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_12400(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12400:
  %v0_12400 = load i32, i32* @eax, align 4
  %v2_12400 = add i32 %v0_12400, 36
  %v16_12400 = and i32 %v2_12400, 255
  %v18_12400 = and i32 %v0_12400, -256
  %v19_12400 = or i32 %v16_12400, %v18_12400
  ret i32 %v19_12400

; uselistorder directives
  uselistorder i32 %v0_12400, { 1, 0 }
  uselistorder i32 255, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 17, 18, 19 }
  uselistorder i32 36, { 0, 1, 8, 9, 6, 2, 10, 18, 3, 7, 11, 12, 13, 14, 15, 16, 17, 19, 4, 5 }
}

define i32 @function_12417() local_unnamed_addr {
dec_label_pc_12417:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12417 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12417 = add i32 %v0_12417, -1
  store i32 %v1_12417, i32* %ecx.global-to-local, align 4
  %v0_12419 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12419
}

declare i32 @unknown_124fc(i32) local_unnamed_addr

define i32 @function_12529(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12529:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12612(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12612:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1268d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1268d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_126d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12861(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12861:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN14CRegTestParamsD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12898:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_12428_type* @global_var_12428.910 to i32), i32* %arg1, align 4
  %v1_128be = call i32 @unknown_17d84(i32 %tmp100)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_128cf

bb:                                               ; preds = %dec_label_pc_12898
  %v1_128cd = call i32 @function_128d4()
  br label %dec_label_pc_128cf

dec_label_pc_128cf:                               ; preds = %bb, %dec_label_pc_12898
  %v2_128cd = phi i32 [ %v1_128cd, %bb ], [ 0, %dec_label_pc_12898 ]
  ret i32 %v2_128cd

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_12428_type* @global_var_12428.910 to i32), { 1, 0 }
}

define i32 @function_128d4() local_unnamed_addr {
dec_label_pc_128d4:
  %v0_128d5 = load i32, i32* @eax, align 4
  ret i32 %v0_128d5
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_128d6:
  ret i32 %arg1
}

define i32 @function_128e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128e1:
  %v0_128e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_128e8 = load i32, i32* @ebp, align 4
  %v2_128e8 = add i32 %v1_128e8, -12
  %v3_128e8 = inttoptr i32 %v2_128e8 to i32*
  store i32 %v0_128e3, i32* %v3_128e8, align 4
  %v0_128ed = load i32, i32* @ebp, align 4
  %v1_128ed = add i32 %v0_128ed, -28
  %v2_128ed = inttoptr i32 %v1_128ed to i32*
  %v3_128ed = load i32, i32* %v2_128ed, align 4
  %v1_128f0 = add i32 %v3_128ed, ptrtoint (i32* @global_var_c.884 to i32)
  %v2_128f0 = inttoptr i32 %v1_128f0 to i32*
  %v3_128f0 = load i32, i32* %v2_128f0, align 4
  %v1_128f6 = call i32 @unknown_20383(i32 %v3_128f0)
  %v0_128fb = load i32, i32* @ebp, align 4
  %v1_128fb = add i32 %v0_128fb, -12
  %v2_128fb = inttoptr i32 %v1_128fb to i32*
  %v3_128fb = load i32, i32* %v2_128fb, align 4
  %v1_128fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_128fe = xor i32 %v1_128fe, %v3_128fb
  %v3_128fe = icmp eq i32 %v2_128fe, 0
  store i32 %v2_128fe, i32* @eax, align 4
  br i1 %v3_128fe, label %bb, label %dec_label_pc_12907

bb:                                               ; preds = %dec_label_pc_128e1
  %v1_12905 = call i32 @function_1290c()
  br label %dec_label_pc_12907

dec_label_pc_12907:                               ; preds = %bb, %dec_label_pc_128e1
  %v2_12905 = phi i32 [ %v1_12905, %bb ], [ %v2_128fe, %dec_label_pc_128e1 ]
  ret i32 %v2_12905

; uselistorder directives
  uselistorder i32 -28, { 53, 38, 19, 20, 21, 22, 23, 57, 55, 56, 60, 58, 59, 63, 61, 62, 64, 39, 70, 68, 69, 71, 72, 73, 74, 75, 35, 76, 40, 77, 78, 141, 48, 43, 65, 66, 67, 44, 45, 46, 47, 79, 49, 50, 51, 84, 80, 29, 30, 85, 86, 121, 209, 210, 206, 160, 161, 162, 211, 212, 88, 87, 144, 96, 97, 98, 99, 100, 167, 163, 101, 102, 103, 104, 105, 41, 145, 168, 169, 170, 171, 172, 173, 174, 149, 108, 109, 214, 83, 81, 82, 52, 110, 187, 175, 176, 164, 113, 114, 24, 25, 26, 27, 28, 89, 90, 91, 92, 93, 94, 95, 106, 177, 31, 107, 112, 111, 195, 32, 33, 34, 152, 153, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 138, 139, 124, 125, 126, 142, 196, 197, 117, 0, 202, 203, 1, 118, 119, 2, 36, 165, 130, 131, 154, 180, 181, 182, 183, 184, 185, 186, 37, 188, 190, 178, 166, 191, 192, 189, 54, 42, 193, 3, 207, 208, 120, 4, 5, 6, 143, 123, 122, 213, 146, 179, 147, 148, 150, 151, 215, 216, 217, 218, 219, 220, 221, 115, 116, 7, 8, 194, 9, 10, 11, 155, 156, 157, 158, 159, 12, 13, 198, 199, 200, 201, 14, 15, 204, 205, 16, 17, 18 }
}

define i32 @function_1290c() local_unnamed_addr {
dec_label_pc_1290c:
  %v0_1290d = load i32, i32* @eax, align 4
  ret i32 %v0_1290d
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_1290e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1293c

bb:                                               ; preds = %dec_label_pc_1290e
  %v3_1293a = call i32 @function_12941(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %bb, %dec_label_pc_1290e
  %v4_1293a = phi i32 [ %v3_1293a, %bb ], [ 0, %dec_label_pc_1290e ]
  ret i32 %v4_1293a

; uselistorder directives
  uselistorder i1 true, {}
}

define i32 @function_12941(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12941:
  %v0_12942 = load i32, i32* @eax, align 4
  ret i32 %v0_12942
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12944:
  %v4_12944 = sub i32 %arg1, ptrtoint (i32* @global_var_18.885 to i32)
  %v1_12949 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.878(i32 %v4_12944)
  ret i32 %v1_12949

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.878, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.878(i32 %arg1) {
dec_label_pc_1294c:
  %v0_1295a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1295a
}

define i32 @function_12961(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12961:
  %v0_12961 = load i32, i32* @ebp, align 4
  %v1_12961 = add i32 %v0_12961, 1
  store i32 %v1_12961, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @ebp, { 284, 285, 286, 287, 288, 118, 240, 241, 242, 243, 244, 294, 119, 120, 124, 121, 122, 123, 125, 126, 127, 200, 128, 298, 295, 296, 297, 299, 300, 301, 302, 306, 303, 304, 305, 310, 307, 308, 309, 311, 312, 313, 317, 318, 319, 320, 321, 322, 261, 245, 246, 332, 333, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 129, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 233, 234, 235, 314, 315, 316, 356, 357, 358, 247, 248, 249, 250, 251, 615, 616, 617, 359, 360, 361, 362, 636, 637, 638, 639, 640, 641, 642, 274, 275, 276, 277, 262, 263, 264, 265, 266, 267, 268, 269, 323, 324, 325, 326, 327, 270, 271, 272, 273, 363, 364, 365, 366, 367, 368, 278, 279, 280, 379, 380, 381, 369, 370, 371, 382, 383, 384, 194, 195, 196, 156, 157, 158, 159, 160, 161, 162, 163, 385, 386, 387, 388, 389, 564, 565, 554, 555, 556, 557, 558, 559, 560, 22, 23, 894, 895, 896, 390, 391, 392, 877, 878, 395, 696, 0, 697, 698, 699, 700, 701, 702, 396, 130, 131, 703, 704, 705, 706, 707, 708, 709, 897, 898, 899, 900, 901, 902, 903, 904, 398, 399, 400, 393, 394, 655, 656, 657, 658, 659, 415, 416, 417, 418, 419, 420, 421, 422, 423, 732, 710, 711, 712, 713, 1, 424, 425, 426, 427, 428, 429, 430, 431, 2, 432, 252, 253, 254, 662, 663, 134, 3, 733, 734, 735, 736, 737, 738, 739, 740, 4, 741, 742, 743, 744, 745, 746, 747, 670, 671, 672, 673, 674, 675, 676, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 912, 913, 375, 376, 372, 373, 374, 377, 378, 132, 281, 282, 283, 489, 490, 491, 492, 236, 237, 807, 808, 809, 810, 748, 749, 750, 751, 926, 927, 292, 721, 722, 502, 503, 504, 505, 506, 133, 507, 508, 509, 510, 5, 135, 136, 137, 138, 139, 140, 141, 142, 511, 512, 513, 514, 6, 401, 402, 403, 404, 405, 406, 407, 408, 7, 409, 410, 411, 412, 413, 414, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 752, 753, 754, 755, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 756, 164, 165, 166, 515, 516, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 482, 483, 484, 197, 198, 199, 531, 532, 8, 458, 459, 460, 461, 493, 494, 495, 498, 499, 500, 501, 496, 497, 851, 852, 853, 533, 534, 535, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 680, 681, 682, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 683, 684, 685, 686, 687, 688, 689, 601, 602, 603, 574, 575, 576, 577, 578, 604, 9, 605, 606, 607, 608, 10, 609, 610, 611, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 11, 634, 635, 12, 631, 632, 567, 568, 569, 570, 571, 572, 13, 573, 643, 644, 645, 646, 858, 859, 860, 861, 862, 660, 536, 869, 870, 871, 537, 538, 539, 517, 518, 540, 541, 542, 543, 544, 545, 546, 24, 25, 238, 723, 724, 725, 612, 613, 690, 778, 779, 780, 726, 727, 728, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 239, 813, 814, 821, 822, 757, 758, 729, 730, 731, 815, 816, 823, 824, 825, 826, 827, 828, 817, 818, 819, 820, 289, 290, 291, 43, 44, 45, 256, 257, 258, 259, 260, 838, 839, 840, 841, 842, 255, 27, 26, 28, 879, 880, 881, 882, 519, 293, 14, 548, 549, 550, 551, 547, 552, 553, 29, 30, 647, 31, 648, 649, 651, 652, 566, 561, 562, 563, 905, 906, 907, 908, 909, 664, 665, 714, 715, 716, 718, 717, 719, 720, 397, 759, 760, 761, 762, 462, 463, 464, 465, 466, 654, 467, 468, 469, 470, 471, 15, 472, 473, 763, 764, 765, 666, 667, 668, 677, 678, 766, 767, 768, 769, 770, 771, 772, 914, 915, 916, 917, 918, 488, 614, 32, 33, 811, 812, 773, 774, 775, 776, 777, 919, 920, 921, 922, 923, 16, 520, 521, 522, 17, 18, 524, 525, 526, 523, 527, 528, 529, 530, 829, 830, 34, 35, 36, 37, 38, 39, 40, 41, 42, 831, 832, 833, 834, 835, 836, 837, 46, 47, 843, 844, 83, 80, 81, 76, 48, 845, 49, 50, 679, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 846, 847, 848, 849, 850, 856, 857, 854, 855, 89, 90, 91, 653, 92, 19, 93, 691, 20, 692, 693, 694, 695, 95, 21, 94, 96, 97, 650, 98, 863, 864, 865, 866, 867, 868, 661, 99, 100, 872, 873, 874, 875, 669, 876, 101, 102, 103, 803, 804, 805, 806, 104, 105, 108, 106, 107, 883, 885, 886, 887, 888, 109, 890, 891, 892, 889, 110, 111, 112, 113, 884, 893, 114, 115, 910, 911, 924, 116, 117, 925 }
}

define i32 @function_12970() local_unnamed_addr {
dec_label_pc_12970:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12970 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12970 = add i32 %v0_12970, -465204285
  %v2_12970 = inttoptr i32 %v1_12970 to i32*
  %v3_12970 = load i32, i32* %v2_12970, align 4
  %v4_12970 = add i32 %v3_12970, -1
  store i32 %v4_12970, i32* %v2_12970, align 4
  %v0_12976 = load i32, i32* %eax.global-to-local, align 4
  %v0_1297a = load i32, i32* %ebx.global-to-local, align 4
  %v2_1297d = call i32 @unknown_18aba(i32 %v0_1297a, i32 %v0_12976)
  store i32 %v0_1297a, i32* %eax.global-to-local, align 4
  %v1_12984 = icmp eq i32 %v0_1297a, 0
  br i1 %v1_12984, label %dec_label_pc_12992, label %dec_label_pc_12988

dec_label_pc_12988:                               ; preds = %dec_label_pc_12970
  %v1_12988 = add i32 %v0_1297a, ptrtoint (i32* @global_var_18.885 to i32)
  br label %dec_label_pc_12992

dec_label_pc_12992:                               ; preds = %dec_label_pc_12970, %dec_label_pc_12988
  %storemerge = phi i32 [ %v1_12988, %dec_label_pc_12988 ], [ 0, %dec_label_pc_12970 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_12992 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12992 = add i32 %v0_12992, -12
  %v2_12992 = inttoptr i32 %v1_12992 to i32*
  %v3_12992 = load i32, i32* %v2_12992, align 4
  %v1_12995 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12995 = icmp eq i32 %v1_12995, %v3_12992
  br i1 %v3_12995, label %bb, label %dec_label_pc_1299e

bb:                                               ; preds = %dec_label_pc_12992
  %v1_1299c = call i32 @function_129b9()
  store i32 %v1_1299c, i32* @eax, align 4
  br label %dec_label_pc_1299e

dec_label_pc_1299e:                               ; preds = %bb, %dec_label_pc_12992
  %v0_1299e = call i32 @function_129b4()
  store i32 %v0_1299e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1299e

; uselistorder directives
  uselistorder i32 %v0_1297a, { 2, 1, 0, 3 }
  uselistorder i32 20, { 22, 23, 19, 20, 21, 42, 32, 33, 34, 45, 28, 24, 25, 26, 36, 13, 37, 35, 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 58, 38, 47, 27, 50, 30, 29, 31, 12, 48, 54, 55, 56, 39, 40, 41, 51, 16, 17, 43, 44, 49, 18, 46, 52, 53, 57, 59, 14, 15 }
  uselistorder i32* inttoptr (i32 20 to i32*), { 0, 16, 58, 59, 17, 46, 18, 19, 20, 65, 66, 67, 68, 70, 137, 48, 73, 74, 75, 76, 77, 21, 78, 79, 80, 81, 82, 84, 43, 44, 69, 85, 86, 49, 154, 87, 159, 54, 55, 71, 72, 22, 88, 89, 90, 56, 93, 91, 94, 95, 23, 96, 37, 38, 35, 98, 99, 100, 101, 151, 152, 148, 1, 220, 104, 214, 24, 106, 177, 178, 25, 179, 221, 110, 105, 26, 164, 165, 112, 186, 180, 113, 50, 169, 27, 32, 187, 188, 172, 117, 118, 119, 120, 121, 122, 28, 227, 92, 29, 57, 124, 30, 125, 126, 31, 195, 196, 62, 182, 107, 132, 133, 134, 33, 135, 136, 34, 138, 139, 108, 111, 114, 189, 36, 39, 115, 127, 40, 130, 131, 128, 41, 206, 207, 144, 174, 155, 156, 158, 157, 160, 42, 208, 209, 166, 2, 212, 145, 3, 4, 183, 153, 175, 193, 45, 197, 200, 201, 190, 184, 185, 198, 202, 199, 60, 61, 47, 6, 52, 53, 204, 51, 129, 215, 140, 63, 141, 64, 146, 147, 83, 161, 167, 97, 102, 149, 103, 222, 223, 5, 181, 109, 191, 170, 116, 192, 225, 228, 229, 123, 230, 231, 142, 143, 203, 205, 7, 150, 163, 176, 8, 9, 162, 210, 211, 168, 213, 171, 173, 194, 10, 217, 218, 11, 12, 13, 14, 216, 219, 224, 226, 232, 233, 234, 235, 236, 15, 237 }
  uselistorder i32 -12, { 1, 36, 37, 11, 24, 12, 41, 42, 43, 44, 45, 47, 48, 25, 51, 52, 53, 54, 55, 56, 13, 57, 58, 59, 60, 61, 22, 46, 62, 63, 26, 27, 123, 64, 65, 128, 129, 32, 31, 49, 50, 66, 67, 68, 33, 73, 69, 70, 74, 18, 19, 20, 16, 17, 75, 76, 77, 78, 119, 120, 115, 116, 2, 193, 79, 189, 81, 147, 148, 149, 150, 194, 195, 83, 84, 80, 134, 135, 87, 88, 157, 151, 89, 28, 138, 14, 158, 159, 160, 141, 142, 93, 94, 95, 96, 97, 200, 71, 72, 34, 35, 99, 100, 101, 23, 166, 167, 39, 153, 105, 106, 107, 15, 108, 85, 86, 90, 161, 21, 91, 92, 102, 104, 103, 178, 179, 111, 143, 124, 125, 127, 126, 130, 180, 181, 182, 136, 3, 185, 186, 112, 4, 121, 144, 164, 168, 172, 162, 154, 155, 156, 169, 170, 173, 171, 38, 5, 30, 175, 176, 29, 109, 40, 113, 114, 131, 117, 118, 196, 197, 152, 82, 139, 163, 201, 202, 98, 122, 203, 110, 174, 177, 6, 133, 145, 146, 7, 132, 183, 184, 137, 187, 188, 140, 165, 8, 190, 191, 9, 10, 192, 198, 199, 204, 0, 205 }
  uselistorder i32 -1, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 5, 95, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 96, 49, 50, 51, 52, 53, 54, 55, 97, 56, 57, 58, 0, 59, 60, 61, 62, 63, 98, 99, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 101, 102, 74, 100, 1, 2, 75, 76, 77, 3, 4, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 6, 103, 89, 90, 91, 92, 93, 104, 94 }
  uselistorder label %dec_label_pc_12992, { 1, 0 }
}

define i32 @function_129b4() local_unnamed_addr {
dec_label_pc_129b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_129b9() local_unnamed_addr {
dec_label_pc_129b9:
  %v0_129bf = load i32, i32* @eax, align 4
  ret i32 %v0_129bf
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_129c0:
  %v4_129c0 = sub i32 %arg1, ptrtoint (i32* @global_var_18.885 to i32)
  %v1_129c5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_129c0)
  ret i32 %v1_129c5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18.885 to i32), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_129c8:
  ret i32 0
}

define i32 @function_129e2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_129e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_129e2 = load i32, i32* @eax, align 4
  %v1_129e2 = trunc i32 %v0_129e2 to i8
  %v2_129e2 = add i8 %v1_129e2, 36
  %v6_129e2 = icmp ugt i8 %v1_129e2, -37
  %v3_129e4 = zext i1 %v6_129e2 to i8
  %v4_129e4 = add i8 %v3_129e4, %v2_129e2
  %v29_129e4 = zext i8 %v4_129e4 to i32
  %v31_129e4 = and i32 %v0_129e2, -256
  %v32_129e4 = or i32 %v29_129e4, %v31_129e4
  store i32 %v32_129e4, i32* %eax.global-to-local, align 4
  %v1_129e6 = inttoptr i32 %v32_129e4 to i8*
  %v2_129e6 = load i8, i8* %v1_129e6, align 1
  %v5_129e6 = add i8 %v2_129e6, %v4_129e4
  store i8 %v5_129e6, i8* %v1_129e6, align 1
  %v22_129e6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_129e6

; uselistorder directives
  uselistorder i32 -256, { 7, 35, 28, 15, 16, 10, 36, 37, 38, 40, 29, 53, 31, 41, 17, 25, 26, 50, 18, 42, 19, 59, 76, 45, 61, 62, 57, 20, 33, 21, 22, 23, 24, 43, 44, 11, 46, 79, 27, 71, 56, 0, 63, 64, 30, 66, 67, 32, 83, 34, 39, 54, 55, 77, 60, 12, 51, 1, 47, 48, 49, 68, 69, 58, 52, 2, 8, 72, 6, 13, 14, 73, 65, 74, 75, 9, 78, 70, 80, 3, 81, 4, 82, 5 }
}

define i32 @function_129ee() local_unnamed_addr {
dec_label_pc_129ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_129ee = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_129ee

; uselistorder directives
  uselistorder i32 1, { 155, 54, 158, 157, 156, 159, 724, 160, 161, 45, 696, 29, 30, 716, 128, 697, 162, 163, 557, 46, 558, 494, 559, 698, 34, 32, 31, 33, 164, 165, 727, 55, 56, 57, 495, 166, 561, 560, 167, 563, 562, 58, 59, 496, 564, 497, 51, 168, 60, 169, 170, 171, 718, 728, 565, 527, 528, 47, 48, 529, 745, 172, 173, 566, 482, 746, 96, 99, 97, 98, 530, 699, 35, 36, 722, 91, 90, 92, 93, 94, 531, 174, 175, 89, 176, 177, 4, 5, 62, 61, 730, 498, 700, 178, 179, 180, 717, 41, 39, 40, 499, 500, 501, 502, 85, 86, 87, 88, 503, 701, 181, 182, 183, 731, 567, 569, 568, 504, 570, 184, 185, 186, 187, 63, 49, 64, 188, 189, 750, 111, 112, 113, 114, 532, 190, 191, 192, 572, 571, 193, 770, 136, 137, 138, 194, 195, 574, 573, 196, 489, 488, 70, 71, 69, 197, 734, 72, 73, 74, 508, 509, 484, 50, 753, 754, 115, 116, 117, 749, 103, 104, 105, 106, 510, 198, 199, 81, 200, 201, 202, 203, 511, 82, 204, 205, 139, 206, 207, 208, 52, 53, 512, 209, 210, 211, 212, 575, 577, 576, 578, 580, 579, 145, 213, 777, 582, 581, 146, 584, 583, 147, 214, 215, 586, 585, 736, 216, 217, 218, 219, 737, 513, 476, 220, 221, 514, 515, 483, 732, 65, 68, 66, 67, 516, 77, 76, 78, 478, 477, 479, 222, 588, 587, 75, 223, 590, 589, 224, 225, 591, 480, 481, 702, 226, 227, 594, 593, 592, 228, 6, 229, 230, 600, 599, 598, 597, 596, 595, 79, 80, 517, 231, 232, 735, 518, 142, 7, 601, 233, 234, 235, 236, 43, 44, 42, 604, 603, 602, 237, 486, 487, 108, 744, 95, 605, 0, 100, 606, 238, 239, 607, 129, 240, 243, 242, 241, 244, 101, 245, 246, 247, 248, 249, 551, 610, 609, 608, 8, 250, 703, 704, 252, 251, 253, 254, 255, 118, 119, 552, 613, 612, 611, 150, 256, 257, 757, 124, 258, 259, 9, 120, 121, 519, 520, 260, 756, 614, 122, 615, 616, 617, 618, 725, 261, 262, 263, 721, 761, 127, 125, 126, 10, 264, 265, 11, 705, 267, 268, 266, 269, 270, 271, 719, 553, 720, 621, 620, 619, 554, 623, 622, 272, 625, 624, 627, 626, 723, 12, 144, 273, 274, 275, 276, 763, 148, 149, 277, 13, 743, 485, 546, 706, 707, 279, 278, 280, 726, 537, 14, 628, 468, 629, 630, 15, 631, 729, 538, 470, 281, 282, 283, 284, 16, 285, 286, 287, 288, 289, 747, 748, 633, 632, 17, 18, 290, 708, 291, 292, 102, 294, 295, 293, 296, 297, 152, 751, 752, 636, 635, 634, 298, 469, 471, 733, 637, 639, 638, 641, 640, 299, 643, 642, 19, 107, 644, 300, 301, 123, 645, 646, 143, 490, 302, 303, 304, 305, 306, 307, 755, 20, 521, 771, 540, 772, 141, 491, 308, 309, 310, 311, 467, 547, 548, 738, 83, 739, 740, 84, 523, 312, 313, 314, 315, 316, 741, 544, 545, 655, 654, 653, 652, 651, 650, 649, 648, 647, 543, 742, 317, 318, 319, 320, 321, 322, 323, 327, 326, 325, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 151, 140, 365, 368, 366, 367, 369, 656, 370, 371, 372, 21, 22, 373, 374, 375, 376, 377, 378, 109, 110, 524, 379, 380, 381, 383, 382, 384, 385, 388, 386, 387, 389, 533, 539, 23, 24, 1, 709, 394, 392, 391, 390, 393, 395, 396, 762, 525, 397, 398, 130, 131, 526, 399, 400, 401, 680, 679, 678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 681, 402, 403, 404, 684, 683, 682, 405, 406, 687, 686, 685, 407, 408, 409, 411, 410, 412, 710, 414, 413, 415, 764, 765, 688, 132, 134, 133, 711, 416, 417, 758, 759, 760, 689, 472, 712, 37, 38, 418, 419, 135, 766, 420, 421, 422, 713, 714, 424, 423, 425, 426, 427, 428, 429, 431, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 492, 441, 442, 443, 444, 445, 446, 505, 507, 506, 549, 690, 550, 447, 448, 25, 691, 26, 541, 542, 27, 449, 450, 767, 768, 769, 28, 451, 556, 694, 693, 692, 473, 452, 453, 454, 455, 154, 456, 457, 695, 773, 774, 534, 153, 775, 535, 474, 776, 536, 475, 493, 555, 458, 459, 460, 2, 461, 462, 463, 464, 715, 465, 466, 3, 522 }
}

declare i32 @unknown_12ba8(i32, i32) local_unnamed_addr

declare i32 @unknown_12c08(i32, i32) local_unnamed_addr

declare i32 @unknown_12d79(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_12e38(i32) local_unnamed_addr

declare i32 @unknown_12e67(i32, i32) local_unnamed_addr

declare i32 @unknown_12f96(i32) local_unnamed_addr

declare i32 @unknown_12f9e(i32) local_unnamed_addr

declare i32 @unknown_12fdd(i32, i32) local_unnamed_addr

declare i32 @unknown_1304b(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13104(i32) local_unnamed_addr

declare i32 @unknown_13143(i32, i32) local_unnamed_addr

declare i32 @unknown_13188(i32) local_unnamed_addr

declare i32 @unknown_1318d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_131b5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_131cb(i32, i32) local_unnamed_addr

declare i32 @unknown_131dc(i32, i32) local_unnamed_addr

declare i32 @unknown_13346(i32) local_unnamed_addr

declare i32 @unknown_1334c(i32) local_unnamed_addr

declare i32 @unknown_1336e(i32) local_unnamed_addr

declare i32 @unknown_13379(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_133a8(i32, i32) local_unnamed_addr

declare i32 @unknown_133fc(i32, i32) local_unnamed_addr

declare i32 @unknown_134d2(i32, i32) local_unnamed_addr

declare i32 @unknown_134e4(i32) local_unnamed_addr

declare i32 @unknown_13548(i32) local_unnamed_addr

declare i32 @unknown_13592(i32) local_unnamed_addr

declare i32 @unknown_135d2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13640(i32) local_unnamed_addr

declare i32 @unknown_13661(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13668(i32, i32) local_unnamed_addr

declare i32 @unknown_1366d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_136b2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1372a(i32, i32) local_unnamed_addr

declare i32 @unknown_13732(i32) local_unnamed_addr

declare i32 @unknown_1375f(i32) local_unnamed_addr

declare i32 @unknown_137bd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_137d2(i32, i32) local_unnamed_addr

declare i32 @unknown_13814(i32) local_unnamed_addr

declare i32 @unknown_1385c(i32) local_unnamed_addr

declare i32 @unknown_13891(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_138ca(i32) local_unnamed_addr

declare i32 @unknown_13952(i32) local_unnamed_addr

declare i32 @unknown_13969(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13a20(i32) local_unnamed_addr

declare i32 @unknown_13a4d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13a64(i32, i32) local_unnamed_addr

declare i32 @unknown_13a94(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13afa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13b21(i32) local_unnamed_addr

declare i32 @unknown_13b3f(i32) local_unnamed_addr

declare i32 @unknown_13b48(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13b9d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13bcc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13c0b(i32, i32) local_unnamed_addr

declare i32 @unknown_13d1c(i32, i32) local_unnamed_addr

declare i32 @unknown_13d32(i32) local_unnamed_addr

declare i32 @unknown_13d9e(i32, i32) local_unnamed_addr

declare i32 @unknown_13e36(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13f22(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13f28(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_13f76(i32) local_unnamed_addr

declare i32 @unknown_13fa3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1402a(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_14056(i32) local_unnamed_addr

declare i32 @unknown_140ab(i32) local_unnamed_addr

declare i32 @unknown_140b9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_14132(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_141b6(i32, i32) local_unnamed_addr

declare i32 @unknown_141f4(i32) local_unnamed_addr

declare i32 @unknown_142ad() local_unnamed_addr

declare i32 @unknown_1437a(i32) local_unnamed_addr

declare i32 @unknown_143a7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_14488(i32) local_unnamed_addr

declare i32 @unknown_144b5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_144d7(i32) local_unnamed_addr

declare i32 @unknown_145ce(i32) local_unnamed_addr

declare i32 @unknown_145f6(i32) local_unnamed_addr

declare i32 @unknown_14628(i32, i32) local_unnamed_addr

declare i32 @unknown_146b4(i32, i32) local_unnamed_addr

declare i32 @unknown_14736(i32, i32) local_unnamed_addr

declare i32 @unknown_147ae(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_148dc(i32, i32) local_unnamed_addr

declare i32 @unknown_14aa0(i32) local_unnamed_addr

declare i32 @unknown_14ab4(i32) local_unnamed_addr

declare i32 @unknown_14abc(i32) local_unnamed_addr

declare i32 @unknown_14b2e(i32, i32) local_unnamed_addr

declare i32 @unknown_14b5e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_14c6a(i32, i32) local_unnamed_addr

declare i32 @unknown_14d2c(i32) local_unnamed_addr

declare i32 @unknown_14db4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_14ec0(i32, i32) local_unnamed_addr

declare i32 @unknown_15008(i32, i32) local_unnamed_addr

declare i32 @unknown_15058(i32, i32) local_unnamed_addr

declare i32 @unknown_15110(i32, i32) local_unnamed_addr

declare i32 @unknown_15160(i32, i32) local_unnamed_addr

declare i32 @unknown_152b0(i32, i32) local_unnamed_addr

declare i32 @unknown_15310(i32, i32) local_unnamed_addr

declare i32 @unknown_1540c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_154f4(i32) local_unnamed_addr

declare i32 @unknown_15521(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1555a(i32, i32) local_unnamed_addr

declare i32 @unknown_156ae(i32) local_unnamed_addr

declare i32 @unknown_156ca(i32) local_unnamed_addr

declare i32 @unknown_1576c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_15934(i32) local_unnamed_addr

declare i32 @unknown_15950(i32) local_unnamed_addr

declare i32 @unknown_15ae8(i32) local_unnamed_addr

declare i32 @unknown_15af8(i32, i32) local_unnamed_addr

declare i32 @unknown_15b15(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_15b96(i32, i32) local_unnamed_addr

declare i32 @unknown_15c39(i32, i32) local_unnamed_addr

declare i32 @unknown_15c44(i32, i32) local_unnamed_addr

declare i32 @unknown_15c76(i32) local_unnamed_addr

declare i32 @unknown_15c92(i32) local_unnamed_addr

declare i32 @unknown_15cf2(i32, i32) local_unnamed_addr

declare i32 @unknown_15d34(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_15e3a(i32, i32) local_unnamed_addr

declare i32 @unknown_15e58(i32) local_unnamed_addr

declare i32 @unknown_15e9d(i32) local_unnamed_addr

declare i32 @unknown_15ed6(i32, i32) local_unnamed_addr

declare i32 @unknown_15efc(i32) local_unnamed_addr

declare i32 @unknown_15f18(i32) local_unnamed_addr

declare i32 @unknown_15f76(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_15fba(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_15ff6(i32) local_unnamed_addr

declare i32 @unknown_16054(i32) local_unnamed_addr

declare i32 @unknown_160c6(i32, i32) local_unnamed_addr

declare i32 @unknown_160d2(i32, i32) local_unnamed_addr

declare i32 @unknown_160f6(i32, i32) local_unnamed_addr

declare i32 @unknown_16146(i32, i32) local_unnamed_addr

declare i32 @unknown_16152(i32, i32) local_unnamed_addr

declare i32 @unknown_16184(i32) local_unnamed_addr

declare i32 @unknown_1618c(i32, i32) local_unnamed_addr

declare i32 @unknown_161d6(i32) local_unnamed_addr

declare i32 @unknown_16294(i32, i32) local_unnamed_addr

declare i32 @unknown_162b4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_162e4(i32, i32) local_unnamed_addr

declare i32 @unknown_1631a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_163d8(i32) local_unnamed_addr

declare i32 @unknown_163ec(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16405(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16460(i32) local_unnamed_addr

declare i32 @unknown_16508(i32) local_unnamed_addr

declare i32 @unknown_165aa(i32, i32) local_unnamed_addr

declare i32 @unknown_165fa(i32, i32) local_unnamed_addr

declare i32 @unknown_16672(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16694(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_166ba(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_166fa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_167c6(i32, i32) local_unnamed_addr

declare i32 @unknown_167cc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1686a(i32) local_unnamed_addr

declare i32 @unknown_16882(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16bf2(i32, i32) local_unnamed_addr

declare i32 @unknown_16c8e(i32, i32) local_unnamed_addr

declare i32 @unknown_16d4c(i32, i32) local_unnamed_addr

declare i32 @unknown_16de6(i32) local_unnamed_addr

declare i32 @unknown_16e13(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16e7a(i32) local_unnamed_addr

declare i32 @unknown_16eb4() local_unnamed_addr

declare i32 @unknown_171a8(i32, i32) local_unnamed_addr

declare i32 @unknown_17294(i32) local_unnamed_addr

declare i32 @unknown_173bc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1741e(i32, i32) local_unnamed_addr

declare i32 @unknown_1748e(i32, i32) local_unnamed_addr

declare i32 @unknown_174d5(i32, i32) local_unnamed_addr

declare i32 @unknown_17530(i32, i32) local_unnamed_addr

declare i32 @unknown_17587(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_175e4(i32, i32) local_unnamed_addr

declare i32 @unknown_17998(i32) local_unnamed_addr

declare i32 @unknown_17b16(i32) local_unnamed_addr

declare i32 @unknown_17b43(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_17baa(i32) local_unnamed_addr

declare i32 @unknown_17bda(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_17cac(i32, i32) local_unnamed_addr

declare i32 @unknown_17cf3(i32, i32) local_unnamed_addr

declare i32 @unknown_17d4e(i32, i32) local_unnamed_addr

declare i32 @unknown_17d7b(i32) local_unnamed_addr

declare i32 @unknown_17d84(i32) local_unnamed_addr

declare i32 @unknown_17da5(i32, i32) local_unnamed_addr

declare i32 @unknown_17db5(i32) local_unnamed_addr

declare i32 @unknown_17e02(i32, i32) local_unnamed_addr

declare i32 @unknown_17f8c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1819a(i32, i32) local_unnamed_addr

declare i32 @unknown_182d4(i32) local_unnamed_addr

declare i32 @unknown_1837f(i32, i32) local_unnamed_addr

declare i32 @unknown_18394(i32, i32) local_unnamed_addr

declare i32 @unknown_184a6(i32) local_unnamed_addr

declare i32 @unknown_184f6(i32, i32) local_unnamed_addr

declare i32 @unknown_184fe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18598(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1864a(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_186ee(i32, i32) local_unnamed_addr

declare i32 @unknown_18730(i32, i32) local_unnamed_addr

declare i32 @unknown_187b2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_187d6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18850(i32, i32) local_unnamed_addr

declare i32 @unknown_188a4(i32) local_unnamed_addr

declare i32 @unknown_188d7(i32) local_unnamed_addr

declare i32 @unknown_1890c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18a80(i32, i32) local_unnamed_addr

declare i32 @unknown_18aba(i32, i32) local_unnamed_addr

declare i32 @unknown_18ac5(i32) local_unnamed_addr

declare i32 @unknown_18b37(i32, i32) local_unnamed_addr

declare i32 @unknown_18b5c(i32, i32) local_unnamed_addr

declare i32 @unknown_18be3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18be9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18c03(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18cc8(i32, i32) local_unnamed_addr

declare i32 @unknown_18d3a(i32) local_unnamed_addr

declare i32 @unknown_18d9c(i32) local_unnamed_addr

declare i32 @unknown_18dee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18e43(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18f12(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18fea(i32) local_unnamed_addr

declare i32 @unknown_19034(i32, i32) local_unnamed_addr

declare i32 @unknown_19071(i32) local_unnamed_addr

declare i32 @unknown_19155(i32, i32) local_unnamed_addr

declare i32 @unknown_19262(i32, i32) local_unnamed_addr

declare i32 @unknown_192b1(i32, i32) local_unnamed_addr

declare i32 @unknown_192c1(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_193c4(i32, i32) local_unnamed_addr

declare i32 @unknown_19809(i32, i32) local_unnamed_addr

declare i32 @unknown_19868(i32) local_unnamed_addr

declare i32 @unknown_198e4(i32, i32) local_unnamed_addr

declare i32 @unknown_19d93(i32) local_unnamed_addr

declare i32 @unknown_19dbe(i32) local_unnamed_addr

declare i32 @unknown_19e00(i32) local_unnamed_addr

declare i32 @unknown_19e88(i32) local_unnamed_addr

declare i32 @unknown_19ee8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_19f7e(i32, i32) local_unnamed_addr

declare i32 @unknown_1a06a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a100(i32, i32) local_unnamed_addr

declare i32 @unknown_1a1d3(i32) local_unnamed_addr

declare i32 @unknown_1a2e5(i32) local_unnamed_addr

declare i32 @unknown_1a2f9(i32) local_unnamed_addr

declare i32 @unknown_1a37a(i32) local_unnamed_addr

declare i32 @unknown_1a384(i32) local_unnamed_addr

declare i32 @unknown_1a3e6(i32) local_unnamed_addr

declare i32 @unknown_1a403(i32) local_unnamed_addr

declare i32 @unknown_1a454(i32, i32) local_unnamed_addr

declare i32 @unknown_1a4f6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a5b2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a6c2(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a7a2(i32) local_unnamed_addr

declare i32 @unknown_1a88a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a920(i32, i32) local_unnamed_addr

declare i32 @unknown_1a9ba(i32) local_unnamed_addr

declare i32 @unknown_1aa42(i32) local_unnamed_addr

declare i32 @unknown_1aaa2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ab38(i32, i32) local_unnamed_addr

declare i32 @unknown_1abac(i32) local_unnamed_addr

declare i32 @unknown_1abf6(i32, i32) local_unnamed_addr

declare i32 @unknown_1ac34(i32) local_unnamed_addr

declare i32 @unknown_1ac94(i32) local_unnamed_addr

declare i32 @unknown_1ad2a(i32, i32) local_unnamed_addr

declare i32 @unknown_1adc4(i32) local_unnamed_addr

declare i32 @unknown_1ae4c(i32) local_unnamed_addr

declare i32 @unknown_1aea9(i32) local_unnamed_addr

declare i32 @unknown_1aeac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1af42(i32, i32) local_unnamed_addr

declare i32 @unknown_1af4f(i32, i32) local_unnamed_addr

declare i32 @unknown_1afd9(i32) local_unnamed_addr

declare i32 @unknown_1afef(i32, i32) local_unnamed_addr

declare i32 @unknown_1b04f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b0ac(i32) local_unnamed_addr

declare i32 @unknown_1b0d9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b100() local_unnamed_addr

declare i32 @unknown_1b13f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b1a5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b1fa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b292(i32, i32) local_unnamed_addr

declare i32 @unknown_1b2b1(i32, i32) local_unnamed_addr

declare i32 @unknown_1b2ba(i32, i32) local_unnamed_addr

declare i32 @unknown_1b2cc(i32, i32) local_unnamed_addr

declare i32 @unknown_1b314(i32, i32) local_unnamed_addr

declare i32 @unknown_1b4ec(i32, i32) local_unnamed_addr

declare i32 @unknown_1b7f3(i32, i32) local_unnamed_addr

declare i32 @unknown_1b853(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b8b0(i32) local_unnamed_addr

declare i32 @unknown_1b8dd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b943(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1b9aa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ba7c(i32, i32) local_unnamed_addr

declare i32 @unknown_1bb2b(i32) local_unnamed_addr

declare i32 @unknown_1bd2b(i32) local_unnamed_addr

declare i32 @unknown_1bdce(i32, i32) local_unnamed_addr

declare i32 @unknown_1bddc(i32) local_unnamed_addr

declare i32 @unknown_1bee9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1bfa0(i32) local_unnamed_addr

declare i32 @unknown_1bfce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1bfda(i32, i32) local_unnamed_addr

declare i32 @unknown_1c06b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c182(i32, i32) local_unnamed_addr

declare i32 @unknown_1c1c7(i32) local_unnamed_addr

declare i32 @unknown_1c1fc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c306(i32) local_unnamed_addr

declare i32 @unknown_1c36c(i32, i32) local_unnamed_addr

declare i32 @unknown_1c406(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c494(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c4dc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c531(i32, i32) local_unnamed_addr

declare i32 @unknown_1c542(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c854(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c89d(i32, i32) local_unnamed_addr

declare i32 @unknown_1c8b4(i32) local_unnamed_addr

declare i32 @unknown_1c90e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c99c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c9e4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ca4a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1cac8(i32) local_unnamed_addr

declare i32 @unknown_1cbc5(i32, i32) local_unnamed_addr

declare i32 @unknown_1cc5a(i32, i32) local_unnamed_addr

declare i32 @unknown_1cc94(i32, i32) local_unnamed_addr

declare i32 @unknown_1cd3c(i32) local_unnamed_addr

declare i32 @unknown_1ceee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1cfa3(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d0f8(i32) local_unnamed_addr

declare i32 @unknown_1d12d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d236(i32) local_unnamed_addr

declare i32 @unknown_1d276(i32) local_unnamed_addr

declare i32 @unknown_1d428(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d4dd(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d6dc(i32, i32) local_unnamed_addr

declare i32 @unknown_1d74e(i32) local_unnamed_addr

declare i32 @unknown_1d7d8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d803(i32) local_unnamed_addr

declare i32 @unknown_1d932() local_unnamed_addr

declare i32 @unknown_1d99e(i32, i32) local_unnamed_addr

declare i32 @unknown_1da5b(i32, i32) local_unnamed_addr

declare i32 @unknown_1da87(i32) local_unnamed_addr

declare i32 @unknown_1db78(i32) local_unnamed_addr

declare i32 @unknown_1dc72(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1dc79(i32) local_unnamed_addr

declare i32 @unknown_1dd74(i32, i32) local_unnamed_addr

declare i32 @unknown_1dda9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1de47(i32) local_unnamed_addr

declare i32 @unknown_1de51(i32, i32) local_unnamed_addr

declare i32 @unknown_1de86(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1dea4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1defb(i32) local_unnamed_addr

declare i32 @unknown_1df28(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1df54(i32) local_unnamed_addr

declare i32 @unknown_1e07a(i32, i32) local_unnamed_addr

declare i32 @unknown_1e0af(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e0e6(i32, i32) local_unnamed_addr

declare i32 @unknown_1e151(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e155(i32, i32) local_unnamed_addr

declare i32 @unknown_1e25f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e2c6(i32, i32) local_unnamed_addr

declare i32 @unknown_1e33f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e462(i32) local_unnamed_addr

declare i32 @unknown_1e52d(i32) local_unnamed_addr

declare i32 @unknown_1e55a(i32) local_unnamed_addr

declare i32 @unknown_1e6b9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e805(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e860(i32, i32) local_unnamed_addr

declare i32 @unknown_1e8a5(i32) local_unnamed_addr

declare i32 @unknown_1e8d2(i32) local_unnamed_addr

declare i32 @unknown_1e966(i32, i32) local_unnamed_addr

declare i32 @unknown_1eaa2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1eb94(i32) local_unnamed_addr

declare i32 @unknown_1ec5f(i32) local_unnamed_addr

declare i32 @unknown_1ec8c(i32) local_unnamed_addr

declare i32 @unknown_1ed18(i32) local_unnamed_addr

declare i32 @unknown_1ee14(i32) local_unnamed_addr

declare i32 @unknown_1eedf(i32) local_unnamed_addr

declare i32 @unknown_1ef0c(i32) local_unnamed_addr

declare i32 @unknown_1ef52(i32) local_unnamed_addr

declare i32 @unknown_1ef98(i32) local_unnamed_addr

declare i32 @unknown_1f17d(i32) local_unnamed_addr

declare i32 @unknown_1f1b2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f28a(i32) local_unnamed_addr

declare i32 @unknown_1f2bf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f412(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f4b6(i32) local_unnamed_addr

declare i32 @unknown_1f60e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f7ad(i32) local_unnamed_addr

declare i32 @unknown_1f7e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f8ba(i32) local_unnamed_addr

declare i32 @unknown_1f8ef(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f8f8(i32) local_unnamed_addr

declare i32 @unknown_1f90b(i32, i32) local_unnamed_addr

declare i32 @unknown_1f960(i32) local_unnamed_addr

declare i32 @unknown_1f99a(i32) local_unnamed_addr

declare i32 @unknown_1fa0e(i32) local_unnamed_addr

declare i32 @unknown_1fa7e(i32) local_unnamed_addr

declare i32 @unknown_1fb94(i32, i32) local_unnamed_addr

declare i32 @unknown_1fd34(i32) local_unnamed_addr

declare i32 @unknown_1fd96(i32) local_unnamed_addr

declare i32 @unknown_1fdcb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ff91(i32, i32) local_unnamed_addr

declare i32 @unknown_1ffc4(i32) local_unnamed_addr

declare i32 @unknown_1ffdb(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_200ee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_200fb(i32, i32) local_unnamed_addr

declare i32 @unknown_20185(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2019e(i32) local_unnamed_addr

declare i32 @unknown_20383(i32) local_unnamed_addr

declare i32 @unknown_20402(i32, i32) local_unnamed_addr

declare i32 @unknown_2044c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2056c(i32, i32) local_unnamed_addr

declare i32 @unknown_205f6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_206ce(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20774(i32) local_unnamed_addr

declare i32 @unknown_207a2(i32) local_unnamed_addr

declare i32 @unknown_207e0(i32) local_unnamed_addr

declare i32 @unknown_2086d(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20911(i32) local_unnamed_addr

declare i32 @unknown_20973(i32) local_unnamed_addr

declare i32 @unknown_209a8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20a4e(i32) local_unnamed_addr

declare i32 @unknown_20abc(i32) local_unnamed_addr

declare i32 @unknown_20adc(i32) local_unnamed_addr

declare i32 @unknown_20b01(i32) local_unnamed_addr

declare i32 @unknown_20b1a(i32) local_unnamed_addr

declare i32 @unknown_20b70(i32) local_unnamed_addr

declare i32 @unknown_20ba7(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20bf4(i32, i32) local_unnamed_addr

declare i32 @unknown_20cab(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20e3f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20fb7(i32) local_unnamed_addr

declare i32 @unknown_20ff9(i32) local_unnamed_addr

declare i32 @unknown_21024(i32) local_unnamed_addr

declare i32 @unknown_2106a(i32) local_unnamed_addr

declare i32 @unknown_2115c(i32, i32) local_unnamed_addr

declare i32 @unknown_2118e(i32) local_unnamed_addr

declare i32 @unknown_21230(i32) local_unnamed_addr

declare i32 @unknown_213e3(i32) local_unnamed_addr

declare i32 @unknown_21578() local_unnamed_addr

declare i32 @unknown_21621() local_unnamed_addr

declare i32 @unknown_2170f(i32) local_unnamed_addr

declare i32 @unknown_21771(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21774(i32) local_unnamed_addr

declare i32 @unknown_217a1(i32) local_unnamed_addr

declare i32 @unknown_217b6(i32) local_unnamed_addr

declare i32 @unknown_21835(i32) local_unnamed_addr

declare i32 @unknown_21958(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21a03(i32) local_unnamed_addr

declare i32 @unknown_21a30(i32) local_unnamed_addr

declare i32 @unknown_21a4a(i32) local_unnamed_addr

declare i32 @unknown_21ac4(i32) local_unnamed_addr

declare i32 @unknown_21b15(i32) local_unnamed_addr

declare i32 @unknown_21b77(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21b85(i32, i32) local_unnamed_addr

declare i32 @unknown_21bbc(i32) local_unnamed_addr

declare i32 @unknown_21c58(i32) local_unnamed_addr

declare i32 @unknown_21d68(i32, i32) local_unnamed_addr

declare i32 @unknown_21d73(i32) local_unnamed_addr

declare i32 @unknown_21e09(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21eb5() local_unnamed_addr

declare i32 @unknown_21f46(i32) local_unnamed_addr

declare i32 @unknown_22044(i32, i32) local_unnamed_addr

declare i32 @unknown_220cb(i32) local_unnamed_addr

declare i32 @unknown_22100(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_221e5(i32, i32) local_unnamed_addr

declare i32 @unknown_22273(i32, i32) local_unnamed_addr

declare i32 @unknown_22295(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2235a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_223a7(i32) local_unnamed_addr

declare i32 @unknown_2244d(i32, i32) local_unnamed_addr

declare i32 @unknown_22450(i32, i32) local_unnamed_addr

declare i32 @unknown_224d7(i32) local_unnamed_addr

declare i32 @unknown_2250c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22587(i32, i32) local_unnamed_addr

declare i32 @unknown_225f1(i32, i32) local_unnamed_addr

declare i32 @unknown_2261e(i32, i32) local_unnamed_addr

declare i32 @unknown_226a1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22766(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_228ba(i32) local_unnamed_addr

declare i32 @unknown_228ee(i32, i32) local_unnamed_addr

declare i32 @unknown_229f8(i32, i32) local_unnamed_addr

declare i32 @unknown_22a12(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22b39(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22c2f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22e97(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22f66(i32, i32) local_unnamed_addr

declare i32 @unknown_230e0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_230fb(i32, i32) local_unnamed_addr

declare i32 @unknown_231b0(i32, i32) local_unnamed_addr

declare i32 @unknown_23396(i32) local_unnamed_addr

declare i32 @unknown_233b8(i32, i32) local_unnamed_addr

declare i32 @unknown_23402(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_234d1(i32, i32) local_unnamed_addr

declare i32 @unknown_234dc(i32) local_unnamed_addr

declare i32 @unknown_23526(i32) local_unnamed_addr

declare i32 @unknown_23560(i32) local_unnamed_addr

declare i32 @unknown_235fd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_237b0(i32) local_unnamed_addr

declare i32 @unknown_2381c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_238eb(i32, i32) local_unnamed_addr

declare i32 @unknown_2393f(i32) local_unnamed_addr

declare i32 @unknown_239e7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23b5d(i32, i32) local_unnamed_addr

declare i32 @unknown_23cf5(i32, i32) local_unnamed_addr

declare i32 @unknown_23e17(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23ed7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2475e(i32) local_unnamed_addr

define i32 @function_458b53c9() local_unnamed_addr {
dec_label_pc_458b53c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8900bab7() local_unnamed_addr {
dec_label_pc_8900bab7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8b0000ed() local_unnamed_addr {
dec_label_pc_8b0000ed:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 0, 382, 440, 1, 372, 464, 530, 57, 56, 465, 415, 466, 416, 467, 468, 417, 473, 474, 2, 469, 470, 356, 357, 513, 514, 358, 359, 585, 471, 472, 360, 361, 59, 58, 537, 538, 362, 363, 475, 476, 418, 477, 478, 364, 365, 479, 480, 481, 482, 419, 61, 60, 63, 62, 420, 539, 3, 4, 5, 522, 421, 65, 64, 483, 484, 366, 541, 6, 422, 542, 423, 528, 424, 591, 525, 526, 527, 67, 66, 543, 69, 68, 71, 70, 544, 73, 72, 75, 74, 545, 492, 546, 485, 547, 377, 378, 425, 77, 76, 548, 79, 78, 590, 426, 441, 442, 443, 549, 81, 80, 610, 83, 82, 427, 85, 84, 428, 550, 552, 553, 429, 520, 383, 391, 486, 430, 87, 86, 612, 431, 556, 89, 88, 7, 91, 90, 558, 93, 92, 95, 94, 97, 96, 643, 8, 99, 98, 101, 100, 103, 102, 105, 104, 560, 107, 106, 109, 108, 111, 110, 617, 658, 9, 113, 112, 115, 114, 10, 117, 116, 119, 118, 121, 120, 123, 122, 564, 125, 124, 384, 392, 487, 127, 126, 566, 385, 393, 488, 551, 432, 128, 489, 490, 373, 491, 374, 493, 433, 130, 129, 132, 131, 554, 555, 434, 134, 133, 136, 135, 561, 138, 137, 659, 140, 139, 494, 142, 141, 557, 495, 496, 563, 144, 143, 497, 146, 145, 498, 499, 500, 148, 147, 150, 149, 386, 394, 501, 152, 151, 502, 503, 504, 154, 153, 156, 155, 158, 157, 160, 159, 505, 162, 161, 506, 507, 508, 164, 163, 166, 165, 509, 629, 168, 167, 510, 511, 512, 592, 170, 169, 594, 595, 11, 596, 172, 171, 174, 173, 176, 175, 435, 630, 631, 632, 515, 178, 177, 180, 179, 387, 395, 516, 604, 517, 444, 182, 181, 184, 183, 586, 445, 12, 381, 446, 614, 615, 518, 519, 185, 187, 186, 618, 189, 188, 190, 192, 191, 194, 193, 195, 13, 197, 196, 14, 199, 198, 15, 16, 201, 200, 611, 202, 204, 203, 206, 205, 619, 436, 17, 620, 208, 207, 210, 209, 212, 211, 531, 214, 213, 18, 216, 215, 217, 219, 218, 221, 220, 452, 627, 437, 223, 222, 19, 225, 224, 521, 227, 226, 523, 20, 229, 228, 524, 562, 231, 230, 233, 232, 21, 235, 234, 22, 23, 236, 238, 237, 240, 239, 24, 242, 241, 244, 243, 388, 529, 25, 532, 246, 245, 533, 534, 587, 379, 536, 535, 367, 248, 247, 250, 249, 588, 252, 251, 26, 254, 253, 540, 368, 256, 255, 27, 258, 257, 28, 29, 259, 261, 260, 597, 263, 262, 30, 31, 265, 264, 32, 33, 34, 266, 605, 589, 35, 268, 267, 270, 269, 272, 271, 274, 273, 606, 36, 275, 607, 644, 559, 277, 276, 647, 648, 37, 279, 278, 281, 280, 38, 39, 283, 282, 40, 285, 284, 41, 287, 286, 42, 289, 288, 43, 291, 290, 293, 292, 295, 294, 565, 389, 567, 568, 569, 44, 575, 576, 577, 570, 571, 572, 573, 574, 579, 580, 581, 582, 578, 583, 45, 46, 621, 396, 397, 398, 399, 47, 447, 448, 449, 450, 451, 400, 628, 375, 584, 453, 454, 455, 297, 296, 299, 298, 603, 300, 593, 608, 609, 438, 458, 371, 456, 457, 401, 459, 48, 598, 599, 302, 301, 600, 601, 602, 402, 403, 404, 405, 304, 303, 306, 305, 308, 307, 633, 634, 635, 439, 310, 309, 406, 407, 312, 311, 613, 616, 314, 313, 315, 317, 316, 623, 622, 624, 625, 380, 390, 408, 626, 638, 460, 461, 319, 318, 462, 463, 409, 410, 321, 320, 323, 322, 325, 324, 327, 326, 329, 328, 331, 330, 49, 50, 636, 51, 637, 52, 333, 332, 335, 334, 53, 639, 337, 336, 54, 338, 640, 641, 642, 340, 339, 645, 646, 55, 342, 341, 655, 344, 343, 649, 346, 345, 651, 650, 348, 347, 652, 369, 350, 349, 654, 653, 370, 352, 351, 354, 353, 355, 656, 376, 657, 411, 412, 413, 414, 660, 661, 662, 663, 664, 665, 666, 667 }
  uselistorder i32* @eax, {}
}

declare i32 @unknown_89d0bd9f() local_unnamed_addr

declare i32 @unknown_8d006260() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare i32 @__asm_insd(i16) local_unnamed_addr

declare i8 @__asm_insb(i16) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

attributes #0 = { nounwind readnone }
